

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed May 20 11:51:06 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robotLoadSong
    48                           	FNCALL	_main,_robot_read
    49                           	FNCALL	_main,_readAvgDistance
    50                           	FNCALL	_main,_UpdateDisplay
    51                           	FNCALL	_main,_Menu
    52                           	FNCALL	_main,_calibrateIR
    53                           	FNCALL	_main,_ser_putch
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotTurnSpeed
    56                           	FNCALL	_main,_Init_Follow_IR
    57                           	FNCALL	_main,_robotFollow
    58                           	FNCALL	_main,_RobotDrive
    59                           	FNCALL	_main,_rotate
    60                           	FNCALL	_main,_robot_turnRight
    61                           	FNCALL	_main,_ChargeMode
    62                           	FNCALL	_Init_Follow_IR,_calibrateIR
    63                           	FNCALL	_Init_Follow_IR,_rotate
    64                           	FNCALL	_ChargeMode,_ser_putch
    65                           	FNCALL	_ChargeMode,_RobotBattRead
    66                           	FNCALL	_ChargeMode,_UpdateDisplay
    67                           	FNCALL	_robot_turnRight,_RobotDrive
    68                           	FNCALL	_robot_turnRight,_readAvgDistance
    69                           	FNCALL	_robot_turnRight,_ser_putch
    70                           	FNCALL	_robot_turnRight,_robot_read
    71                           	FNCALL	_robot_turnRight,_UpdateDisplay
    72                           	FNCALL	_robot_turnRight,_abs
    73                           	FNCALL	_robotFollow,_RobotDrive
    74                           	FNCALL	_robotFollow,_readAvgDistance
    75                           	FNCALL	_robotFollow,_robot_read
    76                           	FNCALL	_robotFollow,_UpdateDisplay
    77                           	FNCALL	_robotTurnSpeed,_robotTurn
    78                           	FNCALL	_robotTurnSpeed,_robot_read
    79                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    80                           	FNCALL	_robotTurnSpeed,_abs
    81                           	FNCALL	_robotMoveSpeed,_RobotDrive
    82                           	FNCALL	_robotMoveSpeed,_robot_read
    83                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    84                           	FNCALL	_robotMoveSpeed,_abs
    85                           	FNCALL	_calibrateIR,_rotate
    86                           	FNCALL	_calibrateIR,_UpdateDisplay
    87                           	FNCALL	_UpdateDisplay,_lcd_write_control
    88                           	FNCALL	_UpdateDisplay,_sprintf
    89                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    90                           	FNCALL	_UpdateDisplay,_lcd_write_string
    91                           	FNCALL	_UpdateDisplay,___awmod
    92                           	FNCALL	_readAvgDistance,_readDistance
    93                           	FNCALL	_readAvgDistance,___lwdiv
    94                           	FNCALL	_readAvgDistance,_ADCconvert
    95                           	FNCALL	_init,_ser_init
    96                           	FNCALL	_init,_init_adc
    97                           	FNCALL	_init,_lcd_init
    98                           	FNCALL	_init,_robo_init
    99                           	FNCALL	_readDistance,_adc_read_channel
   100                           	FNCALL	_RobotBattRead,_ser_putch
   101                           	FNCALL	_RobotBattRead,_ser_getch
   102                           	FNCALL	_robot_read,_ser_putch
   103                           	FNCALL	_robot_read,_ser_getch
   104                           	FNCALL	_lcd_init,_lcd_write_control
   105                           	FNCALL	_lcd_write_string,_lcd_write_data
   106                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   107                           	FNCALL	_abs,___wmul
   108                           	FNCALL	_robotTurn,_ser_putch
   109                           	FNCALL	_ser_getch,_ser_isrx
   110                           	FNCALL	_sprintf,___lwdiv
   111                           	FNCALL	_sprintf,___lwmod
   112                           	FNCALL	_ADCconvert,___wmul
   113                           	FNCALL	_ADCconvert,___lwdiv
   114                           	FNCALL	_rotate,_spi_transfer
   115                           	FNCALL	_RobotDrive,_ser_putch
   116                           	FNCALL	_robotLoadSong,_ser_putch
   117                           	FNCALL	_robo_init,_ser_putch
   118                           	FNCALL	_adc_read_channel,_adc_read
   119                           	FNROOT	_main
   120                           	FNCALL	_isr1,i1___lwmod
   121                           	FNCALL	_isr1,_ReadButtons
   122                           	FNCALL	_ReadButtons,_Debounce
   123                           	FNCALL	intlevel1,_isr1
   124                           	global	intlevel1
   125                           	FNROOT	intlevel1
   126                           	global	_menuStrings
   127                           	global	_shortMenuStrings
   128                           	global	_current_step
   129                           psect	idataBANK1,class=CODE,space=0,delta=2
   130                           global __pidataBANK1
   131  10DB                     __pidataBANK1:
   132                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   133                           	line	49
   134                           
   135                           ;initializer for _menuStrings
   136  10DB  3453               	retlw	(STR_1-__stringbase)&0ffh
   137  10DC  344A               	retlw	(STR_2-__stringbase)&0ffh
   138  10DD  3465               	retlw	(STR_3-__stringbase)&0ffh
   139  10DE  346E               	retlw	(STR_4-__stringbase)&0ffh
   140  10DF  345C               	retlw	(STR_5-__stringbase)&0ffh
   141  10E0  3441               	retlw	(STR_6-__stringbase)&0ffh
   142                           	line	50
   143                           
   144                           ;initializer for _shortMenuStrings
   145  10E1  3497               	retlw	(STR_7-__stringbase)&0ffh
   146  10E2  349B               	retlw	(STR_8-__stringbase)&0ffh
   147  10E3  3483               	retlw	(STR_9-__stringbase)&0ffh
   148  10E4  348F               	retlw	(STR_10-__stringbase)&0ffh
   149  10E5  349F               	retlw	(STR_11-__stringbase)&0ffh
   150  10E6  3493               	retlw	(STR_12-__stringbase)&0ffh
   151                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   152                           	line	45
   153                           
   154                           ;initializer for _current_step
   155  10E7  343C               	retlw	03Ch
   156                           	global	_dpowers
   157                           psect	strings,class=STRING,delta=2
   158                           global __pstrings
   159  0800                     __pstrings:
   160                           ;	global	stringdir,stringtab,__stringbase
   161  0800                     stringtab:
   162                           ;	String table - string pointers are 1 byte each
   163  0800  1BFF               	btfsc	(btemp+1),7
   164  0801  280A               	ljmp	stringcode
   165  0802  1383               	bcf	status,7
   166  0803  187F               	btfsc	(btemp+1),0
   167  0804  1783               	bsf	status,7
   168  0805  0800               	movf	indf,w
   169  0806  0A84               	incf fsr
   170  0807  1903               skipnz
   171  0808  0AFF               incf btemp+1
   172  0809  0008               	return
   173  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   174  080A  3008               movlw high(stringdir)
   175  080B  008A               movwf pclath
   176  080C  0804               movf fsr,w
   177  080D  0A84               incf fsr
   178  080E  0782               	addwf pc
   179  080F                     __stringbase:
   180  080F  3400               	retlw	0
   181                           psect	strings
   182                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   183                           	line	350
   184  0810                     _dpowers:
   185  0810  3401               	retlw	01h
   186  0811  3400               	retlw	0
   187                           
   188  0812  340A               	retlw	0Ah
   189  0813  3400               	retlw	0
   190                           
   191  0814  3464               	retlw	064h
   192  0815  3400               	retlw	0
   193                           
   194  0816  34E8               	retlw	0E8h
   195  0817  3403               	retlw	03h
   196                           
   197  0818  3410               	retlw	010h
   198  0819  3427               	retlw	027h
   199                           
   200                           	global	_dpowers
   201                           	global	_adcVal
   202                           	global	_BumpSensors
   203                           	global	_CliffSensors
   204                           	global	_DistHighByte
   205                           	global	_DistLowByte
   206                           	global	_VwallSensor
   207                           	global	UpdateDisplay@F1261
   208                           	global	_txfifo
   209                           	global	_buttonPressed
   210                           	global	_CenterPressed
   211                           	global	_CenterReleased
   212                           	global	_DownPressed
   213                           	global	_DownReleased
   214                           	global	_LeftPressed
   215                           	global	_LeftReleased
   216                           	global	_RTC_FLAG_1MS
   217                           	global	_RTC_FLAG_250MS
   218                           	global	_RTC_FLAG_500MS
   219                           	global	_RightPressed
   220                           	global	_RightReleased
   221                           	global	_UpPressed
   222                           	global	_UpReleased
   223                           	global	_rxfifo
   224                           	global	_BattCharge
   225                           	global	_BattState
   226                           	global	_Disp1
   227                           	global	_Disp2
   228                           	global	_IRdistance
   229                           	global	_RTC_Counter
   230                           	global	_TotalDistTravelled
   231                           	global	_angleTurned
   232                           	global	_distTravelled
   233                           	global	_dist_high
   234                           	global	_dist_low
   235                           	global	_pos
   236                           	global	_total
   237                           	global	_totalSteps
   238                           	global	_AngleHighByte
   239                           	global	_AngleLowByte
   240                           	global	_CenterDebounceCount
   241                           	global	_DownDebounceCount
   242                           	global	_LeftDebounceCount
   243                           	global	_ROBOTerror
   244                           	global	_RightDebounceCount
   245                           	global	_UpDebounceCount
   246                           	global	_currentMenu
   247                           	global	_highByte
   248                           	global	_lowByte
   249                           	global	_rxiptr
   250                           	global	_rxoptr
   251                           	global	_ser_tmp
   252                           	global	_turnhighByte
   253                           	global	_turnlowByte
   254                           	global	_txiptr
   255                           	global	_txoptr
   256                           	global	_ADCON0
   257  001F                     _ADCON0	set	31
   258                           	global	_ADRESH
   259  001E                     _ADRESH	set	30
   260                           	global	_PORTA
   261  0005                     _PORTA	set	5
   262                           	global	_PORTD
   263  0008                     _PORTD	set	8
   264                           	global	_PORTE
   265  0009                     _PORTE	set	9
   266                           	global	_RCREG
   267  001A                     _RCREG	set	26
   268                           	global	_SSPBUF
   269  0013                     _SSPBUF	set	19
   270                           	global	_SSPCON
   271  0014                     _SSPCON	set	20
   272                           	global	_TMR0
   273  0001                     _TMR0	set	1
   274                           	global	_TXREG
   275  0019                     _TXREG	set	25
   276                           	global	AT25256A@CS0
   277  0038                     AT25256A@CS0	set	56
   278                           	global	AT25256A@CS1
   279  0039                     AT25256A@CS1	set	57
   280                           	global	_CARRY
   281  0018                     _CARRY	set	24
   282                           	global	_CHS0
   283  00FB                     _CHS0	set	251
   284                           	global	_CHS1
   285  00FC                     _CHS1	set	252
   286                           	global	_CHS2
   287  00FD                     _CHS2	set	253
   288                           	global	_CREN
   289  00C4                     _CREN	set	196
   290                           	global	_GIE
   291  005F                     _GIE	set	95
   292                           	global	_GO
   293  00FA                     _GO	set	250
   294                           	global	_OERR
   295  00C1                     _OERR	set	193
   296                           	global	_PEIE
   297  005E                     _PEIE	set	94
   298                           	global	_RB0
   299  0030                     _RB0	set	48
   300                           	global	_RB2
   301  0032                     _RB2	set	50
   302                           	global	_RB3
   303  0033                     _RB3	set	51
   304                           	global	_RB4
   305  0034                     _RB4	set	52
   306                           	global	_RB5
   307  0035                     _RB5	set	53
   308                           	global	_RB6
   309  0036                     _RB6	set	54
   310                           	global	_RC0
   311  0038                     _RC0	set	56
   312                           	global	_RC1
   313  0039                     _RC1	set	57
   314                           	global	_RC2
   315  003A                     _RC2	set	58
   316                           	global	_RCIF
   317  0065                     _RCIF	set	101
   318                           	global	_RE0
   319  0048                     _RE0	set	72
   320                           	global	_RE1
   321  0049                     _RE1	set	73
   322                           	global	_RE2
   323  004A                     _RE2	set	74
   324                           	global	_RX9
   325  00C6                     _RX9	set	198
   326                           	global	_SPEN
   327  00C7                     _SPEN	set	199
   328                           	global	_SSPIF
   329  0063                     _SSPIF	set	99
   330                           	global	_TMR0IE
   331  005D                     _TMR0IE	set	93
   332                           	global	_TMR0IF
   333  005A                     _TMR0IF	set	90
   334                           	global	_TXIF
   335  0064                     _TXIF	set	100
   336                           	global	_ADCON1
   337  009F                     _ADCON1	set	159
   338                           	global	_ADRESL
   339  009E                     _ADRESL	set	158
   340                           	global	_OPTION_REG
   341  0081                     _OPTION_REG	set	129
   342                           	global	_SPBRG
   343  0099                     _SPBRG	set	153
   344                           	global	_SSPSTAT
   345  0094                     _SSPSTAT	set	148
   346                           	global	_TRISA
   347  0085                     _TRISA	set	133
   348                           	global	_TRISB
   349  0086                     _TRISB	set	134
   350                           	global	_TRISC
   351  0087                     _TRISC	set	135
   352                           	global	_TRISD
   353  0088                     _TRISD	set	136
   354                           	global	_TRISE
   355  0089                     _TRISE	set	137
   356                           	global	_BRGH
   357  04C2                     _BRGH	set	1218
   358                           	global	_RCIE
   359  0465                     _RCIE	set	1125
   360                           	global	_SYNC
   361  04C4                     _SYNC	set	1220
   362                           	global	_TX9
   363  04C6                     _TX9	set	1222
   364                           	global	_TXEN
   365  04C5                     _TXEN	set	1221
   366                           	global	_TXIE
   367  0464                     _TXIE	set	1124
   368                           	global	_EEADR
   369  010D                     _EEADR	set	269
   370                           	global	_EEDATA
   371  010C                     _EEDATA	set	268
   372                           	global	_EECON1
   373  018C                     _EECON1	set	396
   374                           	global	_EECON2
   375  018D                     _EECON2	set	397
   376                           	global	_RD
   377  0C60                     _RD	set	3168
   378                           	global	_WR
   379  0C61                     _WR	set	3169
   380                           	global	_WREN
   381  0C62                     _WREN	set	3170
   382                           	
   383  081A                     STR_18:	
   384  081A  3420               	retlw	32	;' '
   385  081B  3443               	retlw	67	;'C'
   386  081C  3468               	retlw	104	;'h'
   387  081D  3461               	retlw	97	;'a'
   388  081E  3472               	retlw	114	;'r'
   389  081F  3467               	retlw	103	;'g'
   390  0820  3469               	retlw	105	;'i'
   391  0821  346E               	retlw	110	;'n'
   392  0822  3467               	retlw	103	;'g'
   393  0823  3420               	retlw	32	;' '
   394  0824  344D               	retlw	77	;'M'
   395  0825  346F               	retlw	111	;'o'
   396  0826  3464               	retlw	100	;'d'
   397  0827  3465               	retlw	101	;'e'
   398  0828  3420               	retlw	32	;' '
   399  0829  3400               	retlw	0
   400                           psect	strings
   401                           	
   402  082A                     STR_14:	
   403  082A  345A               	retlw	90	;'Z'
   404  082B  3465               	retlw	101	;'e'
   405  082C  3472               	retlw	114	;'r'
   406  082D  346F               	retlw	111	;'o'
   407  082E  3420               	retlw	32	;' '
   408  082F  3453               	retlw	83	;'S'
   409  0830  3474               	retlw	116	;'t'
   410  0831  3465               	retlw	101	;'e'
   411  0832  3470               	retlw	112	;'p'
   412  0833  345F               	retlw	95	;'_'
   413  0834  344D               	retlw	77	;'M'
   414  0835  346F               	retlw	111	;'o'
   415  0836  3474               	retlw	116	;'t'
   416  0837  346F               	retlw	111	;'o'
   417  0838  3472               	retlw	114	;'r'
   418  0839  3400               	retlw	0
   419                           psect	strings
   420                           	
   421  083A                     STR_13:	
   422  083A  3449               	retlw	73	;'I'
   423  083B  3452               	retlw	82	;'R'
   424  083C  343A               	retlw	58	;':'
   425  083D  3425               	retlw	37	;'%'
   426  083E  3464               	retlw	100	;'d'
   427  083F  3463               	retlw	99	;'c'
   428  0840  346D               	retlw	109	;'m'
   429  0841  3420               	retlw	32	;' '
   430  0842  3444               	retlw	68	;'D'
   431  0843  343A               	retlw	58	;':'
   432  0844  3425               	retlw	37	;'%'
   433  0845  3464               	retlw	100	;'d'
   434  0846  3400               	retlw	0
   435                           psect	strings
   436                           	
   437  0847                     STR_26:	
   438  0847  3420               	retlw	32	;' '
   439  0848  3420               	retlw	32	;' '
   440  0849  3445               	retlw	69	;'E'
   441  084A  3458               	retlw	88	;'X'
   442  084B  3449               	retlw	73	;'I'
   443  084C  3454               	retlw	84	;'T'
   444  084D  3420               	retlw	32	;' '
   445  084E  3420               	retlw	32	;' '
   446  084F  3400               	retlw	0
   447                           psect	strings
   448                           	
   449  0850                     STR_6:	
   450  0850  3420               	retlw	32	;' '
   451  0851  3443               	retlw	67	;'C'
   452  0852  3468               	retlw	104	;'h'
   453  0853  3461               	retlw	97	;'a'
   454  0854  3472               	retlw	114	;'r'
   455  0855  3467               	retlw	103	;'g'
   456  0856  3465               	retlw	101	;'e'
   457  0857  3420               	retlw	32	;' '
   458  0858  3400               	retlw	0
   459                           psect	strings
   460                           	
   461  0859                     STR_2:	
   462  0859  3453               	retlw	83	;'S'
   463  085A  3463               	retlw	99	;'c'
   464  085B  3461               	retlw	97	;'a'
   465  085C  346E               	retlw	110	;'n'
   466  085D  345F               	retlw	95	;'_'
   467  085E  3433               	retlw	51	;'3'
   468  085F  3436               	retlw	54	;'6'
   469  0860  3430               	retlw	48	;'0'
   470  0861  3400               	retlw	0
   471                           psect	strings
   472                           	
   473  0862                     STR_1:	
   474  0862  3443               	retlw	67	;'C'
   475  0863  3461               	retlw	97	;'a'
   476  0864  346C               	retlw	108	;'l'
   477  0865  3469               	retlw	105	;'i'
   478  0866  3462               	retlw	98	;'b'
   479  0867  345F               	retlw	95	;'_'
   480  0868  3449               	retlw	73	;'I'
   481  0869  3452               	retlw	82	;'R'
   482  086A  3400               	retlw	0
   483                           psect	strings
   484                           	
   485  086B                     STR_5:	
   486  086B  3446               	retlw	70	;'F'
   487  086C  346C               	retlw	108	;'l'
   488  086D  3477               	retlw	119	;'w'
   489  086E  345F               	retlw	95	;'_'
   490  086F  3457               	retlw	87	;'W'
   491  0870  3461               	retlw	97	;'a'
   492  0871  346C               	retlw	108	;'l'
   493  0872  346C               	retlw	108	;'l'
   494  0873  3400               	retlw	0
   495                           psect	strings
   496                           	
   497  0874                     STR_3:	
   498  0874  3444               	retlw	68	;'D'
   499  0875  3472               	retlw	114	;'r'
   500  0876  3469               	retlw	105	;'i'
   501  0877  3476               	retlw	118	;'v'
   502  0878  3465               	retlw	101	;'e'
   503  0879  345F               	retlw	95	;'_'
   504  087A  3432               	retlw	50	;'2'
   505  087B  346D               	retlw	109	;'m'
   506  087C  3400               	retlw	0
   507                           psect	strings
   508                           	
   509  087D                     STR_4:	
   510  087D  3444               	retlw	68	;'D'
   511  087E  3472               	retlw	114	;'r'
   512  087F  3469               	retlw	105	;'i'
   513  0880  3476               	retlw	118	;'v'
   514  0881  3465               	retlw	101	;'e'
   515  0882  345F               	retlw	95	;'_'
   516  0883  344C               	retlw	76	;'L'
   517  0884  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  0885                     STR_16:	
   521  0885  3443               	retlw	67	;'C'
   522  0886  344F               	retlw	79	;'O'
   523  0887  344E               	retlw	78	;'N'
   524  0888  3446               	retlw	70	;'F'
   525  0889  3449               	retlw	73	;'I'
   526  088A  3452               	retlw	82	;'R'
   527  088B  344D               	retlw	77	;'M'
   528  088C  3400               	retlw	0
   529                           psect	strings
   530                           	
   531  088D                     STR_19:	
   532  088D  3425               	retlw	37	;'%'
   533  088E  3464               	retlw	100	;'d'
   534  088F  346D               	retlw	109	;'m'
   535  0890  3456               	retlw	86	;'V'
   536  0891  3400               	retlw	0
   537                           psect	strings
   538                           	
   539  0892                     STR_9:	
   540  0892  3444               	retlw	68	;'D'
   541  0893  3472               	retlw	114	;'r'
   542  0894  3432               	retlw	50	;'2'
   543  0895  3400               	retlw	0
   544                           psect	strings
   545                           	
   546  0896                     STR_15:	
   547  0896  343C               	retlw	60	;'<'
   548  0897  343C               	retlw	60	;'<'
   549  0898  343C               	retlw	60	;'<'
   550  0899  3400               	retlw	0
   551                           psect	strings
   552                           	
   553  089A                     STR_17:	
   554  089A  343E               	retlw	62	;'>'
   555  089B  343E               	retlw	62	;'>'
   556  089C  343E               	retlw	62	;'>'
   557  089D  3400               	retlw	0
   558                           psect	strings
   559                           	
   560  089E                     STR_10:	
   561  089E  3444               	retlw	68	;'D'
   562  089F  3472               	retlw	114	;'r'
   563  08A0  344C               	retlw	76	;'L'
   564  08A1  3400               	retlw	0
   565                           psect	strings
   566                           	
   567  08A2                     STR_12:	
   568  08A2  3443               	retlw	67	;'C'
   569  08A3  3468               	retlw	104	;'h'
   570  08A4  3467               	retlw	103	;'g'
   571  08A5  3400               	retlw	0
   572                           psect	strings
   573                           	
   574  08A6                     STR_7:	
   575  08A6  3443               	retlw	67	;'C'
   576  08A7  3461               	retlw	97	;'a'
   577  08A8  346C               	retlw	108	;'l'
   578  08A9  3400               	retlw	0
   579                           psect	strings
   580                           	
   581  08AA                     STR_8:	
   582  08AA  3453               	retlw	83	;'S'
   583  08AB  3463               	retlw	99	;'c'
   584  08AC  346E               	retlw	110	;'n'
   585  08AD  3400               	retlw	0
   586                           psect	strings
   587                           	
   588  08AE                     STR_11:	
   589  08AE  3446               	retlw	70	;'F'
   590  08AF  346C               	retlw	108	;'l'
   591  08B0  3477               	retlw	119	;'w'
   592  08B1  3400               	retlw	0
   593                           psect	strings
   594                           	
   595  08B2                     STR_22:	
   596  08B2  3446               	retlw	70	;'F'
   597  08B3  3443               	retlw	67	;'C'
   598  08B4  3400               	retlw	0
   599                           psect	strings
   600                           	
   601  08B5                     STR_20:	
   602  08B5  344E               	retlw	78	;'N'
   603  08B6  3443               	retlw	67	;'C'
   604  08B7  3400               	retlw	0
   605                           psect	strings
   606                           	
   607  08B8                     STR_21:	
   608  08B8  3452               	retlw	82	;'R'
   609  08B9  3443               	retlw	67	;'C'
   610  08BA  3400               	retlw	0
   611                           psect	strings
   612                           	
   613  08BB                     STR_23:	
   614  08BB  3454               	retlw	84	;'T'
   615  08BC  3443               	retlw	67	;'C'
   616  08BD  3400               	retlw	0
   617                           psect	strings
   618                           	
   619  08BE                     STR_24:	
   620  08BE  3457               	retlw	87	;'W'
   621  08BF  3461               	retlw	97	;'a'
   622  08C0  3400               	retlw	0
   623                           psect	strings
   624  08B2                     STR_25	equ	STR_22+0
   625                           	file	"Assignment3_AldnoahZero.as"
   626                           	line	#
   627                           psect cinit,class=CODE,delta=2
   628                           global start_initialization
   629  130F                     start_initialization:
   630                           
   631                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   632                           global __pbitbssCOMMON
   633  0380                     __pbitbssCOMMON:
   634  0380                     _CenterPressed:
   635  0380                            ds      1
   636                           
   637  0381                     _CenterReleased:
   638  0381                            ds      1
   639                           
   640  0382                     _DownPressed:
   641  0382                            ds      1
   642                           
   643  0383                     _DownReleased:
   644  0383                            ds      1
   645                           
   646  0384                     _LeftPressed:
   647  0384                            ds      1
   648                           
   649  0385                     _LeftReleased:
   650  0385                            ds      1
   651                           
   652  0386                     _RTC_FLAG_1MS:
   653  0386                            ds      1
   654                           
   655  0387                     _RTC_FLAG_250MS:
   656  0387                            ds      1
   657                           
   658  0388                     _RTC_FLAG_500MS:
   659  0388                            ds      1
   660                           
   661  0389                     _RightPressed:
   662  0389                            ds      1
   663                           
   664  038A                     _RightReleased:
   665  038A                            ds      1
   666                           
   667  038B                     _UpPressed:
   668  038B                            ds      1
   669                           
   670  038C                     _UpReleased:
   671  038C                            ds      1
   672                           
   673                           psect	bssCOMMON,class=COMMON,space=1
   674                           global __pbssCOMMON
   675  007D                     __pbssCOMMON:
   676  007D                     _buttonPressed:
   677  007D                            ds      1
   678                           
   679                           psect	bssBANK0,class=BANK0,space=1
   680                           global __pbssBANK0
   681  0069                     __pbssBANK0:
   682  0069                     _adcVal:
   683  0069                            ds      2
   684                           
   685  006B                     _BumpSensors:
   686  006B                            ds      1
   687                           
   688  006C                     _CliffSensors:
   689  006C                            ds      1
   690                           
   691  006D                     _DistHighByte:
   692  006D                            ds      1
   693                           
   694  006E                     _DistLowByte:
   695  006E                            ds      1
   696                           
   697  006F                     _VwallSensor:
   698  006F                            ds      1
   699                           
   700                           psect	bssBANK1,class=BANK1,space=1
   701                           global __pbssBANK1
   702  00A0                     __pbssBANK1:
   703  00A0                     _rxfifo:
   704  00A0                            ds      16
   705                           
   706  00B0                     _BattCharge:
   707  00B0                            ds      2
   708                           
   709  00B2                     _BattState:
   710  00B2                            ds      2
   711                           
   712  00B4                     _Disp1:
   713  00B4                            ds      2
   714                           
   715  00B6                     _Disp2:
   716  00B6                            ds      2
   717                           
   718  00B8                     _IRdistance:
   719  00B8                            ds      2
   720                           
   721  00BA                     _RTC_Counter:
   722  00BA                            ds      2
   723                           
   724  00BC                     _TotalDistTravelled:
   725  00BC                            ds      2
   726                           
   727  00BE                     _angleTurned:
   728  00BE                            ds      2
   729                           
   730  00C0                     _distTravelled:
   731  00C0                            ds      2
   732                           
   733  00C2                     _dist_high:
   734  00C2                            ds      2
   735                           
   736  00C4                     _dist_low:
   737  00C4                            ds      2
   738                           
   739  00C6                     _pos:
   740  00C6                            ds      2
   741                           
   742  00C8                     _total:
   743  00C8                            ds      2
   744                           
   745  00CA                     _totalSteps:
   746  00CA                            ds      2
   747                           
   748  00CC                     _AngleHighByte:
   749  00CC                            ds      1
   750                           
   751  00CD                     _AngleLowByte:
   752  00CD                            ds      1
   753                           
   754  00CE                     _CenterDebounceCount:
   755  00CE                            ds      1
   756                           
   757  00CF                     _DownDebounceCount:
   758  00CF                            ds      1
   759                           
   760  00D0                     _LeftDebounceCount:
   761  00D0                            ds      1
   762                           
   763  00D1                     _ROBOTerror:
   764  00D1                            ds      1
   765                           
   766  00D2                     _RightDebounceCount:
   767  00D2                            ds      1
   768                           
   769  00D3                     _UpDebounceCount:
   770  00D3                            ds      1
   771                           
   772  00D4                     _currentMenu:
   773  00D4                            ds      1
   774                           
   775  00D5                     _highByte:
   776  00D5                            ds      1
   777                           
   778  00D6                     _lowByte:
   779  00D6                            ds      1
   780                           
   781  00D7                     _rxiptr:
   782  00D7                            ds      1
   783                           
   784  00D8                     _rxoptr:
   785  00D8                            ds      1
   786                           
   787  00D9                     _ser_tmp:
   788  00D9                            ds      1
   789                           
   790  00DA                     _turnhighByte:
   791  00DA                            ds      1
   792                           
   793  00DB                     _turnlowByte:
   794  00DB                            ds      1
   795                           
   796  00DC                     _txiptr:
   797  00DC                            ds      1
   798                           
   799  00DD                     _txoptr:
   800  00DD                            ds      1
   801                           
   802                           psect	dataBANK1,class=BANK1,space=1
   803                           global __pdataBANK1
   804  00DE                     __pdataBANK1:
   805                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   806                           	line	49
   807  00DE                     _menuStrings:
   808  00DE                            ds      6
   809                           
   810                           psect	dataBANK1
   811                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   812                           	line	50
   813  00E4                     _shortMenuStrings:
   814  00E4                            ds      6
   815                           
   816                           psect	dataBANK1
   817                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   818                           	line	45
   819  00EA                     _current_step:
   820  00EA                            ds      1
   821                           
   822                           psect	bssBANK3,class=BANK3,space=1
   823                           global __pbssBANK3
   824  0190                     __pbssBANK3:
   825  0190                     UpdateDisplay@F1261:
   826  0190                            ds      16
   827                           
   828  01A0                     _txfifo:
   829  01A0                            ds      16
   830                           
   831                           psect clrtext,class=CODE,delta=2
   832                           global clear_ram
   833                           ;	Called with FSR containing the base address, and
   834                           ;	W with the last address+1
   835  07F7                     clear_ram:
   836  07F7  0064               	clrwdt			;clear the watchdog before getting into this loop
   837  07F8                     clrloop:
   838  07F8  0180               	clrf	indf		;clear RAM location pointed to by FSR
   839  07F9  0A84               	incf	fsr,f		;increment pointer
   840  07FA  0604               	xorwf	fsr,w		;XOR with final address
   841  07FB  1903               	btfsc	status,2	;have we reached the end yet?
   842  07FC  3400               	retlw	0		;all done for this memory range, return
   843  07FD  0604               	xorwf	fsr,w		;XOR again to restore value
   844  07FE  2FF8               	goto	clrloop		;do the next byte
   845                           
   846                           ; Clear objects allocated to BITCOMMON
   847                           psect cinit,class=CODE,delta=2
   848  130F  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   849  1310  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   850                           ; Clear objects allocated to COMMON
   851                           psect cinit,class=CODE,delta=2
   852  1311  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   853                           ; Clear objects allocated to BANK0
   854                           psect cinit,class=CODE,delta=2
   855  1312  01E9               	clrf	((__pbssBANK0)+0)&07Fh
   856  1313  01EA               	clrf	((__pbssBANK0)+1)&07Fh
   857  1314  01EB               	clrf	((__pbssBANK0)+2)&07Fh
   858  1315  01EC               	clrf	((__pbssBANK0)+3)&07Fh
   859  1316  01ED               	clrf	((__pbssBANK0)+4)&07Fh
   860  1317  01EE               	clrf	((__pbssBANK0)+5)&07Fh
   861  1318  01EF               	clrf	((__pbssBANK0)+6)&07Fh
   862                           ; Clear objects allocated to BANK1
   863                           psect cinit,class=CODE,delta=2
   864  1319  1383               	bcf	status, 7	;select IRP bank0
   865  131A  30A0               	movlw	low(__pbssBANK1)
   866  131B  0084               	movwf	fsr
   867  131C  30DE               	movlw	low((__pbssBANK1)+03Eh)
   868  131D  120A  118A  27F7   	fcall	clear_ram
              160A  118A         
   869                           ; Clear objects allocated to BANK3
   870                           psect cinit,class=CODE,delta=2
   871  1322  1783               	bsf	status, 7	;select IRP bank2
   872  1323  3090               	movlw	low(__pbssBANK3)
   873  1324  0084               	movwf	fsr
   874  1325  30B0               	movlw	low((__pbssBANK3)+020h)
   875  1326  120A  118A  27F7   	fcall	clear_ram
              160A  118A         
   876                           global btemp
   877                           psect inittext,class=CODE,delta=2
   878                           global init_fetch,btemp
   879                           ;	Called with low address in FSR and high address in W
   880  10FB                     init_fetch:
   881  10FB  087E               	movf btemp,w
   882  10FC  008A               	movwf pclath
   883  10FD  087F               	movf btemp+1,w
   884  10FE  0082               	movwf pc
   885                           global init_ram
   886                           ;Called with:
   887                           ;	high address of idata address in btemp 
   888                           ;	low address of idata address in btemp+1 
   889                           ;	low address of data in FSR
   890                           ;	high address + 1 of data in btemp-1
   891  10FF                     init_ram:
   892  10FF  160A  118A  20FB   	fcall init_fetch
              160A  118A         
   893  1104  0080               	movwf indf,f
   894  1105  0A84               	incf fsr,f
   895  1106  0804               	movf fsr,w
   896  1107  067D               	xorwf btemp-1,w
   897  1108  1903               	btfsc status,2
   898  1109  3400               	retlw 0
   899  110A  0AFF               	incf btemp+1,f
   900  110B  1903               	btfsc status,2
   901  110C  0AFE               	incf btemp,f
   902  110D  28FF               	goto init_ram
   903                           ; Initialize objects allocated to BANK1
   904                           psect cinit,class=CODE,delta=2
   905                           global init_ram, __pidataBANK1
   906  132B  1383               	bcf	status, 7	;select IRP bank0
   907  132C  30EB               	movlw low(__pdataBANK1+13)
   908  132D  00FD               	movwf btemp-1,f
   909  132E  3010               	movlw high(__pidataBANK1)
   910  132F  00FE               	movwf btemp,f
   911  1330  30DB               	movlw low(__pidataBANK1)
   912  1331  00FF               	movwf btemp+1,f
   913  1332  30DE               	movlw low(__pdataBANK1)
   914  1333  0084               	movwf fsr,f
   915  1334  160A  118A  20FF   	fcall init_ram
              160A  118A         
   916                           psect cinit,class=CODE,delta=2
   917                           global end_of_initialization
   918                           
   919                           ;End of C runtime variable initialization code
   920                           
   921  1339                     end_of_initialization:
   922  1339  0183               clrf status
   923  133A  120A  118A  2815   ljmp _main	;jump to C main() function
   924                           psect	cstackCOMMON,class=COMMON,space=1
   925                           global __pcstackCOMMON
   926  0072                     __pcstackCOMMON:
   927                           	global	?_ser_init
   928  0072                     ?_ser_init:	; 0 bytes @ 0x0
   929                           	global	?_robo_init
   930  0072                     ?_robo_init:	; 0 bytes @ 0x0
   931                           	global	?_robotLoadSong
   932  0072                     ?_robotLoadSong:	; 0 bytes @ 0x0
   933                           	global	?_robot_read
   934  0072                     ?_robot_read:	; 0 bytes @ 0x0
   935                           	global	?_readAvgDistance
   936  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   937                           	global	?_UpdateDisplay
   938  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   939                           	global	?_calibrateIR
   940  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   941                           	global	?_ser_putch
   942  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   943                           	global	?_Init_Follow_IR
   944  0072                     ?_Init_Follow_IR:	; 0 bytes @ 0x0
   945                           	global	?_ChargeMode
   946  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   947                           	global	?_RobotBattRead
   948  0072                     ?_RobotBattRead:	; 0 bytes @ 0x0
   949                           	global	?_ADCconvert
   950  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   951                           	global	?_init_adc
   952  0072                     ?_init_adc:	; 0 bytes @ 0x0
   953                           	global	?_lcd_write_control
   954  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   955                           	global	?_lcd_write_data
   956  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   957                           	global	?_lcd_set_cursor
   958  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   959                           	global	?_lcd_init
   960  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   961                           	global	?_isr1
   962  0072                     ?_isr1:	; 0 bytes @ 0x0
   963                           	global	?_init
   964  0072                     ?_init:	; 0 bytes @ 0x0
   965                           	global	?_main
   966  0072                     ?_main:	; 0 bytes @ 0x0
   967                           	global	?_Debounce
   968  0072                     ?_Debounce:	; 0 bytes @ 0x0
   969                           	global	??_Debounce
   970  0072                     ??_Debounce:	; 0 bytes @ 0x0
   971                           	global	?_ser_isrx
   972  0072                     ?_ser_isrx:	; 1 bit 
   973                           	global	?_ReadButtons
   974  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   975                           	global	?_Menu
   976  0072                     ?_Menu:	; 1 bytes @ 0x0
   977                           	global	?_ser_getch
   978  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   979                           	global	?_adc_read_channel
   980  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   981                           	global	?_spi_transfer
   982  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   983                           	global	?i1___lwmod
   984  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   985                           	global	i1___lwmod@divisor
   986  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   987  0072                     	ds	1
   988                           	global	??_ReadButtons
   989  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   990  0073                     	ds	1
   991                           	global	i1___lwmod@dividend
   992  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   993  0074                     	ds	2
   994                           	global	??i1___lwmod
   995  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   996  0076                     	ds	1
   997                           	global	i1___lwmod@counter
   998  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   999  0077                     	ds	1
  1000                           	global	??_isr1
  1001  0078                     ??_isr1:	; 0 bytes @ 0x6
  1002  0078                     	ds	5
  1003                           psect	cstackBANK0,class=BANK0,space=1
  1004                           global __pcstackBANK0
  1005  0020                     __pcstackBANK0:
  1006                           	global	??_ser_init
  1007  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1008                           	global	??_Menu
  1009  0020                     ??_Menu:	; 0 bytes @ 0x0
  1010                           	global	??_ser_putch
  1011  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1012                           	global	??_ser_getch
  1013  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1014                           	global	??_init_adc
  1015  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1016                           	global	??_lcd_write_control
  1017  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1018                           	global	??_lcd_write_data
  1019  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1020                           	global	??_spi_transfer
  1021  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1022                           	global	??_ser_isrx
  1023  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1024                           	global	?_adc_read
  1025  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1026                           	global	?___wmul
  1027  0020                     ?___wmul:	; 2 bytes @ 0x0
  1028                           	global	?___awmod
  1029  0020                     ?___awmod:	; 2 bytes @ 0x0
  1030                           	global	Menu@BTN_input
  1031  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1032                           	global	___wmul@multiplier
  1033  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1034                           	global	___awmod@divisor
  1035  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1036  0020                     	ds	1
  1037                           	global	spi_transfer@temp
  1038  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1039                           	global	ser_getch@c
  1040  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1041                           	global	ser_putch@c
  1042  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1043  0021                     	ds	1
  1044                           	global	??_adc_read
  1045  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1046                           	global	??_robo_init
  1047  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1048                           	global	??_robotLoadSong
  1049  0022                     ??_robotLoadSong:	; 0 bytes @ 0x2
  1050                           	global	??_robot_read
  1051  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1052                           	global	?_RobotDrive
  1053  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
  1054                           	global	??_RobotBattRead
  1055  0022                     ??_RobotBattRead:	; 0 bytes @ 0x2
  1056                           	global	?_robotTurn
  1057  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1058                           	global	lcd_write_control@databyte
  1059  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1060                           	global	lcd_write_data@databyte
  1061  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1062                           	global	spi_transfer@data
  1063  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1064                           	global	RobotDrive@speed
  1065  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
  1066                           	global	robotTurn@angle
  1067  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1068                           	global	___wmul@multiplicand
  1069  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1070                           	global	___awmod@dividend
  1071  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1072  0022                     	ds	1
  1073                           	global	?_rotate
  1074  0023                     ?_rotate:	; 0 bytes @ 0x3
  1075                           	global	??_lcd_set_cursor
  1076  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1077                           	global	??_lcd_init
  1078  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1079                           	global	??_init
  1080  0023                     ??_init:	; 0 bytes @ 0x3
  1081                           	global	lcd_set_cursor@address
  1082  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1083                           	global	robot_read@readType
  1084  0023                     robot_read@readType:	; 1 bytes @ 0x3
  1085                           	global	rotate@numsteps
  1086  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1087  0023                     	ds	1
  1088                           	global	??_robotTurn
  1089  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1090                           	global	??___wmul
  1091  0024                     ??___wmul:	; 0 bytes @ 0x4
  1092                           	global	??___awmod
  1093  0024                     ??___awmod:	; 0 bytes @ 0x4
  1094                           	global	adc_read@adc_value
  1095  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1096                           	global	RobotDrive@radius
  1097  0024                     RobotDrive@radius:	; 2 bytes @ 0x4
  1098                           	global	RobotBattRead@temp1
  1099  0024                     RobotBattRead@temp1:	; 2 bytes @ 0x4
  1100                           	global	___wmul@product
  1101  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1102  0024                     	ds	1
  1103                           	global	rotate@direction
  1104  0025                     rotate@direction:	; 1 bytes @ 0x5
  1105                           	global	___awmod@counter
  1106  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1107  0025                     	ds	1
  1108                           	global	??_RobotDrive
  1109  0026                     ??_RobotDrive:	; 0 bytes @ 0x6
  1110                           	global	??_rotate
  1111  0026                     ??_rotate:	; 0 bytes @ 0x6
  1112                           	global	??_adc_read_channel
  1113  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1114                           	global	?_abs
  1115  0026                     ?_abs:	; 2 bytes @ 0x6
  1116                           	global	?___lwdiv
  1117  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1118                           	global	___awmod@sign
  1119  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1120                           	global	abs@v
  1121  0026                     abs@v:	; 2 bytes @ 0x6
  1122                           	global	___lwdiv@divisor
  1123  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1124  0026                     	ds	1
  1125                           	global	?_lcd_write_string
  1126  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1127                           	global	adc_read_channel@channel
  1128  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1129                           	global	RobotDrive@speedlowByte
  1130  0027                     RobotDrive@speedlowByte:	; 1 bytes @ 0x7
  1131                           	global	lcd_write_string@s
  1132  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1133  0027                     	ds	1
  1134                           	global	??_abs
  1135  0028                     ??_abs:	; 0 bytes @ 0x8
  1136                           	global	?_readDistance
  1137  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1138                           	global	RobotDrive@speedhighByte
  1139  0028                     RobotDrive@speedhighByte:	; 1 bytes @ 0x8
  1140                           	global	rotate@i
  1141  0028                     rotate@i:	; 2 bytes @ 0x8
  1142                           	global	___lwdiv@dividend
  1143  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1144  0028                     	ds	1
  1145                           	global	??_lcd_write_string
  1146  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1147                           	global	RobotDrive@radiuslowByte
  1148  0029                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x9
  1149  0029                     	ds	1
  1150                           	global	??_readDistance
  1151  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1152                           	global	??___lwdiv
  1153  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1154                           	global	RobotDrive@radiushighByte
  1155  002A                     RobotDrive@radiushighByte:	; 1 bytes @ 0xA
  1156  002A                     	ds	1
  1157                           	global	___lwdiv@quotient
  1158  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1159  002B                     	ds	1
  1160                           	global	readDistance@readVal
  1161  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1162  002C                     	ds	1
  1163                           	global	___lwdiv@counter
  1164  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1165  002D                     	ds	1
  1166                           	global	??_ADCconvert
  1167  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1168                           	global	?___lwmod
  1169  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1170                           	global	___lwmod@divisor
  1171  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1172  002E                     	ds	2
  1173                           	global	??_readAvgDistance
  1174  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1175                           	global	readAvgDistance@fullval
  1176  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1177                           	global	___lwmod@dividend
  1178  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1179  0030                     	ds	2
  1180                           	global	??___lwmod
  1181  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1182                           	global	readAvgDistance@j
  1183  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1184  0032                     	ds	1
  1185                           	global	___lwmod@counter
  1186  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1187  0033                     	ds	1
  1188                           	global	?_sprintf
  1189  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1190                           	global	sprintf@f
  1191  0034                     sprintf@f:	; 1 bytes @ 0x14
  1192                           	global	readAvgDistance@tempIR
  1193  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1194  0034                     	ds	2
  1195                           	global	readAvgDistance@i
  1196  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1197  0036                     	ds	3
  1198                           	global	??_sprintf
  1199  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1200  0039                     	ds	3
  1201                           	global	sprintf@ap
  1202  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1203  003C                     	ds	1
  1204                           	global	sprintf@flag
  1205  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1206  003D                     	ds	1
  1207                           	global	sprintf@prec
  1208  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1209  003E                     	ds	1
  1210                           	global	sprintf@_val
  1211  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1212  003F                     	ds	4
  1213                           	global	sprintf@sp
  1214  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1215  0043                     	ds	1
  1216                           	global	sprintf@c
  1217  0044                     sprintf@c:	; 1 bytes @ 0x24
  1218  0044                     	ds	1
  1219                           	global	??_UpdateDisplay
  1220  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1221  0045                     	ds	4
  1222                           	global	UpdateDisplay@LCDOutput
  1223  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1224  0049                     	ds	16
  1225                           	global	??_calibrateIR
  1226  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1227                           	global	?_robotMoveSpeed
  1228  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1229                           	global	?_robotTurnSpeed
  1230  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1231                           	global	??_Init_Follow_IR
  1232  0059                     ??_Init_Follow_IR:	; 0 bytes @ 0x39
  1233                           	global	?_robotFollow
  1234  0059                     ?_robotFollow:	; 0 bytes @ 0x39
  1235                           	global	?_robot_turnRight
  1236  0059                     ?_robot_turnRight:	; 0 bytes @ 0x39
  1237                           	global	??_ChargeMode
  1238  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1239                           	global	robotFollow@speed
  1240  0059                     robotFollow@speed:	; 2 bytes @ 0x39
  1241                           	global	robot_turnRight@speed
  1242  0059                     robot_turnRight@speed:	; 2 bytes @ 0x39
  1243                           	global	robotMoveSpeed@distance
  1244  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1245                           	global	robotTurnSpeed@angle
  1246  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1247  0059                     	ds	2
  1248                           	global	robotFollow@AdcTarget
  1249  005B                     robotFollow@AdcTarget:	; 2 bytes @ 0x3B
  1250                           	global	robot_turnRight@AdcTarget
  1251  005B                     robot_turnRight@AdcTarget:	; 2 bytes @ 0x3B
  1252                           	global	robotMoveSpeed@speed
  1253  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1254                           	global	robotTurnSpeed@speed
  1255  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1256  005B                     	ds	2
  1257                           	global	??_robotMoveSpeed
  1258  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1259                           	global	??_robotTurnSpeed
  1260  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1261                           	global	??_robotFollow
  1262  005D                     ??_robotFollow:	; 0 bytes @ 0x3D
  1263                           	global	??_robot_turnRight
  1264  005D                     ??_robot_turnRight:	; 0 bytes @ 0x3D
  1265  005D                     	ds	2
  1266                           	global	robotFollow@turncounter
  1267  005F                     robotFollow@turncounter:	; 2 bytes @ 0x3F
  1268  005F                     	ds	1
  1269                           	global	robot_turnRight@temp1
  1270  0060                     robot_turnRight@temp1:	; 2 bytes @ 0x40
  1271                           	global	robotMoveSpeed@temp1
  1272  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1273                           	global	robotTurnSpeed@temp1
  1274  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1275  0060                     	ds	1
  1276                           	global	robotFollow@temp1
  1277  0061                     robotFollow@temp1:	; 2 bytes @ 0x41
  1278  0061                     	ds	2
  1279                           	global	??_main
  1280  0063                     ??_main:	; 0 bytes @ 0x43
  1281  0063                     	ds	3
  1282                           	global	main@shortwall
  1283  0066                     main@shortwall:	; 2 bytes @ 0x46
  1284  0066                     	ds	2
  1285                           	global	main@choice
  1286  0068                     main@choice:	; 1 bytes @ 0x48
  1287  0068                     	ds	1
  1288 ;;Data sizes: Strings 167, constant 10, data 13, bss 102, persistent 0 stack 0
  1289 ;;Auto spaces:   Size  Autos    Used
  1290 ;; COMMON          14     11      14
  1291 ;; BANK0           80     73      80
  1292 ;; BANK1           80      0      75
  1293 ;; BANK3           96      0      32
  1294 ;; BANK2           96      0       0
  1295                           
  1296 ;;
  1297 ;; Pointer list with targets:
  1298                           
  1299 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1300 ;;
  1301 ;; ?_abs	int  size(1) Largest target is 0
  1302 ;;
  1303 ;; ?___awmod	int  size(1) Largest target is 0
  1304 ;;
  1305 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1306 ;;
  1307 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1308 ;;
  1309 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1310 ;;
  1311 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1312 ;;
  1313 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1314 ;;
  1315 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1316 ;;		 -> STR_19(CODE[5]), STR_13(CODE[13]), 
  1317 ;;
  1318 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1319 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1320 ;;
  1321 ;; ?_sprintf	int  size(1) Largest target is 0
  1322 ;;
  1323 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1324 ;;		 -> ?_sprintf(BANK0[2]), 
  1325 ;;
  1326 ;; S8258$_cp	PTR const unsigned char  size(1) Largest target is 0
  1327 ;;
  1328 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1329 ;;
  1330 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1331 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1332 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1333 ;;
  1334 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1335 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1336 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1337 ;;
  1338 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1339 ;;		 -> STR_26(CODE[9]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
  1340 ;;		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_18(CODE[16]), 
  1341 ;;		 -> STR_17(CODE[4]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[16]), 
  1342 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1343 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1344 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1345 ;;		 -> STR_1(CODE[9]), 
  1346 ;;
  1347                           
  1348                           
  1349 ;;
  1350 ;; Critical Paths under _main in COMMON
  1351 ;;
  1352 ;;   None.
  1353 ;;
  1354 ;; Critical Paths under _isr1 in COMMON
  1355 ;;
  1356 ;;   _isr1->i1___lwmod
  1357 ;;   _ReadButtons->_Debounce
  1358 ;;
  1359 ;; Critical Paths under _main in BANK0
  1360 ;;
  1361 ;;   _main->_robotFollow
  1362 ;;   _ChargeMode->_UpdateDisplay
  1363 ;;   _robot_turnRight->_UpdateDisplay
  1364 ;;   _robotFollow->_UpdateDisplay
  1365 ;;   _robotTurnSpeed->_UpdateDisplay
  1366 ;;   _robotMoveSpeed->_UpdateDisplay
  1367 ;;   _calibrateIR->_UpdateDisplay
  1368 ;;   _UpdateDisplay->_sprintf
  1369 ;;   _readAvgDistance->_ADCconvert
  1370 ;;   _readDistance->_adc_read_channel
  1371 ;;   _RobotBattRead->_ser_putch
  1372 ;;   _RobotBattRead->_ser_getch
  1373 ;;   _robot_read->_ser_putch
  1374 ;;   _robot_read->_ser_getch
  1375 ;;   _lcd_init->_lcd_write_control
  1376 ;;   _lcd_write_string->___awmod
  1377 ;;   _lcd_set_cursor->_lcd_write_control
  1378 ;;   _abs->___wmul
  1379 ;;   _robotTurn->_ser_putch
  1380 ;;   _sprintf->___lwmod
  1381 ;;   _ADCconvert->___lwdiv
  1382 ;;   _rotate->_spi_transfer
  1383 ;;   _RobotDrive->_ser_putch
  1384 ;;   _robotLoadSong->_ser_putch
  1385 ;;   _robo_init->_ser_putch
  1386 ;;   _adc_read_channel->_adc_read
  1387 ;;   ___lwmod->___lwdiv
  1388 ;;   ___lwdiv->___wmul
  1389 ;;
  1390 ;; Critical Paths under _isr1 in BANK0
  1391 ;;
  1392 ;;   None.
  1393 ;;
  1394 ;; Critical Paths under _main in BANK1
  1395 ;;
  1396 ;;   None.
  1397 ;;
  1398 ;; Critical Paths under _isr1 in BANK1
  1399 ;;
  1400 ;;   None.
  1401 ;;
  1402 ;; Critical Paths under _main in BANK3
  1403 ;;
  1404 ;;   None.
  1405 ;;
  1406 ;; Critical Paths under _isr1 in BANK3
  1407 ;;
  1408 ;;   None.
  1409 ;;
  1410 ;; Critical Paths under _main in BANK2
  1411 ;;
  1412 ;;   None.
  1413 ;;
  1414 ;; Critical Paths under _isr1 in BANK2
  1415 ;;
  1416 ;;   None.
  1417                           
  1418 ;;
  1419 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1420 ;;
  1421                           
  1422 ;;
  1423 ;;Call Graph Tables:
  1424 ;;
  1425 ;; ---------------------------------------------------------------------------------
  1426 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1427 ;; ---------------------------------------------------------------------------------
  1428 ;; (0) _main                                                 6     6      0   16205
  1429 ;;                                             67 BANK0      6     6      0
  1430 ;;                               _init
  1431 ;;                      _robotLoadSong
  1432 ;;                         _robot_read
  1433 ;;                    _readAvgDistance
  1434 ;;                      _UpdateDisplay
  1435 ;;                               _Menu
  1436 ;;                        _calibrateIR
  1437 ;;                          _ser_putch
  1438 ;;                     _robotMoveSpeed
  1439 ;;                     _robotTurnSpeed
  1440 ;;                     _Init_Follow_IR
  1441 ;;                        _robotFollow
  1442 ;;                         _RobotDrive
  1443 ;;                             _rotate
  1444 ;;                    _robot_turnRight
  1445 ;;                         _ChargeMode
  1446 ;; ---------------------------------------------------------------------------------
  1447 ;; (1) _Init_Follow_IR                                       3     3      0    1567
  1448 ;;                                             57 BANK0      3     3      0
  1449 ;;                        _calibrateIR
  1450 ;;                             _rotate
  1451 ;; ---------------------------------------------------------------------------------
  1452 ;; (1) _ChargeMode                                           1     1      0    1442
  1453 ;;                                             57 BANK0      1     1      0
  1454 ;;                          _ser_putch
  1455 ;;                      _RobotBattRead
  1456 ;;                      _UpdateDisplay
  1457 ;; ---------------------------------------------------------------------------------
  1458 ;; (1) _robot_turnRight                                      9     5      4    2828
  1459 ;;                                             57 BANK0      9     5      4
  1460 ;;                         _RobotDrive
  1461 ;;                    _readAvgDistance
  1462 ;;                          _ser_putch
  1463 ;;                         _robot_read
  1464 ;;                      _UpdateDisplay
  1465 ;;                                _abs
  1466 ;; ---------------------------------------------------------------------------------
  1467 ;; (1) _robotFollow                                         10     6      4    2669
  1468 ;;                                             57 BANK0     10     6      4
  1469 ;;                         _RobotDrive
  1470 ;;                    _readAvgDistance
  1471 ;;                         _robot_read
  1472 ;;                      _UpdateDisplay
  1473 ;; ---------------------------------------------------------------------------------
  1474 ;; (1) _robotTurnSpeed                                       9     5      4    1776
  1475 ;;                                             57 BANK0      9     5      4
  1476 ;;                          _robotTurn
  1477 ;;                         _robot_read
  1478 ;;                      _UpdateDisplay
  1479 ;;                                _abs
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (1) _robotMoveSpeed                                       9     5      4    1933
  1482 ;;                                             57 BANK0      9     5      4
  1483 ;;                         _RobotDrive
  1484 ;;                         _robot_read
  1485 ;;                      _UpdateDisplay
  1486 ;;                                _abs
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (2) _calibrateIR                                          0     0      0    1447
  1489 ;;                             _rotate
  1490 ;;                      _UpdateDisplay
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (2) _UpdateDisplay                                       20    20      0    1327
  1493 ;;                                             37 BANK0     20    20      0
  1494 ;;                  _lcd_write_control
  1495 ;;                            _sprintf
  1496 ;;                     _lcd_set_cursor
  1497 ;;                   _lcd_write_string
  1498 ;;                            ___awmod
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; (2) _readAvgDistance                                      8     8      0     625
  1501 ;;                                             16 BANK0      8     8      0
  1502 ;;                       _readDistance
  1503 ;;                            ___lwdiv
  1504 ;;                         _ADCconvert
  1505 ;; ---------------------------------------------------------------------------------
  1506 ;; (1) _init                                                 1     1      0      44
  1507 ;;                                              3 BANK0      1     1      0
  1508 ;;                           _ser_init
  1509 ;;                           _init_adc
  1510 ;;                           _lcd_init
  1511 ;;                          _robo_init
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (3) _readDistance                                         6     4      2      69
  1514 ;;                                              8 BANK0      6     4      2
  1515 ;;                   _adc_read_channel
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (2) _RobotBattRead                                        4     4      0      93
  1518 ;;                                              2 BANK0      4     4      0
  1519 ;;                          _ser_putch
  1520 ;;                          _ser_getch
  1521 ;; ---------------------------------------------------------------------------------
  1522 ;; (2) _robot_read                                           2     2      0     133
  1523 ;;                                              2 BANK0      2     2      0
  1524 ;;                          _ser_putch
  1525 ;;                          _ser_getch
  1526 ;; ---------------------------------------------------------------------------------
  1527 ;; (2) _lcd_init                                             0     0      0      22
  1528 ;;                  _lcd_write_control
  1529 ;; ---------------------------------------------------------------------------------
  1530 ;; (3) _lcd_write_string                                     2     0      2      67
  1531 ;;                                              7 BANK0      2     0      2
  1532 ;;                     _lcd_write_data
  1533 ;;                            ___awmod (ARG)
  1534 ;; ---------------------------------------------------------------------------------
  1535 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1536 ;;                                              3 BANK0      1     1      0
  1537 ;;                  _lcd_write_control
  1538 ;; ---------------------------------------------------------------------------------
  1539 ;; (2) _abs                                                  4     2      2     158
  1540 ;;                                              6 BANK0      4     2      2
  1541 ;;                             ___wmul
  1542 ;; ---------------------------------------------------------------------------------
  1543 ;; (2) _robotTurn                                            2     0      2      66
  1544 ;;                                              2 BANK0      2     0      2
  1545 ;;                          _ser_putch
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (3) _ser_getch                                            2     2      0      23
  1548 ;;                                              0 BANK0      2     2      0
  1549 ;;                           _ser_isrx
  1550 ;; ---------------------------------------------------------------------------------
  1551 ;; (3) _sprintf                                             17    12      5     798
  1552 ;;                                             20 BANK0     17    12      5
  1553 ;;                            ___lwdiv
  1554 ;;                            ___lwmod
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (3) _ADCconvert                                           2     2      0     254
  1557 ;;                                             14 BANK0      2     2      0
  1558 ;;                             ___wmul
  1559 ;;                            ___lwdiv
  1560 ;; ---------------------------------------------------------------------------------
  1561 ;; (1) _rotate                                               7     4      3     120
  1562 ;;                                              3 BANK0      7     4      3
  1563 ;;                       _spi_transfer
  1564 ;; ---------------------------------------------------------------------------------
  1565 ;; (2) _RobotDrive                                           9     5      4     202
  1566 ;;                                              2 BANK0      9     5      4
  1567 ;;                          _ser_putch
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (1) _robotLoadSong                                        0     0      0      22
  1570 ;;                          _ser_putch
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (2) _robo_init                                            0     0      0      22
  1573 ;;                          _ser_putch
  1574 ;; ---------------------------------------------------------------------------------
  1575 ;; (4) _lcd_write_data                                       3     3      0      22
  1576 ;;                                              0 BANK0      3     3      0
  1577 ;; ---------------------------------------------------------------------------------
  1578 ;; (4) _lcd_write_control                                    3     3      0      22
  1579 ;;                                              0 BANK0      3     3      0
  1580 ;; ---------------------------------------------------------------------------------
  1581 ;; (2) _init_adc                                             1     1      0       0
  1582 ;;                                              0 BANK0      1     1      0
  1583 ;; ---------------------------------------------------------------------------------
  1584 ;; (4) _adc_read_channel                                     2     2      0      46
  1585 ;;                                              6 BANK0      2     2      0
  1586 ;;                           _adc_read
  1587 ;; ---------------------------------------------------------------------------------
  1588 ;; (3) ___awmod                                              7     3      4     296
  1589 ;;                                              0 BANK0      7     3      4
  1590 ;; ---------------------------------------------------------------------------------
  1591 ;; (4) ___lwmod                                              6     2      4     159
  1592 ;;                                             14 BANK0      6     2      4
  1593 ;;                            ___lwdiv (ARG)
  1594 ;; ---------------------------------------------------------------------------------
  1595 ;; (4) ___lwdiv                                              8     4      4     162
  1596 ;;                                              6 BANK0      8     4      4
  1597 ;;                             ___wmul (ARG)
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (3) ___wmul                                               6     2      4      92
  1600 ;;                                              0 BANK0      6     2      4
  1601 ;; ---------------------------------------------------------------------------------
  1602 ;; (4) _ser_isrx                                             0     0      0       0
  1603 ;; ---------------------------------------------------------------------------------
  1604 ;; (2) _spi_transfer                                         3     3      0      30
  1605 ;;                                              0 BANK0      3     3      0
  1606 ;; ---------------------------------------------------------------------------------
  1607 ;; (3) _ser_putch                                            2     2      0      22
  1608 ;;                                              0 BANK0      2     2      0
  1609 ;; ---------------------------------------------------------------------------------
  1610 ;; (1) _Menu                                                 1     1      0      22
  1611 ;;                                              0 BANK0      1     1      0
  1612 ;; ---------------------------------------------------------------------------------
  1613 ;; (2) _ser_init                                             1     1      0       0
  1614 ;;                                              0 BANK0      1     1      0
  1615 ;; ---------------------------------------------------------------------------------
  1616 ;; (5) _adc_read                                             6     4      2      24
  1617 ;;                                              0 BANK0      6     4      2
  1618 ;; ---------------------------------------------------------------------------------
  1619 ;; Estimated maximum stack depth 5
  1620 ;; ---------------------------------------------------------------------------------
  1621 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (6) _isr1                                                 5     5      0     521
  1624 ;;                                              6 COMMON     5     5      0
  1625 ;;                          i1___lwmod
  1626 ;;                        _ReadButtons
  1627 ;; ---------------------------------------------------------------------------------
  1628 ;; (7) _ReadButtons                                          0     0      0       0
  1629 ;;                           _Debounce
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (7) i1___lwmod                                            6     2      4     521
  1632 ;;                                              0 COMMON     6     2      4
  1633 ;; ---------------------------------------------------------------------------------
  1634 ;; (8) _Debounce                                             1     1      0       0
  1635 ;;                                              0 COMMON     1     1      0
  1636 ;; ---------------------------------------------------------------------------------
  1637 ;; Estimated maximum stack depth 8
  1638 ;; ---------------------------------------------------------------------------------
  1639                           
  1640 ;; Call Graph Graphs:
  1641                           
  1642 ;; _main (ROOT)
  1643 ;;   _init
  1644 ;;     _ser_init
  1645 ;;     _init_adc
  1646 ;;     _lcd_init
  1647 ;;       _lcd_write_control
  1648 ;;     _robo_init
  1649 ;;       _ser_putch
  1650 ;;   _robotLoadSong
  1651 ;;     _ser_putch
  1652 ;;   _robot_read
  1653 ;;     _ser_putch
  1654 ;;     _ser_getch
  1655 ;;       _ser_isrx
  1656 ;;   _readAvgDistance
  1657 ;;     _readDistance
  1658 ;;       _adc_read_channel
  1659 ;;         _adc_read
  1660 ;;     ___lwdiv
  1661 ;;       ___wmul (ARG)
  1662 ;;     _ADCconvert
  1663 ;;       ___wmul
  1664 ;;       ___lwdiv
  1665 ;;         ___wmul (ARG)
  1666 ;;   _UpdateDisplay
  1667 ;;     _lcd_write_control
  1668 ;;     _sprintf
  1669 ;;       ___lwdiv
  1670 ;;         ___wmul (ARG)
  1671 ;;       ___lwmod
  1672 ;;         ___lwdiv (ARG)
  1673 ;;           ___wmul (ARG)
  1674 ;;     _lcd_set_cursor
  1675 ;;       _lcd_write_control
  1676 ;;     _lcd_write_string
  1677 ;;       _lcd_write_data
  1678 ;;       ___awmod (ARG)
  1679 ;;     ___awmod
  1680 ;;   _Menu
  1681 ;;   _calibrateIR
  1682 ;;     _rotate
  1683 ;;       _spi_transfer
  1684 ;;     _UpdateDisplay
  1685 ;;       _lcd_write_control
  1686 ;;       _sprintf
  1687 ;;         ___lwdiv
  1688 ;;           ___wmul (ARG)
  1689 ;;         ___lwmod
  1690 ;;           ___lwdiv (ARG)
  1691 ;;             ___wmul (ARG)
  1692 ;;       _lcd_set_cursor
  1693 ;;         _lcd_write_control
  1694 ;;       _lcd_write_string
  1695 ;;         _lcd_write_data
  1696 ;;         ___awmod (ARG)
  1697 ;;       ___awmod
  1698 ;;   _ser_putch
  1699 ;;   _robotMoveSpeed
  1700 ;;     _RobotDrive
  1701 ;;       _ser_putch
  1702 ;;     _robot_read
  1703 ;;       _ser_putch
  1704 ;;       _ser_getch
  1705 ;;         _ser_isrx
  1706 ;;     _UpdateDisplay
  1707 ;;       _lcd_write_control
  1708 ;;       _sprintf
  1709 ;;         ___lwdiv
  1710 ;;           ___wmul (ARG)
  1711 ;;         ___lwmod
  1712 ;;           ___lwdiv (ARG)
  1713 ;;             ___wmul (ARG)
  1714 ;;       _lcd_set_cursor
  1715 ;;         _lcd_write_control
  1716 ;;       _lcd_write_string
  1717 ;;         _lcd_write_data
  1718 ;;         ___awmod (ARG)
  1719 ;;       ___awmod
  1720 ;;     _abs
  1721 ;;       ___wmul
  1722 ;;   _robotTurnSpeed
  1723 ;;     _robotTurn
  1724 ;;       _ser_putch
  1725 ;;     _robot_read
  1726 ;;       _ser_putch
  1727 ;;       _ser_getch
  1728 ;;         _ser_isrx
  1729 ;;     _UpdateDisplay
  1730 ;;       _lcd_write_control
  1731 ;;       _sprintf
  1732 ;;         ___lwdiv
  1733 ;;           ___wmul (ARG)
  1734 ;;         ___lwmod
  1735 ;;           ___lwdiv (ARG)
  1736 ;;             ___wmul (ARG)
  1737 ;;       _lcd_set_cursor
  1738 ;;         _lcd_write_control
  1739 ;;       _lcd_write_string
  1740 ;;         _lcd_write_data
  1741 ;;         ___awmod (ARG)
  1742 ;;       ___awmod
  1743 ;;     _abs
  1744 ;;       ___wmul
  1745 ;;   _Init_Follow_IR
  1746 ;;     _calibrateIR
  1747 ;;       _rotate
  1748 ;;         _spi_transfer
  1749 ;;       _UpdateDisplay
  1750 ;;         _lcd_write_control
  1751 ;;         _sprintf
  1752 ;;           ___lwdiv
  1753 ;;             ___wmul (ARG)
  1754 ;;           ___lwmod
  1755 ;;             ___lwdiv (ARG)
  1756 ;;               ___wmul (ARG)
  1757 ;;         _lcd_set_cursor
  1758 ;;           _lcd_write_control
  1759 ;;         _lcd_write_string
  1760 ;;           _lcd_write_data
  1761 ;;           ___awmod (ARG)
  1762 ;;         ___awmod
  1763 ;;     _rotate
  1764 ;;       _spi_transfer
  1765 ;;   _robotFollow
  1766 ;;     _RobotDrive
  1767 ;;       _ser_putch
  1768 ;;     _readAvgDistance
  1769 ;;       _readDistance
  1770 ;;         _adc_read_channel
  1771 ;;           _adc_read
  1772 ;;       ___lwdiv
  1773 ;;         ___wmul (ARG)
  1774 ;;       _ADCconvert
  1775 ;;         ___wmul
  1776 ;;         ___lwdiv
  1777 ;;           ___wmul (ARG)
  1778 ;;     _robot_read
  1779 ;;       _ser_putch
  1780 ;;       _ser_getch
  1781 ;;         _ser_isrx
  1782 ;;     _UpdateDisplay
  1783 ;;       _lcd_write_control
  1784 ;;       _sprintf
  1785 ;;         ___lwdiv
  1786 ;;           ___wmul (ARG)
  1787 ;;         ___lwmod
  1788 ;;           ___lwdiv (ARG)
  1789 ;;             ___wmul (ARG)
  1790 ;;       _lcd_set_cursor
  1791 ;;         _lcd_write_control
  1792 ;;       _lcd_write_string
  1793 ;;         _lcd_write_data
  1794 ;;         ___awmod (ARG)
  1795 ;;       ___awmod
  1796 ;;   _RobotDrive
  1797 ;;     _ser_putch
  1798 ;;   _rotate
  1799 ;;     _spi_transfer
  1800 ;;   _robot_turnRight
  1801 ;;     _RobotDrive
  1802 ;;       _ser_putch
  1803 ;;     _readAvgDistance
  1804 ;;       _readDistance
  1805 ;;         _adc_read_channel
  1806 ;;           _adc_read
  1807 ;;       ___lwdiv
  1808 ;;         ___wmul (ARG)
  1809 ;;       _ADCconvert
  1810 ;;         ___wmul
  1811 ;;         ___lwdiv
  1812 ;;           ___wmul (ARG)
  1813 ;;     _ser_putch
  1814 ;;     _robot_read
  1815 ;;       _ser_putch
  1816 ;;       _ser_getch
  1817 ;;         _ser_isrx
  1818 ;;     _UpdateDisplay
  1819 ;;       _lcd_write_control
  1820 ;;       _sprintf
  1821 ;;         ___lwdiv
  1822 ;;           ___wmul (ARG)
  1823 ;;         ___lwmod
  1824 ;;           ___lwdiv (ARG)
  1825 ;;             ___wmul (ARG)
  1826 ;;       _lcd_set_cursor
  1827 ;;         _lcd_write_control
  1828 ;;       _lcd_write_string
  1829 ;;         _lcd_write_data
  1830 ;;         ___awmod (ARG)
  1831 ;;       ___awmod
  1832 ;;     _abs
  1833 ;;       ___wmul
  1834 ;;   _ChargeMode
  1835 ;;     _ser_putch
  1836 ;;     _RobotBattRead
  1837 ;;       _ser_putch
  1838 ;;       _ser_getch
  1839 ;;         _ser_isrx
  1840 ;;     _UpdateDisplay
  1841 ;;       _lcd_write_control
  1842 ;;       _sprintf
  1843 ;;         ___lwdiv
  1844 ;;           ___wmul (ARG)
  1845 ;;         ___lwmod
  1846 ;;           ___lwdiv (ARG)
  1847 ;;             ___wmul (ARG)
  1848 ;;       _lcd_set_cursor
  1849 ;;         _lcd_write_control
  1850 ;;       _lcd_write_string
  1851 ;;         _lcd_write_data
  1852 ;;         ___awmod (ARG)
  1853 ;;       ___awmod
  1854 ;;
  1855 ;; _isr1 (ROOT)
  1856 ;;   i1___lwmod
  1857 ;;   _ReadButtons
  1858 ;;     _Debounce
  1859 ;;
  1860                           
  1861 ;; Address spaces:
  1862                           
  1863 ;;Name               Size   Autos  Total    Cost      Usage
  1864 ;;BANK3               60      0      20       9       33.3%
  1865 ;;BITBANK3            60      0       0       8        0.0%
  1866 ;;SFR3                 0      0       0       4        0.0%
  1867 ;;BITSFR3              0      0       0       4        0.0%
  1868 ;;BANK2               60      0       0      11        0.0%
  1869 ;;BITBANK2            60      0       0      10        0.0%
  1870 ;;SFR2                 0      0       0       5        0.0%
  1871 ;;BITSFR2              0      0       0       5        0.0%
  1872 ;;SFR1                 0      0       0       2        0.0%
  1873 ;;BITSFR1              0      0       0       2        0.0%
  1874 ;;BANK1               50      0      4B       7       93.8%
  1875 ;;BITBANK1            50      0       0       6        0.0%
  1876 ;;CODE                 0      0       0       0        0.0%
  1877 ;;DATA                 0      0      D4      12        0.0%
  1878 ;;ABS                  0      0      C9       3        0.0%
  1879 ;;NULL                 0      0       0       0        0.0%
  1880 ;;STACK                0      0       B       2        0.0%
  1881 ;;BANK0               50     49      50       5      100.0%
  1882 ;;BITBANK0            50      0       0       4        0.0%
  1883 ;;SFR0                 0      0       0       1        0.0%
  1884 ;;BITSFR0              0      0       0       1        0.0%
  1885 ;;COMMON               E      B       E       1      100.0%
  1886 ;;BITCOMMON            E      0       2       0       14.3%
  1887 ;;EEDATA             100      0       0       0        0.0%
  1888                           
  1889                           	global	_main
  1890                           psect	maintext,global,class=CODE,delta=2
  1891                           global __pmaintext
  1892  0015                     __pmaintext:
  1893                           
  1894 ;; *************** function _main *****************
  1895 ;; Defined at:
  1896 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  shortwall       2   70[BANK0 ] int 
  1901 ;;  choice          1   72[BANK0 ] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 17F/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       3       0       0       0
  1913 ;;      Temps:          0       3       0       0       0
  1914 ;;      Totals:         0       6       0       0       0
  1915 ;;Total ram usage:        6 bytes
  1916 ;; Hardware stack levels required when called:    8
  1917 ;; This function calls:
  1918 ;;		_init
  1919 ;;		_robotLoadSong
  1920 ;;		_robot_read
  1921 ;;		_readAvgDistance
  1922 ;;		_UpdateDisplay
  1923 ;;		_Menu
  1924 ;;		_calibrateIR
  1925 ;;		_ser_putch
  1926 ;;		_robotMoveSpeed
  1927 ;;		_robotTurnSpeed
  1928 ;;		_Init_Follow_IR
  1929 ;;		_robotFollow
  1930 ;;		_RobotDrive
  1931 ;;		_rotate
  1932 ;;		_robot_turnRight
  1933 ;;		_ChargeMode
  1934 ;; This function is called by:
  1935 ;;		Startup code after reset
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           psect	maintext
  1939                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1940                           	line	172
  1941                           	global	__size_of_main
  1942  0235                     	__size_of_main	equ	__end_of_main-_main
  1943                           	
  1944  0015                     _main:	
  1945                           	opt	stack 0
  1946                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1947                           	line	173
  1948                           	
  1949  0015                     l11728:	
  1950                           ;Main.c: 173: unsigned char choice = 255;
  1951  0015  30FF               	movlw	(0FFh)
  1952  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1953  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1954  0018  00E3               	movwf	(??_main+0)+0
  1955  0019  0863               	movf	(??_main+0)+0,w
  1956  001A  00E8               	movwf	(main@choice)
  1957                           	line	174
  1958                           	
  1959  001B                     l11730:	
  1960                           ;Main.c: 174: int shortwall = 0;
  1961  001B  01E6               	clrf	(main@shortwall)
  1962  001C  01E7               	clrf	(main@shortwall+1)
  1963                           	line	177
  1964                           	
  1965  001D                     l11732:	
  1966                           ;Main.c: 177: init();
  1967  001D  160A  118A  233D   	fcall	_init
              120A  118A         
  1968                           	line	178
  1969                           	
  1970  0022                     l11734:	
  1971                           ;Main.c: 178: robotLoadSong();
  1972  0022  160A  118A  2208   	fcall	_robotLoadSong
              120A  118A         
  1973  0027  2828               	goto	l11736
  1974                           	line	180
  1975                           ;Main.c: 180: while(1)
  1976                           	
  1977  0028                     l2248:	
  1978                           	line	182
  1979                           	
  1980  0028                     l11736:	
  1981                           ;Main.c: 181: {
  1982                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  1983  0028  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1984  0029  282B               	goto	u5211
  1985  002A  282C               	goto	u5210
  1986  002B                     u5211:
  1987  002B  283E               	goto	l11746
  1988  002C                     u5210:
  1989                           	line	184
  1990                           	
  1991  002C                     l11738:	
  1992                           ;Main.c: 183: {
  1993                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  1994  002C  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1995                           	line	185
  1996                           	
  1997  002D                     l11740:	
  1998                           ;Main.c: 185: robot_read(2);
  1999  002D  3002               	movlw	(02h)
  2000  002E  120A  158A  2358   	fcall	_robot_read
              120A  118A         
  2001                           	line	186
  2002                           	
  2003  0033                     l11742:	
  2004                           ;Main.c: 186: readAvgDistance();
  2005  0033  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2006                           	line	187
  2007                           	
  2008  0038                     l11744:	
  2009                           ;Main.c: 187: UpdateDisplay();
  2010  0038  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  2011  003D  283E               	goto	l11746
  2012                           	line	188
  2013                           	
  2014  003E                     l2249:	
  2015                           	line	189
  2016                           	
  2017  003E                     l11746:	
  2018                           ;Main.c: 188: }
  2019                           ;Main.c: 189: if (buttonPressed)
  2020  003E  087D               	movf	(_buttonPressed),w	;volatile
  2021  003F  1D03               	skipz
  2022  0040  2842               	goto	u5220
  2023  0041  2A29               	goto	l11818
  2024  0042                     u5220:
  2025                           	line	192
  2026                           	
  2027  0042                     l11748:	
  2028                           ;Main.c: 191: {
  2029                           ;Main.c: 192: choice = Menu(buttonPressed);
  2030  0042  087D               	movf	(_buttonPressed),w	;volatile
  2031  0043  160A  118A  24CF   	fcall	_Menu
              120A  118A         
  2032  0048  1283               	bcf	status, 5	;RP0=0, select bank0
  2033  0049  1303               	bcf	status, 6	;RP1=0, select bank0
  2034  004A  00E3               	movwf	(??_main+0)+0
  2035  004B  0863               	movf	(??_main+0)+0,w
  2036  004C  00E8               	movwf	(main@choice)
  2037                           	line	193
  2038                           	
  2039  004D                     l11750:	
  2040                           ;Main.c: 193: buttonPressed = 0;
  2041  004D  01FD               	clrf	(_buttonPressed)	;volatile
  2042  004E  2A29               	goto	l11818
  2043                           	line	194
  2044                           	
  2045  004F                     l2250:	
  2046                           	line	198
  2047                           ;Main.c: 194: }
  2048                           ;Main.c: 198: switch (choice)
  2049  004F  2A29               	goto	l11818
  2050                           	line	200
  2051                           ;Main.c: 199: {
  2052                           ;Main.c: 200: case 0:
  2053                           	
  2054  0050                     l2252:	
  2055                           	line	201
  2056                           	
  2057  0050                     l11752:	
  2058                           ;Main.c: 201: calibrateIR();
  2059  0050  160A  118A  25B1   	fcall	_calibrateIR
              120A  118A         
  2060                           	line	202
  2061                           ;Main.c: 202: break;
  2062  0055  2A3F               	goto	l11820
  2063                           	line	203
  2064                           ;Main.c: 203: case 1:
  2065                           	
  2066  0056                     l2254:	
  2067                           	line	208
  2068                           	
  2069  0056                     l11754:	
  2070                           ;Main.c: 208: ser_putch(141);
  2071  0056  308D               	movlw	(08Dh)
  2072  0057  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  2073                           	line	210
  2074                           ;Main.c: 210: ser_putch(0);
  2075  005C  3000               	movlw	(0)
  2076  005D  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  2077                           	line	211
  2078                           ;Main.c: 211: break;
  2079  0062  2A3F               	goto	l11820
  2080                           	line	212
  2081                           ;Main.c: 212: case 2:
  2082                           	
  2083  0063                     l2255:	
  2084                           	line	214
  2085                           	
  2086  0063                     l11756:	
  2087                           ;Main.c: 214: robotMoveSpeed(-200,-200);
  2088  0063  3038               	movlw	low(-200)
  2089  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  2090  0065  1303               	bcf	status, 6	;RP1=0, select bank0
  2091  0066  00D9               	movwf	(?_robotMoveSpeed)
  2092  0067  30FF               	movlw	high(-200)
  2093  0068  00DA               	movwf	((?_robotMoveSpeed))+1
  2094  0069  3038               	movlw	low(-200)
  2095  006A  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2096  006B  30FF               	movlw	high(-200)
  2097  006C  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2098  006D  120A  158A  227B   	fcall	_robotMoveSpeed
              120A  118A         
  2099                           	line	215
  2100                           ;Main.c: 215: break;
  2101  0072  2A3F               	goto	l11820
  2102                           	line	216
  2103                           ;Main.c: 216: case 3:
  2104                           	
  2105  0073                     l2256:	
  2106                           	line	218
  2107                           	
  2108  0073                     l11758:	
  2109                           ;Main.c: 218: robotTurnSpeed(-70,400);
  2110  0073  30BA               	movlw	low(-70)
  2111  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  2112  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  2113  0076  00D9               	movwf	(?_robotTurnSpeed)
  2114  0077  30FF               	movlw	high(-70)
  2115  0078  00DA               	movwf	((?_robotTurnSpeed))+1
  2116  0079  3090               	movlw	low(0190h)
  2117  007A  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2118  007B  3001               	movlw	high(0190h)
  2119  007C  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2120  007D  120A  158A  21D3   	fcall	_robotTurnSpeed
              120A  118A         
  2121                           	line	219
  2122                           	
  2123  0082                     l11760:	
  2124                           ;Main.c: 219: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2125                           	opt asmopt_off
  2126  0082  301A               movlw  26
  2127  0083  1283               	bcf	status, 5	;RP0=0, select bank0
  2128  0084  1303               	bcf	status, 6	;RP1=0, select bank0
  2129  0085  00E5               movwf	((??_main+0)+0+2),f
  2130  0086  305E               movlw	94
  2131  0087  00E4               movwf	((??_main+0)+0+1),f
  2132  0088  3086               	movlw	134
  2133  0089  00E3               movwf	((??_main+0)+0),f
  2134  008A                     u5247:
  2135  008A  0BE3               	decfsz	((??_main+0)+0),f
  2136  008B  288A               	goto	u5247
  2137  008C  0BE4               	decfsz	((??_main+0)+0+1),f
  2138  008D  288A               	goto	u5247
  2139  008E  0BE5               	decfsz	((??_main+0)+0+2),f
  2140  008F  288A               	goto	u5247
  2141  0090  0064               	clrwdt
  2142                           opt asmopt_on
  2143                           
  2144                           	line	220
  2145                           	
  2146  0091                     l11762:	
  2147                           ;Main.c: 220: robotTurnSpeed(-80,400);
  2148  0091  30B0               	movlw	low(-80)
  2149  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  2150  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  2151  0094  00D9               	movwf	(?_robotTurnSpeed)
  2152  0095  30FF               	movlw	high(-80)
  2153  0096  00DA               	movwf	((?_robotTurnSpeed))+1
  2154  0097  3090               	movlw	low(0190h)
  2155  0098  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2156  0099  3001               	movlw	high(0190h)
  2157  009A  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2158  009B  120A  158A  21D3   	fcall	_robotTurnSpeed
              120A  118A         
  2159                           	line	221
  2160                           ;Main.c: 221: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2161                           	opt asmopt_off
  2162  00A0  301A               movlw  26
  2163  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  2164  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  2165  00A3  00E5               movwf	((??_main+0)+0+2),f
  2166  00A4  305E               movlw	94
  2167  00A5  00E4               movwf	((??_main+0)+0+1),f
  2168  00A6  3086               	movlw	134
  2169  00A7  00E3               movwf	((??_main+0)+0),f
  2170  00A8                     u5257:
  2171  00A8  0BE3               	decfsz	((??_main+0)+0),f
  2172  00A9  28A8               	goto	u5257
  2173  00AA  0BE4               	decfsz	((??_main+0)+0+1),f
  2174  00AB  28A8               	goto	u5257
  2175  00AC  0BE5               	decfsz	((??_main+0)+0+2),f
  2176  00AD  28A8               	goto	u5257
  2177  00AE  0064               	clrwdt
  2178                           opt asmopt_on
  2179                           
  2180                           	line	222
  2181                           	
  2182  00AF                     l11764:	
  2183                           ;Main.c: 222: robotTurnSpeed(-90,400);
  2184  00AF  30A6               	movlw	low(-90)
  2185  00B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2186  00B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2187  00B2  00D9               	movwf	(?_robotTurnSpeed)
  2188  00B3  30FF               	movlw	high(-90)
  2189  00B4  00DA               	movwf	((?_robotTurnSpeed))+1
  2190  00B5  3090               	movlw	low(0190h)
  2191  00B6  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2192  00B7  3001               	movlw	high(0190h)
  2193  00B8  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2194  00B9  120A  158A  21D3   	fcall	_robotTurnSpeed
              120A  118A         
  2195                           	line	223
  2196                           	
  2197  00BE                     l11766:	
  2198                           ;Main.c: 223: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2199                           	opt asmopt_off
  2200  00BE  301A               movlw  26
  2201  00BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2202  00C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2203  00C1  00E5               movwf	((??_main+0)+0+2),f
  2204  00C2  305E               movlw	94
  2205  00C3  00E4               movwf	((??_main+0)+0+1),f
  2206  00C4  3086               	movlw	134
  2207  00C5  00E3               movwf	((??_main+0)+0),f
  2208  00C6                     u5267:
  2209  00C6  0BE3               	decfsz	((??_main+0)+0),f
  2210  00C7  28C6               	goto	u5267
  2211  00C8  0BE4               	decfsz	((??_main+0)+0+1),f
  2212  00C9  28C6               	goto	u5267
  2213  00CA  0BE5               	decfsz	((??_main+0)+0+2),f
  2214  00CB  28C6               	goto	u5267
  2215  00CC  0064               	clrwdt
  2216                           opt asmopt_on
  2217                           
  2218                           	line	224
  2219                           ;Main.c: 224: robotTurnSpeed(-100,400);
  2220  00CD  309C               	movlw	low(-100)
  2221  00CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2222  00CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2223  00D0  00D9               	movwf	(?_robotTurnSpeed)
  2224  00D1  30FF               	movlw	high(-100)
  2225  00D2  00DA               	movwf	((?_robotTurnSpeed))+1
  2226  00D3  3090               	movlw	low(0190h)
  2227  00D4  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2228  00D5  3001               	movlw	high(0190h)
  2229  00D6  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2230  00D7  120A  158A  21D3   	fcall	_robotTurnSpeed
              120A  118A         
  2231                           	line	225
  2232                           ;Main.c: 225: break;
  2233  00DC  2A3F               	goto	l11820
  2234                           	line	226
  2235                           ;Main.c: 226: case 4:
  2236                           	
  2237  00DD                     l2257:	
  2238                           	line	227
  2239                           	
  2240  00DD                     l11768:	
  2241                           ;Main.c: 227: Init_Follow_IR();
  2242  00DD  160A  118A  2194   	fcall	_Init_Follow_IR
              120A  118A         
  2243                           	line	228
  2244                           ;Main.c: 228: while (ROBOTerror != 1)
  2245  00E2  2A17               	goto	l11812
  2246                           	
  2247  00E3                     l2259:	
  2248                           	line	230
  2249                           ;Main.c: 229: {
  2250                           ;Main.c: 230: switch (ROBOTerror)
  2251  00E3  2A00               	goto	l11810
  2252                           	line	232
  2253                           ;Main.c: 231: {
  2254                           ;Main.c: 232: case 0:
  2255                           	
  2256  00E4                     l2261:	
  2257                           	line	233
  2258                           	
  2259  00E4                     l11770:	
  2260                           ;Main.c: 233: readAvgDistance();
  2261  00E4  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2262                           	line	234
  2263                           ;Main.c: 234: robotFollow(200, adcVal);
  2264  00E9  30C8               	movlw	low(0C8h)
  2265  00EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2266  00EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2267  00EC  00D9               	movwf	(?_robotFollow)
  2268  00ED  3000               	movlw	high(0C8h)
  2269  00EE  00DA               	movwf	((?_robotFollow))+1
  2270  00EF  086A               	movf	(_adcVal+1),w	;volatile
  2271  00F0  01DC               	clrf	1+(?_robotFollow)+02h
  2272  00F1  07DC               	addwf	1+(?_robotFollow)+02h
  2273  00F2  0869               	movf	(_adcVal),w	;volatile
  2274  00F3  01DB               	clrf	0+(?_robotFollow)+02h
  2275  00F4  07DB               	addwf	0+(?_robotFollow)+02h
  2276                           
  2277  00F5  120A  158A  2456   	fcall	_robotFollow
              120A  118A         
  2278                           	line	235
  2279                           ;Main.c: 235: break;
  2280  00FA  2A17               	goto	l11812
  2281                           	line	236
  2282                           ;Main.c: 236: case 1:
  2283                           	
  2284  00FB                     l2263:	
  2285                           	line	237
  2286                           	
  2287  00FB                     l11772:	
  2288                           ;Main.c: 237: ROBOTerror = 1;
  2289  00FB  1683               	bsf	status, 5	;RP0=1, select bank1
  2290  00FC  1303               	bcf	status, 6	;RP1=0, select bank1
  2291  00FD  01D1               	clrf	(_ROBOTerror)^080h
  2292  00FE  1403               	bsf	status,0
  2293  00FF  0DD1               	rlf	(_ROBOTerror)^080h,f
  2294                           	line	238
  2295                           ;Main.c: 238: break;
  2296  0100  2A17               	goto	l11812
  2297                           	line	239
  2298                           ;Main.c: 239: case 2:
  2299                           	
  2300  0101                     l2264:	
  2301                           	line	240
  2302                           	
  2303  0101                     l11774:	
  2304                           ;Main.c: 240: ROBOTerror = 1;
  2305  0101  01D1               	clrf	(_ROBOTerror)^080h
  2306  0102  1403               	bsf	status,0
  2307  0103  0DD1               	rlf	(_ROBOTerror)^080h,f
  2308                           	line	241
  2309                           ;Main.c: 241: break;
  2310  0104  2A17               	goto	l11812
  2311                           	line	242
  2312                           ;Main.c: 242: case 3:
  2313                           	
  2314  0105                     l2265:	
  2315                           	line	243
  2316                           ;Main.c: 243: ROBOTerror = 0;
  2317  0105  01D1               	clrf	(_ROBOTerror)^080h
  2318                           	line	244
  2319                           	
  2320  0106                     l11776:	
  2321                           ;Main.c: 244: RobotDrive(-200, 0x7FFF);
  2322  0106  3038               	movlw	low(-200)
  2323  0107  1283               	bcf	status, 5	;RP0=0, select bank0
  2324  0108  1303               	bcf	status, 6	;RP1=0, select bank0
  2325  0109  00A2               	movwf	(?_RobotDrive)
  2326  010A  30FF               	movlw	high(-200)
  2327  010B  00A3               	movwf	((?_RobotDrive))+1
  2328  010C  30FF               	movlw	low(07FFFh)
  2329  010D  00A4               	movwf	0+(?_RobotDrive)+02h
  2330  010E  307F               	movlw	high(07FFFh)
  2331  010F  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2332  0110  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  2333                           	line	245
  2334                           	
  2335  0115                     l11778:	
  2336                           ;Main.c: 245: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2337                           	opt asmopt_off
  2338  0115  301A               movlw  26
  2339  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  2340  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  2341  0118  00E5               movwf	((??_main+0)+0+2),f
  2342  0119  305E               movlw	94
  2343  011A  00E4               movwf	((??_main+0)+0+1),f
  2344  011B  3086               	movlw	134
  2345  011C  00E3               movwf	((??_main+0)+0),f
  2346  011D                     u5277:
  2347  011D  0BE3               	decfsz	((??_main+0)+0),f
  2348  011E  291D               	goto	u5277
  2349  011F  0BE4               	decfsz	((??_main+0)+0+1),f
  2350  0120  291D               	goto	u5277
  2351  0121  0BE5               	decfsz	((??_main+0)+0+2),f
  2352  0122  291D               	goto	u5277
  2353  0123  0064               	clrwdt
  2354                           opt asmopt_on
  2355                           
  2356                           	line	246
  2357                           	
  2358  0124                     l11780:	
  2359                           ;Main.c: 246: robotMoveSpeed(-200,-200);
  2360  0124  3038               	movlw	low(-200)
  2361  0125  1283               	bcf	status, 5	;RP0=0, select bank0
  2362  0126  1303               	bcf	status, 6	;RP1=0, select bank0
  2363  0127  00D9               	movwf	(?_robotMoveSpeed)
  2364  0128  30FF               	movlw	high(-200)
  2365  0129  00DA               	movwf	((?_robotMoveSpeed))+1
  2366  012A  3038               	movlw	low(-200)
  2367  012B  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2368  012C  30FF               	movlw	high(-200)
  2369  012D  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2370  012E  120A  158A  227B   	fcall	_robotMoveSpeed
              120A  118A         
  2371                           	line	247
  2372                           	
  2373  0133                     l11782:	
  2374                           ;Main.c: 247: robotTurnSpeed(80,400);
  2375  0133  3050               	movlw	low(050h)
  2376  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  2377  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  2378  0136  00D9               	movwf	(?_robotTurnSpeed)
  2379  0137  3000               	movlw	high(050h)
  2380  0138  00DA               	movwf	((?_robotTurnSpeed))+1
  2381  0139  3090               	movlw	low(0190h)
  2382  013A  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2383  013B  3001               	movlw	high(0190h)
  2384  013C  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2385  013D  120A  158A  21D3   	fcall	_robotTurnSpeed
              120A  118A         
  2386                           	line	248
  2387                           	
  2388  0142                     l11784:	
  2389                           ;Main.c: 248: robotMoveSpeed(300,200);
  2390  0142  302C               	movlw	low(012Ch)
  2391  0143  1283               	bcf	status, 5	;RP0=0, select bank0
  2392  0144  1303               	bcf	status, 6	;RP1=0, select bank0
  2393  0145  00D9               	movwf	(?_robotMoveSpeed)
  2394  0146  3001               	movlw	high(012Ch)
  2395  0147  00DA               	movwf	((?_robotMoveSpeed))+1
  2396  0148  30C8               	movlw	low(0C8h)
  2397  0149  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2398  014A  3000               	movlw	high(0C8h)
  2399  014B  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2400  014C  120A  158A  227B   	fcall	_robotMoveSpeed
              120A  118A         
  2401                           	line	249
  2402                           	
  2403  0151                     l11786:	
  2404                           ;Main.c: 249: readAvgDistance();
  2405  0151  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2406                           	line	250
  2407                           	
  2408  0156                     l11788:	
  2409                           ;Main.c: 250: robotFollow(200, adcVal - 10);
  2410  0156  30C8               	movlw	low(0C8h)
  2411  0157  1283               	bcf	status, 5	;RP0=0, select bank0
  2412  0158  1303               	bcf	status, 6	;RP1=0, select bank0
  2413  0159  00D9               	movwf	(?_robotFollow)
  2414  015A  3000               	movlw	high(0C8h)
  2415  015B  00DA               	movwf	((?_robotFollow))+1
  2416  015C  0869               	movf	(_adcVal),w	;volatile
  2417  015D  3EF6               	addlw	low(-10)
  2418  015E  00DB               	movwf	0+(?_robotFollow)+02h
  2419  015F  086A               	movf	(_adcVal+1),w	;volatile
  2420  0160  1803               	skipnc
  2421  0161  3E01               	addlw	1
  2422  0162  3EFF               	addlw	high(-10)
  2423  0163  00DC               	movwf	1+0+(?_robotFollow)+02h
  2424  0164  120A  158A  2456   	fcall	_robotFollow
              120A  118A         
  2425                           	line	251
  2426                           ;Main.c: 251: break;
  2427  0169  2A17               	goto	l11812
  2428                           	line	252
  2429                           ;Main.c: 252: case 10:
  2430                           	
  2431  016A                     l2266:	
  2432                           	line	254
  2433                           	
  2434  016A                     l11790:	
  2435                           ;Main.c: 254: robotTurnSpeed(80,400);
  2436  016A  3050               	movlw	low(050h)
  2437  016B  1283               	bcf	status, 5	;RP0=0, select bank0
  2438  016C  1303               	bcf	status, 6	;RP1=0, select bank0
  2439  016D  00D9               	movwf	(?_robotTurnSpeed)
  2440  016E  3000               	movlw	high(050h)
  2441  016F  00DA               	movwf	((?_robotTurnSpeed))+1
  2442  0170  3090               	movlw	low(0190h)
  2443  0171  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2444  0172  3001               	movlw	high(0190h)
  2445  0173  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2446  0174  120A  158A  21D3   	fcall	_robotTurnSpeed
              120A  118A         
  2447                           	line	256
  2448                           ;Main.c: 256: readAvgDistance();
  2449  0179  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2450                           	line	257
  2451                           ;Main.c: 257: robotFollow(200, adcVal - 10);
  2452  017E  30C8               	movlw	low(0C8h)
  2453  017F  1283               	bcf	status, 5	;RP0=0, select bank0
  2454  0180  1303               	bcf	status, 6	;RP1=0, select bank0
  2455  0181  00D9               	movwf	(?_robotFollow)
  2456  0182  3000               	movlw	high(0C8h)
  2457  0183  00DA               	movwf	((?_robotFollow))+1
  2458  0184  0869               	movf	(_adcVal),w	;volatile
  2459  0185  3EF6               	addlw	low(-10)
  2460  0186  00DB               	movwf	0+(?_robotFollow)+02h
  2461  0187  086A               	movf	(_adcVal+1),w	;volatile
  2462  0188  1803               	skipnc
  2463  0189  3E01               	addlw	1
  2464  018A  3EFF               	addlw	high(-10)
  2465  018B  00DC               	movwf	1+0+(?_robotFollow)+02h
  2466  018C  120A  158A  2456   	fcall	_robotFollow
              120A  118A         
  2467                           	line	258
  2468                           ;Main.c: 258: break;
  2469  0191  2A17               	goto	l11812
  2470                           	line	259
  2471                           ;Main.c: 259: case 11:
  2472                           	
  2473  0192                     l2267:	
  2474                           	line	260
  2475                           	
  2476  0192                     l11792:	
  2477                           ;Main.c: 260: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2478                           	opt asmopt_off
  2479  0192  301A               movlw  26
  2480  0193  1283               	bcf	status, 5	;RP0=0, select bank0
  2481  0194  1303               	bcf	status, 6	;RP1=0, select bank0
  2482  0195  00E5               movwf	((??_main+0)+0+2),f
  2483  0196  305E               movlw	94
  2484  0197  00E4               movwf	((??_main+0)+0+1),f
  2485  0198  3086               	movlw	134
  2486  0199  00E3               movwf	((??_main+0)+0),f
  2487  019A                     u5287:
  2488  019A  0BE3               	decfsz	((??_main+0)+0),f
  2489  019B  299A               	goto	u5287
  2490  019C  0BE4               	decfsz	((??_main+0)+0+1),f
  2491  019D  299A               	goto	u5287
  2492  019E  0BE5               	decfsz	((??_main+0)+0+2),f
  2493  019F  299A               	goto	u5287
  2494  01A0  0064               	clrwdt
  2495                           opt asmopt_on
  2496                           
  2497                           	line	261
  2498                           	
  2499  01A1                     l11794:	
  2500                           ;Main.c: 261: rotate(25, 0);
  2501  01A1  3019               	movlw	low(019h)
  2502  01A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2503  01A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2504  01A4  00A3               	movwf	(?_rotate)
  2505  01A5  3000               	movlw	high(019h)
  2506  01A6  00A4               	movwf	((?_rotate))+1
  2507  01A7  01A5               	clrf	0+(?_rotate)+02h
  2508  01A8  160A  118A  260F   	fcall	_rotate
              120A  118A         
  2509                           	line	262
  2510                           	
  2511  01AD                     l11796:	
  2512                           ;Main.c: 262: readAvgDistance();
  2513  01AD  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2514                           	line	263
  2515                           	
  2516  01B2                     l11798:	
  2517                           ;Main.c: 263: robot_turnRight(200, adcVal);
  2518  01B2  30C8               	movlw	low(0C8h)
  2519  01B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2520  01B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2521  01B5  00D9               	movwf	(?_robot_turnRight)
  2522  01B6  3000               	movlw	high(0C8h)
  2523  01B7  00DA               	movwf	((?_robot_turnRight))+1
  2524  01B8  086A               	movf	(_adcVal+1),w	;volatile
  2525  01B9  01DC               	clrf	1+(?_robot_turnRight)+02h
  2526  01BA  07DC               	addwf	1+(?_robot_turnRight)+02h
  2527  01BB  0869               	movf	(_adcVal),w	;volatile
  2528  01BC  01DB               	clrf	0+(?_robot_turnRight)+02h
  2529  01BD  07DB               	addwf	0+(?_robot_turnRight)+02h
  2530                           
  2531  01BE  120A  118A  246D   	fcall	_robot_turnRight
              120A  118A         
  2532                           	line	264
  2533                           	
  2534  01C3                     l11800:	
  2535                           ;Main.c: 264: rotate(25, 1);
  2536  01C3  3019               	movlw	low(019h)
  2537  01C4  1283               	bcf	status, 5	;RP0=0, select bank0
  2538  01C5  1303               	bcf	status, 6	;RP1=0, select bank0
  2539  01C6  00A3               	movwf	(?_rotate)
  2540  01C7  3000               	movlw	high(019h)
  2541  01C8  00A4               	movwf	((?_rotate))+1
  2542  01C9  01A5               	clrf	0+(?_rotate)+02h
  2543  01CA  1403               	bsf	status,0
  2544  01CB  0DA5               	rlf	0+(?_rotate)+02h,f
  2545  01CC  160A  118A  260F   	fcall	_rotate
              120A  118A         
  2546                           	line	265
  2547                           	
  2548  01D1                     l11802:	
  2549                           ;Main.c: 265: readAvgDistance();
  2550  01D1  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2551                           	line	266
  2552                           	
  2553  01D6                     l11804:	
  2554                           ;Main.c: 266: robotFollow(200, adcVal);
  2555  01D6  30C8               	movlw	low(0C8h)
  2556  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2557  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2558  01D9  00D9               	movwf	(?_robotFollow)
  2559  01DA  3000               	movlw	high(0C8h)
  2560  01DB  00DA               	movwf	((?_robotFollow))+1
  2561  01DC  086A               	movf	(_adcVal+1),w	;volatile
  2562  01DD  01DC               	clrf	1+(?_robotFollow)+02h
  2563  01DE  07DC               	addwf	1+(?_robotFollow)+02h
  2564  01DF  0869               	movf	(_adcVal),w	;volatile
  2565  01E0  01DB               	clrf	0+(?_robotFollow)+02h
  2566  01E1  07DB               	addwf	0+(?_robotFollow)+02h
  2567                           
  2568  01E2  120A  158A  2456   	fcall	_robotFollow
              120A  118A         
  2569                           	line	278
  2570                           ;Main.c: 278: break;
  2571  01E7  2A17               	goto	l11812
  2572                           	line	279
  2573                           ;Main.c: 279: default:
  2574                           	
  2575  01E8                     l2268:	
  2576                           	line	280
  2577                           	
  2578  01E8                     l11806:	
  2579                           ;Main.c: 280: readAvgDistance();
  2580  01E8  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2581                           	line	281
  2582                           ;Main.c: 281: robotFollow(200, adcVal);
  2583  01ED  30C8               	movlw	low(0C8h)
  2584  01EE  1283               	bcf	status, 5	;RP0=0, select bank0
  2585  01EF  1303               	bcf	status, 6	;RP1=0, select bank0
  2586  01F0  00D9               	movwf	(?_robotFollow)
  2587  01F1  3000               	movlw	high(0C8h)
  2588  01F2  00DA               	movwf	((?_robotFollow))+1
  2589  01F3  086A               	movf	(_adcVal+1),w	;volatile
  2590  01F4  01DC               	clrf	1+(?_robotFollow)+02h
  2591  01F5  07DC               	addwf	1+(?_robotFollow)+02h
  2592  01F6  0869               	movf	(_adcVal),w	;volatile
  2593  01F7  01DB               	clrf	0+(?_robotFollow)+02h
  2594  01F8  07DB               	addwf	0+(?_robotFollow)+02h
  2595                           
  2596  01F9  120A  158A  2456   	fcall	_robotFollow
              120A  118A         
  2597                           	line	282
  2598                           ;Main.c: 282: break;
  2599  01FE  2A17               	goto	l11812
  2600                           	line	284
  2601                           	
  2602  01FF                     l11808:	
  2603                           ;Main.c: 284: }
  2604  01FF  2A17               	goto	l11812
  2605                           	line	230
  2606                           	
  2607  0200                     l2260:	
  2608                           	
  2609  0200                     l11810:	
  2610  0200  1683               	bsf	status, 5	;RP0=1, select bank1
  2611  0201  1303               	bcf	status, 6	;RP1=0, select bank1
  2612  0202  0851               	movf	(_ROBOTerror)^080h,w
  2613                           	; Switch size 1, requested type "space"
  2614                           ; Number of cases is 6, Range of values is 0 to 11
  2615                           ; switch strategies available:
  2616                           ; Name         Instructions Cycles
  2617                           ; simple_byte           19    10 (average)
  2618                           ; direct_byte           44     8 (fixed)
  2619                           ; jumptable            260     6 (fixed)
  2620                           ; rangetable            16     6 (fixed)
  2621                           ; spacedrange           30     9 (fixed)
  2622                           ; locatedrange          12     3 (fixed)
  2623                           ;	Chosen strategy is simple_byte
  2624                           
  2625                           	opt asmopt_off
  2626  0203  3A00               	xorlw	0^0	; case 0
  2627  0204  1903               	skipnz
  2628  0205  28E4               	goto	l11770
  2629  0206  3A01               	xorlw	1^0	; case 1
  2630  0207  1903               	skipnz
  2631  0208  28FB               	goto	l11772
  2632  0209  3A03               	xorlw	2^1	; case 2
  2633  020A  1903               	skipnz
  2634  020B  2901               	goto	l11774
  2635  020C  3A01               	xorlw	3^2	; case 3
  2636  020D  1903               	skipnz
  2637  020E  2905               	goto	l2265
  2638  020F  3A09               	xorlw	10^3	; case 10
  2639  0210  1903               	skipnz
  2640  0211  296A               	goto	l11790
  2641  0212  3A01               	xorlw	11^10	; case 11
  2642  0213  1903               	skipnz
  2643  0214  2992               	goto	l11792
  2644  0215  29E8               	goto	l11806
  2645                           	opt asmopt_on
  2646                           
  2647                           	line	284
  2648                           	
  2649  0216                     l2262:	
  2650  0216  2A17               	goto	l11812
  2651                           	line	285
  2652                           	
  2653  0217                     l2258:	
  2654                           	line	228
  2655                           	
  2656  0217                     l11812:	
  2657  0217  1683               	bsf	status, 5	;RP0=1, select bank1
  2658  0218  1303               	bcf	status, 6	;RP1=0, select bank1
  2659  0219  0851               	movf	(_ROBOTerror)^080h,w
  2660  021A  3A01               	xorlw	01h
  2661  021B  1D03               	skipz
  2662  021C  2A1E               	goto	u5231
  2663  021D  2A1F               	goto	u5230
  2664  021E                     u5231:
  2665  021E  2A00               	goto	l11810
  2666  021F                     u5230:
  2667                           	
  2668  021F                     l2269:	
  2669                           	line	286
  2670                           ;Main.c: 285: }
  2671                           ;Main.c: 286: ROBOTerror = 0;
  2672  021F  01D1               	clrf	(_ROBOTerror)^080h
  2673                           	line	287
  2674                           ;Main.c: 287: break;
  2675  0220  2A3F               	goto	l11820
  2676                           	line	289
  2677                           ;Main.c: 289: case 5:
  2678                           	
  2679  0221                     l2270:	
  2680                           	line	290
  2681                           	
  2682  0221                     l11814:	
  2683                           ;Main.c: 290: ChargeMode();
  2684  0221  160A  118A  2516   	fcall	_ChargeMode
              120A  118A         
  2685                           	line	291
  2686                           ;Main.c: 291: break;
  2687  0226  2A3F               	goto	l11820
  2688                           	line	292
  2689                           ;Main.c: 292: default:
  2690                           	
  2691  0227                     l2271:	
  2692                           	line	294
  2693                           ;Main.c: 294: break;
  2694  0227  2A3F               	goto	l11820
  2695                           	line	295
  2696                           	
  2697  0228                     l11816:	
  2698                           ;Main.c: 295: }
  2699  0228  2A3F               	goto	l11820
  2700                           	line	198
  2701                           	
  2702  0229                     l2251:	
  2703                           	
  2704  0229                     l11818:	
  2705  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  022A  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  022B  0868               	movf	(main@choice),w
  2708                           	; Switch size 1, requested type "space"
  2709                           ; Number of cases is 6, Range of values is 0 to 5
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte           19    10 (average)
  2713                           ; direct_byte           26     8 (fixed)
  2714                           ; jumptable            260     6 (fixed)
  2715                           ; rangetable            10     6 (fixed)
  2716                           ; spacedrange           18     9 (fixed)
  2717                           ; locatedrange           6     3 (fixed)
  2718                           ;	Chosen strategy is simple_byte
  2719                           
  2720                           	opt asmopt_off
  2721  022C  3A00               	xorlw	0^0	; case 0
  2722  022D  1903               	skipnz
  2723  022E  2850               	goto	l11752
  2724  022F  3A01               	xorlw	1^0	; case 1
  2725  0230  1903               	skipnz
  2726  0231  2856               	goto	l11754
  2727  0232  3A03               	xorlw	2^1	; case 2
  2728  0233  1903               	skipnz
  2729  0234  2863               	goto	l11756
  2730  0235  3A01               	xorlw	3^2	; case 3
  2731  0236  1903               	skipnz
  2732  0237  2873               	goto	l11758
  2733  0238  3A07               	xorlw	4^3	; case 4
  2734  0239  1903               	skipnz
  2735  023A  28DD               	goto	l11768
  2736  023B  3A01               	xorlw	5^4	; case 5
  2737  023C  1903               	skipnz
  2738  023D  2A21               	goto	l11814
  2739  023E  2A3F               	goto	l11820
  2740                           	opt asmopt_on
  2741                           
  2742                           	line	295
  2743                           	
  2744  023F                     l2253:	
  2745                           	line	296
  2746                           	
  2747  023F                     l11820:	
  2748                           ;Main.c: 296: choice = 255;
  2749  023F  30FF               	movlw	(0FFh)
  2750  0240  1283               	bcf	status, 5	;RP0=0, select bank0
  2751  0241  1303               	bcf	status, 6	;RP1=0, select bank0
  2752  0242  00E3               	movwf	(??_main+0)+0
  2753  0243  0863               	movf	(??_main+0)+0,w
  2754  0244  00E8               	movwf	(main@choice)
  2755  0245  2828               	goto	l11736
  2756                           	line	297
  2757                           	
  2758  0246                     l2272:	
  2759                           	line	180
  2760  0246  2828               	goto	l11736
  2761                           	
  2762  0247                     l2273:	
  2763                           	line	298
  2764                           	
  2765  0247                     l2274:	
  2766                           	global	start
  2767  0247  120A  118A  2812   	ljmp	start
  2768                           	opt stack 0
  2769                           GLOBAL	__end_of_main
  2770  024A                     	__end_of_main:
  2771 ;; =============== function _main ends ============
  2772                           
  2773                           	signat	_main,88
  2774                           	global	_Init_Follow_IR
  2775                           psect	text1039,local,class=CODE,delta=2
  2776                           global __ptext1039
  2777  1194                     __ptext1039:
  2778                           
  2779 ;; *************** function _Init_Follow_IR *****************
  2780 ;; Defined at:
  2781 ;;		line 301 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0
  2797 ;;      Temps:          0       3       0       0       0
  2798 ;;      Totals:         0       3       0       0       0
  2799 ;;Total ram usage:        3 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    7
  2802 ;; This function calls:
  2803 ;;		_calibrateIR
  2804 ;;		_rotate
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           psect	text1039
  2810                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2811                           	line	301
  2812                           	global	__size_of_Init_Follow_IR
  2813  0021                     	__size_of_Init_Follow_IR	equ	__end_of_Init_Follow_IR-_Init_Follow_IR
  2814                           	
  2815  1194                     _Init_Follow_IR:	
  2816                           	opt	stack 0
  2817                           ; Regs used in _Init_Follow_IR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2818                           	line	302
  2819                           	
  2820  1194                     l11722:	
  2821                           ;Main.c: 302: calibrateIR();
  2822  1194  160A  118A  25B1   	fcall	_calibrateIR
              160A  118A         
  2823                           	line	303
  2824                           	
  2825  1199                     l11724:	
  2826                           ;Main.c: 303: _delay((unsigned long)((500)*(20000000/4000.0)));
  2827                           	opt asmopt_off
  2828  1199  300D               movlw  13
  2829  119A  1283               	bcf	status, 5	;RP0=0, select bank0
  2830  119B  1303               	bcf	status, 6	;RP1=0, select bank0
  2831  119C  00DB               movwf	((??_Init_Follow_IR+0)+0+2),f
  2832  119D  30AF               movlw	175
  2833  119E  00DA               movwf	((??_Init_Follow_IR+0)+0+1),f
  2834  119F  30C1               	movlw	193
  2835  11A0  00D9               movwf	((??_Init_Follow_IR+0)+0),f
  2836  11A1                     u5297:
  2837  11A1  0BD9               	decfsz	((??_Init_Follow_IR+0)+0),f
  2838  11A2  29A1               	goto	u5297
  2839  11A3  0BDA               	decfsz	((??_Init_Follow_IR+0)+0+1),f
  2840  11A4  29A1               	goto	u5297
  2841  11A5  0BDB               	decfsz	((??_Init_Follow_IR+0)+0+2),f
  2842  11A6  29A1               	goto	u5297
  2843  11A7  0064               	clrwdt
  2844                           opt asmopt_on
  2845                           
  2846                           	line	304
  2847                           	
  2848  11A8                     l11726:	
  2849                           ;Main.c: 304: rotate(25, 0);
  2850  11A8  3019               	movlw	low(019h)
  2851  11A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2852  11AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2853  11AB  00A3               	movwf	(?_rotate)
  2854  11AC  3000               	movlw	high(019h)
  2855  11AD  00A4               	movwf	((?_rotate))+1
  2856  11AE  01A5               	clrf	0+(?_rotate)+02h
  2857  11AF  160A  118A  260F   	fcall	_rotate
              160A  118A         
  2858                           	line	305
  2859                           	
  2860  11B4                     l2277:	
  2861  11B4  0008               	return
  2862                           	opt stack 0
  2863                           GLOBAL	__end_of_Init_Follow_IR
  2864  11B5                     	__end_of_Init_Follow_IR:
  2865 ;; =============== function _Init_Follow_IR ends ============
  2866                           
  2867                           	signat	_Init_Follow_IR,88
  2868                           	global	_ChargeMode
  2869                           psect	text1040,local,class=CODE,delta=2
  2870                           global __ptext1040
  2871  1516                     __ptext1040:
  2872                           
  2873 ;; *************** function _ChargeMode *****************
  2874 ;; Defined at:
  2875 ;;		line 358 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       1       0       0       0
  2892 ;;      Totals:         0       1       0       0       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    6
  2896 ;; This function calls:
  2897 ;;		_ser_putch
  2898 ;;		_RobotBattRead
  2899 ;;		_UpdateDisplay
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           psect	text1040
  2905                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2906                           	line	358
  2907                           	global	__size_of_ChargeMode
  2908  004B                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2909                           	
  2910  1516                     _ChargeMode:	
  2911                           	opt	stack 1
  2912                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2913                           	line	360
  2914                           	
  2915  1516                     l11700:	
  2916                           ;Main.c: 360: currentMenu = 2;
  2917  1516  3002               	movlw	(02h)
  2918  1517  1283               	bcf	status, 5	;RP0=0, select bank0
  2919  1518  1303               	bcf	status, 6	;RP1=0, select bank0
  2920  1519  00D9               	movwf	(??_ChargeMode+0)+0
  2921  151A  0859               	movf	(??_ChargeMode+0)+0,w
  2922  151B  1683               	bsf	status, 5	;RP0=1, select bank1
  2923  151C  1303               	bcf	status, 6	;RP1=0, select bank1
  2924  151D  00D4               	movwf	(_currentMenu)^080h	;volatile
  2925                           	line	361
  2926                           	
  2927  151E                     l11702:	
  2928                           ;Main.c: 361: ser_putch(128);
  2929  151E  3080               	movlw	(080h)
  2930  151F  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  2931  1524  2D25               	goto	l11704
  2932                           	line	363
  2933                           ;Main.c: 363: while (1)
  2934                           	
  2935  1525                     l2298:	
  2936                           	line	365
  2937                           	
  2938  1525                     l11704:	
  2939                           ;Main.c: 364: {
  2940                           ;Main.c: 365: if (RTC_FLAG_250MS == 1)
  2941  1525  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2942  1526  2D28               	goto	u5201
  2943  1527  2D29               	goto	u5200
  2944  1528                     u5201:
  2945  1528  2D4D               	goto	l11720
  2946  1529                     u5200:
  2947                           	line	367
  2948                           	
  2949  1529                     l11706:	
  2950                           ;Main.c: 366: {
  2951                           ;Main.c: 367: RTC_FLAG_250MS = 0;
  2952  1529  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2953                           	line	368
  2954                           	
  2955  152A                     l11708:	
  2956                           ;Main.c: 368: RobotBattRead();
  2957  152A  120A  118A  2774   	fcall	_RobotBattRead
              160A  118A         
  2958                           	line	369
  2959                           ;Main.c: 369: UpdateDisplay();
  2960  152F  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  2961  1534  2D4D               	goto	l11720
  2962                           	line	370
  2963                           	
  2964  1535                     l2299:	
  2965                           	line	371
  2966                           ;Main.c: 370: }
  2967                           ;Main.c: 371: switch (buttonPressed)
  2968  1535  2D4D               	goto	l11720
  2969                           	line	373
  2970                           ;Main.c: 372: {
  2971                           ;Main.c: 373: case 1:
  2972                           	
  2973  1536                     l2301:	
  2974                           	line	374
  2975                           ;Main.c: 374: buttonPressed = 0;
  2976  1536  01FD               	clrf	(_buttonPressed)	;volatile
  2977                           	line	375
  2978                           ;Main.c: 375: break;
  2979  1537  2D25               	goto	l11704
  2980                           	line	376
  2981                           ;Main.c: 376: case 2:
  2982                           	
  2983  1538                     l2303:	
  2984                           	line	377
  2985                           ;Main.c: 377: buttonPressed = 0;
  2986  1538  01FD               	clrf	(_buttonPressed)	;volatile
  2987                           	line	378
  2988                           ;Main.c: 378: break;
  2989  1539  2D25               	goto	l11704
  2990                           	line	379
  2991                           ;Main.c: 379: case 3:
  2992                           	
  2993  153A                     l2304:	
  2994                           	line	380
  2995                           ;Main.c: 380: buttonPressed = 0;
  2996  153A  01FD               	clrf	(_buttonPressed)	;volatile
  2997                           	line	381
  2998                           ;Main.c: 381: break;
  2999  153B  2D25               	goto	l11704
  3000                           	line	382
  3001                           ;Main.c: 382: case 4:
  3002                           	
  3003  153C                     l2305:	
  3004                           	line	383
  3005                           ;Main.c: 383: buttonPressed = 0;
  3006  153C  01FD               	clrf	(_buttonPressed)	;volatile
  3007                           	line	384
  3008                           ;Main.c: 384: break;
  3009  153D  2D25               	goto	l11704
  3010                           	line	385
  3011                           ;Main.c: 385: case 5:
  3012                           	
  3013  153E                     l2306:	
  3014                           	line	386
  3015                           	
  3016  153E                     l11710:	
  3017                           ;Main.c: 386: ser_putch(132);
  3018  153E  3084               	movlw	(084h)
  3019  153F  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  3020                           	line	387
  3021                           	
  3022  1544                     l11712:	
  3023                           ;Main.c: 387: buttonPressed = 0;
  3024  1544  01FD               	clrf	(_buttonPressed)	;volatile
  3025                           	line	388
  3026                           	
  3027  1545                     l11714:	
  3028                           ;Main.c: 388: currentMenu = 0;
  3029  1545  1683               	bsf	status, 5	;RP0=1, select bank1
  3030  1546  1303               	bcf	status, 6	;RP1=0, select bank1
  3031  1547  01D4               	clrf	(_currentMenu)^080h	;volatile
  3032  1548  2D60               	goto	l2307
  3033                           	line	389
  3034                           	
  3035  1549                     l11716:	
  3036                           ;Main.c: 389: return;
  3037  1549  2D60               	goto	l2307
  3038                           	line	390
  3039                           ;Main.c: 390: default:
  3040                           	
  3041  154A                     l2308:	
  3042                           	line	391
  3043                           ;Main.c: 391: buttonPressed = 0;
  3044  154A  01FD               	clrf	(_buttonPressed)	;volatile
  3045                           	line	392
  3046                           ;Main.c: 392: break;
  3047  154B  2D25               	goto	l11704
  3048                           	line	393
  3049                           	
  3050  154C                     l11718:	
  3051                           ;Main.c: 393: }
  3052  154C  2D25               	goto	l11704
  3053                           	line	371
  3054                           	
  3055  154D                     l2300:	
  3056                           	
  3057  154D                     l11720:	
  3058  154D  087D               	movf	(_buttonPressed),w	;volatile
  3059                           	; Switch size 1, requested type "space"
  3060                           ; Number of cases is 5, Range of values is 1 to 5
  3061                           ; switch strategies available:
  3062                           ; Name         Instructions Cycles
  3063                           ; simple_byte           16     9 (average)
  3064                           ; direct_byte           26    11 (fixed)
  3065                           ; jumptable            263     9 (fixed)
  3066                           ;	Chosen strategy is simple_byte
  3067                           
  3068                           	opt asmopt_off
  3069  154E  3A01               	xorlw	1^0	; case 1
  3070  154F  1903               	skipnz
  3071  1550  2D36               	goto	l2301
  3072  1551  3A03               	xorlw	2^1	; case 2
  3073  1552  1903               	skipnz
  3074  1553  2D38               	goto	l2303
  3075  1554  3A01               	xorlw	3^2	; case 3
  3076  1555  1903               	skipnz
  3077  1556  2D3A               	goto	l2304
  3078  1557  3A07               	xorlw	4^3	; case 4
  3079  1558  1903               	skipnz
  3080  1559  2D3C               	goto	l2305
  3081  155A  3A01               	xorlw	5^4	; case 5
  3082  155B  1903               	skipnz
  3083  155C  2D3E               	goto	l11710
  3084  155D  2D4A               	goto	l2308
  3085                           	opt asmopt_on
  3086                           
  3087                           	line	393
  3088                           	
  3089  155E                     l2302:	
  3090  155E  2D25               	goto	l11704
  3091                           	line	394
  3092                           	
  3093  155F                     l2309:	
  3094                           	line	363
  3095  155F  2D25               	goto	l11704
  3096                           	
  3097  1560                     l2310:	
  3098                           	line	395
  3099                           	
  3100  1560                     l2307:	
  3101  1560  0008               	return
  3102                           	opt stack 0
  3103                           GLOBAL	__end_of_ChargeMode
  3104  1561                     	__end_of_ChargeMode:
  3105 ;; =============== function _ChargeMode ends ============
  3106                           
  3107                           	signat	_ChargeMode,88
  3108                           	global	_robot_turnRight
  3109                           psect	text1041,local,class=CODE,delta=2
  3110                           global __ptext1041
  3111  046D                     __ptext1041:
  3112                           
  3113 ;; *************** function _robot_turnRight *****************
  3114 ;; Defined at:
  3115 ;;		line 267 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  speed           2   57[BANK0 ] int 
  3118 ;;  AdcTarget       2   59[BANK0 ] int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  temp1           2   64[BANK0 ] int 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;		None               void
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0       4       0       0       0
  3131 ;;      Locals:         0       2       0       0       0
  3132 ;;      Temps:          0       3       0       0       0
  3133 ;;      Totals:         0       9       0       0       0
  3134 ;;Total ram usage:        9 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    7
  3137 ;; This function calls:
  3138 ;;		_RobotDrive
  3139 ;;		_readAvgDistance
  3140 ;;		_ser_putch
  3141 ;;		_robot_read
  3142 ;;		_UpdateDisplay
  3143 ;;		_abs
  3144 ;; This function is called by:
  3145 ;;		_main
  3146 ;;		_RightTurn
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           psect	text1041
  3150                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3151                           	line	267
  3152                           	global	__size_of_robot_turnRight
  3153  0207                     	__size_of_robot_turnRight	equ	__end_of_robot_turnRight-_robot_turnRight
  3154                           	
  3155  046D                     _robot_turnRight:	
  3156                           	opt	stack 0
  3157                           ; Regs used in _robot_turnRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3158                           	line	268
  3159                           	
  3160  046D                     l11608:	
  3161                           ;robot.c: 268: angleTurned = 0;
  3162  046D  1683               	bsf	status, 5	;RP0=1, select bank1
  3163  046E  1303               	bcf	status, 6	;RP1=0, select bank1
  3164  046F  01BE               	clrf	(_angleTurned)^080h
  3165  0470  01BF               	clrf	(_angleTurned+1)^080h
  3166                           	line	270
  3167                           	
  3168  0471                     l11610:	
  3169                           ;robot.c: 269: int temp1;
  3170                           ;robot.c: 270: RobotDrive(speed, 0x7FFF);
  3171  0471  1283               	bcf	status, 5	;RP0=0, select bank0
  3172  0472  1303               	bcf	status, 6	;RP1=0, select bank0
  3173  0473  085A               	movf	(robot_turnRight@speed+1),w
  3174  0474  01A3               	clrf	(?_RobotDrive+1)
  3175  0475  07A3               	addwf	(?_RobotDrive+1)
  3176  0476  0859               	movf	(robot_turnRight@speed),w
  3177  0477  01A2               	clrf	(?_RobotDrive)
  3178  0478  07A2               	addwf	(?_RobotDrive)
  3179                           
  3180  0479  30FF               	movlw	low(07FFFh)
  3181  047A  00A4               	movwf	0+(?_RobotDrive)+02h
  3182  047B  307F               	movlw	high(07FFFh)
  3183  047C  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3184  047D  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  3185                           	line	271
  3186                           	
  3187  0482                     l11612:	
  3188                           ;robot.c: 271: ROBOTerror = 0;
  3189  0482  1683               	bsf	status, 5	;RP0=1, select bank1
  3190  0483  1303               	bcf	status, 6	;RP1=0, select bank1
  3191  0484  01D1               	clrf	(_ROBOTerror)^080h
  3192  0485  2C86               	goto	l11614
  3193                           	line	274
  3194                           ;robot.c: 274: while (1)
  3195                           	
  3196  0486                     l6125:	
  3197                           	line	276
  3198                           	
  3199  0486                     l11614:	
  3200                           ;robot.c: 275: {
  3201                           ;robot.c: 276: readAvgDistance();
  3202  0486  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  3203                           	line	277
  3204                           	
  3205  048B                     l11616:	
  3206                           ;robot.c: 277: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 15))
  3207  048B  1283               	bcf	status, 5	;RP0=0, select bank0
  3208  048C  1303               	bcf	status, 6	;RP1=0, select bank0
  3209  048D  086A               	movf	(_adcVal+1),w	;volatile
  3210  048E  025C               	subwf	(robot_turnRight@AdcTarget+1),w
  3211  048F  1D03               	skipz
  3212  0490  2C93               	goto	u5095
  3213  0491  0869               	movf	(_adcVal),w	;volatile
  3214  0492  025B               	subwf	(robot_turnRight@AdcTarget),w
  3215  0493                     u5095:
  3216  0493  1803               	skipnc
  3217  0494  2C96               	goto	u5091
  3218  0495  2C97               	goto	u5090
  3219  0496                     u5091:
  3220  0496  2CB9               	goto	l11622
  3221  0497                     u5090:
  3222                           	
  3223  0497                     l11618:	
  3224  0497  085B               	movf	(robot_turnRight@AdcTarget),w
  3225  0498  3E0F               	addlw	low(0Fh)
  3226  0499  00DD               	movwf	(??_robot_turnRight+0)+0
  3227  049A  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3228  049B  1803               	skipnc
  3229  049C  3E01               	addlw	1
  3230  049D  3E00               	addlw	high(0Fh)
  3231  049E  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3232  049F  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3233  04A0  026A               	subwf	(_adcVal+1),w	;volatile
  3234  04A1  1D03               	skipz
  3235  04A2  2CA5               	goto	u5105
  3236  04A3  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3237  04A4  0269               	subwf	(_adcVal),w	;volatile
  3238  04A5                     u5105:
  3239  04A5  1803               	skipnc
  3240  04A6  2CA8               	goto	u5101
  3241  04A7  2CA9               	goto	u5100
  3242  04A8                     u5101:
  3243  04A8  2CB9               	goto	l11622
  3244  04A9                     u5100:
  3245                           	line	279
  3246                           	
  3247  04A9                     l11620:	
  3248                           ;robot.c: 278: {
  3249                           ;robot.c: 279: RobotDrive(speed, 1700);
  3250  04A9  085A               	movf	(robot_turnRight@speed+1),w
  3251  04AA  01A3               	clrf	(?_RobotDrive+1)
  3252  04AB  07A3               	addwf	(?_RobotDrive+1)
  3253  04AC  0859               	movf	(robot_turnRight@speed),w
  3254  04AD  01A2               	clrf	(?_RobotDrive)
  3255  04AE  07A2               	addwf	(?_RobotDrive)
  3256                           
  3257  04AF  30A4               	movlw	low(06A4h)
  3258  04B0  00A4               	movwf	0+(?_RobotDrive)+02h
  3259  04B1  3006               	movlw	high(06A4h)
  3260  04B2  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3261  04B3  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  3262                           	line	280
  3263                           ;robot.c: 280: }
  3264  04B8  2D0A               	goto	l6127
  3265                           	line	281
  3266                           	
  3267  04B9                     l6126:	
  3268                           	
  3269  04B9                     l11622:	
  3270                           ;robot.c: 281: else if (adcVal < (AdcTarget))
  3271  04B9  1283               	bcf	status, 5	;RP0=0, select bank0
  3272  04BA  1303               	bcf	status, 6	;RP1=0, select bank0
  3273  04BB  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3274  04BC  026A               	subwf	(_adcVal+1),w	;volatile
  3275  04BD  1D03               	skipz
  3276  04BE  2CC1               	goto	u5115
  3277  04BF  085B               	movf	(robot_turnRight@AdcTarget),w
  3278  04C0  0269               	subwf	(_adcVal),w	;volatile
  3279  04C1                     u5115:
  3280  04C1  1803               	skipnc
  3281  04C2  2CC4               	goto	u5111
  3282  04C3  2CC5               	goto	u5110
  3283  04C4                     u5111:
  3284  04C4  2CD5               	goto	l11626
  3285  04C5                     u5110:
  3286                           	line	283
  3287                           	
  3288  04C5                     l11624:	
  3289                           ;robot.c: 282: {
  3290                           ;robot.c: 283: RobotDrive(speed, -1700);
  3291  04C5  085A               	movf	(robot_turnRight@speed+1),w
  3292  04C6  01A3               	clrf	(?_RobotDrive+1)
  3293  04C7  07A3               	addwf	(?_RobotDrive+1)
  3294  04C8  0859               	movf	(robot_turnRight@speed),w
  3295  04C9  01A2               	clrf	(?_RobotDrive)
  3296  04CA  07A2               	addwf	(?_RobotDrive)
  3297                           
  3298  04CB  305C               	movlw	low(-1700)
  3299  04CC  00A4               	movwf	0+(?_RobotDrive)+02h
  3300  04CD  30F9               	movlw	high(-1700)
  3301  04CE  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3302  04CF  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  3303                           	line	284
  3304                           ;robot.c: 284: }
  3305  04D4  2D0A               	goto	l6127
  3306                           	line	285
  3307                           	
  3308  04D5                     l6128:	
  3309                           	
  3310  04D5                     l11626:	
  3311                           ;robot.c: 285: else if (adcVal >= (AdcTarget + 15))
  3312  04D5  1283               	bcf	status, 5	;RP0=0, select bank0
  3313  04D6  1303               	bcf	status, 6	;RP1=0, select bank0
  3314  04D7  085B               	movf	(robot_turnRight@AdcTarget),w
  3315  04D8  3E0F               	addlw	low(0Fh)
  3316  04D9  00DD               	movwf	(??_robot_turnRight+0)+0
  3317  04DA  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3318  04DB  1803               	skipnc
  3319  04DC  3E01               	addlw	1
  3320  04DD  3E00               	addlw	high(0Fh)
  3321  04DE  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3322  04DF  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3323  04E0  026A               	subwf	(_adcVal+1),w	;volatile
  3324  04E1  1D03               	skipz
  3325  04E2  2CE5               	goto	u5125
  3326  04E3  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3327  04E4  0269               	subwf	(_adcVal),w	;volatile
  3328  04E5                     u5125:
  3329  04E5  1C03               	skipc
  3330  04E6  2CE8               	goto	u5121
  3331  04E7  2CE9               	goto	u5120
  3332  04E8                     u5121:
  3333  04E8  2CF7               	goto	l11632
  3334  04E9                     u5120:
  3335                           	line	287
  3336                           	
  3337  04E9                     l11628:	
  3338                           ;robot.c: 286: {
  3339                           ;robot.c: 287: ser_putch(141);
  3340  04E9  308D               	movlw	(08Dh)
  3341  04EA  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  3342                           	line	289
  3343                           ;robot.c: 289: ser_putch(0);
  3344  04EF  3000               	movlw	(0)
  3345  04F0  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  3346                           	line	291
  3347                           ;robot.c: 291: break;
  3348  04F5  2DA4               	goto	l11664
  3349                           	line	292
  3350                           	
  3351  04F6                     l11630:	
  3352                           ;robot.c: 292: }
  3353  04F6  2D0A               	goto	l6127
  3354                           	line	293
  3355                           	
  3356  04F7                     l6130:	
  3357                           	line	295
  3358                           	
  3359  04F7                     l11632:	
  3360                           ;robot.c: 293: else
  3361                           ;robot.c: 294: {
  3362                           ;robot.c: 295: RobotDrive(speed, 0x7FFF);
  3363  04F7  1283               	bcf	status, 5	;RP0=0, select bank0
  3364  04F8  1303               	bcf	status, 6	;RP1=0, select bank0
  3365  04F9  085A               	movf	(robot_turnRight@speed+1),w
  3366  04FA  01A3               	clrf	(?_RobotDrive+1)
  3367  04FB  07A3               	addwf	(?_RobotDrive+1)
  3368  04FC  0859               	movf	(robot_turnRight@speed),w
  3369  04FD  01A2               	clrf	(?_RobotDrive)
  3370  04FE  07A2               	addwf	(?_RobotDrive)
  3371                           
  3372  04FF  30FF               	movlw	low(07FFFh)
  3373  0500  00A4               	movwf	0+(?_RobotDrive)+02h
  3374  0501  307F               	movlw	high(07FFFh)
  3375  0502  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3376  0503  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  3377  0508  2D0A               	goto	l6127
  3378                           	line	296
  3379                           	
  3380  0509                     l6132:	
  3381  0509  2D0A               	goto	l6127
  3382                           	
  3383  050A                     l6129:	
  3384                           	
  3385  050A                     l6127:	
  3386                           	line	297
  3387                           ;robot.c: 296: }
  3388                           ;robot.c: 297: robot_read(2);
  3389  050A  3002               	movlw	(02h)
  3390  050B  120A  158A  2358   	fcall	_robot_read
              120A  118A         
  3391                           	line	298
  3392                           	
  3393  0510                     l11634:	
  3394                           ;robot.c: 298: if (BumpSensors)
  3395  0510  1283               	bcf	status, 5	;RP0=0, select bank0
  3396  0511  1303               	bcf	status, 6	;RP1=0, select bank0
  3397  0512  086B               	movf	(_BumpSensors),w	;volatile
  3398  0513  1D03               	skipz
  3399  0514  2D16               	goto	u5130
  3400  0515  2D1C               	goto	l11638
  3401  0516                     u5130:
  3402                           	line	300
  3403                           	
  3404  0516                     l11636:	
  3405                           ;robot.c: 299: {
  3406                           ;robot.c: 300: ROBOTerror = 1;
  3407  0516  1683               	bsf	status, 5	;RP0=1, select bank1
  3408  0517  1303               	bcf	status, 6	;RP1=0, select bank1
  3409  0518  01D1               	clrf	(_ROBOTerror)^080h
  3410  0519  1403               	bsf	status,0
  3411  051A  0DD1               	rlf	(_ROBOTerror)^080h,f
  3412                           	line	301
  3413                           ;robot.c: 301: break;
  3414  051B  2DA4               	goto	l11664
  3415                           	line	302
  3416                           	
  3417  051C                     l6133:	
  3418                           	line	303
  3419                           	
  3420  051C                     l11638:	
  3421                           ;robot.c: 302: }
  3422                           ;robot.c: 303: if (VwallSensor)
  3423  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  3424  051D  086F               	movf	(_VwallSensor),w	;volatile
  3425  051E  1D03               	skipz
  3426  051F  2D21               	goto	u5140
  3427  0520  2D28               	goto	l11642
  3428  0521                     u5140:
  3429                           	line	305
  3430                           	
  3431  0521                     l11640:	
  3432                           ;robot.c: 304: {
  3433                           ;robot.c: 305: ROBOTerror = 2;
  3434  0521  3002               	movlw	(02h)
  3435  0522  00DD               	movwf	(??_robot_turnRight+0)+0
  3436  0523  085D               	movf	(??_robot_turnRight+0)+0,w
  3437  0524  1683               	bsf	status, 5	;RP0=1, select bank1
  3438  0525  1303               	bcf	status, 6	;RP1=0, select bank1
  3439  0526  00D1               	movwf	(_ROBOTerror)^080h
  3440                           	line	306
  3441                           ;robot.c: 306: break;
  3442  0527  2DA4               	goto	l11664
  3443                           	line	307
  3444                           	
  3445  0528                     l6134:	
  3446                           	line	308
  3447                           	
  3448  0528                     l11642:	
  3449                           ;robot.c: 307: }
  3450                           ;robot.c: 308: if (CliffSensors)
  3451  0528  1283               	bcf	status, 5	;RP0=0, select bank0
  3452  0529  086C               	movf	(_CliffSensors),w	;volatile
  3453  052A  1D03               	skipz
  3454  052B  2D2D               	goto	u5150
  3455  052C  2D34               	goto	l11646
  3456  052D                     u5150:
  3457                           	line	310
  3458                           	
  3459  052D                     l11644:	
  3460                           ;robot.c: 309: {
  3461                           ;robot.c: 310: ROBOTerror = 3;
  3462  052D  3003               	movlw	(03h)
  3463  052E  00DD               	movwf	(??_robot_turnRight+0)+0
  3464  052F  085D               	movf	(??_robot_turnRight+0)+0,w
  3465  0530  1683               	bsf	status, 5	;RP0=1, select bank1
  3466  0531  1303               	bcf	status, 6	;RP1=0, select bank1
  3467  0532  00D1               	movwf	(_ROBOTerror)^080h
  3468                           	line	311
  3469                           ;robot.c: 311: break;
  3470  0533  2DA4               	goto	l11664
  3471                           	line	312
  3472                           	
  3473  0534                     l6135:	
  3474                           	line	313
  3475                           	
  3476  0534                     l11646:	
  3477                           ;robot.c: 312: }
  3478                           ;robot.c: 313: temp1 = DistHighByte;
  3479  0534  1283               	bcf	status, 5	;RP0=0, select bank0
  3480  0535  086D               	movf	(_DistHighByte),w	;volatile
  3481  0536  00DD               	movwf	(??_robot_turnRight+0)+0
  3482  0537  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3483  0538  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3484  0539  00E0               	movwf	(robot_turnRight@temp1)
  3485  053A  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3486  053B  00E1               	movwf	(robot_turnRight@temp1+1)
  3487                           	line	314
  3488                           	
  3489  053C                     l11648:	
  3490                           ;robot.c: 314: temp1 = temp1 << 8;
  3491  053C  0861               	movf	(robot_turnRight@temp1+1),w
  3492  053D  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3493  053E  0860               	movf	(robot_turnRight@temp1),w
  3494  053F  00DD               	movwf	(??_robot_turnRight+0)+0
  3495  0540  085D               	movf	(??_robot_turnRight+0)+0,w
  3496  0541  00DE               	movwf	(??_robot_turnRight+0)+1
  3497  0542  01DD               	clrf	(??_robot_turnRight+0)+0
  3498  0543  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3499  0544  00E0               	movwf	(robot_turnRight@temp1)
  3500  0545  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3501  0546  00E1               	movwf	(robot_turnRight@temp1+1)
  3502                           	line	315
  3503                           	
  3504  0547                     l11650:	
  3505                           ;robot.c: 315: temp1 += DistLowByte;
  3506  0547  086E               	movf	(_DistLowByte),w	;volatile
  3507  0548  00DD               	movwf	(??_robot_turnRight+0)+0
  3508  0549  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3509  054A  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3510  054B  07E0               	addwf	(robot_turnRight@temp1),f
  3511  054C  1803               	skipnc
  3512  054D  0AE1               	incf	(robot_turnRight@temp1+1),f
  3513  054E  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3514  054F  07E1               	addwf	(robot_turnRight@temp1+1),f
  3515                           	line	316
  3516                           	
  3517  0550                     l11652:	
  3518                           ;robot.c: 316: distTravelled += temp1;
  3519  0550  0860               	movf	(robot_turnRight@temp1),w
  3520  0551  1683               	bsf	status, 5	;RP0=1, select bank1
  3521  0552  1303               	bcf	status, 6	;RP1=0, select bank1
  3522  0553  07C0               	addwf	(_distTravelled)^080h,f
  3523  0554  1803               	skipnc
  3524  0555  0AC1               	incf	(_distTravelled+1)^080h,f
  3525  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  3526  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  3527  0558  0861               	movf	(robot_turnRight@temp1+1),w
  3528  0559  1683               	bsf	status, 5	;RP0=1, select bank1
  3529  055A  1303               	bcf	status, 6	;RP1=0, select bank1
  3530  055B  07C1               	addwf	(_distTravelled+1)^080h,f
  3531                           	line	317
  3532                           	
  3533  055C                     l11654:	
  3534                           ;robot.c: 317: TotalDistTravelled += temp1;
  3535  055C  1283               	bcf	status, 5	;RP0=0, select bank0
  3536  055D  1303               	bcf	status, 6	;RP1=0, select bank0
  3537  055E  0860               	movf	(robot_turnRight@temp1),w
  3538  055F  1683               	bsf	status, 5	;RP0=1, select bank1
  3539  0560  1303               	bcf	status, 6	;RP1=0, select bank1
  3540  0561  07BC               	addwf	(_TotalDistTravelled)^080h,f
  3541  0562  1803               	skipnc
  3542  0563  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  3543  0564  1283               	bcf	status, 5	;RP0=0, select bank0
  3544  0565  1303               	bcf	status, 6	;RP1=0, select bank0
  3545  0566  0861               	movf	(robot_turnRight@temp1+1),w
  3546  0567  1683               	bsf	status, 5	;RP0=1, select bank1
  3547  0568  1303               	bcf	status, 6	;RP1=0, select bank1
  3548  0569  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  3549                           	line	318
  3550                           	
  3551  056A                     l11656:	
  3552                           ;robot.c: 318: temp1 = AngleHighByte;
  3553  056A  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  3554  056B  1283               	bcf	status, 5	;RP0=0, select bank0
  3555  056C  1303               	bcf	status, 6	;RP1=0, select bank0
  3556  056D  00DD               	movwf	(??_robot_turnRight+0)+0
  3557  056E  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3558  056F  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3559  0570  00E0               	movwf	(robot_turnRight@temp1)
  3560  0571  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3561  0572  00E1               	movwf	(robot_turnRight@temp1+1)
  3562                           	line	319
  3563                           	
  3564  0573                     l11658:	
  3565                           ;robot.c: 319: temp1 = temp1 << 8;
  3566  0573  0861               	movf	(robot_turnRight@temp1+1),w
  3567  0574  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3568  0575  0860               	movf	(robot_turnRight@temp1),w
  3569  0576  00DD               	movwf	(??_robot_turnRight+0)+0
  3570  0577  085D               	movf	(??_robot_turnRight+0)+0,w
  3571  0578  00DE               	movwf	(??_robot_turnRight+0)+1
  3572  0579  01DD               	clrf	(??_robot_turnRight+0)+0
  3573  057A  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3574  057B  00E0               	movwf	(robot_turnRight@temp1)
  3575  057C  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3576  057D  00E1               	movwf	(robot_turnRight@temp1+1)
  3577                           	line	320
  3578                           ;robot.c: 320: temp1 += AngleLowByte;
  3579  057E  1683               	bsf	status, 5	;RP0=1, select bank1
  3580  057F  1303               	bcf	status, 6	;RP1=0, select bank1
  3581  0580  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  3582  0581  1283               	bcf	status, 5	;RP0=0, select bank0
  3583  0582  1303               	bcf	status, 6	;RP1=0, select bank0
  3584  0583  00DD               	movwf	(??_robot_turnRight+0)+0
  3585  0584  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3586  0585  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3587  0586  07E0               	addwf	(robot_turnRight@temp1),f
  3588  0587  1803               	skipnc
  3589  0588  0AE1               	incf	(robot_turnRight@temp1+1),f
  3590  0589  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3591  058A  07E1               	addwf	(robot_turnRight@temp1+1),f
  3592                           	line	321
  3593                           ;robot.c: 321: angleTurned += temp1;
  3594  058B  0860               	movf	(robot_turnRight@temp1),w
  3595  058C  1683               	bsf	status, 5	;RP0=1, select bank1
  3596  058D  1303               	bcf	status, 6	;RP1=0, select bank1
  3597  058E  07BE               	addwf	(_angleTurned)^080h,f
  3598  058F  1803               	skipnc
  3599  0590  0ABF               	incf	(_angleTurned+1)^080h,f
  3600  0591  1283               	bcf	status, 5	;RP0=0, select bank0
  3601  0592  1303               	bcf	status, 6	;RP1=0, select bank0
  3602  0593  0861               	movf	(robot_turnRight@temp1+1),w
  3603  0594  1683               	bsf	status, 5	;RP0=1, select bank1
  3604  0595  1303               	bcf	status, 6	;RP1=0, select bank1
  3605  0596  07BF               	addwf	(_angleTurned+1)^080h,f
  3606                           	line	322
  3607                           	
  3608  0597                     l11660:	
  3609                           ;robot.c: 322: Disp2 = angleTurned;
  3610  0597  083F               	movf	(_angleTurned+1)^080h,w
  3611  0598  01B7               	clrf	(_Disp2+1)^080h
  3612  0599  07B7               	addwf	(_Disp2+1)^080h
  3613  059A  083E               	movf	(_angleTurned)^080h,w
  3614  059B  01B6               	clrf	(_Disp2)^080h
  3615  059C  07B6               	addwf	(_Disp2)^080h
  3616                           
  3617                           	line	323
  3618                           	
  3619  059D                     l11662:	
  3620                           ;robot.c: 323: UpdateDisplay();
  3621  059D  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3622  05A2  2C86               	goto	l11614
  3623                           	line	324
  3624                           	
  3625  05A3                     l6136:	
  3626                           	line	274
  3627  05A3  2C86               	goto	l11614
  3628                           	
  3629  05A4                     l6131:	
  3630                           	line	325
  3631                           	
  3632  05A4                     l11664:	
  3633                           ;robot.c: 324: }
  3634                           ;robot.c: 325: RobotDrive(speed, -500);
  3635  05A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3636  05A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3637  05A6  085A               	movf	(robot_turnRight@speed+1),w
  3638  05A7  01A3               	clrf	(?_RobotDrive+1)
  3639  05A8  07A3               	addwf	(?_RobotDrive+1)
  3640  05A9  0859               	movf	(robot_turnRight@speed),w
  3641  05AA  01A2               	clrf	(?_RobotDrive)
  3642  05AB  07A2               	addwf	(?_RobotDrive)
  3643                           
  3644  05AC  300C               	movlw	low(-500)
  3645  05AD  00A4               	movwf	0+(?_RobotDrive)+02h
  3646  05AE  30FE               	movlw	high(-500)
  3647  05AF  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3648  05B0  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  3649                           	line	326
  3650                           ;robot.c: 326: while (abs(angleTurned) < abs(-90))
  3651  05B5  2E1B               	goto	l11692
  3652                           	
  3653  05B6                     l6138:	
  3654                           	line	328
  3655                           	
  3656  05B6                     l11666:	
  3657                           ;robot.c: 327: {
  3658                           ;robot.c: 328: robot_read(1);
  3659  05B6  3001               	movlw	(01h)
  3660  05B7  120A  158A  2358   	fcall	_robot_read
              120A  118A         
  3661                           	line	329
  3662                           	
  3663  05BC                     l11668:	
  3664                           ;robot.c: 329: if (BumpSensors)
  3665  05BC  1283               	bcf	status, 5	;RP0=0, select bank0
  3666  05BD  1303               	bcf	status, 6	;RP1=0, select bank0
  3667  05BE  086B               	movf	(_BumpSensors),w	;volatile
  3668  05BF  1D03               	skipz
  3669  05C0  2DC2               	goto	u5160
  3670  05C1  2DC8               	goto	l11672
  3671  05C2                     u5160:
  3672                           	line	331
  3673                           	
  3674  05C2                     l11670:	
  3675                           ;robot.c: 330: {
  3676                           ;robot.c: 331: ROBOTerror = 1;
  3677  05C2  1683               	bsf	status, 5	;RP0=1, select bank1
  3678  05C3  1303               	bcf	status, 6	;RP1=0, select bank1
  3679  05C4  01D1               	clrf	(_ROBOTerror)^080h
  3680  05C5  1403               	bsf	status,0
  3681  05C6  0DD1               	rlf	(_ROBOTerror)^080h,f
  3682                           	line	332
  3683                           ;robot.c: 332: break;
  3684  05C7  2E4E               	goto	l11694
  3685                           	line	333
  3686                           	
  3687  05C8                     l6139:	
  3688                           	line	334
  3689                           	
  3690  05C8                     l11672:	
  3691                           ;robot.c: 333: }
  3692                           ;robot.c: 334: if (VwallSensor)
  3693  05C8  1283               	bcf	status, 5	;RP0=0, select bank0
  3694  05C9  086F               	movf	(_VwallSensor),w	;volatile
  3695  05CA  1D03               	skipz
  3696  05CB  2DCD               	goto	u5170
  3697  05CC  2DD4               	goto	l11676
  3698  05CD                     u5170:
  3699                           	line	336
  3700                           	
  3701  05CD                     l11674:	
  3702                           ;robot.c: 335: {
  3703                           ;robot.c: 336: ROBOTerror = 2;
  3704  05CD  3002               	movlw	(02h)
  3705  05CE  00DD               	movwf	(??_robot_turnRight+0)+0
  3706  05CF  085D               	movf	(??_robot_turnRight+0)+0,w
  3707  05D0  1683               	bsf	status, 5	;RP0=1, select bank1
  3708  05D1  1303               	bcf	status, 6	;RP1=0, select bank1
  3709  05D2  00D1               	movwf	(_ROBOTerror)^080h
  3710                           	line	337
  3711                           ;robot.c: 337: break;
  3712  05D3  2E4E               	goto	l11694
  3713                           	line	338
  3714                           	
  3715  05D4                     l6141:	
  3716                           	line	339
  3717                           	
  3718  05D4                     l11676:	
  3719                           ;robot.c: 338: }
  3720                           ;robot.c: 339: if (CliffSensors)
  3721  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3722  05D5  086C               	movf	(_CliffSensors),w	;volatile
  3723  05D6  1D03               	skipz
  3724  05D7  2DD9               	goto	u5180
  3725  05D8  2DE0               	goto	l11680
  3726  05D9                     u5180:
  3727                           	line	341
  3728                           	
  3729  05D9                     l11678:	
  3730                           ;robot.c: 340: {
  3731                           ;robot.c: 341: ROBOTerror = 3;
  3732  05D9  3003               	movlw	(03h)
  3733  05DA  00DD               	movwf	(??_robot_turnRight+0)+0
  3734  05DB  085D               	movf	(??_robot_turnRight+0)+0,w
  3735  05DC  1683               	bsf	status, 5	;RP0=1, select bank1
  3736  05DD  1303               	bcf	status, 6	;RP1=0, select bank1
  3737  05DE  00D1               	movwf	(_ROBOTerror)^080h
  3738                           	line	342
  3739                           ;robot.c: 342: break;
  3740  05DF  2E4E               	goto	l11694
  3741                           	line	343
  3742                           	
  3743  05E0                     l6142:	
  3744                           	line	344
  3745                           	
  3746  05E0                     l11680:	
  3747                           ;robot.c: 343: }
  3748                           ;robot.c: 344: temp1 = AngleHighByte;
  3749  05E0  1683               	bsf	status, 5	;RP0=1, select bank1
  3750  05E1  1303               	bcf	status, 6	;RP1=0, select bank1
  3751  05E2  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  3752  05E3  1283               	bcf	status, 5	;RP0=0, select bank0
  3753  05E4  1303               	bcf	status, 6	;RP1=0, select bank0
  3754  05E5  00DD               	movwf	(??_robot_turnRight+0)+0
  3755  05E6  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3756  05E7  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3757  05E8  00E0               	movwf	(robot_turnRight@temp1)
  3758  05E9  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3759  05EA  00E1               	movwf	(robot_turnRight@temp1+1)
  3760                           	line	345
  3761                           	
  3762  05EB                     l11682:	
  3763                           ;robot.c: 345: temp1 = temp1 << 8;
  3764  05EB  0861               	movf	(robot_turnRight@temp1+1),w
  3765  05EC  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3766  05ED  0860               	movf	(robot_turnRight@temp1),w
  3767  05EE  00DD               	movwf	(??_robot_turnRight+0)+0
  3768  05EF  085D               	movf	(??_robot_turnRight+0)+0,w
  3769  05F0  00DE               	movwf	(??_robot_turnRight+0)+1
  3770  05F1  01DD               	clrf	(??_robot_turnRight+0)+0
  3771  05F2  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3772  05F3  00E0               	movwf	(robot_turnRight@temp1)
  3773  05F4  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3774  05F5  00E1               	movwf	(robot_turnRight@temp1+1)
  3775                           	line	346
  3776                           	
  3777  05F6                     l11684:	
  3778                           ;robot.c: 346: temp1 += AngleLowByte;
  3779  05F6  1683               	bsf	status, 5	;RP0=1, select bank1
  3780  05F7  1303               	bcf	status, 6	;RP1=0, select bank1
  3781  05F8  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  3782  05F9  1283               	bcf	status, 5	;RP0=0, select bank0
  3783  05FA  1303               	bcf	status, 6	;RP1=0, select bank0
  3784  05FB  00DD               	movwf	(??_robot_turnRight+0)+0
  3785  05FC  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3786  05FD  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3787  05FE  07E0               	addwf	(robot_turnRight@temp1),f
  3788  05FF  1803               	skipnc
  3789  0600  0AE1               	incf	(robot_turnRight@temp1+1),f
  3790  0601  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3791  0602  07E1               	addwf	(robot_turnRight@temp1+1),f
  3792                           	line	347
  3793                           	
  3794  0603                     l11686:	
  3795                           ;robot.c: 347: angleTurned += temp1;
  3796  0603  0860               	movf	(robot_turnRight@temp1),w
  3797  0604  1683               	bsf	status, 5	;RP0=1, select bank1
  3798  0605  1303               	bcf	status, 6	;RP1=0, select bank1
  3799  0606  07BE               	addwf	(_angleTurned)^080h,f
  3800  0607  1803               	skipnc
  3801  0608  0ABF               	incf	(_angleTurned+1)^080h,f
  3802  0609  1283               	bcf	status, 5	;RP0=0, select bank0
  3803  060A  1303               	bcf	status, 6	;RP1=0, select bank0
  3804  060B  0861               	movf	(robot_turnRight@temp1+1),w
  3805  060C  1683               	bsf	status, 5	;RP0=1, select bank1
  3806  060D  1303               	bcf	status, 6	;RP1=0, select bank1
  3807  060E  07BF               	addwf	(_angleTurned+1)^080h,f
  3808                           	line	348
  3809                           	
  3810  060F                     l11688:	
  3811                           ;robot.c: 348: Disp2 = angleTurned;
  3812  060F  083F               	movf	(_angleTurned+1)^080h,w
  3813  0610  01B7               	clrf	(_Disp2+1)^080h
  3814  0611  07B7               	addwf	(_Disp2+1)^080h
  3815  0612  083E               	movf	(_angleTurned)^080h,w
  3816  0613  01B6               	clrf	(_Disp2)^080h
  3817  0614  07B6               	addwf	(_Disp2)^080h
  3818                           
  3819                           	line	349
  3820                           	
  3821  0615                     l11690:	
  3822                           ;robot.c: 349: UpdateDisplay();
  3823  0615  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3824  061A  2E1B               	goto	l11692
  3825                           	line	350
  3826                           	
  3827  061B                     l6137:	
  3828                           	line	326
  3829                           	
  3830  061B                     l11692:	
  3831  061B  1683               	bsf	status, 5	;RP0=1, select bank1
  3832  061C  1303               	bcf	status, 6	;RP1=0, select bank1
  3833  061D  083F               	movf	(_angleTurned+1)^080h,w
  3834  061E  1283               	bcf	status, 5	;RP0=0, select bank0
  3835  061F  1303               	bcf	status, 6	;RP1=0, select bank0
  3836  0620  01A7               	clrf	(?_abs+1)
  3837  0621  07A7               	addwf	(?_abs+1)
  3838  0622  1683               	bsf	status, 5	;RP0=1, select bank1
  3839  0623  1303               	bcf	status, 6	;RP1=0, select bank1
  3840  0624  083E               	movf	(_angleTurned)^080h,w
  3841  0625  1283               	bcf	status, 5	;RP0=0, select bank0
  3842  0626  1303               	bcf	status, 6	;RP1=0, select bank0
  3843  0627  01A6               	clrf	(?_abs)
  3844  0628  07A6               	addwf	(?_abs)
  3845                           
  3846  0629  160A  118A  239C   	fcall	_abs
              120A  118A         
  3847  062E  1283               	bcf	status, 5	;RP0=0, select bank0
  3848  062F  1303               	bcf	status, 6	;RP1=0, select bank0
  3849  0630  0826               	movf	(0+?_abs),w
  3850  0631  00DD               	movwf	(??_robot_turnRight+0)+0
  3851  0632  0827               	movf	(1+?_abs),w
  3852  0633  00DE               	movwf	((??_robot_turnRight+0)+0+1)
  3853  0634  30A6               	movlw	low(-90)
  3854  0635  00A6               	movwf	(?_abs)
  3855  0636  30FF               	movlw	high(-90)
  3856  0637  00A7               	movwf	((?_abs))+1
  3857  0638  160A  118A  239C   	fcall	_abs
              120A  118A         
  3858  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  3859  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  3860  063F  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3861  0640  3A80               	xorlw	80h
  3862  0641  00DF               	movwf	(??_robot_turnRight+2)+0
  3863  0642  0827               	movf	(1+(?_abs)),w
  3864  0643  3A80               	xorlw	80h
  3865  0644  025F               	subwf	(??_robot_turnRight+2)+0,w
  3866  0645  1D03               	skipz
  3867  0646  2E49               	goto	u5195
  3868  0647  0826               	movf	(0+(?_abs)),w
  3869  0648  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3870  0649                     u5195:
  3871                           
  3872  0649  1C03               	skipc
  3873  064A  2E4C               	goto	u5191
  3874  064B  2E4D               	goto	u5190
  3875  064C                     u5191:
  3876  064C  2DB6               	goto	l11666
  3877  064D                     u5190:
  3878  064D  2E4E               	goto	l11694
  3879                           	
  3880  064E                     l6140:	
  3881                           	line	351
  3882                           	
  3883  064E                     l11694:	
  3884                           ;robot.c: 350: }
  3885                           ;robot.c: 351: RobotDrive(0, 0x7FFF);
  3886  064E  3000               	movlw	low(0)
  3887  064F  1283               	bcf	status, 5	;RP0=0, select bank0
  3888  0650  1303               	bcf	status, 6	;RP1=0, select bank0
  3889  0651  00A2               	movwf	(?_RobotDrive)
  3890  0652  3000               	movlw	high(0)
  3891  0653  00A3               	movwf	((?_RobotDrive))+1
  3892  0654  30FF               	movlw	low(07FFFh)
  3893  0655  00A4               	movwf	0+(?_RobotDrive)+02h
  3894  0656  307F               	movlw	high(07FFFh)
  3895  0657  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3896  0658  160A  118A  23D1   	fcall	_RobotDrive
              120A  118A         
  3897                           	line	352
  3898                           	
  3899  065D                     l11696:	
  3900                           ;robot.c: 352: Disp2 = ROBOTerror;
  3901  065D  1683               	bsf	status, 5	;RP0=1, select bank1
  3902  065E  1303               	bcf	status, 6	;RP1=0, select bank1
  3903  065F  0851               	movf	(_ROBOTerror)^080h,w
  3904  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  3905  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  3906  0662  00DD               	movwf	(??_robot_turnRight+0)+0
  3907  0663  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3908  0664  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3909  0665  1683               	bsf	status, 5	;RP0=1, select bank1
  3910  0666  1303               	bcf	status, 6	;RP1=0, select bank1
  3911  0667  00B6               	movwf	(_Disp2)^080h
  3912  0668  1283               	bcf	status, 5	;RP0=0, select bank0
  3913  0669  1303               	bcf	status, 6	;RP1=0, select bank0
  3914  066A  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3915  066B  1683               	bsf	status, 5	;RP0=1, select bank1
  3916  066C  1303               	bcf	status, 6	;RP1=0, select bank1
  3917  066D  00B7               	movwf	(_Disp2+1)^080h
  3918                           	line	353
  3919                           	
  3920  066E                     l11698:	
  3921                           ;robot.c: 353: UpdateDisplay();
  3922  066E  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3923                           	line	356
  3924                           	
  3925  0673                     l6143:	
  3926  0673  0008               	return
  3927                           	opt stack 0
  3928                           GLOBAL	__end_of_robot_turnRight
  3929  0674                     	__end_of_robot_turnRight:
  3930 ;; =============== function _robot_turnRight ends ============
  3931                           
  3932                           	signat	_robot_turnRight,8312
  3933                           	global	_robotFollow
  3934                           psect	text1042,local,class=CODE,delta=2
  3935                           global __ptext1042
  3936  0C56                     __ptext1042:
  3937                           
  3938 ;; *************** function _robotFollow *****************
  3939 ;; Defined at:
  3940 ;;		line 179 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  speed           2   57[BANK0 ] int 
  3943 ;;  AdcTarget       2   59[BANK0 ] int 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  temp1           2   65[BANK0 ] int 
  3946 ;;  turncounter     2   63[BANK0 ] int 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;		None               void
  3949 ;; Registers used:
  3950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         0       4       0       0       0
  3957 ;;      Locals:         0       4       0       0       0
  3958 ;;      Temps:          0       2       0       0       0
  3959 ;;      Totals:         0      10       0       0       0
  3960 ;;Total ram usage:       10 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    7
  3963 ;; This function calls:
  3964 ;;		_RobotDrive
  3965 ;;		_readAvgDistance
  3966 ;;		_robot_read
  3967 ;;		_UpdateDisplay
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           psect	text1042
  3973                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3974                           	line	179
  3975                           	global	__size_of_robotFollow
  3976  01B5                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  3977                           	
  3978  0C56                     _robotFollow:	
  3979                           	opt	stack 0
  3980                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3981                           	line	180
  3982                           	
  3983  0C56                     l11528:	
  3984                           ;robot.c: 180: distTravelled = 0;
  3985  0C56  1683               	bsf	status, 5	;RP0=1, select bank1
  3986  0C57  1303               	bcf	status, 6	;RP1=0, select bank1
  3987  0C58  01C0               	clrf	(_distTravelled)^080h
  3988  0C59  01C1               	clrf	(_distTravelled+1)^080h
  3989                           	line	182
  3990                           	
  3991  0C5A                     l11530:	
  3992                           ;robot.c: 181: int temp1;
  3993                           ;robot.c: 182: RobotDrive(speed, 0x7FFF);
  3994  0C5A  1283               	bcf	status, 5	;RP0=0, select bank0
  3995  0C5B  1303               	bcf	status, 6	;RP1=0, select bank0
  3996  0C5C  085A               	movf	(robotFollow@speed+1),w
  3997  0C5D  01A3               	clrf	(?_RobotDrive+1)
  3998  0C5E  07A3               	addwf	(?_RobotDrive+1)
  3999  0C5F  0859               	movf	(robotFollow@speed),w
  4000  0C60  01A2               	clrf	(?_RobotDrive)
  4001  0C61  07A2               	addwf	(?_RobotDrive)
  4002                           
  4003  0C62  30FF               	movlw	low(07FFFh)
  4004  0C63  00A4               	movwf	0+(?_RobotDrive)+02h
  4005  0C64  307F               	movlw	high(07FFFh)
  4006  0C65  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  4007  0C66  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  4008                           	line	183
  4009                           	
  4010  0C6B                     l11532:	
  4011                           ;robot.c: 183: ROBOTerror = 0;
  4012  0C6B  1683               	bsf	status, 5	;RP0=1, select bank1
  4013  0C6C  1303               	bcf	status, 6	;RP1=0, select bank1
  4014  0C6D  01D1               	clrf	(_ROBOTerror)^080h
  4015                           	line	184
  4016                           	
  4017  0C6E                     l11534:	
  4018                           ;robot.c: 184: int turncounter = 0;
  4019  0C6E  1283               	bcf	status, 5	;RP0=0, select bank0
  4020  0C6F  1303               	bcf	status, 6	;RP1=0, select bank0
  4021  0C70  01DF               	clrf	(robotFollow@turncounter)
  4022  0C71  01E0               	clrf	(robotFollow@turncounter+1)
  4023  0C72  2C73               	goto	l11536
  4024                           	line	186
  4025                           ;robot.c: 186: while (1)
  4026                           	
  4027  0C73                     l6101:	
  4028                           	line	188
  4029                           	
  4030  0C73                     l11536:	
  4031                           ;robot.c: 187: {
  4032                           ;robot.c: 188: if (AdcTarget > 100)
  4033  0C73  1283               	bcf	status, 5	;RP0=0, select bank0
  4034  0C74  1303               	bcf	status, 6	;RP1=0, select bank0
  4035  0C75  085C               	movf	(robotFollow@AdcTarget+1),w
  4036  0C76  3A80               	xorlw	80h
  4037  0C77  00FF               	movwf	btemp+1
  4038  0C78  3080               	movlw	(high(065h))^80h
  4039  0C79  027F               	subwf	btemp+1,w
  4040  0C7A  1D03               	skipz
  4041  0C7B  2C7E               	goto	u4965
  4042  0C7C  3065               	movlw	low(065h)
  4043  0C7D  025B               	subwf	(robotFollow@AdcTarget),w
  4044  0C7E                     u4965:
  4045                           
  4046  0C7E  1C03               	skipc
  4047  0C7F  2C81               	goto	u4961
  4048  0C80  2C82               	goto	u4960
  4049  0C81                     u4961:
  4050  0C81  2C8B               	goto	l11540
  4051  0C82                     u4960:
  4052                           	line	189
  4053                           	
  4054  0C82                     l11538:	
  4055                           ;robot.c: 189: AdcTarget--;
  4056  0C82  30FF               	movlw	low(-1)
  4057  0C83  1283               	bcf	status, 5	;RP0=0, select bank0
  4058  0C84  1303               	bcf	status, 6	;RP1=0, select bank0
  4059  0C85  07DB               	addwf	(robotFollow@AdcTarget),f
  4060  0C86  1803               	skipnc
  4061  0C87  0ADC               	incf	(robotFollow@AdcTarget+1),f
  4062  0C88  30FF               	movlw	high(-1)
  4063  0C89  07DC               	addwf	(robotFollow@AdcTarget+1),f
  4064  0C8A  2C8B               	goto	l11540
  4065                           	
  4066  0C8B                     l6102:	
  4067                           	line	190
  4068                           	
  4069  0C8B                     l11540:	
  4070                           ;robot.c: 190: if (AdcTarget < 100)
  4071  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  4072  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  4073  0C8D  085C               	movf	(robotFollow@AdcTarget+1),w
  4074  0C8E  3A80               	xorlw	80h
  4075  0C8F  00FF               	movwf	btemp+1
  4076  0C90  3080               	movlw	(high(064h))^80h
  4077  0C91  027F               	subwf	btemp+1,w
  4078  0C92  1D03               	skipz
  4079  0C93  2C96               	goto	u4975
  4080  0C94  3064               	movlw	low(064h)
  4081  0C95  025B               	subwf	(robotFollow@AdcTarget),w
  4082  0C96                     u4975:
  4083                           
  4084  0C96  1803               	skipnc
  4085  0C97  2C99               	goto	u4971
  4086  0C98  2C9A               	goto	u4970
  4087  0C99                     u4971:
  4088  0C99  2CA3               	goto	l11544
  4089  0C9A                     u4970:
  4090                           	line	191
  4091                           	
  4092  0C9A                     l11542:	
  4093                           ;robot.c: 191: AdcTarget++;
  4094  0C9A  3001               	movlw	low(01h)
  4095  0C9B  1283               	bcf	status, 5	;RP0=0, select bank0
  4096  0C9C  1303               	bcf	status, 6	;RP1=0, select bank0
  4097  0C9D  07DB               	addwf	(robotFollow@AdcTarget),f
  4098  0C9E  1803               	skipnc
  4099  0C9F  0ADC               	incf	(robotFollow@AdcTarget+1),f
  4100  0CA0  3000               	movlw	high(01h)
  4101  0CA1  07DC               	addwf	(robotFollow@AdcTarget+1),f
  4102  0CA2  2CA3               	goto	l11544
  4103                           	
  4104  0CA3                     l6103:	
  4105                           	line	192
  4106                           	
  4107  0CA3                     l11544:	
  4108                           ;robot.c: 192: readAvgDistance();
  4109  0CA3  160A  118A  26EA   	fcall	_readAvgDistance
              120A  158A         
  4110                           	line	193
  4111                           	
  4112  0CA8                     l11546:	
  4113                           ;robot.c: 193: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 25))
  4114  0CA8  1283               	bcf	status, 5	;RP0=0, select bank0
  4115  0CA9  1303               	bcf	status, 6	;RP1=0, select bank0
  4116  0CAA  086A               	movf	(_adcVal+1),w	;volatile
  4117  0CAB  025C               	subwf	(robotFollow@AdcTarget+1),w
  4118  0CAC  1D03               	skipz
  4119  0CAD  2CB0               	goto	u4985
  4120  0CAE  0869               	movf	(_adcVal),w	;volatile
  4121  0CAF  025B               	subwf	(robotFollow@AdcTarget),w
  4122  0CB0                     u4985:
  4123  0CB0  1803               	skipnc
  4124  0CB1  2CB3               	goto	u4981
  4125  0CB2  2CB4               	goto	u4980
  4126  0CB3                     u4981:
  4127  0CB3  2CD6               	goto	l11552
  4128  0CB4                     u4980:
  4129                           	
  4130  0CB4                     l11548:	
  4131  0CB4  085B               	movf	(robotFollow@AdcTarget),w
  4132  0CB5  3E19               	addlw	low(019h)
  4133  0CB6  00DD               	movwf	(??_robotFollow+0)+0
  4134  0CB7  085C               	movf	(robotFollow@AdcTarget+1),w
  4135  0CB8  1803               	skipnc
  4136  0CB9  3E01               	addlw	1
  4137  0CBA  3E00               	addlw	high(019h)
  4138  0CBB  00DE               	movwf	1+(??_robotFollow+0)+0
  4139  0CBC  085E               	movf	1+(??_robotFollow+0)+0,w
  4140  0CBD  026A               	subwf	(_adcVal+1),w	;volatile
  4141  0CBE  1D03               	skipz
  4142  0CBF  2CC2               	goto	u4995
  4143  0CC0  085D               	movf	0+(??_robotFollow+0)+0,w
  4144  0CC1  0269               	subwf	(_adcVal),w	;volatile
  4145  0CC2                     u4995:
  4146  0CC2  1803               	skipnc
  4147  0CC3  2CC5               	goto	u4991
  4148  0CC4  2CC6               	goto	u4990
  4149  0CC5                     u4991:
  4150  0CC5  2CD6               	goto	l11552
  4151  0CC6                     u4990:
  4152                           	line	195
  4153                           	
  4154  0CC6                     l11550:	
  4155                           ;robot.c: 194: {
  4156                           ;robot.c: 195: RobotDrive(speed, 1700);
  4157  0CC6  085A               	movf	(robotFollow@speed+1),w
  4158  0CC7  01A3               	clrf	(?_RobotDrive+1)
  4159  0CC8  07A3               	addwf	(?_RobotDrive+1)
  4160  0CC9  0859               	movf	(robotFollow@speed),w
  4161  0CCA  01A2               	clrf	(?_RobotDrive)
  4162  0CCB  07A2               	addwf	(?_RobotDrive)
  4163                           
  4164  0CCC  30A4               	movlw	low(06A4h)
  4165  0CCD  00A4               	movwf	0+(?_RobotDrive)+02h
  4166  0CCE  3006               	movlw	high(06A4h)
  4167  0CCF  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  4168  0CD0  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  4169                           	line	196
  4170                           ;robot.c: 196: }
  4171  0CD5  2D78               	goto	l6105
  4172                           	line	197
  4173                           	
  4174  0CD6                     l6104:	
  4175                           	
  4176  0CD6                     l11552:	
  4177                           ;robot.c: 197: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - 25))
  4178  0CD6  1283               	bcf	status, 5	;RP0=0, select bank0
  4179  0CD7  1303               	bcf	status, 6	;RP1=0, select bank0
  4180  0CD8  085C               	movf	(robotFollow@AdcTarget+1),w
  4181  0CD9  026A               	subwf	(_adcVal+1),w	;volatile
  4182  0CDA  1D03               	skipz
  4183  0CDB  2CDE               	goto	u5005
  4184  0CDC  085B               	movf	(robotFollow@AdcTarget),w
  4185  0CDD  0269               	subwf	(_adcVal),w	;volatile
  4186  0CDE                     u5005:
  4187  0CDE  1803               	skipnc
  4188  0CDF  2CE1               	goto	u5001
  4189  0CE0  2CE2               	goto	u5000
  4190  0CE1                     u5001:
  4191  0CE1  2D04               	goto	l11558
  4192  0CE2                     u5000:
  4193                           	
  4194  0CE2                     l11554:	
  4195  0CE2  085B               	movf	(robotFollow@AdcTarget),w
  4196  0CE3  3EE7               	addlw	low(0FFE7h)
  4197  0CE4  00DD               	movwf	(??_robotFollow+0)+0
  4198  0CE5  085C               	movf	(robotFollow@AdcTarget+1),w
  4199  0CE6  1803               	skipnc
  4200  0CE7  3E01               	addlw	1
  4201  0CE8  3EFF               	addlw	high(0FFE7h)
  4202  0CE9  00DE               	movwf	1+(??_robotFollow+0)+0
  4203  0CEA  086A               	movf	(_adcVal+1),w	;volatile
  4204  0CEB  025E               	subwf	1+(??_robotFollow+0)+0,w
  4205  0CEC  1D03               	skipz
  4206  0CED  2CF0               	goto	u5015
  4207  0CEE  0869               	movf	(_adcVal),w	;volatile
  4208  0CEF  025D               	subwf	0+(??_robotFollow+0)+0,w
  4209  0CF0                     u5015:
  4210  0CF0  1803               	skipnc
  4211  0CF1  2CF3               	goto	u5011
  4212  0CF2  2CF4               	goto	u5010
  4213  0CF3                     u5011:
  4214  0CF3  2D04               	goto	l11558
  4215  0CF4                     u5010:
  4216                           	line	199
  4217                           	
  4218  0CF4                     l11556:	
  4219                           ;robot.c: 198: {
  4220                           ;robot.c: 199: RobotDrive(speed, -1700);
  4221  0CF4  085A               	movf	(robotFollow@speed+1),w
  4222  0CF5  01A3               	clrf	(?_RobotDrive+1)
  4223  0CF6  07A3               	addwf	(?_RobotDrive+1)
  4224  0CF7  0859               	movf	(robotFollow@speed),w
  4225  0CF8  01A2               	clrf	(?_RobotDrive)
  4226  0CF9  07A2               	addwf	(?_RobotDrive)
  4227                           
  4228  0CFA  305C               	movlw	low(-1700)
  4229  0CFB  00A4               	movwf	0+(?_RobotDrive)+02h
  4230  0CFC  30F9               	movlw	high(-1700)
  4231  0CFD  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  4232  0CFE  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  4233                           	line	200
  4234                           ;robot.c: 200: }
  4235  0D03  2D78               	goto	l6105
  4236                           	line	201
  4237                           	
  4238  0D04                     l6106:	
  4239                           	
  4240  0D04                     l11558:	
  4241                           ;robot.c: 201: else if (adcVal <= (AdcTarget - 20))
  4242  0D04  1283               	bcf	status, 5	;RP0=0, select bank0
  4243  0D05  1303               	bcf	status, 6	;RP1=0, select bank0
  4244  0D06  085B               	movf	(robotFollow@AdcTarget),w
  4245  0D07  3EEC               	addlw	low(0FFECh)
  4246  0D08  00DD               	movwf	(??_robotFollow+0)+0
  4247  0D09  085C               	movf	(robotFollow@AdcTarget+1),w
  4248  0D0A  1803               	skipnc
  4249  0D0B  3E01               	addlw	1
  4250  0D0C  3EFF               	addlw	high(0FFECh)
  4251  0D0D  00DE               	movwf	1+(??_robotFollow+0)+0
  4252  0D0E  086A               	movf	(_adcVal+1),w	;volatile
  4253  0D0F  025E               	subwf	1+(??_robotFollow+0)+0,w
  4254  0D10  1D03               	skipz
  4255  0D11  2D14               	goto	u5025
  4256  0D12  0869               	movf	(_adcVal),w	;volatile
  4257  0D13  025D               	subwf	0+(??_robotFollow+0)+0,w
  4258  0D14                     u5025:
  4259  0D14  1C03               	skipc
  4260  0D15  2D17               	goto	u5021
  4261  0D16  2D18               	goto	u5020
  4262  0D17                     u5021:
  4263  0D17  2D35               	goto	l11566
  4264  0D18                     u5020:
  4265                           	line	203
  4266                           	
  4267  0D18                     l11560:	
  4268                           ;robot.c: 202: {
  4269                           ;robot.c: 203: turncounter++;
  4270  0D18  3001               	movlw	low(01h)
  4271  0D19  07DF               	addwf	(robotFollow@turncounter),f
  4272  0D1A  1803               	skipnc
  4273  0D1B  0AE0               	incf	(robotFollow@turncounter+1),f
  4274  0D1C  3000               	movlw	high(01h)
  4275  0D1D  07E0               	addwf	(robotFollow@turncounter+1),f
  4276                           	line	204
  4277                           	
  4278  0D1E                     l11562:	
  4279                           ;robot.c: 204: if (turncounter > 3)
  4280  0D1E  0860               	movf	(robotFollow@turncounter+1),w
  4281  0D1F  3A80               	xorlw	80h
  4282  0D20  00FF               	movwf	btemp+1
  4283  0D21  3080               	movlw	(high(04h))^80h
  4284  0D22  027F               	subwf	btemp+1,w
  4285  0D23  1D03               	skipz
  4286  0D24  2D27               	goto	u5035
  4287  0D25  3004               	movlw	low(04h)
  4288  0D26  025F               	subwf	(robotFollow@turncounter),w
  4289  0D27                     u5035:
  4290                           
  4291  0D27  1C03               	skipc
  4292  0D28  2D2A               	goto	u5031
  4293  0D29  2D2B               	goto	u5030
  4294  0D2A                     u5031:
  4295  0D2A  2D78               	goto	l6105
  4296  0D2B                     u5030:
  4297                           	line	206
  4298                           	
  4299  0D2B                     l11564:	
  4300                           ;robot.c: 205: {
  4301                           ;robot.c: 206: ROBOTerror = 11;
  4302  0D2B  300B               	movlw	(0Bh)
  4303  0D2C  1283               	bcf	status, 5	;RP0=0, select bank0
  4304  0D2D  1303               	bcf	status, 6	;RP1=0, select bank0
  4305  0D2E  00DD               	movwf	(??_robotFollow+0)+0
  4306  0D2F  085D               	movf	(??_robotFollow+0)+0,w
  4307  0D30  1683               	bsf	status, 5	;RP0=1, select bank1
  4308  0D31  1303               	bcf	status, 6	;RP1=0, select bank1
  4309  0D32  00D1               	movwf	(_ROBOTerror)^080h
  4310                           	line	207
  4311                           ;robot.c: 207: break;
  4312  0D33  2DE5               	goto	l11602
  4313                           	line	208
  4314                           	
  4315  0D34                     l6109:	
  4316                           	line	209
  4317                           ;robot.c: 208: }
  4318                           ;robot.c: 209: }
  4319  0D34  2D78               	goto	l6105
  4320                           	line	210
  4321                           	
  4322  0D35                     l6108:	
  4323                           	
  4324  0D35                     l11566:	
  4325                           ;robot.c: 210: else if (adcVal >= (AdcTarget + 25))
  4326  0D35  1283               	bcf	status, 5	;RP0=0, select bank0
  4327  0D36  085B               	movf	(robotFollow@AdcTarget),w
  4328  0D37  3E19               	addlw	low(019h)
  4329  0D38  00DD               	movwf	(??_robotFollow+0)+0
  4330  0D39  085C               	movf	(robotFollow@AdcTarget+1),w
  4331  0D3A  1803               	skipnc
  4332  0D3B  3E01               	addlw	1
  4333  0D3C  3E00               	addlw	high(019h)
  4334  0D3D  00DE               	movwf	1+(??_robotFollow+0)+0
  4335  0D3E  085E               	movf	1+(??_robotFollow+0)+0,w
  4336  0D3F  026A               	subwf	(_adcVal+1),w	;volatile
  4337  0D40  1D03               	skipz
  4338  0D41  2D44               	goto	u5045
  4339  0D42  085D               	movf	0+(??_robotFollow+0)+0,w
  4340  0D43  0269               	subwf	(_adcVal),w	;volatile
  4341  0D44                     u5045:
  4342  0D44  1C03               	skipc
  4343  0D45  2D47               	goto	u5041
  4344  0D46  2D48               	goto	u5040
  4345  0D47                     u5041:
  4346  0D47  2D65               	goto	l11574
  4347  0D48                     u5040:
  4348                           	line	212
  4349                           	
  4350  0D48                     l11568:	
  4351                           ;robot.c: 211: {
  4352                           ;robot.c: 212: turncounter--;
  4353  0D48  30FF               	movlw	low(-1)
  4354  0D49  07DF               	addwf	(robotFollow@turncounter),f
  4355  0D4A  1803               	skipnc
  4356  0D4B  0AE0               	incf	(robotFollow@turncounter+1),f
  4357  0D4C  30FF               	movlw	high(-1)
  4358  0D4D  07E0               	addwf	(robotFollow@turncounter+1),f
  4359                           	line	213
  4360                           	
  4361  0D4E                     l11570:	
  4362                           ;robot.c: 213: if (turncounter < -3)
  4363  0D4E  0860               	movf	(robotFollow@turncounter+1),w
  4364  0D4F  3A80               	xorlw	80h
  4365  0D50  00FF               	movwf	btemp+1
  4366  0D51  307F               	movlw	(high(-3))^80h
  4367  0D52  027F               	subwf	btemp+1,w
  4368  0D53  1D03               	skipz
  4369  0D54  2D57               	goto	u5055
  4370  0D55  30FD               	movlw	low(-3)
  4371  0D56  025F               	subwf	(robotFollow@turncounter),w
  4372  0D57                     u5055:
  4373                           
  4374  0D57  1803               	skipnc
  4375  0D58  2D5A               	goto	u5051
  4376  0D59  2D5B               	goto	u5050
  4377  0D5A                     u5051:
  4378  0D5A  2D78               	goto	l6105
  4379  0D5B                     u5050:
  4380                           	line	215
  4381                           	
  4382  0D5B                     l11572:	
  4383                           ;robot.c: 214: {
  4384                           ;robot.c: 215: ROBOTerror = 10;
  4385  0D5B  300A               	movlw	(0Ah)
  4386  0D5C  1283               	bcf	status, 5	;RP0=0, select bank0
  4387  0D5D  1303               	bcf	status, 6	;RP1=0, select bank0
  4388  0D5E  00DD               	movwf	(??_robotFollow+0)+0
  4389  0D5F  085D               	movf	(??_robotFollow+0)+0,w
  4390  0D60  1683               	bsf	status, 5	;RP0=1, select bank1
  4391  0D61  1303               	bcf	status, 6	;RP1=0, select bank1
  4392  0D62  00D1               	movwf	(_ROBOTerror)^080h
  4393                           	line	216
  4394                           ;robot.c: 216: break;
  4395  0D63  2DE5               	goto	l11602
  4396                           	line	217
  4397                           	
  4398  0D64                     l6113:	
  4399                           	line	218
  4400                           ;robot.c: 217: }
  4401                           ;robot.c: 218: }
  4402  0D64  2D78               	goto	l6105
  4403                           	line	219
  4404                           	
  4405  0D65                     l6112:	
  4406                           	line	221
  4407                           	
  4408  0D65                     l11574:	
  4409                           ;robot.c: 219: else
  4410                           ;robot.c: 220: {
  4411                           ;robot.c: 221: RobotDrive(speed, 0x7FFF);
  4412  0D65  1283               	bcf	status, 5	;RP0=0, select bank0
  4413  0D66  085A               	movf	(robotFollow@speed+1),w
  4414  0D67  01A3               	clrf	(?_RobotDrive+1)
  4415  0D68  07A3               	addwf	(?_RobotDrive+1)
  4416  0D69  0859               	movf	(robotFollow@speed),w
  4417  0D6A  01A2               	clrf	(?_RobotDrive)
  4418  0D6B  07A2               	addwf	(?_RobotDrive)
  4419                           
  4420  0D6C  30FF               	movlw	low(07FFFh)
  4421  0D6D  00A4               	movwf	0+(?_RobotDrive)+02h
  4422  0D6E  307F               	movlw	high(07FFFh)
  4423  0D6F  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  4424  0D70  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  4425  0D75  2D78               	goto	l6105
  4426                           	line	222
  4427                           	
  4428  0D76                     l6114:	
  4429  0D76  2D78               	goto	l6105
  4430                           	
  4431  0D77                     l6111:	
  4432  0D77  2D78               	goto	l6105
  4433                           	
  4434  0D78                     l6107:	
  4435                           	
  4436  0D78                     l6105:	
  4437                           	line	223
  4438                           ;robot.c: 222: }
  4439                           ;robot.c: 223: robot_read(0);
  4440  0D78  3000               	movlw	(0)
  4441  0D79  120A  158A  2358   	fcall	_robot_read
              120A  158A         
  4442                           	line	224
  4443                           	
  4444  0D7E                     l11576:	
  4445                           ;robot.c: 224: if (BumpSensors)
  4446  0D7E  1283               	bcf	status, 5	;RP0=0, select bank0
  4447  0D7F  1303               	bcf	status, 6	;RP1=0, select bank0
  4448  0D80  086B               	movf	(_BumpSensors),w	;volatile
  4449  0D81  1D03               	skipz
  4450  0D82  2D84               	goto	u5060
  4451  0D83  2D8A               	goto	l11580
  4452  0D84                     u5060:
  4453                           	line	226
  4454                           	
  4455  0D84                     l11578:	
  4456                           ;robot.c: 225: {
  4457                           ;robot.c: 226: ROBOTerror = 1;
  4458  0D84  1683               	bsf	status, 5	;RP0=1, select bank1
  4459  0D85  1303               	bcf	status, 6	;RP1=0, select bank1
  4460  0D86  01D1               	clrf	(_ROBOTerror)^080h
  4461  0D87  1403               	bsf	status,0
  4462  0D88  0DD1               	rlf	(_ROBOTerror)^080h,f
  4463                           	line	227
  4464                           ;robot.c: 227: break;
  4465  0D89  2DE5               	goto	l11602
  4466                           	line	228
  4467                           	
  4468  0D8A                     l6115:	
  4469                           	line	229
  4470                           	
  4471  0D8A                     l11580:	
  4472                           ;robot.c: 228: }
  4473                           ;robot.c: 229: if (VwallSensor)
  4474  0D8A  1283               	bcf	status, 5	;RP0=0, select bank0
  4475  0D8B  086F               	movf	(_VwallSensor),w	;volatile
  4476  0D8C  1D03               	skipz
  4477  0D8D  2D8F               	goto	u5070
  4478  0D8E  2D96               	goto	l11584
  4479  0D8F                     u5070:
  4480                           	line	231
  4481                           	
  4482  0D8F                     l11582:	
  4483                           ;robot.c: 230: {
  4484                           ;robot.c: 231: ROBOTerror = 2;
  4485  0D8F  3002               	movlw	(02h)
  4486  0D90  00DD               	movwf	(??_robotFollow+0)+0
  4487  0D91  085D               	movf	(??_robotFollow+0)+0,w
  4488  0D92  1683               	bsf	status, 5	;RP0=1, select bank1
  4489  0D93  1303               	bcf	status, 6	;RP1=0, select bank1
  4490  0D94  00D1               	movwf	(_ROBOTerror)^080h
  4491                           	line	232
  4492                           ;robot.c: 232: break;
  4493  0D95  2DE5               	goto	l11602
  4494                           	line	233
  4495                           	
  4496  0D96                     l6116:	
  4497                           	line	234
  4498                           	
  4499  0D96                     l11584:	
  4500                           ;robot.c: 233: }
  4501                           ;robot.c: 234: if (CliffSensors)
  4502  0D96  1283               	bcf	status, 5	;RP0=0, select bank0
  4503  0D97  086C               	movf	(_CliffSensors),w	;volatile
  4504  0D98  1D03               	skipz
  4505  0D99  2D9B               	goto	u5080
  4506  0D9A  2DA2               	goto	l11588
  4507  0D9B                     u5080:
  4508                           	line	236
  4509                           	
  4510  0D9B                     l11586:	
  4511                           ;robot.c: 235: {
  4512                           ;robot.c: 236: ROBOTerror = 3;
  4513  0D9B  3003               	movlw	(03h)
  4514  0D9C  00DD               	movwf	(??_robotFollow+0)+0
  4515  0D9D  085D               	movf	(??_robotFollow+0)+0,w
  4516  0D9E  1683               	bsf	status, 5	;RP0=1, select bank1
  4517  0D9F  1303               	bcf	status, 6	;RP1=0, select bank1
  4518  0DA0  00D1               	movwf	(_ROBOTerror)^080h
  4519                           	line	237
  4520                           ;robot.c: 237: break;
  4521  0DA1  2DE5               	goto	l11602
  4522                           	line	238
  4523                           	
  4524  0DA2                     l6117:	
  4525                           	line	239
  4526                           	
  4527  0DA2                     l11588:	
  4528                           ;robot.c: 238: }
  4529                           ;robot.c: 239: temp1 = DistHighByte;
  4530  0DA2  1283               	bcf	status, 5	;RP0=0, select bank0
  4531  0DA3  086D               	movf	(_DistHighByte),w	;volatile
  4532  0DA4  00DD               	movwf	(??_robotFollow+0)+0
  4533  0DA5  01DE               	clrf	(??_robotFollow+0)+0+1
  4534  0DA6  085D               	movf	0+(??_robotFollow+0)+0,w
  4535  0DA7  00E1               	movwf	(robotFollow@temp1)
  4536  0DA8  085E               	movf	1+(??_robotFollow+0)+0,w
  4537  0DA9  00E2               	movwf	(robotFollow@temp1+1)
  4538                           	line	240
  4539                           	
  4540  0DAA                     l11590:	
  4541                           ;robot.c: 240: temp1 = temp1 << 8;
  4542  0DAA  0862               	movf	(robotFollow@temp1+1),w
  4543  0DAB  00DE               	movwf	(??_robotFollow+0)+0+1
  4544  0DAC  0861               	movf	(robotFollow@temp1),w
  4545  0DAD  00DD               	movwf	(??_robotFollow+0)+0
  4546  0DAE  085D               	movf	(??_robotFollow+0)+0,w
  4547  0DAF  00DE               	movwf	(??_robotFollow+0)+1
  4548  0DB0  01DD               	clrf	(??_robotFollow+0)+0
  4549  0DB1  085D               	movf	0+(??_robotFollow+0)+0,w
  4550  0DB2  00E1               	movwf	(robotFollow@temp1)
  4551  0DB3  085E               	movf	1+(??_robotFollow+0)+0,w
  4552  0DB4  00E2               	movwf	(robotFollow@temp1+1)
  4553                           	line	241
  4554                           	
  4555  0DB5                     l11592:	
  4556                           ;robot.c: 241: temp1 += DistLowByte;
  4557  0DB5  086E               	movf	(_DistLowByte),w	;volatile
  4558  0DB6  00DD               	movwf	(??_robotFollow+0)+0
  4559  0DB7  01DE               	clrf	(??_robotFollow+0)+0+1
  4560  0DB8  085D               	movf	0+(??_robotFollow+0)+0,w
  4561  0DB9  07E1               	addwf	(robotFollow@temp1),f
  4562  0DBA  1803               	skipnc
  4563  0DBB  0AE2               	incf	(robotFollow@temp1+1),f
  4564  0DBC  085E               	movf	1+(??_robotFollow+0)+0,w
  4565  0DBD  07E2               	addwf	(robotFollow@temp1+1),f
  4566                           	line	242
  4567                           	
  4568  0DBE                     l11594:	
  4569                           ;robot.c: 242: distTravelled += temp1;
  4570  0DBE  0861               	movf	(robotFollow@temp1),w
  4571  0DBF  1683               	bsf	status, 5	;RP0=1, select bank1
  4572  0DC0  1303               	bcf	status, 6	;RP1=0, select bank1
  4573  0DC1  07C0               	addwf	(_distTravelled)^080h,f
  4574  0DC2  1803               	skipnc
  4575  0DC3  0AC1               	incf	(_distTravelled+1)^080h,f
  4576  0DC4  1283               	bcf	status, 5	;RP0=0, select bank0
  4577  0DC5  1303               	bcf	status, 6	;RP1=0, select bank0
  4578  0DC6  0862               	movf	(robotFollow@temp1+1),w
  4579  0DC7  1683               	bsf	status, 5	;RP0=1, select bank1
  4580  0DC8  1303               	bcf	status, 6	;RP1=0, select bank1
  4581  0DC9  07C1               	addwf	(_distTravelled+1)^080h,f
  4582                           	line	243
  4583                           	
  4584  0DCA                     l11596:	
  4585                           ;robot.c: 243: TotalDistTravelled += temp1;
  4586  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
  4587  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
  4588  0DCC  0861               	movf	(robotFollow@temp1),w
  4589  0DCD  1683               	bsf	status, 5	;RP0=1, select bank1
  4590  0DCE  1303               	bcf	status, 6	;RP1=0, select bank1
  4591  0DCF  07BC               	addwf	(_TotalDistTravelled)^080h,f
  4592  0DD0  1803               	skipnc
  4593  0DD1  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  4594  0DD2  1283               	bcf	status, 5	;RP0=0, select bank0
  4595  0DD3  1303               	bcf	status, 6	;RP1=0, select bank0
  4596  0DD4  0862               	movf	(robotFollow@temp1+1),w
  4597  0DD5  1683               	bsf	status, 5	;RP0=1, select bank1
  4598  0DD6  1303               	bcf	status, 6	;RP1=0, select bank1
  4599  0DD7  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  4600                           	line	245
  4601                           	
  4602  0DD8                     l11598:	
  4603                           ;robot.c: 245: Disp2 = distTravelled;
  4604  0DD8  0841               	movf	(_distTravelled+1)^080h,w
  4605  0DD9  01B7               	clrf	(_Disp2+1)^080h
  4606  0DDA  07B7               	addwf	(_Disp2+1)^080h
  4607  0DDB  0840               	movf	(_distTravelled)^080h,w
  4608  0DDC  01B6               	clrf	(_Disp2)^080h
  4609  0DDD  07B6               	addwf	(_Disp2)^080h
  4610                           
  4611                           	line	246
  4612                           	
  4613  0DDE                     l11600:	
  4614                           ;robot.c: 246: UpdateDisplay();
  4615  0DDE  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4616  0DE3  2C73               	goto	l11536
  4617                           	line	247
  4618                           	
  4619  0DE4                     l6118:	
  4620                           	line	186
  4621  0DE4  2C73               	goto	l11536
  4622                           	
  4623  0DE5                     l6110:	
  4624                           	line	248
  4625                           	
  4626  0DE5                     l11602:	
  4627                           ;robot.c: 247: }
  4628                           ;robot.c: 248: RobotDrive(0, 0x7FFF);
  4629  0DE5  3000               	movlw	low(0)
  4630  0DE6  1283               	bcf	status, 5	;RP0=0, select bank0
  4631  0DE7  1303               	bcf	status, 6	;RP1=0, select bank0
  4632  0DE8  00A2               	movwf	(?_RobotDrive)
  4633  0DE9  3000               	movlw	high(0)
  4634  0DEA  00A3               	movwf	((?_RobotDrive))+1
  4635  0DEB  30FF               	movlw	low(07FFFh)
  4636  0DEC  00A4               	movwf	0+(?_RobotDrive)+02h
  4637  0DED  307F               	movlw	high(07FFFh)
  4638  0DEE  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  4639  0DEF  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  4640                           	line	249
  4641                           	
  4642  0DF4                     l11604:	
  4643                           ;robot.c: 249: Disp2 = ROBOTerror;
  4644  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  4645  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  4646  0DF6  0851               	movf	(_ROBOTerror)^080h,w
  4647  0DF7  1283               	bcf	status, 5	;RP0=0, select bank0
  4648  0DF8  1303               	bcf	status, 6	;RP1=0, select bank0
  4649  0DF9  00DD               	movwf	(??_robotFollow+0)+0
  4650  0DFA  01DE               	clrf	(??_robotFollow+0)+0+1
  4651  0DFB  085D               	movf	0+(??_robotFollow+0)+0,w
  4652  0DFC  1683               	bsf	status, 5	;RP0=1, select bank1
  4653  0DFD  1303               	bcf	status, 6	;RP1=0, select bank1
  4654  0DFE  00B6               	movwf	(_Disp2)^080h
  4655  0DFF  1283               	bcf	status, 5	;RP0=0, select bank0
  4656  0E00  1303               	bcf	status, 6	;RP1=0, select bank0
  4657  0E01  085E               	movf	1+(??_robotFollow+0)+0,w
  4658  0E02  1683               	bsf	status, 5	;RP0=1, select bank1
  4659  0E03  1303               	bcf	status, 6	;RP1=0, select bank1
  4660  0E04  00B7               	movwf	(_Disp2+1)^080h
  4661                           	line	250
  4662                           	
  4663  0E05                     l11606:	
  4664                           ;robot.c: 250: UpdateDisplay();
  4665  0E05  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4666                           	line	253
  4667                           	
  4668  0E0A                     l6119:	
  4669  0E0A  0008               	return
  4670                           	opt stack 0
  4671                           GLOBAL	__end_of_robotFollow
  4672  0E0B                     	__end_of_robotFollow:
  4673 ;; =============== function _robotFollow ends ============
  4674                           
  4675                           	signat	_robotFollow,8312
  4676                           	global	_robotTurnSpeed
  4677                           psect	text1043,local,class=CODE,delta=2
  4678                           global __ptext1043
  4679  09D3                     __ptext1043:
  4680                           
  4681 ;; *************** function _robotTurnSpeed *****************
  4682 ;; Defined at:
  4683 ;;		line 409 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  angle           2   57[BANK0 ] int 
  4686 ;;  speed           2   59[BANK0 ] int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  temp1           2   64[BANK0 ] int 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;		None               void
  4691 ;; Registers used:
  4692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4698 ;;      Params:         0       4       0       0       0
  4699 ;;      Locals:         0       2       0       0       0
  4700 ;;      Temps:          0       3       0       0       0
  4701 ;;      Totals:         0       9       0       0       0
  4702 ;;Total ram usage:        9 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    6
  4705 ;; This function calls:
  4706 ;;		_robotTurn
  4707 ;;		_robot_read
  4708 ;;		_UpdateDisplay
  4709 ;;		_abs
  4710 ;; This function is called by:
  4711 ;;		_main
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           psect	text1043
  4715                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4716                           	line	409
  4717                           	global	__size_of_robotTurnSpeed
  4718  00A8                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  4719                           	
  4720  09D3                     _robotTurnSpeed:	
  4721                           	opt	stack 1
  4722                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4723                           	line	410
  4724                           	
  4725  09D3                     l11500:	
  4726                           ;robot.c: 410: angleTurned = 0;
  4727  09D3  1683               	bsf	status, 5	;RP0=1, select bank1
  4728  09D4  1303               	bcf	status, 6	;RP1=0, select bank1
  4729  09D5  01BE               	clrf	(_angleTurned)^080h
  4730  09D6  01BF               	clrf	(_angleTurned+1)^080h
  4731                           	line	411
  4732                           ;robot.c: 411: int temp1 = 0;
  4733  09D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4734  09D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4735  09D9  01E0               	clrf	(robotTurnSpeed@temp1)
  4736  09DA  01E1               	clrf	(robotTurnSpeed@temp1+1)
  4737                           	line	413
  4738                           	
  4739  09DB                     l11502:	
  4740                           ;robot.c: 413: robotTurn(angle);
  4741  09DB  085A               	movf	(robotTurnSpeed@angle+1),w
  4742  09DC  01A3               	clrf	(?_robotTurn+1)
  4743  09DD  07A3               	addwf	(?_robotTurn+1)
  4744  09DE  0859               	movf	(robotTurnSpeed@angle),w
  4745  09DF  01A2               	clrf	(?_robotTurn)
  4746  09E0  07A2               	addwf	(?_robotTurn)
  4747                           
  4748  09E1  160A  118A  2676   	fcall	_robotTurn
              120A  158A         
  4749                           	line	416
  4750                           ;robot.c: 416: while (abs(angleTurned) < abs(angle))
  4751  09E6  2A3A               	goto	l11524
  4752                           	
  4753  09E7                     l6156:	
  4754                           	line	418
  4755                           	
  4756  09E7                     l11504:	
  4757                           ;robot.c: 417: {
  4758                           ;robot.c: 418: robot_read(1);
  4759  09E7  3001               	movlw	(01h)
  4760  09E8  120A  158A  2358   	fcall	_robot_read
              120A  158A         
  4761                           	line	419
  4762                           	
  4763  09ED                     l11506:	
  4764                           ;robot.c: 419: if (BumpSensors || VwallSensor)
  4765  09ED  1283               	bcf	status, 5	;RP0=0, select bank0
  4766  09EE  1303               	bcf	status, 6	;RP1=0, select bank0
  4767  09EF  08EB               	movf	(_BumpSensors),f
  4768  09F0  1D03               	skipz	;volatile
  4769  09F1  29F3               	goto	u4931
  4770  09F2  29F4               	goto	u4930
  4771  09F3                     u4931:
  4772  09F3  29F9               	goto	l11510
  4773  09F4                     u4930:
  4774                           	
  4775  09F4                     l11508:	
  4776  09F4  086F               	movf	(_VwallSensor),w	;volatile
  4777  09F5  1D03               	skipz
  4778  09F6  29F8               	goto	u4940
  4779  09F7  29FF               	goto	l11512
  4780  09F8                     u4940:
  4781  09F8  29F9               	goto	l11510
  4782                           	
  4783  09F9                     l6159:	
  4784                           	line	421
  4785                           	
  4786  09F9                     l11510:	
  4787                           ;robot.c: 420: {
  4788                           ;robot.c: 421: ROBOTerror = 1;
  4789  09F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4790  09FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4791  09FB  01D1               	clrf	(_ROBOTerror)^080h
  4792  09FC  1403               	bsf	status,0
  4793  09FD  0DD1               	rlf	(_ROBOTerror)^080h,f
  4794                           	line	422
  4795                           ;robot.c: 422: break;
  4796  09FE  2A6F               	goto	l11526
  4797                           	line	423
  4798                           	
  4799  09FF                     l6157:	
  4800                           	line	424
  4801                           	
  4802  09FF                     l11512:	
  4803                           ;robot.c: 423: }
  4804                           ;robot.c: 424: temp1 = AngleHighByte;
  4805  09FF  1683               	bsf	status, 5	;RP0=1, select bank1
  4806  0A00  1303               	bcf	status, 6	;RP1=0, select bank1
  4807  0A01  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  4808  0A02  1283               	bcf	status, 5	;RP0=0, select bank0
  4809  0A03  1303               	bcf	status, 6	;RP1=0, select bank0
  4810  0A04  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4811  0A05  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4812  0A06  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4813  0A07  00E0               	movwf	(robotTurnSpeed@temp1)
  4814  0A08  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4815  0A09  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4816                           	line	425
  4817                           	
  4818  0A0A                     l11514:	
  4819                           ;robot.c: 425: temp1 = temp1 << 8;
  4820  0A0A  0861               	movf	(robotTurnSpeed@temp1+1),w
  4821  0A0B  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  4822  0A0C  0860               	movf	(robotTurnSpeed@temp1),w
  4823  0A0D  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4824  0A0E  085D               	movf	(??_robotTurnSpeed+0)+0,w
  4825  0A0F  00DE               	movwf	(??_robotTurnSpeed+0)+1
  4826  0A10  01DD               	clrf	(??_robotTurnSpeed+0)+0
  4827  0A11  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4828  0A12  00E0               	movwf	(robotTurnSpeed@temp1)
  4829  0A13  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4830  0A14  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4831                           	line	426
  4832                           	
  4833  0A15                     l11516:	
  4834                           ;robot.c: 426: temp1 += AngleLowByte;
  4835  0A15  1683               	bsf	status, 5	;RP0=1, select bank1
  4836  0A16  1303               	bcf	status, 6	;RP1=0, select bank1
  4837  0A17  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  4838  0A18  1283               	bcf	status, 5	;RP0=0, select bank0
  4839  0A19  1303               	bcf	status, 6	;RP1=0, select bank0
  4840  0A1A  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4841  0A1B  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4842  0A1C  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4843  0A1D  07E0               	addwf	(robotTurnSpeed@temp1),f
  4844  0A1E  1803               	skipnc
  4845  0A1F  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  4846  0A20  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4847  0A21  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  4848                           	line	427
  4849                           	
  4850  0A22                     l11518:	
  4851                           ;robot.c: 427: angleTurned += temp1;
  4852  0A22  0860               	movf	(robotTurnSpeed@temp1),w
  4853  0A23  1683               	bsf	status, 5	;RP0=1, select bank1
  4854  0A24  1303               	bcf	status, 6	;RP1=0, select bank1
  4855  0A25  07BE               	addwf	(_angleTurned)^080h,f
  4856  0A26  1803               	skipnc
  4857  0A27  0ABF               	incf	(_angleTurned+1)^080h,f
  4858  0A28  1283               	bcf	status, 5	;RP0=0, select bank0
  4859  0A29  1303               	bcf	status, 6	;RP1=0, select bank0
  4860  0A2A  0861               	movf	(robotTurnSpeed@temp1+1),w
  4861  0A2B  1683               	bsf	status, 5	;RP0=1, select bank1
  4862  0A2C  1303               	bcf	status, 6	;RP1=0, select bank1
  4863  0A2D  07BF               	addwf	(_angleTurned+1)^080h,f
  4864                           	line	428
  4865                           	
  4866  0A2E                     l11520:	
  4867                           ;robot.c: 428: Disp2 = angleTurned;
  4868  0A2E  083F               	movf	(_angleTurned+1)^080h,w
  4869  0A2F  01B7               	clrf	(_Disp2+1)^080h
  4870  0A30  07B7               	addwf	(_Disp2+1)^080h
  4871  0A31  083E               	movf	(_angleTurned)^080h,w
  4872  0A32  01B6               	clrf	(_Disp2)^080h
  4873  0A33  07B6               	addwf	(_Disp2)^080h
  4874                           
  4875                           	line	429
  4876                           	
  4877  0A34                     l11522:	
  4878                           ;robot.c: 429: UpdateDisplay();
  4879  0A34  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4880  0A39  2A3A               	goto	l11524
  4881                           	line	430
  4882                           	
  4883  0A3A                     l6155:	
  4884                           	line	416
  4885                           	
  4886  0A3A                     l11524:	
  4887  0A3A  1683               	bsf	status, 5	;RP0=1, select bank1
  4888  0A3B  1303               	bcf	status, 6	;RP1=0, select bank1
  4889  0A3C  083F               	movf	(_angleTurned+1)^080h,w
  4890  0A3D  1283               	bcf	status, 5	;RP0=0, select bank0
  4891  0A3E  1303               	bcf	status, 6	;RP1=0, select bank0
  4892  0A3F  01A7               	clrf	(?_abs+1)
  4893  0A40  07A7               	addwf	(?_abs+1)
  4894  0A41  1683               	bsf	status, 5	;RP0=1, select bank1
  4895  0A42  1303               	bcf	status, 6	;RP1=0, select bank1
  4896  0A43  083E               	movf	(_angleTurned)^080h,w
  4897  0A44  1283               	bcf	status, 5	;RP0=0, select bank0
  4898  0A45  1303               	bcf	status, 6	;RP1=0, select bank0
  4899  0A46  01A6               	clrf	(?_abs)
  4900  0A47  07A6               	addwf	(?_abs)
  4901                           
  4902  0A48  160A  118A  239C   	fcall	_abs
              120A  158A         
  4903  0A4D  1283               	bcf	status, 5	;RP0=0, select bank0
  4904  0A4E  1303               	bcf	status, 6	;RP1=0, select bank0
  4905  0A4F  0826               	movf	(0+?_abs),w
  4906  0A50  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4907  0A51  0827               	movf	(1+?_abs),w
  4908  0A52  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  4909  0A53  085A               	movf	(robotTurnSpeed@angle+1),w
  4910  0A54  01A7               	clrf	(?_abs+1)
  4911  0A55  07A7               	addwf	(?_abs+1)
  4912  0A56  0859               	movf	(robotTurnSpeed@angle),w
  4913  0A57  01A6               	clrf	(?_abs)
  4914  0A58  07A6               	addwf	(?_abs)
  4915                           
  4916  0A59  160A  118A  239C   	fcall	_abs
              120A  158A         
  4917  0A5E  1283               	bcf	status, 5	;RP0=0, select bank0
  4918  0A5F  1303               	bcf	status, 6	;RP1=0, select bank0
  4919  0A60  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4920  0A61  3A80               	xorlw	80h
  4921  0A62  00DF               	movwf	(??_robotTurnSpeed+2)+0
  4922  0A63  0827               	movf	(1+(?_abs)),w
  4923  0A64  3A80               	xorlw	80h
  4924  0A65  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  4925  0A66  1D03               	skipz
  4926  0A67  2A6A               	goto	u4955
  4927  0A68  0826               	movf	(0+(?_abs)),w
  4928  0A69  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  4929  0A6A                     u4955:
  4930                           
  4931  0A6A  1C03               	skipc
  4932  0A6B  2A6D               	goto	u4951
  4933  0A6C  2A6E               	goto	u4950
  4934  0A6D                     u4951:
  4935  0A6D  29E7               	goto	l11504
  4936  0A6E                     u4950:
  4937  0A6E  2A6F               	goto	l11526
  4938                           	
  4939  0A6F                     l6160:	
  4940                           	line	432
  4941                           	
  4942  0A6F                     l11526:	
  4943                           ;robot.c: 430: }
  4944                           ;robot.c: 432: robotTurn(0);
  4945  0A6F  3000               	movlw	low(0)
  4946  0A70  1283               	bcf	status, 5	;RP0=0, select bank0
  4947  0A71  1303               	bcf	status, 6	;RP1=0, select bank0
  4948  0A72  00A2               	movwf	(?_robotTurn)
  4949  0A73  3000               	movlw	high(0)
  4950  0A74  00A3               	movwf	((?_robotTurn))+1
  4951  0A75  160A  118A  2676   	fcall	_robotTurn
              120A  158A         
  4952                           	line	433
  4953                           	
  4954  0A7A                     l6161:	
  4955  0A7A  0008               	return
  4956                           	opt stack 0
  4957                           GLOBAL	__end_of_robotTurnSpeed
  4958  0A7B                     	__end_of_robotTurnSpeed:
  4959 ;; =============== function _robotTurnSpeed ends ============
  4960                           
  4961                           	signat	_robotTurnSpeed,8312
  4962                           	global	_robotMoveSpeed
  4963                           psect	text1044,local,class=CODE,delta=2
  4964                           global __ptext1044
  4965  0A7B                     __ptext1044:
  4966                           
  4967 ;; *************** function _robotMoveSpeed *****************
  4968 ;; Defined at:
  4969 ;;		line 361 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  distance        2   57[BANK0 ] int 
  4972 ;;  speed           2   59[BANK0 ] int 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  temp1           2   64[BANK0 ] int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4984 ;;      Params:         0       4       0       0       0
  4985 ;;      Locals:         0       2       0       0       0
  4986 ;;      Temps:          0       3       0       0       0
  4987 ;;      Totals:         0       9       0       0       0
  4988 ;;Total ram usage:        9 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    6
  4991 ;; This function calls:
  4992 ;;		_RobotDrive
  4993 ;;		_robot_read
  4994 ;;		_UpdateDisplay
  4995 ;;		_abs
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           psect	text1044
  5001                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5002                           	line	361
  5003                           	global	__size_of_robotMoveSpeed
  5004  00DD                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  5005                           	
  5006  0A7B                     _robotMoveSpeed:	
  5007                           	opt	stack 1
  5008                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5009                           	line	362
  5010                           	
  5011  0A7B                     l11460:	
  5012                           ;robot.c: 362: distTravelled = 0;
  5013  0A7B  1683               	bsf	status, 5	;RP0=1, select bank1
  5014  0A7C  1303               	bcf	status, 6	;RP1=0, select bank1
  5015  0A7D  01C0               	clrf	(_distTravelled)^080h
  5016  0A7E  01C1               	clrf	(_distTravelled+1)^080h
  5017                           	line	364
  5018                           	
  5019  0A7F                     l11462:	
  5020                           ;robot.c: 363: int temp1;
  5021                           ;robot.c: 364: RobotDrive(speed, 0x7FFF);
  5022  0A7F  1283               	bcf	status, 5	;RP0=0, select bank0
  5023  0A80  1303               	bcf	status, 6	;RP1=0, select bank0
  5024  0A81  085C               	movf	(robotMoveSpeed@speed+1),w
  5025  0A82  01A3               	clrf	(?_RobotDrive+1)
  5026  0A83  07A3               	addwf	(?_RobotDrive+1)
  5027  0A84  085B               	movf	(robotMoveSpeed@speed),w
  5028  0A85  01A2               	clrf	(?_RobotDrive)
  5029  0A86  07A2               	addwf	(?_RobotDrive)
  5030                           
  5031  0A87  30FF               	movlw	low(07FFFh)
  5032  0A88  00A4               	movwf	0+(?_RobotDrive)+02h
  5033  0A89  307F               	movlw	high(07FFFh)
  5034  0A8A  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  5035  0A8B  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  5036                           	line	367
  5037                           ;robot.c: 367: while (abs(distTravelled) < abs(distance))
  5038  0A90  2AFD               	goto	l11492
  5039                           	
  5040  0A91                     l6147:	
  5041                           	line	369
  5042                           	
  5043  0A91                     l11464:	
  5044                           ;robot.c: 368: {
  5045                           ;robot.c: 369: robot_read(0);
  5046  0A91  3000               	movlw	(0)
  5047  0A92  120A  158A  2358   	fcall	_robot_read
              120A  158A         
  5048                           	line	370
  5049                           	
  5050  0A97                     l11466:	
  5051                           ;robot.c: 370: if (BumpSensors)
  5052  0A97  1283               	bcf	status, 5	;RP0=0, select bank0
  5053  0A98  1303               	bcf	status, 6	;RP1=0, select bank0
  5054  0A99  086B               	movf	(_BumpSensors),w	;volatile
  5055  0A9A  1D03               	skipz
  5056  0A9B  2A9D               	goto	u4890
  5057  0A9C  2AA3               	goto	l11470
  5058  0A9D                     u4890:
  5059                           	line	372
  5060                           	
  5061  0A9D                     l11468:	
  5062                           ;robot.c: 371: {
  5063                           ;robot.c: 372: ROBOTerror = 1;
  5064  0A9D  1683               	bsf	status, 5	;RP0=1, select bank1
  5065  0A9E  1303               	bcf	status, 6	;RP1=0, select bank1
  5066  0A9F  01D1               	clrf	(_ROBOTerror)^080h
  5067  0AA0  1403               	bsf	status,0
  5068  0AA1  0DD1               	rlf	(_ROBOTerror)^080h,f
  5069                           	line	373
  5070                           ;robot.c: 373: break;
  5071  0AA2  2B32               	goto	l11494
  5072                           	line	374
  5073                           	
  5074  0AA3                     l6148:	
  5075                           	line	375
  5076                           	
  5077  0AA3                     l11470:	
  5078                           ;robot.c: 374: }
  5079                           ;robot.c: 375: if (VwallSensor)
  5080  0AA3  1283               	bcf	status, 5	;RP0=0, select bank0
  5081  0AA4  086F               	movf	(_VwallSensor),w	;volatile
  5082  0AA5  1D03               	skipz
  5083  0AA6  2AA8               	goto	u4900
  5084  0AA7  2AAF               	goto	l11474
  5085  0AA8                     u4900:
  5086                           	line	377
  5087                           	
  5088  0AA8                     l11472:	
  5089                           ;robot.c: 376: {
  5090                           ;robot.c: 377: ROBOTerror = 2;
  5091  0AA8  3002               	movlw	(02h)
  5092  0AA9  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5093  0AAA  085D               	movf	(??_robotMoveSpeed+0)+0,w
  5094  0AAB  1683               	bsf	status, 5	;RP0=1, select bank1
  5095  0AAC  1303               	bcf	status, 6	;RP1=0, select bank1
  5096  0AAD  00D1               	movwf	(_ROBOTerror)^080h
  5097                           	line	378
  5098                           ;robot.c: 378: break;
  5099  0AAE  2B32               	goto	l11494
  5100                           	line	379
  5101                           	
  5102  0AAF                     l6150:	
  5103                           	line	380
  5104                           	
  5105  0AAF                     l11474:	
  5106                           ;robot.c: 379: }
  5107                           ;robot.c: 380: if (CliffSensors)
  5108  0AAF  1283               	bcf	status, 5	;RP0=0, select bank0
  5109  0AB0  086C               	movf	(_CliffSensors),w	;volatile
  5110  0AB1  1D03               	skipz
  5111  0AB2  2AB4               	goto	u4910
  5112  0AB3  2ABB               	goto	l11478
  5113  0AB4                     u4910:
  5114                           	line	382
  5115                           	
  5116  0AB4                     l11476:	
  5117                           ;robot.c: 381: {
  5118                           ;robot.c: 382: ROBOTerror = 3;
  5119  0AB4  3003               	movlw	(03h)
  5120  0AB5  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5121  0AB6  085D               	movf	(??_robotMoveSpeed+0)+0,w
  5122  0AB7  1683               	bsf	status, 5	;RP0=1, select bank1
  5123  0AB8  1303               	bcf	status, 6	;RP1=0, select bank1
  5124  0AB9  00D1               	movwf	(_ROBOTerror)^080h
  5125                           	line	383
  5126                           ;robot.c: 383: break;
  5127  0ABA  2B32               	goto	l11494
  5128                           	line	384
  5129                           	
  5130  0ABB                     l6151:	
  5131                           	line	385
  5132                           	
  5133  0ABB                     l11478:	
  5134                           ;robot.c: 384: }
  5135                           ;robot.c: 385: temp1 = DistHighByte;
  5136  0ABB  1283               	bcf	status, 5	;RP0=0, select bank0
  5137  0ABC  086D               	movf	(_DistHighByte),w	;volatile
  5138  0ABD  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5139  0ABE  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  5140  0ABF  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5141  0AC0  00E0               	movwf	(robotMoveSpeed@temp1)
  5142  0AC1  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5143  0AC2  00E1               	movwf	(robotMoveSpeed@temp1+1)
  5144                           	line	386
  5145                           	
  5146  0AC3                     l11480:	
  5147                           ;robot.c: 386: temp1 = temp1 << 8;
  5148  0AC3  0861               	movf	(robotMoveSpeed@temp1+1),w
  5149  0AC4  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  5150  0AC5  0860               	movf	(robotMoveSpeed@temp1),w
  5151  0AC6  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5152  0AC7  085D               	movf	(??_robotMoveSpeed+0)+0,w
  5153  0AC8  00DE               	movwf	(??_robotMoveSpeed+0)+1
  5154  0AC9  01DD               	clrf	(??_robotMoveSpeed+0)+0
  5155  0ACA  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5156  0ACB  00E0               	movwf	(robotMoveSpeed@temp1)
  5157  0ACC  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5158  0ACD  00E1               	movwf	(robotMoveSpeed@temp1+1)
  5159                           	line	387
  5160                           	
  5161  0ACE                     l11482:	
  5162                           ;robot.c: 387: temp1 += DistLowByte;
  5163  0ACE  086E               	movf	(_DistLowByte),w	;volatile
  5164  0ACF  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5165  0AD0  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  5166  0AD1  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5167  0AD2  07E0               	addwf	(robotMoveSpeed@temp1),f
  5168  0AD3  1803               	skipnc
  5169  0AD4  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  5170  0AD5  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5171  0AD6  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  5172                           	line	388
  5173                           	
  5174  0AD7                     l11484:	
  5175                           ;robot.c: 388: distTravelled += temp1;
  5176  0AD7  0860               	movf	(robotMoveSpeed@temp1),w
  5177  0AD8  1683               	bsf	status, 5	;RP0=1, select bank1
  5178  0AD9  1303               	bcf	status, 6	;RP1=0, select bank1
  5179  0ADA  07C0               	addwf	(_distTravelled)^080h,f
  5180  0ADB  1803               	skipnc
  5181  0ADC  0AC1               	incf	(_distTravelled+1)^080h,f
  5182  0ADD  1283               	bcf	status, 5	;RP0=0, select bank0
  5183  0ADE  1303               	bcf	status, 6	;RP1=0, select bank0
  5184  0ADF  0861               	movf	(robotMoveSpeed@temp1+1),w
  5185  0AE0  1683               	bsf	status, 5	;RP0=1, select bank1
  5186  0AE1  1303               	bcf	status, 6	;RP1=0, select bank1
  5187  0AE2  07C1               	addwf	(_distTravelled+1)^080h,f
  5188                           	line	389
  5189                           	
  5190  0AE3                     l11486:	
  5191                           ;robot.c: 389: TotalDistTravelled += temp1;
  5192  0AE3  1283               	bcf	status, 5	;RP0=0, select bank0
  5193  0AE4  1303               	bcf	status, 6	;RP1=0, select bank0
  5194  0AE5  0860               	movf	(robotMoveSpeed@temp1),w
  5195  0AE6  1683               	bsf	status, 5	;RP0=1, select bank1
  5196  0AE7  1303               	bcf	status, 6	;RP1=0, select bank1
  5197  0AE8  07BC               	addwf	(_TotalDistTravelled)^080h,f
  5198  0AE9  1803               	skipnc
  5199  0AEA  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  5200  0AEB  1283               	bcf	status, 5	;RP0=0, select bank0
  5201  0AEC  1303               	bcf	status, 6	;RP1=0, select bank0
  5202  0AED  0861               	movf	(robotMoveSpeed@temp1+1),w
  5203  0AEE  1683               	bsf	status, 5	;RP0=1, select bank1
  5204  0AEF  1303               	bcf	status, 6	;RP1=0, select bank1
  5205  0AF0  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  5206                           	line	390
  5207                           	
  5208  0AF1                     l11488:	
  5209                           ;robot.c: 390: Disp2 = distTravelled;
  5210  0AF1  0841               	movf	(_distTravelled+1)^080h,w
  5211  0AF2  01B7               	clrf	(_Disp2+1)^080h
  5212  0AF3  07B7               	addwf	(_Disp2+1)^080h
  5213  0AF4  0840               	movf	(_distTravelled)^080h,w
  5214  0AF5  01B6               	clrf	(_Disp2)^080h
  5215  0AF6  07B6               	addwf	(_Disp2)^080h
  5216                           
  5217                           	line	391
  5218                           	
  5219  0AF7                     l11490:	
  5220                           ;robot.c: 391: UpdateDisplay();
  5221  0AF7  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5222  0AFC  2AFD               	goto	l11492
  5223                           	line	397
  5224                           	
  5225  0AFD                     l6146:	
  5226                           	line	367
  5227                           	
  5228  0AFD                     l11492:	
  5229  0AFD  1683               	bsf	status, 5	;RP0=1, select bank1
  5230  0AFE  1303               	bcf	status, 6	;RP1=0, select bank1
  5231  0AFF  0841               	movf	(_distTravelled+1)^080h,w
  5232  0B00  1283               	bcf	status, 5	;RP0=0, select bank0
  5233  0B01  1303               	bcf	status, 6	;RP1=0, select bank0
  5234  0B02  01A7               	clrf	(?_abs+1)
  5235  0B03  07A7               	addwf	(?_abs+1)
  5236  0B04  1683               	bsf	status, 5	;RP0=1, select bank1
  5237  0B05  1303               	bcf	status, 6	;RP1=0, select bank1
  5238  0B06  0840               	movf	(_distTravelled)^080h,w
  5239  0B07  1283               	bcf	status, 5	;RP0=0, select bank0
  5240  0B08  1303               	bcf	status, 6	;RP1=0, select bank0
  5241  0B09  01A6               	clrf	(?_abs)
  5242  0B0A  07A6               	addwf	(?_abs)
  5243                           
  5244  0B0B  160A  118A  239C   	fcall	_abs
              120A  158A         
  5245  0B10  1283               	bcf	status, 5	;RP0=0, select bank0
  5246  0B11  1303               	bcf	status, 6	;RP1=0, select bank0
  5247  0B12  0826               	movf	(0+?_abs),w
  5248  0B13  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5249  0B14  0827               	movf	(1+?_abs),w
  5250  0B15  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  5251  0B16  085A               	movf	(robotMoveSpeed@distance+1),w
  5252  0B17  01A7               	clrf	(?_abs+1)
  5253  0B18  07A7               	addwf	(?_abs+1)
  5254  0B19  0859               	movf	(robotMoveSpeed@distance),w
  5255  0B1A  01A6               	clrf	(?_abs)
  5256  0B1B  07A6               	addwf	(?_abs)
  5257                           
  5258  0B1C  160A  118A  239C   	fcall	_abs
              120A  158A         
  5259  0B21  1283               	bcf	status, 5	;RP0=0, select bank0
  5260  0B22  1303               	bcf	status, 6	;RP1=0, select bank0
  5261  0B23  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5262  0B24  3A80               	xorlw	80h
  5263  0B25  00DF               	movwf	(??_robotMoveSpeed+2)+0
  5264  0B26  0827               	movf	(1+(?_abs)),w
  5265  0B27  3A80               	xorlw	80h
  5266  0B28  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  5267  0B29  1D03               	skipz
  5268  0B2A  2B2D               	goto	u4925
  5269  0B2B  0826               	movf	(0+(?_abs)),w
  5270  0B2C  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  5271  0B2D                     u4925:
  5272                           
  5273  0B2D  1C03               	skipc
  5274  0B2E  2B30               	goto	u4921
  5275  0B2F  2B31               	goto	u4920
  5276  0B30                     u4921:
  5277  0B30  2A91               	goto	l11464
  5278  0B31                     u4920:
  5279  0B31  2B32               	goto	l11494
  5280                           	
  5281  0B32                     l6149:	
  5282                           	line	398
  5283                           	
  5284  0B32                     l11494:	
  5285                           ;robot.c: 397: }
  5286                           ;robot.c: 398: Disp2 = ROBOTerror;
  5287  0B32  1683               	bsf	status, 5	;RP0=1, select bank1
  5288  0B33  1303               	bcf	status, 6	;RP1=0, select bank1
  5289  0B34  0851               	movf	(_ROBOTerror)^080h,w
  5290  0B35  1283               	bcf	status, 5	;RP0=0, select bank0
  5291  0B36  1303               	bcf	status, 6	;RP1=0, select bank0
  5292  0B37  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5293  0B38  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  5294  0B39  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5295  0B3A  1683               	bsf	status, 5	;RP0=1, select bank1
  5296  0B3B  1303               	bcf	status, 6	;RP1=0, select bank1
  5297  0B3C  00B6               	movwf	(_Disp2)^080h
  5298  0B3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  0B3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  0B3F  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5301  0B40  1683               	bsf	status, 5	;RP0=1, select bank1
  5302  0B41  1303               	bcf	status, 6	;RP1=0, select bank1
  5303  0B42  00B7               	movwf	(_Disp2+1)^080h
  5304                           	line	399
  5305                           	
  5306  0B43                     l11496:	
  5307                           ;robot.c: 399: UpdateDisplay();
  5308  0B43  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5309                           	line	400
  5310                           	
  5311  0B48                     l11498:	
  5312                           ;robot.c: 400: RobotDrive(0, 0x7FFF);
  5313  0B48  3000               	movlw	low(0)
  5314  0B49  1283               	bcf	status, 5	;RP0=0, select bank0
  5315  0B4A  1303               	bcf	status, 6	;RP1=0, select bank0
  5316  0B4B  00A2               	movwf	(?_RobotDrive)
  5317  0B4C  3000               	movlw	high(0)
  5318  0B4D  00A3               	movwf	((?_RobotDrive))+1
  5319  0B4E  30FF               	movlw	low(07FFFh)
  5320  0B4F  00A4               	movwf	0+(?_RobotDrive)+02h
  5321  0B50  307F               	movlw	high(07FFFh)
  5322  0B51  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  5323  0B52  160A  118A  23D1   	fcall	_RobotDrive
              120A  158A         
  5324                           	line	402
  5325                           	
  5326  0B57                     l6152:	
  5327  0B57  0008               	return
  5328                           	opt stack 0
  5329                           GLOBAL	__end_of_robotMoveSpeed
  5330  0B58                     	__end_of_robotMoveSpeed:
  5331 ;; =============== function _robotMoveSpeed ends ============
  5332                           
  5333                           	signat	_robotMoveSpeed,8312
  5334                           	global	_calibrateIR
  5335                           psect	text1045,local,class=CODE,delta=2
  5336                           global __ptext1045
  5337  15B1                     __ptext1045:
  5338                           
  5339 ;; *************** function _calibrateIR *****************
  5340 ;; Defined at:
  5341 ;;		line 318 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;		None               void
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5355 ;;      Params:         0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    6
  5362 ;; This function calls:
  5363 ;;		_rotate
  5364 ;;		_UpdateDisplay
  5365 ;; This function is called by:
  5366 ;;		_main
  5367 ;;		_Init_Follow_IR
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           psect	text1045
  5371                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5372                           	line	318
  5373                           	global	__size_of_calibrateIR
  5374  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  5375                           	
  5376  15B1                     _calibrateIR:	
  5377                           	opt	stack 0
  5378                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5379                           	line	319
  5380                           	
  5381  15B1                     l11430:	
  5382                           ;Main.c: 319: currentMenu = 1;
  5383  15B1  1683               	bsf	status, 5	;RP0=1, select bank1
  5384  15B2  1303               	bcf	status, 6	;RP1=0, select bank1
  5385  15B3  01D4               	clrf	(_currentMenu)^080h	;volatile
  5386  15B4  1403               	bsf	status,0
  5387  15B5  0DD4               	rlf	(_currentMenu)^080h,f	;volatile
  5388                           	line	320
  5389                           	
  5390  15B6                     l11432:	
  5391                           ;Main.c: 320: rotate(8, 0);
  5392  15B6  3008               	movlw	low(08h)
  5393  15B7  1283               	bcf	status, 5	;RP0=0, select bank0
  5394  15B8  1303               	bcf	status, 6	;RP1=0, select bank0
  5395  15B9  00A3               	movwf	(?_rotate)
  5396  15BA  3000               	movlw	high(08h)
  5397  15BB  00A4               	movwf	((?_rotate))+1
  5398  15BC  01A5               	clrf	0+(?_rotate)+02h
  5399  15BD  160A  118A  260F   	fcall	_rotate
              160A  118A         
  5400  15C2  2DC3               	goto	l11434
  5401                           	line	321
  5402                           ;Main.c: 321: while (1)
  5403                           	
  5404  15C3                     l2283:	
  5405                           	line	323
  5406                           	
  5407  15C3                     l11434:	
  5408                           ;Main.c: 322: {
  5409                           ;Main.c: 323: if (RTC_FLAG_250MS == 1)
  5410  15C3  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5411  15C4  2DC6               	goto	u4881
  5412  15C5  2DC7               	goto	u4880
  5413  15C6                     u4881:
  5414  15C6  2DFB               	goto	l11458
  5415  15C7                     u4880:
  5416                           	line	325
  5417                           	
  5418  15C7                     l11436:	
  5419                           ;Main.c: 324: {
  5420                           ;Main.c: 325: RTC_FLAG_250MS = 0;
  5421  15C7  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5422                           	line	326
  5423                           	
  5424  15C8                     l11438:	
  5425                           ;Main.c: 326: UpdateDisplay();
  5426  15C8  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  5427  15CD  2DFB               	goto	l11458
  5428                           	line	327
  5429                           	
  5430  15CE                     l2284:	
  5431                           	line	328
  5432                           ;Main.c: 327: }
  5433                           ;Main.c: 328: switch (buttonPressed)
  5434  15CE  2DFB               	goto	l11458
  5435                           	line	330
  5436                           ;Main.c: 329: {
  5437                           ;Main.c: 330: case 1:
  5438                           	
  5439  15CF                     l2286:	
  5440                           	line	331
  5441                           ;Main.c: 331: buttonPressed = 0;
  5442  15CF  01FD               	clrf	(_buttonPressed)	;volatile
  5443                           	line	332
  5444                           ;Main.c: 332: break;
  5445  15D0  2DC3               	goto	l11434
  5446                           	line	333
  5447                           ;Main.c: 333: case 2:
  5448                           	
  5449  15D1                     l2288:	
  5450                           	line	334
  5451                           ;Main.c: 334: buttonPressed = 0;
  5452  15D1  01FD               	clrf	(_buttonPressed)	;volatile
  5453                           	line	335
  5454                           ;Main.c: 335: break;
  5455  15D2  2DC3               	goto	l11434
  5456                           	line	336
  5457                           ;Main.c: 336: case 3:
  5458                           	
  5459  15D3                     l2289:	
  5460                           	line	337
  5461                           	
  5462  15D3                     l11440:	
  5463                           ;Main.c: 337: rotate(1, 1);
  5464  15D3  3001               	movlw	low(01h)
  5465  15D4  1283               	bcf	status, 5	;RP0=0, select bank0
  5466  15D5  1303               	bcf	status, 6	;RP1=0, select bank0
  5467  15D6  00A3               	movwf	(?_rotate)
  5468  15D7  3000               	movlw	high(01h)
  5469  15D8  00A4               	movwf	((?_rotate))+1
  5470  15D9  01A5               	clrf	0+(?_rotate)+02h
  5471  15DA  1403               	bsf	status,0
  5472  15DB  0DA5               	rlf	0+(?_rotate)+02h,f
  5473  15DC  160A  118A  260F   	fcall	_rotate
              160A  118A         
  5474                           	line	338
  5475                           	
  5476  15E1                     l11442:	
  5477                           ;Main.c: 338: buttonPressed = 0;
  5478  15E1  01FD               	clrf	(_buttonPressed)	;volatile
  5479                           	line	339
  5480                           ;Main.c: 339: break;
  5481  15E2  2DC3               	goto	l11434
  5482                           	line	340
  5483                           ;Main.c: 340: case 4:
  5484                           	
  5485  15E3                     l2290:	
  5486                           	line	341
  5487                           	
  5488  15E3                     l11444:	
  5489                           ;Main.c: 341: rotate(1, 0);
  5490  15E3  3001               	movlw	low(01h)
  5491  15E4  1283               	bcf	status, 5	;RP0=0, select bank0
  5492  15E5  1303               	bcf	status, 6	;RP1=0, select bank0
  5493  15E6  00A3               	movwf	(?_rotate)
  5494  15E7  3000               	movlw	high(01h)
  5495  15E8  00A4               	movwf	((?_rotate))+1
  5496  15E9  01A5               	clrf	0+(?_rotate)+02h
  5497  15EA  160A  118A  260F   	fcall	_rotate
              160A  118A         
  5498                           	line	342
  5499                           	
  5500  15EF                     l11446:	
  5501                           ;Main.c: 342: buttonPressed = 0;
  5502  15EF  01FD               	clrf	(_buttonPressed)	;volatile
  5503                           	line	343
  5504                           ;Main.c: 343: break;
  5505  15F0  2DC3               	goto	l11434
  5506                           	line	344
  5507                           ;Main.c: 344: case 5:
  5508                           	
  5509  15F1                     l2291:	
  5510                           	line	345
  5511                           	
  5512  15F1                     l11448:	
  5513                           ;Main.c: 345: totalSteps = 0;
  5514  15F1  1683               	bsf	status, 5	;RP0=1, select bank1
  5515  15F2  1303               	bcf	status, 6	;RP1=0, select bank1
  5516  15F3  01CA               	clrf	(_totalSteps)^080h
  5517  15F4  01CB               	clrf	(_totalSteps+1)^080h
  5518                           	line	346
  5519                           	
  5520  15F5                     l11450:	
  5521                           ;Main.c: 346: buttonPressed = 0;
  5522  15F5  01FD               	clrf	(_buttonPressed)	;volatile
  5523                           	line	347
  5524                           	
  5525  15F6                     l11452:	
  5526                           ;Main.c: 347: currentMenu = 0;
  5527  15F6  01D4               	clrf	(_currentMenu)^080h	;volatile
  5528  15F7  2E0E               	goto	l2292
  5529                           	line	348
  5530                           	
  5531  15F8                     l11454:	
  5532                           ;Main.c: 348: return;
  5533  15F8  2E0E               	goto	l2292
  5534                           	line	349
  5535                           ;Main.c: 349: default:
  5536                           	
  5537  15F9                     l2293:	
  5538                           	line	350
  5539                           ;Main.c: 350: break;
  5540  15F9  2DC3               	goto	l11434
  5541                           	line	351
  5542                           	
  5543  15FA                     l11456:	
  5544                           ;Main.c: 351: }
  5545  15FA  2DC3               	goto	l11434
  5546                           	line	328
  5547                           	
  5548  15FB                     l2285:	
  5549                           	
  5550  15FB                     l11458:	
  5551  15FB  087D               	movf	(_buttonPressed),w	;volatile
  5552                           	; Switch size 1, requested type "space"
  5553                           ; Number of cases is 5, Range of values is 1 to 5
  5554                           ; switch strategies available:
  5555                           ; Name         Instructions Cycles
  5556                           ; simple_byte           16     9 (average)
  5557                           ; direct_byte           26    11 (fixed)
  5558                           ; jumptable            263     9 (fixed)
  5559                           ;	Chosen strategy is simple_byte
  5560                           
  5561                           	opt asmopt_off
  5562  15FC  3A01               	xorlw	1^0	; case 1
  5563  15FD  1903               	skipnz
  5564  15FE  2DCF               	goto	l2286
  5565  15FF  3A03               	xorlw	2^1	; case 2
  5566  1600  1903               	skipnz
  5567  1601  2DD1               	goto	l2288
  5568  1602  3A01               	xorlw	3^2	; case 3
  5569  1603  1903               	skipnz
  5570  1604  2DD3               	goto	l11440
  5571  1605  3A07               	xorlw	4^3	; case 4
  5572  1606  1903               	skipnz
  5573  1607  2DE3               	goto	l11444
  5574  1608  3A01               	xorlw	5^4	; case 5
  5575  1609  1903               	skipnz
  5576  160A  2DF1               	goto	l11448
  5577  160B  2DC3               	goto	l11434
  5578                           	opt asmopt_on
  5579                           
  5580                           	line	351
  5581                           	
  5582  160C                     l2287:	
  5583  160C  2DC3               	goto	l11434
  5584                           	line	352
  5585                           	
  5586  160D                     l2294:	
  5587                           	line	321
  5588  160D  2DC3               	goto	l11434
  5589                           	
  5590  160E                     l2295:	
  5591                           	line	353
  5592                           	
  5593  160E                     l2292:	
  5594  160E  0008               	return
  5595                           	opt stack 0
  5596                           GLOBAL	__end_of_calibrateIR
  5597  160F                     	__end_of_calibrateIR:
  5598 ;; =============== function _calibrateIR ends ============
  5599                           
  5600                           	signat	_calibrateIR,88
  5601                           	global	_UpdateDisplay
  5602                           psect	text1046,local,class=CODE,delta=2
  5603                           global __ptext1046
  5604  0E0B                     __ptext1046:
  5605                           
  5606 ;; *************** function _UpdateDisplay *****************
  5607 ;; Defined at:
  5608 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  5613 ;; Return value:  Size  Location     Type
  5614 ;;		None               void
  5615 ;; Registers used:
  5616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5622 ;;      Params:         0       0       0       0       0
  5623 ;;      Locals:         0      16       0       0       0
  5624 ;;      Temps:          0       4       0       0       0
  5625 ;;      Totals:         0      20       0       0       0
  5626 ;;Total ram usage:       20 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    5
  5629 ;; This function calls:
  5630 ;;		_lcd_write_control
  5631 ;;		_sprintf
  5632 ;;		_lcd_set_cursor
  5633 ;;		_lcd_write_string
  5634 ;;		___awmod
  5635 ;; This function is called by:
  5636 ;;		_main
  5637 ;;		_calibrateIR
  5638 ;;		_ChargeMode
  5639 ;;		_robotFollow
  5640 ;;		_robot_turnRight
  5641 ;;		_robotMoveSpeed
  5642 ;;		_robotTurnSpeed
  5643 ;;		_scan360
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           psect	text1046
  5647                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  5648                           	line	236
  5649                           	global	__size_of_UpdateDisplay
  5650  01F5                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  5651                           	
  5652  0E0B                     _UpdateDisplay:	
  5653                           	opt	stack 1
  5654                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5655                           	line	237
  5656                           	
  5657  0E0B                     l11360:	
  5658                           ;HMI.c: 237: char LCDOutput[16] = "";
  5659  0E0B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  5660  0E0C  0084               	movwf	fsr0
  5661  0E0D  3090               	movlw	low(UpdateDisplay@F1261)
  5662  0E0E  1283               	bcf	status, 5	;RP0=0, select bank0
  5663  0E0F  1303               	bcf	status, 6	;RP1=0, select bank0
  5664  0E10  00C5               	movwf	(??_UpdateDisplay+0)+0
  5665  0E11  0804               	movf	fsr0,w
  5666  0E12  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  5667  0E13  3010               	movlw	16
  5668  0E14  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  5669  0E15                     u4860:
  5670  0E15  0845               	movf	(??_UpdateDisplay+0)+0,w
  5671  0E16  0084               	movwf	fsr0
  5672  0E17  1783               	bsf	status, 7	;select IRP bank3
  5673                           	
  5674  0E18  0800               	movf	indf,w
  5675  0E19  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  5676  0E1A  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  5677  0E1B  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  5678  0E1C  0084               	movwf	fsr0
  5679  0E1D  1383               	bcf	status, 7	;select IRP bank0
  5680                           	
  5681  0E1E  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  5682  0E1F  0080               	movwf	indf
  5683  0E20  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  5684  0E21  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  5685  0E22  2E15               	goto	u4860
  5686                           	line	238
  5687                           ;HMI.c: 238: switch (currentMenu)
  5688  0E23  2FF2               	goto	l11424
  5689                           	line	240
  5690                           ;HMI.c: 239: {
  5691                           ;HMI.c: 240: case 0:
  5692                           	
  5693  0E24                     l4577:	
  5694                           	line	241
  5695                           	
  5696  0E24                     l11362:	
  5697                           ;HMI.c: 241: lcd_write_control(0b00000001);
  5698  0E24  3001               	movlw	(01h)
  5699  0E25  160A  118A  2122   	fcall	_lcd_write_control
              120A  158A         
  5700                           	line	242
  5701                           	
  5702  0E2A                     l11364:	
  5703                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  5704  0E2A  302B               	movlw	((STR_13-__stringbase))&0ffh
  5705  0E2B  1283               	bcf	status, 5	;RP0=0, select bank0
  5706  0E2C  1303               	bcf	status, 6	;RP1=0, select bank0
  5707  0E2D  00C5               	movwf	(??_UpdateDisplay+0)+0
  5708  0E2E  0845               	movf	(??_UpdateDisplay+0)+0,w
  5709  0E2F  00B4               	movwf	(?_sprintf)
  5710  0E30  1683               	bsf	status, 5	;RP0=1, select bank1
  5711  0E31  1303               	bcf	status, 6	;RP1=0, select bank1
  5712  0E32  0835               	movf	(_Disp1+1)^080h,w
  5713  0E33  1283               	bcf	status, 5	;RP0=0, select bank0
  5714  0E34  1303               	bcf	status, 6	;RP1=0, select bank0
  5715  0E35  01B6               	clrf	1+(?_sprintf)+01h
  5716  0E36  07B6               	addwf	1+(?_sprintf)+01h
  5717  0E37  1683               	bsf	status, 5	;RP0=1, select bank1
  5718  0E38  1303               	bcf	status, 6	;RP1=0, select bank1
  5719  0E39  0834               	movf	(_Disp1)^080h,w
  5720  0E3A  1283               	bcf	status, 5	;RP0=0, select bank0
  5721  0E3B  1303               	bcf	status, 6	;RP1=0, select bank0
  5722  0E3C  01B5               	clrf	0+(?_sprintf)+01h
  5723  0E3D  07B5               	addwf	0+(?_sprintf)+01h
  5724                           
  5725  0E3E  1683               	bsf	status, 5	;RP0=1, select bank1
  5726  0E3F  1303               	bcf	status, 6	;RP1=0, select bank1
  5727  0E40  0837               	movf	(_Disp2+1)^080h,w
  5728  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  5729  0E42  1303               	bcf	status, 6	;RP1=0, select bank0
  5730  0E43  01B8               	clrf	1+(?_sprintf)+03h
  5731  0E44  07B8               	addwf	1+(?_sprintf)+03h
  5732  0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  5733  0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  5734  0E47  0836               	movf	(_Disp2)^080h,w
  5735  0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  5736  0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  5737  0E4A  01B7               	clrf	0+(?_sprintf)+03h
  5738  0E4B  07B7               	addwf	0+(?_sprintf)+03h
  5739                           
  5740  0E4C  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  5741  0E4D  120A  118A  2674   	fcall	_sprintf
              120A  158A         
  5742                           	line	243
  5743                           	
  5744  0E52                     l11366:	
  5745                           ;HMI.c: 243: lcd_set_cursor(0x00);
  5746  0E52  3000               	movlw	(0)
  5747  0E53  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5748                           	line	244
  5749                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  5750  0E58  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  5751  0E59  1283               	bcf	status, 5	;RP0=0, select bank0
  5752  0E5A  1303               	bcf	status, 6	;RP1=0, select bank0
  5753  0E5B  00A7               	movwf	(?_lcd_write_string)
  5754  0E5C  3000               	movlw	(0x0/2)
  5755  0E5D  00A8               	movwf	(?_lcd_write_string+1)
  5756  0E5E  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5757                           	line	245
  5758                           	
  5759  0E63                     l11368:	
  5760                           ;HMI.c: 245: lcd_set_cursor(0x40);
  5761  0E63  3040               	movlw	(040h)
  5762  0E64  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5763                           	line	246
  5764                           	
  5765  0E69                     l11370:	
  5766                           ;HMI.c: 246: if (pos > 0)
  5767  0E69  1683               	bsf	status, 5	;RP0=1, select bank1
  5768  0E6A  1303               	bcf	status, 6	;RP1=0, select bank1
  5769  0E6B  0847               	movf	(_pos+1)^080h,w
  5770  0E6C  3A80               	xorlw	80h
  5771  0E6D  00FF               	movwf	btemp+1
  5772  0E6E  3080               	movlw	(high(01h))^80h
  5773  0E6F  027F               	subwf	btemp+1,w
  5774  0E70  1D03               	skipz
  5775  0E71  2E74               	goto	u4875
  5776  0E72  3001               	movlw	low(01h)
  5777  0E73  0246               	subwf	(_pos)^080h,w
  5778  0E74                     u4875:
  5779                           
  5780  0E74  1C03               	skipc
  5781  0E75  2E77               	goto	u4871
  5782  0E76  2E78               	goto	u4870
  5783  0E77                     u4871:
  5784  0E77  2E8B               	goto	l11374
  5785  0E78                     u4870:
  5786                           	line	247
  5787                           	
  5788  0E78                     l11372:	
  5789                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  5790  0E78  1683               	bsf	status, 5	;RP0=1, select bank1
  5791  0E79  1303               	bcf	status, 6	;RP1=0, select bank1
  5792  0E7A  0846               	movf	(_pos)^080h,w
  5793  0E7B  3EFF               	addlw	0FFh
  5794  0E7C  3EE4               	addlw	_shortMenuStrings&0ffh
  5795  0E7D  0084               	movwf	fsr0
  5796  0E7E  1383               	bcf	status, 7	;select IRP bank1
  5797  0E7F  0800               	movf	indf,w
  5798  0E80  1283               	bcf	status, 5	;RP0=0, select bank0
  5799  0E81  1303               	bcf	status, 6	;RP1=0, select bank0
  5800  0E82  00A7               	movwf	(?_lcd_write_string)
  5801  0E83  3080               	movlw	80h
  5802  0E84  00A8               	movwf	(?_lcd_write_string+1)
  5803  0E85  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5804  0E8A  2E9E               	goto	l11376
  5805                           	line	248
  5806                           	
  5807  0E8B                     l4578:	
  5808                           	line	249
  5809                           	
  5810  0E8B                     l11374:	
  5811                           ;HMI.c: 248: else
  5812                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  5813  0E8B  1683               	bsf	status, 5	;RP0=1, select bank1
  5814  0E8C  1303               	bcf	status, 6	;RP1=0, select bank1
  5815  0E8D  0846               	movf	(_pos)^080h,w
  5816  0E8E  3E05               	addlw	05h
  5817  0E8F  3EE4               	addlw	_shortMenuStrings&0ffh
  5818  0E90  0084               	movwf	fsr0
  5819  0E91  1383               	bcf	status, 7	;select IRP bank1
  5820  0E92  0800               	movf	indf,w
  5821  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  5822  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  5823  0E95  00A7               	movwf	(?_lcd_write_string)
  5824  0E96  3080               	movlw	80h
  5825  0E97  00A8               	movwf	(?_lcd_write_string+1)
  5826  0E98  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5827  0E9D  2E9E               	goto	l11376
  5828                           	
  5829  0E9E                     l4579:	
  5830                           	line	250
  5831                           	
  5832  0E9E                     l11376:	
  5833                           ;HMI.c: 250: lcd_set_cursor(0x44);
  5834  0E9E  3044               	movlw	(044h)
  5835  0E9F  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5836                           	line	251
  5837                           	
  5838  0EA4                     l11378:	
  5839                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  5840  0EA4  1683               	bsf	status, 5	;RP0=1, select bank1
  5841  0EA5  1303               	bcf	status, 6	;RP1=0, select bank1
  5842  0EA6  0846               	movf	(_pos)^080h,w
  5843  0EA7  3EDE               	addlw	_menuStrings&0ffh
  5844  0EA8  0084               	movwf	fsr0
  5845  0EA9  1383               	bcf	status, 7	;select IRP bank1
  5846  0EAA  0800               	movf	indf,w
  5847  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5848  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5849  0EAD  00A7               	movwf	(?_lcd_write_string)
  5850  0EAE  3080               	movlw	80h
  5851  0EAF  00A8               	movwf	(?_lcd_write_string+1)
  5852  0EB0  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5853                           	line	252
  5854                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  5855  0EB5  304D               	movlw	(04Dh)
  5856  0EB6  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5857                           	line	253
  5858                           	
  5859  0EBB                     l11380:	
  5860                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  5861  0EBB  3006               	movlw	low(06h)
  5862  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  5863  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  5864  0EBE  00A0               	movwf	(?___awmod)
  5865  0EBF  3000               	movlw	high(06h)
  5866  0EC0  00A1               	movwf	((?___awmod))+1
  5867  0EC1  1683               	bsf	status, 5	;RP0=1, select bank1
  5868  0EC2  1303               	bcf	status, 6	;RP1=0, select bank1
  5869  0EC3  0846               	movf	(_pos)^080h,w
  5870  0EC4  3E01               	addlw	low(01h)
  5871  0EC5  1283               	bcf	status, 5	;RP0=0, select bank0
  5872  0EC6  1303               	bcf	status, 6	;RP1=0, select bank0
  5873  0EC7  00A2               	movwf	0+(?___awmod)+02h
  5874  0EC8  1683               	bsf	status, 5	;RP0=1, select bank1
  5875  0EC9  1303               	bcf	status, 6	;RP1=0, select bank1
  5876  0ECA  0847               	movf	(_pos+1)^080h,w
  5877  0ECB  1803               	skipnc
  5878  0ECC  3E01               	addlw	1
  5879  0ECD  3E00               	addlw	high(01h)
  5880  0ECE  1283               	bcf	status, 5	;RP0=0, select bank0
  5881  0ECF  1303               	bcf	status, 6	;RP1=0, select bank0
  5882  0ED0  00A3               	movwf	1+0+(?___awmod)+02h
  5883  0ED1  120A  158A  20C4   	fcall	___awmod
              120A  158A         
  5884  0ED6  1283               	bcf	status, 5	;RP0=0, select bank0
  5885  0ED7  1303               	bcf	status, 6	;RP1=0, select bank0
  5886  0ED8  0820               	movf	(0+(?___awmod)),w
  5887  0ED9  3EE4               	addlw	_shortMenuStrings&0ffh
  5888  0EDA  0084               	movwf	fsr0
  5889  0EDB  1383               	bcf	status, 7	;select IRP bank1
  5890  0EDC  0800               	movf	indf,w
  5891  0EDD  00A7               	movwf	(?_lcd_write_string)
  5892  0EDE  3080               	movlw	80h
  5893  0EDF  00A8               	movwf	(?_lcd_write_string+1)
  5894  0EE0  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5895                           	line	254
  5896                           ;HMI.c: 254: break;
  5897  0EE5  2FFF               	goto	l4592
  5898                           	line	255
  5899                           ;HMI.c: 255: case 1:
  5900                           	
  5901  0EE6                     l4581:	
  5902                           	line	256
  5903                           	
  5904  0EE6                     l11382:	
  5905                           ;HMI.c: 256: lcd_write_control(0b00000001);
  5906  0EE6  3001               	movlw	(01h)
  5907  0EE7  160A  118A  2122   	fcall	_lcd_write_control
              120A  158A         
  5908                           	line	257
  5909                           ;HMI.c: 257: lcd_set_cursor(0x00);
  5910  0EEC  3000               	movlw	(0)
  5911  0EED  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5912                           	line	258
  5913                           	
  5914  0EF2                     l11384:	
  5915                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  5916  0EF2  301B               	movlw	low((STR_14-__stringbase))
  5917  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  5918  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  5919  0EF5  00A7               	movwf	(?_lcd_write_string)
  5920  0EF6  3080               	movlw	80h
  5921  0EF7  00A8               	movwf	(?_lcd_write_string+1)
  5922  0EF8  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5923                           	line	259
  5924                           	
  5925  0EFD                     l11386:	
  5926                           ;HMI.c: 259: lcd_set_cursor(0x40);
  5927  0EFD  3040               	movlw	(040h)
  5928  0EFE  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5929                           	line	260
  5930                           ;HMI.c: 260: lcd_write_string("<<<");
  5931  0F03  3087               	movlw	low((STR_15-__stringbase))
  5932  0F04  1283               	bcf	status, 5	;RP0=0, select bank0
  5933  0F05  1303               	bcf	status, 6	;RP1=0, select bank0
  5934  0F06  00A7               	movwf	(?_lcd_write_string)
  5935  0F07  3080               	movlw	80h
  5936  0F08  00A8               	movwf	(?_lcd_write_string+1)
  5937  0F09  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5938                           	line	261
  5939                           	
  5940  0F0E                     l11388:	
  5941                           ;HMI.c: 261: lcd_set_cursor(0x44);
  5942  0F0E  3044               	movlw	(044h)
  5943  0F0F  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5944                           	line	262
  5945                           	
  5946  0F14                     l11390:	
  5947                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  5948  0F14  3076               	movlw	low((STR_16-__stringbase))
  5949  0F15  1283               	bcf	status, 5	;RP0=0, select bank0
  5950  0F16  1303               	bcf	status, 6	;RP1=0, select bank0
  5951  0F17  00A7               	movwf	(?_lcd_write_string)
  5952  0F18  3080               	movlw	80h
  5953  0F19  00A8               	movwf	(?_lcd_write_string+1)
  5954  0F1A  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5955                           	line	263
  5956                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  5957  0F1F  304D               	movlw	(04Dh)
  5958  0F20  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5959                           	line	264
  5960                           	
  5961  0F25                     l11392:	
  5962                           ;HMI.c: 264: lcd_write_string(">>>");
  5963  0F25  308B               	movlw	low((STR_17-__stringbase))
  5964  0F26  1283               	bcf	status, 5	;RP0=0, select bank0
  5965  0F27  1303               	bcf	status, 6	;RP1=0, select bank0
  5966  0F28  00A7               	movwf	(?_lcd_write_string)
  5967  0F29  3080               	movlw	80h
  5968  0F2A  00A8               	movwf	(?_lcd_write_string+1)
  5969  0F2B  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5970                           	line	265
  5971                           ;HMI.c: 265: break;
  5972  0F30  2FFF               	goto	l4592
  5973                           	line	266
  5974                           ;HMI.c: 266: case 2:
  5975                           	
  5976  0F31                     l4582:	
  5977                           	line	267
  5978                           	
  5979  0F31                     l11394:	
  5980                           ;HMI.c: 267: lcd_write_control(0b00000001);
  5981  0F31  3001               	movlw	(01h)
  5982  0F32  160A  118A  2122   	fcall	_lcd_write_control
              120A  158A         
  5983                           	line	268
  5984                           ;HMI.c: 268: lcd_set_cursor(0x00);
  5985  0F37  3000               	movlw	(0)
  5986  0F38  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  5987                           	line	269
  5988                           	
  5989  0F3D                     l11396:	
  5990                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  5991  0F3D  300B               	movlw	low((STR_18-__stringbase))
  5992  0F3E  1283               	bcf	status, 5	;RP0=0, select bank0
  5993  0F3F  1303               	bcf	status, 6	;RP1=0, select bank0
  5994  0F40  00A7               	movwf	(?_lcd_write_string)
  5995  0F41  3080               	movlw	80h
  5996  0F42  00A8               	movwf	(?_lcd_write_string+1)
  5997  0F43  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  5998                           	line	270
  5999                           	
  6000  0F48                     l11398:	
  6001                           ;HMI.c: 270: lcd_set_cursor(0x40);
  6002  0F48  3040               	movlw	(040h)
  6003  0F49  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  6004                           	line	271
  6005                           ;HMI.c: 271: sprintf(LCDOutput,"%dmV", BattCharge);
  6006  0F4E  307E               	movlw	((STR_19-__stringbase))&0ffh
  6007  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  6008  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  6009  0F51  00C5               	movwf	(??_UpdateDisplay+0)+0
  6010  0F52  0845               	movf	(??_UpdateDisplay+0)+0,w
  6011  0F53  00B4               	movwf	(?_sprintf)
  6012  0F54  1683               	bsf	status, 5	;RP0=1, select bank1
  6013  0F55  1303               	bcf	status, 6	;RP1=0, select bank1
  6014  0F56  0831               	movf	(_BattCharge+1)^080h,w
  6015  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  6016  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  6017  0F59  01B6               	clrf	1+(?_sprintf)+01h
  6018  0F5A  07B6               	addwf	1+(?_sprintf)+01h
  6019  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  6020  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  6021  0F5D  0830               	movf	(_BattCharge)^080h,w
  6022  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  6023  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  6024  0F60  01B5               	clrf	0+(?_sprintf)+01h
  6025  0F61  07B5               	addwf	0+(?_sprintf)+01h
  6026                           
  6027  0F62  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6028  0F63  120A  118A  2674   	fcall	_sprintf
              120A  158A         
  6029                           	line	272
  6030                           ;HMI.c: 272: lcd_write_string(LCDOutput);
  6031  0F68  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  6032  0F69  1283               	bcf	status, 5	;RP0=0, select bank0
  6033  0F6A  1303               	bcf	status, 6	;RP1=0, select bank0
  6034  0F6B  00A7               	movwf	(?_lcd_write_string)
  6035  0F6C  3000               	movlw	(0x0/2)
  6036  0F6D  00A8               	movwf	(?_lcd_write_string+1)
  6037  0F6E  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6038                           	line	273
  6039                           	
  6040  0F73                     l11400:	
  6041                           ;HMI.c: 273: lcd_set_cursor(0x4D);
  6042  0F73  304D               	movlw	(04Dh)
  6043  0F74  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  6044                           	line	274
  6045                           ;HMI.c: 274: switch(BattState)
  6046  0F79  2FC3               	goto	l11416
  6047                           	line	276
  6048                           ;HMI.c: 275: {
  6049                           ;HMI.c: 276: case 0:
  6050                           	
  6051  0F7A                     l4584:	
  6052                           	line	277
  6053                           	
  6054  0F7A                     l11402:	
  6055                           ;HMI.c: 277: lcd_write_string("NC");
  6056  0F7A  30A6               	movlw	low((STR_20-__stringbase))
  6057  0F7B  1283               	bcf	status, 5	;RP0=0, select bank0
  6058  0F7C  1303               	bcf	status, 6	;RP1=0, select bank0
  6059  0F7D  00A7               	movwf	(?_lcd_write_string)
  6060  0F7E  3080               	movlw	80h
  6061  0F7F  00A8               	movwf	(?_lcd_write_string+1)
  6062  0F80  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6063                           	line	278
  6064                           ;HMI.c: 278: break;
  6065  0F85  2FDE               	goto	l11418
  6066                           	line	279
  6067                           ;HMI.c: 279: case 1:
  6068                           	
  6069  0F86                     l4586:	
  6070                           	line	280
  6071                           	
  6072  0F86                     l11404:	
  6073                           ;HMI.c: 280: lcd_write_string("RC");
  6074  0F86  30A9               	movlw	low((STR_21-__stringbase))
  6075  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  6076  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  6077  0F89  00A7               	movwf	(?_lcd_write_string)
  6078  0F8A  3080               	movlw	80h
  6079  0F8B  00A8               	movwf	(?_lcd_write_string+1)
  6080  0F8C  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6081                           	line	281
  6082                           ;HMI.c: 281: break;
  6083  0F91  2FDE               	goto	l11418
  6084                           	line	282
  6085                           ;HMI.c: 282: case 2:
  6086                           	
  6087  0F92                     l4587:	
  6088                           	line	283
  6089                           	
  6090  0F92                     l11406:	
  6091                           ;HMI.c: 283: lcd_write_string("FC");
  6092  0F92  30A3               	movlw	low((STR_22-__stringbase))
  6093  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  6094  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  6095  0F95  00A7               	movwf	(?_lcd_write_string)
  6096  0F96  3080               	movlw	80h
  6097  0F97  00A8               	movwf	(?_lcd_write_string+1)
  6098  0F98  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6099                           	line	284
  6100                           ;HMI.c: 284: break;
  6101  0F9D  2FDE               	goto	l11418
  6102                           	line	285
  6103                           ;HMI.c: 285: case 3:
  6104                           	
  6105  0F9E                     l4588:	
  6106                           	line	286
  6107                           	
  6108  0F9E                     l11408:	
  6109                           ;HMI.c: 286: lcd_write_string("TC");
  6110  0F9E  30AC               	movlw	low((STR_23-__stringbase))
  6111  0F9F  1283               	bcf	status, 5	;RP0=0, select bank0
  6112  0FA0  1303               	bcf	status, 6	;RP1=0, select bank0
  6113  0FA1  00A7               	movwf	(?_lcd_write_string)
  6114  0FA2  3080               	movlw	80h
  6115  0FA3  00A8               	movwf	(?_lcd_write_string+1)
  6116  0FA4  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6117                           	line	287
  6118                           ;HMI.c: 287: break;
  6119  0FA9  2FDE               	goto	l11418
  6120                           	line	288
  6121                           ;HMI.c: 288: case 4:
  6122                           	
  6123  0FAA                     l4589:	
  6124                           	line	289
  6125                           	
  6126  0FAA                     l11410:	
  6127                           ;HMI.c: 289: lcd_write_string("Wa");
  6128  0FAA  30AF               	movlw	low((STR_24-__stringbase))
  6129  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6130  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6131  0FAD  00A7               	movwf	(?_lcd_write_string)
  6132  0FAE  3080               	movlw	80h
  6133  0FAF  00A8               	movwf	(?_lcd_write_string+1)
  6134  0FB0  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6135                           	line	290
  6136                           ;HMI.c: 290: break;
  6137  0FB5  2FDE               	goto	l11418
  6138                           	line	291
  6139                           ;HMI.c: 291: case 5:
  6140                           	
  6141  0FB6                     l4590:	
  6142                           	line	292
  6143                           	
  6144  0FB6                     l11412:	
  6145                           ;HMI.c: 292: lcd_write_string("FC");
  6146  0FB6  30A3               	movlw	low((STR_25-__stringbase))
  6147  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  6148  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  6149  0FB9  00A7               	movwf	(?_lcd_write_string)
  6150  0FBA  3080               	movlw	80h
  6151  0FBB  00A8               	movwf	(?_lcd_write_string+1)
  6152  0FBC  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6153                           	line	293
  6154                           ;HMI.c: 293: break;
  6155  0FC1  2FDE               	goto	l11418
  6156                           	line	294
  6157                           	
  6158  0FC2                     l11414:	
  6159                           ;HMI.c: 294: }
  6160  0FC2  2FDE               	goto	l11418
  6161                           	line	274
  6162                           	
  6163  0FC3                     l4583:	
  6164                           	
  6165  0FC3                     l11416:	
  6166                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6167                           ; Switch size 1, requested type "space"
  6168                           ; Number of cases is 1, Range of values is 0 to 0
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte            4     3 (average)
  6172                           ; direct_byte           11     8 (fixed)
  6173                           ; jumptable            260     6 (fixed)
  6174                           ; rangetable             5     6 (fixed)
  6175                           ; spacedrange            8     9 (fixed)
  6176                           ; locatedrange           1     3 (fixed)
  6177                           ;	Chosen strategy is simple_byte
  6178                           
  6179  0FC3  1683               	bsf	status, 5	;RP0=1, select bank1
  6180  0FC4  1303               	bcf	status, 6	;RP1=0, select bank1
  6181  0FC5  0833               	movf (_BattState+1)^080h,w
  6182                           	opt asmopt_off
  6183  0FC6  3A00               	xorlw	0^0	; case 0
  6184  0FC7  1903               	skipnz
  6185  0FC8  2FCA               	goto	l11842
  6186  0FC9  2FDE               	goto	l11418
  6187                           	opt asmopt_on
  6188                           	
  6189  0FCA                     l11842:	
  6190                           ; Switch size 1, requested type "space"
  6191                           ; Number of cases is 6, Range of values is 0 to 5
  6192                           ; switch strategies available:
  6193                           ; Name         Instructions Cycles
  6194                           ; simple_byte           19    10 (average)
  6195                           ; direct_byte           26     8 (fixed)
  6196                           ; jumptable            260     6 (fixed)
  6197                           ; rangetable            10     6 (fixed)
  6198                           ; spacedrange           18     9 (fixed)
  6199                           ; locatedrange           6     3 (fixed)
  6200                           ;	Chosen strategy is simple_byte
  6201                           
  6202  0FCA  0832               	movf (_BattState)^080h,w
  6203                           	opt asmopt_off
  6204  0FCB  3A00               	xorlw	0^0	; case 0
  6205  0FCC  1903               	skipnz
  6206  0FCD  2F7A               	goto	l11402
  6207  0FCE  3A01               	xorlw	1^0	; case 1
  6208  0FCF  1903               	skipnz
  6209  0FD0  2F86               	goto	l11404
  6210  0FD1  3A03               	xorlw	2^1	; case 2
  6211  0FD2  1903               	skipnz
  6212  0FD3  2F92               	goto	l11406
  6213  0FD4  3A01               	xorlw	3^2	; case 3
  6214  0FD5  1903               	skipnz
  6215  0FD6  2F9E               	goto	l11408
  6216  0FD7  3A07               	xorlw	4^3	; case 4
  6217  0FD8  1903               	skipnz
  6218  0FD9  2FAA               	goto	l11410
  6219  0FDA  3A01               	xorlw	5^4	; case 5
  6220  0FDB  1903               	skipnz
  6221  0FDC  2FB6               	goto	l11412
  6222  0FDD  2FDE               	goto	l11418
  6223                           	opt asmopt_on
  6224                           
  6225                           	line	294
  6226                           	
  6227  0FDE                     l4585:	
  6228                           	line	296
  6229                           	
  6230  0FDE                     l11418:	
  6231                           ;HMI.c: 296: lcd_set_cursor(0x44);
  6232  0FDE  3044               	movlw	(044h)
  6233  0FDF  160A  118A  20D0   	fcall	_lcd_set_cursor
              120A  158A         
  6234                           	line	297
  6235                           	
  6236  0FE4                     l11420:	
  6237                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  6238  0FE4  3038               	movlw	low((STR_26-__stringbase))
  6239  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  6240  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  6241  0FE7  00A7               	movwf	(?_lcd_write_string)
  6242  0FE8  3080               	movlw	80h
  6243  0FE9  00A8               	movwf	(?_lcd_write_string+1)
  6244  0FEA  160A  118A  22B6   	fcall	_lcd_write_string
              120A  158A         
  6245                           	line	298
  6246                           ;HMI.c: 298: break;
  6247  0FEF  2FFF               	goto	l4592
  6248                           	line	299
  6249                           ;HMI.c: 299: default:
  6250                           	
  6251  0FF0                     l4591:	
  6252                           	line	300
  6253                           ;HMI.c: 300: break;
  6254  0FF0  2FFF               	goto	l4592
  6255                           	line	301
  6256                           	
  6257  0FF1                     l11422:	
  6258                           ;HMI.c: 301: }
  6259  0FF1  2FFF               	goto	l4592
  6260                           	line	238
  6261                           	
  6262  0FF2                     l4576:	
  6263                           	
  6264  0FF2                     l11424:	
  6265  0FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  6266  0FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  6267  0FF4  0854               	movf	(_currentMenu)^080h,w	;volatile
  6268                           	; Switch size 1, requested type "space"
  6269                           ; Number of cases is 3, Range of values is 0 to 2
  6270                           ; switch strategies available:
  6271                           ; Name         Instructions Cycles
  6272                           ; simple_byte           10     6 (average)
  6273                           ; direct_byte           17     8 (fixed)
  6274                           ; jumptable            260     6 (fixed)
  6275                           ; rangetable             7     6 (fixed)
  6276                           ; spacedrange           12     9 (fixed)
  6277                           ; locatedrange           3     3 (fixed)
  6278                           ;	Chosen strategy is simple_byte
  6279                           
  6280                           	opt asmopt_off
  6281  0FF5  3A00               	xorlw	0^0	; case 0
  6282  0FF6  1903               	skipnz
  6283  0FF7  2E24               	goto	l11362
  6284  0FF8  3A01               	xorlw	1^0	; case 1
  6285  0FF9  1903               	skipnz
  6286  0FFA  2EE6               	goto	l11382
  6287  0FFB  3A03               	xorlw	2^1	; case 2
  6288  0FFC  1903               	skipnz
  6289  0FFD  2F31               	goto	l11394
  6290  0FFE  2FFF               	goto	l4592
  6291                           	opt asmopt_on
  6292                           
  6293                           	line	301
  6294                           	
  6295  0FFF                     l4580:	
  6296                           	line	302
  6297                           	
  6298  0FFF                     l4592:	
  6299  0FFF  0008               	return
  6300                           	opt stack 0
  6301                           GLOBAL	__end_of_UpdateDisplay
  6302  1000                     	__end_of_UpdateDisplay:
  6303 ;; =============== function _UpdateDisplay ends ============
  6304                           
  6305                           	signat	_UpdateDisplay,88
  6306                           	global	_readAvgDistance
  6307                           psect	text1047,local,class=CODE,delta=2
  6308                           global __ptext1047
  6309  16EA                     __ptext1047:
  6310                           
  6311 ;; *************** function _readAvgDistance *****************
  6312 ;; Defined at:
  6313 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  i               2   22[BANK0 ] int 
  6318 ;;  tempIR          2   20[BANK0 ] unsigned int 
  6319 ;;  j               2   18[BANK0 ] int 
  6320 ;;  fullval         2   16[BANK0 ] unsigned int 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;		None               void
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6330 ;;      Params:         0       0       0       0       0
  6331 ;;      Locals:         0       8       0       0       0
  6332 ;;      Temps:          0       0       0       0       0
  6333 ;;      Totals:         0       8       0       0       0
  6334 ;;Total ram usage:        8 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    6
  6337 ;; This function calls:
  6338 ;;		_readDistance
  6339 ;;		___lwdiv
  6340 ;;		_ADCconvert
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;;		_robotFollow
  6344 ;;		_robot_turnRight
  6345 ;;		_RightTurn
  6346 ;;		_scan360
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           psect	text1047
  6350                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6351                           	line	28
  6352                           	global	__size_of_readAvgDistance
  6353  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  6354                           	
  6355  16EA                     _readAvgDistance:	
  6356                           	opt	stack 0
  6357                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6358                           	line	29
  6359                           	
  6360  16EA                     l11342:	
  6361                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  6362  16EA  1283               	bcf	status, 5	;RP0=0, select bank0
  6363  16EB  1303               	bcf	status, 6	;RP1=0, select bank0
  6364  16EC  01B0               	clrf	(readAvgDistance@fullval)
  6365  16ED  01B1               	clrf	(readAvgDistance@fullval+1)
  6366  16EE  01B4               	clrf	(readAvgDistance@tempIR)
  6367  16EF  01B5               	clrf	(readAvgDistance@tempIR+1)
  6368                           	line	30
  6369                           ;infrared.c: 30: int j = 0;
  6370  16F0  01B2               	clrf	(readAvgDistance@j)
  6371  16F1  01B3               	clrf	(readAvgDistance@j+1)
  6372                           	line	32
  6373                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  6374  16F2  01B6               	clrf	(readAvgDistance@i)
  6375  16F3  01B7               	clrf	(readAvgDistance@i+1)
  6376                           	
  6377  16F4                     l11344:	
  6378  16F4  0837               	movf	(readAvgDistance@i+1),w
  6379  16F5  3A80               	xorlw	80h
  6380  16F6  00FF               	movwf	btemp+1
  6381  16F7  3080               	movlw	(high(08h))^80h
  6382  16F8  027F               	subwf	btemp+1,w
  6383  16F9  1D03               	skipz
  6384  16FA  2EFD               	goto	u4835
  6385  16FB  3008               	movlw	low(08h)
  6386  16FC  0236               	subwf	(readAvgDistance@i),w
  6387  16FD                     u4835:
  6388                           
  6389  16FD  1C03               	skipc
  6390  16FE  2F00               	goto	u4831
  6391  16FF  2F01               	goto	u4830
  6392  1700                     u4831:
  6393  1700  2F03               	goto	l11348
  6394  1701                     u4830:
  6395  1701  2F39               	goto	l11356
  6396                           	
  6397  1702                     l11346:	
  6398  1702  2F39               	goto	l11356
  6399                           	line	33
  6400                           	
  6401  1703                     l3024:	
  6402                           	line	34
  6403                           	
  6404  1703                     l11348:	
  6405                           ;infrared.c: 33: {
  6406                           ;infrared.c: 34: tempIR = readDistance();
  6407  1703  160A  118A  214C   	fcall	_readDistance
              160A  118A         
  6408  1708  1283               	bcf	status, 5	;RP0=0, select bank0
  6409  1709  1303               	bcf	status, 6	;RP1=0, select bank0
  6410  170A  0829               	movf	(1+(?_readDistance)),w
  6411  170B  01B5               	clrf	(readAvgDistance@tempIR+1)
  6412  170C  07B5               	addwf	(readAvgDistance@tempIR+1)
  6413  170D  0828               	movf	(0+(?_readDistance)),w
  6414  170E  01B4               	clrf	(readAvgDistance@tempIR)
  6415  170F  07B4               	addwf	(readAvgDistance@tempIR)
  6416                           
  6417                           	line	35
  6418                           	
  6419  1710                     l11350:	
  6420                           ;infrared.c: 35: if (tempIR <= 1000)
  6421  1710  3003               	movlw	high(03E9h)
  6422  1711  0235               	subwf	(readAvgDistance@tempIR+1),w
  6423  1712  30E9               	movlw	low(03E9h)
  6424  1713  1903               	skipnz
  6425  1714  0234               	subwf	(readAvgDistance@tempIR),w
  6426  1715  1803               	skipnc
  6427  1716  2F18               	goto	u4841
  6428  1717  2F19               	goto	u4840
  6429  1718                     u4841:
  6430  1718  2F25               	goto	l3026
  6431  1719                     u4840:
  6432                           	line	37
  6433                           	
  6434  1719                     l11352:	
  6435                           ;infrared.c: 36: {
  6436                           ;infrared.c: 37: fullval += tempIR;
  6437  1719  0834               	movf	(readAvgDistance@tempIR),w
  6438  171A  07B0               	addwf	(readAvgDistance@fullval),f
  6439  171B  1803               	skipnc
  6440  171C  0AB1               	incf	(readAvgDistance@fullval+1),f
  6441  171D  0835               	movf	(readAvgDistance@tempIR+1),w
  6442  171E  07B1               	addwf	(readAvgDistance@fullval+1),f
  6443                           	line	38
  6444                           ;infrared.c: 38: j++;
  6445  171F  3001               	movlw	low(01h)
  6446  1720  07B2               	addwf	(readAvgDistance@j),f
  6447  1721  1803               	skipnc
  6448  1722  0AB3               	incf	(readAvgDistance@j+1),f
  6449  1723  3000               	movlw	high(01h)
  6450  1724  07B3               	addwf	(readAvgDistance@j+1),f
  6451                           	line	39
  6452                           	
  6453  1725                     l3026:	
  6454                           	line	32
  6455  1725  3001               	movlw	low(01h)
  6456  1726  07B6               	addwf	(readAvgDistance@i),f
  6457  1727  1803               	skipnc
  6458  1728  0AB7               	incf	(readAvgDistance@i+1),f
  6459  1729  3000               	movlw	high(01h)
  6460  172A  07B7               	addwf	(readAvgDistance@i+1),f
  6461                           	
  6462  172B                     l11354:	
  6463  172B  0837               	movf	(readAvgDistance@i+1),w
  6464  172C  3A80               	xorlw	80h
  6465  172D  00FF               	movwf	btemp+1
  6466  172E  3080               	movlw	(high(08h))^80h
  6467  172F  027F               	subwf	btemp+1,w
  6468  1730  1D03               	skipz
  6469  1731  2F34               	goto	u4855
  6470  1732  3008               	movlw	low(08h)
  6471  1733  0236               	subwf	(readAvgDistance@i),w
  6472  1734                     u4855:
  6473                           
  6474  1734  1C03               	skipc
  6475  1735  2F37               	goto	u4851
  6476  1736  2F38               	goto	u4850
  6477  1737                     u4851:
  6478  1737  2F03               	goto	l11348
  6479  1738                     u4850:
  6480  1738  2F39               	goto	l11356
  6481                           	
  6482  1739                     l3025:	
  6483                           	line	41
  6484                           	
  6485  1739                     l11356:	
  6486                           ;infrared.c: 39: }
  6487                           ;infrared.c: 40: }
  6488                           ;infrared.c: 41: adcVal = fullval / j;
  6489  1739  1283               	bcf	status, 5	;RP0=0, select bank0
  6490  173A  1303               	bcf	status, 6	;RP1=0, select bank0
  6491  173B  0833               	movf	(readAvgDistance@j+1),w
  6492  173C  01A7               	clrf	(?___lwdiv+1)
  6493  173D  07A7               	addwf	(?___lwdiv+1)
  6494  173E  0832               	movf	(readAvgDistance@j),w
  6495  173F  01A6               	clrf	(?___lwdiv)
  6496  1740  07A6               	addwf	(?___lwdiv)
  6497                           
  6498  1741  0831               	movf	(readAvgDistance@fullval+1),w
  6499  1742  01A9               	clrf	1+(?___lwdiv)+02h
  6500  1743  07A9               	addwf	1+(?___lwdiv)+02h
  6501  1744  0830               	movf	(readAvgDistance@fullval),w
  6502  1745  01A8               	clrf	0+(?___lwdiv)+02h
  6503  1746  07A8               	addwf	0+(?___lwdiv)+02h
  6504                           
  6505  1747  160A  118A  2561   	fcall	___lwdiv
              160A  118A         
  6506  174C  1283               	bcf	status, 5	;RP0=0, select bank0
  6507  174D  1303               	bcf	status, 6	;RP1=0, select bank0
  6508  174E  0827               	movf	(1+(?___lwdiv)),w
  6509  174F  01EA               	clrf	(_adcVal+1)	;volatile
  6510  1750  07EA               	addwf	(_adcVal+1)	;volatile
  6511  1751  0826               	movf	(0+(?___lwdiv)),w
  6512  1752  01E9               	clrf	(_adcVal)	;volatile
  6513  1753  07E9               	addwf	(_adcVal)	;volatile
  6514                           
  6515                           	line	42
  6516                           ;infrared.c: 42: ADCconvert();
  6517  1754  120A  118A  224A   	fcall	_ADCconvert
              160A  118A         
  6518                           	line	43
  6519                           	
  6520  1759                     l11358:	
  6521                           ;infrared.c: 43: Disp1 = adcVal;
  6522  1759  1283               	bcf	status, 5	;RP0=0, select bank0
  6523  175A  1303               	bcf	status, 6	;RP1=0, select bank0
  6524  175B  086A               	movf	(_adcVal+1),w	;volatile
  6525  175C  1683               	bsf	status, 5	;RP0=1, select bank1
  6526  175D  1303               	bcf	status, 6	;RP1=0, select bank1
  6527  175E  01B5               	clrf	(_Disp1+1)^080h	;volatile
  6528  175F  07B5               	addwf	(_Disp1+1)^080h	;volatile
  6529  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  6530  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  6531  1762  0869               	movf	(_adcVal),w	;volatile
  6532  1763  1683               	bsf	status, 5	;RP0=1, select bank1
  6533  1764  1303               	bcf	status, 6	;RP1=0, select bank1
  6534  1765  01B4               	clrf	(_Disp1)^080h	;volatile
  6535  1766  07B4               	addwf	(_Disp1)^080h	;volatile
  6536                           
  6537                           	line	44
  6538                           	
  6539  1767                     l3027:	
  6540  1767  0008               	return
  6541                           	opt stack 0
  6542                           GLOBAL	__end_of_readAvgDistance
  6543  1768                     	__end_of_readAvgDistance:
  6544 ;; =============== function _readAvgDistance ends ============
  6545                           
  6546                           	signat	_readAvgDistance,88
  6547                           	global	_init
  6548                           psect	text1048,local,class=CODE,delta=2
  6549                           global __ptext1048
  6550  133D                     __ptext1048:
  6551                           
  6552 ;; *************** function _init *****************
  6553 ;; Defined at:
  6554 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;		None               void
  6561 ;; Registers used:
  6562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6568 ;;      Params:         0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0
  6570 ;;      Temps:          0       1       0       0       0
  6571 ;;      Totals:         0       1       0       0       0
  6572 ;;Total ram usage:        1 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    5
  6575 ;; This function calls:
  6576 ;;		_ser_init
  6577 ;;		_init_adc
  6578 ;;		_lcd_init
  6579 ;;		_robo_init
  6580 ;; This function is called by:
  6581 ;;		_main
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           psect	text1048
  6585                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  6586                           	line	139
  6587                           	global	__size_of_init
  6588  002F                     	__size_of_init	equ	__end_of_init-_init
  6589                           	
  6590  133D                     _init:	
  6591                           	opt	stack 2
  6592                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6593                           	line	140
  6594                           	
  6595  133D                     l11316:	
  6596                           ;Main.c: 140: buttonPressed = 0;
  6597  133D  01FD               	clrf	(_buttonPressed)	;volatile
  6598                           	line	142
  6599                           	
  6600  133E                     l11318:	
  6601                           ;Main.c: 142: TRISB = 0b11111100;
  6602  133E  30FC               	movlw	(0FCh)
  6603  133F  1683               	bsf	status, 5	;RP0=1, select bank1
  6604  1340  1303               	bcf	status, 6	;RP1=0, select bank1
  6605  1341  0086               	movwf	(134)^080h	;volatile
  6606                           	line	143
  6607                           	
  6608  1342                     l11320:	
  6609                           ;Main.c: 143: TRISC &= 0b10010000;
  6610  1342  3090               	movlw	(090h)
  6611  1343  1283               	bcf	status, 5	;RP0=0, select bank0
  6612  1344  1303               	bcf	status, 6	;RP1=0, select bank0
  6613  1345  00A3               	movwf	(??_init+0)+0
  6614  1346  0823               	movf	(??_init+0)+0,w
  6615  1347  1683               	bsf	status, 5	;RP0=1, select bank1
  6616  1348  1303               	bcf	status, 6	;RP1=0, select bank1
  6617  1349  0587               	andwf	(135)^080h,f	;volatile
  6618                           	line	146
  6619                           	
  6620  134A                     l11322:	
  6621                           ;Main.c: 146: SSPSTAT = 0b01000000;
  6622  134A  3040               	movlw	(040h)
  6623  134B  0094               	movwf	(148)^080h	;volatile
  6624                           	line	147
  6625                           	
  6626  134C                     l11324:	
  6627                           ;Main.c: 147: SSPCON = 0b10100001;
  6628  134C  30A1               	movlw	(0A1h)
  6629  134D  1283               	bcf	status, 5	;RP0=0, select bank0
  6630  134E  1303               	bcf	status, 6	;RP1=0, select bank0
  6631  134F  0094               	movwf	(20)	;volatile
  6632                           	line	150
  6633                           	
  6634  1350                     l11326:	
  6635                           ;Main.c: 150: OPTION_REG = 0b00000100;
  6636  1350  3004               	movlw	(04h)
  6637  1351  1683               	bsf	status, 5	;RP0=1, select bank1
  6638  1352  1303               	bcf	status, 6	;RP1=0, select bank1
  6639  1353  0081               	movwf	(129)^080h	;volatile
  6640                           	line	153
  6641                           	
  6642  1354                     l11328:	
  6643                           ;Main.c: 153: ser_init();
  6644  1354  160A  118A  21DE   	fcall	_ser_init
              160A  118A         
  6645                           	line	154
  6646                           	
  6647  1359                     l11330:	
  6648                           ;Main.c: 154: init_adc();
  6649  1359  160A  118A  2136   	fcall	_init_adc
              160A  118A         
  6650                           	line	155
  6651                           	
  6652  135E                     l11332:	
  6653                           ;Main.c: 155: lcd_init();
  6654  135E  160A  118A  2233   	fcall	_lcd_init
              160A  118A         
  6655                           	line	156
  6656                           	
  6657  1363                     l11334:	
  6658                           ;Main.c: 156: robo_init();
  6659  1363  160A  118A  217B   	fcall	_robo_init
              160A  118A         
  6660                           	line	160
  6661                           	
  6662  1368                     l11336:	
  6663                           ;Main.c: 160: TMR0IE = 1;
  6664  1368  168B               	bsf	(93/8),(93)&7
  6665                           	line	162
  6666                           	
  6667  1369                     l11338:	
  6668                           ;Main.c: 162: PEIE=1;
  6669  1369  170B               	bsf	(94/8),(94)&7
  6670                           	line	164
  6671                           	
  6672  136A                     l11340:	
  6673                           ;Main.c: 164: (GIE = 1);
  6674  136A  178B               	bsf	(95/8),(95)&7
  6675                           	line	165
  6676                           	
  6677  136B                     l2245:	
  6678  136B  0008               	return
  6679                           	opt stack 0
  6680                           GLOBAL	__end_of_init
  6681  136C                     	__end_of_init:
  6682 ;; =============== function _init ends ============
  6683                           
  6684                           	signat	_init,88
  6685                           	global	_readDistance
  6686                           psect	text1049,local,class=CODE,delta=2
  6687                           global __ptext1049
  6688  114C                     __ptext1049:
  6689                           
  6690 ;; *************** function _readDistance *****************
  6691 ;; Defined at:
  6692 ;;		line 78 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  readVal         2   12[BANK0 ] unsigned int 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  2    8[BANK0 ] unsigned int 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6706 ;;      Params:         0       2       0       0       0
  6707 ;;      Locals:         0       2       0       0       0
  6708 ;;      Temps:          0       2       0       0       0
  6709 ;;      Totals:         0       6       0       0       0
  6710 ;;Total ram usage:        6 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    5
  6713 ;; This function calls:
  6714 ;;		_adc_read_channel
  6715 ;; This function is called by:
  6716 ;;		_readAvgDistance
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           psect	text1049
  6720                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6721                           	line	78
  6722                           	global	__size_of_readDistance
  6723  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  6724                           	
  6725  114C                     _readDistance:	
  6726                           	opt	stack 0
  6727                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6728                           	line	81
  6729                           	
  6730  114C                     l11310:	
  6731                           ;infrared.c: 79: unsigned int readVal;
  6732                           ;infrared.c: 81: readVal = adc_read_channel(0);
  6733  114C  3000               	movlw	(0)
  6734  114D  160A  118A  240A   	fcall	_adc_read_channel
              160A  118A         
  6735  1152  1283               	bcf	status, 5	;RP0=0, select bank0
  6736  1153  1303               	bcf	status, 6	;RP1=0, select bank0
  6737  1154  00AA               	movwf	(??_readDistance+0)+0
  6738  1155  01AB               	clrf	(??_readDistance+0)+0+1
  6739  1156  082A               	movf	0+(??_readDistance+0)+0,w
  6740  1157  00AC               	movwf	(readDistance@readVal)
  6741  1158  082B               	movf	1+(??_readDistance+0)+0,w
  6742  1159  00AD               	movwf	(readDistance@readVal+1)
  6743                           	line	83
  6744                           	
  6745  115A                     l11312:	
  6746                           ;infrared.c: 83: return readVal;
  6747  115A  082D               	movf	(readDistance@readVal+1),w
  6748  115B  01A9               	clrf	(?_readDistance+1)
  6749  115C  07A9               	addwf	(?_readDistance+1)
  6750  115D  082C               	movf	(readDistance@readVal),w
  6751  115E  01A8               	clrf	(?_readDistance)
  6752  115F  07A8               	addwf	(?_readDistance)
  6753                           
  6754  1160  2961               	goto	l3030
  6755                           	
  6756  1161                     l11314:	
  6757                           	line	84
  6758                           	
  6759  1161                     l3030:	
  6760  1161  0008               	return
  6761                           	opt stack 0
  6762                           GLOBAL	__end_of_readDistance
  6763  1162                     	__end_of_readDistance:
  6764 ;; =============== function _readDistance ends ============
  6765                           
  6766                           	signat	_readDistance,90
  6767                           	global	_RobotBattRead
  6768                           psect	text1050,local,class=CODE,delta=2
  6769                           global __ptext1050
  6770  0774                     __ptext1050:
  6771                           
  6772 ;; *************** function _RobotBattRead *****************
  6773 ;; Defined at:
  6774 ;;		line 436 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  temp1           2    4[BANK0 ] int 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;		None               void
  6781 ;; Registers used:
  6782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6788 ;;      Params:         0       0       0       0       0
  6789 ;;      Locals:         0       2       0       0       0
  6790 ;;      Temps:          0       2       0       0       0
  6791 ;;      Totals:         0       4       0       0       0
  6792 ;;Total ram usage:        4 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    5
  6795 ;; This function calls:
  6796 ;;		_ser_putch
  6797 ;;		_ser_getch
  6798 ;; This function is called by:
  6799 ;;		_ChargeMode
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           psect	text1050
  6803                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6804                           	line	436
  6805                           	global	__size_of_RobotBattRead
  6806  0083                     	__size_of_RobotBattRead	equ	__end_of_RobotBattRead-_RobotBattRead
  6807                           	
  6808  0774                     _RobotBattRead:	
  6809                           	opt	stack 1
  6810                           ; Regs used in _RobotBattRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6811                           	line	437
  6812                           	
  6813  0774                     l11282:	
  6814                           ;robot.c: 437: int temp1 = 0;
  6815  0774  1283               	bcf	status, 5	;RP0=0, select bank0
  6816  0775  1303               	bcf	status, 6	;RP1=0, select bank0
  6817  0776  01A4               	clrf	(RobotBattRead@temp1)
  6818  0777  01A5               	clrf	(RobotBattRead@temp1+1)
  6819                           	line	438
  6820                           	
  6821  0778                     l11284:	
  6822                           ;robot.c: 438: ser_putch(142);
  6823  0778  308E               	movlw	(08Eh)
  6824  0779  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  6825                           	line	439
  6826                           	
  6827  077E                     l11286:	
  6828                           ;robot.c: 439: ser_putch(25);
  6829  077E  3019               	movlw	(019h)
  6830  077F  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  6831                           	line	440
  6832                           	
  6833  0784                     l11288:	
  6834                           ;robot.c: 440: _delay((unsigned long)((5)*(20000000/4000.0)));
  6835                           	opt asmopt_off
  6836  0784  3021               movlw	33
  6837  0785  1283               	bcf	status, 5	;RP0=0, select bank0
  6838  0786  1303               	bcf	status, 6	;RP1=0, select bank0
  6839  0787  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  6840  0788  3076               	movlw	118
  6841  0789  00A2               movwf	((??_RobotBattRead+0)+0),f
  6842  078A                     u5307:
  6843  078A  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  6844  078B  2F8A               	goto	u5307
  6845  078C  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  6846  078D  2F8A               	goto	u5307
  6847  078E  0064               	clrwdt
  6848                           opt asmopt_on
  6849                           
  6850                           	line	441
  6851                           	
  6852  078F                     l11290:	
  6853                           ;robot.c: 441: DistHighByte = ser_getch();
  6854  078F  160A  118A  228A   	fcall	_ser_getch
              120A  118A         
  6855  0794  1283               	bcf	status, 5	;RP0=0, select bank0
  6856  0795  1303               	bcf	status, 6	;RP1=0, select bank0
  6857  0796  00A2               	movwf	(??_RobotBattRead+0)+0
  6858  0797  0822               	movf	(??_RobotBattRead+0)+0,w
  6859  0798  00ED               	movwf	(_DistHighByte)	;volatile
  6860                           	line	442
  6861                           	
  6862  0799                     l11292:	
  6863                           ;robot.c: 442: DistLowByte = ser_getch();
  6864  0799  160A  118A  228A   	fcall	_ser_getch
              120A  118A         
  6865  079E  1283               	bcf	status, 5	;RP0=0, select bank0
  6866  079F  1303               	bcf	status, 6	;RP1=0, select bank0
  6867  07A0  00A2               	movwf	(??_RobotBattRead+0)+0
  6868  07A1  0822               	movf	(??_RobotBattRead+0)+0,w
  6869  07A2  00EE               	movwf	(_DistLowByte)	;volatile
  6870                           	line	443
  6871                           	
  6872  07A3                     l11294:	
  6873                           ;robot.c: 443: ser_putch(142);
  6874  07A3  308E               	movlw	(08Eh)
  6875  07A4  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  6876                           	line	444
  6877                           	
  6878  07A9                     l11296:	
  6879                           ;robot.c: 444: ser_putch(21);
  6880  07A9  3015               	movlw	(015h)
  6881  07AA  160A  118A  22E2   	fcall	_ser_putch
              120A  118A         
  6882                           	line	445
  6883                           	
  6884  07AF                     l11298:	
  6885                           ;robot.c: 445: _delay((unsigned long)((5)*(20000000/4000.0)));
  6886                           	opt asmopt_off
  6887  07AF  3021               movlw	33
  6888  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
  6889  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
  6890  07B2  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  6891  07B3  3076               	movlw	118
  6892  07B4  00A2               movwf	((??_RobotBattRead+0)+0),f
  6893  07B5                     u5317:
  6894  07B5  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  6895  07B6  2FB5               	goto	u5317
  6896  07B7  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  6897  07B8  2FB5               	goto	u5317
  6898  07B9  0064               	clrwdt
  6899                           opt asmopt_on
  6900                           
  6901                           	line	446
  6902                           	
  6903  07BA                     l11300:	
  6904                           ;robot.c: 446: BattState = ser_getch();
  6905  07BA  160A  118A  228A   	fcall	_ser_getch
              120A  118A         
  6906  07BF  1283               	bcf	status, 5	;RP0=0, select bank0
  6907  07C0  1303               	bcf	status, 6	;RP1=0, select bank0
  6908  07C1  00A2               	movwf	(??_RobotBattRead+0)+0
  6909  07C2  01A3               	clrf	(??_RobotBattRead+0)+0+1
  6910  07C3  0822               	movf	0+(??_RobotBattRead+0)+0,w
  6911  07C4  1683               	bsf	status, 5	;RP0=1, select bank1
  6912  07C5  1303               	bcf	status, 6	;RP1=0, select bank1
  6913  07C6  00B2               	movwf	(_BattState)^080h
  6914  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
  6915  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
  6916  07C9  0823               	movf	1+(??_RobotBattRead+0)+0,w
  6917  07CA  1683               	bsf	status, 5	;RP0=1, select bank1
  6918  07CB  1303               	bcf	status, 6	;RP1=0, select bank1
  6919  07CC  00B3               	movwf	(_BattState+1)^080h
  6920                           	line	449
  6921                           	
  6922  07CD                     l11302:	
  6923                           ;robot.c: 449: temp1 = DistHighByte;
  6924  07CD  1283               	bcf	status, 5	;RP0=0, select bank0
  6925  07CE  1303               	bcf	status, 6	;RP1=0, select bank0
  6926  07CF  086D               	movf	(_DistHighByte),w	;volatile
  6927  07D0  00A2               	movwf	(??_RobotBattRead+0)+0
  6928  07D1  01A3               	clrf	(??_RobotBattRead+0)+0+1
  6929  07D2  0822               	movf	0+(??_RobotBattRead+0)+0,w
  6930  07D3  00A4               	movwf	(RobotBattRead@temp1)
  6931  07D4  0823               	movf	1+(??_RobotBattRead+0)+0,w
  6932  07D5  00A5               	movwf	(RobotBattRead@temp1+1)
  6933                           	line	450
  6934                           	
  6935  07D6                     l11304:	
  6936                           ;robot.c: 450: temp1 = temp1 << 8;
  6937  07D6  0825               	movf	(RobotBattRead@temp1+1),w
  6938  07D7  00A3               	movwf	(??_RobotBattRead+0)+0+1
  6939  07D8  0824               	movf	(RobotBattRead@temp1),w
  6940  07D9  00A2               	movwf	(??_RobotBattRead+0)+0
  6941  07DA  0822               	movf	(??_RobotBattRead+0)+0,w
  6942  07DB  00A3               	movwf	(??_RobotBattRead+0)+1
  6943  07DC  01A2               	clrf	(??_RobotBattRead+0)+0
  6944  07DD  0822               	movf	0+(??_RobotBattRead+0)+0,w
  6945  07DE  00A4               	movwf	(RobotBattRead@temp1)
  6946  07DF  0823               	movf	1+(??_RobotBattRead+0)+0,w
  6947  07E0  00A5               	movwf	(RobotBattRead@temp1+1)
  6948                           	line	451
  6949                           	
  6950  07E1                     l11306:	
  6951                           ;robot.c: 451: temp1 += DistLowByte;
  6952  07E1  086E               	movf	(_DistLowByte),w	;volatile
  6953  07E2  00A2               	movwf	(??_RobotBattRead+0)+0
  6954  07E3  01A3               	clrf	(??_RobotBattRead+0)+0+1
  6955  07E4  0822               	movf	0+(??_RobotBattRead+0)+0,w
  6956  07E5  07A4               	addwf	(RobotBattRead@temp1),f
  6957  07E6  1803               	skipnc
  6958  07E7  0AA5               	incf	(RobotBattRead@temp1+1),f
  6959  07E8  0823               	movf	1+(??_RobotBattRead+0)+0,w
  6960  07E9  07A5               	addwf	(RobotBattRead@temp1+1),f
  6961                           	line	452
  6962                           	
  6963  07EA                     l11308:	
  6964                           ;robot.c: 452: BattCharge = temp1;
  6965  07EA  0825               	movf	(RobotBattRead@temp1+1),w
  6966  07EB  1683               	bsf	status, 5	;RP0=1, select bank1
  6967  07EC  1303               	bcf	status, 6	;RP1=0, select bank1
  6968  07ED  01B1               	clrf	(_BattCharge+1)^080h
  6969  07EE  07B1               	addwf	(_BattCharge+1)^080h
  6970  07EF  1283               	bcf	status, 5	;RP0=0, select bank0
  6971  07F0  1303               	bcf	status, 6	;RP1=0, select bank0
  6972  07F1  0824               	movf	(RobotBattRead@temp1),w
  6973  07F2  1683               	bsf	status, 5	;RP0=1, select bank1
  6974  07F3  1303               	bcf	status, 6	;RP1=0, select bank1
  6975  07F4  01B0               	clrf	(_BattCharge)^080h
  6976  07F5  07B0               	addwf	(_BattCharge)^080h
  6977                           
  6978                           	line	453
  6979                           	
  6980  07F6                     l6164:	
  6981  07F6  0008               	return
  6982                           	opt stack 0
  6983                           GLOBAL	__end_of_RobotBattRead
  6984  07F7                     	__end_of_RobotBattRead:
  6985 ;; =============== function _RobotBattRead ends ============
  6986                           
  6987                           	signat	_RobotBattRead,88
  6988                           	global	_robot_read
  6989                           psect	text1051,local,class=CODE,delta=2
  6990                           global __ptext1051
  6991  0B58                     __ptext1051:
  6992                           
  6993 ;; *************** function _robot_read *****************
  6994 ;; Defined at:
  6995 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  readType        1    wreg     unsigned char 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  readType        1    3[BANK0 ] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;		None               void
  7002 ;; Registers used:
  7003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7009 ;;      Params:         0       0       0       0       0
  7010 ;;      Locals:         0       1       0       0       0
  7011 ;;      Temps:          0       1       0       0       0
  7012 ;;      Totals:         0       2       0       0       0
  7013 ;;Total ram usage:        2 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    5
  7016 ;; This function calls:
  7017 ;;		_ser_putch
  7018 ;;		_ser_getch
  7019 ;; This function is called by:
  7020 ;;		_main
  7021 ;;		_robotFollow
  7022 ;;		_robot_turnRight
  7023 ;;		_robotMoveSpeed
  7024 ;;		_robotTurnSpeed
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           psect	text1051
  7028                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7029                           	line	50
  7030                           	global	__size_of_robot_read
  7031  00FE                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  7032                           	
  7033  0B58                     _robot_read:	
  7034                           	opt	stack 1
  7035                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7036                           ;robot_read@readType stored from wreg
  7037  0B58  1283               	bcf	status, 5	;RP0=0, select bank0
  7038  0B59  1303               	bcf	status, 6	;RP1=0, select bank0
  7039  0B5A  00A3               	movwf	(robot_read@readType)
  7040                           	line	51
  7041                           	
  7042  0B5B                     l11266:	
  7043                           ;robot.c: 51: ser_putch(142);
  7044  0B5B  308E               	movlw	(08Eh)
  7045  0B5C  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7046                           	line	52
  7047                           ;robot.c: 52: ser_putch(10);
  7048  0B61  300A               	movlw	(0Ah)
  7049  0B62  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7050                           	line	54
  7051                           ;robot.c: 54: CliffSensors = ser_getch();
  7052  0B67  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7053  0B6C  1283               	bcf	status, 5	;RP0=0, select bank0
  7054  0B6D  1303               	bcf	status, 6	;RP1=0, select bank0
  7055  0B6E  00A2               	movwf	(??_robot_read+0)+0
  7056  0B6F  0822               	movf	(??_robot_read+0)+0,w
  7057  0B70  00EC               	movwf	(_CliffSensors)	;volatile
  7058                           	line	56
  7059                           ;robot.c: 56: ser_putch(142);
  7060  0B71  308E               	movlw	(08Eh)
  7061  0B72  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7062                           	line	57
  7063                           ;robot.c: 57: ser_putch(11);
  7064  0B77  300B               	movlw	(0Bh)
  7065  0B78  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7066                           	line	59
  7067                           ;robot.c: 59: CliffSensors += ser_getch();
  7068  0B7D  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7069  0B82  1283               	bcf	status, 5	;RP0=0, select bank0
  7070  0B83  1303               	bcf	status, 6	;RP1=0, select bank0
  7071  0B84  00A2               	movwf	(??_robot_read+0)+0
  7072  0B85  0822               	movf	(??_robot_read+0)+0,w
  7073  0B86  07EC               	addwf	(_CliffSensors),f	;volatile
  7074                           	line	63
  7075                           ;robot.c: 63: ser_putch(142);
  7076  0B87  308E               	movlw	(08Eh)
  7077  0B88  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7078                           	line	64
  7079                           ;robot.c: 64: ser_putch(7);
  7080  0B8D  3007               	movlw	(07h)
  7081  0B8E  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7082                           	line	66
  7083                           ;robot.c: 66: BumpSensors = ser_getch();
  7084  0B93  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7085  0B98  1283               	bcf	status, 5	;RP0=0, select bank0
  7086  0B99  1303               	bcf	status, 6	;RP1=0, select bank0
  7087  0B9A  00A2               	movwf	(??_robot_read+0)+0
  7088  0B9B  0822               	movf	(??_robot_read+0)+0,w
  7089  0B9C  00EB               	movwf	(_BumpSensors)	;volatile
  7090                           	line	68
  7091                           ;robot.c: 68: ser_putch(142);
  7092  0B9D  308E               	movlw	(08Eh)
  7093  0B9E  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7094                           	line	69
  7095                           ;robot.c: 69: ser_putch(13);
  7096  0BA3  300D               	movlw	(0Dh)
  7097  0BA4  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7098                           	line	71
  7099                           ;robot.c: 71: VwallSensor = ser_getch();
  7100  0BA9  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7101  0BAE  1283               	bcf	status, 5	;RP0=0, select bank0
  7102  0BAF  1303               	bcf	status, 6	;RP1=0, select bank0
  7103  0BB0  00A2               	movwf	(??_robot_read+0)+0
  7104  0BB1  0822               	movf	(??_robot_read+0)+0,w
  7105  0BB2  00EF               	movwf	(_VwallSensor)	;volatile
  7106                           	line	75
  7107                           	
  7108  0BB3                     l11268:	
  7109                           ;robot.c: 75: if (readType == 0)
  7110  0BB3  08A3               	movf	(robot_read@readType),f
  7111  0BB4  1D03               	skipz
  7112  0BB5  2BB7               	goto	u4801
  7113  0BB6  2BB8               	goto	u4800
  7114  0BB7                     u4801:
  7115  0BB7  2BD9               	goto	l11272
  7116  0BB8                     u4800:
  7117                           	line	77
  7118                           	
  7119  0BB8                     l11270:	
  7120                           ;robot.c: 76: {
  7121                           ;robot.c: 77: ser_putch(142);
  7122  0BB8  308E               	movlw	(08Eh)
  7123  0BB9  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7124                           	line	78
  7125                           ;robot.c: 78: ser_putch(19);
  7126  0BBE  3013               	movlw	(013h)
  7127  0BBF  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7128                           	line	80
  7129                           ;robot.c: 80: DistHighByte = ser_getch();
  7130  0BC4  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7131  0BC9  1283               	bcf	status, 5	;RP0=0, select bank0
  7132  0BCA  1303               	bcf	status, 6	;RP1=0, select bank0
  7133  0BCB  00A2               	movwf	(??_robot_read+0)+0
  7134  0BCC  0822               	movf	(??_robot_read+0)+0,w
  7135  0BCD  00ED               	movwf	(_DistHighByte)	;volatile
  7136                           	line	81
  7137                           ;robot.c: 81: DistLowByte = ser_getch();
  7138  0BCE  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7139  0BD3  1283               	bcf	status, 5	;RP0=0, select bank0
  7140  0BD4  1303               	bcf	status, 6	;RP1=0, select bank0
  7141  0BD5  00A2               	movwf	(??_robot_read+0)+0
  7142  0BD6  0822               	movf	(??_robot_read+0)+0,w
  7143  0BD7  00EE               	movwf	(_DistLowByte)	;volatile
  7144                           	line	82
  7145                           ;robot.c: 82: }
  7146  0BD8  2C55               	goto	l6088
  7147                           	line	83
  7148                           	
  7149  0BD9                     l6081:	
  7150                           	
  7151  0BD9                     l11272:	
  7152                           ;robot.c: 83: else if (readType == 1)
  7153  0BD9  0823               	movf	(robot_read@readType),w
  7154  0BDA  3A01               	xorlw	01h
  7155  0BDB  1D03               	skipz
  7156  0BDC  2BDE               	goto	u4811
  7157  0BDD  2BDF               	goto	u4810
  7158  0BDE                     u4811:
  7159  0BDE  2C04               	goto	l11276
  7160  0BDF                     u4810:
  7161                           	line	85
  7162                           	
  7163  0BDF                     l11274:	
  7164                           ;robot.c: 84: {
  7165                           ;robot.c: 85: ser_putch(142);
  7166  0BDF  308E               	movlw	(08Eh)
  7167  0BE0  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7168                           	line	86
  7169                           ;robot.c: 86: ser_putch(20);
  7170  0BE5  3014               	movlw	(014h)
  7171  0BE6  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7172                           	line	88
  7173                           ;robot.c: 88: AngleHighByte = ser_getch();
  7174  0BEB  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7175  0BF0  1283               	bcf	status, 5	;RP0=0, select bank0
  7176  0BF1  1303               	bcf	status, 6	;RP1=0, select bank0
  7177  0BF2  00A2               	movwf	(??_robot_read+0)+0
  7178  0BF3  0822               	movf	(??_robot_read+0)+0,w
  7179  0BF4  1683               	bsf	status, 5	;RP0=1, select bank1
  7180  0BF5  1303               	bcf	status, 6	;RP1=0, select bank1
  7181  0BF6  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7182                           	line	89
  7183                           ;robot.c: 89: AngleLowByte = ser_getch();
  7184  0BF7  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7185  0BFC  1283               	bcf	status, 5	;RP0=0, select bank0
  7186  0BFD  1303               	bcf	status, 6	;RP1=0, select bank0
  7187  0BFE  00A2               	movwf	(??_robot_read+0)+0
  7188  0BFF  0822               	movf	(??_robot_read+0)+0,w
  7189  0C00  1683               	bsf	status, 5	;RP0=1, select bank1
  7190  0C01  1303               	bcf	status, 6	;RP1=0, select bank1
  7191  0C02  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7192                           	line	90
  7193                           ;robot.c: 90: }
  7194  0C03  2C55               	goto	l6088
  7195                           	line	91
  7196                           	
  7197  0C04                     l6083:	
  7198                           	
  7199  0C04                     l11276:	
  7200                           ;robot.c: 91: else if (readType == 2)
  7201  0C04  1283               	bcf	status, 5	;RP0=0, select bank0
  7202  0C05  0823               	movf	(robot_read@readType),w
  7203  0C06  3A02               	xorlw	02h
  7204  0C07  1D03               	skipz
  7205  0C08  2C0A               	goto	u4821
  7206  0C09  2C0B               	goto	u4820
  7207  0C0A                     u4821:
  7208  0C0A  2C55               	goto	l6088
  7209  0C0B                     u4820:
  7210                           	line	94
  7211                           	
  7212  0C0B                     l11278:	
  7213                           ;robot.c: 92: {
  7214                           ;robot.c: 94: ser_putch(142);
  7215  0C0B  308E               	movlw	(08Eh)
  7216  0C0C  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7217                           	line	95
  7218                           ;robot.c: 95: ser_putch(19);
  7219  0C11  3013               	movlw	(013h)
  7220  0C12  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7221                           	line	97
  7222                           ;robot.c: 97: DistHighByte = ser_getch();
  7223  0C17  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7224  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  7225  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  7226  0C1E  00A2               	movwf	(??_robot_read+0)+0
  7227  0C1F  0822               	movf	(??_robot_read+0)+0,w
  7228  0C20  00ED               	movwf	(_DistHighByte)	;volatile
  7229                           	line	98
  7230                           ;robot.c: 98: DistLowByte = ser_getch();
  7231  0C21  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7232  0C26  1283               	bcf	status, 5	;RP0=0, select bank0
  7233  0C27  1303               	bcf	status, 6	;RP1=0, select bank0
  7234  0C28  00A2               	movwf	(??_robot_read+0)+0
  7235  0C29  0822               	movf	(??_robot_read+0)+0,w
  7236  0C2A  00EE               	movwf	(_DistLowByte)	;volatile
  7237                           	line	99
  7238                           ;robot.c: 99: ser_putch(142);
  7239  0C2B  308E               	movlw	(08Eh)
  7240  0C2C  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7241                           	line	100
  7242                           ;robot.c: 100: ser_putch(20);
  7243  0C31  3014               	movlw	(014h)
  7244  0C32  160A  118A  22E2   	fcall	_ser_putch
              120A  158A         
  7245                           	line	102
  7246                           ;robot.c: 102: AngleHighByte = ser_getch();
  7247  0C37  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7248  0C3C  1283               	bcf	status, 5	;RP0=0, select bank0
  7249  0C3D  1303               	bcf	status, 6	;RP1=0, select bank0
  7250  0C3E  00A2               	movwf	(??_robot_read+0)+0
  7251  0C3F  0822               	movf	(??_robot_read+0)+0,w
  7252  0C40  1683               	bsf	status, 5	;RP0=1, select bank1
  7253  0C41  1303               	bcf	status, 6	;RP1=0, select bank1
  7254  0C42  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7255                           	line	103
  7256                           ;robot.c: 103: AngleLowByte = ser_getch();
  7257  0C43  160A  118A  228A   	fcall	_ser_getch
              120A  158A         
  7258  0C48  1283               	bcf	status, 5	;RP0=0, select bank0
  7259  0C49  1303               	bcf	status, 6	;RP1=0, select bank0
  7260  0C4A  00A2               	movwf	(??_robot_read+0)+0
  7261  0C4B  0822               	movf	(??_robot_read+0)+0,w
  7262  0C4C  1683               	bsf	status, 5	;RP0=1, select bank1
  7263  0C4D  1303               	bcf	status, 6	;RP1=0, select bank1
  7264  0C4E  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7265                           	line	104
  7266                           ;robot.c: 104: }
  7267  0C4F  2C55               	goto	l6088
  7268                           	line	105
  7269                           	
  7270  0C50                     l6085:	
  7271  0C50  2C55               	goto	l6088
  7272                           	
  7273  0C51                     l11280:	
  7274  0C51  2C55               	goto	l6088
  7275                           	line	108
  7276                           ;robot.c: 106: {
  7277                           	
  7278  0C52                     l6087:	
  7279  0C52  2C55               	goto	l6088
  7280                           	line	109
  7281                           	
  7282  0C53                     l6086:	
  7283  0C53  2C55               	goto	l6088
  7284                           	
  7285  0C54                     l6084:	
  7286  0C54  2C55               	goto	l6088
  7287                           	
  7288  0C55                     l6082:	
  7289                           	
  7290  0C55                     l6088:	
  7291  0C55  0008               	return
  7292                           	opt stack 0
  7293                           GLOBAL	__end_of_robot_read
  7294  0C56                     	__end_of_robot_read:
  7295 ;; =============== function _robot_read ends ============
  7296                           
  7297                           	signat	_robot_read,4216
  7298                           	global	_lcd_init
  7299                           psect	text1052,local,class=CODE,delta=2
  7300                           global __ptext1052
  7301  1233                     __ptext1052:
  7302                           
  7303 ;; *************** function _lcd_init *****************
  7304 ;; Defined at:
  7305 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;		None               void
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0, pclath, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7319 ;;      Params:         0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    4
  7326 ;; This function calls:
  7327 ;;		_lcd_write_control
  7328 ;; This function is called by:
  7329 ;;		_init
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           psect	text1052
  7333                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7334                           	line	101
  7335                           	global	__size_of_lcd_init
  7336  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7337                           	
  7338  1233                     _lcd_init:	
  7339                           	opt	stack 2
  7340                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7341                           	line	105
  7342                           	
  7343  1233                     l11246:	
  7344                           ;lcd.c: 105: ADCON1 = 0b00000010;
  7345  1233  3002               	movlw	(02h)
  7346  1234  1683               	bsf	status, 5	;RP0=1, select bank1
  7347  1235  1303               	bcf	status, 6	;RP1=0, select bank1
  7348  1236  009F               	movwf	(159)^080h	;volatile
  7349                           	line	108
  7350                           	
  7351  1237                     l11248:	
  7352                           ;lcd.c: 108: PORTD = 0;
  7353  1237  1283               	bcf	status, 5	;RP0=0, select bank0
  7354  1238  1303               	bcf	status, 6	;RP1=0, select bank0
  7355  1239  0188               	clrf	(8)	;volatile
  7356                           	line	109
  7357                           	
  7358  123A                     l11250:	
  7359                           ;lcd.c: 109: PORTE = 0;
  7360  123A  0189               	clrf	(9)	;volatile
  7361                           	line	111
  7362                           	
  7363  123B                     l11252:	
  7364                           ;lcd.c: 111: TRISD = 0b00000000;
  7365  123B  1683               	bsf	status, 5	;RP0=1, select bank1
  7366  123C  1303               	bcf	status, 6	;RP1=0, select bank1
  7367  123D  0188               	clrf	(136)^080h	;volatile
  7368                           	line	112
  7369                           	
  7370  123E                     l11254:	
  7371                           ;lcd.c: 112: TRISE = 0b00000000;
  7372  123E  0189               	clrf	(137)^080h	;volatile
  7373                           	line	115
  7374                           	
  7375  123F                     l11256:	
  7376                           ;lcd.c: 115: lcd_write_control(0b00000001);
  7377  123F  3001               	movlw	(01h)
  7378  1240  160A  118A  2122   	fcall	_lcd_write_control
              160A  118A         
  7379                           	line	116
  7380                           	
  7381  1245                     l11258:	
  7382                           ;lcd.c: 116: lcd_write_control(0b00111000);
  7383  1245  3038               	movlw	(038h)
  7384  1246  160A  118A  2122   	fcall	_lcd_write_control
              160A  118A         
  7385                           	line	117
  7386                           	
  7387  124B                     l11260:	
  7388                           ;lcd.c: 117: lcd_write_control(0b00001100);
  7389  124B  300C               	movlw	(0Ch)
  7390  124C  160A  118A  2122   	fcall	_lcd_write_control
              160A  118A         
  7391                           	line	118
  7392                           	
  7393  1251                     l11262:	
  7394                           ;lcd.c: 118: lcd_write_control(0b00000110);
  7395  1251  3006               	movlw	(06h)
  7396  1252  160A  118A  2122   	fcall	_lcd_write_control
              160A  118A         
  7397                           	line	119
  7398                           	
  7399  1257                     l11264:	
  7400                           ;lcd.c: 119: lcd_write_control(0b00000010);
  7401  1257  3002               	movlw	(02h)
  7402  1258  160A  118A  2122   	fcall	_lcd_write_control
              160A  118A         
  7403                           	line	121
  7404                           	
  7405  125D                     l1429:	
  7406  125D  0008               	return
  7407                           	opt stack 0
  7408                           GLOBAL	__end_of_lcd_init
  7409  125E                     	__end_of_lcd_init:
  7410 ;; =============== function _lcd_init ends ============
  7411                           
  7412                           	signat	_lcd_init,88
  7413                           	global	_lcd_write_string
  7414                           psect	text1053,local,class=CODE,delta=2
  7415                           global __ptext1053
  7416  12B6                     __ptext1053:
  7417                           
  7418 ;; *************** function _lcd_write_string *****************
  7419 ;; Defined at:
  7420 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  s               2    7[BANK0 ] PTR unsigned char 
  7423 ;;		 -> STR_26(9), STR_25(3), STR_24(3), STR_23(3), 
  7424 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_18(16), 
  7425 ;;		 -> STR_17(4), STR_16(8), STR_15(4), STR_14(16), 
  7426 ;;		 -> UpdateDisplay@LCDOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  7427 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  7428 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  7429 ;;		 -> STR_1(9), 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;		None               void
  7434 ;; Registers used:
  7435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7441 ;;      Params:         0       2       0       0       0
  7442 ;;      Locals:         0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0
  7444 ;;      Totals:         0       2       0       0       0
  7445 ;;Total ram usage:        2 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    4
  7448 ;; This function calls:
  7449 ;;		_lcd_write_data
  7450 ;; This function is called by:
  7451 ;;		_UpdateDisplay
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           psect	text1053
  7455                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7456                           	line	48
  7457                           	global	__size_of_lcd_write_string
  7458  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  7459                           	
  7460  12B6                     _lcd_write_string:	
  7461                           	opt	stack 1
  7462                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7463                           	line	50
  7464                           	
  7465  12B6                     l11238:	
  7466                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  7467  12B6  2AD0               	goto	l11244
  7468                           	
  7469  12B7                     l1409:	
  7470                           	
  7471  12B7                     l11240:	
  7472  12B7  1283               	bcf	status, 5	;RP0=0, select bank0
  7473  12B8  1303               	bcf	status, 6	;RP1=0, select bank0
  7474  12B9  0828               	movf	(lcd_write_string@s+1),w
  7475  12BA  00FF               	movwf	btemp+1
  7476  12BB  0827               	movf	(lcd_write_string@s),w
  7477  12BC  0084               	movwf	fsr0
  7478  12BD  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7479  12C2  160A  118A  20E8   	fcall	_lcd_write_data
              160A  118A         
  7480                           	
  7481  12C7                     l11242:	
  7482  12C7  3001               	movlw	low(01h)
  7483  12C8  1283               	bcf	status, 5	;RP0=0, select bank0
  7484  12C9  1303               	bcf	status, 6	;RP1=0, select bank0
  7485  12CA  07A7               	addwf	(lcd_write_string@s),f
  7486  12CB  1803               	skipnc
  7487  12CC  0AA8               	incf	(lcd_write_string@s+1),f
  7488  12CD  3000               	movlw	high(01h)
  7489  12CE  07A8               	addwf	(lcd_write_string@s+1),f
  7490  12CF  2AD0               	goto	l11244
  7491                           	
  7492  12D0                     l1408:	
  7493                           	
  7494  12D0                     l11244:	
  7495  12D0  1283               	bcf	status, 5	;RP0=0, select bank0
  7496  12D1  1303               	bcf	status, 6	;RP1=0, select bank0
  7497  12D2  0828               	movf	(lcd_write_string@s+1),w
  7498  12D3  00FF               	movwf	btemp+1
  7499  12D4  0827               	movf	(lcd_write_string@s),w
  7500  12D5  0084               	movwf	fsr0
  7501  12D6  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7502  12DB  3800               	iorlw	0
  7503  12DC  1D03               	skipz
  7504  12DD  2ADF               	goto	u4791
  7505  12DE  2AE0               	goto	u4790
  7506  12DF                     u4791:
  7507  12DF  2AB7               	goto	l11240
  7508  12E0                     u4790:
  7509  12E0  2AE1               	goto	l1411
  7510                           	
  7511  12E1                     l1410:	
  7512                           	line	51
  7513                           	
  7514  12E1                     l1411:	
  7515  12E1  0008               	return
  7516                           	opt stack 0
  7517                           GLOBAL	__end_of_lcd_write_string
  7518  12E2                     	__end_of_lcd_write_string:
  7519 ;; =============== function _lcd_write_string ends ============
  7520                           
  7521                           	signat	_lcd_write_string,4216
  7522                           	global	_lcd_set_cursor
  7523                           psect	text1054,local,class=CODE,delta=2
  7524                           global __ptext1054
  7525  10D0                     __ptext1054:
  7526                           
  7527 ;; *************** function _lcd_set_cursor *****************
  7528 ;; Defined at:
  7529 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  address         1    wreg     unsigned char 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  address         1    3[BANK0 ] unsigned char 
  7534 ;; Return value:  Size  Location     Type
  7535 ;;		None               void
  7536 ;; Registers used:
  7537 ;;		wreg, status,2, status,0, pclath, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7543 ;;      Params:         0       0       0       0       0
  7544 ;;      Locals:         0       1       0       0       0
  7545 ;;      Temps:          0       0       0       0       0
  7546 ;;      Totals:         0       1       0       0       0
  7547 ;;Total ram usage:        1 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    4
  7550 ;; This function calls:
  7551 ;;		_lcd_write_control
  7552 ;; This function is called by:
  7553 ;;		_UpdateDisplay
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           psect	text1054
  7557                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7558                           	line	42
  7559                           	global	__size_of_lcd_set_cursor
  7560  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  7561                           	
  7562  10D0                     _lcd_set_cursor:	
  7563                           	opt	stack 1
  7564                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  7565                           ;lcd_set_cursor@address stored from wreg
  7566  10D0  1283               	bcf	status, 5	;RP0=0, select bank0
  7567  10D1  1303               	bcf	status, 6	;RP1=0, select bank0
  7568  10D2  00A3               	movwf	(lcd_set_cursor@address)
  7569                           	line	43
  7570                           	
  7571  10D3                     l11234:	
  7572                           ;lcd.c: 43: address |= 0b10000000;
  7573  10D3  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  7574                           	line	44
  7575                           	
  7576  10D4                     l11236:	
  7577                           ;lcd.c: 44: lcd_write_control(address);
  7578  10D4  0823               	movf	(lcd_set_cursor@address),w
  7579  10D5  160A  118A  2122   	fcall	_lcd_write_control
              160A  118A         
  7580                           	line	45
  7581                           	
  7582  10DA                     l1405:	
  7583  10DA  0008               	return
  7584                           	opt stack 0
  7585                           GLOBAL	__end_of_lcd_set_cursor
  7586  10DB                     	__end_of_lcd_set_cursor:
  7587 ;; =============== function _lcd_set_cursor ends ============
  7588                           
  7589                           	signat	_lcd_set_cursor,4216
  7590                           	global	_abs
  7591                           psect	text1055,local,class=CODE,delta=2
  7592                           global __ptext1055
  7593  139C                     __ptext1055:
  7594                           
  7595 ;; *************** function _abs *****************
  7596 ;; Defined at:
  7597 ;;		line 458 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  v               2    6[BANK0 ] int 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;		None
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  2    6[BANK0 ] int 
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7611 ;;      Params:         0       2       0       0       0
  7612 ;;      Locals:         0       0       0       0       0
  7613 ;;      Temps:          0       2       0       0       0
  7614 ;;      Totals:         0       4       0       0       0
  7615 ;;Total ram usage:        4 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    4
  7618 ;; This function calls:
  7619 ;;		___wmul
  7620 ;; This function is called by:
  7621 ;;		_robot_turnRight
  7622 ;;		_robotMoveSpeed
  7623 ;;		_robotTurnSpeed
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           psect	text1055
  7627                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7628                           	line	458
  7629                           	global	__size_of_abs
  7630  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  7631                           	
  7632  139C                     _abs:	
  7633                           	opt	stack 2
  7634                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7635                           	line	459
  7636                           	
  7637  139C                     l11230:	
  7638                           ;robot.c: 459: return (v * ((v > 0) - (v < 0)));
  7639  139C  3000               	movlw	0
  7640  139D  1283               	bcf	status, 5	;RP0=0, select bank0
  7641  139E  1303               	bcf	status, 6	;RP1=0, select bank0
  7642  139F  1BA7               	btfsc	(abs@v+1),7
  7643  13A0  3001               	movlw	1
  7644  13A1  00A8               	movwf	(??_abs+0)+0
  7645  13A2  01A9               	clrf	(??_abs+0)+0+1
  7646  13A3  09A8               	comf	(??_abs+0)+0,f
  7647  13A4  09A9               	comf	(??_abs+0)+1,f
  7648  13A5  0AA8               	incf	(??_abs+0)+0,f
  7649  13A6  1903               	skipnz
  7650  13A7  0AA9               	incf	(??_abs+0)+1,f
  7651  13A8  0827               	movf	(abs@v+1),w
  7652  13A9  3A80               	xorlw	80h
  7653  13AA  00FF               	movwf	btemp+1
  7654  13AB  3080               	movlw	(high(01h))^80h
  7655  13AC  027F               	subwf	btemp+1,w
  7656  13AD  1D03               	skipz
  7657  13AE  2BB1               	goto	u4785
  7658  13AF  3001               	movlw	low(01h)
  7659  13B0  0226               	subwf	(abs@v),w
  7660  13B1                     u4785:
  7661                           
  7662  13B1  3000               	movlw	0
  7663  13B2  1803               	skipnc
  7664  13B3  3001               	movlw	1
  7665  13B4  1283               	bcf	status, 5	;RP0=0, select bank0
  7666  13B5  1303               	bcf	status, 6	;RP1=0, select bank0
  7667  13B6  0728               	addwf	0+(??_abs+0)+0,w
  7668  13B7  00A0               	movwf	(?___wmul)
  7669  13B8  0829               	movf	1+(??_abs+0)+0,w
  7670  13B9  1803               	skipnc
  7671  13BA  0A29               	incf	1+(??_abs+0)+0,w
  7672  13BB  00A1               	movwf	((?___wmul))+1
  7673  13BC  0827               	movf	(abs@v+1),w
  7674  13BD  01A3               	clrf	1+(?___wmul)+02h
  7675  13BE  07A3               	addwf	1+(?___wmul)+02h
  7676  13BF  0826               	movf	(abs@v),w
  7677  13C0  01A2               	clrf	0+(?___wmul)+02h
  7678  13C1  07A2               	addwf	0+(?___wmul)+02h
  7679                           
  7680  13C2  160A  118A  225E   	fcall	___wmul
              160A  118A         
  7681  13C7  1283               	bcf	status, 5	;RP0=0, select bank0
  7682  13C8  1303               	bcf	status, 6	;RP1=0, select bank0
  7683  13C9  0821               	movf	(1+(?___wmul)),w
  7684  13CA  01A7               	clrf	(?_abs+1)
  7685  13CB  07A7               	addwf	(?_abs+1)
  7686  13CC  0820               	movf	(0+(?___wmul)),w
  7687  13CD  01A6               	clrf	(?_abs)
  7688  13CE  07A6               	addwf	(?_abs)
  7689                           
  7690  13CF  2BD0               	goto	l6167
  7691                           	
  7692  13D0                     l11232:	
  7693                           	line	460
  7694                           	
  7695  13D0                     l6167:	
  7696  13D0  0008               	return
  7697                           	opt stack 0
  7698                           GLOBAL	__end_of_abs
  7699  13D1                     	__end_of_abs:
  7700 ;; =============== function _abs ends ============
  7701                           
  7702                           	signat	_abs,4218
  7703                           	global	_robotTurn
  7704                           psect	text1056,local,class=CODE,delta=2
  7705                           global __ptext1056
  7706  1676                     __ptext1056:
  7707                           
  7708 ;; *************** function _robotTurn *****************
  7709 ;; Defined at:
  7710 ;;		line 135 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  angle           2    2[BANK0 ] int 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;		None               void
  7717 ;; Registers used:
  7718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7724 ;;      Params:         0       2       0       0       0
  7725 ;;      Locals:         0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0
  7727 ;;      Totals:         0       2       0       0       0
  7728 ;;Total ram usage:        2 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; Hardware stack levels required when called:    4
  7731 ;; This function calls:
  7732 ;;		_ser_putch
  7733 ;; This function is called by:
  7734 ;;		_robotTurnSpeed
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           psect	text1056
  7738                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7739                           	line	135
  7740                           	global	__size_of_robotTurn
  7741  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  7742                           	
  7743  1676                     _robotTurn:	
  7744                           	opt	stack 2
  7745                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7746                           	line	137
  7747                           	
  7748  1676                     l11222:	
  7749                           ;robot.c: 137: if (angle > 0)
  7750  1676  1283               	bcf	status, 5	;RP0=0, select bank0
  7751  1677  1303               	bcf	status, 6	;RP1=0, select bank0
  7752  1678  0823               	movf	(robotTurn@angle+1),w
  7753  1679  3A80               	xorlw	80h
  7754  167A  00FF               	movwf	btemp+1
  7755  167B  3080               	movlw	(high(01h))^80h
  7756  167C  027F               	subwf	btemp+1,w
  7757  167D  1D03               	skipz
  7758  167E  2E81               	goto	u4765
  7759  167F  3001               	movlw	low(01h)
  7760  1680  0222               	subwf	(robotTurn@angle),w
  7761  1681                     u4765:
  7762                           
  7763  1681  1C03               	skipc
  7764  1682  2E84               	goto	u4761
  7765  1683  2E85               	goto	u4760
  7766  1684                     u4761:
  7767  1684  2EA4               	goto	l6094
  7768  1685                     u4760:
  7769                           	line	139
  7770                           	
  7771  1685                     l11224:	
  7772                           ;robot.c: 138: {
  7773                           ;robot.c: 139: ser_putch(137);
  7774  1685  3089               	movlw	(089h)
  7775  1686  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7776                           	line	141
  7777                           ;robot.c: 141: ser_putch(0);
  7778  168B  3000               	movlw	(0)
  7779  168C  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7780                           	line	143
  7781                           ;robot.c: 143: ser_putch(200);
  7782  1691  30C8               	movlw	(0C8h)
  7783  1692  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7784                           	line	145
  7785                           ;robot.c: 145: ser_putch(0);
  7786  1697  3000               	movlw	(0)
  7787  1698  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7788                           	line	147
  7789                           ;robot.c: 147: ser_putch(1);
  7790  169D  3001               	movlw	(01h)
  7791  169E  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7792                           	line	148
  7793                           ;robot.c: 148: }
  7794  16A3  2EE9               	goto	l6098
  7795                           	line	149
  7796                           	
  7797  16A4                     l6094:	
  7798                           ;robot.c: 149: else if (angle < 0)
  7799  16A4  1283               	bcf	status, 5	;RP0=0, select bank0
  7800  16A5  1303               	bcf	status, 6	;RP1=0, select bank0
  7801  16A6  1FA3               	btfss	(robotTurn@angle+1),7
  7802  16A7  2EA9               	goto	u4771
  7803  16A8  2EAA               	goto	u4770
  7804  16A9                     u4771:
  7805  16A9  2EC9               	goto	l11228
  7806  16AA                     u4770:
  7807                           	line	151
  7808                           	
  7809  16AA                     l11226:	
  7810                           ;robot.c: 150: {
  7811                           ;robot.c: 151: ser_putch(137);
  7812  16AA  3089               	movlw	(089h)
  7813  16AB  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7814                           	line	153
  7815                           ;robot.c: 153: ser_putch(0);
  7816  16B0  3000               	movlw	(0)
  7817  16B1  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7818                           	line	155
  7819                           ;robot.c: 155: ser_putch(200);
  7820  16B6  30C8               	movlw	(0C8h)
  7821  16B7  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7822                           	line	157
  7823                           ;robot.c: 157: ser_putch(255);
  7824  16BC  30FF               	movlw	(0FFh)
  7825  16BD  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7826                           	line	159
  7827                           ;robot.c: 159: ser_putch(255);
  7828  16C2  30FF               	movlw	(0FFh)
  7829  16C3  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7830                           	line	160
  7831                           ;robot.c: 160: }
  7832  16C8  2EE9               	goto	l6098
  7833                           	line	161
  7834                           	
  7835  16C9                     l6096:	
  7836                           	line	163
  7837                           	
  7838  16C9                     l11228:	
  7839                           ;robot.c: 161: else
  7840                           ;robot.c: 162: {
  7841                           ;robot.c: 163: ser_putch(137);
  7842  16C9  3089               	movlw	(089h)
  7843  16CA  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7844                           	line	165
  7845                           ;robot.c: 165: ser_putch(0);
  7846  16CF  3000               	movlw	(0)
  7847  16D0  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7848                           	line	167
  7849                           ;robot.c: 167: ser_putch(0);
  7850  16D5  3000               	movlw	(0)
  7851  16D6  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7852                           	line	169
  7853                           ;robot.c: 169: ser_putch(0);
  7854  16DB  3000               	movlw	(0)
  7855  16DC  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7856                           	line	171
  7857                           ;robot.c: 171: ser_putch(0);
  7858  16E1  3000               	movlw	(0)
  7859  16E2  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  7860  16E7  2EE9               	goto	l6098
  7861                           	line	172
  7862                           	
  7863  16E8                     l6097:	
  7864  16E8  2EE9               	goto	l6098
  7865                           	
  7866  16E9                     l6095:	
  7867                           	line	173
  7868                           	
  7869  16E9                     l6098:	
  7870  16E9  0008               	return
  7871                           	opt stack 0
  7872                           GLOBAL	__end_of_robotTurn
  7873  16EA                     	__end_of_robotTurn:
  7874 ;; =============== function _robotTurn ends ============
  7875                           
  7876                           	signat	_robotTurn,4216
  7877                           	global	_ser_getch
  7878                           psect	text1057,local,class=CODE,delta=2
  7879                           global __ptext1057
  7880  128A                     __ptext1057:
  7881                           
  7882 ;; *************** function _ser_getch *****************
  7883 ;; Defined at:
  7884 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;		None
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  c               1    1[BANK0 ] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7898 ;;      Params:         0       0       0       0       0
  7899 ;;      Locals:         0       1       0       0       0
  7900 ;;      Temps:          0       1       0       0       0
  7901 ;;      Totals:         0       2       0       0       0
  7902 ;;Total ram usage:        2 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    4
  7905 ;; This function calls:
  7906 ;;		_ser_isrx
  7907 ;; This function is called by:
  7908 ;;		_robot_read
  7909 ;;		_RobotBattRead
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           psect	text1057
  7913                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7914                           	line	55
  7915                           	global	__size_of_ser_getch
  7916  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  7917                           	
  7918  128A                     _ser_getch:	
  7919                           	opt	stack 1
  7920                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7921                           	line	58
  7922                           	
  7923  128A                     l11206:	
  7924                           ;ser.c: 56: unsigned char c;
  7925                           ;ser.c: 58: while (ser_isrx()==0)
  7926  128A  2A8C               	goto	l11208
  7927                           	
  7928  128B                     l6871:	
  7929                           	line	59
  7930                           ;ser.c: 59: continue;
  7931  128B  2A8C               	goto	l11208
  7932                           	
  7933  128C                     l6870:	
  7934                           	line	58
  7935                           	
  7936  128C                     l11208:	
  7937  128C  160A  118A  2162   	fcall	_ser_isrx
              160A  118A         
  7938  1291  1C03               	btfss	status,0
  7939  1292  2A94               	goto	u4751
  7940  1293  2A95               	goto	u4750
  7941  1294                     u4751:
  7942  1294  2A8C               	goto	l11208
  7943  1295                     u4750:
  7944                           	
  7945  1295                     l6872:	
  7946                           	line	61
  7947                           ;ser.c: 61: GIE=0;
  7948  1295  138B               	bcf	(95/8),(95)&7
  7949                           	line	62
  7950                           	
  7951  1296                     l11210:	
  7952                           ;ser.c: 62: c=rxfifo[rxoptr];
  7953  1296  1683               	bsf	status, 5	;RP0=1, select bank1
  7954  1297  1303               	bcf	status, 6	;RP1=0, select bank1
  7955  1298  0858               	movf	(_rxoptr)^080h,w
  7956  1299  3EA0               	addlw	_rxfifo&0ffh
  7957  129A  0084               	movwf	fsr0
  7958  129B  1383               	bcf	status, 7	;select IRP bank1
  7959  129C  0800               	movf	indf,w
  7960  129D  1283               	bcf	status, 5	;RP0=0, select bank0
  7961  129E  1303               	bcf	status, 6	;RP1=0, select bank0
  7962  129F  00A0               	movwf	(??_ser_getch+0)+0
  7963  12A0  0820               	movf	(??_ser_getch+0)+0,w
  7964  12A1  00A1               	movwf	(ser_getch@c)
  7965                           	line	63
  7966                           	
  7967  12A2                     l11212:	
  7968                           ;ser.c: 63: ++rxoptr;
  7969  12A2  3001               	movlw	(01h)
  7970  12A3  00A0               	movwf	(??_ser_getch+0)+0
  7971  12A4  0820               	movf	(??_ser_getch+0)+0,w
  7972  12A5  1683               	bsf	status, 5	;RP0=1, select bank1
  7973  12A6  1303               	bcf	status, 6	;RP1=0, select bank1
  7974  12A7  07D8               	addwf	(_rxoptr)^080h,f	;volatile
  7975                           	line	64
  7976                           	
  7977  12A8                     l11214:	
  7978                           ;ser.c: 64: rxoptr &= (16-1);
  7979  12A8  300F               	movlw	(0Fh)
  7980  12A9  1283               	bcf	status, 5	;RP0=0, select bank0
  7981  12AA  1303               	bcf	status, 6	;RP1=0, select bank0
  7982  12AB  00A0               	movwf	(??_ser_getch+0)+0
  7983  12AC  0820               	movf	(??_ser_getch+0)+0,w
  7984  12AD  1683               	bsf	status, 5	;RP0=1, select bank1
  7985  12AE  1303               	bcf	status, 6	;RP1=0, select bank1
  7986  12AF  05D8               	andwf	(_rxoptr)^080h,f	;volatile
  7987                           	line	65
  7988                           	
  7989  12B0                     l11216:	
  7990                           ;ser.c: 65: GIE=1;
  7991  12B0  178B               	bsf	(95/8),(95)&7
  7992                           	line	66
  7993                           	
  7994  12B1                     l11218:	
  7995                           ;ser.c: 66: return c;
  7996  12B1  1283               	bcf	status, 5	;RP0=0, select bank0
  7997  12B2  1303               	bcf	status, 6	;RP1=0, select bank0
  7998  12B3  0821               	movf	(ser_getch@c),w
  7999  12B4  2AB5               	goto	l6873
  8000                           	
  8001  12B5                     l11220:	
  8002                           	line	67
  8003                           	
  8004  12B5                     l6873:	
  8005  12B5  0008               	return
  8006                           	opt stack 0
  8007                           GLOBAL	__end_of_ser_getch
  8008  12B6                     	__end_of_ser_getch:
  8009 ;; =============== function _ser_getch ends ============
  8010                           
  8011                           	signat	_ser_getch,89
  8012                           	global	_sprintf
  8013                           psect	text1058,local,class=CODE,delta=2
  8014                           global __ptext1058
  8015  0674                     __ptext1058:
  8016                           
  8017 ;; *************** function _sprintf *****************
  8018 ;; Defined at:
  8019 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  sp              1    wreg     PTR unsigned char 
  8022 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8023 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  8024 ;;		 -> STR_19(5), STR_13(13), 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  8027 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8028 ;;  _val            4   31[BANK0 ] struct .
  8029 ;;  c               1   36[BANK0 ] char 
  8030 ;;  prec            1   30[BANK0 ] char 
  8031 ;;  flag            1   29[BANK0 ] unsigned char 
  8032 ;;  ap              1   28[BANK0 ] PTR void [1]
  8033 ;;		 -> ?_sprintf(2), 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  2   20[BANK0 ] int 
  8036 ;; Registers used:
  8037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8043 ;;      Params:         0       5       0       0       0
  8044 ;;      Locals:         0       9       0       0       0
  8045 ;;      Temps:          0       3       0       0       0
  8046 ;;      Totals:         0      17       0       0       0
  8047 ;;Total ram usage:       17 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:    4
  8050 ;; This function calls:
  8051 ;;		___lwdiv
  8052 ;;		___lwmod
  8053 ;; This function is called by:
  8054 ;;		_UpdateDisplay
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           psect	text1058
  8058                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  8059                           	line	488
  8060                           	global	__size_of_sprintf
  8061  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  8062                           	
  8063  0674                     _sprintf:	
  8064                           	opt	stack 1
  8065                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8066                           ;sprintf@sp stored from wreg
  8067                           	line	537
  8068  0674  1283               	bcf	status, 5	;RP0=0, select bank0
  8069  0675  1303               	bcf	status, 6	;RP1=0, select bank0
  8070  0676  00C3               	movwf	(sprintf@sp)
  8071                           	
  8072  0677                     l11148:	
  8073  0677  3035               	movlw	(?_sprintf+01h)&0ffh
  8074  0678  00B9               	movwf	(??_sprintf+0)+0
  8075  0679  0839               	movf	(??_sprintf+0)+0,w
  8076  067A  00BC               	movwf	(sprintf@ap)
  8077                           	line	540
  8078  067B  2F5A               	goto	l11200
  8079                           	
  8080  067C                     l6911:	
  8081                           	line	542
  8082                           	
  8083  067C                     l11150:	
  8084  067C  0844               	movf	(sprintf@c),w
  8085  067D  3A25               	xorlw	025h
  8086  067E  1903               	skipnz
  8087  067F  2E81               	goto	u4671
  8088  0680  2E82               	goto	u4670
  8089  0681                     u4671:
  8090  0681  2E8E               	goto	l6912
  8091  0682                     u4670:
  8092                           	line	545
  8093                           	
  8094  0682                     l11152:	
  8095  0682  0844               	movf	(sprintf@c),w
  8096  0683  00B9               	movwf	(??_sprintf+0)+0
  8097  0684  0843               	movf	(sprintf@sp),w
  8098  0685  0084               	movwf	fsr0
  8099  0686  0839               	movf	(??_sprintf+0)+0,w
  8100  0687  1383               	bcf	status, 7	;select IRP bank0
  8101  0688  0080               	movwf	indf
  8102                           	
  8103  0689                     l11154:	
  8104  0689  3001               	movlw	(01h)
  8105  068A  00B9               	movwf	(??_sprintf+0)+0
  8106  068B  0839               	movf	(??_sprintf+0)+0,w
  8107  068C  07C3               	addwf	(sprintf@sp),f
  8108                           	line	546
  8109  068D  2F5A               	goto	l11200
  8110                           	line	547
  8111                           	
  8112  068E                     l6912:	
  8113                           	line	552
  8114  068E  01BD               	clrf	(sprintf@flag)
  8115                           	line	638
  8116  068F  2E95               	goto	l11158
  8117                           	line	640
  8118                           	
  8119  0690                     l6914:	
  8120                           	line	641
  8121  0690  2F6E               	goto	l11202
  8122                           	line	700
  8123                           	
  8124  0691                     l6916:	
  8125  0691  2EAA               	goto	l11160
  8126                           	line	701
  8127                           	
  8128  0692                     l6917:	
  8129                           	line	702
  8130  0692  2EAA               	goto	l11160
  8131                           	line	805
  8132                           	
  8133  0693                     l6919:	
  8134                           	line	816
  8135  0693  2F5A               	goto	l11200
  8136                           	line	825
  8137                           	
  8138  0694                     l11156:	
  8139  0694  2EAA               	goto	l11160
  8140                           	line	638
  8141                           	
  8142  0695                     l6913:	
  8143                           	
  8144  0695                     l11158:	
  8145  0695  3001               	movlw	01h
  8146  0696  07B4               	addwf	(sprintf@f),f
  8147  0697  30FF               	movlw	-01h
  8148  0698  0734               	addwf	(sprintf@f),w
  8149  0699  0084               	movwf	fsr0
  8150  069A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8151  069F  00C4               	movwf	(sprintf@c)
  8152                           	; Switch size 1, requested type "space"
  8153                           ; Number of cases is 3, Range of values is 0 to 105
  8154                           ; switch strategies available:
  8155                           ; Name         Instructions Cycles
  8156                           ; simple_byte           10     6 (average)
  8157                           ; jumptable            260     6 (fixed)
  8158                           ; rangetable           110     6 (fixed)
  8159                           ; spacedrange          218     9 (fixed)
  8160                           ; locatedrange         106     3 (fixed)
  8161                           ;	Chosen strategy is simple_byte
  8162                           
  8163                           	opt asmopt_off
  8164  06A0  3A00               	xorlw	0^0	; case 0
  8165  06A1  1903               	skipnz
  8166  06A2  2F6E               	goto	l11202
  8167  06A3  3A64               	xorlw	100^0	; case 100
  8168  06A4  1903               	skipnz
  8169  06A5  2EAA               	goto	l11160
  8170  06A6  3A0D               	xorlw	105^100	; case 105
  8171  06A7  1903               	skipnz
  8172  06A8  2EAA               	goto	l11160
  8173  06A9  2F5A               	goto	l11200
  8174                           	opt asmopt_on
  8175                           
  8176                           	line	825
  8177                           	
  8178  06AA                     l6918:	
  8179                           	line	1254
  8180                           	
  8181  06AA                     l11160:	
  8182  06AA  083C               	movf	(sprintf@ap),w
  8183  06AB  0084               	movwf	fsr0
  8184  06AC  1383               	bcf	status, 7	;select IRP bank0
  8185  06AD  0800               	movf	indf,w
  8186  06AE  00BF               	movwf	(sprintf@_val)
  8187  06AF  0A84               	incf	fsr0,f
  8188  06B0  0800               	movf	indf,w
  8189  06B1  00C0               	movwf	(sprintf@_val+1)
  8190                           	
  8191  06B2                     l11162:	
  8192  06B2  3002               	movlw	(02h)
  8193  06B3  00B9               	movwf	(??_sprintf+0)+0
  8194  06B4  0839               	movf	(??_sprintf+0)+0,w
  8195  06B5  07BC               	addwf	(sprintf@ap),f
  8196                           	line	1256
  8197                           	
  8198  06B6                     l11164:	
  8199  06B6  1FC0               	btfss	(sprintf@_val+1),7
  8200  06B7  2EB9               	goto	u4681
  8201  06B8  2EBA               	goto	u4680
  8202  06B9                     u4681:
  8203  06B9  2EC4               	goto	l11170
  8204  06BA                     u4680:
  8205                           	line	1257
  8206                           	
  8207  06BA                     l11166:	
  8208  06BA  3003               	movlw	(03h)
  8209  06BB  00B9               	movwf	(??_sprintf+0)+0
  8210  06BC  0839               	movf	(??_sprintf+0)+0,w
  8211  06BD  04BD               	iorwf	(sprintf@flag),f
  8212                           	line	1258
  8213                           	
  8214  06BE                     l11168:	
  8215  06BE  09BF               	comf	(sprintf@_val),f
  8216  06BF  09C0               	comf	(sprintf@_val+1),f
  8217  06C0  0ABF               	incf	(sprintf@_val),f
  8218  06C1  1903               	skipnz
  8219  06C2  0AC0               	incf	(sprintf@_val+1),f
  8220  06C3  2EC4               	goto	l11170
  8221                           	line	1259
  8222                           	
  8223  06C4                     l6920:	
  8224                           	line	1300
  8225                           	
  8226  06C4                     l11170:	
  8227  06C4  01C4               	clrf	(sprintf@c)
  8228  06C5  1403               	bsf	status,0
  8229  06C6  0DC4               	rlf	(sprintf@c),f
  8230                           	
  8231  06C7                     l11172:	
  8232  06C7  0844               	movf	(sprintf@c),w
  8233  06C8  3A05               	xorlw	05h
  8234  06C9  1D03               	skipz
  8235  06CA  2ECC               	goto	u4691
  8236  06CB  2ECD               	goto	u4690
  8237  06CC                     u4691:
  8238  06CC  2ECF               	goto	l11176
  8239  06CD                     u4690:
  8240  06CD  2EF7               	goto	l11184
  8241                           	
  8242  06CE                     l11174:	
  8243  06CE  2EF7               	goto	l11184
  8244                           	line	1301
  8245                           	
  8246  06CF                     l6921:	
  8247                           	
  8248  06CF                     l11176:	
  8249  06CF  0844               	movf	(sprintf@c),w
  8250  06D0  00B9               	movwf	(??_sprintf+0)+0
  8251  06D1  0739               	addwf	(??_sprintf+0)+0,w
  8252  06D2  3E01               	addlw	low((_dpowers-__stringbase))
  8253  06D3  0084               	movwf	fsr0
  8254  06D4  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8255  06D9  00BA               	movwf	(??_sprintf+1)+0
  8256  06DA  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8257  06DF  00BB               	movwf	(??_sprintf+1)+0+1
  8258  06E0  083B               	movf	1+(??_sprintf+1)+0,w
  8259  06E1  0240               	subwf	(sprintf@_val+1),w
  8260  06E2  1D03               	skipz
  8261  06E3  2EE6               	goto	u4705
  8262  06E4  083A               	movf	0+(??_sprintf+1)+0,w
  8263  06E5  023F               	subwf	(sprintf@_val),w
  8264  06E6                     u4705:
  8265  06E6  1803               	skipnc
  8266  06E7  2EE9               	goto	u4701
  8267  06E8  2EEA               	goto	u4700
  8268  06E9                     u4701:
  8269  06E9  2EEC               	goto	l11180
  8270  06EA                     u4700:
  8271  06EA  2EF7               	goto	l11184
  8272                           	line	1302
  8273                           	
  8274  06EB                     l11178:	
  8275  06EB  2EF7               	goto	l11184
  8276                           	
  8277  06EC                     l6923:	
  8278                           	line	1300
  8279                           	
  8280  06EC                     l11180:	
  8281  06EC  3001               	movlw	(01h)
  8282  06ED  00B9               	movwf	(??_sprintf+0)+0
  8283  06EE  0839               	movf	(??_sprintf+0)+0,w
  8284  06EF  07C4               	addwf	(sprintf@c),f
  8285                           	
  8286  06F0                     l11182:	
  8287  06F0  0844               	movf	(sprintf@c),w
  8288  06F1  3A05               	xorlw	05h
  8289  06F2  1D03               	skipz
  8290  06F3  2EF5               	goto	u4711
  8291  06F4  2EF6               	goto	u4710
  8292  06F5                     u4711:
  8293  06F5  2ECF               	goto	l11176
  8294  06F6                     u4710:
  8295  06F6  2EF7               	goto	l11184
  8296                           	
  8297  06F7                     l6922:	
  8298                           	line	1433
  8299                           	
  8300  06F7                     l11184:	
  8301  06F7  083D               	movf	(sprintf@flag),w
  8302  06F8  3903               	andlw	03h
  8303  06F9  1903               	btfsc	status,2
  8304  06FA  2EFC               	goto	u4721
  8305  06FB  2EFD               	goto	u4720
  8306  06FC                     u4721:
  8307  06FC  2F09               	goto	l11190
  8308  06FD                     u4720:
  8309                           	line	1434
  8310                           	
  8311  06FD                     l11186:	
  8312  06FD  302D               	movlw	(02Dh)
  8313  06FE  00B9               	movwf	(??_sprintf+0)+0
  8314  06FF  0843               	movf	(sprintf@sp),w
  8315  0700  0084               	movwf	fsr0
  8316  0701  0839               	movf	(??_sprintf+0)+0,w
  8317  0702  1383               	bcf	status, 7	;select IRP bank0
  8318  0703  0080               	movwf	indf
  8319                           	
  8320  0704                     l11188:	
  8321  0704  3001               	movlw	(01h)
  8322  0705  00B9               	movwf	(??_sprintf+0)+0
  8323  0706  0839               	movf	(??_sprintf+0)+0,w
  8324  0707  07C3               	addwf	(sprintf@sp),f
  8325  0708  2F09               	goto	l11190
  8326                           	
  8327  0709                     l6924:	
  8328                           	line	1467
  8329                           	
  8330  0709                     l11190:	
  8331  0709  0844               	movf	(sprintf@c),w
  8332  070A  00B9               	movwf	(??_sprintf+0)+0
  8333  070B  0839               	movf	(??_sprintf+0)+0,w
  8334  070C  00BE               	movwf	(sprintf@prec)
  8335                           	line	1469
  8336  070D  2F4E               	goto	l11198
  8337                           	
  8338  070E                     l6926:	
  8339                           	line	1484
  8340                           	
  8341  070E                     l11192:	
  8342  070E  300A               	movlw	low(0Ah)
  8343  070F  00AE               	movwf	(?___lwmod)
  8344  0710  3000               	movlw	high(0Ah)
  8345  0711  00AF               	movwf	((?___lwmod))+1
  8346  0712  083E               	movf	(sprintf@prec),w
  8347  0713  00B9               	movwf	(??_sprintf+0)+0
  8348  0714  0739               	addwf	(??_sprintf+0)+0,w
  8349  0715  3E01               	addlw	low((_dpowers-__stringbase))
  8350  0716  0084               	movwf	fsr0
  8351  0717  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8352  071C  00A6               	movwf	(?___lwdiv)
  8353  071D  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8354  0722  00A7               	movwf	(?___lwdiv+1)
  8355  0723  0840               	movf	(sprintf@_val+1),w
  8356  0724  01A9               	clrf	1+(?___lwdiv)+02h
  8357  0725  07A9               	addwf	1+(?___lwdiv)+02h
  8358  0726  083F               	movf	(sprintf@_val),w
  8359  0727  01A8               	clrf	0+(?___lwdiv)+02h
  8360  0728  07A8               	addwf	0+(?___lwdiv)+02h
  8361                           
  8362  0729  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  8363  072E  1283               	bcf	status, 5	;RP0=0, select bank0
  8364  072F  1303               	bcf	status, 6	;RP1=0, select bank0
  8365  0730  0827               	movf	(1+(?___lwdiv)),w
  8366  0731  01B1               	clrf	1+(?___lwmod)+02h
  8367  0732  07B1               	addwf	1+(?___lwmod)+02h
  8368  0733  0826               	movf	(0+(?___lwdiv)),w
  8369  0734  01B0               	clrf	0+(?___lwmod)+02h
  8370  0735  07B0               	addwf	0+(?___lwmod)+02h
  8371                           
  8372  0736  160A  118A  2489   	fcall	___lwmod
              120A  118A         
  8373  073B  1283               	bcf	status, 5	;RP0=0, select bank0
  8374  073C  1303               	bcf	status, 6	;RP1=0, select bank0
  8375  073D  082E               	movf	(0+(?___lwmod)),w
  8376  073E  3E30               	addlw	030h
  8377  073F  00BA               	movwf	(??_sprintf+1)+0
  8378  0740  083A               	movf	(??_sprintf+1)+0,w
  8379  0741  00C4               	movwf	(sprintf@c)
  8380                           	line	1516
  8381                           	
  8382  0742                     l11194:	
  8383  0742  0844               	movf	(sprintf@c),w
  8384  0743  00B9               	movwf	(??_sprintf+0)+0
  8385  0744  0843               	movf	(sprintf@sp),w
  8386  0745  0084               	movwf	fsr0
  8387  0746  0839               	movf	(??_sprintf+0)+0,w
  8388  0747  1383               	bcf	status, 7	;select IRP bank0
  8389  0748  0080               	movwf	indf
  8390                           	
  8391  0749                     l11196:	
  8392  0749  3001               	movlw	(01h)
  8393  074A  00B9               	movwf	(??_sprintf+0)+0
  8394  074B  0839               	movf	(??_sprintf+0)+0,w
  8395  074C  07C3               	addwf	(sprintf@sp),f
  8396  074D  2F4E               	goto	l11198
  8397                           	line	1517
  8398                           	
  8399  074E                     l6925:	
  8400                           	line	1469
  8401                           	
  8402  074E                     l11198:	
  8403  074E  30FF               	movlw	(-1)
  8404  074F  00B9               	movwf	(??_sprintf+0)+0
  8405  0750  0839               	movf	(??_sprintf+0)+0,w
  8406  0751  07BE               	addwf	(sprintf@prec),f
  8407  0752  083E               	movf	((sprintf@prec)),w
  8408  0753  3AFF               	xorlw	-1
  8409  0754  1D03               	skipz
  8410  0755  2F57               	goto	u4731
  8411  0756  2F58               	goto	u4730
  8412  0757                     u4731:
  8413  0757  2F0E               	goto	l11192
  8414  0758                     u4730:
  8415  0758  2F5A               	goto	l11200
  8416                           	
  8417  0759                     l6927:	
  8418  0759  2F5A               	goto	l11200
  8419                           	line	1525
  8420                           	
  8421  075A                     l6910:	
  8422                           	line	540
  8423                           	
  8424  075A                     l11200:	
  8425  075A  3001               	movlw	01h
  8426  075B  07B4               	addwf	(sprintf@f),f
  8427  075C  30FF               	movlw	-01h
  8428  075D  0734               	addwf	(sprintf@f),w
  8429  075E  0084               	movwf	fsr0
  8430  075F  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8431  0764  00B9               	movwf	(??_sprintf+0)+0
  8432  0765  0839               	movf	(??_sprintf+0)+0,w
  8433  0766  00C4               	movwf	(sprintf@c)
  8434  0767  08C4               	movf	((sprintf@c)),f
  8435  0768  1D03               	skipz
  8436  0769  2F6B               	goto	u4741
  8437  076A  2F6C               	goto	u4740
  8438  076B                     u4741:
  8439  076B  2E7C               	goto	l11150
  8440  076C                     u4740:
  8441  076C  2F6E               	goto	l11202
  8442                           	
  8443  076D                     l6928:	
  8444  076D  2F6E               	goto	l11202
  8445                           	line	1527
  8446                           	
  8447  076E                     l6915:	
  8448                           	line	1530
  8449                           	
  8450  076E                     l11202:	
  8451  076E  0843               	movf	(sprintf@sp),w
  8452  076F  0084               	movwf	fsr0
  8453  0770  1383               	bcf	status, 7	;select IRP bank0
  8454  0771  0180               	clrf	indf
  8455  0772  2F73               	goto	l6929
  8456                           	line	1532
  8457                           	
  8458  0773                     l11204:	
  8459                           	line	1533
  8460                           ;	Return value of _sprintf is never used
  8461                           	
  8462  0773                     l6929:	
  8463  0773  0008               	return
  8464                           	opt stack 0
  8465                           GLOBAL	__end_of_sprintf
  8466  0774                     	__end_of_sprintf:
  8467 ;; =============== function _sprintf ends ============
  8468                           
  8469                           	signat	_sprintf,4698
  8470                           	global	_ADCconvert
  8471                           psect	text1059,local,class=CODE,delta=2
  8472                           global __ptext1059
  8473  024A                     __ptext1059:
  8474                           
  8475 ;; *************** function _ADCconvert *****************
  8476 ;; Defined at:
  8477 ;;		line 89 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;		None               void
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0, pclath, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8491 ;;      Params:         0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0
  8493 ;;      Temps:          0       2       0       0       0
  8494 ;;      Totals:         0       2       0       0       0
  8495 ;;Total ram usage:        2 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    4
  8498 ;; This function calls:
  8499 ;;		___wmul
  8500 ;;		___lwdiv
  8501 ;; This function is called by:
  8502 ;;		_readAvgDistance
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           psect	text1059
  8506                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8507                           	line	89
  8508                           	global	__size_of_ADCconvert
  8509  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  8510                           	
  8511  024A                     _ADCconvert:	
  8512                           	opt	stack 1
  8513                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  8514                           	line	95
  8515                           	
  8516  024A                     l11106:	
  8517                           ;infrared.c: 95: if (adcVal >= 213 && adcVal < 234)
  8518  024A  3000               	movlw	high(0D5h)
  8519  024B  1283               	bcf	status, 5	;RP0=0, select bank0
  8520  024C  1303               	bcf	status, 6	;RP1=0, select bank0
  8521  024D  026A               	subwf	(_adcVal+1),w	;volatile
  8522  024E  30D5               	movlw	low(0D5h)
  8523  024F  1903               	skipnz
  8524  0250  0269               	subwf	(_adcVal),w	;volatile
  8525  0251  1C03               	skipc
  8526  0252  2A54               	goto	u4531
  8527  0253  2A55               	goto	u4530
  8528  0254                     u4531:
  8529  0254  2A98               	goto	l11112
  8530  0255                     u4530:
  8531                           	
  8532  0255                     l11108:	
  8533  0255  3000               	movlw	high(0EAh)
  8534  0256  026A               	subwf	(_adcVal+1),w	;volatile
  8535  0257  30EA               	movlw	low(0EAh)
  8536  0258  1903               	skipnz
  8537  0259  0269               	subwf	(_adcVal),w	;volatile
  8538  025A  1803               	skipnc
  8539  025B  2A5D               	goto	u4541
  8540  025C  2A5E               	goto	u4540
  8541  025D                     u4541:
  8542  025D  2A98               	goto	l11112
  8543  025E                     u4540:
  8544                           	line	97
  8545                           	
  8546  025E                     l11110:	
  8547                           ;infrared.c: 96: {
  8548                           ;infrared.c: 97: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  8549  025E  3015               	movlw	low(015h)
  8550  025F  00A6               	movwf	(?___lwdiv)
  8551  0260  3000               	movlw	high(015h)
  8552  0261  00A7               	movwf	((?___lwdiv))+1
  8553  0262  0969               	comf	(_adcVal),w	;volatile
  8554  0263  00AE               	movwf	(??_ADCconvert+0)+0
  8555  0264  096A               	comf	(_adcVal+1),w	;volatile
  8556  0265  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8557  0266  0AAE               	incf	(??_ADCconvert+0)+0,f
  8558  0267  1903               	skipnz
  8559  0268  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8560  0269  082E               	movf	0+(??_ADCconvert+0)+0,w
  8561  026A  3EEA               	addlw	low(0EAh)
  8562  026B  00A0               	movwf	(?___wmul)
  8563  026C  082F               	movf	1+(??_ADCconvert+0)+0,w
  8564  026D  1803               	skipnc
  8565  026E  3E01               	addlw	1
  8566  026F  3E00               	addlw	high(0EAh)
  8567  0270  00A1               	movwf	1+(?___wmul)
  8568  0271  3005               	movlw	low(05h)
  8569  0272  00A2               	movwf	0+(?___wmul)+02h
  8570  0273  3000               	movlw	high(05h)
  8571  0274  00A3               	movwf	(0+(?___wmul)+02h)+1
  8572  0275  160A  118A  225E   	fcall	___wmul
              120A  118A         
  8573  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  8574  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  8575  027C  0821               	movf	(1+(?___wmul)),w
  8576  027D  01A9               	clrf	1+(?___lwdiv)+02h
  8577  027E  07A9               	addwf	1+(?___lwdiv)+02h
  8578  027F  0820               	movf	(0+(?___wmul)),w
  8579  0280  01A8               	clrf	0+(?___lwdiv)+02h
  8580  0281  07A8               	addwf	0+(?___lwdiv)+02h
  8581                           
  8582  0282  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  8583  0287  1283               	bcf	status, 5	;RP0=0, select bank0
  8584  0288  1303               	bcf	status, 6	;RP1=0, select bank0
  8585  0289  0826               	movf	(0+(?___lwdiv)),w
  8586  028A  3E0F               	addlw	low(0Fh)
  8587  028B  1683               	bsf	status, 5	;RP0=1, select bank1
  8588  028C  1303               	bcf	status, 6	;RP1=0, select bank1
  8589  028D  00B8               	movwf	(_IRdistance)^080h	;volatile
  8590  028E  1283               	bcf	status, 5	;RP0=0, select bank0
  8591  028F  1303               	bcf	status, 6	;RP1=0, select bank0
  8592  0290  0827               	movf	(1+(?___lwdiv)),w
  8593  0291  1803               	skipnc
  8594  0292  3E01               	addlw	1
  8595  0293  3E00               	addlw	high(0Fh)
  8596  0294  1683               	bsf	status, 5	;RP0=1, select bank1
  8597  0295  1303               	bcf	status, 6	;RP1=0, select bank1
  8598  0296  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8599                           	line	98
  8600                           ;infrared.c: 98: }
  8601  0297  2C6C               	goto	l3046
  8602                           	line	99
  8603                           	
  8604  0298                     l3033:	
  8605                           	
  8606  0298                     l11112:	
  8607                           ;infrared.c: 99: else if (adcVal >= 170 && adcVal < 213)
  8608  0298  3000               	movlw	high(0AAh)
  8609  0299  1283               	bcf	status, 5	;RP0=0, select bank0
  8610  029A  026A               	subwf	(_adcVal+1),w	;volatile
  8611  029B  30AA               	movlw	low(0AAh)
  8612  029C  1903               	skipnz
  8613  029D  0269               	subwf	(_adcVal),w	;volatile
  8614  029E  1C03               	skipc
  8615  029F  2AA1               	goto	u4551
  8616  02A0  2AA2               	goto	u4550
  8617  02A1                     u4551:
  8618  02A1  2AE5               	goto	l11118
  8619  02A2                     u4550:
  8620                           	
  8621  02A2                     l11114:	
  8622  02A2  3000               	movlw	high(0D5h)
  8623  02A3  026A               	subwf	(_adcVal+1),w	;volatile
  8624  02A4  30D5               	movlw	low(0D5h)
  8625  02A5  1903               	skipnz
  8626  02A6  0269               	subwf	(_adcVal),w	;volatile
  8627  02A7  1803               	skipnc
  8628  02A8  2AAA               	goto	u4561
  8629  02A9  2AAB               	goto	u4560
  8630  02AA                     u4561:
  8631  02AA  2AE5               	goto	l11118
  8632  02AB                     u4560:
  8633                           	line	101
  8634                           	
  8635  02AB                     l11116:	
  8636                           ;infrared.c: 100: {
  8637                           ;infrared.c: 101: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  8638  02AB  302B               	movlw	low(02Bh)
  8639  02AC  00A6               	movwf	(?___lwdiv)
  8640  02AD  3000               	movlw	high(02Bh)
  8641  02AE  00A7               	movwf	((?___lwdiv))+1
  8642  02AF  0969               	comf	(_adcVal),w	;volatile
  8643  02B0  00AE               	movwf	(??_ADCconvert+0)+0
  8644  02B1  096A               	comf	(_adcVal+1),w	;volatile
  8645  02B2  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8646  02B3  0AAE               	incf	(??_ADCconvert+0)+0,f
  8647  02B4  1903               	skipnz
  8648  02B5  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8649  02B6  082E               	movf	0+(??_ADCconvert+0)+0,w
  8650  02B7  3ED5               	addlw	low(0D5h)
  8651  02B8  00A0               	movwf	(?___wmul)
  8652  02B9  082F               	movf	1+(??_ADCconvert+0)+0,w
  8653  02BA  1803               	skipnc
  8654  02BB  3E01               	addlw	1
  8655  02BC  3E00               	addlw	high(0D5h)
  8656  02BD  00A1               	movwf	1+(?___wmul)
  8657  02BE  300A               	movlw	low(0Ah)
  8658  02BF  00A2               	movwf	0+(?___wmul)+02h
  8659  02C0  3000               	movlw	high(0Ah)
  8660  02C1  00A3               	movwf	(0+(?___wmul)+02h)+1
  8661  02C2  160A  118A  225E   	fcall	___wmul
              120A  118A         
  8662  02C7  1283               	bcf	status, 5	;RP0=0, select bank0
  8663  02C8  1303               	bcf	status, 6	;RP1=0, select bank0
  8664  02C9  0821               	movf	(1+(?___wmul)),w
  8665  02CA  01A9               	clrf	1+(?___lwdiv)+02h
  8666  02CB  07A9               	addwf	1+(?___lwdiv)+02h
  8667  02CC  0820               	movf	(0+(?___wmul)),w
  8668  02CD  01A8               	clrf	0+(?___lwdiv)+02h
  8669  02CE  07A8               	addwf	0+(?___lwdiv)+02h
  8670                           
  8671  02CF  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  8672  02D4  1283               	bcf	status, 5	;RP0=0, select bank0
  8673  02D5  1303               	bcf	status, 6	;RP1=0, select bank0
  8674  02D6  0826               	movf	(0+(?___lwdiv)),w
  8675  02D7  3E14               	addlw	low(014h)
  8676  02D8  1683               	bsf	status, 5	;RP0=1, select bank1
  8677  02D9  1303               	bcf	status, 6	;RP1=0, select bank1
  8678  02DA  00B8               	movwf	(_IRdistance)^080h	;volatile
  8679  02DB  1283               	bcf	status, 5	;RP0=0, select bank0
  8680  02DC  1303               	bcf	status, 6	;RP1=0, select bank0
  8681  02DD  0827               	movf	(1+(?___lwdiv)),w
  8682  02DE  1803               	skipnc
  8683  02DF  3E01               	addlw	1
  8684  02E0  3E00               	addlw	high(014h)
  8685  02E1  1683               	bsf	status, 5	;RP0=1, select bank1
  8686  02E2  1303               	bcf	status, 6	;RP1=0, select bank1
  8687  02E3  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8688                           	line	102
  8689                           ;infrared.c: 102: }
  8690  02E4  2C6C               	goto	l3046
  8691                           	line	103
  8692                           	
  8693  02E5                     l3035:	
  8694                           	
  8695  02E5                     l11118:	
  8696                           ;infrared.c: 103: else if (adcVal >= 128 && adcVal < 170)
  8697  02E5  3000               	movlw	high(080h)
  8698  02E6  1283               	bcf	status, 5	;RP0=0, select bank0
  8699  02E7  026A               	subwf	(_adcVal+1),w	;volatile
  8700  02E8  3080               	movlw	low(080h)
  8701  02E9  1903               	skipnz
  8702  02EA  0269               	subwf	(_adcVal),w	;volatile
  8703  02EB  1C03               	skipc
  8704  02EC  2AEE               	goto	u4571
  8705  02ED  2AEF               	goto	u4570
  8706  02EE                     u4571:
  8707  02EE  2B32               	goto	l11124
  8708  02EF                     u4570:
  8709                           	
  8710  02EF                     l11120:	
  8711  02EF  3000               	movlw	high(0AAh)
  8712  02F0  026A               	subwf	(_adcVal+1),w	;volatile
  8713  02F1  30AA               	movlw	low(0AAh)
  8714  02F2  1903               	skipnz
  8715  02F3  0269               	subwf	(_adcVal),w	;volatile
  8716  02F4  1803               	skipnc
  8717  02F5  2AF7               	goto	u4581
  8718  02F6  2AF8               	goto	u4580
  8719  02F7                     u4581:
  8720  02F7  2B32               	goto	l11124
  8721  02F8                     u4580:
  8722                           	line	105
  8723                           	
  8724  02F8                     l11122:	
  8725                           ;infrared.c: 104: {
  8726                           ;infrared.c: 105: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  8727  02F8  302A               	movlw	low(02Ah)
  8728  02F9  00A6               	movwf	(?___lwdiv)
  8729  02FA  3000               	movlw	high(02Ah)
  8730  02FB  00A7               	movwf	((?___lwdiv))+1
  8731  02FC  0969               	comf	(_adcVal),w	;volatile
  8732  02FD  00AE               	movwf	(??_ADCconvert+0)+0
  8733  02FE  096A               	comf	(_adcVal+1),w	;volatile
  8734  02FF  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8735  0300  0AAE               	incf	(??_ADCconvert+0)+0,f
  8736  0301  1903               	skipnz
  8737  0302  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8738  0303  082E               	movf	0+(??_ADCconvert+0)+0,w
  8739  0304  3EAA               	addlw	low(0AAh)
  8740  0305  00A0               	movwf	(?___wmul)
  8741  0306  082F               	movf	1+(??_ADCconvert+0)+0,w
  8742  0307  1803               	skipnc
  8743  0308  3E01               	addlw	1
  8744  0309  3E00               	addlw	high(0AAh)
  8745  030A  00A1               	movwf	1+(?___wmul)
  8746  030B  300A               	movlw	low(0Ah)
  8747  030C  00A2               	movwf	0+(?___wmul)+02h
  8748  030D  3000               	movlw	high(0Ah)
  8749  030E  00A3               	movwf	(0+(?___wmul)+02h)+1
  8750  030F  160A  118A  225E   	fcall	___wmul
              120A  118A         
  8751  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  8752  0315  1303               	bcf	status, 6	;RP1=0, select bank0
  8753  0316  0821               	movf	(1+(?___wmul)),w
  8754  0317  01A9               	clrf	1+(?___lwdiv)+02h
  8755  0318  07A9               	addwf	1+(?___lwdiv)+02h
  8756  0319  0820               	movf	(0+(?___wmul)),w
  8757  031A  01A8               	clrf	0+(?___lwdiv)+02h
  8758  031B  07A8               	addwf	0+(?___lwdiv)+02h
  8759                           
  8760  031C  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  8761  0321  1283               	bcf	status, 5	;RP0=0, select bank0
  8762  0322  1303               	bcf	status, 6	;RP1=0, select bank0
  8763  0323  0826               	movf	(0+(?___lwdiv)),w
  8764  0324  3E1E               	addlw	low(01Eh)
  8765  0325  1683               	bsf	status, 5	;RP0=1, select bank1
  8766  0326  1303               	bcf	status, 6	;RP1=0, select bank1
  8767  0327  00B8               	movwf	(_IRdistance)^080h	;volatile
  8768  0328  1283               	bcf	status, 5	;RP0=0, select bank0
  8769  0329  1303               	bcf	status, 6	;RP1=0, select bank0
  8770  032A  0827               	movf	(1+(?___lwdiv)),w
  8771  032B  1803               	skipnc
  8772  032C  3E01               	addlw	1
  8773  032D  3E00               	addlw	high(01Eh)
  8774  032E  1683               	bsf	status, 5	;RP0=1, select bank1
  8775  032F  1303               	bcf	status, 6	;RP1=0, select bank1
  8776  0330  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8777                           	line	106
  8778                           ;infrared.c: 106: }
  8779  0331  2C6C               	goto	l3046
  8780                           	line	107
  8781                           	
  8782  0332                     l3037:	
  8783                           	
  8784  0332                     l11124:	
  8785                           ;infrared.c: 107: else if (adcVal >= 107 && adcVal < 128)
  8786  0332  3000               	movlw	high(06Bh)
  8787  0333  1283               	bcf	status, 5	;RP0=0, select bank0
  8788  0334  026A               	subwf	(_adcVal+1),w	;volatile
  8789  0335  306B               	movlw	low(06Bh)
  8790  0336  1903               	skipnz
  8791  0337  0269               	subwf	(_adcVal),w	;volatile
  8792  0338  1C03               	skipc
  8793  0339  2B3B               	goto	u4591
  8794  033A  2B3C               	goto	u4590
  8795  033B                     u4591:
  8796  033B  2B7F               	goto	l11130
  8797  033C                     u4590:
  8798                           	
  8799  033C                     l11126:	
  8800  033C  3000               	movlw	high(080h)
  8801  033D  026A               	subwf	(_adcVal+1),w	;volatile
  8802  033E  3080               	movlw	low(080h)
  8803  033F  1903               	skipnz
  8804  0340  0269               	subwf	(_adcVal),w	;volatile
  8805  0341  1803               	skipnc
  8806  0342  2B44               	goto	u4601
  8807  0343  2B45               	goto	u4600
  8808  0344                     u4601:
  8809  0344  2B7F               	goto	l11130
  8810  0345                     u4600:
  8811                           	line	109
  8812                           	
  8813  0345                     l11128:	
  8814                           ;infrared.c: 108: {
  8815                           ;infrared.c: 109: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  8816  0345  3015               	movlw	low(015h)
  8817  0346  00A6               	movwf	(?___lwdiv)
  8818  0347  3000               	movlw	high(015h)
  8819  0348  00A7               	movwf	((?___lwdiv))+1
  8820  0349  0969               	comf	(_adcVal),w	;volatile
  8821  034A  00AE               	movwf	(??_ADCconvert+0)+0
  8822  034B  096A               	comf	(_adcVal+1),w	;volatile
  8823  034C  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8824  034D  0AAE               	incf	(??_ADCconvert+0)+0,f
  8825  034E  1903               	skipnz
  8826  034F  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8827  0350  082E               	movf	0+(??_ADCconvert+0)+0,w
  8828  0351  3E80               	addlw	low(080h)
  8829  0352  00A0               	movwf	(?___wmul)
  8830  0353  082F               	movf	1+(??_ADCconvert+0)+0,w
  8831  0354  1803               	skipnc
  8832  0355  3E01               	addlw	1
  8833  0356  3E00               	addlw	high(080h)
  8834  0357  00A1               	movwf	1+(?___wmul)
  8835  0358  300A               	movlw	low(0Ah)
  8836  0359  00A2               	movwf	0+(?___wmul)+02h
  8837  035A  3000               	movlw	high(0Ah)
  8838  035B  00A3               	movwf	(0+(?___wmul)+02h)+1
  8839  035C  160A  118A  225E   	fcall	___wmul
              120A  118A         
  8840  0361  1283               	bcf	status, 5	;RP0=0, select bank0
  8841  0362  1303               	bcf	status, 6	;RP1=0, select bank0
  8842  0363  0821               	movf	(1+(?___wmul)),w
  8843  0364  01A9               	clrf	1+(?___lwdiv)+02h
  8844  0365  07A9               	addwf	1+(?___lwdiv)+02h
  8845  0366  0820               	movf	(0+(?___wmul)),w
  8846  0367  01A8               	clrf	0+(?___lwdiv)+02h
  8847  0368  07A8               	addwf	0+(?___lwdiv)+02h
  8848                           
  8849  0369  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  8850  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  8851  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  8852  0370  0826               	movf	(0+(?___lwdiv)),w
  8853  0371  3E28               	addlw	low(028h)
  8854  0372  1683               	bsf	status, 5	;RP0=1, select bank1
  8855  0373  1303               	bcf	status, 6	;RP1=0, select bank1
  8856  0374  00B8               	movwf	(_IRdistance)^080h	;volatile
  8857  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  8858  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  8859  0377  0827               	movf	(1+(?___lwdiv)),w
  8860  0378  1803               	skipnc
  8861  0379  3E01               	addlw	1
  8862  037A  3E00               	addlw	high(028h)
  8863  037B  1683               	bsf	status, 5	;RP0=1, select bank1
  8864  037C  1303               	bcf	status, 6	;RP1=0, select bank1
  8865  037D  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8866                           	line	110
  8867                           ;infrared.c: 110: }
  8868  037E  2C6C               	goto	l3046
  8869                           	line	111
  8870                           	
  8871  037F                     l3039:	
  8872                           	
  8873  037F                     l11130:	
  8874                           ;infrared.c: 111: else if (adcVal >= 77 && adcVal < 107)
  8875  037F  3000               	movlw	high(04Dh)
  8876  0380  1283               	bcf	status, 5	;RP0=0, select bank0
  8877  0381  026A               	subwf	(_adcVal+1),w	;volatile
  8878  0382  304D               	movlw	low(04Dh)
  8879  0383  1903               	skipnz
  8880  0384  0269               	subwf	(_adcVal),w	;volatile
  8881  0385  1C03               	skipc
  8882  0386  2B88               	goto	u4611
  8883  0387  2B89               	goto	u4610
  8884  0388                     u4611:
  8885  0388  2BCC               	goto	l11136
  8886  0389                     u4610:
  8887                           	
  8888  0389                     l11132:	
  8889  0389  3000               	movlw	high(06Bh)
  8890  038A  026A               	subwf	(_adcVal+1),w	;volatile
  8891  038B  306B               	movlw	low(06Bh)
  8892  038C  1903               	skipnz
  8893  038D  0269               	subwf	(_adcVal),w	;volatile
  8894  038E  1803               	skipnc
  8895  038F  2B91               	goto	u4621
  8896  0390  2B92               	goto	u4620
  8897  0391                     u4621:
  8898  0391  2BCC               	goto	l11136
  8899  0392                     u4620:
  8900                           	line	113
  8901                           	
  8902  0392                     l11134:	
  8903                           ;infrared.c: 112: {
  8904                           ;infrared.c: 113: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  8905  0392  301E               	movlw	low(01Eh)
  8906  0393  00A6               	movwf	(?___lwdiv)
  8907  0394  3000               	movlw	high(01Eh)
  8908  0395  00A7               	movwf	((?___lwdiv))+1
  8909  0396  0969               	comf	(_adcVal),w	;volatile
  8910  0397  00AE               	movwf	(??_ADCconvert+0)+0
  8911  0398  096A               	comf	(_adcVal+1),w	;volatile
  8912  0399  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8913  039A  0AAE               	incf	(??_ADCconvert+0)+0,f
  8914  039B  1903               	skipnz
  8915  039C  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8916  039D  082E               	movf	0+(??_ADCconvert+0)+0,w
  8917  039E  3E6B               	addlw	low(06Bh)
  8918  039F  00A0               	movwf	(?___wmul)
  8919  03A0  082F               	movf	1+(??_ADCconvert+0)+0,w
  8920  03A1  1803               	skipnc
  8921  03A2  3E01               	addlw	1
  8922  03A3  3E00               	addlw	high(06Bh)
  8923  03A4  00A1               	movwf	1+(?___wmul)
  8924  03A5  300A               	movlw	low(0Ah)
  8925  03A6  00A2               	movwf	0+(?___wmul)+02h
  8926  03A7  3000               	movlw	high(0Ah)
  8927  03A8  00A3               	movwf	(0+(?___wmul)+02h)+1
  8928  03A9  160A  118A  225E   	fcall	___wmul
              120A  118A         
  8929  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  8930  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  8931  03B0  0821               	movf	(1+(?___wmul)),w
  8932  03B1  01A9               	clrf	1+(?___lwdiv)+02h
  8933  03B2  07A9               	addwf	1+(?___lwdiv)+02h
  8934  03B3  0820               	movf	(0+(?___wmul)),w
  8935  03B4  01A8               	clrf	0+(?___lwdiv)+02h
  8936  03B5  07A8               	addwf	0+(?___lwdiv)+02h
  8937                           
  8938  03B6  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  8939  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  8940  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  8941  03BD  0826               	movf	(0+(?___lwdiv)),w
  8942  03BE  3E32               	addlw	low(032h)
  8943  03BF  1683               	bsf	status, 5	;RP0=1, select bank1
  8944  03C0  1303               	bcf	status, 6	;RP1=0, select bank1
  8945  03C1  00B8               	movwf	(_IRdistance)^080h	;volatile
  8946  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  8947  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  8948  03C4  0827               	movf	(1+(?___lwdiv)),w
  8949  03C5  1803               	skipnc
  8950  03C6  3E01               	addlw	1
  8951  03C7  3E00               	addlw	high(032h)
  8952  03C8  1683               	bsf	status, 5	;RP0=1, select bank1
  8953  03C9  1303               	bcf	status, 6	;RP1=0, select bank1
  8954  03CA  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8955                           	line	114
  8956                           ;infrared.c: 114: }
  8957  03CB  2C6C               	goto	l3046
  8958                           	line	115
  8959                           	
  8960  03CC                     l3041:	
  8961                           	
  8962  03CC                     l11136:	
  8963                           ;infrared.c: 115: else if (adcVal >= 56 && adcVal < 77)
  8964  03CC  3000               	movlw	high(038h)
  8965  03CD  1283               	bcf	status, 5	;RP0=0, select bank0
  8966  03CE  026A               	subwf	(_adcVal+1),w	;volatile
  8967  03CF  3038               	movlw	low(038h)
  8968  03D0  1903               	skipnz
  8969  03D1  0269               	subwf	(_adcVal),w	;volatile
  8970  03D2  1C03               	skipc
  8971  03D3  2BD5               	goto	u4631
  8972  03D4  2BD6               	goto	u4630
  8973  03D5                     u4631:
  8974  03D5  2C19               	goto	l11142
  8975  03D6                     u4630:
  8976                           	
  8977  03D6                     l11138:	
  8978  03D6  3000               	movlw	high(04Dh)
  8979  03D7  026A               	subwf	(_adcVal+1),w	;volatile
  8980  03D8  304D               	movlw	low(04Dh)
  8981  03D9  1903               	skipnz
  8982  03DA  0269               	subwf	(_adcVal),w	;volatile
  8983  03DB  1803               	skipnc
  8984  03DC  2BDE               	goto	u4641
  8985  03DD  2BDF               	goto	u4640
  8986  03DE                     u4641:
  8987  03DE  2C19               	goto	l11142
  8988  03DF                     u4640:
  8989                           	line	117
  8990                           	
  8991  03DF                     l11140:	
  8992                           ;infrared.c: 116: {
  8993                           ;infrared.c: 117: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  8994  03DF  3015               	movlw	low(015h)
  8995  03E0  00A6               	movwf	(?___lwdiv)
  8996  03E1  3000               	movlw	high(015h)
  8997  03E2  00A7               	movwf	((?___lwdiv))+1
  8998  03E3  0969               	comf	(_adcVal),w	;volatile
  8999  03E4  00AE               	movwf	(??_ADCconvert+0)+0
  9000  03E5  096A               	comf	(_adcVal+1),w	;volatile
  9001  03E6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9002  03E7  0AAE               	incf	(??_ADCconvert+0)+0,f
  9003  03E8  1903               	skipnz
  9004  03E9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9005  03EA  082E               	movf	0+(??_ADCconvert+0)+0,w
  9006  03EB  3E4D               	addlw	low(04Dh)
  9007  03EC  00A0               	movwf	(?___wmul)
  9008  03ED  082F               	movf	1+(??_ADCconvert+0)+0,w
  9009  03EE  1803               	skipnc
  9010  03EF  3E01               	addlw	1
  9011  03F0  3E00               	addlw	high(04Dh)
  9012  03F1  00A1               	movwf	1+(?___wmul)
  9013  03F2  300A               	movlw	low(0Ah)
  9014  03F3  00A2               	movwf	0+(?___wmul)+02h
  9015  03F4  3000               	movlw	high(0Ah)
  9016  03F5  00A3               	movwf	(0+(?___wmul)+02h)+1
  9017  03F6  160A  118A  225E   	fcall	___wmul
              120A  118A         
  9018  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  9019  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  9020  03FD  0821               	movf	(1+(?___wmul)),w
  9021  03FE  01A9               	clrf	1+(?___lwdiv)+02h
  9022  03FF  07A9               	addwf	1+(?___lwdiv)+02h
  9023  0400  0820               	movf	(0+(?___wmul)),w
  9024  0401  01A8               	clrf	0+(?___lwdiv)+02h
  9025  0402  07A8               	addwf	0+(?___lwdiv)+02h
  9026                           
  9027  0403  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  9028  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  9029  0409  1303               	bcf	status, 6	;RP1=0, select bank0
  9030  040A  0826               	movf	(0+(?___lwdiv)),w
  9031  040B  3E3C               	addlw	low(03Ch)
  9032  040C  1683               	bsf	status, 5	;RP0=1, select bank1
  9033  040D  1303               	bcf	status, 6	;RP1=0, select bank1
  9034  040E  00B8               	movwf	(_IRdistance)^080h	;volatile
  9035  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  9036  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  9037  0411  0827               	movf	(1+(?___lwdiv)),w
  9038  0412  1803               	skipnc
  9039  0413  3E01               	addlw	1
  9040  0414  3E00               	addlw	high(03Ch)
  9041  0415  1683               	bsf	status, 5	;RP0=1, select bank1
  9042  0416  1303               	bcf	status, 6	;RP1=0, select bank1
  9043  0417  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9044                           	line	118
  9045                           ;infrared.c: 118: }
  9046  0418  2C6C               	goto	l3046
  9047                           	line	119
  9048                           	
  9049  0419                     l3043:	
  9050                           	
  9051  0419                     l11142:	
  9052                           ;infrared.c: 119: else if (adcVal >= 43 && adcVal < 56)
  9053  0419  3000               	movlw	high(02Bh)
  9054  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  9055  041B  026A               	subwf	(_adcVal+1),w	;volatile
  9056  041C  302B               	movlw	low(02Bh)
  9057  041D  1903               	skipnz
  9058  041E  0269               	subwf	(_adcVal),w	;volatile
  9059  041F  1C03               	skipc
  9060  0420  2C22               	goto	u4651
  9061  0421  2C23               	goto	u4650
  9062  0422                     u4651:
  9063  0422  2C6C               	goto	l3046
  9064  0423                     u4650:
  9065                           	
  9066  0423                     l11144:	
  9067  0423  3000               	movlw	high(038h)
  9068  0424  026A               	subwf	(_adcVal+1),w	;volatile
  9069  0425  3038               	movlw	low(038h)
  9070  0426  1903               	skipnz
  9071  0427  0269               	subwf	(_adcVal),w	;volatile
  9072  0428  1803               	skipnc
  9073  0429  2C2B               	goto	u4661
  9074  042A  2C2C               	goto	u4660
  9075  042B                     u4661:
  9076  042B  2C6C               	goto	l3046
  9077  042C                     u4660:
  9078                           	line	121
  9079                           	
  9080  042C                     l11146:	
  9081                           ;infrared.c: 120: {
  9082                           ;infrared.c: 121: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  9083  042C  300D               	movlw	low(0Dh)
  9084  042D  00A6               	movwf	(?___lwdiv)
  9085  042E  3000               	movlw	high(0Dh)
  9086  042F  00A7               	movwf	((?___lwdiv))+1
  9087  0430  0969               	comf	(_adcVal),w	;volatile
  9088  0431  00AE               	movwf	(??_ADCconvert+0)+0
  9089  0432  096A               	comf	(_adcVal+1),w	;volatile
  9090  0433  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9091  0434  0AAE               	incf	(??_ADCconvert+0)+0,f
  9092  0435  1903               	skipnz
  9093  0436  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9094  0437  082E               	movf	0+(??_ADCconvert+0)+0,w
  9095  0438  3E38               	addlw	low(038h)
  9096  0439  00A0               	movwf	(?___wmul)
  9097  043A  082F               	movf	1+(??_ADCconvert+0)+0,w
  9098  043B  1803               	skipnc
  9099  043C  3E01               	addlw	1
  9100  043D  3E00               	addlw	high(038h)
  9101  043E  00A1               	movwf	1+(?___wmul)
  9102  043F  300A               	movlw	low(0Ah)
  9103  0440  00A2               	movwf	0+(?___wmul)+02h
  9104  0441  3000               	movlw	high(0Ah)
  9105  0442  00A3               	movwf	(0+(?___wmul)+02h)+1
  9106  0443  160A  118A  225E   	fcall	___wmul
              120A  118A         
  9107  0448  1283               	bcf	status, 5	;RP0=0, select bank0
  9108  0449  1303               	bcf	status, 6	;RP1=0, select bank0
  9109  044A  0821               	movf	(1+(?___wmul)),w
  9110  044B  01A9               	clrf	1+(?___lwdiv)+02h
  9111  044C  07A9               	addwf	1+(?___lwdiv)+02h
  9112  044D  0820               	movf	(0+(?___wmul)),w
  9113  044E  01A8               	clrf	0+(?___lwdiv)+02h
  9114  044F  07A8               	addwf	0+(?___lwdiv)+02h
  9115                           
  9116  0450  160A  118A  2561   	fcall	___lwdiv
              120A  118A         
  9117  0455  1283               	bcf	status, 5	;RP0=0, select bank0
  9118  0456  1303               	bcf	status, 6	;RP1=0, select bank0
  9119  0457  0826               	movf	(0+(?___lwdiv)),w
  9120  0458  3E46               	addlw	low(046h)
  9121  0459  1683               	bsf	status, 5	;RP0=1, select bank1
  9122  045A  1303               	bcf	status, 6	;RP1=0, select bank1
  9123  045B  00B8               	movwf	(_IRdistance)^080h	;volatile
  9124  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  9125  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  9126  045E  0827               	movf	(1+(?___lwdiv)),w
  9127  045F  1803               	skipnc
  9128  0460  3E01               	addlw	1
  9129  0461  3E00               	addlw	high(046h)
  9130  0462  1683               	bsf	status, 5	;RP0=1, select bank1
  9131  0463  1303               	bcf	status, 6	;RP1=0, select bank1
  9132  0464  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9133  0465  2C6C               	goto	l3046
  9134                           	line	122
  9135                           	
  9136  0466                     l3045:	
  9137  0466  2C6C               	goto	l3046
  9138                           	line	123
  9139                           	
  9140  0467                     l3044:	
  9141  0467  2C6C               	goto	l3046
  9142                           	
  9143  0468                     l3042:	
  9144  0468  2C6C               	goto	l3046
  9145                           	
  9146  0469                     l3040:	
  9147  0469  2C6C               	goto	l3046
  9148                           	
  9149  046A                     l3038:	
  9150  046A  2C6C               	goto	l3046
  9151                           	
  9152  046B                     l3036:	
  9153  046B  2C6C               	goto	l3046
  9154                           	
  9155  046C                     l3034:	
  9156                           	
  9157  046C                     l3046:	
  9158  046C  0008               	return
  9159                           	opt stack 0
  9160                           GLOBAL	__end_of_ADCconvert
  9161  046D                     	__end_of_ADCconvert:
  9162 ;; =============== function _ADCconvert ends ============
  9163                           
  9164                           	signat	_ADCconvert,88
  9165                           	global	_rotate
  9166                           psect	text1060,local,class=CODE,delta=2
  9167                           global __ptext1060
  9168  160F                     __ptext1060:
  9169                           
  9170 ;; *************** function _rotate *****************
  9171 ;; Defined at:
  9172 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  numsteps        2    3[BANK0 ] unsigned int 
  9175 ;;  direction       1    5[BANK0 ] unsigned char 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  i               2    8[BANK0 ] unsigned int 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;		None               void
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0, pclath, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9187 ;;      Params:         0       3       0       0       0
  9188 ;;      Locals:         0       2       0       0       0
  9189 ;;      Temps:          0       2       0       0       0
  9190 ;;      Totals:         0       7       0       0       0
  9191 ;;Total ram usage:        7 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    4
  9194 ;; This function calls:
  9195 ;;		_spi_transfer
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;;		_Init_Follow_IR
  9199 ;;		_calibrateIR
  9200 ;;		_RightTurn
  9201 ;;		_scan360
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           psect	text1060
  9205                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9206                           	line	66
  9207                           	global	__size_of_rotate
  9208  0067                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  9209                           	
  9210  160F                     _rotate:	
  9211                           	opt	stack 3
  9212                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  9213                           	line	68
  9214                           	
  9215  160F                     l11074:	
  9216                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  9217  160F  1283               	bcf	status, 5	;RP0=0, select bank0
  9218  1610  1303               	bcf	status, 6	;RP1=0, select bank0
  9219  1611  1407               	bsf	(56/8),(56)&7
  9220  1612  1487               	bsf	(57/8),(57)&7
  9221                           	line	69
  9222                           	
  9223  1613                     l11076:	
  9224                           ;steppermotor.c: 69: if (direction == 0)
  9225  1613  08A5               	movf	(rotate@direction),f
  9226  1614  1D03               	skipz
  9227  1615  2E17               	goto	u4501
  9228  1616  2E18               	goto	u4500
  9229  1617                     u4501:
  9230  1617  2E1F               	goto	l11080
  9231  1618                     u4500:
  9232                           	line	70
  9233                           	
  9234  1618                     l11078:	
  9235                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  9236  1618  300B               	movlw	(0Bh)
  9237  1619  160A  118A  210E   	fcall	_spi_transfer
              160A  118A         
  9238  161E  2E26               	goto	l11082
  9239                           	line	71
  9240                           	
  9241  161F                     l3749:	
  9242                           	line	72
  9243                           	
  9244  161F                     l11080:	
  9245                           ;steppermotor.c: 71: else
  9246                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  9247  161F  3009               	movlw	(09h)
  9248  1620  160A  118A  210E   	fcall	_spi_transfer
              160A  118A         
  9249  1625  2E26               	goto	l11082
  9250                           	
  9251  1626                     l3750:	
  9252                           	line	73
  9253                           	
  9254  1626                     l11082:	
  9255                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  9256  1626  1283               	bcf	status, 5	;RP0=0, select bank0
  9257  1627  1303               	bcf	status, 6	;RP1=0, select bank0
  9258  1628  1007               	bcf	(56/8),(56)&7
  9259                           	
  9260  1629                     l11084:	
  9261  1629  1087               	bcf	(57/8),(57)&7
  9262                           	line	74
  9263                           	
  9264  162A                     l11086:	
  9265                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  9266  162A  01A8               	clrf	(rotate@i)
  9267  162B  01A9               	clrf	(rotate@i+1)
  9268  162C  2E5A               	goto	l3751
  9269                           	line	75
  9270                           	
  9271  162D                     l3752:	
  9272                           	line	76
  9273                           ;steppermotor.c: 75: {
  9274                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  9275  162D  1507               	bsf	(58/8),(58)&7
  9276  162E  0000               	nop
  9277  162F  1283               	bcf	status, 5	;RP0=0, select bank0
  9278  1630  1303               	bcf	status, 6	;RP1=0, select bank0
  9279  1631  1107               	bcf	(58/8),(58)&7
  9280                           	line	77
  9281                           	
  9282  1632                     l11088:	
  9283                           ;steppermotor.c: 77: if (direction)
  9284  1632  0825               	movf	(rotate@direction),w
  9285  1633  1D03               	skipz
  9286  1634  2E36               	goto	u4510
  9287  1635  2E3F               	goto	l11092
  9288  1636                     u4510:
  9289                           	line	78
  9290                           	
  9291  1636                     l11090:	
  9292                           ;steppermotor.c: 78: totalSteps++;
  9293  1636  3001               	movlw	low(01h)
  9294  1637  1683               	bsf	status, 5	;RP0=1, select bank1
  9295  1638  1303               	bcf	status, 6	;RP1=0, select bank1
  9296  1639  07CA               	addwf	(_totalSteps)^080h,f
  9297  163A  1803               	skipnc
  9298  163B  0ACB               	incf	(_totalSteps+1)^080h,f
  9299  163C  3000               	movlw	high(01h)
  9300  163D  07CB               	addwf	(_totalSteps+1)^080h,f
  9301  163E  2E47               	goto	l3754
  9302                           	line	79
  9303                           	
  9304  163F                     l3753:	
  9305                           	line	80
  9306                           	
  9307  163F                     l11092:	
  9308                           ;steppermotor.c: 79: else
  9309                           ;steppermotor.c: 80: totalSteps--;
  9310  163F  30FF               	movlw	low(-1)
  9311  1640  1683               	bsf	status, 5	;RP0=1, select bank1
  9312  1641  1303               	bcf	status, 6	;RP1=0, select bank1
  9313  1642  07CA               	addwf	(_totalSteps)^080h,f
  9314  1643  1803               	skipnc
  9315  1644  0ACB               	incf	(_totalSteps+1)^080h,f
  9316  1645  30FF               	movlw	high(-1)
  9317  1646  07CB               	addwf	(_totalSteps+1)^080h,f
  9318                           	
  9319  1647                     l3754:	
  9320                           	line	81
  9321                           ;steppermotor.c: 81: _delay((unsigned long)((15)*(20000000/4000.0)));
  9322                           	opt asmopt_off
  9323  1647  3062               movlw	98
  9324  1648  1283               	bcf	status, 5	;RP0=0, select bank0
  9325  1649  1303               	bcf	status, 6	;RP1=0, select bank0
  9326  164A  00A7               movwf	((??_rotate+0)+0+1),f
  9327  164B  3065               	movlw	101
  9328  164C  00A6               movwf	((??_rotate+0)+0),f
  9329  164D                     u5327:
  9330  164D  0BA6               	decfsz	((??_rotate+0)+0),f
  9331  164E  2E4D               	goto	u5327
  9332  164F  0BA7               	decfsz	((??_rotate+0)+0+1),f
  9333  1650  2E4D               	goto	u5327
  9334  1651  2E52               	nop2
  9335                           opt asmopt_on
  9336                           
  9337                           	line	74
  9338  1652  3001               	movlw	low(01h)
  9339  1653  1283               	bcf	status, 5	;RP0=0, select bank0
  9340  1654  1303               	bcf	status, 6	;RP1=0, select bank0
  9341  1655  07A8               	addwf	(rotate@i),f
  9342  1656  1803               	skipnc
  9343  1657  0AA9               	incf	(rotate@i+1),f
  9344  1658  3000               	movlw	high(01h)
  9345  1659  07A9               	addwf	(rotate@i+1),f
  9346                           	
  9347  165A                     l3751:	
  9348  165A  0824               	movf	(rotate@numsteps+1),w
  9349  165B  0229               	subwf	(rotate@i+1),w
  9350  165C  1D03               	skipz
  9351  165D  2E60               	goto	u4525
  9352  165E  0823               	movf	(rotate@numsteps),w
  9353  165F  0228               	subwf	(rotate@i),w
  9354  1660                     u4525:
  9355  1660  1C03               	skipc
  9356  1661  2E63               	goto	u4521
  9357  1662  2E64               	goto	u4520
  9358  1663                     u4521:
  9359  1663  2E2D               	goto	l3752
  9360  1664                     u4520:
  9361                           	
  9362  1664                     l3755:	
  9363                           	line	83
  9364                           ;steppermotor.c: 82: }
  9365                           ;steppermotor.c: 83: RC0 = 1; RC1 = 1;;
  9366  1664  1407               	bsf	(56/8),(56)&7
  9367  1665  1487               	bsf	(57/8),(57)&7
  9368                           	line	84
  9369                           	
  9370  1666                     l11094:	
  9371                           ;steppermotor.c: 84: spi_transfer(0b00000000);
  9372  1666  3000               	movlw	(0)
  9373  1667  160A  118A  210E   	fcall	_spi_transfer
              160A  118A         
  9374                           	line	85
  9375                           	
  9376  166C                     l11096:	
  9377                           ;steppermotor.c: 85: RC0 = 0; RC1 = 0;;
  9378  166C  1283               	bcf	status, 5	;RP0=0, select bank0
  9379  166D  1303               	bcf	status, 6	;RP1=0, select bank0
  9380  166E  1007               	bcf	(56/8),(56)&7
  9381                           	
  9382  166F                     l11098:	
  9383  166F  1087               	bcf	(57/8),(57)&7
  9384                           	line	86
  9385                           	
  9386  1670                     l11100:	
  9387                           ;steppermotor.c: 86: RC2 = 1; _nop(); RC2 = 0;;
  9388  1670  1507               	bsf	(58/8),(58)&7
  9389                           	
  9390  1671                     l11102:	
  9391  1671  0000               	nop
  9392                           	
  9393  1672                     l11104:	
  9394  1672  1283               	bcf	status, 5	;RP0=0, select bank0
  9395  1673  1303               	bcf	status, 6	;RP1=0, select bank0
  9396  1674  1107               	bcf	(58/8),(58)&7
  9397                           	line	87
  9398                           	
  9399  1675                     l3756:	
  9400  1675  0008               	return
  9401                           	opt stack 0
  9402                           GLOBAL	__end_of_rotate
  9403  1676                     	__end_of_rotate:
  9404 ;; =============== function _rotate ends ============
  9405                           
  9406                           	signat	_rotate,8312
  9407                           	global	_RobotDrive
  9408                           psect	text1061,local,class=CODE,delta=2
  9409                           global __ptext1061
  9410  13D1                     __ptext1061:
  9411                           
  9412 ;; *************** function _RobotDrive *****************
  9413 ;; Defined at:
  9414 ;;		line 114 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  speed           2    2[BANK0 ] int 
  9417 ;;  radius          2    4[BANK0 ] int 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  radiushighBy    1   10[BANK0 ] unsigned char 
  9420 ;;  radiuslowByt    1    9[BANK0 ] unsigned char 
  9421 ;;  speedhighByt    1    8[BANK0 ] unsigned char 
  9422 ;;  speedlowByte    1    7[BANK0 ] unsigned char 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;		None               void
  9425 ;; Registers used:
  9426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9432 ;;      Params:         0       4       0       0       0
  9433 ;;      Locals:         0       4       0       0       0
  9434 ;;      Temps:          0       1       0       0       0
  9435 ;;      Totals:         0       9       0       0       0
  9436 ;;Total ram usage:        9 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    4
  9439 ;; This function calls:
  9440 ;;		_ser_putch
  9441 ;; This function is called by:
  9442 ;;		_main
  9443 ;;		_robotFollow
  9444 ;;		_robot_turnRight
  9445 ;;		_robotMoveSpeed
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           psect	text1061
  9449                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9450                           	line	114
  9451                           	global	__size_of_RobotDrive
  9452  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  9453                           	
  9454  13D1                     _RobotDrive:	
  9455                           	opt	stack 2
  9456                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9457                           	line	116
  9458                           	
  9459  13D1                     l11058:	
  9460                           ;robot.c: 116: unsigned char speedlowByte = (unsigned char)(speed);
  9461  13D1  1283               	bcf	status, 5	;RP0=0, select bank0
  9462  13D2  1303               	bcf	status, 6	;RP1=0, select bank0
  9463  13D3  0822               	movf	(RobotDrive@speed),w
  9464  13D4  00A6               	movwf	(??_RobotDrive+0)+0
  9465  13D5  0826               	movf	(??_RobotDrive+0)+0,w
  9466  13D6  00A7               	movwf	(RobotDrive@speedlowByte)
  9467                           	line	117
  9468                           	
  9469  13D7                     l11060:	
  9470                           ;robot.c: 117: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  9471  13D7  0823               	movf	(RobotDrive@speed+1),w
  9472  13D8  00A6               	movwf	(??_RobotDrive+0)+0
  9473  13D9  0826               	movf	(??_RobotDrive+0)+0,w
  9474  13DA  00A8               	movwf	(RobotDrive@speedhighByte)
  9475                           	line	118
  9476                           	
  9477  13DB                     l11062:	
  9478                           ;robot.c: 118: unsigned char radiuslowByte = (unsigned char)(radius);
  9479  13DB  0824               	movf	(RobotDrive@radius),w
  9480  13DC  00A6               	movwf	(??_RobotDrive+0)+0
  9481  13DD  0826               	movf	(??_RobotDrive+0)+0,w
  9482  13DE  00A9               	movwf	(RobotDrive@radiuslowByte)
  9483                           	line	119
  9484                           ;robot.c: 119: unsigned char radiushighByte = (unsigned char)(radius >> 8);
  9485  13DF  0825               	movf	(RobotDrive@radius+1),w
  9486  13E0  00A6               	movwf	(??_RobotDrive+0)+0
  9487  13E1  0826               	movf	(??_RobotDrive+0)+0,w
  9488  13E2  00AA               	movwf	(RobotDrive@radiushighByte)
  9489                           	line	121
  9490                           	
  9491  13E3                     l11064:	
  9492                           ;robot.c: 121: ser_putch(137);
  9493  13E3  3089               	movlw	(089h)
  9494  13E4  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9495                           	line	123
  9496                           	
  9497  13E9                     l11066:	
  9498                           ;robot.c: 123: ser_putch(speedhighByte);
  9499  13E9  1283               	bcf	status, 5	;RP0=0, select bank0
  9500  13EA  1303               	bcf	status, 6	;RP1=0, select bank0
  9501  13EB  0828               	movf	(RobotDrive@speedhighByte),w
  9502  13EC  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9503                           	line	125
  9504                           	
  9505  13F1                     l11068:	
  9506                           ;robot.c: 125: ser_putch(speedlowByte);
  9507  13F1  1283               	bcf	status, 5	;RP0=0, select bank0
  9508  13F2  1303               	bcf	status, 6	;RP1=0, select bank0
  9509  13F3  0827               	movf	(RobotDrive@speedlowByte),w
  9510  13F4  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9511                           	line	127
  9512                           	
  9513  13F9                     l11070:	
  9514                           ;robot.c: 127: ser_putch(radiushighByte);
  9515  13F9  1283               	bcf	status, 5	;RP0=0, select bank0
  9516  13FA  1303               	bcf	status, 6	;RP1=0, select bank0
  9517  13FB  082A               	movf	(RobotDrive@radiushighByte),w
  9518  13FC  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9519                           	line	129
  9520                           	
  9521  1401                     l11072:	
  9522                           ;robot.c: 129: ser_putch(radiuslowByte);
  9523  1401  1283               	bcf	status, 5	;RP0=0, select bank0
  9524  1402  1303               	bcf	status, 6	;RP1=0, select bank0
  9525  1403  0829               	movf	(RobotDrive@radiuslowByte),w
  9526  1404  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9527                           	line	130
  9528                           	
  9529  1409                     l6091:	
  9530  1409  0008               	return
  9531                           	opt stack 0
  9532                           GLOBAL	__end_of_RobotDrive
  9533  140A                     	__end_of_RobotDrive:
  9534 ;; =============== function _RobotDrive ends ============
  9535                           
  9536                           	signat	_RobotDrive,8312
  9537                           	global	_robotLoadSong
  9538                           psect	text1062,local,class=CODE,delta=2
  9539                           global __ptext1062
  9540  1208                     __ptext1062:
  9541                           
  9542 ;; *************** function _robotLoadSong *****************
  9543 ;; Defined at:
  9544 ;;		line 256 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9558 ;;      Params:         0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0
  9561 ;;      Totals:         0       0       0       0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    4
  9565 ;; This function calls:
  9566 ;;		_ser_putch
  9567 ;; This function is called by:
  9568 ;;		_main
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           psect	text1062
  9572                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9573                           	line	256
  9574                           	global	__size_of_robotLoadSong
  9575  002B                     	__size_of_robotLoadSong	equ	__end_of_robotLoadSong-_robotLoadSong
  9576                           	
  9577  1208                     _robotLoadSong:	
  9578                           	opt	stack 3
  9579                           ; Regs used in _robotLoadSong: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9580                           	line	257
  9581                           	
  9582  1208                     l11056:	
  9583                           ;robot.c: 257: ser_putch(140);
  9584  1208  308C               	movlw	(08Ch)
  9585  1209  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9586                           	line	258
  9587                           ;robot.c: 258: ser_putch(0);
  9588  120E  3000               	movlw	(0)
  9589  120F  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9590                           	line	259
  9591                           ;robot.c: 259: ser_putch(2);
  9592  1214  3002               	movlw	(02h)
  9593  1215  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9594                           	line	260
  9595                           ;robot.c: 260: ser_putch(72);
  9596  121A  3048               	movlw	(048h)
  9597  121B  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9598                           	line	261
  9599                           ;robot.c: 261: ser_putch(16);
  9600  1220  3010               	movlw	(010h)
  9601  1221  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9602                           	line	262
  9603                           ;robot.c: 262: ser_putch(84);
  9604  1226  3054               	movlw	(054h)
  9605  1227  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9606                           	line	263
  9607                           ;robot.c: 263: ser_putch(16);
  9608  122C  3010               	movlw	(010h)
  9609  122D  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9610                           	line	264
  9611                           	
  9612  1232                     l6122:	
  9613  1232  0008               	return
  9614                           	opt stack 0
  9615                           GLOBAL	__end_of_robotLoadSong
  9616  1233                     	__end_of_robotLoadSong:
  9617 ;; =============== function _robotLoadSong ends ============
  9618                           
  9619                           	signat	_robotLoadSong,88
  9620                           	global	_robo_init
  9621                           psect	text1063,local,class=CODE,delta=2
  9622                           global __ptext1063
  9623  117B                     __ptext1063:
  9624                           
  9625 ;; *************** function _robo_init *****************
  9626 ;; Defined at:
  9627 ;;		line 40 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;		None
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;		None
  9632 ;; Return value:  Size  Location     Type
  9633 ;;		None               void
  9634 ;; Registers used:
  9635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9641 ;;      Params:         0       0       0       0       0
  9642 ;;      Locals:         0       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0
  9644 ;;      Totals:         0       0       0       0       0
  9645 ;;Total ram usage:        0 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; Hardware stack levels required when called:    4
  9648 ;; This function calls:
  9649 ;;		_ser_putch
  9650 ;; This function is called by:
  9651 ;;		_init
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           psect	text1063
  9655                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9656                           	line	40
  9657                           	global	__size_of_robo_init
  9658  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  9659                           	
  9660  117B                     _robo_init:	
  9661                           	opt	stack 2
  9662                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9663                           	line	41
  9664                           	
  9665  117B                     l11054:	
  9666                           ;robot.c: 41: ser_putch(128);
  9667  117B  3080               	movlw	(080h)
  9668  117C  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9669                           	line	42
  9670                           ;robot.c: 42: ser_putch(132);
  9671  1181  3084               	movlw	(084h)
  9672  1182  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9673                           	line	43
  9674                           ;robot.c: 43: ser_putch(150);
  9675  1187  3096               	movlw	(096h)
  9676  1188  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9677                           	line	44
  9678                           ;robot.c: 44: ser_putch(0);
  9679  118D  3000               	movlw	(0)
  9680  118E  160A  118A  22E2   	fcall	_ser_putch
              160A  118A         
  9681                           	line	45
  9682                           	
  9683  1193                     l6078:	
  9684  1193  0008               	return
  9685                           	opt stack 0
  9686                           GLOBAL	__end_of_robo_init
  9687  1194                     	__end_of_robo_init:
  9688 ;; =============== function _robo_init ends ============
  9689                           
  9690                           	signat	_robo_init,88
  9691                           	global	_lcd_write_data
  9692                           psect	text1064,local,class=CODE,delta=2
  9693                           global __ptext1064
  9694  10E8                     __ptext1064:
  9695                           
  9696 ;; *************** function _lcd_write_data *****************
  9697 ;; Defined at:
  9698 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  databyte        1    wreg     unsigned char 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  databyte        1    2[BANK0 ] unsigned char 
  9703 ;; Return value:  Size  Location     Type
  9704 ;;		None               void
  9705 ;; Registers used:
  9706 ;;		wreg
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9712 ;;      Params:         0       0       0       0       0
  9713 ;;      Locals:         0       1       0       0       0
  9714 ;;      Temps:          0       2       0       0       0
  9715 ;;      Totals:         0       3       0       0       0
  9716 ;;Total ram usage:        3 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; Hardware stack levels required when called:    3
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_lcd_write_string
  9723 ;;		_lcd_write_2_digit_bcd
  9724 ;;		_lcd_write_3_digit_bcd
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           psect	text1064
  9728                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9729                           	line	30
  9730                           	global	__size_of_lcd_write_data
  9731  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  9732                           	
  9733  10E8                     _lcd_write_data:	
  9734                           	opt	stack 1
  9735                           ; Regs used in _lcd_write_data: [wreg]
  9736                           ;lcd_write_data@databyte stored from wreg
  9737  10E8  1283               	bcf	status, 5	;RP0=0, select bank0
  9738  10E9  1303               	bcf	status, 6	;RP1=0, select bank0
  9739  10EA  00A2               	movwf	(lcd_write_data@databyte)
  9740                           	line	31
  9741                           	
  9742  10EB                     l11046:	
  9743                           ;lcd.c: 31: RE2 = 0;
  9744  10EB  1109               	bcf	(74/8),(74)&7
  9745                           	line	32
  9746                           ;lcd.c: 32: RE1 = 0;
  9747  10EC  1089               	bcf	(73/8),(73)&7
  9748                           	line	33
  9749                           ;lcd.c: 33: RE0 = 1;
  9750  10ED  1409               	bsf	(72/8),(72)&7
  9751                           	line	34
  9752                           	
  9753  10EE                     l11048:	
  9754                           ;lcd.c: 34: PORTD = databyte;
  9755  10EE  0822               	movf	(lcd_write_data@databyte),w
  9756  10EF  0088               	movwf	(8)	;volatile
  9757                           	line	35
  9758                           	
  9759  10F0                     l11050:	
  9760                           ;lcd.c: 35: RE2 = 1;
  9761  10F0  1509               	bsf	(74/8),(74)&7
  9762                           	line	36
  9763                           	
  9764  10F1                     l11052:	
  9765                           ;lcd.c: 36: RE2 = 0;
  9766  10F1  1109               	bcf	(74/8),(74)&7
  9767                           	line	37
  9768                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  9769                           	opt asmopt_off
  9770  10F2  3007               movlw	7
  9771  10F3  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  9772  10F4  307D               	movlw	125
  9773  10F5  00A0               movwf	((??_lcd_write_data+0)+0),f
  9774  10F6                     u5337:
  9775  10F6  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  9776  10F7  28F6               	goto	u5337
  9777  10F8  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  9778  10F9  28F6               	goto	u5337
  9779                           opt asmopt_on
  9780                           
  9781                           	line	38
  9782                           	
  9783  10FA                     l1402:	
  9784  10FA  0008               	return
  9785                           	opt stack 0
  9786                           GLOBAL	__end_of_lcd_write_data
  9787  10FB                     	__end_of_lcd_write_data:
  9788 ;; =============== function _lcd_write_data ends ============
  9789                           
  9790                           	signat	_lcd_write_data,4216
  9791                           	global	_lcd_write_control
  9792                           psect	text1065,local,class=CODE,delta=2
  9793                           global __ptext1065
  9794  1122                     __ptext1065:
  9795                           
  9796 ;; *************** function _lcd_write_control *****************
  9797 ;; Defined at:
  9798 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  databyte        1    wreg     unsigned char 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  databyte        1    2[BANK0 ] unsigned char 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;		None               void
  9805 ;; Registers used:
  9806 ;;		wreg
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9812 ;;      Params:         0       0       0       0       0
  9813 ;;      Locals:         0       1       0       0       0
  9814 ;;      Temps:          0       2       0       0       0
  9815 ;;      Totals:         0       3       0       0       0
  9816 ;;Total ram usage:        3 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    3
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_lcd_set_cursor
  9823 ;;		_lcd_init
  9824 ;;		_UpdateDisplay
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           psect	text1065
  9828                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9829                           	line	18
  9830                           	global	__size_of_lcd_write_control
  9831  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  9832                           	
  9833  1122                     _lcd_write_control:	
  9834                           	opt	stack 1
  9835                           ; Regs used in _lcd_write_control: [wreg]
  9836                           ;lcd_write_control@databyte stored from wreg
  9837  1122  1283               	bcf	status, 5	;RP0=0, select bank0
  9838  1123  1303               	bcf	status, 6	;RP1=0, select bank0
  9839  1124  00A2               	movwf	(lcd_write_control@databyte)
  9840                           	line	19
  9841                           	
  9842  1125                     l11038:	
  9843                           ;lcd.c: 19: RE2 = 0;
  9844  1125  1109               	bcf	(74/8),(74)&7
  9845                           	line	20
  9846                           ;lcd.c: 20: RE1 = 0;
  9847  1126  1089               	bcf	(73/8),(73)&7
  9848                           	line	21
  9849                           ;lcd.c: 21: RE0 = 0;
  9850  1127  1009               	bcf	(72/8),(72)&7
  9851                           	line	22
  9852                           	
  9853  1128                     l11040:	
  9854                           ;lcd.c: 22: PORTD = databyte;
  9855  1128  0822               	movf	(lcd_write_control@databyte),w
  9856  1129  0088               	movwf	(8)	;volatile
  9857                           	line	23
  9858                           	
  9859  112A                     l11042:	
  9860                           ;lcd.c: 23: RE2 = 1;
  9861  112A  1509               	bsf	(74/8),(74)&7
  9862                           	line	24
  9863                           	
  9864  112B                     l11044:	
  9865                           ;lcd.c: 24: RE2 = 0;
  9866  112B  1109               	bcf	(74/8),(74)&7
  9867                           	line	25
  9868                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  9869                           	opt asmopt_off
  9870  112C  300D               movlw	13
  9871  112D  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  9872  112E  30FB               	movlw	251
  9873  112F  00A0               movwf	((??_lcd_write_control+0)+0),f
  9874  1130                     u5347:
  9875  1130  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  9876  1131  2930               	goto	u5347
  9877  1132  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  9878  1133  2930               	goto	u5347
  9879  1134  2935               	nop2
  9880                           opt asmopt_on
  9881                           
  9882                           	line	26
  9883                           	
  9884  1135                     l1399:	
  9885  1135  0008               	return
  9886                           	opt stack 0
  9887                           GLOBAL	__end_of_lcd_write_control
  9888  1136                     	__end_of_lcd_write_control:
  9889 ;; =============== function _lcd_write_control ends ============
  9890                           
  9891                           	signat	_lcd_write_control,4216
  9892                           	global	_init_adc
  9893                           psect	text1066,local,class=CODE,delta=2
  9894                           global __ptext1066
  9895  1136                     __ptext1066:
  9896                           
  9897 ;; *************** function _init_adc *****************
  9898 ;; Defined at:
  9899 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;		None
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;		None               void
  9906 ;; Registers used:
  9907 ;;		wreg, status,2
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9913 ;;      Params:         0       0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0
  9915 ;;      Temps:          0       1       0       0       0
  9916 ;;      Totals:         0       1       0       0       0
  9917 ;;Total ram usage:        1 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:    3
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_init
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           psect	text1066
  9927                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9928                           	line	61
  9929                           	global	__size_of_init_adc
  9930  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  9931                           	
  9932  1136                     _init_adc:	
  9933                           	opt	stack 3
  9934                           ; Regs used in _init_adc: [wreg+status,2]
  9935                           	line	63
  9936                           	
  9937  1136                     l11028:	
  9938                           ;adc.c: 63: PORTA = 0;
  9939  1136  1283               	bcf	status, 5	;RP0=0, select bank0
  9940  1137  1303               	bcf	status, 6	;RP1=0, select bank0
  9941  1138  0185               	clrf	(5)	;volatile
  9942                           	line	64
  9943                           	
  9944  1139                     l11030:	
  9945                           ;adc.c: 64: TRISA = 0b00111111;
  9946  1139  303F               	movlw	(03Fh)
  9947  113A  1683               	bsf	status, 5	;RP0=1, select bank1
  9948  113B  1303               	bcf	status, 6	;RP1=0, select bank1
  9949  113C  0085               	movwf	(133)^080h	;volatile
  9950                           	line	67
  9951                           	
  9952  113D                     l11032:	
  9953                           ;adc.c: 67: ADCON0 = 0b10100001;
  9954  113D  30A1               	movlw	(0A1h)
  9955  113E  1283               	bcf	status, 5	;RP0=0, select bank0
  9956  113F  1303               	bcf	status, 6	;RP1=0, select bank0
  9957  1140  009F               	movwf	(31)	;volatile
  9958                           	line	68
  9959                           	
  9960  1141                     l11034:	
  9961                           ;adc.c: 68: ADCON1 = 0b0000010;
  9962  1141  3002               	movlw	(02h)
  9963  1142  1683               	bsf	status, 5	;RP0=1, select bank1
  9964  1143  1303               	bcf	status, 6	;RP1=0, select bank1
  9965  1144  009F               	movwf	(159)^080h	;volatile
  9966                           	line	70
  9967                           	
  9968  1145                     l11036:	
  9969                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9970                           	opt asmopt_off
  9971  1145  3053               movlw	83
  9972  1146  1283               	bcf	status, 5	;RP0=0, select bank0
  9973  1147  1303               	bcf	status, 6	;RP1=0, select bank0
  9974  1148  00A0               movwf	(??_init_adc+0)+0,f
  9975  1149                     u5357:
  9976  1149  0BA0               decfsz	(??_init_adc+0)+0,f
  9977  114A  2949               	goto	u5357
  9978                           opt asmopt_on
  9979                           
  9980                           	line	72
  9981                           	
  9982  114B                     l700:	
  9983  114B  0008               	return
  9984                           	opt stack 0
  9985                           GLOBAL	__end_of_init_adc
  9986  114C                     	__end_of_init_adc:
  9987 ;; =============== function _init_adc ends ============
  9988                           
  9989                           	signat	_init_adc,88
  9990                           	global	_adc_read_channel
  9991                           psect	text1067,local,class=CODE,delta=2
  9992                           global __ptext1067
  9993  140A                     __ptext1067:
  9994                           
  9995 ;; *************** function _adc_read_channel *****************
  9996 ;; Defined at:
  9997 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  channel         1    wreg     unsigned char 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  channel         1    7[BANK0 ] unsigned char 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      unsigned char 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10011 ;;      Params:         0       0       0       0       0
 10012 ;;      Locals:         0       1       0       0       0
 10013 ;;      Temps:          0       1       0       0       0
 10014 ;;      Totals:         0       2       0       0       0
 10015 ;;Total ram usage:        2 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    4
 10018 ;; This function calls:
 10019 ;;		_adc_read
 10020 ;; This function is called by:
 10021 ;;		_readDistance
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           psect	text1067
 10025                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10026                           	line	20
 10027                           	global	__size_of_adc_read_channel
 10028  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
 10029                           	
 10030  140A                     _adc_read_channel:	
 10031                           	opt	stack 0
 10032                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10033                           ;adc_read_channel@channel stored from wreg
 10034  140A  1283               	bcf	status, 5	;RP0=0, select bank0
 10035  140B  1303               	bcf	status, 6	;RP1=0, select bank0
 10036  140C  00A7               	movwf	(adc_read_channel@channel)
 10037                           	line	21
 10038                           	
 10039  140D                     l11012:	
 10040                           ;adc.c: 21: switch(channel)
 10041  140D  2C26               	goto	l11020
 10042                           	line	23
 10043                           ;adc.c: 22: {
 10044                           ;adc.c: 23: case 0:
 10045                           	
 10046  140E                     l690:	
 10047                           	line	24
 10048                           ;adc.c: 24: CHS0 = 0;
 10049  140E  119F               	bcf	(251/8),(251)&7
 10050                           	line	25
 10051                           ;adc.c: 25: CHS1 = 0;
 10052  140F  121F               	bcf	(252/8),(252)&7
 10053                           	line	26
 10054                           ;adc.c: 26: CHS2 = 0;
 10055  1410  129F               	bcf	(253/8),(253)&7
 10056                           	line	27
 10057                           ;adc.c: 27: break;
 10058  1411  2C37               	goto	l11022
 10059                           	line	28
 10060                           ;adc.c: 28: case 1:
 10061                           	
 10062  1412                     l692:	
 10063                           	line	29
 10064                           ;adc.c: 29: CHS0 = 1;
 10065  1412  159F               	bsf	(251/8),(251)&7
 10066                           	line	30
 10067                           ;adc.c: 30: CHS1 = 0;
 10068  1413  121F               	bcf	(252/8),(252)&7
 10069                           	line	31
 10070                           ;adc.c: 31: CHS2 = 0;
 10071  1414  129F               	bcf	(253/8),(253)&7
 10072                           	line	32
 10073                           ;adc.c: 32: break;
 10074  1415  2C37               	goto	l11022
 10075                           	line	33
 10076                           ;adc.c: 33: case 2:
 10077                           	
 10078  1416                     l693:	
 10079                           	line	34
 10080                           ;adc.c: 34: CHS0 = 0;
 10081  1416  119F               	bcf	(251/8),(251)&7
 10082                           	line	35
 10083                           ;adc.c: 35: CHS1 = 1;
 10084  1417  161F               	bsf	(252/8),(252)&7
 10085                           	line	36
 10086                           ;adc.c: 36: CHS2 = 0;
 10087  1418  129F               	bcf	(253/8),(253)&7
 10088                           	line	37
 10089                           ;adc.c: 37: break;
 10090  1419  2C37               	goto	l11022
 10091                           	line	38
 10092                           ;adc.c: 38: case 3:
 10093                           	
 10094  141A                     l694:	
 10095                           	line	39
 10096                           ;adc.c: 39: CHS0 = 1;
 10097  141A  159F               	bsf	(251/8),(251)&7
 10098                           	line	40
 10099                           ;adc.c: 40: CHS1 = 1;
 10100  141B  161F               	bsf	(252/8),(252)&7
 10101                           	line	41
 10102                           ;adc.c: 41: CHS2 = 0;
 10103  141C  129F               	bcf	(253/8),(253)&7
 10104                           	line	42
 10105                           ;adc.c: 42: break;
 10106  141D  2C37               	goto	l11022
 10107                           	line	43
 10108                           ;adc.c: 43: case 4:
 10109                           	
 10110  141E                     l695:	
 10111                           	line	44
 10112                           ;adc.c: 44: CHS0 = 0;
 10113  141E  119F               	bcf	(251/8),(251)&7
 10114                           	line	45
 10115                           ;adc.c: 45: CHS1 = 0;
 10116  141F  121F               	bcf	(252/8),(252)&7
 10117                           	line	46
 10118                           ;adc.c: 46: CHS2 = 1;
 10119  1420  169F               	bsf	(253/8),(253)&7
 10120                           	line	47
 10121                           ;adc.c: 47: break;
 10122  1421  2C37               	goto	l11022
 10123                           	line	50
 10124                           ;adc.c: 50: default:
 10125                           	
 10126  1422                     l696:	
 10127                           	line	51
 10128                           	
 10129  1422                     l11014:	
 10130                           ;adc.c: 51: return 0;
 10131  1422  3000               	movlw	(0)
 10132  1423  2C44               	goto	l697
 10133                           	
 10134  1424                     l11016:	
 10135  1424  2C44               	goto	l697
 10136                           	line	52
 10137                           	
 10138  1425                     l11018:	
 10139                           ;adc.c: 52: }
 10140  1425  2C37               	goto	l11022
 10141                           	line	21
 10142                           	
 10143  1426                     l689:	
 10144                           	
 10145  1426                     l11020:	
 10146  1426  0827               	movf	(adc_read_channel@channel),w
 10147                           	; Switch size 1, requested type "space"
 10148                           ; Number of cases is 5, Range of values is 0 to 4
 10149                           ; switch strategies available:
 10150                           ; Name         Instructions Cycles
 10151                           ; simple_byte           16     9 (average)
 10152                           ; direct_byte           23     8 (fixed)
 10153                           ; jumptable            260     6 (fixed)
 10154                           ; rangetable             9     6 (fixed)
 10155                           ; spacedrange           16     9 (fixed)
 10156                           ; locatedrange           5     3 (fixed)
 10157                           ;	Chosen strategy is simple_byte
 10158                           
 10159                           	opt asmopt_off
 10160  1427  3A00               	xorlw	0^0	; case 0
 10161  1428  1903               	skipnz
 10162  1429  2C0E               	goto	l690
 10163  142A  3A01               	xorlw	1^0	; case 1
 10164  142B  1903               	skipnz
 10165  142C  2C12               	goto	l692
 10166  142D  3A03               	xorlw	2^1	; case 2
 10167  142E  1903               	skipnz
 10168  142F  2C16               	goto	l693
 10169  1430  3A01               	xorlw	3^2	; case 3
 10170  1431  1903               	skipnz
 10171  1432  2C1A               	goto	l694
 10172  1433  3A07               	xorlw	4^3	; case 4
 10173  1434  1903               	skipnz
 10174  1435  2C1E               	goto	l695
 10175  1436  2C22               	goto	l11014
 10176                           	opt asmopt_on
 10177                           
 10178                           	line	52
 10179                           	
 10180  1437                     l691:	
 10181                           	line	54
 10182                           	
 10183  1437                     l11022:	
 10184                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10185                           	opt asmopt_off
 10186  1437  3053               movlw	83
 10187  1438  00A6               movwf	(??_adc_read_channel+0)+0,f
 10188  1439                     u5367:
 10189  1439  0BA6               decfsz	(??_adc_read_channel+0)+0,f
 10190  143A  2C39               	goto	u5367
 10191                           opt asmopt_on
 10192                           
 10193                           	line	56
 10194                           	
 10195  143B                     l11024:	
 10196                           ;adc.c: 56: return adc_read();
 10197  143B  160A  118A  21B5   	fcall	_adc_read
              160A  118A         
 10198  1440  1283               	bcf	status, 5	;RP0=0, select bank0
 10199  1441  1303               	bcf	status, 6	;RP1=0, select bank0
 10200  1442  0820               	movf	(0+(?_adc_read)),w
 10201  1443  2C44               	goto	l697
 10202                           	
 10203  1444                     l11026:	
 10204                           	line	58
 10205                           	
 10206  1444                     l697:	
 10207  1444  0008               	return
 10208                           	opt stack 0
 10209                           GLOBAL	__end_of_adc_read_channel
 10210  1445                     	__end_of_adc_read_channel:
 10211 ;; =============== function _adc_read_channel ends ============
 10212                           
 10213                           	signat	_adc_read_channel,4217
 10214                           	global	___awmod
 10215                           psect	text1068,local,class=CODE,delta=2
 10216                           global __ptext1068
 10217  08C4                     __ptext1068:
 10218                           
 10219 ;; *************** function ___awmod *****************
 10220 ;; Defined at:
 10221 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  divisor         2    0[BANK0 ] int 
 10224 ;;  dividend        2    2[BANK0 ] int 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;  sign            1    6[BANK0 ] unsigned char 
 10227 ;;  counter         1    5[BANK0 ] unsigned char 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  2    0[BANK0 ] int 
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10237 ;;      Params:         0       4       0       0       0
 10238 ;;      Locals:         0       2       0       0       0
 10239 ;;      Temps:          0       1       0       0       0
 10240 ;;      Totals:         0       7       0       0       0
 10241 ;;Total ram usage:        7 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    3
 10244 ;; This function calls:
 10245 ;;		Nothing
 10246 ;; This function is called by:
 10247 ;;		_UpdateDisplay
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           psect	text1068
 10251                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10252                           	line	5
 10253                           	global	__size_of___awmod
 10254  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 10255                           	
 10256  08C4                     ___awmod:	
 10257                           	opt	stack 2
 10258                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10259                           	line	8
 10260                           	
 10261  08C4                     l10956:	
 10262  08C4  1283               	bcf	status, 5	;RP0=0, select bank0
 10263  08C5  1303               	bcf	status, 6	;RP1=0, select bank0
 10264  08C6  01A6               	clrf	(___awmod@sign)
 10265                           	line	9
 10266  08C7  1FA3               	btfss	(___awmod@dividend+1),7
 10267  08C8  28CA               	goto	u4351
 10268  08C9  28CB               	goto	u4350
 10269  08CA                     u4351:
 10270  08CA  28D4               	goto	l10960
 10271  08CB                     u4350:
 10272                           	line	10
 10273                           	
 10274  08CB                     l10958:	
 10275  08CB  09A2               	comf	(___awmod@dividend),f
 10276  08CC  09A3               	comf	(___awmod@dividend+1),f
 10277  08CD  0AA2               	incf	(___awmod@dividend),f
 10278  08CE  1903               	skipnz
 10279  08CF  0AA3               	incf	(___awmod@dividend+1),f
 10280                           	line	11
 10281  08D0  01A6               	clrf	(___awmod@sign)
 10282  08D1  1403               	bsf	status,0
 10283  08D2  0DA6               	rlf	(___awmod@sign),f
 10284  08D3  28D4               	goto	l10960
 10285                           	line	12
 10286                           	
 10287  08D4                     l7820:	
 10288                           	line	13
 10289                           	
 10290  08D4                     l10960:	
 10291  08D4  1FA1               	btfss	(___awmod@divisor+1),7
 10292  08D5  28D7               	goto	u4361
 10293  08D6  28D8               	goto	u4360
 10294  08D7                     u4361:
 10295  08D7  28DE               	goto	l10964
 10296  08D8                     u4360:
 10297                           	line	14
 10298                           	
 10299  08D8                     l10962:	
 10300  08D8  09A0               	comf	(___awmod@divisor),f
 10301  08D9  09A1               	comf	(___awmod@divisor+1),f
 10302  08DA  0AA0               	incf	(___awmod@divisor),f
 10303  08DB  1903               	skipnz
 10304  08DC  0AA1               	incf	(___awmod@divisor+1),f
 10305  08DD  28DE               	goto	l10964
 10306                           	
 10307  08DE                     l7821:	
 10308                           	line	15
 10309                           	
 10310  08DE                     l10964:	
 10311  08DE  0821               	movf	(___awmod@divisor+1),w
 10312  08DF  0420               	iorwf	(___awmod@divisor),w
 10313  08E0  1903               	skipnz
 10314  08E1  28E3               	goto	u4371
 10315  08E2  28E4               	goto	u4370
 10316  08E3                     u4371:
 10317  08E3  291A               	goto	l10982
 10318  08E4                     u4370:
 10319                           	line	16
 10320                           	
 10321  08E4                     l10966:	
 10322  08E4  01A5               	clrf	(___awmod@counter)
 10323  08E5  1403               	bsf	status,0
 10324  08E6  0DA5               	rlf	(___awmod@counter),f
 10325                           	line	17
 10326  08E7  28F4               	goto	l10972
 10327                           	
 10328  08E8                     l7824:	
 10329                           	line	18
 10330                           	
 10331  08E8                     l10968:	
 10332  08E8  3001               	movlw	01h
 10333                           	
 10334  08E9                     u4385:
 10335  08E9  1003               	clrc
 10336  08EA  0DA0               	rlf	(___awmod@divisor),f
 10337  08EB  0DA1               	rlf	(___awmod@divisor+1),f
 10338  08EC  3EFF               	addlw	-1
 10339  08ED  1D03               	skipz
 10340  08EE  28E9               	goto	u4385
 10341                           	line	19
 10342                           	
 10343  08EF                     l10970:	
 10344  08EF  3001               	movlw	(01h)
 10345  08F0  00A4               	movwf	(??___awmod+0)+0
 10346  08F1  0824               	movf	(??___awmod+0)+0,w
 10347  08F2  07A5               	addwf	(___awmod@counter),f
 10348  08F3  28F4               	goto	l10972
 10349                           	line	20
 10350                           	
 10351  08F4                     l7823:	
 10352                           	line	17
 10353                           	
 10354  08F4                     l10972:	
 10355  08F4  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 10356  08F5  28F7               	goto	u4391
 10357  08F6  28F8               	goto	u4390
 10358  08F7                     u4391:
 10359  08F7  28E8               	goto	l10968
 10360  08F8                     u4390:
 10361  08F8  28FA               	goto	l10974
 10362                           	
 10363  08F9                     l7825:	
 10364  08F9  28FA               	goto	l10974
 10365                           	line	21
 10366                           	
 10367  08FA                     l7826:	
 10368                           	line	22
 10369                           	
 10370  08FA                     l10974:	
 10371  08FA  0821               	movf	(___awmod@divisor+1),w
 10372  08FB  0223               	subwf	(___awmod@dividend+1),w
 10373  08FC  1D03               	skipz
 10374  08FD  2900               	goto	u4405
 10375  08FE  0820               	movf	(___awmod@divisor),w
 10376  08FF  0222               	subwf	(___awmod@dividend),w
 10377  0900                     u4405:
 10378  0900  1C03               	skipc
 10379  0901  2903               	goto	u4401
 10380  0902  2904               	goto	u4400
 10381  0903                     u4401:
 10382  0903  290B               	goto	l10978
 10383  0904                     u4400:
 10384                           	line	23
 10385                           	
 10386  0904                     l10976:	
 10387  0904  0820               	movf	(___awmod@divisor),w
 10388  0905  02A2               	subwf	(___awmod@dividend),f
 10389  0906  0821               	movf	(___awmod@divisor+1),w
 10390  0907  1C03               	skipc
 10391  0908  03A3               	decf	(___awmod@dividend+1),f
 10392  0909  02A3               	subwf	(___awmod@dividend+1),f
 10393  090A  290B               	goto	l10978
 10394                           	
 10395  090B                     l7827:	
 10396                           	line	24
 10397                           	
 10398  090B                     l10978:	
 10399  090B  3001               	movlw	01h
 10400                           	
 10401  090C                     u4415:
 10402  090C  1003               	clrc
 10403  090D  0CA1               	rrf	(___awmod@divisor+1),f
 10404  090E  0CA0               	rrf	(___awmod@divisor),f
 10405  090F  3EFF               	addlw	-1
 10406  0910  1D03               	skipz
 10407  0911  290C               	goto	u4415
 10408                           	line	25
 10409                           	
 10410  0912                     l10980:	
 10411  0912  3001               	movlw	low(01h)
 10412  0913  02A5               	subwf	(___awmod@counter),f
 10413  0914  1D03               	btfss	status,2
 10414  0915  2917               	goto	u4421
 10415  0916  2918               	goto	u4420
 10416  0917                     u4421:
 10417  0917  28FA               	goto	l10974
 10418  0918                     u4420:
 10419  0918  291A               	goto	l10982
 10420                           	
 10421  0919                     l7828:	
 10422  0919  291A               	goto	l10982
 10423                           	line	26
 10424                           	
 10425  091A                     l7822:	
 10426                           	line	27
 10427                           	
 10428  091A                     l10982:	
 10429  091A  0826               	movf	(___awmod@sign),w
 10430  091B  1D03               	skipz
 10431  091C  291E               	goto	u4430
 10432  091D  2924               	goto	l10986
 10433  091E                     u4430:
 10434                           	line	28
 10435                           	
 10436  091E                     l10984:	
 10437  091E  09A2               	comf	(___awmod@dividend),f
 10438  091F  09A3               	comf	(___awmod@dividend+1),f
 10439  0920  0AA2               	incf	(___awmod@dividend),f
 10440  0921  1903               	skipnz
 10441  0922  0AA3               	incf	(___awmod@dividend+1),f
 10442  0923  2924               	goto	l10986
 10443                           	
 10444  0924                     l7829:	
 10445                           	line	29
 10446                           	
 10447  0924                     l10986:	
 10448  0924  0823               	movf	(___awmod@dividend+1),w
 10449  0925  01A1               	clrf	(?___awmod+1)
 10450  0926  07A1               	addwf	(?___awmod+1)
 10451  0927  0822               	movf	(___awmod@dividend),w
 10452  0928  01A0               	clrf	(?___awmod)
 10453  0929  07A0               	addwf	(?___awmod)
 10454                           
 10455  092A  292B               	goto	l7830
 10456                           	
 10457  092B                     l10988:	
 10458                           	line	30
 10459                           	
 10460  092B                     l7830:	
 10461  092B  0008               	return
 10462                           	opt stack 0
 10463                           GLOBAL	__end_of___awmod
 10464  092C                     	__end_of___awmod:
 10465 ;; =============== function ___awmod ends ============
 10466                           
 10467                           	signat	___awmod,8314
 10468                           	global	___lwmod
 10469                           psect	text1069,local,class=CODE,delta=2
 10470                           global __ptext1069
 10471  1489                     __ptext1069:
 10472                           
 10473 ;; *************** function ___lwmod *****************
 10474 ;; Defined at:
 10475 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  divisor         2   14[BANK0 ] unsigned int 
 10478 ;;  dividend        2   16[BANK0 ] unsigned int 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  counter         1   19[BANK0 ] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  2   14[BANK0 ] unsigned int 
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, status,0
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10490 ;;      Params:         0       4       0       0       0
 10491 ;;      Locals:         0       1       0       0       0
 10492 ;;      Temps:          0       1       0       0       0
 10493 ;;      Totals:         0       6       0       0       0
 10494 ;;Total ram usage:        6 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    3
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_sprintf
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           psect	text1069
 10504                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10505                           	line	5
 10506                           	global	__size_of___lwmod
 10507  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 10508                           	
 10509  1489                     ___lwmod:	
 10510                           	opt	stack 1
 10511                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10512                           	line	8
 10513                           	
 10514  1489                     l10934:	
 10515  1489  1283               	bcf	status, 5	;RP0=0, select bank0
 10516  148A  1303               	bcf	status, 6	;RP1=0, select bank0
 10517  148B  082F               	movf	(___lwmod@divisor+1),w
 10518  148C  042E               	iorwf	(___lwmod@divisor),w
 10519  148D  1903               	skipnz
 10520  148E  2C90               	goto	u4291
 10521  148F  2C91               	goto	u4290
 10522  1490                     u4291:
 10523  1490  2CC7               	goto	l10952
 10524  1491                     u4290:
 10525                           	line	9
 10526                           	
 10527  1491                     l10936:	
 10528  1491  01B3               	clrf	(___lwmod@counter)
 10529  1492  1403               	bsf	status,0
 10530  1493  0DB3               	rlf	(___lwmod@counter),f
 10531                           	line	10
 10532  1494  2CA1               	goto	l10942
 10533                           	
 10534  1495                     l7630:	
 10535                           	line	11
 10536                           	
 10537  1495                     l10938:	
 10538  1495  3001               	movlw	01h
 10539                           	
 10540  1496                     u4305:
 10541  1496  1003               	clrc
 10542  1497  0DAE               	rlf	(___lwmod@divisor),f
 10543  1498  0DAF               	rlf	(___lwmod@divisor+1),f
 10544  1499  3EFF               	addlw	-1
 10545  149A  1D03               	skipz
 10546  149B  2C96               	goto	u4305
 10547                           	line	12
 10548                           	
 10549  149C                     l10940:	
 10550  149C  3001               	movlw	(01h)
 10551  149D  00B2               	movwf	(??___lwmod+0)+0
 10552  149E  0832               	movf	(??___lwmod+0)+0,w
 10553  149F  07B3               	addwf	(___lwmod@counter),f
 10554  14A0  2CA1               	goto	l10942
 10555                           	line	13
 10556                           	
 10557  14A1                     l7629:	
 10558                           	line	10
 10559                           	
 10560  14A1                     l10942:	
 10561  14A1  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 10562  14A2  2CA4               	goto	u4311
 10563  14A3  2CA5               	goto	u4310
 10564  14A4                     u4311:
 10565  14A4  2C95               	goto	l10938
 10566  14A5                     u4310:
 10567  14A5  2CA7               	goto	l10944
 10568                           	
 10569  14A6                     l7631:	
 10570  14A6  2CA7               	goto	l10944
 10571                           	line	14
 10572                           	
 10573  14A7                     l7632:	
 10574                           	line	15
 10575                           	
 10576  14A7                     l10944:	
 10577  14A7  082F               	movf	(___lwmod@divisor+1),w
 10578  14A8  0231               	subwf	(___lwmod@dividend+1),w
 10579  14A9  1D03               	skipz
 10580  14AA  2CAD               	goto	u4325
 10581  14AB  082E               	movf	(___lwmod@divisor),w
 10582  14AC  0230               	subwf	(___lwmod@dividend),w
 10583  14AD                     u4325:
 10584  14AD  1C03               	skipc
 10585  14AE  2CB0               	goto	u4321
 10586  14AF  2CB1               	goto	u4320
 10587  14B0                     u4321:
 10588  14B0  2CB8               	goto	l10948
 10589  14B1                     u4320:
 10590                           	line	16
 10591                           	
 10592  14B1                     l10946:	
 10593  14B1  082E               	movf	(___lwmod@divisor),w
 10594  14B2  02B0               	subwf	(___lwmod@dividend),f
 10595  14B3  082F               	movf	(___lwmod@divisor+1),w
 10596  14B4  1C03               	skipc
 10597  14B5  03B1               	decf	(___lwmod@dividend+1),f
 10598  14B6  02B1               	subwf	(___lwmod@dividend+1),f
 10599  14B7  2CB8               	goto	l10948
 10600                           	
 10601  14B8                     l7633:	
 10602                           	line	17
 10603                           	
 10604  14B8                     l10948:	
 10605  14B8  3001               	movlw	01h
 10606                           	
 10607  14B9                     u4335:
 10608  14B9  1003               	clrc
 10609  14BA  0CAF               	rrf	(___lwmod@divisor+1),f
 10610  14BB  0CAE               	rrf	(___lwmod@divisor),f
 10611  14BC  3EFF               	addlw	-1
 10612  14BD  1D03               	skipz
 10613  14BE  2CB9               	goto	u4335
 10614                           	line	18
 10615                           	
 10616  14BF                     l10950:	
 10617  14BF  3001               	movlw	low(01h)
 10618  14C0  02B3               	subwf	(___lwmod@counter),f
 10619  14C1  1D03               	btfss	status,2
 10620  14C2  2CC4               	goto	u4341
 10621  14C3  2CC5               	goto	u4340
 10622  14C4                     u4341:
 10623  14C4  2CA7               	goto	l10944
 10624  14C5                     u4340:
 10625  14C5  2CC7               	goto	l10952
 10626                           	
 10627  14C6                     l7634:	
 10628  14C6  2CC7               	goto	l10952
 10629                           	line	19
 10630                           	
 10631  14C7                     l7628:	
 10632                           	line	20
 10633                           	
 10634  14C7                     l10952:	
 10635  14C7  0831               	movf	(___lwmod@dividend+1),w
 10636  14C8  01AF               	clrf	(?___lwmod+1)
 10637  14C9  07AF               	addwf	(?___lwmod+1)
 10638  14CA  0830               	movf	(___lwmod@dividend),w
 10639  14CB  01AE               	clrf	(?___lwmod)
 10640  14CC  07AE               	addwf	(?___lwmod)
 10641                           
 10642  14CD  2CCE               	goto	l7635
 10643                           	
 10644  14CE                     l10954:	
 10645                           	line	21
 10646                           	
 10647  14CE                     l7635:	
 10648  14CE  0008               	return
 10649                           	opt stack 0
 10650                           GLOBAL	__end_of___lwmod
 10651  14CF                     	__end_of___lwmod:
 10652 ;; =============== function ___lwmod ends ============
 10653                           
 10654                           	signat	___lwmod,8314
 10655                           	global	___lwdiv
 10656                           psect	text1070,local,class=CODE,delta=2
 10657                           global __ptext1070
 10658  1561                     __ptext1070:
 10659                           
 10660 ;; *************** function ___lwdiv *****************
 10661 ;; Defined at:
 10662 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  divisor         2    6[BANK0 ] unsigned int 
 10665 ;;  dividend        2    8[BANK0 ] unsigned int 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  quotient        2   11[BANK0 ] unsigned int 
 10668 ;;  counter         1   13[BANK0 ] unsigned char 
 10669 ;; Return value:  Size  Location     Type
 10670 ;;                  2    6[BANK0 ] unsigned int 
 10671 ;; Registers used:
 10672 ;;		wreg, status,2, status,0
 10673 ;; Tracked objects:
 10674 ;;		On entry : 0/0
 10675 ;;		On exit  : 0/0
 10676 ;;		Unchanged: 0/0
 10677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10678 ;;      Params:         0       4       0       0       0
 10679 ;;      Locals:         0       3       0       0       0
 10680 ;;      Temps:          0       1       0       0       0
 10681 ;;      Totals:         0       8       0       0       0
 10682 ;;Total ram usage:        8 bytes
 10683 ;; Hardware stack levels used:    1
 10684 ;; Hardware stack levels required when called:    3
 10685 ;; This function calls:
 10686 ;;		Nothing
 10687 ;; This function is called by:
 10688 ;;		_readAvgDistance
 10689 ;;		_ADCconvert
 10690 ;;		_sprintf
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           psect	text1070
 10694                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 10695                           	line	5
 10696                           	global	__size_of___lwdiv
 10697  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 10698                           	
 10699  1561                     ___lwdiv:	
 10700                           	opt	stack 1
 10701                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10702                           	line	9
 10703                           	
 10704  1561                     l10908:	
 10705  1561  1283               	bcf	status, 5	;RP0=0, select bank0
 10706  1562  1303               	bcf	status, 6	;RP1=0, select bank0
 10707  1563  01AB               	clrf	(___lwdiv@quotient)
 10708  1564  01AC               	clrf	(___lwdiv@quotient+1)
 10709                           	line	10
 10710                           	
 10711  1565                     l10910:	
 10712  1565  0827               	movf	(___lwdiv@divisor+1),w
 10713  1566  0426               	iorwf	(___lwdiv@divisor),w
 10714  1567  1903               	skipnz
 10715  1568  2D6A               	goto	u4221
 10716  1569  2D6B               	goto	u4220
 10717  156A                     u4221:
 10718  156A  2DA9               	goto	l10930
 10719  156B                     u4220:
 10720                           	line	11
 10721                           	
 10722  156B                     l10912:	
 10723  156B  01AD               	clrf	(___lwdiv@counter)
 10724  156C  1403               	bsf	status,0
 10725  156D  0DAD               	rlf	(___lwdiv@counter),f
 10726                           	line	12
 10727  156E  2D7B               	goto	l10918
 10728                           	
 10729  156F                     l7620:	
 10730                           	line	13
 10731                           	
 10732  156F                     l10914:	
 10733  156F  3001               	movlw	01h
 10734                           	
 10735  1570                     u4235:
 10736  1570  1003               	clrc
 10737  1571  0DA6               	rlf	(___lwdiv@divisor),f
 10738  1572  0DA7               	rlf	(___lwdiv@divisor+1),f
 10739  1573  3EFF               	addlw	-1
 10740  1574  1D03               	skipz
 10741  1575  2D70               	goto	u4235
 10742                           	line	14
 10743                           	
 10744  1576                     l10916:	
 10745  1576  3001               	movlw	(01h)
 10746  1577  00AA               	movwf	(??___lwdiv+0)+0
 10747  1578  082A               	movf	(??___lwdiv+0)+0,w
 10748  1579  07AD               	addwf	(___lwdiv@counter),f
 10749  157A  2D7B               	goto	l10918
 10750                           	line	15
 10751                           	
 10752  157B                     l7619:	
 10753                           	line	12
 10754                           	
 10755  157B                     l10918:	
 10756  157B  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 10757  157C  2D7E               	goto	u4241
 10758  157D  2D7F               	goto	u4240
 10759  157E                     u4241:
 10760  157E  2D6F               	goto	l10914
 10761  157F                     u4240:
 10762  157F  2D81               	goto	l10920
 10763                           	
 10764  1580                     l7621:	
 10765  1580  2D81               	goto	l10920
 10766                           	line	16
 10767                           	
 10768  1581                     l7622:	
 10769                           	line	17
 10770                           	
 10771  1581                     l10920:	
 10772  1581  3001               	movlw	01h
 10773                           	
 10774  1582                     u4255:
 10775  1582  1003               	clrc
 10776  1583  0DAB               	rlf	(___lwdiv@quotient),f
 10777  1584  0DAC               	rlf	(___lwdiv@quotient+1),f
 10778  1585  3EFF               	addlw	-1
 10779  1586  1D03               	skipz
 10780  1587  2D82               	goto	u4255
 10781                           	line	18
 10782  1588  0827               	movf	(___lwdiv@divisor+1),w
 10783  1589  0229               	subwf	(___lwdiv@dividend+1),w
 10784  158A  1D03               	skipz
 10785  158B  2D8E               	goto	u4265
 10786  158C  0826               	movf	(___lwdiv@divisor),w
 10787  158D  0228               	subwf	(___lwdiv@dividend),w
 10788  158E                     u4265:
 10789  158E  1C03               	skipc
 10790  158F  2D91               	goto	u4261
 10791  1590  2D92               	goto	u4260
 10792  1591                     u4261:
 10793  1591  2D9A               	goto	l10926
 10794  1592                     u4260:
 10795                           	line	19
 10796                           	
 10797  1592                     l10922:	
 10798  1592  0826               	movf	(___lwdiv@divisor),w
 10799  1593  02A8               	subwf	(___lwdiv@dividend),f
 10800  1594  0827               	movf	(___lwdiv@divisor+1),w
 10801  1595  1C03               	skipc
 10802  1596  03A9               	decf	(___lwdiv@dividend+1),f
 10803  1597  02A9               	subwf	(___lwdiv@dividend+1),f
 10804                           	line	20
 10805                           	
 10806  1598                     l10924:	
 10807  1598  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 10808  1599  2D9A               	goto	l10926
 10809                           	line	21
 10810                           	
 10811  159A                     l7623:	
 10812                           	line	22
 10813                           	
 10814  159A                     l10926:	
 10815  159A  3001               	movlw	01h
 10816                           	
 10817  159B                     u4275:
 10818  159B  1003               	clrc
 10819  159C  0CA7               	rrf	(___lwdiv@divisor+1),f
 10820  159D  0CA6               	rrf	(___lwdiv@divisor),f
 10821  159E  3EFF               	addlw	-1
 10822  159F  1D03               	skipz
 10823  15A0  2D9B               	goto	u4275
 10824                           	line	23
 10825                           	
 10826  15A1                     l10928:	
 10827  15A1  3001               	movlw	low(01h)
 10828  15A2  02AD               	subwf	(___lwdiv@counter),f
 10829  15A3  1D03               	btfss	status,2
 10830  15A4  2DA6               	goto	u4281
 10831  15A5  2DA7               	goto	u4280
 10832  15A6                     u4281:
 10833  15A6  2D81               	goto	l10920
 10834  15A7                     u4280:
 10835  15A7  2DA9               	goto	l10930
 10836                           	
 10837  15A8                     l7624:	
 10838  15A8  2DA9               	goto	l10930
 10839                           	line	24
 10840                           	
 10841  15A9                     l7618:	
 10842                           	line	25
 10843                           	
 10844  15A9                     l10930:	
 10845  15A9  082C               	movf	(___lwdiv@quotient+1),w
 10846  15AA  01A7               	clrf	(?___lwdiv+1)
 10847  15AB  07A7               	addwf	(?___lwdiv+1)
 10848  15AC  082B               	movf	(___lwdiv@quotient),w
 10849  15AD  01A6               	clrf	(?___lwdiv)
 10850  15AE  07A6               	addwf	(?___lwdiv)
 10851                           
 10852  15AF  2DB0               	goto	l7625
 10853                           	
 10854  15B0                     l10932:	
 10855                           	line	26
 10856                           	
 10857  15B0                     l7625:	
 10858  15B0  0008               	return
 10859                           	opt stack 0
 10860                           GLOBAL	__end_of___lwdiv
 10861  15B1                     	__end_of___lwdiv:
 10862 ;; =============== function ___lwdiv ends ============
 10863                           
 10864                           	signat	___lwdiv,8314
 10865                           	global	___wmul
 10866                           psect	text1071,local,class=CODE,delta=2
 10867                           global __ptext1071
 10868  125E                     __ptext1071:
 10869                           
 10870 ;; *************** function ___wmul *****************
 10871 ;; Defined at:
 10872 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10875 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;  product         2    4[BANK0 ] unsigned int 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  2    0[BANK0 ] unsigned int 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10887 ;;      Params:         0       4       0       0       0
 10888 ;;      Locals:         0       2       0       0       0
 10889 ;;      Temps:          0       0       0       0       0
 10890 ;;      Totals:         0       6       0       0       0
 10891 ;;Total ram usage:        6 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:    3
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_ADCconvert
 10898 ;;		_abs
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           psect	text1071
 10902                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10903                           	line	3
 10904                           	global	__size_of___wmul
 10905  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10906                           	
 10907  125E                     ___wmul:	
 10908                           	opt	stack 2
 10909                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10910                           	line	4
 10911                           	
 10912  125E                     l10896:	
 10913  125E  1283               	bcf	status, 5	;RP0=0, select bank0
 10914  125F  1303               	bcf	status, 6	;RP1=0, select bank0
 10915  1260  01A4               	clrf	(___wmul@product)
 10916  1261  01A5               	clrf	(___wmul@product+1)
 10917  1262  2A63               	goto	l10898
 10918                           	line	6
 10919                           	
 10920  1263                     l7612:	
 10921                           	line	7
 10922                           	
 10923  1263                     l10898:	
 10924  1263  1C20               	btfss	(___wmul@multiplier),(0)&7
 10925  1264  2A66               	goto	u4181
 10926  1265  2A67               	goto	u4180
 10927  1266                     u4181:
 10928  1266  2A6D               	goto	l7613
 10929  1267                     u4180:
 10930                           	line	8
 10931                           	
 10932  1267                     l10900:	
 10933  1267  0822               	movf	(___wmul@multiplicand),w
 10934  1268  07A4               	addwf	(___wmul@product),f
 10935  1269  1803               	skipnc
 10936  126A  0AA5               	incf	(___wmul@product+1),f
 10937  126B  0823               	movf	(___wmul@multiplicand+1),w
 10938  126C  07A5               	addwf	(___wmul@product+1),f
 10939                           	
 10940  126D                     l7613:	
 10941                           	line	9
 10942  126D  3001               	movlw	01h
 10943                           	
 10944  126E                     u4195:
 10945  126E  1003               	clrc
 10946  126F  0DA2               	rlf	(___wmul@multiplicand),f
 10947  1270  0DA3               	rlf	(___wmul@multiplicand+1),f
 10948  1271  3EFF               	addlw	-1
 10949  1272  1D03               	skipz
 10950  1273  2A6E               	goto	u4195
 10951                           	line	10
 10952                           	
 10953  1274                     l10902:	
 10954  1274  3001               	movlw	01h
 10955                           	
 10956  1275                     u4205:
 10957  1275  1003               	clrc
 10958  1276  0CA1               	rrf	(___wmul@multiplier+1),f
 10959  1277  0CA0               	rrf	(___wmul@multiplier),f
 10960  1278  3EFF               	addlw	-1
 10961  1279  1D03               	skipz
 10962  127A  2A75               	goto	u4205
 10963                           	line	11
 10964  127B  0821               	movf	((___wmul@multiplier+1)),w
 10965  127C  0420               	iorwf	((___wmul@multiplier)),w
 10966  127D  1D03               	skipz
 10967  127E  2A80               	goto	u4211
 10968  127F  2A81               	goto	u4210
 10969  1280                     u4211:
 10970  1280  2A63               	goto	l10898
 10971  1281                     u4210:
 10972  1281  2A82               	goto	l10904
 10973                           	
 10974  1282                     l7614:	
 10975                           	line	12
 10976                           	
 10977  1282                     l10904:	
 10978  1282  0825               	movf	(___wmul@product+1),w
 10979  1283  01A1               	clrf	(?___wmul+1)
 10980  1284  07A1               	addwf	(?___wmul+1)
 10981  1285  0824               	movf	(___wmul@product),w
 10982  1286  01A0               	clrf	(?___wmul)
 10983  1287  07A0               	addwf	(?___wmul)
 10984                           
 10985  1288  2A89               	goto	l7615
 10986                           	
 10987  1289                     l10906:	
 10988                           	line	13
 10989                           	
 10990  1289                     l7615:	
 10991  1289  0008               	return
 10992                           	opt stack 0
 10993                           GLOBAL	__end_of___wmul
 10994  128A                     	__end_of___wmul:
 10995 ;; =============== function ___wmul ends ============
 10996                           
 10997                           	signat	___wmul,8314
 10998                           	global	_ser_isrx
 10999                           psect	text1072,local,class=CODE,delta=2
 11000                           global __ptext1072
 11001  1162                     __ptext1072:
 11002                           
 11003 ;; *************** function _ser_isrx *****************
 11004 ;; Defined at:
 11005 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;		None
 11010 ;; Return value:  Size  Location     Type
 11011 ;;		None               void
 11012 ;; Registers used:
 11013 ;;		wreg, status,2, status,0
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11019 ;;      Params:         0       0       0       0       0
 11020 ;;      Locals:         0       0       0       0       0
 11021 ;;      Temps:          0       0       0       0       0
 11022 ;;      Totals:         0       0       0       0       0
 11023 ;;Total ram usage:        0 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:    3
 11026 ;; This function calls:
 11027 ;;		Nothing
 11028 ;; This function is called by:
 11029 ;;		_ser_getch
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           psect	text1072
 11033                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11034                           	line	45
 11035                           	global	__size_of_ser_isrx
 11036  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11037                           	
 11038  1162                     _ser_isrx:	
 11039                           	opt	stack 1
 11040                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11041                           	line	46
 11042                           	
 11043  1162                     l10848:	
 11044                           ;ser.c: 46: if(OERR) {
 11045  1162  1283               	bcf	status, 5	;RP0=0, select bank0
 11046  1163  1303               	bcf	status, 6	;RP1=0, select bank0
 11047  1164  1C98               	btfss	(193/8),(193)&7
 11048  1165  2967               	goto	u4111
 11049  1166  2968               	goto	u4110
 11050  1167                     u4111:
 11051  1167  296D               	goto	l10856
 11052  1168                     u4110:
 11053                           	line	47
 11054                           	
 11055  1168                     l10850:	
 11056                           ;ser.c: 47: CREN = 0;
 11057  1168  1218               	bcf	(196/8),(196)&7
 11058                           	line	48
 11059                           ;ser.c: 48: CREN = 1;
 11060  1169  1618               	bsf	(196/8),(196)&7
 11061                           	line	49
 11062                           	
 11063  116A                     l10852:	
 11064                           ;ser.c: 49: return 0;
 11065  116A  1003               	clrc
 11066                           	
 11067  116B  297A               	goto	l6867
 11068                           	
 11069  116C                     l10854:	
 11070  116C  297A               	goto	l6867
 11071                           	line	50
 11072                           	
 11073  116D                     l6866:	
 11074                           	line	51
 11075                           	
 11076  116D                     l10856:	
 11077                           ;ser.c: 50: }
 11078                           ;ser.c: 51: return (rxiptr!=rxoptr);
 11079  116D  1683               	bsf	status, 5	;RP0=1, select bank1
 11080  116E  1303               	bcf	status, 6	;RP1=0, select bank1
 11081  116F  0857               	movf	(_rxiptr)^080h,w	;volatile
 11082  1170  0658               	xorwf	(_rxoptr)^080h,w	;volatile
 11083  1171  1D03               	skipz
 11084  1172  2974               	goto	u4121
 11085  1173  2975               	goto	u4120
 11086  1174                     u4121:
 11087  1174  2977               	goto	l10860
 11088  1175                     u4120:
 11089                           	
 11090  1175                     l10858:	
 11091  1175  1003               	clrc
 11092                           	
 11093  1176  297A               	goto	l6867
 11094                           	
 11095  1177                     l10576:	
 11096                           	
 11097  1177                     l10860:	
 11098  1177  1403               	setc
 11099                           	
 11100  1178  297A               	goto	l6867
 11101                           	
 11102  1179                     l10578:	
 11103  1179  297A               	goto	l6867
 11104                           	
 11105  117A                     l10862:	
 11106                           	line	52
 11107                           	
 11108  117A                     l6867:	
 11109  117A  0008               	return
 11110                           	opt stack 0
 11111                           GLOBAL	__end_of_ser_isrx
 11112  117B                     	__end_of_ser_isrx:
 11113 ;; =============== function _ser_isrx ends ============
 11114                           
 11115                           	signat	_ser_isrx,88
 11116                           	global	_spi_transfer
 11117                           psect	text1073,local,class=CODE,delta=2
 11118                           global __ptext1073
 11119  110E                     __ptext1073:
 11120                           
 11121 ;; *************** function _spi_transfer *****************
 11122 ;; Defined at:
 11123 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  data            1    wreg     unsigned char 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  data            1    2[BANK0 ] unsigned char 
 11128 ;;  temp            1    1[BANK0 ] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      unsigned char 
 11131 ;; Registers used:
 11132 ;;		wreg
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11138 ;;      Params:         0       0       0       0       0
 11139 ;;      Locals:         0       2       0       0       0
 11140 ;;      Temps:          0       1       0       0       0
 11141 ;;      Totals:         0       3       0       0       0
 11142 ;;Total ram usage:        3 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    3
 11145 ;; This function calls:
 11146 ;;		Nothing
 11147 ;; This function is called by:
 11148 ;;		_rotate
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           psect	text1073
 11152                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11153                           	line	50
 11154                           	global	__size_of_spi_transfer
 11155  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 11156                           	
 11157  110E                     _spi_transfer:	
 11158                           	opt	stack 3
 11159                           ; Regs used in _spi_transfer: [wreg]
 11160                           ;spi_transfer@data stored from wreg
 11161  110E  1283               	bcf	status, 5	;RP0=0, select bank0
 11162  110F  1303               	bcf	status, 6	;RP1=0, select bank0
 11163  1110  00A2               	movwf	(spi_transfer@data)
 11164                           	line	51
 11165                           	
 11166  1111                     l10796:	
 11167                           ;steppermotor.c: 51: unsigned char temp = 0;
 11168  1111  01A1               	clrf	(spi_transfer@temp)
 11169                           	line	53
 11170                           ;steppermotor.c: 53: SSPIF = 0;
 11171  1112  118C               	bcf	(99/8),(99)&7
 11172                           	line	54
 11173                           	
 11174  1113                     l10798:	
 11175                           ;steppermotor.c: 54: SSPBUF = data;
 11176  1113  0822               	movf	(spi_transfer@data),w
 11177  1114  0093               	movwf	(19)	;volatile
 11178                           	line	56
 11179                           ;steppermotor.c: 56: while (SSPIF == 0);
 11180  1115  2916               	goto	l3743
 11181                           	
 11182  1116                     l3744:	
 11183                           	
 11184  1116                     l3743:	
 11185  1116  1D8C               	btfss	(99/8),(99)&7
 11186  1117  2919               	goto	u3951
 11187  1118  291A               	goto	u3950
 11188  1119                     u3951:
 11189  1119  2916               	goto	l3743
 11190  111A                     u3950:
 11191  111A  291B               	goto	l10800
 11192                           	
 11193  111B                     l3745:	
 11194                           	line	57
 11195                           	
 11196  111B                     l10800:	
 11197                           ;steppermotor.c: 57: temp = SSPBUF;
 11198  111B  0813               	movf	(19),w	;volatile
 11199  111C  00A0               	movwf	(??_spi_transfer+0)+0
 11200  111D  0820               	movf	(??_spi_transfer+0)+0,w
 11201  111E  00A1               	movwf	(spi_transfer@temp)
 11202                           	line	58
 11203                           	
 11204  111F                     l10802:	
 11205                           ;steppermotor.c: 58: SSPIF = 0;
 11206  111F  118C               	bcf	(99/8),(99)&7
 11207  1120  2921               	goto	l3746
 11208                           	line	60
 11209                           	
 11210  1121                     l10804:	
 11211                           	line	61
 11212                           ;steppermotor.c: 60: return temp;
 11213                           ;	Return value of _spi_transfer is never used
 11214                           	
 11215  1121                     l3746:	
 11216  1121  0008               	return
 11217                           	opt stack 0
 11218                           GLOBAL	__end_of_spi_transfer
 11219  1122                     	__end_of_spi_transfer:
 11220 ;; =============== function _spi_transfer ends ============
 11221                           
 11222                           	signat	_spi_transfer,4217
 11223                           	global	_ser_putch
 11224                           psect	text1074,local,class=CODE,delta=2
 11225                           global __ptext1074
 11226  12E2                     __ptext1074:
 11227                           
 11228 ;; *************** function _ser_putch *****************
 11229 ;; Defined at:
 11230 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;  c               1    wreg     unsigned char 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  c               1    1[BANK0 ] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;		None               void
 11237 ;; Registers used:
 11238 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11244 ;;      Params:         0       0       0       0       0
 11245 ;;      Locals:         0       1       0       0       0
 11246 ;;      Temps:          0       1       0       0       0
 11247 ;;      Totals:         0       2       0       0       0
 11248 ;;Total ram usage:        2 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    3
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_main
 11255 ;;		_ChargeMode
 11256 ;;		_robo_init
 11257 ;;		_robot_read
 11258 ;;		_RobotDrive
 11259 ;;		_robotTurn
 11260 ;;		_robotLoadSong
 11261 ;;		_robot_turnRight
 11262 ;;		_RobotBattRead
 11263 ;;		_ser_puts
 11264 ;;		_ser_puts2
 11265 ;;		_ser_puthex
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           psect	text1074
 11269                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11270                           	line	70
 11271                           	global	__size_of_ser_putch
 11272  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 11273                           	
 11274  12E2                     _ser_putch:	
 11275                           	opt	stack 2
 11276                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 11277                           ;ser_putch@c stored from wreg
 11278  12E2  1283               	bcf	status, 5	;RP0=0, select bank0
 11279  12E3  1303               	bcf	status, 6	;RP1=0, select bank0
 11280  12E4  00A1               	movwf	(ser_putch@c)
 11281                           	line	71
 11282                           	
 11283  12E5                     l10754:	
 11284                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 11285  12E5  2AE7               	goto	l10756
 11286                           	
 11287  12E6                     l6877:	
 11288                           	line	72
 11289                           ;ser.c: 72: continue;
 11290  12E6  2AE7               	goto	l10756
 11291                           	
 11292  12E7                     l6876:	
 11293                           	line	71
 11294                           	
 11295  12E7                     l10756:	
 11296  12E7  1683               	bsf	status, 5	;RP0=1, select bank1
 11297  12E8  1303               	bcf	status, 6	;RP1=0, select bank1
 11298  12E9  085C               	movf	(_txiptr)^080h,w	;volatile
 11299  12EA  3E01               	addlw	01h
 11300  12EB  390F               	andlw	0Fh
 11301  12EC  065D               	xorwf	(_txoptr)^080h,w	;volatile
 11302  12ED  1903               	skipnz
 11303  12EE  2AF0               	goto	u3901
 11304  12EF  2AF1               	goto	u3900
 11305  12F0                     u3901:
 11306  12F0  2AE7               	goto	l10756
 11307  12F1                     u3900:
 11308                           	
 11309  12F1                     l6878:	
 11310                           	line	73
 11311                           ;ser.c: 73: GIE=0;
 11312  12F1  138B               	bcf	(95/8),(95)&7
 11313                           	line	74
 11314                           	
 11315  12F2                     l10758:	
 11316                           ;ser.c: 74: txfifo[txiptr] = c;
 11317  12F2  1283               	bcf	status, 5	;RP0=0, select bank0
 11318  12F3  1303               	bcf	status, 6	;RP1=0, select bank0
 11319  12F4  0821               	movf	(ser_putch@c),w
 11320  12F5  00A0               	movwf	(??_ser_putch+0)+0
 11321  12F6  1683               	bsf	status, 5	;RP0=1, select bank1
 11322  12F7  1303               	bcf	status, 6	;RP1=0, select bank1
 11323  12F8  085C               	movf	(_txiptr)^080h,w
 11324  12F9  3EA0               	addlw	_txfifo&0ffh
 11325  12FA  0084               	movwf	fsr0
 11326  12FB  1283               	bcf	status, 5	;RP0=0, select bank0
 11327  12FC  1303               	bcf	status, 6	;RP1=0, select bank0
 11328  12FD  0820               	movf	(??_ser_putch+0)+0,w
 11329  12FE  1783               	bsf	status, 7	;select IRP bank3
 11330  12FF  0080               	movwf	indf
 11331                           	line	75
 11332                           	
 11333  1300                     l10760:	
 11334                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 11335  1300  1683               	bsf	status, 5	;RP0=1, select bank1
 11336  1301  1303               	bcf	status, 6	;RP1=0, select bank1
 11337  1302  085C               	movf	(_txiptr)^080h,w	;volatile
 11338  1303  3E01               	addlw	01h
 11339  1304  390F               	andlw	0Fh
 11340  1305  1283               	bcf	status, 5	;RP0=0, select bank0
 11341  1306  1303               	bcf	status, 6	;RP1=0, select bank0
 11342  1307  00A0               	movwf	(??_ser_putch+0)+0
 11343  1308  0820               	movf	(??_ser_putch+0)+0,w
 11344  1309  1683               	bsf	status, 5	;RP0=1, select bank1
 11345  130A  1303               	bcf	status, 6	;RP1=0, select bank1
 11346  130B  00DC               	movwf	(_txiptr)^080h	;volatile
 11347                           	line	76
 11348                           	
 11349  130C                     l10762:	
 11350                           ;ser.c: 76: TXIE=1;
 11351  130C  160C               	bsf	(1124/8)^080h,(1124)&7
 11352                           	line	77
 11353                           	
 11354  130D                     l10764:	
 11355                           ;ser.c: 77: GIE=1;
 11356  130D  178B               	bsf	(95/8),(95)&7
 11357                           	line	78
 11358                           	
 11359  130E                     l6879:	
 11360  130E  0008               	return
 11361                           	opt stack 0
 11362                           GLOBAL	__end_of_ser_putch
 11363  130F                     	__end_of_ser_putch:
 11364 ;; =============== function _ser_putch ends ============
 11365                           
 11366                           	signat	_ser_putch,4216
 11367                           	global	_Menu
 11368                           psect	text1075,local,class=CODE,delta=2
 11369                           global __ptext1075
 11370  14CF                     __ptext1075:
 11371                           
 11372 ;; *************** function _Menu *****************
 11373 ;; Defined at:
 11374 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  BTN_input       1    wreg     unsigned char 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      unsigned char 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11388 ;;      Params:         0       0       0       0       0
 11389 ;;      Locals:         0       1       0       0       0
 11390 ;;      Temps:          0       0       0       0       0
 11391 ;;      Totals:         0       1       0       0       0
 11392 ;;Total ram usage:        1 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    3
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_main
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           psect	text1075
 11402                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11403                           	line	201
 11404                           	global	__size_of_Menu
 11405  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 11406                           	
 11407  14CF                     _Menu:	
 11408                           	opt	stack 4
 11409                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 11410                           ;Menu@BTN_input stored from wreg
 11411  14CF  1283               	bcf	status, 5	;RP0=0, select bank0
 11412  14D0  1303               	bcf	status, 6	;RP1=0, select bank0
 11413  14D1  00A0               	movwf	(Menu@BTN_input)
 11414                           	line	202
 11415                           	
 11416  14D2                     l10730:	
 11417                           ;HMI.c: 202: switch (BTN_input)
 11418  14D2  2D01               	goto	l10748
 11419                           	line	204
 11420                           ;HMI.c: 203: {
 11421                           ;HMI.c: 204: case 1:
 11422                           	
 11423  14D3                     l4562:	
 11424                           	line	206
 11425                           ;HMI.c: 206: break;
 11426  14D3  2D13               	goto	l10750
 11427                           	line	207
 11428                           ;HMI.c: 207: case 2:
 11429                           	
 11430  14D4                     l4564:	
 11431                           	line	209
 11432                           ;HMI.c: 209: break;
 11433  14D4  2D13               	goto	l10750
 11434                           	line	210
 11435                           ;HMI.c: 210: case 3:
 11436                           	
 11437  14D5                     l4565:	
 11438                           	line	211
 11439                           	
 11440  14D5                     l10732:	
 11441                           ;HMI.c: 211: pos--;
 11442  14D5  30FF               	movlw	low(-1)
 11443  14D6  1683               	bsf	status, 5	;RP0=1, select bank1
 11444  14D7  1303               	bcf	status, 6	;RP1=0, select bank1
 11445  14D8  07C6               	addwf	(_pos)^080h,f
 11446  14D9  1803               	skipnc
 11447  14DA  0AC7               	incf	(_pos+1)^080h,f
 11448  14DB  30FF               	movlw	high(-1)
 11449  14DC  07C7               	addwf	(_pos+1)^080h,f
 11450                           	line	212
 11451                           	
 11452  14DD                     l10734:	
 11453                           ;HMI.c: 212: if (pos < 0)
 11454  14DD  1FC7               	btfss	(_pos+1)^080h,7
 11455  14DE  2CE0               	goto	u3881
 11456  14DF  2CE1               	goto	u3880
 11457  14E0                     u3881:
 11458  14E0  2D13               	goto	l10750
 11459  14E1                     u3880:
 11460                           	line	213
 11461                           	
 11462  14E1                     l10736:	
 11463                           ;HMI.c: 213: pos = 6 - 1;
 11464  14E1  3005               	movlw	low(05h)
 11465  14E2  00C6               	movwf	(_pos)^080h
 11466  14E3  3000               	movlw	high(05h)
 11467  14E4  00C7               	movwf	((_pos)^080h)+1
 11468  14E5  2D13               	goto	l10750
 11469                           	
 11470  14E6                     l4566:	
 11471                           	line	215
 11472                           ;HMI.c: 215: break;
 11473  14E6  2D13               	goto	l10750
 11474                           	line	216
 11475                           ;HMI.c: 216: case 4:
 11476                           	
 11477  14E7                     l4567:	
 11478                           	line	217
 11479                           	
 11480  14E7                     l10738:	
 11481                           ;HMI.c: 217: pos++;
 11482  14E7  3001               	movlw	low(01h)
 11483  14E8  1683               	bsf	status, 5	;RP0=1, select bank1
 11484  14E9  1303               	bcf	status, 6	;RP1=0, select bank1
 11485  14EA  07C6               	addwf	(_pos)^080h,f
 11486  14EB  1803               	skipnc
 11487  14EC  0AC7               	incf	(_pos+1)^080h,f
 11488  14ED  3000               	movlw	high(01h)
 11489  14EE  07C7               	addwf	(_pos+1)^080h,f
 11490                           	line	218
 11491                           ;HMI.c: 218: if (pos == 6)
 11492  14EF  3006               	movlw	06h
 11493  14F0  0646               	xorwf	(_pos)^080h,w
 11494  14F1  0447               	iorwf	(_pos+1)^080h,w
 11495  14F2  1D03               	skipz
 11496  14F3  2CF5               	goto	u3891
 11497  14F4  2CF6               	goto	u3890
 11498  14F5                     u3891:
 11499  14F5  2D13               	goto	l10750
 11500  14F6                     u3890:
 11501                           	line	219
 11502                           	
 11503  14F6                     l10740:	
 11504                           ;HMI.c: 219: pos = 0;
 11505  14F6  01C6               	clrf	(_pos)^080h
 11506  14F7  01C7               	clrf	(_pos+1)^080h
 11507  14F8  2D13               	goto	l10750
 11508                           	
 11509  14F9                     l4568:	
 11510                           	line	221
 11511                           ;HMI.c: 221: break;
 11512  14F9  2D13               	goto	l10750
 11513                           	line	222
 11514                           ;HMI.c: 222: case 5:
 11515                           	
 11516  14FA                     l4569:	
 11517                           	line	223
 11518                           	
 11519  14FA                     l10742:	
 11520                           ;HMI.c: 223: return pos;
 11521  14FA  1683               	bsf	status, 5	;RP0=1, select bank1
 11522  14FB  1303               	bcf	status, 6	;RP1=0, select bank1
 11523  14FC  0846               	movf	(_pos)^080h,w
 11524  14FD  2D15               	goto	l4570
 11525                           	
 11526  14FE                     l10744:	
 11527  14FE  2D15               	goto	l4570
 11528                           	line	226
 11529                           ;HMI.c: 226: default:
 11530                           	
 11531  14FF                     l4571:	
 11532                           	line	228
 11533                           ;HMI.c: 228: break;
 11534  14FF  2D13               	goto	l10750
 11535                           	line	229
 11536                           	
 11537  1500                     l10746:	
 11538                           ;HMI.c: 229: }
 11539  1500  2D13               	goto	l10750
 11540                           	line	202
 11541                           	
 11542  1501                     l4561:	
 11543                           	
 11544  1501                     l10748:	
 11545  1501  1283               	bcf	status, 5	;RP0=0, select bank0
 11546  1502  0820               	movf	(Menu@BTN_input),w
 11547                           	; Switch size 1, requested type "space"
 11548                           ; Number of cases is 5, Range of values is 1 to 5
 11549                           ; switch strategies available:
 11550                           ; Name         Instructions Cycles
 11551                           ; simple_byte           16     9 (average)
 11552                           ; direct_byte           26    11 (fixed)
 11553                           ; jumptable            263     9 (fixed)
 11554                           ;	Chosen strategy is simple_byte
 11555                           
 11556                           	opt asmopt_off
 11557  1503  3A01               	xorlw	1^0	; case 1
 11558  1504  1903               	skipnz
 11559  1505  2D13               	goto	l10750
 11560  1506  3A03               	xorlw	2^1	; case 2
 11561  1507  1903               	skipnz
 11562  1508  2D13               	goto	l10750
 11563  1509  3A01               	xorlw	3^2	; case 3
 11564  150A  1903               	skipnz
 11565  150B  2CD5               	goto	l10732
 11566  150C  3A07               	xorlw	4^3	; case 4
 11567  150D  1903               	skipnz
 11568  150E  2CE7               	goto	l10738
 11569  150F  3A01               	xorlw	5^4	; case 5
 11570  1510  1903               	skipnz
 11571  1511  2CFA               	goto	l10742
 11572  1512  2D13               	goto	l10750
 11573                           	opt asmopt_on
 11574                           
 11575                           	line	229
 11576                           	
 11577  1513                     l4563:	
 11578                           	line	230
 11579                           	
 11580  1513                     l10750:	
 11581                           ;HMI.c: 230: return 255;
 11582  1513  30FF               	movlw	(0FFh)
 11583  1514  2D15               	goto	l4570
 11584                           	
 11585  1515                     l10752:	
 11586                           	line	231
 11587                           	
 11588  1515                     l4570:	
 11589  1515  0008               	return
 11590                           	opt stack 0
 11591                           GLOBAL	__end_of_Menu
 11592  1516                     	__end_of_Menu:
 11593 ;; =============== function _Menu ends ============
 11594                           
 11595                           	signat	_Menu,4217
 11596                           	global	_ser_init
 11597                           psect	text1076,local,class=CODE,delta=2
 11598                           global __ptext1076
 11599  11DE                     __ptext1076:
 11600                           
 11601 ;; *************** function _ser_init *****************
 11602 ;; Defined at:
 11603 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;		None               void
 11610 ;; Registers used:
 11611 ;;		wreg, status,2, status,0
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11617 ;;      Params:         0       0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0
 11619 ;;      Temps:          0       1       0       0       0
 11620 ;;      Totals:         0       1       0       0       0
 11621 ;;Total ram usage:        1 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    3
 11624 ;; This function calls:
 11625 ;;		Nothing
 11626 ;; This function is called by:
 11627 ;;		_init
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           psect	text1076
 11631                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11632                           	line	113
 11633                           	global	__size_of_ser_init
 11634  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 11635                           	
 11636  11DE                     _ser_init:	
 11637                           	opt	stack 3
 11638                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 11639                           	line	114
 11640                           	
 11641  11DE                     l10704:	
 11642                           ;ser.c: 114: TRISC |= 0b10000000;
 11643  11DE  1683               	bsf	status, 5	;RP0=1, select bank1
 11644  11DF  1303               	bcf	status, 6	;RP1=0, select bank1
 11645  11E0  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 11646                           	line	115
 11647                           	
 11648  11E1                     l10706:	
 11649                           ;ser.c: 115: TRISC &= 0b10111111;
 11650  11E1  30BF               	movlw	(0BFh)
 11651  11E2  1283               	bcf	status, 5	;RP0=0, select bank0
 11652  11E3  1303               	bcf	status, 6	;RP1=0, select bank0
 11653  11E4  00A0               	movwf	(??_ser_init+0)+0
 11654  11E5  0820               	movf	(??_ser_init+0)+0,w
 11655  11E6  1683               	bsf	status, 5	;RP0=1, select bank1
 11656  11E7  1303               	bcf	status, 6	;RP1=0, select bank1
 11657  11E8  0587               	andwf	(135)^080h,f	;volatile
 11658                           	line	116
 11659                           	
 11660  11E9                     l10708:	
 11661                           ;ser.c: 116: BRGH=1;
 11662  11E9  1518               	bsf	(1218/8)^080h,(1218)&7
 11663                           	line	118
 11664                           	
 11665  11EA                     l10710:	
 11666                           ;ser.c: 118: SPBRG=20;
 11667  11EA  3014               	movlw	(014h)
 11668  11EB  0099               	movwf	(153)^080h	;volatile
 11669                           	line	121
 11670                           	
 11671  11EC                     l10712:	
 11672                           ;ser.c: 121: TX9=0;
 11673  11EC  1318               	bcf	(1222/8)^080h,(1222)&7
 11674                           	line	122
 11675                           	
 11676  11ED                     l10714:	
 11677                           ;ser.c: 122: RX9=0;
 11678  11ED  1283               	bcf	status, 5	;RP0=0, select bank0
 11679  11EE  1303               	bcf	status, 6	;RP1=0, select bank0
 11680  11EF  1318               	bcf	(198/8),(198)&7
 11681                           	line	124
 11682                           	
 11683  11F0                     l10716:	
 11684                           ;ser.c: 124: SYNC=0;
 11685  11F0  1683               	bsf	status, 5	;RP0=1, select bank1
 11686  11F1  1303               	bcf	status, 6	;RP1=0, select bank1
 11687  11F2  1218               	bcf	(1220/8)^080h,(1220)&7
 11688                           	line	125
 11689                           	
 11690  11F3                     l10718:	
 11691                           ;ser.c: 125: SPEN=1;
 11692  11F3  1283               	bcf	status, 5	;RP0=0, select bank0
 11693  11F4  1303               	bcf	status, 6	;RP1=0, select bank0
 11694  11F5  1798               	bsf	(199/8),(199)&7
 11695                           	line	126
 11696                           	
 11697  11F6                     l10720:	
 11698                           ;ser.c: 126: CREN=1;
 11699  11F6  1618               	bsf	(196/8),(196)&7
 11700                           	line	127
 11701                           	
 11702  11F7                     l10722:	
 11703                           ;ser.c: 127: TXIE=0;
 11704  11F7  1683               	bsf	status, 5	;RP0=1, select bank1
 11705  11F8  1303               	bcf	status, 6	;RP1=0, select bank1
 11706  11F9  120C               	bcf	(1124/8)^080h,(1124)&7
 11707                           	line	128
 11708                           	
 11709  11FA                     l10724:	
 11710                           ;ser.c: 128: RCIE=1;
 11711  11FA  168C               	bsf	(1125/8)^080h,(1125)&7
 11712                           	line	129
 11713                           	
 11714  11FB                     l10726:	
 11715                           ;ser.c: 129: TXEN=1;
 11716  11FB  1698               	bsf	(1221/8)^080h,(1221)&7
 11717                           	line	132
 11718                           	
 11719  11FC                     l10728:	
 11720                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 11721  11FC  3000               	movlw	(0)
 11722  11FD  00DD               	movwf	(_txoptr)^080h	;volatile
 11723  11FE  00DC               	movwf	(_txiptr)^080h	;volatile
 11724  11FF  00D8               	movwf	(_rxoptr)^080h	;volatile
 11725  1200  1283               	bcf	status, 5	;RP0=0, select bank0
 11726  1201  1303               	bcf	status, 6	;RP1=0, select bank0
 11727  1202  00A0               	movwf	(??_ser_init+0)+0
 11728  1203  0820               	movf	(??_ser_init+0)+0,w
 11729  1204  1683               	bsf	status, 5	;RP0=1, select bank1
 11730  1205  1303               	bcf	status, 6	;RP1=0, select bank1
 11731  1206  00D7               	movwf	(_rxiptr)^080h	;volatile
 11732                           	line	133
 11733                           	
 11734  1207                     l6901:	
 11735  1207  0008               	return
 11736                           	opt stack 0
 11737                           GLOBAL	__end_of_ser_init
 11738  1208                     	__end_of_ser_init:
 11739 ;; =============== function _ser_init ends ============
 11740                           
 11741                           	signat	_ser_init,88
 11742                           	global	_adc_read
 11743                           psect	text1077,local,class=CODE,delta=2
 11744                           global __ptext1077
 11745  11B5                     __ptext1077:
 11746                           
 11747 ;; *************** function _adc_read *****************
 11748 ;; Defined at:
 11749 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  2    0[BANK0 ] unsigned int 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2, status,0
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11763 ;;      Params:         0       2       0       0       0
 11764 ;;      Locals:         0       2       0       0       0
 11765 ;;      Temps:          0       2       0       0       0
 11766 ;;      Totals:         0       6       0       0       0
 11767 ;;Total ram usage:        6 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    3
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_adc_read_channel
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           psect	text1077
 11777                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 11778                           	line	76
 11779                           	global	__size_of_adc_read
 11780  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 11781                           	
 11782  11B5                     _adc_read:	
 11783                           	opt	stack 0
 11784                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 11785                           	line	79
 11786                           	
 11787  11B5                     l10584:	
 11788                           ;adc.c: 77: volatile unsigned int adc_value;
 11789                           ;adc.c: 79: ADRESH = 0;
 11790  11B5  1283               	bcf	status, 5	;RP0=0, select bank0
 11791  11B6  1303               	bcf	status, 6	;RP1=0, select bank0
 11792  11B7  019E               	clrf	(30)	;volatile
 11793                           	line	81
 11794                           	
 11795  11B8                     l10586:	
 11796                           ;adc.c: 81: GO = 1;
 11797  11B8  151F               	bsf	(250/8),(250)&7
 11798                           	line	82
 11799                           ;adc.c: 82: while(GO) continue;
 11800  11B9  29BA               	goto	l703
 11801                           	
 11802  11BA                     l704:	
 11803                           	
 11804  11BA                     l703:	
 11805  11BA  191F               	btfsc	(250/8),(250)&7
 11806  11BB  29BD               	goto	u3691
 11807  11BC  29BE               	goto	u3690
 11808  11BD                     u3691:
 11809  11BD  29BA               	goto	l703
 11810  11BE                     u3690:
 11811                           	
 11812  11BE                     l705:	
 11813                           	line	83
 11814                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11815  11BE  0000               nop ;#
 11816                           	line	84
 11817                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11818  11BF  0000               nop ;#
 11819                           	line	85
 11820                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11821  11C0  0000               nop ;#
 11822                           psect	text1077
 11823                           	line	88
 11824                           	
 11825  11C1                     l10588:	
 11826                           ;adc.c: 88: adc_value = ADRESH;
 11827  11C1  1283               	bcf	status, 5	;RP0=0, select bank0
 11828  11C2  1303               	bcf	status, 6	;RP1=0, select bank0
 11829  11C3  081E               	movf	(30),w	;volatile
 11830  11C4  00A2               	movwf	(??_adc_read+0)+0
 11831  11C5  01A3               	clrf	(??_adc_read+0)+0+1
 11832  11C6  0822               	movf	0+(??_adc_read+0)+0,w
 11833  11C7  00A4               	movwf	(adc_read@adc_value)	;volatile
 11834  11C8  0823               	movf	1+(??_adc_read+0)+0,w
 11835  11C9  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 11836                           	line	89
 11837                           ;adc.c: 89: adc_value <<= 1;
 11838  11CA  3001               	movlw	01h
 11839                           	
 11840  11CB                     u3705:
 11841  11CB  1003               	clrc
 11842  11CC  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 11843  11CD  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 11844  11CE  3EFF               	addlw	-1
 11845  11CF  1D03               	skipz
 11846  11D0  29CB               	goto	u3705
 11847                           	line	90
 11848                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 11849  11D1  1683               	bsf	status, 5	;RP0=1, select bank1
 11850  11D2  1303               	bcf	status, 6	;RP1=0, select bank1
 11851  11D3  081E               	movf	(158)^080h,w	;volatile
 11852                           	line	93
 11853                           	
 11854  11D4                     l10590:	
 11855                           ;adc.c: 93: return (adc_value);
 11856  11D4  1283               	bcf	status, 5	;RP0=0, select bank0
 11857  11D5  1303               	bcf	status, 6	;RP1=0, select bank0
 11858  11D6  0825               	movf	(adc_read@adc_value+1),w	;volatile
 11859  11D7  01A1               	clrf	(?_adc_read+1)
 11860  11D8  07A1               	addwf	(?_adc_read+1)
 11861  11D9  0824               	movf	(adc_read@adc_value),w	;volatile
 11862  11DA  01A0               	clrf	(?_adc_read)
 11863  11DB  07A0               	addwf	(?_adc_read)
 11864                           
 11865  11DC  29DD               	goto	l706
 11866                           	
 11867  11DD                     l10592:	
 11868                           	line	94
 11869                           	
 11870  11DD                     l706:	
 11871  11DD  0008               	return
 11872                           	opt stack 0
 11873                           GLOBAL	__end_of_adc_read
 11874  11DE                     	__end_of_adc_read:
 11875 ;; =============== function _adc_read ends ============
 11876                           
 11877                           	signat	_adc_read,90
 11878                           	global	_isr1
 11879                           psect	text1078,local,class=CODE,delta=2
 11880                           global __ptext1078
 11881  092C                     __ptext1078:
 11882                           
 11883 ;; *************** function _isr1 *****************
 11884 ;; Defined at:
 11885 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;		None
 11890 ;; Return value:  Size  Location     Type
 11891 ;;		None               void
 11892 ;; Registers used:
 11893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11899 ;;      Params:         0       0       0       0       0
 11900 ;;      Locals:         0       0       0       0       0
 11901 ;;      Temps:          5       0       0       0       0
 11902 ;;      Totals:         5       0       0       0       0
 11903 ;;Total ram usage:        5 bytes
 11904 ;; Hardware stack levels used:    1
 11905 ;; Hardware stack levels required when called:    2
 11906 ;; This function calls:
 11907 ;;		i1___lwmod
 11908 ;;		_ReadButtons
 11909 ;; This function is called by:
 11910 ;;		Interrupt level 1
 11911 ;; This function uses a non-reentrant model
 11912 ;;
 11913                           psect	text1078
 11914                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 11915                           	line	109
 11916                           	global	__size_of_isr1
 11917  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11918                           	
 11919  092C                     _isr1:	
 11920                           	opt	stack 0
 11921                           ; Regs used in _isr1: [allreg]
 11922                           psect	intentry,class=CODE,delta=2
 11923                           global __pintentry
 11924  0004                     __pintentry:
 11925                           global interrupt_function
 11926  0004                     interrupt_function:
 11927                           	global saved_w
 11928  007E                     	saved_w	set	btemp+0
 11929  0004  00FE               	movwf	saved_w
 11930  0005  0E03               	swapf	status,w
 11931  0006  00F9               	movwf	(??_isr1+1)
 11932  0007  0804               	movf	fsr0,w
 11933  0008  00FA               	movwf	(??_isr1+2)
 11934  0009  080A               	movf	pclath,w
 11935  000A  00FB               	movwf	(??_isr1+3)
 11936  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 11937  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 11938  000D  087F               	movf	btemp+1,w
 11939  000E  00FC               	movwf	(??_isr1+4)
 11940  000F  120A  158A  292C   	ljmp	_isr1
 11941                           psect	text1078
 11942                           	line	110
 11943                           	
 11944  092C                     i1l10620:	
 11945                           ;Main.c: 110: if(TMR0IF)
 11946  092C  1D0B               	btfss	(90/8),(90)&7
 11947  092D  292F               	goto	u374_21
 11948  092E  2930               	goto	u374_20
 11949  092F                     u374_21:
 11950  092F  297F               	goto	i1l10642
 11951  0930                     u374_20:
 11952                           	line	112
 11953                           	
 11954  0930                     i1l10622:	
 11955                           ;Main.c: 111: {
 11956                           ;Main.c: 112: TMR0IF = 0;
 11957  0930  110B               	bcf	(90/8),(90)&7
 11958                           	line	113
 11959                           	
 11960  0931                     i1l10624:	
 11961                           ;Main.c: 113: TMR0 = 100;
 11962  0931  3064               	movlw	(064h)
 11963  0932  0081               	movwf	(1)	;volatile
 11964                           	line	115
 11965                           ;Main.c: 115: RTC_Counter++;
 11966  0933  3001               	movlw	low(01h)
 11967  0934  1683               	bsf	status, 5	;RP0=1, select bank1
 11968  0935  1303               	bcf	status, 6	;RP1=0, select bank1
 11969  0936  07BA               	addwf	(_RTC_Counter)^080h,f	;volatile
 11970  0937  1803               	skipnc
 11971  0938  0ABB               	incf	(_RTC_Counter+1)^080h,f	;volatile
 11972  0939  3000               	movlw	high(01h)
 11973  093A  07BB               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 11974                           	line	118
 11975                           	
 11976  093B                     i1l10626:	
 11977                           ;Main.c: 118: RTC_FLAG_1MS = 1;
 11978  093B  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11979                           	line	119
 11980                           	
 11981  093C                     i1l10628:	
 11982                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
 11983  093C  30FA               	movlw	low(0FAh)
 11984  093D  00F2               	movwf	(?i1___lwmod)
 11985  093E  3000               	movlw	high(0FAh)
 11986  093F  00F3               	movwf	((?i1___lwmod))+1
 11987  0940  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11988  0941  01F5               	clrf	1+(?i1___lwmod)+02h
 11989  0942  07F5               	addwf	1+(?i1___lwmod)+02h
 11990  0943  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 11991  0944  01F4               	clrf	0+(?i1___lwmod)+02h
 11992  0945  07F4               	addwf	0+(?i1___lwmod)+02h
 11993                           
 11994  0946  160A  118A  2445   	fcall	i1___lwmod
              120A  158A         
 11995  094B  0873               	movf	((1+(?i1___lwmod))),w
 11996  094C  0472               	iorwf	((0+(?i1___lwmod))),w
 11997  094D  1D03               	skipz
 11998  094E  2950               	goto	u375_21
 11999  094F  2951               	goto	u375_20
 12000  0950                     u375_21:
 12001  0950  2953               	goto	i1l10632
 12002  0951                     u375_20:
 12003                           	line	121
 12004                           	
 12005  0951                     i1l10630:	
 12006                           ;Main.c: 120: {
 12007                           ;Main.c: 121: RTC_FLAG_250MS = 1;
 12008  0951  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 12009  0952  2953               	goto	i1l10632
 12010                           	line	122
 12011                           	
 12012  0953                     i1l2235:	
 12013                           	line	123
 12014                           	
 12015  0953                     i1l10632:	
 12016                           ;Main.c: 122: }
 12017                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
 12018  0953  30F4               	movlw	low(01F4h)
 12019  0954  00F2               	movwf	(?i1___lwmod)
 12020  0955  3001               	movlw	high(01F4h)
 12021  0956  00F3               	movwf	((?i1___lwmod))+1
 12022  0957  1683               	bsf	status, 5	;RP0=1, select bank1
 12023  0958  1303               	bcf	status, 6	;RP1=0, select bank1
 12024  0959  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12025  095A  01F5               	clrf	1+(?i1___lwmod)+02h
 12026  095B  07F5               	addwf	1+(?i1___lwmod)+02h
 12027  095C  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12028  095D  01F4               	clrf	0+(?i1___lwmod)+02h
 12029  095E  07F4               	addwf	0+(?i1___lwmod)+02h
 12030                           
 12031  095F  160A  118A  2445   	fcall	i1___lwmod
              120A  158A         
 12032  0964  0873               	movf	((1+(?i1___lwmod))),w
 12033  0965  0472               	iorwf	((0+(?i1___lwmod))),w
 12034  0966  1D03               	skipz
 12035  0967  2969               	goto	u376_21
 12036  0968  296A               	goto	u376_20
 12037  0969                     u376_21:
 12038  0969  2970               	goto	i1l10638
 12039  096A                     u376_20:
 12040                           	line	125
 12041                           	
 12042  096A                     i1l10634:	
 12043                           ;Main.c: 124: {
 12044                           ;Main.c: 125: RTC_FLAG_500MS = 1;
 12045  096A  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 12046                           	line	126
 12047                           	
 12048  096B                     i1l10636:	
 12049                           ;Main.c: 126: RB0 ^= 0x01;
 12050  096B  1283               	bcf	status, 5	;RP0=0, select bank0
 12051  096C  1303               	bcf	status, 6	;RP1=0, select bank0
 12052  096D  3001               	movlw	1<<((48)&7)
 12053  096E  0686               	xorwf	((48)/8),f
 12054  096F  2970               	goto	i1l10638
 12055                           	line	127
 12056                           	
 12057  0970                     i1l2236:	
 12058                           	line	128
 12059                           	
 12060  0970                     i1l10638:	
 12061                           ;Main.c: 127: }
 12062                           ;Main.c: 128: if (buttonPressed == 0)
 12063  0970  08FD               	movf	(_buttonPressed),f
 12064  0971  1D03               	skipz	;volatile
 12065  0972  2974               	goto	u377_21
 12066  0973  2975               	goto	u377_20
 12067  0974                     u377_21:
 12068  0974  297F               	goto	i1l10642
 12069  0975                     u377_20:
 12070                           	line	130
 12071                           	
 12072  0975                     i1l10640:	
 12073                           ;Main.c: 129: {
 12074                           ;Main.c: 130: buttonPressed = ReadButtons();
 12075  0975  160A  118A  236C   	fcall	_ReadButtons
              120A  158A         
 12076  097A  00F8               	movwf	(??_isr1+0)+0
 12077  097B  0878               	movf	(??_isr1+0)+0,w
 12078  097C  00FD               	movwf	(_buttonPressed)	;volatile
 12079  097D  297F               	goto	i1l10642
 12080                           	line	131
 12081                           	
 12082  097E                     i1l2237:	
 12083  097E  297F               	goto	i1l10642
 12084                           	line	132
 12085                           	
 12086  097F                     i1l2234:	
 12087                           	line	133
 12088                           	
 12089  097F                     i1l10642:	
 12090                           ;Main.c: 131: }
 12091                           ;Main.c: 132: }
 12092                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 12093  097F  1283               	bcf	status, 5	;RP0=0, select bank0
 12094  0980  1303               	bcf	status, 6	;RP1=0, select bank0
 12095  0981  1E8C               	btfss	(101/8),(101)&7
 12096  0982  2984               	goto	u378_21
 12097  0983  2985               	goto	u378_20
 12098  0984                     u378_21:
 12099  0984  29A1               	goto	i1l10652
 12100  0985                     u378_20:
 12101                           	
 12102  0985                     i1l10644:	
 12103  0985  081A               	movf	(26),w	;volatile
 12104  0986  00F8               	movwf	(??_isr1+0)+0
 12105  0987  1683               	bsf	status, 5	;RP0=1, select bank1
 12106  0988  1303               	bcf	status, 6	;RP1=0, select bank1
 12107  0989  0857               	movf	(_rxiptr)^080h,w
 12108  098A  3EA0               	addlw	_rxfifo&0ffh
 12109  098B  0084               	movwf	fsr0
 12110  098C  0878               	movf	(??_isr1+0)+0,w
 12111  098D  1383               	bcf	status, 7	;select IRP bank1
 12112  098E  0080               	movwf	indf
 12113                           	
 12114  098F                     i1l10646:	
 12115  098F  0857               	movf	(_rxiptr)^080h,w	;volatile
 12116  0990  3E01               	addlw	01h
 12117  0991  390F               	andlw	0Fh
 12118  0992  00F8               	movwf	(??_isr1+0)+0
 12119  0993  0878               	movf	(??_isr1+0)+0,w
 12120  0994  00D9               	movwf	(_ser_tmp)^080h
 12121                           	
 12122  0995                     i1l10648:	
 12123  0995  0859               	movf	(_ser_tmp)^080h,w
 12124  0996  0658               	xorwf	(_rxoptr)^080h,w	;volatile
 12125  0997  1903               	skipnz
 12126  0998  299A               	goto	u379_21
 12127  0999  299B               	goto	u379_20
 12128  099A                     u379_21:
 12129  099A  29A1               	goto	i1l10652
 12130  099B                     u379_20:
 12131                           	
 12132  099B                     i1l10650:	
 12133  099B  0859               	movf	(_ser_tmp)^080h,w
 12134  099C  00F8               	movwf	(??_isr1+0)+0
 12135  099D  0878               	movf	(??_isr1+0)+0,w
 12136  099E  00D7               	movwf	(_rxiptr)^080h	;volatile
 12137  099F  29A1               	goto	i1l10652
 12138                           	
 12139  09A0                     i1l2239:	
 12140  09A0  29A1               	goto	i1l10652
 12141                           	
 12142  09A1                     i1l2238:	
 12143                           	
 12144  09A1                     i1l10652:	
 12145  09A1  1283               	bcf	status, 5	;RP0=0, select bank0
 12146  09A2  1E0C               	btfss	(100/8),(100)&7
 12147  09A3  29A5               	goto	u380_21
 12148  09A4  29A6               	goto	u380_20
 12149  09A5                     u380_21:
 12150  09A5  29C7               	goto	i1l2242
 12151  09A6                     u380_20:
 12152                           	
 12153  09A6                     i1l10654:	
 12154  09A6  1683               	bsf	status, 5	;RP0=1, select bank1
 12155  09A7  1303               	bcf	status, 6	;RP1=0, select bank1
 12156  09A8  1E0C               	btfss	(1124/8)^080h,(1124)&7
 12157  09A9  29AB               	goto	u381_21
 12158  09AA  29AC               	goto	u381_20
 12159  09AB                     u381_21:
 12160  09AB  29C7               	goto	i1l2242
 12161  09AC                     u381_20:
 12162                           	
 12163  09AC                     i1l10656:	
 12164  09AC  085D               	movf	(_txoptr)^080h,w
 12165  09AD  3EA0               	addlw	_txfifo&0ffh
 12166  09AE  0084               	movwf	fsr0
 12167  09AF  1783               	bsf	status, 7	;select IRP bank3
 12168  09B0  0800               	movf	indf,w
 12169  09B1  1283               	bcf	status, 5	;RP0=0, select bank0
 12170  09B2  1303               	bcf	status, 6	;RP1=0, select bank0
 12171  09B3  0099               	movwf	(25)	;volatile
 12172                           	
 12173  09B4                     i1l10658:	
 12174  09B4  3001               	movlw	(01h)
 12175  09B5  00F8               	movwf	(??_isr1+0)+0
 12176  09B6  0878               	movf	(??_isr1+0)+0,w
 12177  09B7  1683               	bsf	status, 5	;RP0=1, select bank1
 12178  09B8  1303               	bcf	status, 6	;RP1=0, select bank1
 12179  09B9  07DD               	addwf	(_txoptr)^080h,f	;volatile
 12180                           	
 12181  09BA                     i1l10660:	
 12182  09BA  300F               	movlw	(0Fh)
 12183  09BB  00F8               	movwf	(??_isr1+0)+0
 12184  09BC  0878               	movf	(??_isr1+0)+0,w
 12185  09BD  05DD               	andwf	(_txoptr)^080h,f	;volatile
 12186                           	
 12187  09BE                     i1l10662:	
 12188  09BE  085D               	movf	(_txoptr)^080h,w	;volatile
 12189  09BF  065C               	xorwf	(_txiptr)^080h,w	;volatile
 12190  09C0  1D03               	skipz
 12191  09C1  29C3               	goto	u382_21
 12192  09C2  29C4               	goto	u382_20
 12193  09C3                     u382_21:
 12194  09C3  29C7               	goto	i1l2242
 12195  09C4                     u382_20:
 12196                           	
 12197  09C4                     i1l10664:	
 12198  09C4  120C               	bcf	(1124/8)^080h,(1124)&7
 12199  09C5  29C7               	goto	i1l2242
 12200                           	
 12201  09C6                     i1l2241:	
 12202  09C6  29C7               	goto	i1l2242
 12203                           	
 12204  09C7                     i1l2240:	
 12205                           	line	134
 12206                           	
 12207  09C7                     i1l2242:	
 12208  09C7  087C               	movf	(??_isr1+4),w
 12209  09C8  1283               	bcf	status, 5	;RP0=0, select bank0
 12210  09C9  00FF               	movwf	btemp+1
 12211  09CA  087B               	movf	(??_isr1+3),w
 12212  09CB  008A               	movwf	pclath
 12213  09CC  087A               	movf	(??_isr1+2),w
 12214  09CD  0084               	movwf	fsr0
 12215  09CE  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 12216  09CF  0083               	movwf	status
 12217  09D0  0EFE               	swapf	saved_w,f
 12218  09D1  0E7E               	swapf	saved_w,w
 12219  09D2  0009               	retfie
 12220                           	opt stack 0
 12221                           GLOBAL	__end_of_isr1
 12222  09D3                     	__end_of_isr1:
 12223 ;; =============== function _isr1 ends ============
 12224                           
 12225                           	signat	_isr1,88
 12226                           	global	_ReadButtons
 12227                           psect	text1079,local,class=CODE,delta=2
 12228                           global __ptext1079
 12229  136C                     __ptext1079:
 12230                           
 12231 ;; *************** function _ReadButtons *****************
 12232 ;; Defined at:
 12233 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;		None
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;		None
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  1    wreg      unsigned char 
 12240 ;; Registers used:
 12241 ;;		wreg, status,2, status,0, pclath, cstack
 12242 ;; Tracked objects:
 12243 ;;		On entry : 0/0
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12247 ;;      Params:         0       0       0       0       0
 12248 ;;      Locals:         0       0       0       0       0
 12249 ;;      Temps:          0       0       0       0       0
 12250 ;;      Totals:         0       0       0       0       0
 12251 ;;Total ram usage:        0 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:    1
 12254 ;; This function calls:
 12255 ;;		_Debounce
 12256 ;; This function is called by:
 12257 ;;		_isr1
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           psect	text1079
 12261                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12262                           	line	159
 12263                           	global	__size_of_ReadButtons
 12264  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 12265                           	
 12266  136C                     _ReadButtons:	
 12267                           	opt	stack 0
 12268                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 12269                           	line	161
 12270                           	
 12271  136C                     i1l10666:	
 12272                           ;HMI.c: 161: Debounce();
 12273  136C  160A  118A  2768   	fcall	_Debounce
              160A  118A         
 12274                           	line	163
 12275                           	
 12276  1371                     i1l10668:	
 12277                           ;HMI.c: 163: if(UpPressed)
 12278  1371  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 12279  1372  2B74               	goto	u383_21
 12280  1373  2B75               	goto	u383_20
 12281  1374                     u383_21:
 12282  1374  2B79               	goto	i1l4553
 12283  1375                     u383_20:
 12284                           	line	165
 12285                           	
 12286  1375                     i1l10670:	
 12287                           ;HMI.c: 164: {
 12288                           ;HMI.c: 165: UpPressed = 0;
 12289  1375  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 12290                           	line	166
 12291                           	
 12292  1376                     i1l10672:	
 12293                           ;HMI.c: 166: return 1;
 12294  1376  3001               	movlw	(01h)
 12295  1377  2B9B               	goto	i1l4554
 12296                           	
 12297  1378                     i1l10674:	
 12298  1378  2B9B               	goto	i1l4554
 12299                           	line	168
 12300                           	
 12301  1379                     i1l4553:	
 12302                           	line	170
 12303                           ;HMI.c: 168: }
 12304                           ;HMI.c: 170: if(DownPressed)
 12305  1379  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 12306  137A  2B7C               	goto	u384_21
 12307  137B  2B7D               	goto	u384_20
 12308  137C                     u384_21:
 12309  137C  2B81               	goto	i1l4555
 12310  137D                     u384_20:
 12311                           	line	172
 12312                           	
 12313  137D                     i1l10676:	
 12314                           ;HMI.c: 171: {
 12315                           ;HMI.c: 172: DownPressed = 0;
 12316  137D  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 12317                           	line	173
 12318                           	
 12319  137E                     i1l10678:	
 12320                           ;HMI.c: 173: return 2;
 12321  137E  3002               	movlw	(02h)
 12322  137F  2B9B               	goto	i1l4554
 12323                           	
 12324  1380                     i1l10680:	
 12325  1380  2B9B               	goto	i1l4554
 12326                           	line	175
 12327                           	
 12328  1381                     i1l4555:	
 12329                           	line	176
 12330                           ;HMI.c: 175: }
 12331                           ;HMI.c: 176: if(LeftPressed)
 12332  1381  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 12333  1382  2B84               	goto	u385_21
 12334  1383  2B85               	goto	u385_20
 12335  1384                     u385_21:
 12336  1384  2B89               	goto	i1l4556
 12337  1385                     u385_20:
 12338                           	line	178
 12339                           	
 12340  1385                     i1l10682:	
 12341                           ;HMI.c: 177: {
 12342                           ;HMI.c: 178: LeftPressed = 0;
 12343  1385  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 12344                           	line	179
 12345                           	
 12346  1386                     i1l10684:	
 12347                           ;HMI.c: 179: return 3;
 12348  1386  3003               	movlw	(03h)
 12349  1387  2B9B               	goto	i1l4554
 12350                           	
 12351  1388                     i1l10686:	
 12352  1388  2B9B               	goto	i1l4554
 12353                           	line	181
 12354                           	
 12355  1389                     i1l4556:	
 12356                           	line	182
 12357                           ;HMI.c: 181: }
 12358                           ;HMI.c: 182: if(RightPressed)
 12359  1389  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 12360  138A  2B8C               	goto	u386_21
 12361  138B  2B8D               	goto	u386_20
 12362  138C                     u386_21:
 12363  138C  2B91               	goto	i1l4557
 12364  138D                     u386_20:
 12365                           	line	184
 12366                           	
 12367  138D                     i1l10688:	
 12368                           ;HMI.c: 183: {
 12369                           ;HMI.c: 184: RightPressed = 0;
 12370  138D  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 12371                           	line	185
 12372                           	
 12373  138E                     i1l10690:	
 12374                           ;HMI.c: 185: return 4;
 12375  138E  3004               	movlw	(04h)
 12376  138F  2B9B               	goto	i1l4554
 12377                           	
 12378  1390                     i1l10692:	
 12379  1390  2B9B               	goto	i1l4554
 12380                           	line	187
 12381                           	
 12382  1391                     i1l4557:	
 12383                           	line	189
 12384                           ;HMI.c: 187: }
 12385                           ;HMI.c: 189: if(CenterPressed)
 12386  1391  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 12387  1392  2B94               	goto	u387_21
 12388  1393  2B95               	goto	u387_20
 12389  1394                     u387_21:
 12390  1394  2B99               	goto	i1l10700
 12391  1395                     u387_20:
 12392                           	line	191
 12393                           	
 12394  1395                     i1l10694:	
 12395                           ;HMI.c: 190: {
 12396                           ;HMI.c: 191: CenterPressed = 0;
 12397  1395  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 12398                           	line	192
 12399                           	
 12400  1396                     i1l10696:	
 12401                           ;HMI.c: 192: return 5;
 12402  1396  3005               	movlw	(05h)
 12403  1397  2B9B               	goto	i1l4554
 12404                           	
 12405  1398                     i1l10698:	
 12406  1398  2B9B               	goto	i1l4554
 12407                           	line	194
 12408                           	
 12409  1399                     i1l4558:	
 12410                           	line	195
 12411                           	
 12412  1399                     i1l10700:	
 12413                           ;HMI.c: 194: }
 12414                           ;HMI.c: 195: return 0;
 12415  1399  3000               	movlw	(0)
 12416  139A  2B9B               	goto	i1l4554
 12417                           	
 12418  139B                     i1l10702:	
 12419                           	line	196
 12420                           	
 12421  139B                     i1l4554:	
 12422  139B  0008               	return
 12423                           	opt stack 0
 12424                           GLOBAL	__end_of_ReadButtons
 12425  139C                     	__end_of_ReadButtons:
 12426 ;; =============== function _ReadButtons ends ============
 12427                           
 12428                           	signat	_ReadButtons,89
 12429                           	global	i1___lwmod
 12430                           psect	text1080,local,class=CODE,delta=2
 12431                           global __ptext1080
 12432  1445                     __ptext1080:
 12433                           
 12434 ;; *************** function i1___lwmod *****************
 12435 ;; Defined at:
 12436 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  __lwmod         2    0[COMMON] unsigned int 
 12439 ;;  __lwmod         2    2[COMMON] unsigned int 
 12440 ;; Auto vars:     Size  Location     Type
 12441 ;;  __lwmod         1    5[COMMON] unsigned char 
 12442 ;; Return value:  Size  Location     Type
 12443 ;;                  2    0[COMMON] unsigned int 
 12444 ;; Registers used:
 12445 ;;		wreg, status,2, status,0
 12446 ;; Tracked objects:
 12447 ;;		On entry : 0/0
 12448 ;;		On exit  : 0/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12451 ;;      Params:         4       0       0       0       0
 12452 ;;      Locals:         1       0       0       0       0
 12453 ;;      Temps:          1       0       0       0       0
 12454 ;;      Totals:         6       0       0       0       0
 12455 ;;Total ram usage:        6 bytes
 12456 ;; Hardware stack levels used:    1
 12457 ;; This function calls:
 12458 ;;		Nothing
 12459 ;; This function is called by:
 12460 ;;		_isr1
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           psect	text1080
 12464                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12465                           	line	5
 12466                           	global	__size_ofi1___lwmod
 12467  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 12468                           	
 12469  1445                     i1___lwmod:	
 12470                           	opt	stack 1
 12471                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 12472                           	line	8
 12473                           	
 12474  1445                     i1l10990:	
 12475  1445  0873               	movf	(i1___lwmod@divisor+1),w
 12476  1446  0472               	iorwf	(i1___lwmod@divisor),w
 12477  1447  1903               	skipnz
 12478  1448  2C4A               	goto	u444_21
 12479  1449  2C4B               	goto	u444_20
 12480  144A                     u444_21:
 12481  144A  2C81               	goto	i1l11008
 12482  144B                     u444_20:
 12483                           	line	9
 12484                           	
 12485  144B                     i1l10992:	
 12486  144B  01F7               	clrf	(i1___lwmod@counter)
 12487  144C  1403               	bsf	status,0
 12488  144D  0DF7               	rlf	(i1___lwmod@counter),f
 12489                           	line	10
 12490  144E  2C5B               	goto	i1l10998
 12491                           	
 12492  144F                     i1l7630:	
 12493                           	line	11
 12494                           	
 12495  144F                     i1l10994:	
 12496  144F  3001               	movlw	01h
 12497                           	
 12498  1450                     u445_25:
 12499  1450  1003               	clrc
 12500  1451  0DF2               	rlf	(i1___lwmod@divisor),f
 12501  1452  0DF3               	rlf	(i1___lwmod@divisor+1),f
 12502  1453  3EFF               	addlw	-1
 12503  1454  1D03               	skipz
 12504  1455  2C50               	goto	u445_25
 12505                           	line	12
 12506                           	
 12507  1456                     i1l10996:	
 12508  1456  3001               	movlw	(01h)
 12509  1457  00F6               	movwf	(??i1___lwmod+0)+0
 12510  1458  0876               	movf	(??i1___lwmod+0)+0,w
 12511  1459  07F7               	addwf	(i1___lwmod@counter),f
 12512  145A  2C5B               	goto	i1l10998
 12513                           	line	13
 12514                           	
 12515  145B                     i1l7629:	
 12516                           	line	10
 12517                           	
 12518  145B                     i1l10998:	
 12519  145B  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 12520  145C  2C5E               	goto	u446_21
 12521  145D  2C5F               	goto	u446_20
 12522  145E                     u446_21:
 12523  145E  2C4F               	goto	i1l10994
 12524  145F                     u446_20:
 12525  145F  2C61               	goto	i1l11000
 12526                           	
 12527  1460                     i1l7631:	
 12528  1460  2C61               	goto	i1l11000
 12529                           	line	14
 12530                           	
 12531  1461                     i1l7632:	
 12532                           	line	15
 12533                           	
 12534  1461                     i1l11000:	
 12535  1461  0873               	movf	(i1___lwmod@divisor+1),w
 12536  1462  0275               	subwf	(i1___lwmod@dividend+1),w
 12537  1463  1D03               	skipz
 12538  1464  2C67               	goto	u447_25
 12539  1465  0872               	movf	(i1___lwmod@divisor),w
 12540  1466  0274               	subwf	(i1___lwmod@dividend),w
 12541  1467                     u447_25:
 12542  1467  1C03               	skipc
 12543  1468  2C6A               	goto	u447_21
 12544  1469  2C6B               	goto	u447_20
 12545  146A                     u447_21:
 12546  146A  2C72               	goto	i1l11004
 12547  146B                     u447_20:
 12548                           	line	16
 12549                           	
 12550  146B                     i1l11002:	
 12551  146B  0872               	movf	(i1___lwmod@divisor),w
 12552  146C  02F4               	subwf	(i1___lwmod@dividend),f
 12553  146D  0873               	movf	(i1___lwmod@divisor+1),w
 12554  146E  1C03               	skipc
 12555  146F  03F5               	decf	(i1___lwmod@dividend+1),f
 12556  1470  02F5               	subwf	(i1___lwmod@dividend+1),f
 12557  1471  2C72               	goto	i1l11004
 12558                           	
 12559  1472                     i1l7633:	
 12560                           	line	17
 12561                           	
 12562  1472                     i1l11004:	
 12563  1472  3001               	movlw	01h
 12564                           	
 12565  1473                     u448_25:
 12566  1473  1003               	clrc
 12567  1474  0CF3               	rrf	(i1___lwmod@divisor+1),f
 12568  1475  0CF2               	rrf	(i1___lwmod@divisor),f
 12569  1476  3EFF               	addlw	-1
 12570  1477  1D03               	skipz
 12571  1478  2C73               	goto	u448_25
 12572                           	line	18
 12573                           	
 12574  1479                     i1l11006:	
 12575  1479  3001               	movlw	low(01h)
 12576  147A  02F7               	subwf	(i1___lwmod@counter),f
 12577  147B  1D03               	btfss	status,2
 12578  147C  2C7E               	goto	u449_21
 12579  147D  2C7F               	goto	u449_20
 12580  147E                     u449_21:
 12581  147E  2C61               	goto	i1l11000
 12582  147F                     u449_20:
 12583  147F  2C81               	goto	i1l11008
 12584                           	
 12585  1480                     i1l7634:	
 12586  1480  2C81               	goto	i1l11008
 12587                           	line	19
 12588                           	
 12589  1481                     i1l7628:	
 12590                           	line	20
 12591                           	
 12592  1481                     i1l11008:	
 12593  1481  0875               	movf	(i1___lwmod@dividend+1),w
 12594  1482  01F3               	clrf	(?i1___lwmod+1)
 12595  1483  07F3               	addwf	(?i1___lwmod+1)
 12596  1484  0874               	movf	(i1___lwmod@dividend),w
 12597  1485  01F2               	clrf	(?i1___lwmod)
 12598  1486  07F2               	addwf	(?i1___lwmod)
 12599                           
 12600  1487  2C88               	goto	i1l7635
 12601                           	
 12602  1488                     i1l11010:	
 12603                           	line	21
 12604                           	
 12605  1488                     i1l7635:	
 12606  1488  0008               	return
 12607                           	opt stack 0
 12608                           GLOBAL	__end_ofi1___lwmod
 12609  1489                     	__end_ofi1___lwmod:
 12610 ;; =============== function i1___lwmod ends ============
 12611                           
 12612                           	signat	i1___lwmod,90
 12613                           	global	_Debounce
 12614                           psect	text1081,local,class=CODE,delta=2
 12615                           global __ptext1081
 12616  1768                     __ptext1081:
 12617                           
 12618 ;; *************** function _Debounce *****************
 12619 ;; Defined at:
 12620 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;		None
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;		None
 12625 ;; Return value:  Size  Location     Type
 12626 ;;		None               void
 12627 ;; Registers used:
 12628 ;;		wreg, status,2, status,0
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12634 ;;      Params:         0       0       0       0       0
 12635 ;;      Locals:         0       0       0       0       0
 12636 ;;      Temps:          1       0       0       0       0
 12637 ;;      Totals:         1       0       0       0       0
 12638 ;;Total ram usage:        1 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_ReadButtons
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           psect	text1081
 12647                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12648                           	line	77
 12649                           	global	__size_of_Debounce
 12650  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 12651                           	
 12652  1768                     _Debounce:	
 12653                           	opt	stack 0
 12654                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 12655                           	line	79
 12656                           	
 12657  1768                     i1l10806:	
 12658                           ;HMI.c: 79: if(!RB2)
 12659  1768  1283               	bcf	status, 5	;RP0=0, select bank0
 12660  1769  1303               	bcf	status, 6	;RP1=0, select bank0
 12661  176A  1906               	btfsc	(50/8),(50)&7
 12662  176B  2F6D               	goto	u396_21
 12663  176C  2F6E               	goto	u396_20
 12664  176D                     u396_21:
 12665  176D  2F82               	goto	i1l4535
 12666  176E                     u396_20:
 12667                           	line	81
 12668                           	
 12669  176E                     i1l10808:	
 12670                           ;HMI.c: 80: {
 12671                           ;HMI.c: 81: UpDebounceCount++;
 12672  176E  3001               	movlw	(01h)
 12673  176F  00F2               	movwf	(??_Debounce+0)+0
 12674  1770  0872               	movf	(??_Debounce+0)+0,w
 12675  1771  1683               	bsf	status, 5	;RP0=1, select bank1
 12676  1772  1303               	bcf	status, 6	;RP1=0, select bank1
 12677  1773  07D3               	addwf	(_UpDebounceCount)^080h,f	;volatile
 12678                           	line	82
 12679                           	
 12680  1774                     i1l10810:	
 12681                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 12682  1774  300A               	movlw	(0Ah)
 12683  1775  0253               	subwf	(_UpDebounceCount)^080h,w	;volatile
 12684  1776  1C03               	skipc
 12685  1777  2F79               	goto	u397_21
 12686  1778  2F7A               	goto	u397_20
 12687  1779                     u397_21:
 12688  1779  2F86               	goto	i1l4537
 12689  177A                     u397_20:
 12690                           	
 12691  177A                     i1l10812:	
 12692  177A  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 12693  177B  2F7D               	goto	u398_21
 12694  177C  2F7E               	goto	u398_20
 12695  177D                     u398_21:
 12696  177D  2F86               	goto	i1l4537
 12697  177E                     u398_20:
 12698                           	line	84
 12699                           	
 12700  177E                     i1l10814:	
 12701                           ;HMI.c: 83: {
 12702                           ;HMI.c: 84: UpPressed = 1;
 12703  177E  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 12704                           	line	85
 12705                           ;HMI.c: 85: UpReleased = 0;
 12706  177F  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 12707  1780  2F86               	goto	i1l4537
 12708                           	line	86
 12709                           	
 12710  1781                     i1l4536:	
 12711                           	line	87
 12712                           ;HMI.c: 86: }
 12713                           ;HMI.c: 87: }
 12714  1781  2F86               	goto	i1l4537
 12715                           	line	88
 12716                           	
 12717  1782                     i1l4535:	
 12718                           	line	90
 12719                           ;HMI.c: 88: else
 12720                           ;HMI.c: 89: {
 12721                           ;HMI.c: 90: UpDebounceCount = 0;
 12722  1782  1683               	bsf	status, 5	;RP0=1, select bank1
 12723  1783  1303               	bcf	status, 6	;RP1=0, select bank1
 12724  1784  01D3               	clrf	(_UpDebounceCount)^080h	;volatile
 12725                           	line	91
 12726                           ;HMI.c: 91: UpReleased = 1;
 12727  1785  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 12728                           	line	92
 12729                           	
 12730  1786                     i1l4537:	
 12731                           	line	95
 12732                           ;HMI.c: 92: }
 12733                           ;HMI.c: 95: if(!RB3)
 12734  1786  1283               	bcf	status, 5	;RP0=0, select bank0
 12735  1787  1303               	bcf	status, 6	;RP1=0, select bank0
 12736  1788  1986               	btfsc	(51/8),(51)&7
 12737  1789  2F8B               	goto	u399_21
 12738  178A  2F8C               	goto	u399_20
 12739  178B                     u399_21:
 12740  178B  2FA0               	goto	i1l4538
 12741  178C                     u399_20:
 12742                           	line	97
 12743                           	
 12744  178C                     i1l10816:	
 12745                           ;HMI.c: 96: {
 12746                           ;HMI.c: 97: DownDebounceCount++;
 12747  178C  3001               	movlw	(01h)
 12748  178D  00F2               	movwf	(??_Debounce+0)+0
 12749  178E  0872               	movf	(??_Debounce+0)+0,w
 12750  178F  1683               	bsf	status, 5	;RP0=1, select bank1
 12751  1790  1303               	bcf	status, 6	;RP1=0, select bank1
 12752  1791  07CF               	addwf	(_DownDebounceCount)^080h,f	;volatile
 12753                           	line	98
 12754                           	
 12755  1792                     i1l10818:	
 12756                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 12757  1792  300A               	movlw	(0Ah)
 12758  1793  024F               	subwf	(_DownDebounceCount)^080h,w	;volatile
 12759  1794  1C03               	skipc
 12760  1795  2F97               	goto	u400_21
 12761  1796  2F98               	goto	u400_20
 12762  1797                     u400_21:
 12763  1797  2FA4               	goto	i1l4540
 12764  1798                     u400_20:
 12765                           	
 12766  1798                     i1l10820:	
 12767  1798  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 12768  1799  2F9B               	goto	u401_21
 12769  179A  2F9C               	goto	u401_20
 12770  179B                     u401_21:
 12771  179B  2FA4               	goto	i1l4540
 12772  179C                     u401_20:
 12773                           	line	100
 12774                           	
 12775  179C                     i1l10822:	
 12776                           ;HMI.c: 99: {
 12777                           ;HMI.c: 100: DownPressed = 1;
 12778  179C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 12779                           	line	101
 12780                           ;HMI.c: 101: DownReleased = 0;
 12781  179D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 12782  179E  2FA4               	goto	i1l4540
 12783                           	line	102
 12784                           	
 12785  179F                     i1l4539:	
 12786                           	line	103
 12787                           ;HMI.c: 102: }
 12788                           ;HMI.c: 103: }
 12789  179F  2FA4               	goto	i1l4540
 12790                           	line	104
 12791                           	
 12792  17A0                     i1l4538:	
 12793                           	line	106
 12794                           ;HMI.c: 104: else
 12795                           ;HMI.c: 105: {
 12796                           ;HMI.c: 106: DownDebounceCount = 0;
 12797  17A0  1683               	bsf	status, 5	;RP0=1, select bank1
 12798  17A1  1303               	bcf	status, 6	;RP1=0, select bank1
 12799  17A2  01CF               	clrf	(_DownDebounceCount)^080h	;volatile
 12800                           	line	107
 12801                           ;HMI.c: 107: DownReleased = 1;
 12802  17A3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 12803                           	line	108
 12804                           	
 12805  17A4                     i1l4540:	
 12806                           	line	110
 12807                           ;HMI.c: 108: }
 12808                           ;HMI.c: 110: if(!RB4)
 12809  17A4  1283               	bcf	status, 5	;RP0=0, select bank0
 12810  17A5  1303               	bcf	status, 6	;RP1=0, select bank0
 12811  17A6  1A06               	btfsc	(52/8),(52)&7
 12812  17A7  2FA9               	goto	u402_21
 12813  17A8  2FAA               	goto	u402_20
 12814  17A9                     u402_21:
 12815  17A9  2FBE               	goto	i1l4541
 12816  17AA                     u402_20:
 12817                           	line	112
 12818                           	
 12819  17AA                     i1l10824:	
 12820                           ;HMI.c: 111: {
 12821                           ;HMI.c: 112: LeftDebounceCount++;
 12822  17AA  3001               	movlw	(01h)
 12823  17AB  00F2               	movwf	(??_Debounce+0)+0
 12824  17AC  0872               	movf	(??_Debounce+0)+0,w
 12825  17AD  1683               	bsf	status, 5	;RP0=1, select bank1
 12826  17AE  1303               	bcf	status, 6	;RP1=0, select bank1
 12827  17AF  07D0               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 12828                           	line	113
 12829                           	
 12830  17B0                     i1l10826:	
 12831                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 12832  17B0  300A               	movlw	(0Ah)
 12833  17B1  0250               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 12834  17B2  1C03               	skipc
 12835  17B3  2FB5               	goto	u403_21
 12836  17B4  2FB6               	goto	u403_20
 12837  17B5                     u403_21:
 12838  17B5  2FC2               	goto	i1l4543
 12839  17B6                     u403_20:
 12840                           	
 12841  17B6                     i1l10828:	
 12842  17B6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 12843  17B7  2FB9               	goto	u404_21
 12844  17B8  2FBA               	goto	u404_20
 12845  17B9                     u404_21:
 12846  17B9  2FC2               	goto	i1l4543
 12847  17BA                     u404_20:
 12848                           	line	115
 12849                           	
 12850  17BA                     i1l10830:	
 12851                           ;HMI.c: 114: {
 12852                           ;HMI.c: 115: LeftPressed = 1;
 12853  17BA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 12854                           	line	116
 12855                           ;HMI.c: 116: LeftReleased = 0;
 12856  17BB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 12857  17BC  2FC2               	goto	i1l4543
 12858                           	line	117
 12859                           	
 12860  17BD                     i1l4542:	
 12861                           	line	118
 12862                           ;HMI.c: 117: }
 12863                           ;HMI.c: 118: }
 12864  17BD  2FC2               	goto	i1l4543
 12865                           	line	119
 12866                           	
 12867  17BE                     i1l4541:	
 12868                           	line	121
 12869                           ;HMI.c: 119: else
 12870                           ;HMI.c: 120: {
 12871                           ;HMI.c: 121: LeftDebounceCount = 0;
 12872  17BE  1683               	bsf	status, 5	;RP0=1, select bank1
 12873  17BF  1303               	bcf	status, 6	;RP1=0, select bank1
 12874  17C0  01D0               	clrf	(_LeftDebounceCount)^080h	;volatile
 12875                           	line	122
 12876                           ;HMI.c: 122: LeftReleased = 1;
 12877  17C1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 12878                           	line	123
 12879                           	
 12880  17C2                     i1l4543:	
 12881                           	line	125
 12882                           ;HMI.c: 123: }
 12883                           ;HMI.c: 125: if(!RB5)
 12884  17C2  1283               	bcf	status, 5	;RP0=0, select bank0
 12885  17C3  1303               	bcf	status, 6	;RP1=0, select bank0
 12886  17C4  1A86               	btfsc	(53/8),(53)&7
 12887  17C5  2FC7               	goto	u405_21
 12888  17C6  2FC8               	goto	u405_20
 12889  17C7                     u405_21:
 12890  17C7  2FDC               	goto	i1l4544
 12891  17C8                     u405_20:
 12892                           	line	127
 12893                           	
 12894  17C8                     i1l10832:	
 12895                           ;HMI.c: 126: {
 12896                           ;HMI.c: 127: RightDebounceCount++;
 12897  17C8  3001               	movlw	(01h)
 12898  17C9  00F2               	movwf	(??_Debounce+0)+0
 12899  17CA  0872               	movf	(??_Debounce+0)+0,w
 12900  17CB  1683               	bsf	status, 5	;RP0=1, select bank1
 12901  17CC  1303               	bcf	status, 6	;RP1=0, select bank1
 12902  17CD  07D2               	addwf	(_RightDebounceCount)^080h,f	;volatile
 12903                           	line	128
 12904                           	
 12905  17CE                     i1l10834:	
 12906                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 12907  17CE  300A               	movlw	(0Ah)
 12908  17CF  0252               	subwf	(_RightDebounceCount)^080h,w	;volatile
 12909  17D0  1C03               	skipc
 12910  17D1  2FD3               	goto	u406_21
 12911  17D2  2FD4               	goto	u406_20
 12912  17D3                     u406_21:
 12913  17D3  2FE0               	goto	i1l4546
 12914  17D4                     u406_20:
 12915                           	
 12916  17D4                     i1l10836:	
 12917  17D4  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 12918  17D5  2FD7               	goto	u407_21
 12919  17D6  2FD8               	goto	u407_20
 12920  17D7                     u407_21:
 12921  17D7  2FE0               	goto	i1l4546
 12922  17D8                     u407_20:
 12923                           	line	130
 12924                           	
 12925  17D8                     i1l10838:	
 12926                           ;HMI.c: 129: {
 12927                           ;HMI.c: 130: RightPressed = 1;
 12928  17D8  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 12929                           	line	131
 12930                           ;HMI.c: 131: RightReleased = 0;
 12931  17D9  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 12932  17DA  2FE0               	goto	i1l4546
 12933                           	line	132
 12934                           	
 12935  17DB                     i1l4545:	
 12936                           	line	133
 12937                           ;HMI.c: 132: }
 12938                           ;HMI.c: 133: }
 12939  17DB  2FE0               	goto	i1l4546
 12940                           	line	134
 12941                           	
 12942  17DC                     i1l4544:	
 12943                           	line	136
 12944                           ;HMI.c: 134: else
 12945                           ;HMI.c: 135: {
 12946                           ;HMI.c: 136: RightDebounceCount = 0;
 12947  17DC  1683               	bsf	status, 5	;RP0=1, select bank1
 12948  17DD  1303               	bcf	status, 6	;RP1=0, select bank1
 12949  17DE  01D2               	clrf	(_RightDebounceCount)^080h	;volatile
 12950                           	line	137
 12951                           ;HMI.c: 137: RightReleased = 1;
 12952  17DF  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 12953                           	line	138
 12954                           	
 12955  17E0                     i1l4546:	
 12956                           	line	140
 12957                           ;HMI.c: 138: }
 12958                           ;HMI.c: 140: if(!RB6)
 12959  17E0  1283               	bcf	status, 5	;RP0=0, select bank0
 12960  17E1  1303               	bcf	status, 6	;RP1=0, select bank0
 12961  17E2  1B06               	btfsc	(54/8),(54)&7
 12962  17E3  2FE5               	goto	u408_21
 12963  17E4  2FE6               	goto	u408_20
 12964  17E5                     u408_21:
 12965  17E5  2FFA               	goto	i1l4547
 12966  17E6                     u408_20:
 12967                           	line	142
 12968                           	
 12969  17E6                     i1l10840:	
 12970                           ;HMI.c: 141: {
 12971                           ;HMI.c: 142: CenterDebounceCount++;
 12972  17E6  3001               	movlw	(01h)
 12973  17E7  00F2               	movwf	(??_Debounce+0)+0
 12974  17E8  0872               	movf	(??_Debounce+0)+0,w
 12975  17E9  1683               	bsf	status, 5	;RP0=1, select bank1
 12976  17EA  1303               	bcf	status, 6	;RP1=0, select bank1
 12977  17EB  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 12978                           	line	143
 12979                           	
 12980  17EC                     i1l10842:	
 12981                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 12982  17EC  300A               	movlw	(0Ah)
 12983  17ED  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 12984  17EE  1C03               	skipc
 12985  17EF  2FF1               	goto	u409_21
 12986  17F0  2FF2               	goto	u409_20
 12987  17F1                     u409_21:
 12988  17F1  2FFF               	goto	i1l4550
 12989  17F2                     u409_20:
 12990                           	
 12991  17F2                     i1l10844:	
 12992  17F2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12993  17F3  2FF5               	goto	u410_21
 12994  17F4  2FF6               	goto	u410_20
 12995  17F5                     u410_21:
 12996  17F5  2FFF               	goto	i1l4550
 12997  17F6                     u410_20:
 12998                           	line	145
 12999                           	
 13000  17F6                     i1l10846:	
 13001                           ;HMI.c: 144: {
 13002                           ;HMI.c: 145: CenterPressed = 1;
 13003  17F6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 13004                           	line	146
 13005                           ;HMI.c: 146: CenterReleased = 0;
 13006  17F7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 13007  17F8  2FFF               	goto	i1l4550
 13008                           	line	147
 13009                           	
 13010  17F9                     i1l4548:	
 13011                           	line	148
 13012                           ;HMI.c: 147: }
 13013                           ;HMI.c: 148: }
 13014  17F9  2FFF               	goto	i1l4550
 13015                           	line	149
 13016                           	
 13017  17FA                     i1l4547:	
 13018                           	line	151
 13019                           ;HMI.c: 149: else
 13020                           ;HMI.c: 150: {
 13021                           ;HMI.c: 151: CenterDebounceCount = 0;
 13022  17FA  1683               	bsf	status, 5	;RP0=1, select bank1
 13023  17FB  1303               	bcf	status, 6	;RP1=0, select bank1
 13024  17FC  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
 13025                           	line	152
 13026                           ;HMI.c: 152: CenterReleased = 1;
 13027  17FD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 13028  17FE  2FFF               	goto	i1l4550
 13029                           	line	153
 13030                           	
 13031  17FF                     i1l4549:	
 13032                           	line	154
 13033                           	
 13034  17FF                     i1l4550:	
 13035  17FF  0008               	return
 13036                           	opt stack 0
 13037                           GLOBAL	__end_of_Debounce
 13038  1800                     	__end_of_Debounce:
 13039 ;; =============== function _Debounce ends ============
 13040                           
 13041                           	signat	_Debounce,88
 13042                           psect	text1082,local,class=CODE,delta=2
 13043                           global __ptext1082
 13044  0000                     __ptext1082:
 13045                           	global	btemp
 13046  007E                     	btemp set 07Eh
 13047                           
 13048                           	DABS	1,126,2	;btemp
 13049                           	global	wtemp0
 13050  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed May 20 11:51:06 2015

   RobotDrive@radiuslowByte 0029   __end_of_lcd_write_control 1136             ??_UpdateDisplay 0045  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                  _IRdistance 00B8                          fsr 0004  
       ___wmul@multiplicand 0022                         l700 114B                         l703 11BA  
                       l704 11BA                         l705 11BE                         l706 11DD  
                       l690 140E                         l691 1437                         l692 1412  
                       l693 1416                         l694 141A                         l695 141E  
                       l696 1422                         l689 1426                         l697 1444  
                       _GIE 005F                         _RB0 0030                         _RC0 0038  
                       _RB2 0032                         _RC1 0039                         _RB3 0033  
                       _RC2 003A                         _RB4 0034                         _RB5 0035  
                       _RE0 0048                         _RB6 0036                         _RE1 0049  
                       _RE2 004A                         _RX9 00C6                         _TX9 04C6  
                       _abs 139C                         _pos 00C6                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026            ??_robotMoveSpeed 005D  
                _BattCharge 00B0             ?_lcd_set_cursor 0072                        ?_abs 0026  
                      l1402 10FA                        l1410 12E1                        l1411 12E1  
                      l2300 154D                        l1405 10DA                        l2301 1536  
                      l3030 1161                        l2310 1560                        l2302 155E  
                      l2303 1538                        l3040 0469                        l1408 12D0  
                      l3024 1703                        l2304 153A                        l3041 03CC  
                      l3033 0298                        l1409 12B7                        l3025 1739  
                      l2305 153C                        l3034 046C                        l3042 0468  
                      l3026 1725                        l2306 153E                        l2250 004F  
                      l3043 0419                        l3035 02E5                        l3027 1767  
                      l2307 1560                        l2251 0229                        l3036 046B  
                      l3044 0467                        l2308 154A                        l2260 0200  
                      l2252 0050                        l3045 0466                        l3037 0332  
                      l1429 125D                        l2245 136B                        l2309 155F  
                      l2253 023F                        l2261 00E4                        l3038 046A  
                      l3046 046C                        l2270 0221                        l2262 0216  
                      l2254 0056                        l3039 037F                        l2271 0227  
                      l2263 00FB                        l2255 0063                        l2272 0246  
                      l2264 0101                        l2256 0073                        l2248 0028  
                      l2273 0247                        l2265 0105                        l2257 00DD  
                      l2249 003E                        l2290 15E3                        l2274 0247  
                      l2258 0217                        l2266 016A                        l2291 15F1  
                      l2283 15C3                        l2267 0192                        l2259 00E3  
                      l2292 160E                        l2284 15CE                        l2268 01E8  
                      l2285 15FB                        l2293 15F9                        l2277 11B4  
                      l2269 021F                        l2294 160D                        l2286 15CF  
                      l1399 1135                        l2295 160E                        l2287 160C  
                      l2288 15D1                        l2289 15D3                        l2298 1525  
                      l2299 1535                        l6101 0C73                        l6110 0DE5  
                      l6102 0C8B                        l6111 0D77                        l6103 0CA3  
                      l6112 0D65                        l6104 0CD6                        l6113 0D64  
                      l6105 0D78                        l6122 1232                        l6114 0D76  
                      l6106 0D04                        l6130 04F7                        l6115 0D8A  
                      l6107 0D78                        l6131 05A4                        l6116 0D96  
                      l6108 0D35                        l6140 064E                        l6132 0509  
                      l6117 0DA2                        l6109 0D34                        l6141 05D4  
                      l6133 051C                        l6125 0486                        l3750 1626  
                      l6150 0AAF                        l6118 0DE4                        l6142 05E0  
                      l6134 0528                        l6126 04B9                        l3743 1116  
                      l3751 165A                        l6151 0ABB                        l6119 0E0A  
                      l6143 0673                        l6135 0534                        l6127 050A  
                      l3744 1116                        l3752 162D                        l6152 0B57  
                      l6160 0A6F                        l6136 05A3                        l6128 04D5  
                      l4561 1501                        l3745 111B                        l3753 163F  
                      l6081 0BD9                        l6161 0A7A                        l6137 061B  
                      l6129 050A                        l4570 1515                        l4562 14D3  
                      l3746 1121                        l3754 1647                        l6082 0C55  
                      l6146 0AFD                        l6138 05B6                        l4563 1513  
                      l4571 14FF                        l6091 1409                        l3755 1664  
                      l6083 0C04                        l6147 0A91                        l6155 0A3A  
                      l6139 05C8                        l4564 14D4                        l3756 1675  
                      l6084 0C54                        l6164 07F6                        l4580 0FFF  
                      l6148 0AA3                        l6156 09E7                        l4565 14D5  
                      l3749 161F                        l6085 0C50                        l4581 0EE6  
                      l6149 0B32                        l6157 09FF                        l4566 14E6  
                      l6078 1193                        l6094 16A4                        l6086 0C53  
                      l4590 0FB6                        l4582 0F31                        l4567 14E7  
                      l6095 16E9                        l6167 13D0                        l6087 0C52  
                      l4591 0FF0                        l4583 0FC3                        l6159 09F9  
                      l4568 14F9                        l6096 16C9                        l6088 0C55  
                      l4576 0FF2                        l4584 0F7A                        l4592 0FFF  
                      l4569 14FA                        l6097 16E8                        l4585 0FDE  
                      l4577 0E24                        l6098 16E9                        l4586 0F86  
                      l4578 0E8B                        l4587 0F92                        l4579 0E9E  
                      l4588 0F9E                        l4589 0FAA                        l7612 1263  
                      l7620 156F                        l6901 1207                        l7613 126D  
                      l7621 1580                        l7614 1282                        l7622 1581  
                      l7630 1495                        l6910 075A                        l7615 1289  
                      l7623 159A                        l7631 14A6                        l6911 067C  
                      l7624 15A8                        l7632 14A7                        l6920 06C4  
                      l6912 068E                        l7625 15B0                        l7633 14B8  
                      l6921 06CF                        l6913 0695                        l7618 15A9  
                      l7634 14C6                        l6922 06F7                        l6914 0690  
                      l7619 157B                        l7635 14CE                        l6915 076E  
                      l6923 06EC                        l7628 14C7                        l7820 08D4  
                      l6924 0709                        l6916 0691                        l7629 14A1  
                      l7821 08DE                        l6925 074E                        l6917 0692  
                      l7830 092B                        l7822 091A                        l6926 070E  
                      l6918 06AA                        l6870 128C                        l7823 08F4  
                      l6927 0759                        l6919 0693                        l6871 128B  
                      l7824 08E8                        l6928 076D                        l6872 1295  
                      l7825 08F9                        l6929 0773                        l6873 12B5  
                      l6866 116D                        l7826 08FA                        l6867 117A  
                      l7827 090B                        l6876 12E7                        l7828 0919  
                      l6877 12E6                        l7829 0924                        l6878 12F1  
                      l6879 130E                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0862                        STR_2 0859  
                      STR_3 0874                        STR_4 087D                        STR_5 086B  
                      STR_6 0850                        STR_7 08A6                        STR_8 08AA  
                      STR_9 0892                        _BRGH 04C2                        _CREN 00C4  
                      u4110 1168                        u4111 1167                        u4120 1175  
                      u5000 0CE2                        u4121 1174                        u5001 0CE1  
                      u4210 1281                        u5010 0CF4                        u4211 1280  
                      u5011 0CF3                        u4220 156B                        u5020 0D18  
                      u5100 04A9                        u4205 1275                        u4221 156A  
                      u5021 0D17                        u5005 0CDE                        u5101 04A8  
                      u4310 14A5                        u5030 0D2B                        u5110 04C5  
                      u4311 14A4                        u5031 0D2A                        u5015 0CF0  
                      u5111 04C4                        u4240 157F                        u4320 14B1  
                      u4400 0904                        u5040 0D48                        u5120 04E9  
                      u5200 1529                        u4241 157E                        u4321 14B0  
                      u4305 1496                        u4401 0903                        u5041 0D47  
                      u5025 0D14                        u5121 04E8                        u5105 04A5  
                      u5201 1528                        u5050 0D5B                        u5130 0516  
                      u5210 002C                        u4235 1570                        u5051 0D5A  
                      u5035 0D27                        u5115 04C1                        u5211 002B  
                      u4180 1267                        u4260 1592                        u4340 14C5  
                      u4420 0918                        u4500 1618                        u5060 0D84  
                      u5140 0521                        u5220 0042                        u4181 1266  
                      u4261 1591                        u4341 14C4                        u4325 14AD  
                      u4421 0917                        u4405 0900                        u4501 1617  
                      u5045 0D44                        u5125 04E5                        u4430 091E  
                      u4350 08CB                        u4510 1636                        u5070 0D8F  
                      u5150 052D                        u5230 021F                        u4255 1582  
                      u4335 14B9                        u4415 090C                        u4351 08CA  
                      u5055 0D57                        u5231 021E                        u4280 15A7  
                      u4360 08D8                        u4520 1664                        u4600 0345  
                      u5080 0D9B                        u5160 05C2                        u3705 11CB  
                      u4281 15A6                        u4265 158E                        u4361 08D7  
                      u4521 1663                        u4601 0344                        u4290 1491  
                      u4370 08E4                        u4610 0389                        u4530 0255  
                      u5170 05CD                        u5090 0497                        u4195 126E  
                      u4275 159B                        u4291 1490                        u4371 08E3  
                      u4611 0388                        u4531 0254                        u5307 078A  
                      u5091 0496                        _PEIE 005E                        u3900 12F1  
                      u4620 0392                        u4540 025E                        u4700 06EA  
                      u5180 05D9                        u3901 12F0                        u4525 1660  
                      u4621 0391                        u4541 025D                        u4701 06E9  
                      u5317 07B5                        u4390 08F8                        u4630 03D6  
                      u4550 02A2                        u4710 06F6                        u5190 064D  
                      u4391 08F7                        u5327 164D                        u4631 03D5  
                      u4551 02A1                        u4711 06F5                        u5191 064C  
                      u5095 0493                        u5247 008A                        u4640 03DF  
                      u4560 02AB                        u4720 06FD                        u4800 0BB8  
                      u4385 08E9                        u5337 10F6                        u4641 03DE  
                      u4561 02AA                        u4721 06FC                        u4705 06E6  
                      u4801 0BB7                        u5257 00A8                        u3690 11BE  
                      u4650 0423                        u4570 02EF                        u4730 0758  
                      u4810 0BDF                        u3691 11BD                        u5347 1130  
                      u4651 0422                        u4571 02EE                        u4731 0757  
                      u4811 0BDE                        u5195 0649                        u5267 00C6  
                      _RCIE 0465                        u4660 042C                        u4580 02F8  
                      u4740 076C                        u4820 0C0B                        u4900 0AA8  
                      _RCIF 0065                        u5357 1149                        u4661 042B  
                      u4581 02F7                        u4741 076B                        u4821 0C0A  
                      u5277 011D                        u3950 111A                        u4590 033C  
                      u4670 0682                        u4750 1295                        u4830 1701  
                      u4910 0AB4                        u3951 1119                        u5367 1439  
                      u4591 033B                        u4671 0681                        u4751 1294  
                      u4831 1700                        u5287 019A                        u3880 14E1  
                      u4680 06BA                        u4760 1685                        u4840 1719  
                      u4920 0B31                        u3881 14E0                        u4681 06B9  
                      u4761 1684                        u4841 1718                        u4921 0B30  
                      u5297 11A1                        u3890 14F6                        u4690 06CD  
                      u4770 16AA                        u4850 1738                        u4930 09F4  
                      u3891 14F5                        u4691 06CC                        u4771 16A9  
                      u4851 1737                        u4835 16FD                        u4931 09F3  
                      u4860 0E15                        u4940 09F8                        u4765 1681  
                      u4925 0B2D                        u4790 12E0                        u4870 0E78  
                      u4950 0A6E                        u4791 12DF                        u4855 1734  
                      u4871 0E77                        u4951 0A6D                        u4880 15C7  
                      u4960 0C82                        u4785 13B1                        u4881 15C6  
                      u4961 0C81                        u4890 0A9D                        u4970 0C9A  
                      _OERR 00C1                        u4875 0E74                        u4955 0A6A  
                      u4971 0C99                        u4980 0CB4                        u4981 0CB3  
                      u4965 0C7E                        u4990 0CC6                        u4991 0CC5  
                      u4975 0C96                        u4985 0CB0                        u4995 0CC2  
                      _TMR0 0001                  _ChargeMode 1516                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 14CF      __end_of_lcd_write_data 10FB                        abs@v 0026  
                      _isr1 092C                        _main 0015                        _init 133D  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073            ??_robotTurnSpeed 005D                       ??_abs 0028  
     readAvgDistance@tempIR 0034                       ?_Menu 0072                       l11020 1426  
                     l11012 140D                       l11100 1670                       l11014 1422  
                     l11022 1437                       l11030 1139                       l11102 1671  
                     l11110 025E                       l11024 143B                       l11016 1424  
                     l11032 113D                       l11040 1128                       l11104 1672  
                     l11120 02EF                       l11112 0298                       l11200 075A  
                     l11026 1444                       l11018 1425                       l11034 1141  
                     l11042 112A                       l11050 10F0                       l11130 037F  
                     l11122 02F8                       l11114 02A2                       l11106 024A  
                     l11202 076E                       l11210 1296                       l11036 1145  
                     l11028 1136                       l11044 112B                       l11052 10F1  
                     l11060 13D7                       l11140 03DF                       l11132 0389  
                     l11124 0332                       l11116 02AB                       l11108 0255  
                     l11204 0773                       l11220 12B5                       l11212 12A2  
                     l11300 07BA                       l11038 1125                       l11046 10EB  
                     l11054 117B                       l11070 13F9                       l11062 13DB  
                     l11142 0419                       l11134 0392                       l11126 033C  
                     l11118 02E5                       l11150 067C                       l11214 12A8  
                     l11206 128A                       l11222 1676                       l11230 139C  
                     l11302 07CD                       l11310 114C                       l11048 10EE  
                     l11056 1208                       l11072 1401                       l11064 13E3  
                     l11080 161F                       l11144 0423                       l11136 03CC  
                     l11128 0345                       l11160 06AA                       l11152 0682  
                     l11216 12B0                       l11208 128C                       l11224 1685  
                     l11232 13D0                       l11240 12B7                       l11304 07D6  
                     l11312 115A                       l11320 1342                       l11400 0F73  
                     l11066 13E9                       l11058 13D1                       l11090 1636  
                     l11082 1626                       l11074 160F                       l11146 042C  
                     l11138 03D6                       l11170 06C4                       l11162 06B2  
                     l11154 0689                       l11218 12B1                       l11226 16AA  
                     l11234 10D3                       l11242 12C7                       l11250 123A  
                     l11306 07E1                       l11314 1161                       l11330 1359  
                     l11322 134A                       l11410 0FAA                       l11402 0F7A  
                     l11068 13F1                       l11092 163F                       l11084 1629  
                     l11076 1613                       l11180 06EC                       l11172 06C7  
                     l11164 06B6                       l11156 0694                       l11148 0677  
                     l11228 16C9                       l11236 10D4                       l11244 12D0  
                     l11260 124B                       l11252 123B                       l11308 07EA  
                     l11340 136A                       l11332 135E                       l11324 134C  
                     l11316 133D                       l11420 0FE4                       l11412 0FB6  
                     l11404 0F86                       l11500 09D3                       l10710 11EA  
                     l11094 1666                       l11086 162A                       l11078 1618  
                     l11190 0709                       l11182 06F0                       l11174 06CE  
                     l11166 06BA                       l11158 0695                       l11238 12B6  
                     l11262 1251                       l11254 123E                       l11246 1233  
                     l11270 0BB8                       l11334 1363                       l11326 1350  
                     l11318 133E                       l11350 1710                       l11342 16EA  
                     l11422 0FF1                       l11414 0FC2                       l11406 0F92  
                     l11430 15B1                       l11510 09F9                       l11502 09DB  
                     l10720 11F6                       l10712 11EC                       l10704 11DE  
                     l10800 111B                       l11096 166C                       l11088 1632  
                     l11192 070E                       l11184 06F7                       l11176 06CF  
                     l11168 06BE                       l11264 1257                       l11256 123F  
                     l11248 1237                       l11280 0C51                       l11272 0BD9  
                     l11336 1368                       l11328 1354                       l11352 1719  
                     l11344 16F4                       l11408 0F9E                       l11416 0FC3  
                     l11424 0FF2                       l11360 0E0B                       l11440 15D3  
                     l11432 15B6                       l11520 0A2E                       l11512 09FF  
                     l11504 09E7                       l11600 0DDE                       l10722 11F7  
                     l10714 11ED                       l10706 11E1                       l10730 14D2  
                     l10802 111F                       l11098 166F                       l11194 0742  
                     l11186 06FD                       l11178 06EB                       l11258 1245  
                     l11274 0BDF                       l11266 0B5B                       l11290 078F  
                     l11282 0774                       l11338 1369                       l11354 172B  
                     l11346 1702                       l11418 0FDE                       l11370 0E69  
                     l11362 0E24                       l11450 15F5                       l11442 15E1  
                     l11434 15C3                       l11522 0A34                       l11514 0A0A  
                     l11506 09ED                       l11602 0DE5                       l11530 0C5A  
                     l11610 0471                       l10724 11FA                       l10716 11F0  
                     l10708 11E9                       l10740 14F6                       l10732 14D5  
                     l10804 1121                       l10900 1267                       l11196 0749  
                     l11188 0704                       l11276 0C04                       l11268 0BB3  
                     l11292 0799                       l11284 0778                       l11356 1739  
                     l11348 1703                       l11380 0EBB                       l11372 0E78  
                     l11364 0E2A                       l11452 15F6                       l11444 15E3  
                     l11436 15C7                       l11460 0A7B                       l11516 0A15  
                     l11508 09F4                       l11524 0A3A                       l11604 0DF4  
                     l11540 0C8B                       l11532 0C6B                       l11620 04A9  
                     l11612 0482                       l11700 1516                       l10590 11D4  
                     l10726 11FB                       l10718 11F3                       l10742 14FA  
                     l10734 14DD                       l10750 1513                       l10902 1274  
                     l10910 1565                       l11198 074E                       l11278 0C0B  
                     l11294 07A3                       l11286 077E                       l11358 1759  
                     l11390 0F14                       l11382 0EE6                       l11374 0E8B  
                     l11366 0E52                       l11454 15F8                       l11446 15EF  
                     l11438 15C8                       l11470 0AA3                       l11462 0A7F  
                     l11518 0A22                       l11526 0A6F                       l11606 0E05  
                     l11550 0CC6                       l11542 0C9A                       l11534 0C6E  
                     l11630 04F6                       l11622 04B9                       l11614 0486  
                     l11710 153E                       l11702 151E                       l10592 11DD  
                     l10584 11B5                       l10728 11FC                       l10752 1515  
                     l10744 14FE                       l10736 14E1                       l10760 1300  
                     l10576 1177                       l10904 1282                       l10920 1581  
                     l10912 156B                       l11296 07A9                       l11288 0784  
                     l11392 0F25                       l11384 0EF2                       l11376 0E9E  
                     l11368 0E63                       l11456 15FA                       l11448 15F1  
                     l11480 0AC3                       l11472 0AA8                       l11464 0A91  
                     l11560 0D18                       l11552 0CD6                       l11544 0CA3  
                     l11536 0C73                       l11528 0C56                       l11640 0521  
                     l11632 04F7                       l11624 04C5                       l11616 048B  
                     l11608 046D                       l11712 1544                       l11720 154D  
                     l11704 1525                       l11800 01C3                       l10586 11B8  
                     l10746 1500                       l10738 14E7                       l10762 130C  
                     l10754 12E5                       l10578 1179                       l10850 1168  
                     l10906 1289                       l10922 1592                       l10914 156F  
                     l10930 15A9                       l11298 07AF                       l11394 0F31  
                     l11386 0EFD                       l11378 0EA4                       l11458 15FB  
                     l11490 0AF7                       l11482 0ACE                       l11474 0AAF  
                     l11466 0A97                       l11570 0D4E                       l11562 0D1E  
                     l11554 0CE2                       l11546 0CA8                       l11538 0C82  
                     l11650 0547                       l11642 0528                       l11634 0510  
                     l11626 04D5                       l11618 0497                       l11714 1545  
                     l11706 1529                       l11722 1194                       l11802 01D1  
                     l11810 0200                       l11730 001B                       l10588 11C1  
                     l10748 1501                       l10764 130D                       l10756 12E7  
                     l10860 1177                       l10852 116A                       l10932 15B0  
                     l10924 1598                       l10916 1576                       l10908 1561  
                     l10940 149C                       l11396 0F3D                       l11388 0F0E  
                     l11484 0AD7                       l11476 0AB4                       l11468 0A9D  
                     l11492 0AFD                       l11580 0D8A                       l11572 0D5B  
                     l11564 0D2B                       l11556 0CF4                       l11548 0CB4  
                     l11660 0597                       l11652 0550                       l11644 052D  
                     l11636 0516                       l11628 04E9                       l11716 1549  
                     l11708 152A                       l11724 1199                       l11804 01D6  
                     l11812 0217                       l11820 023F                       l11740 002D  
                     l11732 001D                       l10758 12F2                       l10862 117A  
                     l10854 116C                       l10926 159A                       l10918 157B  
                     l10950 14BF                       l10942 14A1                       l10934 1489  
                     l11398 0F48                       l11486 0AE3                       l11478 0ABB  
                     l11494 0B32                       l11590 0DAA                       l11582 0D8F  
                     l11574 0D65                       l11566 0D35                       l11558 0D04  
                     l11670 05C2                       l11662 059D                       l11654 055C  
                     l11646 0534                       l11638 051C                       l11718 154C  
                     l11726 11A8                       l11814 0221                       l11806 01E8  
                     l11750 004D                       l11742 0033                       l11734 0022  
                     l10856 116D                       l10848 1162                       l10928 15A1  
                     l10944 14A7                       l10936 1491                       l10952 14C7  
                     l10960 08D4                       l11496 0B43                       l11488 0AF1  
                     l11592 0DB5                       l11584 0D96                       l11576 0D7E  
                     l11568 0D48                       l11680 05E0                       l11672 05C8  
                     l11656 056A                       l11648 053C                       l11664 05A4  
                     l11816 0228                       l11808 01FF                       l11760 0082  
                     l11752 0050                       l11744 0038                       l11736 0028  
                     l11728 0015                       l10858 1175                       l10954 14CE  
                     l10946 14B1                       l10938 1495                       l10970 08EF  
                     l10962 08D8                       l11842 0FCA                       l11498 0B48  
                     l11594 0DBE                       l11586 0D9B                       l11578 0D84  
                     l11690 0615                       l11682 05EB                       l11674 05CD  
                     l11666 05B6                       l11658 0573                       l11770 00E4  
                     l11762 0091                       l11754 0056                       l11818 0229  
                     l11738 002C                       l11746 003E                       l10796 1111  
                     l10948 14B8                       l10980 0912                       l10972 08F4  
                     l10964 08DE                       l10956 08C4                       l11596 0DCA  
                     l11588 0DA2                       l11684 05F6                       l11676 05D4  
                     l11668 05BC                       l11692 061B                       l11780 0124  
                     l11772 00FB                       l11764 00AF                       l11756 0063  
                     l11748 0042                       l10798 1113                       l10974 08FA  
                     l10966 08E4                       l10982 091A                       l10958 08CB  
                     l11598 0DD8                       l11686 0603                       l11678 05D9  
                     l11694 064E                       l11790 016A                       l11782 0133  
                     l11774 0101                       l11766 00BE                       l11758 0073  
                     l10896 125E                       l10984 091E                       l10976 0904  
                     l10968 08E8                       l11696 065D                       l11688 060F  
                     l11792 0192                       l11784 0142                       l11776 0106  
                     l11768 00DD                       l10898 1263                       l10986 0924  
                     l10978 090B                       l11698 066E                       l11794 01A1  
                     l11786 0151                       l11778 0115                       l10988 092B  
                     l11796 01AD                       l11788 0156                       l11798 01B2  
      __size_of_calibrateIR 005E                       ?_isr1 0072                       ?_main 0072  
                     ?_init 0072                       _EEADR 010D                       STR_10 089E  
                     STR_11 08AE                       STR_20 08B5                       STR_12 08A2  
                     STR_21 08B8                       STR_13 083A                       STR_22 08B2  
                     STR_14 082A                       STR_23 08BB                       STR_15 0896  
                     STR_24 08BE                       STR_16 0885                       STR_25 08B2  
                     STR_17 089A                       STR_26 0847                       STR_18 081A  
                     STR_19 088D             __end_of___awmod 092C                       _CARRY 0018  
           __end_of___lwdiv 15B1             __end_of___lwmod 14CF                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019                       _Disp1 00B4  
                     _Disp2 00B6      lcd_write_data@databyte 0022    __size_of_robot_turnRight 0207  
        i1___lwmod@dividend 0074                       _total 00C8              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00DB             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0774            __end_of_Debounce 1800          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072            robotFollow@temp1 0061  
          robotFollow@speed 0059                __end_of_Menu 1516  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00E4                __end_of_isr1 09D3                __end_of_main 024A  
              __end_of_init 136C             rotate@direction 0025              _Init_Follow_IR 1194  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
     __end_of_RobotBattRead 07F7                      ??_isr1 0078                      ??_main 0063  
                    ??_init 0023         __end_of_ReadButtons 139C               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of_adc_read 11DE                 ?_ChargeMode 0072  
                    i1l2240 09C7                      i1l2241 09C6                      i1l2242 09C7  
                    i1l2234 097F                      i1l2235 0953                      i1l2236 0970  
                    i1l2237 097E                      i1l2238 09A1                      i1l2239 09A0  
                    i1l4540 17A4                      i1l4541 17BE                      i1l4550 17FF  
                    i1l4542 17BD                      i1l4543 17C2                      i1l4535 1782  
                    i1l4544 17DC                      i1l4536 1781                      i1l4545 17DB  
                    i1l4537 1786                      i1l4553 1379                      i1l4546 17E0  
                    i1l4538 17A0                      i1l4554 139B                      i1l4547 17FA  
                    i1l4539 179F                      i1l4555 1381                      i1l4548 17F9  
                    i1l4556 1389                      i1l4549 17FF                      i1l4557 1391  
                    i1l4558 1399                      i1l7630 144F                      i1l7631 1460  
                    i1l7632 1461                      i1l7633 1472                      i1l7634 1480  
                    i1l7635 1488                      i1l7628 1481                      i1l7629 145B  
                    u400_20 1798                      u400_21 1797                      u401_20 179C  
                    u401_21 179B                      u410_20 17F6                      u402_20 17AA  
                    u410_21 17F5                      u402_21 17A9                      u403_20 17B6  
                    u403_21 17B5                      u404_20 17BA                      u404_21 17B9  
                    u405_20 17C8                      u405_21 17C7                      u406_20 17D4  
                    u406_21 17D3                      u407_20 17D8                      u407_21 17D7  
                    u408_20 17E6                      u408_21 17E5                      u409_20 17F2  
                    u409_21 17F1                      u444_20 144B                      u380_20 09A6  
                    u444_21 144A                      u380_21 09A5                      u381_20 09AC  
                    u381_21 09AB                      u445_25 1450                      u446_20 145F  
                    u382_20 09C4                      u374_20 0930                      u446_21 145E  
                    u382_21 09C3                      u374_21 092F                 _DistLowByte 006E  
                    u447_20 146B                      u383_20 1375                      u375_20 0951  
                    u447_21 146A                      u383_21 1374                      u375_21 0950  
                    u447_25 1467                      u384_20 137D                      u376_20 096A  
                    u384_21 137C                      u376_21 0969                      u448_25 1473  
                    u449_20 147F                      u385_20 1385                      u377_20 0975  
                    u449_21 147E                      u385_21 1384                      u377_21 0974  
                    u386_20 138D                      u378_20 0985                      u386_21 138C  
                    u378_21 0984                      u387_20 1395                      u379_20 099B  
                    u387_21 1394                      u379_21 099A                      u396_20 176E  
                    u396_21 176D                      u397_20 177A                      u397_21 1779  
                    u398_20 177E                      u398_21 177D                      u399_20 178C  
                    u399_21 178B                      _TMR0IE 005D                      _TMR0IF 005A  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038C  
          __end_of_lcd_init 125E                      _adcVal 0069             _UpDebounceCount 00D3  
    __end_of_Init_Follow_IR 11B5             RobotDrive@speed 0022                  _RobotDrive 13D1  
                    ___wmul 125E                   ??___awmod 0024                _turnhighByte 00DA  
              ??_ADCconvert 002E                   ??___lwdiv 002A                   ??___lwmod 0032  
          __end_of_init_adc 114C              ??_readDistance 002A             ___awmod@divisor 0020  
  __end_of_lcd_write_string 12E2             ___awmod@counter 0025                ?_robotFollow 0059  
                    _rotate 160F                      _rxfifo 00A0                      clrloop 07F8  
                    _txfifo 01A0                      _rxiptr 00D7                      _rxoptr 00D8  
               _BumpSensors 006B                      _txiptr 00DC                      _txoptr 00DD  
          __end_of_ser_init 1208            __end_of_ser_isrx 117B           __end_ofi1___lwmod 1489  
                    saved_w 007E               main@shortwall 0066                _AngleLowByte 00CD  
               _LeftPressed 0384      RobotDrive@speedlowByte 0027                   ??_sprintf 0039  
               _DownPressed 0382           lcd_write_string@s 0027          __end_of_ADCconvert 046D  
         ??_robot_turnRight 005D        robot_turnRight@temp1 0060        robot_turnRight@speed 0059  
              _CliffSensors 006C              __pcstackCOMMON 0072             ?_Init_Follow_IR 0072  
              __pidataBANK1 10DB                 _ReadButtons 136C         __size_of_ChargeMode 004B  
          ??_lcd_set_cursor 0023                   ?_Debounce 0072               _buttonPressed 007D  
                __pbssBANK0 0069                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00CF          _RightDebounceCount 00D2                  __pmaintext 0015  
               ?_RobotDrive 0022                     ?___wmul 0020       __end_of_robotLoadSong 1233  
                __pintentry 0004                _DistHighByte 006D                  __ptext1040 1516  
     __end_of_UpdateDisplay 1000                  __ptext1041 046D                  __ptext1050 0774  
                __ptext1042 0C56                  __ptext1051 0B58                  __ptext1043 09D3  
                __ptext1060 160F                  __ptext1052 1233                  __ptext1044 0A7B  
                __ptext1061 13D1                  __ptext1053 12B6                  __ptext1045 15B1  
                __ptext1070 1561                  __ptext1062 1208                  __ptext1054 10D0  
                __ptext1046 0E0B                  __ptext1071 125E                  __ptext1063 117B  
                __ptext1055 139C                  __ptext1047 16EA                  __ptext1039 1194  
                __ptext1080 1445                  __ptext1072 1162                  __ptext1064 10E8  
                __ptext1056 1676                  __ptext1048 133D                  __ptext1081 1768  
                __ptext1073 110E                  __ptext1065 1122                  __ptext1057 128A  
                __ptext1049 114C                  __ptext1082 0000                  __ptext1074 12E2  
                __ptext1066 1136                  __ptext1058 0674                  __ptext1075 14CF  
                __ptext1067 140A                  __ptext1059 024A                  __ptext1076 11DE  
                __ptext1068 08C4                  __ptext1077 11B5                  __ptext1069 1489  
                __ptext1078 092C                  __ptext1079 136C          __size_of_ser_getch 002C  
                 ?_adc_read 0020                     ?_rotate 0023          __size_of_ser_putch 002D  
        __size_of_robo_init 0019                     i1l11000 1461                     i1l11010 1488  
                   i1l11002 146B                     i1l11004 1472                     i1l11006 1479  
                   i1l11008 1481                     i1l10700 1399                     i1l10620 092C  
                   i1l10702 139B                     i1l10630 0951                     i1l10622 0930  
                   i1l10640 0975                     i1l10632 0953                     i1l10624 0931  
                   i1l10810 1774                     i1l10650 099B                     i1l10634 096A  
                   i1l10626 093B                     i1l10642 097F                     i1l10820 1798  
                   i1l10812 177A                     i1l10660 09BA                     i1l10644 0985  
                   i1l10652 09A1                     i1l10636 096B                     i1l10628 093C  
                   i1l10830 17BA                     i1l10822 179C                     i1l10814 177E  
                   i1l10806 1768                     i1l10670 1375                     i1l10662 09BE  
                   i1l10654 09A6                     i1l10646 098F                     i1l10638 0970  
                   i1l10840 17E6                     i1l10832 17C8                     i1l10824 17AA  
                   i1l10816 178C                     i1l10808 176E                     i1l10680 1380  
                   i1l10672 1376                     i1l10664 09C4                     i1l10656 09AC  
                   i1l10648 0995                     i1l10842 17EC                     i1l10834 17CE  
                   i1l10826 17B0                     i1l10818 1792                     i1l10690 138E  
                   i1l10682 1385                     i1l10674 1378                     i1l10666 136C  
                   i1l10658 09B4                     i1l10844 17F2                     i1l10836 17D4  
                   i1l10828 17B6                     i1l10692 1390                     i1l10684 1386  
                   i1l10676 137D                     i1l10668 1371                     i1l10846 17F6  
                   i1l10838 17D8                     i1l10694 1395                     i1l10686 1388  
                   i1l10678 137E                     i1l10696 1396                     i1l10688 138D  
                   i1l10698 1398                     i1l10990 1445                     i1l10992 144B  
                   i1l10994 144F                     i1l10996 1456                     i1l10998 145B  
        __size_of_robotTurn 0074                  ??_Debounce 0072            ??_lcd_write_data 0020  
                 ?_lcd_init 0072                     _SSPSTAT 0094        __end_of_readDistance 1162  
                 ?_init_adc 0072                   ?_ser_init 0072                   ?_ser_isrx 0072  
          RobotDrive@radius 0024               ??_calibrateIR 0059                     ___awmod 08C4  
           __size_of___wmul 002C                     ___lwdiv 1561                     ___lwmod 1489  
 __size_of_adc_read_channel 003B                  ??_adc_read 0022             __size_of_rotate 0067  
                   _dpowers 0810                __size_of_abs 0035        __size_of_robotFollow 01B5  
          ___awmod@dividend 0022                     _lowByte 00D6                     _ser_tmp 00D9  
                   _sprintf 0674                  ??_lcd_init 0023         __size_of_RobotDrive 0039  
      end_of_initialization 1339               _AngleHighByte 00CC                ??_ChargeMode 0059  
        robot_read@readType 0023           __end_of_ser_getch 12B6                     init_ram 10FF  
                ??_init_adc 0020     __size_of_robotMoveSpeed 00DD           __end_of_ser_putch 130F  
   RobotDrive@speedhighByte 0028           __end_of_robo_init 1194                _LeftReleased 0385  
         __end_of_robotTurn 16EA                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038A  
  __size_of_readAvgDistance 007E                  _robot_read 0B58          RobotBattRead@temp1 0024  
         ?_lcd_write_string 0027          __end_of_ChargeMode 1561         __end_of_calibrateIR 160F  
        ??_lcd_write_string 0029             _robot_turnRight 046D                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A8  
                 i1___lwmod 1445                  _totalSteps 00CA                  main@choice 0068  
             ?_spi_transfer 0072            ??_Init_Follow_IR 0059                   _BattState 00B2  
    __size_of_RobotBattRead 0083                 _VwallSensor 006F               _CenterPressed 0380  
              ?_ReadButtons 0072              __end_of___wmul 128A           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 1676         start_initialization 130F  
    UpdateDisplay@LCDOutput 0049                 __end_of_abs 13D1       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072          _TotalDistTravelled 00BC  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023      robotFollow@turncounter 005F  
                 _UpPressed 038B                ??_RobotDrive 0026              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 15B1                 __pdataBANK1 00DE     __end_of_robot_turnRight 0674  
          _adc_read_channel 140A                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 114C               _RobotBattRead 0774           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
    robotMoveSpeed@distance 0059          __end_of_RobotDrive 140A           __size_of_lcd_init 002B  
            _robotMoveSpeed 0A7B                 sprintf@_val 003F                 sprintf@flag 003D  
               sprintf@prec 003E                _current_step 00EA            readAvgDistance@i 0036  
          readAvgDistance@j 0032           __size_of_init_adc 0016            ___lwdiv@dividend 0028  
               _angleTurned 00BE                    ?___awmod 0020           __size_of_ser_init 002A  
         __size_of_ser_isrx 0019                    ?___lwdiv 0026                    ?___lwmod 002E  
                 __pstrings 0800                   _dist_high 00C2              ?_RobotBattRead 0072  
       readDistance@readVal 002C              _robotTurnSpeed 09D3         robotTurnSpeed@angle 0059  
       robotTurnSpeed@temp1 0060         robotTurnSpeed@speed 005B                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
    __end_of_robotMoveSpeed 0B58      __size_of_robotLoadSong 002B     __size_of_lcd_set_cursor 000B  
         interrupt_function 0004      __size_of_UpdateDisplay 01F5              ___wmul@product 0024  
       __size_of_robot_read 00FE                  ser_putch@c 0021                   _ser_getch 128A  
                 _ser_putch 12E2                   _robo_init 117B                   _robotTurn 1676  
              _RightPressed 0389            ?_robot_turnRight 0059        __size_of_ReadButtons 0030  
             ??_robotFollow 005D        __end_of_spi_transfer 1122      __end_of_robotTurnSpeed 0A7B  
               __stringbase 080F           ___wmul@multiplier 0020            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 1768           _LeftDebounceCount 00D0  
           ?_robotMoveSpeed 0059   __size_of_lcd_write_string 002C     __size_of_lcd_write_data 0013  
                ?_ser_getch 0072                  ?_ser_putch 0072     adc_read_channel@channel 0027  
                ?_robo_init 0072                   init_fetch 10FB                  ?_robotTurn 0022  
                _ADCconvert 024A             ??_RobotBattRead 0022            __size_of___awmod 0068  
             _robotLoadSong 1208            __size_of___lwdiv 0050            __size_of___lwmod 0046  
             _UpdateDisplay 0E0B                    _adc_read 11B5             ?_robotTurnSpeed 0059  
               _currentMenu 00D4    robot_turnRight@AdcTarget 005B             ___lwdiv@divisor 0026  
       __end_of_robotFollow 0E0B             ___lwdiv@counter 002D                 _menuStrings 00DE  
                  _highByte 00D5                    _lcd_init 1233                    _dist_low 00C4  
          __size_of_sprintf 0100    __end_of_adc_read_channel 1445   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 1136               __size_of_isr1 00A7  
             __size_of_main 0235               __size_of_init 002F                    clear_ram 07F7  
                  _ser_init 11DE        robotFollow@AdcTarget 005B                    _ser_isrx 1162  
           _readAvgDistance 16EA                ?_calibrateIR 0072              ?_robotLoadSong 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00CE  
              _RTC_FLAG_1MS 0386          UpdateDisplay@F1261 0190                    intlevel1 0000  
            _lcd_set_cursor 10D0                   sprintf@ap 003C                   sprintf@sp 0043  
            robotTurn@angle 0022            ___lwmod@dividend 0030          __end_of_robot_read 0C56  
                 stringcode 080A                 ??_ser_getch 0020                 ??_ser_putch 0020  
             _distTravelled 00C0                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 1122  
   __size_of_Init_Follow_IR 0021                 _robotFollow 0C56          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
       robotMoveSpeed@temp1 0060         robotMoveSpeed@speed 005B             ___lwmod@divisor 002E  
                _ROBOTerror 00D1             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 10DB  
          _lcd_write_string 12B6    RobotDrive@radiushighByte 002A                _spi_transfer 110E  
               _RTC_Counter 00BA     __end_of_readAvgDistance 1768              _lcd_write_data 10E8  
           ??_robotLoadSong 0022  
