

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 18 11:41:40 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_robotTurnSpeed
    53                           	FNCALL	_main,_robotMoveSpeed
    54                           	FNCALL	_main,_robotFollow
    55                           	FNCALL	_main,_ChargeMode
    56                           	FNCALL	_ChargeMode,_ser_putch
    57                           	FNCALL	_ChargeMode,_UpdateDisplay
    58                           	FNCALL	_robotFollow,_RobotDrive
    59                           	FNCALL	_robotFollow,_readAvgDistance
    60                           	FNCALL	_robotFollow,_robot_read
    61                           	FNCALL	_robotFollow,_UpdateDisplay
    62                           	FNCALL	_robotFollow,_abs
    63                           	FNCALL	_robotMoveSpeed,_RobotDrive
    64                           	FNCALL	_robotMoveSpeed,_robot_read
    65                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    66                           	FNCALL	_robotMoveSpeed,_abs
    67                           	FNCALL	_robotTurnSpeed,_robotTurn
    68                           	FNCALL	_robotTurnSpeed,_robot_read
    69                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    70                           	FNCALL	_robotTurnSpeed,_abs
    71                           	FNCALL	_calibrateIR,_rotate
    72                           	FNCALL	_calibrateIR,_UpdateDisplay
    73                           	FNCALL	_UpdateDisplay,_lcd_write_control
    74                           	FNCALL	_UpdateDisplay,_sprintf
    75                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    76                           	FNCALL	_UpdateDisplay,_lcd_write_string
    77                           	FNCALL	_UpdateDisplay,___awmod
    78                           	FNCALL	_readAvgDistance,_readDistance
    79                           	FNCALL	_readAvgDistance,___lwdiv
    80                           	FNCALL	_readAvgDistance,_ADCconvert
    81                           	FNCALL	_init,_ser_init
    82                           	FNCALL	_init,_init_adc
    83                           	FNCALL	_init,_lcd_init
    84                           	FNCALL	_init,_robo_init
    85                           	FNCALL	_readDistance,_adc_read_channel
    86                           	FNCALL	_robot_read,_ser_putch
    87                           	FNCALL	_robot_read,_ser_getch
    88                           	FNCALL	_lcd_init,_lcd_write_control
    89                           	FNCALL	_lcd_write_string,_lcd_write_data
    90                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    91                           	FNCALL	_abs,___wmul
    92                           	FNCALL	_robotTurn,_ser_putch
    93                           	FNCALL	_RobotDrive,_ser_putch
    94                           	FNCALL	_ser_getch,_ser_isrx
    95                           	FNCALL	_sprintf,___lwdiv
    96                           	FNCALL	_sprintf,___lwmod
    97                           	FNCALL	_ADCconvert,___wmul
    98                           	FNCALL	_ADCconvert,___lwdiv
    99                           	FNCALL	_rotate,_spi_transfer
   100                           	FNCALL	_robo_init,_ser_putch
   101                           	FNCALL	_adc_read_channel,_adc_read
   102                           	FNROOT	_main
   103                           	FNCALL	_isr1,i1___lwmod
   104                           	FNCALL	_isr1,_ReadButtons
   105                           	FNCALL	_ReadButtons,_Debounce
   106                           	FNCALL	intlevel1,_isr1
   107                           	global	intlevel1
   108                           	FNROOT	intlevel1
   109                           	global	_menuStrings
   110                           	global	_shortMenuStrings
   111                           	global	_current_step
   112                           psect	idataBANK1,class=CODE,space=0,delta=2
   113                           global __pidataBANK1
   114  14D6                     __pidataBANK1:
   115                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   116                           	line	49
   117                           
   118                           ;initializer for _menuStrings
   119  14D6  3453               	retlw	(STR_1-__stringbase)&0ffh
   120  14D7  344A               	retlw	(STR_2-__stringbase)&0ffh
   121  14D8  3465               	retlw	(STR_3-__stringbase)&0ffh
   122  14D9  346E               	retlw	(STR_4-__stringbase)&0ffh
   123  14DA  345C               	retlw	(STR_5-__stringbase)&0ffh
   124  14DB  3441               	retlw	(STR_6-__stringbase)&0ffh
   125                           	line	50
   126                           
   127                           ;initializer for _shortMenuStrings
   128  14DC  3492               	retlw	(STR_7-__stringbase)&0ffh
   129  14DD  3496               	retlw	(STR_8-__stringbase)&0ffh
   130  14DE  347E               	retlw	(STR_9-__stringbase)&0ffh
   131  14DF  348A               	retlw	(STR_10-__stringbase)&0ffh
   132  14E0  349A               	retlw	(STR_11-__stringbase)&0ffh
   133  14E1  348E               	retlw	(STR_12-__stringbase)&0ffh
   134                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   135                           	line	45
   136                           
   137                           ;initializer for _current_step
   138  14E2  343C               	retlw	03Ch
   139                           	global	_dpowers
   140                           psect	strings,class=STRING,delta=2
   141                           global __pstrings
   142  0800                     __pstrings:
   143                           ;	global	stringdir,stringtab,__stringbase
   144  0800                     stringtab:
   145                           ;	String table - string pointers are 1 byte each
   146  0800  1BFF               	btfsc	(btemp+1),7
   147  0801  280A               	ljmp	stringcode
   148  0802  1383               	bcf	status,7
   149  0803  187F               	btfsc	(btemp+1),0
   150  0804  1783               	bsf	status,7
   151  0805  0800               	movf	indf,w
   152  0806  0A84               	incf fsr
   153  0807  1903               skipnz
   154  0808  0AFF               incf btemp+1
   155  0809  0008               	return
   156  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   157  080A  3008               movlw high(stringdir)
   158  080B  008A               movwf pclath
   159  080C  0804               movf fsr,w
   160  080D  0A84               incf fsr
   161  080E  0782               	addwf pc
   162  080F                     __stringbase:
   163  080F  3400               	retlw	0
   164                           psect	strings
   165                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   166                           	line	350
   167  0810                     _dpowers:
   168  0810  3401               	retlw	01h
   169  0811  3400               	retlw	0
   170                           
   171  0812  340A               	retlw	0Ah
   172  0813  3400               	retlw	0
   173                           
   174  0814  3464               	retlw	064h
   175  0815  3400               	retlw	0
   176                           
   177  0816  34E8               	retlw	0E8h
   178  0817  3403               	retlw	03h
   179                           
   180  0818  3410               	retlw	010h
   181  0819  3427               	retlw	027h
   182                           
   183                           	global	_dpowers
   184                           	global	_adcVal
   185                           	global	_BumpSensors
   186                           	global	_txiptr
   187                           	global	UpdateDisplay@F1249
   188                           	global	_txfifo
   189                           	global	_buttonPressed
   190                           	global	_CenterPressed
   191                           	global	_CenterReleased
   192                           	global	_DownPressed
   193                           	global	_DownReleased
   194                           	global	_LeftPressed
   195                           	global	_LeftReleased
   196                           	global	_RTC_FLAG_1MS
   197                           	global	_RTC_FLAG_250MS
   198                           	global	_RTC_FLAG_500MS
   199                           	global	_RightPressed
   200                           	global	_RightReleased
   201                           	global	_UpPressed
   202                           	global	_UpReleased
   203                           	global	_rxfifo
   204                           	global	_Disp1
   205                           	global	_Disp2
   206                           	global	_IRdistance
   207                           	global	_RTC_Counter
   208                           	global	_TotalDistTravelled
   209                           	global	_angleTurned
   210                           	global	_distTravelled
   211                           	global	_dist_high
   212                           	global	_dist_low
   213                           	global	_pos
   214                           	global	_total
   215                           	global	_totalSteps
   216                           	global	_AngleHighByte
   217                           	global	_AngleLowByte
   218                           	global	_CenterDebounceCount
   219                           	global	_DistHighByte
   220                           	global	_DistLowByte
   221                           	global	_DownDebounceCount
   222                           	global	_LeftDebounceCount
   223                           	global	_ROBOTerror
   224                           	global	_RightDebounceCount
   225                           	global	_UpDebounceCount
   226                           	global	_VwallSensor
   227                           	global	_currentMenu
   228                           	global	_highByte
   229                           	global	_lowByte
   230                           	global	_rxiptr
   231                           	global	_rxoptr
   232                           	global	_ser_tmp
   233                           	global	_turnhighByte
   234                           	global	_turnlowByte
   235                           	global	_txoptr
   236                           	global	_ADCON0
   237  001F                     _ADCON0	set	31
   238                           	global	_ADRESH
   239  001E                     _ADRESH	set	30
   240                           	global	_PORTA
   241  0005                     _PORTA	set	5
   242                           	global	_PORTD
   243  0008                     _PORTD	set	8
   244                           	global	_PORTE
   245  0009                     _PORTE	set	9
   246                           	global	_RCREG
   247  001A                     _RCREG	set	26
   248                           	global	_SSPBUF
   249  0013                     _SSPBUF	set	19
   250                           	global	_SSPCON
   251  0014                     _SSPCON	set	20
   252                           	global	_TMR0
   253  0001                     _TMR0	set	1
   254                           	global	_TXREG
   255  0019                     _TXREG	set	25
   256                           	global	AT25256A@CS0
   257  0038                     AT25256A@CS0	set	56
   258                           	global	AT25256A@CS1
   259  0039                     AT25256A@CS1	set	57
   260                           	global	_CARRY
   261  0018                     _CARRY	set	24
   262                           	global	_CHS0
   263  00FB                     _CHS0	set	251
   264                           	global	_CHS1
   265  00FC                     _CHS1	set	252
   266                           	global	_CHS2
   267  00FD                     _CHS2	set	253
   268                           	global	_CREN
   269  00C4                     _CREN	set	196
   270                           	global	_GIE
   271  005F                     _GIE	set	95
   272                           	global	_GO
   273  00FA                     _GO	set	250
   274                           	global	_OERR
   275  00C1                     _OERR	set	193
   276                           	global	_PEIE
   277  005E                     _PEIE	set	94
   278                           	global	_RB0
   279  0030                     _RB0	set	48
   280                           	global	_RB2
   281  0032                     _RB2	set	50
   282                           	global	_RB3
   283  0033                     _RB3	set	51
   284                           	global	_RB4
   285  0034                     _RB4	set	52
   286                           	global	_RB5
   287  0035                     _RB5	set	53
   288                           	global	_RB6
   289  0036                     _RB6	set	54
   290                           	global	_RC0
   291  0038                     _RC0	set	56
   292                           	global	_RC1
   293  0039                     _RC1	set	57
   294                           	global	_RC2
   295  003A                     _RC2	set	58
   296                           	global	_RCIF
   297  0065                     _RCIF	set	101
   298                           	global	_RE0
   299  0048                     _RE0	set	72
   300                           	global	_RE1
   301  0049                     _RE1	set	73
   302                           	global	_RE2
   303  004A                     _RE2	set	74
   304                           	global	_RX9
   305  00C6                     _RX9	set	198
   306                           	global	_SPEN
   307  00C7                     _SPEN	set	199
   308                           	global	_SSPIF
   309  0063                     _SSPIF	set	99
   310                           	global	_TMR0IE
   311  005D                     _TMR0IE	set	93
   312                           	global	_TMR0IF
   313  005A                     _TMR0IF	set	90
   314                           	global	_TXIF
   315  0064                     _TXIF	set	100
   316                           	global	_ADCON1
   317  009F                     _ADCON1	set	159
   318                           	global	_ADRESL
   319  009E                     _ADRESL	set	158
   320                           	global	_OPTION_REG
   321  0081                     _OPTION_REG	set	129
   322                           	global	_SPBRG
   323  0099                     _SPBRG	set	153
   324                           	global	_SSPSTAT
   325  0094                     _SSPSTAT	set	148
   326                           	global	_TRISA
   327  0085                     _TRISA	set	133
   328                           	global	_TRISB
   329  0086                     _TRISB	set	134
   330                           	global	_TRISC
   331  0087                     _TRISC	set	135
   332                           	global	_TRISD
   333  0088                     _TRISD	set	136
   334                           	global	_TRISE
   335  0089                     _TRISE	set	137
   336                           	global	_BRGH
   337  04C2                     _BRGH	set	1218
   338                           	global	_RCIE
   339  0465                     _RCIE	set	1125
   340                           	global	_SYNC
   341  04C4                     _SYNC	set	1220
   342                           	global	_TX9
   343  04C6                     _TX9	set	1222
   344                           	global	_TXEN
   345  04C5                     _TXEN	set	1221
   346                           	global	_TXIE
   347  0464                     _TXIE	set	1124
   348                           	global	_EEADR
   349  010D                     _EEADR	set	269
   350                           	global	_EEDATA
   351  010C                     _EEDATA	set	268
   352                           	global	_EECON1
   353  018C                     _EECON1	set	396
   354                           	global	_EECON2
   355  018D                     _EECON2	set	397
   356                           	global	_RD
   357  0C60                     _RD	set	3168
   358                           	global	_WR
   359  0C61                     _WR	set	3169
   360                           	global	_WREN
   361  0C62                     _WREN	set	3170
   362                           	
   363  081A                     STR_18:	
   364  081A  3420               	retlw	32	;' '
   365  081B  3443               	retlw	67	;'C'
   366  081C  3468               	retlw	104	;'h'
   367  081D  3461               	retlw	97	;'a'
   368  081E  3472               	retlw	114	;'r'
   369  081F  3467               	retlw	103	;'g'
   370  0820  3469               	retlw	105	;'i'
   371  0821  346E               	retlw	110	;'n'
   372  0822  3467               	retlw	103	;'g'
   373  0823  3420               	retlw	32	;' '
   374  0824  344D               	retlw	77	;'M'
   375  0825  346F               	retlw	111	;'o'
   376  0826  3464               	retlw	100	;'d'
   377  0827  3465               	retlw	101	;'e'
   378  0828  3420               	retlw	32	;' '
   379  0829  3400               	retlw	0
   380                           psect	strings
   381                           	
   382  082A                     STR_14:	
   383  082A  345A               	retlw	90	;'Z'
   384  082B  3465               	retlw	101	;'e'
   385  082C  3472               	retlw	114	;'r'
   386  082D  346F               	retlw	111	;'o'
   387  082E  3420               	retlw	32	;' '
   388  082F  3453               	retlw	83	;'S'
   389  0830  3474               	retlw	116	;'t'
   390  0831  3465               	retlw	101	;'e'
   391  0832  3470               	retlw	112	;'p'
   392  0833  345F               	retlw	95	;'_'
   393  0834  344D               	retlw	77	;'M'
   394  0835  346F               	retlw	111	;'o'
   395  0836  3474               	retlw	116	;'t'
   396  0837  346F               	retlw	111	;'o'
   397  0838  3472               	retlw	114	;'r'
   398  0839  3400               	retlw	0
   399                           psect	strings
   400                           	
   401  083A                     STR_13:	
   402  083A  3449               	retlw	73	;'I'
   403  083B  3452               	retlw	82	;'R'
   404  083C  343A               	retlw	58	;':'
   405  083D  3425               	retlw	37	;'%'
   406  083E  3464               	retlw	100	;'d'
   407  083F  3463               	retlw	99	;'c'
   408  0840  346D               	retlw	109	;'m'
   409  0841  3420               	retlw	32	;' '
   410  0842  3444               	retlw	68	;'D'
   411  0843  343A               	retlw	58	;':'
   412  0844  3425               	retlw	37	;'%'
   413  0845  3464               	retlw	100	;'d'
   414  0846  3400               	retlw	0
   415                           psect	strings
   416                           	
   417  0847                     STR_19:	
   418  0847  3420               	retlw	32	;' '
   419  0848  3420               	retlw	32	;' '
   420  0849  3445               	retlw	69	;'E'
   421  084A  3458               	retlw	88	;'X'
   422  084B  3449               	retlw	73	;'I'
   423  084C  3454               	retlw	84	;'T'
   424  084D  3420               	retlw	32	;' '
   425  084E  3420               	retlw	32	;' '
   426  084F  3400               	retlw	0
   427                           psect	strings
   428                           	
   429  0850                     STR_6:	
   430  0850  3420               	retlw	32	;' '
   431  0851  3443               	retlw	67	;'C'
   432  0852  3468               	retlw	104	;'h'
   433  0853  3461               	retlw	97	;'a'
   434  0854  3472               	retlw	114	;'r'
   435  0855  3467               	retlw	103	;'g'
   436  0856  3465               	retlw	101	;'e'
   437  0857  3420               	retlw	32	;' '
   438  0858  3400               	retlw	0
   439                           psect	strings
   440                           	
   441  0859                     STR_2:	
   442  0859  3453               	retlw	83	;'S'
   443  085A  3463               	retlw	99	;'c'
   444  085B  3461               	retlw	97	;'a'
   445  085C  346E               	retlw	110	;'n'
   446  085D  345F               	retlw	95	;'_'
   447  085E  3433               	retlw	51	;'3'
   448  085F  3436               	retlw	54	;'6'
   449  0860  3430               	retlw	48	;'0'
   450  0861  3400               	retlw	0
   451                           psect	strings
   452                           	
   453  0862                     STR_1:	
   454  0862  3443               	retlw	67	;'C'
   455  0863  3461               	retlw	97	;'a'
   456  0864  346C               	retlw	108	;'l'
   457  0865  3469               	retlw	105	;'i'
   458  0866  3462               	retlw	98	;'b'
   459  0867  345F               	retlw	95	;'_'
   460  0868  3449               	retlw	73	;'I'
   461  0869  3452               	retlw	82	;'R'
   462  086A  3400               	retlw	0
   463                           psect	strings
   464                           	
   465  086B                     STR_5:	
   466  086B  3446               	retlw	70	;'F'
   467  086C  346C               	retlw	108	;'l'
   468  086D  3477               	retlw	119	;'w'
   469  086E  345F               	retlw	95	;'_'
   470  086F  3457               	retlw	87	;'W'
   471  0870  3461               	retlw	97	;'a'
   472  0871  346C               	retlw	108	;'l'
   473  0872  346C               	retlw	108	;'l'
   474  0873  3400               	retlw	0
   475                           psect	strings
   476                           	
   477  0874                     STR_3:	
   478  0874  3444               	retlw	68	;'D'
   479  0875  3472               	retlw	114	;'r'
   480  0876  3469               	retlw	105	;'i'
   481  0877  3476               	retlw	118	;'v'
   482  0878  3465               	retlw	101	;'e'
   483  0879  345F               	retlw	95	;'_'
   484  087A  3432               	retlw	50	;'2'
   485  087B  346D               	retlw	109	;'m'
   486  087C  3400               	retlw	0
   487                           psect	strings
   488                           	
   489  087D                     STR_4:	
   490  087D  3444               	retlw	68	;'D'
   491  087E  3472               	retlw	114	;'r'
   492  087F  3469               	retlw	105	;'i'
   493  0880  3476               	retlw	118	;'v'
   494  0881  3465               	retlw	101	;'e'
   495  0882  345F               	retlw	95	;'_'
   496  0883  344C               	retlw	76	;'L'
   497  0884  3400               	retlw	0
   498                           psect	strings
   499                           	
   500  0885                     STR_16:	
   501  0885  3443               	retlw	67	;'C'
   502  0886  344F               	retlw	79	;'O'
   503  0887  344E               	retlw	78	;'N'
   504  0888  3446               	retlw	70	;'F'
   505  0889  3449               	retlw	73	;'I'
   506  088A  3452               	retlw	82	;'R'
   507  088B  344D               	retlw	77	;'M'
   508  088C  3400               	retlw	0
   509                           psect	strings
   510                           	
   511  088D                     STR_9:	
   512  088D  3444               	retlw	68	;'D'
   513  088E  3472               	retlw	114	;'r'
   514  088F  3432               	retlw	50	;'2'
   515  0890  3400               	retlw	0
   516                           psect	strings
   517                           	
   518  0891                     STR_15:	
   519  0891  343C               	retlw	60	;'<'
   520  0892  343C               	retlw	60	;'<'
   521  0893  343C               	retlw	60	;'<'
   522  0894  3400               	retlw	0
   523                           psect	strings
   524                           	
   525  0895                     STR_17:	
   526  0895  343E               	retlw	62	;'>'
   527  0896  343E               	retlw	62	;'>'
   528  0897  343E               	retlw	62	;'>'
   529  0898  3400               	retlw	0
   530                           psect	strings
   531                           	
   532  0899                     STR_10:	
   533  0899  3444               	retlw	68	;'D'
   534  089A  3472               	retlw	114	;'r'
   535  089B  344C               	retlw	76	;'L'
   536  089C  3400               	retlw	0
   537                           psect	strings
   538                           	
   539  089D                     STR_12:	
   540  089D  3443               	retlw	67	;'C'
   541  089E  3468               	retlw	104	;'h'
   542  089F  3467               	retlw	103	;'g'
   543  08A0  3400               	retlw	0
   544                           psect	strings
   545                           	
   546  08A1                     STR_7:	
   547  08A1  3443               	retlw	67	;'C'
   548  08A2  3461               	retlw	97	;'a'
   549  08A3  346C               	retlw	108	;'l'
   550  08A4  3400               	retlw	0
   551                           psect	strings
   552                           	
   553  08A5                     STR_8:	
   554  08A5  3453               	retlw	83	;'S'
   555  08A6  3463               	retlw	99	;'c'
   556  08A7  346E               	retlw	110	;'n'
   557  08A8  3400               	retlw	0
   558                           psect	strings
   559                           	
   560  08A9                     STR_11:	
   561  08A9  3446               	retlw	70	;'F'
   562  08AA  346C               	retlw	108	;'l'
   563  08AB  3477               	retlw	119	;'w'
   564  08AC  3400               	retlw	0
   565                           psect	strings
   566                           	file	"Assignment3_AldnoahZero.as"
   567                           	line	#
   568                           psect cinit,class=CODE,delta=2
   569                           global start_initialization
   570  15D7                     start_initialization:
   571                           
   572                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   573                           global __pbitbssCOMMON
   574  0380                     __pbitbssCOMMON:
   575  0380                     _CenterPressed:
   576  0380                            ds      1
   577                           
   578  0381                     _CenterReleased:
   579  0381                            ds      1
   580                           
   581  0382                     _DownPressed:
   582  0382                            ds      1
   583                           
   584  0383                     _DownReleased:
   585  0383                            ds      1
   586                           
   587  0384                     _LeftPressed:
   588  0384                            ds      1
   589                           
   590  0385                     _LeftReleased:
   591  0385                            ds      1
   592                           
   593  0386                     _RTC_FLAG_1MS:
   594  0386                            ds      1
   595                           
   596  0387                     _RTC_FLAG_250MS:
   597  0387                            ds      1
   598                           
   599  0388                     _RTC_FLAG_500MS:
   600  0388                            ds      1
   601                           
   602  0389                     _RightPressed:
   603  0389                            ds      1
   604                           
   605  038A                     _RightReleased:
   606  038A                            ds      1
   607                           
   608  038B                     _UpPressed:
   609  038B                            ds      1
   610                           
   611  038C                     _UpReleased:
   612  038C                            ds      1
   613                           
   614                           psect	bssCOMMON,class=COMMON,space=1
   615                           global __pbssCOMMON
   616  007D                     __pbssCOMMON:
   617  007D                     _buttonPressed:
   618  007D                            ds      1
   619                           
   620                           psect	bssBANK0,class=BANK0,space=1
   621                           global __pbssBANK0
   622  006C                     __pbssBANK0:
   623  006C                     _adcVal:
   624  006C                            ds      2
   625                           
   626  006E                     _BumpSensors:
   627  006E                            ds      1
   628                           
   629  006F                     _txiptr:
   630  006F                            ds      1
   631                           
   632                           psect	bssBANK1,class=BANK1,space=1
   633                           global __pbssBANK1
   634  00A0                     __pbssBANK1:
   635  00A0                     _rxfifo:
   636  00A0                            ds      16
   637                           
   638  00B0                     _Disp1:
   639  00B0                            ds      2
   640                           
   641  00B2                     _Disp2:
   642  00B2                            ds      2
   643                           
   644  00B4                     _IRdistance:
   645  00B4                            ds      2
   646                           
   647  00B6                     _RTC_Counter:
   648  00B6                            ds      2
   649                           
   650  00B8                     _TotalDistTravelled:
   651  00B8                            ds      2
   652                           
   653  00BA                     _angleTurned:
   654  00BA                            ds      2
   655                           
   656  00BC                     _distTravelled:
   657  00BC                            ds      2
   658                           
   659  00BE                     _dist_high:
   660  00BE                            ds      2
   661                           
   662  00C0                     _dist_low:
   663  00C0                            ds      2
   664                           
   665  00C2                     _pos:
   666  00C2                            ds      2
   667                           
   668  00C4                     _total:
   669  00C4                            ds      2
   670                           
   671  00C6                     _totalSteps:
   672  00C6                            ds      2
   673                           
   674  00C8                     _AngleHighByte:
   675  00C8                            ds      1
   676                           
   677  00C9                     _AngleLowByte:
   678  00C9                            ds      1
   679                           
   680  00CA                     _CenterDebounceCount:
   681  00CA                            ds      1
   682                           
   683  00CB                     _DistHighByte:
   684  00CB                            ds      1
   685                           
   686  00CC                     _DistLowByte:
   687  00CC                            ds      1
   688                           
   689  00CD                     _DownDebounceCount:
   690  00CD                            ds      1
   691                           
   692  00CE                     _LeftDebounceCount:
   693  00CE                            ds      1
   694                           
   695  00CF                     _ROBOTerror:
   696  00CF                            ds      1
   697                           
   698  00D0                     _RightDebounceCount:
   699  00D0                            ds      1
   700                           
   701  00D1                     _UpDebounceCount:
   702  00D1                            ds      1
   703                           
   704  00D2                     _VwallSensor:
   705  00D2                            ds      1
   706                           
   707  00D3                     _currentMenu:
   708  00D3                            ds      1
   709                           
   710  00D4                     _highByte:
   711  00D4                            ds      1
   712                           
   713  00D5                     _lowByte:
   714  00D5                            ds      1
   715                           
   716  00D6                     _rxiptr:
   717  00D6                            ds      1
   718                           
   719  00D7                     _rxoptr:
   720  00D7                            ds      1
   721                           
   722  00D8                     _ser_tmp:
   723  00D8                            ds      1
   724                           
   725  00D9                     _turnhighByte:
   726  00D9                            ds      1
   727                           
   728  00DA                     _turnlowByte:
   729  00DA                            ds      1
   730                           
   731  00DB                     _txoptr:
   732  00DB                            ds      1
   733                           
   734                           psect	dataBANK1,class=BANK1,space=1
   735                           global __pdataBANK1
   736  00DC                     __pdataBANK1:
   737                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   738                           	line	49
   739  00DC                     _menuStrings:
   740  00DC                            ds      6
   741                           
   742                           psect	dataBANK1
   743                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   744                           	line	50
   745  00E2                     _shortMenuStrings:
   746  00E2                            ds      6
   747                           
   748                           psect	dataBANK1
   749                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   750                           	line	45
   751  00E8                     _current_step:
   752  00E8                            ds      1
   753                           
   754                           psect	bssBANK3,class=BANK3,space=1
   755                           global __pbssBANK3
   756  0190                     __pbssBANK3:
   757  0190                     UpdateDisplay@F1249:
   758  0190                            ds      16
   759                           
   760  01A0                     _txfifo:
   761  01A0                            ds      16
   762                           
   763                           psect clrtext,class=CODE,delta=2
   764                           global clear_ram
   765                           ;	Called with FSR containing the base address, and
   766                           ;	W with the last address+1
   767  07F7                     clear_ram:
   768  07F7  0064               	clrwdt			;clear the watchdog before getting into this loop
   769  07F8                     clrloop:
   770  07F8  0180               	clrf	indf		;clear RAM location pointed to by FSR
   771  07F9  0A84               	incf	fsr,f		;increment pointer
   772  07FA  0604               	xorwf	fsr,w		;XOR with final address
   773  07FB  1903               	btfsc	status,2	;have we reached the end yet?
   774  07FC  3400               	retlw	0		;all done for this memory range, return
   775  07FD  0604               	xorwf	fsr,w		;XOR again to restore value
   776  07FE  2FF8               	goto	clrloop		;do the next byte
   777                           
   778                           ; Clear objects allocated to BITCOMMON
   779                           psect cinit,class=CODE,delta=2
   780  15D7  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   781  15D8  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   782                           ; Clear objects allocated to COMMON
   783                           psect cinit,class=CODE,delta=2
   784  15D9  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   785                           ; Clear objects allocated to BANK0
   786                           psect cinit,class=CODE,delta=2
   787  15DA  01EC               	clrf	((__pbssBANK0)+0)&07Fh
   788  15DB  01ED               	clrf	((__pbssBANK0)+1)&07Fh
   789  15DC  01EE               	clrf	((__pbssBANK0)+2)&07Fh
   790  15DD  01EF               	clrf	((__pbssBANK0)+3)&07Fh
   791                           ; Clear objects allocated to BANK1
   792                           psect cinit,class=CODE,delta=2
   793  15DE  1383               	bcf	status, 7	;select IRP bank0
   794  15DF  30A0               	movlw	low(__pbssBANK1)
   795  15E0  0084               	movwf	fsr
   796  15E1  30DC               	movlw	low((__pbssBANK1)+03Ch)
   797  15E2  120A  118A  27F7   	fcall	clear_ram
              160A  118A         
   798                           ; Clear objects allocated to BANK3
   799                           psect cinit,class=CODE,delta=2
   800  15E7  1783               	bsf	status, 7	;select IRP bank2
   801  15E8  3090               	movlw	low(__pbssBANK3)
   802  15E9  0084               	movwf	fsr
   803  15EA  30B0               	movlw	low((__pbssBANK3)+020h)
   804  15EB  120A  118A  27F7   	fcall	clear_ram
              160A  118A         
   805                           global btemp
   806                           psect inittext,class=CODE,delta=2
   807                           global init_fetch,btemp
   808                           ;	Called with low address in FSR and high address in W
   809  14F6                     init_fetch:
   810  14F6  087E               	movf btemp,w
   811  14F7  008A               	movwf pclath
   812  14F8  087F               	movf btemp+1,w
   813  14F9  0082               	movwf pc
   814                           global init_ram
   815                           ;Called with:
   816                           ;	high address of idata address in btemp 
   817                           ;	low address of idata address in btemp+1 
   818                           ;	low address of data in FSR
   819                           ;	high address + 1 of data in btemp-1
   820  14FA                     init_ram:
   821  14FA  160A  118A  24F6   	fcall init_fetch
              160A  118A         
   822  14FF  0080               	movwf indf,f
   823  1500  0A84               	incf fsr,f
   824  1501  0804               	movf fsr,w
   825  1502  067D               	xorwf btemp-1,w
   826  1503  1903               	btfsc status,2
   827  1504  3400               	retlw 0
   828  1505  0AFF               	incf btemp+1,f
   829  1506  1903               	btfsc status,2
   830  1507  0AFE               	incf btemp,f
   831  1508  2CFA               	goto init_ram
   832                           ; Initialize objects allocated to BANK1
   833                           psect cinit,class=CODE,delta=2
   834                           global init_ram, __pidataBANK1
   835  15F0  1383               	bcf	status, 7	;select IRP bank0
   836  15F1  30E9               	movlw low(__pdataBANK1+13)
   837  15F2  00FD               	movwf btemp-1,f
   838  15F3  3014               	movlw high(__pidataBANK1)
   839  15F4  00FE               	movwf btemp,f
   840  15F5  30D6               	movlw low(__pidataBANK1)
   841  15F6  00FF               	movwf btemp+1,f
   842  15F7  30DC               	movlw low(__pdataBANK1)
   843  15F8  0084               	movwf fsr,f
   844  15F9  160A  118A  24FA   	fcall init_ram
              160A  118A         
   845                           psect cinit,class=CODE,delta=2
   846                           global end_of_initialization
   847                           
   848                           ;End of C runtime variable initialization code
   849                           
   850  15FE                     end_of_initialization:
   851  15FE  0183               clrf status
   852  15FF  120A  118A  2A38   ljmp _main	;jump to C main() function
   853                           psect	cstackCOMMON,class=COMMON,space=1
   854                           global __pcstackCOMMON
   855  0072                     __pcstackCOMMON:
   856                           	global	?_ser_init
   857  0072                     ?_ser_init:	; 0 bytes @ 0x0
   858                           	global	?_robo_init
   859  0072                     ?_robo_init:	; 0 bytes @ 0x0
   860                           	global	?_robot_read
   861  0072                     ?_robot_read:	; 0 bytes @ 0x0
   862                           	global	?_readAvgDistance
   863  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   864                           	global	?_UpdateDisplay
   865  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   866                           	global	?_calibrateIR
   867  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   868                           	global	?_ChargeMode
   869  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   870                           	global	?_ser_putch
   871  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   872                           	global	?_ADCconvert
   873  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   874                           	global	?_init_adc
   875  0072                     ?_init_adc:	; 0 bytes @ 0x0
   876                           	global	?_lcd_write_control
   877  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   878                           	global	?_lcd_write_data
   879  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   880                           	global	?_lcd_set_cursor
   881  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   882                           	global	?_lcd_init
   883  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   884                           	global	?_isr1
   885  0072                     ?_isr1:	; 0 bytes @ 0x0
   886                           	global	?_init
   887  0072                     ?_init:	; 0 bytes @ 0x0
   888                           	global	?_main
   889  0072                     ?_main:	; 0 bytes @ 0x0
   890                           	global	?_Debounce
   891  0072                     ?_Debounce:	; 0 bytes @ 0x0
   892                           	global	??_Debounce
   893  0072                     ??_Debounce:	; 0 bytes @ 0x0
   894                           	global	?_ser_isrx
   895  0072                     ?_ser_isrx:	; 1 bit 
   896                           	global	?_ReadButtons
   897  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   898                           	global	?_Menu
   899  0072                     ?_Menu:	; 1 bytes @ 0x0
   900                           	global	?_ser_getch
   901  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   902                           	global	?_adc_read_channel
   903  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   904                           	global	?_spi_transfer
   905  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   906                           	global	?i1___lwmod
   907  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   908                           	global	i1___lwmod@divisor
   909  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   910  0072                     	ds	1
   911                           	global	??_ReadButtons
   912  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   913  0073                     	ds	1
   914                           	global	i1___lwmod@dividend
   915  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   916  0074                     	ds	2
   917                           	global	??i1___lwmod
   918  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   919  0076                     	ds	1
   920                           	global	i1___lwmod@counter
   921  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   922  0077                     	ds	1
   923                           	global	??_isr1
   924  0078                     ??_isr1:	; 0 bytes @ 0x6
   925  0078                     	ds	5
   926                           psect	cstackBANK0,class=BANK0,space=1
   927                           global __pcstackBANK0
   928  0020                     __pcstackBANK0:
   929                           	global	??_ser_init
   930  0020                     ??_ser_init:	; 0 bytes @ 0x0
   931                           	global	??_Menu
   932  0020                     ??_Menu:	; 0 bytes @ 0x0
   933                           	global	??_ser_putch
   934  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   935                           	global	??_ser_getch
   936  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   937                           	global	??_init_adc
   938  0020                     ??_init_adc:	; 0 bytes @ 0x0
   939                           	global	??_lcd_write_control
   940  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   941                           	global	??_lcd_write_data
   942  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   943                           	global	??_spi_transfer
   944  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   945                           	global	??_ser_isrx
   946  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   947                           	global	?_adc_read
   948  0020                     ?_adc_read:	; 2 bytes @ 0x0
   949                           	global	?___wmul
   950  0020                     ?___wmul:	; 2 bytes @ 0x0
   951                           	global	?___awmod
   952  0020                     ?___awmod:	; 2 bytes @ 0x0
   953                           	global	Menu@BTN_input
   954  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   955                           	global	___wmul@multiplier
   956  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   957                           	global	___awmod@divisor
   958  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   959  0020                     	ds	1
   960                           	global	spi_transfer@temp
   961  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   962                           	global	ser_getch@c
   963  0021                     ser_getch@c:	; 1 bytes @ 0x1
   964                           	global	ser_putch@c
   965  0021                     ser_putch@c:	; 1 bytes @ 0x1
   966  0021                     	ds	1
   967                           	global	??_adc_read
   968  0022                     ??_adc_read:	; 0 bytes @ 0x2
   969                           	global	??_robo_init
   970  0022                     ??_robo_init:	; 0 bytes @ 0x2
   971                           	global	??_robot_read
   972  0022                     ??_robot_read:	; 0 bytes @ 0x2
   973                           	global	?_RobotDrive
   974  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
   975                           	global	?_robotTurn
   976  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   977                           	global	lcd_write_control@databyte
   978  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   979                           	global	lcd_write_data@databyte
   980  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   981                           	global	spi_transfer@data
   982  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   983                           	global	RobotDrive@speed
   984  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
   985                           	global	robotTurn@angle
   986  0022                     robotTurn@angle:	; 2 bytes @ 0x2
   987                           	global	___wmul@multiplicand
   988  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   989                           	global	___awmod@dividend
   990  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   991  0022                     	ds	1
   992                           	global	?_rotate
   993  0023                     ?_rotate:	; 0 bytes @ 0x3
   994                           	global	??_lcd_set_cursor
   995  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   996                           	global	??_lcd_init
   997  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   998                           	global	??_init
   999  0023                     ??_init:	; 0 bytes @ 0x3
  1000                           	global	lcd_set_cursor@address
  1001  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1002                           	global	rotate@numsteps
  1003  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1004  0023                     	ds	1
  1005                           	global	??_robotTurn
  1006  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1007                           	global	??___wmul
  1008  0024                     ??___wmul:	; 0 bytes @ 0x4
  1009                           	global	??___awmod
  1010  0024                     ??___awmod:	; 0 bytes @ 0x4
  1011                           	global	robot_read@readType
  1012  0024                     robot_read@readType:	; 1 bytes @ 0x4
  1013                           	global	adc_read@adc_value
  1014  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1015                           	global	RobotDrive@radius
  1016  0024                     RobotDrive@radius:	; 2 bytes @ 0x4
  1017                           	global	___wmul@product
  1018  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1019  0024                     	ds	1
  1020                           	global	rotate@direction
  1021  0025                     rotate@direction:	; 1 bytes @ 0x5
  1022                           	global	___awmod@counter
  1023  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1024  0025                     	ds	1
  1025                           	global	??_rotate
  1026  0026                     ??_rotate:	; 0 bytes @ 0x6
  1027                           	global	??_adc_read_channel
  1028  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1029                           	global	??_RobotDrive
  1030  0026                     ??_RobotDrive:	; 0 bytes @ 0x6
  1031                           	global	?_abs
  1032  0026                     ?_abs:	; 2 bytes @ 0x6
  1033                           	global	?___lwdiv
  1034  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1035                           	global	___awmod@sign
  1036  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1037                           	global	abs@v
  1038  0026                     abs@v:	; 2 bytes @ 0x6
  1039                           	global	___lwdiv@divisor
  1040  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1041  0026                     	ds	1
  1042                           	global	?_lcd_write_string
  1043  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1044                           	global	adc_read_channel@channel
  1045  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1046                           	global	RobotDrive@speedlowByte
  1047  0027                     RobotDrive@speedlowByte:	; 1 bytes @ 0x7
  1048                           	global	lcd_write_string@s
  1049  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1050  0027                     	ds	1
  1051                           	global	??_abs
  1052  0028                     ??_abs:	; 0 bytes @ 0x8
  1053                           	global	?_readDistance
  1054  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1055                           	global	RobotDrive@speedhighByte
  1056  0028                     RobotDrive@speedhighByte:	; 1 bytes @ 0x8
  1057                           	global	rotate@i
  1058  0028                     rotate@i:	; 2 bytes @ 0x8
  1059                           	global	___lwdiv@dividend
  1060  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1061  0028                     	ds	1
  1062                           	global	??_lcd_write_string
  1063  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1064                           	global	RobotDrive@radiuslowByte
  1065  0029                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x9
  1066  0029                     	ds	1
  1067                           	global	??_readDistance
  1068  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1069                           	global	??___lwdiv
  1070  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1071                           	global	RobotDrive@radiushighByte
  1072  002A                     RobotDrive@radiushighByte:	; 1 bytes @ 0xA
  1073  002A                     	ds	1
  1074                           	global	___lwdiv@quotient
  1075  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1076  002B                     	ds	1
  1077                           	global	readDistance@readVal
  1078  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1079  002C                     	ds	1
  1080                           	global	___lwdiv@counter
  1081  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1082  002D                     	ds	1
  1083                           	global	??_ADCconvert
  1084  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1085                           	global	?___lwmod
  1086  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1087                           	global	___lwmod@divisor
  1088  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1089  002E                     	ds	2
  1090                           	global	??_readAvgDistance
  1091  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1092                           	global	readAvgDistance@fullval
  1093  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1094                           	global	___lwmod@dividend
  1095  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1096  0030                     	ds	2
  1097                           	global	??___lwmod
  1098  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1099                           	global	readAvgDistance@j
  1100  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1101  0032                     	ds	1
  1102                           	global	___lwmod@counter
  1103  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1104  0033                     	ds	1
  1105                           	global	?_sprintf
  1106  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1107                           	global	sprintf@f
  1108  0034                     sprintf@f:	; 1 bytes @ 0x14
  1109                           	global	readAvgDistance@tempIR
  1110  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1111  0034                     	ds	2
  1112                           	global	readAvgDistance@i
  1113  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1114  0036                     	ds	3
  1115                           	global	??_sprintf
  1116  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1117  0039                     	ds	3
  1118                           	global	sprintf@ap
  1119  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1120  003C                     	ds	1
  1121                           	global	sprintf@flag
  1122  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1123  003D                     	ds	1
  1124                           	global	sprintf@prec
  1125  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1126  003E                     	ds	1
  1127                           	global	sprintf@_val
  1128  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1129  003F                     	ds	4
  1130                           	global	sprintf@sp
  1131  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1132  0043                     	ds	1
  1133                           	global	sprintf@c
  1134  0044                     sprintf@c:	; 1 bytes @ 0x24
  1135  0044                     	ds	1
  1136                           	global	??_UpdateDisplay
  1137  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1138  0045                     	ds	4
  1139                           	global	UpdateDisplay@LCDOutput
  1140  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1141  0049                     	ds	16
  1142                           	global	??_calibrateIR
  1143  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1144                           	global	?_robotTurnSpeed
  1145  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1146                           	global	?_robotMoveSpeed
  1147  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1148                           	global	?_robotFollow
  1149  0059                     ?_robotFollow:	; 0 bytes @ 0x39
  1150                           	global	??_ChargeMode
  1151  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1152                           	global	robotFollow@distance
  1153  0059                     robotFollow@distance:	; 2 bytes @ 0x39
  1154                           	global	robotMoveSpeed@distance
  1155  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1156                           	global	robotTurnSpeed@angle
  1157  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1158  0059                     	ds	2
  1159                           	global	robotFollow@speed
  1160  005B                     robotFollow@speed:	; 2 bytes @ 0x3B
  1161                           	global	robotMoveSpeed@speed
  1162  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1163                           	global	robotTurnSpeed@speed
  1164  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1165  005B                     	ds	2
  1166                           	global	??_robotTurnSpeed
  1167  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1168                           	global	??_robotMoveSpeed
  1169  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1170                           	global	robotFollow@AdcTarget
  1171  005D                     robotFollow@AdcTarget:	; 2 bytes @ 0x3D
  1172  005D                     	ds	2
  1173                           	global	??_robotFollow
  1174  005F                     ??_robotFollow:	; 0 bytes @ 0x3F
  1175  005F                     	ds	1
  1176                           	global	robotMoveSpeed@temp1
  1177  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1178                           	global	robotTurnSpeed@temp1
  1179  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1180  0060                     	ds	2
  1181                           	global	robotFollow@temp1
  1182  0062                     robotFollow@temp1:	; 2 bytes @ 0x42
  1183  0062                     	ds	2
  1184                           	global	??_main
  1185  0064                     ??_main:	; 0 bytes @ 0x44
  1186  0064                     	ds	3
  1187                           	global	main@shortwall
  1188  0067                     main@shortwall:	; 2 bytes @ 0x47
  1189  0067                     	ds	2
  1190                           	global	main@a
  1191  0069                     main@a:	; 2 bytes @ 0x49
  1192  0069                     	ds	2
  1193                           	global	main@choice
  1194  006B                     main@choice:	; 1 bytes @ 0x4B
  1195  006B                     	ds	1
  1196 ;;Data sizes: Strings 147, constant 10, data 13, bss 97, persistent 0 stack 0
  1197 ;;Auto spaces:   Size  Autos    Used
  1198 ;; COMMON          14     11      14
  1199 ;; BANK0           80     76      80
  1200 ;; BANK1           80      0      73
  1201 ;; BANK3           96      0      32
  1202 ;; BANK2           96      0       0
  1203                           
  1204 ;;
  1205 ;; Pointer list with targets:
  1206                           
  1207 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1208 ;;
  1209 ;; ?_abs	int  size(1) Largest target is 0
  1210 ;;
  1211 ;; ?___awmod	int  size(1) Largest target is 0
  1212 ;;
  1213 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1214 ;;
  1215 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1216 ;;
  1217 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1218 ;;
  1219 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1220 ;;
  1221 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1222 ;;
  1223 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1224 ;;		 -> STR_13(CODE[13]), 
  1225 ;;
  1226 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1227 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1228 ;;
  1229 ;; ?_sprintf	int  size(1) Largest target is 0
  1230 ;;
  1231 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1232 ;;		 -> ?_sprintf(BANK0[2]), 
  1233 ;;
  1234 ;; S8211$_cp	PTR const unsigned char  size(1) Largest target is 0
  1235 ;;
  1236 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1237 ;;
  1238 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1239 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1240 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1241 ;;
  1242 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1243 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1244 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1245 ;;
  1246 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1247 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1248 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1249 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1250 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1251 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1252 ;;
  1253                           
  1254                           
  1255 ;;
  1256 ;; Critical Paths under _main in COMMON
  1257 ;;
  1258 ;;   None.
  1259 ;;
  1260 ;; Critical Paths under _isr1 in COMMON
  1261 ;;
  1262 ;;   _isr1->i1___lwmod
  1263 ;;   _ReadButtons->_Debounce
  1264 ;;
  1265 ;; Critical Paths under _main in BANK0
  1266 ;;
  1267 ;;   _main->_robotFollow
  1268 ;;   _ChargeMode->_UpdateDisplay
  1269 ;;   _robotFollow->_UpdateDisplay
  1270 ;;   _robotMoveSpeed->_UpdateDisplay
  1271 ;;   _robotTurnSpeed->_UpdateDisplay
  1272 ;;   _calibrateIR->_UpdateDisplay
  1273 ;;   _UpdateDisplay->_sprintf
  1274 ;;   _readAvgDistance->_ADCconvert
  1275 ;;   _readDistance->_adc_read_channel
  1276 ;;   _robot_read->_ser_putch
  1277 ;;   _robot_read->_ser_getch
  1278 ;;   _lcd_init->_lcd_write_control
  1279 ;;   _lcd_write_string->___awmod
  1280 ;;   _lcd_set_cursor->_lcd_write_control
  1281 ;;   _abs->___wmul
  1282 ;;   _robotTurn->_ser_putch
  1283 ;;   _RobotDrive->_ser_putch
  1284 ;;   _sprintf->___lwmod
  1285 ;;   _ADCconvert->___lwdiv
  1286 ;;   _rotate->_spi_transfer
  1287 ;;   _robo_init->_ser_putch
  1288 ;;   _adc_read_channel->_adc_read
  1289 ;;   ___lwmod->___lwdiv
  1290 ;;   ___lwdiv->___wmul
  1291 ;;
  1292 ;; Critical Paths under _isr1 in BANK0
  1293 ;;
  1294 ;;   None.
  1295 ;;
  1296 ;; Critical Paths under _main in BANK1
  1297 ;;
  1298 ;;   None.
  1299 ;;
  1300 ;; Critical Paths under _isr1 in BANK1
  1301 ;;
  1302 ;;   None.
  1303 ;;
  1304 ;; Critical Paths under _main in BANK3
  1305 ;;
  1306 ;;   None.
  1307 ;;
  1308 ;; Critical Paths under _isr1 in BANK3
  1309 ;;
  1310 ;;   None.
  1311 ;;
  1312 ;; Critical Paths under _main in BANK2
  1313 ;;
  1314 ;;   None.
  1315 ;;
  1316 ;; Critical Paths under _isr1 in BANK2
  1317 ;;
  1318 ;;   None.
  1319                           
  1320 ;;
  1321 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1322 ;;
  1323                           
  1324 ;;
  1325 ;;Call Graph Tables:
  1326 ;;
  1327 ;; ---------------------------------------------------------------------------------
  1328 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (0) _main                                                 8     8      0   11087
  1331 ;;                                             68 BANK0      8     8      0
  1332 ;;                               _init
  1333 ;;                         _robot_read
  1334 ;;                    _readAvgDistance
  1335 ;;                      _UpdateDisplay
  1336 ;;                               _Menu
  1337 ;;                        _calibrateIR
  1338 ;;                     _robotTurnSpeed
  1339 ;;                     _robotMoveSpeed
  1340 ;;                        _robotFollow
  1341 ;;                         _ChargeMode
  1342 ;; ---------------------------------------------------------------------------------
  1343 ;; (1) _ChargeMode                                           1     1      0    1305
  1344 ;;                                             57 BANK0      1     1      0
  1345 ;;                          _ser_putch
  1346 ;;                      _UpdateDisplay
  1347 ;; ---------------------------------------------------------------------------------
  1348 ;; (1) _robotFollow                                         11     5      6    2690
  1349 ;;                                             57 BANK0     11     5      6
  1350 ;;                         _RobotDrive
  1351 ;;                    _readAvgDistance
  1352 ;;                         _robot_read
  1353 ;;                      _UpdateDisplay
  1354 ;;                                _abs
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; (1) _robotMoveSpeed                                       9     5      4    1867
  1357 ;;                                             57 BANK0      9     5      4
  1358 ;;                         _RobotDrive
  1359 ;;                         _robot_read
  1360 ;;                      _UpdateDisplay
  1361 ;;                                _abs
  1362 ;; ---------------------------------------------------------------------------------
  1363 ;; (1) _robotTurnSpeed                                       9     5      4    1710
  1364 ;;                                             57 BANK0      9     5      4
  1365 ;;                          _robotTurn
  1366 ;;                         _robot_read
  1367 ;;                      _UpdateDisplay
  1368 ;;                                _abs
  1369 ;; ---------------------------------------------------------------------------------
  1370 ;; (1) _calibrateIR                                          0     0      0    1381
  1371 ;;                             _rotate
  1372 ;;                      _UpdateDisplay
  1373 ;; ---------------------------------------------------------------------------------
  1374 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1375 ;;                                             37 BANK0     20    20      0
  1376 ;;                  _lcd_write_control
  1377 ;;                            _sprintf
  1378 ;;                     _lcd_set_cursor
  1379 ;;                   _lcd_write_string
  1380 ;;                            ___awmod
  1381 ;; ---------------------------------------------------------------------------------
  1382 ;; (2) _readAvgDistance                                      8     8      0     625
  1383 ;;                                             16 BANK0      8     8      0
  1384 ;;                       _readDistance
  1385 ;;                            ___lwdiv
  1386 ;;                         _ADCconvert
  1387 ;; ---------------------------------------------------------------------------------
  1388 ;; (1) _init                                                 1     1      0      44
  1389 ;;                                              3 BANK0      1     1      0
  1390 ;;                           _ser_init
  1391 ;;                           _init_adc
  1392 ;;                           _lcd_init
  1393 ;;                          _robo_init
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; (3) _readDistance                                         6     4      2      69
  1396 ;;                                              8 BANK0      6     4      2
  1397 ;;                   _adc_read_channel
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (2) _robot_read                                           3     3      0     111
  1400 ;;                                              2 BANK0      3     3      0
  1401 ;;                          _ser_putch
  1402 ;;                          _ser_getch
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (2) _lcd_init                                             0     0      0      22
  1405 ;;                  _lcd_write_control
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (3) _lcd_write_string                                     2     0      2      67
  1408 ;;                                              7 BANK0      2     0      2
  1409 ;;                     _lcd_write_data
  1410 ;;                            ___awmod (ARG)
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1413 ;;                                              3 BANK0      1     1      0
  1414 ;;                  _lcd_write_control
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (2) _abs                                                  4     2      2     158
  1417 ;;                                              6 BANK0      4     2      2
  1418 ;;                             ___wmul
  1419 ;; ---------------------------------------------------------------------------------
  1420 ;; (2) _robotTurn                                            2     0      2      66
  1421 ;;                                              2 BANK0      2     0      2
  1422 ;;                          _ser_putch
  1423 ;; ---------------------------------------------------------------------------------
  1424 ;; (2) _RobotDrive                                           9     5      4     202
  1425 ;;                                              2 BANK0      9     5      4
  1426 ;;                          _ser_putch
  1427 ;; ---------------------------------------------------------------------------------
  1428 ;; (3) _ser_getch                                            2     2      0      23
  1429 ;;                                              0 BANK0      2     2      0
  1430 ;;                           _ser_isrx
  1431 ;; ---------------------------------------------------------------------------------
  1432 ;; (3) _sprintf                                             17    12      5     798
  1433 ;;                                             20 BANK0     17    12      5
  1434 ;;                            ___lwdiv
  1435 ;;                            ___lwmod
  1436 ;; ---------------------------------------------------------------------------------
  1437 ;; (3) _ADCconvert                                           2     2      0     254
  1438 ;;                                             14 BANK0      2     2      0
  1439 ;;                             ___wmul
  1440 ;;                            ___lwdiv
  1441 ;; ---------------------------------------------------------------------------------
  1442 ;; (2) _rotate                                               7     4      3      98
  1443 ;;                                              3 BANK0      7     4      3
  1444 ;;                       _spi_transfer
  1445 ;; ---------------------------------------------------------------------------------
  1446 ;; (2) _robo_init                                            0     0      0      22
  1447 ;;                          _ser_putch
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (4) _lcd_write_data                                       3     3      0      22
  1450 ;;                                              0 BANK0      3     3      0
  1451 ;; ---------------------------------------------------------------------------------
  1452 ;; (4) _lcd_write_control                                    3     3      0      22
  1453 ;;                                              0 BANK0      3     3      0
  1454 ;; ---------------------------------------------------------------------------------
  1455 ;; (2) _init_adc                                             1     1      0       0
  1456 ;;                                              0 BANK0      1     1      0
  1457 ;; ---------------------------------------------------------------------------------
  1458 ;; (4) _adc_read_channel                                     2     2      0      46
  1459 ;;                                              6 BANK0      2     2      0
  1460 ;;                           _adc_read
  1461 ;; ---------------------------------------------------------------------------------
  1462 ;; (3) ___awmod                                              7     3      4     296
  1463 ;;                                              0 BANK0      7     3      4
  1464 ;; ---------------------------------------------------------------------------------
  1465 ;; (4) ___lwmod                                              6     2      4     159
  1466 ;;                                             14 BANK0      6     2      4
  1467 ;;                            ___lwdiv (ARG)
  1468 ;; ---------------------------------------------------------------------------------
  1469 ;; (4) ___lwdiv                                              8     4      4     162
  1470 ;;                                              6 BANK0      8     4      4
  1471 ;;                             ___wmul (ARG)
  1472 ;; ---------------------------------------------------------------------------------
  1473 ;; (3) ___wmul                                               6     2      4      92
  1474 ;;                                              0 BANK0      6     2      4
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (4) _ser_isrx                                             0     0      0       0
  1477 ;; ---------------------------------------------------------------------------------
  1478 ;; (3) _spi_transfer                                         3     3      0      30
  1479 ;;                                              0 BANK0      3     3      0
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (2) _ser_putch                                            2     2      0      22
  1482 ;;                                              0 BANK0      2     2      0
  1483 ;; ---------------------------------------------------------------------------------
  1484 ;; (1) _Menu                                                 1     1      0      22
  1485 ;;                                              0 BANK0      1     1      0
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (2) _ser_init                                             1     1      0       0
  1488 ;;                                              0 BANK0      1     1      0
  1489 ;; ---------------------------------------------------------------------------------
  1490 ;; (5) _adc_read                                             6     4      2      24
  1491 ;;                                              0 BANK0      6     4      2
  1492 ;; ---------------------------------------------------------------------------------
  1493 ;; Estimated maximum stack depth 5
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1496 ;; ---------------------------------------------------------------------------------
  1497 ;; (6) _isr1                                                 5     5      0     521
  1498 ;;                                              6 COMMON     5     5      0
  1499 ;;                          i1___lwmod
  1500 ;;                        _ReadButtons
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (7) _ReadButtons                                          0     0      0       0
  1503 ;;                           _Debounce
  1504 ;; ---------------------------------------------------------------------------------
  1505 ;; (7) i1___lwmod                                            6     2      4     521
  1506 ;;                                              0 COMMON     6     2      4
  1507 ;; ---------------------------------------------------------------------------------
  1508 ;; (8) _Debounce                                             1     1      0       0
  1509 ;;                                              0 COMMON     1     1      0
  1510 ;; ---------------------------------------------------------------------------------
  1511 ;; Estimated maximum stack depth 8
  1512 ;; ---------------------------------------------------------------------------------
  1513                           
  1514 ;; Call Graph Graphs:
  1515                           
  1516 ;; _main (ROOT)
  1517 ;;   _init
  1518 ;;     _ser_init
  1519 ;;     _init_adc
  1520 ;;     _lcd_init
  1521 ;;       _lcd_write_control
  1522 ;;     _robo_init
  1523 ;;       _ser_putch
  1524 ;;   _robot_read
  1525 ;;     _ser_putch
  1526 ;;     _ser_getch
  1527 ;;       _ser_isrx
  1528 ;;   _readAvgDistance
  1529 ;;     _readDistance
  1530 ;;       _adc_read_channel
  1531 ;;         _adc_read
  1532 ;;     ___lwdiv
  1533 ;;       ___wmul (ARG)
  1534 ;;     _ADCconvert
  1535 ;;       ___wmul
  1536 ;;       ___lwdiv
  1537 ;;         ___wmul (ARG)
  1538 ;;   _UpdateDisplay
  1539 ;;     _lcd_write_control
  1540 ;;     _sprintf
  1541 ;;       ___lwdiv
  1542 ;;         ___wmul (ARG)
  1543 ;;       ___lwmod
  1544 ;;         ___lwdiv (ARG)
  1545 ;;           ___wmul (ARG)
  1546 ;;     _lcd_set_cursor
  1547 ;;       _lcd_write_control
  1548 ;;     _lcd_write_string
  1549 ;;       _lcd_write_data
  1550 ;;       ___awmod (ARG)
  1551 ;;     ___awmod
  1552 ;;   _Menu
  1553 ;;   _calibrateIR
  1554 ;;     _rotate
  1555 ;;       _spi_transfer
  1556 ;;     _UpdateDisplay
  1557 ;;       _lcd_write_control
  1558 ;;       _sprintf
  1559 ;;         ___lwdiv
  1560 ;;           ___wmul (ARG)
  1561 ;;         ___lwmod
  1562 ;;           ___lwdiv (ARG)
  1563 ;;             ___wmul (ARG)
  1564 ;;       _lcd_set_cursor
  1565 ;;         _lcd_write_control
  1566 ;;       _lcd_write_string
  1567 ;;         _lcd_write_data
  1568 ;;         ___awmod (ARG)
  1569 ;;       ___awmod
  1570 ;;   _robotTurnSpeed
  1571 ;;     _robotTurn
  1572 ;;       _ser_putch
  1573 ;;     _robot_read
  1574 ;;       _ser_putch
  1575 ;;       _ser_getch
  1576 ;;         _ser_isrx
  1577 ;;     _UpdateDisplay
  1578 ;;       _lcd_write_control
  1579 ;;       _sprintf
  1580 ;;         ___lwdiv
  1581 ;;           ___wmul (ARG)
  1582 ;;         ___lwmod
  1583 ;;           ___lwdiv (ARG)
  1584 ;;             ___wmul (ARG)
  1585 ;;       _lcd_set_cursor
  1586 ;;         _lcd_write_control
  1587 ;;       _lcd_write_string
  1588 ;;         _lcd_write_data
  1589 ;;         ___awmod (ARG)
  1590 ;;       ___awmod
  1591 ;;     _abs
  1592 ;;       ___wmul
  1593 ;;   _robotMoveSpeed
  1594 ;;     _RobotDrive
  1595 ;;       _ser_putch
  1596 ;;     _robot_read
  1597 ;;       _ser_putch
  1598 ;;       _ser_getch
  1599 ;;         _ser_isrx
  1600 ;;     _UpdateDisplay
  1601 ;;       _lcd_write_control
  1602 ;;       _sprintf
  1603 ;;         ___lwdiv
  1604 ;;           ___wmul (ARG)
  1605 ;;         ___lwmod
  1606 ;;           ___lwdiv (ARG)
  1607 ;;             ___wmul (ARG)
  1608 ;;       _lcd_set_cursor
  1609 ;;         _lcd_write_control
  1610 ;;       _lcd_write_string
  1611 ;;         _lcd_write_data
  1612 ;;         ___awmod (ARG)
  1613 ;;       ___awmod
  1614 ;;     _abs
  1615 ;;       ___wmul
  1616 ;;   _robotFollow
  1617 ;;     _RobotDrive
  1618 ;;       _ser_putch
  1619 ;;     _readAvgDistance
  1620 ;;       _readDistance
  1621 ;;         _adc_read_channel
  1622 ;;           _adc_read
  1623 ;;       ___lwdiv
  1624 ;;         ___wmul (ARG)
  1625 ;;       _ADCconvert
  1626 ;;         ___wmul
  1627 ;;         ___lwdiv
  1628 ;;           ___wmul (ARG)
  1629 ;;     _robot_read
  1630 ;;       _ser_putch
  1631 ;;       _ser_getch
  1632 ;;         _ser_isrx
  1633 ;;     _UpdateDisplay
  1634 ;;       _lcd_write_control
  1635 ;;       _sprintf
  1636 ;;         ___lwdiv
  1637 ;;           ___wmul (ARG)
  1638 ;;         ___lwmod
  1639 ;;           ___lwdiv (ARG)
  1640 ;;             ___wmul (ARG)
  1641 ;;       _lcd_set_cursor
  1642 ;;         _lcd_write_control
  1643 ;;       _lcd_write_string
  1644 ;;         _lcd_write_data
  1645 ;;         ___awmod (ARG)
  1646 ;;       ___awmod
  1647 ;;     _abs
  1648 ;;       ___wmul
  1649 ;;   _ChargeMode
  1650 ;;     _ser_putch
  1651 ;;     _UpdateDisplay
  1652 ;;       _lcd_write_control
  1653 ;;       _sprintf
  1654 ;;         ___lwdiv
  1655 ;;           ___wmul (ARG)
  1656 ;;         ___lwmod
  1657 ;;           ___lwdiv (ARG)
  1658 ;;             ___wmul (ARG)
  1659 ;;       _lcd_set_cursor
  1660 ;;         _lcd_write_control
  1661 ;;       _lcd_write_string
  1662 ;;         _lcd_write_data
  1663 ;;         ___awmod (ARG)
  1664 ;;       ___awmod
  1665 ;;
  1666 ;; _isr1 (ROOT)
  1667 ;;   i1___lwmod
  1668 ;;   _ReadButtons
  1669 ;;     _Debounce
  1670 ;;
  1671                           
  1672 ;; Address spaces:
  1673                           
  1674 ;;Name               Size   Autos  Total    Cost      Usage
  1675 ;;BANK3               60      0      20       9       33.3%
  1676 ;;BITBANK3            60      0       0       8        0.0%
  1677 ;;SFR3                 0      0       0       4        0.0%
  1678 ;;BITSFR3              0      0       0       4        0.0%
  1679 ;;BANK2               60      0       0      11        0.0%
  1680 ;;BITBANK2            60      0       0      10        0.0%
  1681 ;;SFR2                 0      0       0       5        0.0%
  1682 ;;BITSFR2              0      0       0       5        0.0%
  1683 ;;SFR1                 0      0       0       2        0.0%
  1684 ;;BITSFR1              0      0       0       2        0.0%
  1685 ;;BANK1               50      0      49       7       91.3%
  1686 ;;BITBANK1            50      0       0       6        0.0%
  1687 ;;CODE                 0      0       0       0        0.0%
  1688 ;;DATA                 0      0      D2      12        0.0%
  1689 ;;ABS                  0      0      C7       3        0.0%
  1690 ;;NULL                 0      0       0       0        0.0%
  1691 ;;STACK                0      0       B       2        0.0%
  1692 ;;BANK0               50     4C      50       5      100.0%
  1693 ;;BITBANK0            50      0       0       4        0.0%
  1694 ;;SFR0                 0      0       0       1        0.0%
  1695 ;;BITSFR0              0      0       0       1        0.0%
  1696 ;;COMMON               E      B       E       1      100.0%
  1697 ;;BITCOMMON            E      0       2       0       14.3%
  1698 ;;EEDATA             100      0       0       0        0.0%
  1699                           
  1700                           	global	_main
  1701                           psect	maintext,global,class=CODE,delta=2
  1702                           global __pmaintext
  1703  0238                     __pmaintext:
  1704                           
  1705 ;; *************** function _main *****************
  1706 ;; Defined at:
  1707 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  a               2   73[BANK0 ] int 
  1712 ;;  shortwall       2   71[BANK0 ] int 
  1713 ;;  choice          1   75[BANK0 ] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;		None               void
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 17F/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       0       0       0       0
  1724 ;;      Locals:         0       5       0       0       0
  1725 ;;      Temps:          0       3       0       0       0
  1726 ;;      Totals:         0       8       0       0       0
  1727 ;;Total ram usage:        8 bytes
  1728 ;; Hardware stack levels required when called:    8
  1729 ;; This function calls:
  1730 ;;		_init
  1731 ;;		_robot_read
  1732 ;;		_readAvgDistance
  1733 ;;		_UpdateDisplay
  1734 ;;		_Menu
  1735 ;;		_calibrateIR
  1736 ;;		_robotTurnSpeed
  1737 ;;		_robotMoveSpeed
  1738 ;;		_robotFollow
  1739 ;;		_ChargeMode
  1740 ;; This function is called by:
  1741 ;;		Startup code after reset
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           psect	maintext
  1745                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1746                           	line	172
  1747                           	global	__size_of_main
  1748  0211                     	__size_of_main	equ	__end_of_main-_main
  1749                           	
  1750  0238                     _main:	
  1751                           	opt	stack 0
  1752                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1753                           	line	173
  1754                           	
  1755  0238                     l11290:	
  1756                           ;Main.c: 173: unsigned char choice = 255;
  1757  0238  30FF               	movlw	(0FFh)
  1758  0239  1283               	bcf	status, 5	;RP0=0, select bank0
  1759  023A  1303               	bcf	status, 6	;RP1=0, select bank0
  1760  023B  00E4               	movwf	(??_main+0)+0
  1761  023C  0864               	movf	(??_main+0)+0,w
  1762  023D  00EB               	movwf	(main@choice)
  1763                           	line	174
  1764                           	
  1765  023E                     l11292:	
  1766                           ;Main.c: 174: int shortwall = 0;
  1767  023E  01E7               	clrf	(main@shortwall)
  1768  023F  01E8               	clrf	(main@shortwall+1)
  1769                           	line	177
  1770                           	
  1771  0240                     l11294:	
  1772                           ;Main.c: 177: init();
  1773  0240  160A  118A  26B4   	fcall	_init
              120A  118A         
  1774  0245  2A46               	goto	l11296
  1775                           	line	180
  1776                           ;Main.c: 180: while(1)
  1777                           	
  1778  0246                     l2232:	
  1779                           	line	182
  1780                           	
  1781  0246                     l11296:	
  1782                           ;Main.c: 181: {
  1783                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  1784  0246  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1785  0247  2A49               	goto	u4871
  1786  0248  2A4A               	goto	u4870
  1787  0249                     u4871:
  1788  0249  2A5C               	goto	l11306
  1789  024A                     u4870:
  1790                           	line	184
  1791                           	
  1792  024A                     l11298:	
  1793                           ;Main.c: 183: {
  1794                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  1795  024A  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1796                           	line	185
  1797                           	
  1798  024B                     l11300:	
  1799                           ;Main.c: 185: robot_read(2);
  1800  024B  3002               	movlw	(02h)
  1801  024C  120A  158A  26E2   	fcall	_robot_read
              120A  118A         
  1802                           	line	186
  1803                           	
  1804  0251                     l11302:	
  1805                           ;Main.c: 186: readAvgDistance();
  1806  0251  120A  158A  2379   	fcall	_readAvgDistance
              120A  118A         
  1807                           	line	187
  1808                           	
  1809  0256                     l11304:	
  1810                           ;Main.c: 187: UpdateDisplay();
  1811  0256  120A  118A  25C3   	fcall	_UpdateDisplay
              120A  118A         
  1812  025B  2A5C               	goto	l11306
  1813                           	line	188
  1814                           	
  1815  025C                     l2233:	
  1816                           	line	189
  1817                           	
  1818  025C                     l11306:	
  1819                           ;Main.c: 188: }
  1820                           ;Main.c: 189: if (buttonPressed)
  1821  025C  087D               	movf	(_buttonPressed),w	;volatile
  1822  025D  1D03               	skipz
  1823  025E  2A60               	goto	u4880
  1824  025F  2C28               	goto	l11364
  1825  0260                     u4880:
  1826                           	line	192
  1827                           	
  1828  0260                     l11308:	
  1829                           ;Main.c: 191: {
  1830                           ;Main.c: 192: choice = Menu(buttonPressed);
  1831  0260  087D               	movf	(_buttonPressed),w	;volatile
  1832  0261  120A  158A  2158   	fcall	_Menu
              120A  118A         
  1833  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  1834  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  1835  0268  00E4               	movwf	(??_main+0)+0
  1836  0269  0864               	movf	(??_main+0)+0,w
  1837  026A  00EB               	movwf	(main@choice)
  1838                           	line	193
  1839                           	
  1840  026B                     l11310:	
  1841                           ;Main.c: 193: buttonPressed = 0;
  1842  026B  01FD               	clrf	(_buttonPressed)	;volatile
  1843  026C  2C28               	goto	l11364
  1844                           	line	194
  1845                           	
  1846  026D                     l2234:	
  1847                           	line	198
  1848                           ;Main.c: 194: }
  1849                           ;Main.c: 198: switch (choice)
  1850  026D  2C28               	goto	l11364
  1851                           	line	200
  1852                           ;Main.c: 199: {
  1853                           ;Main.c: 200: case 0:
  1854                           	
  1855  026E                     l2236:	
  1856                           	line	201
  1857                           	
  1858  026E                     l11312:	
  1859                           ;Main.c: 201: calibrateIR();
  1860  026E  120A  158A  223F   	fcall	_calibrateIR
              120A  118A         
  1861                           	line	202
  1862                           ;Main.c: 202: break;
  1863  0273  2C3E               	goto	l11366
  1864                           	line	203
  1865                           ;Main.c: 203: case 1:
  1866                           	
  1867  0274                     l2238:	
  1868                           	line	209
  1869                           ;Main.c: 209: break;
  1870  0274  2C3E               	goto	l11366
  1871                           	line	210
  1872                           ;Main.c: 210: case 2:
  1873                           	
  1874  0275                     l2239:	
  1875                           	line	215
  1876                           	
  1877  0275                     l11314:	
  1878                           ;Main.c: 215: robotTurnSpeed(-90,400);
  1879  0275  30A6               	movlw	low(-90)
  1880  0276  1283               	bcf	status, 5	;RP0=0, select bank0
  1881  0277  1303               	bcf	status, 6	;RP1=0, select bank0
  1882  0278  00D9               	movwf	(?_robotTurnSpeed)
  1883  0279  30FF               	movlw	high(-90)
  1884  027A  00DA               	movwf	((?_robotTurnSpeed))+1
  1885  027B  3090               	movlw	low(0190h)
  1886  027C  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  1887  027D  3001               	movlw	high(0190h)
  1888  027E  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1889  027F  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  1890                           	line	216
  1891                           ;Main.c: 216: readAvgDistance();
  1892  0284  120A  158A  2379   	fcall	_readAvgDistance
              120A  118A         
  1893                           	line	217
  1894                           	
  1895  0289                     l11316:	
  1896                           ;Main.c: 217: int a = adcVal;
  1897  0289  1283               	bcf	status, 5	;RP0=0, select bank0
  1898  028A  1303               	bcf	status, 6	;RP1=0, select bank0
  1899  028B  086D               	movf	(_adcVal+1),w	;volatile
  1900  028C  01EA               	clrf	(main@a+1)	;volatile
  1901  028D  07EA               	addwf	(main@a+1)	;volatile
  1902  028E  086C               	movf	(_adcVal),w	;volatile
  1903  028F  01E9               	clrf	(main@a)	;volatile
  1904  0290  07E9               	addwf	(main@a)	;volatile
  1905                           
  1906                           	line	218
  1907                           	
  1908  0291                     l11318:	
  1909                           ;Main.c: 218: robotMoveSpeed(1500 - a,400);
  1910  0291  0969               	comf	(main@a),w
  1911  0292  00E4               	movwf	(??_main+0)+0
  1912  0293  096A               	comf	(main@a+1),w
  1913  0294  00E5               	movwf	((??_main+0)+0+1)
  1914  0295  0AE4               	incf	(??_main+0)+0,f
  1915  0296  1903               	skipnz
  1916  0297  0AE5               	incf	((??_main+0)+0+1),f
  1917  0298  0864               	movf	0+(??_main+0)+0,w
  1918  0299  3EDC               	addlw	low(05DCh)
  1919  029A  00D9               	movwf	(?_robotMoveSpeed)
  1920  029B  0865               	movf	1+(??_main+0)+0,w
  1921  029C  1803               	skipnc
  1922  029D  3E01               	addlw	1
  1923  029E  3E05               	addlw	high(05DCh)
  1924  029F  00DA               	movwf	1+(?_robotMoveSpeed)
  1925  02A0  3090               	movlw	low(0190h)
  1926  02A1  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  1927  02A2  3001               	movlw	high(0190h)
  1928  02A3  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1929  02A4  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  1930                           	line	220
  1931                           	
  1932  02A9                     l11320:	
  1933                           ;Main.c: 220: robotTurnSpeed(-90,400);
  1934  02A9  30A6               	movlw	low(-90)
  1935  02AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1936  02AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1937  02AC  00D9               	movwf	(?_robotTurnSpeed)
  1938  02AD  30FF               	movlw	high(-90)
  1939  02AE  00DA               	movwf	((?_robotTurnSpeed))+1
  1940  02AF  3090               	movlw	low(0190h)
  1941  02B0  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  1942  02B1  3001               	movlw	high(0190h)
  1943  02B2  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1944  02B3  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  1945                           	line	221
  1946                           	
  1947  02B8                     l11322:	
  1948                           ;Main.c: 221: robotMoveSpeed(4000,400);
  1949  02B8  30A0               	movlw	low(0FA0h)
  1950  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1951  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1952  02BB  00D9               	movwf	(?_robotMoveSpeed)
  1953  02BC  300F               	movlw	high(0FA0h)
  1954  02BD  00DA               	movwf	((?_robotMoveSpeed))+1
  1955  02BE  3090               	movlw	low(0190h)
  1956  02BF  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  1957  02C0  3001               	movlw	high(0190h)
  1958  02C1  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1959  02C2  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  1960                           	line	223
  1961                           	
  1962  02C7                     l11324:	
  1963                           ;Main.c: 223: robotTurnSpeed(90,400);
  1964  02C7  305A               	movlw	low(05Ah)
  1965  02C8  1283               	bcf	status, 5	;RP0=0, select bank0
  1966  02C9  1303               	bcf	status, 6	;RP1=0, select bank0
  1967  02CA  00D9               	movwf	(?_robotTurnSpeed)
  1968  02CB  3000               	movlw	high(05Ah)
  1969  02CC  00DA               	movwf	((?_robotTurnSpeed))+1
  1970  02CD  3090               	movlw	low(0190h)
  1971  02CE  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  1972  02CF  3001               	movlw	high(0190h)
  1973  02D0  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1974  02D1  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  1975                           	line	224
  1976                           	
  1977  02D6                     l11326:	
  1978                           ;Main.c: 224: robotMoveSpeed(1000,400);
  1979  02D6  30E8               	movlw	low(03E8h)
  1980  02D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1981  02D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1982  02D9  00D9               	movwf	(?_robotMoveSpeed)
  1983  02DA  3003               	movlw	high(03E8h)
  1984  02DB  00DA               	movwf	((?_robotMoveSpeed))+1
  1985  02DC  3090               	movlw	low(0190h)
  1986  02DD  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  1987  02DE  3001               	movlw	high(0190h)
  1988  02DF  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1989  02E0  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  1990                           	line	225
  1991                           	
  1992  02E5                     l11328:	
  1993                           ;Main.c: 225: robotTurnSpeed(90,400);
  1994  02E5  305A               	movlw	low(05Ah)
  1995  02E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1996  02E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1997  02E8  00D9               	movwf	(?_robotTurnSpeed)
  1998  02E9  3000               	movlw	high(05Ah)
  1999  02EA  00DA               	movwf	((?_robotTurnSpeed))+1
  2000  02EB  3090               	movlw	low(0190h)
  2001  02EC  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2002  02ED  3001               	movlw	high(0190h)
  2003  02EE  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2004  02EF  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  2005                           	line	226
  2006                           	
  2007  02F4                     l11330:	
  2008                           ;Main.c: 226: robotMoveSpeed(1000,400);
  2009  02F4  30E8               	movlw	low(03E8h)
  2010  02F5  1283               	bcf	status, 5	;RP0=0, select bank0
  2011  02F6  1303               	bcf	status, 6	;RP1=0, select bank0
  2012  02F7  00D9               	movwf	(?_robotMoveSpeed)
  2013  02F8  3003               	movlw	high(03E8h)
  2014  02F9  00DA               	movwf	((?_robotMoveSpeed))+1
  2015  02FA  3090               	movlw	low(0190h)
  2016  02FB  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2017  02FC  3001               	movlw	high(0190h)
  2018  02FD  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2019  02FE  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  2020                           	line	229
  2021                           ;Main.c: 229: break;
  2022  0303  2C3E               	goto	l11366
  2023                           	line	230
  2024                           ;Main.c: 230: case 3:
  2025                           	
  2026  0304                     l2240:	
  2027                           	line	237
  2028                           	
  2029  0304                     l11332:	
  2030                           ;Main.c: 237: _delay((unsigned long)((100)*(20000000/4000.0)));
  2031                           	opt asmopt_off
  2032  0304  3003               movlw  3
  2033  0305  1283               	bcf	status, 5	;RP0=0, select bank0
  2034  0306  1303               	bcf	status, 6	;RP1=0, select bank0
  2035  0307  00E6               movwf	((??_main+0)+0+2),f
  2036  0308  308A               movlw	138
  2037  0309  00E5               movwf	((??_main+0)+0+1),f
  2038  030A  3056               	movlw	86
  2039  030B  00E4               movwf	((??_main+0)+0),f
  2040  030C                     u4907:
  2041  030C  0BE4               	decfsz	((??_main+0)+0),f
  2042  030D  2B0C               	goto	u4907
  2043  030E  0BE5               	decfsz	((??_main+0)+0+1),f
  2044  030F  2B0C               	goto	u4907
  2045  0310  0BE6               	decfsz	((??_main+0)+0+2),f
  2046  0311  2B0C               	goto	u4907
  2047  0312  2B13               	nop2
  2048                           opt asmopt_on
  2049                           
  2050                           	line	238
  2051                           	
  2052  0313                     l11334:	
  2053                           ;Main.c: 238: robotMoveSpeed(1000,400);
  2054  0313  30E8               	movlw	low(03E8h)
  2055  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  2056  0315  1303               	bcf	status, 6	;RP1=0, select bank0
  2057  0316  00D9               	movwf	(?_robotMoveSpeed)
  2058  0317  3003               	movlw	high(03E8h)
  2059  0318  00DA               	movwf	((?_robotMoveSpeed))+1
  2060  0319  3090               	movlw	low(0190h)
  2061  031A  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2062  031B  3001               	movlw	high(0190h)
  2063  031C  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2064  031D  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  2065                           	line	239
  2066                           	
  2067  0322                     l11336:	
  2068                           ;Main.c: 239: robotTurnSpeed(80,200);
  2069  0322  3050               	movlw	low(050h)
  2070  0323  1283               	bcf	status, 5	;RP0=0, select bank0
  2071  0324  1303               	bcf	status, 6	;RP1=0, select bank0
  2072  0325  00D9               	movwf	(?_robotTurnSpeed)
  2073  0326  3000               	movlw	high(050h)
  2074  0327  00DA               	movwf	((?_robotTurnSpeed))+1
  2075  0328  30C8               	movlw	low(0C8h)
  2076  0329  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2077  032A  3000               	movlw	high(0C8h)
  2078  032B  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2079  032C  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  2080                           	line	240
  2081                           	
  2082  0331                     l11338:	
  2083                           ;Main.c: 240: robotMoveSpeed(1000,400);
  2084  0331  30E8               	movlw	low(03E8h)
  2085  0332  1283               	bcf	status, 5	;RP0=0, select bank0
  2086  0333  1303               	bcf	status, 6	;RP1=0, select bank0
  2087  0334  00D9               	movwf	(?_robotMoveSpeed)
  2088  0335  3003               	movlw	high(03E8h)
  2089  0336  00DA               	movwf	((?_robotMoveSpeed))+1
  2090  0337  3090               	movlw	low(0190h)
  2091  0338  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2092  0339  3001               	movlw	high(0190h)
  2093  033A  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2094  033B  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  2095                           	line	241
  2096                           	
  2097  0340                     l11340:	
  2098                           ;Main.c: 241: robotTurnSpeed(80,200);
  2099  0340  3050               	movlw	low(050h)
  2100  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  2101  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  2102  0343  00D9               	movwf	(?_robotTurnSpeed)
  2103  0344  3000               	movlw	high(050h)
  2104  0345  00DA               	movwf	((?_robotTurnSpeed))+1
  2105  0346  30C8               	movlw	low(0C8h)
  2106  0347  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2107  0348  3000               	movlw	high(0C8h)
  2108  0349  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2109  034A  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  2110                           	line	242
  2111                           	
  2112  034F                     l11342:	
  2113                           ;Main.c: 242: robotMoveSpeed(2000,400);
  2114  034F  30D0               	movlw	low(07D0h)
  2115  0350  1283               	bcf	status, 5	;RP0=0, select bank0
  2116  0351  1303               	bcf	status, 6	;RP1=0, select bank0
  2117  0352  00D9               	movwf	(?_robotMoveSpeed)
  2118  0353  3007               	movlw	high(07D0h)
  2119  0354  00DA               	movwf	((?_robotMoveSpeed))+1
  2120  0355  3090               	movlw	low(0190h)
  2121  0356  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2122  0357  3001               	movlw	high(0190h)
  2123  0358  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2124  0359  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  2125                           	line	243
  2126                           	
  2127  035E                     l11344:	
  2128                           ;Main.c: 243: robotTurnSpeed(-80,200);
  2129  035E  30B0               	movlw	low(-80)
  2130  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  2131  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  2132  0361  00D9               	movwf	(?_robotTurnSpeed)
  2133  0362  30FF               	movlw	high(-80)
  2134  0363  00DA               	movwf	((?_robotTurnSpeed))+1
  2135  0364  30C8               	movlw	low(0C8h)
  2136  0365  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2137  0366  3000               	movlw	high(0C8h)
  2138  0367  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2139  0368  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  2140                           	line	244
  2141                           ;Main.c: 244: break;
  2142  036D  2C3E               	goto	l11366
  2143                           	line	245
  2144                           ;Main.c: 245: case 4:
  2145                           	
  2146  036E                     l2241:	
  2147                           	line	246
  2148                           ;Main.c: 246: while (ROBOTerror != 1)
  2149  036E  2C16               	goto	l11358
  2150                           	
  2151  036F                     l2243:	
  2152                           	line	248
  2153                           ;Main.c: 247: {
  2154                           ;Main.c: 248: switch (ROBOTerror)
  2155  036F  2C05               	goto	l11356
  2156                           	line	250
  2157                           ;Main.c: 249: {
  2158                           ;Main.c: 250: case 0:
  2159                           	
  2160  0370                     l2245:	
  2161                           	line	251
  2162                           	
  2163  0370                     l11346:	
  2164                           ;Main.c: 251: robotFollow(1000, 300, adcVal);
  2165  0370  30E8               	movlw	low(03E8h)
  2166  0371  1283               	bcf	status, 5	;RP0=0, select bank0
  2167  0372  1303               	bcf	status, 6	;RP1=0, select bank0
  2168  0373  00D9               	movwf	(?_robotFollow)
  2169  0374  3003               	movlw	high(03E8h)
  2170  0375  00DA               	movwf	((?_robotFollow))+1
  2171  0376  302C               	movlw	low(012Ch)
  2172  0377  00DB               	movwf	0+(?_robotFollow)+02h
  2173  0378  3001               	movlw	high(012Ch)
  2174  0379  00DC               	movwf	(0+(?_robotFollow)+02h)+1
  2175  037A  086D               	movf	(_adcVal+1),w	;volatile
  2176  037B  01DE               	clrf	1+(?_robotFollow)+04h
  2177  037C  07DE               	addwf	1+(?_robotFollow)+04h
  2178  037D  086C               	movf	(_adcVal),w	;volatile
  2179  037E  01DD               	clrf	0+(?_robotFollow)+04h
  2180  037F  07DD               	addwf	0+(?_robotFollow)+04h
  2181                           
  2182  0380  120A  118A  2449   	fcall	_robotFollow
              120A  118A         
  2183                           	line	252
  2184                           ;Main.c: 252: break;
  2185  0385  2C16               	goto	l11358
  2186                           	line	253
  2187                           ;Main.c: 253: case 1:
  2188                           	
  2189  0386                     l2247:	
  2190                           	line	255
  2191                           ;Main.c: 255: break;
  2192  0386  2C16               	goto	l11358
  2193                           	line	256
  2194                           ;Main.c: 256: case 10:
  2195                           	
  2196  0387                     l2248:	
  2197                           	line	257
  2198                           	
  2199  0387                     l11348:	
  2200                           ;Main.c: 257: robotTurnSpeed(90,400);
  2201  0387  305A               	movlw	low(05Ah)
  2202  0388  1283               	bcf	status, 5	;RP0=0, select bank0
  2203  0389  1303               	bcf	status, 6	;RP1=0, select bank0
  2204  038A  00D9               	movwf	(?_robotTurnSpeed)
  2205  038B  3000               	movlw	high(05Ah)
  2206  038C  00DA               	movwf	((?_robotTurnSpeed))+1
  2207  038D  3090               	movlw	low(0190h)
  2208  038E  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2209  038F  3001               	movlw	high(0190h)
  2210  0390  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2211  0391  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  2212                           	line	259
  2213                           ;Main.c: 259: readAvgDistance();
  2214  0396  120A  158A  2379   	fcall	_readAvgDistance
              120A  118A         
  2215                           	line	260
  2216                           ;Main.c: 260: robotFollow(1000, 300, adcVal - 10);
  2217  039B  30E8               	movlw	low(03E8h)
  2218  039C  1283               	bcf	status, 5	;RP0=0, select bank0
  2219  039D  1303               	bcf	status, 6	;RP1=0, select bank0
  2220  039E  00D9               	movwf	(?_robotFollow)
  2221  039F  3003               	movlw	high(03E8h)
  2222  03A0  00DA               	movwf	((?_robotFollow))+1
  2223  03A1  302C               	movlw	low(012Ch)
  2224  03A2  00DB               	movwf	0+(?_robotFollow)+02h
  2225  03A3  3001               	movlw	high(012Ch)
  2226  03A4  00DC               	movwf	(0+(?_robotFollow)+02h)+1
  2227  03A5  086C               	movf	(_adcVal),w	;volatile
  2228  03A6  3EF6               	addlw	low(-10)
  2229  03A7  00DD               	movwf	0+(?_robotFollow)+04h
  2230  03A8  086D               	movf	(_adcVal+1),w	;volatile
  2231  03A9  1803               	skipnc
  2232  03AA  3E01               	addlw	1
  2233  03AB  3EFF               	addlw	high(-10)
  2234  03AC  00DE               	movwf	1+0+(?_robotFollow)+04h
  2235  03AD  120A  118A  2449   	fcall	_robotFollow
              120A  118A         
  2236                           	line	261
  2237                           ;Main.c: 261: break;
  2238  03B2  2C16               	goto	l11358
  2239                           	line	262
  2240                           ;Main.c: 262: case 11:
  2241                           	
  2242  03B3                     l2249:	
  2243                           	line	264
  2244                           	
  2245  03B3                     l11350:	
  2246                           ;Main.c: 264: robotMoveSpeed(700,300);
  2247  03B3  30BC               	movlw	low(02BCh)
  2248  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2249  03B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2250  03B6  00D9               	movwf	(?_robotMoveSpeed)
  2251  03B7  3002               	movlw	high(02BCh)
  2252  03B8  00DA               	movwf	((?_robotMoveSpeed))+1
  2253  03B9  302C               	movlw	low(012Ch)
  2254  03BA  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2255  03BB  3001               	movlw	high(012Ch)
  2256  03BC  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2257  03BD  120A  118A  2722   	fcall	_robotMoveSpeed
              120A  118A         
  2258                           	line	265
  2259                           ;Main.c: 265: robotTurnSpeed(-90,400);
  2260  03C2  30A6               	movlw	low(-90)
  2261  03C3  1283               	bcf	status, 5	;RP0=0, select bank0
  2262  03C4  1303               	bcf	status, 6	;RP1=0, select bank0
  2263  03C5  00D9               	movwf	(?_robotTurnSpeed)
  2264  03C6  30FF               	movlw	high(-90)
  2265  03C7  00DA               	movwf	((?_robotTurnSpeed))+1
  2266  03C8  3090               	movlw	low(0190h)
  2267  03C9  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2268  03CA  3001               	movlw	high(0190h)
  2269  03CB  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2270  03CC  120A  158A  248F   	fcall	_robotTurnSpeed
              120A  118A         
  2271                           	line	266
  2272                           ;Main.c: 266: readAvgDistance();
  2273  03D1  120A  158A  2379   	fcall	_readAvgDistance
              120A  118A         
  2274                           	line	267
  2275                           ;Main.c: 267: robotFollow(1000, 300, adcVal - 10);
  2276  03D6  30E8               	movlw	low(03E8h)
  2277  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2278  03D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2279  03D9  00D9               	movwf	(?_robotFollow)
  2280  03DA  3003               	movlw	high(03E8h)
  2281  03DB  00DA               	movwf	((?_robotFollow))+1
  2282  03DC  302C               	movlw	low(012Ch)
  2283  03DD  00DB               	movwf	0+(?_robotFollow)+02h
  2284  03DE  3001               	movlw	high(012Ch)
  2285  03DF  00DC               	movwf	(0+(?_robotFollow)+02h)+1
  2286  03E0  086C               	movf	(_adcVal),w	;volatile
  2287  03E1  3EF6               	addlw	low(-10)
  2288  03E2  00DD               	movwf	0+(?_robotFollow)+04h
  2289  03E3  086D               	movf	(_adcVal+1),w	;volatile
  2290  03E4  1803               	skipnc
  2291  03E5  3E01               	addlw	1
  2292  03E6  3EFF               	addlw	high(-10)
  2293  03E7  00DE               	movwf	1+0+(?_robotFollow)+04h
  2294  03E8  120A  118A  2449   	fcall	_robotFollow
              120A  118A         
  2295                           	line	268
  2296                           ;Main.c: 268: break;
  2297  03ED  2C16               	goto	l11358
  2298                           	line	269
  2299                           ;Main.c: 269: default:
  2300                           	
  2301  03EE                     l2250:	
  2302                           	line	270
  2303                           	
  2304  03EE                     l11352:	
  2305                           ;Main.c: 270: robotFollow(1000, 300, adcVal);
  2306  03EE  30E8               	movlw	low(03E8h)
  2307  03EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2308  03F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2309  03F1  00D9               	movwf	(?_robotFollow)
  2310  03F2  3003               	movlw	high(03E8h)
  2311  03F3  00DA               	movwf	((?_robotFollow))+1
  2312  03F4  302C               	movlw	low(012Ch)
  2313  03F5  00DB               	movwf	0+(?_robotFollow)+02h
  2314  03F6  3001               	movlw	high(012Ch)
  2315  03F7  00DC               	movwf	(0+(?_robotFollow)+02h)+1
  2316  03F8  086D               	movf	(_adcVal+1),w	;volatile
  2317  03F9  01DE               	clrf	1+(?_robotFollow)+04h
  2318  03FA  07DE               	addwf	1+(?_robotFollow)+04h
  2319  03FB  086C               	movf	(_adcVal),w	;volatile
  2320  03FC  01DD               	clrf	0+(?_robotFollow)+04h
  2321  03FD  07DD               	addwf	0+(?_robotFollow)+04h
  2322                           
  2323  03FE  120A  118A  2449   	fcall	_robotFollow
              120A  118A         
  2324                           	line	271
  2325                           ;Main.c: 271: break;
  2326  0403  2C16               	goto	l11358
  2327                           	line	273
  2328                           	
  2329  0404                     l11354:	
  2330                           ;Main.c: 273: }
  2331  0404  2C16               	goto	l11358
  2332                           	line	248
  2333                           	
  2334  0405                     l2244:	
  2335                           	
  2336  0405                     l11356:	
  2337  0405  1683               	bsf	status, 5	;RP0=1, select bank1
  2338  0406  1303               	bcf	status, 6	;RP1=0, select bank1
  2339  0407  084F               	movf	(_ROBOTerror)^080h,w
  2340                           	; Switch size 1, requested type "space"
  2341                           ; Number of cases is 4, Range of values is 0 to 11
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte           13     7 (average)
  2345                           ; direct_byte           44     8 (fixed)
  2346                           ; jumptable            260     6 (fixed)
  2347                           ; rangetable            16     6 (fixed)
  2348                           ; spacedrange           30     9 (fixed)
  2349                           ; locatedrange          12     3 (fixed)
  2350                           ;	Chosen strategy is simple_byte
  2351                           
  2352                           	opt asmopt_off
  2353  0408  3A00               	xorlw	0^0	; case 0
  2354  0409  1903               	skipnz
  2355  040A  2B70               	goto	l11346
  2356  040B  3A01               	xorlw	1^0	; case 1
  2357  040C  1903               	skipnz
  2358  040D  2C16               	goto	l11358
  2359  040E  3A0B               	xorlw	10^1	; case 10
  2360  040F  1903               	skipnz
  2361  0410  2B87               	goto	l11348
  2362  0411  3A01               	xorlw	11^10	; case 11
  2363  0412  1903               	skipnz
  2364  0413  2BB3               	goto	l11350
  2365  0414  2BEE               	goto	l11352
  2366                           	opt asmopt_on
  2367                           
  2368                           	line	273
  2369                           	
  2370  0415                     l2246:	
  2371  0415  2C16               	goto	l11358
  2372                           	line	274
  2373                           	
  2374  0416                     l2242:	
  2375                           	line	246
  2376                           	
  2377  0416                     l11358:	
  2378  0416  1683               	bsf	status, 5	;RP0=1, select bank1
  2379  0417  1303               	bcf	status, 6	;RP1=0, select bank1
  2380  0418  084F               	movf	(_ROBOTerror)^080h,w
  2381  0419  3A01               	xorlw	01h
  2382  041A  1D03               	skipz
  2383  041B  2C1D               	goto	u4891
  2384  041C  2C1E               	goto	u4890
  2385  041D                     u4891:
  2386  041D  2C05               	goto	l11356
  2387  041E                     u4890:
  2388  041E  2C3E               	goto	l11366
  2389                           	
  2390  041F                     l2251:	
  2391                           	line	275
  2392                           ;Main.c: 274: }
  2393                           ;Main.c: 275: break;
  2394  041F  2C3E               	goto	l11366
  2395                           	line	277
  2396                           ;Main.c: 277: case 5:
  2397                           	
  2398  0420                     l2252:	
  2399                           	line	278
  2400                           	
  2401  0420                     l11360:	
  2402                           ;Main.c: 278: ChargeMode();
  2403  0420  120A  158A  2112   	fcall	_ChargeMode
              120A  118A         
  2404                           	line	279
  2405                           ;Main.c: 279: break;
  2406  0425  2C3E               	goto	l11366
  2407                           	line	280
  2408                           ;Main.c: 280: default:
  2409                           	
  2410  0426                     l2253:	
  2411                           	line	282
  2412                           ;Main.c: 282: break;
  2413  0426  2C3E               	goto	l11366
  2414                           	line	283
  2415                           	
  2416  0427                     l11362:	
  2417                           ;Main.c: 283: }
  2418  0427  2C3E               	goto	l11366
  2419                           	line	198
  2420                           	
  2421  0428                     l2235:	
  2422                           	
  2423  0428                     l11364:	
  2424  0428  1283               	bcf	status, 5	;RP0=0, select bank0
  2425  0429  1303               	bcf	status, 6	;RP1=0, select bank0
  2426  042A  086B               	movf	(main@choice),w
  2427                           	; Switch size 1, requested type "space"
  2428                           ; Number of cases is 6, Range of values is 0 to 5
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte           19    10 (average)
  2432                           ; direct_byte           26     8 (fixed)
  2433                           ; jumptable            260     6 (fixed)
  2434                           ; rangetable            10     6 (fixed)
  2435                           ; spacedrange           18     9 (fixed)
  2436                           ; locatedrange           6     3 (fixed)
  2437                           ;	Chosen strategy is simple_byte
  2438                           
  2439                           	opt asmopt_off
  2440  042B  3A00               	xorlw	0^0	; case 0
  2441  042C  1903               	skipnz
  2442  042D  2A6E               	goto	l11312
  2443  042E  3A01               	xorlw	1^0	; case 1
  2444  042F  1903               	skipnz
  2445  0430  2C3E               	goto	l11366
  2446  0431  3A03               	xorlw	2^1	; case 2
  2447  0432  1903               	skipnz
  2448  0433  2A75               	goto	l11314
  2449  0434  3A01               	xorlw	3^2	; case 3
  2450  0435  1903               	skipnz
  2451  0436  2B04               	goto	l11332
  2452  0437  3A07               	xorlw	4^3	; case 4
  2453  0438  1903               	skipnz
  2454  0439  2C16               	goto	l11358
  2455  043A  3A01               	xorlw	5^4	; case 5
  2456  043B  1903               	skipnz
  2457  043C  2C20               	goto	l11360
  2458  043D  2C3E               	goto	l11366
  2459                           	opt asmopt_on
  2460                           
  2461                           	line	283
  2462                           	
  2463  043E                     l2237:	
  2464                           	line	284
  2465                           	
  2466  043E                     l11366:	
  2467                           ;Main.c: 284: choice = 255;
  2468  043E  30FF               	movlw	(0FFh)
  2469  043F  1283               	bcf	status, 5	;RP0=0, select bank0
  2470  0440  1303               	bcf	status, 6	;RP1=0, select bank0
  2471  0441  00E4               	movwf	(??_main+0)+0
  2472  0442  0864               	movf	(??_main+0)+0,w
  2473  0443  00EB               	movwf	(main@choice)
  2474  0444  2A46               	goto	l11296
  2475                           	line	285
  2476                           	
  2477  0445                     l2254:	
  2478                           	line	180
  2479  0445  2A46               	goto	l11296
  2480                           	
  2481  0446                     l2255:	
  2482                           	line	286
  2483                           	
  2484  0446                     l2256:	
  2485                           	global	start
  2486  0446  120A  118A  2812   	ljmp	start
  2487                           	opt stack 0
  2488                           GLOBAL	__end_of_main
  2489  0449                     	__end_of_main:
  2490 ;; =============== function _main ends ============
  2491                           
  2492                           	signat	_main,88
  2493                           	global	_ChargeMode
  2494                           psect	text972,local,class=CODE,delta=2
  2495                           global __ptext972
  2496  0912                     __ptext972:
  2497                           
  2498 ;; *************** function _ChargeMode *****************
  2499 ;; Defined at:
  2500 ;;		line 433 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0
  2516 ;;      Temps:          0       1       0       0       0
  2517 ;;      Totals:         0       1       0       0       0
  2518 ;;Total ram usage:        1 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    6
  2521 ;; This function calls:
  2522 ;;		_ser_putch
  2523 ;;		_UpdateDisplay
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           psect	text972
  2529                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2530                           	line	433
  2531                           	global	__size_of_ChargeMode
  2532  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2533                           	
  2534  0912                     _ChargeMode:	
  2535                           	opt	stack 1
  2536                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2537                           	line	435
  2538                           	
  2539  0912                     l11268:	
  2540                           ;Main.c: 435: currentMenu = 2;
  2541  0912  3002               	movlw	(02h)
  2542  0913  1283               	bcf	status, 5	;RP0=0, select bank0
  2543  0914  1303               	bcf	status, 6	;RP1=0, select bank0
  2544  0915  00D9               	movwf	(??_ChargeMode+0)+0
  2545  0916  0859               	movf	(??_ChargeMode+0)+0,w
  2546  0917  1683               	bsf	status, 5	;RP0=1, select bank1
  2547  0918  1303               	bcf	status, 6	;RP1=0, select bank1
  2548  0919  00D3               	movwf	(_currentMenu)^080h	;volatile
  2549                           	line	436
  2550                           	
  2551  091A                     l11270:	
  2552                           ;Main.c: 436: ser_putch(128);
  2553  091A  3080               	movlw	(080h)
  2554  091B  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  2555  0920  2921               	goto	l11272
  2556                           	line	438
  2557                           ;Main.c: 438: while (1)
  2558                           	
  2559  0921                     l2277:	
  2560                           	line	440
  2561                           	
  2562  0921                     l11272:	
  2563                           ;Main.c: 439: {
  2564                           ;Main.c: 440: if (RTC_FLAG_250MS == 1)
  2565  0921  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2566  0922  2924               	goto	u4861
  2567  0923  2925               	goto	u4860
  2568  0924                     u4861:
  2569  0924  2944               	goto	l11288
  2570  0925                     u4860:
  2571                           	line	442
  2572                           	
  2573  0925                     l11274:	
  2574                           ;Main.c: 441: {
  2575                           ;Main.c: 442: RTC_FLAG_250MS = 0;
  2576  0925  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2577                           	line	443
  2578                           	
  2579  0926                     l11276:	
  2580                           ;Main.c: 443: UpdateDisplay();
  2581  0926  120A  118A  25C3   	fcall	_UpdateDisplay
              120A  158A         
  2582  092B  2944               	goto	l11288
  2583                           	line	444
  2584                           	
  2585  092C                     l2278:	
  2586                           	line	445
  2587                           ;Main.c: 444: }
  2588                           ;Main.c: 445: switch (buttonPressed)
  2589  092C  2944               	goto	l11288
  2590                           	line	447
  2591                           ;Main.c: 446: {
  2592                           ;Main.c: 447: case 1:
  2593                           	
  2594  092D                     l2280:	
  2595                           	line	448
  2596                           ;Main.c: 448: buttonPressed = 0;
  2597  092D  01FD               	clrf	(_buttonPressed)	;volatile
  2598                           	line	449
  2599                           ;Main.c: 449: break;
  2600  092E  2921               	goto	l11272
  2601                           	line	450
  2602                           ;Main.c: 450: case 2:
  2603                           	
  2604  092F                     l2282:	
  2605                           	line	451
  2606                           ;Main.c: 451: buttonPressed = 0;
  2607  092F  01FD               	clrf	(_buttonPressed)	;volatile
  2608                           	line	452
  2609                           ;Main.c: 452: break;
  2610  0930  2921               	goto	l11272
  2611                           	line	453
  2612                           ;Main.c: 453: case 3:
  2613                           	
  2614  0931                     l2283:	
  2615                           	line	454
  2616                           ;Main.c: 454: buttonPressed = 0;
  2617  0931  01FD               	clrf	(_buttonPressed)	;volatile
  2618                           	line	455
  2619                           ;Main.c: 455: break;
  2620  0932  2921               	goto	l11272
  2621                           	line	456
  2622                           ;Main.c: 456: case 4:
  2623                           	
  2624  0933                     l2284:	
  2625                           	line	457
  2626                           ;Main.c: 457: buttonPressed = 0;
  2627  0933  01FD               	clrf	(_buttonPressed)	;volatile
  2628                           	line	458
  2629                           ;Main.c: 458: break;
  2630  0934  2921               	goto	l11272
  2631                           	line	459
  2632                           ;Main.c: 459: case 5:
  2633                           	
  2634  0935                     l2285:	
  2635                           	line	460
  2636                           	
  2637  0935                     l11278:	
  2638                           ;Main.c: 460: ser_putch(132);
  2639  0935  3084               	movlw	(084h)
  2640  0936  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  2641                           	line	461
  2642                           	
  2643  093B                     l11280:	
  2644                           ;Main.c: 461: buttonPressed = 0;
  2645  093B  01FD               	clrf	(_buttonPressed)	;volatile
  2646                           	line	462
  2647                           	
  2648  093C                     l11282:	
  2649                           ;Main.c: 462: currentMenu = 0;
  2650  093C  1683               	bsf	status, 5	;RP0=1, select bank1
  2651  093D  1303               	bcf	status, 6	;RP1=0, select bank1
  2652  093E  01D3               	clrf	(_currentMenu)^080h	;volatile
  2653  093F  2957               	goto	l2286
  2654                           	line	463
  2655                           	
  2656  0940                     l11284:	
  2657                           ;Main.c: 463: return;
  2658  0940  2957               	goto	l2286
  2659                           	line	464
  2660                           ;Main.c: 464: default:
  2661                           	
  2662  0941                     l2287:	
  2663                           	line	465
  2664                           ;Main.c: 465: buttonPressed = 0;
  2665  0941  01FD               	clrf	(_buttonPressed)	;volatile
  2666                           	line	466
  2667                           ;Main.c: 466: break;
  2668  0942  2921               	goto	l11272
  2669                           	line	467
  2670                           	
  2671  0943                     l11286:	
  2672                           ;Main.c: 467: }
  2673  0943  2921               	goto	l11272
  2674                           	line	445
  2675                           	
  2676  0944                     l2279:	
  2677                           	
  2678  0944                     l11288:	
  2679  0944  087D               	movf	(_buttonPressed),w	;volatile
  2680                           	; Switch size 1, requested type "space"
  2681                           ; Number of cases is 5, Range of values is 1 to 5
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte           16     9 (average)
  2685                           ; direct_byte           26    11 (fixed)
  2686                           ; jumptable            263     9 (fixed)
  2687                           ;	Chosen strategy is simple_byte
  2688                           
  2689                           	opt asmopt_off
  2690  0945  3A01               	xorlw	1^0	; case 1
  2691  0946  1903               	skipnz
  2692  0947  292D               	goto	l2280
  2693  0948  3A03               	xorlw	2^1	; case 2
  2694  0949  1903               	skipnz
  2695  094A  292F               	goto	l2282
  2696  094B  3A01               	xorlw	3^2	; case 3
  2697  094C  1903               	skipnz
  2698  094D  2931               	goto	l2283
  2699  094E  3A07               	xorlw	4^3	; case 4
  2700  094F  1903               	skipnz
  2701  0950  2933               	goto	l2284
  2702  0951  3A01               	xorlw	5^4	; case 5
  2703  0952  1903               	skipnz
  2704  0953  2935               	goto	l11278
  2705  0954  2941               	goto	l2287
  2706                           	opt asmopt_on
  2707                           
  2708                           	line	467
  2709                           	
  2710  0955                     l2281:	
  2711  0955  2921               	goto	l11272
  2712                           	line	468
  2713                           	
  2714  0956                     l2288:	
  2715                           	line	438
  2716  0956  2921               	goto	l11272
  2717                           	
  2718  0957                     l2289:	
  2719                           	line	469
  2720                           	
  2721  0957                     l2286:	
  2722  0957  0008               	return
  2723                           	opt stack 0
  2724                           GLOBAL	__end_of_ChargeMode
  2725  0958                     	__end_of_ChargeMode:
  2726 ;; =============== function _ChargeMode ends ============
  2727                           
  2728                           	signat	_ChargeMode,88
  2729                           	global	_robotFollow
  2730                           psect	text973,local,class=CODE,delta=2
  2731                           global __ptext973
  2732  0449                     __ptext973:
  2733                           
  2734 ;; *************** function _robotFollow *****************
  2735 ;; Defined at:
  2736 ;;		line 156 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  distance        2   57[BANK0 ] int 
  2739 ;;  speed           2   59[BANK0 ] int 
  2740 ;;  AdcTarget       2   61[BANK0 ] int 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  temp1           2   66[BANK0 ] int 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         0       6       0       0       0
  2753 ;;      Locals:         0       2       0       0       0
  2754 ;;      Temps:          0       3       0       0       0
  2755 ;;      Totals:         0      11       0       0       0
  2756 ;;Total ram usage:       11 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    7
  2759 ;; This function calls:
  2760 ;;		_RobotDrive
  2761 ;;		_readAvgDistance
  2762 ;;		_robot_read
  2763 ;;		_UpdateDisplay
  2764 ;;		_abs
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           psect	text973
  2770                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  2771                           	line	156
  2772                           	global	__size_of_robotFollow
  2773  017A                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  2774                           	
  2775  0449                     _robotFollow:	
  2776                           	opt	stack 0
  2777                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2778                           	line	157
  2779                           	
  2780  0449                     l11210:	
  2781                           ;robot.c: 157: distTravelled = 0;
  2782  0449  1683               	bsf	status, 5	;RP0=1, select bank1
  2783  044A  1303               	bcf	status, 6	;RP1=0, select bank1
  2784  044B  01BC               	clrf	(_distTravelled)^080h
  2785  044C  01BD               	clrf	(_distTravelled+1)^080h
  2786                           	line	159
  2787                           	
  2788  044D                     l11212:	
  2789                           ;robot.c: 158: int temp1;
  2790                           ;robot.c: 159: RobotDrive(speed, 0x7FFF);
  2791  044D  1283               	bcf	status, 5	;RP0=0, select bank0
  2792  044E  1303               	bcf	status, 6	;RP1=0, select bank0
  2793  044F  085C               	movf	(robotFollow@speed+1),w
  2794  0450  01A3               	clrf	(?_RobotDrive+1)
  2795  0451  07A3               	addwf	(?_RobotDrive+1)
  2796  0452  085B               	movf	(robotFollow@speed),w
  2797  0453  01A2               	clrf	(?_RobotDrive)
  2798  0454  07A2               	addwf	(?_RobotDrive)
  2799                           
  2800  0455  30FF               	movlw	low(07FFFh)
  2801  0456  00A4               	movwf	0+(?_RobotDrive)+02h
  2802  0457  307F               	movlw	high(07FFFh)
  2803  0458  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2804  0459  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  2805                           	line	160
  2806                           	
  2807  045E                     l11214:	
  2808                           ;robot.c: 160: ROBOTerror = 0;
  2809  045E  1683               	bsf	status, 5	;RP0=1, select bank1
  2810  045F  1303               	bcf	status, 6	;RP1=0, select bank1
  2811  0460  01CF               	clrf	(_ROBOTerror)^080h
  2812                           	line	163
  2813                           ;robot.c: 163: while (abs(distTravelled) < abs(distance))
  2814  0461  2D7E               	goto	l11264
  2815                           	
  2816  0462                     l6055:	
  2817                           	line	166
  2818                           	
  2819  0462                     l11216:	
  2820                           ;robot.c: 164: {
  2821                           ;robot.c: 166: readAvgDistance();
  2822  0462  120A  158A  2379   	fcall	_readAvgDistance
              120A  118A         
  2823                           	line	167
  2824                           	
  2825  0467                     l11218:	
  2826                           ;robot.c: 167: if (adcVal > (AdcTarget + 5) && adcVal < (AdcTarget + 30))
  2827  0467  1283               	bcf	status, 5	;RP0=0, select bank0
  2828  0468  1303               	bcf	status, 6	;RP1=0, select bank0
  2829  0469  085D               	movf	(robotFollow@AdcTarget),w
  2830  046A  3E05               	addlw	low(05h)
  2831  046B  00DF               	movwf	(??_robotFollow+0)+0
  2832  046C  085E               	movf	(robotFollow@AdcTarget+1),w
  2833  046D  1803               	skipnc
  2834  046E  3E01               	addlw	1
  2835  046F  3E00               	addlw	high(05h)
  2836  0470  00E0               	movwf	1+(??_robotFollow+0)+0
  2837  0471  086D               	movf	(_adcVal+1),w	;volatile
  2838  0472  0260               	subwf	1+(??_robotFollow+0)+0,w
  2839  0473  1D03               	skipz
  2840  0474  2C77               	goto	u4775
  2841  0475  086C               	movf	(_adcVal),w	;volatile
  2842  0476  025F               	subwf	0+(??_robotFollow+0)+0,w
  2843  0477                     u4775:
  2844  0477  1803               	skipnc
  2845  0478  2C7A               	goto	u4771
  2846  0479  2C7B               	goto	u4770
  2847  047A                     u4771:
  2848  047A  2C9D               	goto	l11224
  2849  047B                     u4770:
  2850                           	
  2851  047B                     l11220:	
  2852  047B  085D               	movf	(robotFollow@AdcTarget),w
  2853  047C  3E1E               	addlw	low(01Eh)
  2854  047D  00DF               	movwf	(??_robotFollow+0)+0
  2855  047E  085E               	movf	(robotFollow@AdcTarget+1),w
  2856  047F  1803               	skipnc
  2857  0480  3E01               	addlw	1
  2858  0481  3E00               	addlw	high(01Eh)
  2859  0482  00E0               	movwf	1+(??_robotFollow+0)+0
  2860  0483  0860               	movf	1+(??_robotFollow+0)+0,w
  2861  0484  026D               	subwf	(_adcVal+1),w	;volatile
  2862  0485  1D03               	skipz
  2863  0486  2C89               	goto	u4785
  2864  0487  085F               	movf	0+(??_robotFollow+0)+0,w
  2865  0488  026C               	subwf	(_adcVal),w	;volatile
  2866  0489                     u4785:
  2867  0489  1803               	skipnc
  2868  048A  2C8C               	goto	u4781
  2869  048B  2C8D               	goto	u4780
  2870  048C                     u4781:
  2871  048C  2C9D               	goto	l11224
  2872  048D                     u4780:
  2873                           	line	169
  2874                           	
  2875  048D                     l11222:	
  2876                           ;robot.c: 168: {
  2877                           ;robot.c: 169: RobotDrive(speed, 1800);
  2878  048D  085C               	movf	(robotFollow@speed+1),w
  2879  048E  01A3               	clrf	(?_RobotDrive+1)
  2880  048F  07A3               	addwf	(?_RobotDrive+1)
  2881  0490  085B               	movf	(robotFollow@speed),w
  2882  0491  01A2               	clrf	(?_RobotDrive)
  2883  0492  07A2               	addwf	(?_RobotDrive)
  2884                           
  2885  0493  3008               	movlw	low(0708h)
  2886  0494  00A4               	movwf	0+(?_RobotDrive)+02h
  2887  0495  3007               	movlw	high(0708h)
  2888  0496  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2889  0497  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  2890                           	line	170
  2891                           ;robot.c: 170: }
  2892  049C  2D1D               	goto	l6057
  2893                           	line	171
  2894                           	
  2895  049D                     l6056:	
  2896                           	
  2897  049D                     l11224:	
  2898                           ;robot.c: 171: else if (adcVal < (AdcTarget - 5) && adcVal > (AdcTarget - 30))
  2899  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  2900  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  2901  049F  085D               	movf	(robotFollow@AdcTarget),w
  2902  04A0  3EFB               	addlw	low(0FFFBh)
  2903  04A1  00DF               	movwf	(??_robotFollow+0)+0
  2904  04A2  085E               	movf	(robotFollow@AdcTarget+1),w
  2905  04A3  1803               	skipnc
  2906  04A4  3E01               	addlw	1
  2907  04A5  3EFF               	addlw	high(0FFFBh)
  2908  04A6  00E0               	movwf	1+(??_robotFollow+0)+0
  2909  04A7  0860               	movf	1+(??_robotFollow+0)+0,w
  2910  04A8  026D               	subwf	(_adcVal+1),w	;volatile
  2911  04A9  1D03               	skipz
  2912  04AA  2CAD               	goto	u4795
  2913  04AB  085F               	movf	0+(??_robotFollow+0)+0,w
  2914  04AC  026C               	subwf	(_adcVal),w	;volatile
  2915  04AD                     u4795:
  2916  04AD  1803               	skipnc
  2917  04AE  2CB0               	goto	u4791
  2918  04AF  2CB1               	goto	u4790
  2919  04B0                     u4791:
  2920  04B0  2CD3               	goto	l11230
  2921  04B1                     u4790:
  2922                           	
  2923  04B1                     l11226:	
  2924  04B1  085D               	movf	(robotFollow@AdcTarget),w
  2925  04B2  3EE2               	addlw	low(0FFE2h)
  2926  04B3  00DF               	movwf	(??_robotFollow+0)+0
  2927  04B4  085E               	movf	(robotFollow@AdcTarget+1),w
  2928  04B5  1803               	skipnc
  2929  04B6  3E01               	addlw	1
  2930  04B7  3EFF               	addlw	high(0FFE2h)
  2931  04B8  00E0               	movwf	1+(??_robotFollow+0)+0
  2932  04B9  086D               	movf	(_adcVal+1),w	;volatile
  2933  04BA  0260               	subwf	1+(??_robotFollow+0)+0,w
  2934  04BB  1D03               	skipz
  2935  04BC  2CBF               	goto	u4805
  2936  04BD  086C               	movf	(_adcVal),w	;volatile
  2937  04BE  025F               	subwf	0+(??_robotFollow+0)+0,w
  2938  04BF                     u4805:
  2939  04BF  1803               	skipnc
  2940  04C0  2CC2               	goto	u4801
  2941  04C1  2CC3               	goto	u4800
  2942  04C2                     u4801:
  2943  04C2  2CD3               	goto	l11230
  2944  04C3                     u4800:
  2945                           	line	173
  2946                           	
  2947  04C3                     l11228:	
  2948                           ;robot.c: 172: {
  2949                           ;robot.c: 173: RobotDrive(speed, -1800);
  2950  04C3  085C               	movf	(robotFollow@speed+1),w
  2951  04C4  01A3               	clrf	(?_RobotDrive+1)
  2952  04C5  07A3               	addwf	(?_RobotDrive+1)
  2953  04C6  085B               	movf	(robotFollow@speed),w
  2954  04C7  01A2               	clrf	(?_RobotDrive)
  2955  04C8  07A2               	addwf	(?_RobotDrive)
  2956                           
  2957  04C9  30F8               	movlw	low(-1800)
  2958  04CA  00A4               	movwf	0+(?_RobotDrive)+02h
  2959  04CB  30F8               	movlw	high(-1800)
  2960  04CC  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2961  04CD  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  2962                           	line	174
  2963                           ;robot.c: 174: }
  2964  04D2  2D1D               	goto	l6057
  2965                           	line	175
  2966                           	
  2967  04D3                     l6058:	
  2968                           	
  2969  04D3                     l11230:	
  2970                           ;robot.c: 175: else if (adcVal <= (AdcTarget - 30))
  2971  04D3  1283               	bcf	status, 5	;RP0=0, select bank0
  2972  04D4  1303               	bcf	status, 6	;RP1=0, select bank0
  2973  04D5  085D               	movf	(robotFollow@AdcTarget),w
  2974  04D6  3EE2               	addlw	low(0FFE2h)
  2975  04D7  00DF               	movwf	(??_robotFollow+0)+0
  2976  04D8  085E               	movf	(robotFollow@AdcTarget+1),w
  2977  04D9  1803               	skipnc
  2978  04DA  3E01               	addlw	1
  2979  04DB  3EFF               	addlw	high(0FFE2h)
  2980  04DC  00E0               	movwf	1+(??_robotFollow+0)+0
  2981  04DD  086D               	movf	(_adcVal+1),w	;volatile
  2982  04DE  0260               	subwf	1+(??_robotFollow+0)+0,w
  2983  04DF  1D03               	skipz
  2984  04E0  2CE3               	goto	u4815
  2985  04E1  086C               	movf	(_adcVal),w	;volatile
  2986  04E2  025F               	subwf	0+(??_robotFollow+0)+0,w
  2987  04E3                     u4815:
  2988  04E3  1C03               	skipc
  2989  04E4  2CE6               	goto	u4811
  2990  04E5  2CE7               	goto	u4810
  2991  04E6                     u4811:
  2992  04E6  2CEF               	goto	l11236
  2993  04E7                     u4810:
  2994                           	line	177
  2995                           	
  2996  04E7                     l11232:	
  2997                           ;robot.c: 176: {
  2998                           ;robot.c: 177: ROBOTerror = 10;
  2999  04E7  300A               	movlw	(0Ah)
  3000  04E8  00DF               	movwf	(??_robotFollow+0)+0
  3001  04E9  085F               	movf	(??_robotFollow+0)+0,w
  3002  04EA  1683               	bsf	status, 5	;RP0=1, select bank1
  3003  04EB  1303               	bcf	status, 6	;RP1=0, select bank1
  3004  04EC  00CF               	movwf	(_ROBOTerror)^080h
  3005                           	line	178
  3006                           ;robot.c: 178: break;
  3007  04ED  2DB3               	goto	l11266
  3008                           	line	179
  3009                           	
  3010  04EE                     l11234:	
  3011                           ;robot.c: 179: }
  3012  04EE  2D1D               	goto	l6057
  3013                           	line	180
  3014                           	
  3015  04EF                     l6060:	
  3016                           	
  3017  04EF                     l11236:	
  3018                           ;robot.c: 180: else if (adcVal >= (AdcTarget + 30))
  3019  04EF  1283               	bcf	status, 5	;RP0=0, select bank0
  3020  04F0  085D               	movf	(robotFollow@AdcTarget),w
  3021  04F1  3E1E               	addlw	low(01Eh)
  3022  04F2  00DF               	movwf	(??_robotFollow+0)+0
  3023  04F3  085E               	movf	(robotFollow@AdcTarget+1),w
  3024  04F4  1803               	skipnc
  3025  04F5  3E01               	addlw	1
  3026  04F6  3E00               	addlw	high(01Eh)
  3027  04F7  00E0               	movwf	1+(??_robotFollow+0)+0
  3028  04F8  0860               	movf	1+(??_robotFollow+0)+0,w
  3029  04F9  026D               	subwf	(_adcVal+1),w	;volatile
  3030  04FA  1D03               	skipz
  3031  04FB  2CFE               	goto	u4825
  3032  04FC  085F               	movf	0+(??_robotFollow+0)+0,w
  3033  04FD  026C               	subwf	(_adcVal),w	;volatile
  3034  04FE                     u4825:
  3035  04FE  1C03               	skipc
  3036  04FF  2D01               	goto	u4821
  3037  0500  2D02               	goto	u4820
  3038  0501                     u4821:
  3039  0501  2D0A               	goto	l11242
  3040  0502                     u4820:
  3041                           	line	182
  3042                           	
  3043  0502                     l11238:	
  3044                           ;robot.c: 181: {
  3045                           ;robot.c: 182: ROBOTerror = 11;
  3046  0502  300B               	movlw	(0Bh)
  3047  0503  00DF               	movwf	(??_robotFollow+0)+0
  3048  0504  085F               	movf	(??_robotFollow+0)+0,w
  3049  0505  1683               	bsf	status, 5	;RP0=1, select bank1
  3050  0506  1303               	bcf	status, 6	;RP1=0, select bank1
  3051  0507  00CF               	movwf	(_ROBOTerror)^080h
  3052                           	line	183
  3053                           ;robot.c: 183: break;
  3054  0508  2DB3               	goto	l11266
  3055                           	line	184
  3056                           	
  3057  0509                     l11240:	
  3058                           ;robot.c: 184: }
  3059  0509  2D1D               	goto	l6057
  3060                           	line	185
  3061                           	
  3062  050A                     l6063:	
  3063                           	line	187
  3064                           	
  3065  050A                     l11242:	
  3066                           ;robot.c: 185: else
  3067                           ;robot.c: 186: {
  3068                           ;robot.c: 187: RobotDrive(speed, 0x7FFF);
  3069  050A  1283               	bcf	status, 5	;RP0=0, select bank0
  3070  050B  085C               	movf	(robotFollow@speed+1),w
  3071  050C  01A3               	clrf	(?_RobotDrive+1)
  3072  050D  07A3               	addwf	(?_RobotDrive+1)
  3073  050E  085B               	movf	(robotFollow@speed),w
  3074  050F  01A2               	clrf	(?_RobotDrive)
  3075  0510  07A2               	addwf	(?_RobotDrive)
  3076                           
  3077  0511  30FF               	movlw	low(07FFFh)
  3078  0512  00A4               	movwf	0+(?_RobotDrive)+02h
  3079  0513  307F               	movlw	high(07FFFh)
  3080  0514  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3081  0515  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  3082  051A  2D1D               	goto	l6057
  3083                           	line	188
  3084                           	
  3085  051B                     l6064:	
  3086  051B  2D1D               	goto	l6057
  3087                           	
  3088  051C                     l6062:	
  3089  051C  2D1D               	goto	l6057
  3090                           	
  3091  051D                     l6059:	
  3092                           	
  3093  051D                     l6057:	
  3094                           	line	189
  3095                           ;robot.c: 188: }
  3096                           ;robot.c: 189: robot_read(0);
  3097  051D  3000               	movlw	(0)
  3098  051E  120A  158A  26E2   	fcall	_robot_read
              120A  118A         
  3099                           	line	190
  3100                           	
  3101  0523                     l11244:	
  3102                           ;robot.c: 190: if (BumpSensors || VwallSensor)
  3103  0523  1283               	bcf	status, 5	;RP0=0, select bank0
  3104  0524  1303               	bcf	status, 6	;RP1=0, select bank0
  3105  0525  08EE               	movf	(_BumpSensors),f
  3106  0526  1D03               	skipz	;volatile
  3107  0527  2D29               	goto	u4831
  3108  0528  2D2A               	goto	u4830
  3109  0529                     u4831:
  3110  0529  2D31               	goto	l11248
  3111  052A                     u4830:
  3112                           	
  3113  052A                     l11246:	
  3114  052A  1683               	bsf	status, 5	;RP0=1, select bank1
  3115  052B  1303               	bcf	status, 6	;RP1=0, select bank1
  3116  052C  0852               	movf	(_VwallSensor)^080h,w	;volatile
  3117  052D  1D03               	skipz
  3118  052E  2D30               	goto	u4840
  3119  052F  2D37               	goto	l11250
  3120  0530                     u4840:
  3121  0530  2D31               	goto	l11248
  3122                           	
  3123  0531                     l6067:	
  3124                           	line	192
  3125                           	
  3126  0531                     l11248:	
  3127                           ;robot.c: 191: {
  3128                           ;robot.c: 192: ROBOTerror = 1;
  3129  0531  1683               	bsf	status, 5	;RP0=1, select bank1
  3130  0532  1303               	bcf	status, 6	;RP1=0, select bank1
  3131  0533  01CF               	clrf	(_ROBOTerror)^080h
  3132  0534  1403               	bsf	status,0
  3133  0535  0DCF               	rlf	(_ROBOTerror)^080h,f
  3134                           	line	193
  3135                           ;robot.c: 193: break;
  3136  0536  2DB3               	goto	l11266
  3137                           	line	194
  3138                           	
  3139  0537                     l6065:	
  3140                           	line	195
  3141                           	
  3142  0537                     l11250:	
  3143                           ;robot.c: 194: }
  3144                           ;robot.c: 195: temp1 = DistHighByte;
  3145  0537  084B               	movf	(_DistHighByte)^080h,w	;volatile
  3146  0538  1283               	bcf	status, 5	;RP0=0, select bank0
  3147  0539  1303               	bcf	status, 6	;RP1=0, select bank0
  3148  053A  00DF               	movwf	(??_robotFollow+0)+0
  3149  053B  01E0               	clrf	(??_robotFollow+0)+0+1
  3150  053C  085F               	movf	0+(??_robotFollow+0)+0,w
  3151  053D  00E2               	movwf	(robotFollow@temp1)
  3152  053E  0860               	movf	1+(??_robotFollow+0)+0,w
  3153  053F  00E3               	movwf	(robotFollow@temp1+1)
  3154                           	line	196
  3155                           	
  3156  0540                     l11252:	
  3157                           ;robot.c: 196: temp1 = temp1 << 8;
  3158  0540  0863               	movf	(robotFollow@temp1+1),w
  3159  0541  00E0               	movwf	(??_robotFollow+0)+0+1
  3160  0542  0862               	movf	(robotFollow@temp1),w
  3161  0543  00DF               	movwf	(??_robotFollow+0)+0
  3162  0544  085F               	movf	(??_robotFollow+0)+0,w
  3163  0545  00E0               	movwf	(??_robotFollow+0)+1
  3164  0546  01DF               	clrf	(??_robotFollow+0)+0
  3165  0547  085F               	movf	0+(??_robotFollow+0)+0,w
  3166  0548  00E2               	movwf	(robotFollow@temp1)
  3167  0549  0860               	movf	1+(??_robotFollow+0)+0,w
  3168  054A  00E3               	movwf	(robotFollow@temp1+1)
  3169                           	line	197
  3170                           	
  3171  054B                     l11254:	
  3172                           ;robot.c: 197: temp1 += DistLowByte;
  3173  054B  1683               	bsf	status, 5	;RP0=1, select bank1
  3174  054C  1303               	bcf	status, 6	;RP1=0, select bank1
  3175  054D  084C               	movf	(_DistLowByte)^080h,w	;volatile
  3176  054E  1283               	bcf	status, 5	;RP0=0, select bank0
  3177  054F  1303               	bcf	status, 6	;RP1=0, select bank0
  3178  0550  00DF               	movwf	(??_robotFollow+0)+0
  3179  0551  01E0               	clrf	(??_robotFollow+0)+0+1
  3180  0552  085F               	movf	0+(??_robotFollow+0)+0,w
  3181  0553  07E2               	addwf	(robotFollow@temp1),f
  3182  0554  1803               	skipnc
  3183  0555  0AE3               	incf	(robotFollow@temp1+1),f
  3184  0556  0860               	movf	1+(??_robotFollow+0)+0,w
  3185  0557  07E3               	addwf	(robotFollow@temp1+1),f
  3186                           	line	198
  3187                           	
  3188  0558                     l11256:	
  3189                           ;robot.c: 198: distTravelled += temp1;
  3190  0558  0862               	movf	(robotFollow@temp1),w
  3191  0559  1683               	bsf	status, 5	;RP0=1, select bank1
  3192  055A  1303               	bcf	status, 6	;RP1=0, select bank1
  3193  055B  07BC               	addwf	(_distTravelled)^080h,f
  3194  055C  1803               	skipnc
  3195  055D  0ABD               	incf	(_distTravelled+1)^080h,f
  3196  055E  1283               	bcf	status, 5	;RP0=0, select bank0
  3197  055F  1303               	bcf	status, 6	;RP1=0, select bank0
  3198  0560  0863               	movf	(robotFollow@temp1+1),w
  3199  0561  1683               	bsf	status, 5	;RP0=1, select bank1
  3200  0562  1303               	bcf	status, 6	;RP1=0, select bank1
  3201  0563  07BD               	addwf	(_distTravelled+1)^080h,f
  3202                           	line	199
  3203                           	
  3204  0564                     l11258:	
  3205                           ;robot.c: 199: TotalDistTravelled += temp1;
  3206  0564  1283               	bcf	status, 5	;RP0=0, select bank0
  3207  0565  1303               	bcf	status, 6	;RP1=0, select bank0
  3208  0566  0862               	movf	(robotFollow@temp1),w
  3209  0567  1683               	bsf	status, 5	;RP0=1, select bank1
  3210  0568  1303               	bcf	status, 6	;RP1=0, select bank1
  3211  0569  07B8               	addwf	(_TotalDistTravelled)^080h,f
  3212  056A  1803               	skipnc
  3213  056B  0AB9               	incf	(_TotalDistTravelled+1)^080h,f
  3214  056C  1283               	bcf	status, 5	;RP0=0, select bank0
  3215  056D  1303               	bcf	status, 6	;RP1=0, select bank0
  3216  056E  0863               	movf	(robotFollow@temp1+1),w
  3217  056F  1683               	bsf	status, 5	;RP0=1, select bank1
  3218  0570  1303               	bcf	status, 6	;RP1=0, select bank1
  3219  0571  07B9               	addwf	(_TotalDistTravelled+1)^080h,f
  3220                           	line	200
  3221                           	
  3222  0572                     l11260:	
  3223                           ;robot.c: 200: Disp2 = distTravelled;
  3224  0572  083D               	movf	(_distTravelled+1)^080h,w
  3225  0573  01B3               	clrf	(_Disp2+1)^080h
  3226  0574  07B3               	addwf	(_Disp2+1)^080h
  3227  0575  083C               	movf	(_distTravelled)^080h,w
  3228  0576  01B2               	clrf	(_Disp2)^080h
  3229  0577  07B2               	addwf	(_Disp2)^080h
  3230                           
  3231                           	line	201
  3232                           	
  3233  0578                     l11262:	
  3234                           ;robot.c: 201: UpdateDisplay();
  3235  0578  120A  118A  25C3   	fcall	_UpdateDisplay
              120A  118A         
  3236  057D  2D7E               	goto	l11264
  3237                           	line	207
  3238                           	
  3239  057E                     l6054:	
  3240                           	line	163
  3241                           	
  3242  057E                     l11264:	
  3243  057E  1683               	bsf	status, 5	;RP0=1, select bank1
  3244  057F  1303               	bcf	status, 6	;RP1=0, select bank1
  3245  0580  083D               	movf	(_distTravelled+1)^080h,w
  3246  0581  1283               	bcf	status, 5	;RP0=0, select bank0
  3247  0582  1303               	bcf	status, 6	;RP1=0, select bank0
  3248  0583  01A7               	clrf	(?_abs+1)
  3249  0584  07A7               	addwf	(?_abs+1)
  3250  0585  1683               	bsf	status, 5	;RP0=1, select bank1
  3251  0586  1303               	bcf	status, 6	;RP1=0, select bank1
  3252  0587  083C               	movf	(_distTravelled)^080h,w
  3253  0588  1283               	bcf	status, 5	;RP0=0, select bank0
  3254  0589  1303               	bcf	status, 6	;RP1=0, select bank0
  3255  058A  01A6               	clrf	(?_abs)
  3256  058B  07A6               	addwf	(?_abs)
  3257                           
  3258  058C  160A  118A  2713   	fcall	_abs
              120A  118A         
  3259  0591  1283               	bcf	status, 5	;RP0=0, select bank0
  3260  0592  1303               	bcf	status, 6	;RP1=0, select bank0
  3261  0593  0826               	movf	(0+?_abs),w
  3262  0594  00DF               	movwf	(??_robotFollow+0)+0
  3263  0595  0827               	movf	(1+?_abs),w
  3264  0596  00E0               	movwf	((??_robotFollow+0)+0+1)
  3265  0597  085A               	movf	(robotFollow@distance+1),w
  3266  0598  01A7               	clrf	(?_abs+1)
  3267  0599  07A7               	addwf	(?_abs+1)
  3268  059A  0859               	movf	(robotFollow@distance),w
  3269  059B  01A6               	clrf	(?_abs)
  3270  059C  07A6               	addwf	(?_abs)
  3271                           
  3272  059D  160A  118A  2713   	fcall	_abs
              120A  118A         
  3273  05A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3274  05A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3275  05A4  0860               	movf	1+(??_robotFollow+0)+0,w
  3276  05A5  3A80               	xorlw	80h
  3277  05A6  00E1               	movwf	(??_robotFollow+2)+0
  3278  05A7  0827               	movf	(1+(?_abs)),w
  3279  05A8  3A80               	xorlw	80h
  3280  05A9  0261               	subwf	(??_robotFollow+2)+0,w
  3281  05AA  1D03               	skipz
  3282  05AB  2DAE               	goto	u4855
  3283  05AC  0826               	movf	(0+(?_abs)),w
  3284  05AD  025F               	subwf	0+(??_robotFollow+0)+0,w
  3285  05AE                     u4855:
  3286                           
  3287  05AE  1C03               	skipc
  3288  05AF  2DB1               	goto	u4851
  3289  05B0  2DB2               	goto	u4850
  3290  05B1                     u4851:
  3291  05B1  2C62               	goto	l11216
  3292  05B2                     u4850:
  3293  05B2  2DB3               	goto	l11266
  3294                           	
  3295  05B3                     l6061:	
  3296                           	line	209
  3297                           	
  3298  05B3                     l11266:	
  3299                           ;robot.c: 207: }
  3300                           ;robot.c: 209: RobotDrive(0, 0x7FFF);
  3301  05B3  3000               	movlw	low(0)
  3302  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  3303  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  3304  05B6  00A2               	movwf	(?_RobotDrive)
  3305  05B7  3000               	movlw	high(0)
  3306  05B8  00A3               	movwf	((?_RobotDrive))+1
  3307  05B9  30FF               	movlw	low(07FFFh)
  3308  05BA  00A4               	movwf	0+(?_RobotDrive)+02h
  3309  05BB  307F               	movlw	high(07FFFh)
  3310  05BC  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3311  05BD  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  3312                           	line	211
  3313                           	
  3314  05C2                     l6068:	
  3315  05C2  0008               	return
  3316                           	opt stack 0
  3317                           GLOBAL	__end_of_robotFollow
  3318  05C3                     	__end_of_robotFollow:
  3319 ;; =============== function _robotFollow ends ============
  3320                           
  3321                           	signat	_robotFollow,12408
  3322                           	global	_robotMoveSpeed
  3323                           psect	text974,local,class=CODE,delta=2
  3324                           global __ptext974
  3325  0722                     __ptext974:
  3326                           
  3327 ;; *************** function _robotMoveSpeed *****************
  3328 ;; Defined at:
  3329 ;;		line 218 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  distance        2   57[BANK0 ] int 
  3332 ;;  speed           2   59[BANK0 ] int 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  temp1           2   64[BANK0 ] int 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;		None               void
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       4       0       0       0
  3345 ;;      Locals:         0       2       0       0       0
  3346 ;;      Temps:          0       3       0       0       0
  3347 ;;      Totals:         0       9       0       0       0
  3348 ;;Total ram usage:        9 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    6
  3351 ;; This function calls:
  3352 ;;		_RobotDrive
  3353 ;;		_robot_read
  3354 ;;		_UpdateDisplay
  3355 ;;		_abs
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           psect	text974
  3361                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3362                           	line	218
  3363                           	global	__size_of_robotMoveSpeed
  3364  00BC                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3365                           	
  3366  0722                     _robotMoveSpeed:	
  3367                           	opt	stack 1
  3368                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3369                           	line	219
  3370                           	
  3371  0722                     l11180:	
  3372                           ;robot.c: 219: distTravelled = 0;
  3373  0722  1683               	bsf	status, 5	;RP0=1, select bank1
  3374  0723  1303               	bcf	status, 6	;RP1=0, select bank1
  3375  0724  01BC               	clrf	(_distTravelled)^080h
  3376  0725  01BD               	clrf	(_distTravelled+1)^080h
  3377                           	line	221
  3378                           	
  3379  0726                     l11182:	
  3380                           ;robot.c: 220: int temp1;
  3381                           ;robot.c: 221: RobotDrive(speed, 0x7FFF);
  3382  0726  1283               	bcf	status, 5	;RP0=0, select bank0
  3383  0727  1303               	bcf	status, 6	;RP1=0, select bank0
  3384  0728  085C               	movf	(robotMoveSpeed@speed+1),w
  3385  0729  01A3               	clrf	(?_RobotDrive+1)
  3386  072A  07A3               	addwf	(?_RobotDrive+1)
  3387  072B  085B               	movf	(robotMoveSpeed@speed),w
  3388  072C  01A2               	clrf	(?_RobotDrive)
  3389  072D  07A2               	addwf	(?_RobotDrive)
  3390                           
  3391  072E  30FF               	movlw	low(07FFFh)
  3392  072F  00A4               	movwf	0+(?_RobotDrive)+02h
  3393  0730  307F               	movlw	high(07FFFh)
  3394  0731  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3395  0732  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  3396                           	line	224
  3397                           ;robot.c: 224: while (abs(distTravelled) < abs(distance))
  3398  0737  2F99               	goto	l11206
  3399                           	
  3400  0738                     l6072:	
  3401                           	line	226
  3402                           	
  3403  0738                     l11184:	
  3404                           ;robot.c: 225: {
  3405                           ;robot.c: 226: robot_read(0);
  3406  0738  3000               	movlw	(0)
  3407  0739  120A  158A  26E2   	fcall	_robot_read
              120A  118A         
  3408                           	line	227
  3409                           	
  3410  073E                     l11186:	
  3411                           ;robot.c: 227: if (BumpSensors || VwallSensor)
  3412  073E  1283               	bcf	status, 5	;RP0=0, select bank0
  3413  073F  1303               	bcf	status, 6	;RP1=0, select bank0
  3414  0740  08EE               	movf	(_BumpSensors),f
  3415  0741  1D03               	skipz	;volatile
  3416  0742  2F44               	goto	u4741
  3417  0743  2F45               	goto	u4740
  3418  0744                     u4741:
  3419  0744  2F4C               	goto	l11190
  3420  0745                     u4740:
  3421                           	
  3422  0745                     l11188:	
  3423  0745  1683               	bsf	status, 5	;RP0=1, select bank1
  3424  0746  1303               	bcf	status, 6	;RP1=0, select bank1
  3425  0747  0852               	movf	(_VwallSensor)^080h,w	;volatile
  3426  0748  1D03               	skipz
  3427  0749  2F4B               	goto	u4750
  3428  074A  2F52               	goto	l11192
  3429  074B                     u4750:
  3430  074B  2F4C               	goto	l11190
  3431                           	
  3432  074C                     l6075:	
  3433                           	line	229
  3434                           	
  3435  074C                     l11190:	
  3436                           ;robot.c: 228: {
  3437                           ;robot.c: 229: ROBOTerror = 1;
  3438  074C  1683               	bsf	status, 5	;RP0=1, select bank1
  3439  074D  1303               	bcf	status, 6	;RP1=0, select bank1
  3440  074E  01CF               	clrf	(_ROBOTerror)^080h
  3441  074F  1403               	bsf	status,0
  3442  0750  0DCF               	rlf	(_ROBOTerror)^080h,f
  3443                           	line	230
  3444                           ;robot.c: 230: break;
  3445  0751  2FCE               	goto	l11208
  3446                           	line	231
  3447                           	
  3448  0752                     l6073:	
  3449                           	line	232
  3450                           	
  3451  0752                     l11192:	
  3452                           ;robot.c: 231: }
  3453                           ;robot.c: 232: temp1 = DistHighByte;
  3454  0752  084B               	movf	(_DistHighByte)^080h,w	;volatile
  3455  0753  1283               	bcf	status, 5	;RP0=0, select bank0
  3456  0754  1303               	bcf	status, 6	;RP1=0, select bank0
  3457  0755  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3458  0756  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3459  0757  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3460  0758  00E0               	movwf	(robotMoveSpeed@temp1)
  3461  0759  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3462  075A  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3463                           	line	233
  3464                           	
  3465  075B                     l11194:	
  3466                           ;robot.c: 233: temp1 = temp1 << 8;
  3467  075B  0861               	movf	(robotMoveSpeed@temp1+1),w
  3468  075C  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  3469  075D  0860               	movf	(robotMoveSpeed@temp1),w
  3470  075E  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3471  075F  085D               	movf	(??_robotMoveSpeed+0)+0,w
  3472  0760  00DE               	movwf	(??_robotMoveSpeed+0)+1
  3473  0761  01DD               	clrf	(??_robotMoveSpeed+0)+0
  3474  0762  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3475  0763  00E0               	movwf	(robotMoveSpeed@temp1)
  3476  0764  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3477  0765  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3478                           	line	234
  3479                           	
  3480  0766                     l11196:	
  3481                           ;robot.c: 234: temp1 += DistLowByte;
  3482  0766  1683               	bsf	status, 5	;RP0=1, select bank1
  3483  0767  1303               	bcf	status, 6	;RP1=0, select bank1
  3484  0768  084C               	movf	(_DistLowByte)^080h,w	;volatile
  3485  0769  1283               	bcf	status, 5	;RP0=0, select bank0
  3486  076A  1303               	bcf	status, 6	;RP1=0, select bank0
  3487  076B  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3488  076C  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3489  076D  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3490  076E  07E0               	addwf	(robotMoveSpeed@temp1),f
  3491  076F  1803               	skipnc
  3492  0770  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  3493  0771  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3494  0772  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  3495                           	line	235
  3496                           	
  3497  0773                     l11198:	
  3498                           ;robot.c: 235: distTravelled += temp1;
  3499  0773  0860               	movf	(robotMoveSpeed@temp1),w
  3500  0774  1683               	bsf	status, 5	;RP0=1, select bank1
  3501  0775  1303               	bcf	status, 6	;RP1=0, select bank1
  3502  0776  07BC               	addwf	(_distTravelled)^080h,f
  3503  0777  1803               	skipnc
  3504  0778  0ABD               	incf	(_distTravelled+1)^080h,f
  3505  0779  1283               	bcf	status, 5	;RP0=0, select bank0
  3506  077A  1303               	bcf	status, 6	;RP1=0, select bank0
  3507  077B  0861               	movf	(robotMoveSpeed@temp1+1),w
  3508  077C  1683               	bsf	status, 5	;RP0=1, select bank1
  3509  077D  1303               	bcf	status, 6	;RP1=0, select bank1
  3510  077E  07BD               	addwf	(_distTravelled+1)^080h,f
  3511                           	line	236
  3512                           	
  3513  077F                     l11200:	
  3514                           ;robot.c: 236: TotalDistTravelled += temp1;
  3515  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  3516  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  3517  0781  0860               	movf	(robotMoveSpeed@temp1),w
  3518  0782  1683               	bsf	status, 5	;RP0=1, select bank1
  3519  0783  1303               	bcf	status, 6	;RP1=0, select bank1
  3520  0784  07B8               	addwf	(_TotalDistTravelled)^080h,f
  3521  0785  1803               	skipnc
  3522  0786  0AB9               	incf	(_TotalDistTravelled+1)^080h,f
  3523  0787  1283               	bcf	status, 5	;RP0=0, select bank0
  3524  0788  1303               	bcf	status, 6	;RP1=0, select bank0
  3525  0789  0861               	movf	(robotMoveSpeed@temp1+1),w
  3526  078A  1683               	bsf	status, 5	;RP0=1, select bank1
  3527  078B  1303               	bcf	status, 6	;RP1=0, select bank1
  3528  078C  07B9               	addwf	(_TotalDistTravelled+1)^080h,f
  3529                           	line	237
  3530                           	
  3531  078D                     l11202:	
  3532                           ;robot.c: 237: Disp2 = distTravelled;
  3533  078D  083D               	movf	(_distTravelled+1)^080h,w
  3534  078E  01B3               	clrf	(_Disp2+1)^080h
  3535  078F  07B3               	addwf	(_Disp2+1)^080h
  3536  0790  083C               	movf	(_distTravelled)^080h,w
  3537  0791  01B2               	clrf	(_Disp2)^080h
  3538  0792  07B2               	addwf	(_Disp2)^080h
  3539                           
  3540                           	line	238
  3541                           	
  3542  0793                     l11204:	
  3543                           ;robot.c: 238: UpdateDisplay();
  3544  0793  120A  118A  25C3   	fcall	_UpdateDisplay
              120A  118A         
  3545  0798  2F99               	goto	l11206
  3546                           	line	244
  3547                           	
  3548  0799                     l6071:	
  3549                           	line	224
  3550                           	
  3551  0799                     l11206:	
  3552  0799  1683               	bsf	status, 5	;RP0=1, select bank1
  3553  079A  1303               	bcf	status, 6	;RP1=0, select bank1
  3554  079B  083D               	movf	(_distTravelled+1)^080h,w
  3555  079C  1283               	bcf	status, 5	;RP0=0, select bank0
  3556  079D  1303               	bcf	status, 6	;RP1=0, select bank0
  3557  079E  01A7               	clrf	(?_abs+1)
  3558  079F  07A7               	addwf	(?_abs+1)
  3559  07A0  1683               	bsf	status, 5	;RP0=1, select bank1
  3560  07A1  1303               	bcf	status, 6	;RP1=0, select bank1
  3561  07A2  083C               	movf	(_distTravelled)^080h,w
  3562  07A3  1283               	bcf	status, 5	;RP0=0, select bank0
  3563  07A4  1303               	bcf	status, 6	;RP1=0, select bank0
  3564  07A5  01A6               	clrf	(?_abs)
  3565  07A6  07A6               	addwf	(?_abs)
  3566                           
  3567  07A7  160A  118A  2713   	fcall	_abs
              120A  118A         
  3568  07AC  1283               	bcf	status, 5	;RP0=0, select bank0
  3569  07AD  1303               	bcf	status, 6	;RP1=0, select bank0
  3570  07AE  0826               	movf	(0+?_abs),w
  3571  07AF  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3572  07B0  0827               	movf	(1+?_abs),w
  3573  07B1  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  3574  07B2  085A               	movf	(robotMoveSpeed@distance+1),w
  3575  07B3  01A7               	clrf	(?_abs+1)
  3576  07B4  07A7               	addwf	(?_abs+1)
  3577  07B5  0859               	movf	(robotMoveSpeed@distance),w
  3578  07B6  01A6               	clrf	(?_abs)
  3579  07B7  07A6               	addwf	(?_abs)
  3580                           
  3581  07B8  160A  118A  2713   	fcall	_abs
              120A  118A         
  3582  07BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3583  07BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3584  07BF  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3585  07C0  3A80               	xorlw	80h
  3586  07C1  00DF               	movwf	(??_robotMoveSpeed+2)+0
  3587  07C2  0827               	movf	(1+(?_abs)),w
  3588  07C3  3A80               	xorlw	80h
  3589  07C4  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  3590  07C5  1D03               	skipz
  3591  07C6  2FC9               	goto	u4765
  3592  07C7  0826               	movf	(0+(?_abs)),w
  3593  07C8  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3594  07C9                     u4765:
  3595                           
  3596  07C9  1C03               	skipc
  3597  07CA  2FCC               	goto	u4761
  3598  07CB  2FCD               	goto	u4760
  3599  07CC                     u4761:
  3600  07CC  2F38               	goto	l11184
  3601  07CD                     u4760:
  3602  07CD  2FCE               	goto	l11208
  3603                           	
  3604  07CE                     l6076:	
  3605                           	line	246
  3606                           	
  3607  07CE                     l11208:	
  3608                           ;robot.c: 244: }
  3609                           ;robot.c: 246: RobotDrive(0, 0x7FFF);
  3610  07CE  3000               	movlw	low(0)
  3611  07CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3612  07D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3613  07D1  00A2               	movwf	(?_RobotDrive)
  3614  07D2  3000               	movlw	high(0)
  3615  07D3  00A3               	movwf	((?_RobotDrive))+1
  3616  07D4  30FF               	movlw	low(07FFFh)
  3617  07D5  00A4               	movwf	0+(?_RobotDrive)+02h
  3618  07D6  307F               	movlw	high(07FFFh)
  3619  07D7  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3620  07D8  160A  118A  2748   	fcall	_RobotDrive
              120A  118A         
  3621                           	line	248
  3622                           	
  3623  07DD                     l6077:	
  3624  07DD  0008               	return
  3625                           	opt stack 0
  3626                           GLOBAL	__end_of_robotMoveSpeed
  3627  07DE                     	__end_of_robotMoveSpeed:
  3628 ;; =============== function _robotMoveSpeed ends ============
  3629                           
  3630                           	signat	_robotMoveSpeed,8312
  3631                           	global	_robotTurnSpeed
  3632                           psect	text975,local,class=CODE,delta=2
  3633                           global __ptext975
  3634  0C8F                     __ptext975:
  3635                           
  3636 ;; *************** function _robotTurnSpeed *****************
  3637 ;; Defined at:
  3638 ;;		line 255 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  angle           2   57[BANK0 ] int 
  3641 ;;  speed           2   59[BANK0 ] int 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  temp1           2   64[BANK0 ] int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       4       0       0       0
  3654 ;;      Locals:         0       2       0       0       0
  3655 ;;      Temps:          0       3       0       0       0
  3656 ;;      Totals:         0       9       0       0       0
  3657 ;;Total ram usage:        9 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    6
  3660 ;; This function calls:
  3661 ;;		_robotTurn
  3662 ;;		_robot_read
  3663 ;;		_UpdateDisplay
  3664 ;;		_abs
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           psect	text975
  3670                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3671                           	line	255
  3672                           	global	__size_of_robotTurnSpeed
  3673  00A8                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  3674                           	
  3675  0C8F                     _robotTurnSpeed:	
  3676                           	opt	stack 1
  3677                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3678                           	line	256
  3679                           	
  3680  0C8F                     l11152:	
  3681                           ;robot.c: 256: angleTurned = 0;
  3682  0C8F  1683               	bsf	status, 5	;RP0=1, select bank1
  3683  0C90  1303               	bcf	status, 6	;RP1=0, select bank1
  3684  0C91  01BA               	clrf	(_angleTurned)^080h
  3685  0C92  01BB               	clrf	(_angleTurned+1)^080h
  3686                           	line	257
  3687                           ;robot.c: 257: int temp1 = 0;
  3688  0C93  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  0C94  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  0C95  01E0               	clrf	(robotTurnSpeed@temp1)
  3691  0C96  01E1               	clrf	(robotTurnSpeed@temp1+1)
  3692                           	line	259
  3693                           	
  3694  0C97                     l11154:	
  3695                           ;robot.c: 259: robotTurn(angle);
  3696  0C97  085A               	movf	(robotTurnSpeed@angle+1),w
  3697  0C98  01A3               	clrf	(?_robotTurn+1)
  3698  0C99  07A3               	addwf	(?_robotTurn+1)
  3699  0C9A  0859               	movf	(robotTurnSpeed@angle),w
  3700  0C9B  01A2               	clrf	(?_robotTurn)
  3701  0C9C  07A2               	addwf	(?_robotTurn)
  3702                           
  3703  0C9D  120A  158A  2305   	fcall	_robotTurn
              120A  158A         
  3704                           	line	262
  3705                           ;robot.c: 262: while (abs(angleTurned) < abs(angle))
  3706  0CA2  2CF6               	goto	l11176
  3707                           	
  3708  0CA3                     l6081:	
  3709                           	line	264
  3710                           	
  3711  0CA3                     l11156:	
  3712                           ;robot.c: 263: {
  3713                           ;robot.c: 264: robot_read(1);
  3714  0CA3  3001               	movlw	(01h)
  3715  0CA4  120A  158A  26E2   	fcall	_robot_read
              120A  158A         
  3716                           	line	265
  3717                           	
  3718  0CA9                     l11158:	
  3719                           ;robot.c: 265: if (BumpSensors || VwallSensor)
  3720  0CA9  1283               	bcf	status, 5	;RP0=0, select bank0
  3721  0CAA  1303               	bcf	status, 6	;RP1=0, select bank0
  3722  0CAB  08EE               	movf	(_BumpSensors),f
  3723  0CAC  1D03               	skipz	;volatile
  3724  0CAD  2CAF               	goto	u4711
  3725  0CAE  2CB0               	goto	u4710
  3726  0CAF                     u4711:
  3727  0CAF  2CB7               	goto	l11162
  3728  0CB0                     u4710:
  3729                           	
  3730  0CB0                     l11160:	
  3731  0CB0  1683               	bsf	status, 5	;RP0=1, select bank1
  3732  0CB1  1303               	bcf	status, 6	;RP1=0, select bank1
  3733  0CB2  0852               	movf	(_VwallSensor)^080h,w	;volatile
  3734  0CB3  1D03               	skipz
  3735  0CB4  2CB6               	goto	u4720
  3736  0CB5  2CBD               	goto	l11164
  3737  0CB6                     u4720:
  3738  0CB6  2CB7               	goto	l11162
  3739                           	
  3740  0CB7                     l6084:	
  3741                           	line	267
  3742                           	
  3743  0CB7                     l11162:	
  3744                           ;robot.c: 266: {
  3745                           ;robot.c: 267: ROBOTerror = 1;
  3746  0CB7  1683               	bsf	status, 5	;RP0=1, select bank1
  3747  0CB8  1303               	bcf	status, 6	;RP1=0, select bank1
  3748  0CB9  01CF               	clrf	(_ROBOTerror)^080h
  3749  0CBA  1403               	bsf	status,0
  3750  0CBB  0DCF               	rlf	(_ROBOTerror)^080h,f
  3751                           	line	268
  3752                           ;robot.c: 268: break;
  3753  0CBC  2D2B               	goto	l11178
  3754                           	line	269
  3755                           	
  3756  0CBD                     l6082:	
  3757                           	line	270
  3758                           	
  3759  0CBD                     l11164:	
  3760                           ;robot.c: 269: }
  3761                           ;robot.c: 270: temp1 = AngleHighByte;
  3762  0CBD  0848               	movf	(_AngleHighByte)^080h,w	;volatile
  3763  0CBE  1283               	bcf	status, 5	;RP0=0, select bank0
  3764  0CBF  1303               	bcf	status, 6	;RP1=0, select bank0
  3765  0CC0  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3766  0CC1  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3767  0CC2  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3768  0CC3  00E0               	movwf	(robotTurnSpeed@temp1)
  3769  0CC4  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3770  0CC5  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3771                           	line	271
  3772                           	
  3773  0CC6                     l11166:	
  3774                           ;robot.c: 271: temp1 = temp1 << 8;
  3775  0CC6  0861               	movf	(robotTurnSpeed@temp1+1),w
  3776  0CC7  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  3777  0CC8  0860               	movf	(robotTurnSpeed@temp1),w
  3778  0CC9  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3779  0CCA  085D               	movf	(??_robotTurnSpeed+0)+0,w
  3780  0CCB  00DE               	movwf	(??_robotTurnSpeed+0)+1
  3781  0CCC  01DD               	clrf	(??_robotTurnSpeed+0)+0
  3782  0CCD  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3783  0CCE  00E0               	movwf	(robotTurnSpeed@temp1)
  3784  0CCF  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3785  0CD0  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3786                           	line	272
  3787                           	
  3788  0CD1                     l11168:	
  3789                           ;robot.c: 272: temp1 += AngleLowByte;
  3790  0CD1  1683               	bsf	status, 5	;RP0=1, select bank1
  3791  0CD2  1303               	bcf	status, 6	;RP1=0, select bank1
  3792  0CD3  0849               	movf	(_AngleLowByte)^080h,w	;volatile
  3793  0CD4  1283               	bcf	status, 5	;RP0=0, select bank0
  3794  0CD5  1303               	bcf	status, 6	;RP1=0, select bank0
  3795  0CD6  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3796  0CD7  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3797  0CD8  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3798  0CD9  07E0               	addwf	(robotTurnSpeed@temp1),f
  3799  0CDA  1803               	skipnc
  3800  0CDB  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  3801  0CDC  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3802  0CDD  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  3803                           	line	273
  3804                           	
  3805  0CDE                     l11170:	
  3806                           ;robot.c: 273: angleTurned += temp1;
  3807  0CDE  0860               	movf	(robotTurnSpeed@temp1),w
  3808  0CDF  1683               	bsf	status, 5	;RP0=1, select bank1
  3809  0CE0  1303               	bcf	status, 6	;RP1=0, select bank1
  3810  0CE1  07BA               	addwf	(_angleTurned)^080h,f
  3811  0CE2  1803               	skipnc
  3812  0CE3  0ABB               	incf	(_angleTurned+1)^080h,f
  3813  0CE4  1283               	bcf	status, 5	;RP0=0, select bank0
  3814  0CE5  1303               	bcf	status, 6	;RP1=0, select bank0
  3815  0CE6  0861               	movf	(robotTurnSpeed@temp1+1),w
  3816  0CE7  1683               	bsf	status, 5	;RP0=1, select bank1
  3817  0CE8  1303               	bcf	status, 6	;RP1=0, select bank1
  3818  0CE9  07BB               	addwf	(_angleTurned+1)^080h,f
  3819                           	line	274
  3820                           	
  3821  0CEA                     l11172:	
  3822                           ;robot.c: 274: Disp2 = angleTurned;
  3823  0CEA  083B               	movf	(_angleTurned+1)^080h,w
  3824  0CEB  01B3               	clrf	(_Disp2+1)^080h
  3825  0CEC  07B3               	addwf	(_Disp2+1)^080h
  3826  0CED  083A               	movf	(_angleTurned)^080h,w
  3827  0CEE  01B2               	clrf	(_Disp2)^080h
  3828  0CEF  07B2               	addwf	(_Disp2)^080h
  3829                           
  3830                           	line	275
  3831                           	
  3832  0CF0                     l11174:	
  3833                           ;robot.c: 275: UpdateDisplay();
  3834  0CF0  120A  118A  25C3   	fcall	_UpdateDisplay
              120A  158A         
  3835  0CF5  2CF6               	goto	l11176
  3836                           	line	276
  3837                           	
  3838  0CF6                     l6080:	
  3839                           	line	262
  3840                           	
  3841  0CF6                     l11176:	
  3842  0CF6  1683               	bsf	status, 5	;RP0=1, select bank1
  3843  0CF7  1303               	bcf	status, 6	;RP1=0, select bank1
  3844  0CF8  083B               	movf	(_angleTurned+1)^080h,w
  3845  0CF9  1283               	bcf	status, 5	;RP0=0, select bank0
  3846  0CFA  1303               	bcf	status, 6	;RP1=0, select bank0
  3847  0CFB  01A7               	clrf	(?_abs+1)
  3848  0CFC  07A7               	addwf	(?_abs+1)
  3849  0CFD  1683               	bsf	status, 5	;RP0=1, select bank1
  3850  0CFE  1303               	bcf	status, 6	;RP1=0, select bank1
  3851  0CFF  083A               	movf	(_angleTurned)^080h,w
  3852  0D00  1283               	bcf	status, 5	;RP0=0, select bank0
  3853  0D01  1303               	bcf	status, 6	;RP1=0, select bank0
  3854  0D02  01A6               	clrf	(?_abs)
  3855  0D03  07A6               	addwf	(?_abs)
  3856                           
  3857  0D04  160A  118A  2713   	fcall	_abs
              120A  158A         
  3858  0D09  1283               	bcf	status, 5	;RP0=0, select bank0
  3859  0D0A  1303               	bcf	status, 6	;RP1=0, select bank0
  3860  0D0B  0826               	movf	(0+?_abs),w
  3861  0D0C  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3862  0D0D  0827               	movf	(1+?_abs),w
  3863  0D0E  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  3864  0D0F  085A               	movf	(robotTurnSpeed@angle+1),w
  3865  0D10  01A7               	clrf	(?_abs+1)
  3866  0D11  07A7               	addwf	(?_abs+1)
  3867  0D12  0859               	movf	(robotTurnSpeed@angle),w
  3868  0D13  01A6               	clrf	(?_abs)
  3869  0D14  07A6               	addwf	(?_abs)
  3870                           
  3871  0D15  160A  118A  2713   	fcall	_abs
              120A  158A         
  3872  0D1A  1283               	bcf	status, 5	;RP0=0, select bank0
  3873  0D1B  1303               	bcf	status, 6	;RP1=0, select bank0
  3874  0D1C  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3875  0D1D  3A80               	xorlw	80h
  3876  0D1E  00DF               	movwf	(??_robotTurnSpeed+2)+0
  3877  0D1F  0827               	movf	(1+(?_abs)),w
  3878  0D20  3A80               	xorlw	80h
  3879  0D21  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  3880  0D22  1D03               	skipz
  3881  0D23  2D26               	goto	u4735
  3882  0D24  0826               	movf	(0+(?_abs)),w
  3883  0D25  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  3884  0D26                     u4735:
  3885                           
  3886  0D26  1C03               	skipc
  3887  0D27  2D29               	goto	u4731
  3888  0D28  2D2A               	goto	u4730
  3889  0D29                     u4731:
  3890  0D29  2CA3               	goto	l11156
  3891  0D2A                     u4730:
  3892  0D2A  2D2B               	goto	l11178
  3893                           	
  3894  0D2B                     l6085:	
  3895                           	line	278
  3896                           	
  3897  0D2B                     l11178:	
  3898                           ;robot.c: 276: }
  3899                           ;robot.c: 278: robotTurn(0);
  3900  0D2B  3000               	movlw	low(0)
  3901  0D2C  1283               	bcf	status, 5	;RP0=0, select bank0
  3902  0D2D  1303               	bcf	status, 6	;RP1=0, select bank0
  3903  0D2E  00A2               	movwf	(?_robotTurn)
  3904  0D2F  3000               	movlw	high(0)
  3905  0D30  00A3               	movwf	((?_robotTurn))+1
  3906  0D31  120A  158A  2305   	fcall	_robotTurn
              120A  158A         
  3907                           	line	279
  3908                           	
  3909  0D36                     l6086:	
  3910  0D36  0008               	return
  3911                           	opt stack 0
  3912                           GLOBAL	__end_of_robotTurnSpeed
  3913  0D37                     	__end_of_robotTurnSpeed:
  3914 ;; =============== function _robotTurnSpeed ends ============
  3915                           
  3916                           	signat	_robotTurnSpeed,8312
  3917                           	global	_calibrateIR
  3918                           psect	text976,local,class=CODE,delta=2
  3919                           global __ptext976
  3920  0A3F                     __ptext976:
  3921                           
  3922 ;; *************** function _calibrateIR *****************
  3923 ;; Defined at:
  3924 ;;		line 393 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;		None               void
  3931 ;; Registers used:
  3932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0
  3941 ;;      Totals:         0       0       0       0       0
  3942 ;;Total ram usage:        0 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    6
  3945 ;; This function calls:
  3946 ;;		_rotate
  3947 ;;		_UpdateDisplay
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           psect	text976
  3953                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3954                           	line	393
  3955                           	global	__size_of_calibrateIR
  3956  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3957                           	
  3958  0A3F                     _calibrateIR:	
  3959                           	opt	stack 1
  3960                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3961                           	line	394
  3962                           	
  3963  0A3F                     l11122:	
  3964                           ;Main.c: 394: currentMenu = 1;
  3965  0A3F  1683               	bsf	status, 5	;RP0=1, select bank1
  3966  0A40  1303               	bcf	status, 6	;RP1=0, select bank1
  3967  0A41  01D3               	clrf	(_currentMenu)^080h	;volatile
  3968  0A42  1403               	bsf	status,0
  3969  0A43  0DD3               	rlf	(_currentMenu)^080h,f	;volatile
  3970                           	line	395
  3971                           	
  3972  0A44                     l11124:	
  3973                           ;Main.c: 395: rotate(8, 0);
  3974  0A44  3008               	movlw	low(08h)
  3975  0A45  1283               	bcf	status, 5	;RP0=0, select bank0
  3976  0A46  1303               	bcf	status, 6	;RP1=0, select bank0
  3977  0A47  00A3               	movwf	(?_rotate)
  3978  0A48  3000               	movlw	high(08h)
  3979  0A49  00A4               	movwf	((?_rotate))+1
  3980  0A4A  01A5               	clrf	0+(?_rotate)+02h
  3981  0A4B  120A  158A  21EF   	fcall	_rotate
              120A  158A         
  3982  0A50  2A51               	goto	l11126
  3983                           	line	396
  3984                           ;Main.c: 396: while (1)
  3985                           	
  3986  0A51                     l2262:	
  3987                           	line	398
  3988                           	
  3989  0A51                     l11126:	
  3990                           ;Main.c: 397: {
  3991                           ;Main.c: 398: if (RTC_FLAG_250MS == 1)
  3992  0A51  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3993  0A52  2A54               	goto	u4701
  3994  0A53  2A55               	goto	u4700
  3995  0A54                     u4701:
  3996  0A54  2A89               	goto	l11150
  3997  0A55                     u4700:
  3998                           	line	400
  3999                           	
  4000  0A55                     l11128:	
  4001                           ;Main.c: 399: {
  4002                           ;Main.c: 400: RTC_FLAG_250MS = 0;
  4003  0A55  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4004                           	line	401
  4005                           	
  4006  0A56                     l11130:	
  4007                           ;Main.c: 401: UpdateDisplay();
  4008  0A56  120A  118A  25C3   	fcall	_UpdateDisplay
              120A  158A         
  4009  0A5B  2A89               	goto	l11150
  4010                           	line	402
  4011                           	
  4012  0A5C                     l2263:	
  4013                           	line	403
  4014                           ;Main.c: 402: }
  4015                           ;Main.c: 403: switch (buttonPressed)
  4016  0A5C  2A89               	goto	l11150
  4017                           	line	405
  4018                           ;Main.c: 404: {
  4019                           ;Main.c: 405: case 1:
  4020                           	
  4021  0A5D                     l2265:	
  4022                           	line	406
  4023                           ;Main.c: 406: buttonPressed = 0;
  4024  0A5D  01FD               	clrf	(_buttonPressed)	;volatile
  4025                           	line	407
  4026                           ;Main.c: 407: break;
  4027  0A5E  2A51               	goto	l11126
  4028                           	line	408
  4029                           ;Main.c: 408: case 2:
  4030                           	
  4031  0A5F                     l2267:	
  4032                           	line	409
  4033                           ;Main.c: 409: buttonPressed = 0;
  4034  0A5F  01FD               	clrf	(_buttonPressed)	;volatile
  4035                           	line	410
  4036                           ;Main.c: 410: break;
  4037  0A60  2A51               	goto	l11126
  4038                           	line	411
  4039                           ;Main.c: 411: case 3:
  4040                           	
  4041  0A61                     l2268:	
  4042                           	line	412
  4043                           	
  4044  0A61                     l11132:	
  4045                           ;Main.c: 412: rotate(1, 1);
  4046  0A61  3001               	movlw	low(01h)
  4047  0A62  1283               	bcf	status, 5	;RP0=0, select bank0
  4048  0A63  1303               	bcf	status, 6	;RP1=0, select bank0
  4049  0A64  00A3               	movwf	(?_rotate)
  4050  0A65  3000               	movlw	high(01h)
  4051  0A66  00A4               	movwf	((?_rotate))+1
  4052  0A67  01A5               	clrf	0+(?_rotate)+02h
  4053  0A68  1403               	bsf	status,0
  4054  0A69  0DA5               	rlf	0+(?_rotate)+02h,f
  4055  0A6A  120A  158A  21EF   	fcall	_rotate
              120A  158A         
  4056                           	line	413
  4057                           	
  4058  0A6F                     l11134:	
  4059                           ;Main.c: 413: buttonPressed = 0;
  4060  0A6F  01FD               	clrf	(_buttonPressed)	;volatile
  4061                           	line	414
  4062                           ;Main.c: 414: break;
  4063  0A70  2A51               	goto	l11126
  4064                           	line	415
  4065                           ;Main.c: 415: case 4:
  4066                           	
  4067  0A71                     l2269:	
  4068                           	line	416
  4069                           	
  4070  0A71                     l11136:	
  4071                           ;Main.c: 416: rotate(1, 0);
  4072  0A71  3001               	movlw	low(01h)
  4073  0A72  1283               	bcf	status, 5	;RP0=0, select bank0
  4074  0A73  1303               	bcf	status, 6	;RP1=0, select bank0
  4075  0A74  00A3               	movwf	(?_rotate)
  4076  0A75  3000               	movlw	high(01h)
  4077  0A76  00A4               	movwf	((?_rotate))+1
  4078  0A77  01A5               	clrf	0+(?_rotate)+02h
  4079  0A78  120A  158A  21EF   	fcall	_rotate
              120A  158A         
  4080                           	line	417
  4081                           	
  4082  0A7D                     l11138:	
  4083                           ;Main.c: 417: buttonPressed = 0;
  4084  0A7D  01FD               	clrf	(_buttonPressed)	;volatile
  4085                           	line	418
  4086                           ;Main.c: 418: break;
  4087  0A7E  2A51               	goto	l11126
  4088                           	line	419
  4089                           ;Main.c: 419: case 5:
  4090                           	
  4091  0A7F                     l2270:	
  4092                           	line	420
  4093                           	
  4094  0A7F                     l11140:	
  4095                           ;Main.c: 420: totalSteps = 0;
  4096  0A7F  1683               	bsf	status, 5	;RP0=1, select bank1
  4097  0A80  1303               	bcf	status, 6	;RP1=0, select bank1
  4098  0A81  01C6               	clrf	(_totalSteps)^080h
  4099  0A82  01C7               	clrf	(_totalSteps+1)^080h
  4100                           	line	421
  4101                           	
  4102  0A83                     l11142:	
  4103                           ;Main.c: 421: buttonPressed = 0;
  4104  0A83  01FD               	clrf	(_buttonPressed)	;volatile
  4105                           	line	422
  4106                           	
  4107  0A84                     l11144:	
  4108                           ;Main.c: 422: currentMenu = 0;
  4109  0A84  01D3               	clrf	(_currentMenu)^080h	;volatile
  4110  0A85  2A9C               	goto	l2271
  4111                           	line	423
  4112                           	
  4113  0A86                     l11146:	
  4114                           ;Main.c: 423: return;
  4115  0A86  2A9C               	goto	l2271
  4116                           	line	424
  4117                           ;Main.c: 424: default:
  4118                           	
  4119  0A87                     l2272:	
  4120                           	line	425
  4121                           ;Main.c: 425: break;
  4122  0A87  2A51               	goto	l11126
  4123                           	line	426
  4124                           	
  4125  0A88                     l11148:	
  4126                           ;Main.c: 426: }
  4127  0A88  2A51               	goto	l11126
  4128                           	line	403
  4129                           	
  4130  0A89                     l2264:	
  4131                           	
  4132  0A89                     l11150:	
  4133  0A89  087D               	movf	(_buttonPressed),w	;volatile
  4134                           	; Switch size 1, requested type "space"
  4135                           ; Number of cases is 5, Range of values is 1 to 5
  4136                           ; switch strategies available:
  4137                           ; Name         Instructions Cycles
  4138                           ; simple_byte           16     9 (average)
  4139                           ; direct_byte           26    11 (fixed)
  4140                           ; jumptable            263     9 (fixed)
  4141                           ;	Chosen strategy is simple_byte
  4142                           
  4143                           	opt asmopt_off
  4144  0A8A  3A01               	xorlw	1^0	; case 1
  4145  0A8B  1903               	skipnz
  4146  0A8C  2A5D               	goto	l2265
  4147  0A8D  3A03               	xorlw	2^1	; case 2
  4148  0A8E  1903               	skipnz
  4149  0A8F  2A5F               	goto	l2267
  4150  0A90  3A01               	xorlw	3^2	; case 3
  4151  0A91  1903               	skipnz
  4152  0A92  2A61               	goto	l11132
  4153  0A93  3A07               	xorlw	4^3	; case 4
  4154  0A94  1903               	skipnz
  4155  0A95  2A71               	goto	l11136
  4156  0A96  3A01               	xorlw	5^4	; case 5
  4157  0A97  1903               	skipnz
  4158  0A98  2A7F               	goto	l11140
  4159  0A99  2A51               	goto	l11126
  4160                           	opt asmopt_on
  4161                           
  4162                           	line	426
  4163                           	
  4164  0A9A                     l2266:	
  4165  0A9A  2A51               	goto	l11126
  4166                           	line	427
  4167                           	
  4168  0A9B                     l2273:	
  4169                           	line	396
  4170  0A9B  2A51               	goto	l11126
  4171                           	
  4172  0A9C                     l2274:	
  4173                           	line	428
  4174                           	
  4175  0A9C                     l2271:	
  4176  0A9C  0008               	return
  4177                           	opt stack 0
  4178                           GLOBAL	__end_of_calibrateIR
  4179  0A9D                     	__end_of_calibrateIR:
  4180 ;; =============== function _calibrateIR ends ============
  4181                           
  4182                           	signat	_calibrateIR,88
  4183                           	global	_UpdateDisplay
  4184                           psect	text977,local,class=CODE,delta=2
  4185                           global __ptext977
  4186  05C3                     __ptext977:
  4187                           
  4188 ;; *************** function _UpdateDisplay *****************
  4189 ;; Defined at:
  4190 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  4195 ;; Return value:  Size  Location     Type
  4196 ;;		None               void
  4197 ;; Registers used:
  4198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4204 ;;      Params:         0       0       0       0       0
  4205 ;;      Locals:         0      16       0       0       0
  4206 ;;      Temps:          0       4       0       0       0
  4207 ;;      Totals:         0      20       0       0       0
  4208 ;;Total ram usage:       20 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    5
  4211 ;; This function calls:
  4212 ;;		_lcd_write_control
  4213 ;;		_sprintf
  4214 ;;		_lcd_set_cursor
  4215 ;;		_lcd_write_string
  4216 ;;		___awmod
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;;		_calibrateIR
  4220 ;;		_ChargeMode
  4221 ;;		_robotFollow
  4222 ;;		_robotMoveSpeed
  4223 ;;		_robotTurnSpeed
  4224 ;;		_scan360
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           psect	text977
  4228                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4229                           	line	236
  4230                           	global	__size_of_UpdateDisplay
  4231  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4232                           	
  4233  05C3                     _UpdateDisplay:	
  4234                           	opt	stack 1
  4235                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4236                           	line	237
  4237                           	
  4238  05C3                     l11078:	
  4239                           ;HMI.c: 237: char LCDOutput[16] = "";
  4240  05C3  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4241  05C4  0084               	movwf	fsr0
  4242  05C5  3090               	movlw	low(UpdateDisplay@F1249)
  4243  05C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4244  05C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4245  05C8  00C5               	movwf	(??_UpdateDisplay+0)+0
  4246  05C9  0804               	movf	fsr0,w
  4247  05CA  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4248  05CB  3010               	movlw	16
  4249  05CC  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4250  05CD                     u4680:
  4251  05CD  0845               	movf	(??_UpdateDisplay+0)+0,w
  4252  05CE  0084               	movwf	fsr0
  4253  05CF  1783               	bsf	status, 7	;select IRP bank3
  4254                           	
  4255  05D0  0800               	movf	indf,w
  4256  05D1  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4257  05D2  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4258  05D3  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4259  05D4  0084               	movwf	fsr0
  4260  05D5  1383               	bcf	status, 7	;select IRP bank0
  4261                           	
  4262  05D6  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4263  05D7  0080               	movwf	indf
  4264  05D8  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4265  05D9  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4266  05DA  2DCD               	goto	u4680
  4267                           	line	238
  4268                           ;HMI.c: 238: switch (currentMenu)
  4269  05DB  2F14               	goto	l11120
  4270                           	line	240
  4271                           ;HMI.c: 239: {
  4272                           ;HMI.c: 240: case 0:
  4273                           	
  4274  05DC                     l4546:	
  4275                           	line	241
  4276                           	
  4277  05DC                     l11080:	
  4278                           ;HMI.c: 241: lcd_write_control(0b00000001);
  4279  05DC  3001               	movlw	(01h)
  4280  05DD  160A  118A  251D   	fcall	_lcd_write_control
              120A  118A         
  4281                           	line	242
  4282                           	
  4283  05E2                     l11082:	
  4284                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  4285  05E2  302B               	movlw	((STR_13-__stringbase))&0ffh
  4286  05E3  1283               	bcf	status, 5	;RP0=0, select bank0
  4287  05E4  1303               	bcf	status, 6	;RP1=0, select bank0
  4288  05E5  00C5               	movwf	(??_UpdateDisplay+0)+0
  4289  05E6  0845               	movf	(??_UpdateDisplay+0)+0,w
  4290  05E7  00B4               	movwf	(?_sprintf)
  4291  05E8  1683               	bsf	status, 5	;RP0=1, select bank1
  4292  05E9  1303               	bcf	status, 6	;RP1=0, select bank1
  4293  05EA  0831               	movf	(_Disp1+1)^080h,w
  4294  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
  4295  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
  4296  05ED  01B6               	clrf	1+(?_sprintf)+01h
  4297  05EE  07B6               	addwf	1+(?_sprintf)+01h
  4298  05EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4299  05F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4300  05F1  0830               	movf	(_Disp1)^080h,w
  4301  05F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4302  05F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4303  05F4  01B5               	clrf	0+(?_sprintf)+01h
  4304  05F5  07B5               	addwf	0+(?_sprintf)+01h
  4305                           
  4306  05F6  1683               	bsf	status, 5	;RP0=1, select bank1
  4307  05F7  1303               	bcf	status, 6	;RP1=0, select bank1
  4308  05F8  0833               	movf	(_Disp2+1)^080h,w
  4309  05F9  1283               	bcf	status, 5	;RP0=0, select bank0
  4310  05FA  1303               	bcf	status, 6	;RP1=0, select bank0
  4311  05FB  01B8               	clrf	1+(?_sprintf)+03h
  4312  05FC  07B8               	addwf	1+(?_sprintf)+03h
  4313  05FD  1683               	bsf	status, 5	;RP0=1, select bank1
  4314  05FE  1303               	bcf	status, 6	;RP1=0, select bank1
  4315  05FF  0832               	movf	(_Disp2)^080h,w
  4316  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  4317  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  4318  0602  01B7               	clrf	0+(?_sprintf)+03h
  4319  0603  07B7               	addwf	0+(?_sprintf)+03h
  4320                           
  4321  0604  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4322  0605  120A  158A  25E2   	fcall	_sprintf
              120A  118A         
  4323                           	line	243
  4324                           	
  4325  060A                     l11084:	
  4326                           ;HMI.c: 243: lcd_set_cursor(0x00);
  4327  060A  3000               	movlw	(0)
  4328  060B  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4329                           	line	244
  4330                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  4331  0610  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  4332  0611  1283               	bcf	status, 5	;RP0=0, select bank0
  4333  0612  1303               	bcf	status, 6	;RP1=0, select bank0
  4334  0613  00A7               	movwf	(?_lcd_write_string)
  4335  0614  3000               	movlw	(0x0/2)
  4336  0615  00A8               	movwf	(?_lcd_write_string+1)
  4337  0616  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4338                           	line	245
  4339                           	
  4340  061B                     l11086:	
  4341                           ;HMI.c: 245: lcd_set_cursor(0x40);
  4342  061B  3040               	movlw	(040h)
  4343  061C  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4344                           	line	246
  4345                           	
  4346  0621                     l11088:	
  4347                           ;HMI.c: 246: if (pos > 0)
  4348  0621  1683               	bsf	status, 5	;RP0=1, select bank1
  4349  0622  1303               	bcf	status, 6	;RP1=0, select bank1
  4350  0623  0843               	movf	(_pos+1)^080h,w
  4351  0624  3A80               	xorlw	80h
  4352  0625  00FF               	movwf	btemp+1
  4353  0626  3080               	movlw	(high(01h))^80h
  4354  0627  027F               	subwf	btemp+1,w
  4355  0628  1D03               	skipz
  4356  0629  2E2C               	goto	u4695
  4357  062A  3001               	movlw	low(01h)
  4358  062B  0242               	subwf	(_pos)^080h,w
  4359  062C                     u4695:
  4360                           
  4361  062C  1C03               	skipc
  4362  062D  2E2F               	goto	u4691
  4363  062E  2E30               	goto	u4690
  4364  062F                     u4691:
  4365  062F  2E43               	goto	l11092
  4366  0630                     u4690:
  4367                           	line	247
  4368                           	
  4369  0630                     l11090:	
  4370                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  4371  0630  1683               	bsf	status, 5	;RP0=1, select bank1
  4372  0631  1303               	bcf	status, 6	;RP1=0, select bank1
  4373  0632  0842               	movf	(_pos)^080h,w
  4374  0633  3EFF               	addlw	0FFh
  4375  0634  3EE2               	addlw	_shortMenuStrings&0ffh
  4376  0635  0084               	movwf	fsr0
  4377  0636  1383               	bcf	status, 7	;select IRP bank1
  4378  0637  0800               	movf	indf,w
  4379  0638  1283               	bcf	status, 5	;RP0=0, select bank0
  4380  0639  1303               	bcf	status, 6	;RP1=0, select bank0
  4381  063A  00A7               	movwf	(?_lcd_write_string)
  4382  063B  3080               	movlw	80h
  4383  063C  00A8               	movwf	(?_lcd_write_string+1)
  4384  063D  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4385  0642  2E56               	goto	l11094
  4386                           	line	248
  4387                           	
  4388  0643                     l4547:	
  4389                           	line	249
  4390                           	
  4391  0643                     l11092:	
  4392                           ;HMI.c: 248: else
  4393                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4394  0643  1683               	bsf	status, 5	;RP0=1, select bank1
  4395  0644  1303               	bcf	status, 6	;RP1=0, select bank1
  4396  0645  0842               	movf	(_pos)^080h,w
  4397  0646  3E05               	addlw	05h
  4398  0647  3EE2               	addlw	_shortMenuStrings&0ffh
  4399  0648  0084               	movwf	fsr0
  4400  0649  1383               	bcf	status, 7	;select IRP bank1
  4401  064A  0800               	movf	indf,w
  4402  064B  1283               	bcf	status, 5	;RP0=0, select bank0
  4403  064C  1303               	bcf	status, 6	;RP1=0, select bank0
  4404  064D  00A7               	movwf	(?_lcd_write_string)
  4405  064E  3080               	movlw	80h
  4406  064F  00A8               	movwf	(?_lcd_write_string+1)
  4407  0650  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4408  0655  2E56               	goto	l11094
  4409                           	
  4410  0656                     l4548:	
  4411                           	line	250
  4412                           	
  4413  0656                     l11094:	
  4414                           ;HMI.c: 250: lcd_set_cursor(0x44);
  4415  0656  3044               	movlw	(044h)
  4416  0657  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4417                           	line	251
  4418                           	
  4419  065C                     l11096:	
  4420                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  4421  065C  1683               	bsf	status, 5	;RP0=1, select bank1
  4422  065D  1303               	bcf	status, 6	;RP1=0, select bank1
  4423  065E  0842               	movf	(_pos)^080h,w
  4424  065F  3EDC               	addlw	_menuStrings&0ffh
  4425  0660  0084               	movwf	fsr0
  4426  0661  1383               	bcf	status, 7	;select IRP bank1
  4427  0662  0800               	movf	indf,w
  4428  0663  1283               	bcf	status, 5	;RP0=0, select bank0
  4429  0664  1303               	bcf	status, 6	;RP1=0, select bank0
  4430  0665  00A7               	movwf	(?_lcd_write_string)
  4431  0666  3080               	movlw	80h
  4432  0667  00A8               	movwf	(?_lcd_write_string+1)
  4433  0668  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4434                           	line	252
  4435                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  4436  066D  304D               	movlw	(04Dh)
  4437  066E  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4438                           	line	253
  4439                           	
  4440  0673                     l11098:	
  4441                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4442  0673  3006               	movlw	low(06h)
  4443  0674  1283               	bcf	status, 5	;RP0=0, select bank0
  4444  0675  1303               	bcf	status, 6	;RP1=0, select bank0
  4445  0676  00A0               	movwf	(?___awmod)
  4446  0677  3000               	movlw	high(06h)
  4447  0678  00A1               	movwf	((?___awmod))+1
  4448  0679  1683               	bsf	status, 5	;RP0=1, select bank1
  4449  067A  1303               	bcf	status, 6	;RP1=0, select bank1
  4450  067B  0842               	movf	(_pos)^080h,w
  4451  067C  3E01               	addlw	low(01h)
  4452  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  4453  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  4454  067F  00A2               	movwf	0+(?___awmod)+02h
  4455  0680  1683               	bsf	status, 5	;RP0=1, select bank1
  4456  0681  1303               	bcf	status, 6	;RP1=0, select bank1
  4457  0682  0843               	movf	(_pos+1)^080h,w
  4458  0683  1803               	skipnc
  4459  0684  3E01               	addlw	1
  4460  0685  3E00               	addlw	high(01h)
  4461  0686  1283               	bcf	status, 5	;RP0=0, select bank0
  4462  0687  1303               	bcf	status, 6	;RP1=0, select bank0
  4463  0688  00A3               	movwf	1+0+(?___awmod)+02h
  4464  0689  120A  158A  229D   	fcall	___awmod
              120A  118A         
  4465  068E  1283               	bcf	status, 5	;RP0=0, select bank0
  4466  068F  1303               	bcf	status, 6	;RP1=0, select bank0
  4467  0690  0820               	movf	(0+(?___awmod)),w
  4468  0691  3EE2               	addlw	_shortMenuStrings&0ffh
  4469  0692  0084               	movwf	fsr0
  4470  0693  1383               	bcf	status, 7	;select IRP bank1
  4471  0694  0800               	movf	indf,w
  4472  0695  00A7               	movwf	(?_lcd_write_string)
  4473  0696  3080               	movlw	80h
  4474  0697  00A8               	movwf	(?_lcd_write_string+1)
  4475  0698  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4476                           	line	254
  4477                           ;HMI.c: 254: break;
  4478  069D  2F21               	goto	l4553
  4479                           	line	255
  4480                           ;HMI.c: 255: case 1:
  4481                           	
  4482  069E                     l4550:	
  4483                           	line	256
  4484                           	
  4485  069E                     l11100:	
  4486                           ;HMI.c: 256: lcd_write_control(0b00000001);
  4487  069E  3001               	movlw	(01h)
  4488  069F  160A  118A  251D   	fcall	_lcd_write_control
              120A  118A         
  4489                           	line	257
  4490                           ;HMI.c: 257: lcd_set_cursor(0x00);
  4491  06A4  3000               	movlw	(0)
  4492  06A5  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4493                           	line	258
  4494                           	
  4495  06AA                     l11102:	
  4496                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  4497  06AA  301B               	movlw	low((STR_14-__stringbase))
  4498  06AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4499  06AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4500  06AD  00A7               	movwf	(?_lcd_write_string)
  4501  06AE  3080               	movlw	80h
  4502  06AF  00A8               	movwf	(?_lcd_write_string+1)
  4503  06B0  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4504                           	line	259
  4505                           	
  4506  06B5                     l11104:	
  4507                           ;HMI.c: 259: lcd_set_cursor(0x40);
  4508  06B5  3040               	movlw	(040h)
  4509  06B6  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4510                           	line	260
  4511                           ;HMI.c: 260: lcd_write_string("<<<");
  4512  06BB  3082               	movlw	low((STR_15-__stringbase))
  4513  06BC  1283               	bcf	status, 5	;RP0=0, select bank0
  4514  06BD  1303               	bcf	status, 6	;RP1=0, select bank0
  4515  06BE  00A7               	movwf	(?_lcd_write_string)
  4516  06BF  3080               	movlw	80h
  4517  06C0  00A8               	movwf	(?_lcd_write_string+1)
  4518  06C1  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4519                           	line	261
  4520                           	
  4521  06C6                     l11106:	
  4522                           ;HMI.c: 261: lcd_set_cursor(0x44);
  4523  06C6  3044               	movlw	(044h)
  4524  06C7  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4525                           	line	262
  4526                           	
  4527  06CC                     l11108:	
  4528                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  4529  06CC  3076               	movlw	low((STR_16-__stringbase))
  4530  06CD  1283               	bcf	status, 5	;RP0=0, select bank0
  4531  06CE  1303               	bcf	status, 6	;RP1=0, select bank0
  4532  06CF  00A7               	movwf	(?_lcd_write_string)
  4533  06D0  3080               	movlw	80h
  4534  06D1  00A8               	movwf	(?_lcd_write_string+1)
  4535  06D2  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4536                           	line	263
  4537                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  4538  06D7  304D               	movlw	(04Dh)
  4539  06D8  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4540                           	line	264
  4541                           	
  4542  06DD                     l11110:	
  4543                           ;HMI.c: 264: lcd_write_string(">>>");
  4544  06DD  3086               	movlw	low((STR_17-__stringbase))
  4545  06DE  1283               	bcf	status, 5	;RP0=0, select bank0
  4546  06DF  1303               	bcf	status, 6	;RP1=0, select bank0
  4547  06E0  00A7               	movwf	(?_lcd_write_string)
  4548  06E1  3080               	movlw	80h
  4549  06E2  00A8               	movwf	(?_lcd_write_string+1)
  4550  06E3  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4551                           	line	265
  4552                           ;HMI.c: 265: break;
  4553  06E8  2F21               	goto	l4553
  4554                           	line	266
  4555                           ;HMI.c: 266: case 2:
  4556                           	
  4557  06E9                     l4551:	
  4558                           	line	267
  4559                           	
  4560  06E9                     l11112:	
  4561                           ;HMI.c: 267: lcd_write_control(0b00000001);
  4562  06E9  3001               	movlw	(01h)
  4563  06EA  160A  118A  251D   	fcall	_lcd_write_control
              120A  118A         
  4564                           	line	268
  4565                           ;HMI.c: 268: lcd_set_cursor(0x00);
  4566  06EF  3000               	movlw	(0)
  4567  06F0  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4568                           	line	269
  4569                           	
  4570  06F5                     l11114:	
  4571                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  4572  06F5  300B               	movlw	low((STR_18-__stringbase))
  4573  06F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4574  06F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4575  06F8  00A7               	movwf	(?_lcd_write_string)
  4576  06F9  3080               	movlw	80h
  4577  06FA  00A8               	movwf	(?_lcd_write_string+1)
  4578  06FB  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4579                           	line	270
  4580                           	
  4581  0700                     l11116:	
  4582                           ;HMI.c: 270: lcd_set_cursor(0x44);
  4583  0700  3044               	movlw	(044h)
  4584  0701  160A  118A  24CB   	fcall	_lcd_set_cursor
              120A  118A         
  4585                           	line	271
  4586                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  4587  0706  3038               	movlw	low((STR_19-__stringbase))
  4588  0707  1283               	bcf	status, 5	;RP0=0, select bank0
  4589  0708  1303               	bcf	status, 6	;RP1=0, select bank0
  4590  0709  00A7               	movwf	(?_lcd_write_string)
  4591  070A  3080               	movlw	80h
  4592  070B  00A8               	movwf	(?_lcd_write_string+1)
  4593  070C  160A  118A  265A   	fcall	_lcd_write_string
              120A  118A         
  4594                           	line	272
  4595                           ;HMI.c: 272: break;
  4596  0711  2F21               	goto	l4553
  4597                           	line	273
  4598                           ;HMI.c: 273: default:
  4599                           	
  4600  0712                     l4552:	
  4601                           	line	274
  4602                           ;HMI.c: 274: break;
  4603  0712  2F21               	goto	l4553
  4604                           	line	275
  4605                           	
  4606  0713                     l11118:	
  4607                           ;HMI.c: 275: }
  4608  0713  2F21               	goto	l4553
  4609                           	line	238
  4610                           	
  4611  0714                     l4545:	
  4612                           	
  4613  0714                     l11120:	
  4614  0714  1683               	bsf	status, 5	;RP0=1, select bank1
  4615  0715  1303               	bcf	status, 6	;RP1=0, select bank1
  4616  0716  0853               	movf	(_currentMenu)^080h,w	;volatile
  4617                           	; Switch size 1, requested type "space"
  4618                           ; Number of cases is 3, Range of values is 0 to 2
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; simple_byte           10     6 (average)
  4622                           ; direct_byte           17     8 (fixed)
  4623                           ; jumptable            260     6 (fixed)
  4624                           ; rangetable             7     6 (fixed)
  4625                           ; spacedrange           12     9 (fixed)
  4626                           ; locatedrange           3     3 (fixed)
  4627                           ;	Chosen strategy is simple_byte
  4628                           
  4629                           	opt asmopt_off
  4630  0717  3A00               	xorlw	0^0	; case 0
  4631  0718  1903               	skipnz
  4632  0719  2DDC               	goto	l11080
  4633  071A  3A01               	xorlw	1^0	; case 1
  4634  071B  1903               	skipnz
  4635  071C  2E9E               	goto	l11100
  4636  071D  3A03               	xorlw	2^1	; case 2
  4637  071E  1903               	skipnz
  4638  071F  2EE9               	goto	l11112
  4639  0720  2F21               	goto	l4553
  4640                           	opt asmopt_on
  4641                           
  4642                           	line	275
  4643                           	
  4644  0721                     l4549:	
  4645                           	line	276
  4646                           	
  4647  0721                     l4553:	
  4648  0721  0008               	return
  4649                           	opt stack 0
  4650                           GLOBAL	__end_of_UpdateDisplay
  4651  0722                     	__end_of_UpdateDisplay:
  4652 ;; =============== function _UpdateDisplay ends ============
  4653                           
  4654                           	signat	_UpdateDisplay,88
  4655                           	global	_readAvgDistance
  4656                           psect	text978,local,class=CODE,delta=2
  4657                           global __ptext978
  4658  0B79                     __ptext978:
  4659                           
  4660 ;; *************** function _readAvgDistance *****************
  4661 ;; Defined at:
  4662 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  i               2   22[BANK0 ] int 
  4667 ;;  tempIR          2   20[BANK0 ] unsigned int 
  4668 ;;  j               2   18[BANK0 ] int 
  4669 ;;  fullval         2   16[BANK0 ] unsigned int 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4679 ;;      Params:         0       0       0       0       0
  4680 ;;      Locals:         0       8       0       0       0
  4681 ;;      Temps:          0       0       0       0       0
  4682 ;;      Totals:         0       8       0       0       0
  4683 ;;Total ram usage:        8 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    6
  4686 ;; This function calls:
  4687 ;;		_readDistance
  4688 ;;		___lwdiv
  4689 ;;		_ADCconvert
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;;		_robotFollow
  4693 ;;		_scan360
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           psect	text978
  4697                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4698                           	line	28
  4699                           	global	__size_of_readAvgDistance
  4700  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4701                           	
  4702  0B79                     _readAvgDistance:	
  4703                           	opt	stack 0
  4704                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4705                           	line	29
  4706                           	
  4707  0B79                     l11060:	
  4708                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  4709  0B79  1283               	bcf	status, 5	;RP0=0, select bank0
  4710  0B7A  1303               	bcf	status, 6	;RP1=0, select bank0
  4711  0B7B  01B0               	clrf	(readAvgDistance@fullval)
  4712  0B7C  01B1               	clrf	(readAvgDistance@fullval+1)
  4713  0B7D  01B4               	clrf	(readAvgDistance@tempIR)
  4714  0B7E  01B5               	clrf	(readAvgDistance@tempIR+1)
  4715                           	line	30
  4716                           ;infrared.c: 30: int j = 0;
  4717  0B7F  01B2               	clrf	(readAvgDistance@j)
  4718  0B80  01B3               	clrf	(readAvgDistance@j+1)
  4719                           	line	32
  4720                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  4721  0B81  01B6               	clrf	(readAvgDistance@i)
  4722  0B82  01B7               	clrf	(readAvgDistance@i+1)
  4723                           	
  4724  0B83                     l11062:	
  4725  0B83  0837               	movf	(readAvgDistance@i+1),w
  4726  0B84  3A80               	xorlw	80h
  4727  0B85  00FF               	movwf	btemp+1
  4728  0B86  3080               	movlw	(high(08h))^80h
  4729  0B87  027F               	subwf	btemp+1,w
  4730  0B88  1D03               	skipz
  4731  0B89  2B8C               	goto	u4655
  4732  0B8A  3008               	movlw	low(08h)
  4733  0B8B  0236               	subwf	(readAvgDistance@i),w
  4734  0B8C                     u4655:
  4735                           
  4736  0B8C  1C03               	skipc
  4737  0B8D  2B8F               	goto	u4651
  4738  0B8E  2B90               	goto	u4650
  4739  0B8F                     u4651:
  4740  0B8F  2B92               	goto	l11066
  4741  0B90                     u4650:
  4742  0B90  2BC8               	goto	l11074
  4743                           	
  4744  0B91                     l11064:	
  4745  0B91  2BC8               	goto	l11074
  4746                           	line	33
  4747                           	
  4748  0B92                     l3003:	
  4749                           	line	34
  4750                           	
  4751  0B92                     l11066:	
  4752                           ;infrared.c: 33: {
  4753                           ;infrared.c: 34: tempIR = readDistance();
  4754  0B92  160A  118A  2547   	fcall	_readDistance
              120A  158A         
  4755  0B97  1283               	bcf	status, 5	;RP0=0, select bank0
  4756  0B98  1303               	bcf	status, 6	;RP1=0, select bank0
  4757  0B99  0829               	movf	(1+(?_readDistance)),w
  4758  0B9A  01B5               	clrf	(readAvgDistance@tempIR+1)
  4759  0B9B  07B5               	addwf	(readAvgDistance@tempIR+1)
  4760  0B9C  0828               	movf	(0+(?_readDistance)),w
  4761  0B9D  01B4               	clrf	(readAvgDistance@tempIR)
  4762  0B9E  07B4               	addwf	(readAvgDistance@tempIR)
  4763                           
  4764                           	line	35
  4765                           	
  4766  0B9F                     l11068:	
  4767                           ;infrared.c: 35: if (tempIR <= 1000)
  4768  0B9F  3003               	movlw	high(03E9h)
  4769  0BA0  0235               	subwf	(readAvgDistance@tempIR+1),w
  4770  0BA1  30E9               	movlw	low(03E9h)
  4771  0BA2  1903               	skipnz
  4772  0BA3  0234               	subwf	(readAvgDistance@tempIR),w
  4773  0BA4  1803               	skipnc
  4774  0BA5  2BA7               	goto	u4661
  4775  0BA6  2BA8               	goto	u4660
  4776  0BA7                     u4661:
  4777  0BA7  2BB4               	goto	l3005
  4778  0BA8                     u4660:
  4779                           	line	37
  4780                           	
  4781  0BA8                     l11070:	
  4782                           ;infrared.c: 36: {
  4783                           ;infrared.c: 37: fullval += tempIR;
  4784  0BA8  0834               	movf	(readAvgDistance@tempIR),w
  4785  0BA9  07B0               	addwf	(readAvgDistance@fullval),f
  4786  0BAA  1803               	skipnc
  4787  0BAB  0AB1               	incf	(readAvgDistance@fullval+1),f
  4788  0BAC  0835               	movf	(readAvgDistance@tempIR+1),w
  4789  0BAD  07B1               	addwf	(readAvgDistance@fullval+1),f
  4790                           	line	38
  4791                           ;infrared.c: 38: j++;
  4792  0BAE  3001               	movlw	low(01h)
  4793  0BAF  07B2               	addwf	(readAvgDistance@j),f
  4794  0BB0  1803               	skipnc
  4795  0BB1  0AB3               	incf	(readAvgDistance@j+1),f
  4796  0BB2  3000               	movlw	high(01h)
  4797  0BB3  07B3               	addwf	(readAvgDistance@j+1),f
  4798                           	line	39
  4799                           	
  4800  0BB4                     l3005:	
  4801                           	line	32
  4802  0BB4  3001               	movlw	low(01h)
  4803  0BB5  07B6               	addwf	(readAvgDistance@i),f
  4804  0BB6  1803               	skipnc
  4805  0BB7  0AB7               	incf	(readAvgDistance@i+1),f
  4806  0BB8  3000               	movlw	high(01h)
  4807  0BB9  07B7               	addwf	(readAvgDistance@i+1),f
  4808                           	
  4809  0BBA                     l11072:	
  4810  0BBA  0837               	movf	(readAvgDistance@i+1),w
  4811  0BBB  3A80               	xorlw	80h
  4812  0BBC  00FF               	movwf	btemp+1
  4813  0BBD  3080               	movlw	(high(08h))^80h
  4814  0BBE  027F               	subwf	btemp+1,w
  4815  0BBF  1D03               	skipz
  4816  0BC0  2BC3               	goto	u4675
  4817  0BC1  3008               	movlw	low(08h)
  4818  0BC2  0236               	subwf	(readAvgDistance@i),w
  4819  0BC3                     u4675:
  4820                           
  4821  0BC3  1C03               	skipc
  4822  0BC4  2BC6               	goto	u4671
  4823  0BC5  2BC7               	goto	u4670
  4824  0BC6                     u4671:
  4825  0BC6  2B92               	goto	l11066
  4826  0BC7                     u4670:
  4827  0BC7  2BC8               	goto	l11074
  4828                           	
  4829  0BC8                     l3004:	
  4830                           	line	41
  4831                           	
  4832  0BC8                     l11074:	
  4833                           ;infrared.c: 39: }
  4834                           ;infrared.c: 40: }
  4835                           ;infrared.c: 41: adcVal = fullval / j;
  4836  0BC8  1283               	bcf	status, 5	;RP0=0, select bank0
  4837  0BC9  1303               	bcf	status, 6	;RP1=0, select bank0
  4838  0BCA  0833               	movf	(readAvgDistance@j+1),w
  4839  0BCB  01A7               	clrf	(?___lwdiv+1)
  4840  0BCC  07A7               	addwf	(?___lwdiv+1)
  4841  0BCD  0832               	movf	(readAvgDistance@j),w
  4842  0BCE  01A6               	clrf	(?___lwdiv)
  4843  0BCF  07A6               	addwf	(?___lwdiv)
  4844                           
  4845  0BD0  0831               	movf	(readAvgDistance@fullval+1),w
  4846  0BD1  01A9               	clrf	1+(?___lwdiv)+02h
  4847  0BD2  07A9               	addwf	1+(?___lwdiv)+02h
  4848  0BD3  0830               	movf	(readAvgDistance@fullval),w
  4849  0BD4  01A8               	clrf	0+(?___lwdiv)+02h
  4850  0BD5  07A8               	addwf	0+(?___lwdiv)+02h
  4851                           
  4852  0BD6  120A  158A  219F   	fcall	___lwdiv
              120A  158A         
  4853  0BDB  1283               	bcf	status, 5	;RP0=0, select bank0
  4854  0BDC  1303               	bcf	status, 6	;RP1=0, select bank0
  4855  0BDD  0827               	movf	(1+(?___lwdiv)),w
  4856  0BDE  01ED               	clrf	(_adcVal+1)	;volatile
  4857  0BDF  07ED               	addwf	(_adcVal+1)	;volatile
  4858  0BE0  0826               	movf	(0+(?___lwdiv)),w
  4859  0BE1  01EC               	clrf	(_adcVal)	;volatile
  4860  0BE2  07EC               	addwf	(_adcVal)	;volatile
  4861                           
  4862                           	line	42
  4863                           ;infrared.c: 42: ADCconvert();
  4864  0BE3  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  4865                           	line	43
  4866                           	
  4867  0BE8                     l11076:	
  4868                           ;infrared.c: 43: Disp1 = adcVal;
  4869  0BE8  1283               	bcf	status, 5	;RP0=0, select bank0
  4870  0BE9  1303               	bcf	status, 6	;RP1=0, select bank0
  4871  0BEA  086D               	movf	(_adcVal+1),w	;volatile
  4872  0BEB  1683               	bsf	status, 5	;RP0=1, select bank1
  4873  0BEC  1303               	bcf	status, 6	;RP1=0, select bank1
  4874  0BED  01B1               	clrf	(_Disp1+1)^080h	;volatile
  4875  0BEE  07B1               	addwf	(_Disp1+1)^080h	;volatile
  4876  0BEF  1283               	bcf	status, 5	;RP0=0, select bank0
  4877  0BF0  1303               	bcf	status, 6	;RP1=0, select bank0
  4878  0BF1  086C               	movf	(_adcVal),w	;volatile
  4879  0BF2  1683               	bsf	status, 5	;RP0=1, select bank1
  4880  0BF3  1303               	bcf	status, 6	;RP1=0, select bank1
  4881  0BF4  01B0               	clrf	(_Disp1)^080h	;volatile
  4882  0BF5  07B0               	addwf	(_Disp1)^080h	;volatile
  4883                           
  4884                           	line	44
  4885                           	
  4886  0BF6                     l3006:	
  4887  0BF6  0008               	return
  4888                           	opt stack 0
  4889                           GLOBAL	__end_of_readAvgDistance
  4890  0BF7                     	__end_of_readAvgDistance:
  4891 ;; =============== function _readAvgDistance ends ============
  4892                           
  4893                           	signat	_readAvgDistance,88
  4894                           	global	_init
  4895                           psect	text979,local,class=CODE,delta=2
  4896                           global __ptext979
  4897  16B4                     __ptext979:
  4898                           
  4899 ;; *************** function _init *****************
  4900 ;; Defined at:
  4901 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;		None               void
  4908 ;; Registers used:
  4909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0
  4917 ;;      Temps:          0       1       0       0       0
  4918 ;;      Totals:         0       1       0       0       0
  4919 ;;Total ram usage:        1 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    5
  4922 ;; This function calls:
  4923 ;;		_ser_init
  4924 ;;		_init_adc
  4925 ;;		_lcd_init
  4926 ;;		_robo_init
  4927 ;; This function is called by:
  4928 ;;		_main
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           psect	text979
  4932                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4933                           	line	139
  4934                           	global	__size_of_init
  4935  002F                     	__size_of_init	equ	__end_of_init-_init
  4936                           	
  4937  16B4                     _init:	
  4938                           	opt	stack 2
  4939                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4940                           	line	140
  4941                           	
  4942  16B4                     l11034:	
  4943                           ;Main.c: 140: buttonPressed = 0;
  4944  16B4  01FD               	clrf	(_buttonPressed)	;volatile
  4945                           	line	142
  4946                           	
  4947  16B5                     l11036:	
  4948                           ;Main.c: 142: TRISB = 0b11111100;
  4949  16B5  30FC               	movlw	(0FCh)
  4950  16B6  1683               	bsf	status, 5	;RP0=1, select bank1
  4951  16B7  1303               	bcf	status, 6	;RP1=0, select bank1
  4952  16B8  0086               	movwf	(134)^080h	;volatile
  4953                           	line	143
  4954                           	
  4955  16B9                     l11038:	
  4956                           ;Main.c: 143: TRISC &= 0b10010000;
  4957  16B9  3090               	movlw	(090h)
  4958  16BA  1283               	bcf	status, 5	;RP0=0, select bank0
  4959  16BB  1303               	bcf	status, 6	;RP1=0, select bank0
  4960  16BC  00A3               	movwf	(??_init+0)+0
  4961  16BD  0823               	movf	(??_init+0)+0,w
  4962  16BE  1683               	bsf	status, 5	;RP0=1, select bank1
  4963  16BF  1303               	bcf	status, 6	;RP1=0, select bank1
  4964  16C0  0587               	andwf	(135)^080h,f	;volatile
  4965                           	line	146
  4966                           	
  4967  16C1                     l11040:	
  4968                           ;Main.c: 146: SSPSTAT = 0b01000000;
  4969  16C1  3040               	movlw	(040h)
  4970  16C2  0094               	movwf	(148)^080h	;volatile
  4971                           	line	147
  4972                           	
  4973  16C3                     l11042:	
  4974                           ;Main.c: 147: SSPCON = 0b10100001;
  4975  16C3  30A1               	movlw	(0A1h)
  4976  16C4  1283               	bcf	status, 5	;RP0=0, select bank0
  4977  16C5  1303               	bcf	status, 6	;RP1=0, select bank0
  4978  16C6  0094               	movwf	(20)	;volatile
  4979                           	line	150
  4980                           	
  4981  16C7                     l11044:	
  4982                           ;Main.c: 150: OPTION_REG = 0b00000100;
  4983  16C7  3004               	movlw	(04h)
  4984  16C8  1683               	bsf	status, 5	;RP0=1, select bank1
  4985  16C9  1303               	bcf	status, 6	;RP1=0, select bank1
  4986  16CA  0081               	movwf	(129)^080h	;volatile
  4987                           	line	153
  4988                           	
  4989  16CB                     l11046:	
  4990                           ;Main.c: 153: ser_init();
  4991  16CB  160A  118A  2686   	fcall	_ser_init
              160A  118A         
  4992                           	line	154
  4993                           	
  4994  16D0                     l11048:	
  4995                           ;Main.c: 154: init_adc();
  4996  16D0  160A  118A  2531   	fcall	_init_adc
              160A  118A         
  4997                           	line	155
  4998                           	
  4999  16D5                     l11050:	
  5000                           ;Main.c: 155: lcd_init();
  5001  16D5  160A  118A  25AC   	fcall	_lcd_init
              160A  118A         
  5002                           	line	156
  5003                           	
  5004  16DA                     l11052:	
  5005                           ;Main.c: 156: robo_init();
  5006  16DA  120A  118A  27DE   	fcall	_robo_init
              160A  118A         
  5007                           	line	160
  5008                           	
  5009  16DF                     l11054:	
  5010                           ;Main.c: 160: TMR0IE = 1;
  5011  16DF  168B               	bsf	(93/8),(93)&7
  5012                           	line	162
  5013                           	
  5014  16E0                     l11056:	
  5015                           ;Main.c: 162: PEIE=1;
  5016  16E0  170B               	bsf	(94/8),(94)&7
  5017                           	line	164
  5018                           	
  5019  16E1                     l11058:	
  5020                           ;Main.c: 164: (GIE = 1);
  5021  16E1  178B               	bsf	(95/8),(95)&7
  5022                           	line	165
  5023                           	
  5024  16E2                     l2229:	
  5025  16E2  0008               	return
  5026                           	opt stack 0
  5027                           GLOBAL	__end_of_init
  5028  16E3                     	__end_of_init:
  5029 ;; =============== function _init ends ============
  5030                           
  5031                           	signat	_init,88
  5032                           	global	_readDistance
  5033                           psect	text980,local,class=CODE,delta=2
  5034                           global __ptext980
  5035  1547                     __ptext980:
  5036                           
  5037 ;; *************** function _readDistance *****************
  5038 ;; Defined at:
  5039 ;;		line 49 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  readVal         2   12[BANK0 ] unsigned int 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2    8[BANK0 ] unsigned int 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       2       0       0       0
  5054 ;;      Locals:         0       2       0       0       0
  5055 ;;      Temps:          0       2       0       0       0
  5056 ;;      Totals:         0       6       0       0       0
  5057 ;;Total ram usage:        6 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    5
  5060 ;; This function calls:
  5061 ;;		_adc_read_channel
  5062 ;; This function is called by:
  5063 ;;		_readAvgDistance
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           psect	text980
  5067                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  5068                           	line	49
  5069                           	global	__size_of_readDistance
  5070  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5071                           	
  5072  1547                     _readDistance:	
  5073                           	opt	stack 0
  5074                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5075                           	line	52
  5076                           	
  5077  1547                     l11028:	
  5078                           ;infrared.c: 50: unsigned int readVal;
  5079                           ;infrared.c: 52: readVal = adc_read_channel(0);
  5080  1547  3000               	movlw	(0)
  5081  1548  160A  118A  2781   	fcall	_adc_read_channel
              160A  118A         
  5082  154D  1283               	bcf	status, 5	;RP0=0, select bank0
  5083  154E  1303               	bcf	status, 6	;RP1=0, select bank0
  5084  154F  00AA               	movwf	(??_readDistance+0)+0
  5085  1550  01AB               	clrf	(??_readDistance+0)+0+1
  5086  1551  082A               	movf	0+(??_readDistance+0)+0,w
  5087  1552  00AC               	movwf	(readDistance@readVal)
  5088  1553  082B               	movf	1+(??_readDistance+0)+0,w
  5089  1554  00AD               	movwf	(readDistance@readVal+1)
  5090                           	line	54
  5091                           	
  5092  1555                     l11030:	
  5093                           ;infrared.c: 54: return readVal;
  5094  1555  082D               	movf	(readDistance@readVal+1),w
  5095  1556  01A9               	clrf	(?_readDistance+1)
  5096  1557  07A9               	addwf	(?_readDistance+1)
  5097  1558  082C               	movf	(readDistance@readVal),w
  5098  1559  01A8               	clrf	(?_readDistance)
  5099  155A  07A8               	addwf	(?_readDistance)
  5100                           
  5101  155B  2D5C               	goto	l3009
  5102                           	
  5103  155C                     l11032:	
  5104                           	line	55
  5105                           	
  5106  155C                     l3009:	
  5107  155C  0008               	return
  5108                           	opt stack 0
  5109                           GLOBAL	__end_of_readDistance
  5110  155D                     	__end_of_readDistance:
  5111 ;; =============== function _readDistance ends ============
  5112                           
  5113                           	signat	_readDistance,90
  5114                           	global	_robot_read
  5115                           psect	text981,local,class=CODE,delta=2
  5116                           global __ptext981
  5117  0EE2                     __ptext981:
  5118                           
  5119 ;; *************** function _robot_read *****************
  5120 ;; Defined at:
  5121 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  readType        1    wreg     unsigned char 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  readType        1    4[BANK0 ] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;		None               void
  5128 ;; Registers used:
  5129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5135 ;;      Params:         0       0       0       0       0
  5136 ;;      Locals:         0       1       0       0       0
  5137 ;;      Temps:          0       2       0       0       0
  5138 ;;      Totals:         0       3       0       0       0
  5139 ;;Total ram usage:        3 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    5
  5142 ;; This function calls:
  5143 ;;		_ser_putch
  5144 ;;		_ser_getch
  5145 ;; This function is called by:
  5146 ;;		_main
  5147 ;;		_robotFollow
  5148 ;;		_robotMoveSpeed
  5149 ;;		_robotTurnSpeed
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           psect	text981
  5153                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5154                           	line	46
  5155                           	global	__size_of_robot_read
  5156  011E                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5157                           	
  5158  0EE2                     _robot_read:	
  5159                           	opt	stack 1
  5160                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5161                           ;robot_read@readType stored from wreg
  5162  0EE2  1283               	bcf	status, 5	;RP0=0, select bank0
  5163  0EE3  1303               	bcf	status, 6	;RP1=0, select bank0
  5164  0EE4  00A4               	movwf	(robot_read@readType)
  5165                           	line	47
  5166                           	
  5167  0EE5                     l10980:	
  5168                           ;robot.c: 47: ser_putch(142);
  5169  0EE5  308E               	movlw	(08Eh)
  5170  0EE6  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5171                           	line	48
  5172                           ;robot.c: 48: ser_putch(7);
  5173  0EEB  3007               	movlw	(07h)
  5174  0EEC  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5175                           	line	49
  5176                           	
  5177  0EF1                     l10982:	
  5178                           ;robot.c: 49: _delay((unsigned long)((5)*(20000000/4000.0)));
  5179                           	opt asmopt_off
  5180  0EF1  3021               movlw	33
  5181  0EF2  1283               	bcf	status, 5	;RP0=0, select bank0
  5182  0EF3  1303               	bcf	status, 6	;RP1=0, select bank0
  5183  0EF4  00A3               movwf	((??_robot_read+0)+0+1),f
  5184  0EF5  3076               	movlw	118
  5185  0EF6  00A2               movwf	((??_robot_read+0)+0),f
  5186  0EF7                     u4917:
  5187  0EF7  0BA2               	decfsz	((??_robot_read+0)+0),f
  5188  0EF8  2EF7               	goto	u4917
  5189  0EF9  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5190  0EFA  2EF7               	goto	u4917
  5191  0EFB  0064               	clrwdt
  5192                           opt asmopt_on
  5193                           
  5194                           	line	50
  5195                           	
  5196  0EFC                     l10984:	
  5197                           ;robot.c: 50: BumpSensors = ser_getch();
  5198  0EFC  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5199  0F01  1283               	bcf	status, 5	;RP0=0, select bank0
  5200  0F02  1303               	bcf	status, 6	;RP1=0, select bank0
  5201  0F03  00A2               	movwf	(??_robot_read+0)+0
  5202  0F04  0822               	movf	(??_robot_read+0)+0,w
  5203  0F05  00EE               	movwf	(_BumpSensors)	;volatile
  5204                           	line	51
  5205                           	
  5206  0F06                     l10986:	
  5207                           ;robot.c: 51: ser_putch(142);
  5208  0F06  308E               	movlw	(08Eh)
  5209  0F07  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5210                           	line	52
  5211                           	
  5212  0F0C                     l10988:	
  5213                           ;robot.c: 52: ser_putch(13);
  5214  0F0C  300D               	movlw	(0Dh)
  5215  0F0D  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5216                           	line	53
  5217                           ;robot.c: 53: _delay((unsigned long)((5)*(20000000/4000.0)));
  5218                           	opt asmopt_off
  5219  0F12  3021               movlw	33
  5220  0F13  1283               	bcf	status, 5	;RP0=0, select bank0
  5221  0F14  1303               	bcf	status, 6	;RP1=0, select bank0
  5222  0F15  00A3               movwf	((??_robot_read+0)+0+1),f
  5223  0F16  3076               	movlw	118
  5224  0F17  00A2               movwf	((??_robot_read+0)+0),f
  5225  0F18                     u4927:
  5226  0F18  0BA2               	decfsz	((??_robot_read+0)+0),f
  5227  0F19  2F18               	goto	u4927
  5228  0F1A  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5229  0F1B  2F18               	goto	u4927
  5230  0F1C  0064               	clrwdt
  5231                           opt asmopt_on
  5232                           
  5233                           	line	54
  5234                           	
  5235  0F1D                     l10990:	
  5236                           ;robot.c: 54: VwallSensor = ser_getch();
  5237  0F1D  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5238  0F22  1283               	bcf	status, 5	;RP0=0, select bank0
  5239  0F23  1303               	bcf	status, 6	;RP1=0, select bank0
  5240  0F24  00A2               	movwf	(??_robot_read+0)+0
  5241  0F25  0822               	movf	(??_robot_read+0)+0,w
  5242  0F26  1683               	bsf	status, 5	;RP0=1, select bank1
  5243  0F27  1303               	bcf	status, 6	;RP1=0, select bank1
  5244  0F28  00D2               	movwf	(_VwallSensor)^080h	;volatile
  5245                           	line	56
  5246                           	
  5247  0F29                     l10992:	
  5248                           ;robot.c: 56: if (readType == 0)
  5249  0F29  1283               	bcf	status, 5	;RP0=0, select bank0
  5250  0F2A  1303               	bcf	status, 6	;RP1=0, select bank0
  5251  0F2B  08A4               	movf	(robot_read@readType),f
  5252  0F2C  1D03               	skipz
  5253  0F2D  2F2F               	goto	u4621
  5254  0F2E  2F30               	goto	u4620
  5255  0F2F                     u4621:
  5256  0F2F  2F60               	goto	l11002
  5257  0F30                     u4620:
  5258                           	line	58
  5259                           	
  5260  0F30                     l10994:	
  5261                           ;robot.c: 57: {
  5262                           ;robot.c: 58: ser_putch(142);
  5263  0F30  308E               	movlw	(08Eh)
  5264  0F31  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5265                           	line	59
  5266                           ;robot.c: 59: ser_putch(19);
  5267  0F36  3013               	movlw	(013h)
  5268  0F37  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5269                           	line	60
  5270                           	
  5271  0F3C                     l10996:	
  5272                           ;robot.c: 60: _delay((unsigned long)((5)*(20000000/4000.0)));
  5273                           	opt asmopt_off
  5274  0F3C  3021               movlw	33
  5275  0F3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5276  0F3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5277  0F3F  00A3               movwf	((??_robot_read+0)+0+1),f
  5278  0F40  3076               	movlw	118
  5279  0F41  00A2               movwf	((??_robot_read+0)+0),f
  5280  0F42                     u4937:
  5281  0F42  0BA2               	decfsz	((??_robot_read+0)+0),f
  5282  0F43  2F42               	goto	u4937
  5283  0F44  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5284  0F45  2F42               	goto	u4937
  5285  0F46  0064               	clrwdt
  5286                           opt asmopt_on
  5287                           
  5288                           	line	61
  5289                           	
  5290  0F47                     l10998:	
  5291                           ;robot.c: 61: DistHighByte = ser_getch();
  5292  0F47  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5293  0F4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5294  0F4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5295  0F4E  00A2               	movwf	(??_robot_read+0)+0
  5296  0F4F  0822               	movf	(??_robot_read+0)+0,w
  5297  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  5298  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  5299  0F52  00CB               	movwf	(_DistHighByte)^080h	;volatile
  5300                           	line	62
  5301                           	
  5302  0F53                     l11000:	
  5303                           ;robot.c: 62: DistLowByte = ser_getch();
  5304  0F53  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5305  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  5306  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  5307  0F5A  00A2               	movwf	(??_robot_read+0)+0
  5308  0F5B  0822               	movf	(??_robot_read+0)+0,w
  5309  0F5C  1683               	bsf	status, 5	;RP0=1, select bank1
  5310  0F5D  1303               	bcf	status, 6	;RP1=0, select bank1
  5311  0F5E  00CC               	movwf	(_DistLowByte)^080h	;volatile
  5312                           	line	63
  5313                           ;robot.c: 63: }
  5314  0F5F  2FFF               	goto	l6041
  5315                           	line	64
  5316                           	
  5317  0F60                     l6036:	
  5318                           	
  5319  0F60                     l11002:	
  5320                           ;robot.c: 64: else if (readType == 1)
  5321  0F60  1283               	bcf	status, 5	;RP0=0, select bank0
  5322  0F61  0824               	movf	(robot_read@readType),w
  5323  0F62  3A01               	xorlw	01h
  5324  0F63  1D03               	skipz
  5325  0F64  2F66               	goto	u4631
  5326  0F65  2F67               	goto	u4630
  5327  0F66                     u4631:
  5328  0F66  2F97               	goto	l11012
  5329  0F67                     u4630:
  5330                           	line	66
  5331                           	
  5332  0F67                     l11004:	
  5333                           ;robot.c: 65: {
  5334                           ;robot.c: 66: ser_putch(142);
  5335  0F67  308E               	movlw	(08Eh)
  5336  0F68  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5337                           	line	67
  5338                           ;robot.c: 67: ser_putch(20);
  5339  0F6D  3014               	movlw	(014h)
  5340  0F6E  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5341                           	line	68
  5342                           	
  5343  0F73                     l11006:	
  5344                           ;robot.c: 68: _delay((unsigned long)((5)*(20000000/4000.0)));
  5345                           	opt asmopt_off
  5346  0F73  3021               movlw	33
  5347  0F74  1283               	bcf	status, 5	;RP0=0, select bank0
  5348  0F75  1303               	bcf	status, 6	;RP1=0, select bank0
  5349  0F76  00A3               movwf	((??_robot_read+0)+0+1),f
  5350  0F77  3076               	movlw	118
  5351  0F78  00A2               movwf	((??_robot_read+0)+0),f
  5352  0F79                     u4947:
  5353  0F79  0BA2               	decfsz	((??_robot_read+0)+0),f
  5354  0F7A  2F79               	goto	u4947
  5355  0F7B  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5356  0F7C  2F79               	goto	u4947
  5357  0F7D  0064               	clrwdt
  5358                           opt asmopt_on
  5359                           
  5360                           	line	69
  5361                           	
  5362  0F7E                     l11008:	
  5363                           ;robot.c: 69: AngleHighByte = ser_getch();
  5364  0F7E  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5365  0F83  1283               	bcf	status, 5	;RP0=0, select bank0
  5366  0F84  1303               	bcf	status, 6	;RP1=0, select bank0
  5367  0F85  00A2               	movwf	(??_robot_read+0)+0
  5368  0F86  0822               	movf	(??_robot_read+0)+0,w
  5369  0F87  1683               	bsf	status, 5	;RP0=1, select bank1
  5370  0F88  1303               	bcf	status, 6	;RP1=0, select bank1
  5371  0F89  00C8               	movwf	(_AngleHighByte)^080h	;volatile
  5372                           	line	70
  5373                           	
  5374  0F8A                     l11010:	
  5375                           ;robot.c: 70: AngleLowByte = ser_getch();
  5376  0F8A  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5377  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  5378  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  5379  0F91  00A2               	movwf	(??_robot_read+0)+0
  5380  0F92  0822               	movf	(??_robot_read+0)+0,w
  5381  0F93  1683               	bsf	status, 5	;RP0=1, select bank1
  5382  0F94  1303               	bcf	status, 6	;RP1=0, select bank1
  5383  0F95  00C9               	movwf	(_AngleLowByte)^080h	;volatile
  5384                           	line	71
  5385                           ;robot.c: 71: }
  5386  0F96  2FFF               	goto	l6041
  5387                           	line	72
  5388                           	
  5389  0F97                     l6038:	
  5390                           	
  5391  0F97                     l11012:	
  5392                           ;robot.c: 72: else if (readType == 2)
  5393  0F97  1283               	bcf	status, 5	;RP0=0, select bank0
  5394  0F98  0824               	movf	(robot_read@readType),w
  5395  0F99  3A02               	xorlw	02h
  5396  0F9A  1D03               	skipz
  5397  0F9B  2F9D               	goto	u4641
  5398  0F9C  2F9E               	goto	u4640
  5399  0F9D                     u4641:
  5400  0F9D  2FFF               	goto	l6041
  5401  0F9E                     u4640:
  5402                           	line	75
  5403                           	
  5404  0F9E                     l11014:	
  5405                           ;robot.c: 73: {
  5406                           ;robot.c: 75: ser_putch(142);
  5407  0F9E  308E               	movlw	(08Eh)
  5408  0F9F  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5409                           	line	76
  5410                           ;robot.c: 76: ser_putch(19);
  5411  0FA4  3013               	movlw	(013h)
  5412  0FA5  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5413                           	line	77
  5414                           	
  5415  0FAA                     l11016:	
  5416                           ;robot.c: 77: _delay((unsigned long)((5)*(20000000/4000.0)));
  5417                           	opt asmopt_off
  5418  0FAA  3021               movlw	33
  5419  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5420  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5421  0FAD  00A3               movwf	((??_robot_read+0)+0+1),f
  5422  0FAE  3076               	movlw	118
  5423  0FAF  00A2               movwf	((??_robot_read+0)+0),f
  5424  0FB0                     u4957:
  5425  0FB0  0BA2               	decfsz	((??_robot_read+0)+0),f
  5426  0FB1  2FB0               	goto	u4957
  5427  0FB2  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5428  0FB3  2FB0               	goto	u4957
  5429  0FB4  0064               	clrwdt
  5430                           opt asmopt_on
  5431                           
  5432                           	line	78
  5433                           	
  5434  0FB5                     l11018:	
  5435                           ;robot.c: 78: DistHighByte = ser_getch();
  5436  0FB5  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5437  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  5438  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  5439  0FBC  00A2               	movwf	(??_robot_read+0)+0
  5440  0FBD  0822               	movf	(??_robot_read+0)+0,w
  5441  0FBE  1683               	bsf	status, 5	;RP0=1, select bank1
  5442  0FBF  1303               	bcf	status, 6	;RP1=0, select bank1
  5443  0FC0  00CB               	movwf	(_DistHighByte)^080h	;volatile
  5444                           	line	79
  5445                           	
  5446  0FC1                     l11020:	
  5447                           ;robot.c: 79: DistLowByte = ser_getch();
  5448  0FC1  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5449  0FC6  1283               	bcf	status, 5	;RP0=0, select bank0
  5450  0FC7  1303               	bcf	status, 6	;RP1=0, select bank0
  5451  0FC8  00A2               	movwf	(??_robot_read+0)+0
  5452  0FC9  0822               	movf	(??_robot_read+0)+0,w
  5453  0FCA  1683               	bsf	status, 5	;RP0=1, select bank1
  5454  0FCB  1303               	bcf	status, 6	;RP1=0, select bank1
  5455  0FCC  00CC               	movwf	(_DistLowByte)^080h	;volatile
  5456                           	line	80
  5457                           	
  5458  0FCD                     l11022:	
  5459                           ;robot.c: 80: ser_putch(142);
  5460  0FCD  308E               	movlw	(08Eh)
  5461  0FCE  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5462                           	line	81
  5463                           	
  5464  0FD3                     l11024:	
  5465                           ;robot.c: 81: ser_putch(20);
  5466  0FD3  3014               	movlw	(014h)
  5467  0FD4  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  5468                           	line	82
  5469                           	
  5470  0FD9                     l11026:	
  5471                           ;robot.c: 82: _delay((unsigned long)((5)*(20000000/4000.0)));
  5472                           	opt asmopt_off
  5473  0FD9  3021               movlw	33
  5474  0FDA  1283               	bcf	status, 5	;RP0=0, select bank0
  5475  0FDB  1303               	bcf	status, 6	;RP1=0, select bank0
  5476  0FDC  00A3               movwf	((??_robot_read+0)+0+1),f
  5477  0FDD  3076               	movlw	118
  5478  0FDE  00A2               movwf	((??_robot_read+0)+0),f
  5479  0FDF                     u4967:
  5480  0FDF  0BA2               	decfsz	((??_robot_read+0)+0),f
  5481  0FE0  2FDF               	goto	u4967
  5482  0FE1  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5483  0FE2  2FDF               	goto	u4967
  5484  0FE3  0064               	clrwdt
  5485                           opt asmopt_on
  5486                           
  5487                           	line	83
  5488                           ;robot.c: 83: AngleHighByte = ser_getch();
  5489  0FE4  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5490  0FE9  1283               	bcf	status, 5	;RP0=0, select bank0
  5491  0FEA  1303               	bcf	status, 6	;RP1=0, select bank0
  5492  0FEB  00A2               	movwf	(??_robot_read+0)+0
  5493  0FEC  0822               	movf	(??_robot_read+0)+0,w
  5494  0FED  1683               	bsf	status, 5	;RP0=1, select bank1
  5495  0FEE  1303               	bcf	status, 6	;RP1=0, select bank1
  5496  0FEF  00C8               	movwf	(_AngleHighByte)^080h	;volatile
  5497                           	line	84
  5498                           ;robot.c: 84: AngleLowByte = ser_getch();
  5499  0FF0  160A  118A  262E   	fcall	_ser_getch
              120A  158A         
  5500  0FF5  1283               	bcf	status, 5	;RP0=0, select bank0
  5501  0FF6  1303               	bcf	status, 6	;RP1=0, select bank0
  5502  0FF7  00A2               	movwf	(??_robot_read+0)+0
  5503  0FF8  0822               	movf	(??_robot_read+0)+0,w
  5504  0FF9  1683               	bsf	status, 5	;RP0=1, select bank1
  5505  0FFA  1303               	bcf	status, 6	;RP1=0, select bank1
  5506  0FFB  00C9               	movwf	(_AngleLowByte)^080h	;volatile
  5507  0FFC  2FFF               	goto	l6041
  5508                           	line	85
  5509                           	
  5510  0FFD                     l6040:	
  5511  0FFD  2FFF               	goto	l6041
  5512                           	line	86
  5513                           	
  5514  0FFE                     l6039:	
  5515  0FFE  2FFF               	goto	l6041
  5516                           	
  5517  0FFF                     l6037:	
  5518                           	
  5519  0FFF                     l6041:	
  5520  0FFF  0008               	return
  5521                           	opt stack 0
  5522                           GLOBAL	__end_of_robot_read
  5523  1000                     	__end_of_robot_read:
  5524 ;; =============== function _robot_read ends ============
  5525                           
  5526                           	signat	_robot_read,4216
  5527                           	global	_lcd_init
  5528                           psect	text982,local,class=CODE,delta=2
  5529                           global __ptext982
  5530  15AC                     __ptext982:
  5531                           
  5532 ;; *************** function _lcd_init *****************
  5533 ;; Defined at:
  5534 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;		None               void
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         0       0       0       0       0
  5552 ;;Total ram usage:        0 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    4
  5555 ;; This function calls:
  5556 ;;		_lcd_write_control
  5557 ;; This function is called by:
  5558 ;;		_init
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           psect	text982
  5562                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5563                           	line	101
  5564                           	global	__size_of_lcd_init
  5565  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5566                           	
  5567  15AC                     _lcd_init:	
  5568                           	opt	stack 2
  5569                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5570                           	line	105
  5571                           	
  5572  15AC                     l10960:	
  5573                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5574  15AC  3002               	movlw	(02h)
  5575  15AD  1683               	bsf	status, 5	;RP0=1, select bank1
  5576  15AE  1303               	bcf	status, 6	;RP1=0, select bank1
  5577  15AF  009F               	movwf	(159)^080h	;volatile
  5578                           	line	108
  5579                           	
  5580  15B0                     l10962:	
  5581                           ;lcd.c: 108: PORTD = 0;
  5582  15B0  1283               	bcf	status, 5	;RP0=0, select bank0
  5583  15B1  1303               	bcf	status, 6	;RP1=0, select bank0
  5584  15B2  0188               	clrf	(8)	;volatile
  5585                           	line	109
  5586                           	
  5587  15B3                     l10964:	
  5588                           ;lcd.c: 109: PORTE = 0;
  5589  15B3  0189               	clrf	(9)	;volatile
  5590                           	line	111
  5591                           	
  5592  15B4                     l10966:	
  5593                           ;lcd.c: 111: TRISD = 0b00000000;
  5594  15B4  1683               	bsf	status, 5	;RP0=1, select bank1
  5595  15B5  1303               	bcf	status, 6	;RP1=0, select bank1
  5596  15B6  0188               	clrf	(136)^080h	;volatile
  5597                           	line	112
  5598                           	
  5599  15B7                     l10968:	
  5600                           ;lcd.c: 112: TRISE = 0b00000000;
  5601  15B7  0189               	clrf	(137)^080h	;volatile
  5602                           	line	115
  5603                           	
  5604  15B8                     l10970:	
  5605                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5606  15B8  3001               	movlw	(01h)
  5607  15B9  160A  118A  251D   	fcall	_lcd_write_control
              160A  118A         
  5608                           	line	116
  5609                           	
  5610  15BE                     l10972:	
  5611                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5612  15BE  3038               	movlw	(038h)
  5613  15BF  160A  118A  251D   	fcall	_lcd_write_control
              160A  118A         
  5614                           	line	117
  5615                           	
  5616  15C4                     l10974:	
  5617                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5618  15C4  300C               	movlw	(0Ch)
  5619  15C5  160A  118A  251D   	fcall	_lcd_write_control
              160A  118A         
  5620                           	line	118
  5621                           	
  5622  15CA                     l10976:	
  5623                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5624  15CA  3006               	movlw	(06h)
  5625  15CB  160A  118A  251D   	fcall	_lcd_write_control
              160A  118A         
  5626                           	line	119
  5627                           	
  5628  15D0                     l10978:	
  5629                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5630  15D0  3002               	movlw	(02h)
  5631  15D1  160A  118A  251D   	fcall	_lcd_write_control
              160A  118A         
  5632                           	line	121
  5633                           	
  5634  15D6                     l1429:	
  5635  15D6  0008               	return
  5636                           	opt stack 0
  5637                           GLOBAL	__end_of_lcd_init
  5638  15D7                     	__end_of_lcd_init:
  5639 ;; =============== function _lcd_init ends ============
  5640                           
  5641                           	signat	_lcd_init,88
  5642                           	global	_lcd_write_string
  5643                           psect	text983,local,class=CODE,delta=2
  5644                           global __ptext983
  5645  165A                     __ptext983:
  5646                           
  5647 ;; *************** function _lcd_write_string *****************
  5648 ;; Defined at:
  5649 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5652 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5653 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  5654 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5655 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5656 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;		None               void
  5661 ;; Registers used:
  5662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5668 ;;      Params:         0       2       0       0       0
  5669 ;;      Locals:         0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0
  5671 ;;      Totals:         0       2       0       0       0
  5672 ;;Total ram usage:        2 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    4
  5675 ;; This function calls:
  5676 ;;		_lcd_write_data
  5677 ;; This function is called by:
  5678 ;;		_UpdateDisplay
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           psect	text983
  5682                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5683                           	line	48
  5684                           	global	__size_of_lcd_write_string
  5685  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5686                           	
  5687  165A                     _lcd_write_string:	
  5688                           	opt	stack 1
  5689                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5690                           	line	50
  5691                           	
  5692  165A                     l10952:	
  5693                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5694  165A  2E74               	goto	l10958
  5695                           	
  5696  165B                     l1409:	
  5697                           	
  5698  165B                     l10954:	
  5699  165B  1283               	bcf	status, 5	;RP0=0, select bank0
  5700  165C  1303               	bcf	status, 6	;RP1=0, select bank0
  5701  165D  0828               	movf	(lcd_write_string@s+1),w
  5702  165E  00FF               	movwf	btemp+1
  5703  165F  0827               	movf	(lcd_write_string@s),w
  5704  1660  0084               	movwf	fsr0
  5705  1661  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5706  1666  160A  118A  24E3   	fcall	_lcd_write_data
              160A  118A         
  5707                           	
  5708  166B                     l10956:	
  5709  166B  3001               	movlw	low(01h)
  5710  166C  1283               	bcf	status, 5	;RP0=0, select bank0
  5711  166D  1303               	bcf	status, 6	;RP1=0, select bank0
  5712  166E  07A7               	addwf	(lcd_write_string@s),f
  5713  166F  1803               	skipnc
  5714  1670  0AA8               	incf	(lcd_write_string@s+1),f
  5715  1671  3000               	movlw	high(01h)
  5716  1672  07A8               	addwf	(lcd_write_string@s+1),f
  5717  1673  2E74               	goto	l10958
  5718                           	
  5719  1674                     l1408:	
  5720                           	
  5721  1674                     l10958:	
  5722  1674  1283               	bcf	status, 5	;RP0=0, select bank0
  5723  1675  1303               	bcf	status, 6	;RP1=0, select bank0
  5724  1676  0828               	movf	(lcd_write_string@s+1),w
  5725  1677  00FF               	movwf	btemp+1
  5726  1678  0827               	movf	(lcd_write_string@s),w
  5727  1679  0084               	movwf	fsr0
  5728  167A  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5729  167F  3800               	iorlw	0
  5730  1680  1D03               	skipz
  5731  1681  2E83               	goto	u4611
  5732  1682  2E84               	goto	u4610
  5733  1683                     u4611:
  5734  1683  2E5B               	goto	l10954
  5735  1684                     u4610:
  5736  1684  2E85               	goto	l1411
  5737                           	
  5738  1685                     l1410:	
  5739                           	line	51
  5740                           	
  5741  1685                     l1411:	
  5742  1685  0008               	return
  5743                           	opt stack 0
  5744                           GLOBAL	__end_of_lcd_write_string
  5745  1686                     	__end_of_lcd_write_string:
  5746 ;; =============== function _lcd_write_string ends ============
  5747                           
  5748                           	signat	_lcd_write_string,4216
  5749                           	global	_lcd_set_cursor
  5750                           psect	text984,local,class=CODE,delta=2
  5751                           global __ptext984
  5752  14CB                     __ptext984:
  5753                           
  5754 ;; *************** function _lcd_set_cursor *****************
  5755 ;; Defined at:
  5756 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  address         1    wreg     unsigned char 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  address         1    3[BANK0 ] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;		None               void
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5770 ;;      Params:         0       0       0       0       0
  5771 ;;      Locals:         0       1       0       0       0
  5772 ;;      Temps:          0       0       0       0       0
  5773 ;;      Totals:         0       1       0       0       0
  5774 ;;Total ram usage:        1 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    4
  5777 ;; This function calls:
  5778 ;;		_lcd_write_control
  5779 ;; This function is called by:
  5780 ;;		_UpdateDisplay
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           psect	text984
  5784                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5785                           	line	42
  5786                           	global	__size_of_lcd_set_cursor
  5787  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5788                           	
  5789  14CB                     _lcd_set_cursor:	
  5790                           	opt	stack 1
  5791                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5792                           ;lcd_set_cursor@address stored from wreg
  5793  14CB  1283               	bcf	status, 5	;RP0=0, select bank0
  5794  14CC  1303               	bcf	status, 6	;RP1=0, select bank0
  5795  14CD  00A3               	movwf	(lcd_set_cursor@address)
  5796                           	line	43
  5797                           	
  5798  14CE                     l10948:	
  5799                           ;lcd.c: 43: address |= 0b10000000;
  5800  14CE  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5801                           	line	44
  5802                           	
  5803  14CF                     l10950:	
  5804                           ;lcd.c: 44: lcd_write_control(address);
  5805  14CF  0823               	movf	(lcd_set_cursor@address),w
  5806  14D0  160A  118A  251D   	fcall	_lcd_write_control
              160A  118A         
  5807                           	line	45
  5808                           	
  5809  14D5                     l1405:	
  5810  14D5  0008               	return
  5811                           	opt stack 0
  5812                           GLOBAL	__end_of_lcd_set_cursor
  5813  14D6                     	__end_of_lcd_set_cursor:
  5814 ;; =============== function _lcd_set_cursor ends ============
  5815                           
  5816                           	signat	_lcd_set_cursor,4216
  5817                           	global	_abs
  5818                           psect	text985,local,class=CODE,delta=2
  5819                           global __ptext985
  5820  1713                     __ptext985:
  5821                           
  5822 ;; *************** function _abs *****************
  5823 ;; Defined at:
  5824 ;;		line 284 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  v               2    6[BANK0 ] int 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2    6[BANK0 ] int 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5838 ;;      Params:         0       2       0       0       0
  5839 ;;      Locals:         0       0       0       0       0
  5840 ;;      Temps:          0       2       0       0       0
  5841 ;;      Totals:         0       4       0       0       0
  5842 ;;Total ram usage:        4 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		___wmul
  5847 ;; This function is called by:
  5848 ;;		_robotFollow
  5849 ;;		_robotMoveSpeed
  5850 ;;		_robotTurnSpeed
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           psect	text985
  5854                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5855                           	line	284
  5856                           	global	__size_of_abs
  5857  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  5858                           	
  5859  1713                     _abs:	
  5860                           	opt	stack 2
  5861                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5862                           	line	285
  5863                           	
  5864  1713                     l10944:	
  5865                           ;robot.c: 285: return (v * ((v > 0) - (v < 0)));
  5866  1713  3000               	movlw	0
  5867  1714  1283               	bcf	status, 5	;RP0=0, select bank0
  5868  1715  1303               	bcf	status, 6	;RP1=0, select bank0
  5869  1716  1BA7               	btfsc	(abs@v+1),7
  5870  1717  3001               	movlw	1
  5871  1718  00A8               	movwf	(??_abs+0)+0
  5872  1719  01A9               	clrf	(??_abs+0)+0+1
  5873  171A  09A8               	comf	(??_abs+0)+0,f
  5874  171B  09A9               	comf	(??_abs+0)+1,f
  5875  171C  0AA8               	incf	(??_abs+0)+0,f
  5876  171D  1903               	skipnz
  5877  171E  0AA9               	incf	(??_abs+0)+1,f
  5878  171F  0827               	movf	(abs@v+1),w
  5879  1720  3A80               	xorlw	80h
  5880  1721  00FF               	movwf	btemp+1
  5881  1722  3080               	movlw	(high(01h))^80h
  5882  1723  027F               	subwf	btemp+1,w
  5883  1724  1D03               	skipz
  5884  1725  2F28               	goto	u4605
  5885  1726  3001               	movlw	low(01h)
  5886  1727  0226               	subwf	(abs@v),w
  5887  1728                     u4605:
  5888                           
  5889  1728  3000               	movlw	0
  5890  1729  1803               	skipnc
  5891  172A  3001               	movlw	1
  5892  172B  1283               	bcf	status, 5	;RP0=0, select bank0
  5893  172C  1303               	bcf	status, 6	;RP1=0, select bank0
  5894  172D  0728               	addwf	0+(??_abs+0)+0,w
  5895  172E  00A0               	movwf	(?___wmul)
  5896  172F  0829               	movf	1+(??_abs+0)+0,w
  5897  1730  1803               	skipnc
  5898  1731  0A29               	incf	1+(??_abs+0)+0,w
  5899  1732  00A1               	movwf	((?___wmul))+1
  5900  1733  0827               	movf	(abs@v+1),w
  5901  1734  01A3               	clrf	1+(?___wmul)+02h
  5902  1735  07A3               	addwf	1+(?___wmul)+02h
  5903  1736  0826               	movf	(abs@v),w
  5904  1737  01A2               	clrf	0+(?___wmul)+02h
  5905  1738  07A2               	addwf	0+(?___wmul)+02h
  5906                           
  5907  1739  160A  118A  2602   	fcall	___wmul
              160A  118A         
  5908  173E  1283               	bcf	status, 5	;RP0=0, select bank0
  5909  173F  1303               	bcf	status, 6	;RP1=0, select bank0
  5910  1740  0821               	movf	(1+(?___wmul)),w
  5911  1741  01A7               	clrf	(?_abs+1)
  5912  1742  07A7               	addwf	(?_abs+1)
  5913  1743  0820               	movf	(0+(?___wmul)),w
  5914  1744  01A6               	clrf	(?_abs)
  5915  1745  07A6               	addwf	(?_abs)
  5916                           
  5917  1746  2F47               	goto	l6089
  5918                           	
  5919  1747                     l10946:	
  5920                           	line	286
  5921                           	
  5922  1747                     l6089:	
  5923  1747  0008               	return
  5924                           	opt stack 0
  5925                           GLOBAL	__end_of_abs
  5926  1748                     	__end_of_abs:
  5927 ;; =============== function _abs ends ============
  5928                           
  5929                           	signat	_abs,4218
  5930                           	global	_robotTurn
  5931                           psect	text986,local,class=CODE,delta=2
  5932                           global __ptext986
  5933  0B05                     __ptext986:
  5934                           
  5935 ;; *************** function _robotTurn *****************
  5936 ;; Defined at:
  5937 ;;		line 112 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  angle           2    2[BANK0 ] int 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;		None               void
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       2       0       0       0
  5952 ;;      Locals:         0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0
  5954 ;;      Totals:         0       2       0       0       0
  5955 ;;Total ram usage:        2 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    4
  5958 ;; This function calls:
  5959 ;;		_ser_putch
  5960 ;; This function is called by:
  5961 ;;		_robotTurnSpeed
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           psect	text986
  5965                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5966                           	line	112
  5967                           	global	__size_of_robotTurn
  5968  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5969                           	
  5970  0B05                     _robotTurn:	
  5971                           	opt	stack 2
  5972                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5973                           	line	114
  5974                           	
  5975  0B05                     l10936:	
  5976                           ;robot.c: 114: if (angle > 0)
  5977  0B05  1283               	bcf	status, 5	;RP0=0, select bank0
  5978  0B06  1303               	bcf	status, 6	;RP1=0, select bank0
  5979  0B07  0823               	movf	(robotTurn@angle+1),w
  5980  0B08  3A80               	xorlw	80h
  5981  0B09  00FF               	movwf	btemp+1
  5982  0B0A  3080               	movlw	(high(01h))^80h
  5983  0B0B  027F               	subwf	btemp+1,w
  5984  0B0C  1D03               	skipz
  5985  0B0D  2B10               	goto	u4585
  5986  0B0E  3001               	movlw	low(01h)
  5987  0B0F  0222               	subwf	(robotTurn@angle),w
  5988  0B10                     u4585:
  5989                           
  5990  0B10  1C03               	skipc
  5991  0B11  2B13               	goto	u4581
  5992  0B12  2B14               	goto	u4580
  5993  0B13                     u4581:
  5994  0B13  2B33               	goto	l6047
  5995  0B14                     u4580:
  5996                           	line	116
  5997                           	
  5998  0B14                     l10938:	
  5999                           ;robot.c: 115: {
  6000                           ;robot.c: 116: ser_putch(137);
  6001  0B14  3089               	movlw	(089h)
  6002  0B15  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6003                           	line	118
  6004                           ;robot.c: 118: ser_putch(0);
  6005  0B1A  3000               	movlw	(0)
  6006  0B1B  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6007                           	line	120
  6008                           ;robot.c: 120: ser_putch(200);
  6009  0B20  30C8               	movlw	(0C8h)
  6010  0B21  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6011                           	line	122
  6012                           ;robot.c: 122: ser_putch(0);
  6013  0B26  3000               	movlw	(0)
  6014  0B27  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6015                           	line	124
  6016                           ;robot.c: 124: ser_putch(1);
  6017  0B2C  3001               	movlw	(01h)
  6018  0B2D  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6019                           	line	125
  6020                           ;robot.c: 125: }
  6021  0B32  2B78               	goto	l6051
  6022                           	line	126
  6023                           	
  6024  0B33                     l6047:	
  6025                           ;robot.c: 126: else if (angle < 0)
  6026  0B33  1283               	bcf	status, 5	;RP0=0, select bank0
  6027  0B34  1303               	bcf	status, 6	;RP1=0, select bank0
  6028  0B35  1FA3               	btfss	(robotTurn@angle+1),7
  6029  0B36  2B38               	goto	u4591
  6030  0B37  2B39               	goto	u4590
  6031  0B38                     u4591:
  6032  0B38  2B58               	goto	l10942
  6033  0B39                     u4590:
  6034                           	line	128
  6035                           	
  6036  0B39                     l10940:	
  6037                           ;robot.c: 127: {
  6038                           ;robot.c: 128: ser_putch(137);
  6039  0B39  3089               	movlw	(089h)
  6040  0B3A  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6041                           	line	130
  6042                           ;robot.c: 130: ser_putch(0);
  6043  0B3F  3000               	movlw	(0)
  6044  0B40  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6045                           	line	132
  6046                           ;robot.c: 132: ser_putch(200);
  6047  0B45  30C8               	movlw	(0C8h)
  6048  0B46  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6049                           	line	134
  6050                           ;robot.c: 134: ser_putch(255);
  6051  0B4B  30FF               	movlw	(0FFh)
  6052  0B4C  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6053                           	line	136
  6054                           ;robot.c: 136: ser_putch(255);
  6055  0B51  30FF               	movlw	(0FFh)
  6056  0B52  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6057                           	line	137
  6058                           ;robot.c: 137: }
  6059  0B57  2B78               	goto	l6051
  6060                           	line	138
  6061                           	
  6062  0B58                     l6049:	
  6063                           	line	140
  6064                           	
  6065  0B58                     l10942:	
  6066                           ;robot.c: 138: else
  6067                           ;robot.c: 139: {
  6068                           ;robot.c: 140: ser_putch(137);
  6069  0B58  3089               	movlw	(089h)
  6070  0B59  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6071                           	line	142
  6072                           ;robot.c: 142: ser_putch(0);
  6073  0B5E  3000               	movlw	(0)
  6074  0B5F  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6075                           	line	144
  6076                           ;robot.c: 144: ser_putch(0);
  6077  0B64  3000               	movlw	(0)
  6078  0B65  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6079                           	line	146
  6080                           ;robot.c: 146: ser_putch(0);
  6081  0B6A  3000               	movlw	(0)
  6082  0B6B  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6083                           	line	148
  6084                           ;robot.c: 148: ser_putch(0);
  6085  0B70  3000               	movlw	(0)
  6086  0B71  160A  118A  255D   	fcall	_ser_putch
              120A  158A         
  6087  0B76  2B78               	goto	l6051
  6088                           	line	149
  6089                           	
  6090  0B77                     l6050:	
  6091  0B77  2B78               	goto	l6051
  6092                           	
  6093  0B78                     l6048:	
  6094                           	line	150
  6095                           	
  6096  0B78                     l6051:	
  6097  0B78  0008               	return
  6098                           	opt stack 0
  6099                           GLOBAL	__end_of_robotTurn
  6100  0B79                     	__end_of_robotTurn:
  6101 ;; =============== function _robotTurn ends ============
  6102                           
  6103                           	signat	_robotTurn,4216
  6104                           	global	_RobotDrive
  6105                           psect	text987,local,class=CODE,delta=2
  6106                           global __ptext987
  6107  1748                     __ptext987:
  6108                           
  6109 ;; *************** function _RobotDrive *****************
  6110 ;; Defined at:
  6111 ;;		line 91 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  speed           2    2[BANK0 ] int 
  6114 ;;  radius          2    4[BANK0 ] int 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  radiushighBy    1   10[BANK0 ] unsigned char 
  6117 ;;  radiuslowByt    1    9[BANK0 ] unsigned char 
  6118 ;;  speedhighByt    1    8[BANK0 ] unsigned char 
  6119 ;;  speedlowByte    1    7[BANK0 ] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;		None               void
  6122 ;; Registers used:
  6123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6129 ;;      Params:         0       4       0       0       0
  6130 ;;      Locals:         0       4       0       0       0
  6131 ;;      Temps:          0       1       0       0       0
  6132 ;;      Totals:         0       9       0       0       0
  6133 ;;Total ram usage:        9 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    4
  6136 ;; This function calls:
  6137 ;;		_ser_putch
  6138 ;; This function is called by:
  6139 ;;		_robotFollow
  6140 ;;		_robotMoveSpeed
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           psect	text987
  6144                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6145                           	line	91
  6146                           	global	__size_of_RobotDrive
  6147  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  6148                           	
  6149  1748                     _RobotDrive:	
  6150                           	opt	stack 2
  6151                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6152                           	line	93
  6153                           	
  6154  1748                     l10920:	
  6155                           ;robot.c: 93: unsigned char speedlowByte = (unsigned char)(speed);
  6156  1748  1283               	bcf	status, 5	;RP0=0, select bank0
  6157  1749  1303               	bcf	status, 6	;RP1=0, select bank0
  6158  174A  0822               	movf	(RobotDrive@speed),w
  6159  174B  00A6               	movwf	(??_RobotDrive+0)+0
  6160  174C  0826               	movf	(??_RobotDrive+0)+0,w
  6161  174D  00A7               	movwf	(RobotDrive@speedlowByte)
  6162                           	line	94
  6163                           	
  6164  174E                     l10922:	
  6165                           ;robot.c: 94: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  6166  174E  0823               	movf	(RobotDrive@speed+1),w
  6167  174F  00A6               	movwf	(??_RobotDrive+0)+0
  6168  1750  0826               	movf	(??_RobotDrive+0)+0,w
  6169  1751  00A8               	movwf	(RobotDrive@speedhighByte)
  6170                           	line	95
  6171                           	
  6172  1752                     l10924:	
  6173                           ;robot.c: 95: unsigned char radiuslowByte = (unsigned char)(radius);
  6174  1752  0824               	movf	(RobotDrive@radius),w
  6175  1753  00A6               	movwf	(??_RobotDrive+0)+0
  6176  1754  0826               	movf	(??_RobotDrive+0)+0,w
  6177  1755  00A9               	movwf	(RobotDrive@radiuslowByte)
  6178                           	line	96
  6179                           ;robot.c: 96: unsigned char radiushighByte = (unsigned char)(radius >> 8);
  6180  1756  0825               	movf	(RobotDrive@radius+1),w
  6181  1757  00A6               	movwf	(??_RobotDrive+0)+0
  6182  1758  0826               	movf	(??_RobotDrive+0)+0,w
  6183  1759  00AA               	movwf	(RobotDrive@radiushighByte)
  6184                           	line	98
  6185                           	
  6186  175A                     l10926:	
  6187                           ;robot.c: 98: ser_putch(137);
  6188  175A  3089               	movlw	(089h)
  6189  175B  160A  118A  255D   	fcall	_ser_putch
              160A  118A         
  6190                           	line	100
  6191                           	
  6192  1760                     l10928:	
  6193                           ;robot.c: 100: ser_putch(speedhighByte);
  6194  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  6195  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  6196  1762  0828               	movf	(RobotDrive@speedhighByte),w
  6197  1763  160A  118A  255D   	fcall	_ser_putch
              160A  118A         
  6198                           	line	102
  6199                           	
  6200  1768                     l10930:	
  6201                           ;robot.c: 102: ser_putch(speedlowByte);
  6202  1768  1283               	bcf	status, 5	;RP0=0, select bank0
  6203  1769  1303               	bcf	status, 6	;RP1=0, select bank0
  6204  176A  0827               	movf	(RobotDrive@speedlowByte),w
  6205  176B  160A  118A  255D   	fcall	_ser_putch
              160A  118A         
  6206                           	line	104
  6207                           	
  6208  1770                     l10932:	
  6209                           ;robot.c: 104: ser_putch(radiushighByte);
  6210  1770  1283               	bcf	status, 5	;RP0=0, select bank0
  6211  1771  1303               	bcf	status, 6	;RP1=0, select bank0
  6212  1772  082A               	movf	(RobotDrive@radiushighByte),w
  6213  1773  160A  118A  255D   	fcall	_ser_putch
              160A  118A         
  6214                           	line	106
  6215                           	
  6216  1778                     l10934:	
  6217                           ;robot.c: 106: ser_putch(radiuslowByte);
  6218  1778  1283               	bcf	status, 5	;RP0=0, select bank0
  6219  1779  1303               	bcf	status, 6	;RP1=0, select bank0
  6220  177A  0829               	movf	(RobotDrive@radiuslowByte),w
  6221  177B  160A  118A  255D   	fcall	_ser_putch
              160A  118A         
  6222                           	line	107
  6223                           	
  6224  1780                     l6044:	
  6225  1780  0008               	return
  6226                           	opt stack 0
  6227                           GLOBAL	__end_of_RobotDrive
  6228  1781                     	__end_of_RobotDrive:
  6229 ;; =============== function _RobotDrive ends ============
  6230                           
  6231                           	signat	_RobotDrive,8312
  6232                           	global	_ser_getch
  6233                           psect	text988,local,class=CODE,delta=2
  6234                           global __ptext988
  6235  162E                     __ptext988:
  6236                           
  6237 ;; *************** function _ser_getch *****************
  6238 ;; Defined at:
  6239 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  c               1    1[BANK0 ] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      unsigned char 
  6246 ;; Registers used:
  6247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         0       0       0       0       0
  6254 ;;      Locals:         0       1       0       0       0
  6255 ;;      Temps:          0       1       0       0       0
  6256 ;;      Totals:         0       2       0       0       0
  6257 ;;Total ram usage:        2 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    4
  6260 ;; This function calls:
  6261 ;;		_ser_isrx
  6262 ;; This function is called by:
  6263 ;;		_robot_read
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           psect	text988
  6267                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6268                           	line	55
  6269                           	global	__size_of_ser_getch
  6270  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6271                           	
  6272  162E                     _ser_getch:	
  6273                           	opt	stack 1
  6274                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6275                           	line	58
  6276                           	
  6277  162E                     l10904:	
  6278                           ;ser.c: 56: unsigned char c;
  6279                           ;ser.c: 58: while (ser_isrx()==0)
  6280  162E  2E30               	goto	l10906
  6281                           	
  6282  162F                     l6793:	
  6283                           	line	59
  6284                           ;ser.c: 59: continue;
  6285  162F  2E30               	goto	l10906
  6286                           	
  6287  1630                     l6792:	
  6288                           	line	58
  6289                           	
  6290  1630                     l10906:	
  6291  1630  120A  158A  20B3   	fcall	_ser_isrx
              160A  118A         
  6292  1635  1C03               	btfss	status,0
  6293  1636  2E38               	goto	u4571
  6294  1637  2E39               	goto	u4570
  6295  1638                     u4571:
  6296  1638  2E30               	goto	l10906
  6297  1639                     u4570:
  6298                           	
  6299  1639                     l6794:	
  6300                           	line	61
  6301                           ;ser.c: 61: GIE=0;
  6302  1639  138B               	bcf	(95/8),(95)&7
  6303                           	line	62
  6304                           	
  6305  163A                     l10908:	
  6306                           ;ser.c: 62: c=rxfifo[rxoptr];
  6307  163A  1683               	bsf	status, 5	;RP0=1, select bank1
  6308  163B  1303               	bcf	status, 6	;RP1=0, select bank1
  6309  163C  0857               	movf	(_rxoptr)^080h,w
  6310  163D  3EA0               	addlw	_rxfifo&0ffh
  6311  163E  0084               	movwf	fsr0
  6312  163F  1383               	bcf	status, 7	;select IRP bank1
  6313  1640  0800               	movf	indf,w
  6314  1641  1283               	bcf	status, 5	;RP0=0, select bank0
  6315  1642  1303               	bcf	status, 6	;RP1=0, select bank0
  6316  1643  00A0               	movwf	(??_ser_getch+0)+0
  6317  1644  0820               	movf	(??_ser_getch+0)+0,w
  6318  1645  00A1               	movwf	(ser_getch@c)
  6319                           	line	63
  6320                           	
  6321  1646                     l10910:	
  6322                           ;ser.c: 63: ++rxoptr;
  6323  1646  3001               	movlw	(01h)
  6324  1647  00A0               	movwf	(??_ser_getch+0)+0
  6325  1648  0820               	movf	(??_ser_getch+0)+0,w
  6326  1649  1683               	bsf	status, 5	;RP0=1, select bank1
  6327  164A  1303               	bcf	status, 6	;RP1=0, select bank1
  6328  164B  07D7               	addwf	(_rxoptr)^080h,f	;volatile
  6329                           	line	64
  6330                           	
  6331  164C                     l10912:	
  6332                           ;ser.c: 64: rxoptr &= (16-1);
  6333  164C  300F               	movlw	(0Fh)
  6334  164D  1283               	bcf	status, 5	;RP0=0, select bank0
  6335  164E  1303               	bcf	status, 6	;RP1=0, select bank0
  6336  164F  00A0               	movwf	(??_ser_getch+0)+0
  6337  1650  0820               	movf	(??_ser_getch+0)+0,w
  6338  1651  1683               	bsf	status, 5	;RP0=1, select bank1
  6339  1652  1303               	bcf	status, 6	;RP1=0, select bank1
  6340  1653  05D7               	andwf	(_rxoptr)^080h,f	;volatile
  6341                           	line	65
  6342                           	
  6343  1654                     l10914:	
  6344                           ;ser.c: 65: GIE=1;
  6345  1654  178B               	bsf	(95/8),(95)&7
  6346                           	line	66
  6347                           	
  6348  1655                     l10916:	
  6349                           ;ser.c: 66: return c;
  6350  1655  1283               	bcf	status, 5	;RP0=0, select bank0
  6351  1656  1303               	bcf	status, 6	;RP1=0, select bank0
  6352  1657  0821               	movf	(ser_getch@c),w
  6353  1658  2E59               	goto	l6795
  6354                           	
  6355  1659                     l10918:	
  6356                           	line	67
  6357                           	
  6358  1659                     l6795:	
  6359  1659  0008               	return
  6360                           	opt stack 0
  6361                           GLOBAL	__end_of_ser_getch
  6362  165A                     	__end_of_ser_getch:
  6363 ;; =============== function _ser_getch ends ============
  6364                           
  6365                           	signat	_ser_getch,89
  6366                           	global	_sprintf
  6367                           psect	text989,local,class=CODE,delta=2
  6368                           global __ptext989
  6369  0DE2                     __ptext989:
  6370                           
  6371 ;; *************** function _sprintf *****************
  6372 ;; Defined at:
  6373 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  sp              1    wreg     PTR unsigned char 
  6376 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6377 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6378 ;;		 -> STR_13(13), 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6381 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6382 ;;  _val            4   31[BANK0 ] struct .
  6383 ;;  c               1   36[BANK0 ] char 
  6384 ;;  prec            1   30[BANK0 ] char 
  6385 ;;  flag            1   29[BANK0 ] unsigned char 
  6386 ;;  ap              1   28[BANK0 ] PTR void [1]
  6387 ;;		 -> ?_sprintf(2), 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  2   20[BANK0 ] int 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6397 ;;      Params:         0       5       0       0       0
  6398 ;;      Locals:         0       9       0       0       0
  6399 ;;      Temps:          0       3       0       0       0
  6400 ;;      Totals:         0      17       0       0       0
  6401 ;;Total ram usage:       17 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    4
  6404 ;; This function calls:
  6405 ;;		___lwdiv
  6406 ;;		___lwmod
  6407 ;; This function is called by:
  6408 ;;		_UpdateDisplay
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           psect	text989
  6412                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6413                           	line	488
  6414                           	global	__size_of_sprintf
  6415  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6416                           	
  6417  0DE2                     _sprintf:	
  6418                           	opt	stack 1
  6419                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6420                           ;sprintf@sp stored from wreg
  6421                           	line	537
  6422  0DE2  1283               	bcf	status, 5	;RP0=0, select bank0
  6423  0DE3  1303               	bcf	status, 6	;RP1=0, select bank0
  6424  0DE4  00C3               	movwf	(sprintf@sp)
  6425                           	
  6426  0DE5                     l10846:	
  6427  0DE5  3035               	movlw	(?_sprintf+01h)&0ffh
  6428  0DE6  00B9               	movwf	(??_sprintf+0)+0
  6429  0DE7  0839               	movf	(??_sprintf+0)+0,w
  6430  0DE8  00BC               	movwf	(sprintf@ap)
  6431                           	line	540
  6432  0DE9  2EC8               	goto	l10898
  6433                           	
  6434  0DEA                     l6833:	
  6435                           	line	542
  6436                           	
  6437  0DEA                     l10848:	
  6438  0DEA  0844               	movf	(sprintf@c),w
  6439  0DEB  3A25               	xorlw	025h
  6440  0DEC  1903               	skipnz
  6441  0DED  2DEF               	goto	u4491
  6442  0DEE  2DF0               	goto	u4490
  6443  0DEF                     u4491:
  6444  0DEF  2DFC               	goto	l6834
  6445  0DF0                     u4490:
  6446                           	line	545
  6447                           	
  6448  0DF0                     l10850:	
  6449  0DF0  0844               	movf	(sprintf@c),w
  6450  0DF1  00B9               	movwf	(??_sprintf+0)+0
  6451  0DF2  0843               	movf	(sprintf@sp),w
  6452  0DF3  0084               	movwf	fsr0
  6453  0DF4  0839               	movf	(??_sprintf+0)+0,w
  6454  0DF5  1383               	bcf	status, 7	;select IRP bank0
  6455  0DF6  0080               	movwf	indf
  6456                           	
  6457  0DF7                     l10852:	
  6458  0DF7  3001               	movlw	(01h)
  6459  0DF8  00B9               	movwf	(??_sprintf+0)+0
  6460  0DF9  0839               	movf	(??_sprintf+0)+0,w
  6461  0DFA  07C3               	addwf	(sprintf@sp),f
  6462                           	line	546
  6463  0DFB  2EC8               	goto	l10898
  6464                           	line	547
  6465                           	
  6466  0DFC                     l6834:	
  6467                           	line	552
  6468  0DFC  01BD               	clrf	(sprintf@flag)
  6469                           	line	638
  6470  0DFD  2E03               	goto	l10856
  6471                           	line	640
  6472                           	
  6473  0DFE                     l6836:	
  6474                           	line	641
  6475  0DFE  2EDC               	goto	l10900
  6476                           	line	700
  6477                           	
  6478  0DFF                     l6838:	
  6479  0DFF  2E18               	goto	l10858
  6480                           	line	701
  6481                           	
  6482  0E00                     l6839:	
  6483                           	line	702
  6484  0E00  2E18               	goto	l10858
  6485                           	line	805
  6486                           	
  6487  0E01                     l6841:	
  6488                           	line	816
  6489  0E01  2EC8               	goto	l10898
  6490                           	line	825
  6491                           	
  6492  0E02                     l10854:	
  6493  0E02  2E18               	goto	l10858
  6494                           	line	638
  6495                           	
  6496  0E03                     l6835:	
  6497                           	
  6498  0E03                     l10856:	
  6499  0E03  3001               	movlw	01h
  6500  0E04  07B4               	addwf	(sprintf@f),f
  6501  0E05  30FF               	movlw	-01h
  6502  0E06  0734               	addwf	(sprintf@f),w
  6503  0E07  0084               	movwf	fsr0
  6504  0E08  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6505  0E0D  00C4               	movwf	(sprintf@c)
  6506                           	; Switch size 1, requested type "space"
  6507                           ; Number of cases is 3, Range of values is 0 to 105
  6508                           ; switch strategies available:
  6509                           ; Name         Instructions Cycles
  6510                           ; simple_byte           10     6 (average)
  6511                           ; jumptable            260     6 (fixed)
  6512                           ; rangetable           110     6 (fixed)
  6513                           ; spacedrange          218     9 (fixed)
  6514                           ; locatedrange         106     3 (fixed)
  6515                           ;	Chosen strategy is simple_byte
  6516                           
  6517                           	opt asmopt_off
  6518  0E0E  3A00               	xorlw	0^0	; case 0
  6519  0E0F  1903               	skipnz
  6520  0E10  2EDC               	goto	l10900
  6521  0E11  3A64               	xorlw	100^0	; case 100
  6522  0E12  1903               	skipnz
  6523  0E13  2E18               	goto	l10858
  6524  0E14  3A0D               	xorlw	105^100	; case 105
  6525  0E15  1903               	skipnz
  6526  0E16  2E18               	goto	l10858
  6527  0E17  2EC8               	goto	l10898
  6528                           	opt asmopt_on
  6529                           
  6530                           	line	825
  6531                           	
  6532  0E18                     l6840:	
  6533                           	line	1254
  6534                           	
  6535  0E18                     l10858:	
  6536  0E18  083C               	movf	(sprintf@ap),w
  6537  0E19  0084               	movwf	fsr0
  6538  0E1A  1383               	bcf	status, 7	;select IRP bank0
  6539  0E1B  0800               	movf	indf,w
  6540  0E1C  00BF               	movwf	(sprintf@_val)
  6541  0E1D  0A84               	incf	fsr0,f
  6542  0E1E  0800               	movf	indf,w
  6543  0E1F  00C0               	movwf	(sprintf@_val+1)
  6544                           	
  6545  0E20                     l10860:	
  6546  0E20  3002               	movlw	(02h)
  6547  0E21  00B9               	movwf	(??_sprintf+0)+0
  6548  0E22  0839               	movf	(??_sprintf+0)+0,w
  6549  0E23  07BC               	addwf	(sprintf@ap),f
  6550                           	line	1256
  6551                           	
  6552  0E24                     l10862:	
  6553  0E24  1FC0               	btfss	(sprintf@_val+1),7
  6554  0E25  2E27               	goto	u4501
  6555  0E26  2E28               	goto	u4500
  6556  0E27                     u4501:
  6557  0E27  2E32               	goto	l10868
  6558  0E28                     u4500:
  6559                           	line	1257
  6560                           	
  6561  0E28                     l10864:	
  6562  0E28  3003               	movlw	(03h)
  6563  0E29  00B9               	movwf	(??_sprintf+0)+0
  6564  0E2A  0839               	movf	(??_sprintf+0)+0,w
  6565  0E2B  04BD               	iorwf	(sprintf@flag),f
  6566                           	line	1258
  6567                           	
  6568  0E2C                     l10866:	
  6569  0E2C  09BF               	comf	(sprintf@_val),f
  6570  0E2D  09C0               	comf	(sprintf@_val+1),f
  6571  0E2E  0ABF               	incf	(sprintf@_val),f
  6572  0E2F  1903               	skipnz
  6573  0E30  0AC0               	incf	(sprintf@_val+1),f
  6574  0E31  2E32               	goto	l10868
  6575                           	line	1259
  6576                           	
  6577  0E32                     l6842:	
  6578                           	line	1300
  6579                           	
  6580  0E32                     l10868:	
  6581  0E32  01C4               	clrf	(sprintf@c)
  6582  0E33  1403               	bsf	status,0
  6583  0E34  0DC4               	rlf	(sprintf@c),f
  6584                           	
  6585  0E35                     l10870:	
  6586  0E35  0844               	movf	(sprintf@c),w
  6587  0E36  3A05               	xorlw	05h
  6588  0E37  1D03               	skipz
  6589  0E38  2E3A               	goto	u4511
  6590  0E39  2E3B               	goto	u4510
  6591  0E3A                     u4511:
  6592  0E3A  2E3D               	goto	l10874
  6593  0E3B                     u4510:
  6594  0E3B  2E65               	goto	l10882
  6595                           	
  6596  0E3C                     l10872:	
  6597  0E3C  2E65               	goto	l10882
  6598                           	line	1301
  6599                           	
  6600  0E3D                     l6843:	
  6601                           	
  6602  0E3D                     l10874:	
  6603  0E3D  0844               	movf	(sprintf@c),w
  6604  0E3E  00B9               	movwf	(??_sprintf+0)+0
  6605  0E3F  0739               	addwf	(??_sprintf+0)+0,w
  6606  0E40  3E01               	addlw	low((_dpowers-__stringbase))
  6607  0E41  0084               	movwf	fsr0
  6608  0E42  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6609  0E47  00BA               	movwf	(??_sprintf+1)+0
  6610  0E48  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6611  0E4D  00BB               	movwf	(??_sprintf+1)+0+1
  6612  0E4E  083B               	movf	1+(??_sprintf+1)+0,w
  6613  0E4F  0240               	subwf	(sprintf@_val+1),w
  6614  0E50  1D03               	skipz
  6615  0E51  2E54               	goto	u4525
  6616  0E52  083A               	movf	0+(??_sprintf+1)+0,w
  6617  0E53  023F               	subwf	(sprintf@_val),w
  6618  0E54                     u4525:
  6619  0E54  1803               	skipnc
  6620  0E55  2E57               	goto	u4521
  6621  0E56  2E58               	goto	u4520
  6622  0E57                     u4521:
  6623  0E57  2E5A               	goto	l10878
  6624  0E58                     u4520:
  6625  0E58  2E65               	goto	l10882
  6626                           	line	1302
  6627                           	
  6628  0E59                     l10876:	
  6629  0E59  2E65               	goto	l10882
  6630                           	
  6631  0E5A                     l6845:	
  6632                           	line	1300
  6633                           	
  6634  0E5A                     l10878:	
  6635  0E5A  3001               	movlw	(01h)
  6636  0E5B  00B9               	movwf	(??_sprintf+0)+0
  6637  0E5C  0839               	movf	(??_sprintf+0)+0,w
  6638  0E5D  07C4               	addwf	(sprintf@c),f
  6639                           	
  6640  0E5E                     l10880:	
  6641  0E5E  0844               	movf	(sprintf@c),w
  6642  0E5F  3A05               	xorlw	05h
  6643  0E60  1D03               	skipz
  6644  0E61  2E63               	goto	u4531
  6645  0E62  2E64               	goto	u4530
  6646  0E63                     u4531:
  6647  0E63  2E3D               	goto	l10874
  6648  0E64                     u4530:
  6649  0E64  2E65               	goto	l10882
  6650                           	
  6651  0E65                     l6844:	
  6652                           	line	1433
  6653                           	
  6654  0E65                     l10882:	
  6655  0E65  083D               	movf	(sprintf@flag),w
  6656  0E66  3903               	andlw	03h
  6657  0E67  1903               	btfsc	status,2
  6658  0E68  2E6A               	goto	u4541
  6659  0E69  2E6B               	goto	u4540
  6660  0E6A                     u4541:
  6661  0E6A  2E77               	goto	l10888
  6662  0E6B                     u4540:
  6663                           	line	1434
  6664                           	
  6665  0E6B                     l10884:	
  6666  0E6B  302D               	movlw	(02Dh)
  6667  0E6C  00B9               	movwf	(??_sprintf+0)+0
  6668  0E6D  0843               	movf	(sprintf@sp),w
  6669  0E6E  0084               	movwf	fsr0
  6670  0E6F  0839               	movf	(??_sprintf+0)+0,w
  6671  0E70  1383               	bcf	status, 7	;select IRP bank0
  6672  0E71  0080               	movwf	indf
  6673                           	
  6674  0E72                     l10886:	
  6675  0E72  3001               	movlw	(01h)
  6676  0E73  00B9               	movwf	(??_sprintf+0)+0
  6677  0E74  0839               	movf	(??_sprintf+0)+0,w
  6678  0E75  07C3               	addwf	(sprintf@sp),f
  6679  0E76  2E77               	goto	l10888
  6680                           	
  6681  0E77                     l6846:	
  6682                           	line	1467
  6683                           	
  6684  0E77                     l10888:	
  6685  0E77  0844               	movf	(sprintf@c),w
  6686  0E78  00B9               	movwf	(??_sprintf+0)+0
  6687  0E79  0839               	movf	(??_sprintf+0)+0,w
  6688  0E7A  00BE               	movwf	(sprintf@prec)
  6689                           	line	1469
  6690  0E7B  2EBC               	goto	l10896
  6691                           	
  6692  0E7C                     l6848:	
  6693                           	line	1484
  6694                           	
  6695  0E7C                     l10890:	
  6696  0E7C  300A               	movlw	low(0Ah)
  6697  0E7D  00AE               	movwf	(?___lwmod)
  6698  0E7E  3000               	movlw	high(0Ah)
  6699  0E7F  00AF               	movwf	((?___lwmod))+1
  6700  0E80  083E               	movf	(sprintf@prec),w
  6701  0E81  00B9               	movwf	(??_sprintf+0)+0
  6702  0E82  0739               	addwf	(??_sprintf+0)+0,w
  6703  0E83  3E01               	addlw	low((_dpowers-__stringbase))
  6704  0E84  0084               	movwf	fsr0
  6705  0E85  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6706  0E8A  00A6               	movwf	(?___lwdiv)
  6707  0E8B  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6708  0E90  00A7               	movwf	(?___lwdiv+1)
  6709  0E91  0840               	movf	(sprintf@_val+1),w
  6710  0E92  01A9               	clrf	1+(?___lwdiv)+02h
  6711  0E93  07A9               	addwf	1+(?___lwdiv)+02h
  6712  0E94  083F               	movf	(sprintf@_val),w
  6713  0E95  01A8               	clrf	0+(?___lwdiv)+02h
  6714  0E96  07A8               	addwf	0+(?___lwdiv)+02h
  6715                           
  6716  0E97  120A  158A  219F   	fcall	___lwdiv
              120A  158A         
  6717  0E9C  1283               	bcf	status, 5	;RP0=0, select bank0
  6718  0E9D  1303               	bcf	status, 6	;RP1=0, select bank0
  6719  0E9E  0827               	movf	(1+(?___lwdiv)),w
  6720  0E9F  01B1               	clrf	1+(?___lwmod)+02h
  6721  0EA0  07B1               	addwf	1+(?___lwmod)+02h
  6722  0EA1  0826               	movf	(0+(?___lwdiv)),w
  6723  0EA2  01B0               	clrf	0+(?___lwmod)+02h
  6724  0EA3  07B0               	addwf	0+(?___lwmod)+02h
  6725                           
  6726  0EA4  120A  158A  20CC   	fcall	___lwmod
              120A  158A         
  6727  0EA9  1283               	bcf	status, 5	;RP0=0, select bank0
  6728  0EAA  1303               	bcf	status, 6	;RP1=0, select bank0
  6729  0EAB  082E               	movf	(0+(?___lwmod)),w
  6730  0EAC  3E30               	addlw	030h
  6731  0EAD  00BA               	movwf	(??_sprintf+1)+0
  6732  0EAE  083A               	movf	(??_sprintf+1)+0,w
  6733  0EAF  00C4               	movwf	(sprintf@c)
  6734                           	line	1516
  6735                           	
  6736  0EB0                     l10892:	
  6737  0EB0  0844               	movf	(sprintf@c),w
  6738  0EB1  00B9               	movwf	(??_sprintf+0)+0
  6739  0EB2  0843               	movf	(sprintf@sp),w
  6740  0EB3  0084               	movwf	fsr0
  6741  0EB4  0839               	movf	(??_sprintf+0)+0,w
  6742  0EB5  1383               	bcf	status, 7	;select IRP bank0
  6743  0EB6  0080               	movwf	indf
  6744                           	
  6745  0EB7                     l10894:	
  6746  0EB7  3001               	movlw	(01h)
  6747  0EB8  00B9               	movwf	(??_sprintf+0)+0
  6748  0EB9  0839               	movf	(??_sprintf+0)+0,w
  6749  0EBA  07C3               	addwf	(sprintf@sp),f
  6750  0EBB  2EBC               	goto	l10896
  6751                           	line	1517
  6752                           	
  6753  0EBC                     l6847:	
  6754                           	line	1469
  6755                           	
  6756  0EBC                     l10896:	
  6757  0EBC  30FF               	movlw	(-1)
  6758  0EBD  00B9               	movwf	(??_sprintf+0)+0
  6759  0EBE  0839               	movf	(??_sprintf+0)+0,w
  6760  0EBF  07BE               	addwf	(sprintf@prec),f
  6761  0EC0  083E               	movf	((sprintf@prec)),w
  6762  0EC1  3AFF               	xorlw	-1
  6763  0EC2  1D03               	skipz
  6764  0EC3  2EC5               	goto	u4551
  6765  0EC4  2EC6               	goto	u4550
  6766  0EC5                     u4551:
  6767  0EC5  2E7C               	goto	l10890
  6768  0EC6                     u4550:
  6769  0EC6  2EC8               	goto	l10898
  6770                           	
  6771  0EC7                     l6849:	
  6772  0EC7  2EC8               	goto	l10898
  6773                           	line	1525
  6774                           	
  6775  0EC8                     l6832:	
  6776                           	line	540
  6777                           	
  6778  0EC8                     l10898:	
  6779  0EC8  3001               	movlw	01h
  6780  0EC9  07B4               	addwf	(sprintf@f),f
  6781  0ECA  30FF               	movlw	-01h
  6782  0ECB  0734               	addwf	(sprintf@f),w
  6783  0ECC  0084               	movwf	fsr0
  6784  0ECD  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6785  0ED2  00B9               	movwf	(??_sprintf+0)+0
  6786  0ED3  0839               	movf	(??_sprintf+0)+0,w
  6787  0ED4  00C4               	movwf	(sprintf@c)
  6788  0ED5  08C4               	movf	((sprintf@c)),f
  6789  0ED6  1D03               	skipz
  6790  0ED7  2ED9               	goto	u4561
  6791  0ED8  2EDA               	goto	u4560
  6792  0ED9                     u4561:
  6793  0ED9  2DEA               	goto	l10848
  6794  0EDA                     u4560:
  6795  0EDA  2EDC               	goto	l10900
  6796                           	
  6797  0EDB                     l6850:	
  6798  0EDB  2EDC               	goto	l10900
  6799                           	line	1527
  6800                           	
  6801  0EDC                     l6837:	
  6802                           	line	1530
  6803                           	
  6804  0EDC                     l10900:	
  6805  0EDC  0843               	movf	(sprintf@sp),w
  6806  0EDD  0084               	movwf	fsr0
  6807  0EDE  1383               	bcf	status, 7	;select IRP bank0
  6808  0EDF  0180               	clrf	indf
  6809  0EE0  2EE1               	goto	l6851
  6810                           	line	1532
  6811                           	
  6812  0EE1                     l10902:	
  6813                           	line	1533
  6814                           ;	Return value of _sprintf is never used
  6815                           	
  6816  0EE1                     l6851:	
  6817  0EE1  0008               	return
  6818                           	opt stack 0
  6819                           GLOBAL	__end_of_sprintf
  6820  0EE2                     	__end_of_sprintf:
  6821 ;; =============== function _sprintf ends ============
  6822                           
  6823                           	signat	_sprintf,4698
  6824                           	global	_ADCconvert
  6825                           psect	text990,local,class=CODE,delta=2
  6826                           global __ptext990
  6827  0015                     __ptext990:
  6828                           
  6829 ;; *************** function _ADCconvert *****************
  6830 ;; Defined at:
  6831 ;;		line 60 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;		None
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;		None               void
  6838 ;; Registers used:
  6839 ;;		wreg, status,2, status,0, pclath, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6845 ;;      Params:         0       0       0       0       0
  6846 ;;      Locals:         0       0       0       0       0
  6847 ;;      Temps:          0       2       0       0       0
  6848 ;;      Totals:         0       2       0       0       0
  6849 ;;Total ram usage:        2 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:    4
  6852 ;; This function calls:
  6853 ;;		___wmul
  6854 ;;		___lwdiv
  6855 ;; This function is called by:
  6856 ;;		_readAvgDistance
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           psect	text990
  6860                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6861                           	line	60
  6862                           	global	__size_of_ADCconvert
  6863  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  6864                           	
  6865  0015                     _ADCconvert:	
  6866                           	opt	stack 1
  6867                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  6868                           	line	66
  6869                           	
  6870  0015                     l10804:	
  6871                           ;infrared.c: 66: if (adcVal >= 213 && adcVal < 234)
  6872  0015  3000               	movlw	high(0D5h)
  6873  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  6874  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  6875  0018  026D               	subwf	(_adcVal+1),w	;volatile
  6876  0019  30D5               	movlw	low(0D5h)
  6877  001A  1903               	skipnz
  6878  001B  026C               	subwf	(_adcVal),w	;volatile
  6879  001C  1C03               	skipc
  6880  001D  281F               	goto	u4351
  6881  001E  2820               	goto	u4350
  6882  001F                     u4351:
  6883  001F  2863               	goto	l10810
  6884  0020                     u4350:
  6885                           	
  6886  0020                     l10806:	
  6887  0020  3000               	movlw	high(0EAh)
  6888  0021  026D               	subwf	(_adcVal+1),w	;volatile
  6889  0022  30EA               	movlw	low(0EAh)
  6890  0023  1903               	skipnz
  6891  0024  026C               	subwf	(_adcVal),w	;volatile
  6892  0025  1803               	skipnc
  6893  0026  2828               	goto	u4361
  6894  0027  2829               	goto	u4360
  6895  0028                     u4361:
  6896  0028  2863               	goto	l10810
  6897  0029                     u4360:
  6898                           	line	68
  6899                           	
  6900  0029                     l10808:	
  6901                           ;infrared.c: 67: {
  6902                           ;infrared.c: 68: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  6903  0029  3015               	movlw	low(015h)
  6904  002A  00A6               	movwf	(?___lwdiv)
  6905  002B  3000               	movlw	high(015h)
  6906  002C  00A7               	movwf	((?___lwdiv))+1
  6907  002D  096C               	comf	(_adcVal),w	;volatile
  6908  002E  00AE               	movwf	(??_ADCconvert+0)+0
  6909  002F  096D               	comf	(_adcVal+1),w	;volatile
  6910  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6911  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  6912  0032  1903               	skipnz
  6913  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6914  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  6915  0035  3EEA               	addlw	low(0EAh)
  6916  0036  00A0               	movwf	(?___wmul)
  6917  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  6918  0038  1803               	skipnc
  6919  0039  3E01               	addlw	1
  6920  003A  3E00               	addlw	high(0EAh)
  6921  003B  00A1               	movwf	1+(?___wmul)
  6922  003C  3005               	movlw	low(05h)
  6923  003D  00A2               	movwf	0+(?___wmul)+02h
  6924  003E  3000               	movlw	high(05h)
  6925  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  6926  0040  160A  118A  2602   	fcall	___wmul
              120A  118A         
  6927  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  6928  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  6929  0047  0821               	movf	(1+(?___wmul)),w
  6930  0048  01A9               	clrf	1+(?___lwdiv)+02h
  6931  0049  07A9               	addwf	1+(?___lwdiv)+02h
  6932  004A  0820               	movf	(0+(?___wmul)),w
  6933  004B  01A8               	clrf	0+(?___lwdiv)+02h
  6934  004C  07A8               	addwf	0+(?___lwdiv)+02h
  6935                           
  6936  004D  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  6937  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  6938  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  6939  0054  0826               	movf	(0+(?___lwdiv)),w
  6940  0055  3E0F               	addlw	low(0Fh)
  6941  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  6942  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  6943  0058  00B4               	movwf	(_IRdistance)^080h	;volatile
  6944  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  6945  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  6946  005B  0827               	movf	(1+(?___lwdiv)),w
  6947  005C  1803               	skipnc
  6948  005D  3E01               	addlw	1
  6949  005E  3E00               	addlw	high(0Fh)
  6950  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  6951  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  6952  0061  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  6953                           	line	69
  6954                           ;infrared.c: 69: }
  6955  0062  2A37               	goto	l3025
  6956                           	line	70
  6957                           	
  6958  0063                     l3012:	
  6959                           	
  6960  0063                     l10810:	
  6961                           ;infrared.c: 70: else if (adcVal >= 170 && adcVal < 213)
  6962  0063  3000               	movlw	high(0AAh)
  6963  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  6964  0065  026D               	subwf	(_adcVal+1),w	;volatile
  6965  0066  30AA               	movlw	low(0AAh)
  6966  0067  1903               	skipnz
  6967  0068  026C               	subwf	(_adcVal),w	;volatile
  6968  0069  1C03               	skipc
  6969  006A  286C               	goto	u4371
  6970  006B  286D               	goto	u4370
  6971  006C                     u4371:
  6972  006C  28B0               	goto	l10816
  6973  006D                     u4370:
  6974                           	
  6975  006D                     l10812:	
  6976  006D  3000               	movlw	high(0D5h)
  6977  006E  026D               	subwf	(_adcVal+1),w	;volatile
  6978  006F  30D5               	movlw	low(0D5h)
  6979  0070  1903               	skipnz
  6980  0071  026C               	subwf	(_adcVal),w	;volatile
  6981  0072  1803               	skipnc
  6982  0073  2875               	goto	u4381
  6983  0074  2876               	goto	u4380
  6984  0075                     u4381:
  6985  0075  28B0               	goto	l10816
  6986  0076                     u4380:
  6987                           	line	72
  6988                           	
  6989  0076                     l10814:	
  6990                           ;infrared.c: 71: {
  6991                           ;infrared.c: 72: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  6992  0076  302B               	movlw	low(02Bh)
  6993  0077  00A6               	movwf	(?___lwdiv)
  6994  0078  3000               	movlw	high(02Bh)
  6995  0079  00A7               	movwf	((?___lwdiv))+1
  6996  007A  096C               	comf	(_adcVal),w	;volatile
  6997  007B  00AE               	movwf	(??_ADCconvert+0)+0
  6998  007C  096D               	comf	(_adcVal+1),w	;volatile
  6999  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7000  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  7001  007F  1903               	skipnz
  7002  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7003  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  7004  0082  3ED5               	addlw	low(0D5h)
  7005  0083  00A0               	movwf	(?___wmul)
  7006  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  7007  0085  1803               	skipnc
  7008  0086  3E01               	addlw	1
  7009  0087  3E00               	addlw	high(0D5h)
  7010  0088  00A1               	movwf	1+(?___wmul)
  7011  0089  300A               	movlw	low(0Ah)
  7012  008A  00A2               	movwf	0+(?___wmul)+02h
  7013  008B  3000               	movlw	high(0Ah)
  7014  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  7015  008D  160A  118A  2602   	fcall	___wmul
              120A  118A         
  7016  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  7017  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  7018  0094  0821               	movf	(1+(?___wmul)),w
  7019  0095  01A9               	clrf	1+(?___lwdiv)+02h
  7020  0096  07A9               	addwf	1+(?___lwdiv)+02h
  7021  0097  0820               	movf	(0+(?___wmul)),w
  7022  0098  01A8               	clrf	0+(?___lwdiv)+02h
  7023  0099  07A8               	addwf	0+(?___lwdiv)+02h
  7024                           
  7025  009A  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  7026  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  7027  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  7028  00A1  0826               	movf	(0+(?___lwdiv)),w
  7029  00A2  3E14               	addlw	low(014h)
  7030  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  7031  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  7032  00A5  00B4               	movwf	(_IRdistance)^080h	;volatile
  7033  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  7034  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  7035  00A8  0827               	movf	(1+(?___lwdiv)),w
  7036  00A9  1803               	skipnc
  7037  00AA  3E01               	addlw	1
  7038  00AB  3E00               	addlw	high(014h)
  7039  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  7040  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  7041  00AE  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  7042                           	line	73
  7043                           ;infrared.c: 73: }
  7044  00AF  2A37               	goto	l3025
  7045                           	line	74
  7046                           	
  7047  00B0                     l3014:	
  7048                           	
  7049  00B0                     l10816:	
  7050                           ;infrared.c: 74: else if (adcVal >= 128 && adcVal < 170)
  7051  00B0  3000               	movlw	high(080h)
  7052  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  7053  00B2  026D               	subwf	(_adcVal+1),w	;volatile
  7054  00B3  3080               	movlw	low(080h)
  7055  00B4  1903               	skipnz
  7056  00B5  026C               	subwf	(_adcVal),w	;volatile
  7057  00B6  1C03               	skipc
  7058  00B7  28B9               	goto	u4391
  7059  00B8  28BA               	goto	u4390
  7060  00B9                     u4391:
  7061  00B9  28FD               	goto	l10822
  7062  00BA                     u4390:
  7063                           	
  7064  00BA                     l10818:	
  7065  00BA  3000               	movlw	high(0AAh)
  7066  00BB  026D               	subwf	(_adcVal+1),w	;volatile
  7067  00BC  30AA               	movlw	low(0AAh)
  7068  00BD  1903               	skipnz
  7069  00BE  026C               	subwf	(_adcVal),w	;volatile
  7070  00BF  1803               	skipnc
  7071  00C0  28C2               	goto	u4401
  7072  00C1  28C3               	goto	u4400
  7073  00C2                     u4401:
  7074  00C2  28FD               	goto	l10822
  7075  00C3                     u4400:
  7076                           	line	76
  7077                           	
  7078  00C3                     l10820:	
  7079                           ;infrared.c: 75: {
  7080                           ;infrared.c: 76: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  7081  00C3  302A               	movlw	low(02Ah)
  7082  00C4  00A6               	movwf	(?___lwdiv)
  7083  00C5  3000               	movlw	high(02Ah)
  7084  00C6  00A7               	movwf	((?___lwdiv))+1
  7085  00C7  096C               	comf	(_adcVal),w	;volatile
  7086  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  7087  00C9  096D               	comf	(_adcVal+1),w	;volatile
  7088  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7089  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  7090  00CC  1903               	skipnz
  7091  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7092  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  7093  00CF  3EAA               	addlw	low(0AAh)
  7094  00D0  00A0               	movwf	(?___wmul)
  7095  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  7096  00D2  1803               	skipnc
  7097  00D3  3E01               	addlw	1
  7098  00D4  3E00               	addlw	high(0AAh)
  7099  00D5  00A1               	movwf	1+(?___wmul)
  7100  00D6  300A               	movlw	low(0Ah)
  7101  00D7  00A2               	movwf	0+(?___wmul)+02h
  7102  00D8  3000               	movlw	high(0Ah)
  7103  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  7104  00DA  160A  118A  2602   	fcall	___wmul
              120A  118A         
  7105  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  7106  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  7107  00E1  0821               	movf	(1+(?___wmul)),w
  7108  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  7109  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  7110  00E4  0820               	movf	(0+(?___wmul)),w
  7111  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  7112  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  7113                           
  7114  00E7  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  7115  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  7116  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  7117  00EE  0826               	movf	(0+(?___lwdiv)),w
  7118  00EF  3E1E               	addlw	low(01Eh)
  7119  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  7120  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  7121  00F2  00B4               	movwf	(_IRdistance)^080h	;volatile
  7122  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  7123  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  7124  00F5  0827               	movf	(1+(?___lwdiv)),w
  7125  00F6  1803               	skipnc
  7126  00F7  3E01               	addlw	1
  7127  00F8  3E00               	addlw	high(01Eh)
  7128  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  7129  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  7130  00FB  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  7131                           	line	77
  7132                           ;infrared.c: 77: }
  7133  00FC  2A37               	goto	l3025
  7134                           	line	78
  7135                           	
  7136  00FD                     l3016:	
  7137                           	
  7138  00FD                     l10822:	
  7139                           ;infrared.c: 78: else if (adcVal >= 107 && adcVal < 128)
  7140  00FD  3000               	movlw	high(06Bh)
  7141  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  7142  00FF  026D               	subwf	(_adcVal+1),w	;volatile
  7143  0100  306B               	movlw	low(06Bh)
  7144  0101  1903               	skipnz
  7145  0102  026C               	subwf	(_adcVal),w	;volatile
  7146  0103  1C03               	skipc
  7147  0104  2906               	goto	u4411
  7148  0105  2907               	goto	u4410
  7149  0106                     u4411:
  7150  0106  294A               	goto	l10828
  7151  0107                     u4410:
  7152                           	
  7153  0107                     l10824:	
  7154  0107  3000               	movlw	high(080h)
  7155  0108  026D               	subwf	(_adcVal+1),w	;volatile
  7156  0109  3080               	movlw	low(080h)
  7157  010A  1903               	skipnz
  7158  010B  026C               	subwf	(_adcVal),w	;volatile
  7159  010C  1803               	skipnc
  7160  010D  290F               	goto	u4421
  7161  010E  2910               	goto	u4420
  7162  010F                     u4421:
  7163  010F  294A               	goto	l10828
  7164  0110                     u4420:
  7165                           	line	80
  7166                           	
  7167  0110                     l10826:	
  7168                           ;infrared.c: 79: {
  7169                           ;infrared.c: 80: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  7170  0110  3015               	movlw	low(015h)
  7171  0111  00A6               	movwf	(?___lwdiv)
  7172  0112  3000               	movlw	high(015h)
  7173  0113  00A7               	movwf	((?___lwdiv))+1
  7174  0114  096C               	comf	(_adcVal),w	;volatile
  7175  0115  00AE               	movwf	(??_ADCconvert+0)+0
  7176  0116  096D               	comf	(_adcVal+1),w	;volatile
  7177  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7178  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  7179  0119  1903               	skipnz
  7180  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7181  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  7182  011C  3E80               	addlw	low(080h)
  7183  011D  00A0               	movwf	(?___wmul)
  7184  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  7185  011F  1803               	skipnc
  7186  0120  3E01               	addlw	1
  7187  0121  3E00               	addlw	high(080h)
  7188  0122  00A1               	movwf	1+(?___wmul)
  7189  0123  300A               	movlw	low(0Ah)
  7190  0124  00A2               	movwf	0+(?___wmul)+02h
  7191  0125  3000               	movlw	high(0Ah)
  7192  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  7193  0127  160A  118A  2602   	fcall	___wmul
              120A  118A         
  7194  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  7195  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  7196  012E  0821               	movf	(1+(?___wmul)),w
  7197  012F  01A9               	clrf	1+(?___lwdiv)+02h
  7198  0130  07A9               	addwf	1+(?___lwdiv)+02h
  7199  0131  0820               	movf	(0+(?___wmul)),w
  7200  0132  01A8               	clrf	0+(?___lwdiv)+02h
  7201  0133  07A8               	addwf	0+(?___lwdiv)+02h
  7202                           
  7203  0134  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  7204  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  7205  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  7206  013B  0826               	movf	(0+(?___lwdiv)),w
  7207  013C  3E28               	addlw	low(028h)
  7208  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  7209  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  7210  013F  00B4               	movwf	(_IRdistance)^080h	;volatile
  7211  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  7212  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  7213  0142  0827               	movf	(1+(?___lwdiv)),w
  7214  0143  1803               	skipnc
  7215  0144  3E01               	addlw	1
  7216  0145  3E00               	addlw	high(028h)
  7217  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  7218  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  7219  0148  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  7220                           	line	81
  7221                           ;infrared.c: 81: }
  7222  0149  2A37               	goto	l3025
  7223                           	line	82
  7224                           	
  7225  014A                     l3018:	
  7226                           	
  7227  014A                     l10828:	
  7228                           ;infrared.c: 82: else if (adcVal >= 77 && adcVal < 107)
  7229  014A  3000               	movlw	high(04Dh)
  7230  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  7231  014C  026D               	subwf	(_adcVal+1),w	;volatile
  7232  014D  304D               	movlw	low(04Dh)
  7233  014E  1903               	skipnz
  7234  014F  026C               	subwf	(_adcVal),w	;volatile
  7235  0150  1C03               	skipc
  7236  0151  2953               	goto	u4431
  7237  0152  2954               	goto	u4430
  7238  0153                     u4431:
  7239  0153  2997               	goto	l10834
  7240  0154                     u4430:
  7241                           	
  7242  0154                     l10830:	
  7243  0154  3000               	movlw	high(06Bh)
  7244  0155  026D               	subwf	(_adcVal+1),w	;volatile
  7245  0156  306B               	movlw	low(06Bh)
  7246  0157  1903               	skipnz
  7247  0158  026C               	subwf	(_adcVal),w	;volatile
  7248  0159  1803               	skipnc
  7249  015A  295C               	goto	u4441
  7250  015B  295D               	goto	u4440
  7251  015C                     u4441:
  7252  015C  2997               	goto	l10834
  7253  015D                     u4440:
  7254                           	line	84
  7255                           	
  7256  015D                     l10832:	
  7257                           ;infrared.c: 83: {
  7258                           ;infrared.c: 84: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  7259  015D  301E               	movlw	low(01Eh)
  7260  015E  00A6               	movwf	(?___lwdiv)
  7261  015F  3000               	movlw	high(01Eh)
  7262  0160  00A7               	movwf	((?___lwdiv))+1
  7263  0161  096C               	comf	(_adcVal),w	;volatile
  7264  0162  00AE               	movwf	(??_ADCconvert+0)+0
  7265  0163  096D               	comf	(_adcVal+1),w	;volatile
  7266  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7267  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  7268  0166  1903               	skipnz
  7269  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7270  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  7271  0169  3E6B               	addlw	low(06Bh)
  7272  016A  00A0               	movwf	(?___wmul)
  7273  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  7274  016C  1803               	skipnc
  7275  016D  3E01               	addlw	1
  7276  016E  3E00               	addlw	high(06Bh)
  7277  016F  00A1               	movwf	1+(?___wmul)
  7278  0170  300A               	movlw	low(0Ah)
  7279  0171  00A2               	movwf	0+(?___wmul)+02h
  7280  0172  3000               	movlw	high(0Ah)
  7281  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  7282  0174  160A  118A  2602   	fcall	___wmul
              120A  118A         
  7283  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  7284  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  7285  017B  0821               	movf	(1+(?___wmul)),w
  7286  017C  01A9               	clrf	1+(?___lwdiv)+02h
  7287  017D  07A9               	addwf	1+(?___lwdiv)+02h
  7288  017E  0820               	movf	(0+(?___wmul)),w
  7289  017F  01A8               	clrf	0+(?___lwdiv)+02h
  7290  0180  07A8               	addwf	0+(?___lwdiv)+02h
  7291                           
  7292  0181  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  7293  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  7294  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  7295  0188  0826               	movf	(0+(?___lwdiv)),w
  7296  0189  3E32               	addlw	low(032h)
  7297  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  7298  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  7299  018C  00B4               	movwf	(_IRdistance)^080h	;volatile
  7300  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  7301  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  7302  018F  0827               	movf	(1+(?___lwdiv)),w
  7303  0190  1803               	skipnc
  7304  0191  3E01               	addlw	1
  7305  0192  3E00               	addlw	high(032h)
  7306  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  7307  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  7308  0195  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  7309                           	line	85
  7310                           ;infrared.c: 85: }
  7311  0196  2A37               	goto	l3025
  7312                           	line	86
  7313                           	
  7314  0197                     l3020:	
  7315                           	
  7316  0197                     l10834:	
  7317                           ;infrared.c: 86: else if (adcVal >= 56 && adcVal < 77)
  7318  0197  3000               	movlw	high(038h)
  7319  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  7320  0199  026D               	subwf	(_adcVal+1),w	;volatile
  7321  019A  3038               	movlw	low(038h)
  7322  019B  1903               	skipnz
  7323  019C  026C               	subwf	(_adcVal),w	;volatile
  7324  019D  1C03               	skipc
  7325  019E  29A0               	goto	u4451
  7326  019F  29A1               	goto	u4450
  7327  01A0                     u4451:
  7328  01A0  29E4               	goto	l10840
  7329  01A1                     u4450:
  7330                           	
  7331  01A1                     l10836:	
  7332  01A1  3000               	movlw	high(04Dh)
  7333  01A2  026D               	subwf	(_adcVal+1),w	;volatile
  7334  01A3  304D               	movlw	low(04Dh)
  7335  01A4  1903               	skipnz
  7336  01A5  026C               	subwf	(_adcVal),w	;volatile
  7337  01A6  1803               	skipnc
  7338  01A7  29A9               	goto	u4461
  7339  01A8  29AA               	goto	u4460
  7340  01A9                     u4461:
  7341  01A9  29E4               	goto	l10840
  7342  01AA                     u4460:
  7343                           	line	88
  7344                           	
  7345  01AA                     l10838:	
  7346                           ;infrared.c: 87: {
  7347                           ;infrared.c: 88: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  7348  01AA  3015               	movlw	low(015h)
  7349  01AB  00A6               	movwf	(?___lwdiv)
  7350  01AC  3000               	movlw	high(015h)
  7351  01AD  00A7               	movwf	((?___lwdiv))+1
  7352  01AE  096C               	comf	(_adcVal),w	;volatile
  7353  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  7354  01B0  096D               	comf	(_adcVal+1),w	;volatile
  7355  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7356  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  7357  01B3  1903               	skipnz
  7358  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7359  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  7360  01B6  3E4D               	addlw	low(04Dh)
  7361  01B7  00A0               	movwf	(?___wmul)
  7362  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  7363  01B9  1803               	skipnc
  7364  01BA  3E01               	addlw	1
  7365  01BB  3E00               	addlw	high(04Dh)
  7366  01BC  00A1               	movwf	1+(?___wmul)
  7367  01BD  300A               	movlw	low(0Ah)
  7368  01BE  00A2               	movwf	0+(?___wmul)+02h
  7369  01BF  3000               	movlw	high(0Ah)
  7370  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  7371  01C1  160A  118A  2602   	fcall	___wmul
              120A  118A         
  7372  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  7373  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  7374  01C8  0821               	movf	(1+(?___wmul)),w
  7375  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  7376  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  7377  01CB  0820               	movf	(0+(?___wmul)),w
  7378  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  7379  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  7380                           
  7381  01CE  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  7382  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  7383  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  7384  01D5  0826               	movf	(0+(?___lwdiv)),w
  7385  01D6  3E3C               	addlw	low(03Ch)
  7386  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  7387  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  7388  01D9  00B4               	movwf	(_IRdistance)^080h	;volatile
  7389  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  7390  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  7391  01DC  0827               	movf	(1+(?___lwdiv)),w
  7392  01DD  1803               	skipnc
  7393  01DE  3E01               	addlw	1
  7394  01DF  3E00               	addlw	high(03Ch)
  7395  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  7396  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  7397  01E2  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  7398                           	line	89
  7399                           ;infrared.c: 89: }
  7400  01E3  2A37               	goto	l3025
  7401                           	line	90
  7402                           	
  7403  01E4                     l3022:	
  7404                           	
  7405  01E4                     l10840:	
  7406                           ;infrared.c: 90: else if (adcVal >= 43 && adcVal < 56)
  7407  01E4  3000               	movlw	high(02Bh)
  7408  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  7409  01E6  026D               	subwf	(_adcVal+1),w	;volatile
  7410  01E7  302B               	movlw	low(02Bh)
  7411  01E8  1903               	skipnz
  7412  01E9  026C               	subwf	(_adcVal),w	;volatile
  7413  01EA  1C03               	skipc
  7414  01EB  29ED               	goto	u4471
  7415  01EC  29EE               	goto	u4470
  7416  01ED                     u4471:
  7417  01ED  2A37               	goto	l3025
  7418  01EE                     u4470:
  7419                           	
  7420  01EE                     l10842:	
  7421  01EE  3000               	movlw	high(038h)
  7422  01EF  026D               	subwf	(_adcVal+1),w	;volatile
  7423  01F0  3038               	movlw	low(038h)
  7424  01F1  1903               	skipnz
  7425  01F2  026C               	subwf	(_adcVal),w	;volatile
  7426  01F3  1803               	skipnc
  7427  01F4  29F6               	goto	u4481
  7428  01F5  29F7               	goto	u4480
  7429  01F6                     u4481:
  7430  01F6  2A37               	goto	l3025
  7431  01F7                     u4480:
  7432                           	line	92
  7433                           	
  7434  01F7                     l10844:	
  7435                           ;infrared.c: 91: {
  7436                           ;infrared.c: 92: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  7437  01F7  300D               	movlw	low(0Dh)
  7438  01F8  00A6               	movwf	(?___lwdiv)
  7439  01F9  3000               	movlw	high(0Dh)
  7440  01FA  00A7               	movwf	((?___lwdiv))+1
  7441  01FB  096C               	comf	(_adcVal),w	;volatile
  7442  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  7443  01FD  096D               	comf	(_adcVal+1),w	;volatile
  7444  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7445  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  7446  0200  1903               	skipnz
  7447  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7448  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  7449  0203  3E38               	addlw	low(038h)
  7450  0204  00A0               	movwf	(?___wmul)
  7451  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  7452  0206  1803               	skipnc
  7453  0207  3E01               	addlw	1
  7454  0208  3E00               	addlw	high(038h)
  7455  0209  00A1               	movwf	1+(?___wmul)
  7456  020A  300A               	movlw	low(0Ah)
  7457  020B  00A2               	movwf	0+(?___wmul)+02h
  7458  020C  3000               	movlw	high(0Ah)
  7459  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  7460  020E  160A  118A  2602   	fcall	___wmul
              120A  118A         
  7461  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  7462  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  7463  0215  0821               	movf	(1+(?___wmul)),w
  7464  0216  01A9               	clrf	1+(?___lwdiv)+02h
  7465  0217  07A9               	addwf	1+(?___lwdiv)+02h
  7466  0218  0820               	movf	(0+(?___wmul)),w
  7467  0219  01A8               	clrf	0+(?___lwdiv)+02h
  7468  021A  07A8               	addwf	0+(?___lwdiv)+02h
  7469                           
  7470  021B  120A  158A  219F   	fcall	___lwdiv
              120A  118A         
  7471  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  7472  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  7473  0222  0826               	movf	(0+(?___lwdiv)),w
  7474  0223  3E46               	addlw	low(046h)
  7475  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  7476  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  7477  0226  00B4               	movwf	(_IRdistance)^080h	;volatile
  7478  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  7479  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  7480  0229  0827               	movf	(1+(?___lwdiv)),w
  7481  022A  1803               	skipnc
  7482  022B  3E01               	addlw	1
  7483  022C  3E00               	addlw	high(046h)
  7484  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  7485  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  7486  022F  00B5               	movwf	1+(_IRdistance)^080h	;volatile
  7487  0230  2A37               	goto	l3025
  7488                           	line	93
  7489                           	
  7490  0231                     l3024:	
  7491  0231  2A37               	goto	l3025
  7492                           	line	94
  7493                           	
  7494  0232                     l3023:	
  7495  0232  2A37               	goto	l3025
  7496                           	
  7497  0233                     l3021:	
  7498  0233  2A37               	goto	l3025
  7499                           	
  7500  0234                     l3019:	
  7501  0234  2A37               	goto	l3025
  7502                           	
  7503  0235                     l3017:	
  7504  0235  2A37               	goto	l3025
  7505                           	
  7506  0236                     l3015:	
  7507  0236  2A37               	goto	l3025
  7508                           	
  7509  0237                     l3013:	
  7510                           	
  7511  0237                     l3025:	
  7512  0237  0008               	return
  7513                           	opt stack 0
  7514                           GLOBAL	__end_of_ADCconvert
  7515  0238                     	__end_of_ADCconvert:
  7516 ;; =============== function _ADCconvert ends ============
  7517                           
  7518                           	signat	_ADCconvert,88
  7519                           	global	_rotate
  7520                           psect	text991,local,class=CODE,delta=2
  7521                           global __ptext991
  7522  09EF                     __ptext991:
  7523                           
  7524 ;; *************** function _rotate *****************
  7525 ;; Defined at:
  7526 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7529 ;;  direction       1    5[BANK0 ] unsigned char 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  i               2    8[BANK0 ] unsigned int 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;		None               void
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0, pclath, cstack
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7541 ;;      Params:         0       3       0       0       0
  7542 ;;      Locals:         0       2       0       0       0
  7543 ;;      Temps:          0       2       0       0       0
  7544 ;;      Totals:         0       7       0       0       0
  7545 ;;Total ram usage:        7 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    4
  7548 ;; This function calls:
  7549 ;;		_spi_transfer
  7550 ;; This function is called by:
  7551 ;;		_calibrateIR
  7552 ;;		_scan360
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           psect	text991
  7556                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7557                           	line	66
  7558                           	global	__size_of_rotate
  7559  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7560                           	
  7561  09EF                     _rotate:	
  7562                           	opt	stack 2
  7563                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7564                           	line	68
  7565                           	
  7566  09EF                     l10776:	
  7567                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  7568  09EF  1283               	bcf	status, 5	;RP0=0, select bank0
  7569  09F0  1303               	bcf	status, 6	;RP1=0, select bank0
  7570  09F1  1407               	bsf	(56/8),(56)&7
  7571  09F2  1487               	bsf	(57/8),(57)&7
  7572                           	line	69
  7573                           	
  7574  09F3                     l10778:	
  7575                           ;steppermotor.c: 69: if (direction == 0)
  7576  09F3  08A5               	movf	(rotate@direction),f
  7577  09F4  1D03               	skipz
  7578  09F5  29F7               	goto	u4331
  7579  09F6  29F8               	goto	u4330
  7580  09F7                     u4331:
  7581  09F7  29FF               	goto	l10782
  7582  09F8                     u4330:
  7583                           	line	70
  7584                           	
  7585  09F8                     l10780:	
  7586                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  7587  09F8  300B               	movlw	(0Bh)
  7588  09F9  160A  118A  2509   	fcall	_spi_transfer
              120A  158A         
  7589  09FE  2A06               	goto	l10784
  7590                           	line	71
  7591                           	
  7592  09FF                     l3726:	
  7593                           	line	72
  7594                           	
  7595  09FF                     l10782:	
  7596                           ;steppermotor.c: 71: else
  7597                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  7598  09FF  3009               	movlw	(09h)
  7599  0A00  160A  118A  2509   	fcall	_spi_transfer
              120A  158A         
  7600  0A05  2A06               	goto	l10784
  7601                           	
  7602  0A06                     l3727:	
  7603                           	line	73
  7604                           	
  7605  0A06                     l10784:	
  7606                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  7607  0A06  1283               	bcf	status, 5	;RP0=0, select bank0
  7608  0A07  1303               	bcf	status, 6	;RP1=0, select bank0
  7609  0A08  1007               	bcf	(56/8),(56)&7
  7610                           	
  7611  0A09                     l10786:	
  7612  0A09  1087               	bcf	(57/8),(57)&7
  7613                           	line	74
  7614                           	
  7615  0A0A                     l10788:	
  7616                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  7617  0A0A  01A8               	clrf	(rotate@i)
  7618  0A0B  01A9               	clrf	(rotate@i+1)
  7619  0A0C  2A23               	goto	l3728
  7620                           	line	75
  7621                           	
  7622  0A0D                     l3729:	
  7623                           	line	76
  7624                           ;steppermotor.c: 75: {
  7625                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  7626  0A0D  1507               	bsf	(58/8),(58)&7
  7627  0A0E  0000               	nop
  7628  0A0F  1283               	bcf	status, 5	;RP0=0, select bank0
  7629  0A10  1303               	bcf	status, 6	;RP1=0, select bank0
  7630  0A11  1107               	bcf	(58/8),(58)&7
  7631                           	line	77
  7632                           	
  7633  0A12                     l10790:	
  7634                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  7635                           	opt asmopt_off
  7636  0A12  3062               movlw	98
  7637  0A13  00A7               movwf	((??_rotate+0)+0+1),f
  7638  0A14  3065               	movlw	101
  7639  0A15  00A6               movwf	((??_rotate+0)+0),f
  7640  0A16                     u4977:
  7641  0A16  0BA6               	decfsz	((??_rotate+0)+0),f
  7642  0A17  2A16               	goto	u4977
  7643  0A18  0BA7               	decfsz	((??_rotate+0)+0+1),f
  7644  0A19  2A16               	goto	u4977
  7645  0A1A  2A1B               	nop2
  7646                           opt asmopt_on
  7647                           
  7648                           	line	74
  7649  0A1B  3001               	movlw	low(01h)
  7650  0A1C  1283               	bcf	status, 5	;RP0=0, select bank0
  7651  0A1D  1303               	bcf	status, 6	;RP1=0, select bank0
  7652  0A1E  07A8               	addwf	(rotate@i),f
  7653  0A1F  1803               	skipnc
  7654  0A20  0AA9               	incf	(rotate@i+1),f
  7655  0A21  3000               	movlw	high(01h)
  7656  0A22  07A9               	addwf	(rotate@i+1),f
  7657                           	
  7658  0A23                     l3728:	
  7659  0A23  0824               	movf	(rotate@numsteps+1),w
  7660  0A24  0229               	subwf	(rotate@i+1),w
  7661  0A25  1D03               	skipz
  7662  0A26  2A29               	goto	u4345
  7663  0A27  0823               	movf	(rotate@numsteps),w
  7664  0A28  0228               	subwf	(rotate@i),w
  7665  0A29                     u4345:
  7666  0A29  1C03               	skipc
  7667  0A2A  2A2C               	goto	u4341
  7668  0A2B  2A2D               	goto	u4340
  7669  0A2C                     u4341:
  7670  0A2C  2A0D               	goto	l3729
  7671  0A2D                     u4340:
  7672                           	
  7673  0A2D                     l3730:	
  7674                           	line	79
  7675                           ;steppermotor.c: 78: }
  7676                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  7677  0A2D  1407               	bsf	(56/8),(56)&7
  7678  0A2E  1487               	bsf	(57/8),(57)&7
  7679                           	line	80
  7680                           	
  7681  0A2F                     l10792:	
  7682                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  7683  0A2F  3000               	movlw	(0)
  7684  0A30  160A  118A  2509   	fcall	_spi_transfer
              120A  158A         
  7685                           	line	81
  7686                           	
  7687  0A35                     l10794:	
  7688                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  7689  0A35  1283               	bcf	status, 5	;RP0=0, select bank0
  7690  0A36  1303               	bcf	status, 6	;RP1=0, select bank0
  7691  0A37  1007               	bcf	(56/8),(56)&7
  7692                           	
  7693  0A38                     l10796:	
  7694  0A38  1087               	bcf	(57/8),(57)&7
  7695                           	line	82
  7696                           	
  7697  0A39                     l10798:	
  7698                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  7699  0A39  1507               	bsf	(58/8),(58)&7
  7700                           	
  7701  0A3A                     l10800:	
  7702  0A3A  0000               	nop
  7703                           	
  7704  0A3B                     l10802:	
  7705  0A3B  1283               	bcf	status, 5	;RP0=0, select bank0
  7706  0A3C  1303               	bcf	status, 6	;RP1=0, select bank0
  7707  0A3D  1107               	bcf	(58/8),(58)&7
  7708                           	line	83
  7709                           	
  7710  0A3E                     l3731:	
  7711  0A3E  0008               	return
  7712                           	opt stack 0
  7713                           GLOBAL	__end_of_rotate
  7714  0A3F                     	__end_of_rotate:
  7715 ;; =============== function _rotate ends ============
  7716                           
  7717                           	signat	_rotate,8312
  7718                           	global	_robo_init
  7719                           psect	text992,local,class=CODE,delta=2
  7720                           global __ptext992
  7721  07DE                     __ptext992:
  7722                           
  7723 ;; *************** function _robo_init *****************
  7724 ;; Defined at:
  7725 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;		None               void
  7732 ;; Registers used:
  7733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7739 ;;      Params:         0       0       0       0       0
  7740 ;;      Locals:         0       0       0       0       0
  7741 ;;      Temps:          0       0       0       0       0
  7742 ;;      Totals:         0       0       0       0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:    4
  7746 ;; This function calls:
  7747 ;;		_ser_putch
  7748 ;; This function is called by:
  7749 ;;		_init
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           psect	text992
  7753                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7754                           	line	36
  7755                           	global	__size_of_robo_init
  7756  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  7757                           	
  7758  07DE                     _robo_init:	
  7759                           	opt	stack 2
  7760                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7761                           	line	37
  7762                           	
  7763  07DE                     l10774:	
  7764                           ;robot.c: 37: ser_putch(128);
  7765  07DE  3080               	movlw	(080h)
  7766  07DF  160A  118A  255D   	fcall	_ser_putch
              120A  118A         
  7767                           	line	38
  7768                           ;robot.c: 38: ser_putch(132);
  7769  07E4  3084               	movlw	(084h)
  7770  07E5  160A  118A  255D   	fcall	_ser_putch
              120A  118A         
  7771                           	line	39
  7772                           ;robot.c: 39: ser_putch(150);
  7773  07EA  3096               	movlw	(096h)
  7774  07EB  160A  118A  255D   	fcall	_ser_putch
              120A  118A         
  7775                           	line	40
  7776                           ;robot.c: 40: ser_putch(0);
  7777  07F0  3000               	movlw	(0)
  7778  07F1  160A  118A  255D   	fcall	_ser_putch
              120A  118A         
  7779                           	line	41
  7780                           	
  7781  07F6                     l6033:	
  7782  07F6  0008               	return
  7783                           	opt stack 0
  7784                           GLOBAL	__end_of_robo_init
  7785  07F7                     	__end_of_robo_init:
  7786 ;; =============== function _robo_init ends ============
  7787                           
  7788                           	signat	_robo_init,88
  7789                           	global	_lcd_write_data
  7790                           psect	text993,local,class=CODE,delta=2
  7791                           global __ptext993
  7792  14E3                     __ptext993:
  7793                           
  7794 ;; *************** function _lcd_write_data *****************
  7795 ;; Defined at:
  7796 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  databyte        1    wreg     unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  databyte        1    2[BANK0 ] unsigned char 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;		None               void
  7803 ;; Registers used:
  7804 ;;		wreg
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7810 ;;      Params:         0       0       0       0       0
  7811 ;;      Locals:         0       1       0       0       0
  7812 ;;      Temps:          0       2       0       0       0
  7813 ;;      Totals:         0       3       0       0       0
  7814 ;;Total ram usage:        3 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    3
  7817 ;; This function calls:
  7818 ;;		Nothing
  7819 ;; This function is called by:
  7820 ;;		_lcd_write_string
  7821 ;;		_lcd_write_2_digit_bcd
  7822 ;;		_lcd_write_3_digit_bcd
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           psect	text993
  7826                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7827                           	line	30
  7828                           	global	__size_of_lcd_write_data
  7829  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7830                           	
  7831  14E3                     _lcd_write_data:	
  7832                           	opt	stack 1
  7833                           ; Regs used in _lcd_write_data: [wreg]
  7834                           ;lcd_write_data@databyte stored from wreg
  7835  14E3  1283               	bcf	status, 5	;RP0=0, select bank0
  7836  14E4  1303               	bcf	status, 6	;RP1=0, select bank0
  7837  14E5  00A2               	movwf	(lcd_write_data@databyte)
  7838                           	line	31
  7839                           	
  7840  14E6                     l10766:	
  7841                           ;lcd.c: 31: RE2 = 0;
  7842  14E6  1109               	bcf	(74/8),(74)&7
  7843                           	line	32
  7844                           ;lcd.c: 32: RE1 = 0;
  7845  14E7  1089               	bcf	(73/8),(73)&7
  7846                           	line	33
  7847                           ;lcd.c: 33: RE0 = 1;
  7848  14E8  1409               	bsf	(72/8),(72)&7
  7849                           	line	34
  7850                           	
  7851  14E9                     l10768:	
  7852                           ;lcd.c: 34: PORTD = databyte;
  7853  14E9  0822               	movf	(lcd_write_data@databyte),w
  7854  14EA  0088               	movwf	(8)	;volatile
  7855                           	line	35
  7856                           	
  7857  14EB                     l10770:	
  7858                           ;lcd.c: 35: RE2 = 1;
  7859  14EB  1509               	bsf	(74/8),(74)&7
  7860                           	line	36
  7861                           	
  7862  14EC                     l10772:	
  7863                           ;lcd.c: 36: RE2 = 0;
  7864  14EC  1109               	bcf	(74/8),(74)&7
  7865                           	line	37
  7866                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  7867                           	opt asmopt_off
  7868  14ED  3007               movlw	7
  7869  14EE  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  7870  14EF  307D               	movlw	125
  7871  14F0  00A0               movwf	((??_lcd_write_data+0)+0),f
  7872  14F1                     u4987:
  7873  14F1  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  7874  14F2  2CF1               	goto	u4987
  7875  14F3  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  7876  14F4  2CF1               	goto	u4987
  7877                           opt asmopt_on
  7878                           
  7879                           	line	38
  7880                           	
  7881  14F5                     l1402:	
  7882  14F5  0008               	return
  7883                           	opt stack 0
  7884                           GLOBAL	__end_of_lcd_write_data
  7885  14F6                     	__end_of_lcd_write_data:
  7886 ;; =============== function _lcd_write_data ends ============
  7887                           
  7888                           	signat	_lcd_write_data,4216
  7889                           	global	_lcd_write_control
  7890                           psect	text994,local,class=CODE,delta=2
  7891                           global __ptext994
  7892  151D                     __ptext994:
  7893                           
  7894 ;; *************** function _lcd_write_control *****************
  7895 ;; Defined at:
  7896 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  databyte        1    wreg     unsigned char 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  databyte        1    2[BANK0 ] unsigned char 
  7901 ;; Return value:  Size  Location     Type
  7902 ;;		None               void
  7903 ;; Registers used:
  7904 ;;		wreg
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7910 ;;      Params:         0       0       0       0       0
  7911 ;;      Locals:         0       1       0       0       0
  7912 ;;      Temps:          0       2       0       0       0
  7913 ;;      Totals:         0       3       0       0       0
  7914 ;;Total ram usage:        3 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    3
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_lcd_set_cursor
  7921 ;;		_lcd_init
  7922 ;;		_UpdateDisplay
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           psect	text994
  7926                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7927                           	line	18
  7928                           	global	__size_of_lcd_write_control
  7929  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  7930                           	
  7931  151D                     _lcd_write_control:	
  7932                           	opt	stack 1
  7933                           ; Regs used in _lcd_write_control: [wreg]
  7934                           ;lcd_write_control@databyte stored from wreg
  7935  151D  1283               	bcf	status, 5	;RP0=0, select bank0
  7936  151E  1303               	bcf	status, 6	;RP1=0, select bank0
  7937  151F  00A2               	movwf	(lcd_write_control@databyte)
  7938                           	line	19
  7939                           	
  7940  1520                     l10758:	
  7941                           ;lcd.c: 19: RE2 = 0;
  7942  1520  1109               	bcf	(74/8),(74)&7
  7943                           	line	20
  7944                           ;lcd.c: 20: RE1 = 0;
  7945  1521  1089               	bcf	(73/8),(73)&7
  7946                           	line	21
  7947                           ;lcd.c: 21: RE0 = 0;
  7948  1522  1009               	bcf	(72/8),(72)&7
  7949                           	line	22
  7950                           	
  7951  1523                     l10760:	
  7952                           ;lcd.c: 22: PORTD = databyte;
  7953  1523  0822               	movf	(lcd_write_control@databyte),w
  7954  1524  0088               	movwf	(8)	;volatile
  7955                           	line	23
  7956                           	
  7957  1525                     l10762:	
  7958                           ;lcd.c: 23: RE2 = 1;
  7959  1525  1509               	bsf	(74/8),(74)&7
  7960                           	line	24
  7961                           	
  7962  1526                     l10764:	
  7963                           ;lcd.c: 24: RE2 = 0;
  7964  1526  1109               	bcf	(74/8),(74)&7
  7965                           	line	25
  7966                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  7967                           	opt asmopt_off
  7968  1527  300D               movlw	13
  7969  1528  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  7970  1529  30FB               	movlw	251
  7971  152A  00A0               movwf	((??_lcd_write_control+0)+0),f
  7972  152B                     u4997:
  7973  152B  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  7974  152C  2D2B               	goto	u4997
  7975  152D  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  7976  152E  2D2B               	goto	u4997
  7977  152F  2D30               	nop2
  7978                           opt asmopt_on
  7979                           
  7980                           	line	26
  7981                           	
  7982  1530                     l1399:	
  7983  1530  0008               	return
  7984                           	opt stack 0
  7985                           GLOBAL	__end_of_lcd_write_control
  7986  1531                     	__end_of_lcd_write_control:
  7987 ;; =============== function _lcd_write_control ends ============
  7988                           
  7989                           	signat	_lcd_write_control,4216
  7990                           	global	_init_adc
  7991                           psect	text995,local,class=CODE,delta=2
  7992                           global __ptext995
  7993  1531                     __ptext995:
  7994                           
  7995 ;; *************** function _init_adc *****************
  7996 ;; Defined at:
  7997 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;		None
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;		None               void
  8004 ;; Registers used:
  8005 ;;		wreg, status,2
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8011 ;;      Params:         0       0       0       0       0
  8012 ;;      Locals:         0       0       0       0       0
  8013 ;;      Temps:          0       1       0       0       0
  8014 ;;      Totals:         0       1       0       0       0
  8015 ;;Total ram usage:        1 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    3
  8018 ;; This function calls:
  8019 ;;		Nothing
  8020 ;; This function is called by:
  8021 ;;		_init
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           psect	text995
  8025                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8026                           	line	61
  8027                           	global	__size_of_init_adc
  8028  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8029                           	
  8030  1531                     _init_adc:	
  8031                           	opt	stack 3
  8032                           ; Regs used in _init_adc: [wreg+status,2]
  8033                           	line	63
  8034                           	
  8035  1531                     l10748:	
  8036                           ;adc.c: 63: PORTA = 0;
  8037  1531  1283               	bcf	status, 5	;RP0=0, select bank0
  8038  1532  1303               	bcf	status, 6	;RP1=0, select bank0
  8039  1533  0185               	clrf	(5)	;volatile
  8040                           	line	64
  8041                           	
  8042  1534                     l10750:	
  8043                           ;adc.c: 64: TRISA = 0b00111111;
  8044  1534  303F               	movlw	(03Fh)
  8045  1535  1683               	bsf	status, 5	;RP0=1, select bank1
  8046  1536  1303               	bcf	status, 6	;RP1=0, select bank1
  8047  1537  0085               	movwf	(133)^080h	;volatile
  8048                           	line	67
  8049                           	
  8050  1538                     l10752:	
  8051                           ;adc.c: 67: ADCON0 = 0b10100001;
  8052  1538  30A1               	movlw	(0A1h)
  8053  1539  1283               	bcf	status, 5	;RP0=0, select bank0
  8054  153A  1303               	bcf	status, 6	;RP1=0, select bank0
  8055  153B  009F               	movwf	(31)	;volatile
  8056                           	line	68
  8057                           	
  8058  153C                     l10754:	
  8059                           ;adc.c: 68: ADCON1 = 0b0000010;
  8060  153C  3002               	movlw	(02h)
  8061  153D  1683               	bsf	status, 5	;RP0=1, select bank1
  8062  153E  1303               	bcf	status, 6	;RP1=0, select bank1
  8063  153F  009F               	movwf	(159)^080h	;volatile
  8064                           	line	70
  8065                           	
  8066  1540                     l10756:	
  8067                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8068                           	opt asmopt_off
  8069  1540  3053               movlw	83
  8070  1541  1283               	bcf	status, 5	;RP0=0, select bank0
  8071  1542  1303               	bcf	status, 6	;RP1=0, select bank0
  8072  1543  00A0               movwf	(??_init_adc+0)+0,f
  8073  1544                     u5007:
  8074  1544  0BA0               decfsz	(??_init_adc+0)+0,f
  8075  1545  2D44               	goto	u5007
  8076                           opt asmopt_on
  8077                           
  8078                           	line	72
  8079                           	
  8080  1546                     l700:	
  8081  1546  0008               	return
  8082                           	opt stack 0
  8083                           GLOBAL	__end_of_init_adc
  8084  1547                     	__end_of_init_adc:
  8085 ;; =============== function _init_adc ends ============
  8086                           
  8087                           	signat	_init_adc,88
  8088                           	global	_adc_read_channel
  8089                           psect	text996,local,class=CODE,delta=2
  8090                           global __ptext996
  8091  1781                     __ptext996:
  8092                           
  8093 ;; *************** function _adc_read_channel *****************
  8094 ;; Defined at:
  8095 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  channel         1    wreg     unsigned char 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  channel         1    7[BANK0 ] unsigned char 
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      unsigned char 
  8102 ;; Registers used:
  8103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8109 ;;      Params:         0       0       0       0       0
  8110 ;;      Locals:         0       1       0       0       0
  8111 ;;      Temps:          0       1       0       0       0
  8112 ;;      Totals:         0       2       0       0       0
  8113 ;;Total ram usage:        2 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    4
  8116 ;; This function calls:
  8117 ;;		_adc_read
  8118 ;; This function is called by:
  8119 ;;		_readDistance
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           psect	text996
  8123                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8124                           	line	20
  8125                           	global	__size_of_adc_read_channel
  8126  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8127                           	
  8128  1781                     _adc_read_channel:	
  8129                           	opt	stack 0
  8130                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8131                           ;adc_read_channel@channel stored from wreg
  8132  1781  1283               	bcf	status, 5	;RP0=0, select bank0
  8133  1782  1303               	bcf	status, 6	;RP1=0, select bank0
  8134  1783  00A7               	movwf	(adc_read_channel@channel)
  8135                           	line	21
  8136                           	
  8137  1784                     l10732:	
  8138                           ;adc.c: 21: switch(channel)
  8139  1784  2F9D               	goto	l10740
  8140                           	line	23
  8141                           ;adc.c: 22: {
  8142                           ;adc.c: 23: case 0:
  8143                           	
  8144  1785                     l690:	
  8145                           	line	24
  8146                           ;adc.c: 24: CHS0 = 0;
  8147  1785  119F               	bcf	(251/8),(251)&7
  8148                           	line	25
  8149                           ;adc.c: 25: CHS1 = 0;
  8150  1786  121F               	bcf	(252/8),(252)&7
  8151                           	line	26
  8152                           ;adc.c: 26: CHS2 = 0;
  8153  1787  129F               	bcf	(253/8),(253)&7
  8154                           	line	27
  8155                           ;adc.c: 27: break;
  8156  1788  2FAE               	goto	l10742
  8157                           	line	28
  8158                           ;adc.c: 28: case 1:
  8159                           	
  8160  1789                     l692:	
  8161                           	line	29
  8162                           ;adc.c: 29: CHS0 = 1;
  8163  1789  159F               	bsf	(251/8),(251)&7
  8164                           	line	30
  8165                           ;adc.c: 30: CHS1 = 0;
  8166  178A  121F               	bcf	(252/8),(252)&7
  8167                           	line	31
  8168                           ;adc.c: 31: CHS2 = 0;
  8169  178B  129F               	bcf	(253/8),(253)&7
  8170                           	line	32
  8171                           ;adc.c: 32: break;
  8172  178C  2FAE               	goto	l10742
  8173                           	line	33
  8174                           ;adc.c: 33: case 2:
  8175                           	
  8176  178D                     l693:	
  8177                           	line	34
  8178                           ;adc.c: 34: CHS0 = 0;
  8179  178D  119F               	bcf	(251/8),(251)&7
  8180                           	line	35
  8181                           ;adc.c: 35: CHS1 = 1;
  8182  178E  161F               	bsf	(252/8),(252)&7
  8183                           	line	36
  8184                           ;adc.c: 36: CHS2 = 0;
  8185  178F  129F               	bcf	(253/8),(253)&7
  8186                           	line	37
  8187                           ;adc.c: 37: break;
  8188  1790  2FAE               	goto	l10742
  8189                           	line	38
  8190                           ;adc.c: 38: case 3:
  8191                           	
  8192  1791                     l694:	
  8193                           	line	39
  8194                           ;adc.c: 39: CHS0 = 1;
  8195  1791  159F               	bsf	(251/8),(251)&7
  8196                           	line	40
  8197                           ;adc.c: 40: CHS1 = 1;
  8198  1792  161F               	bsf	(252/8),(252)&7
  8199                           	line	41
  8200                           ;adc.c: 41: CHS2 = 0;
  8201  1793  129F               	bcf	(253/8),(253)&7
  8202                           	line	42
  8203                           ;adc.c: 42: break;
  8204  1794  2FAE               	goto	l10742
  8205                           	line	43
  8206                           ;adc.c: 43: case 4:
  8207                           	
  8208  1795                     l695:	
  8209                           	line	44
  8210                           ;adc.c: 44: CHS0 = 0;
  8211  1795  119F               	bcf	(251/8),(251)&7
  8212                           	line	45
  8213                           ;adc.c: 45: CHS1 = 0;
  8214  1796  121F               	bcf	(252/8),(252)&7
  8215                           	line	46
  8216                           ;adc.c: 46: CHS2 = 1;
  8217  1797  169F               	bsf	(253/8),(253)&7
  8218                           	line	47
  8219                           ;adc.c: 47: break;
  8220  1798  2FAE               	goto	l10742
  8221                           	line	50
  8222                           ;adc.c: 50: default:
  8223                           	
  8224  1799                     l696:	
  8225                           	line	51
  8226                           	
  8227  1799                     l10734:	
  8228                           ;adc.c: 51: return 0;
  8229  1799  3000               	movlw	(0)
  8230  179A  2FBB               	goto	l697
  8231                           	
  8232  179B                     l10736:	
  8233  179B  2FBB               	goto	l697
  8234                           	line	52
  8235                           	
  8236  179C                     l10738:	
  8237                           ;adc.c: 52: }
  8238  179C  2FAE               	goto	l10742
  8239                           	line	21
  8240                           	
  8241  179D                     l689:	
  8242                           	
  8243  179D                     l10740:	
  8244  179D  0827               	movf	(adc_read_channel@channel),w
  8245                           	; Switch size 1, requested type "space"
  8246                           ; Number of cases is 5, Range of values is 0 to 4
  8247                           ; switch strategies available:
  8248                           ; Name         Instructions Cycles
  8249                           ; simple_byte           16     9 (average)
  8250                           ; direct_byte           23     8 (fixed)
  8251                           ; jumptable            260     6 (fixed)
  8252                           ; rangetable             9     6 (fixed)
  8253                           ; spacedrange           16     9 (fixed)
  8254                           ; locatedrange           5     3 (fixed)
  8255                           ;	Chosen strategy is simple_byte
  8256                           
  8257                           	opt asmopt_off
  8258  179E  3A00               	xorlw	0^0	; case 0
  8259  179F  1903               	skipnz
  8260  17A0  2F85               	goto	l690
  8261  17A1  3A01               	xorlw	1^0	; case 1
  8262  17A2  1903               	skipnz
  8263  17A3  2F89               	goto	l692
  8264  17A4  3A03               	xorlw	2^1	; case 2
  8265  17A5  1903               	skipnz
  8266  17A6  2F8D               	goto	l693
  8267  17A7  3A01               	xorlw	3^2	; case 3
  8268  17A8  1903               	skipnz
  8269  17A9  2F91               	goto	l694
  8270  17AA  3A07               	xorlw	4^3	; case 4
  8271  17AB  1903               	skipnz
  8272  17AC  2F95               	goto	l695
  8273  17AD  2F99               	goto	l10734
  8274                           	opt asmopt_on
  8275                           
  8276                           	line	52
  8277                           	
  8278  17AE                     l691:	
  8279                           	line	54
  8280                           	
  8281  17AE                     l10742:	
  8282                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8283                           	opt asmopt_off
  8284  17AE  3053               movlw	83
  8285  17AF  00A6               movwf	(??_adc_read_channel+0)+0,f
  8286  17B0                     u5017:
  8287  17B0  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8288  17B1  2FB0               	goto	u5017
  8289                           opt asmopt_on
  8290                           
  8291                           	line	56
  8292                           	
  8293  17B2                     l10744:	
  8294                           ;adc.c: 56: return adc_read();
  8295  17B2  160A  118A  2583   	fcall	_adc_read
              160A  118A         
  8296  17B7  1283               	bcf	status, 5	;RP0=0, select bank0
  8297  17B8  1303               	bcf	status, 6	;RP1=0, select bank0
  8298  17B9  0820               	movf	(0+(?_adc_read)),w
  8299  17BA  2FBB               	goto	l697
  8300                           	
  8301  17BB                     l10746:	
  8302                           	line	58
  8303                           	
  8304  17BB                     l697:	
  8305  17BB  0008               	return
  8306                           	opt stack 0
  8307                           GLOBAL	__end_of_adc_read_channel
  8308  17BC                     	__end_of_adc_read_channel:
  8309 ;; =============== function _adc_read_channel ends ============
  8310                           
  8311                           	signat	_adc_read_channel,4217
  8312                           	global	___awmod
  8313                           psect	text997,local,class=CODE,delta=2
  8314                           global __ptext997
  8315  0A9D                     __ptext997:
  8316                           
  8317 ;; *************** function ___awmod *****************
  8318 ;; Defined at:
  8319 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  divisor         2    0[BANK0 ] int 
  8322 ;;  dividend        2    2[BANK0 ] int 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  sign            1    6[BANK0 ] unsigned char 
  8325 ;;  counter         1    5[BANK0 ] unsigned char 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  2    0[BANK0 ] int 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8335 ;;      Params:         0       4       0       0       0
  8336 ;;      Locals:         0       2       0       0       0
  8337 ;;      Temps:          0       1       0       0       0
  8338 ;;      Totals:         0       7       0       0       0
  8339 ;;Total ram usage:        7 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    3
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_UpdateDisplay
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           psect	text997
  8349                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8350                           	line	5
  8351                           	global	__size_of___awmod
  8352  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8353                           	
  8354  0A9D                     ___awmod:	
  8355                           	opt	stack 2
  8356                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8357                           	line	8
  8358                           	
  8359  0A9D                     l10676:	
  8360  0A9D  1283               	bcf	status, 5	;RP0=0, select bank0
  8361  0A9E  1303               	bcf	status, 6	;RP1=0, select bank0
  8362  0A9F  01A6               	clrf	(___awmod@sign)
  8363                           	line	9
  8364  0AA0  1FA3               	btfss	(___awmod@dividend+1),7
  8365  0AA1  2AA3               	goto	u4181
  8366  0AA2  2AA4               	goto	u4180
  8367  0AA3                     u4181:
  8368  0AA3  2AAD               	goto	l10680
  8369  0AA4                     u4180:
  8370                           	line	10
  8371                           	
  8372  0AA4                     l10678:	
  8373  0AA4  09A2               	comf	(___awmod@dividend),f
  8374  0AA5  09A3               	comf	(___awmod@dividend+1),f
  8375  0AA6  0AA2               	incf	(___awmod@dividend),f
  8376  0AA7  1903               	skipnz
  8377  0AA8  0AA3               	incf	(___awmod@dividend+1),f
  8378                           	line	11
  8379  0AA9  01A6               	clrf	(___awmod@sign)
  8380  0AAA  1403               	bsf	status,0
  8381  0AAB  0DA6               	rlf	(___awmod@sign),f
  8382  0AAC  2AAD               	goto	l10680
  8383                           	line	12
  8384                           	
  8385  0AAD                     l7742:	
  8386                           	line	13
  8387                           	
  8388  0AAD                     l10680:	
  8389  0AAD  1FA1               	btfss	(___awmod@divisor+1),7
  8390  0AAE  2AB0               	goto	u4191
  8391  0AAF  2AB1               	goto	u4190
  8392  0AB0                     u4191:
  8393  0AB0  2AB7               	goto	l10684
  8394  0AB1                     u4190:
  8395                           	line	14
  8396                           	
  8397  0AB1                     l10682:	
  8398  0AB1  09A0               	comf	(___awmod@divisor),f
  8399  0AB2  09A1               	comf	(___awmod@divisor+1),f
  8400  0AB3  0AA0               	incf	(___awmod@divisor),f
  8401  0AB4  1903               	skipnz
  8402  0AB5  0AA1               	incf	(___awmod@divisor+1),f
  8403  0AB6  2AB7               	goto	l10684
  8404                           	
  8405  0AB7                     l7743:	
  8406                           	line	15
  8407                           	
  8408  0AB7                     l10684:	
  8409  0AB7  0821               	movf	(___awmod@divisor+1),w
  8410  0AB8  0420               	iorwf	(___awmod@divisor),w
  8411  0AB9  1903               	skipnz
  8412  0ABA  2ABC               	goto	u4201
  8413  0ABB  2ABD               	goto	u4200
  8414  0ABC                     u4201:
  8415  0ABC  2AF3               	goto	l10702
  8416  0ABD                     u4200:
  8417                           	line	16
  8418                           	
  8419  0ABD                     l10686:	
  8420  0ABD  01A5               	clrf	(___awmod@counter)
  8421  0ABE  1403               	bsf	status,0
  8422  0ABF  0DA5               	rlf	(___awmod@counter),f
  8423                           	line	17
  8424  0AC0  2ACD               	goto	l10692
  8425                           	
  8426  0AC1                     l7746:	
  8427                           	line	18
  8428                           	
  8429  0AC1                     l10688:	
  8430  0AC1  3001               	movlw	01h
  8431                           	
  8432  0AC2                     u4215:
  8433  0AC2  1003               	clrc
  8434  0AC3  0DA0               	rlf	(___awmod@divisor),f
  8435  0AC4  0DA1               	rlf	(___awmod@divisor+1),f
  8436  0AC5  3EFF               	addlw	-1
  8437  0AC6  1D03               	skipz
  8438  0AC7  2AC2               	goto	u4215
  8439                           	line	19
  8440                           	
  8441  0AC8                     l10690:	
  8442  0AC8  3001               	movlw	(01h)
  8443  0AC9  00A4               	movwf	(??___awmod+0)+0
  8444  0ACA  0824               	movf	(??___awmod+0)+0,w
  8445  0ACB  07A5               	addwf	(___awmod@counter),f
  8446  0ACC  2ACD               	goto	l10692
  8447                           	line	20
  8448                           	
  8449  0ACD                     l7745:	
  8450                           	line	17
  8451                           	
  8452  0ACD                     l10692:	
  8453  0ACD  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8454  0ACE  2AD0               	goto	u4221
  8455  0ACF  2AD1               	goto	u4220
  8456  0AD0                     u4221:
  8457  0AD0  2AC1               	goto	l10688
  8458  0AD1                     u4220:
  8459  0AD1  2AD3               	goto	l10694
  8460                           	
  8461  0AD2                     l7747:	
  8462  0AD2  2AD3               	goto	l10694
  8463                           	line	21
  8464                           	
  8465  0AD3                     l7748:	
  8466                           	line	22
  8467                           	
  8468  0AD3                     l10694:	
  8469  0AD3  0821               	movf	(___awmod@divisor+1),w
  8470  0AD4  0223               	subwf	(___awmod@dividend+1),w
  8471  0AD5  1D03               	skipz
  8472  0AD6  2AD9               	goto	u4235
  8473  0AD7  0820               	movf	(___awmod@divisor),w
  8474  0AD8  0222               	subwf	(___awmod@dividend),w
  8475  0AD9                     u4235:
  8476  0AD9  1C03               	skipc
  8477  0ADA  2ADC               	goto	u4231
  8478  0ADB  2ADD               	goto	u4230
  8479  0ADC                     u4231:
  8480  0ADC  2AE4               	goto	l10698
  8481  0ADD                     u4230:
  8482                           	line	23
  8483                           	
  8484  0ADD                     l10696:	
  8485  0ADD  0820               	movf	(___awmod@divisor),w
  8486  0ADE  02A2               	subwf	(___awmod@dividend),f
  8487  0ADF  0821               	movf	(___awmod@divisor+1),w
  8488  0AE0  1C03               	skipc
  8489  0AE1  03A3               	decf	(___awmod@dividend+1),f
  8490  0AE2  02A3               	subwf	(___awmod@dividend+1),f
  8491  0AE3  2AE4               	goto	l10698
  8492                           	
  8493  0AE4                     l7749:	
  8494                           	line	24
  8495                           	
  8496  0AE4                     l10698:	
  8497  0AE4  3001               	movlw	01h
  8498                           	
  8499  0AE5                     u4245:
  8500  0AE5  1003               	clrc
  8501  0AE6  0CA1               	rrf	(___awmod@divisor+1),f
  8502  0AE7  0CA0               	rrf	(___awmod@divisor),f
  8503  0AE8  3EFF               	addlw	-1
  8504  0AE9  1D03               	skipz
  8505  0AEA  2AE5               	goto	u4245
  8506                           	line	25
  8507                           	
  8508  0AEB                     l10700:	
  8509  0AEB  3001               	movlw	low(01h)
  8510  0AEC  02A5               	subwf	(___awmod@counter),f
  8511  0AED  1D03               	btfss	status,2
  8512  0AEE  2AF0               	goto	u4251
  8513  0AEF  2AF1               	goto	u4250
  8514  0AF0                     u4251:
  8515  0AF0  2AD3               	goto	l10694
  8516  0AF1                     u4250:
  8517  0AF1  2AF3               	goto	l10702
  8518                           	
  8519  0AF2                     l7750:	
  8520  0AF2  2AF3               	goto	l10702
  8521                           	line	26
  8522                           	
  8523  0AF3                     l7744:	
  8524                           	line	27
  8525                           	
  8526  0AF3                     l10702:	
  8527  0AF3  0826               	movf	(___awmod@sign),w
  8528  0AF4  1D03               	skipz
  8529  0AF5  2AF7               	goto	u4260
  8530  0AF6  2AFD               	goto	l10706
  8531  0AF7                     u4260:
  8532                           	line	28
  8533                           	
  8534  0AF7                     l10704:	
  8535  0AF7  09A2               	comf	(___awmod@dividend),f
  8536  0AF8  09A3               	comf	(___awmod@dividend+1),f
  8537  0AF9  0AA2               	incf	(___awmod@dividend),f
  8538  0AFA  1903               	skipnz
  8539  0AFB  0AA3               	incf	(___awmod@dividend+1),f
  8540  0AFC  2AFD               	goto	l10706
  8541                           	
  8542  0AFD                     l7751:	
  8543                           	line	29
  8544                           	
  8545  0AFD                     l10706:	
  8546  0AFD  0823               	movf	(___awmod@dividend+1),w
  8547  0AFE  01A1               	clrf	(?___awmod+1)
  8548  0AFF  07A1               	addwf	(?___awmod+1)
  8549  0B00  0822               	movf	(___awmod@dividend),w
  8550  0B01  01A0               	clrf	(?___awmod)
  8551  0B02  07A0               	addwf	(?___awmod)
  8552                           
  8553  0B03  2B04               	goto	l7752
  8554                           	
  8555  0B04                     l10708:	
  8556                           	line	30
  8557                           	
  8558  0B04                     l7752:	
  8559  0B04  0008               	return
  8560                           	opt stack 0
  8561                           GLOBAL	__end_of___awmod
  8562  0B05                     	__end_of___awmod:
  8563 ;; =============== function ___awmod ends ============
  8564                           
  8565                           	signat	___awmod,8314
  8566                           	global	___lwmod
  8567                           psect	text998,local,class=CODE,delta=2
  8568                           global __ptext998
  8569  08CC                     __ptext998:
  8570                           
  8571 ;; *************** function ___lwmod *****************
  8572 ;; Defined at:
  8573 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  divisor         2   14[BANK0 ] unsigned int 
  8576 ;;  dividend        2   16[BANK0 ] unsigned int 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  counter         1   19[BANK0 ] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  2   14[BANK0 ] unsigned int 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8588 ;;      Params:         0       4       0       0       0
  8589 ;;      Locals:         0       1       0       0       0
  8590 ;;      Temps:          0       1       0       0       0
  8591 ;;      Totals:         0       6       0       0       0
  8592 ;;Total ram usage:        6 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    3
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_sprintf
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           psect	text998
  8602                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8603                           	line	5
  8604                           	global	__size_of___lwmod
  8605  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  8606                           	
  8607  08CC                     ___lwmod:	
  8608                           	opt	stack 1
  8609                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8610                           	line	8
  8611                           	
  8612  08CC                     l10654:	
  8613  08CC  1283               	bcf	status, 5	;RP0=0, select bank0
  8614  08CD  1303               	bcf	status, 6	;RP1=0, select bank0
  8615  08CE  082F               	movf	(___lwmod@divisor+1),w
  8616  08CF  042E               	iorwf	(___lwmod@divisor),w
  8617  08D0  1903               	skipnz
  8618  08D1  28D3               	goto	u4121
  8619  08D2  28D4               	goto	u4120
  8620  08D3                     u4121:
  8621  08D3  290A               	goto	l10672
  8622  08D4                     u4120:
  8623                           	line	9
  8624                           	
  8625  08D4                     l10656:	
  8626  08D4  01B3               	clrf	(___lwmod@counter)
  8627  08D5  1403               	bsf	status,0
  8628  08D6  0DB3               	rlf	(___lwmod@counter),f
  8629                           	line	10
  8630  08D7  28E4               	goto	l10662
  8631                           	
  8632  08D8                     l7552:	
  8633                           	line	11
  8634                           	
  8635  08D8                     l10658:	
  8636  08D8  3001               	movlw	01h
  8637                           	
  8638  08D9                     u4135:
  8639  08D9  1003               	clrc
  8640  08DA  0DAE               	rlf	(___lwmod@divisor),f
  8641  08DB  0DAF               	rlf	(___lwmod@divisor+1),f
  8642  08DC  3EFF               	addlw	-1
  8643  08DD  1D03               	skipz
  8644  08DE  28D9               	goto	u4135
  8645                           	line	12
  8646                           	
  8647  08DF                     l10660:	
  8648  08DF  3001               	movlw	(01h)
  8649  08E0  00B2               	movwf	(??___lwmod+0)+0
  8650  08E1  0832               	movf	(??___lwmod+0)+0,w
  8651  08E2  07B3               	addwf	(___lwmod@counter),f
  8652  08E3  28E4               	goto	l10662
  8653                           	line	13
  8654                           	
  8655  08E4                     l7551:	
  8656                           	line	10
  8657                           	
  8658  08E4                     l10662:	
  8659  08E4  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  8660  08E5  28E7               	goto	u4141
  8661  08E6  28E8               	goto	u4140
  8662  08E7                     u4141:
  8663  08E7  28D8               	goto	l10658
  8664  08E8                     u4140:
  8665  08E8  28EA               	goto	l10664
  8666                           	
  8667  08E9                     l7553:	
  8668  08E9  28EA               	goto	l10664
  8669                           	line	14
  8670                           	
  8671  08EA                     l7554:	
  8672                           	line	15
  8673                           	
  8674  08EA                     l10664:	
  8675  08EA  082F               	movf	(___lwmod@divisor+1),w
  8676  08EB  0231               	subwf	(___lwmod@dividend+1),w
  8677  08EC  1D03               	skipz
  8678  08ED  28F0               	goto	u4155
  8679  08EE  082E               	movf	(___lwmod@divisor),w
  8680  08EF  0230               	subwf	(___lwmod@dividend),w
  8681  08F0                     u4155:
  8682  08F0  1C03               	skipc
  8683  08F1  28F3               	goto	u4151
  8684  08F2  28F4               	goto	u4150
  8685  08F3                     u4151:
  8686  08F3  28FB               	goto	l10668
  8687  08F4                     u4150:
  8688                           	line	16
  8689                           	
  8690  08F4                     l10666:	
  8691  08F4  082E               	movf	(___lwmod@divisor),w
  8692  08F5  02B0               	subwf	(___lwmod@dividend),f
  8693  08F6  082F               	movf	(___lwmod@divisor+1),w
  8694  08F7  1C03               	skipc
  8695  08F8  03B1               	decf	(___lwmod@dividend+1),f
  8696  08F9  02B1               	subwf	(___lwmod@dividend+1),f
  8697  08FA  28FB               	goto	l10668
  8698                           	
  8699  08FB                     l7555:	
  8700                           	line	17
  8701                           	
  8702  08FB                     l10668:	
  8703  08FB  3001               	movlw	01h
  8704                           	
  8705  08FC                     u4165:
  8706  08FC  1003               	clrc
  8707  08FD  0CAF               	rrf	(___lwmod@divisor+1),f
  8708  08FE  0CAE               	rrf	(___lwmod@divisor),f
  8709  08FF  3EFF               	addlw	-1
  8710  0900  1D03               	skipz
  8711  0901  28FC               	goto	u4165
  8712                           	line	18
  8713                           	
  8714  0902                     l10670:	
  8715  0902  3001               	movlw	low(01h)
  8716  0903  02B3               	subwf	(___lwmod@counter),f
  8717  0904  1D03               	btfss	status,2
  8718  0905  2907               	goto	u4171
  8719  0906  2908               	goto	u4170
  8720  0907                     u4171:
  8721  0907  28EA               	goto	l10664
  8722  0908                     u4170:
  8723  0908  290A               	goto	l10672
  8724                           	
  8725  0909                     l7556:	
  8726  0909  290A               	goto	l10672
  8727                           	line	19
  8728                           	
  8729  090A                     l7550:	
  8730                           	line	20
  8731                           	
  8732  090A                     l10672:	
  8733  090A  0831               	movf	(___lwmod@dividend+1),w
  8734  090B  01AF               	clrf	(?___lwmod+1)
  8735  090C  07AF               	addwf	(?___lwmod+1)
  8736  090D  0830               	movf	(___lwmod@dividend),w
  8737  090E  01AE               	clrf	(?___lwmod)
  8738  090F  07AE               	addwf	(?___lwmod)
  8739                           
  8740  0910  2911               	goto	l7557
  8741                           	
  8742  0911                     l10674:	
  8743                           	line	21
  8744                           	
  8745  0911                     l7557:	
  8746  0911  0008               	return
  8747                           	opt stack 0
  8748                           GLOBAL	__end_of___lwmod
  8749  0912                     	__end_of___lwmod:
  8750 ;; =============== function ___lwmod ends ============
  8751                           
  8752                           	signat	___lwmod,8314
  8753                           	global	___lwdiv
  8754                           psect	text999,local,class=CODE,delta=2
  8755                           global __ptext999
  8756  099F                     __ptext999:
  8757                           
  8758 ;; *************** function ___lwdiv *****************
  8759 ;; Defined at:
  8760 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  divisor         2    6[BANK0 ] unsigned int 
  8763 ;;  dividend        2    8[BANK0 ] unsigned int 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  quotient        2   11[BANK0 ] unsigned int 
  8766 ;;  counter         1   13[BANK0 ] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  2    6[BANK0 ] unsigned int 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2, status,0
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8776 ;;      Params:         0       4       0       0       0
  8777 ;;      Locals:         0       3       0       0       0
  8778 ;;      Temps:          0       1       0       0       0
  8779 ;;      Totals:         0       8       0       0       0
  8780 ;;Total ram usage:        8 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    3
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_readAvgDistance
  8787 ;;		_ADCconvert
  8788 ;;		_sprintf
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           psect	text999
  8792                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8793                           	line	5
  8794                           	global	__size_of___lwdiv
  8795  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  8796                           	
  8797  099F                     ___lwdiv:	
  8798                           	opt	stack 1
  8799                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8800                           	line	9
  8801                           	
  8802  099F                     l10628:	
  8803  099F  1283               	bcf	status, 5	;RP0=0, select bank0
  8804  09A0  1303               	bcf	status, 6	;RP1=0, select bank0
  8805  09A1  01AB               	clrf	(___lwdiv@quotient)
  8806  09A2  01AC               	clrf	(___lwdiv@quotient+1)
  8807                           	line	10
  8808                           	
  8809  09A3                     l10630:	
  8810  09A3  0827               	movf	(___lwdiv@divisor+1),w
  8811  09A4  0426               	iorwf	(___lwdiv@divisor),w
  8812  09A5  1903               	skipnz
  8813  09A6  29A8               	goto	u4051
  8814  09A7  29A9               	goto	u4050
  8815  09A8                     u4051:
  8816  09A8  29E7               	goto	l10650
  8817  09A9                     u4050:
  8818                           	line	11
  8819                           	
  8820  09A9                     l10632:	
  8821  09A9  01AD               	clrf	(___lwdiv@counter)
  8822  09AA  1403               	bsf	status,0
  8823  09AB  0DAD               	rlf	(___lwdiv@counter),f
  8824                           	line	12
  8825  09AC  29B9               	goto	l10638
  8826                           	
  8827  09AD                     l7542:	
  8828                           	line	13
  8829                           	
  8830  09AD                     l10634:	
  8831  09AD  3001               	movlw	01h
  8832                           	
  8833  09AE                     u4065:
  8834  09AE  1003               	clrc
  8835  09AF  0DA6               	rlf	(___lwdiv@divisor),f
  8836  09B0  0DA7               	rlf	(___lwdiv@divisor+1),f
  8837  09B1  3EFF               	addlw	-1
  8838  09B2  1D03               	skipz
  8839  09B3  29AE               	goto	u4065
  8840                           	line	14
  8841                           	
  8842  09B4                     l10636:	
  8843  09B4  3001               	movlw	(01h)
  8844  09B5  00AA               	movwf	(??___lwdiv+0)+0
  8845  09B6  082A               	movf	(??___lwdiv+0)+0,w
  8846  09B7  07AD               	addwf	(___lwdiv@counter),f
  8847  09B8  29B9               	goto	l10638
  8848                           	line	15
  8849                           	
  8850  09B9                     l7541:	
  8851                           	line	12
  8852                           	
  8853  09B9                     l10638:	
  8854  09B9  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  8855  09BA  29BC               	goto	u4071
  8856  09BB  29BD               	goto	u4070
  8857  09BC                     u4071:
  8858  09BC  29AD               	goto	l10634
  8859  09BD                     u4070:
  8860  09BD  29BF               	goto	l10640
  8861                           	
  8862  09BE                     l7543:	
  8863  09BE  29BF               	goto	l10640
  8864                           	line	16
  8865                           	
  8866  09BF                     l7544:	
  8867                           	line	17
  8868                           	
  8869  09BF                     l10640:	
  8870  09BF  3001               	movlw	01h
  8871                           	
  8872  09C0                     u4085:
  8873  09C0  1003               	clrc
  8874  09C1  0DAB               	rlf	(___lwdiv@quotient),f
  8875  09C2  0DAC               	rlf	(___lwdiv@quotient+1),f
  8876  09C3  3EFF               	addlw	-1
  8877  09C4  1D03               	skipz
  8878  09C5  29C0               	goto	u4085
  8879                           	line	18
  8880  09C6  0827               	movf	(___lwdiv@divisor+1),w
  8881  09C7  0229               	subwf	(___lwdiv@dividend+1),w
  8882  09C8  1D03               	skipz
  8883  09C9  29CC               	goto	u4095
  8884  09CA  0826               	movf	(___lwdiv@divisor),w
  8885  09CB  0228               	subwf	(___lwdiv@dividend),w
  8886  09CC                     u4095:
  8887  09CC  1C03               	skipc
  8888  09CD  29CF               	goto	u4091
  8889  09CE  29D0               	goto	u4090
  8890  09CF                     u4091:
  8891  09CF  29D8               	goto	l10646
  8892  09D0                     u4090:
  8893                           	line	19
  8894                           	
  8895  09D0                     l10642:	
  8896  09D0  0826               	movf	(___lwdiv@divisor),w
  8897  09D1  02A8               	subwf	(___lwdiv@dividend),f
  8898  09D2  0827               	movf	(___lwdiv@divisor+1),w
  8899  09D3  1C03               	skipc
  8900  09D4  03A9               	decf	(___lwdiv@dividend+1),f
  8901  09D5  02A9               	subwf	(___lwdiv@dividend+1),f
  8902                           	line	20
  8903                           	
  8904  09D6                     l10644:	
  8905  09D6  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  8906  09D7  29D8               	goto	l10646
  8907                           	line	21
  8908                           	
  8909  09D8                     l7545:	
  8910                           	line	22
  8911                           	
  8912  09D8                     l10646:	
  8913  09D8  3001               	movlw	01h
  8914                           	
  8915  09D9                     u4105:
  8916  09D9  1003               	clrc
  8917  09DA  0CA7               	rrf	(___lwdiv@divisor+1),f
  8918  09DB  0CA6               	rrf	(___lwdiv@divisor),f
  8919  09DC  3EFF               	addlw	-1
  8920  09DD  1D03               	skipz
  8921  09DE  29D9               	goto	u4105
  8922                           	line	23
  8923                           	
  8924  09DF                     l10648:	
  8925  09DF  3001               	movlw	low(01h)
  8926  09E0  02AD               	subwf	(___lwdiv@counter),f
  8927  09E1  1D03               	btfss	status,2
  8928  09E2  29E4               	goto	u4111
  8929  09E3  29E5               	goto	u4110
  8930  09E4                     u4111:
  8931  09E4  29BF               	goto	l10640
  8932  09E5                     u4110:
  8933  09E5  29E7               	goto	l10650
  8934                           	
  8935  09E6                     l7546:	
  8936  09E6  29E7               	goto	l10650
  8937                           	line	24
  8938                           	
  8939  09E7                     l7540:	
  8940                           	line	25
  8941                           	
  8942  09E7                     l10650:	
  8943  09E7  082C               	movf	(___lwdiv@quotient+1),w
  8944  09E8  01A7               	clrf	(?___lwdiv+1)
  8945  09E9  07A7               	addwf	(?___lwdiv+1)
  8946  09EA  082B               	movf	(___lwdiv@quotient),w
  8947  09EB  01A6               	clrf	(?___lwdiv)
  8948  09EC  07A6               	addwf	(?___lwdiv)
  8949                           
  8950  09ED  29EE               	goto	l7547
  8951                           	
  8952  09EE                     l10652:	
  8953                           	line	26
  8954                           	
  8955  09EE                     l7547:	
  8956  09EE  0008               	return
  8957                           	opt stack 0
  8958                           GLOBAL	__end_of___lwdiv
  8959  09EF                     	__end_of___lwdiv:
  8960 ;; =============== function ___lwdiv ends ============
  8961                           
  8962                           	signat	___lwdiv,8314
  8963                           	global	___wmul
  8964                           psect	text1000,local,class=CODE,delta=2
  8965                           global __ptext1000
  8966  1602                     __ptext1000:
  8967                           
  8968 ;; *************** function ___wmul *****************
  8969 ;; Defined at:
  8970 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8973 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  product         2    4[BANK0 ] unsigned int 
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  2    0[BANK0 ] unsigned int 
  8978 ;; Registers used:
  8979 ;;		wreg, status,2, status,0
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8985 ;;      Params:         0       4       0       0       0
  8986 ;;      Locals:         0       2       0       0       0
  8987 ;;      Temps:          0       0       0       0       0
  8988 ;;      Totals:         0       6       0       0       0
  8989 ;;Total ram usage:        6 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    3
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_ADCconvert
  8996 ;;		_abs
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           psect	text1000
  9000                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9001                           	line	3
  9002                           	global	__size_of___wmul
  9003  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  9004                           	
  9005  1602                     ___wmul:	
  9006                           	opt	stack 2
  9007                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9008                           	line	4
  9009                           	
  9010  1602                     l10616:	
  9011  1602  1283               	bcf	status, 5	;RP0=0, select bank0
  9012  1603  1303               	bcf	status, 6	;RP1=0, select bank0
  9013  1604  01A4               	clrf	(___wmul@product)
  9014  1605  01A5               	clrf	(___wmul@product+1)
  9015  1606  2E07               	goto	l10618
  9016                           	line	6
  9017                           	
  9018  1607                     l7534:	
  9019                           	line	7
  9020                           	
  9021  1607                     l10618:	
  9022  1607  1C20               	btfss	(___wmul@multiplier),(0)&7
  9023  1608  2E0A               	goto	u4011
  9024  1609  2E0B               	goto	u4010
  9025  160A                     u4011:
  9026  160A  2E11               	goto	l7535
  9027  160B                     u4010:
  9028                           	line	8
  9029                           	
  9030  160B                     l10620:	
  9031  160B  0822               	movf	(___wmul@multiplicand),w
  9032  160C  07A4               	addwf	(___wmul@product),f
  9033  160D  1803               	skipnc
  9034  160E  0AA5               	incf	(___wmul@product+1),f
  9035  160F  0823               	movf	(___wmul@multiplicand+1),w
  9036  1610  07A5               	addwf	(___wmul@product+1),f
  9037                           	
  9038  1611                     l7535:	
  9039                           	line	9
  9040  1611  3001               	movlw	01h
  9041                           	
  9042  1612                     u4025:
  9043  1612  1003               	clrc
  9044  1613  0DA2               	rlf	(___wmul@multiplicand),f
  9045  1614  0DA3               	rlf	(___wmul@multiplicand+1),f
  9046  1615  3EFF               	addlw	-1
  9047  1616  1D03               	skipz
  9048  1617  2E12               	goto	u4025
  9049                           	line	10
  9050                           	
  9051  1618                     l10622:	
  9052  1618  3001               	movlw	01h
  9053                           	
  9054  1619                     u4035:
  9055  1619  1003               	clrc
  9056  161A  0CA1               	rrf	(___wmul@multiplier+1),f
  9057  161B  0CA0               	rrf	(___wmul@multiplier),f
  9058  161C  3EFF               	addlw	-1
  9059  161D  1D03               	skipz
  9060  161E  2E19               	goto	u4035
  9061                           	line	11
  9062  161F  0821               	movf	((___wmul@multiplier+1)),w
  9063  1620  0420               	iorwf	((___wmul@multiplier)),w
  9064  1621  1D03               	skipz
  9065  1622  2E24               	goto	u4041
  9066  1623  2E25               	goto	u4040
  9067  1624                     u4041:
  9068  1624  2E07               	goto	l10618
  9069  1625                     u4040:
  9070  1625  2E26               	goto	l10624
  9071                           	
  9072  1626                     l7536:	
  9073                           	line	12
  9074                           	
  9075  1626                     l10624:	
  9076  1626  0825               	movf	(___wmul@product+1),w
  9077  1627  01A1               	clrf	(?___wmul+1)
  9078  1628  07A1               	addwf	(?___wmul+1)
  9079  1629  0824               	movf	(___wmul@product),w
  9080  162A  01A0               	clrf	(?___wmul)
  9081  162B  07A0               	addwf	(?___wmul)
  9082                           
  9083  162C  2E2D               	goto	l7537
  9084                           	
  9085  162D                     l10626:	
  9086                           	line	13
  9087                           	
  9088  162D                     l7537:	
  9089  162D  0008               	return
  9090                           	opt stack 0
  9091                           GLOBAL	__end_of___wmul
  9092  162E                     	__end_of___wmul:
  9093 ;; =============== function ___wmul ends ============
  9094                           
  9095                           	signat	___wmul,8314
  9096                           	global	_ser_isrx
  9097                           psect	text1001,local,class=CODE,delta=2
  9098                           global __ptext1001
  9099  08B3                     __ptext1001:
  9100                           
  9101 ;; *************** function _ser_isrx *****************
  9102 ;; Defined at:
  9103 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;		None               void
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9117 ;;      Params:         0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    3
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_ser_getch
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           psect	text1001
  9131                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9132                           	line	45
  9133                           	global	__size_of_ser_isrx
  9134  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  9135                           	
  9136  08B3                     _ser_isrx:	
  9137                           	opt	stack 1
  9138                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  9139                           	line	46
  9140                           	
  9141  08B3                     l10568:	
  9142                           ;ser.c: 46: if(OERR) {
  9143  08B3  1283               	bcf	status, 5	;RP0=0, select bank0
  9144  08B4  1303               	bcf	status, 6	;RP1=0, select bank0
  9145  08B5  1C98               	btfss	(193/8),(193)&7
  9146  08B6  28B8               	goto	u3941
  9147  08B7  28B9               	goto	u3940
  9148  08B8                     u3941:
  9149  08B8  28BE               	goto	l10576
  9150  08B9                     u3940:
  9151                           	line	47
  9152                           	
  9153  08B9                     l10570:	
  9154                           ;ser.c: 47: CREN = 0;
  9155  08B9  1218               	bcf	(196/8),(196)&7
  9156                           	line	48
  9157                           ;ser.c: 48: CREN = 1;
  9158  08BA  1618               	bsf	(196/8),(196)&7
  9159                           	line	49
  9160                           	
  9161  08BB                     l10572:	
  9162                           ;ser.c: 49: return 0;
  9163  08BB  1003               	clrc
  9164                           	
  9165  08BC  28CB               	goto	l6789
  9166                           	
  9167  08BD                     l10574:	
  9168  08BD  28CB               	goto	l6789
  9169                           	line	50
  9170                           	
  9171  08BE                     l6788:	
  9172                           	line	51
  9173                           	
  9174  08BE                     l10576:	
  9175                           ;ser.c: 50: }
  9176                           ;ser.c: 51: return (rxiptr!=rxoptr);
  9177  08BE  1683               	bsf	status, 5	;RP0=1, select bank1
  9178  08BF  1303               	bcf	status, 6	;RP1=0, select bank1
  9179  08C0  0856               	movf	(_rxiptr)^080h,w	;volatile
  9180  08C1  0657               	xorwf	(_rxoptr)^080h,w	;volatile
  9181  08C2  1D03               	skipz
  9182  08C3  28C5               	goto	u3951
  9183  08C4  28C6               	goto	u3950
  9184  08C5                     u3951:
  9185  08C5  28C8               	goto	l10580
  9186  08C6                     u3950:
  9187                           	
  9188  08C6                     l10578:	
  9189  08C6  1003               	clrc
  9190                           	
  9191  08C7  28CB               	goto	l6789
  9192                           	
  9193  08C8                     l10302:	
  9194                           	
  9195  08C8                     l10580:	
  9196  08C8  1403               	setc
  9197                           	
  9198  08C9  28CB               	goto	l6789
  9199                           	
  9200  08CA                     l10304:	
  9201  08CA  28CB               	goto	l6789
  9202                           	
  9203  08CB                     l10582:	
  9204                           	line	52
  9205                           	
  9206  08CB                     l6789:	
  9207  08CB  0008               	return
  9208                           	opt stack 0
  9209                           GLOBAL	__end_of_ser_isrx
  9210  08CC                     	__end_of_ser_isrx:
  9211 ;; =============== function _ser_isrx ends ============
  9212                           
  9213                           	signat	_ser_isrx,88
  9214                           	global	_spi_transfer
  9215                           psect	text1002,local,class=CODE,delta=2
  9216                           global __ptext1002
  9217  1509                     __ptext1002:
  9218                           
  9219 ;; *************** function _spi_transfer *****************
  9220 ;; Defined at:
  9221 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  data            1    wreg     unsigned char 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  data            1    2[BANK0 ] unsigned char 
  9226 ;;  temp            1    1[BANK0 ] unsigned char 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      unsigned char 
  9229 ;; Registers used:
  9230 ;;		wreg
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9236 ;;      Params:         0       0       0       0       0
  9237 ;;      Locals:         0       2       0       0       0
  9238 ;;      Temps:          0       1       0       0       0
  9239 ;;      Totals:         0       3       0       0       0
  9240 ;;Total ram usage:        3 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:    3
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		_rotate
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           psect	text1002
  9250                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9251                           	line	50
  9252                           	global	__size_of_spi_transfer
  9253  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  9254                           	
  9255  1509                     _spi_transfer:	
  9256                           	opt	stack 2
  9257                           ; Regs used in _spi_transfer: [wreg]
  9258                           ;spi_transfer@data stored from wreg
  9259  1509  1283               	bcf	status, 5	;RP0=0, select bank0
  9260  150A  1303               	bcf	status, 6	;RP1=0, select bank0
  9261  150B  00A2               	movwf	(spi_transfer@data)
  9262                           	line	51
  9263                           	
  9264  150C                     l10516:	
  9265                           ;steppermotor.c: 51: unsigned char temp = 0;
  9266  150C  01A1               	clrf	(spi_transfer@temp)
  9267                           	line	53
  9268                           ;steppermotor.c: 53: SSPIF = 0;
  9269  150D  118C               	bcf	(99/8),(99)&7
  9270                           	line	54
  9271                           	
  9272  150E                     l10518:	
  9273                           ;steppermotor.c: 54: SSPBUF = data;
  9274  150E  0822               	movf	(spi_transfer@data),w
  9275  150F  0093               	movwf	(19)	;volatile
  9276                           	line	56
  9277                           ;steppermotor.c: 56: while (SSPIF == 0);
  9278  1510  2D11               	goto	l3720
  9279                           	
  9280  1511                     l3721:	
  9281                           	
  9282  1511                     l3720:	
  9283  1511  1D8C               	btfss	(99/8),(99)&7
  9284  1512  2D14               	goto	u3781
  9285  1513  2D15               	goto	u3780
  9286  1514                     u3781:
  9287  1514  2D11               	goto	l3720
  9288  1515                     u3780:
  9289  1515  2D16               	goto	l10520
  9290                           	
  9291  1516                     l3722:	
  9292                           	line	57
  9293                           	
  9294  1516                     l10520:	
  9295                           ;steppermotor.c: 57: temp = SSPBUF;
  9296  1516  0813               	movf	(19),w	;volatile
  9297  1517  00A0               	movwf	(??_spi_transfer+0)+0
  9298  1518  0820               	movf	(??_spi_transfer+0)+0,w
  9299  1519  00A1               	movwf	(spi_transfer@temp)
  9300                           	line	58
  9301                           	
  9302  151A                     l10522:	
  9303                           ;steppermotor.c: 58: SSPIF = 0;
  9304  151A  118C               	bcf	(99/8),(99)&7
  9305  151B  2D1C               	goto	l3723
  9306                           	line	60
  9307                           	
  9308  151C                     l10524:	
  9309                           	line	61
  9310                           ;steppermotor.c: 60: return temp;
  9311                           ;	Return value of _spi_transfer is never used
  9312                           	
  9313  151C                     l3723:	
  9314  151C  0008               	return
  9315                           	opt stack 0
  9316                           GLOBAL	__end_of_spi_transfer
  9317  151D                     	__end_of_spi_transfer:
  9318 ;; =============== function _spi_transfer ends ============
  9319                           
  9320                           	signat	_spi_transfer,4217
  9321                           	global	_ser_putch
  9322                           psect	text1003,local,class=CODE,delta=2
  9323                           global __ptext1003
  9324  155D                     __ptext1003:
  9325                           
  9326 ;; *************** function _ser_putch *****************
  9327 ;; Defined at:
  9328 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  c               1    wreg     unsigned char 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  c               1    1[BANK0 ] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;		None               void
  9335 ;; Registers used:
  9336 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9342 ;;      Params:         0       0       0       0       0
  9343 ;;      Locals:         0       1       0       0       0
  9344 ;;      Temps:          0       1       0       0       0
  9345 ;;      Totals:         0       2       0       0       0
  9346 ;;Total ram usage:        2 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    3
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_ChargeMode
  9353 ;;		_robo_init
  9354 ;;		_robot_read
  9355 ;;		_RobotDrive
  9356 ;;		_robotTurn
  9357 ;;		_ser_puts
  9358 ;;		_ser_puts2
  9359 ;;		_ser_puthex
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           psect	text1003
  9363                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9364                           	line	70
  9365                           	global	__size_of_ser_putch
  9366  0026                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  9367                           	
  9368  155D                     _ser_putch:	
  9369                           	opt	stack 3
  9370                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  9371                           ;ser_putch@c stored from wreg
  9372  155D  1283               	bcf	status, 5	;RP0=0, select bank0
  9373  155E  1303               	bcf	status, 6	;RP1=0, select bank0
  9374  155F  00A1               	movwf	(ser_putch@c)
  9375                           	line	71
  9376                           	
  9377  1560                     l10480:	
  9378                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  9379  1560  2D62               	goto	l10482
  9380                           	
  9381  1561                     l6799:	
  9382                           	line	72
  9383                           ;ser.c: 72: continue;
  9384  1561  2D62               	goto	l10482
  9385                           	
  9386  1562                     l6798:	
  9387                           	line	71
  9388                           	
  9389  1562                     l10482:	
  9390  1562  1283               	bcf	status, 5	;RP0=0, select bank0
  9391  1563  086F               	movf	(_txiptr),w	;volatile
  9392  1564  3E01               	addlw	01h
  9393  1565  390F               	andlw	0Fh
  9394  1566  1683               	bsf	status, 5	;RP0=1, select bank1
  9395  1567  1303               	bcf	status, 6	;RP1=0, select bank1
  9396  1568  065B               	xorwf	(_txoptr)^080h,w	;volatile
  9397  1569  1903               	skipnz
  9398  156A  2D6C               	goto	u3731
  9399  156B  2D6D               	goto	u3730
  9400  156C                     u3731:
  9401  156C  2D62               	goto	l10482
  9402  156D                     u3730:
  9403                           	
  9404  156D                     l6800:	
  9405                           	line	73
  9406                           ;ser.c: 73: GIE=0;
  9407  156D  138B               	bcf	(95/8),(95)&7
  9408                           	line	74
  9409                           	
  9410  156E                     l10484:	
  9411                           ;ser.c: 74: txfifo[txiptr] = c;
  9412  156E  1283               	bcf	status, 5	;RP0=0, select bank0
  9413  156F  1303               	bcf	status, 6	;RP1=0, select bank0
  9414  1570  0821               	movf	(ser_putch@c),w
  9415  1571  00A0               	movwf	(??_ser_putch+0)+0
  9416  1572  086F               	movf	(_txiptr),w
  9417  1573  3EA0               	addlw	_txfifo&0ffh
  9418  1574  0084               	movwf	fsr0
  9419  1575  0820               	movf	(??_ser_putch+0)+0,w
  9420  1576  1783               	bsf	status, 7	;select IRP bank3
  9421  1577  0080               	movwf	indf
  9422                           	line	75
  9423                           	
  9424  1578                     l10486:	
  9425                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  9426  1578  086F               	movf	(_txiptr),w	;volatile
  9427  1579  3E01               	addlw	01h
  9428  157A  390F               	andlw	0Fh
  9429  157B  00A0               	movwf	(??_ser_putch+0)+0
  9430  157C  0820               	movf	(??_ser_putch+0)+0,w
  9431  157D  00EF               	movwf	(_txiptr)	;volatile
  9432                           	line	76
  9433                           	
  9434  157E                     l10488:	
  9435                           ;ser.c: 76: TXIE=1;
  9436  157E  1683               	bsf	status, 5	;RP0=1, select bank1
  9437  157F  1303               	bcf	status, 6	;RP1=0, select bank1
  9438  1580  160C               	bsf	(1124/8)^080h,(1124)&7
  9439                           	line	77
  9440                           	
  9441  1581                     l10490:	
  9442                           ;ser.c: 77: GIE=1;
  9443  1581  178B               	bsf	(95/8),(95)&7
  9444                           	line	78
  9445                           	
  9446  1582                     l6801:	
  9447  1582  0008               	return
  9448                           	opt stack 0
  9449                           GLOBAL	__end_of_ser_putch
  9450  1583                     	__end_of_ser_putch:
  9451 ;; =============== function _ser_putch ends ============
  9452                           
  9453                           	signat	_ser_putch,4216
  9454                           	global	_Menu
  9455                           psect	text1004,local,class=CODE,delta=2
  9456                           global __ptext1004
  9457  0958                     __ptext1004:
  9458                           
  9459 ;; *************** function _Menu *****************
  9460 ;; Defined at:
  9461 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  BTN_input       1    wreg     unsigned char 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  BTN_input       1    0[BANK0 ] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      unsigned char 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9475 ;;      Params:         0       0       0       0       0
  9476 ;;      Locals:         0       1       0       0       0
  9477 ;;      Temps:          0       0       0       0       0
  9478 ;;      Totals:         0       1       0       0       0
  9479 ;;Total ram usage:        1 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    3
  9482 ;; This function calls:
  9483 ;;		Nothing
  9484 ;; This function is called by:
  9485 ;;		_main
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           psect	text1004
  9489                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  9490                           	line	201
  9491                           	global	__size_of_Menu
  9492  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  9493                           	
  9494  0958                     _Menu:	
  9495                           	opt	stack 4
  9496                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  9497                           ;Menu@BTN_input stored from wreg
  9498  0958  1283               	bcf	status, 5	;RP0=0, select bank0
  9499  0959  1303               	bcf	status, 6	;RP1=0, select bank0
  9500  095A  00A0               	movwf	(Menu@BTN_input)
  9501                           	line	202
  9502                           	
  9503  095B                     l10456:	
  9504                           ;HMI.c: 202: switch (BTN_input)
  9505  095B  298A               	goto	l10474
  9506                           	line	204
  9507                           ;HMI.c: 203: {
  9508                           ;HMI.c: 204: case 1:
  9509                           	
  9510  095C                     l4531:	
  9511                           	line	206
  9512                           ;HMI.c: 206: break;
  9513  095C  299C               	goto	l10476
  9514                           	line	207
  9515                           ;HMI.c: 207: case 2:
  9516                           	
  9517  095D                     l4533:	
  9518                           	line	209
  9519                           ;HMI.c: 209: break;
  9520  095D  299C               	goto	l10476
  9521                           	line	210
  9522                           ;HMI.c: 210: case 3:
  9523                           	
  9524  095E                     l4534:	
  9525                           	line	211
  9526                           	
  9527  095E                     l10458:	
  9528                           ;HMI.c: 211: pos--;
  9529  095E  30FF               	movlw	low(-1)
  9530  095F  1683               	bsf	status, 5	;RP0=1, select bank1
  9531  0960  1303               	bcf	status, 6	;RP1=0, select bank1
  9532  0961  07C2               	addwf	(_pos)^080h,f
  9533  0962  1803               	skipnc
  9534  0963  0AC3               	incf	(_pos+1)^080h,f
  9535  0964  30FF               	movlw	high(-1)
  9536  0965  07C3               	addwf	(_pos+1)^080h,f
  9537                           	line	212
  9538                           	
  9539  0966                     l10460:	
  9540                           ;HMI.c: 212: if (pos < 0)
  9541  0966  1FC3               	btfss	(_pos+1)^080h,7
  9542  0967  2969               	goto	u3711
  9543  0968  296A               	goto	u3710
  9544  0969                     u3711:
  9545  0969  299C               	goto	l10476
  9546  096A                     u3710:
  9547                           	line	213
  9548                           	
  9549  096A                     l10462:	
  9550                           ;HMI.c: 213: pos = 6 - 1;
  9551  096A  3005               	movlw	low(05h)
  9552  096B  00C2               	movwf	(_pos)^080h
  9553  096C  3000               	movlw	high(05h)
  9554  096D  00C3               	movwf	((_pos)^080h)+1
  9555  096E  299C               	goto	l10476
  9556                           	
  9557  096F                     l4535:	
  9558                           	line	215
  9559                           ;HMI.c: 215: break;
  9560  096F  299C               	goto	l10476
  9561                           	line	216
  9562                           ;HMI.c: 216: case 4:
  9563                           	
  9564  0970                     l4536:	
  9565                           	line	217
  9566                           	
  9567  0970                     l10464:	
  9568                           ;HMI.c: 217: pos++;
  9569  0970  3001               	movlw	low(01h)
  9570  0971  1683               	bsf	status, 5	;RP0=1, select bank1
  9571  0972  1303               	bcf	status, 6	;RP1=0, select bank1
  9572  0973  07C2               	addwf	(_pos)^080h,f
  9573  0974  1803               	skipnc
  9574  0975  0AC3               	incf	(_pos+1)^080h,f
  9575  0976  3000               	movlw	high(01h)
  9576  0977  07C3               	addwf	(_pos+1)^080h,f
  9577                           	line	218
  9578                           ;HMI.c: 218: if (pos == 6)
  9579  0978  3006               	movlw	06h
  9580  0979  0642               	xorwf	(_pos)^080h,w
  9581  097A  0443               	iorwf	(_pos+1)^080h,w
  9582  097B  1D03               	skipz
  9583  097C  297E               	goto	u3721
  9584  097D  297F               	goto	u3720
  9585  097E                     u3721:
  9586  097E  299C               	goto	l10476
  9587  097F                     u3720:
  9588                           	line	219
  9589                           	
  9590  097F                     l10466:	
  9591                           ;HMI.c: 219: pos = 0;
  9592  097F  01C2               	clrf	(_pos)^080h
  9593  0980  01C3               	clrf	(_pos+1)^080h
  9594  0981  299C               	goto	l10476
  9595                           	
  9596  0982                     l4537:	
  9597                           	line	221
  9598                           ;HMI.c: 221: break;
  9599  0982  299C               	goto	l10476
  9600                           	line	222
  9601                           ;HMI.c: 222: case 5:
  9602                           	
  9603  0983                     l4538:	
  9604                           	line	223
  9605                           	
  9606  0983                     l10468:	
  9607                           ;HMI.c: 223: return pos;
  9608  0983  1683               	bsf	status, 5	;RP0=1, select bank1
  9609  0984  1303               	bcf	status, 6	;RP1=0, select bank1
  9610  0985  0842               	movf	(_pos)^080h,w
  9611  0986  299E               	goto	l4539
  9612                           	
  9613  0987                     l10470:	
  9614  0987  299E               	goto	l4539
  9615                           	line	226
  9616                           ;HMI.c: 226: default:
  9617                           	
  9618  0988                     l4540:	
  9619                           	line	228
  9620                           ;HMI.c: 228: break;
  9621  0988  299C               	goto	l10476
  9622                           	line	229
  9623                           	
  9624  0989                     l10472:	
  9625                           ;HMI.c: 229: }
  9626  0989  299C               	goto	l10476
  9627                           	line	202
  9628                           	
  9629  098A                     l4530:	
  9630                           	
  9631  098A                     l10474:	
  9632  098A  1283               	bcf	status, 5	;RP0=0, select bank0
  9633  098B  0820               	movf	(Menu@BTN_input),w
  9634                           	; Switch size 1, requested type "space"
  9635                           ; Number of cases is 5, Range of values is 1 to 5
  9636                           ; switch strategies available:
  9637                           ; Name         Instructions Cycles
  9638                           ; simple_byte           16     9 (average)
  9639                           ; direct_byte           26    11 (fixed)
  9640                           ; jumptable            263     9 (fixed)
  9641                           ;	Chosen strategy is simple_byte
  9642                           
  9643                           	opt asmopt_off
  9644  098C  3A01               	xorlw	1^0	; case 1
  9645  098D  1903               	skipnz
  9646  098E  299C               	goto	l10476
  9647  098F  3A03               	xorlw	2^1	; case 2
  9648  0990  1903               	skipnz
  9649  0991  299C               	goto	l10476
  9650  0992  3A01               	xorlw	3^2	; case 3
  9651  0993  1903               	skipnz
  9652  0994  295E               	goto	l10458
  9653  0995  3A07               	xorlw	4^3	; case 4
  9654  0996  1903               	skipnz
  9655  0997  2970               	goto	l10464
  9656  0998  3A01               	xorlw	5^4	; case 5
  9657  0999  1903               	skipnz
  9658  099A  2983               	goto	l10468
  9659  099B  299C               	goto	l10476
  9660                           	opt asmopt_on
  9661                           
  9662                           	line	229
  9663                           	
  9664  099C                     l4532:	
  9665                           	line	230
  9666                           	
  9667  099C                     l10476:	
  9668                           ;HMI.c: 230: return 255;
  9669  099C  30FF               	movlw	(0FFh)
  9670  099D  299E               	goto	l4539
  9671                           	
  9672  099E                     l10478:	
  9673                           	line	231
  9674                           	
  9675  099E                     l4539:	
  9676  099E  0008               	return
  9677                           	opt stack 0
  9678                           GLOBAL	__end_of_Menu
  9679  099F                     	__end_of_Menu:
  9680 ;; =============== function _Menu ends ============
  9681                           
  9682                           	signat	_Menu,4217
  9683                           	global	_ser_init
  9684                           psect	text1005,local,class=CODE,delta=2
  9685                           global __ptext1005
  9686  1686                     __ptext1005:
  9687                           
  9688 ;; *************** function _ser_init *****************
  9689 ;; Defined at:
  9690 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;		None               void
  9697 ;; Registers used:
  9698 ;;		wreg, status,2, status,0
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9704 ;;      Params:         0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0
  9706 ;;      Temps:          0       1       0       0       0
  9707 ;;      Totals:         0       1       0       0       0
  9708 ;;Total ram usage:        1 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    3
  9711 ;; This function calls:
  9712 ;;		Nothing
  9713 ;; This function is called by:
  9714 ;;		_init
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           psect	text1005
  9718                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9719                           	line	113
  9720                           	global	__size_of_ser_init
  9721  002E                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  9722                           	
  9723  1686                     _ser_init:	
  9724                           	opt	stack 3
  9725                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  9726                           	line	114
  9727                           	
  9728  1686                     l10430:	
  9729                           ;ser.c: 114: TRISC |= 0b10000000;
  9730  1686  1683               	bsf	status, 5	;RP0=1, select bank1
  9731  1687  1303               	bcf	status, 6	;RP1=0, select bank1
  9732  1688  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  9733                           	line	115
  9734                           	
  9735  1689                     l10432:	
  9736                           ;ser.c: 115: TRISC &= 0b10111111;
  9737  1689  30BF               	movlw	(0BFh)
  9738  168A  1283               	bcf	status, 5	;RP0=0, select bank0
  9739  168B  1303               	bcf	status, 6	;RP1=0, select bank0
  9740  168C  00A0               	movwf	(??_ser_init+0)+0
  9741  168D  0820               	movf	(??_ser_init+0)+0,w
  9742  168E  1683               	bsf	status, 5	;RP0=1, select bank1
  9743  168F  1303               	bcf	status, 6	;RP1=0, select bank1
  9744  1690  0587               	andwf	(135)^080h,f	;volatile
  9745                           	line	116
  9746                           	
  9747  1691                     l10434:	
  9748                           ;ser.c: 116: BRGH=1;
  9749  1691  1518               	bsf	(1218/8)^080h,(1218)&7
  9750                           	line	118
  9751                           	
  9752  1692                     l10436:	
  9753                           ;ser.c: 118: SPBRG=20;
  9754  1692  3014               	movlw	(014h)
  9755  1693  0099               	movwf	(153)^080h	;volatile
  9756                           	line	121
  9757                           	
  9758  1694                     l10438:	
  9759                           ;ser.c: 121: TX9=0;
  9760  1694  1318               	bcf	(1222/8)^080h,(1222)&7
  9761                           	line	122
  9762                           	
  9763  1695                     l10440:	
  9764                           ;ser.c: 122: RX9=0;
  9765  1695  1283               	bcf	status, 5	;RP0=0, select bank0
  9766  1696  1303               	bcf	status, 6	;RP1=0, select bank0
  9767  1697  1318               	bcf	(198/8),(198)&7
  9768                           	line	124
  9769                           	
  9770  1698                     l10442:	
  9771                           ;ser.c: 124: SYNC=0;
  9772  1698  1683               	bsf	status, 5	;RP0=1, select bank1
  9773  1699  1303               	bcf	status, 6	;RP1=0, select bank1
  9774  169A  1218               	bcf	(1220/8)^080h,(1220)&7
  9775                           	line	125
  9776                           	
  9777  169B                     l10444:	
  9778                           ;ser.c: 125: SPEN=1;
  9779  169B  1283               	bcf	status, 5	;RP0=0, select bank0
  9780  169C  1303               	bcf	status, 6	;RP1=0, select bank0
  9781  169D  1798               	bsf	(199/8),(199)&7
  9782                           	line	126
  9783                           	
  9784  169E                     l10446:	
  9785                           ;ser.c: 126: CREN=1;
  9786  169E  1618               	bsf	(196/8),(196)&7
  9787                           	line	127
  9788                           	
  9789  169F                     l10448:	
  9790                           ;ser.c: 127: TXIE=0;
  9791  169F  1683               	bsf	status, 5	;RP0=1, select bank1
  9792  16A0  1303               	bcf	status, 6	;RP1=0, select bank1
  9793  16A1  120C               	bcf	(1124/8)^080h,(1124)&7
  9794                           	line	128
  9795                           	
  9796  16A2                     l10450:	
  9797                           ;ser.c: 128: RCIE=1;
  9798  16A2  168C               	bsf	(1125/8)^080h,(1125)&7
  9799                           	line	129
  9800                           	
  9801  16A3                     l10452:	
  9802                           ;ser.c: 129: TXEN=1;
  9803  16A3  1698               	bsf	(1221/8)^080h,(1221)&7
  9804                           	line	132
  9805                           	
  9806  16A4                     l10454:	
  9807                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  9808  16A4  3000               	movlw	(0)
  9809  16A5  00DB               	movwf	(_txoptr)^080h	;volatile
  9810  16A6  1283               	bcf	status, 5	;RP0=0, select bank0
  9811  16A7  1303               	bcf	status, 6	;RP1=0, select bank0
  9812  16A8  00EF               	movwf	(_txiptr)	;volatile
  9813  16A9  1683               	bsf	status, 5	;RP0=1, select bank1
  9814  16AA  1303               	bcf	status, 6	;RP1=0, select bank1
  9815  16AB  00D7               	movwf	(_rxoptr)^080h	;volatile
  9816  16AC  1283               	bcf	status, 5	;RP0=0, select bank0
  9817  16AD  1303               	bcf	status, 6	;RP1=0, select bank0
  9818  16AE  00A0               	movwf	(??_ser_init+0)+0
  9819  16AF  0820               	movf	(??_ser_init+0)+0,w
  9820  16B0  1683               	bsf	status, 5	;RP0=1, select bank1
  9821  16B1  1303               	bcf	status, 6	;RP1=0, select bank1
  9822  16B2  00D6               	movwf	(_rxiptr)^080h	;volatile
  9823                           	line	133
  9824                           	
  9825  16B3                     l6823:	
  9826  16B3  0008               	return
  9827                           	opt stack 0
  9828                           GLOBAL	__end_of_ser_init
  9829  16B4                     	__end_of_ser_init:
  9830 ;; =============== function _ser_init ends ============
  9831                           
  9832                           	signat	_ser_init,88
  9833                           	global	_adc_read
  9834                           psect	text1006,local,class=CODE,delta=2
  9835                           global __ptext1006
  9836  1583                     __ptext1006:
  9837                           
  9838 ;; *************** function _adc_read *****************
  9839 ;; Defined at:
  9840 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;		None
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  2    0[BANK0 ] unsigned int 
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9854 ;;      Params:         0       2       0       0       0
  9855 ;;      Locals:         0       2       0       0       0
  9856 ;;      Temps:          0       2       0       0       0
  9857 ;;      Totals:         0       6       0       0       0
  9858 ;;Total ram usage:        6 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; Hardware stack levels required when called:    3
  9861 ;; This function calls:
  9862 ;;		Nothing
  9863 ;; This function is called by:
  9864 ;;		_adc_read_channel
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           psect	text1006
  9868                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9869                           	line	76
  9870                           	global	__size_of_adc_read
  9871  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  9872                           	
  9873  1583                     _adc_read:	
  9874                           	opt	stack 0
  9875                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  9876                           	line	79
  9877                           	
  9878  1583                     l10310:	
  9879                           ;adc.c: 77: volatile unsigned int adc_value;
  9880                           ;adc.c: 79: ADRESH = 0;
  9881  1583  1283               	bcf	status, 5	;RP0=0, select bank0
  9882  1584  1303               	bcf	status, 6	;RP1=0, select bank0
  9883  1585  019E               	clrf	(30)	;volatile
  9884                           	line	81
  9885                           	
  9886  1586                     l10312:	
  9887                           ;adc.c: 81: GO = 1;
  9888  1586  151F               	bsf	(250/8),(250)&7
  9889                           	line	82
  9890                           ;adc.c: 82: while(GO) continue;
  9891  1587  2D88               	goto	l703
  9892                           	
  9893  1588                     l704:	
  9894                           	
  9895  1588                     l703:	
  9896  1588  191F               	btfsc	(250/8),(250)&7
  9897  1589  2D8B               	goto	u3521
  9898  158A  2D8C               	goto	u3520
  9899  158B                     u3521:
  9900  158B  2D88               	goto	l703
  9901  158C                     u3520:
  9902                           	
  9903  158C                     l705:	
  9904                           	line	83
  9905                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
  9906  158C  0000               nop ;#
  9907                           	line	84
  9908                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
  9909  158D  0000               nop ;#
  9910                           	line	85
  9911                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
  9912  158E  0000               nop ;#
  9913                           psect	text1006
  9914                           	line	88
  9915                           	
  9916  158F                     l10314:	
  9917                           ;adc.c: 88: adc_value = ADRESH;
  9918  158F  1283               	bcf	status, 5	;RP0=0, select bank0
  9919  1590  1303               	bcf	status, 6	;RP1=0, select bank0
  9920  1591  081E               	movf	(30),w	;volatile
  9921  1592  00A2               	movwf	(??_adc_read+0)+0
  9922  1593  01A3               	clrf	(??_adc_read+0)+0+1
  9923  1594  0822               	movf	0+(??_adc_read+0)+0,w
  9924  1595  00A4               	movwf	(adc_read@adc_value)	;volatile
  9925  1596  0823               	movf	1+(??_adc_read+0)+0,w
  9926  1597  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  9927                           	line	89
  9928                           ;adc.c: 89: adc_value <<= 1;
  9929  1598  3001               	movlw	01h
  9930                           	
  9931  1599                     u3535:
  9932  1599  1003               	clrc
  9933  159A  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  9934  159B  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  9935  159C  3EFF               	addlw	-1
  9936  159D  1D03               	skipz
  9937  159E  2D99               	goto	u3535
  9938                           	line	90
  9939                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
  9940  159F  1683               	bsf	status, 5	;RP0=1, select bank1
  9941  15A0  1303               	bcf	status, 6	;RP1=0, select bank1
  9942  15A1  081E               	movf	(158)^080h,w	;volatile
  9943                           	line	93
  9944                           	
  9945  15A2                     l10316:	
  9946                           ;adc.c: 93: return (adc_value);
  9947  15A2  1283               	bcf	status, 5	;RP0=0, select bank0
  9948  15A3  1303               	bcf	status, 6	;RP1=0, select bank0
  9949  15A4  0825               	movf	(adc_read@adc_value+1),w	;volatile
  9950  15A5  01A1               	clrf	(?_adc_read+1)
  9951  15A6  07A1               	addwf	(?_adc_read+1)
  9952  15A7  0824               	movf	(adc_read@adc_value),w	;volatile
  9953  15A8  01A0               	clrf	(?_adc_read)
  9954  15A9  07A0               	addwf	(?_adc_read)
  9955                           
  9956  15AA  2DAB               	goto	l706
  9957                           	
  9958  15AB                     l10318:	
  9959                           	line	94
  9960                           	
  9961  15AB                     l706:	
  9962  15AB  0008               	return
  9963                           	opt stack 0
  9964                           GLOBAL	__end_of_adc_read
  9965  15AC                     	__end_of_adc_read:
  9966 ;; =============== function _adc_read ends ============
  9967                           
  9968                           	signat	_adc_read,90
  9969                           	global	_isr1
  9970                           psect	text1007,local,class=CODE,delta=2
  9971                           global __ptext1007
  9972  0D37                     __ptext1007:
  9973                           
  9974 ;; *************** function _isr1 *****************
  9975 ;; Defined at:
  9976 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;		None
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;		None
  9981 ;; Return value:  Size  Location     Type
  9982 ;;		None               void
  9983 ;; Registers used:
  9984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9990 ;;      Params:         0       0       0       0       0
  9991 ;;      Locals:         0       0       0       0       0
  9992 ;;      Temps:          5       0       0       0       0
  9993 ;;      Totals:         5       0       0       0       0
  9994 ;;Total ram usage:        5 bytes
  9995 ;; Hardware stack levels used:    1
  9996 ;; Hardware stack levels required when called:    2
  9997 ;; This function calls:
  9998 ;;		i1___lwmod
  9999 ;;		_ReadButtons
 10000 ;; This function is called by:
 10001 ;;		Interrupt level 1
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           psect	text1007
 10005                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 10006                           	line	109
 10007                           	global	__size_of_isr1
 10008  00AB                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 10009                           	
 10010  0D37                     _isr1:	
 10011                           	opt	stack 0
 10012                           ; Regs used in _isr1: [allreg]
 10013                           psect	intentry,class=CODE,delta=2
 10014                           global __pintentry
 10015  0004                     __pintentry:
 10016                           global interrupt_function
 10017  0004                     interrupt_function:
 10018                           	global saved_w
 10019  007E                     	saved_w	set	btemp+0
 10020  0004  00FE               	movwf	saved_w
 10021  0005  0E03               	swapf	status,w
 10022  0006  00F9               	movwf	(??_isr1+1)
 10023  0007  0804               	movf	fsr0,w
 10024  0008  00FA               	movwf	(??_isr1+2)
 10025  0009  080A               	movf	pclath,w
 10026  000A  00FB               	movwf	(??_isr1+3)
 10027  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 10028  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 10029  000D  087F               	movf	btemp+1,w
 10030  000E  00FC               	movwf	(??_isr1+4)
 10031  000F  120A  158A  2D37   	ljmp	_isr1
 10032                           psect	text1007
 10033                           	line	110
 10034                           	
 10035  0D37                     i1l10346:	
 10036                           ;Main.c: 110: if(TMR0IF)
 10037  0D37  1D0B               	btfss	(90/8),(90)&7
 10038  0D38  2D3A               	goto	u357_21
 10039  0D39  2D3B               	goto	u357_20
 10040  0D3A                     u357_21:
 10041  0D3A  2D8A               	goto	i1l10368
 10042  0D3B                     u357_20:
 10043                           	line	112
 10044                           	
 10045  0D3B                     i1l10348:	
 10046                           ;Main.c: 111: {
 10047                           ;Main.c: 112: TMR0IF = 0;
 10048  0D3B  110B               	bcf	(90/8),(90)&7
 10049                           	line	113
 10050                           	
 10051  0D3C                     i1l10350:	
 10052                           ;Main.c: 113: TMR0 = 100;
 10053  0D3C  3064               	movlw	(064h)
 10054  0D3D  0081               	movwf	(1)	;volatile
 10055                           	line	115
 10056                           ;Main.c: 115: RTC_Counter++;
 10057  0D3E  3001               	movlw	low(01h)
 10058  0D3F  1683               	bsf	status, 5	;RP0=1, select bank1
 10059  0D40  1303               	bcf	status, 6	;RP1=0, select bank1
 10060  0D41  07B6               	addwf	(_RTC_Counter)^080h,f	;volatile
 10061  0D42  1803               	skipnc
 10062  0D43  0AB7               	incf	(_RTC_Counter+1)^080h,f	;volatile
 10063  0D44  3000               	movlw	high(01h)
 10064  0D45  07B7               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 10065                           	line	118
 10066                           	
 10067  0D46                     i1l10352:	
 10068                           ;Main.c: 118: RTC_FLAG_1MS = 1;
 10069  0D46  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 10070                           	line	119
 10071                           	
 10072  0D47                     i1l10354:	
 10073                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
 10074  0D47  30FA               	movlw	low(0FAh)
 10075  0D48  00F2               	movwf	(?i1___lwmod)
 10076  0D49  3000               	movlw	high(0FAh)
 10077  0D4A  00F3               	movwf	((?i1___lwmod))+1
 10078  0D4B  0837               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10079  0D4C  01F5               	clrf	1+(?i1___lwmod)+02h
 10080  0D4D  07F5               	addwf	1+(?i1___lwmod)+02h
 10081  0D4E  0836               	movf	(_RTC_Counter)^080h,w	;volatile
 10082  0D4F  01F4               	clrf	0+(?i1___lwmod)+02h
 10083  0D50  07F4               	addwf	0+(?i1___lwmod)+02h
 10084                           
 10085  0D51  160A  118A  27BC   	fcall	i1___lwmod
              120A  158A         
 10086  0D56  0873               	movf	((1+(?i1___lwmod))),w
 10087  0D57  0472               	iorwf	((0+(?i1___lwmod))),w
 10088  0D58  1D03               	skipz
 10089  0D59  2D5B               	goto	u358_21
 10090  0D5A  2D5C               	goto	u358_20
 10091  0D5B                     u358_21:
 10092  0D5B  2D5E               	goto	i1l10358
 10093  0D5C                     u358_20:
 10094                           	line	121
 10095                           	
 10096  0D5C                     i1l10356:	
 10097                           ;Main.c: 120: {
 10098                           ;Main.c: 121: RTC_FLAG_250MS = 1;
 10099  0D5C  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 10100  0D5D  2D5E               	goto	i1l10358
 10101                           	line	122
 10102                           	
 10103  0D5E                     i1l2219:	
 10104                           	line	123
 10105                           	
 10106  0D5E                     i1l10358:	
 10107                           ;Main.c: 122: }
 10108                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
 10109  0D5E  30F4               	movlw	low(01F4h)
 10110  0D5F  00F2               	movwf	(?i1___lwmod)
 10111  0D60  3001               	movlw	high(01F4h)
 10112  0D61  00F3               	movwf	((?i1___lwmod))+1
 10113  0D62  1683               	bsf	status, 5	;RP0=1, select bank1
 10114  0D63  1303               	bcf	status, 6	;RP1=0, select bank1
 10115  0D64  0837               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10116  0D65  01F5               	clrf	1+(?i1___lwmod)+02h
 10117  0D66  07F5               	addwf	1+(?i1___lwmod)+02h
 10118  0D67  0836               	movf	(_RTC_Counter)^080h,w	;volatile
 10119  0D68  01F4               	clrf	0+(?i1___lwmod)+02h
 10120  0D69  07F4               	addwf	0+(?i1___lwmod)+02h
 10121                           
 10122  0D6A  160A  118A  27BC   	fcall	i1___lwmod
              120A  158A         
 10123  0D6F  0873               	movf	((1+(?i1___lwmod))),w
 10124  0D70  0472               	iorwf	((0+(?i1___lwmod))),w
 10125  0D71  1D03               	skipz
 10126  0D72  2D74               	goto	u359_21
 10127  0D73  2D75               	goto	u359_20
 10128  0D74                     u359_21:
 10129  0D74  2D7B               	goto	i1l10364
 10130  0D75                     u359_20:
 10131                           	line	125
 10132                           	
 10133  0D75                     i1l10360:	
 10134                           ;Main.c: 124: {
 10135                           ;Main.c: 125: RTC_FLAG_500MS = 1;
 10136  0D75  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 10137                           	line	126
 10138                           	
 10139  0D76                     i1l10362:	
 10140                           ;Main.c: 126: RB0 ^= 0x01;
 10141  0D76  1283               	bcf	status, 5	;RP0=0, select bank0
 10142  0D77  1303               	bcf	status, 6	;RP1=0, select bank0
 10143  0D78  3001               	movlw	1<<((48)&7)
 10144  0D79  0686               	xorwf	((48)/8),f
 10145  0D7A  2D7B               	goto	i1l10364
 10146                           	line	127
 10147                           	
 10148  0D7B                     i1l2220:	
 10149                           	line	128
 10150                           	
 10151  0D7B                     i1l10364:	
 10152                           ;Main.c: 127: }
 10153                           ;Main.c: 128: if (buttonPressed == 0)
 10154  0D7B  08FD               	movf	(_buttonPressed),f
 10155  0D7C  1D03               	skipz	;volatile
 10156  0D7D  2D7F               	goto	u360_21
 10157  0D7E  2D80               	goto	u360_20
 10158  0D7F                     u360_21:
 10159  0D7F  2D8A               	goto	i1l10368
 10160  0D80                     u360_20:
 10161                           	line	130
 10162                           	
 10163  0D80                     i1l10366:	
 10164                           ;Main.c: 129: {
 10165                           ;Main.c: 130: buttonPressed = ReadButtons();
 10166  0D80  160A  118A  26E3   	fcall	_ReadButtons
              120A  158A         
 10167  0D85  00F8               	movwf	(??_isr1+0)+0
 10168  0D86  0878               	movf	(??_isr1+0)+0,w
 10169  0D87  00FD               	movwf	(_buttonPressed)	;volatile
 10170  0D88  2D8A               	goto	i1l10368
 10171                           	line	131
 10172                           	
 10173  0D89                     i1l2221:	
 10174  0D89  2D8A               	goto	i1l10368
 10175                           	line	132
 10176                           	
 10177  0D8A                     i1l2218:	
 10178                           	line	133
 10179                           	
 10180  0D8A                     i1l10368:	
 10181                           ;Main.c: 131: }
 10182                           ;Main.c: 132: }
 10183                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 10184  0D8A  1283               	bcf	status, 5	;RP0=0, select bank0
 10185  0D8B  1303               	bcf	status, 6	;RP1=0, select bank0
 10186  0D8C  1E8C               	btfss	(101/8),(101)&7
 10187  0D8D  2D8F               	goto	u361_21
 10188  0D8E  2D90               	goto	u361_20
 10189  0D8F                     u361_21:
 10190  0D8F  2DAC               	goto	i1l10378
 10191  0D90                     u361_20:
 10192                           	
 10193  0D90                     i1l10370:	
 10194  0D90  081A               	movf	(26),w	;volatile
 10195  0D91  00F8               	movwf	(??_isr1+0)+0
 10196  0D92  1683               	bsf	status, 5	;RP0=1, select bank1
 10197  0D93  1303               	bcf	status, 6	;RP1=0, select bank1
 10198  0D94  0856               	movf	(_rxiptr)^080h,w
 10199  0D95  3EA0               	addlw	_rxfifo&0ffh
 10200  0D96  0084               	movwf	fsr0
 10201  0D97  0878               	movf	(??_isr1+0)+0,w
 10202  0D98  1383               	bcf	status, 7	;select IRP bank1
 10203  0D99  0080               	movwf	indf
 10204                           	
 10205  0D9A                     i1l10372:	
 10206  0D9A  0856               	movf	(_rxiptr)^080h,w	;volatile
 10207  0D9B  3E01               	addlw	01h
 10208  0D9C  390F               	andlw	0Fh
 10209  0D9D  00F8               	movwf	(??_isr1+0)+0
 10210  0D9E  0878               	movf	(??_isr1+0)+0,w
 10211  0D9F  00D8               	movwf	(_ser_tmp)^080h
 10212                           	
 10213  0DA0                     i1l10374:	
 10214  0DA0  0858               	movf	(_ser_tmp)^080h,w
 10215  0DA1  0657               	xorwf	(_rxoptr)^080h,w	;volatile
 10216  0DA2  1903               	skipnz
 10217  0DA3  2DA5               	goto	u362_21
 10218  0DA4  2DA6               	goto	u362_20
 10219  0DA5                     u362_21:
 10220  0DA5  2DAC               	goto	i1l10378
 10221  0DA6                     u362_20:
 10222                           	
 10223  0DA6                     i1l10376:	
 10224  0DA6  0858               	movf	(_ser_tmp)^080h,w
 10225  0DA7  00F8               	movwf	(??_isr1+0)+0
 10226  0DA8  0878               	movf	(??_isr1+0)+0,w
 10227  0DA9  00D6               	movwf	(_rxiptr)^080h	;volatile
 10228  0DAA  2DAC               	goto	i1l10378
 10229                           	
 10230  0DAB                     i1l2223:	
 10231  0DAB  2DAC               	goto	i1l10378
 10232                           	
 10233  0DAC                     i1l2222:	
 10234                           	
 10235  0DAC                     i1l10378:	
 10236  0DAC  1283               	bcf	status, 5	;RP0=0, select bank0
 10237  0DAD  1E0C               	btfss	(100/8),(100)&7
 10238  0DAE  2DB0               	goto	u363_21
 10239  0DAF  2DB1               	goto	u363_20
 10240  0DB0                     u363_21:
 10241  0DB0  2DD6               	goto	i1l2226
 10242  0DB1                     u363_20:
 10243                           	
 10244  0DB1                     i1l10380:	
 10245  0DB1  1683               	bsf	status, 5	;RP0=1, select bank1
 10246  0DB2  1303               	bcf	status, 6	;RP1=0, select bank1
 10247  0DB3  1E0C               	btfss	(1124/8)^080h,(1124)&7
 10248  0DB4  2DB6               	goto	u364_21
 10249  0DB5  2DB7               	goto	u364_20
 10250  0DB6                     u364_21:
 10251  0DB6  2DD6               	goto	i1l2226
 10252  0DB7                     u364_20:
 10253                           	
 10254  0DB7                     i1l10382:	
 10255  0DB7  085B               	movf	(_txoptr)^080h,w
 10256  0DB8  3EA0               	addlw	_txfifo&0ffh
 10257  0DB9  0084               	movwf	fsr0
 10258  0DBA  1783               	bsf	status, 7	;select IRP bank3
 10259  0DBB  0800               	movf	indf,w
 10260  0DBC  1283               	bcf	status, 5	;RP0=0, select bank0
 10261  0DBD  1303               	bcf	status, 6	;RP1=0, select bank0
 10262  0DBE  0099               	movwf	(25)	;volatile
 10263                           	
 10264  0DBF                     i1l10384:	
 10265  0DBF  3001               	movlw	(01h)
 10266  0DC0  00F8               	movwf	(??_isr1+0)+0
 10267  0DC1  0878               	movf	(??_isr1+0)+0,w
 10268  0DC2  1683               	bsf	status, 5	;RP0=1, select bank1
 10269  0DC3  1303               	bcf	status, 6	;RP1=0, select bank1
 10270  0DC4  07DB               	addwf	(_txoptr)^080h,f	;volatile
 10271                           	
 10272  0DC5                     i1l10386:	
 10273  0DC5  300F               	movlw	(0Fh)
 10274  0DC6  00F8               	movwf	(??_isr1+0)+0
 10275  0DC7  0878               	movf	(??_isr1+0)+0,w
 10276  0DC8  05DB               	andwf	(_txoptr)^080h,f	;volatile
 10277                           	
 10278  0DC9                     i1l10388:	
 10279  0DC9  085B               	movf	(_txoptr)^080h,w	;volatile
 10280  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
 10281  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
 10282  0DCC  066F               	xorwf	(_txiptr),w	;volatile
 10283  0DCD  1D03               	skipz
 10284  0DCE  2DD0               	goto	u365_21
 10285  0DCF  2DD1               	goto	u365_20
 10286  0DD0                     u365_21:
 10287  0DD0  2DD6               	goto	i1l2226
 10288  0DD1                     u365_20:
 10289                           	
 10290  0DD1                     i1l10390:	
 10291  0DD1  1683               	bsf	status, 5	;RP0=1, select bank1
 10292  0DD2  1303               	bcf	status, 6	;RP1=0, select bank1
 10293  0DD3  120C               	bcf	(1124/8)^080h,(1124)&7
 10294  0DD4  2DD6               	goto	i1l2226
 10295                           	
 10296  0DD5                     i1l2225:	
 10297  0DD5  2DD6               	goto	i1l2226
 10298                           	
 10299  0DD6                     i1l2224:	
 10300                           	line	134
 10301                           	
 10302  0DD6                     i1l2226:	
 10303  0DD6  087C               	movf	(??_isr1+4),w
 10304  0DD7  1283               	bcf	status, 5	;RP0=0, select bank0
 10305  0DD8  00FF               	movwf	btemp+1
 10306  0DD9  087B               	movf	(??_isr1+3),w
 10307  0DDA  008A               	movwf	pclath
 10308  0DDB  087A               	movf	(??_isr1+2),w
 10309  0DDC  0084               	movwf	fsr0
 10310  0DDD  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 10311  0DDE  0083               	movwf	status
 10312  0DDF  0EFE               	swapf	saved_w,f
 10313  0DE0  0E7E               	swapf	saved_w,w
 10314  0DE1  0009               	retfie
 10315                           	opt stack 0
 10316                           GLOBAL	__end_of_isr1
 10317  0DE2                     	__end_of_isr1:
 10318 ;; =============== function _isr1 ends ============
 10319                           
 10320                           	signat	_isr1,88
 10321                           	global	_ReadButtons
 10322                           psect	text1008,local,class=CODE,delta=2
 10323                           global __ptext1008
 10324  16E3                     __ptext1008:
 10325                           
 10326 ;; *************** function _ReadButtons *****************
 10327 ;; Defined at:
 10328 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0, pclath, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10342 ;;      Params:         0       0       0       0       0
 10343 ;;      Locals:         0       0       0       0       0
 10344 ;;      Temps:          0       0       0       0       0
 10345 ;;      Totals:         0       0       0       0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    1
 10349 ;; This function calls:
 10350 ;;		_Debounce
 10351 ;; This function is called by:
 10352 ;;		_isr1
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           psect	text1008
 10356                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10357                           	line	159
 10358                           	global	__size_of_ReadButtons
 10359  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 10360                           	
 10361  16E3                     _ReadButtons:	
 10362                           	opt	stack 0
 10363                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 10364                           	line	161
 10365                           	
 10366  16E3                     i1l10392:	
 10367                           ;HMI.c: 161: Debounce();
 10368  16E3  120A  158A  23F7   	fcall	_Debounce
              160A  118A         
 10369                           	line	163
 10370                           	
 10371  16E8                     i1l10394:	
 10372                           ;HMI.c: 163: if(UpPressed)
 10373  16E8  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 10374  16E9  2EEB               	goto	u366_21
 10375  16EA  2EEC               	goto	u366_20
 10376  16EB                     u366_21:
 10377  16EB  2EF0               	goto	i1l4522
 10378  16EC                     u366_20:
 10379                           	line	165
 10380                           	
 10381  16EC                     i1l10396:	
 10382                           ;HMI.c: 164: {
 10383                           ;HMI.c: 165: UpPressed = 0;
 10384  16EC  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 10385                           	line	166
 10386                           	
 10387  16ED                     i1l10398:	
 10388                           ;HMI.c: 166: return 1;
 10389  16ED  3001               	movlw	(01h)
 10390  16EE  2F12               	goto	i1l4523
 10391                           	
 10392  16EF                     i1l10400:	
 10393  16EF  2F12               	goto	i1l4523
 10394                           	line	168
 10395                           	
 10396  16F0                     i1l4522:	
 10397                           	line	170
 10398                           ;HMI.c: 168: }
 10399                           ;HMI.c: 170: if(DownPressed)
 10400  16F0  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 10401  16F1  2EF3               	goto	u367_21
 10402  16F2  2EF4               	goto	u367_20
 10403  16F3                     u367_21:
 10404  16F3  2EF8               	goto	i1l4524
 10405  16F4                     u367_20:
 10406                           	line	172
 10407                           	
 10408  16F4                     i1l10402:	
 10409                           ;HMI.c: 171: {
 10410                           ;HMI.c: 172: DownPressed = 0;
 10411  16F4  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 10412                           	line	173
 10413                           	
 10414  16F5                     i1l10404:	
 10415                           ;HMI.c: 173: return 2;
 10416  16F5  3002               	movlw	(02h)
 10417  16F6  2F12               	goto	i1l4523
 10418                           	
 10419  16F7                     i1l10406:	
 10420  16F7  2F12               	goto	i1l4523
 10421                           	line	175
 10422                           	
 10423  16F8                     i1l4524:	
 10424                           	line	176
 10425                           ;HMI.c: 175: }
 10426                           ;HMI.c: 176: if(LeftPressed)
 10427  16F8  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 10428  16F9  2EFB               	goto	u368_21
 10429  16FA  2EFC               	goto	u368_20
 10430  16FB                     u368_21:
 10431  16FB  2F00               	goto	i1l4525
 10432  16FC                     u368_20:
 10433                           	line	178
 10434                           	
 10435  16FC                     i1l10408:	
 10436                           ;HMI.c: 177: {
 10437                           ;HMI.c: 178: LeftPressed = 0;
 10438  16FC  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 10439                           	line	179
 10440                           	
 10441  16FD                     i1l10410:	
 10442                           ;HMI.c: 179: return 3;
 10443  16FD  3003               	movlw	(03h)
 10444  16FE  2F12               	goto	i1l4523
 10445                           	
 10446  16FF                     i1l10412:	
 10447  16FF  2F12               	goto	i1l4523
 10448                           	line	181
 10449                           	
 10450  1700                     i1l4525:	
 10451                           	line	182
 10452                           ;HMI.c: 181: }
 10453                           ;HMI.c: 182: if(RightPressed)
 10454  1700  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 10455  1701  2F03               	goto	u369_21
 10456  1702  2F04               	goto	u369_20
 10457  1703                     u369_21:
 10458  1703  2F08               	goto	i1l4526
 10459  1704                     u369_20:
 10460                           	line	184
 10461                           	
 10462  1704                     i1l10414:	
 10463                           ;HMI.c: 183: {
 10464                           ;HMI.c: 184: RightPressed = 0;
 10465  1704  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 10466                           	line	185
 10467                           	
 10468  1705                     i1l10416:	
 10469                           ;HMI.c: 185: return 4;
 10470  1705  3004               	movlw	(04h)
 10471  1706  2F12               	goto	i1l4523
 10472                           	
 10473  1707                     i1l10418:	
 10474  1707  2F12               	goto	i1l4523
 10475                           	line	187
 10476                           	
 10477  1708                     i1l4526:	
 10478                           	line	189
 10479                           ;HMI.c: 187: }
 10480                           ;HMI.c: 189: if(CenterPressed)
 10481  1708  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 10482  1709  2F0B               	goto	u370_21
 10483  170A  2F0C               	goto	u370_20
 10484  170B                     u370_21:
 10485  170B  2F10               	goto	i1l10426
 10486  170C                     u370_20:
 10487                           	line	191
 10488                           	
 10489  170C                     i1l10420:	
 10490                           ;HMI.c: 190: {
 10491                           ;HMI.c: 191: CenterPressed = 0;
 10492  170C  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 10493                           	line	192
 10494                           	
 10495  170D                     i1l10422:	
 10496                           ;HMI.c: 192: return 5;
 10497  170D  3005               	movlw	(05h)
 10498  170E  2F12               	goto	i1l4523
 10499                           	
 10500  170F                     i1l10424:	
 10501  170F  2F12               	goto	i1l4523
 10502                           	line	194
 10503                           	
 10504  1710                     i1l4527:	
 10505                           	line	195
 10506                           	
 10507  1710                     i1l10426:	
 10508                           ;HMI.c: 194: }
 10509                           ;HMI.c: 195: return 0;
 10510  1710  3000               	movlw	(0)
 10511  1711  2F12               	goto	i1l4523
 10512                           	
 10513  1712                     i1l10428:	
 10514                           	line	196
 10515                           	
 10516  1712                     i1l4523:	
 10517  1712  0008               	return
 10518                           	opt stack 0
 10519                           GLOBAL	__end_of_ReadButtons
 10520  1713                     	__end_of_ReadButtons:
 10521 ;; =============== function _ReadButtons ends ============
 10522                           
 10523                           	signat	_ReadButtons,89
 10524                           	global	i1___lwmod
 10525                           psect	text1009,local,class=CODE,delta=2
 10526                           global __ptext1009
 10527  17BC                     __ptext1009:
 10528                           
 10529 ;; *************** function i1___lwmod *****************
 10530 ;; Defined at:
 10531 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  __lwmod         2    0[COMMON] unsigned int 
 10534 ;;  __lwmod         2    2[COMMON] unsigned int 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  __lwmod         1    5[COMMON] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  2    0[COMMON] unsigned int 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10546 ;;      Params:         4       0       0       0       0
 10547 ;;      Locals:         1       0       0       0       0
 10548 ;;      Temps:          1       0       0       0       0
 10549 ;;      Totals:         6       0       0       0       0
 10550 ;;Total ram usage:        6 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_isr1
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           psect	text1009
 10559                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10560                           	line	5
 10561                           	global	__size_ofi1___lwmod
 10562  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 10563                           	
 10564  17BC                     i1___lwmod:	
 10565                           	opt	stack 1
 10566                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 10567                           	line	8
 10568                           	
 10569  17BC                     i1l10710:	
 10570  17BC  0873               	movf	(i1___lwmod@divisor+1),w
 10571  17BD  0472               	iorwf	(i1___lwmod@divisor),w
 10572  17BE  1903               	skipnz
 10573  17BF  2FC1               	goto	u427_21
 10574  17C0  2FC2               	goto	u427_20
 10575  17C1                     u427_21:
 10576  17C1  2FF8               	goto	i1l10728
 10577  17C2                     u427_20:
 10578                           	line	9
 10579                           	
 10580  17C2                     i1l10712:	
 10581  17C2  01F7               	clrf	(i1___lwmod@counter)
 10582  17C3  1403               	bsf	status,0
 10583  17C4  0DF7               	rlf	(i1___lwmod@counter),f
 10584                           	line	10
 10585  17C5  2FD2               	goto	i1l10718
 10586                           	
 10587  17C6                     i1l7552:	
 10588                           	line	11
 10589                           	
 10590  17C6                     i1l10714:	
 10591  17C6  3001               	movlw	01h
 10592                           	
 10593  17C7                     u428_25:
 10594  17C7  1003               	clrc
 10595  17C8  0DF2               	rlf	(i1___lwmod@divisor),f
 10596  17C9  0DF3               	rlf	(i1___lwmod@divisor+1),f
 10597  17CA  3EFF               	addlw	-1
 10598  17CB  1D03               	skipz
 10599  17CC  2FC7               	goto	u428_25
 10600                           	line	12
 10601                           	
 10602  17CD                     i1l10716:	
 10603  17CD  3001               	movlw	(01h)
 10604  17CE  00F6               	movwf	(??i1___lwmod+0)+0
 10605  17CF  0876               	movf	(??i1___lwmod+0)+0,w
 10606  17D0  07F7               	addwf	(i1___lwmod@counter),f
 10607  17D1  2FD2               	goto	i1l10718
 10608                           	line	13
 10609                           	
 10610  17D2                     i1l7551:	
 10611                           	line	10
 10612                           	
 10613  17D2                     i1l10718:	
 10614  17D2  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 10615  17D3  2FD5               	goto	u429_21
 10616  17D4  2FD6               	goto	u429_20
 10617  17D5                     u429_21:
 10618  17D5  2FC6               	goto	i1l10714
 10619  17D6                     u429_20:
 10620  17D6  2FD8               	goto	i1l10720
 10621                           	
 10622  17D7                     i1l7553:	
 10623  17D7  2FD8               	goto	i1l10720
 10624                           	line	14
 10625                           	
 10626  17D8                     i1l7554:	
 10627                           	line	15
 10628                           	
 10629  17D8                     i1l10720:	
 10630  17D8  0873               	movf	(i1___lwmod@divisor+1),w
 10631  17D9  0275               	subwf	(i1___lwmod@dividend+1),w
 10632  17DA  1D03               	skipz
 10633  17DB  2FDE               	goto	u430_25
 10634  17DC  0872               	movf	(i1___lwmod@divisor),w
 10635  17DD  0274               	subwf	(i1___lwmod@dividend),w
 10636  17DE                     u430_25:
 10637  17DE  1C03               	skipc
 10638  17DF  2FE1               	goto	u430_21
 10639  17E0  2FE2               	goto	u430_20
 10640  17E1                     u430_21:
 10641  17E1  2FE9               	goto	i1l10724
 10642  17E2                     u430_20:
 10643                           	line	16
 10644                           	
 10645  17E2                     i1l10722:	
 10646  17E2  0872               	movf	(i1___lwmod@divisor),w
 10647  17E3  02F4               	subwf	(i1___lwmod@dividend),f
 10648  17E4  0873               	movf	(i1___lwmod@divisor+1),w
 10649  17E5  1C03               	skipc
 10650  17E6  03F5               	decf	(i1___lwmod@dividend+1),f
 10651  17E7  02F5               	subwf	(i1___lwmod@dividend+1),f
 10652  17E8  2FE9               	goto	i1l10724
 10653                           	
 10654  17E9                     i1l7555:	
 10655                           	line	17
 10656                           	
 10657  17E9                     i1l10724:	
 10658  17E9  3001               	movlw	01h
 10659                           	
 10660  17EA                     u431_25:
 10661  17EA  1003               	clrc
 10662  17EB  0CF3               	rrf	(i1___lwmod@divisor+1),f
 10663  17EC  0CF2               	rrf	(i1___lwmod@divisor),f
 10664  17ED  3EFF               	addlw	-1
 10665  17EE  1D03               	skipz
 10666  17EF  2FEA               	goto	u431_25
 10667                           	line	18
 10668                           	
 10669  17F0                     i1l10726:	
 10670  17F0  3001               	movlw	low(01h)
 10671  17F1  02F7               	subwf	(i1___lwmod@counter),f
 10672  17F2  1D03               	btfss	status,2
 10673  17F3  2FF5               	goto	u432_21
 10674  17F4  2FF6               	goto	u432_20
 10675  17F5                     u432_21:
 10676  17F5  2FD8               	goto	i1l10720
 10677  17F6                     u432_20:
 10678  17F6  2FF8               	goto	i1l10728
 10679                           	
 10680  17F7                     i1l7556:	
 10681  17F7  2FF8               	goto	i1l10728
 10682                           	line	19
 10683                           	
 10684  17F8                     i1l7550:	
 10685                           	line	20
 10686                           	
 10687  17F8                     i1l10728:	
 10688  17F8  0875               	movf	(i1___lwmod@dividend+1),w
 10689  17F9  01F3               	clrf	(?i1___lwmod+1)
 10690  17FA  07F3               	addwf	(?i1___lwmod+1)
 10691  17FB  0874               	movf	(i1___lwmod@dividend),w
 10692  17FC  01F2               	clrf	(?i1___lwmod)
 10693  17FD  07F2               	addwf	(?i1___lwmod)
 10694                           
 10695  17FE  2FFF               	goto	i1l7557
 10696                           	
 10697  17FF                     i1l10730:	
 10698                           	line	21
 10699                           	
 10700  17FF                     i1l7557:	
 10701  17FF  0008               	return
 10702                           	opt stack 0
 10703                           GLOBAL	__end_ofi1___lwmod
 10704  1800                     	__end_ofi1___lwmod:
 10705 ;; =============== function i1___lwmod ends ============
 10706                           
 10707                           	signat	i1___lwmod,90
 10708                           	global	_Debounce
 10709                           psect	text1010,local,class=CODE,delta=2
 10710                           global __ptext1010
 10711  0BF7                     __ptext1010:
 10712                           
 10713 ;; *************** function _Debounce *****************
 10714 ;; Defined at:
 10715 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;		None               void
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10729 ;;      Params:         0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0
 10731 ;;      Temps:          1       0       0       0       0
 10732 ;;      Totals:         1       0       0       0       0
 10733 ;;Total ram usage:        1 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; This function calls:
 10736 ;;		Nothing
 10737 ;; This function is called by:
 10738 ;;		_ReadButtons
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           psect	text1010
 10742                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10743                           	line	77
 10744                           	global	__size_of_Debounce
 10745  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 10746                           	
 10747  0BF7                     _Debounce:	
 10748                           	opt	stack 0
 10749                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 10750                           	line	79
 10751                           	
 10752  0BF7                     i1l10526:	
 10753                           ;HMI.c: 79: if(!RB2)
 10754  0BF7  1283               	bcf	status, 5	;RP0=0, select bank0
 10755  0BF8  1303               	bcf	status, 6	;RP1=0, select bank0
 10756  0BF9  1906               	btfsc	(50/8),(50)&7
 10757  0BFA  2BFC               	goto	u379_21
 10758  0BFB  2BFD               	goto	u379_20
 10759  0BFC                     u379_21:
 10760  0BFC  2C11               	goto	i1l4504
 10761  0BFD                     u379_20:
 10762                           	line	81
 10763                           	
 10764  0BFD                     i1l10528:	
 10765                           ;HMI.c: 80: {
 10766                           ;HMI.c: 81: UpDebounceCount++;
 10767  0BFD  3001               	movlw	(01h)
 10768  0BFE  00F2               	movwf	(??_Debounce+0)+0
 10769  0BFF  0872               	movf	(??_Debounce+0)+0,w
 10770  0C00  1683               	bsf	status, 5	;RP0=1, select bank1
 10771  0C01  1303               	bcf	status, 6	;RP1=0, select bank1
 10772  0C02  07D1               	addwf	(_UpDebounceCount)^080h,f	;volatile
 10773                           	line	82
 10774                           	
 10775  0C03                     i1l10530:	
 10776                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 10777  0C03  300A               	movlw	(0Ah)
 10778  0C04  0251               	subwf	(_UpDebounceCount)^080h,w	;volatile
 10779  0C05  1C03               	skipc
 10780  0C06  2C08               	goto	u380_21
 10781  0C07  2C09               	goto	u380_20
 10782  0C08                     u380_21:
 10783  0C08  2C15               	goto	i1l4506
 10784  0C09                     u380_20:
 10785                           	
 10786  0C09                     i1l10532:	
 10787  0C09  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 10788  0C0A  2C0C               	goto	u381_21
 10789  0C0B  2C0D               	goto	u381_20
 10790  0C0C                     u381_21:
 10791  0C0C  2C15               	goto	i1l4506
 10792  0C0D                     u381_20:
 10793                           	line	84
 10794                           	
 10795  0C0D                     i1l10534:	
 10796                           ;HMI.c: 83: {
 10797                           ;HMI.c: 84: UpPressed = 1;
 10798  0C0D  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 10799                           	line	85
 10800                           ;HMI.c: 85: UpReleased = 0;
 10801  0C0E  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 10802  0C0F  2C15               	goto	i1l4506
 10803                           	line	86
 10804                           	
 10805  0C10                     i1l4505:	
 10806                           	line	87
 10807                           ;HMI.c: 86: }
 10808                           ;HMI.c: 87: }
 10809  0C10  2C15               	goto	i1l4506
 10810                           	line	88
 10811                           	
 10812  0C11                     i1l4504:	
 10813                           	line	90
 10814                           ;HMI.c: 88: else
 10815                           ;HMI.c: 89: {
 10816                           ;HMI.c: 90: UpDebounceCount = 0;
 10817  0C11  1683               	bsf	status, 5	;RP0=1, select bank1
 10818  0C12  1303               	bcf	status, 6	;RP1=0, select bank1
 10819  0C13  01D1               	clrf	(_UpDebounceCount)^080h	;volatile
 10820                           	line	91
 10821                           ;HMI.c: 91: UpReleased = 1;
 10822  0C14  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 10823                           	line	92
 10824                           	
 10825  0C15                     i1l4506:	
 10826                           	line	95
 10827                           ;HMI.c: 92: }
 10828                           ;HMI.c: 95: if(!RB3)
 10829  0C15  1283               	bcf	status, 5	;RP0=0, select bank0
 10830  0C16  1303               	bcf	status, 6	;RP1=0, select bank0
 10831  0C17  1986               	btfsc	(51/8),(51)&7
 10832  0C18  2C1A               	goto	u382_21
 10833  0C19  2C1B               	goto	u382_20
 10834  0C1A                     u382_21:
 10835  0C1A  2C2F               	goto	i1l4507
 10836  0C1B                     u382_20:
 10837                           	line	97
 10838                           	
 10839  0C1B                     i1l10536:	
 10840                           ;HMI.c: 96: {
 10841                           ;HMI.c: 97: DownDebounceCount++;
 10842  0C1B  3001               	movlw	(01h)
 10843  0C1C  00F2               	movwf	(??_Debounce+0)+0
 10844  0C1D  0872               	movf	(??_Debounce+0)+0,w
 10845  0C1E  1683               	bsf	status, 5	;RP0=1, select bank1
 10846  0C1F  1303               	bcf	status, 6	;RP1=0, select bank1
 10847  0C20  07CD               	addwf	(_DownDebounceCount)^080h,f	;volatile
 10848                           	line	98
 10849                           	
 10850  0C21                     i1l10538:	
 10851                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 10852  0C21  300A               	movlw	(0Ah)
 10853  0C22  024D               	subwf	(_DownDebounceCount)^080h,w	;volatile
 10854  0C23  1C03               	skipc
 10855  0C24  2C26               	goto	u383_21
 10856  0C25  2C27               	goto	u383_20
 10857  0C26                     u383_21:
 10858  0C26  2C33               	goto	i1l4509
 10859  0C27                     u383_20:
 10860                           	
 10861  0C27                     i1l10540:	
 10862  0C27  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 10863  0C28  2C2A               	goto	u384_21
 10864  0C29  2C2B               	goto	u384_20
 10865  0C2A                     u384_21:
 10866  0C2A  2C33               	goto	i1l4509
 10867  0C2B                     u384_20:
 10868                           	line	100
 10869                           	
 10870  0C2B                     i1l10542:	
 10871                           ;HMI.c: 99: {
 10872                           ;HMI.c: 100: DownPressed = 1;
 10873  0C2B  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 10874                           	line	101
 10875                           ;HMI.c: 101: DownReleased = 0;
 10876  0C2C  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 10877  0C2D  2C33               	goto	i1l4509
 10878                           	line	102
 10879                           	
 10880  0C2E                     i1l4508:	
 10881                           	line	103
 10882                           ;HMI.c: 102: }
 10883                           ;HMI.c: 103: }
 10884  0C2E  2C33               	goto	i1l4509
 10885                           	line	104
 10886                           	
 10887  0C2F                     i1l4507:	
 10888                           	line	106
 10889                           ;HMI.c: 104: else
 10890                           ;HMI.c: 105: {
 10891                           ;HMI.c: 106: DownDebounceCount = 0;
 10892  0C2F  1683               	bsf	status, 5	;RP0=1, select bank1
 10893  0C30  1303               	bcf	status, 6	;RP1=0, select bank1
 10894  0C31  01CD               	clrf	(_DownDebounceCount)^080h	;volatile
 10895                           	line	107
 10896                           ;HMI.c: 107: DownReleased = 1;
 10897  0C32  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 10898                           	line	108
 10899                           	
 10900  0C33                     i1l4509:	
 10901                           	line	110
 10902                           ;HMI.c: 108: }
 10903                           ;HMI.c: 110: if(!RB4)
 10904  0C33  1283               	bcf	status, 5	;RP0=0, select bank0
 10905  0C34  1303               	bcf	status, 6	;RP1=0, select bank0
 10906  0C35  1A06               	btfsc	(52/8),(52)&7
 10907  0C36  2C38               	goto	u385_21
 10908  0C37  2C39               	goto	u385_20
 10909  0C38                     u385_21:
 10910  0C38  2C4D               	goto	i1l4510
 10911  0C39                     u385_20:
 10912                           	line	112
 10913                           	
 10914  0C39                     i1l10544:	
 10915                           ;HMI.c: 111: {
 10916                           ;HMI.c: 112: LeftDebounceCount++;
 10917  0C39  3001               	movlw	(01h)
 10918  0C3A  00F2               	movwf	(??_Debounce+0)+0
 10919  0C3B  0872               	movf	(??_Debounce+0)+0,w
 10920  0C3C  1683               	bsf	status, 5	;RP0=1, select bank1
 10921  0C3D  1303               	bcf	status, 6	;RP1=0, select bank1
 10922  0C3E  07CE               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 10923                           	line	113
 10924                           	
 10925  0C3F                     i1l10546:	
 10926                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 10927  0C3F  300A               	movlw	(0Ah)
 10928  0C40  024E               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 10929  0C41  1C03               	skipc
 10930  0C42  2C44               	goto	u386_21
 10931  0C43  2C45               	goto	u386_20
 10932  0C44                     u386_21:
 10933  0C44  2C51               	goto	i1l4512
 10934  0C45                     u386_20:
 10935                           	
 10936  0C45                     i1l10548:	
 10937  0C45  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 10938  0C46  2C48               	goto	u387_21
 10939  0C47  2C49               	goto	u387_20
 10940  0C48                     u387_21:
 10941  0C48  2C51               	goto	i1l4512
 10942  0C49                     u387_20:
 10943                           	line	115
 10944                           	
 10945  0C49                     i1l10550:	
 10946                           ;HMI.c: 114: {
 10947                           ;HMI.c: 115: LeftPressed = 1;
 10948  0C49  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 10949                           	line	116
 10950                           ;HMI.c: 116: LeftReleased = 0;
 10951  0C4A  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 10952  0C4B  2C51               	goto	i1l4512
 10953                           	line	117
 10954                           	
 10955  0C4C                     i1l4511:	
 10956                           	line	118
 10957                           ;HMI.c: 117: }
 10958                           ;HMI.c: 118: }
 10959  0C4C  2C51               	goto	i1l4512
 10960                           	line	119
 10961                           	
 10962  0C4D                     i1l4510:	
 10963                           	line	121
 10964                           ;HMI.c: 119: else
 10965                           ;HMI.c: 120: {
 10966                           ;HMI.c: 121: LeftDebounceCount = 0;
 10967  0C4D  1683               	bsf	status, 5	;RP0=1, select bank1
 10968  0C4E  1303               	bcf	status, 6	;RP1=0, select bank1
 10969  0C4F  01CE               	clrf	(_LeftDebounceCount)^080h	;volatile
 10970                           	line	122
 10971                           ;HMI.c: 122: LeftReleased = 1;
 10972  0C50  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 10973                           	line	123
 10974                           	
 10975  0C51                     i1l4512:	
 10976                           	line	125
 10977                           ;HMI.c: 123: }
 10978                           ;HMI.c: 125: if(!RB5)
 10979  0C51  1283               	bcf	status, 5	;RP0=0, select bank0
 10980  0C52  1303               	bcf	status, 6	;RP1=0, select bank0
 10981  0C53  1A86               	btfsc	(53/8),(53)&7
 10982  0C54  2C56               	goto	u388_21
 10983  0C55  2C57               	goto	u388_20
 10984  0C56                     u388_21:
 10985  0C56  2C6B               	goto	i1l4513
 10986  0C57                     u388_20:
 10987                           	line	127
 10988                           	
 10989  0C57                     i1l10552:	
 10990                           ;HMI.c: 126: {
 10991                           ;HMI.c: 127: RightDebounceCount++;
 10992  0C57  3001               	movlw	(01h)
 10993  0C58  00F2               	movwf	(??_Debounce+0)+0
 10994  0C59  0872               	movf	(??_Debounce+0)+0,w
 10995  0C5A  1683               	bsf	status, 5	;RP0=1, select bank1
 10996  0C5B  1303               	bcf	status, 6	;RP1=0, select bank1
 10997  0C5C  07D0               	addwf	(_RightDebounceCount)^080h,f	;volatile
 10998                           	line	128
 10999                           	
 11000  0C5D                     i1l10554:	
 11001                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 11002  0C5D  300A               	movlw	(0Ah)
 11003  0C5E  0250               	subwf	(_RightDebounceCount)^080h,w	;volatile
 11004  0C5F  1C03               	skipc
 11005  0C60  2C62               	goto	u389_21
 11006  0C61  2C63               	goto	u389_20
 11007  0C62                     u389_21:
 11008  0C62  2C6F               	goto	i1l4515
 11009  0C63                     u389_20:
 11010                           	
 11011  0C63                     i1l10556:	
 11012  0C63  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 11013  0C64  2C66               	goto	u390_21
 11014  0C65  2C67               	goto	u390_20
 11015  0C66                     u390_21:
 11016  0C66  2C6F               	goto	i1l4515
 11017  0C67                     u390_20:
 11018                           	line	130
 11019                           	
 11020  0C67                     i1l10558:	
 11021                           ;HMI.c: 129: {
 11022                           ;HMI.c: 130: RightPressed = 1;
 11023  0C67  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 11024                           	line	131
 11025                           ;HMI.c: 131: RightReleased = 0;
 11026  0C68  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 11027  0C69  2C6F               	goto	i1l4515
 11028                           	line	132
 11029                           	
 11030  0C6A                     i1l4514:	
 11031                           	line	133
 11032                           ;HMI.c: 132: }
 11033                           ;HMI.c: 133: }
 11034  0C6A  2C6F               	goto	i1l4515
 11035                           	line	134
 11036                           	
 11037  0C6B                     i1l4513:	
 11038                           	line	136
 11039                           ;HMI.c: 134: else
 11040                           ;HMI.c: 135: {
 11041                           ;HMI.c: 136: RightDebounceCount = 0;
 11042  0C6B  1683               	bsf	status, 5	;RP0=1, select bank1
 11043  0C6C  1303               	bcf	status, 6	;RP1=0, select bank1
 11044  0C6D  01D0               	clrf	(_RightDebounceCount)^080h	;volatile
 11045                           	line	137
 11046                           ;HMI.c: 137: RightReleased = 1;
 11047  0C6E  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 11048                           	line	138
 11049                           	
 11050  0C6F                     i1l4515:	
 11051                           	line	140
 11052                           ;HMI.c: 138: }
 11053                           ;HMI.c: 140: if(!RB6)
 11054  0C6F  1283               	bcf	status, 5	;RP0=0, select bank0
 11055  0C70  1303               	bcf	status, 6	;RP1=0, select bank0
 11056  0C71  1B06               	btfsc	(54/8),(54)&7
 11057  0C72  2C74               	goto	u391_21
 11058  0C73  2C75               	goto	u391_20
 11059  0C74                     u391_21:
 11060  0C74  2C89               	goto	i1l4516
 11061  0C75                     u391_20:
 11062                           	line	142
 11063                           	
 11064  0C75                     i1l10560:	
 11065                           ;HMI.c: 141: {
 11066                           ;HMI.c: 142: CenterDebounceCount++;
 11067  0C75  3001               	movlw	(01h)
 11068  0C76  00F2               	movwf	(??_Debounce+0)+0
 11069  0C77  0872               	movf	(??_Debounce+0)+0,w
 11070  0C78  1683               	bsf	status, 5	;RP0=1, select bank1
 11071  0C79  1303               	bcf	status, 6	;RP1=0, select bank1
 11072  0C7A  07CA               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 11073                           	line	143
 11074                           	
 11075  0C7B                     i1l10562:	
 11076                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 11077  0C7B  300A               	movlw	(0Ah)
 11078  0C7C  024A               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 11079  0C7D  1C03               	skipc
 11080  0C7E  2C80               	goto	u392_21
 11081  0C7F  2C81               	goto	u392_20
 11082  0C80                     u392_21:
 11083  0C80  2C8E               	goto	i1l4519
 11084  0C81                     u392_20:
 11085                           	
 11086  0C81                     i1l10564:	
 11087  0C81  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 11088  0C82  2C84               	goto	u393_21
 11089  0C83  2C85               	goto	u393_20
 11090  0C84                     u393_21:
 11091  0C84  2C8E               	goto	i1l4519
 11092  0C85                     u393_20:
 11093                           	line	145
 11094                           	
 11095  0C85                     i1l10566:	
 11096                           ;HMI.c: 144: {
 11097                           ;HMI.c: 145: CenterPressed = 1;
 11098  0C85  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 11099                           	line	146
 11100                           ;HMI.c: 146: CenterReleased = 0;
 11101  0C86  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 11102  0C87  2C8E               	goto	i1l4519
 11103                           	line	147
 11104                           	
 11105  0C88                     i1l4517:	
 11106                           	line	148
 11107                           ;HMI.c: 147: }
 11108                           ;HMI.c: 148: }
 11109  0C88  2C8E               	goto	i1l4519
 11110                           	line	149
 11111                           	
 11112  0C89                     i1l4516:	
 11113                           	line	151
 11114                           ;HMI.c: 149: else
 11115                           ;HMI.c: 150: {
 11116                           ;HMI.c: 151: CenterDebounceCount = 0;
 11117  0C89  1683               	bsf	status, 5	;RP0=1, select bank1
 11118  0C8A  1303               	bcf	status, 6	;RP1=0, select bank1
 11119  0C8B  01CA               	clrf	(_CenterDebounceCount)^080h	;volatile
 11120                           	line	152
 11121                           ;HMI.c: 152: CenterReleased = 1;
 11122  0C8C  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 11123  0C8D  2C8E               	goto	i1l4519
 11124                           	line	153
 11125                           	
 11126  0C8E                     i1l4518:	
 11127                           	line	154
 11128                           	
 11129  0C8E                     i1l4519:	
 11130  0C8E  0008               	return
 11131                           	opt stack 0
 11132                           GLOBAL	__end_of_Debounce
 11133  0C8F                     	__end_of_Debounce:
 11134 ;; =============== function _Debounce ends ============
 11135                           
 11136                           	signat	_Debounce,88
 11137                           psect	text1011,local,class=CODE,delta=2
 11138                           global __ptext1011
 11139  0000                     __ptext1011:
 11140                           	global	btemp
 11141  007E                     	btemp set 07Eh
 11142                           
 11143                           	DABS	1,126,2	;btemp
 11144                           	global	wtemp0
 11145  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 18 11:41:40 2015

   RobotDrive@radiuslowByte 0029   __end_of_lcd_write_control 1531             ??_UpdateDisplay 0045  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                  _IRdistance 00B4                          fsr 0004  
       ___wmul@multiplicand 0022                         l700 1546                         l703 1588  
                       l704 1588                         l705 158C                         l706 15AB  
                       l690 1785                         l691 17AE                         l692 1789  
                       l693 178D                         l694 1791                         l695 1795  
                       l696 1799                         l689 179D                         l697 17BB  
                       _GIE 005F                         _RB0 0030                         _RC0 0038  
                       _RB2 0032                         _RC1 0039                         _RB3 0033  
                       _RC2 003A                         _RB4 0034                         _RB5 0035  
                       _RE0 0048                         _RB6 0036                         _RE1 0049  
                       _RE2 004A                         _RX9 00C6                         _TX9 04C6  
                       _abs 1713                         _pos 00C2                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026         robotFollow@distance 0059  
          ??_robotMoveSpeed 005D             ?_lcd_set_cursor 0072                        ?_abs 0026  
                      l1402 14F5                        l1410 1685                        l1411 1685  
                      l3003 0B92                        l3020 0197                        l3012 0063  
                      l3004 0BC8                        l3013 0237                        l3021 0233  
                      l1405 14D5                        l3005 0BB4                        l3022 01E4  
                      l3014 00B0                        l3006 0BF6                        l3015 0236  
                      l3023 0232                        l3024 0231                        l3016 00FD  
                      l1408 1674                        l2240 0304                        l2232 0246  
                      l3017 0235                        l3025 0237                        l1409 165B  
                      l3009 155C                        l2241 036E                        l2233 025C  
                      l3018 014A                        l2242 0416                        l2250 03EE  
                      l2234 026D                        l3019 0234                        l2235 0428  
                      l2251 041F                        l2243 036F                        l2252 0420  
                      l2244 0405                        l2236 026E                        l1429 15D6  
                      l2229 16E2                        l2237 043E                        l2253 0426  
                      l2245 0370                        l2270 0A7F                        l2262 0A51  
                      l2254 0445                        l2246 0415                        l2238 0274  
                      l2271 0A9C                        l2263 0A5C                        l2255 0446  
                      l2247 0386                        l2239 0275                        l2264 0A89  
                      l2272 0A87                        l2280 092D                        l2256 0446  
                      l2248 0387                        l2273 0A9B                        l2265 0A5D  
                      l2281 0955                        l2249 03B3                        l2274 0A9C  
                      l2266 0A9A                        l2282 092F                        l2267 0A5F  
                      l2283 0931                        l2268 0A61                        l2284 0933  
                      l2269 0A71                        l2285 0935                        l2277 0921  
                      l2286 0957                        l2278 092C                        l1399 1530  
                      l2279 0944                        l2287 0941                        l2288 0956  
                      l2289 0957                        l3720 1511                        l6040 0FFD  
                      l3721 1511                        l6033 07F6                        l6041 0FFF  
                      l4530 098A                        l3722 1516                        l3730 0A2D  
                      l6050 0B77                        l4531 095C                        l3723 151C  
                      l3731 0A3E                        l6051 0B78                        l4532 099C  
                      l4540 0988                        l6044 1780                        l6036 0F60  
                      l6060 04EF                        l4533 095D                        l6037 0FFF  
                      l6061 05B3                        l4534 095E                        l3726 09FF  
                      l6038 0F97                        l4550 069E                        l6054 057E  
                      l6062 051C                        l4535 096F                        l3727 0A06  
                      l6047 0B33                        l6039 0FFE                        l4551 06E9  
                      l6071 0799                        l6063 050A                        l6055 0462  
                      l4536 0970                        l3728 0A23                        l6048 0B78  
                      l4552 0712                        l6080 0CF6                        l6072 0738  
                      l6064 051B                        l6056 049D                        l4537 0982  
                      l3729 0A0D                        l6049 0B58                        l4545 0714  
                      l4553 0721                        l6081 0CA3                        l6073 0752  
                      l6065 0537                        l6057 051D                        l4538 0983  
                      l4546 05DC                        l6082 0CBD                        l6058 04D3  
                      l4539 099E                        l4547 0643                        l6075 074C  
                      l6067 0531                        l6059 051D                        l4548 0656  
                      l6084 0CB7                        l6076 07CE                        l6068 05C2  
                      l4549 0721                        l6085 0D2B                        l6077 07DD  
                      l6086 0D36                        l6089 1747                        l6800 156D  
                      l6801 1582                        l7540 09E7                        l7541 09B9  
                      l7534 1607                        l7542 09AD                        l7550 090A  
                      l6823 16B3                        l7535 1611                        l7543 09BE  
                      l7551 08E4                        l7536 1626                        l7544 09BF  
                      l7552 08D8                        l6832 0EC8                        l6840 0E18  
                      l7537 162D                        l7545 09D8                        l7553 08E9  
                      l6841 0E01                        l6833 0DEA                        l7546 09E6  
                      l7554 08EA                        l6850 0EDB                        l6842 0E32  
                      l6834 0DFC                        l7547 09EE                        l7555 08FB  
                      l6851 0EE1                        l6843 0E3D                        l6835 0E03  
                      l7556 0909                        l6844 0E65                        l6836 0DFE  
                      l7557 0911                        l6837 0EDC                        l6845 0E5A  
                      l7750 0AF2                        l7742 0AAD                        l6846 0E77  
                      l6838 0DFF                        l7751 0AFD                        l7743 0AB7  
                      l6847 0EBC                        l6839 0E00                        l7752 0B04  
                      l7744 0AF3                        l6848 0E7C                        l6792 1630  
                      l7745 0ACD                        l6849 0EC7                        l6793 162F  
                      l7746 0AC1                        l6794 1639                        l7747 0AD2  
                      l6795 1659                        l6788 08BE                        l7748 0AD3  
                      l6789 08CB                        l7749 0AE4                        l6798 1562  
                      l6799 1561                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0862                        STR_2 0859  
                      STR_3 0874                        STR_4 087D                        STR_5 086B  
                      STR_6 0850                        STR_7 08A1                        STR_8 08A5  
                      STR_9 088D                        _BRGH 04C2                        _CREN 00C4  
                      u4010 160B                        u4011 160A                        u4110 09E5  
                      u4111 09E4                        u4040 1625                        u4120 08D4  
                      u4200 0ABD                        u4041 1624                        u4025 1612  
                      u4105 09D9                        u4121 08D3                        u4201 0ABC  
                      u4050 09A9                        u4035 1619                        u4051 09A8  
                      u4140 08E8                        u4220 0AD1                        u4141 08E7  
                      u4221 0AD0                        u4070 09BD                        u4150 08F4  
                      u4230 0ADD                        u4071 09BC                        u4151 08F3  
                      u4135 08D9                        u4231 0ADC                        u4215 0AC2  
                      u5007 1544                        u3520 158C                        u4400 00C3  
                      u3521 158B                        u4065 09AE                        u5017 17B0  
                      u4401 00C2                        u4090 09D0                        u4170 0908  
                      u4250 0AF1                        u4330 09F8                        u4410 0107  
                      u4091 09CF                        u4171 0907                        u4155 08F0  
                      u4251 0AF0                        u4235 0AD9                        u4331 09F7  
                      u4411 0106                        u4260 0AF7                        u4180 0AA4  
                      u4340 0A2D                        u4420 0110                        u4500 0E28  
                      u4085 09C0                        u4165 08FC                        u4245 0AE5  
                      u4181 0AA3                        u4341 0A2C                        u4421 010F  
                      u4501 0E27                        u3710 096A                        u4190 0AB1  
                      u4430 0154                        u4350 0020                        u4510 0E3B  
                      u3535 1599                        u3711 0969                        u4095 09CC  
                      u4191 0AB0                        u4431 0153                        u4351 001F  
                      u4511 0E3A                        u3720 097F                        u4440 015D  
                      u4360 0029                        u4520 0E58                        u3721 097E  
                      u4345 0A29                        u4441 015C                        u4361 0028  
                      u4521 0E57                        u3730 156D                        u4450 01A1  
                      u4370 006D                        u4530 0E64                        u4610 1684  
                      u3731 156C                        u4451 01A0                        u4371 006C  
                      u4531 0E63                        u4611 1683                        _PEIE 005E  
                      u4460 01AA                        u4380 0076                        u4540 0E6B  
                      u4620 0F30                        u4700 0A55                        u4461 01A9  
                      u4381 0075                        u4541 0E6A                        u4525 0E54  
                      u4605 1728                        u4621 0F2F                        u4701 0A54  
                      u4470 01EE                        u4390 00BA                        u4550 0EC6  
                      u4630 0F67                        u4710 0CB0                        u4471 01ED  
                      u4391 00B9                        u4551 0EC5                        u4631 0F66  
                      u4711 0CAF                        u4480 01F7                        u4560 0EDA  
                      u4640 0F9E                        u4720 0CB6                        u4800 04C3  
                      u4481 01F6                        u4561 0ED9                        u4641 0F9D  
                      u4801 04C2                        u4490 0DF0                        u4570 1639  
                      u4650 0B90                        u4730 0D2A                        u4810 04E7  
                      u4491 0DEF                        u4571 1638                        u4651 0B8F  
                      u4731 0D29                        u4811 04E6                        _RCIE 0465  
                      u3780 1515                        u3940 08B9                        u4580 0B14  
                      u4660 0BA8                        u4740 0745                        u4820 0502  
                      _RCIF 0065                        u3781 1514                        u3941 08B8  
                      u4581 0B13                        u4661 0BA7                        u4741 0744  
                      u4821 0501                        u4805 04BF                        u3950 08C6  
                      u4590 0B39                        u4670 0BC7                        u4750 074B  
                      u4830 052A                        u3951 08C5                        u4591 0B38  
                      u4671 0BC6                        u4655 0B8C                        u4735 0D26  
                      u4831 0529                        u4815 04E3                        u4680 05CD  
                      u4760 07CD                        u4840 0530                        u4585 0B10  
                      u4761 07CC                        u4825 04FE                        u4690 0630  
                      u4850 05B2                        u4770 047B                        u4675 0BC3  
                      u4691 062F                        u4851 05B1                        u4771 047A  
                      u4907 030C                        u4780 048D                        u4860 0925  
                      u4917 0EF7                        u4765 07C9                        u4781 048C  
                      u4861 0924                        u4790 04B1                        u4870 024A  
                      u4927 0F18                        u4695 062C                        u4855 05AE  
                      u4791 04B0                        u4775 0477                        u4871 0249  
                      u4880 0260                        u4937 0F42                        u4785 0489  
                      u4890 041E                        _OERR 00C1                        u4947 0F79  
                      u4795 04AD                        u4891 041D                        u4957 0FB0  
                      u4967 0FDF                        u4977 0A16                        u4987 14F1  
                      u4997 152B                        _TMR0 0001                  _ChargeMode 0912  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0223                        _Menu 0958      __end_of_lcd_write_data 14F6  
                      abs@v 0026                        _isr1 0D37                        _main 0238  
                      _init 16B4                        btemp 007E              _CenterReleased 0381  
                      start 0012               ??_ReadButtons 0073            ??_robotTurnSpeed 005D  
                     ??_abs 0028       readAvgDistance@tempIR 0034                       ?_Menu 0072  
                     l11000 0F53                       l11010 0F8A                       l11002 0F60  
                     l11020 0FC1                       l11004 0F67                       l11012 0F97  
                     l11100 069E                       l10310 1583                       l10302 08C8  
                     l11022 0FCD                       l11014 0F9E                       l11006 0F73  
                     l11030 1555                       l11110 06DD                       l11102 06AA  
                     l10312 1586                       l10304 08CA                       l11024 0FD3  
                     l11016 0FAA                       l11008 0F7E                       l11032 155C  
                     l11040 16C1                       l11112 06E9                       l11104 06B5  
                     l11120 0714                       l11200 077F                       l10314 158F  
                     l11026 0FD9                       l11018 0FB5                       l11050 16D5  
                     l11042 16C3                       l11034 16B4                       l11114 06F5  
                     l11106 06C6                       l11130 0A56                       l11122 0A3F  
                     l11202 078D                       l11210 0449                       l10316 15A2  
                     l11028 1547                       l11052 16DA                       l11044 16C7  
                     l11036 16B5                       l11060 0B79                       l11116 0700  
                     l11108 06CC                       l11140 0A7F                       l11132 0A61  
                     l11124 0A44                       l11204 0793                       l11220 047B  
                     l11212 044D                       l11300 024B                       l10318 15AB  
                     l10430 1686                       l11054 16DF                       l11046 16CB  
                     l11038 16B9                       l11070 0BA8                       l11062 0B83  
                     l11118 0713                       l11142 0A83                       l11134 0A6F  
                     l11150 0A89                       l11126 0A51                       l11206 0799  
                     l11230 04D3                       l11222 048D                       l11214 045E  
                     l11310 026B                       l11302 0251                       l10440 1695  
                     l10432 1689                       l10520 1516                       l11056 16E0  
                     l11048 16D0                       l11072 0BBA                       l11064 0B91  
                     l11080 05DC                       l11144 0A84                       l11136 0A71  
                     l11128 0A55                       l11160 0CB0                       l11152 0C8F  
                     l11208 07CE                       l11240 0509                       l11232 04E7  
                     l11224 049D                       l11216 0462                       l11320 02A9  
                     l11312 026E                       l11304 0256                       l10450 16A2  
                     l10442 1698                       l10434 1691                       l10522 151A  
                     l11058 16E1                       l11074 0BC8                       l11066 0B92  
                     l11090 0630                       l11082 05E2                       l11146 0A86  
                     l11138 0A7D                       l11170 0CDE                       l11162 0CB7  
                     l11154 0C97                       l11250 0537                       l11242 050A  
                     l11234 04EE                       l11226 04B1                       l11218 0467  
                     l11330 02F4                       l11322 02B8                       l11314 0275  
                     l11306 025C                       l10452 16A3                       l10444 169B  
                     l10436 1692                       l10460 0966                       l10524 151C  
                     l10516 150C                       l10620 160B                       l10700 0AEB  
                     l11076 0BE8                       l11068 0B9F                       l11092 0643  
                     l11084 060A                       l11148 0A88                       l11172 0CEA  
                     l11164 0CBD                       l11156 0CA3                       l11180 0722  
                     l11260 0572                       l11252 0540                       l11244 0523  
                     l11236 04EF                       l11228 04C3                       l11340 0340  
                     l11332 0304                       l11324 02C7                       l11316 0289  
                     l11308 0260                       l10454 16A4                       l10446 169E  
                     l10438 1694                       l10470 0987                       l10462 096A  
                     l10518 150E                       l10622 1618                       l10630 09A3  
                     l10702 0AF3                       l11094 0656                       l11086 061B  
                     l11078 05C3                       l11174 0CF0                       l11166 0CC6  
                     l11158 0CA9                       l11190 074C                       l11182 0726  
                     l11262 0578                       l11254 054B                       l11246 052A  
                     l11238 0502                       l11270 091A                       l11350 03B3  
                     l11342 034F                       l11334 0313                       l11326 02D6  
                     l11318 0291                       l10448 169F                       l10472 0989  
                     l10464 0970                       l10456 095B                       l10480 1560  
                     l10624 1626                       l10616 1602                       l10640 09BF  
                     l10632 09A9                       l10704 0AF7                       l10800 0A3A  
                     l11096 065C                       l11088 0621                       l11168 0CD1  
                     l11176 0CF6                       l11192 0752                       l11184 0738  
                     l11256 0558                       l11248 0531                       l11264 057E  
                     l11280 093B                       l11272 0921                       l11360 0420  
                     l11352 03EE                       l11344 035E                       l11336 0322  
                     l11328 02E5                       l10466 097F                       l10458 095E  
                     l10474 098A                       l10490 1581                       l10482 1562  
                     l10570 08B9                       l10626 162D                       l10618 1607  
                     l10642 09D0                       l10634 09AD                       l10650 09E7  
                     l10706 0AFD                       l10802 0A3B                       l10810 0063  
                     l11098 0673                       l11178 0D2B                       l11194 075B  
                     l11186 073E                       l11258 0564                       l11266 05B3  
                     l11282 093C                       l11274 0925                       l11362 0427  
                     l11354 0404                       l11346 0370                       l11338 0331  
                     l11290 0238                       l10468 0983                       l10476 099C  
                     l10484 156E                       l10580 08C8                       l10572 08BB  
                     l10652 09EE                       l10644 09D6                       l10636 09B4  
                     l10628 099F                       l10660 08DF                       l10708 0B04  
                     l10740 179D                       l10732 1784                       l10820 00C3  
                     l10812 006D                       l10804 0015                       l10900 0EDC  
                     l11196 0766                       l11188 0745                       l11284 0940  
                     l11276 0926                       l11268 0912                       l11348 0387  
                     l11356 0405                       l11364 0428                       l11292 023E  
                     l10478 099E                       l10486 1578                       l10582 08CB  
                     l10574 08BD                       l10646 09D8                       l10638 09B9  
                     l10670 0902                       l10662 08E4                       l10654 08CC  
                     l10734 1799                       l10742 17AE                       l10750 1534  
                     l10830 0154                       l10822 00FD                       l10814 0076  
                     l10806 0020                       l10902 0EE1                       l10910 1646  
                     l11198 0773                       l11286 0943                       l11278 0935  
                     l11358 0416                       l11366 043E                       l11294 0240  
                     l10488 157E                       l10576 08BE                       l10568 08B3  
                     l10648 09DF                       l10664 08EA                       l10656 08D4  
                     l10672 090A                       l10680 0AAD                       l10744 17B2  
                     l10736 179B                       l10752 1538                       l10760 1523  
                     l10840 01E4                       l10832 015D                       l10824 0107  
                     l10816 00B0                       l10808 0029                       l10912 164C  
                     l10904 162E                       l10920 1748                       l11288 0944  
                     l11296 0246                       l10578 08C6                       l10674 0911  
                     l10666 08F4                       l10658 08D8                       l10690 0AC8  
                     l10682 0AB1                       l10746 17BB                       l10738 179C  
                     l10754 153C                       l10762 1525                       l10770 14EB  
                     l10842 01EE                       l10834 0197                       l10826 0110  
                     l10818 00BA                       l10850 0DF0                       l10914 1654  
                     l10906 1630                       l10930 1768                       l10922 174E  
                     l11298 024A                       l10668 08FB                       l10692 0ACD  
                     l10684 0AB7                       l10676 0A9D                       l10756 1540  
                     l10748 1531                       l10764 1526                       l10772 14EC  
                     l10780 09F8                       l10844 01F7                       l10836 01A1  
                     l10828 014A                       l10860 0E20                       l10852 0DF7  
                     l10916 1655                       l10908 163A                       l10932 1770  
                     l10924 1752                       l10940 0B39                       l10694 0AD3  
                     l10686 0ABD                       l10678 0AA4                       l10758 1520  
                     l10766 14E6                       l10774 07DE                       l10790 0A12  
                     l10782 09FF                       l10838 01AA                       l10870 0E35  
                     l10862 0E24                       l10854 0E02                       l10846 0DE5  
                     l10918 1659                       l10934 1778                       l10926 175A  
                     l10942 0B58                       l10950 14CF                       l10696 0ADD  
                     l10688 0AC1                       l10768 14E9                       l10792 0A2F  
                     l10784 0A06                       l10776 09EF                       l10880 0E5E  
                     l10872 0E3C                       l10864 0E28                       l10856 0E03  
                     l10848 0DEA                       l10928 1760                       l10936 0B05  
                     l10944 1713                       l10952 165A                       l10960 15AC  
                     l10698 0AE4                       l10794 0A35                       l10786 0A09  
                     l10778 09F3                       l10890 0E7C                       l10882 0E65  
                     l10874 0E3D                       l10866 0E2C                       l10858 0E18  
                     l10938 0B14                       l10946 1747                       l10954 165B  
                     l10970 15B8                       l10962 15B0                       l10796 0A38  
                     l10788 0A0A                       l10892 0EB0                       l10884 0E6B  
                     l10876 0E59                       l10868 0E32                       l10948 14CE  
                     l10956 166B                       l10972 15BE                       l10964 15B3  
                     l10980 0EE5                       l10798 0A39                       l10894 0EB7  
                     l10886 0E72                       l10878 0E5A                       l10958 1674  
                     l10974 15C4                       l10966 15B4                       l10990 0F1D  
                     l10982 0EF1                       l10896 0EBC                       l10888 0E77  
                     l10976 15CA                       l10968 15B7                       l10992 0F29  
                     l10984 0EFC                       l10898 0EC8                       l10978 15D0  
                     l10994 0F30                       l10986 0F06                       l10996 0F3C  
                     l10988 0F0C                       l10998 0F47        __size_of_calibrateIR 005E  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 0899                       STR_11 08A9  
                     STR_12 089D                       STR_13 083A                       STR_14 082A  
                     STR_15 0891                       STR_16 0885                       STR_17 0895  
                     STR_18 081A                       STR_19 0847             __end_of___awmod 0B05  
                     _CARRY 0018             __end_of___lwdiv 09EF             __end_of___lwmod 0912  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
                     _Disp1 00B0                       _Disp2 00B2      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074                       main@a 0069                       _total 00C4  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00DA  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 0EE2            __end_of_Debounce 0C8F  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
          robotFollow@temp1 0062            robotFollow@speed 005B                __end_of_Menu 099F  
__size_of_lcd_write_control 0014            _shortMenuStrings 00E2                __end_of_isr1 0DE2  
              __end_of_main 0449                __end_of_init 16E3             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0064                      ??_init 0023  
       __end_of_ReadButtons 1713               Menu@BTN_input 0020                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          __end_of_adc_read 15AC                 ?_ChargeMode 0072                      i1l2220 0D7B  
                    i1l2221 0D89                      i1l2222 0DAC                      i1l2223 0DAB  
                    i1l2224 0DD6                      i1l2225 0DD5                      i1l2226 0DD6  
                    i1l2218 0D8A                      i1l2219 0D5E                      i1l4510 0C4D  
                    i1l4511 0C4C                      i1l4512 0C51                      i1l4504 0C11  
                    i1l4513 0C6B                      i1l4505 0C10                      i1l4514 0C6A  
                    i1l4506 0C15                      i1l4522 16F0                      i1l4515 0C6F  
                    i1l4507 0C2F                      i1l4523 1712                      i1l4516 0C89  
                    i1l4508 0C2E                      i1l4524 16F8                      i1l4517 0C88  
                    i1l4509 0C33                      i1l4525 1700                      i1l4518 0C8E  
                    i1l4526 1708                      i1l4519 0C8E                      i1l4527 1710  
                    i1l7550 17F8                      i1l7551 17D2                      i1l7552 17C6  
                    i1l7553 17D7                      i1l7554 17D8                      i1l7555 17E9  
                    i1l7556 17F7                      i1l7557 17FF                      u430_20 17E2  
                    u430_21 17E1                      u430_25 17DE                      u431_25 17EA  
                    u432_20 17F6                      u360_20 0D80                      u432_21 17F5  
                    u360_21 0D7F                      u361_20 0D90                      u361_21 0D8F  
                    u370_20 170C                      u362_20 0DA6                      u370_21 170B  
                    u362_21 0DA5                      u427_20 17C2                      u363_20 0DB1  
                    u427_21 17C1                      u363_21 0DB0                      u380_20 0C09  
                    u364_20 0DB7                      u380_21 0C08                      u364_21 0DB6  
                    u428_25 17C7                      u381_20 0C0D                      u429_20 17D6  
                    u365_20 0DD1                      u357_20 0D3B                      u381_21 0C0C  
                    u429_21 17D5                      u365_21 0DD0                      u357_21 0D3A  
                    u390_20 0C67                      u382_20 0C1B                      u366_20 16EC  
                    u358_20 0D5C                      u390_21 0C66                      u382_21 0C1A  
                    u366_21 16EB                      u358_21 0D5B                 _DistLowByte 00CC  
                    u391_20 0C75                      u383_20 0C27                      u367_20 16F4  
                    u359_20 0D75                      u391_21 0C74                      u383_21 0C26  
                    u367_21 16F3                      u359_21 0D74                      u392_20 0C81  
                    u384_20 0C2B                      u368_20 16FC                      u392_21 0C80  
                    u384_21 0C2A                      u368_21 16FB                      u393_20 0C85  
                    u385_20 0C39                      u369_20 1704                      u393_21 0C84  
                    u385_21 0C38                      u369_21 1703                      u386_20 0C45  
                    u386_21 0C44                      u387_20 0C49                      u379_20 0BFD  
                    u387_21 0C48                      u379_21 0BFC                      u388_20 0C57  
                    u388_21 0C56                      u389_20 0C63                      u389_21 0C62  
                    _TMR0IE 005D                      _TMR0IF 005A                      _SSPCON 0014  
                    _SSPBUF 0013                  _UpReleased 038C            __end_of_lcd_init 15D7  
                    _adcVal 006C             _UpDebounceCount 00D1             RobotDrive@speed 0022  
                _RobotDrive 1748                      ___wmul 1602                   ??___awmod 0024  
              _turnhighByte 00D9                ??_ADCconvert 002E                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 1547              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 1686             ___awmod@counter 0025  
              ?_robotFollow 0059                      _rotate 09EF                      _rxfifo 00A0  
                    clrloop 07F8                      _txfifo 01A0                      _rxiptr 00D6  
                    _rxoptr 00D7                 _BumpSensors 006E                      _txiptr 006F  
                    _txoptr 00DB            __end_of_ser_init 16B4            __end_of_ser_isrx 08CC  
         __end_ofi1___lwmod 1800                      saved_w 007E               main@shortwall 0067  
              _AngleLowByte 00C9                 _LeftPressed 0384      RobotDrive@speedlowByte 0027  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 0238              __pcstackCOMMON 0072                __pidataBANK1 14D6  
               _ReadButtons 16E3         __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 007D                  __pbssBANK0 006C  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00CD  
        _RightDebounceCount 00D0                  __pmaintext 0238                 ?_RobotDrive 0022  
                   ?___wmul 0020                  __pintentry 0004                _DistHighByte 00CB  
                __ptext1000 1602                  __ptext1001 08B3                  __ptext1010 0BF7  
                __ptext1002 1509                  __ptext1011 0000                  __ptext1003 155D  
                __ptext1004 0958                  __ptext1005 1686                  __ptext1006 1583  
                __ptext1007 0D37                  __ptext1008 16E3                  __ptext1009 17BC  
     __end_of_UpdateDisplay 0722          __size_of_ser_getch 002C                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 0026          __size_of_robo_init 0019  
                   i1l10400 16EF                     i1l10410 16FD                     i1l10402 16F4  
                   i1l10420 170C                     i1l10412 16FF                     i1l10404 16F5  
                   i1l10422 170D                     i1l10414 1704                     i1l10406 16F7  
                   i1l10350 0D3C                     i1l10424 170F                     i1l10416 1705  
                   i1l10408 16FC                     i1l10360 0D75                     i1l10352 0D46  
                   i1l10530 0C03                     i1l10426 1710                     i1l10418 1707  
                   i1l10370 0D90                     i1l10362 0D76                     i1l10354 0D47  
                   i1l10346 0D37                     i1l10540 0C27                     i1l10532 0C09  
                   i1l10428 1712                     i1l10380 0DB1                     i1l10372 0D9A  
                   i1l10364 0D7B                     i1l10356 0D5C                     i1l10348 0D3B  
                   i1l10550 0C49                     i1l10542 0C2B                     i1l10534 0C0D  
                   i1l10526 0BF7                     i1l10710 17BC                     i1l10390 0DD1  
                   i1l10382 0DB7                     i1l10374 0DA0                     i1l10366 0D80  
                   i1l10358 0D5E                     i1l10560 0C75                     i1l10552 0C57  
                   i1l10544 0C39                     i1l10536 0C1B                     i1l10528 0BFD  
                   i1l10720 17D8                     i1l10712 17C2                     i1l10392 16E3  
                   i1l10384 0DBF                     i1l10376 0DA6                     i1l10368 0D8A  
                   i1l10562 0C7B                     i1l10554 0C5D                     i1l10546 0C3F  
                   i1l10538 0C21                     i1l10730 17FF                     i1l10722 17E2  
                   i1l10714 17C6                     i1l10394 16E8                     i1l10386 0DC5  
                   i1l10378 0DAC                     i1l10564 0C81                     i1l10556 0C63  
                   i1l10548 0C45                     i1l10724 17E9                     i1l10716 17CD  
                   i1l10396 16EC                     i1l10388 0DC9                     i1l10566 0C85  
                   i1l10558 0C67                     i1l10726 17F0                     i1l10718 17D2  
                   i1l10398 16ED                     i1l10728 17F8          __size_of_robotTurn 0074  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 155D                   ?_init_adc 0072  
                 ?_ser_init 0072                   ?_ser_isrx 0072            RobotDrive@radius 0024  
             ??_calibrateIR 0059                     ___awmod 0A9D             __size_of___wmul 002C  
                   ___lwdiv 099F                     ___lwmod 08CC   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0050                     _dpowers 0810  
              __size_of_abs 0035        __size_of_robotFollow 017A            ___awmod@dividend 0022  
                   _lowByte 00D5                     _ser_tmp 00D8                     _sprintf 0DE2  
                ??_lcd_init 0023         __size_of_RobotDrive 0039        end_of_initialization 15FE  
             _AngleHighByte 00C8                ??_ChargeMode 0059          robot_read@readType 0024  
         __end_of_ser_getch 165A                     init_ram 14FA                  ??_init_adc 0020  
   __size_of_robotMoveSpeed 00BC           __end_of_ser_putch 1583     RobotDrive@speedhighByte 0028  
         __end_of_robo_init 07F7                _LeftReleased 0385           __end_of_robotTurn 0B79  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038A    __size_of_readAvgDistance 007E  
                _robot_read 0EE2           ?_lcd_write_string 0027          __end_of_ChargeMode 0958  
       __end_of_calibrateIR 0A9D          ??_lcd_write_string 0029                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A8  
                 i1___lwmod 17BC                  _totalSteps 00C6                  main@choice 006B  
             ?_spi_transfer 0072                 _VwallSensor 00D2               _CenterPressed 0380  
              ?_ReadButtons 0072              __end_of___wmul 162E           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 0A3F         start_initialization 15D7  
    UpdateDisplay@LCDOutput 0049                 __end_of_abs 1748       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072          _TotalDistTravelled 00B8  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038B  
              ??_RobotDrive 0026              _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388  
                  ??___wmul 0024              rotate@numsteps 0023                 _calibrateIR 0A3F  
               __pdataBANK1 00DC            _adc_read_channel 1781                 ?_robot_read 0072  
                  ??_rotate 0026                _readDistance 1547           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
    robotMoveSpeed@distance 0059          __end_of_RobotDrive 1781           __size_of_lcd_init 002B  
            _robotMoveSpeed 0722                 sprintf@_val 003F                 sprintf@flag 003D  
               sprintf@prec 003E                _current_step 00E8            readAvgDistance@i 0036  
          readAvgDistance@j 0032           __size_of_init_adc 0016            ___lwdiv@dividend 0028  
               _angleTurned 00BA                    ?___awmod 0020                   __ptext980 1547  
                 __ptext972 0912                   __ptext981 0EE2                   __ptext973 0449  
                 __ptext990 0015                   __ptext982 15AC                   __ptext974 0722  
                 __ptext991 09EF                   __ptext983 165A                   __ptext975 0C8F  
                 __ptext992 07DE                   __ptext984 14CB                   __ptext976 0A3F  
                 __ptext993 14E3                   __ptext985 1713                   __ptext977 05C3  
                 __ptext994 151D                   __ptext986 0B05                   __ptext978 0B79  
                 __ptext995 1531                   __ptext987 1748                   __ptext979 16B4  
                 __ptext996 1781                   __ptext988 162E                   __ptext997 0A9D  
                 __ptext989 0DE2                   __ptext998 08CC                   __ptext999 099F  
         __size_of_ser_init 002E           __size_of_ser_isrx 0019                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 0800                   _dist_high 00BE  
       readDistance@readVal 002C              _robotTurnSpeed 0C8F         robotTurnSpeed@angle 0059  
       robotTurnSpeed@temp1 0060         robotTurnSpeed@speed 005B                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
    __end_of_robotMoveSpeed 07DE     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 015F              ___wmul@product 0024         __size_of_robot_read 011E  
                ser_putch@c 0021                   _ser_getch 162E                   _ser_putch 155D  
                 _robo_init 07DE                   _robotTurn 0B05                _RightPressed 0389  
      __size_of_ReadButtons 0030               ??_robotFollow 005F        __end_of_spi_transfer 151D  
    __end_of_robotTurnSpeed 0D37                 __stringbase 080F           ___wmul@multiplier 0020  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 0BF7  
         _LeftDebounceCount 00CE             ?_robotMoveSpeed 0059   __size_of_lcd_write_string 002C  
   __size_of_lcd_write_data 0013                  ?_ser_getch 0072                  ?_ser_putch 0072  
   adc_read_channel@channel 0027                  ?_robo_init 0072                   init_fetch 14F6  
                ?_robotTurn 0022                  _ADCconvert 0015            __size_of___awmod 0068  
          __size_of___lwdiv 0050            __size_of___lwmod 0046               _UpdateDisplay 05C3  
                  _adc_read 1583             ?_robotTurnSpeed 0059                 _currentMenu 00D3  
           ___lwdiv@divisor 0026         __end_of_robotFollow 05C3             ___lwdiv@counter 002D  
               _menuStrings 00DC                    _highByte 00D4                    _lcd_init 15AC  
                  _dist_low 00C0            __size_of_sprintf 0100    __end_of_adc_read_channel 17BC  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 1531  
             __size_of_isr1 00AB               __size_of_main 0211               __size_of_init 002F  
                  clear_ram 07F7                    _ser_init 1686        robotFollow@AdcTarget 005D  
                  _ser_isrx 08B3             _readAvgDistance 0B79                ?_calibrateIR 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00CA  
              _RTC_FLAG_1MS 0386          UpdateDisplay@F1249 0190                    intlevel1 0000  
            _lcd_set_cursor 14CB                   sprintf@ap 003C                   sprintf@sp 0043  
            robotTurn@angle 0022            ___lwmod@dividend 0030          __end_of_robot_read 1000  
                 stringcode 080A                 ??_ser_getch 0020                 ??_ser_putch 0020  
             _distTravelled 00BC                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 151D  
               _robotFollow 0449          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034         robotMoveSpeed@temp1 0060  
       robotMoveSpeed@speed 005B             ___lwmod@divisor 002E                  _ROBOTerror 00CF  
           ___lwmod@counter 0033                    stringdir 080A                    stringtab 0800  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 14D6            _lcd_write_string 165A  
  RobotDrive@radiushighByte 002A                _spi_transfer 1509                 _RTC_Counter 00B6  
   __end_of_readAvgDistance 0BF7              _lcd_write_data 14E3  
