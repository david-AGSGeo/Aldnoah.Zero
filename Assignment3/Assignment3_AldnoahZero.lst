

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 24 15:29:53 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_readAvgDistance
    48                           	FNCALL	_main,_UpdateDisplay
    49                           	FNCALL	_main,_Menu
    50                           	FNCALL	_main,_calibrateIR
    51                           	FNCALL	_main,_scan360
    52                           	FNCALL	_main,_rotate
    53                           	FNCALL	_main,_robotMove
    54                           	FNCALL	_main,_robotTurn
    55                           	FNCALL	_main,_robot_distance
    56                           	FNCALL	_scan360,_readAvgDistance
    57                           	FNCALL	_scan360,_rotate
    58                           	FNCALL	_scan360,_UpdateDisplay
    59                           	FNCALL	_calibrateIR,_rotate
    60                           	FNCALL	_calibrateIR,_UpdateDisplay
    61                           	FNCALL	_readAvgDistance,_readDistance
    62                           	FNCALL	_readAvgDistance,___lwdiv
    63                           	FNCALL	_readAvgDistance,_ADCconvert
    64                           	FNCALL	_UpdateDisplay,_lcd_write_control
    65                           	FNCALL	_UpdateDisplay,_sprintf
    66                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    67                           	FNCALL	_UpdateDisplay,_lcd_write_string
    68                           	FNCALL	_UpdateDisplay,___awmod
    69                           	FNCALL	_init,_init_adc
    70                           	FNCALL	_init,_lcd_init
    71                           	FNCALL	_init,_ser_init
    72                           	FNCALL	_init,_robo_init
    73                           	FNCALL	_readDistance,_adc_read_channel
    74                           	FNCALL	_robot_distance,_robot_read
    75                           	FNCALL	_robot_distance,_ser_getch
    76                           	FNCALL	_lcd_init,_lcd_write_control
    77                           	FNCALL	_lcd_write_string,_lcd_write_data
    78                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    79                           	FNCALL	_robot_read,_ser_putch
    80                           	FNCALL	_sprintf,___lwdiv
    81                           	FNCALL	_sprintf,___lwmod
    82                           	FNCALL	_ser_getch,_ser_isrx
    83                           	FNCALL	_ADCconvert,___wmul
    84                           	FNCALL	_ADCconvert,___lwdiv
    85                           	FNCALL	_robotTurn,_ser_putch
    86                           	FNCALL	_robotMove,_ser_putch
    87                           	FNCALL	_rotate,_spi_transfer
    88                           	FNCALL	_robo_init,_ser_putch
    89                           	FNCALL	_adc_read_channel,_adc_read
    90                           	FNROOT	_main
    91                           	FNCALL	_isr1,i1___lwmod
    92                           	FNCALL	_isr1,_ReadButtons
    93                           	FNCALL	_ReadButtons,_Debounce
    94                           	FNCALL	intlevel1,_isr1
    95                           	global	intlevel1
    96                           	FNROOT	intlevel1
    97                           	global	_menuStrings
    98                           	global	_shortMenuStrings
    99                           	global	_distTravelled
   100                           	global	_current_step
   101                           psect	idataBANK1,class=CODE,space=0,delta=2
   102                           global __pidataBANK1
   103  0A2D                     __pidataBANK1:
   104                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   105                           	line	32
   106                           
   107                           ;initializer for _menuStrings
   108  0A2D  3423               	retlw	(STR_1-__stringbase)&0ffh
   109  0A2E  341A               	retlw	(STR_2-__stringbase)&0ffh
   110  0A2F  3435               	retlw	(STR_3-__stringbase)&0ffh
   111  0A30  343E               	retlw	(STR_4-__stringbase)&0ffh
   112  0A31  342C               	retlw	(STR_5-__stringbase)&0ffh
   113                           	line	33
   114                           
   115                           ;initializer for _shortMenuStrings
   116  0A32  345E               	retlw	(STR_6-__stringbase)&0ffh
   117  0A33  3462               	retlw	(STR_7-__stringbase)&0ffh
   118  0A34  344E               	retlw	(STR_8-__stringbase)&0ffh
   119  0A35  345A               	retlw	(STR_9-__stringbase)&0ffh
   120  0A36  3466               	retlw	(STR_10-__stringbase)&0ffh
   121                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.h"
   122                           	line	11
   123                           
   124                           ;initializer for _distTravelled
   125  0A37  340B               	retlw	0Bh
   126  0A38  3400               	retlw	0
   127                           
   128                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   129                           	line	30
   130                           
   131                           ;initializer for _current_step
   132  0A39  343C               	retlw	03Ch
   133                           	global	_dpowers
   134                           psect	strings,class=STRING,delta=2
   135                           global __pstrings
   136  0800                     __pstrings:
   137                           ;	global	stringdir,stringtab,__stringbase
   138  0800                     stringtab:
   139                           ;	String table - string pointers are 1 byte each
   140  0800  1BFF               	btfsc	(btemp+1),7
   141  0801  280A               	ljmp	stringcode
   142  0802  1383               	bcf	status,7
   143  0803  187F               	btfsc	(btemp+1),0
   144  0804  1783               	bsf	status,7
   145  0805  0800               	movf	indf,w
   146  0806  0A84               	incf fsr
   147  0807  1903               skipnz
   148  0808  0AFF               incf btemp+1
   149  0809  0008               	return
   150  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   151  080A  3008               movlw high(stringdir)
   152  080B  008A               movwf pclath
   153  080C  0804               movf fsr,w
   154  080D  0A84               incf fsr
   155  080E  0782               	addwf pc
   156  080F                     __stringbase:
   157  080F  3400               	retlw	0
   158                           psect	strings
   159                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   160                           	line	350
   161  0810                     _dpowers:
   162  0810  3401               	retlw	01h
   163  0811  3400               	retlw	0
   164                           
   165  0812  340A               	retlw	0Ah
   166  0813  3400               	retlw	0
   167                           
   168  0814  3464               	retlw	064h
   169  0815  3400               	retlw	0
   170                           
   171  0816  34E8               	retlw	0E8h
   172  0817  3403               	retlw	03h
   173                           
   174  0818  3410               	retlw	010h
   175  0819  3427               	retlw	027h
   176                           
   177                           	global	_dpowers
   178                           	global	_RTC_Counter
   179                           	global	_adcVal
   180                           	global	_buttonPressed
   181                           	global	_rxiptr
   182                           	global	_rxoptr
   183                           	global	_txoptr
   184                           	global	UpdateDisplay@F1228
   185                           	global	_txiptr
   186                           	global	_CenterPressed
   187                           	global	_CenterReleased
   188                           	global	_DownPressed
   189                           	global	_DownReleased
   190                           	global	_LeftPressed
   191                           	global	_LeftReleased
   192                           	global	_RTC_FLAG_10MS
   193                           	global	_RTC_FLAG_1MS
   194                           	global	_RTC_FLAG_250MS
   195                           	global	_RTC_FLAG_500MS
   196                           	global	_RTC_FLAG_50MS
   197                           	global	_RightPressed
   198                           	global	_RightReleased
   199                           	global	_UpPressed
   200                           	global	_UpReleased
   201                           	global	_rxfifo
   202                           	global	_txfifo
   203                           	global	_dist_high
   204                           	global	_dist_low
   205                           	global	_distance
   206                           	global	_pos
   207                           	global	_test
   208                           	global	_total
   209                           	global	_totalSteps
   210                           	global	_CenterDebounceCount
   211                           	global	_DownDebounceCount
   212                           	global	_LeftDebounceCount
   213                           	global	_RightDebounceCount
   214                           	global	_SCAN_FLAG
   215                           	global	_UpDebounceCount
   216                           	global	_currentMenu
   217                           	global	_current_direction
   218                           	global	_highByte
   219                           	global	_lowByte
   220                           	global	_ser_tmp
   221                           	global	_serialInput
   222                           	global	_turnhighByte
   223                           	global	_turnlowByte
   224                           	global	_ADCON0
   225  001F                     _ADCON0	set	31
   226                           	global	_ADRESH
   227  001E                     _ADRESH	set	30
   228                           	global	_PORTA
   229  0005                     _PORTA	set	5
   230                           	global	_PORTC
   231  0007                     _PORTC	set	7
   232                           	global	_PORTD
   233  0008                     _PORTD	set	8
   234                           	global	_PORTE
   235  0009                     _PORTE	set	9
   236                           	global	_RCREG
   237  001A                     _RCREG	set	26
   238                           	global	_SSPBUF
   239  0013                     _SSPBUF	set	19
   240                           	global	_SSPCON
   241  0014                     _SSPCON	set	20
   242                           	global	_TMR0
   243  0001                     _TMR0	set	1
   244                           	global	_TXREG
   245  0019                     _TXREG	set	25
   246                           	global	AT25256A@CS0
   247  0038                     AT25256A@CS0	set	56
   248                           	global	AT25256A@CS1
   249  0039                     AT25256A@CS1	set	57
   250                           	global	_CARRY
   251  0018                     _CARRY	set	24
   252                           	global	_CHS0
   253  00FB                     _CHS0	set	251
   254                           	global	_CHS1
   255  00FC                     _CHS1	set	252
   256                           	global	_CHS2
   257  00FD                     _CHS2	set	253
   258                           	global	_CREN
   259  00C4                     _CREN	set	196
   260                           	global	_GIE
   261  005F                     _GIE	set	95
   262                           	global	_GO
   263  00FA                     _GO	set	250
   264                           	global	_OERR
   265  00C1                     _OERR	set	193
   266                           	global	_PEIE
   267  005E                     _PEIE	set	94
   268                           	global	_RB0
   269  0030                     _RB0	set	48
   270                           	global	_RB2
   271  0032                     _RB2	set	50
   272                           	global	_RB3
   273  0033                     _RB3	set	51
   274                           	global	_RB4
   275  0034                     _RB4	set	52
   276                           	global	_RB5
   277  0035                     _RB5	set	53
   278                           	global	_RB6
   279  0036                     _RB6	set	54
   280                           	global	_RC0
   281  0038                     _RC0	set	56
   282                           	global	_RC1
   283  0039                     _RC1	set	57
   284                           	global	_RC2
   285  003A                     _RC2	set	58
   286                           	global	_RCIF
   287  0065                     _RCIF	set	101
   288                           	global	_RE0
   289  0048                     _RE0	set	72
   290                           	global	_RE1
   291  0049                     _RE1	set	73
   292                           	global	_RE2
   293  004A                     _RE2	set	74
   294                           	global	_RX9
   295  00C6                     _RX9	set	198
   296                           	global	_SPEN
   297  00C7                     _SPEN	set	199
   298                           	global	_SSPIF
   299  0063                     _SSPIF	set	99
   300                           	global	_TMR0IE
   301  005D                     _TMR0IE	set	93
   302                           	global	_TMR0IF
   303  005A                     _TMR0IF	set	90
   304                           	global	_TXIF
   305  0064                     _TXIF	set	100
   306                           	global	_ADCON1
   307  009F                     _ADCON1	set	159
   308                           	global	_ADRESL
   309  009E                     _ADRESL	set	158
   310                           	global	_OPTION_REG
   311  0081                     _OPTION_REG	set	129
   312                           	global	_SPBRG
   313  0099                     _SPBRG	set	153
   314                           	global	_SSPSTAT
   315  0094                     _SSPSTAT	set	148
   316                           	global	_TRISA
   317  0085                     _TRISA	set	133
   318                           	global	_TRISB
   319  0086                     _TRISB	set	134
   320                           	global	_TRISC
   321  0087                     _TRISC	set	135
   322                           	global	_TRISD
   323  0088                     _TRISD	set	136
   324                           	global	_TRISE
   325  0089                     _TRISE	set	137
   326                           	global	_BRGH
   327  04C2                     _BRGH	set	1218
   328                           	global	_RCIE
   329  0465                     _RCIE	set	1125
   330                           	global	_SYNC
   331  04C4                     _SYNC	set	1220
   332                           	global	_TX9
   333  04C6                     _TX9	set	1222
   334                           	global	_TXEN
   335  04C5                     _TXEN	set	1221
   336                           	global	_TXIE
   337  0464                     _TXIE	set	1124
   338                           	global	_EEADR
   339  010D                     _EEADR	set	269
   340                           	global	_EEDATA
   341  010C                     _EEDATA	set	268
   342                           	global	_EECON1
   343  018C                     _EECON1	set	396
   344                           	global	_EECON2
   345  018D                     _EECON2	set	397
   346                           	global	_RD
   347  0C60                     _RD	set	3168
   348                           	global	_WR
   349  0C61                     _WR	set	3169
   350                           	global	_WREN
   351  0C62                     _WREN	set	3170
   352                           	
   353  081A                     STR_11:	
   354  081A  3441               	retlw	65	;'A'
   355  081B  3444               	retlw	68	;'D'
   356  081C  3443               	retlw	67	;'C'
   357  081D  343A               	retlw	58	;':'
   358  081E  3425               	retlw	37	;'%'
   359  081F  3464               	retlw	100	;'d'
   360  0820  3420               	retlw	32	;' '
   361  0821  3444               	retlw	68	;'D'
   362  0822  3469               	retlw	105	;'i'
   363  0823  3473               	retlw	115	;'s'
   364  0824  3474               	retlw	116	;'t'
   365  0825  343A               	retlw	58	;':'
   366  0826  3425               	retlw	37	;'%'
   367  0827  3464               	retlw	100	;'d'
   368  0828  3400               	retlw	0
   369                           psect	strings
   370                           	
   371  0829                     STR_2:	
   372  0829  3453               	retlw	83	;'S'
   373  082A  3463               	retlw	99	;'c'
   374  082B  3461               	retlw	97	;'a'
   375  082C  346E               	retlw	110	;'n'
   376  082D  345F               	retlw	95	;'_'
   377  082E  3433               	retlw	51	;'3'
   378  082F  3436               	retlw	54	;'6'
   379  0830  3430               	retlw	48	;'0'
   380  0831  3400               	retlw	0
   381                           psect	strings
   382                           	
   383  0832                     STR_1:	
   384  0832  3443               	retlw	67	;'C'
   385  0833  3461               	retlw	97	;'a'
   386  0834  346C               	retlw	108	;'l'
   387  0835  3469               	retlw	105	;'i'
   388  0836  3462               	retlw	98	;'b'
   389  0837  345F               	retlw	95	;'_'
   390  0838  3449               	retlw	73	;'I'
   391  0839  3452               	retlw	82	;'R'
   392  083A  3400               	retlw	0
   393                           psect	strings
   394                           	
   395  083B                     STR_5:	
   396  083B  3446               	retlw	70	;'F'
   397  083C  346C               	retlw	108	;'l'
   398  083D  3477               	retlw	119	;'w'
   399  083E  345F               	retlw	95	;'_'
   400  083F  3457               	retlw	87	;'W'
   401  0840  3461               	retlw	97	;'a'
   402  0841  346C               	retlw	108	;'l'
   403  0842  346C               	retlw	108	;'l'
   404  0843  3400               	retlw	0
   405                           psect	strings
   406                           	
   407  0844                     STR_3:	
   408  0844  3444               	retlw	68	;'D'
   409  0845  3472               	retlw	114	;'r'
   410  0846  3469               	retlw	105	;'i'
   411  0847  3476               	retlw	118	;'v'
   412  0848  3465               	retlw	101	;'e'
   413  0849  345F               	retlw	95	;'_'
   414  084A  3432               	retlw	50	;'2'
   415  084B  346D               	retlw	109	;'m'
   416  084C  3400               	retlw	0
   417                           psect	strings
   418                           	
   419  084D                     STR_4:	
   420  084D  3444               	retlw	68	;'D'
   421  084E  3472               	retlw	114	;'r'
   422  084F  3469               	retlw	105	;'i'
   423  0850  3476               	retlw	118	;'v'
   424  0851  3465               	retlw	101	;'e'
   425  0852  345F               	retlw	95	;'_'
   426  0853  344C               	retlw	76	;'L'
   427  0854  3400               	retlw	0
   428                           psect	strings
   429                           	
   430  0855                     STR_14:	
   431  0855  3443               	retlw	67	;'C'
   432  0856  344F               	retlw	79	;'O'
   433  0857  344E               	retlw	78	;'N'
   434  0858  3446               	retlw	70	;'F'
   435  0859  3449               	retlw	73	;'I'
   436  085A  3452               	retlw	82	;'R'
   437  085B  344D               	retlw	77	;'M'
   438  085C  3400               	retlw	0
   439                           psect	strings
   440                           	
   441  085D                     STR_8:	
   442  085D  3444               	retlw	68	;'D'
   443  085E  3472               	retlw	114	;'r'
   444  085F  3432               	retlw	50	;'2'
   445  0860  3400               	retlw	0
   446                           psect	strings
   447                           	
   448  0861                     STR_13:	
   449  0861  343C               	retlw	60	;'<'
   450  0862  343C               	retlw	60	;'<'
   451  0863  343C               	retlw	60	;'<'
   452  0864  3400               	retlw	0
   453                           psect	strings
   454                           	
   455  0865                     STR_15:	
   456  0865  343E               	retlw	62	;'>'
   457  0866  343E               	retlw	62	;'>'
   458  0867  343E               	retlw	62	;'>'
   459  0868  3400               	retlw	0
   460                           psect	strings
   461                           	
   462  0869                     STR_9:	
   463  0869  3444               	retlw	68	;'D'
   464  086A  3472               	retlw	114	;'r'
   465  086B  344C               	retlw	76	;'L'
   466  086C  3400               	retlw	0
   467                           psect	strings
   468                           	
   469  086D                     STR_6:	
   470  086D  3443               	retlw	67	;'C'
   471  086E  3461               	retlw	97	;'a'
   472  086F  346C               	retlw	108	;'l'
   473  0870  3400               	retlw	0
   474                           psect	strings
   475                           	
   476  0871                     STR_7:	
   477  0871  3453               	retlw	83	;'S'
   478  0872  3463               	retlw	99	;'c'
   479  0873  346E               	retlw	110	;'n'
   480  0874  3400               	retlw	0
   481                           psect	strings
   482                           	
   483  0875                     STR_10:	
   484  0875  3446               	retlw	70	;'F'
   485  0876  346C               	retlw	108	;'l'
   486  0877  3477               	retlw	119	;'w'
   487  0878  3400               	retlw	0
   488                           psect	strings
   489  081A                     STR_12	equ	STR_11+0
   490                           	file	"Assignment3_AldnoahZero.as"
   491                           	line	#
   492                           psect cinit,class=CODE,delta=2
   493                           global start_initialization
   494  0C36                     start_initialization:
   495                           
   496                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   497                           global __pbitbssCOMMON
   498  0380                     __pbitbssCOMMON:
   499  0380                     _CenterPressed:
   500  0380                            ds      1
   501                           
   502  0381                     _CenterReleased:
   503  0381                            ds      1
   504                           
   505  0382                     _DownPressed:
   506  0382                            ds      1
   507                           
   508  0383                     _DownReleased:
   509  0383                            ds      1
   510                           
   511  0384                     _LeftPressed:
   512  0384                            ds      1
   513                           
   514  0385                     _LeftReleased:
   515  0385                            ds      1
   516                           
   517  0386                     _RTC_FLAG_10MS:
   518  0386                            ds      1
   519                           
   520  0387                     _RTC_FLAG_1MS:
   521  0387                            ds      1
   522                           
   523  0388                     _RTC_FLAG_250MS:
   524  0388                            ds      1
   525                           
   526  0389                     _RTC_FLAG_500MS:
   527  0389                            ds      1
   528                           
   529  038A                     _RTC_FLAG_50MS:
   530  038A                            ds      1
   531                           
   532  038B                     _RightPressed:
   533  038B                            ds      1
   534                           
   535  038C                     _RightReleased:
   536  038C                            ds      1
   537                           
   538  038D                     _UpPressed:
   539  038D                            ds      1
   540                           
   541  038E                     _UpReleased:
   542  038E                            ds      1
   543                           
   544                           psect	bssCOMMON,class=COMMON,space=1
   545                           global __pbssCOMMON
   546  007D                     __pbssCOMMON:
   547  007D                     _txiptr:
   548  007D                            ds      1
   549                           
   550                           psect	bssBANK0,class=BANK0,space=1
   551                           global __pbssBANK0
   552  0068                     __pbssBANK0:
   553  0068                     _RTC_Counter:
   554  0068                            ds      2
   555                           
   556  006A                     _adcVal:
   557  006A                            ds      2
   558                           
   559  006C                     _buttonPressed:
   560  006C                            ds      1
   561                           
   562  006D                     _rxiptr:
   563  006D                            ds      1
   564                           
   565  006E                     _rxoptr:
   566  006E                            ds      1
   567                           
   568  006F                     _txoptr:
   569  006F                            ds      1
   570                           
   571                           psect	bssBANK1,class=BANK1,space=1
   572                           global __pbssBANK1
   573  00A0                     __pbssBANK1:
   574  00A0                     _rxfifo:
   575  00A0                            ds      16
   576                           
   577  00B0                     _txfifo:
   578  00B0                            ds      16
   579                           
   580  00C0                     _dist_high:
   581  00C0                            ds      2
   582                           
   583  00C2                     _dist_low:
   584  00C2                            ds      2
   585                           
   586  00C4                     _distance:
   587  00C4                            ds      2
   588                           
   589  00C6                     _pos:
   590  00C6                            ds      2
   591                           
   592  00C8                     _test:
   593  00C8                            ds      2
   594                           
   595  00CA                     _total:
   596  00CA                            ds      2
   597                           
   598  00CC                     _totalSteps:
   599  00CC                            ds      2
   600                           
   601  00CE                     _CenterDebounceCount:
   602  00CE                            ds      1
   603                           
   604  00CF                     _DownDebounceCount:
   605  00CF                            ds      1
   606                           
   607  00D0                     _LeftDebounceCount:
   608  00D0                            ds      1
   609                           
   610  00D1                     _RightDebounceCount:
   611  00D1                            ds      1
   612                           
   613  00D2                     _SCAN_FLAG:
   614  00D2                            ds      1
   615                           
   616  00D3                     _UpDebounceCount:
   617  00D3                            ds      1
   618                           
   619  00D4                     _currentMenu:
   620  00D4                            ds      1
   621                           
   622  00D5                     _current_direction:
   623  00D5                            ds      1
   624                           
   625  00D6                     _highByte:
   626  00D6                            ds      1
   627                           
   628  00D7                     _lowByte:
   629  00D7                            ds      1
   630                           
   631  00D8                     _ser_tmp:
   632  00D8                            ds      1
   633                           
   634  00D9                     _serialInput:
   635  00D9                            ds      1
   636                           
   637  00DA                     _turnhighByte:
   638  00DA                            ds      1
   639                           
   640  00DB                     _turnlowByte:
   641  00DB                            ds      1
   642                           
   643                           psect	dataBANK1,class=BANK1,space=1
   644                           global __pdataBANK1
   645  00DC                     __pdataBANK1:
   646                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   647                           	line	32
   648  00DC                     _menuStrings:
   649  00DC                            ds      5
   650                           
   651                           psect	dataBANK1
   652                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   653                           	line	33
   654  00E1                     _shortMenuStrings:
   655  00E1                            ds      5
   656                           
   657                           psect	dataBANK1
   658                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.h"
   659                           	line	11
   660  00E6                     _distTravelled:
   661  00E6                            ds      2
   662                           
   663                           psect	dataBANK1
   664                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   665                           	line	30
   666  00E8                     _current_step:
   667  00E8                            ds      1
   668                           
   669                           psect	bssBANK3,class=BANK3,space=1
   670                           global __pbssBANK3
   671  0190                     __pbssBANK3:
   672  0190                     UpdateDisplay@F1228:
   673  0190                            ds      16
   674                           
   675                           psect clrtext,class=CODE,delta=2
   676                           global clear_ram
   677                           ;	Called with FSR containing the base address, and
   678                           ;	W with the last address+1
   679  0A0D                     clear_ram:
   680  0A0D  0064               	clrwdt			;clear the watchdog before getting into this loop
   681  0A0E                     clrloop:
   682  0A0E  0180               	clrf	indf		;clear RAM location pointed to by FSR
   683  0A0F  0A84               	incf	fsr,f		;increment pointer
   684  0A10  0604               	xorwf	fsr,w		;XOR with final address
   685  0A11  1903               	btfsc	status,2	;have we reached the end yet?
   686  0A12  3400               	retlw	0		;all done for this memory range, return
   687  0A13  0604               	xorwf	fsr,w		;XOR again to restore value
   688  0A14  2A0E               	goto	clrloop		;do the next byte
   689                           
   690                           ; Clear objects allocated to BITCOMMON
   691                           psect cinit,class=CODE,delta=2
   692  0C36  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   693  0C37  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   694                           ; Clear objects allocated to COMMON
   695                           psect cinit,class=CODE,delta=2
   696  0C38  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   697                           ; Clear objects allocated to BANK0
   698                           psect cinit,class=CODE,delta=2
   699  0C39  1383               	bcf	status, 7	;select IRP bank0
   700  0C3A  3068               	movlw	low(__pbssBANK0)
   701  0C3B  0084               	movwf	fsr
   702  0C3C  3070               	movlw	low((__pbssBANK0)+08h)
   703  0C3D  120A  158A  220D   	fcall	clear_ram
              120A  158A         
   704                           ; Clear objects allocated to BANK1
   705                           psect cinit,class=CODE,delta=2
   706  0C42  30A0               	movlw	low(__pbssBANK1)
   707  0C43  0084               	movwf	fsr
   708  0C44  30DC               	movlw	low((__pbssBANK1)+03Ch)
   709  0C45  120A  158A  220D   	fcall	clear_ram
              120A  158A         
   710                           ; Clear objects allocated to BANK3
   711                           psect cinit,class=CODE,delta=2
   712  0C4A  1783               	bsf	status, 7	;select IRP bank2
   713  0C4B  3090               	movlw	low(__pbssBANK3)
   714  0C4C  0084               	movwf	fsr
   715  0C4D  30A0               	movlw	low((__pbssBANK3)+010h)
   716  0C4E  120A  158A  220D   	fcall	clear_ram
              120A  158A         
   717                           global btemp
   718                           psect inittext,class=CODE,delta=2
   719                           global init_fetch,btemp
   720                           ;	Called with low address in FSR and high address in W
   721  0A5F                     init_fetch:
   722  0A5F  087E               	movf btemp,w
   723  0A60  008A               	movwf pclath
   724  0A61  087F               	movf btemp+1,w
   725  0A62  0082               	movwf pc
   726                           global init_ram
   727                           ;Called with:
   728                           ;	high address of idata address in btemp 
   729                           ;	low address of idata address in btemp+1 
   730                           ;	low address of data in FSR
   731                           ;	high address + 1 of data in btemp-1
   732  0A63                     init_ram:
   733  0A63  120A  158A  225F   	fcall init_fetch
              120A  158A         
   734  0A68  0080               	movwf indf,f
   735  0A69  0A84               	incf fsr,f
   736  0A6A  0804               	movf fsr,w
   737  0A6B  067D               	xorwf btemp-1,w
   738  0A6C  1903               	btfsc status,2
   739  0A6D  3400               	retlw 0
   740  0A6E  0AFF               	incf btemp+1,f
   741  0A6F  1903               	btfsc status,2
   742  0A70  0AFE               	incf btemp,f
   743  0A71  2A63               	goto init_ram
   744                           ; Initialize objects allocated to BANK1
   745                           psect cinit,class=CODE,delta=2
   746                           global init_ram, __pidataBANK1
   747  0C53  1383               	bcf	status, 7	;select IRP bank0
   748  0C54  30E9               	movlw low(__pdataBANK1+13)
   749  0C55  00FD               	movwf btemp-1,f
   750  0C56  300A               	movlw high(__pidataBANK1)
   751  0C57  00FE               	movwf btemp,f
   752  0C58  302D               	movlw low(__pidataBANK1)
   753  0C59  00FF               	movwf btemp+1,f
   754  0C5A  30DC               	movlw low(__pdataBANK1)
   755  0C5B  0084               	movwf fsr,f
   756  0C5C  120A  158A  2263   	fcall init_ram
              120A  158A         
   757                           psect cinit,class=CODE,delta=2
   758                           global end_of_initialization
   759                           
   760                           ;End of C runtime variable initialization code
   761                           
   762  0C61                     end_of_initialization:
   763  0C61  0183               clrf status
   764  0C62  120A  118A  2B85   ljmp _main	;jump to C main() function
   765                           psect	cstackCOMMON,class=COMMON,space=1
   766                           global __pcstackCOMMON
   767  0072                     __pcstackCOMMON:
   768                           	global	?_ser_init
   769  0072                     ?_ser_init:	; 0 bytes @ 0x0
   770                           	global	?_robo_init
   771  0072                     ?_robo_init:	; 0 bytes @ 0x0
   772                           	global	?_UpdateDisplay
   773  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   774                           	global	?_readAvgDistance
   775  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   776                           	global	?_robot_distance
   777  0072                     ?_robot_distance:	; 0 bytes @ 0x0
   778                           	global	?_ADCconvert
   779  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   780                           	global	?_init_adc
   781  0072                     ?_init_adc:	; 0 bytes @ 0x0
   782                           	global	?_lcd_write_control
   783  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   784                           	global	?_lcd_write_data
   785  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   786                           	global	?_lcd_set_cursor
   787  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   788                           	global	?_lcd_init
   789  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   790                           	global	?_isr1
   791  0072                     ?_isr1:	; 0 bytes @ 0x0
   792                           	global	?_init
   793  0072                     ?_init:	; 0 bytes @ 0x0
   794                           	global	?_calibrateIR
   795  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   796                           	global	?_main
   797  0072                     ?_main:	; 0 bytes @ 0x0
   798                           	global	?_ser_isrx
   799  0072                     ?_ser_isrx:	; 1 bit 
   800                           	global	?_ser_putch
   801  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   802                           	global	?_Debounce
   803  0072                     ?_Debounce:	; 0 bytes @ 0x0
   804                           	global	??_Debounce
   805  0072                     ??_Debounce:	; 0 bytes @ 0x0
   806                           	global	?_robot_read
   807  0072                     ?_robot_read:	; 0 bytes @ 0x0
   808                           	global	?_ReadButtons
   809  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   810                           	global	?_Menu
   811  0072                     ?_Menu:	; 1 bytes @ 0x0
   812                           	global	?_adc_read_channel
   813  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   814                           	global	?_spi_transfer
   815  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   816                           	global	?_ser_getch
   817  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   818                           	global	?i1___lwmod
   819  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   820                           	global	i1___lwmod@divisor
   821  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   822  0072                     	ds	1
   823                           	global	??_ReadButtons
   824  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   825  0073                     	ds	1
   826                           	global	i1___lwmod@dividend
   827  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   828  0074                     	ds	2
   829                           	global	??i1___lwmod
   830  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   831  0076                     	ds	1
   832                           	global	i1___lwmod@counter
   833  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   834  0077                     	ds	1
   835                           	global	??_isr1
   836  0078                     ??_isr1:	; 0 bytes @ 0x6
   837  0078                     	ds	5
   838                           psect	cstackBANK0,class=BANK0,space=1
   839                           global __pcstackBANK0
   840  0020                     __pcstackBANK0:
   841                           	global	??_ser_init
   842  0020                     ??_ser_init:	; 0 bytes @ 0x0
   843                           	global	??_Menu
   844  0020                     ??_Menu:	; 0 bytes @ 0x0
   845                           	global	??_init_adc
   846  0020                     ??_init_adc:	; 0 bytes @ 0x0
   847                           	global	??_lcd_write_control
   848  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   849                           	global	??_lcd_write_data
   850  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   851                           	global	??_spi_transfer
   852  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   853                           	global	??_ser_isrx
   854  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   855                           	global	??_ser_getch
   856  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   857                           	global	??_ser_putch
   858  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   859                           	global	?_adc_read
   860  0020                     ?_adc_read:	; 2 bytes @ 0x0
   861                           	global	?___wmul
   862  0020                     ?___wmul:	; 2 bytes @ 0x0
   863                           	global	?___awmod
   864  0020                     ?___awmod:	; 2 bytes @ 0x0
   865                           	global	Menu@input
   866  0020                     Menu@input:	; 1 bytes @ 0x0
   867                           	global	___wmul@multiplier
   868  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   869                           	global	___awmod@divisor
   870  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   871  0020                     	ds	1
   872                           	global	spi_transfer@temp
   873  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   874                           	global	ser_getch@c
   875  0021                     ser_getch@c:	; 1 bytes @ 0x1
   876                           	global	ser_putch@c
   877  0021                     ser_putch@c:	; 1 bytes @ 0x1
   878  0021                     	ds	1
   879                           	global	??_adc_read
   880  0022                     ??_adc_read:	; 0 bytes @ 0x2
   881                           	global	??_robo_init
   882  0022                     ??_robo_init:	; 0 bytes @ 0x2
   883                           	global	?_robotMove
   884  0022                     ?_robotMove:	; 0 bytes @ 0x2
   885                           	global	?_robotTurn
   886  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   887                           	global	??_robot_read
   888  0022                     ??_robot_read:	; 0 bytes @ 0x2
   889                           	global	lcd_write_control@databyte
   890  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   891                           	global	lcd_write_data@databyte
   892  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   893                           	global	spi_transfer@data
   894  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   895                           	global	robot_read@packet
   896  0022                     robot_read@packet:	; 1 bytes @ 0x2
   897                           	global	robotMove@distance
   898  0022                     robotMove@distance:	; 2 bytes @ 0x2
   899                           	global	robotTurn@distance
   900  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   901                           	global	___wmul@multiplicand
   902  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   903                           	global	___awmod@dividend
   904  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   905  0022                     	ds	1
   906                           	global	?_rotate
   907  0023                     ?_rotate:	; 0 bytes @ 0x3
   908                           	global	??_robot_distance
   909  0023                     ??_robot_distance:	; 0 bytes @ 0x3
   910                           	global	??_lcd_set_cursor
   911  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   912                           	global	??_lcd_init
   913  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   914                           	global	??_init
   915  0023                     ??_init:	; 0 bytes @ 0x3
   916                           	global	lcd_set_cursor@address
   917  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   918                           	global	rotate@numsteps
   919  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   920  0023                     	ds	1
   921                           	global	??_robotMove
   922  0024                     ??_robotMove:	; 0 bytes @ 0x4
   923                           	global	??_robotTurn
   924  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   925                           	global	??___wmul
   926  0024                     ??___wmul:	; 0 bytes @ 0x4
   927                           	global	??___awmod
   928  0024                     ??___awmod:	; 0 bytes @ 0x4
   929                           	global	adc_read@adc_value
   930  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   931                           	global	___wmul@product
   932  0024                     ___wmul@product:	; 2 bytes @ 0x4
   933  0024                     	ds	1
   934                           	global	rotate@direction
   935  0025                     rotate@direction:	; 1 bytes @ 0x5
   936                           	global	___awmod@counter
   937  0025                     ___awmod@counter:	; 1 bytes @ 0x5
   938  0025                     	ds	1
   939                           	global	??_rotate
   940  0026                     ??_rotate:	; 0 bytes @ 0x6
   941                           	global	??_adc_read_channel
   942  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
   943                           	global	?___lwdiv
   944  0026                     ?___lwdiv:	; 2 bytes @ 0x6
   945                           	global	___awmod@sign
   946  0026                     ___awmod@sign:	; 1 bytes @ 0x6
   947                           	global	___lwdiv@divisor
   948  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   949  0026                     	ds	1
   950                           	global	?_lcd_write_string
   951  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
   952                           	global	adc_read_channel@channel
   953  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
   954                           	global	lcd_write_string@s
   955  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
   956  0027                     	ds	1
   957                           	global	?_readDistance
   958  0028                     ?_readDistance:	; 2 bytes @ 0x8
   959                           	global	rotate@i
   960  0028                     rotate@i:	; 2 bytes @ 0x8
   961                           	global	___lwdiv@dividend
   962  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   963  0028                     	ds	1
   964                           	global	??_lcd_write_string
   965  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
   966  0029                     	ds	1
   967                           	global	??_readDistance
   968  002A                     ??_readDistance:	; 0 bytes @ 0xA
   969                           	global	??___lwdiv
   970  002A                     ??___lwdiv:	; 0 bytes @ 0xA
   971  002A                     	ds	1
   972                           	global	___lwdiv@quotient
   973  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   974  002B                     	ds	1
   975                           	global	readDistance@fullval
   976  002C                     readDistance@fullval:	; 2 bytes @ 0xC
   977  002C                     	ds	1
   978                           	global	___lwdiv@counter
   979  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   980  002D                     	ds	1
   981                           	global	??_ADCconvert
   982  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
   983                           	global	?___lwmod
   984  002E                     ?___lwmod:	; 2 bytes @ 0xE
   985                           	global	___lwmod@divisor
   986  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
   987  002E                     	ds	2
   988                           	global	??_readAvgDistance
   989  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
   990                           	global	readAvgDistance@fullval
   991  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
   992                           	global	___lwmod@dividend
   993  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
   994  0030                     	ds	2
   995                           	global	??___lwmod
   996  0032                     ??___lwmod:	; 0 bytes @ 0x12
   997                           	global	readAvgDistance@i
   998  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
   999  0032                     	ds	1
  1000                           	global	___lwmod@counter
  1001  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1002  0033                     	ds	1
  1003                           	global	?_sprintf
  1004  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1005                           	global	sprintf@f
  1006  0034                     sprintf@f:	; 1 bytes @ 0x14
  1007  0034                     	ds	5
  1008                           	global	??_sprintf
  1009  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1010  0039                     	ds	3
  1011                           	global	sprintf@ap
  1012  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1013  003C                     	ds	1
  1014                           	global	sprintf@flag
  1015  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1016  003D                     	ds	1
  1017                           	global	sprintf@prec
  1018  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1019  003E                     	ds	1
  1020                           	global	sprintf@_val
  1021  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1022  003F                     	ds	4
  1023                           	global	sprintf@sp
  1024  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1025  0043                     	ds	1
  1026                           	global	sprintf@c
  1027  0044                     sprintf@c:	; 1 bytes @ 0x24
  1028  0044                     	ds	1
  1029                           	global	??_UpdateDisplay
  1030  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1031  0045                     	ds	5
  1032                           	global	UpdateDisplay@adcOutput
  1033  004A                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
  1034  004A                     	ds	16
  1035                           	global	??_calibrateIR
  1036  005A                     ??_calibrateIR:	; 0 bytes @ 0x3A
  1037                           	global	?_scan360
  1038  005A                     ?_scan360:	; 2 bytes @ 0x3A
  1039  005A                     	ds	2
  1040                           	global	??_scan360
  1041  005C                     ??_scan360:	; 0 bytes @ 0x3C
  1042                           	global	scan360@lowestVal
  1043  005C                     scan360@lowestVal:	; 2 bytes @ 0x3C
  1044  005C                     	ds	2
  1045                           	global	scan360@lowestSteps
  1046  005E                     scan360@lowestSteps:	; 2 bytes @ 0x3E
  1047  005E                     	ds	2
  1048                           	global	scan360@steps
  1049  0060                     scan360@steps:	; 2 bytes @ 0x40
  1050  0060                     	ds	2
  1051                           	global	??_main
  1052  0062                     ??_main:	; 0 bytes @ 0x42
  1053  0062                     	ds	3
  1054                           	global	main@shortwall
  1055  0065                     main@shortwall:	; 2 bytes @ 0x45
  1056  0065                     	ds	2
  1057                           	global	main@choice
  1058  0067                     main@choice:	; 1 bytes @ 0x47
  1059  0067                     	ds	1
  1060 ;;Data sizes: Strings 95, constant 10, data 13, bss 85, persistent 0 stack 0
  1061 ;;Auto spaces:   Size  Autos    Used
  1062 ;; COMMON          14     11      14
  1063 ;; BANK0           80     72      80
  1064 ;; BANK1           80      0      73
  1065 ;; BANK3           96      0      16
  1066 ;; BANK2           96      0       0
  1067                           
  1068 ;;
  1069 ;; Pointer list with targets:
  1070                           
  1071 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1072 ;;
  1073 ;; ?___awmod	int  size(1) Largest target is 0
  1074 ;;
  1075 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1076 ;;
  1077 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1078 ;;
  1079 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1080 ;;
  1081 ;; ?_scan360	int  size(1) Largest target is 0
  1082 ;;
  1083 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1084 ;;
  1085 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1086 ;;
  1087 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1088 ;;		 -> STR_12(CODE[15]), STR_11(CODE[15]), 
  1089 ;;
  1090 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1091 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1092 ;;
  1093 ;; ?_sprintf	int  size(1) Largest target is 0
  1094 ;;
  1095 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1096 ;;		 -> ?_sprintf(BANK0[2]), 
  1097 ;;
  1098 ;; S8121$_cp	PTR const unsigned char  size(1) Largest target is 0
  1099 ;;
  1100 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1101 ;;
  1102 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
  1103 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1104 ;;		 -> STR_6(CODE[4]), 
  1105 ;;
  1106 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
  1107 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1108 ;;		 -> STR_1(CODE[9]), 
  1109 ;;
  1110 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1111 ;;		 -> STR_15(CODE[4]), STR_14(CODE[8]), STR_13(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), 
  1112 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1113 ;;		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1114 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1115 ;;
  1116                           
  1117                           
  1118 ;;
  1119 ;; Critical Paths under _main in COMMON
  1120 ;;
  1121 ;;   None.
  1122 ;;
  1123 ;; Critical Paths under _isr1 in COMMON
  1124 ;;
  1125 ;;   _isr1->i1___lwmod
  1126 ;;   _ReadButtons->_Debounce
  1127 ;;
  1128 ;; Critical Paths under _main in BANK0
  1129 ;;
  1130 ;;   _main->_scan360
  1131 ;;   _scan360->_UpdateDisplay
  1132 ;;   _calibrateIR->_UpdateDisplay
  1133 ;;   _readAvgDistance->_ADCconvert
  1134 ;;   _UpdateDisplay->_sprintf
  1135 ;;   _readDistance->_adc_read_channel
  1136 ;;   _robot_distance->_robot_read
  1137 ;;   _lcd_init->_lcd_write_control
  1138 ;;   _lcd_write_string->___awmod
  1139 ;;   _lcd_set_cursor->_lcd_write_control
  1140 ;;   _robot_read->_ser_putch
  1141 ;;   _sprintf->___lwmod
  1142 ;;   _ADCconvert->___lwdiv
  1143 ;;   _robotTurn->_ser_putch
  1144 ;;   _robotMove->_ser_putch
  1145 ;;   _rotate->_spi_transfer
  1146 ;;   _robo_init->_ser_putch
  1147 ;;   _adc_read_channel->_adc_read
  1148 ;;   ___lwmod->___lwdiv
  1149 ;;   ___lwdiv->___wmul
  1150 ;;
  1151 ;; Critical Paths under _isr1 in BANK0
  1152 ;;
  1153 ;;   None.
  1154 ;;
  1155 ;; Critical Paths under _main in BANK1
  1156 ;;
  1157 ;;   None.
  1158 ;;
  1159 ;; Critical Paths under _isr1 in BANK1
  1160 ;;
  1161 ;;   None.
  1162 ;;
  1163 ;; Critical Paths under _main in BANK3
  1164 ;;
  1165 ;;   None.
  1166 ;;
  1167 ;; Critical Paths under _isr1 in BANK3
  1168 ;;
  1169 ;;   None.
  1170 ;;
  1171 ;; Critical Paths under _main in BANK2
  1172 ;;
  1173 ;;   None.
  1174 ;;
  1175 ;; Critical Paths under _isr1 in BANK2
  1176 ;;
  1177 ;;   None.
  1178                           
  1179 ;;
  1180 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1181 ;;
  1182                           
  1183 ;;
  1184 ;;Call Graph Tables:
  1185 ;;
  1186 ;; ---------------------------------------------------------------------------------
  1187 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (0) _main                                                 6     6      0    5881
  1190 ;;                                             66 BANK0      6     6      0
  1191 ;;                               _init
  1192 ;;                    _readAvgDistance
  1193 ;;                      _UpdateDisplay
  1194 ;;                               _Menu
  1195 ;;                        _calibrateIR
  1196 ;;                            _scan360
  1197 ;;                             _rotate
  1198 ;;                          _robotMove
  1199 ;;                          _robotTurn
  1200 ;;                     _robot_distance
  1201 ;; ---------------------------------------------------------------------------------
  1202 ;; (1) _scan360                                              8     6      2    2118
  1203 ;;                                             58 BANK0      8     6      2
  1204 ;;                    _readAvgDistance
  1205 ;;                             _rotate
  1206 ;;                      _UpdateDisplay
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (1) _calibrateIR                                          0     0      0    1425
  1209 ;;                             _rotate
  1210 ;;                      _UpdateDisplay
  1211 ;; ---------------------------------------------------------------------------------
  1212 ;; (2) _readAvgDistance                                      4     4      0     555
  1213 ;;                                             16 BANK0      4     4      0
  1214 ;;                       _readDistance
  1215 ;;                            ___lwdiv
  1216 ;;                         _ADCconvert
  1217 ;; ---------------------------------------------------------------------------------
  1218 ;; (2) _UpdateDisplay                                       21    21      0    1327
  1219 ;;                                             37 BANK0     21    21      0
  1220 ;;                  _lcd_write_control
  1221 ;;                            _sprintf
  1222 ;;                     _lcd_set_cursor
  1223 ;;                   _lcd_write_string
  1224 ;;                            ___awmod
  1225 ;; ---------------------------------------------------------------------------------
  1226 ;; (1) _init                                                 0     0      0      44
  1227 ;;                           _init_adc
  1228 ;;                           _lcd_init
  1229 ;;                           _ser_init
  1230 ;;                          _robo_init
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (3) _readDistance                                         6     4      2      69
  1233 ;;                                              8 BANK0      6     4      2
  1234 ;;                   _adc_read_channel
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; (1) _robot_distance                                       2     2      0      67
  1237 ;;                                              3 BANK0      2     2      0
  1238 ;;                         _robot_read
  1239 ;;                          _ser_getch
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (2) _lcd_init                                             0     0      0      22
  1242 ;;                  _lcd_write_control
  1243 ;; ---------------------------------------------------------------------------------
  1244 ;; (3) _lcd_write_string                                     2     0      2      67
  1245 ;;                                              7 BANK0      2     0      2
  1246 ;;                     _lcd_write_data
  1247 ;;                            ___awmod (ARG)
  1248 ;; ---------------------------------------------------------------------------------
  1249 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1250 ;;                                              3 BANK0      1     1      0
  1251 ;;                  _lcd_write_control
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (2) _robot_read                                           1     1      0      44
  1254 ;;                                              2 BANK0      1     1      0
  1255 ;;                          _ser_putch
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (3) _sprintf                                             17    12      5     798
  1258 ;;                                             20 BANK0     17    12      5
  1259 ;;                            ___lwdiv
  1260 ;;                            ___lwmod
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (2) _ser_getch                                            2     2      0      23
  1263 ;;                                              0 BANK0      2     2      0
  1264 ;;                           _ser_isrx
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (3) _ADCconvert                                           2     2      0     254
  1267 ;;                                             14 BANK0      2     2      0
  1268 ;;                             ___wmul
  1269 ;;                            ___lwdiv
  1270 ;; ---------------------------------------------------------------------------------
  1271 ;; (1) _robotTurn                                            3     1      2      88
  1272 ;;                                              2 BANK0      3     1      2
  1273 ;;                          _ser_putch
  1274 ;; ---------------------------------------------------------------------------------
  1275 ;; (1) _robotMove                                            3     1      2      88
  1276 ;;                                              2 BANK0      3     1      2
  1277 ;;                          _ser_putch
  1278 ;; ---------------------------------------------------------------------------------
  1279 ;; (1) _rotate                                               7     4      3      98
  1280 ;;                                              3 BANK0      7     4      3
  1281 ;;                       _spi_transfer
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (2) _robo_init                                            0     0      0      22
  1284 ;;                          _ser_putch
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (4) _lcd_write_data                                       3     3      0      22
  1287 ;;                                              0 BANK0      3     3      0
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (4) _lcd_write_control                                    3     3      0      22
  1290 ;;                                              0 BANK0      3     3      0
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (2) _init_adc                                             1     1      0       0
  1293 ;;                                              0 BANK0      1     1      0
  1294 ;; ---------------------------------------------------------------------------------
  1295 ;; (4) _adc_read_channel                                     2     2      0      46
  1296 ;;                                              6 BANK0      2     2      0
  1297 ;;                           _adc_read
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (3) ___awmod                                              7     3      4     296
  1300 ;;                                              0 BANK0      7     3      4
  1301 ;; ---------------------------------------------------------------------------------
  1302 ;; (4) ___lwmod                                              6     2      4     159
  1303 ;;                                             14 BANK0      6     2      4
  1304 ;;                            ___lwdiv (ARG)
  1305 ;; ---------------------------------------------------------------------------------
  1306 ;; (4) ___lwdiv                                              8     4      4     162
  1307 ;;                                              6 BANK0      8     4      4
  1308 ;;                             ___wmul (ARG)
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (4) ___wmul                                               6     2      4      92
  1311 ;;                                              0 BANK0      6     2      4
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (3) _ser_putch                                            2     2      0      22
  1314 ;;                                              0 BANK0      2     2      0
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (3) _ser_isrx                                             0     0      0       0
  1317 ;; ---------------------------------------------------------------------------------
  1318 ;; (2) _spi_transfer                                         3     3      0      30
  1319 ;;                                              0 BANK0      3     3      0
  1320 ;; ---------------------------------------------------------------------------------
  1321 ;; (1) _Menu                                                 1     1      0      22
  1322 ;;                                              0 BANK0      1     1      0
  1323 ;; ---------------------------------------------------------------------------------
  1324 ;; (2) _ser_init                                             1     1      0       0
  1325 ;;                                              0 BANK0      1     1      0
  1326 ;; ---------------------------------------------------------------------------------
  1327 ;; (5) _adc_read                                             6     4      2      24
  1328 ;;                                              0 BANK0      6     4      2
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; Estimated maximum stack depth 5
  1331 ;; ---------------------------------------------------------------------------------
  1332 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (6) _isr1                                                 5     5      0     521
  1335 ;;                                              6 COMMON     5     5      0
  1336 ;;                          i1___lwmod
  1337 ;;                        _ReadButtons
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (7) _ReadButtons                                          0     0      0       0
  1340 ;;                           _Debounce
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (7) i1___lwmod                                            6     2      4     521
  1343 ;;                                              0 COMMON     6     2      4
  1344 ;; ---------------------------------------------------------------------------------
  1345 ;; (8) _Debounce                                             1     1      0       0
  1346 ;;                                              0 COMMON     1     1      0
  1347 ;; ---------------------------------------------------------------------------------
  1348 ;; Estimated maximum stack depth 8
  1349 ;; ---------------------------------------------------------------------------------
  1350                           
  1351 ;; Call Graph Graphs:
  1352                           
  1353 ;; _main (ROOT)
  1354 ;;   _init
  1355 ;;     _init_adc
  1356 ;;     _lcd_init
  1357 ;;       _lcd_write_control
  1358 ;;     _ser_init
  1359 ;;     _robo_init
  1360 ;;       _ser_putch
  1361 ;;   _readAvgDistance
  1362 ;;     _readDistance
  1363 ;;       _adc_read_channel
  1364 ;;         _adc_read
  1365 ;;     ___lwdiv
  1366 ;;       ___wmul (ARG)
  1367 ;;     _ADCconvert
  1368 ;;       ___wmul
  1369 ;;       ___lwdiv
  1370 ;;         ___wmul (ARG)
  1371 ;;   _UpdateDisplay
  1372 ;;     _lcd_write_control
  1373 ;;     _sprintf
  1374 ;;       ___lwdiv
  1375 ;;         ___wmul (ARG)
  1376 ;;       ___lwmod
  1377 ;;         ___lwdiv (ARG)
  1378 ;;           ___wmul (ARG)
  1379 ;;     _lcd_set_cursor
  1380 ;;       _lcd_write_control
  1381 ;;     _lcd_write_string
  1382 ;;       _lcd_write_data
  1383 ;;       ___awmod (ARG)
  1384 ;;     ___awmod
  1385 ;;   _Menu
  1386 ;;   _calibrateIR
  1387 ;;     _rotate
  1388 ;;       _spi_transfer
  1389 ;;     _UpdateDisplay
  1390 ;;       _lcd_write_control
  1391 ;;       _sprintf
  1392 ;;         ___lwdiv
  1393 ;;           ___wmul (ARG)
  1394 ;;         ___lwmod
  1395 ;;           ___lwdiv (ARG)
  1396 ;;             ___wmul (ARG)
  1397 ;;       _lcd_set_cursor
  1398 ;;         _lcd_write_control
  1399 ;;       _lcd_write_string
  1400 ;;         _lcd_write_data
  1401 ;;         ___awmod (ARG)
  1402 ;;       ___awmod
  1403 ;;   _scan360
  1404 ;;     _readAvgDistance
  1405 ;;       _readDistance
  1406 ;;         _adc_read_channel
  1407 ;;           _adc_read
  1408 ;;       ___lwdiv
  1409 ;;         ___wmul (ARG)
  1410 ;;       _ADCconvert
  1411 ;;         ___wmul
  1412 ;;         ___lwdiv
  1413 ;;           ___wmul (ARG)
  1414 ;;     _rotate
  1415 ;;       _spi_transfer
  1416 ;;     _UpdateDisplay
  1417 ;;       _lcd_write_control
  1418 ;;       _sprintf
  1419 ;;         ___lwdiv
  1420 ;;           ___wmul (ARG)
  1421 ;;         ___lwmod
  1422 ;;           ___lwdiv (ARG)
  1423 ;;             ___wmul (ARG)
  1424 ;;       _lcd_set_cursor
  1425 ;;         _lcd_write_control
  1426 ;;       _lcd_write_string
  1427 ;;         _lcd_write_data
  1428 ;;         ___awmod (ARG)
  1429 ;;       ___awmod
  1430 ;;   _rotate
  1431 ;;     _spi_transfer
  1432 ;;   _robotMove
  1433 ;;     _ser_putch
  1434 ;;   _robotTurn
  1435 ;;     _ser_putch
  1436 ;;   _robot_distance
  1437 ;;     _robot_read
  1438 ;;       _ser_putch
  1439 ;;     _ser_getch
  1440 ;;       _ser_isrx
  1441 ;;
  1442 ;; _isr1 (ROOT)
  1443 ;;   i1___lwmod
  1444 ;;   _ReadButtons
  1445 ;;     _Debounce
  1446 ;;
  1447                           
  1448 ;; Address spaces:
  1449                           
  1450 ;;Name               Size   Autos  Total    Cost      Usage
  1451 ;;BANK3               60      0      10       9       16.7%
  1452 ;;BITBANK3            60      0       0       8        0.0%
  1453 ;;SFR3                 0      0       0       4        0.0%
  1454 ;;BITSFR3              0      0       0       4        0.0%
  1455 ;;BANK2               60      0       0      11        0.0%
  1456 ;;BITBANK2            60      0       0      10        0.0%
  1457 ;;SFR2                 0      0       0       5        0.0%
  1458 ;;BITSFR2              0      0       0       5        0.0%
  1459 ;;SFR1                 0      0       0       2        0.0%
  1460 ;;BITSFR1              0      0       0       2        0.0%
  1461 ;;BANK1               50      0      49       7       91.3%
  1462 ;;BITBANK1            50      0       0       6        0.0%
  1463 ;;CODE                 0      0       0       0        0.0%
  1464 ;;DATA                 0      0      C2      12        0.0%
  1465 ;;ABS                  0      0      B7       3        0.0%
  1466 ;;NULL                 0      0       0       0        0.0%
  1467 ;;STACK                0      0       B       2        0.0%
  1468 ;;BANK0               50     48      50       5      100.0%
  1469 ;;BITBANK0            50      0       0       4        0.0%
  1470 ;;SFR0                 0      0       0       1        0.0%
  1471 ;;BITSFR0              0      0       0       1        0.0%
  1472 ;;COMMON               E      B       E       1      100.0%
  1473 ;;BITCOMMON            E      0       2       0       14.3%
  1474 ;;EEDATA             100      0       0       0        0.0%
  1475                           
  1476                           	global	_main
  1477                           psect	maintext,global,class=CODE,delta=2
  1478                           global __pmaintext
  1479  0385                     __pmaintext:
  1480                           
  1481 ;; *************** function _main *****************
  1482 ;; Defined at:
  1483 ;;		line 231 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  shortwall       2   69[BANK0 ] int 
  1488 ;;  choice          1   71[BANK0 ] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 17F/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         0       3       0       0       0
  1500 ;;      Temps:          0       3       0       0       0
  1501 ;;      Totals:         0       6       0       0       0
  1502 ;;Total ram usage:        6 bytes
  1503 ;; Hardware stack levels required when called:    8
  1504 ;; This function calls:
  1505 ;;		_init
  1506 ;;		_readAvgDistance
  1507 ;;		_UpdateDisplay
  1508 ;;		_Menu
  1509 ;;		_calibrateIR
  1510 ;;		_scan360
  1511 ;;		_rotate
  1512 ;;		_robotMove
  1513 ;;		_robotTurn
  1514 ;;		_robot_distance
  1515 ;; This function is called by:
  1516 ;;		Startup code after reset
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           psect	maintext
  1520                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1521                           	line	231
  1522                           	global	__size_of_main
  1523  010C                     	__size_of_main	equ	__end_of_main-_main
  1524                           	
  1525  0385                     _main:	
  1526                           	opt	stack 0
  1527                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1528                           	line	236
  1529                           	
  1530  0385                     l10934:	
  1531                           ;Main.c: 236: init();
  1532  0385  120A  158A  2362   	fcall	_init
              120A  118A         
  1533  038A  2B8B               	goto	l10936
  1534                           	line	241
  1535                           ;Main.c: 241: while(1)
  1536                           	
  1537  038B                     l2237:	
  1538                           	line	243
  1539                           	
  1540  038B                     l10936:	
  1541                           ;Main.c: 242: {
  1542                           ;Main.c: 243: unsigned char choice = 255;
  1543  038B  30FF               	movlw	(0FFh)
  1544  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  1545  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  1546  038E  00E2               	movwf	(??_main+0)+0
  1547  038F  0862               	movf	(??_main+0)+0,w
  1548  0390  00E7               	movwf	(main@choice)
  1549                           	line	244
  1550                           	
  1551  0391                     l10938:	
  1552                           ;Main.c: 244: int shortwall = 0;
  1553  0391  01E5               	clrf	(main@shortwall)
  1554  0392  01E6               	clrf	(main@shortwall+1)
  1555                           	line	246
  1556                           	
  1557  0393                     l10940:	
  1558                           ;Main.c: 246: if ((SCAN_FLAG == 0) & (RTC_FLAG_250MS == 1))
  1559  0393  1683               	bsf	status, 5	;RP0=1, select bank1
  1560  0394  1303               	bcf	status, 6	;RP1=0, select bank1
  1561  0395  08D2               	movf	(_SCAN_FLAG)^080h,f
  1562  0396  1D03               	skipz
  1563  0397  2B99               	goto	u4541
  1564  0398  2B9A               	goto	u4540
  1565  0399                     u4541:
  1566  0399  2BE2               	goto	l10970
  1567  039A                     u4540:
  1568                           	
  1569  039A                     l10942:	
  1570  039A  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1571  039B  2B9D               	goto	u4551
  1572  039C  2B9E               	goto	u4550
  1573  039D                     u4551:
  1574  039D  2BE2               	goto	l10970
  1575  039E                     u4550:
  1576                           	line	248
  1577                           	
  1578  039E                     l10944:	
  1579                           ;Main.c: 247: {
  1580                           ;Main.c: 248: RTC_FLAG_250MS = 0;
  1581  039E  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1582                           	line	250
  1583                           	
  1584  039F                     l10946:	
  1585                           ;Main.c: 250: readAvgDistance();
  1586  039F  120A  158A  2641   	fcall	_readAvgDistance
              120A  118A         
  1587                           	line	251
  1588                           ;Main.c: 251: UpdateDisplay();
  1589  03A4  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1590  03A9  2BE2               	goto	l10970
  1591                           	line	252
  1592                           	
  1593  03AA                     l2238:	
  1594                           	line	254
  1595                           ;Main.c: 252: }
  1596                           ;Main.c: 254: switch (buttonPressed)
  1597  03AA  2BE2               	goto	l10970
  1598                           	line	256
  1599                           ;Main.c: 255: {
  1600                           ;Main.c: 256: case 1:
  1601                           	
  1602  03AB                     l2240:	
  1603                           	line	257
  1604                           	
  1605  03AB                     l10948:	
  1606                           ;Main.c: 257: Menu(1);
  1607  03AB  3001               	movlw	(01h)
  1608  03AC  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1609                           	line	259
  1610                           	
  1611  03B1                     l10950:	
  1612                           ;Main.c: 259: buttonPressed = 0;
  1613  03B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1614  03B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1615  03B3  01EC               	clrf	(_buttonPressed)	;volatile
  1616                           	line	261
  1617                           ;Main.c: 261: break;
  1618  03B4  2C73               	goto	l10994
  1619                           	line	262
  1620                           ;Main.c: 262: case 2:
  1621                           	
  1622  03B5                     l2242:	
  1623                           	line	263
  1624                           	
  1625  03B5                     l10952:	
  1626                           ;Main.c: 263: Menu(2);
  1627  03B5  3002               	movlw	(02h)
  1628  03B6  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1629                           	line	265
  1630                           	
  1631  03BB                     l10954:	
  1632                           ;Main.c: 265: buttonPressed = 0;
  1633  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  1634  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  1635  03BD  01EC               	clrf	(_buttonPressed)	;volatile
  1636                           	line	267
  1637                           ;Main.c: 267: break;
  1638  03BE  2C73               	goto	l10994
  1639                           	line	268
  1640                           ;Main.c: 268: case 3:
  1641                           	
  1642  03BF                     l2243:	
  1643                           	line	269
  1644                           	
  1645  03BF                     l10956:	
  1646                           ;Main.c: 269: Menu(3);
  1647  03BF  3003               	movlw	(03h)
  1648  03C0  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1649                           	line	271
  1650                           	
  1651  03C5                     l10958:	
  1652                           ;Main.c: 271: buttonPressed = 0;
  1653  03C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1654  03C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1655  03C7  01EC               	clrf	(_buttonPressed)	;volatile
  1656                           	line	273
  1657                           ;Main.c: 273: break;
  1658  03C8  2C73               	goto	l10994
  1659                           	line	274
  1660                           ;Main.c: 274: case 4:
  1661                           	
  1662  03C9                     l2244:	
  1663                           	line	275
  1664                           	
  1665  03C9                     l10960:	
  1666                           ;Main.c: 275: Menu(4);
  1667  03C9  3004               	movlw	(04h)
  1668  03CA  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1669                           	line	277
  1670                           	
  1671  03CF                     l10962:	
  1672                           ;Main.c: 277: buttonPressed = 0;
  1673  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1674  03D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1675  03D1  01EC               	clrf	(_buttonPressed)	;volatile
  1676                           	line	279
  1677                           ;Main.c: 279: break;
  1678  03D2  2C73               	goto	l10994
  1679                           	line	280
  1680                           ;Main.c: 280: case 5:
  1681                           	
  1682  03D3                     l2245:	
  1683                           	line	281
  1684                           	
  1685  03D3                     l10964:	
  1686                           ;Main.c: 281: choice = Menu(5);
  1687  03D3  3005               	movlw	(05h)
  1688  03D4  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1689  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1690  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1691  03DB  00E2               	movwf	(??_main+0)+0
  1692  03DC  0862               	movf	(??_main+0)+0,w
  1693  03DD  00E7               	movwf	(main@choice)
  1694                           	line	283
  1695                           	
  1696  03DE                     l10966:	
  1697                           ;Main.c: 283: buttonPressed = 0;
  1698  03DE  01EC               	clrf	(_buttonPressed)	;volatile
  1699                           	line	285
  1700                           ;Main.c: 285: break;
  1701  03DF  2C73               	goto	l10994
  1702                           	line	286
  1703                           ;Main.c: 286: default:
  1704                           	
  1705  03E0                     l2246:	
  1706                           	line	288
  1707                           ;Main.c: 288: break;
  1708  03E0  2C73               	goto	l10994
  1709                           	line	289
  1710                           	
  1711  03E1                     l10968:	
  1712                           ;Main.c: 289: }
  1713  03E1  2C73               	goto	l10994
  1714                           	line	254
  1715                           	
  1716  03E2                     l2239:	
  1717                           	
  1718  03E2                     l10970:	
  1719  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1720  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1721  03E4  086C               	movf	(_buttonPressed),w	;volatile
  1722                           	; Switch size 1, requested type "space"
  1723                           ; Number of cases is 5, Range of values is 1 to 5
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           16     9 (average)
  1727                           ; direct_byte           26    11 (fixed)
  1728                           ; jumptable            263     9 (fixed)
  1729                           ;	Chosen strategy is simple_byte
  1730                           
  1731                           	opt asmopt_off
  1732  03E5  3A01               	xorlw	1^0	; case 1
  1733  03E6  1903               	skipnz
  1734  03E7  2BAB               	goto	l10948
  1735  03E8  3A03               	xorlw	2^1	; case 2
  1736  03E9  1903               	skipnz
  1737  03EA  2BB5               	goto	l10952
  1738  03EB  3A01               	xorlw	3^2	; case 3
  1739  03EC  1903               	skipnz
  1740  03ED  2BBF               	goto	l10956
  1741  03EE  3A07               	xorlw	4^3	; case 4
  1742  03EF  1903               	skipnz
  1743  03F0  2BC9               	goto	l10960
  1744  03F1  3A01               	xorlw	5^4	; case 5
  1745  03F2  1903               	skipnz
  1746  03F3  2BD3               	goto	l10964
  1747  03F4  2C73               	goto	l10994
  1748                           	opt asmopt_on
  1749                           
  1750                           	line	289
  1751                           	
  1752  03F5                     l2241:	
  1753                           	line	292
  1754                           ;Main.c: 292: switch (choice)
  1755  03F5  2C73               	goto	l10994
  1756                           	line	294
  1757                           ;Main.c: 293: {
  1758                           ;Main.c: 294: case 0:
  1759                           	
  1760  03F6                     l2248:	
  1761                           	line	295
  1762                           	
  1763  03F6                     l10972:	
  1764                           ;Main.c: 295: calibrateIR();
  1765  03F6  120A  158A  2696   	fcall	_calibrateIR
              120A  118A         
  1766                           	line	296
  1767                           ;Main.c: 296: break;
  1768  03FB  2C86               	goto	l10996
  1769                           	line	297
  1770                           ;Main.c: 297: case 1:
  1771                           	
  1772  03FC                     l2250:	
  1773                           	line	298
  1774                           	
  1775  03FC                     l10974:	
  1776                           ;Main.c: 298: shortwall = scan360();
  1777  03FC  120A  158A  26FB   	fcall	_scan360
              120A  118A         
  1778  0401  1283               	bcf	status, 5	;RP0=0, select bank0
  1779  0402  1303               	bcf	status, 6	;RP1=0, select bank0
  1780  0403  085B               	movf	(1+(?_scan360)),w
  1781  0404  01E6               	clrf	(main@shortwall+1)
  1782  0405  07E6               	addwf	(main@shortwall+1)
  1783  0406  085A               	movf	(0+(?_scan360)),w
  1784  0407  01E5               	clrf	(main@shortwall)
  1785  0408  07E5               	addwf	(main@shortwall)
  1786                           
  1787                           	line	299
  1788                           	
  1789  0409                     l10976:	
  1790                           ;Main.c: 299: rotate((400 - shortwall), 0);
  1791  0409  0965               	comf	(main@shortwall),w
  1792  040A  00E2               	movwf	(??_main+0)+0
  1793  040B  0966               	comf	(main@shortwall+1),w
  1794  040C  00E3               	movwf	((??_main+0)+0+1)
  1795  040D  0AE2               	incf	(??_main+0)+0,f
  1796  040E  1903               	skipnz
  1797  040F  0AE3               	incf	((??_main+0)+0+1),f
  1798  0410  0862               	movf	0+(??_main+0)+0,w
  1799  0411  3E90               	addlw	low(0190h)
  1800  0412  00A3               	movwf	(?_rotate)
  1801  0413  0863               	movf	1+(??_main+0)+0,w
  1802  0414  1803               	skipnc
  1803  0415  3E01               	addlw	1
  1804  0416  3E01               	addlw	high(0190h)
  1805  0417  00A4               	movwf	1+(?_rotate)
  1806  0418  01A5               	clrf	0+(?_rotate)+02h
  1807  0419  120A  158A  25F1   	fcall	_rotate
              120A  118A         
  1808                           	line	300
  1809                           ;Main.c: 300: break;
  1810  041E  2C86               	goto	l10996
  1811                           	line	301
  1812                           ;Main.c: 301: case 2:
  1813                           	
  1814  041F                     l2251:	
  1815                           	line	302
  1816                           	
  1817  041F                     l10978:	
  1818                           ;Main.c: 302: _delay((unsigned long)((100)*(20000000/4000.0)));
  1819                           	opt asmopt_off
  1820  041F  3003               movlw  3
  1821  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  1822  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  1823  0422  00E4               movwf	((??_main+0)+0+2),f
  1824  0423  308A               movlw	138
  1825  0424  00E3               movwf	((??_main+0)+0+1),f
  1826  0425  3056               	movlw	86
  1827  0426  00E2               movwf	((??_main+0)+0),f
  1828  0427                     u4567:
  1829  0427  0BE2               	decfsz	((??_main+0)+0),f
  1830  0428  2C27               	goto	u4567
  1831  0429  0BE3               	decfsz	((??_main+0)+0+1),f
  1832  042A  2C27               	goto	u4567
  1833  042B  0BE4               	decfsz	((??_main+0)+0+2),f
  1834  042C  2C27               	goto	u4567
  1835  042D  2C2E               	nop2
  1836                           opt asmopt_on
  1837                           
  1838                           	line	303
  1839                           	
  1840  042E                     l10980:	
  1841                           ;Main.c: 303: robotMove(2000);
  1842  042E  30D0               	movlw	low(07D0h)
  1843  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  1844  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  1845  0431  00A2               	movwf	(?_robotMove)
  1846  0432  3007               	movlw	high(07D0h)
  1847  0433  00A3               	movwf	((?_robotMove))+1
  1848  0434  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1849                           	line	306
  1850                           ;Main.c: 306: break;
  1851  0439  2C86               	goto	l10996
  1852                           	line	307
  1853                           ;Main.c: 307: case 3:
  1854                           	
  1855  043A                     l2252:	
  1856                           	line	308
  1857                           	
  1858  043A                     l10982:	
  1859                           ;Main.c: 308: _delay((unsigned long)((100)*(20000000/4000.0)));
  1860                           	opt asmopt_off
  1861  043A  3003               movlw  3
  1862  043B  1283               	bcf	status, 5	;RP0=0, select bank0
  1863  043C  1303               	bcf	status, 6	;RP1=0, select bank0
  1864  043D  00E4               movwf	((??_main+0)+0+2),f
  1865  043E  308A               movlw	138
  1866  043F  00E3               movwf	((??_main+0)+0+1),f
  1867  0440  3056               	movlw	86
  1868  0441  00E2               movwf	((??_main+0)+0),f
  1869  0442                     u4577:
  1870  0442  0BE2               	decfsz	((??_main+0)+0),f
  1871  0443  2C42               	goto	u4577
  1872  0444  0BE3               	decfsz	((??_main+0)+0+1),f
  1873  0445  2C42               	goto	u4577
  1874  0446  0BE4               	decfsz	((??_main+0)+0+2),f
  1875  0447  2C42               	goto	u4577
  1876  0448  2C49               	nop2
  1877                           opt asmopt_on
  1878                           
  1879                           	line	309
  1880                           	
  1881  0449                     l10984:	
  1882                           ;Main.c: 309: robotMove(1000);
  1883  0449  30E8               	movlw	low(03E8h)
  1884  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  1885  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  1886  044C  00A2               	movwf	(?_robotMove)
  1887  044D  3003               	movlw	high(03E8h)
  1888  044E  00A3               	movwf	((?_robotMove))+1
  1889  044F  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1890                           	line	310
  1891                           	
  1892  0454                     l10986:	
  1893                           ;Main.c: 310: robotTurn(-90);
  1894  0454  30A6               	movlw	low(-90)
  1895  0455  1283               	bcf	status, 5	;RP0=0, select bank0
  1896  0456  1303               	bcf	status, 6	;RP1=0, select bank0
  1897  0457  00A2               	movwf	(?_robotTurn)
  1898  0458  30FF               	movlw	high(-90)
  1899  0459  00A3               	movwf	((?_robotTurn))+1
  1900  045A  120A  118A  2709   	fcall	_robotTurn
              120A  118A         
  1901                           	line	311
  1902                           	
  1903  045F                     l10988:	
  1904                           ;Main.c: 311: robotMove(1000);
  1905  045F  30E8               	movlw	low(03E8h)
  1906  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  1907  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  1908  0462  00A2               	movwf	(?_robotMove)
  1909  0463  3003               	movlw	high(03E8h)
  1910  0464  00A3               	movwf	((?_robotMove))+1
  1911  0465  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1912                           	line	312
  1913                           ;Main.c: 312: break;
  1914  046A  2C86               	goto	l10996
  1915                           	line	313
  1916                           ;Main.c: 313: case 4:
  1917                           	
  1918  046B                     l2253:	
  1919                           	line	314
  1920                           	
  1921  046B                     l10990:	
  1922                           ;Main.c: 314: robot_distance();
  1923  046B  120A  158A  22DD   	fcall	_robot_distance
              120A  118A         
  1924                           	line	315
  1925                           ;Main.c: 315: break;
  1926  0470  2C86               	goto	l10996
  1927                           	line	318
  1928                           ;Main.c: 318: default:
  1929                           	
  1930  0471                     l2254:	
  1931                           	line	320
  1932                           ;Main.c: 320: break;
  1933  0471  2C86               	goto	l10996
  1934                           	line	321
  1935                           	
  1936  0472                     l10992:	
  1937                           ;Main.c: 321: }
  1938  0472  2C86               	goto	l10996
  1939                           	line	292
  1940                           	
  1941  0473                     l2247:	
  1942                           	
  1943  0473                     l10994:	
  1944  0473  1283               	bcf	status, 5	;RP0=0, select bank0
  1945  0474  1303               	bcf	status, 6	;RP1=0, select bank0
  1946  0475  0867               	movf	(main@choice),w
  1947                           	; Switch size 1, requested type "space"
  1948                           ; Number of cases is 5, Range of values is 0 to 4
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           16     9 (average)
  1952                           ; direct_byte           23     8 (fixed)
  1953                           ; jumptable            260     6 (fixed)
  1954                           ; rangetable             9     6 (fixed)
  1955                           ; spacedrange           16     9 (fixed)
  1956                           ; locatedrange           5     3 (fixed)
  1957                           ;	Chosen strategy is simple_byte
  1958                           
  1959                           	opt asmopt_off
  1960  0476  3A00               	xorlw	0^0	; case 0
  1961  0477  1903               	skipnz
  1962  0478  2BF6               	goto	l10972
  1963  0479  3A01               	xorlw	1^0	; case 1
  1964  047A  1903               	skipnz
  1965  047B  2BFC               	goto	l10974
  1966  047C  3A03               	xorlw	2^1	; case 2
  1967  047D  1903               	skipnz
  1968  047E  2C1F               	goto	l10978
  1969  047F  3A01               	xorlw	3^2	; case 3
  1970  0480  1903               	skipnz
  1971  0481  2C3A               	goto	l10982
  1972  0482  3A07               	xorlw	4^3	; case 4
  1973  0483  1903               	skipnz
  1974  0484  2C6B               	goto	l10990
  1975  0485  2C86               	goto	l10996
  1976                           	opt asmopt_on
  1977                           
  1978                           	line	321
  1979                           	
  1980  0486                     l2249:	
  1981                           	line	322
  1982                           	
  1983  0486                     l10996:	
  1984                           ;Main.c: 322: choice = 255;
  1985  0486  30FF               	movlw	(0FFh)
  1986  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  1987  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  1988  0489  00E2               	movwf	(??_main+0)+0
  1989  048A  0862               	movf	(??_main+0)+0,w
  1990  048B  00E7               	movwf	(main@choice)
  1991  048C  2B8B               	goto	l10936
  1992                           	line	472
  1993                           	
  1994  048D                     l2255:	
  1995                           	line	241
  1996  048D  2B8B               	goto	l10936
  1997                           	
  1998  048E                     l2256:	
  1999                           	line	473
  2000                           	
  2001  048E                     l2257:	
  2002                           	global	start
  2003  048E  120A  118A  2812   	ljmp	start
  2004                           	opt stack 0
  2005                           GLOBAL	__end_of_main
  2006  0491                     	__end_of_main:
  2007 ;; =============== function _main ends ============
  2008                           
  2009                           	signat	_main,88
  2010                           	global	_scan360
  2011                           psect	text882,local,class=CODE,delta=2
  2012                           global __ptext882
  2013  0EFB                     __ptext882:
  2014                           
  2015 ;; *************** function _scan360 *****************
  2016 ;; Defined at:
  2017 ;;		line 207 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  steps           2   64[BANK0 ] int 
  2022 ;;  lowestSteps     2   62[BANK0 ] int 
  2023 ;;  lowestVal       2   60[BANK0 ] int 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2   58[BANK0 ] int 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       2       0       0       0
  2034 ;;      Locals:         0       6       0       0       0
  2035 ;;      Temps:          0       0       0       0       0
  2036 ;;      Totals:         0       8       0       0       0
  2037 ;;Total ram usage:        8 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    7
  2040 ;; This function calls:
  2041 ;;		_readAvgDistance
  2042 ;;		_rotate
  2043 ;;		_UpdateDisplay
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           psect	text882
  2049                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2050                           	line	207
  2051                           	global	__size_of_scan360
  2052  007D                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2053                           	
  2054  0EFB                     _scan360:	
  2055                           	opt	stack 0
  2056                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2057                           	line	208
  2058                           	
  2059  0EFB                     l10904:	
  2060                           ;Main.c: 208: int lowestVal = 0, lowestSteps = 0;
  2061  0EFB  1283               	bcf	status, 5	;RP0=0, select bank0
  2062  0EFC  1303               	bcf	status, 6	;RP1=0, select bank0
  2063  0EFD  01DC               	clrf	(scan360@lowestVal)
  2064  0EFE  01DD               	clrf	(scan360@lowestVal+1)
  2065  0EFF  01DE               	clrf	(scan360@lowestSteps)
  2066  0F00  01DF               	clrf	(scan360@lowestSteps+1)
  2067                           	line	209
  2068                           	
  2069  0F01                     l10906:	
  2070                           ;Main.c: 209: SCAN_FLAG = 1;
  2071  0F01  1683               	bsf	status, 5	;RP0=1, select bank1
  2072  0F02  1303               	bcf	status, 6	;RP1=0, select bank1
  2073  0F03  01D2               	clrf	(_SCAN_FLAG)^080h
  2074  0F04  1403               	bsf	status,0
  2075  0F05  0DD2               	rlf	(_SCAN_FLAG)^080h,f
  2076                           	line	210
  2077                           	
  2078  0F06                     l10908:	
  2079                           ;Main.c: 210: for (int steps = 0; steps < 400; steps++)
  2080  0F06  1283               	bcf	status, 5	;RP0=0, select bank0
  2081  0F07  1303               	bcf	status, 6	;RP1=0, select bank0
  2082  0F08  01E0               	clrf	(scan360@steps)
  2083  0F09  01E1               	clrf	(scan360@steps+1)
  2084                           	
  2085  0F0A                     l10910:	
  2086  0F0A  0861               	movf	(scan360@steps+1),w
  2087  0F0B  3A80               	xorlw	80h
  2088  0F0C  00FF               	movwf	btemp+1
  2089  0F0D  3081               	movlw	(high(0190h))^80h
  2090  0F0E  027F               	subwf	btemp+1,w
  2091  0F0F  1D03               	skipz
  2092  0F10  2F13               	goto	u4515
  2093  0F11  3090               	movlw	low(0190h)
  2094  0F12  0260               	subwf	(scan360@steps),w
  2095  0F13                     u4515:
  2096                           
  2097  0F13  1C03               	skipc
  2098  0F14  2F16               	goto	u4511
  2099  0F15  2F17               	goto	u4510
  2100  0F16                     u4511:
  2101  0F16  2F19               	goto	l10914
  2102  0F17                     u4510:
  2103  0F17  2F6B               	goto	l2232
  2104                           	
  2105  0F18                     l10912:	
  2106  0F18  2F6B               	goto	l2232
  2107                           	line	211
  2108                           	
  2109  0F19                     l2231:	
  2110                           	line	212
  2111                           	
  2112  0F19                     l10914:	
  2113                           ;Main.c: 211: {
  2114                           ;Main.c: 212: readAvgDistance();
  2115  0F19  120A  158A  2641   	fcall	_readAvgDistance
              120A  158A         
  2116                           	line	213
  2117                           	
  2118  0F1E                     l10916:	
  2119                           ;Main.c: 213: if (adcVal > lowestVal)
  2120  0F1E  1283               	bcf	status, 5	;RP0=0, select bank0
  2121  0F1F  1303               	bcf	status, 6	;RP1=0, select bank0
  2122  0F20  086B               	movf	(_adcVal+1),w	;volatile
  2123  0F21  025D               	subwf	(scan360@lowestVal+1),w
  2124  0F22  1D03               	skipz
  2125  0F23  2F26               	goto	u4525
  2126  0F24  086A               	movf	(_adcVal),w	;volatile
  2127  0F25  025C               	subwf	(scan360@lowestVal),w
  2128  0F26                     u4525:
  2129  0F26  1803               	skipnc
  2130  0F27  2F29               	goto	u4521
  2131  0F28  2F2A               	goto	u4520
  2132  0F29                     u4521:
  2133  0F29  2F37               	goto	l10920
  2134  0F2A                     u4520:
  2135                           	line	215
  2136                           	
  2137  0F2A                     l10918:	
  2138                           ;Main.c: 214: {
  2139                           ;Main.c: 215: lowestVal = adcVal;
  2140  0F2A  086B               	movf	(_adcVal+1),w	;volatile
  2141  0F2B  01DD               	clrf	(scan360@lowestVal+1)	;volatile
  2142  0F2C  07DD               	addwf	(scan360@lowestVal+1)	;volatile
  2143  0F2D  086A               	movf	(_adcVal),w	;volatile
  2144  0F2E  01DC               	clrf	(scan360@lowestVal)	;volatile
  2145  0F2F  07DC               	addwf	(scan360@lowestVal)	;volatile
  2146                           
  2147                           	line	216
  2148                           ;Main.c: 216: lowestSteps = steps;
  2149  0F30  0861               	movf	(scan360@steps+1),w
  2150  0F31  01DF               	clrf	(scan360@lowestSteps+1)
  2151  0F32  07DF               	addwf	(scan360@lowestSteps+1)
  2152  0F33  0860               	movf	(scan360@steps),w
  2153  0F34  01DE               	clrf	(scan360@lowestSteps)
  2154  0F35  07DE               	addwf	(scan360@lowestSteps)
  2155                           
  2156  0F36  2F37               	goto	l10920
  2157                           	line	218
  2158                           	
  2159  0F37                     l2233:	
  2160                           	line	219
  2161                           	
  2162  0F37                     l10920:	
  2163                           ;Main.c: 218: }
  2164                           ;Main.c: 219: rotate(1, 1);
  2165  0F37  3001               	movlw	low(01h)
  2166  0F38  00A3               	movwf	(?_rotate)
  2167  0F39  3000               	movlw	high(01h)
  2168  0F3A  00A4               	movwf	((?_rotate))+1
  2169  0F3B  01A5               	clrf	0+(?_rotate)+02h
  2170  0F3C  1403               	bsf	status,0
  2171  0F3D  0DA5               	rlf	0+(?_rotate)+02h,f
  2172  0F3E  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2173                           	line	220
  2174                           	
  2175  0F43                     l10922:	
  2176                           ;Main.c: 220: UpdateDisplay();
  2177  0F43  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2178                           	line	221
  2179                           	
  2180  0F48                     l10924:	
  2181                           ;Main.c: 221: test = lowestSteps;
  2182  0F48  1283               	bcf	status, 5	;RP0=0, select bank0
  2183  0F49  1303               	bcf	status, 6	;RP1=0, select bank0
  2184  0F4A  085F               	movf	(scan360@lowestSteps+1),w
  2185  0F4B  1683               	bsf	status, 5	;RP0=1, select bank1
  2186  0F4C  1303               	bcf	status, 6	;RP1=0, select bank1
  2187  0F4D  01C9               	clrf	(_test+1)^080h
  2188  0F4E  07C9               	addwf	(_test+1)^080h
  2189  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  2190  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  2191  0F51  085E               	movf	(scan360@lowestSteps),w
  2192  0F52  1683               	bsf	status, 5	;RP0=1, select bank1
  2193  0F53  1303               	bcf	status, 6	;RP1=0, select bank1
  2194  0F54  01C8               	clrf	(_test)^080h
  2195  0F55  07C8               	addwf	(_test)^080h
  2196                           
  2197                           	line	210
  2198                           	
  2199  0F56                     l10926:	
  2200  0F56  3001               	movlw	low(01h)
  2201  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  2202  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  2203  0F59  07E0               	addwf	(scan360@steps),f
  2204  0F5A  1803               	skipnc
  2205  0F5B  0AE1               	incf	(scan360@steps+1),f
  2206  0F5C  3000               	movlw	high(01h)
  2207  0F5D  07E1               	addwf	(scan360@steps+1),f
  2208                           	
  2209  0F5E                     l10928:	
  2210  0F5E  0861               	movf	(scan360@steps+1),w
  2211  0F5F  3A80               	xorlw	80h
  2212  0F60  00FF               	movwf	btemp+1
  2213  0F61  3081               	movlw	(high(0190h))^80h
  2214  0F62  027F               	subwf	btemp+1,w
  2215  0F63  1D03               	skipz
  2216  0F64  2F67               	goto	u4535
  2217  0F65  3090               	movlw	low(0190h)
  2218  0F66  0260               	subwf	(scan360@steps),w
  2219  0F67                     u4535:
  2220                           
  2221  0F67  1C03               	skipc
  2222  0F68  2F6A               	goto	u4531
  2223  0F69  2F6B               	goto	u4530
  2224  0F6A                     u4531:
  2225  0F6A  2F19               	goto	l10914
  2226  0F6B                     u4530:
  2227                           	
  2228  0F6B                     l2232:	
  2229                           	line	223
  2230                           ;Main.c: 222: }
  2231                           ;Main.c: 223: SCAN_FLAG = 0;
  2232  0F6B  1683               	bsf	status, 5	;RP0=1, select bank1
  2233  0F6C  1303               	bcf	status, 6	;RP1=0, select bank1
  2234  0F6D  01D2               	clrf	(_SCAN_FLAG)^080h
  2235                           	line	224
  2236                           	
  2237  0F6E                     l10930:	
  2238                           ;Main.c: 224: return lowestSteps;
  2239  0F6E  1283               	bcf	status, 5	;RP0=0, select bank0
  2240  0F6F  1303               	bcf	status, 6	;RP1=0, select bank0
  2241  0F70  085F               	movf	(scan360@lowestSteps+1),w
  2242  0F71  01DB               	clrf	(?_scan360+1)
  2243  0F72  07DB               	addwf	(?_scan360+1)
  2244  0F73  085E               	movf	(scan360@lowestSteps),w
  2245  0F74  01DA               	clrf	(?_scan360)
  2246  0F75  07DA               	addwf	(?_scan360)
  2247                           
  2248  0F76  2F77               	goto	l2234
  2249                           	
  2250  0F77                     l10932:	
  2251                           	line	225
  2252                           	
  2253  0F77                     l2234:	
  2254  0F77  0008               	return
  2255                           	opt stack 0
  2256                           GLOBAL	__end_of_scan360
  2257  0F78                     	__end_of_scan360:
  2258 ;; =============== function _scan360 ends ============
  2259                           
  2260                           	signat	_scan360,90
  2261                           	global	_calibrateIR
  2262                           psect	text883,local,class=CODE,delta=2
  2263                           global __ptext883
  2264  0E96                     __ptext883:
  2265                           
  2266 ;; *************** function _calibrateIR *****************
  2267 ;; Defined at:
  2268 ;;		line 155 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;		None               void
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    6
  2289 ;; This function calls:
  2290 ;;		_rotate
  2291 ;;		_UpdateDisplay
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           psect	text883
  2297                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2298                           	line	155
  2299                           	global	__size_of_calibrateIR
  2300  0065                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2301                           	
  2302  0E96                     _calibrateIR:	
  2303                           	opt	stack 1
  2304                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2305                           	line	157
  2306                           	
  2307  0E96                     l10872:	
  2308                           ;Main.c: 157: currentMenu = 1;
  2309  0E96  1683               	bsf	status, 5	;RP0=1, select bank1
  2310  0E97  1303               	bcf	status, 6	;RP1=0, select bank1
  2311  0E98  01D4               	clrf	(_currentMenu)^080h
  2312  0E99  1403               	bsf	status,0
  2313  0E9A  0DD4               	rlf	(_currentMenu)^080h,f
  2314                           	line	158
  2315                           	
  2316  0E9B                     l10874:	
  2317                           ;Main.c: 158: rotate(8, 0);
  2318  0E9B  3008               	movlw	low(08h)
  2319  0E9C  1283               	bcf	status, 5	;RP0=0, select bank0
  2320  0E9D  1303               	bcf	status, 6	;RP1=0, select bank0
  2321  0E9E  00A3               	movwf	(?_rotate)
  2322  0E9F  3000               	movlw	high(08h)
  2323  0EA0  00A4               	movwf	((?_rotate))+1
  2324  0EA1  01A5               	clrf	0+(?_rotate)+02h
  2325  0EA2  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2326  0EA7  2EA8               	goto	l10876
  2327                           	line	159
  2328                           ;Main.c: 159: while (1)
  2329                           	
  2330  0EA8                     l2216:	
  2331                           	line	161
  2332                           	
  2333  0EA8                     l10876:	
  2334                           ;Main.c: 160: {
  2335                           ;Main.c: 161: if (RTC_FLAG_250MS == 1)
  2336  0EA8  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2337  0EA9  2EAB               	goto	u4501
  2338  0EAA  2EAC               	goto	u4500
  2339  0EAB                     u4501:
  2340  0EAB  2EE5               	goto	l10902
  2341  0EAC                     u4500:
  2342                           	line	163
  2343                           	
  2344  0EAC                     l10878:	
  2345                           ;Main.c: 162: {
  2346                           ;Main.c: 163: RTC_FLAG_250MS = 0;
  2347  0EAC  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2348                           	line	164
  2349                           	
  2350  0EAD                     l10880:	
  2351                           ;Main.c: 164: UpdateDisplay();
  2352  0EAD  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2353  0EB2  2EE5               	goto	l10902
  2354                           	line	165
  2355                           	
  2356  0EB3                     l2217:	
  2357                           	line	166
  2358                           ;Main.c: 165: }
  2359                           ;Main.c: 166: switch (buttonPressed)
  2360  0EB3  2EE5               	goto	l10902
  2361                           	line	168
  2362                           ;Main.c: 167: {
  2363                           ;Main.c: 168: case 1:
  2364                           	
  2365  0EB4                     l2219:	
  2366                           	line	171
  2367                           ;Main.c: 171: buttonPressed = 0;
  2368  0EB4  01EC               	clrf	(_buttonPressed)	;volatile
  2369                           	line	173
  2370                           ;Main.c: 173: break;
  2371  0EB5  2EA8               	goto	l10876
  2372                           	line	174
  2373                           ;Main.c: 174: case 2:
  2374                           	
  2375  0EB6                     l2221:	
  2376                           	line	177
  2377                           ;Main.c: 177: buttonPressed = 0;
  2378  0EB6  01EC               	clrf	(_buttonPressed)	;volatile
  2379                           	line	179
  2380                           ;Main.c: 179: break;
  2381  0EB7  2EA8               	goto	l10876
  2382                           	line	180
  2383                           ;Main.c: 180: case 3:
  2384                           	
  2385  0EB8                     l2222:	
  2386                           	line	181
  2387                           	
  2388  0EB8                     l10882:	
  2389                           ;Main.c: 181: rotate(1, 1);
  2390  0EB8  3001               	movlw	low(01h)
  2391  0EB9  00A3               	movwf	(?_rotate)
  2392  0EBA  3000               	movlw	high(01h)
  2393  0EBB  00A4               	movwf	((?_rotate))+1
  2394  0EBC  01A5               	clrf	0+(?_rotate)+02h
  2395  0EBD  1403               	bsf	status,0
  2396  0EBE  0DA5               	rlf	0+(?_rotate)+02h,f
  2397  0EBF  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2398                           	line	183
  2399                           	
  2400  0EC4                     l10884:	
  2401                           ;Main.c: 183: buttonPressed = 0;
  2402  0EC4  1283               	bcf	status, 5	;RP0=0, select bank0
  2403  0EC5  1303               	bcf	status, 6	;RP1=0, select bank0
  2404  0EC6  01EC               	clrf	(_buttonPressed)	;volatile
  2405                           	line	185
  2406                           ;Main.c: 185: break;
  2407  0EC7  2EA8               	goto	l10876
  2408                           	line	186
  2409                           ;Main.c: 186: case 4:
  2410                           	
  2411  0EC8                     l2223:	
  2412                           	line	187
  2413                           	
  2414  0EC8                     l10886:	
  2415                           ;Main.c: 187: rotate(1, 0);
  2416  0EC8  3001               	movlw	low(01h)
  2417  0EC9  00A3               	movwf	(?_rotate)
  2418  0ECA  3000               	movlw	high(01h)
  2419  0ECB  00A4               	movwf	((?_rotate))+1
  2420  0ECC  01A5               	clrf	0+(?_rotate)+02h
  2421  0ECD  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2422                           	line	189
  2423                           	
  2424  0ED2                     l10888:	
  2425                           ;Main.c: 189: buttonPressed = 0;
  2426  0ED2  1283               	bcf	status, 5	;RP0=0, select bank0
  2427  0ED3  1303               	bcf	status, 6	;RP1=0, select bank0
  2428  0ED4  01EC               	clrf	(_buttonPressed)	;volatile
  2429                           	line	191
  2430                           ;Main.c: 191: break;
  2431  0ED5  2EA8               	goto	l10876
  2432                           	line	192
  2433                           ;Main.c: 192: case 5:
  2434                           	
  2435  0ED6                     l2224:	
  2436                           	line	193
  2437                           	
  2438  0ED6                     l10890:	
  2439                           ;Main.c: 193: totalSteps = 0;
  2440  0ED6  1683               	bsf	status, 5	;RP0=1, select bank1
  2441  0ED7  1303               	bcf	status, 6	;RP1=0, select bank1
  2442  0ED8  01CC               	clrf	(_totalSteps)^080h
  2443  0ED9  01CD               	clrf	(_totalSteps+1)^080h
  2444                           	line	195
  2445                           	
  2446  0EDA                     l10892:	
  2447                           ;Main.c: 195: buttonPressed = 0;
  2448  0EDA  1283               	bcf	status, 5	;RP0=0, select bank0
  2449  0EDB  1303               	bcf	status, 6	;RP1=0, select bank0
  2450  0EDC  01EC               	clrf	(_buttonPressed)	;volatile
  2451                           	line	196
  2452                           	
  2453  0EDD                     l10894:	
  2454                           ;Main.c: 196: currentMenu = 0;
  2455  0EDD  1683               	bsf	status, 5	;RP0=1, select bank1
  2456  0EDE  1303               	bcf	status, 6	;RP1=0, select bank1
  2457  0EDF  01D4               	clrf	(_currentMenu)^080h
  2458  0EE0  2EFA               	goto	l2225
  2459                           	line	197
  2460                           	
  2461  0EE1                     l10896:	
  2462                           ;Main.c: 197: return;
  2463  0EE1  2EFA               	goto	l2225
  2464                           	line	198
  2465                           	
  2466  0EE2                     l10898:	
  2467                           ;Main.c: 198: break;
  2468  0EE2  2EA8               	goto	l10876
  2469                           	line	199
  2470                           ;Main.c: 199: default:
  2471                           	
  2472  0EE3                     l2226:	
  2473                           	line	201
  2474                           ;Main.c: 201: break;
  2475  0EE3  2EA8               	goto	l10876
  2476                           	line	202
  2477                           	
  2478  0EE4                     l10900:	
  2479                           ;Main.c: 202: }
  2480  0EE4  2EA8               	goto	l10876
  2481                           	line	166
  2482                           	
  2483  0EE5                     l2218:	
  2484                           	
  2485  0EE5                     l10902:	
  2486  0EE5  1283               	bcf	status, 5	;RP0=0, select bank0
  2487  0EE6  1303               	bcf	status, 6	;RP1=0, select bank0
  2488  0EE7  086C               	movf	(_buttonPressed),w	;volatile
  2489                           	; Switch size 1, requested type "space"
  2490                           ; Number of cases is 5, Range of values is 1 to 5
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           16     9 (average)
  2494                           ; direct_byte           26    11 (fixed)
  2495                           ; jumptable            263     9 (fixed)
  2496                           ;	Chosen strategy is simple_byte
  2497                           
  2498                           	opt asmopt_off
  2499  0EE8  3A01               	xorlw	1^0	; case 1
  2500  0EE9  1903               	skipnz
  2501  0EEA  2EB4               	goto	l2219
  2502  0EEB  3A03               	xorlw	2^1	; case 2
  2503  0EEC  1903               	skipnz
  2504  0EED  2EB6               	goto	l2221
  2505  0EEE  3A01               	xorlw	3^2	; case 3
  2506  0EEF  1903               	skipnz
  2507  0EF0  2EB8               	goto	l10882
  2508  0EF1  3A07               	xorlw	4^3	; case 4
  2509  0EF2  1903               	skipnz
  2510  0EF3  2EC8               	goto	l10886
  2511  0EF4  3A01               	xorlw	5^4	; case 5
  2512  0EF5  1903               	skipnz
  2513  0EF6  2ED6               	goto	l10890
  2514  0EF7  2EA8               	goto	l10876
  2515                           	opt asmopt_on
  2516                           
  2517                           	line	202
  2518                           	
  2519  0EF8                     l2220:	
  2520  0EF8  2EA8               	goto	l10876
  2521                           	line	203
  2522                           	
  2523  0EF9                     l2227:	
  2524                           	line	159
  2525  0EF9  2EA8               	goto	l10876
  2526                           	
  2527  0EFA                     l2228:	
  2528                           	line	204
  2529                           	
  2530  0EFA                     l2225:	
  2531  0EFA  0008               	return
  2532                           	opt stack 0
  2533                           GLOBAL	__end_of_calibrateIR
  2534  0EFB                     	__end_of_calibrateIR:
  2535 ;; =============== function _calibrateIR ends ============
  2536                           
  2537                           	signat	_calibrateIR,88
  2538                           	global	_readAvgDistance
  2539                           psect	text884,local,class=CODE,delta=2
  2540                           global __ptext884
  2541  0E41                     __ptext884:
  2542                           
  2543 ;; *************** function _readAvgDistance *****************
  2544 ;; Defined at:
  2545 ;;		line 10 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  i               2   18[BANK0 ] int 
  2550 ;;  fullval         2   16[BANK0 ] unsigned int 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       0       0       0       0
  2561 ;;      Locals:         0       4       0       0       0
  2562 ;;      Temps:          0       0       0       0       0
  2563 ;;      Totals:         0       4       0       0       0
  2564 ;;Total ram usage:        4 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    6
  2567 ;; This function calls:
  2568 ;;		_readDistance
  2569 ;;		___lwdiv
  2570 ;;		_ADCconvert
  2571 ;; This function is called by:
  2572 ;;		_scan360
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           psect	text884
  2577                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  2578                           	line	10
  2579                           	global	__size_of_readAvgDistance
  2580  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2581                           	
  2582  0E41                     _readAvgDistance:	
  2583                           	opt	stack 0
  2584                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2585                           	line	11
  2586                           	
  2587  0E41                     l10858:	
  2588                           ;infrared.c: 11: unsigned int fullval = 0;
  2589  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  2590  0E42  1303               	bcf	status, 6	;RP1=0, select bank0
  2591  0E43  01B0               	clrf	(readAvgDistance@fullval)
  2592  0E44  01B1               	clrf	(readAvgDistance@fullval+1)
  2593                           	line	14
  2594                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2595  0E45  01B2               	clrf	(readAvgDistance@i)
  2596  0E46  01B3               	clrf	(readAvgDistance@i+1)
  2597                           	
  2598  0E47                     l10860:	
  2599  0E47  0833               	movf	(readAvgDistance@i+1),w
  2600  0E48  3A80               	xorlw	80h
  2601  0E49  00FF               	movwf	btemp+1
  2602  0E4A  3080               	movlw	(high(0Ah))^80h
  2603  0E4B  027F               	subwf	btemp+1,w
  2604  0E4C  1D03               	skipz
  2605  0E4D  2E50               	goto	u4485
  2606  0E4E  300A               	movlw	low(0Ah)
  2607  0E4F  0232               	subwf	(readAvgDistance@i),w
  2608  0E50                     u4485:
  2609                           
  2610  0E50  1C03               	skipc
  2611  0E51  2E53               	goto	u4481
  2612  0E52  2E54               	goto	u4480
  2613  0E53                     u4481:
  2614  0E53  2E56               	goto	l10864
  2615  0E54                     u4480:
  2616  0E54  2E77               	goto	l10870
  2617                           	
  2618  0E55                     l10862:	
  2619  0E55  2E77               	goto	l10870
  2620                           	line	15
  2621                           	
  2622  0E56                     l2960:	
  2623                           	line	16
  2624                           	
  2625  0E56                     l10864:	
  2626                           ;infrared.c: 15: {
  2627                           ;infrared.c: 16: fullval += readDistance();
  2628  0E56  120A  158A  22B0   	fcall	_readDistance
              120A  158A         
  2629  0E5B  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  0E5C  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  0E5D  0828               	movf	(0+(?_readDistance)),w
  2632  0E5E  07B0               	addwf	(readAvgDistance@fullval),f
  2633  0E5F  1803               	skipnc
  2634  0E60  0AB1               	incf	(readAvgDistance@fullval+1),f
  2635  0E61  0829               	movf	(1+(?_readDistance)),w
  2636  0E62  07B1               	addwf	(readAvgDistance@fullval+1),f
  2637                           	line	14
  2638                           	
  2639  0E63                     l10866:	
  2640  0E63  3001               	movlw	low(01h)
  2641  0E64  07B2               	addwf	(readAvgDistance@i),f
  2642  0E65  1803               	skipnc
  2643  0E66  0AB3               	incf	(readAvgDistance@i+1),f
  2644  0E67  3000               	movlw	high(01h)
  2645  0E68  07B3               	addwf	(readAvgDistance@i+1),f
  2646                           	
  2647  0E69                     l10868:	
  2648  0E69  0833               	movf	(readAvgDistance@i+1),w
  2649  0E6A  3A80               	xorlw	80h
  2650  0E6B  00FF               	movwf	btemp+1
  2651  0E6C  3080               	movlw	(high(0Ah))^80h
  2652  0E6D  027F               	subwf	btemp+1,w
  2653  0E6E  1D03               	skipz
  2654  0E6F  2E72               	goto	u4495
  2655  0E70  300A               	movlw	low(0Ah)
  2656  0E71  0232               	subwf	(readAvgDistance@i),w
  2657  0E72                     u4495:
  2658                           
  2659  0E72  1C03               	skipc
  2660  0E73  2E75               	goto	u4491
  2661  0E74  2E76               	goto	u4490
  2662  0E75                     u4491:
  2663  0E75  2E56               	goto	l10864
  2664  0E76                     u4490:
  2665  0E76  2E77               	goto	l10870
  2666                           	
  2667  0E77                     l2961:	
  2668                           	line	19
  2669                           	
  2670  0E77                     l10870:	
  2671                           ;infrared.c: 18: }
  2672                           ;infrared.c: 19: adcVal = fullval / 10;
  2673  0E77  300A               	movlw	low(0Ah)
  2674  0E78  1283               	bcf	status, 5	;RP0=0, select bank0
  2675  0E79  1303               	bcf	status, 6	;RP1=0, select bank0
  2676  0E7A  00A6               	movwf	(?___lwdiv)
  2677  0E7B  3000               	movlw	high(0Ah)
  2678  0E7C  00A7               	movwf	((?___lwdiv))+1
  2679  0E7D  0831               	movf	(readAvgDistance@fullval+1),w
  2680  0E7E  01A9               	clrf	1+(?___lwdiv)+02h
  2681  0E7F  07A9               	addwf	1+(?___lwdiv)+02h
  2682  0E80  0830               	movf	(readAvgDistance@fullval),w
  2683  0E81  01A8               	clrf	0+(?___lwdiv)+02h
  2684  0E82  07A8               	addwf	0+(?___lwdiv)+02h
  2685                           
  2686  0E83  120A  158A  25A1   	fcall	___lwdiv
              120A  158A         
  2687  0E88  1283               	bcf	status, 5	;RP0=0, select bank0
  2688  0E89  1303               	bcf	status, 6	;RP1=0, select bank0
  2689  0E8A  0827               	movf	(1+(?___lwdiv)),w
  2690  0E8B  01EB               	clrf	(_adcVal+1)	;volatile
  2691  0E8C  07EB               	addwf	(_adcVal+1)	;volatile
  2692  0E8D  0826               	movf	(0+(?___lwdiv)),w
  2693  0E8E  01EA               	clrf	(_adcVal)	;volatile
  2694  0E8F  07EA               	addwf	(_adcVal)	;volatile
  2695                           
  2696                           	line	20
  2697                           ;infrared.c: 20: ADCconvert();
  2698  0E90  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  2699                           	line	21
  2700                           	
  2701  0E95                     l2962:	
  2702  0E95  0008               	return
  2703                           	opt stack 0
  2704                           GLOBAL	__end_of_readAvgDistance
  2705  0E96                     	__end_of_readAvgDistance:
  2706 ;; =============== function _readAvgDistance ends ============
  2707                           
  2708                           	signat	_readAvgDistance,88
  2709                           	global	_UpdateDisplay
  2710                           psect	text885,local,class=CODE,delta=2
  2711                           global __ptext885
  2712  0238                     __ptext885:
  2713                           
  2714 ;; *************** function _UpdateDisplay *****************
  2715 ;; Defined at:
  2716 ;;		line 215 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  adcOutput      16   42[BANK0 ] unsigned char [16]
  2721 ;; Return value:  Size  Location     Type
  2722 ;;		None               void
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       0       0       0       0
  2731 ;;      Locals:         0      16       0       0       0
  2732 ;;      Temps:          0       5       0       0       0
  2733 ;;      Totals:         0      21       0       0       0
  2734 ;;Total ram usage:       21 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    5
  2737 ;; This function calls:
  2738 ;;		_lcd_write_control
  2739 ;;		_sprintf
  2740 ;;		_lcd_set_cursor
  2741 ;;		_lcd_write_string
  2742 ;;		___awmod
  2743 ;; This function is called by:
  2744 ;;		_calibrateIR
  2745 ;;		_scan360
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           psect	text885
  2750                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  2751                           	line	215
  2752                           	global	__size_of_UpdateDisplay
  2753  014D                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  2754                           	
  2755  0238                     _UpdateDisplay:	
  2756                           	opt	stack 1
  2757                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2758                           	line	216
  2759                           	
  2760  0238                     l10818:	
  2761                           ;HMI.c: 216: char adcOutput[16] = "";
  2762  0238  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2763  0239  0084               	movwf	fsr0
  2764  023A  3090               	movlw	low(UpdateDisplay@F1228)
  2765  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  2766  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  2767  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  2768  023E  0804               	movf	fsr0,w
  2769  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  2770  0240  3010               	movlw	16
  2771  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  2772  0242                     u4460:
  2773  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  2774  0243  0084               	movwf	fsr0
  2775  0244  1783               	bsf	status, 7	;select IRP bank3
  2776                           	
  2777  0245  0800               	movf	indf,w
  2778  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  2779  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  2780  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  2781  0249  0084               	movwf	fsr0
  2782  024A  1383               	bcf	status, 7	;select IRP bank0
  2783                           	
  2784  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  2785  024C  0080               	movwf	indf
  2786  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  2787  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  2788  024F  2A42               	goto	u4460
  2789                           	line	217
  2790                           ;HMI.c: 217: switch (currentMenu)
  2791  0250  2B7A               	goto	l10856
  2792                           	line	220
  2793                           ;HMI.c: 218: {
  2794                           ;HMI.c: 220: case 0:
  2795                           	
  2796  0251                     l5247:	
  2797                           	line	223
  2798                           	
  2799  0251                     l10820:	
  2800                           ;HMI.c: 223: lcd_write_control(0b00000001);
  2801  0251  3001               	movlw	(01h)
  2802  0252  120A  158A  2286   	fcall	_lcd_write_control
              120A  118A         
  2803                           	line	225
  2804                           	
  2805  0257                     l10822:	
  2806                           ;HMI.c: 225: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distTravelled);
  2807  0257  300B               	movlw	((STR_11-__stringbase))&0ffh
  2808  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  2809  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  2810  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  2811  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  2812  025C  00B4               	movwf	(?_sprintf)
  2813  025D  086B               	movf	(_adcVal+1),w	;volatile
  2814  025E  01B6               	clrf	1+(?_sprintf)+01h
  2815  025F  07B6               	addwf	1+(?_sprintf)+01h
  2816  0260  086A               	movf	(_adcVal),w	;volatile
  2817  0261  01B5               	clrf	0+(?_sprintf)+01h
  2818  0262  07B5               	addwf	0+(?_sprintf)+01h
  2819                           
  2820  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  2821  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  2822  0265  0867               	movf	(_distTravelled+1)^080h,w
  2823  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  2824  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  2825  0268  01B8               	clrf	1+(?_sprintf)+03h
  2826  0269  07B8               	addwf	1+(?_sprintf)+03h
  2827  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  2828  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  2829  026C  0866               	movf	(_distTravelled)^080h,w
  2830  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  2831  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  2832  026F  01B7               	clrf	0+(?_sprintf)+03h
  2833  0270  07B7               	addwf	0+(?_sprintf)+03h
  2834                           
  2835  0271  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2836  0272  120A  118A  2491   	fcall	_sprintf
              120A  118A         
  2837                           	line	228
  2838                           	
  2839  0277                     l10824:	
  2840                           ;HMI.c: 228: lcd_set_cursor(0x00);
  2841  0277  3000               	movlw	(0)
  2842  0278  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  2843                           	line	229
  2844                           ;HMI.c: 229: lcd_write_string(adcOutput);
  2845  027D  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  2846  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  2847  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  2848  0280  00A7               	movwf	(?_lcd_write_string)
  2849  0281  3000               	movlw	(0x0/2)
  2850  0282  00A8               	movwf	(?_lcd_write_string+1)
  2851  0283  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  2852                           	line	231
  2853                           	
  2854  0288                     l10826:	
  2855                           ;HMI.c: 231: lcd_set_cursor(0x40);
  2856  0288  3040               	movlw	(040h)
  2857  0289  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  2858                           	line	232
  2859                           	
  2860  028E                     l10828:	
  2861                           ;HMI.c: 232: if (pos > 0)
  2862  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  2863  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  2864  0290  0847               	movf	(_pos+1)^080h,w
  2865  0291  3A80               	xorlw	80h
  2866  0292  00FF               	movwf	btemp+1
  2867  0293  3080               	movlw	(high(01h))^80h
  2868  0294  027F               	subwf	btemp+1,w
  2869  0295  1D03               	skipz
  2870  0296  2A99               	goto	u4475
  2871  0297  3001               	movlw	low(01h)
  2872  0298  0246               	subwf	(_pos)^080h,w
  2873  0299                     u4475:
  2874                           
  2875  0299  1C03               	skipc
  2876  029A  2A9C               	goto	u4471
  2877  029B  2A9D               	goto	u4470
  2878  029C                     u4471:
  2879  029C  2AB0               	goto	l10832
  2880  029D                     u4470:
  2881                           	line	233
  2882                           	
  2883  029D                     l10830:	
  2884                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  2885  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  2886  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  2887  029F  0846               	movf	(_pos)^080h,w
  2888  02A0  3EFF               	addlw	0FFh
  2889  02A1  3EE1               	addlw	_shortMenuStrings&0ffh
  2890  02A2  0084               	movwf	fsr0
  2891  02A3  1383               	bcf	status, 7	;select IRP bank1
  2892  02A4  0800               	movf	indf,w
  2893  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2894  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2895  02A7  00A7               	movwf	(?_lcd_write_string)
  2896  02A8  3080               	movlw	80h
  2897  02A9  00A8               	movwf	(?_lcd_write_string+1)
  2898  02AA  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  2899  02AF  2AC3               	goto	l10834
  2900                           	line	234
  2901                           	
  2902  02B0                     l5248:	
  2903                           	line	235
  2904                           	
  2905  02B0                     l10832:	
  2906                           ;HMI.c: 234: else
  2907                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  2908  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  2909  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  2910  02B2  0846               	movf	(_pos)^080h,w
  2911  02B3  3E04               	addlw	04h
  2912  02B4  3EE1               	addlw	_shortMenuStrings&0ffh
  2913  02B5  0084               	movwf	fsr0
  2914  02B6  1383               	bcf	status, 7	;select IRP bank1
  2915  02B7  0800               	movf	indf,w
  2916  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2917  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2918  02BA  00A7               	movwf	(?_lcd_write_string)
  2919  02BB  3080               	movlw	80h
  2920  02BC  00A8               	movwf	(?_lcd_write_string+1)
  2921  02BD  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  2922  02C2  2AC3               	goto	l10834
  2923                           	
  2924  02C3                     l5249:	
  2925                           	line	236
  2926                           	
  2927  02C3                     l10834:	
  2928                           ;HMI.c: 236: lcd_set_cursor(0x44);
  2929  02C3  3044               	movlw	(044h)
  2930  02C4  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  2931                           	line	237
  2932                           	
  2933  02C9                     l10836:	
  2934                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  2935  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  2936  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  2937  02CB  0846               	movf	(_pos)^080h,w
  2938  02CC  3EDC               	addlw	_menuStrings&0ffh
  2939  02CD  0084               	movwf	fsr0
  2940  02CE  1383               	bcf	status, 7	;select IRP bank1
  2941  02CF  0800               	movf	indf,w
  2942  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  02D2  00A7               	movwf	(?_lcd_write_string)
  2945  02D3  3080               	movlw	80h
  2946  02D4  00A8               	movwf	(?_lcd_write_string+1)
  2947  02D5  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  2948                           	line	238
  2949                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  2950  02DA  304D               	movlw	(04Dh)
  2951  02DB  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  2952                           	line	239
  2953                           	
  2954  02E0                     l10838:	
  2955                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  2956  02E0  3005               	movlw	low(05h)
  2957  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2958  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2959  02E3  00A0               	movwf	(?___awmod)
  2960  02E4  3000               	movlw	high(05h)
  2961  02E5  00A1               	movwf	((?___awmod))+1
  2962  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2963  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2964  02E8  0846               	movf	(_pos)^080h,w
  2965  02E9  3E01               	addlw	low(01h)
  2966  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2967  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2968  02EC  00A2               	movwf	0+(?___awmod)+02h
  2969  02ED  1683               	bsf	status, 5	;RP0=1, select bank1
  2970  02EE  1303               	bcf	status, 6	;RP1=0, select bank1
  2971  02EF  0847               	movf	(_pos+1)^080h,w
  2972  02F0  1803               	skipnc
  2973  02F1  3E01               	addlw	1
  2974  02F2  3E00               	addlw	high(01h)
  2975  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2976  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2977  02F5  00A3               	movwf	1+0+(?___awmod)+02h
  2978  02F6  120A  118A  2791   	fcall	___awmod
              120A  118A         
  2979  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2980  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2981  02FD  0820               	movf	(0+(?___awmod)),w
  2982  02FE  3EE1               	addlw	_shortMenuStrings&0ffh
  2983  02FF  0084               	movwf	fsr0
  2984  0300  1383               	bcf	status, 7	;select IRP bank1
  2985  0301  0800               	movf	indf,w
  2986  0302  00A7               	movwf	(?_lcd_write_string)
  2987  0303  3080               	movlw	80h
  2988  0304  00A8               	movwf	(?_lcd_write_string+1)
  2989  0305  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  2990                           	line	240
  2991                           ;HMI.c: 240: break;
  2992  030A  2B84               	goto	l5253
  2993                           	line	241
  2994                           ;HMI.c: 241: case 1:
  2995                           	
  2996  030B                     l5251:	
  2997                           	line	242
  2998                           	
  2999  030B                     l10840:	
  3000                           ;HMI.c: 242: lcd_write_control(0b00000001);
  3001  030B  3001               	movlw	(01h)
  3002  030C  120A  158A  2286   	fcall	_lcd_write_control
              120A  118A         
  3003                           	line	244
  3004                           	
  3005  0311                     l10842:	
  3006                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3007  0311  300B               	movlw	((STR_12-__stringbase))&0ffh
  3008  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  3009  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  3010  0314  00C5               	movwf	(??_UpdateDisplay+0)+0
  3011  0315  0845               	movf	(??_UpdateDisplay+0)+0,w
  3012  0316  00B4               	movwf	(?_sprintf)
  3013  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  3014  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  3015  0319  0856               	movf	(_highByte)^080h,w
  3016  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  3017  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  3018  031C  00C6               	movwf	(??_UpdateDisplay+1)+0
  3019  031D  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3020  031E  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3021  031F  00B5               	movwf	0+(?_sprintf)+01h
  3022  0320  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3023  0321  00B6               	movwf	1+(?_sprintf)+01h
  3024  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3025  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3026  0324  0857               	movf	(_lowByte)^080h,w
  3027  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  3028  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  3029  0327  00C8               	movwf	(??_UpdateDisplay+3)+0
  3030  0328  01C9               	clrf	(??_UpdateDisplay+3)+0+1
  3031  0329  0848               	movf	0+(??_UpdateDisplay+3)+0,w
  3032  032A  00B7               	movwf	0+(?_sprintf)+03h
  3033  032B  0849               	movf	1+(??_UpdateDisplay+3)+0,w
  3034  032C  00B8               	movwf	1+(?_sprintf)+03h
  3035  032D  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3036  032E  120A  118A  2491   	fcall	_sprintf
              120A  118A         
  3037                           	line	246
  3038                           	
  3039  0333                     l10844:	
  3040                           ;HMI.c: 246: lcd_set_cursor(0x00);
  3041  0333  3000               	movlw	(0)
  3042  0334  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  3043                           	line	247
  3044                           ;HMI.c: 247: lcd_write_string(adcOutput);
  3045  0339  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3046  033A  1283               	bcf	status, 5	;RP0=0, select bank0
  3047  033B  1303               	bcf	status, 6	;RP1=0, select bank0
  3048  033C  00A7               	movwf	(?_lcd_write_string)
  3049  033D  3000               	movlw	(0x0/2)
  3050  033E  00A8               	movwf	(?_lcd_write_string+1)
  3051  033F  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  3052                           	line	252
  3053                           	
  3054  0344                     l10846:	
  3055                           ;HMI.c: 252: lcd_set_cursor(0x40);
  3056  0344  3040               	movlw	(040h)
  3057  0345  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  3058                           	line	254
  3059                           	
  3060  034A                     l10848:	
  3061                           ;HMI.c: 254: lcd_write_string("<<<");
  3062  034A  3052               	movlw	low((STR_13-__stringbase))
  3063  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3064  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3065  034D  00A7               	movwf	(?_lcd_write_string)
  3066  034E  3080               	movlw	80h
  3067  034F  00A8               	movwf	(?_lcd_write_string+1)
  3068  0350  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  3069                           	line	257
  3070                           ;HMI.c: 257: lcd_set_cursor(0x44);
  3071  0355  3044               	movlw	(044h)
  3072  0356  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  3073                           	line	258
  3074                           	
  3075  035B                     l10850:	
  3076                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  3077  035B  3046               	movlw	low((STR_14-__stringbase))
  3078  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3079  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3080  035E  00A7               	movwf	(?_lcd_write_string)
  3081  035F  3080               	movlw	80h
  3082  0360  00A8               	movwf	(?_lcd_write_string+1)
  3083  0361  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  3084                           	line	259
  3085                           	
  3086  0366                     l10852:	
  3087                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  3088  0366  304D               	movlw	(04Dh)
  3089  0367  120A  158A  2215   	fcall	_lcd_set_cursor
              120A  118A         
  3090                           	line	260
  3091                           ;HMI.c: 260: lcd_write_string(">>>");
  3092  036C  3056               	movlw	low((STR_15-__stringbase))
  3093  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  3094  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  3095  036F  00A7               	movwf	(?_lcd_write_string)
  3096  0370  3080               	movlw	80h
  3097  0371  00A8               	movwf	(?_lcd_write_string+1)
  3098  0372  120A  158A  240A   	fcall	_lcd_write_string
              120A  118A         
  3099                           	line	261
  3100                           ;HMI.c: 261: break;
  3101  0377  2B84               	goto	l5253
  3102                           	line	263
  3103                           ;HMI.c: 263: default:
  3104                           	
  3105  0378                     l5252:	
  3106                           	line	265
  3107                           ;HMI.c: 265: break;
  3108  0378  2B84               	goto	l5253
  3109                           	line	268
  3110                           	
  3111  0379                     l10854:	
  3112                           ;HMI.c: 268: }
  3113  0379  2B84               	goto	l5253
  3114                           	line	217
  3115                           	
  3116  037A                     l5246:	
  3117                           	
  3118  037A                     l10856:	
  3119  037A  1683               	bsf	status, 5	;RP0=1, select bank1
  3120  037B  1303               	bcf	status, 6	;RP1=0, select bank1
  3121  037C  0854               	movf	(_currentMenu)^080h,w
  3122                           	; Switch size 1, requested type "space"
  3123                           ; Number of cases is 2, Range of values is 0 to 1
  3124                           ; switch strategies available:
  3125                           ; Name         Instructions Cycles
  3126                           ; simple_byte            7     4 (average)
  3127                           ; direct_byte           14     8 (fixed)
  3128                           ; jumptable            260     6 (fixed)
  3129                           ; rangetable             6     6 (fixed)
  3130                           ; spacedrange           10     9 (fixed)
  3131                           ; locatedrange           2     3 (fixed)
  3132                           ;	Chosen strategy is simple_byte
  3133                           
  3134                           	opt asmopt_off
  3135  037D  3A00               	xorlw	0^0	; case 0
  3136  037E  1903               	skipnz
  3137  037F  2A51               	goto	l10820
  3138  0380  3A01               	xorlw	1^0	; case 1
  3139  0381  1903               	skipnz
  3140  0382  2B0B               	goto	l10840
  3141  0383  2B84               	goto	l5253
  3142                           	opt asmopt_on
  3143                           
  3144                           	line	268
  3145                           	
  3146  0384                     l5250:	
  3147                           	line	269
  3148                           	
  3149  0384                     l5253:	
  3150  0384  0008               	return
  3151                           	opt stack 0
  3152                           GLOBAL	__end_of_UpdateDisplay
  3153  0385                     	__end_of_UpdateDisplay:
  3154 ;; =============== function _UpdateDisplay ends ============
  3155                           
  3156                           	signat	_UpdateDisplay,88
  3157                           	global	_init
  3158                           psect	text886,local,class=CODE,delta=2
  3159                           global __ptext886
  3160  0B62                     __ptext886:
  3161                           
  3162 ;; *************** function _init *****************
  3163 ;; Defined at:
  3164 ;;		line 130 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;		None               void
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    5
  3185 ;; This function calls:
  3186 ;;		_init_adc
  3187 ;;		_lcd_init
  3188 ;;		_ser_init
  3189 ;;		_robo_init
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           psect	text886
  3195                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3196                           	line	130
  3197                           	global	__size_of_init
  3198  0028                     	__size_of_init	equ	__end_of_init-_init
  3199                           	
  3200  0B62                     _init:	
  3201                           	opt	stack 2
  3202                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3203                           	line	131
  3204                           	
  3205  0B62                     l10796:	
  3206                           ;Main.c: 131: GIE=0;
  3207  0B62  138B               	bcf	(95/8),(95)&7
  3208                           	line	132
  3209                           	
  3210  0B63                     l10798:	
  3211                           ;Main.c: 132: init_adc();
  3212  0B63  120A  158A  229A   	fcall	_init_adc
              120A  158A         
  3213                           	line	133
  3214                           ;Main.c: 133: lcd_init();
  3215  0B68  120A  158A  23B3   	fcall	_lcd_init
              120A  158A         
  3216                           	line	134
  3217                           ;Main.c: 134: ser_init();
  3218  0B6D  120A  158A  233A   	fcall	_ser_init
              120A  158A         
  3219                           	line	135
  3220                           	
  3221  0B72                     l10800:	
  3222                           ;Main.c: 135: robo_init();
  3223  0B72  120A  158A  2220   	fcall	_robo_init
              120A  158A         
  3224                           	line	137
  3225                           	
  3226  0B77                     l10802:	
  3227                           ;Main.c: 137: TRISB = 0b11111100;
  3228  0B77  30FC               	movlw	(0FCh)
  3229  0B78  1683               	bsf	status, 5	;RP0=1, select bank1
  3230  0B79  1303               	bcf	status, 6	;RP1=0, select bank1
  3231  0B7A  0086               	movwf	(134)^080h	;volatile
  3232                           	line	139
  3233                           	
  3234  0B7B                     l10804:	
  3235                           ;Main.c: 139: SSPSTAT = 0b01000000;
  3236  0B7B  3040               	movlw	(040h)
  3237  0B7C  0094               	movwf	(148)^080h	;volatile
  3238                           	line	140
  3239                           	
  3240  0B7D                     l10806:	
  3241                           ;Main.c: 140: SSPCON = 0b10100001;
  3242  0B7D  30A1               	movlw	(0A1h)
  3243  0B7E  1283               	bcf	status, 5	;RP0=0, select bank0
  3244  0B7F  1303               	bcf	status, 6	;RP1=0, select bank0
  3245  0B80  0094               	movwf	(20)	;volatile
  3246                           	line	142
  3247                           	
  3248  0B81                     l10808:	
  3249                           ;Main.c: 142: OPTION_REG = 0b00000100;
  3250  0B81  3004               	movlw	(04h)
  3251  0B82  1683               	bsf	status, 5	;RP0=1, select bank1
  3252  0B83  1303               	bcf	status, 6	;RP1=0, select bank1
  3253  0B84  0081               	movwf	(129)^080h	;volatile
  3254                           	line	145
  3255                           	
  3256  0B85                     l10810:	
  3257                           ;Main.c: 145: TMR0IE = 1;
  3258  0B85  168B               	bsf	(93/8),(93)&7
  3259                           	line	146
  3260                           	
  3261  0B86                     l10812:	
  3262                           ;Main.c: 146: PEIE=1;
  3263  0B86  170B               	bsf	(94/8),(94)&7
  3264                           	line	148
  3265                           	
  3266  0B87                     l10814:	
  3267                           ;Main.c: 148: GIE=1;
  3268  0B87  178B               	bsf	(95/8),(95)&7
  3269                           	line	149
  3270                           	
  3271  0B88                     l10816:	
  3272                           ;Main.c: 149: (GIE = 1);
  3273  0B88  178B               	bsf	(95/8),(95)&7
  3274                           	line	150
  3275                           	
  3276  0B89                     l2213:	
  3277  0B89  0008               	return
  3278                           	opt stack 0
  3279                           GLOBAL	__end_of_init
  3280  0B8A                     	__end_of_init:
  3281 ;; =============== function _init ends ============
  3282                           
  3283                           	signat	_init,88
  3284                           	global	_readDistance
  3285                           psect	text887,local,class=CODE,delta=2
  3286                           global __ptext887
  3287  0AB0                     __ptext887:
  3288                           
  3289 ;; *************** function _readDistance *****************
  3290 ;; Defined at:
  3291 ;;		line 24 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  fullval         2   12[BANK0 ] unsigned int 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  2    8[BANK0 ] unsigned int 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       2       0       0       0
  3306 ;;      Locals:         0       2       0       0       0
  3307 ;;      Temps:          0       2       0       0       0
  3308 ;;      Totals:         0       6       0       0       0
  3309 ;;Total ram usage:        6 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    5
  3312 ;; This function calls:
  3313 ;;		_adc_read_channel
  3314 ;; This function is called by:
  3315 ;;		_readAvgDistance
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           psect	text887
  3319                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3320                           	line	24
  3321                           	global	__size_of_readDistance
  3322  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3323                           	
  3324  0AB0                     _readDistance:	
  3325                           	opt	stack 0
  3326                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3327                           	line	27
  3328                           	
  3329  0AB0                     l10790:	
  3330                           ;infrared.c: 25: unsigned int fullval ;
  3331                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3332  0AB0  3000               	movlw	(0)
  3333  0AB1  120A  158A  2495   	fcall	_adc_read_channel
              120A  158A         
  3334  0AB6  1283               	bcf	status, 5	;RP0=0, select bank0
  3335  0AB7  1303               	bcf	status, 6	;RP1=0, select bank0
  3336  0AB8  00AA               	movwf	(??_readDistance+0)+0
  3337  0AB9  01AB               	clrf	(??_readDistance+0)+0+1
  3338  0ABA  082A               	movf	0+(??_readDistance+0)+0,w
  3339  0ABB  00AC               	movwf	(readDistance@fullval)
  3340  0ABC  082B               	movf	1+(??_readDistance+0)+0,w
  3341  0ABD  00AD               	movwf	(readDistance@fullval+1)
  3342                           	line	29
  3343                           	
  3344  0ABE                     l10792:	
  3345                           ;infrared.c: 29: return fullval;
  3346  0ABE  082D               	movf	(readDistance@fullval+1),w
  3347  0ABF  01A9               	clrf	(?_readDistance+1)
  3348  0AC0  07A9               	addwf	(?_readDistance+1)
  3349  0AC1  082C               	movf	(readDistance@fullval),w
  3350  0AC2  01A8               	clrf	(?_readDistance)
  3351  0AC3  07A8               	addwf	(?_readDistance)
  3352                           
  3353  0AC4  2AC5               	goto	l2965
  3354                           	
  3355  0AC5                     l10794:	
  3356                           	line	30
  3357                           	
  3358  0AC5                     l2965:	
  3359  0AC5  0008               	return
  3360                           	opt stack 0
  3361                           GLOBAL	__end_of_readDistance
  3362  0AC6                     	__end_of_readDistance:
  3363 ;; =============== function _readDistance ends ============
  3364                           
  3365                           	signat	_readDistance,90
  3366                           	global	_robot_distance
  3367                           psect	text888,local,class=CODE,delta=2
  3368                           global __ptext888
  3369  0ADD                     __ptext888:
  3370                           
  3371 ;; *************** function _robot_distance *****************
  3372 ;; Defined at:
  3373 ;;		line 23 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0
  3389 ;;      Temps:          0       2       0       0       0
  3390 ;;      Totals:         0       2       0       0       0
  3391 ;;Total ram usage:        2 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    5
  3394 ;; This function calls:
  3395 ;;		_robot_read
  3396 ;;		_ser_getch
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           psect	text888
  3402                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3403                           	line	23
  3404                           	global	__size_of_robot_distance
  3405  001A                     	__size_of_robot_distance	equ	__end_of_robot_distance-_robot_distance
  3406                           	
  3407  0ADD                     _robot_distance:	
  3408                           	opt	stack 2
  3409                           ; Regs used in _robot_distance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3410                           	line	24
  3411                           	
  3412  0ADD                     l10788:	
  3413                           ;robot.c: 24: robot_read(19);
  3414  0ADD  3013               	movlw	(013h)
  3415  0ADE  120A  158A  223A   	fcall	_robot_read
              120A  158A         
  3416                           	line	26
  3417                           ;robot.c: 26: distTravelled = ser_getch();
  3418  0AE3  120A  158A  2318   	fcall	_ser_getch
              120A  158A         
  3419  0AE8  1283               	bcf	status, 5	;RP0=0, select bank0
  3420  0AE9  1303               	bcf	status, 6	;RP1=0, select bank0
  3421  0AEA  00A3               	movwf	(??_robot_distance+0)+0
  3422  0AEB  01A4               	clrf	(??_robot_distance+0)+0+1
  3423  0AEC  0823               	movf	0+(??_robot_distance+0)+0,w
  3424  0AED  1683               	bsf	status, 5	;RP0=1, select bank1
  3425  0AEE  1303               	bcf	status, 6	;RP1=0, select bank1
  3426  0AEF  00E6               	movwf	(_distTravelled)^080h
  3427  0AF0  1283               	bcf	status, 5	;RP0=0, select bank0
  3428  0AF1  1303               	bcf	status, 6	;RP1=0, select bank0
  3429  0AF2  0824               	movf	1+(??_robot_distance+0)+0,w
  3430  0AF3  1683               	bsf	status, 5	;RP0=1, select bank1
  3431  0AF4  1303               	bcf	status, 6	;RP1=0, select bank1
  3432  0AF5  00E7               	movwf	(_distTravelled+1)^080h
  3433                           	line	34
  3434                           	
  3435  0AF6                     l6703:	
  3436  0AF6  0008               	return
  3437                           	opt stack 0
  3438                           GLOBAL	__end_of_robot_distance
  3439  0AF7                     	__end_of_robot_distance:
  3440 ;; =============== function _robot_distance ends ============
  3441                           
  3442                           	signat	_robot_distance,88
  3443                           	global	_lcd_init
  3444                           psect	text889,local,class=CODE,delta=2
  3445                           global __ptext889
  3446  0BB3                     __ptext889:
  3447                           
  3448 ;; *************** function _lcd_init *****************
  3449 ;; Defined at:
  3450 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, pclath, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0
  3467 ;;      Totals:         0       0       0       0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    4
  3471 ;; This function calls:
  3472 ;;		_lcd_write_control
  3473 ;; This function is called by:
  3474 ;;		_init
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           psect	text889
  3478                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3479                           	line	101
  3480                           	global	__size_of_lcd_init
  3481  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3482                           	
  3483  0BB3                     _lcd_init:	
  3484                           	opt	stack 2
  3485                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3486                           	line	105
  3487                           	
  3488  0BB3                     l10768:	
  3489                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3490  0BB3  3002               	movlw	(02h)
  3491  0BB4  1683               	bsf	status, 5	;RP0=1, select bank1
  3492  0BB5  1303               	bcf	status, 6	;RP1=0, select bank1
  3493  0BB6  009F               	movwf	(159)^080h	;volatile
  3494                           	line	108
  3495                           	
  3496  0BB7                     l10770:	
  3497                           ;lcd.c: 108: PORTD = 0;
  3498  0BB7  1283               	bcf	status, 5	;RP0=0, select bank0
  3499  0BB8  1303               	bcf	status, 6	;RP1=0, select bank0
  3500  0BB9  0188               	clrf	(8)	;volatile
  3501                           	line	109
  3502                           	
  3503  0BBA                     l10772:	
  3504                           ;lcd.c: 109: PORTE = 0;
  3505  0BBA  0189               	clrf	(9)	;volatile
  3506                           	line	111
  3507                           	
  3508  0BBB                     l10774:	
  3509                           ;lcd.c: 111: TRISD = 0b00000000;
  3510  0BBB  1683               	bsf	status, 5	;RP0=1, select bank1
  3511  0BBC  1303               	bcf	status, 6	;RP1=0, select bank1
  3512  0BBD  0188               	clrf	(136)^080h	;volatile
  3513                           	line	112
  3514                           	
  3515  0BBE                     l10776:	
  3516                           ;lcd.c: 112: TRISE = 0b00000000;
  3517  0BBE  0189               	clrf	(137)^080h	;volatile
  3518                           	line	115
  3519                           	
  3520  0BBF                     l10778:	
  3521                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3522  0BBF  3001               	movlw	(01h)
  3523  0BC0  120A  158A  2286   	fcall	_lcd_write_control
              120A  158A         
  3524                           	line	116
  3525                           	
  3526  0BC5                     l10780:	
  3527                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3528  0BC5  3038               	movlw	(038h)
  3529  0BC6  120A  158A  2286   	fcall	_lcd_write_control
              120A  158A         
  3530                           	line	117
  3531                           	
  3532  0BCB                     l10782:	
  3533                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3534  0BCB  300C               	movlw	(0Ch)
  3535  0BCC  120A  158A  2286   	fcall	_lcd_write_control
              120A  158A         
  3536                           	line	118
  3537                           	
  3538  0BD1                     l10784:	
  3539                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3540  0BD1  3006               	movlw	(06h)
  3541  0BD2  120A  158A  2286   	fcall	_lcd_write_control
              120A  158A         
  3542                           	line	119
  3543                           	
  3544  0BD7                     l10786:	
  3545                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3546  0BD7  3002               	movlw	(02h)
  3547  0BD8  120A  158A  2286   	fcall	_lcd_write_control
              120A  158A         
  3548                           	line	121
  3549                           	
  3550  0BDD                     l1429:	
  3551  0BDD  0008               	return
  3552                           	opt stack 0
  3553                           GLOBAL	__end_of_lcd_init
  3554  0BDE                     	__end_of_lcd_init:
  3555 ;; =============== function _lcd_init ends ============
  3556                           
  3557                           	signat	_lcd_init,88
  3558                           	global	_lcd_write_string
  3559                           psect	text890,local,class=CODE,delta=2
  3560                           global __ptext890
  3561  0C0A                     __ptext890:
  3562                           
  3563 ;; *************** function _lcd_write_string *****************
  3564 ;; Defined at:
  3565 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  s               2    7[BANK0 ] PTR unsigned char 
  3568 ;;		 -> STR_15(4), STR_14(8), STR_13(4), UpdateDisplay@adcOutput(16), 
  3569 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3570 ;;		 -> STR_6(4), STR_5(9), STR_4(8), STR_3(9), 
  3571 ;;		 -> STR_2(9), STR_1(9), 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;		None               void
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       2       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0
  3586 ;;      Totals:         0       2       0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    4
  3590 ;; This function calls:
  3591 ;;		_lcd_write_data
  3592 ;; This function is called by:
  3593 ;;		_UpdateDisplay
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           psect	text890
  3597                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3598                           	line	48
  3599                           	global	__size_of_lcd_write_string
  3600  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3601                           	
  3602  0C0A                     _lcd_write_string:	
  3603                           	opt	stack 1
  3604                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3605                           	line	50
  3606                           	
  3607  0C0A                     l10760:	
  3608                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3609  0C0A  2C24               	goto	l10766
  3610                           	
  3611  0C0B                     l1409:	
  3612                           	
  3613  0C0B                     l10762:	
  3614  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  3615  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  3616  0C0D  0828               	movf	(lcd_write_string@s+1),w
  3617  0C0E  00FF               	movwf	btemp+1
  3618  0C0F  0827               	movf	(lcd_write_string@s),w
  3619  0C10  0084               	movwf	fsr0
  3620  0C11  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3621  0C16  120A  158A  224C   	fcall	_lcd_write_data
              120A  158A         
  3622                           	
  3623  0C1B                     l10764:	
  3624  0C1B  3001               	movlw	low(01h)
  3625  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  3626  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  3627  0C1E  07A7               	addwf	(lcd_write_string@s),f
  3628  0C1F  1803               	skipnc
  3629  0C20  0AA8               	incf	(lcd_write_string@s+1),f
  3630  0C21  3000               	movlw	high(01h)
  3631  0C22  07A8               	addwf	(lcd_write_string@s+1),f
  3632  0C23  2C24               	goto	l10766
  3633                           	
  3634  0C24                     l1408:	
  3635                           	
  3636  0C24                     l10766:	
  3637  0C24  1283               	bcf	status, 5	;RP0=0, select bank0
  3638  0C25  1303               	bcf	status, 6	;RP1=0, select bank0
  3639  0C26  0828               	movf	(lcd_write_string@s+1),w
  3640  0C27  00FF               	movwf	btemp+1
  3641  0C28  0827               	movf	(lcd_write_string@s),w
  3642  0C29  0084               	movwf	fsr0
  3643  0C2A  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3644  0C2F  3800               	iorlw	0
  3645  0C30  1D03               	skipz
  3646  0C31  2C33               	goto	u4451
  3647  0C32  2C34               	goto	u4450
  3648  0C33                     u4451:
  3649  0C33  2C0B               	goto	l10762
  3650  0C34                     u4450:
  3651  0C34  2C35               	goto	l1411
  3652                           	
  3653  0C35                     l1410:	
  3654                           	line	51
  3655                           	
  3656  0C35                     l1411:	
  3657  0C35  0008               	return
  3658                           	opt stack 0
  3659                           GLOBAL	__end_of_lcd_write_string
  3660  0C36                     	__end_of_lcd_write_string:
  3661 ;; =============== function _lcd_write_string ends ============
  3662                           
  3663                           	signat	_lcd_write_string,4216
  3664                           	global	_lcd_set_cursor
  3665                           psect	text891,local,class=CODE,delta=2
  3666                           global __ptext891
  3667  0A15                     __ptext891:
  3668                           
  3669 ;; *************** function _lcd_set_cursor *****************
  3670 ;; Defined at:
  3671 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  address         1    wreg     unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  address         1    3[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       1       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       1       0       0       0
  3689 ;;Total ram usage:        1 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    4
  3692 ;; This function calls:
  3693 ;;		_lcd_write_control
  3694 ;; This function is called by:
  3695 ;;		_UpdateDisplay
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           psect	text891
  3699                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3700                           	line	42
  3701                           	global	__size_of_lcd_set_cursor
  3702  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3703                           	
  3704  0A15                     _lcd_set_cursor:	
  3705                           	opt	stack 1
  3706                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3707                           ;lcd_set_cursor@address stored from wreg
  3708  0A15  1283               	bcf	status, 5	;RP0=0, select bank0
  3709  0A16  1303               	bcf	status, 6	;RP1=0, select bank0
  3710  0A17  00A3               	movwf	(lcd_set_cursor@address)
  3711                           	line	43
  3712                           	
  3713  0A18                     l10756:	
  3714                           ;lcd.c: 43: address |= 0b10000000;
  3715  0A18  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3716                           	line	44
  3717                           	
  3718  0A19                     l10758:	
  3719                           ;lcd.c: 44: lcd_write_control(address);
  3720  0A19  0823               	movf	(lcd_set_cursor@address),w
  3721  0A1A  120A  158A  2286   	fcall	_lcd_write_control
              120A  158A         
  3722                           	line	45
  3723                           	
  3724  0A1F                     l1405:	
  3725  0A1F  0008               	return
  3726                           	opt stack 0
  3727                           GLOBAL	__end_of_lcd_set_cursor
  3728  0A20                     	__end_of_lcd_set_cursor:
  3729 ;; =============== function _lcd_set_cursor ends ============
  3730                           
  3731                           	signat	_lcd_set_cursor,4216
  3732                           	global	_robot_read
  3733                           psect	text892,local,class=CODE,delta=2
  3734                           global __ptext892
  3735  0A3A                     __ptext892:
  3736                           
  3737 ;; *************** function _robot_read *****************
  3738 ;; Defined at:
  3739 ;;		line 18 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  packet          1    wreg     unsigned char 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  packet          1    2[BANK0 ] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;		None               void
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         0       0       0       0       0
  3754 ;;      Locals:         0       1       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         0       1       0       0       0
  3757 ;;Total ram usage:        1 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    4
  3760 ;; This function calls:
  3761 ;;		_ser_putch
  3762 ;; This function is called by:
  3763 ;;		_robot_distance
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           psect	text892
  3767                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3768                           	line	18
  3769                           	global	__size_of_robot_read
  3770  0012                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  3771                           	
  3772  0A3A                     _robot_read:	
  3773                           	opt	stack 2
  3774                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3775                           ;robot_read@packet stored from wreg
  3776  0A3A  1283               	bcf	status, 5	;RP0=0, select bank0
  3777  0A3B  1303               	bcf	status, 6	;RP1=0, select bank0
  3778  0A3C  00A2               	movwf	(robot_read@packet)
  3779                           	line	19
  3780                           	
  3781  0A3D                     l10754:	
  3782                           ;robot.c: 19: ser_putch (142);
  3783  0A3D  308E               	movlw	(08Eh)
  3784  0A3E  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  3785                           	line	20
  3786                           ;robot.c: 20: ser_putch (packet);
  3787  0A43  1283               	bcf	status, 5	;RP0=0, select bank0
  3788  0A44  1303               	bcf	status, 6	;RP1=0, select bank0
  3789  0A45  0822               	movf	(robot_read@packet),w
  3790  0A46  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  3791                           	line	21
  3792                           	
  3793  0A4B                     l6700:	
  3794  0A4B  0008               	return
  3795                           	opt stack 0
  3796                           GLOBAL	__end_of_robot_read
  3797  0A4C                     	__end_of_robot_read:
  3798 ;; =============== function _robot_read ends ============
  3799                           
  3800                           	signat	_robot_read,4216
  3801                           	global	_sprintf
  3802                           psect	text893,local,class=CODE,delta=2
  3803                           global __ptext893
  3804  0491                     __ptext893:
  3805                           
  3806 ;; *************** function _sprintf *****************
  3807 ;; Defined at:
  3808 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  sp              1    wreg     PTR unsigned char 
  3811 ;;		 -> UpdateDisplay@adcOutput(16), 
  3812 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  3813 ;;		 -> STR_12(15), STR_11(15), 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  3816 ;;		 -> UpdateDisplay@adcOutput(16), 
  3817 ;;  _val            4   31[BANK0 ] struct .
  3818 ;;  c               1   36[BANK0 ] char 
  3819 ;;  prec            1   30[BANK0 ] char 
  3820 ;;  flag            1   29[BANK0 ] unsigned char 
  3821 ;;  ap              1   28[BANK0 ] PTR void [1]
  3822 ;;		 -> ?_sprintf(2), 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  2   20[BANK0 ] int 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3832 ;;      Params:         0       5       0       0       0
  3833 ;;      Locals:         0       9       0       0       0
  3834 ;;      Temps:          0       3       0       0       0
  3835 ;;      Totals:         0      17       0       0       0
  3836 ;;Total ram usage:       17 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    4
  3839 ;; This function calls:
  3840 ;;		___lwdiv
  3841 ;;		___lwmod
  3842 ;; This function is called by:
  3843 ;;		_UpdateDisplay
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           psect	text893
  3847                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  3848                           	line	488
  3849                           	global	__size_of_sprintf
  3850  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3851                           	
  3852  0491                     _sprintf:	
  3853                           	opt	stack 1
  3854                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3855                           ;sprintf@sp stored from wreg
  3856                           	line	537
  3857  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  3858  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  3859  0493  00C3               	movwf	(sprintf@sp)
  3860                           	
  3861  0494                     l10696:	
  3862  0494  3035               	movlw	(?_sprintf+01h)&0ffh
  3863  0495  00B9               	movwf	(??_sprintf+0)+0
  3864  0496  0839               	movf	(??_sprintf+0)+0,w
  3865  0497  00BC               	movwf	(sprintf@ap)
  3866                           	line	540
  3867  0498  2D77               	goto	l10748
  3868                           	
  3869  0499                     l6723:	
  3870                           	line	542
  3871                           	
  3872  0499                     l10698:	
  3873  0499  0844               	movf	(sprintf@c),w
  3874  049A  3A25               	xorlw	025h
  3875  049B  1903               	skipnz
  3876  049C  2C9E               	goto	u4371
  3877  049D  2C9F               	goto	u4370
  3878  049E                     u4371:
  3879  049E  2CAB               	goto	l6724
  3880  049F                     u4370:
  3881                           	line	545
  3882                           	
  3883  049F                     l10700:	
  3884  049F  0844               	movf	(sprintf@c),w
  3885  04A0  00B9               	movwf	(??_sprintf+0)+0
  3886  04A1  0843               	movf	(sprintf@sp),w
  3887  04A2  0084               	movwf	fsr0
  3888  04A3  0839               	movf	(??_sprintf+0)+0,w
  3889  04A4  1383               	bcf	status, 7	;select IRP bank0
  3890  04A5  0080               	movwf	indf
  3891                           	
  3892  04A6                     l10702:	
  3893  04A6  3001               	movlw	(01h)
  3894  04A7  00B9               	movwf	(??_sprintf+0)+0
  3895  04A8  0839               	movf	(??_sprintf+0)+0,w
  3896  04A9  07C3               	addwf	(sprintf@sp),f
  3897                           	line	546
  3898  04AA  2D77               	goto	l10748
  3899                           	line	547
  3900                           	
  3901  04AB                     l6724:	
  3902                           	line	552
  3903  04AB  01BD               	clrf	(sprintf@flag)
  3904                           	line	638
  3905  04AC  2CB2               	goto	l10706
  3906                           	line	640
  3907                           	
  3908  04AD                     l6726:	
  3909                           	line	641
  3910  04AD  2D8B               	goto	l10750
  3911                           	line	700
  3912                           	
  3913  04AE                     l6728:	
  3914  04AE  2CC7               	goto	l10708
  3915                           	line	701
  3916                           	
  3917  04AF                     l6729:	
  3918                           	line	702
  3919  04AF  2CC7               	goto	l10708
  3920                           	line	805
  3921                           	
  3922  04B0                     l6731:	
  3923                           	line	816
  3924  04B0  2D77               	goto	l10748
  3925                           	line	825
  3926                           	
  3927  04B1                     l10704:	
  3928  04B1  2CC7               	goto	l10708
  3929                           	line	638
  3930                           	
  3931  04B2                     l6725:	
  3932                           	
  3933  04B2                     l10706:	
  3934  04B2  3001               	movlw	01h
  3935  04B3  07B4               	addwf	(sprintf@f),f
  3936  04B4  30FF               	movlw	-01h
  3937  04B5  0734               	addwf	(sprintf@f),w
  3938  04B6  0084               	movwf	fsr0
  3939  04B7  120A  158A  200A   	fcall	stringdir
              120A  118A         
  3940  04BC  00C4               	movwf	(sprintf@c)
  3941                           	; Switch size 1, requested type "space"
  3942                           ; Number of cases is 3, Range of values is 0 to 105
  3943                           ; switch strategies available:
  3944                           ; Name         Instructions Cycles
  3945                           ; simple_byte           10     6 (average)
  3946                           ; jumptable            260     6 (fixed)
  3947                           ; rangetable           110     6 (fixed)
  3948                           ; spacedrange          218     9 (fixed)
  3949                           ; locatedrange         106     3 (fixed)
  3950                           ;	Chosen strategy is simple_byte
  3951                           
  3952                           	opt asmopt_off
  3953  04BD  3A00               	xorlw	0^0	; case 0
  3954  04BE  1903               	skipnz
  3955  04BF  2D8B               	goto	l10750
  3956  04C0  3A64               	xorlw	100^0	; case 100
  3957  04C1  1903               	skipnz
  3958  04C2  2CC7               	goto	l10708
  3959  04C3  3A0D               	xorlw	105^100	; case 105
  3960  04C4  1903               	skipnz
  3961  04C5  2CC7               	goto	l10708
  3962  04C6  2D77               	goto	l10748
  3963                           	opt asmopt_on
  3964                           
  3965                           	line	825
  3966                           	
  3967  04C7                     l6730:	
  3968                           	line	1254
  3969                           	
  3970  04C7                     l10708:	
  3971  04C7  083C               	movf	(sprintf@ap),w
  3972  04C8  0084               	movwf	fsr0
  3973  04C9  1383               	bcf	status, 7	;select IRP bank0
  3974  04CA  0800               	movf	indf,w
  3975  04CB  00BF               	movwf	(sprintf@_val)
  3976  04CC  0A84               	incf	fsr0,f
  3977  04CD  0800               	movf	indf,w
  3978  04CE  00C0               	movwf	(sprintf@_val+1)
  3979                           	
  3980  04CF                     l10710:	
  3981  04CF  3002               	movlw	(02h)
  3982  04D0  00B9               	movwf	(??_sprintf+0)+0
  3983  04D1  0839               	movf	(??_sprintf+0)+0,w
  3984  04D2  07BC               	addwf	(sprintf@ap),f
  3985                           	line	1256
  3986                           	
  3987  04D3                     l10712:	
  3988  04D3  1FC0               	btfss	(sprintf@_val+1),7
  3989  04D4  2CD6               	goto	u4381
  3990  04D5  2CD7               	goto	u4380
  3991  04D6                     u4381:
  3992  04D6  2CE1               	goto	l10718
  3993  04D7                     u4380:
  3994                           	line	1257
  3995                           	
  3996  04D7                     l10714:	
  3997  04D7  3003               	movlw	(03h)
  3998  04D8  00B9               	movwf	(??_sprintf+0)+0
  3999  04D9  0839               	movf	(??_sprintf+0)+0,w
  4000  04DA  04BD               	iorwf	(sprintf@flag),f
  4001                           	line	1258
  4002                           	
  4003  04DB                     l10716:	
  4004  04DB  09BF               	comf	(sprintf@_val),f
  4005  04DC  09C0               	comf	(sprintf@_val+1),f
  4006  04DD  0ABF               	incf	(sprintf@_val),f
  4007  04DE  1903               	skipnz
  4008  04DF  0AC0               	incf	(sprintf@_val+1),f
  4009  04E0  2CE1               	goto	l10718
  4010                           	line	1259
  4011                           	
  4012  04E1                     l6732:	
  4013                           	line	1300
  4014                           	
  4015  04E1                     l10718:	
  4016  04E1  01C4               	clrf	(sprintf@c)
  4017  04E2  1403               	bsf	status,0
  4018  04E3  0DC4               	rlf	(sprintf@c),f
  4019                           	
  4020  04E4                     l10720:	
  4021  04E4  0844               	movf	(sprintf@c),w
  4022  04E5  3A05               	xorlw	05h
  4023  04E6  1D03               	skipz
  4024  04E7  2CE9               	goto	u4391
  4025  04E8  2CEA               	goto	u4390
  4026  04E9                     u4391:
  4027  04E9  2CEC               	goto	l10724
  4028  04EA                     u4390:
  4029  04EA  2D14               	goto	l10732
  4030                           	
  4031  04EB                     l10722:	
  4032  04EB  2D14               	goto	l10732
  4033                           	line	1301
  4034                           	
  4035  04EC                     l6733:	
  4036                           	
  4037  04EC                     l10724:	
  4038  04EC  0844               	movf	(sprintf@c),w
  4039  04ED  00B9               	movwf	(??_sprintf+0)+0
  4040  04EE  0739               	addwf	(??_sprintf+0)+0,w
  4041  04EF  3E01               	addlw	low((_dpowers-__stringbase))
  4042  04F0  0084               	movwf	fsr0
  4043  04F1  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4044  04F6  00BA               	movwf	(??_sprintf+1)+0
  4045  04F7  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4046  04FC  00BB               	movwf	(??_sprintf+1)+0+1
  4047  04FD  083B               	movf	1+(??_sprintf+1)+0,w
  4048  04FE  0240               	subwf	(sprintf@_val+1),w
  4049  04FF  1D03               	skipz
  4050  0500  2D03               	goto	u4405
  4051  0501  083A               	movf	0+(??_sprintf+1)+0,w
  4052  0502  023F               	subwf	(sprintf@_val),w
  4053  0503                     u4405:
  4054  0503  1803               	skipnc
  4055  0504  2D06               	goto	u4401
  4056  0505  2D07               	goto	u4400
  4057  0506                     u4401:
  4058  0506  2D09               	goto	l10728
  4059  0507                     u4400:
  4060  0507  2D14               	goto	l10732
  4061                           	line	1302
  4062                           	
  4063  0508                     l10726:	
  4064  0508  2D14               	goto	l10732
  4065                           	
  4066  0509                     l6735:	
  4067                           	line	1300
  4068                           	
  4069  0509                     l10728:	
  4070  0509  3001               	movlw	(01h)
  4071  050A  00B9               	movwf	(??_sprintf+0)+0
  4072  050B  0839               	movf	(??_sprintf+0)+0,w
  4073  050C  07C4               	addwf	(sprintf@c),f
  4074                           	
  4075  050D                     l10730:	
  4076  050D  0844               	movf	(sprintf@c),w
  4077  050E  3A05               	xorlw	05h
  4078  050F  1D03               	skipz
  4079  0510  2D12               	goto	u4411
  4080  0511  2D13               	goto	u4410
  4081  0512                     u4411:
  4082  0512  2CEC               	goto	l10724
  4083  0513                     u4410:
  4084  0513  2D14               	goto	l10732
  4085                           	
  4086  0514                     l6734:	
  4087                           	line	1433
  4088                           	
  4089  0514                     l10732:	
  4090  0514  083D               	movf	(sprintf@flag),w
  4091  0515  3903               	andlw	03h
  4092  0516  1903               	btfsc	status,2
  4093  0517  2D19               	goto	u4421
  4094  0518  2D1A               	goto	u4420
  4095  0519                     u4421:
  4096  0519  2D26               	goto	l10738
  4097  051A                     u4420:
  4098                           	line	1434
  4099                           	
  4100  051A                     l10734:	
  4101  051A  302D               	movlw	(02Dh)
  4102  051B  00B9               	movwf	(??_sprintf+0)+0
  4103  051C  0843               	movf	(sprintf@sp),w
  4104  051D  0084               	movwf	fsr0
  4105  051E  0839               	movf	(??_sprintf+0)+0,w
  4106  051F  1383               	bcf	status, 7	;select IRP bank0
  4107  0520  0080               	movwf	indf
  4108                           	
  4109  0521                     l10736:	
  4110  0521  3001               	movlw	(01h)
  4111  0522  00B9               	movwf	(??_sprintf+0)+0
  4112  0523  0839               	movf	(??_sprintf+0)+0,w
  4113  0524  07C3               	addwf	(sprintf@sp),f
  4114  0525  2D26               	goto	l10738
  4115                           	
  4116  0526                     l6736:	
  4117                           	line	1467
  4118                           	
  4119  0526                     l10738:	
  4120  0526  0844               	movf	(sprintf@c),w
  4121  0527  00B9               	movwf	(??_sprintf+0)+0
  4122  0528  0839               	movf	(??_sprintf+0)+0,w
  4123  0529  00BE               	movwf	(sprintf@prec)
  4124                           	line	1469
  4125  052A  2D6B               	goto	l10746
  4126                           	
  4127  052B                     l6738:	
  4128                           	line	1484
  4129                           	
  4130  052B                     l10740:	
  4131  052B  300A               	movlw	low(0Ah)
  4132  052C  00AE               	movwf	(?___lwmod)
  4133  052D  3000               	movlw	high(0Ah)
  4134  052E  00AF               	movwf	((?___lwmod))+1
  4135  052F  083E               	movf	(sprintf@prec),w
  4136  0530  00B9               	movwf	(??_sprintf+0)+0
  4137  0531  0739               	addwf	(??_sprintf+0)+0,w
  4138  0532  3E01               	addlw	low((_dpowers-__stringbase))
  4139  0533  0084               	movwf	fsr0
  4140  0534  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4141  0539  00A6               	movwf	(?___lwdiv)
  4142  053A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4143  053F  00A7               	movwf	(?___lwdiv+1)
  4144  0540  0840               	movf	(sprintf@_val+1),w
  4145  0541  01A9               	clrf	1+(?___lwdiv)+02h
  4146  0542  07A9               	addwf	1+(?___lwdiv)+02h
  4147  0543  083F               	movf	(sprintf@_val),w
  4148  0544  01A8               	clrf	0+(?___lwdiv)+02h
  4149  0545  07A8               	addwf	0+(?___lwdiv)+02h
  4150                           
  4151  0546  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4152  054B  1283               	bcf	status, 5	;RP0=0, select bank0
  4153  054C  1303               	bcf	status, 6	;RP1=0, select bank0
  4154  054D  0827               	movf	(1+(?___lwdiv)),w
  4155  054E  01B1               	clrf	1+(?___lwmod)+02h
  4156  054F  07B1               	addwf	1+(?___lwmod)+02h
  4157  0550  0826               	movf	(0+(?___lwdiv)),w
  4158  0551  01B0               	clrf	0+(?___lwmod)+02h
  4159  0552  07B0               	addwf	0+(?___lwmod)+02h
  4160                           
  4161  0553  120A  158A  2514   	fcall	___lwmod
              120A  118A         
  4162  0558  1283               	bcf	status, 5	;RP0=0, select bank0
  4163  0559  1303               	bcf	status, 6	;RP1=0, select bank0
  4164  055A  082E               	movf	(0+(?___lwmod)),w
  4165  055B  3E30               	addlw	030h
  4166  055C  00BA               	movwf	(??_sprintf+1)+0
  4167  055D  083A               	movf	(??_sprintf+1)+0,w
  4168  055E  00C4               	movwf	(sprintf@c)
  4169                           	line	1516
  4170                           	
  4171  055F                     l10742:	
  4172  055F  0844               	movf	(sprintf@c),w
  4173  0560  00B9               	movwf	(??_sprintf+0)+0
  4174  0561  0843               	movf	(sprintf@sp),w
  4175  0562  0084               	movwf	fsr0
  4176  0563  0839               	movf	(??_sprintf+0)+0,w
  4177  0564  1383               	bcf	status, 7	;select IRP bank0
  4178  0565  0080               	movwf	indf
  4179                           	
  4180  0566                     l10744:	
  4181  0566  3001               	movlw	(01h)
  4182  0567  00B9               	movwf	(??_sprintf+0)+0
  4183  0568  0839               	movf	(??_sprintf+0)+0,w
  4184  0569  07C3               	addwf	(sprintf@sp),f
  4185  056A  2D6B               	goto	l10746
  4186                           	line	1517
  4187                           	
  4188  056B                     l6737:	
  4189                           	line	1469
  4190                           	
  4191  056B                     l10746:	
  4192  056B  30FF               	movlw	(-1)
  4193  056C  00B9               	movwf	(??_sprintf+0)+0
  4194  056D  0839               	movf	(??_sprintf+0)+0,w
  4195  056E  07BE               	addwf	(sprintf@prec),f
  4196  056F  083E               	movf	((sprintf@prec)),w
  4197  0570  3AFF               	xorlw	-1
  4198  0571  1D03               	skipz
  4199  0572  2D74               	goto	u4431
  4200  0573  2D75               	goto	u4430
  4201  0574                     u4431:
  4202  0574  2D2B               	goto	l10740
  4203  0575                     u4430:
  4204  0575  2D77               	goto	l10748
  4205                           	
  4206  0576                     l6739:	
  4207  0576  2D77               	goto	l10748
  4208                           	line	1525
  4209                           	
  4210  0577                     l6722:	
  4211                           	line	540
  4212                           	
  4213  0577                     l10748:	
  4214  0577  3001               	movlw	01h
  4215  0578  07B4               	addwf	(sprintf@f),f
  4216  0579  30FF               	movlw	-01h
  4217  057A  0734               	addwf	(sprintf@f),w
  4218  057B  0084               	movwf	fsr0
  4219  057C  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4220  0581  00B9               	movwf	(??_sprintf+0)+0
  4221  0582  0839               	movf	(??_sprintf+0)+0,w
  4222  0583  00C4               	movwf	(sprintf@c)
  4223  0584  08C4               	movf	((sprintf@c)),f
  4224  0585  1D03               	skipz
  4225  0586  2D88               	goto	u4441
  4226  0587  2D89               	goto	u4440
  4227  0588                     u4441:
  4228  0588  2C99               	goto	l10698
  4229  0589                     u4440:
  4230  0589  2D8B               	goto	l10750
  4231                           	
  4232  058A                     l6740:	
  4233  058A  2D8B               	goto	l10750
  4234                           	line	1527
  4235                           	
  4236  058B                     l6727:	
  4237                           	line	1530
  4238                           	
  4239  058B                     l10750:	
  4240  058B  0843               	movf	(sprintf@sp),w
  4241  058C  0084               	movwf	fsr0
  4242  058D  1383               	bcf	status, 7	;select IRP bank0
  4243  058E  0180               	clrf	indf
  4244  058F  2D90               	goto	l6741
  4245                           	line	1532
  4246                           	
  4247  0590                     l10752:	
  4248                           	line	1533
  4249                           ;	Return value of _sprintf is never used
  4250                           	
  4251  0590                     l6741:	
  4252  0590  0008               	return
  4253                           	opt stack 0
  4254                           GLOBAL	__end_of_sprintf
  4255  0591                     	__end_of_sprintf:
  4256 ;; =============== function _sprintf ends ============
  4257                           
  4258                           	signat	_sprintf,4698
  4259                           	global	_ser_getch
  4260                           psect	text894,local,class=CODE,delta=2
  4261                           global __ptext894
  4262  0B18                     __ptext894:
  4263                           
  4264 ;; *************** function _ser_getch *****************
  4265 ;; Defined at:
  4266 ;;		line 55 in file "H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  c               1    1[BANK0 ] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      unsigned char 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4280 ;;      Params:         0       0       0       0       0
  4281 ;;      Locals:         0       1       0       0       0
  4282 ;;      Temps:          0       1       0       0       0
  4283 ;;      Totals:         0       2       0       0       0
  4284 ;;Total ram usage:        2 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    4
  4287 ;; This function calls:
  4288 ;;		_ser_isrx
  4289 ;; This function is called by:
  4290 ;;		_robot_distance
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           psect	text894
  4294                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  4295                           	line	55
  4296                           	global	__size_of_ser_getch
  4297  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  4298                           	
  4299  0B18                     _ser_getch:	
  4300                           	opt	stack 2
  4301                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4302                           	line	58
  4303                           	
  4304  0B18                     l10680:	
  4305                           ;ser.c: 56: unsigned char c;
  4306                           ;ser.c: 58: while (ser_isrx()==0)
  4307  0B18  2B1A               	goto	l10682
  4308                           	
  4309  0B19                     l4422:	
  4310                           	line	59
  4311                           ;ser.c: 59: continue;
  4312  0B19  2B1A               	goto	l10682
  4313                           	
  4314  0B1A                     l4421:	
  4315                           	line	58
  4316                           	
  4317  0B1A                     l10682:	
  4318  0B1A  120A  158A  22C6   	fcall	_ser_isrx
              120A  158A         
  4319  0B1F  1C03               	btfss	status,0
  4320  0B20  2B22               	goto	u4361
  4321  0B21  2B23               	goto	u4360
  4322  0B22                     u4361:
  4323  0B22  2B1A               	goto	l10682
  4324  0B23                     u4360:
  4325                           	
  4326  0B23                     l4423:	
  4327                           	line	61
  4328                           ;ser.c: 61: GIE=0;
  4329  0B23  138B               	bcf	(95/8),(95)&7
  4330                           	line	62
  4331                           	
  4332  0B24                     l10684:	
  4333                           ;ser.c: 62: c=rxfifo[rxoptr];
  4334  0B24  1283               	bcf	status, 5	;RP0=0, select bank0
  4335  0B25  1303               	bcf	status, 6	;RP1=0, select bank0
  4336  0B26  086E               	movf	(_rxoptr),w
  4337  0B27  3EA0               	addlw	_rxfifo&0ffh
  4338  0B28  0084               	movwf	fsr0
  4339  0B29  1383               	bcf	status, 7	;select IRP bank1
  4340  0B2A  0800               	movf	indf,w
  4341  0B2B  00A0               	movwf	(??_ser_getch+0)+0
  4342  0B2C  0820               	movf	(??_ser_getch+0)+0,w
  4343  0B2D  00A1               	movwf	(ser_getch@c)
  4344                           	line	63
  4345                           	
  4346  0B2E                     l10686:	
  4347                           ;ser.c: 63: ++rxoptr;
  4348  0B2E  3001               	movlw	(01h)
  4349  0B2F  00A0               	movwf	(??_ser_getch+0)+0
  4350  0B30  0820               	movf	(??_ser_getch+0)+0,w
  4351  0B31  07EE               	addwf	(_rxoptr),f	;volatile
  4352                           	line	64
  4353                           	
  4354  0B32                     l10688:	
  4355                           ;ser.c: 64: rxoptr &= (16-1);
  4356  0B32  300F               	movlw	(0Fh)
  4357  0B33  00A0               	movwf	(??_ser_getch+0)+0
  4358  0B34  0820               	movf	(??_ser_getch+0)+0,w
  4359  0B35  05EE               	andwf	(_rxoptr),f	;volatile
  4360                           	line	65
  4361                           	
  4362  0B36                     l10690:	
  4363                           ;ser.c: 65: GIE=1;
  4364  0B36  178B               	bsf	(95/8),(95)&7
  4365                           	line	66
  4366                           	
  4367  0B37                     l10692:	
  4368                           ;ser.c: 66: return c;
  4369  0B37  0821               	movf	(ser_getch@c),w
  4370  0B38  2B39               	goto	l4424
  4371                           	
  4372  0B39                     l10694:	
  4373                           	line	67
  4374                           	
  4375  0B39                     l4424:	
  4376  0B39  0008               	return
  4377                           	opt stack 0
  4378                           GLOBAL	__end_of_ser_getch
  4379  0B3A                     	__end_of_ser_getch:
  4380 ;; =============== function _ser_getch ends ============
  4381                           
  4382                           	signat	_ser_getch,89
  4383                           	global	_ADCconvert
  4384                           psect	text895,local,class=CODE,delta=2
  4385                           global __ptext895
  4386  0015                     __ptext895:
  4387                           
  4388 ;; *************** function _ADCconvert *****************
  4389 ;; Defined at:
  4390 ;;		line 33 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;		None               void
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0
  4406 ;;      Temps:          0       2       0       0       0
  4407 ;;      Totals:         0       2       0       0       0
  4408 ;;Total ram usage:        2 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    4
  4411 ;; This function calls:
  4412 ;;		___wmul
  4413 ;;		___lwdiv
  4414 ;; This function is called by:
  4415 ;;		_readAvgDistance
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           psect	text895
  4419                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4420                           	line	33
  4421                           	global	__size_of_ADCconvert
  4422  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4423                           	
  4424  0015                     _ADCconvert:	
  4425                           	opt	stack 1
  4426                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4427                           	line	39
  4428                           	
  4429  0015                     l10638:	
  4430                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4431  0015  3000               	movlw	high(0D5h)
  4432  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4433  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4434  0018  026B               	subwf	(_adcVal+1),w	;volatile
  4435  0019  30D5               	movlw	low(0D5h)
  4436  001A  1903               	skipnz
  4437  001B  026A               	subwf	(_adcVal),w	;volatile
  4438  001C  1C03               	skipc
  4439  001D  281F               	goto	u4221
  4440  001E  2820               	goto	u4220
  4441  001F                     u4221:
  4442  001F  2863               	goto	l10644
  4443  0020                     u4220:
  4444                           	
  4445  0020                     l10640:	
  4446  0020  3000               	movlw	high(0EAh)
  4447  0021  026B               	subwf	(_adcVal+1),w	;volatile
  4448  0022  30EA               	movlw	low(0EAh)
  4449  0023  1903               	skipnz
  4450  0024  026A               	subwf	(_adcVal),w	;volatile
  4451  0025  1803               	skipnc
  4452  0026  2828               	goto	u4231
  4453  0027  2829               	goto	u4230
  4454  0028                     u4231:
  4455  0028  2863               	goto	l10644
  4456  0029                     u4230:
  4457                           	line	41
  4458                           	
  4459  0029                     l10642:	
  4460                           ;infrared.c: 40: {
  4461                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4462  0029  3015               	movlw	low(015h)
  4463  002A  00A6               	movwf	(?___lwdiv)
  4464  002B  3000               	movlw	high(015h)
  4465  002C  00A7               	movwf	((?___lwdiv))+1
  4466  002D  096A               	comf	(_adcVal),w	;volatile
  4467  002E  00AE               	movwf	(??_ADCconvert+0)+0
  4468  002F  096B               	comf	(_adcVal+1),w	;volatile
  4469  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4470  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  4471  0032  1903               	skipnz
  4472  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4473  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  4474  0035  3EEA               	addlw	low(0EAh)
  4475  0036  00A0               	movwf	(?___wmul)
  4476  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  4477  0038  1803               	skipnc
  4478  0039  3E01               	addlw	1
  4479  003A  3E00               	addlw	high(0EAh)
  4480  003B  00A1               	movwf	1+(?___wmul)
  4481  003C  3005               	movlw	low(05h)
  4482  003D  00A2               	movwf	0+(?___wmul)+02h
  4483  003E  3000               	movlw	high(05h)
  4484  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  4485  0040  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  4486  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  4487  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  4488  0047  0821               	movf	(1+(?___wmul)),w
  4489  0048  01A9               	clrf	1+(?___lwdiv)+02h
  4490  0049  07A9               	addwf	1+(?___lwdiv)+02h
  4491  004A  0820               	movf	(0+(?___wmul)),w
  4492  004B  01A8               	clrf	0+(?___lwdiv)+02h
  4493  004C  07A8               	addwf	0+(?___lwdiv)+02h
  4494                           
  4495  004D  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4496  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4497  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4498  0054  0826               	movf	(0+(?___lwdiv)),w
  4499  0055  3E0F               	addlw	low(0Fh)
  4500  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  4501  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  4502  0058  00C4               	movwf	(_distance)^080h	;volatile
  4503  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  4504  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  4505  005B  0827               	movf	(1+(?___lwdiv)),w
  4506  005C  1803               	skipnc
  4507  005D  3E01               	addlw	1
  4508  005E  3E00               	addlw	high(0Fh)
  4509  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  4510  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  4511  0061  00C5               	movwf	1+(_distance)^080h	;volatile
  4512                           	line	42
  4513                           ;infrared.c: 42: }
  4514  0062  2A37               	goto	l2981
  4515                           	line	43
  4516                           	
  4517  0063                     l2968:	
  4518                           	
  4519  0063                     l10644:	
  4520                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4521  0063  3000               	movlw	high(0AAh)
  4522  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  4523  0065  026B               	subwf	(_adcVal+1),w	;volatile
  4524  0066  30AA               	movlw	low(0AAh)
  4525  0067  1903               	skipnz
  4526  0068  026A               	subwf	(_adcVal),w	;volatile
  4527  0069  1C03               	skipc
  4528  006A  286C               	goto	u4241
  4529  006B  286D               	goto	u4240
  4530  006C                     u4241:
  4531  006C  28B0               	goto	l10650
  4532  006D                     u4240:
  4533                           	
  4534  006D                     l10646:	
  4535  006D  3000               	movlw	high(0D5h)
  4536  006E  026B               	subwf	(_adcVal+1),w	;volatile
  4537  006F  30D5               	movlw	low(0D5h)
  4538  0070  1903               	skipnz
  4539  0071  026A               	subwf	(_adcVal),w	;volatile
  4540  0072  1803               	skipnc
  4541  0073  2875               	goto	u4251
  4542  0074  2876               	goto	u4250
  4543  0075                     u4251:
  4544  0075  28B0               	goto	l10650
  4545  0076                     u4250:
  4546                           	line	45
  4547                           	
  4548  0076                     l10648:	
  4549                           ;infrared.c: 44: {
  4550                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4551  0076  302B               	movlw	low(02Bh)
  4552  0077  00A6               	movwf	(?___lwdiv)
  4553  0078  3000               	movlw	high(02Bh)
  4554  0079  00A7               	movwf	((?___lwdiv))+1
  4555  007A  096A               	comf	(_adcVal),w	;volatile
  4556  007B  00AE               	movwf	(??_ADCconvert+0)+0
  4557  007C  096B               	comf	(_adcVal+1),w	;volatile
  4558  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4559  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  4560  007F  1903               	skipnz
  4561  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4562  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  4563  0082  3ED5               	addlw	low(0D5h)
  4564  0083  00A0               	movwf	(?___wmul)
  4565  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  4566  0085  1803               	skipnc
  4567  0086  3E01               	addlw	1
  4568  0087  3E00               	addlw	high(0D5h)
  4569  0088  00A1               	movwf	1+(?___wmul)
  4570  0089  300A               	movlw	low(0Ah)
  4571  008A  00A2               	movwf	0+(?___wmul)+02h
  4572  008B  3000               	movlw	high(0Ah)
  4573  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  4574  008D  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  4575  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  4576  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  4577  0094  0821               	movf	(1+(?___wmul)),w
  4578  0095  01A9               	clrf	1+(?___lwdiv)+02h
  4579  0096  07A9               	addwf	1+(?___lwdiv)+02h
  4580  0097  0820               	movf	(0+(?___wmul)),w
  4581  0098  01A8               	clrf	0+(?___lwdiv)+02h
  4582  0099  07A8               	addwf	0+(?___lwdiv)+02h
  4583                           
  4584  009A  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4585  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4586  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4587  00A1  0826               	movf	(0+(?___lwdiv)),w
  4588  00A2  3E14               	addlw	low(014h)
  4589  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4590  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4591  00A5  00C4               	movwf	(_distance)^080h	;volatile
  4592  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4593  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4594  00A8  0827               	movf	(1+(?___lwdiv)),w
  4595  00A9  1803               	skipnc
  4596  00AA  3E01               	addlw	1
  4597  00AB  3E00               	addlw	high(014h)
  4598  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4599  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4600  00AE  00C5               	movwf	1+(_distance)^080h	;volatile
  4601                           	line	46
  4602                           ;infrared.c: 46: }
  4603  00AF  2A37               	goto	l2981
  4604                           	line	47
  4605                           	
  4606  00B0                     l2970:	
  4607                           	
  4608  00B0                     l10650:	
  4609                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4610  00B0  3000               	movlw	high(080h)
  4611  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4612  00B2  026B               	subwf	(_adcVal+1),w	;volatile
  4613  00B3  3080               	movlw	low(080h)
  4614  00B4  1903               	skipnz
  4615  00B5  026A               	subwf	(_adcVal),w	;volatile
  4616  00B6  1C03               	skipc
  4617  00B7  28B9               	goto	u4261
  4618  00B8  28BA               	goto	u4260
  4619  00B9                     u4261:
  4620  00B9  28FD               	goto	l10656
  4621  00BA                     u4260:
  4622                           	
  4623  00BA                     l10652:	
  4624  00BA  3000               	movlw	high(0AAh)
  4625  00BB  026B               	subwf	(_adcVal+1),w	;volatile
  4626  00BC  30AA               	movlw	low(0AAh)
  4627  00BD  1903               	skipnz
  4628  00BE  026A               	subwf	(_adcVal),w	;volatile
  4629  00BF  1803               	skipnc
  4630  00C0  28C2               	goto	u4271
  4631  00C1  28C3               	goto	u4270
  4632  00C2                     u4271:
  4633  00C2  28FD               	goto	l10656
  4634  00C3                     u4270:
  4635                           	line	49
  4636                           	
  4637  00C3                     l10654:	
  4638                           ;infrared.c: 48: {
  4639                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4640  00C3  302A               	movlw	low(02Ah)
  4641  00C4  00A6               	movwf	(?___lwdiv)
  4642  00C5  3000               	movlw	high(02Ah)
  4643  00C6  00A7               	movwf	((?___lwdiv))+1
  4644  00C7  096A               	comf	(_adcVal),w	;volatile
  4645  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  4646  00C9  096B               	comf	(_adcVal+1),w	;volatile
  4647  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4648  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  4649  00CC  1903               	skipnz
  4650  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4651  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  4652  00CF  3EAA               	addlw	low(0AAh)
  4653  00D0  00A0               	movwf	(?___wmul)
  4654  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  4655  00D2  1803               	skipnc
  4656  00D3  3E01               	addlw	1
  4657  00D4  3E00               	addlw	high(0AAh)
  4658  00D5  00A1               	movwf	1+(?___wmul)
  4659  00D6  300A               	movlw	low(0Ah)
  4660  00D7  00A2               	movwf	0+(?___wmul)+02h
  4661  00D8  3000               	movlw	high(0Ah)
  4662  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  4663  00DA  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  4664  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4665  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4666  00E1  0821               	movf	(1+(?___wmul)),w
  4667  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  4668  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  4669  00E4  0820               	movf	(0+(?___wmul)),w
  4670  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  4671  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  4672                           
  4673  00E7  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4674  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4675  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4676  00EE  0826               	movf	(0+(?___lwdiv)),w
  4677  00EF  3E1E               	addlw	low(01Eh)
  4678  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4679  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4680  00F2  00C4               	movwf	(_distance)^080h	;volatile
  4681  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4682  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4683  00F5  0827               	movf	(1+(?___lwdiv)),w
  4684  00F6  1803               	skipnc
  4685  00F7  3E01               	addlw	1
  4686  00F8  3E00               	addlw	high(01Eh)
  4687  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4688  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4689  00FB  00C5               	movwf	1+(_distance)^080h	;volatile
  4690                           	line	50
  4691                           ;infrared.c: 50: }
  4692  00FC  2A37               	goto	l2981
  4693                           	line	51
  4694                           	
  4695  00FD                     l2972:	
  4696                           	
  4697  00FD                     l10656:	
  4698                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4699  00FD  3000               	movlw	high(06Bh)
  4700  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4701  00FF  026B               	subwf	(_adcVal+1),w	;volatile
  4702  0100  306B               	movlw	low(06Bh)
  4703  0101  1903               	skipnz
  4704  0102  026A               	subwf	(_adcVal),w	;volatile
  4705  0103  1C03               	skipc
  4706  0104  2906               	goto	u4281
  4707  0105  2907               	goto	u4280
  4708  0106                     u4281:
  4709  0106  294A               	goto	l10662
  4710  0107                     u4280:
  4711                           	
  4712  0107                     l10658:	
  4713  0107  3000               	movlw	high(080h)
  4714  0108  026B               	subwf	(_adcVal+1),w	;volatile
  4715  0109  3080               	movlw	low(080h)
  4716  010A  1903               	skipnz
  4717  010B  026A               	subwf	(_adcVal),w	;volatile
  4718  010C  1803               	skipnc
  4719  010D  290F               	goto	u4291
  4720  010E  2910               	goto	u4290
  4721  010F                     u4291:
  4722  010F  294A               	goto	l10662
  4723  0110                     u4290:
  4724                           	line	53
  4725                           	
  4726  0110                     l10660:	
  4727                           ;infrared.c: 52: {
  4728                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  4729  0110  3015               	movlw	low(015h)
  4730  0111  00A6               	movwf	(?___lwdiv)
  4731  0112  3000               	movlw	high(015h)
  4732  0113  00A7               	movwf	((?___lwdiv))+1
  4733  0114  096A               	comf	(_adcVal),w	;volatile
  4734  0115  00AE               	movwf	(??_ADCconvert+0)+0
  4735  0116  096B               	comf	(_adcVal+1),w	;volatile
  4736  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4737  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  4738  0119  1903               	skipnz
  4739  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4740  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  4741  011C  3E80               	addlw	low(080h)
  4742  011D  00A0               	movwf	(?___wmul)
  4743  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  4744  011F  1803               	skipnc
  4745  0120  3E01               	addlw	1
  4746  0121  3E00               	addlw	high(080h)
  4747  0122  00A1               	movwf	1+(?___wmul)
  4748  0123  300A               	movlw	low(0Ah)
  4749  0124  00A2               	movwf	0+(?___wmul)+02h
  4750  0125  3000               	movlw	high(0Ah)
  4751  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  4752  0127  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  4753  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  4754  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  4755  012E  0821               	movf	(1+(?___wmul)),w
  4756  012F  01A9               	clrf	1+(?___lwdiv)+02h
  4757  0130  07A9               	addwf	1+(?___lwdiv)+02h
  4758  0131  0820               	movf	(0+(?___wmul)),w
  4759  0132  01A8               	clrf	0+(?___lwdiv)+02h
  4760  0133  07A8               	addwf	0+(?___lwdiv)+02h
  4761                           
  4762  0134  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4763  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  4764  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  4765  013B  0826               	movf	(0+(?___lwdiv)),w
  4766  013C  3E28               	addlw	low(028h)
  4767  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  4768  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  4769  013F  00C4               	movwf	(_distance)^080h	;volatile
  4770  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  4771  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  4772  0142  0827               	movf	(1+(?___lwdiv)),w
  4773  0143  1803               	skipnc
  4774  0144  3E01               	addlw	1
  4775  0145  3E00               	addlw	high(028h)
  4776  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  4777  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  4778  0148  00C5               	movwf	1+(_distance)^080h	;volatile
  4779                           	line	54
  4780                           ;infrared.c: 54: }
  4781  0149  2A37               	goto	l2981
  4782                           	line	55
  4783                           	
  4784  014A                     l2974:	
  4785                           	
  4786  014A                     l10662:	
  4787                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  4788  014A  3000               	movlw	high(04Dh)
  4789  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  4790  014C  026B               	subwf	(_adcVal+1),w	;volatile
  4791  014D  304D               	movlw	low(04Dh)
  4792  014E  1903               	skipnz
  4793  014F  026A               	subwf	(_adcVal),w	;volatile
  4794  0150  1C03               	skipc
  4795  0151  2953               	goto	u4301
  4796  0152  2954               	goto	u4300
  4797  0153                     u4301:
  4798  0153  2997               	goto	l10668
  4799  0154                     u4300:
  4800                           	
  4801  0154                     l10664:	
  4802  0154  3000               	movlw	high(06Bh)
  4803  0155  026B               	subwf	(_adcVal+1),w	;volatile
  4804  0156  306B               	movlw	low(06Bh)
  4805  0157  1903               	skipnz
  4806  0158  026A               	subwf	(_adcVal),w	;volatile
  4807  0159  1803               	skipnc
  4808  015A  295C               	goto	u4311
  4809  015B  295D               	goto	u4310
  4810  015C                     u4311:
  4811  015C  2997               	goto	l10668
  4812  015D                     u4310:
  4813                           	line	57
  4814                           	
  4815  015D                     l10666:	
  4816                           ;infrared.c: 56: {
  4817                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  4818  015D  301E               	movlw	low(01Eh)
  4819  015E  00A6               	movwf	(?___lwdiv)
  4820  015F  3000               	movlw	high(01Eh)
  4821  0160  00A7               	movwf	((?___lwdiv))+1
  4822  0161  096A               	comf	(_adcVal),w	;volatile
  4823  0162  00AE               	movwf	(??_ADCconvert+0)+0
  4824  0163  096B               	comf	(_adcVal+1),w	;volatile
  4825  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4826  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  4827  0166  1903               	skipnz
  4828  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4829  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  4830  0169  3E6B               	addlw	low(06Bh)
  4831  016A  00A0               	movwf	(?___wmul)
  4832  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  4833  016C  1803               	skipnc
  4834  016D  3E01               	addlw	1
  4835  016E  3E00               	addlw	high(06Bh)
  4836  016F  00A1               	movwf	1+(?___wmul)
  4837  0170  300A               	movlw	low(0Ah)
  4838  0171  00A2               	movwf	0+(?___wmul)+02h
  4839  0172  3000               	movlw	high(0Ah)
  4840  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  4841  0174  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  4842  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  4843  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  4844  017B  0821               	movf	(1+(?___wmul)),w
  4845  017C  01A9               	clrf	1+(?___lwdiv)+02h
  4846  017D  07A9               	addwf	1+(?___lwdiv)+02h
  4847  017E  0820               	movf	(0+(?___wmul)),w
  4848  017F  01A8               	clrf	0+(?___lwdiv)+02h
  4849  0180  07A8               	addwf	0+(?___lwdiv)+02h
  4850                           
  4851  0181  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4852  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  4853  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  4854  0188  0826               	movf	(0+(?___lwdiv)),w
  4855  0189  3E32               	addlw	low(032h)
  4856  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  4857  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  4858  018C  00C4               	movwf	(_distance)^080h	;volatile
  4859  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  4860  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  4861  018F  0827               	movf	(1+(?___lwdiv)),w
  4862  0190  1803               	skipnc
  4863  0191  3E01               	addlw	1
  4864  0192  3E00               	addlw	high(032h)
  4865  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  4866  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  4867  0195  00C5               	movwf	1+(_distance)^080h	;volatile
  4868                           	line	58
  4869                           ;infrared.c: 58: }
  4870  0196  2A37               	goto	l2981
  4871                           	line	59
  4872                           	
  4873  0197                     l2976:	
  4874                           	
  4875  0197                     l10668:	
  4876                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  4877  0197  3000               	movlw	high(038h)
  4878  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  4879  0199  026B               	subwf	(_adcVal+1),w	;volatile
  4880  019A  3038               	movlw	low(038h)
  4881  019B  1903               	skipnz
  4882  019C  026A               	subwf	(_adcVal),w	;volatile
  4883  019D  1C03               	skipc
  4884  019E  29A0               	goto	u4321
  4885  019F  29A1               	goto	u4320
  4886  01A0                     u4321:
  4887  01A0  29E4               	goto	l10674
  4888  01A1                     u4320:
  4889                           	
  4890  01A1                     l10670:	
  4891  01A1  3000               	movlw	high(04Dh)
  4892  01A2  026B               	subwf	(_adcVal+1),w	;volatile
  4893  01A3  304D               	movlw	low(04Dh)
  4894  01A4  1903               	skipnz
  4895  01A5  026A               	subwf	(_adcVal),w	;volatile
  4896  01A6  1803               	skipnc
  4897  01A7  29A9               	goto	u4331
  4898  01A8  29AA               	goto	u4330
  4899  01A9                     u4331:
  4900  01A9  29E4               	goto	l10674
  4901  01AA                     u4330:
  4902                           	line	61
  4903                           	
  4904  01AA                     l10672:	
  4905                           ;infrared.c: 60: {
  4906                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  4907  01AA  3015               	movlw	low(015h)
  4908  01AB  00A6               	movwf	(?___lwdiv)
  4909  01AC  3000               	movlw	high(015h)
  4910  01AD  00A7               	movwf	((?___lwdiv))+1
  4911  01AE  096A               	comf	(_adcVal),w	;volatile
  4912  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  4913  01B0  096B               	comf	(_adcVal+1),w	;volatile
  4914  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4915  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  4916  01B3  1903               	skipnz
  4917  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4918  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  4919  01B6  3E4D               	addlw	low(04Dh)
  4920  01B7  00A0               	movwf	(?___wmul)
  4921  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  4922  01B9  1803               	skipnc
  4923  01BA  3E01               	addlw	1
  4924  01BB  3E00               	addlw	high(04Dh)
  4925  01BC  00A1               	movwf	1+(?___wmul)
  4926  01BD  300A               	movlw	low(0Ah)
  4927  01BE  00A2               	movwf	0+(?___wmul)+02h
  4928  01BF  3000               	movlw	high(0Ah)
  4929  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  4930  01C1  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  4931  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4932  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4933  01C8  0821               	movf	(1+(?___wmul)),w
  4934  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  4935  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  4936  01CB  0820               	movf	(0+(?___wmul)),w
  4937  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  4938  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  4939                           
  4940  01CE  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4941  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4942  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4943  01D5  0826               	movf	(0+(?___lwdiv)),w
  4944  01D6  3E3C               	addlw	low(03Ch)
  4945  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  4946  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  4947  01D9  00C4               	movwf	(_distance)^080h	;volatile
  4948  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4949  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4950  01DC  0827               	movf	(1+(?___lwdiv)),w
  4951  01DD  1803               	skipnc
  4952  01DE  3E01               	addlw	1
  4953  01DF  3E00               	addlw	high(03Ch)
  4954  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  4955  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  4956  01E2  00C5               	movwf	1+(_distance)^080h	;volatile
  4957                           	line	62
  4958                           ;infrared.c: 62: }
  4959  01E3  2A37               	goto	l2981
  4960                           	line	63
  4961                           	
  4962  01E4                     l2978:	
  4963                           	
  4964  01E4                     l10674:	
  4965                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  4966  01E4  3000               	movlw	high(02Bh)
  4967  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4968  01E6  026B               	subwf	(_adcVal+1),w	;volatile
  4969  01E7  302B               	movlw	low(02Bh)
  4970  01E8  1903               	skipnz
  4971  01E9  026A               	subwf	(_adcVal),w	;volatile
  4972  01EA  1C03               	skipc
  4973  01EB  29ED               	goto	u4341
  4974  01EC  29EE               	goto	u4340
  4975  01ED                     u4341:
  4976  01ED  2A37               	goto	l2981
  4977  01EE                     u4340:
  4978                           	
  4979  01EE                     l10676:	
  4980  01EE  3000               	movlw	high(038h)
  4981  01EF  026B               	subwf	(_adcVal+1),w	;volatile
  4982  01F0  3038               	movlw	low(038h)
  4983  01F1  1903               	skipnz
  4984  01F2  026A               	subwf	(_adcVal),w	;volatile
  4985  01F3  1803               	skipnc
  4986  01F4  29F6               	goto	u4351
  4987  01F5  29F7               	goto	u4350
  4988  01F6                     u4351:
  4989  01F6  2A37               	goto	l2981
  4990  01F7                     u4350:
  4991                           	line	65
  4992                           	
  4993  01F7                     l10678:	
  4994                           ;infrared.c: 64: {
  4995                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  4996  01F7  300D               	movlw	low(0Dh)
  4997  01F8  00A6               	movwf	(?___lwdiv)
  4998  01F9  3000               	movlw	high(0Dh)
  4999  01FA  00A7               	movwf	((?___lwdiv))+1
  5000  01FB  096A               	comf	(_adcVal),w	;volatile
  5001  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  5002  01FD  096B               	comf	(_adcVal+1),w	;volatile
  5003  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5004  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  5005  0200  1903               	skipnz
  5006  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5007  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  5008  0203  3E38               	addlw	low(038h)
  5009  0204  00A0               	movwf	(?___wmul)
  5010  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  5011  0206  1803               	skipnc
  5012  0207  3E01               	addlw	1
  5013  0208  3E00               	addlw	high(038h)
  5014  0209  00A1               	movwf	1+(?___wmul)
  5015  020A  300A               	movlw	low(0Ah)
  5016  020B  00A2               	movwf	0+(?___wmul)+02h
  5017  020C  3000               	movlw	high(0Ah)
  5018  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  5019  020E  120A  158A  23DE   	fcall	___wmul
              120A  118A         
  5020  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  5021  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  5022  0215  0821               	movf	(1+(?___wmul)),w
  5023  0216  01A9               	clrf	1+(?___lwdiv)+02h
  5024  0217  07A9               	addwf	1+(?___lwdiv)+02h
  5025  0218  0820               	movf	(0+(?___wmul)),w
  5026  0219  01A8               	clrf	0+(?___lwdiv)+02h
  5027  021A  07A8               	addwf	0+(?___lwdiv)+02h
  5028                           
  5029  021B  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  5030  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  5031  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  5032  0222  0826               	movf	(0+(?___lwdiv)),w
  5033  0223  3E46               	addlw	low(046h)
  5034  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  5035  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  5036  0226  00C4               	movwf	(_distance)^080h	;volatile
  5037  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  5038  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  5039  0229  0827               	movf	(1+(?___lwdiv)),w
  5040  022A  1803               	skipnc
  5041  022B  3E01               	addlw	1
  5042  022C  3E00               	addlw	high(046h)
  5043  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  5044  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  5045  022F  00C5               	movwf	1+(_distance)^080h	;volatile
  5046  0230  2A37               	goto	l2981
  5047                           	line	66
  5048                           	
  5049  0231                     l2980:	
  5050  0231  2A37               	goto	l2981
  5051                           	line	67
  5052                           	
  5053  0232                     l2979:	
  5054  0232  2A37               	goto	l2981
  5055                           	
  5056  0233                     l2977:	
  5057  0233  2A37               	goto	l2981
  5058                           	
  5059  0234                     l2975:	
  5060  0234  2A37               	goto	l2981
  5061                           	
  5062  0235                     l2973:	
  5063  0235  2A37               	goto	l2981
  5064                           	
  5065  0236                     l2971:	
  5066  0236  2A37               	goto	l2981
  5067                           	
  5068  0237                     l2969:	
  5069                           	
  5070  0237                     l2981:	
  5071  0237  0008               	return
  5072                           	opt stack 0
  5073                           GLOBAL	__end_of_ADCconvert
  5074  0238                     	__end_of_ADCconvert:
  5075 ;; =============== function _ADCconvert ends ============
  5076                           
  5077                           	signat	_ADCconvert,88
  5078                           	global	_robotTurn
  5079                           psect	text896,local,class=CODE,delta=2
  5080                           global __ptext896
  5081  0709                     __ptext896:
  5082                           
  5083 ;; *************** function _robotTurn *****************
  5084 ;; Defined at:
  5085 ;;		line 84 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  distance        2    2[BANK0 ] int 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;		None               void
  5092 ;; Registers used:
  5093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         0       2       0       0       0
  5100 ;;      Locals:         0       0       0       0       0
  5101 ;;      Temps:          0       1       0       0       0
  5102 ;;      Totals:         0       3       0       0       0
  5103 ;;Total ram usage:        3 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    4
  5106 ;; This function calls:
  5107 ;;		_ser_putch
  5108 ;; This function is called by:
  5109 ;;		_main
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           psect	text896
  5113                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5114                           	line	84
  5115                           	global	__size_of_robotTurn
  5116  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5117                           	
  5118  0709                     _robotTurn:	
  5119                           	opt	stack 3
  5120                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5121                           	line	87
  5122                           	
  5123  0709                     l10628:	
  5124                           ;robot.c: 87: turnlowByte = (unsigned char) (distance) ;
  5125  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  5126  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  5127  070B  0822               	movf	(robotTurn@distance),w
  5128  070C  00A4               	movwf	(??_robotTurn+0)+0
  5129  070D  0824               	movf	(??_robotTurn+0)+0,w
  5130  070E  1683               	bsf	status, 5	;RP0=1, select bank1
  5131  070F  1303               	bcf	status, 6	;RP1=0, select bank1
  5132  0710  00DB               	movwf	(_turnlowByte)^080h
  5133                           	line	88
  5134                           	
  5135  0711                     l10630:	
  5136                           ;robot.c: 88: turnhighByte = (unsigned char) (distance >> 8);
  5137  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  5138  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  5139  0713  0823               	movf	(robotTurn@distance+1),w
  5140  0714  00A4               	movwf	(??_robotTurn+0)+0
  5141  0715  0824               	movf	(??_robotTurn+0)+0,w
  5142  0716  1683               	bsf	status, 5	;RP0=1, select bank1
  5143  0717  1303               	bcf	status, 6	;RP1=0, select bank1
  5144  0718  00DA               	movwf	(_turnhighByte)^080h
  5145                           	line	89
  5146                           	
  5147  0719                     l10632:	
  5148                           ;robot.c: 89: if (distance >= 0)
  5149  0719  1283               	bcf	status, 5	;RP0=0, select bank0
  5150  071A  1303               	bcf	status, 6	;RP1=0, select bank0
  5151  071B  1BA3               	btfsc	(robotTurn@distance+1),7
  5152  071C  2F1E               	goto	u4211
  5153  071D  2F1F               	goto	u4210
  5154  071E                     u4211:
  5155  071E  2F3E               	goto	l10636
  5156  071F                     u4210:
  5157                           	line	91
  5158                           	
  5159  071F                     l10634:	
  5160                           ;robot.c: 90: {
  5161                           ;robot.c: 91: ser_putch(137);
  5162  071F  3089               	movlw	(089h)
  5163  0720  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5164                           	line	93
  5165                           ;robot.c: 93: ser_putch(0);
  5166  0725  3000               	movlw	(0)
  5167  0726  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5168                           	line	95
  5169                           ;robot.c: 95: ser_putch(100);
  5170  072B  3064               	movlw	(064h)
  5171  072C  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5172                           	line	97
  5173                           ;robot.c: 97: ser_putch(0);
  5174  0731  3000               	movlw	(0)
  5175  0732  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5176                           	line	99
  5177                           ;robot.c: 99: ser_putch(1);
  5178  0737  3001               	movlw	(01h)
  5179  0738  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5180                           	line	100
  5181                           ;robot.c: 100: }
  5182  073D  2F5C               	goto	l6712
  5183                           	line	101
  5184                           	
  5185  073E                     l6711:	
  5186                           	line	103
  5187                           	
  5188  073E                     l10636:	
  5189                           ;robot.c: 101: else
  5190                           ;robot.c: 102: {
  5191                           ;robot.c: 103: ser_putch(137);
  5192  073E  3089               	movlw	(089h)
  5193  073F  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5194                           	line	105
  5195                           ;robot.c: 105: ser_putch(0);
  5196  0744  3000               	movlw	(0)
  5197  0745  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5198                           	line	107
  5199                           ;robot.c: 107: ser_putch(100);
  5200  074A  3064               	movlw	(064h)
  5201  074B  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5202                           	line	109
  5203                           ;robot.c: 109: ser_putch(255);
  5204  0750  30FF               	movlw	(0FFh)
  5205  0751  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5206                           	line	111
  5207                           ;robot.c: 111: ser_putch(255);
  5208  0756  30FF               	movlw	(0FFh)
  5209  0757  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5210                           	line	112
  5211                           	
  5212  075C                     l6712:	
  5213                           	line	113
  5214                           ;robot.c: 112: }
  5215                           ;robot.c: 113: ser_putch(157);
  5216  075C  309D               	movlw	(09Dh)
  5217  075D  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5218                           	line	115
  5219                           ;robot.c: 115: ser_putch(turnhighByte);
  5220  0762  1683               	bsf	status, 5	;RP0=1, select bank1
  5221  0763  1303               	bcf	status, 6	;RP1=0, select bank1
  5222  0764  085A               	movf	(_turnhighByte)^080h,w
  5223  0765  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5224                           	line	117
  5225                           ;robot.c: 117: ser_putch(turnlowByte);
  5226  076A  1683               	bsf	status, 5	;RP0=1, select bank1
  5227  076B  1303               	bcf	status, 6	;RP1=0, select bank1
  5228  076C  085B               	movf	(_turnlowByte)^080h,w
  5229  076D  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5230                           	line	119
  5231                           ;robot.c: 119: ser_putch(137);
  5232  0772  3089               	movlw	(089h)
  5233  0773  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5234                           	line	121
  5235                           ;robot.c: 121: ser_putch(0);
  5236  0778  3000               	movlw	(0)
  5237  0779  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5238                           	line	123
  5239                           ;robot.c: 123: ser_putch(0);
  5240  077E  3000               	movlw	(0)
  5241  077F  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5242                           	line	125
  5243                           ;robot.c: 125: ser_putch(0);
  5244  0784  3000               	movlw	(0)
  5245  0785  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5246                           	line	127
  5247                           ;robot.c: 127: ser_putch(0);
  5248  078A  3000               	movlw	(0)
  5249  078B  120A  158A  22F7   	fcall	_ser_putch
              120A  118A         
  5250                           	line	128
  5251                           	
  5252  0790                     l6713:	
  5253  0790  0008               	return
  5254                           	opt stack 0
  5255                           GLOBAL	__end_of_robotTurn
  5256  0791                     	__end_of_robotTurn:
  5257 ;; =============== function _robotTurn ends ============
  5258                           
  5259                           	signat	_robotTurn,4216
  5260                           	global	_robotMove
  5261                           psect	text897,local,class=CODE,delta=2
  5262                           global __ptext897
  5263  0F78                     __ptext897:
  5264                           
  5265 ;; *************** function _robotMove *****************
  5266 ;; Defined at:
  5267 ;;		line 37 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  distance        2    2[BANK0 ] int 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;		None               void
  5274 ;; Registers used:
  5275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5281 ;;      Params:         0       2       0       0       0
  5282 ;;      Locals:         0       0       0       0       0
  5283 ;;      Temps:          0       1       0       0       0
  5284 ;;      Totals:         0       3       0       0       0
  5285 ;;Total ram usage:        3 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    4
  5288 ;; This function calls:
  5289 ;;		_ser_putch
  5290 ;; This function is called by:
  5291 ;;		_main
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           psect	text897
  5295                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5296                           	line	37
  5297                           	global	__size_of_robotMove
  5298  0088                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5299                           	
  5300  0F78                     _robotMove:	
  5301                           	opt	stack 3
  5302                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5303                           	line	39
  5304                           	
  5305  0F78                     l10618:	
  5306                           ;robot.c: 39: lowByte = (unsigned char) (distance) ;
  5307  0F78  1283               	bcf	status, 5	;RP0=0, select bank0
  5308  0F79  1303               	bcf	status, 6	;RP1=0, select bank0
  5309  0F7A  0822               	movf	(robotMove@distance),w
  5310  0F7B  00A4               	movwf	(??_robotMove+0)+0
  5311  0F7C  0824               	movf	(??_robotMove+0)+0,w
  5312  0F7D  1683               	bsf	status, 5	;RP0=1, select bank1
  5313  0F7E  1303               	bcf	status, 6	;RP1=0, select bank1
  5314  0F7F  00D7               	movwf	(_lowByte)^080h
  5315                           	line	40
  5316                           	
  5317  0F80                     l10620:	
  5318                           ;robot.c: 40: highByte = (unsigned char) (distance >> 8);
  5319  0F80  1283               	bcf	status, 5	;RP0=0, select bank0
  5320  0F81  1303               	bcf	status, 6	;RP1=0, select bank0
  5321  0F82  0823               	movf	(robotMove@distance+1),w
  5322  0F83  00A4               	movwf	(??_robotMove+0)+0
  5323  0F84  0824               	movf	(??_robotMove+0)+0,w
  5324  0F85  1683               	bsf	status, 5	;RP0=1, select bank1
  5325  0F86  1303               	bcf	status, 6	;RP1=0, select bank1
  5326  0F87  00D6               	movwf	(_highByte)^080h
  5327                           	line	41
  5328                           	
  5329  0F88                     l10622:	
  5330                           ;robot.c: 41: if (distance >= 0)
  5331  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  5332  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  5333  0F8A  1BA3               	btfsc	(robotMove@distance+1),7
  5334  0F8B  2F8D               	goto	u4201
  5335  0F8C  2F8E               	goto	u4200
  5336  0F8D                     u4201:
  5337  0F8D  2FAD               	goto	l10626
  5338  0F8E                     u4200:
  5339                           	line	43
  5340                           	
  5341  0F8E                     l10624:	
  5342                           ;robot.c: 42: {
  5343                           ;robot.c: 43: ser_putch(137);
  5344  0F8E  3089               	movlw	(089h)
  5345  0F8F  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5346                           	line	45
  5347                           ;robot.c: 45: ser_putch(0);
  5348  0F94  3000               	movlw	(0)
  5349  0F95  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5350                           	line	47
  5351                           ;robot.c: 47: ser_putch(200);
  5352  0F9A  30C8               	movlw	(0C8h)
  5353  0F9B  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5354                           	line	49
  5355                           ;robot.c: 49: ser_putch(128);
  5356  0FA0  3080               	movlw	(080h)
  5357  0FA1  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5358                           	line	51
  5359                           ;robot.c: 51: ser_putch(0);
  5360  0FA6  3000               	movlw	(0)
  5361  0FA7  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5362                           	line	52
  5363                           ;robot.c: 52: }
  5364  0FAC  2FCB               	goto	l6707
  5365                           	line	53
  5366                           	
  5367  0FAD                     l6706:	
  5368                           	line	55
  5369                           	
  5370  0FAD                     l10626:	
  5371                           ;robot.c: 53: else
  5372                           ;robot.c: 54: {
  5373                           ;robot.c: 55: ser_putch(137);
  5374  0FAD  3089               	movlw	(089h)
  5375  0FAE  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5376                           	line	57
  5377                           ;robot.c: 57: ser_putch(0xff);
  5378  0FB3  30FF               	movlw	(0FFh)
  5379  0FB4  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5380                           	line	59
  5381                           ;robot.c: 59: ser_putch(0x38);
  5382  0FB9  3038               	movlw	(038h)
  5383  0FBA  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5384                           	line	61
  5385                           ;robot.c: 61: ser_putch(128);
  5386  0FBF  3080               	movlw	(080h)
  5387  0FC0  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5388                           	line	63
  5389                           ;robot.c: 63: ser_putch(0);
  5390  0FC5  3000               	movlw	(0)
  5391  0FC6  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5392                           	line	64
  5393                           	
  5394  0FCB                     l6707:	
  5395                           	line	65
  5396                           ;robot.c: 64: }
  5397                           ;robot.c: 65: ser_putch(156);
  5398  0FCB  309C               	movlw	(09Ch)
  5399  0FCC  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5400                           	line	67
  5401                           ;robot.c: 67: ser_putch(highByte);
  5402  0FD1  1683               	bsf	status, 5	;RP0=1, select bank1
  5403  0FD2  1303               	bcf	status, 6	;RP1=0, select bank1
  5404  0FD3  0856               	movf	(_highByte)^080h,w
  5405  0FD4  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5406                           	line	69
  5407                           ;robot.c: 69: ser_putch(lowByte);
  5408  0FD9  1683               	bsf	status, 5	;RP0=1, select bank1
  5409  0FDA  1303               	bcf	status, 6	;RP1=0, select bank1
  5410  0FDB  0857               	movf	(_lowByte)^080h,w
  5411  0FDC  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5412                           	line	71
  5413                           ;robot.c: 71: ser_putch(137);
  5414  0FE1  3089               	movlw	(089h)
  5415  0FE2  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5416                           	line	73
  5417                           ;robot.c: 73: ser_putch(0);
  5418  0FE7  3000               	movlw	(0)
  5419  0FE8  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5420                           	line	75
  5421                           ;robot.c: 75: ser_putch(0);
  5422  0FED  3000               	movlw	(0)
  5423  0FEE  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5424                           	line	77
  5425                           ;robot.c: 77: ser_putch(0);
  5426  0FF3  3000               	movlw	(0)
  5427  0FF4  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5428                           	line	79
  5429                           ;robot.c: 79: ser_putch(0);
  5430  0FF9  3000               	movlw	(0)
  5431  0FFA  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5432                           	line	81
  5433                           	
  5434  0FFF                     l6708:	
  5435  0FFF  0008               	return
  5436                           	opt stack 0
  5437                           GLOBAL	__end_of_robotMove
  5438  1000                     	__end_of_robotMove:
  5439 ;; =============== function _robotMove ends ============
  5440                           
  5441                           	signat	_robotMove,4216
  5442                           	global	_rotate
  5443                           psect	text898,local,class=CODE,delta=2
  5444                           global __ptext898
  5445  0DF1                     __ptext898:
  5446                           
  5447 ;; *************** function _rotate *****************
  5448 ;; Defined at:
  5449 ;;		line 48 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5452 ;;  direction       1    5[BANK0 ] unsigned char 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;  i               2    8[BANK0 ] unsigned int 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;		None               void
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0, pclath, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5464 ;;      Params:         0       3       0       0       0
  5465 ;;      Locals:         0       2       0       0       0
  5466 ;;      Temps:          0       2       0       0       0
  5467 ;;      Totals:         0       7       0       0       0
  5468 ;;Total ram usage:        7 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    4
  5471 ;; This function calls:
  5472 ;;		_spi_transfer
  5473 ;; This function is called by:
  5474 ;;		_calibrateIR
  5475 ;;		_scan360
  5476 ;;		_main
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           psect	text898
  5480                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  5481                           	line	48
  5482                           	global	__size_of_rotate
  5483  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5484                           	
  5485  0DF1                     _rotate:	
  5486                           	opt	stack 3
  5487                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5488                           	line	50
  5489                           	
  5490  0DF1                     l10590:	
  5491                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5492  0DF1  1283               	bcf	status, 5	;RP0=0, select bank0
  5493  0DF2  1303               	bcf	status, 6	;RP1=0, select bank0
  5494  0DF3  1407               	bsf	(56/8),(56)&7
  5495  0DF4  1487               	bsf	(57/8),(57)&7
  5496                           	line	51
  5497                           	
  5498  0DF5                     l10592:	
  5499                           ;steppermotor.c: 51: if (direction == 0)
  5500  0DF5  08A5               	movf	(rotate@direction),f
  5501  0DF6  1D03               	skipz
  5502  0DF7  2DF9               	goto	u4181
  5503  0DF8  2DFA               	goto	u4180
  5504  0DF9                     u4181:
  5505  0DF9  2E01               	goto	l10596
  5506  0DFA                     u4180:
  5507                           	line	52
  5508                           	
  5509  0DFA                     l10594:	
  5510                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5511  0DFA  300F               	movlw	(0Fh)
  5512  0DFB  120A  158A  2272   	fcall	_spi_transfer
              120A  158A         
  5513  0E00  2E08               	goto	l10598
  5514                           	line	53
  5515                           	
  5516  0E01                     l3682:	
  5517                           	line	54
  5518                           	
  5519  0E01                     l10596:	
  5520                           ;steppermotor.c: 53: else
  5521                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5522  0E01  300D               	movlw	(0Dh)
  5523  0E02  120A  158A  2272   	fcall	_spi_transfer
              120A  158A         
  5524  0E07  2E08               	goto	l10598
  5525                           	
  5526  0E08                     l3683:	
  5527                           	line	55
  5528                           	
  5529  0E08                     l10598:	
  5530                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5531  0E08  1283               	bcf	status, 5	;RP0=0, select bank0
  5532  0E09  1303               	bcf	status, 6	;RP1=0, select bank0
  5533  0E0A  1007               	bcf	(56/8),(56)&7
  5534                           	
  5535  0E0B                     l10600:	
  5536  0E0B  1087               	bcf	(57/8),(57)&7
  5537                           	line	56
  5538                           	
  5539  0E0C                     l10602:	
  5540                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5541  0E0C  01A8               	clrf	(rotate@i)
  5542  0E0D  01A9               	clrf	(rotate@i+1)
  5543  0E0E  2E25               	goto	l3684
  5544                           	line	57
  5545                           	
  5546  0E0F                     l3685:	
  5547                           	line	58
  5548                           ;steppermotor.c: 57: {
  5549                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5550  0E0F  1507               	bsf	(58/8),(58)&7
  5551  0E10  0000               	nop
  5552  0E11  1283               	bcf	status, 5	;RP0=0, select bank0
  5553  0E12  1303               	bcf	status, 6	;RP1=0, select bank0
  5554  0E13  1107               	bcf	(58/8),(58)&7
  5555                           	line	59
  5556                           	
  5557  0E14                     l10604:	
  5558                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5559                           	opt asmopt_off
  5560  0E14  3062               movlw	98
  5561  0E15  00A7               movwf	((??_rotate+0)+0+1),f
  5562  0E16  3065               	movlw	101
  5563  0E17  00A6               movwf	((??_rotate+0)+0),f
  5564  0E18                     u4587:
  5565  0E18  0BA6               	decfsz	((??_rotate+0)+0),f
  5566  0E19  2E18               	goto	u4587
  5567  0E1A  0BA7               	decfsz	((??_rotate+0)+0+1),f
  5568  0E1B  2E18               	goto	u4587
  5569  0E1C  2E1D               	nop2
  5570                           opt asmopt_on
  5571                           
  5572                           	line	56
  5573  0E1D  3001               	movlw	low(01h)
  5574  0E1E  1283               	bcf	status, 5	;RP0=0, select bank0
  5575  0E1F  1303               	bcf	status, 6	;RP1=0, select bank0
  5576  0E20  07A8               	addwf	(rotate@i),f
  5577  0E21  1803               	skipnc
  5578  0E22  0AA9               	incf	(rotate@i+1),f
  5579  0E23  3000               	movlw	high(01h)
  5580  0E24  07A9               	addwf	(rotate@i+1),f
  5581                           	
  5582  0E25                     l3684:	
  5583  0E25  0824               	movf	(rotate@numsteps+1),w
  5584  0E26  0229               	subwf	(rotate@i+1),w
  5585  0E27  1D03               	skipz
  5586  0E28  2E2B               	goto	u4195
  5587  0E29  0823               	movf	(rotate@numsteps),w
  5588  0E2A  0228               	subwf	(rotate@i),w
  5589  0E2B                     u4195:
  5590  0E2B  1C03               	skipc
  5591  0E2C  2E2E               	goto	u4191
  5592  0E2D  2E2F               	goto	u4190
  5593  0E2E                     u4191:
  5594  0E2E  2E0F               	goto	l3685
  5595  0E2F                     u4190:
  5596                           	
  5597  0E2F                     l3686:	
  5598                           	line	61
  5599                           ;steppermotor.c: 60: }
  5600                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5601  0E2F  1407               	bsf	(56/8),(56)&7
  5602  0E30  1487               	bsf	(57/8),(57)&7
  5603                           	line	62
  5604                           	
  5605  0E31                     l10606:	
  5606                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5607  0E31  3000               	movlw	(0)
  5608  0E32  120A  158A  2272   	fcall	_spi_transfer
              120A  158A         
  5609                           	line	63
  5610                           	
  5611  0E37                     l10608:	
  5612                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5613  0E37  1283               	bcf	status, 5	;RP0=0, select bank0
  5614  0E38  1303               	bcf	status, 6	;RP1=0, select bank0
  5615  0E39  1007               	bcf	(56/8),(56)&7
  5616                           	
  5617  0E3A                     l10610:	
  5618  0E3A  1087               	bcf	(57/8),(57)&7
  5619                           	line	64
  5620                           	
  5621  0E3B                     l10612:	
  5622                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5623  0E3B  1507               	bsf	(58/8),(58)&7
  5624                           	
  5625  0E3C                     l10614:	
  5626  0E3C  0000               	nop
  5627                           	
  5628  0E3D                     l10616:	
  5629  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5630  0E3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5631  0E3F  1107               	bcf	(58/8),(58)&7
  5632                           	line	65
  5633                           	
  5634  0E40                     l3687:	
  5635  0E40  0008               	return
  5636                           	opt stack 0
  5637                           GLOBAL	__end_of_rotate
  5638  0E41                     	__end_of_rotate:
  5639 ;; =============== function _rotate ends ============
  5640                           
  5641                           	signat	_rotate,8312
  5642                           	global	_robo_init
  5643                           psect	text899,local,class=CODE,delta=2
  5644                           global __ptext899
  5645  0A20                     __ptext899:
  5646                           
  5647 ;; *************** function _robo_init *****************
  5648 ;; Defined at:
  5649 ;;		line 9 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;		None               void
  5656 ;; Registers used:
  5657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    4
  5670 ;; This function calls:
  5671 ;;		_ser_putch
  5672 ;; This function is called by:
  5673 ;;		_init
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           psect	text899
  5677                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5678                           	line	9
  5679                           	global	__size_of_robo_init
  5680  000D                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5681                           	
  5682  0A20                     _robo_init:	
  5683                           	opt	stack 2
  5684                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5685                           	line	10
  5686                           	
  5687  0A20                     l10588:	
  5688                           ;robot.c: 10: ser_putch(128);
  5689  0A20  3080               	movlw	(080h)
  5690  0A21  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5691                           	line	11
  5692                           ;robot.c: 11: ser_putch(132);
  5693  0A26  3084               	movlw	(084h)
  5694  0A27  120A  158A  22F7   	fcall	_ser_putch
              120A  158A         
  5695                           	line	15
  5696                           	
  5697  0A2C                     l6697:	
  5698  0A2C  0008               	return
  5699                           	opt stack 0
  5700                           GLOBAL	__end_of_robo_init
  5701  0A2D                     	__end_of_robo_init:
  5702 ;; =============== function _robo_init ends ============
  5703                           
  5704                           	signat	_robo_init,88
  5705                           	global	_lcd_write_data
  5706                           psect	text900,local,class=CODE,delta=2
  5707                           global __ptext900
  5708  0A4C                     __ptext900:
  5709                           
  5710 ;; *************** function _lcd_write_data *****************
  5711 ;; Defined at:
  5712 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  databyte        1    wreg     unsigned char 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  databyte        1    2[BANK0 ] unsigned char 
  5717 ;; Return value:  Size  Location     Type
  5718 ;;		None               void
  5719 ;; Registers used:
  5720 ;;		wreg
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5726 ;;      Params:         0       0       0       0       0
  5727 ;;      Locals:         0       1       0       0       0
  5728 ;;      Temps:          0       2       0       0       0
  5729 ;;      Totals:         0       3       0       0       0
  5730 ;;Total ram usage:        3 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    3
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_lcd_write_string
  5737 ;;		_lcd_write_2_digit_bcd
  5738 ;;		_lcd_write_3_digit_bcd
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           psect	text900
  5742                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5743                           	line	30
  5744                           	global	__size_of_lcd_write_data
  5745  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5746                           	
  5747  0A4C                     _lcd_write_data:	
  5748                           	opt	stack 1
  5749                           ; Regs used in _lcd_write_data: [wreg]
  5750                           ;lcd_write_data@databyte stored from wreg
  5751  0A4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5752  0A4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5753  0A4E  00A2               	movwf	(lcd_write_data@databyte)
  5754                           	line	31
  5755                           	
  5756  0A4F                     l10580:	
  5757                           ;lcd.c: 31: RE2 = 0;
  5758  0A4F  1109               	bcf	(74/8),(74)&7
  5759                           	line	32
  5760                           ;lcd.c: 32: RE1 = 0;
  5761  0A50  1089               	bcf	(73/8),(73)&7
  5762                           	line	33
  5763                           ;lcd.c: 33: RE0 = 1;
  5764  0A51  1409               	bsf	(72/8),(72)&7
  5765                           	line	34
  5766                           	
  5767  0A52                     l10582:	
  5768                           ;lcd.c: 34: PORTD = databyte;
  5769  0A52  0822               	movf	(lcd_write_data@databyte),w
  5770  0A53  0088               	movwf	(8)	;volatile
  5771                           	line	35
  5772                           	
  5773  0A54                     l10584:	
  5774                           ;lcd.c: 35: RE2 = 1;
  5775  0A54  1509               	bsf	(74/8),(74)&7
  5776                           	line	36
  5777                           	
  5778  0A55                     l10586:	
  5779                           ;lcd.c: 36: RE2 = 0;
  5780  0A55  1109               	bcf	(74/8),(74)&7
  5781                           	line	37
  5782                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5783                           	opt asmopt_off
  5784  0A56  3007               movlw	7
  5785  0A57  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  5786  0A58  307D               	movlw	125
  5787  0A59  00A0               movwf	((??_lcd_write_data+0)+0),f
  5788  0A5A                     u4597:
  5789  0A5A  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  5790  0A5B  2A5A               	goto	u4597
  5791  0A5C  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  5792  0A5D  2A5A               	goto	u4597
  5793                           opt asmopt_on
  5794                           
  5795                           	line	38
  5796                           	
  5797  0A5E                     l1402:	
  5798  0A5E  0008               	return
  5799                           	opt stack 0
  5800                           GLOBAL	__end_of_lcd_write_data
  5801  0A5F                     	__end_of_lcd_write_data:
  5802 ;; =============== function _lcd_write_data ends ============
  5803                           
  5804                           	signat	_lcd_write_data,4216
  5805                           	global	_lcd_write_control
  5806                           psect	text901,local,class=CODE,delta=2
  5807                           global __ptext901
  5808  0A86                     __ptext901:
  5809                           
  5810 ;; *************** function _lcd_write_control *****************
  5811 ;; Defined at:
  5812 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  databyte        1    wreg     unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  databyte        1    2[BANK0 ] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;		None               void
  5819 ;; Registers used:
  5820 ;;		wreg
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5826 ;;      Params:         0       0       0       0       0
  5827 ;;      Locals:         0       1       0       0       0
  5828 ;;      Temps:          0       2       0       0       0
  5829 ;;      Totals:         0       3       0       0       0
  5830 ;;Total ram usage:        3 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    3
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_lcd_set_cursor
  5837 ;;		_lcd_init
  5838 ;;		_UpdateDisplay
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           psect	text901
  5842                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5843                           	line	18
  5844                           	global	__size_of_lcd_write_control
  5845  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  5846                           	
  5847  0A86                     _lcd_write_control:	
  5848                           	opt	stack 1
  5849                           ; Regs used in _lcd_write_control: [wreg]
  5850                           ;lcd_write_control@databyte stored from wreg
  5851  0A86  1283               	bcf	status, 5	;RP0=0, select bank0
  5852  0A87  1303               	bcf	status, 6	;RP1=0, select bank0
  5853  0A88  00A2               	movwf	(lcd_write_control@databyte)
  5854                           	line	19
  5855                           	
  5856  0A89                     l10572:	
  5857                           ;lcd.c: 19: RE2 = 0;
  5858  0A89  1109               	bcf	(74/8),(74)&7
  5859                           	line	20
  5860                           ;lcd.c: 20: RE1 = 0;
  5861  0A8A  1089               	bcf	(73/8),(73)&7
  5862                           	line	21
  5863                           ;lcd.c: 21: RE0 = 0;
  5864  0A8B  1009               	bcf	(72/8),(72)&7
  5865                           	line	22
  5866                           	
  5867  0A8C                     l10574:	
  5868                           ;lcd.c: 22: PORTD = databyte;
  5869  0A8C  0822               	movf	(lcd_write_control@databyte),w
  5870  0A8D  0088               	movwf	(8)	;volatile
  5871                           	line	23
  5872                           	
  5873  0A8E                     l10576:	
  5874                           ;lcd.c: 23: RE2 = 1;
  5875  0A8E  1509               	bsf	(74/8),(74)&7
  5876                           	line	24
  5877                           	
  5878  0A8F                     l10578:	
  5879                           ;lcd.c: 24: RE2 = 0;
  5880  0A8F  1109               	bcf	(74/8),(74)&7
  5881                           	line	25
  5882                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5883                           	opt asmopt_off
  5884  0A90  300D               movlw	13
  5885  0A91  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  5886  0A92  30FB               	movlw	251
  5887  0A93  00A0               movwf	((??_lcd_write_control+0)+0),f
  5888  0A94                     u4607:
  5889  0A94  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  5890  0A95  2A94               	goto	u4607
  5891  0A96  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  5892  0A97  2A94               	goto	u4607
  5893  0A98  2A99               	nop2
  5894                           opt asmopt_on
  5895                           
  5896                           	line	26
  5897                           	
  5898  0A99                     l1399:	
  5899  0A99  0008               	return
  5900                           	opt stack 0
  5901                           GLOBAL	__end_of_lcd_write_control
  5902  0A9A                     	__end_of_lcd_write_control:
  5903 ;; =============== function _lcd_write_control ends ============
  5904                           
  5905                           	signat	_lcd_write_control,4216
  5906                           	global	_init_adc
  5907                           psect	text902,local,class=CODE,delta=2
  5908                           global __ptext902
  5909  0A9A                     __ptext902:
  5910                           
  5911 ;; *************** function _init_adc *****************
  5912 ;; Defined at:
  5913 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;		None               void
  5920 ;; Registers used:
  5921 ;;		wreg, status,2
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5927 ;;      Params:         0       0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0
  5929 ;;      Temps:          0       1       0       0       0
  5930 ;;      Totals:         0       1       0       0       0
  5931 ;;Total ram usage:        1 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    3
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_init
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           psect	text902
  5941                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5942                           	line	46
  5943                           	global	__size_of_init_adc
  5944  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5945                           	
  5946  0A9A                     _init_adc:	
  5947                           	opt	stack 3
  5948                           ; Regs used in _init_adc: [wreg+status,2]
  5949                           	line	48
  5950                           	
  5951  0A9A                     l10562:	
  5952                           ;adc.c: 48: PORTA = 0;
  5953  0A9A  1283               	bcf	status, 5	;RP0=0, select bank0
  5954  0A9B  1303               	bcf	status, 6	;RP1=0, select bank0
  5955  0A9C  0185               	clrf	(5)	;volatile
  5956                           	line	49
  5957                           	
  5958  0A9D                     l10564:	
  5959                           ;adc.c: 49: TRISA = 0b00111111;
  5960  0A9D  303F               	movlw	(03Fh)
  5961  0A9E  1683               	bsf	status, 5	;RP0=1, select bank1
  5962  0A9F  1303               	bcf	status, 6	;RP1=0, select bank1
  5963  0AA0  0085               	movwf	(133)^080h	;volatile
  5964                           	line	52
  5965                           	
  5966  0AA1                     l10566:	
  5967                           ;adc.c: 52: ADCON0 = 0b10100001;
  5968  0AA1  30A1               	movlw	(0A1h)
  5969  0AA2  1283               	bcf	status, 5	;RP0=0, select bank0
  5970  0AA3  1303               	bcf	status, 6	;RP1=0, select bank0
  5971  0AA4  009F               	movwf	(31)	;volatile
  5972                           	line	53
  5973                           	
  5974  0AA5                     l10568:	
  5975                           ;adc.c: 53: ADCON1 = 0b0000010;
  5976  0AA5  3002               	movlw	(02h)
  5977  0AA6  1683               	bsf	status, 5	;RP0=1, select bank1
  5978  0AA7  1303               	bcf	status, 6	;RP1=0, select bank1
  5979  0AA8  009F               	movwf	(159)^080h	;volatile
  5980                           	line	55
  5981                           	
  5982  0AA9                     l10570:	
  5983                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5984                           	opt asmopt_off
  5985  0AA9  3053               movlw	83
  5986  0AAA  1283               	bcf	status, 5	;RP0=0, select bank0
  5987  0AAB  1303               	bcf	status, 6	;RP1=0, select bank0
  5988  0AAC  00A0               movwf	(??_init_adc+0)+0,f
  5989  0AAD                     u4617:
  5990  0AAD  0BA0               decfsz	(??_init_adc+0)+0,f
  5991  0AAE  2AAD               	goto	u4617
  5992                           opt asmopt_on
  5993                           
  5994                           	line	57
  5995                           	
  5996  0AAF                     l700:	
  5997  0AAF  0008               	return
  5998                           	opt stack 0
  5999                           GLOBAL	__end_of_init_adc
  6000  0AB0                     	__end_of_init_adc:
  6001 ;; =============== function _init_adc ends ============
  6002                           
  6003                           	signat	_init_adc,88
  6004                           	global	_adc_read_channel
  6005                           psect	text903,local,class=CODE,delta=2
  6006                           global __ptext903
  6007  0C95                     __ptext903:
  6008                           
  6009 ;; *************** function _adc_read_channel *****************
  6010 ;; Defined at:
  6011 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  channel         1    wreg     unsigned char 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  channel         1    7[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      unsigned char 
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6025 ;;      Params:         0       0       0       0       0
  6026 ;;      Locals:         0       1       0       0       0
  6027 ;;      Temps:          0       1       0       0       0
  6028 ;;      Totals:         0       2       0       0       0
  6029 ;;Total ram usage:        2 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    4
  6032 ;; This function calls:
  6033 ;;		_adc_read
  6034 ;; This function is called by:
  6035 ;;		_readDistance
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           psect	text903
  6039                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6040                           	line	5
  6041                           	global	__size_of_adc_read_channel
  6042  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6043                           	
  6044  0C95                     _adc_read_channel:	
  6045                           	opt	stack 0
  6046                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6047                           ;adc_read_channel@channel stored from wreg
  6048  0C95  1283               	bcf	status, 5	;RP0=0, select bank0
  6049  0C96  1303               	bcf	status, 6	;RP1=0, select bank0
  6050  0C97  00A7               	movwf	(adc_read_channel@channel)
  6051                           	line	6
  6052                           	
  6053  0C98                     l10546:	
  6054                           ;adc.c: 6: switch(channel)
  6055  0C98  2CB1               	goto	l10554
  6056                           	line	8
  6057                           ;adc.c: 7: {
  6058                           ;adc.c: 8: case 0:
  6059                           	
  6060  0C99                     l690:	
  6061                           	line	9
  6062                           ;adc.c: 9: CHS0 = 0;
  6063  0C99  119F               	bcf	(251/8),(251)&7
  6064                           	line	10
  6065                           ;adc.c: 10: CHS1 = 0;
  6066  0C9A  121F               	bcf	(252/8),(252)&7
  6067                           	line	11
  6068                           ;adc.c: 11: CHS2 = 0;
  6069  0C9B  129F               	bcf	(253/8),(253)&7
  6070                           	line	12
  6071                           ;adc.c: 12: break;
  6072  0C9C  2CC2               	goto	l10556
  6073                           	line	13
  6074                           ;adc.c: 13: case 1:
  6075                           	
  6076  0C9D                     l692:	
  6077                           	line	14
  6078                           ;adc.c: 14: CHS0 = 1;
  6079  0C9D  159F               	bsf	(251/8),(251)&7
  6080                           	line	15
  6081                           ;adc.c: 15: CHS1 = 0;
  6082  0C9E  121F               	bcf	(252/8),(252)&7
  6083                           	line	16
  6084                           ;adc.c: 16: CHS2 = 0;
  6085  0C9F  129F               	bcf	(253/8),(253)&7
  6086                           	line	17
  6087                           ;adc.c: 17: break;
  6088  0CA0  2CC2               	goto	l10556
  6089                           	line	18
  6090                           ;adc.c: 18: case 2:
  6091                           	
  6092  0CA1                     l693:	
  6093                           	line	19
  6094                           ;adc.c: 19: CHS0 = 0;
  6095  0CA1  119F               	bcf	(251/8),(251)&7
  6096                           	line	20
  6097                           ;adc.c: 20: CHS1 = 1;
  6098  0CA2  161F               	bsf	(252/8),(252)&7
  6099                           	line	21
  6100                           ;adc.c: 21: CHS2 = 0;
  6101  0CA3  129F               	bcf	(253/8),(253)&7
  6102                           	line	22
  6103                           ;adc.c: 22: break;
  6104  0CA4  2CC2               	goto	l10556
  6105                           	line	23
  6106                           ;adc.c: 23: case 3:
  6107                           	
  6108  0CA5                     l694:	
  6109                           	line	24
  6110                           ;adc.c: 24: CHS0 = 1;
  6111  0CA5  159F               	bsf	(251/8),(251)&7
  6112                           	line	25
  6113                           ;adc.c: 25: CHS1 = 1;
  6114  0CA6  161F               	bsf	(252/8),(252)&7
  6115                           	line	26
  6116                           ;adc.c: 26: CHS2 = 0;
  6117  0CA7  129F               	bcf	(253/8),(253)&7
  6118                           	line	27
  6119                           ;adc.c: 27: break;
  6120  0CA8  2CC2               	goto	l10556
  6121                           	line	28
  6122                           ;adc.c: 28: case 4:
  6123                           	
  6124  0CA9                     l695:	
  6125                           	line	29
  6126                           ;adc.c: 29: CHS0 = 0;
  6127  0CA9  119F               	bcf	(251/8),(251)&7
  6128                           	line	30
  6129                           ;adc.c: 30: CHS1 = 0;
  6130  0CAA  121F               	bcf	(252/8),(252)&7
  6131                           	line	31
  6132                           ;adc.c: 31: CHS2 = 1;
  6133  0CAB  169F               	bsf	(253/8),(253)&7
  6134                           	line	32
  6135                           ;adc.c: 32: break;
  6136  0CAC  2CC2               	goto	l10556
  6137                           	line	35
  6138                           ;adc.c: 35: default:
  6139                           	
  6140  0CAD                     l696:	
  6141                           	line	36
  6142                           	
  6143  0CAD                     l10548:	
  6144                           ;adc.c: 36: return 0;
  6145  0CAD  3000               	movlw	(0)
  6146  0CAE  2CCF               	goto	l697
  6147                           	
  6148  0CAF                     l10550:	
  6149  0CAF  2CCF               	goto	l697
  6150                           	line	37
  6151                           	
  6152  0CB0                     l10552:	
  6153                           ;adc.c: 37: }
  6154  0CB0  2CC2               	goto	l10556
  6155                           	line	6
  6156                           	
  6157  0CB1                     l689:	
  6158                           	
  6159  0CB1                     l10554:	
  6160  0CB1  0827               	movf	(adc_read_channel@channel),w
  6161                           	; Switch size 1, requested type "space"
  6162                           ; Number of cases is 5, Range of values is 0 to 4
  6163                           ; switch strategies available:
  6164                           ; Name         Instructions Cycles
  6165                           ; simple_byte           16     9 (average)
  6166                           ; direct_byte           23     8 (fixed)
  6167                           ; jumptable            260     6 (fixed)
  6168                           ; rangetable             9     6 (fixed)
  6169                           ; spacedrange           16     9 (fixed)
  6170                           ; locatedrange           5     3 (fixed)
  6171                           ;	Chosen strategy is simple_byte
  6172                           
  6173                           	opt asmopt_off
  6174  0CB2  3A00               	xorlw	0^0	; case 0
  6175  0CB3  1903               	skipnz
  6176  0CB4  2C99               	goto	l690
  6177  0CB5  3A01               	xorlw	1^0	; case 1
  6178  0CB6  1903               	skipnz
  6179  0CB7  2C9D               	goto	l692
  6180  0CB8  3A03               	xorlw	2^1	; case 2
  6181  0CB9  1903               	skipnz
  6182  0CBA  2CA1               	goto	l693
  6183  0CBB  3A01               	xorlw	3^2	; case 3
  6184  0CBC  1903               	skipnz
  6185  0CBD  2CA5               	goto	l694
  6186  0CBE  3A07               	xorlw	4^3	; case 4
  6187  0CBF  1903               	skipnz
  6188  0CC0  2CA9               	goto	l695
  6189  0CC1  2CAD               	goto	l10548
  6190                           	opt asmopt_on
  6191                           
  6192                           	line	37
  6193                           	
  6194  0CC2                     l691:	
  6195                           	line	39
  6196                           	
  6197  0CC2                     l10556:	
  6198                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6199                           	opt asmopt_off
  6200  0CC2  3053               movlw	83
  6201  0CC3  00A6               movwf	(??_adc_read_channel+0)+0,f
  6202  0CC4                     u4627:
  6203  0CC4  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6204  0CC5  2CC4               	goto	u4627
  6205                           opt asmopt_on
  6206                           
  6207                           	line	41
  6208                           	
  6209  0CC6                     l10558:	
  6210                           ;adc.c: 41: return adc_read();
  6211  0CC6  120A  158A  238A   	fcall	_adc_read
              120A  158A         
  6212  0CCB  1283               	bcf	status, 5	;RP0=0, select bank0
  6213  0CCC  1303               	bcf	status, 6	;RP1=0, select bank0
  6214  0CCD  0820               	movf	(0+(?_adc_read)),w
  6215  0CCE  2CCF               	goto	l697
  6216                           	
  6217  0CCF                     l10560:	
  6218                           	line	43
  6219                           	
  6220  0CCF                     l697:	
  6221  0CCF  0008               	return
  6222                           	opt stack 0
  6223                           GLOBAL	__end_of_adc_read_channel
  6224  0CD0                     	__end_of_adc_read_channel:
  6225 ;; =============== function _adc_read_channel ends ============
  6226                           
  6227                           	signat	_adc_read_channel,4217
  6228                           	global	___awmod
  6229                           psect	text904,local,class=CODE,delta=2
  6230                           global __ptext904
  6231  0791                     __ptext904:
  6232                           
  6233 ;; *************** function ___awmod *****************
  6234 ;; Defined at:
  6235 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  divisor         2    0[BANK0 ] int 
  6238 ;;  dividend        2    2[BANK0 ] int 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  sign            1    6[BANK0 ] unsigned char 
  6241 ;;  counter         1    5[BANK0 ] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2    0[BANK0 ] int 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6251 ;;      Params:         0       4       0       0       0
  6252 ;;      Locals:         0       2       0       0       0
  6253 ;;      Temps:          0       1       0       0       0
  6254 ;;      Totals:         0       7       0       0       0
  6255 ;;Total ram usage:        7 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    3
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_UpdateDisplay
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           psect	text904
  6265                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6266                           	line	5
  6267                           	global	__size_of___awmod
  6268  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6269                           	
  6270  0791                     ___awmod:	
  6271                           	opt	stack 2
  6272                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6273                           	line	8
  6274                           	
  6275  0791                     l10490:	
  6276  0791  1283               	bcf	status, 5	;RP0=0, select bank0
  6277  0792  1303               	bcf	status, 6	;RP1=0, select bank0
  6278  0793  01A6               	clrf	(___awmod@sign)
  6279                           	line	9
  6280  0794  1FA3               	btfss	(___awmod@dividend+1),7
  6281  0795  2F97               	goto	u4031
  6282  0796  2F98               	goto	u4030
  6283  0797                     u4031:
  6284  0797  2FA1               	goto	l10494
  6285  0798                     u4030:
  6286                           	line	10
  6287                           	
  6288  0798                     l10492:	
  6289  0798  09A2               	comf	(___awmod@dividend),f
  6290  0799  09A3               	comf	(___awmod@dividend+1),f
  6291  079A  0AA2               	incf	(___awmod@dividend),f
  6292  079B  1903               	skipnz
  6293  079C  0AA3               	incf	(___awmod@dividend+1),f
  6294                           	line	11
  6295  079D  01A6               	clrf	(___awmod@sign)
  6296  079E  1403               	bsf	status,0
  6297  079F  0DA6               	rlf	(___awmod@sign),f
  6298  07A0  2FA1               	goto	l10494
  6299                           	line	12
  6300                           	
  6301  07A1                     l7632:	
  6302                           	line	13
  6303                           	
  6304  07A1                     l10494:	
  6305  07A1  1FA1               	btfss	(___awmod@divisor+1),7
  6306  07A2  2FA4               	goto	u4041
  6307  07A3  2FA5               	goto	u4040
  6308  07A4                     u4041:
  6309  07A4  2FAB               	goto	l10498
  6310  07A5                     u4040:
  6311                           	line	14
  6312                           	
  6313  07A5                     l10496:	
  6314  07A5  09A0               	comf	(___awmod@divisor),f
  6315  07A6  09A1               	comf	(___awmod@divisor+1),f
  6316  07A7  0AA0               	incf	(___awmod@divisor),f
  6317  07A8  1903               	skipnz
  6318  07A9  0AA1               	incf	(___awmod@divisor+1),f
  6319  07AA  2FAB               	goto	l10498
  6320                           	
  6321  07AB                     l7633:	
  6322                           	line	15
  6323                           	
  6324  07AB                     l10498:	
  6325  07AB  0821               	movf	(___awmod@divisor+1),w
  6326  07AC  0420               	iorwf	(___awmod@divisor),w
  6327  07AD  1903               	skipnz
  6328  07AE  2FB0               	goto	u4051
  6329  07AF  2FB1               	goto	u4050
  6330  07B0                     u4051:
  6331  07B0  2FE7               	goto	l10516
  6332  07B1                     u4050:
  6333                           	line	16
  6334                           	
  6335  07B1                     l10500:	
  6336  07B1  01A5               	clrf	(___awmod@counter)
  6337  07B2  1403               	bsf	status,0
  6338  07B3  0DA5               	rlf	(___awmod@counter),f
  6339                           	line	17
  6340  07B4  2FC1               	goto	l10506
  6341                           	
  6342  07B5                     l7636:	
  6343                           	line	18
  6344                           	
  6345  07B5                     l10502:	
  6346  07B5  3001               	movlw	01h
  6347                           	
  6348  07B6                     u4065:
  6349  07B6  1003               	clrc
  6350  07B7  0DA0               	rlf	(___awmod@divisor),f
  6351  07B8  0DA1               	rlf	(___awmod@divisor+1),f
  6352  07B9  3EFF               	addlw	-1
  6353  07BA  1D03               	skipz
  6354  07BB  2FB6               	goto	u4065
  6355                           	line	19
  6356                           	
  6357  07BC                     l10504:	
  6358  07BC  3001               	movlw	(01h)
  6359  07BD  00A4               	movwf	(??___awmod+0)+0
  6360  07BE  0824               	movf	(??___awmod+0)+0,w
  6361  07BF  07A5               	addwf	(___awmod@counter),f
  6362  07C0  2FC1               	goto	l10506
  6363                           	line	20
  6364                           	
  6365  07C1                     l7635:	
  6366                           	line	17
  6367                           	
  6368  07C1                     l10506:	
  6369  07C1  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6370  07C2  2FC4               	goto	u4071
  6371  07C3  2FC5               	goto	u4070
  6372  07C4                     u4071:
  6373  07C4  2FB5               	goto	l10502
  6374  07C5                     u4070:
  6375  07C5  2FC7               	goto	l10508
  6376                           	
  6377  07C6                     l7637:	
  6378  07C6  2FC7               	goto	l10508
  6379                           	line	21
  6380                           	
  6381  07C7                     l7638:	
  6382                           	line	22
  6383                           	
  6384  07C7                     l10508:	
  6385  07C7  0821               	movf	(___awmod@divisor+1),w
  6386  07C8  0223               	subwf	(___awmod@dividend+1),w
  6387  07C9  1D03               	skipz
  6388  07CA  2FCD               	goto	u4085
  6389  07CB  0820               	movf	(___awmod@divisor),w
  6390  07CC  0222               	subwf	(___awmod@dividend),w
  6391  07CD                     u4085:
  6392  07CD  1C03               	skipc
  6393  07CE  2FD0               	goto	u4081
  6394  07CF  2FD1               	goto	u4080
  6395  07D0                     u4081:
  6396  07D0  2FD8               	goto	l10512
  6397  07D1                     u4080:
  6398                           	line	23
  6399                           	
  6400  07D1                     l10510:	
  6401  07D1  0820               	movf	(___awmod@divisor),w
  6402  07D2  02A2               	subwf	(___awmod@dividend),f
  6403  07D3  0821               	movf	(___awmod@divisor+1),w
  6404  07D4  1C03               	skipc
  6405  07D5  03A3               	decf	(___awmod@dividend+1),f
  6406  07D6  02A3               	subwf	(___awmod@dividend+1),f
  6407  07D7  2FD8               	goto	l10512
  6408                           	
  6409  07D8                     l7639:	
  6410                           	line	24
  6411                           	
  6412  07D8                     l10512:	
  6413  07D8  3001               	movlw	01h
  6414                           	
  6415  07D9                     u4095:
  6416  07D9  1003               	clrc
  6417  07DA  0CA1               	rrf	(___awmod@divisor+1),f
  6418  07DB  0CA0               	rrf	(___awmod@divisor),f
  6419  07DC  3EFF               	addlw	-1
  6420  07DD  1D03               	skipz
  6421  07DE  2FD9               	goto	u4095
  6422                           	line	25
  6423                           	
  6424  07DF                     l10514:	
  6425  07DF  3001               	movlw	low(01h)
  6426  07E0  02A5               	subwf	(___awmod@counter),f
  6427  07E1  1D03               	btfss	status,2
  6428  07E2  2FE4               	goto	u4101
  6429  07E3  2FE5               	goto	u4100
  6430  07E4                     u4101:
  6431  07E4  2FC7               	goto	l10508
  6432  07E5                     u4100:
  6433  07E5  2FE7               	goto	l10516
  6434                           	
  6435  07E6                     l7640:	
  6436  07E6  2FE7               	goto	l10516
  6437                           	line	26
  6438                           	
  6439  07E7                     l7634:	
  6440                           	line	27
  6441                           	
  6442  07E7                     l10516:	
  6443  07E7  0826               	movf	(___awmod@sign),w
  6444  07E8  1D03               	skipz
  6445  07E9  2FEB               	goto	u4110
  6446  07EA  2FF1               	goto	l10520
  6447  07EB                     u4110:
  6448                           	line	28
  6449                           	
  6450  07EB                     l10518:	
  6451  07EB  09A2               	comf	(___awmod@dividend),f
  6452  07EC  09A3               	comf	(___awmod@dividend+1),f
  6453  07ED  0AA2               	incf	(___awmod@dividend),f
  6454  07EE  1903               	skipnz
  6455  07EF  0AA3               	incf	(___awmod@dividend+1),f
  6456  07F0  2FF1               	goto	l10520
  6457                           	
  6458  07F1                     l7641:	
  6459                           	line	29
  6460                           	
  6461  07F1                     l10520:	
  6462  07F1  0823               	movf	(___awmod@dividend+1),w
  6463  07F2  01A1               	clrf	(?___awmod+1)
  6464  07F3  07A1               	addwf	(?___awmod+1)
  6465  07F4  0822               	movf	(___awmod@dividend),w
  6466  07F5  01A0               	clrf	(?___awmod)
  6467  07F6  07A0               	addwf	(?___awmod)
  6468                           
  6469  07F7  2FF8               	goto	l7642
  6470                           	
  6471  07F8                     l10522:	
  6472                           	line	30
  6473                           	
  6474  07F8                     l7642:	
  6475  07F8  0008               	return
  6476                           	opt stack 0
  6477                           GLOBAL	__end_of___awmod
  6478  07F9                     	__end_of___awmod:
  6479 ;; =============== function ___awmod ends ============
  6480                           
  6481                           	signat	___awmod,8314
  6482                           	global	___lwmod
  6483                           psect	text905,local,class=CODE,delta=2
  6484                           global __ptext905
  6485  0D14                     __ptext905:
  6486                           
  6487 ;; *************** function ___lwmod *****************
  6488 ;; Defined at:
  6489 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  divisor         2   14[BANK0 ] unsigned int 
  6492 ;;  dividend        2   16[BANK0 ] unsigned int 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  counter         1   19[BANK0 ] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  2   14[BANK0 ] unsigned int 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         0       4       0       0       0
  6505 ;;      Locals:         0       1       0       0       0
  6506 ;;      Temps:          0       1       0       0       0
  6507 ;;      Totals:         0       6       0       0       0
  6508 ;;Total ram usage:        6 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    3
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_sprintf
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           psect	text905
  6518                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6519                           	line	5
  6520                           	global	__size_of___lwmod
  6521  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6522                           	
  6523  0D14                     ___lwmod:	
  6524                           	opt	stack 1
  6525                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6526                           	line	8
  6527                           	
  6528  0D14                     l10468:	
  6529  0D14  1283               	bcf	status, 5	;RP0=0, select bank0
  6530  0D15  1303               	bcf	status, 6	;RP1=0, select bank0
  6531  0D16  082F               	movf	(___lwmod@divisor+1),w
  6532  0D17  042E               	iorwf	(___lwmod@divisor),w
  6533  0D18  1903               	skipnz
  6534  0D19  2D1B               	goto	u3971
  6535  0D1A  2D1C               	goto	u3970
  6536  0D1B                     u3971:
  6537  0D1B  2D52               	goto	l10486
  6538  0D1C                     u3970:
  6539                           	line	9
  6540                           	
  6541  0D1C                     l10470:	
  6542  0D1C  01B3               	clrf	(___lwmod@counter)
  6543  0D1D  1403               	bsf	status,0
  6544  0D1E  0DB3               	rlf	(___lwmod@counter),f
  6545                           	line	10
  6546  0D1F  2D2C               	goto	l10476
  6547                           	
  6548  0D20                     l7442:	
  6549                           	line	11
  6550                           	
  6551  0D20                     l10472:	
  6552  0D20  3001               	movlw	01h
  6553                           	
  6554  0D21                     u3985:
  6555  0D21  1003               	clrc
  6556  0D22  0DAE               	rlf	(___lwmod@divisor),f
  6557  0D23  0DAF               	rlf	(___lwmod@divisor+1),f
  6558  0D24  3EFF               	addlw	-1
  6559  0D25  1D03               	skipz
  6560  0D26  2D21               	goto	u3985
  6561                           	line	12
  6562                           	
  6563  0D27                     l10474:	
  6564  0D27  3001               	movlw	(01h)
  6565  0D28  00B2               	movwf	(??___lwmod+0)+0
  6566  0D29  0832               	movf	(??___lwmod+0)+0,w
  6567  0D2A  07B3               	addwf	(___lwmod@counter),f
  6568  0D2B  2D2C               	goto	l10476
  6569                           	line	13
  6570                           	
  6571  0D2C                     l7441:	
  6572                           	line	10
  6573                           	
  6574  0D2C                     l10476:	
  6575  0D2C  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  6576  0D2D  2D2F               	goto	u3991
  6577  0D2E  2D30               	goto	u3990
  6578  0D2F                     u3991:
  6579  0D2F  2D20               	goto	l10472
  6580  0D30                     u3990:
  6581  0D30  2D32               	goto	l10478
  6582                           	
  6583  0D31                     l7443:	
  6584  0D31  2D32               	goto	l10478
  6585                           	line	14
  6586                           	
  6587  0D32                     l7444:	
  6588                           	line	15
  6589                           	
  6590  0D32                     l10478:	
  6591  0D32  082F               	movf	(___lwmod@divisor+1),w
  6592  0D33  0231               	subwf	(___lwmod@dividend+1),w
  6593  0D34  1D03               	skipz
  6594  0D35  2D38               	goto	u4005
  6595  0D36  082E               	movf	(___lwmod@divisor),w
  6596  0D37  0230               	subwf	(___lwmod@dividend),w
  6597  0D38                     u4005:
  6598  0D38  1C03               	skipc
  6599  0D39  2D3B               	goto	u4001
  6600  0D3A  2D3C               	goto	u4000
  6601  0D3B                     u4001:
  6602  0D3B  2D43               	goto	l10482
  6603  0D3C                     u4000:
  6604                           	line	16
  6605                           	
  6606  0D3C                     l10480:	
  6607  0D3C  082E               	movf	(___lwmod@divisor),w
  6608  0D3D  02B0               	subwf	(___lwmod@dividend),f
  6609  0D3E  082F               	movf	(___lwmod@divisor+1),w
  6610  0D3F  1C03               	skipc
  6611  0D40  03B1               	decf	(___lwmod@dividend+1),f
  6612  0D41  02B1               	subwf	(___lwmod@dividend+1),f
  6613  0D42  2D43               	goto	l10482
  6614                           	
  6615  0D43                     l7445:	
  6616                           	line	17
  6617                           	
  6618  0D43                     l10482:	
  6619  0D43  3001               	movlw	01h
  6620                           	
  6621  0D44                     u4015:
  6622  0D44  1003               	clrc
  6623  0D45  0CAF               	rrf	(___lwmod@divisor+1),f
  6624  0D46  0CAE               	rrf	(___lwmod@divisor),f
  6625  0D47  3EFF               	addlw	-1
  6626  0D48  1D03               	skipz
  6627  0D49  2D44               	goto	u4015
  6628                           	line	18
  6629                           	
  6630  0D4A                     l10484:	
  6631  0D4A  3001               	movlw	low(01h)
  6632  0D4B  02B3               	subwf	(___lwmod@counter),f
  6633  0D4C  1D03               	btfss	status,2
  6634  0D4D  2D4F               	goto	u4021
  6635  0D4E  2D50               	goto	u4020
  6636  0D4F                     u4021:
  6637  0D4F  2D32               	goto	l10478
  6638  0D50                     u4020:
  6639  0D50  2D52               	goto	l10486
  6640                           	
  6641  0D51                     l7446:	
  6642  0D51  2D52               	goto	l10486
  6643                           	line	19
  6644                           	
  6645  0D52                     l7440:	
  6646                           	line	20
  6647                           	
  6648  0D52                     l10486:	
  6649  0D52  0831               	movf	(___lwmod@dividend+1),w
  6650  0D53  01AF               	clrf	(?___lwmod+1)
  6651  0D54  07AF               	addwf	(?___lwmod+1)
  6652  0D55  0830               	movf	(___lwmod@dividend),w
  6653  0D56  01AE               	clrf	(?___lwmod)
  6654  0D57  07AE               	addwf	(?___lwmod)
  6655                           
  6656  0D58  2D59               	goto	l7447
  6657                           	
  6658  0D59                     l10488:	
  6659                           	line	21
  6660                           	
  6661  0D59                     l7447:	
  6662  0D59  0008               	return
  6663                           	opt stack 0
  6664                           GLOBAL	__end_of___lwmod
  6665  0D5A                     	__end_of___lwmod:
  6666 ;; =============== function ___lwmod ends ============
  6667                           
  6668                           	signat	___lwmod,8314
  6669                           	global	___lwdiv
  6670                           psect	text906,local,class=CODE,delta=2
  6671                           global __ptext906
  6672  0DA1                     __ptext906:
  6673                           
  6674 ;; *************** function ___lwdiv *****************
  6675 ;; Defined at:
  6676 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  divisor         2    6[BANK0 ] unsigned int 
  6679 ;;  dividend        2    8[BANK0 ] unsigned int 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  quotient        2   11[BANK0 ] unsigned int 
  6682 ;;  counter         1   13[BANK0 ] unsigned char 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  2    6[BANK0 ] unsigned int 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6692 ;;      Params:         0       4       0       0       0
  6693 ;;      Locals:         0       3       0       0       0
  6694 ;;      Temps:          0       1       0       0       0
  6695 ;;      Totals:         0       8       0       0       0
  6696 ;;Total ram usage:        8 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    3
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_readAvgDistance
  6703 ;;		_ADCconvert
  6704 ;;		_sprintf
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           psect	text906
  6708                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6709                           	line	5
  6710                           	global	__size_of___lwdiv
  6711  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6712                           	
  6713  0DA1                     ___lwdiv:	
  6714                           	opt	stack 1
  6715                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6716                           	line	9
  6717                           	
  6718  0DA1                     l10442:	
  6719  0DA1  1283               	bcf	status, 5	;RP0=0, select bank0
  6720  0DA2  1303               	bcf	status, 6	;RP1=0, select bank0
  6721  0DA3  01AB               	clrf	(___lwdiv@quotient)
  6722  0DA4  01AC               	clrf	(___lwdiv@quotient+1)
  6723                           	line	10
  6724                           	
  6725  0DA5                     l10444:	
  6726  0DA5  0827               	movf	(___lwdiv@divisor+1),w
  6727  0DA6  0426               	iorwf	(___lwdiv@divisor),w
  6728  0DA7  1903               	skipnz
  6729  0DA8  2DAA               	goto	u3901
  6730  0DA9  2DAB               	goto	u3900
  6731  0DAA                     u3901:
  6732  0DAA  2DE9               	goto	l10464
  6733  0DAB                     u3900:
  6734                           	line	11
  6735                           	
  6736  0DAB                     l10446:	
  6737  0DAB  01AD               	clrf	(___lwdiv@counter)
  6738  0DAC  1403               	bsf	status,0
  6739  0DAD  0DAD               	rlf	(___lwdiv@counter),f
  6740                           	line	12
  6741  0DAE  2DBB               	goto	l10452
  6742                           	
  6743  0DAF                     l7432:	
  6744                           	line	13
  6745                           	
  6746  0DAF                     l10448:	
  6747  0DAF  3001               	movlw	01h
  6748                           	
  6749  0DB0                     u3915:
  6750  0DB0  1003               	clrc
  6751  0DB1  0DA6               	rlf	(___lwdiv@divisor),f
  6752  0DB2  0DA7               	rlf	(___lwdiv@divisor+1),f
  6753  0DB3  3EFF               	addlw	-1
  6754  0DB4  1D03               	skipz
  6755  0DB5  2DB0               	goto	u3915
  6756                           	line	14
  6757                           	
  6758  0DB6                     l10450:	
  6759  0DB6  3001               	movlw	(01h)
  6760  0DB7  00AA               	movwf	(??___lwdiv+0)+0
  6761  0DB8  082A               	movf	(??___lwdiv+0)+0,w
  6762  0DB9  07AD               	addwf	(___lwdiv@counter),f
  6763  0DBA  2DBB               	goto	l10452
  6764                           	line	15
  6765                           	
  6766  0DBB                     l7431:	
  6767                           	line	12
  6768                           	
  6769  0DBB                     l10452:	
  6770  0DBB  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  6771  0DBC  2DBE               	goto	u3921
  6772  0DBD  2DBF               	goto	u3920
  6773  0DBE                     u3921:
  6774  0DBE  2DAF               	goto	l10448
  6775  0DBF                     u3920:
  6776  0DBF  2DC1               	goto	l10454
  6777                           	
  6778  0DC0                     l7433:	
  6779  0DC0  2DC1               	goto	l10454
  6780                           	line	16
  6781                           	
  6782  0DC1                     l7434:	
  6783                           	line	17
  6784                           	
  6785  0DC1                     l10454:	
  6786  0DC1  3001               	movlw	01h
  6787                           	
  6788  0DC2                     u3935:
  6789  0DC2  1003               	clrc
  6790  0DC3  0DAB               	rlf	(___lwdiv@quotient),f
  6791  0DC4  0DAC               	rlf	(___lwdiv@quotient+1),f
  6792  0DC5  3EFF               	addlw	-1
  6793  0DC6  1D03               	skipz
  6794  0DC7  2DC2               	goto	u3935
  6795                           	line	18
  6796  0DC8  0827               	movf	(___lwdiv@divisor+1),w
  6797  0DC9  0229               	subwf	(___lwdiv@dividend+1),w
  6798  0DCA  1D03               	skipz
  6799  0DCB  2DCE               	goto	u3945
  6800  0DCC  0826               	movf	(___lwdiv@divisor),w
  6801  0DCD  0228               	subwf	(___lwdiv@dividend),w
  6802  0DCE                     u3945:
  6803  0DCE  1C03               	skipc
  6804  0DCF  2DD1               	goto	u3941
  6805  0DD0  2DD2               	goto	u3940
  6806  0DD1                     u3941:
  6807  0DD1  2DDA               	goto	l10460
  6808  0DD2                     u3940:
  6809                           	line	19
  6810                           	
  6811  0DD2                     l10456:	
  6812  0DD2  0826               	movf	(___lwdiv@divisor),w
  6813  0DD3  02A8               	subwf	(___lwdiv@dividend),f
  6814  0DD4  0827               	movf	(___lwdiv@divisor+1),w
  6815  0DD5  1C03               	skipc
  6816  0DD6  03A9               	decf	(___lwdiv@dividend+1),f
  6817  0DD7  02A9               	subwf	(___lwdiv@dividend+1),f
  6818                           	line	20
  6819                           	
  6820  0DD8                     l10458:	
  6821  0DD8  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6822  0DD9  2DDA               	goto	l10460
  6823                           	line	21
  6824                           	
  6825  0DDA                     l7435:	
  6826                           	line	22
  6827                           	
  6828  0DDA                     l10460:	
  6829  0DDA  3001               	movlw	01h
  6830                           	
  6831  0DDB                     u3955:
  6832  0DDB  1003               	clrc
  6833  0DDC  0CA7               	rrf	(___lwdiv@divisor+1),f
  6834  0DDD  0CA6               	rrf	(___lwdiv@divisor),f
  6835  0DDE  3EFF               	addlw	-1
  6836  0DDF  1D03               	skipz
  6837  0DE0  2DDB               	goto	u3955
  6838                           	line	23
  6839                           	
  6840  0DE1                     l10462:	
  6841  0DE1  3001               	movlw	low(01h)
  6842  0DE2  02AD               	subwf	(___lwdiv@counter),f
  6843  0DE3  1D03               	btfss	status,2
  6844  0DE4  2DE6               	goto	u3961
  6845  0DE5  2DE7               	goto	u3960
  6846  0DE6                     u3961:
  6847  0DE6  2DC1               	goto	l10454
  6848  0DE7                     u3960:
  6849  0DE7  2DE9               	goto	l10464
  6850                           	
  6851  0DE8                     l7436:	
  6852  0DE8  2DE9               	goto	l10464
  6853                           	line	24
  6854                           	
  6855  0DE9                     l7430:	
  6856                           	line	25
  6857                           	
  6858  0DE9                     l10464:	
  6859  0DE9  082C               	movf	(___lwdiv@quotient+1),w
  6860  0DEA  01A7               	clrf	(?___lwdiv+1)
  6861  0DEB  07A7               	addwf	(?___lwdiv+1)
  6862  0DEC  082B               	movf	(___lwdiv@quotient),w
  6863  0DED  01A6               	clrf	(?___lwdiv)
  6864  0DEE  07A6               	addwf	(?___lwdiv)
  6865                           
  6866  0DEF  2DF0               	goto	l7437
  6867                           	
  6868  0DF0                     l10466:	
  6869                           	line	26
  6870                           	
  6871  0DF0                     l7437:	
  6872  0DF0  0008               	return
  6873                           	opt stack 0
  6874                           GLOBAL	__end_of___lwdiv
  6875  0DF1                     	__end_of___lwdiv:
  6876 ;; =============== function ___lwdiv ends ============
  6877                           
  6878                           	signat	___lwdiv,8314
  6879                           	global	___wmul
  6880                           psect	text907,local,class=CODE,delta=2
  6881                           global __ptext907
  6882  0BDE                     __ptext907:
  6883                           
  6884 ;; *************** function ___wmul *****************
  6885 ;; Defined at:
  6886 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6889 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  product         2    4[BANK0 ] unsigned int 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2    0[BANK0 ] unsigned int 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6901 ;;      Params:         0       4       0       0       0
  6902 ;;      Locals:         0       2       0       0       0
  6903 ;;      Temps:          0       0       0       0       0
  6904 ;;      Totals:         0       6       0       0       0
  6905 ;;Total ram usage:        6 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    3
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_ADCconvert
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           psect	text907
  6915                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6916                           	line	3
  6917                           	global	__size_of___wmul
  6918  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6919                           	
  6920  0BDE                     ___wmul:	
  6921                           	opt	stack 1
  6922                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6923                           	line	4
  6924                           	
  6925  0BDE                     l10430:	
  6926  0BDE  1283               	bcf	status, 5	;RP0=0, select bank0
  6927  0BDF  1303               	bcf	status, 6	;RP1=0, select bank0
  6928  0BE0  01A4               	clrf	(___wmul@product)
  6929  0BE1  01A5               	clrf	(___wmul@product+1)
  6930  0BE2  2BE3               	goto	l10432
  6931                           	line	6
  6932                           	
  6933  0BE3                     l7424:	
  6934                           	line	7
  6935                           	
  6936  0BE3                     l10432:	
  6937  0BE3  1C20               	btfss	(___wmul@multiplier),(0)&7
  6938  0BE4  2BE6               	goto	u3861
  6939  0BE5  2BE7               	goto	u3860
  6940  0BE6                     u3861:
  6941  0BE6  2BED               	goto	l7425
  6942  0BE7                     u3860:
  6943                           	line	8
  6944                           	
  6945  0BE7                     l10434:	
  6946  0BE7  0822               	movf	(___wmul@multiplicand),w
  6947  0BE8  07A4               	addwf	(___wmul@product),f
  6948  0BE9  1803               	skipnc
  6949  0BEA  0AA5               	incf	(___wmul@product+1),f
  6950  0BEB  0823               	movf	(___wmul@multiplicand+1),w
  6951  0BEC  07A5               	addwf	(___wmul@product+1),f
  6952                           	
  6953  0BED                     l7425:	
  6954                           	line	9
  6955  0BED  3001               	movlw	01h
  6956                           	
  6957  0BEE                     u3875:
  6958  0BEE  1003               	clrc
  6959  0BEF  0DA2               	rlf	(___wmul@multiplicand),f
  6960  0BF0  0DA3               	rlf	(___wmul@multiplicand+1),f
  6961  0BF1  3EFF               	addlw	-1
  6962  0BF2  1D03               	skipz
  6963  0BF3  2BEE               	goto	u3875
  6964                           	line	10
  6965                           	
  6966  0BF4                     l10436:	
  6967  0BF4  3001               	movlw	01h
  6968                           	
  6969  0BF5                     u3885:
  6970  0BF5  1003               	clrc
  6971  0BF6  0CA1               	rrf	(___wmul@multiplier+1),f
  6972  0BF7  0CA0               	rrf	(___wmul@multiplier),f
  6973  0BF8  3EFF               	addlw	-1
  6974  0BF9  1D03               	skipz
  6975  0BFA  2BF5               	goto	u3885
  6976                           	line	11
  6977  0BFB  0821               	movf	((___wmul@multiplier+1)),w
  6978  0BFC  0420               	iorwf	((___wmul@multiplier)),w
  6979  0BFD  1D03               	skipz
  6980  0BFE  2C00               	goto	u3891
  6981  0BFF  2C01               	goto	u3890
  6982  0C00                     u3891:
  6983  0C00  2BE3               	goto	l10432
  6984  0C01                     u3890:
  6985  0C01  2C02               	goto	l10438
  6986                           	
  6987  0C02                     l7426:	
  6988                           	line	12
  6989                           	
  6990  0C02                     l10438:	
  6991  0C02  0825               	movf	(___wmul@product+1),w
  6992  0C03  01A1               	clrf	(?___wmul+1)
  6993  0C04  07A1               	addwf	(?___wmul+1)
  6994  0C05  0824               	movf	(___wmul@product),w
  6995  0C06  01A0               	clrf	(?___wmul)
  6996  0C07  07A0               	addwf	(?___wmul)
  6997                           
  6998  0C08  2C09               	goto	l7427
  6999                           	
  7000  0C09                     l10440:	
  7001                           	line	13
  7002                           	
  7003  0C09                     l7427:	
  7004  0C09  0008               	return
  7005                           	opt stack 0
  7006                           GLOBAL	__end_of___wmul
  7007  0C0A                     	__end_of___wmul:
  7008 ;; =============== function ___wmul ends ============
  7009                           
  7010                           	signat	___wmul,8314
  7011                           	global	_ser_putch
  7012                           psect	text908,local,class=CODE,delta=2
  7013                           global __ptext908
  7014  0AF7                     __ptext908:
  7015                           
  7016 ;; *************** function _ser_putch *****************
  7017 ;; Defined at:
  7018 ;;		line 70 in file "H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  c               1    wreg     unsigned char 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  c               1    1[BANK0 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;		None               void
  7025 ;; Registers used:
  7026 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7032 ;;      Params:         0       0       0       0       0
  7033 ;;      Locals:         0       1       0       0       0
  7034 ;;      Temps:          0       1       0       0       0
  7035 ;;      Totals:         0       2       0       0       0
  7036 ;;Total ram usage:        2 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    3
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_robo_init
  7043 ;;		_robot_read
  7044 ;;		_robotMove
  7045 ;;		_robotTurn
  7046 ;;		_ser_puts
  7047 ;;		_ser_puts2
  7048 ;;		_ser_puthex
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           psect	text908
  7052                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  7053                           	line	70
  7054                           	global	__size_of_ser_putch
  7055  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7056                           	
  7057  0AF7                     _ser_putch:	
  7058                           	opt	stack 2
  7059                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7060                           ;ser_putch@c stored from wreg
  7061  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  7062  0AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  7063  0AF9  00A1               	movwf	(ser_putch@c)
  7064                           	line	71
  7065                           	
  7066  0AFA                     l10344:	
  7067                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  7068  0AFA  2AFC               	goto	l10346
  7069                           	
  7070  0AFB                     l4428:	
  7071                           	line	72
  7072                           ;ser.c: 72: continue;
  7073  0AFB  2AFC               	goto	l10346
  7074                           	
  7075  0AFC                     l4427:	
  7076                           	line	71
  7077                           	
  7078  0AFC                     l10346:	
  7079  0AFC  087D               	movf	(_txiptr),w	;volatile
  7080  0AFD  3E01               	addlw	01h
  7081  0AFE  390F               	andlw	0Fh
  7082  0AFF  066F               	xorwf	(_txoptr),w	;volatile
  7083  0B00  1903               	skipnz
  7084  0B01  2B03               	goto	u3651
  7085  0B02  2B04               	goto	u3650
  7086  0B03                     u3651:
  7087  0B03  2AFC               	goto	l10346
  7088  0B04                     u3650:
  7089                           	
  7090  0B04                     l4429:	
  7091                           	line	73
  7092                           ;ser.c: 73: GIE=0;
  7093  0B04  138B               	bcf	(95/8),(95)&7
  7094                           	line	74
  7095                           	
  7096  0B05                     l10348:	
  7097                           ;ser.c: 74: txfifo[txiptr] = c;
  7098  0B05  0821               	movf	(ser_putch@c),w
  7099  0B06  00A0               	movwf	(??_ser_putch+0)+0
  7100  0B07  087D               	movf	(_txiptr),w
  7101  0B08  3EB0               	addlw	_txfifo&0ffh
  7102  0B09  0084               	movwf	fsr0
  7103  0B0A  0820               	movf	(??_ser_putch+0)+0,w
  7104  0B0B  1383               	bcf	status, 7	;select IRP bank1
  7105  0B0C  0080               	movwf	indf
  7106                           	line	75
  7107                           	
  7108  0B0D                     l10350:	
  7109                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  7110  0B0D  087D               	movf	(_txiptr),w	;volatile
  7111  0B0E  3E01               	addlw	01h
  7112  0B0F  390F               	andlw	0Fh
  7113  0B10  00A0               	movwf	(??_ser_putch+0)+0
  7114  0B11  0820               	movf	(??_ser_putch+0)+0,w
  7115  0B12  00FD               	movwf	(_txiptr)	;volatile
  7116                           	line	76
  7117                           	
  7118  0B13                     l10352:	
  7119                           ;ser.c: 76: TXIE=1;
  7120  0B13  1683               	bsf	status, 5	;RP0=1, select bank1
  7121  0B14  1303               	bcf	status, 6	;RP1=0, select bank1
  7122  0B15  160C               	bsf	(1124/8)^080h,(1124)&7
  7123                           	line	77
  7124                           	
  7125  0B16                     l10354:	
  7126                           ;ser.c: 77: GIE=1;
  7127  0B16  178B               	bsf	(95/8),(95)&7
  7128                           	line	78
  7129                           	
  7130  0B17                     l4430:	
  7131  0B17  0008               	return
  7132                           	opt stack 0
  7133                           GLOBAL	__end_of_ser_putch
  7134  0B18                     	__end_of_ser_putch:
  7135 ;; =============== function _ser_putch ends ============
  7136                           
  7137                           	signat	_ser_putch,4216
  7138                           	global	_ser_isrx
  7139                           psect	text909,local,class=CODE,delta=2
  7140                           global __ptext909
  7141  0AC6                     __ptext909:
  7142                           
  7143 ;; *************** function _ser_isrx *****************
  7144 ;; Defined at:
  7145 ;;		line 45 in file "H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;		None               void
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7159 ;;      Params:         0       0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0
  7162 ;;      Totals:         0       0       0       0       0
  7163 ;;Total ram usage:        0 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    3
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_ser_getch
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           psect	text909
  7173                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  7174                           	line	45
  7175                           	global	__size_of_ser_isrx
  7176  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  7177                           	
  7178  0AC6                     _ser_isrx:	
  7179                           	opt	stack 2
  7180                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  7181                           	line	46
  7182                           	
  7183  0AC6                     l10328:	
  7184                           ;ser.c: 46: if(OERR) {
  7185  0AC6  1283               	bcf	status, 5	;RP0=0, select bank0
  7186  0AC7  1303               	bcf	status, 6	;RP1=0, select bank0
  7187  0AC8  1C98               	btfss	(193/8),(193)&7
  7188  0AC9  2ACB               	goto	u3631
  7189  0ACA  2ACC               	goto	u3630
  7190  0ACB                     u3631:
  7191  0ACB  2AD1               	goto	l10336
  7192  0ACC                     u3630:
  7193                           	line	47
  7194                           	
  7195  0ACC                     l10330:	
  7196                           ;ser.c: 47: CREN = 0;
  7197  0ACC  1218               	bcf	(196/8),(196)&7
  7198                           	line	48
  7199                           ;ser.c: 48: CREN = 1;
  7200  0ACD  1618               	bsf	(196/8),(196)&7
  7201                           	line	49
  7202                           	
  7203  0ACE                     l10332:	
  7204                           ;ser.c: 49: return 0;
  7205  0ACE  1003               	clrc
  7206                           	
  7207  0ACF  2ADC               	goto	l4418
  7208                           	
  7209  0AD0                     l10334:	
  7210  0AD0  2ADC               	goto	l4418
  7211                           	line	50
  7212                           	
  7213  0AD1                     l4417:	
  7214                           	line	51
  7215                           	
  7216  0AD1                     l10336:	
  7217                           ;ser.c: 50: }
  7218                           ;ser.c: 51: return (rxiptr!=rxoptr);
  7219  0AD1  086D               	movf	(_rxiptr),w	;volatile
  7220  0AD2  066E               	xorwf	(_rxoptr),w	;volatile
  7221  0AD3  1D03               	skipz
  7222  0AD4  2AD6               	goto	u3641
  7223  0AD5  2AD7               	goto	u3640
  7224  0AD6                     u3641:
  7225  0AD6  2AD9               	goto	l10340
  7226  0AD7                     u3640:
  7227                           	
  7228  0AD7                     l10338:	
  7229  0AD7  1003               	clrc
  7230                           	
  7231  0AD8  2ADC               	goto	l4418
  7232                           	
  7233  0AD9                     l10066:	
  7234                           	
  7235  0AD9                     l10340:	
  7236  0AD9  1403               	setc
  7237                           	
  7238  0ADA  2ADC               	goto	l4418
  7239                           	
  7240  0ADB                     l10068:	
  7241  0ADB  2ADC               	goto	l4418
  7242                           	
  7243  0ADC                     l10342:	
  7244                           	line	52
  7245                           	
  7246  0ADC                     l4418:	
  7247  0ADC  0008               	return
  7248                           	opt stack 0
  7249                           GLOBAL	__end_of_ser_isrx
  7250  0ADD                     	__end_of_ser_isrx:
  7251 ;; =============== function _ser_isrx ends ============
  7252                           
  7253                           	signat	_ser_isrx,88
  7254                           	global	_spi_transfer
  7255                           psect	text910,local,class=CODE,delta=2
  7256                           global __ptext910
  7257  0A72                     __ptext910:
  7258                           
  7259 ;; *************** function _spi_transfer *****************
  7260 ;; Defined at:
  7261 ;;		line 34 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  data            1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  data            1    2[BANK0 ] unsigned char 
  7266 ;;  temp            1    1[BANK0 ] unsigned char 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      unsigned char 
  7269 ;; Registers used:
  7270 ;;		wreg
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7276 ;;      Params:         0       0       0       0       0
  7277 ;;      Locals:         0       2       0       0       0
  7278 ;;      Temps:          0       1       0       0       0
  7279 ;;      Totals:         0       3       0       0       0
  7280 ;;Total ram usage:        3 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    3
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_rotate
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           psect	text910
  7290                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  7291                           	line	34
  7292                           	global	__size_of_spi_transfer
  7293  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7294                           	
  7295  0A72                     _spi_transfer:	
  7296                           	opt	stack 3
  7297                           ; Regs used in _spi_transfer: [wreg]
  7298                           ;spi_transfer@data stored from wreg
  7299  0A72  1283               	bcf	status, 5	;RP0=0, select bank0
  7300  0A73  1303               	bcf	status, 6	;RP1=0, select bank0
  7301  0A74  00A2               	movwf	(spi_transfer@data)
  7302                           	line	35
  7303                           	
  7304  0A75                     l10256:	
  7305                           ;steppermotor.c: 35: unsigned char temp = 0;
  7306  0A75  01A1               	clrf	(spi_transfer@temp)
  7307                           	line	37
  7308                           ;steppermotor.c: 37: SSPIF = 0;
  7309  0A76  118C               	bcf	(99/8),(99)&7
  7310                           	line	38
  7311                           	
  7312  0A77                     l10258:	
  7313                           ;steppermotor.c: 38: SSPBUF = data;
  7314  0A77  0822               	movf	(spi_transfer@data),w
  7315  0A78  0093               	movwf	(19)	;volatile
  7316                           	line	40
  7317                           ;steppermotor.c: 40: while (SSPIF == 0);
  7318  0A79  2A7A               	goto	l3676
  7319                           	
  7320  0A7A                     l3677:	
  7321                           	
  7322  0A7A                     l3676:	
  7323  0A7A  1D8C               	btfss	(99/8),(99)&7
  7324  0A7B  2A7D               	goto	u3581
  7325  0A7C  2A7E               	goto	u3580
  7326  0A7D                     u3581:
  7327  0A7D  2A7A               	goto	l3676
  7328  0A7E                     u3580:
  7329  0A7E  2A7F               	goto	l10260
  7330                           	
  7331  0A7F                     l3678:	
  7332                           	line	41
  7333                           	
  7334  0A7F                     l10260:	
  7335                           ;steppermotor.c: 41: temp = SSPBUF;
  7336  0A7F  0813               	movf	(19),w	;volatile
  7337  0A80  00A0               	movwf	(??_spi_transfer+0)+0
  7338  0A81  0820               	movf	(??_spi_transfer+0)+0,w
  7339  0A82  00A1               	movwf	(spi_transfer@temp)
  7340                           	line	42
  7341                           	
  7342  0A83                     l10262:	
  7343                           ;steppermotor.c: 42: SSPIF = 0;
  7344  0A83  118C               	bcf	(99/8),(99)&7
  7345  0A84  2A85               	goto	l3679
  7346                           	line	44
  7347                           	
  7348  0A85                     l10264:	
  7349                           	line	45
  7350                           ;steppermotor.c: 44: return temp;
  7351                           ;	Return value of _spi_transfer is never used
  7352                           	
  7353  0A85                     l3679:	
  7354  0A85  0008               	return
  7355                           	opt stack 0
  7356                           GLOBAL	__end_of_spi_transfer
  7357  0A86                     	__end_of_spi_transfer:
  7358 ;; =============== function _spi_transfer ends ============
  7359                           
  7360                           	signat	_spi_transfer,4217
  7361                           	global	_Menu
  7362                           psect	text911,local,class=CODE,delta=2
  7363                           global __ptext911
  7364  0D5A                     __ptext911:
  7365                           
  7366 ;; *************** function _Menu *****************
  7367 ;; Defined at:
  7368 ;;		line 180 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  input           1    wreg     unsigned char 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  input           1    0[BANK0 ] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      unsigned char 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7382 ;;      Params:         0       0       0       0       0
  7383 ;;      Locals:         0       1       0       0       0
  7384 ;;      Temps:          0       0       0       0       0
  7385 ;;      Totals:         0       1       0       0       0
  7386 ;;Total ram usage:        1 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    3
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           psect	text911
  7396                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7397                           	line	180
  7398                           	global	__size_of_Menu
  7399  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7400                           	
  7401  0D5A                     _Menu:	
  7402                           	opt	stack 4
  7403                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7404                           ;Menu@input stored from wreg
  7405  0D5A  1283               	bcf	status, 5	;RP0=0, select bank0
  7406  0D5B  1303               	bcf	status, 6	;RP1=0, select bank0
  7407  0D5C  00A0               	movwf	(Menu@input)
  7408                           	line	181
  7409                           	
  7410  0D5D                     l10232:	
  7411                           ;HMI.c: 181: switch (input)
  7412  0D5D  2D8C               	goto	l10250
  7413                           	line	183
  7414                           ;HMI.c: 182: {
  7415                           ;HMI.c: 183: case 1:
  7416                           	
  7417  0D5E                     l5232:	
  7418                           	line	185
  7419                           ;HMI.c: 185: break;
  7420  0D5E  2D9E               	goto	l10252
  7421                           	line	186
  7422                           ;HMI.c: 186: case 2:
  7423                           	
  7424  0D5F                     l5234:	
  7425                           	line	188
  7426                           ;HMI.c: 188: break;
  7427  0D5F  2D9E               	goto	l10252
  7428                           	line	189
  7429                           ;HMI.c: 189: case 3:
  7430                           	
  7431  0D60                     l5235:	
  7432                           	line	190
  7433                           	
  7434  0D60                     l10234:	
  7435                           ;HMI.c: 190: pos--;
  7436  0D60  30FF               	movlw	low(-1)
  7437  0D61  1683               	bsf	status, 5	;RP0=1, select bank1
  7438  0D62  1303               	bcf	status, 6	;RP1=0, select bank1
  7439  0D63  07C6               	addwf	(_pos)^080h,f
  7440  0D64  1803               	skipnc
  7441  0D65  0AC7               	incf	(_pos+1)^080h,f
  7442  0D66  30FF               	movlw	high(-1)
  7443  0D67  07C7               	addwf	(_pos+1)^080h,f
  7444                           	line	191
  7445                           	
  7446  0D68                     l10236:	
  7447                           ;HMI.c: 191: if (pos < 0)
  7448  0D68  1FC7               	btfss	(_pos+1)^080h,7
  7449  0D69  2D6B               	goto	u3561
  7450  0D6A  2D6C               	goto	u3560
  7451  0D6B                     u3561:
  7452  0D6B  2D9E               	goto	l10252
  7453  0D6C                     u3560:
  7454                           	line	192
  7455                           	
  7456  0D6C                     l10238:	
  7457                           ;HMI.c: 192: pos = 5 - 1;
  7458  0D6C  3004               	movlw	low(04h)
  7459  0D6D  00C6               	movwf	(_pos)^080h
  7460  0D6E  3000               	movlw	high(04h)
  7461  0D6F  00C7               	movwf	((_pos)^080h)+1
  7462  0D70  2D9E               	goto	l10252
  7463                           	
  7464  0D71                     l5236:	
  7465                           	line	194
  7466                           ;HMI.c: 194: break;
  7467  0D71  2D9E               	goto	l10252
  7468                           	line	195
  7469                           ;HMI.c: 195: case 4:
  7470                           	
  7471  0D72                     l5237:	
  7472                           	line	196
  7473                           	
  7474  0D72                     l10240:	
  7475                           ;HMI.c: 196: pos++;
  7476  0D72  3001               	movlw	low(01h)
  7477  0D73  1683               	bsf	status, 5	;RP0=1, select bank1
  7478  0D74  1303               	bcf	status, 6	;RP1=0, select bank1
  7479  0D75  07C6               	addwf	(_pos)^080h,f
  7480  0D76  1803               	skipnc
  7481  0D77  0AC7               	incf	(_pos+1)^080h,f
  7482  0D78  3000               	movlw	high(01h)
  7483  0D79  07C7               	addwf	(_pos+1)^080h,f
  7484                           	line	197
  7485                           ;HMI.c: 197: if (pos == 5)
  7486  0D7A  3005               	movlw	05h
  7487  0D7B  0646               	xorwf	(_pos)^080h,w
  7488  0D7C  0447               	iorwf	(_pos+1)^080h,w
  7489  0D7D  1D03               	skipz
  7490  0D7E  2D80               	goto	u3571
  7491  0D7F  2D81               	goto	u3570
  7492  0D80                     u3571:
  7493  0D80  2D9E               	goto	l10252
  7494  0D81                     u3570:
  7495                           	line	198
  7496                           	
  7497  0D81                     l10242:	
  7498                           ;HMI.c: 198: pos = 0;
  7499  0D81  01C6               	clrf	(_pos)^080h
  7500  0D82  01C7               	clrf	(_pos+1)^080h
  7501  0D83  2D9E               	goto	l10252
  7502                           	
  7503  0D84                     l5238:	
  7504                           	line	200
  7505                           ;HMI.c: 200: break;
  7506  0D84  2D9E               	goto	l10252
  7507                           	line	201
  7508                           ;HMI.c: 201: case 5:
  7509                           	
  7510  0D85                     l5239:	
  7511                           	line	202
  7512                           	
  7513  0D85                     l10244:	
  7514                           ;HMI.c: 202: return pos;
  7515  0D85  1683               	bsf	status, 5	;RP0=1, select bank1
  7516  0D86  1303               	bcf	status, 6	;RP1=0, select bank1
  7517  0D87  0846               	movf	(_pos)^080h,w
  7518  0D88  2DA0               	goto	l5240
  7519                           	
  7520  0D89                     l10246:	
  7521  0D89  2DA0               	goto	l5240
  7522                           	line	205
  7523                           ;HMI.c: 205: default:
  7524                           	
  7525  0D8A                     l5241:	
  7526                           	line	207
  7527                           ;HMI.c: 207: break;
  7528  0D8A  2D9E               	goto	l10252
  7529                           	line	208
  7530                           	
  7531  0D8B                     l10248:	
  7532                           ;HMI.c: 208: }
  7533  0D8B  2D9E               	goto	l10252
  7534                           	line	181
  7535                           	
  7536  0D8C                     l5231:	
  7537                           	
  7538  0D8C                     l10250:	
  7539  0D8C  1283               	bcf	status, 5	;RP0=0, select bank0
  7540  0D8D  0820               	movf	(Menu@input),w
  7541                           	; Switch size 1, requested type "space"
  7542                           ; Number of cases is 5, Range of values is 1 to 5
  7543                           ; switch strategies available:
  7544                           ; Name         Instructions Cycles
  7545                           ; simple_byte           16     9 (average)
  7546                           ; direct_byte           26    11 (fixed)
  7547                           ; jumptable            263     9 (fixed)
  7548                           ;	Chosen strategy is simple_byte
  7549                           
  7550                           	opt asmopt_off
  7551  0D8E  3A01               	xorlw	1^0	; case 1
  7552  0D8F  1903               	skipnz
  7553  0D90  2D9E               	goto	l10252
  7554  0D91  3A03               	xorlw	2^1	; case 2
  7555  0D92  1903               	skipnz
  7556  0D93  2D9E               	goto	l10252
  7557  0D94  3A01               	xorlw	3^2	; case 3
  7558  0D95  1903               	skipnz
  7559  0D96  2D60               	goto	l10234
  7560  0D97  3A07               	xorlw	4^3	; case 4
  7561  0D98  1903               	skipnz
  7562  0D99  2D72               	goto	l10240
  7563  0D9A  3A01               	xorlw	5^4	; case 5
  7564  0D9B  1903               	skipnz
  7565  0D9C  2D85               	goto	l10244
  7566  0D9D  2D9E               	goto	l10252
  7567                           	opt asmopt_on
  7568                           
  7569                           	line	208
  7570                           	
  7571  0D9E                     l5233:	
  7572                           	line	209
  7573                           	
  7574  0D9E                     l10252:	
  7575                           ;HMI.c: 209: return 255;
  7576  0D9E  30FF               	movlw	(0FFh)
  7577  0D9F  2DA0               	goto	l5240
  7578                           	
  7579  0DA0                     l10254:	
  7580                           	line	210
  7581                           	
  7582  0DA0                     l5240:	
  7583  0DA0  0008               	return
  7584                           	opt stack 0
  7585                           GLOBAL	__end_of_Menu
  7586  0DA1                     	__end_of_Menu:
  7587 ;; =============== function _Menu ends ============
  7588                           
  7589                           	signat	_Menu,4217
  7590                           	global	_ser_init
  7591                           psect	text912,local,class=CODE,delta=2
  7592                           global __ptext912
  7593  0B3A                     __ptext912:
  7594                           
  7595 ;; *************** function _ser_init *****************
  7596 ;; Defined at:
  7597 ;;		line 113 in file "H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;		None
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;		None
  7602 ;; Return value:  Size  Location     Type
  7603 ;;		None               void
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7611 ;;      Params:         0       0       0       0       0
  7612 ;;      Locals:         0       0       0       0       0
  7613 ;;      Temps:          0       1       0       0       0
  7614 ;;      Totals:         0       1       0       0       0
  7615 ;;Total ram usage:        1 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    3
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_init
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           psect	text912
  7625                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\ser.c"
  7626                           	line	113
  7627                           	global	__size_of_ser_init
  7628  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7629                           	
  7630  0B3A                     _ser_init:	
  7631                           	opt	stack 3
  7632                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7633                           	line	114
  7634                           	
  7635  0B3A                     l10206:	
  7636                           ;ser.c: 114: TRISC |= 0b10000000;
  7637  0B3A  1683               	bsf	status, 5	;RP0=1, select bank1
  7638  0B3B  1303               	bcf	status, 6	;RP1=0, select bank1
  7639  0B3C  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7640                           	line	115
  7641                           	
  7642  0B3D                     l10208:	
  7643                           ;ser.c: 115: TRISC &= 0b10111111;
  7644  0B3D  30BF               	movlw	(0BFh)
  7645  0B3E  1283               	bcf	status, 5	;RP0=0, select bank0
  7646  0B3F  1303               	bcf	status, 6	;RP1=0, select bank0
  7647  0B40  00A0               	movwf	(??_ser_init+0)+0
  7648  0B41  0820               	movf	(??_ser_init+0)+0,w
  7649  0B42  1683               	bsf	status, 5	;RP0=1, select bank1
  7650  0B43  1303               	bcf	status, 6	;RP1=0, select bank1
  7651  0B44  0587               	andwf	(135)^080h,f	;volatile
  7652                           	line	116
  7653                           	
  7654  0B45                     l10210:	
  7655                           ;ser.c: 116: BRGH=1;
  7656  0B45  1518               	bsf	(1218/8)^080h,(1218)&7
  7657                           	line	118
  7658                           	
  7659  0B46                     l10212:	
  7660                           ;ser.c: 118: SPBRG=20;
  7661  0B46  3014               	movlw	(014h)
  7662  0B47  0099               	movwf	(153)^080h	;volatile
  7663                           	line	121
  7664                           	
  7665  0B48                     l10214:	
  7666                           ;ser.c: 121: TX9=0;
  7667  0B48  1318               	bcf	(1222/8)^080h,(1222)&7
  7668                           	line	122
  7669                           	
  7670  0B49                     l10216:	
  7671                           ;ser.c: 122: RX9=0;
  7672  0B49  1283               	bcf	status, 5	;RP0=0, select bank0
  7673  0B4A  1303               	bcf	status, 6	;RP1=0, select bank0
  7674  0B4B  1318               	bcf	(198/8),(198)&7
  7675                           	line	124
  7676                           	
  7677  0B4C                     l10218:	
  7678                           ;ser.c: 124: SYNC=0;
  7679  0B4C  1683               	bsf	status, 5	;RP0=1, select bank1
  7680  0B4D  1303               	bcf	status, 6	;RP1=0, select bank1
  7681  0B4E  1218               	bcf	(1220/8)^080h,(1220)&7
  7682                           	line	125
  7683                           	
  7684  0B4F                     l10220:	
  7685                           ;ser.c: 125: SPEN=1;
  7686  0B4F  1283               	bcf	status, 5	;RP0=0, select bank0
  7687  0B50  1303               	bcf	status, 6	;RP1=0, select bank0
  7688  0B51  1798               	bsf	(199/8),(199)&7
  7689                           	line	126
  7690                           	
  7691  0B52                     l10222:	
  7692                           ;ser.c: 126: CREN=1;
  7693  0B52  1618               	bsf	(196/8),(196)&7
  7694                           	line	127
  7695                           	
  7696  0B53                     l10224:	
  7697                           ;ser.c: 127: TXIE=0;
  7698  0B53  1683               	bsf	status, 5	;RP0=1, select bank1
  7699  0B54  1303               	bcf	status, 6	;RP1=0, select bank1
  7700  0B55  120C               	bcf	(1124/8)^080h,(1124)&7
  7701                           	line	128
  7702                           	
  7703  0B56                     l10226:	
  7704                           ;ser.c: 128: RCIE=1;
  7705  0B56  168C               	bsf	(1125/8)^080h,(1125)&7
  7706                           	line	129
  7707                           	
  7708  0B57                     l10228:	
  7709                           ;ser.c: 129: TXEN=1;
  7710  0B57  1698               	bsf	(1221/8)^080h,(1221)&7
  7711                           	line	132
  7712                           	
  7713  0B58                     l10230:	
  7714                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  7715  0B58  3000               	movlw	(0)
  7716  0B59  1283               	bcf	status, 5	;RP0=0, select bank0
  7717  0B5A  1303               	bcf	status, 6	;RP1=0, select bank0
  7718  0B5B  00EF               	movwf	(_txoptr)	;volatile
  7719  0B5C  00FD               	movwf	(_txiptr)	;volatile
  7720  0B5D  00EE               	movwf	(_rxoptr)	;volatile
  7721  0B5E  00A0               	movwf	(??_ser_init+0)+0
  7722  0B5F  0820               	movf	(??_ser_init+0)+0,w
  7723  0B60  00ED               	movwf	(_rxiptr)	;volatile
  7724                           	line	133
  7725                           	
  7726  0B61                     l4452:	
  7727  0B61  0008               	return
  7728                           	opt stack 0
  7729                           GLOBAL	__end_of_ser_init
  7730  0B62                     	__end_of_ser_init:
  7731 ;; =============== function _ser_init ends ============
  7732                           
  7733                           	signat	_ser_init,88
  7734                           	global	_adc_read
  7735                           psect	text913,local,class=CODE,delta=2
  7736                           global __ptext913
  7737  0B8A                     __ptext913:
  7738                           
  7739 ;; *************** function _adc_read *****************
  7740 ;; Defined at:
  7741 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2    0[BANK0 ] unsigned int 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7755 ;;      Params:         0       2       0       0       0
  7756 ;;      Locals:         0       2       0       0       0
  7757 ;;      Temps:          0       2       0       0       0
  7758 ;;      Totals:         0       6       0       0       0
  7759 ;;Total ram usage:        6 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    3
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_adc_read_channel
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           psect	text913
  7769                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7770                           	line	61
  7771                           	global	__size_of_adc_read
  7772  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7773                           	
  7774  0B8A                     _adc_read:	
  7775                           	opt	stack 0
  7776                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7777                           	line	64
  7778                           	
  7779  0B8A                     l10078:	
  7780                           ;adc.c: 62: volatile unsigned int adc_value;
  7781                           ;adc.c: 64: ADRESH = 0;
  7782  0B8A  1283               	bcf	status, 5	;RP0=0, select bank0
  7783  0B8B  1303               	bcf	status, 6	;RP1=0, select bank0
  7784  0B8C  019E               	clrf	(30)	;volatile
  7785                           	line	66
  7786                           	
  7787  0B8D                     l10080:	
  7788                           ;adc.c: 66: GO = 1;
  7789  0B8D  151F               	bsf	(250/8),(250)&7
  7790                           	line	67
  7791                           ;adc.c: 67: while(GO) continue;
  7792  0B8E  2B8F               	goto	l703
  7793                           	
  7794  0B8F                     l704:	
  7795                           	
  7796  0B8F                     l703:	
  7797  0B8F  191F               	btfsc	(250/8),(250)&7
  7798  0B90  2B92               	goto	u3351
  7799  0B91  2B93               	goto	u3350
  7800  0B92                     u3351:
  7801  0B92  2B8F               	goto	l703
  7802  0B93                     u3350:
  7803                           	
  7804  0B93                     l705:	
  7805                           	line	68
  7806                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7807  0B93  0000               nop ;#
  7808                           	line	69
  7809                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7810  0B94  0000               nop ;#
  7811                           	line	70
  7812                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7813  0B95  0000               nop ;#
  7814                           psect	text913
  7815                           	line	73
  7816                           	
  7817  0B96                     l10082:	
  7818                           ;adc.c: 73: adc_value = ADRESH;
  7819  0B96  1283               	bcf	status, 5	;RP0=0, select bank0
  7820  0B97  1303               	bcf	status, 6	;RP1=0, select bank0
  7821  0B98  081E               	movf	(30),w	;volatile
  7822  0B99  00A2               	movwf	(??_adc_read+0)+0
  7823  0B9A  01A3               	clrf	(??_adc_read+0)+0+1
  7824  0B9B  0822               	movf	0+(??_adc_read+0)+0,w
  7825  0B9C  00A4               	movwf	(adc_read@adc_value)	;volatile
  7826  0B9D  0823               	movf	1+(??_adc_read+0)+0,w
  7827  0B9E  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  7828                           	line	74
  7829                           ;adc.c: 74: adc_value <<= 1;
  7830  0B9F  3001               	movlw	01h
  7831                           	
  7832  0BA0                     u3365:
  7833  0BA0  1003               	clrc
  7834  0BA1  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  7835  0BA2  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  7836  0BA3  3EFF               	addlw	-1
  7837  0BA4  1D03               	skipz
  7838  0BA5  2BA0               	goto	u3365
  7839                           	line	75
  7840                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7841  0BA6  1683               	bsf	status, 5	;RP0=1, select bank1
  7842  0BA7  1303               	bcf	status, 6	;RP1=0, select bank1
  7843  0BA8  081E               	movf	(158)^080h,w	;volatile
  7844                           	line	78
  7845                           	
  7846  0BA9                     l10084:	
  7847                           ;adc.c: 78: return (adc_value);
  7848  0BA9  1283               	bcf	status, 5	;RP0=0, select bank0
  7849  0BAA  1303               	bcf	status, 6	;RP1=0, select bank0
  7850  0BAB  0825               	movf	(adc_read@adc_value+1),w	;volatile
  7851  0BAC  01A1               	clrf	(?_adc_read+1)
  7852  0BAD  07A1               	addwf	(?_adc_read+1)
  7853  0BAE  0824               	movf	(adc_read@adc_value),w	;volatile
  7854  0BAF  01A0               	clrf	(?_adc_read)
  7855  0BB0  07A0               	addwf	(?_adc_read)
  7856                           
  7857  0BB1  2BB2               	goto	l706
  7858                           	
  7859  0BB2                     l10086:	
  7860                           	line	79
  7861                           	
  7862  0BB2                     l706:	
  7863  0BB2  0008               	return
  7864                           	opt stack 0
  7865                           GLOBAL	__end_of_adc_read
  7866  0BB3                     	__end_of_adc_read:
  7867 ;; =============== function _adc_read ends ============
  7868                           
  7869                           	signat	_adc_read,90
  7870                           	global	_isr1
  7871                           psect	text914,local,class=CODE,delta=2
  7872                           global __ptext914
  7873  0591                     __ptext914:
  7874                           
  7875 ;; *************** function _isr1 *****************
  7876 ;; Defined at:
  7877 ;;		line 88 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;		None               void
  7884 ;; Registers used:
  7885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7891 ;;      Params:         0       0       0       0       0
  7892 ;;      Locals:         0       0       0       0       0
  7893 ;;      Temps:          5       0       0       0       0
  7894 ;;      Totals:         5       0       0       0       0
  7895 ;;Total ram usage:        5 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    2
  7898 ;; This function calls:
  7899 ;;		i1___lwmod
  7900 ;;		_ReadButtons
  7901 ;; This function is called by:
  7902 ;;		Interrupt level 1
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           psect	text914
  7906                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  7907                           	line	88
  7908                           	global	__size_of_isr1
  7909  00E0                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  7910                           	
  7911  0591                     _isr1:	
  7912                           	opt	stack 0
  7913                           ; Regs used in _isr1: [allreg]
  7914                           psect	intentry,class=CODE,delta=2
  7915                           global __pintentry
  7916  0004                     __pintentry:
  7917                           global interrupt_function
  7918  0004                     interrupt_function:
  7919                           	global saved_w
  7920  007E                     	saved_w	set	btemp+0
  7921  0004  00FE               	movwf	saved_w
  7922  0005  0E03               	swapf	status,w
  7923  0006  00F9               	movwf	(??_isr1+1)
  7924  0007  0804               	movf	fsr0,w
  7925  0008  00FA               	movwf	(??_isr1+2)
  7926  0009  080A               	movf	pclath,w
  7927  000A  00FB               	movwf	(??_isr1+3)
  7928  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  7929  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  7930  000D  087F               	movf	btemp+1,w
  7931  000E  00FC               	movwf	(??_isr1+4)
  7932  000F  120A  118A  2D91   	ljmp	_isr1
  7933                           psect	text914
  7934                           	line	90
  7935                           	
  7936  0591                     i1l10114:	
  7937                           ;Main.c: 90: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  7938  0591  1E8C               	btfss	(101/8),(101)&7
  7939  0592  2D94               	goto	u340_21
  7940  0593  2D95               	goto	u340_20
  7941  0594                     u340_21:
  7942  0594  2DB7               	goto	i1l10124
  7943  0595                     u340_20:
  7944                           	
  7945  0595                     i1l10116:	
  7946  0595  081A               	movf	(26),w	;volatile
  7947  0596  00F8               	movwf	(??_isr1+0)+0
  7948  0597  086D               	movf	(_rxiptr),w
  7949  0598  3EA0               	addlw	_rxfifo&0ffh
  7950  0599  0084               	movwf	fsr0
  7951  059A  0878               	movf	(??_isr1+0)+0,w
  7952  059B  1383               	bcf	status, 7	;select IRP bank1
  7953  059C  0080               	movwf	indf
  7954                           	
  7955  059D                     i1l10118:	
  7956  059D  086D               	movf	(_rxiptr),w	;volatile
  7957  059E  3E01               	addlw	01h
  7958  059F  390F               	andlw	0Fh
  7959  05A0  00F8               	movwf	(??_isr1+0)+0
  7960  05A1  0878               	movf	(??_isr1+0)+0,w
  7961  05A2  1683               	bsf	status, 5	;RP0=1, select bank1
  7962  05A3  1303               	bcf	status, 6	;RP1=0, select bank1
  7963  05A4  00D8               	movwf	(_ser_tmp)^080h
  7964                           	
  7965  05A5                     i1l10120:	
  7966  05A5  0858               	movf	(_ser_tmp)^080h,w
  7967  05A6  1283               	bcf	status, 5	;RP0=0, select bank0
  7968  05A7  1303               	bcf	status, 6	;RP1=0, select bank0
  7969  05A8  066E               	xorwf	(_rxoptr),w	;volatile
  7970  05A9  1903               	skipnz
  7971  05AA  2DAC               	goto	u341_21
  7972  05AB  2DAD               	goto	u341_20
  7973  05AC                     u341_21:
  7974  05AC  2DB7               	goto	i1l10124
  7975  05AD                     u341_20:
  7976                           	
  7977  05AD                     i1l10122:	
  7978  05AD  1683               	bsf	status, 5	;RP0=1, select bank1
  7979  05AE  1303               	bcf	status, 6	;RP1=0, select bank1
  7980  05AF  0858               	movf	(_ser_tmp)^080h,w
  7981  05B0  00F8               	movwf	(??_isr1+0)+0
  7982  05B1  0878               	movf	(??_isr1+0)+0,w
  7983  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  7984  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  7985  05B4  00ED               	movwf	(_rxiptr)	;volatile
  7986  05B5  2DB7               	goto	i1l10124
  7987                           	
  7988  05B6                     i1l2201:	
  7989  05B6  2DB7               	goto	i1l10124
  7990                           	
  7991  05B7                     i1l2200:	
  7992                           	
  7993  05B7                     i1l10124:	
  7994  05B7  1E0C               	btfss	(100/8),(100)&7
  7995  05B8  2DBA               	goto	u342_21
  7996  05B9  2DBB               	goto	u342_20
  7997  05BA                     u342_21:
  7998  05BA  2DDB               	goto	i1l2202
  7999  05BB                     u342_20:
  8000                           	
  8001  05BB                     i1l10126:	
  8002  05BB  1683               	bsf	status, 5	;RP0=1, select bank1
  8003  05BC  1303               	bcf	status, 6	;RP1=0, select bank1
  8004  05BD  1E0C               	btfss	(1124/8)^080h,(1124)&7
  8005  05BE  2DC0               	goto	u343_21
  8006  05BF  2DC1               	goto	u343_20
  8007  05C0                     u343_21:
  8008  05C0  2DDB               	goto	i1l2202
  8009  05C1                     u343_20:
  8010                           	
  8011  05C1                     i1l10128:	
  8012  05C1  1283               	bcf	status, 5	;RP0=0, select bank0
  8013  05C2  1303               	bcf	status, 6	;RP1=0, select bank0
  8014  05C3  086F               	movf	(_txoptr),w
  8015  05C4  3EB0               	addlw	_txfifo&0ffh
  8016  05C5  0084               	movwf	fsr0
  8017  05C6  1383               	bcf	status, 7	;select IRP bank1
  8018  05C7  0800               	movf	indf,w
  8019  05C8  0099               	movwf	(25)	;volatile
  8020                           	
  8021  05C9                     i1l10130:	
  8022  05C9  3001               	movlw	(01h)
  8023  05CA  00F8               	movwf	(??_isr1+0)+0
  8024  05CB  0878               	movf	(??_isr1+0)+0,w
  8025  05CC  07EF               	addwf	(_txoptr),f	;volatile
  8026                           	
  8027  05CD                     i1l10132:	
  8028  05CD  300F               	movlw	(0Fh)
  8029  05CE  00F8               	movwf	(??_isr1+0)+0
  8030  05CF  0878               	movf	(??_isr1+0)+0,w
  8031  05D0  05EF               	andwf	(_txoptr),f	;volatile
  8032                           	
  8033  05D1                     i1l10134:	
  8034  05D1  086F               	movf	(_txoptr),w	;volatile
  8035  05D2  067D               	xorwf	(_txiptr),w	;volatile
  8036  05D3  1D03               	skipz
  8037  05D4  2DD6               	goto	u344_21
  8038  05D5  2DD7               	goto	u344_20
  8039  05D6                     u344_21:
  8040  05D6  2DDB               	goto	i1l2202
  8041  05D7                     u344_20:
  8042                           	
  8043  05D7                     i1l10136:	
  8044  05D7  1683               	bsf	status, 5	;RP0=1, select bank1
  8045  05D8  1303               	bcf	status, 6	;RP1=0, select bank1
  8046  05D9  120C               	bcf	(1124/8)^080h,(1124)&7
  8047  05DA  2DDB               	goto	i1l2202
  8048                           	
  8049  05DB                     i1l2203:	
  8050                           	
  8051  05DB                     i1l2202:	
  8052                           	line	93
  8053                           ;Main.c: 93: if(TMR0IF)
  8054  05DB  1D0B               	btfss	(90/8),(90)&7
  8055  05DC  2DDE               	goto	u345_21
  8056  05DD  2DDF               	goto	u345_20
  8057  05DE                     u345_21:
  8058  05DE  2E65               	goto	i1l2210
  8059  05DF                     u345_20:
  8060                           	line	95
  8061                           	
  8062  05DF                     i1l10138:	
  8063                           ;Main.c: 94: {
  8064                           ;Main.c: 95: TMR0IF = 0;
  8065  05DF  110B               	bcf	(90/8),(90)&7
  8066                           	line	96
  8067                           	
  8068  05E0                     i1l10140:	
  8069                           ;Main.c: 96: TMR0 = 100;
  8070  05E0  3064               	movlw	(064h)
  8071  05E1  1283               	bcf	status, 5	;RP0=0, select bank0
  8072  05E2  0081               	movwf	(1)	;volatile
  8073                           	line	98
  8074                           ;Main.c: 98: RTC_Counter++;
  8075  05E3  3001               	movlw	low(01h)
  8076  05E4  07E8               	addwf	(_RTC_Counter),f	;volatile
  8077  05E5  1803               	skipnc
  8078  05E6  0AE9               	incf	(_RTC_Counter+1),f	;volatile
  8079  05E7  3000               	movlw	high(01h)
  8080  05E8  07E9               	addwf	(_RTC_Counter+1),f	;volatile
  8081                           	line	100
  8082                           	
  8083  05E9                     i1l10142:	
  8084                           ;Main.c: 100: RTC_FLAG_1MS = 1;
  8085  05E9  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  8086                           	line	101
  8087                           	
  8088  05EA                     i1l10144:	
  8089                           ;Main.c: 101: if(RTC_Counter % 10 == 0)
  8090  05EA  300A               	movlw	low(0Ah)
  8091  05EB  00F2               	movwf	(?i1___lwmod)
  8092  05EC  3000               	movlw	high(0Ah)
  8093  05ED  00F3               	movwf	((?i1___lwmod))+1
  8094  05EE  0869               	movf	(_RTC_Counter+1),w	;volatile
  8095  05EF  01F5               	clrf	1+(?i1___lwmod)+02h
  8096  05F0  07F5               	addwf	1+(?i1___lwmod)+02h
  8097  05F1  0868               	movf	(_RTC_Counter),w	;volatile
  8098  05F2  01F4               	clrf	0+(?i1___lwmod)+02h
  8099  05F3  07F4               	addwf	0+(?i1___lwmod)+02h
  8100                           
  8101  05F4  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8102  05F9  0873               	movf	((1+(?i1___lwmod))),w
  8103  05FA  0472               	iorwf	((0+(?i1___lwmod))),w
  8104  05FB  1D03               	skipz
  8105  05FC  2DFE               	goto	u346_21
  8106  05FD  2DFF               	goto	u346_20
  8107  05FE                     u346_21:
  8108  05FE  2E01               	goto	i1l10148
  8109  05FF                     u346_20:
  8110                           	line	103
  8111                           	
  8112  05FF                     i1l10146:	
  8113                           ;Main.c: 102: {
  8114                           ;Main.c: 103: RTC_FLAG_10MS = 1;
  8115  05FF  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  8116  0600  2E01               	goto	i1l10148
  8117                           	line	106
  8118                           	
  8119  0601                     i1l2205:	
  8120                           	line	107
  8121                           	
  8122  0601                     i1l10148:	
  8123                           ;Main.c: 106: }
  8124                           ;Main.c: 107: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  8125  0601  3032               	movlw	low(032h)
  8126  0602  00F2               	movwf	(?i1___lwmod)
  8127  0603  3000               	movlw	high(032h)
  8128  0604  00F3               	movwf	((?i1___lwmod))+1
  8129  0605  1283               	bcf	status, 5	;RP0=0, select bank0
  8130  0606  1303               	bcf	status, 6	;RP1=0, select bank0
  8131  0607  0869               	movf	(_RTC_Counter+1),w	;volatile
  8132  0608  01F5               	clrf	1+(?i1___lwmod)+02h
  8133  0609  07F5               	addwf	1+(?i1___lwmod)+02h
  8134  060A  0868               	movf	(_RTC_Counter),w	;volatile
  8135  060B  01F4               	clrf	0+(?i1___lwmod)+02h
  8136  060C  07F4               	addwf	0+(?i1___lwmod)+02h
  8137                           
  8138  060D  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8139  0612  0873               	movf	((1+(?i1___lwmod))),w
  8140  0613  0472               	iorwf	((0+(?i1___lwmod))),w
  8141  0614  1D03               	skipz
  8142  0615  2E17               	goto	u347_21
  8143  0616  2E18               	goto	u347_20
  8144  0617                     u347_21:
  8145  0617  2E1A               	goto	i1l10152
  8146  0618                     u347_20:
  8147                           	
  8148  0618                     i1l10150:	
  8149  0618  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  8150  0619  2E1A               	goto	i1l10152
  8151                           	
  8152  061A                     i1l2206:	
  8153                           	line	108
  8154                           	
  8155  061A                     i1l10152:	
  8156                           ;Main.c: 108: if(RTC_Counter % 250 == 0)
  8157  061A  30FA               	movlw	low(0FAh)
  8158  061B  00F2               	movwf	(?i1___lwmod)
  8159  061C  3000               	movlw	high(0FAh)
  8160  061D  00F3               	movwf	((?i1___lwmod))+1
  8161  061E  1283               	bcf	status, 5	;RP0=0, select bank0
  8162  061F  1303               	bcf	status, 6	;RP1=0, select bank0
  8163  0620  0869               	movf	(_RTC_Counter+1),w	;volatile
  8164  0621  01F5               	clrf	1+(?i1___lwmod)+02h
  8165  0622  07F5               	addwf	1+(?i1___lwmod)+02h
  8166  0623  0868               	movf	(_RTC_Counter),w	;volatile
  8167  0624  01F4               	clrf	0+(?i1___lwmod)+02h
  8168  0625  07F4               	addwf	0+(?i1___lwmod)+02h
  8169                           
  8170  0626  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8171  062B  0873               	movf	((1+(?i1___lwmod))),w
  8172  062C  0472               	iorwf	((0+(?i1___lwmod))),w
  8173  062D  1D03               	skipz
  8174  062E  2E30               	goto	u348_21
  8175  062F  2E31               	goto	u348_20
  8176  0630                     u348_21:
  8177  0630  2E33               	goto	i1l10156
  8178  0631                     u348_20:
  8179                           	line	111
  8180                           	
  8181  0631                     i1l10154:	
  8182                           ;Main.c: 109: {
  8183                           ;Main.c: 111: RTC_FLAG_250MS = 1;
  8184  0631  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  8185  0632  2E33               	goto	i1l10156
  8186                           	line	113
  8187                           	
  8188  0633                     i1l2207:	
  8189                           	line	114
  8190                           	
  8191  0633                     i1l10156:	
  8192                           ;Main.c: 113: }
  8193                           ;Main.c: 114: if(RTC_Counter % 500 == 0)
  8194  0633  30F4               	movlw	low(01F4h)
  8195  0634  00F2               	movwf	(?i1___lwmod)
  8196  0635  3001               	movlw	high(01F4h)
  8197  0636  00F3               	movwf	((?i1___lwmod))+1
  8198  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  8199  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  8200  0639  0869               	movf	(_RTC_Counter+1),w	;volatile
  8201  063A  01F5               	clrf	1+(?i1___lwmod)+02h
  8202  063B  07F5               	addwf	1+(?i1___lwmod)+02h
  8203  063C  0868               	movf	(_RTC_Counter),w	;volatile
  8204  063D  01F4               	clrf	0+(?i1___lwmod)+02h
  8205  063E  07F4               	addwf	0+(?i1___lwmod)+02h
  8206                           
  8207  063F  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8208  0644  0873               	movf	((1+(?i1___lwmod))),w
  8209  0645  0472               	iorwf	((0+(?i1___lwmod))),w
  8210  0646  1D03               	skipz
  8211  0647  2E49               	goto	u349_21
  8212  0648  2E4A               	goto	u349_20
  8213  0649                     u349_21:
  8214  0649  2E52               	goto	i1l10164
  8215  064A                     u349_20:
  8216                           	line	116
  8217                           	
  8218  064A                     i1l10158:	
  8219                           ;Main.c: 115: {
  8220                           ;Main.c: 116: RTC_FLAG_500MS = 1;
  8221  064A  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  8222                           	line	117
  8223                           	
  8224  064B                     i1l10160:	
  8225                           ;Main.c: 117: RTC_Counter = 0;
  8226  064B  1283               	bcf	status, 5	;RP0=0, select bank0
  8227  064C  1303               	bcf	status, 6	;RP1=0, select bank0
  8228  064D  01E8               	clrf	(_RTC_Counter)	;volatile
  8229  064E  01E9               	clrf	(_RTC_Counter+1)	;volatile
  8230                           	line	118
  8231                           	
  8232  064F                     i1l10162:	
  8233                           ;Main.c: 118: RB0 ^= 0x01;
  8234  064F  3001               	movlw	1<<((48)&7)
  8235  0650  0686               	xorwf	((48)/8),f
  8236  0651  2E52               	goto	i1l10164
  8237                           	line	120
  8238                           	
  8239  0652                     i1l2208:	
  8240                           	line	122
  8241                           	
  8242  0652                     i1l10164:	
  8243                           ;Main.c: 120: }
  8244                           ;Main.c: 122: if (buttonPressed == 0)
  8245  0652  1283               	bcf	status, 5	;RP0=0, select bank0
  8246  0653  1303               	bcf	status, 6	;RP1=0, select bank0
  8247  0654  08EC               	movf	(_buttonPressed),f
  8248  0655  1D03               	skipz	;volatile
  8249  0656  2E58               	goto	u350_21
  8250  0657  2E59               	goto	u350_20
  8251  0658                     u350_21:
  8252  0658  2E65               	goto	i1l2210
  8253  0659                     u350_20:
  8254                           	line	124
  8255                           	
  8256  0659                     i1l10166:	
  8257                           ;Main.c: 123: {
  8258                           ;Main.c: 124: buttonPressed = ReadButtons();
  8259  0659  120A  158A  2465   	fcall	_ReadButtons
              120A  118A         
  8260  065E  00F8               	movwf	(??_isr1+0)+0
  8261  065F  0878               	movf	(??_isr1+0)+0,w
  8262  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  8263  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  8264  0662  00EC               	movwf	(_buttonPressed)	;volatile
  8265  0663  2E65               	goto	i1l2210
  8266                           	line	125
  8267                           	
  8268  0664                     i1l2209:	
  8269  0664  2E65               	goto	i1l2210
  8270                           	line	126
  8271                           	
  8272  0665                     i1l2204:	
  8273                           	line	127
  8274                           	
  8275  0665                     i1l2210:	
  8276  0665  087C               	movf	(??_isr1+4),w
  8277  0666  1283               	bcf	status, 5	;RP0=0, select bank0
  8278  0667  00FF               	movwf	btemp+1
  8279  0668  087B               	movf	(??_isr1+3),w
  8280  0669  008A               	movwf	pclath
  8281  066A  087A               	movf	(??_isr1+2),w
  8282  066B  0084               	movwf	fsr0
  8283  066C  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
  8284  066D  0083               	movwf	status
  8285  066E  0EFE               	swapf	saved_w,f
  8286  066F  0E7E               	swapf	saved_w,w
  8287  0670  0009               	retfie
  8288                           	opt stack 0
  8289                           GLOBAL	__end_of_isr1
  8290  0671                     	__end_of_isr1:
  8291 ;; =============== function _isr1 ends ============
  8292                           
  8293                           	signat	_isr1,88
  8294                           	global	_ReadButtons
  8295                           psect	text915,local,class=CODE,delta=2
  8296                           global __ptext915
  8297  0C65                     __ptext915:
  8298                           
  8299 ;; *************** function _ReadButtons *****************
  8300 ;; Defined at:
  8301 ;;		line 141 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;		None
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      unsigned char 
  8308 ;; Registers used:
  8309 ;;		wreg, status,2, status,0, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8315 ;;      Params:         0       0       0       0       0
  8316 ;;      Locals:         0       0       0       0       0
  8317 ;;      Temps:          0       0       0       0       0
  8318 ;;      Totals:         0       0       0       0       0
  8319 ;;Total ram usage:        0 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; Hardware stack levels required when called:    1
  8322 ;; This function calls:
  8323 ;;		_Debounce
  8324 ;; This function is called by:
  8325 ;;		_isr1
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           psect	text915
  8329                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8330                           	line	141
  8331                           	global	__size_of_ReadButtons
  8332  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8333                           	
  8334  0C65                     _ReadButtons:	
  8335                           	opt	stack 0
  8336                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8337                           	line	142
  8338                           	
  8339  0C65                     i1l10168:	
  8340                           ;HMI.c: 142: Debounce();
  8341  0C65  120A  118A  2671   	fcall	_Debounce
              120A  158A         
  8342                           	line	144
  8343                           	
  8344  0C6A                     i1l10170:	
  8345                           ;HMI.c: 144: if(UpPressed)
  8346  0C6A  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  8347  0C6B  2C6D               	goto	u351_21
  8348  0C6C  2C6E               	goto	u351_20
  8349  0C6D                     u351_21:
  8350  0C6D  2C72               	goto	i1l5223
  8351  0C6E                     u351_20:
  8352                           	line	146
  8353                           	
  8354  0C6E                     i1l10172:	
  8355                           ;HMI.c: 145: {
  8356                           ;HMI.c: 146: UpPressed = 0;
  8357  0C6E  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  8358                           	line	147
  8359                           	
  8360  0C6F                     i1l10174:	
  8361                           ;HMI.c: 147: return 1;
  8362  0C6F  3001               	movlw	(01h)
  8363  0C70  2C94               	goto	i1l5224
  8364                           	
  8365  0C71                     i1l10176:	
  8366  0C71  2C94               	goto	i1l5224
  8367                           	line	149
  8368                           	
  8369  0C72                     i1l5223:	
  8370                           	line	151
  8371                           ;HMI.c: 149: }
  8372                           ;HMI.c: 151: if(DownPressed)
  8373  0C72  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8374  0C73  2C75               	goto	u352_21
  8375  0C74  2C76               	goto	u352_20
  8376  0C75                     u352_21:
  8377  0C75  2C7A               	goto	i1l5225
  8378  0C76                     u352_20:
  8379                           	line	153
  8380                           	
  8381  0C76                     i1l10178:	
  8382                           ;HMI.c: 152: {
  8383                           ;HMI.c: 153: DownPressed = 0;
  8384  0C76  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8385                           	line	154
  8386                           	
  8387  0C77                     i1l10180:	
  8388                           ;HMI.c: 154: return 2;
  8389  0C77  3002               	movlw	(02h)
  8390  0C78  2C94               	goto	i1l5224
  8391                           	
  8392  0C79                     i1l10182:	
  8393  0C79  2C94               	goto	i1l5224
  8394                           	line	156
  8395                           	
  8396  0C7A                     i1l5225:	
  8397                           	line	157
  8398                           ;HMI.c: 156: }
  8399                           ;HMI.c: 157: if(LeftPressed)
  8400  0C7A  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8401  0C7B  2C7D               	goto	u353_21
  8402  0C7C  2C7E               	goto	u353_20
  8403  0C7D                     u353_21:
  8404  0C7D  2C82               	goto	i1l5226
  8405  0C7E                     u353_20:
  8406                           	line	159
  8407                           	
  8408  0C7E                     i1l10184:	
  8409                           ;HMI.c: 158: {
  8410                           ;HMI.c: 159: LeftPressed = 0;
  8411  0C7E  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8412                           	line	160
  8413                           	
  8414  0C7F                     i1l10186:	
  8415                           ;HMI.c: 160: return 3;
  8416  0C7F  3003               	movlw	(03h)
  8417  0C80  2C94               	goto	i1l5224
  8418                           	
  8419  0C81                     i1l10188:	
  8420  0C81  2C94               	goto	i1l5224
  8421                           	line	162
  8422                           	
  8423  0C82                     i1l5226:	
  8424                           	line	163
  8425                           ;HMI.c: 162: }
  8426                           ;HMI.c: 163: if(RightPressed)
  8427  0C82  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
  8428  0C83  2C85               	goto	u354_21
  8429  0C84  2C86               	goto	u354_20
  8430  0C85                     u354_21:
  8431  0C85  2C8A               	goto	i1l5227
  8432  0C86                     u354_20:
  8433                           	line	165
  8434                           	
  8435  0C86                     i1l10190:	
  8436                           ;HMI.c: 164: {
  8437                           ;HMI.c: 165: RightPressed = 0;
  8438  0C86  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
  8439                           	line	166
  8440                           	
  8441  0C87                     i1l10192:	
  8442                           ;HMI.c: 166: return 4;
  8443  0C87  3004               	movlw	(04h)
  8444  0C88  2C94               	goto	i1l5224
  8445                           	
  8446  0C89                     i1l10194:	
  8447  0C89  2C94               	goto	i1l5224
  8448                           	line	168
  8449                           	
  8450  0C8A                     i1l5227:	
  8451                           	line	170
  8452                           ;HMI.c: 168: }
  8453                           ;HMI.c: 170: if(CenterPressed)
  8454  0C8A  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8455  0C8B  2C8D               	goto	u355_21
  8456  0C8C  2C8E               	goto	u355_20
  8457  0C8D                     u355_21:
  8458  0C8D  2C92               	goto	i1l10202
  8459  0C8E                     u355_20:
  8460                           	line	172
  8461                           	
  8462  0C8E                     i1l10196:	
  8463                           ;HMI.c: 171: {
  8464                           ;HMI.c: 172: CenterPressed = 0;
  8465  0C8E  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8466                           	line	173
  8467                           	
  8468  0C8F                     i1l10198:	
  8469                           ;HMI.c: 173: return 5;
  8470  0C8F  3005               	movlw	(05h)
  8471  0C90  2C94               	goto	i1l5224
  8472                           	
  8473  0C91                     i1l10200:	
  8474  0C91  2C94               	goto	i1l5224
  8475                           	line	175
  8476                           	
  8477  0C92                     i1l5228:	
  8478                           	line	176
  8479                           	
  8480  0C92                     i1l10202:	
  8481                           ;HMI.c: 175: }
  8482                           ;HMI.c: 176: return 0;
  8483  0C92  3000               	movlw	(0)
  8484  0C93  2C94               	goto	i1l5224
  8485                           	
  8486  0C94                     i1l10204:	
  8487                           	line	177
  8488                           	
  8489  0C94                     i1l5224:	
  8490  0C94  0008               	return
  8491                           	opt stack 0
  8492                           GLOBAL	__end_of_ReadButtons
  8493  0C95                     	__end_of_ReadButtons:
  8494 ;; =============== function _ReadButtons ends ============
  8495                           
  8496                           	signat	_ReadButtons,89
  8497                           	global	i1___lwmod
  8498                           psect	text916,local,class=CODE,delta=2
  8499                           global __ptext916
  8500  0CD0                     __ptext916:
  8501                           
  8502 ;; *************** function i1___lwmod *****************
  8503 ;; Defined at:
  8504 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  __lwmod         2    0[COMMON] unsigned int 
  8507 ;;  __lwmod         2    2[COMMON] unsigned int 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  __lwmod         1    5[COMMON] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  2    0[COMMON] unsigned int 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8519 ;;      Params:         4       0       0       0       0
  8520 ;;      Locals:         1       0       0       0       0
  8521 ;;      Temps:          1       0       0       0       0
  8522 ;;      Totals:         6       0       0       0       0
  8523 ;;Total ram usage:        6 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_isr1
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           psect	text916
  8532                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8533                           	line	5
  8534                           	global	__size_ofi1___lwmod
  8535  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8536                           	
  8537  0CD0                     i1___lwmod:	
  8538                           	opt	stack 1
  8539                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8540                           	line	8
  8541                           	
  8542  0CD0                     i1l10524:	
  8543  0CD0  0873               	movf	(i1___lwmod@divisor+1),w
  8544  0CD1  0472               	iorwf	(i1___lwmod@divisor),w
  8545  0CD2  1903               	skipnz
  8546  0CD3  2CD5               	goto	u412_21
  8547  0CD4  2CD6               	goto	u412_20
  8548  0CD5                     u412_21:
  8549  0CD5  2D0C               	goto	i1l10542
  8550  0CD6                     u412_20:
  8551                           	line	9
  8552                           	
  8553  0CD6                     i1l10526:	
  8554  0CD6  01F7               	clrf	(i1___lwmod@counter)
  8555  0CD7  1403               	bsf	status,0
  8556  0CD8  0DF7               	rlf	(i1___lwmod@counter),f
  8557                           	line	10
  8558  0CD9  2CE6               	goto	i1l10532
  8559                           	
  8560  0CDA                     i1l7442:	
  8561                           	line	11
  8562                           	
  8563  0CDA                     i1l10528:	
  8564  0CDA  3001               	movlw	01h
  8565                           	
  8566  0CDB                     u413_25:
  8567  0CDB  1003               	clrc
  8568  0CDC  0DF2               	rlf	(i1___lwmod@divisor),f
  8569  0CDD  0DF3               	rlf	(i1___lwmod@divisor+1),f
  8570  0CDE  3EFF               	addlw	-1
  8571  0CDF  1D03               	skipz
  8572  0CE0  2CDB               	goto	u413_25
  8573                           	line	12
  8574                           	
  8575  0CE1                     i1l10530:	
  8576  0CE1  3001               	movlw	(01h)
  8577  0CE2  00F6               	movwf	(??i1___lwmod+0)+0
  8578  0CE3  0876               	movf	(??i1___lwmod+0)+0,w
  8579  0CE4  07F7               	addwf	(i1___lwmod@counter),f
  8580  0CE5  2CE6               	goto	i1l10532
  8581                           	line	13
  8582                           	
  8583  0CE6                     i1l7441:	
  8584                           	line	10
  8585                           	
  8586  0CE6                     i1l10532:	
  8587  0CE6  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  8588  0CE7  2CE9               	goto	u414_21
  8589  0CE8  2CEA               	goto	u414_20
  8590  0CE9                     u414_21:
  8591  0CE9  2CDA               	goto	i1l10528
  8592  0CEA                     u414_20:
  8593  0CEA  2CEC               	goto	i1l10534
  8594                           	
  8595  0CEB                     i1l7443:	
  8596  0CEB  2CEC               	goto	i1l10534
  8597                           	line	14
  8598                           	
  8599  0CEC                     i1l7444:	
  8600                           	line	15
  8601                           	
  8602  0CEC                     i1l10534:	
  8603  0CEC  0873               	movf	(i1___lwmod@divisor+1),w
  8604  0CED  0275               	subwf	(i1___lwmod@dividend+1),w
  8605  0CEE  1D03               	skipz
  8606  0CEF  2CF2               	goto	u415_25
  8607  0CF0  0872               	movf	(i1___lwmod@divisor),w
  8608  0CF1  0274               	subwf	(i1___lwmod@dividend),w
  8609  0CF2                     u415_25:
  8610  0CF2  1C03               	skipc
  8611  0CF3  2CF5               	goto	u415_21
  8612  0CF4  2CF6               	goto	u415_20
  8613  0CF5                     u415_21:
  8614  0CF5  2CFD               	goto	i1l10538
  8615  0CF6                     u415_20:
  8616                           	line	16
  8617                           	
  8618  0CF6                     i1l10536:	
  8619  0CF6  0872               	movf	(i1___lwmod@divisor),w
  8620  0CF7  02F4               	subwf	(i1___lwmod@dividend),f
  8621  0CF8  0873               	movf	(i1___lwmod@divisor+1),w
  8622  0CF9  1C03               	skipc
  8623  0CFA  03F5               	decf	(i1___lwmod@dividend+1),f
  8624  0CFB  02F5               	subwf	(i1___lwmod@dividend+1),f
  8625  0CFC  2CFD               	goto	i1l10538
  8626                           	
  8627  0CFD                     i1l7445:	
  8628                           	line	17
  8629                           	
  8630  0CFD                     i1l10538:	
  8631  0CFD  3001               	movlw	01h
  8632                           	
  8633  0CFE                     u416_25:
  8634  0CFE  1003               	clrc
  8635  0CFF  0CF3               	rrf	(i1___lwmod@divisor+1),f
  8636  0D00  0CF2               	rrf	(i1___lwmod@divisor),f
  8637  0D01  3EFF               	addlw	-1
  8638  0D02  1D03               	skipz
  8639  0D03  2CFE               	goto	u416_25
  8640                           	line	18
  8641                           	
  8642  0D04                     i1l10540:	
  8643  0D04  3001               	movlw	low(01h)
  8644  0D05  02F7               	subwf	(i1___lwmod@counter),f
  8645  0D06  1D03               	btfss	status,2
  8646  0D07  2D09               	goto	u417_21
  8647  0D08  2D0A               	goto	u417_20
  8648  0D09                     u417_21:
  8649  0D09  2CEC               	goto	i1l10534
  8650  0D0A                     u417_20:
  8651  0D0A  2D0C               	goto	i1l10542
  8652                           	
  8653  0D0B                     i1l7446:	
  8654  0D0B  2D0C               	goto	i1l10542
  8655                           	line	19
  8656                           	
  8657  0D0C                     i1l7440:	
  8658                           	line	20
  8659                           	
  8660  0D0C                     i1l10542:	
  8661  0D0C  0875               	movf	(i1___lwmod@dividend+1),w
  8662  0D0D  01F3               	clrf	(?i1___lwmod+1)
  8663  0D0E  07F3               	addwf	(?i1___lwmod+1)
  8664  0D0F  0874               	movf	(i1___lwmod@dividend),w
  8665  0D10  01F2               	clrf	(?i1___lwmod)
  8666  0D11  07F2               	addwf	(?i1___lwmod)
  8667                           
  8668  0D12  2D13               	goto	i1l7447
  8669                           	
  8670  0D13                     i1l10544:	
  8671                           	line	21
  8672                           	
  8673  0D13                     i1l7447:	
  8674  0D13  0008               	return
  8675                           	opt stack 0
  8676                           GLOBAL	__end_ofi1___lwmod
  8677  0D14                     	__end_ofi1___lwmod:
  8678 ;; =============== function i1___lwmod ends ============
  8679                           
  8680                           	signat	i1___lwmod,90
  8681                           	global	_Debounce
  8682                           psect	text917,local,class=CODE,delta=2
  8683                           global __ptext917
  8684  0671                     __ptext917:
  8685                           
  8686 ;; *************** function _Debounce *****************
  8687 ;; Defined at:
  8688 ;;		line 61 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;		None
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;		None
  8693 ;; Return value:  Size  Location     Type
  8694 ;;		None               void
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8702 ;;      Params:         0       0       0       0       0
  8703 ;;      Locals:         0       0       0       0       0
  8704 ;;      Temps:          1       0       0       0       0
  8705 ;;      Totals:         1       0       0       0       0
  8706 ;;Total ram usage:        1 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_ReadButtons
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           psect	text917
  8715                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8716                           	line	61
  8717                           	global	__size_of_Debounce
  8718  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  8719                           	
  8720  0671                     _Debounce:	
  8721                           	opt	stack 0
  8722                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  8723                           	line	63
  8724                           	
  8725  0671                     i1l10388:	
  8726                           ;HMI.c: 63: if(!RB2)
  8727  0671  1283               	bcf	status, 5	;RP0=0, select bank0
  8728  0672  1303               	bcf	status, 6	;RP1=0, select bank0
  8729  0673  1906               	btfsc	(50/8),(50)&7
  8730  0674  2E76               	goto	u371_21
  8731  0675  2E77               	goto	u371_20
  8732  0676                     u371_21:
  8733  0676  2E8B               	goto	i1l5205
  8734  0677                     u371_20:
  8735                           	line	65
  8736                           	
  8737  0677                     i1l10390:	
  8738                           ;HMI.c: 64: {
  8739                           ;HMI.c: 65: UpDebounceCount++;
  8740  0677  3001               	movlw	(01h)
  8741  0678  00F2               	movwf	(??_Debounce+0)+0
  8742  0679  0872               	movf	(??_Debounce+0)+0,w
  8743  067A  1683               	bsf	status, 5	;RP0=1, select bank1
  8744  067B  1303               	bcf	status, 6	;RP1=0, select bank1
  8745  067C  07D3               	addwf	(_UpDebounceCount)^080h,f	;volatile
  8746                           	line	66
  8747                           	
  8748  067D                     i1l10392:	
  8749                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  8750  067D  300A               	movlw	(0Ah)
  8751  067E  0253               	subwf	(_UpDebounceCount)^080h,w	;volatile
  8752  067F  1C03               	skipc
  8753  0680  2E82               	goto	u372_21
  8754  0681  2E83               	goto	u372_20
  8755  0682                     u372_21:
  8756  0682  2E8F               	goto	i1l5207
  8757  0683                     u372_20:
  8758                           	
  8759  0683                     i1l10394:	
  8760  0683  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
  8761  0684  2E86               	goto	u373_21
  8762  0685  2E87               	goto	u373_20
  8763  0686                     u373_21:
  8764  0686  2E8F               	goto	i1l5207
  8765  0687                     u373_20:
  8766                           	line	68
  8767                           	
  8768  0687                     i1l10396:	
  8769                           ;HMI.c: 67: {
  8770                           ;HMI.c: 68: UpPressed = 1;
  8771  0687  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
  8772                           	line	69
  8773                           ;HMI.c: 69: UpReleased = 0;
  8774  0688  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
  8775  0689  2E8F               	goto	i1l5207
  8776                           	line	70
  8777                           	
  8778  068A                     i1l5206:	
  8779                           	line	71
  8780                           ;HMI.c: 70: }
  8781                           ;HMI.c: 71: }
  8782  068A  2E8F               	goto	i1l5207
  8783                           	line	72
  8784                           	
  8785  068B                     i1l5205:	
  8786                           	line	74
  8787                           ;HMI.c: 72: else
  8788                           ;HMI.c: 73: {
  8789                           ;HMI.c: 74: UpDebounceCount = 0;
  8790  068B  1683               	bsf	status, 5	;RP0=1, select bank1
  8791  068C  1303               	bcf	status, 6	;RP1=0, select bank1
  8792  068D  01D3               	clrf	(_UpDebounceCount)^080h	;volatile
  8793                           	line	75
  8794                           ;HMI.c: 75: UpReleased = 1;
  8795  068E  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
  8796                           	line	76
  8797                           	
  8798  068F                     i1l5207:	
  8799                           	line	79
  8800                           ;HMI.c: 76: }
  8801                           ;HMI.c: 79: if(!RB3)
  8802  068F  1283               	bcf	status, 5	;RP0=0, select bank0
  8803  0690  1303               	bcf	status, 6	;RP1=0, select bank0
  8804  0691  1986               	btfsc	(51/8),(51)&7
  8805  0692  2E94               	goto	u374_21
  8806  0693  2E95               	goto	u374_20
  8807  0694                     u374_21:
  8808  0694  2EA9               	goto	i1l5208
  8809  0695                     u374_20:
  8810                           	line	81
  8811                           	
  8812  0695                     i1l10398:	
  8813                           ;HMI.c: 80: {
  8814                           ;HMI.c: 81: DownDebounceCount++;
  8815  0695  3001               	movlw	(01h)
  8816  0696  00F2               	movwf	(??_Debounce+0)+0
  8817  0697  0872               	movf	(??_Debounce+0)+0,w
  8818  0698  1683               	bsf	status, 5	;RP0=1, select bank1
  8819  0699  1303               	bcf	status, 6	;RP1=0, select bank1
  8820  069A  07CF               	addwf	(_DownDebounceCount)^080h,f	;volatile
  8821                           	line	82
  8822                           	
  8823  069B                     i1l10400:	
  8824                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  8825  069B  300A               	movlw	(0Ah)
  8826  069C  024F               	subwf	(_DownDebounceCount)^080h,w	;volatile
  8827  069D  1C03               	skipc
  8828  069E  2EA0               	goto	u375_21
  8829  069F  2EA1               	goto	u375_20
  8830  06A0                     u375_21:
  8831  06A0  2EAD               	goto	i1l5210
  8832  06A1                     u375_20:
  8833                           	
  8834  06A1                     i1l10402:	
  8835  06A1  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  8836  06A2  2EA4               	goto	u376_21
  8837  06A3  2EA5               	goto	u376_20
  8838  06A4                     u376_21:
  8839  06A4  2EAD               	goto	i1l5210
  8840  06A5                     u376_20:
  8841                           	line	84
  8842                           	
  8843  06A5                     i1l10404:	
  8844                           ;HMI.c: 83: {
  8845                           ;HMI.c: 84: DownPressed = 1;
  8846  06A5  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  8847                           	line	85
  8848                           ;HMI.c: 85: DownReleased = 0;
  8849  06A6  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  8850  06A7  2EAD               	goto	i1l5210
  8851                           	line	86
  8852                           	
  8853  06A8                     i1l5209:	
  8854                           	line	87
  8855                           ;HMI.c: 86: }
  8856                           ;HMI.c: 87: }
  8857  06A8  2EAD               	goto	i1l5210
  8858                           	line	88
  8859                           	
  8860  06A9                     i1l5208:	
  8861                           	line	90
  8862                           ;HMI.c: 88: else
  8863                           ;HMI.c: 89: {
  8864                           ;HMI.c: 90: DownDebounceCount = 0;
  8865  06A9  1683               	bsf	status, 5	;RP0=1, select bank1
  8866  06AA  1303               	bcf	status, 6	;RP1=0, select bank1
  8867  06AB  01CF               	clrf	(_DownDebounceCount)^080h	;volatile
  8868                           	line	91
  8869                           ;HMI.c: 91: DownReleased = 1;
  8870  06AC  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  8871                           	line	92
  8872                           	
  8873  06AD                     i1l5210:	
  8874                           	line	94
  8875                           ;HMI.c: 92: }
  8876                           ;HMI.c: 94: if(!RB4)
  8877  06AD  1283               	bcf	status, 5	;RP0=0, select bank0
  8878  06AE  1303               	bcf	status, 6	;RP1=0, select bank0
  8879  06AF  1A06               	btfsc	(52/8),(52)&7
  8880  06B0  2EB2               	goto	u377_21
  8881  06B1  2EB3               	goto	u377_20
  8882  06B2                     u377_21:
  8883  06B2  2EC7               	goto	i1l5211
  8884  06B3                     u377_20:
  8885                           	line	96
  8886                           	
  8887  06B3                     i1l10406:	
  8888                           ;HMI.c: 95: {
  8889                           ;HMI.c: 96: LeftDebounceCount++;
  8890  06B3  3001               	movlw	(01h)
  8891  06B4  00F2               	movwf	(??_Debounce+0)+0
  8892  06B5  0872               	movf	(??_Debounce+0)+0,w
  8893  06B6  1683               	bsf	status, 5	;RP0=1, select bank1
  8894  06B7  1303               	bcf	status, 6	;RP1=0, select bank1
  8895  06B8  07D0               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  8896                           	line	97
  8897                           	
  8898  06B9                     i1l10408:	
  8899                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  8900  06B9  300A               	movlw	(0Ah)
  8901  06BA  0250               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  8902  06BB  1C03               	skipc
  8903  06BC  2EBE               	goto	u378_21
  8904  06BD  2EBF               	goto	u378_20
  8905  06BE                     u378_21:
  8906  06BE  2ECB               	goto	i1l5213
  8907  06BF                     u378_20:
  8908                           	
  8909  06BF                     i1l10410:	
  8910  06BF  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  8911  06C0  2EC2               	goto	u379_21
  8912  06C1  2EC3               	goto	u379_20
  8913  06C2                     u379_21:
  8914  06C2  2ECB               	goto	i1l5213
  8915  06C3                     u379_20:
  8916                           	line	99
  8917                           	
  8918  06C3                     i1l10412:	
  8919                           ;HMI.c: 98: {
  8920                           ;HMI.c: 99: LeftPressed = 1;
  8921  06C3  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  8922                           	line	100
  8923                           ;HMI.c: 100: LeftReleased = 0;
  8924  06C4  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  8925  06C5  2ECB               	goto	i1l5213
  8926                           	line	101
  8927                           	
  8928  06C6                     i1l5212:	
  8929                           	line	102
  8930                           ;HMI.c: 101: }
  8931                           ;HMI.c: 102: }
  8932  06C6  2ECB               	goto	i1l5213
  8933                           	line	103
  8934                           	
  8935  06C7                     i1l5211:	
  8936                           	line	105
  8937                           ;HMI.c: 103: else
  8938                           ;HMI.c: 104: {
  8939                           ;HMI.c: 105: LeftDebounceCount = 0;
  8940  06C7  1683               	bsf	status, 5	;RP0=1, select bank1
  8941  06C8  1303               	bcf	status, 6	;RP1=0, select bank1
  8942  06C9  01D0               	clrf	(_LeftDebounceCount)^080h	;volatile
  8943                           	line	106
  8944                           ;HMI.c: 106: LeftReleased = 1;
  8945  06CA  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  8946                           	line	107
  8947                           	
  8948  06CB                     i1l5213:	
  8949                           	line	109
  8950                           ;HMI.c: 107: }
  8951                           ;HMI.c: 109: if(!RB5)
  8952  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  8953  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  8954  06CD  1A86               	btfsc	(53/8),(53)&7
  8955  06CE  2ED0               	goto	u380_21
  8956  06CF  2ED1               	goto	u380_20
  8957  06D0                     u380_21:
  8958  06D0  2EE5               	goto	i1l5214
  8959  06D1                     u380_20:
  8960                           	line	111
  8961                           	
  8962  06D1                     i1l10414:	
  8963                           ;HMI.c: 110: {
  8964                           ;HMI.c: 111: RightDebounceCount++;
  8965  06D1  3001               	movlw	(01h)
  8966  06D2  00F2               	movwf	(??_Debounce+0)+0
  8967  06D3  0872               	movf	(??_Debounce+0)+0,w
  8968  06D4  1683               	bsf	status, 5	;RP0=1, select bank1
  8969  06D5  1303               	bcf	status, 6	;RP1=0, select bank1
  8970  06D6  07D1               	addwf	(_RightDebounceCount)^080h,f	;volatile
  8971                           	line	112
  8972                           	
  8973  06D7                     i1l10416:	
  8974                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  8975  06D7  300A               	movlw	(0Ah)
  8976  06D8  0251               	subwf	(_RightDebounceCount)^080h,w	;volatile
  8977  06D9  1C03               	skipc
  8978  06DA  2EDC               	goto	u381_21
  8979  06DB  2EDD               	goto	u381_20
  8980  06DC                     u381_21:
  8981  06DC  2EE9               	goto	i1l5216
  8982  06DD                     u381_20:
  8983                           	
  8984  06DD                     i1l10418:	
  8985  06DD  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
  8986  06DE  2EE0               	goto	u382_21
  8987  06DF  2EE1               	goto	u382_20
  8988  06E0                     u382_21:
  8989  06E0  2EE9               	goto	i1l5216
  8990  06E1                     u382_20:
  8991                           	line	114
  8992                           	
  8993  06E1                     i1l10420:	
  8994                           ;HMI.c: 113: {
  8995                           ;HMI.c: 114: RightPressed = 1;
  8996  06E1  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
  8997                           	line	115
  8998                           ;HMI.c: 115: RightReleased = 0;
  8999  06E2  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
  9000  06E3  2EE9               	goto	i1l5216
  9001                           	line	116
  9002                           	
  9003  06E4                     i1l5215:	
  9004                           	line	117
  9005                           ;HMI.c: 116: }
  9006                           ;HMI.c: 117: }
  9007  06E4  2EE9               	goto	i1l5216
  9008                           	line	118
  9009                           	
  9010  06E5                     i1l5214:	
  9011                           	line	120
  9012                           ;HMI.c: 118: else
  9013                           ;HMI.c: 119: {
  9014                           ;HMI.c: 120: RightDebounceCount = 0;
  9015  06E5  1683               	bsf	status, 5	;RP0=1, select bank1
  9016  06E6  1303               	bcf	status, 6	;RP1=0, select bank1
  9017  06E7  01D1               	clrf	(_RightDebounceCount)^080h	;volatile
  9018                           	line	121
  9019                           ;HMI.c: 121: RightReleased = 1;
  9020  06E8  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
  9021                           	line	122
  9022                           	
  9023  06E9                     i1l5216:	
  9024                           	line	124
  9025                           ;HMI.c: 122: }
  9026                           ;HMI.c: 124: if(!RB6)
  9027  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
  9028  06EA  1303               	bcf	status, 6	;RP1=0, select bank0
  9029  06EB  1B06               	btfsc	(54/8),(54)&7
  9030  06EC  2EEE               	goto	u383_21
  9031  06ED  2EEF               	goto	u383_20
  9032  06EE                     u383_21:
  9033  06EE  2F03               	goto	i1l5217
  9034  06EF                     u383_20:
  9035                           	line	126
  9036                           	
  9037  06EF                     i1l10422:	
  9038                           ;HMI.c: 125: {
  9039                           ;HMI.c: 126: CenterDebounceCount++;
  9040  06EF  3001               	movlw	(01h)
  9041  06F0  00F2               	movwf	(??_Debounce+0)+0
  9042  06F1  0872               	movf	(??_Debounce+0)+0,w
  9043  06F2  1683               	bsf	status, 5	;RP0=1, select bank1
  9044  06F3  1303               	bcf	status, 6	;RP1=0, select bank1
  9045  06F4  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  9046                           	line	127
  9047                           	
  9048  06F5                     i1l10424:	
  9049                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  9050  06F5  300A               	movlw	(0Ah)
  9051  06F6  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  9052  06F7  1C03               	skipc
  9053  06F8  2EFA               	goto	u384_21
  9054  06F9  2EFB               	goto	u384_20
  9055  06FA                     u384_21:
  9056  06FA  2F08               	goto	i1l5220
  9057  06FB                     u384_20:
  9058                           	
  9059  06FB                     i1l10426:	
  9060  06FB  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  9061  06FC  2EFE               	goto	u385_21
  9062  06FD  2EFF               	goto	u385_20
  9063  06FE                     u385_21:
  9064  06FE  2F08               	goto	i1l5220
  9065  06FF                     u385_20:
  9066                           	line	129
  9067                           	
  9068  06FF                     i1l10428:	
  9069                           ;HMI.c: 128: {
  9070                           ;HMI.c: 129: CenterPressed = 1;
  9071  06FF  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  9072                           	line	130
  9073                           ;HMI.c: 130: CenterReleased = 0;
  9074  0700  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  9075  0701  2F08               	goto	i1l5220
  9076                           	line	131
  9077                           	
  9078  0702                     i1l5218:	
  9079                           	line	132
  9080                           ;HMI.c: 131: }
  9081                           ;HMI.c: 132: }
  9082  0702  2F08               	goto	i1l5220
  9083                           	line	133
  9084                           	
  9085  0703                     i1l5217:	
  9086                           	line	135
  9087                           ;HMI.c: 133: else
  9088                           ;HMI.c: 134: {
  9089                           ;HMI.c: 135: CenterDebounceCount = 0;
  9090  0703  1683               	bsf	status, 5	;RP0=1, select bank1
  9091  0704  1303               	bcf	status, 6	;RP1=0, select bank1
  9092  0705  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
  9093                           	line	136
  9094                           ;HMI.c: 136: CenterReleased = 1;
  9095  0706  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  9096  0707  2F08               	goto	i1l5220
  9097                           	line	137
  9098                           	
  9099  0708                     i1l5219:	
  9100                           	line	138
  9101                           	
  9102  0708                     i1l5220:	
  9103  0708  0008               	return
  9104                           	opt stack 0
  9105                           GLOBAL	__end_of_Debounce
  9106  0709                     	__end_of_Debounce:
  9107 ;; =============== function _Debounce ends ============
  9108                           
  9109                           	signat	_Debounce,88
  9110                           psect	text918,local,class=CODE,delta=2
  9111                           global __ptext918
  9112  0000                     __ptext918:
  9113                           	global	btemp
  9114  007E                     	btemp set 07Eh
  9115                           
  9116                           	DABS	1,126,2	;btemp
  9117                           	global	wtemp0
  9118  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 24 15:29:53 2015

 __end_of_lcd_write_control 0A9A             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 0AAF  
                       l703 0B8F                         l704 0B8F                         l705 0B93  
                       l706 0BB2                         l690 0C99                         l691 0CC2  
                       l692 0C9D                         l693 0CA1                         l694 0CA5  
                       l695 0CA9                         l696 0CAD                         l689 0CB1  
                       l697 0CCF                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _pos 00C6                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026             ?_lcd_set_cursor 0072  
                      l1402 0A5E                        l1410 0C35                        l1411 0C35  
                      l2220 0EF8                        l1405 0A1F                        l2213 0B89  
                      l2221 0EB6                        l2222 0EB8                        l2223 0EC8  
                      l2231 0F19                        l1408 0C24                        l2224 0ED6  
                      l2216 0EA8                        l2232 0F6B                        l2240 03AB  
                      l1409 0C0B                        l2225 0EFA                        l2217 0EB3  
                      l2233 0F37                        l2241 03F5                        l2218 0EE5  
                      l2226 0EE3                        l2234 0F77                        l2250 03FC  
                      l2242 03B5                        l2227 0EF9                        l2219 0EB4  
                      l2251 041F                        l2243 03BF                        l2228 0EFA  
                      l2252 043A                        l2244 03C9                        l1429 0BDD  
                      l2253 046B                        l2245 03D3                        l2237 038B  
                      l2254 0471                        l2246 03E0                        l2238 03AA  
                      l2255 048D                        l2247 0473                        l2239 03E2  
                      l2256 048E                        l2248 03F6                        l2257 048E  
                      l2249 0486                        l1399 0A99                        l4421 0B1A  
                      l4430 0B17                        l4422 0B19                        l5231 0D8C  
                      l4423 0B23                        l5240 0DA0                        l5232 0D5E  
                      l4424 0B39                        l5233 0D9E                        l5241 0D8A  
                      l4417 0AD1                        l5234 0D5F                        l4418 0ADC  
                      l5250 0384                        l5235 0D60                        l4427 0AFC  
                      l5251 030B                        l4452 0B61                        l5236 0D71  
                      l4428 0AFB                        l5252 0378                        l5237 0D72  
                      l4429 0B04                        l5253 0384                        l5238 0D84  
                      l5246 037A                        l5239 0D85                        l5247 0251  
                      l5248 02B0                        l2960 0E56                        l5249 02C3  
                      l2961 0E77                        l3682 0E01                        l2970 00B0  
                      l2962 0E95                        l3683 0E08                        l2971 0236  
                      l3676 0A7A                        l3684 0E25                        l2980 0231  
                      l2972 00FD                        l3677 0A7A                        l3685 0E0F  
                      l2973 0235                        l2981 0237                        l2965 0AC5  
                      l3678 0A7F                        l3686 0E2F                        l2974 014A  
                      l3679 0A85                        l3687 0E40                        l2975 0234  
                      l2976 0197                        l2968 0063                        l2969 0237  
                      l2977 0233                        l2978 01E4                        l2979 0232  
                      l6700 0A4B                        l7430 0DE9                        l7431 0DBB  
                      l6711 073E                        l6703 0AF6                        l7424 0BE3  
                      l7432 0DAF                        l7440 0D52                        l6712 075C  
                      l7425 0BED                        l7433 0DC0                        l7441 0D2C  
                      l6713 0790                        l7426 0C02                        l7434 0DC1  
                      l7442 0D20                        l6706 0FAD                        l6722 0577  
                      l6730 04C7                        l7427 0C09                        l7435 0DDA  
                      l7443 0D31                        l6707 0FCB                        l6731 04B0  
                      l6723 0499                        l7436 0DE8                        l7444 0D32  
                      l6708 0FFF                        l6740 058A                        l6732 04E1  
                      l6724 04AB                        l7437 0DF0                        l7445 0D43  
                      l6741 0590                        l6733 04EC                        l6725 04B2  
                      l7446 0D51                        l6734 0514                        l6726 04AD  
                      l7447 0D59                        l6727 058B                        l6735 0509  
                      l7640 07E6                        l7632 07A1                        l6736 0526  
                      l6728 04AE                        l7641 07F1                        l7633 07AB  
                      l6737 056B                        l6729 04AF                        l7642 07F8  
                      l7634 07E7                        l6738 052B                        l7635 07C1  
                      l6739 0576                        l7636 07B5                        l7637 07C6  
                      l7638 07C7                        l7639 07D8                        l6697 0A2C  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 0832                        STR_2 0829                        STR_3 0844  
                      STR_4 084D                        STR_5 083B                        STR_6 086D  
                      STR_7 0871                        STR_8 085D                        STR_9 0869  
                      _BRGH 04C2                        _CREN 00C4                        u4000 0D3C  
                      u4001 0D3B                        u4020 0D50                        u4100 07E5  
                      u4021 0D4F                        u4005 0D38                        u4101 07E4  
                      u4110 07EB                        u4030 0798                        u4015 0D44  
                      u4031 0797                        u4040 07A5                        u4200 0F8E  
                      u4041 07A4                        u4201 0F8D                        u4050 07B1  
                      u4210 071F                        u4051 07B0                        u4211 071E  
                      u4300 0154                        u4220 0020                        u4301 0153  
                      u4221 001F                        u3350 0B93                        u4070 07C5  
                      u4310 015D                        u4230 0029                        u3351 0B92  
                      u4071 07C4                        u4311 015C                        u4231 0028  
                      u4080 07D1                        u4320 01A1                        u4240 006D  
                      u4400 0507                        u4081 07D0                        u4065 07B6  
                      u4321 01A0                        u4241 006C                        u4401 0506  
                      u4330 01AA                        u4250 0076                        u4410 0513  
                      u4331 01A9                        u4251 0075                        u4411 0512  
                      u4180 0DFA                        u4340 01EE                        u4260 00BA  
                      u4420 051A                        u4500 0EAC                        u3365 0BA0  
                      u4085 07CD                        u4181 0DF9                        u4341 01ED  
                      u4261 00B9                        u4421 0519                        u4405 0503  
                      u4501 0EAB                        u3630 0ACC                        u4190 0E2F  
                      u4350 01F7                        u4270 00C3                        u4430 0575  
                      u4510 0F17                        u3631 0ACB                        u4095 07D9  
                      u4191 0E2E                        u4351 01F6                        u4271 00C2  
                      u4431 0574                        u4511 0F16                        u3560 0D6C  
                      u3640 0AD7                        u4280 0107                        u4360 0B23  
                      u4440 0589                        u4520 0F2A                        u3561 0D6B  
                      u3641 0AD6                        u4281 0106                        u4361 0B22  
                      u4441 0588                        u4521 0F29                        u3570 0D81  
                      u3650 0B04                        u4290 0110                        u4370 049F  
                      u4450 0C34                        u4530 0F6B                        u3571 0D80  
                      u3651 0B03                        u4195 0E2B                        u4291 010F  
                      u4371 049E                        u4451 0C33                        u4531 0F6A  
                      u4515 0F13                        _PEIE 005E                        u3580 0A7E  
                      u3900 0DAB                        u4380 04D7                        u4460 0242  
                      u4540 039A                        u3581 0A7D                        u3901 0DAA  
                      u4381 04D6                        u4525 0F26                        u4541 0399  
                      u4390 04EA                        u4470 029D                        u4550 039E  
                      u4607 0A94                        u4391 04E9                        u4471 029C  
                      u4535 0F67                        u4551 039D                        u3920 0DBF  
                      u4480 0E54                        u3921 0DBE                        u4617 0AAD  
                      u4481 0E53                        u4490 0E76                        u3915 0DB0  
                      u4627 0CC4                        u4475 0299                        u4491 0E75  
                      _RCIE 0465                        u3860 0BE7                        u3940 0DD2  
                      _RCIF 0065                        u3861 0BE6                        u3941 0DD1  
                      u4485 0E50                        u3935 0DC2                        u4495 0E72  
                      u4567 0427                        u3960 0DE7                        u3961 0DE6  
                      u3945 0DCE                        u4577 0442                        u3890 0C01  
                      u3970 0D1C                        u3891 0C00                        u3875 0BEE  
                      u3955 0DDB                        u3971 0D1B                        u4587 0E18  
                      u3885 0BF5                        u4597 0A5A                        u3990 0D30  
                      u3991 0D2F                        u3985 0D21                        _OERR 00C1  
                      _TMR0 0001                        _SPEN 00C7                        _TXIE 0464  
                      _WREN 0C62                        _TXEN 04C5                        _TXIF 0064  
                      _SYNC 04C4         __size_of_ADCconvert 0223                        _Menu 0D5A  
    __end_of_lcd_write_data 0A5F                        _isr1 0591                        _main 0385  
                      _init 0B62                        _test 00C8                        btemp 007E  
            _CenterReleased 0381                        start 0012               ??_ReadButtons 0073  
                     ?_Menu 0072            ??_robot_distance 0023                       l10210 0B45  
                     l10220 0B4F                       l10212 0B46                       l10230 0B58  
                     l10222 0B52                       l10214 0B48                       l10206 0B3A  
                     l10080 0B8D                       l10224 0B53                       l10216 0B49  
                     l10208 0B3D                       l10240 0D72                       l10232 0D5D  
                     l10082 0B96                       l10226 0B56                       l10218 0B4C  
                     l10242 0D81                       l10234 0D60                       l10250 0D8C  
                     l10066 0AD9                       l10330 0ACC                       l10084 0BA9  
                     l10228 0B57                       l10244 0D85                       l10236 0D68  
                     l10252 0D9E                       l10260 0A7F                       l10068 0ADB  
                     l10340 0AD9                       l10332 0ACE                       l10500 07B1  
                     l10086 0BB2                       l10078 0B8A                       l10254 0DA0  
                     l10246 0D89                       l10238 0D6C                       l10262 0A83  
                     l10342 0ADC                       l10334 0AD0                       l10350 0B0D  
                     l10430 0BDE                       l10510 07D1                       l10502 07B5  
                     l10248 0D8B                       l10264 0A85                       l10256 0A75  
                     l10336 0AD1                       l10328 0AC6                       l10352 0B13  
                     l10344 0AFA                       l10440 0C09                       l10432 0BE3  
                     l10520 07F1                       l10512 07D8                       l10504 07BC  
                     l10600 0E0B                       l10258 0A77                       l10338 0AD7  
                     l10354 0B16                       l10346 0AFC                       l10434 0BE7  
                     l10450 0DB6                       l10442 0DA1                       l10522 07F8  
                     l10514 07DF                       l10506 07C1                       l10610 0E3A  
                     l10602 0E0C                       l10348 0B05                       l10436 0BF4  
                     l10460 0DDA                       l10452 0DBB                       l10444 0DA5  
                     l10508 07C7                       l10516 07E7                       l10612 0E3B  
                     l10604 0E14                       l10620 0F80                       l10700 049F  
                     l10438 0C02                       l10462 0DE1                       l10454 0DC1  
                     l10446 0DAB                       l10470 0D1C                       l10518 07EB  
                     l10550 0CAF                       l10614 0E3C                       l10606 0E31  
                     l10622 0F88                       l10630 0711                       l10710 04CF  
                     l10702 04A6                       l10456 0DD2                       l10448 0DAF  
                     l10464 0DE9                       l10480 0D3C                       l10472 0D20  
                     l10560 0CCF                       l10552 0CB0                       l10616 0E3D  
                     l10608 0E37                       l10624 0F8E                       l10632 0719  
                     l10640 0020                       l10720 04E4                       l10712 04D3  
                     l10704 04B1                       l10800 0B72                       l10466 0DF0  
                     l10458 0DD8                       l10482 0D43                       l10474 0D27  
                     l10490 0791                       l10554 0CB1                       l10546 0C98  
                     l10570 0AA9                       l10562 0A9A                       l10626 0FAD  
                     l10618 0F78                       l10634 071F                       l10650 00B0  
                     l10642 0029                       l10730 050D                       l10722 04EB  
                     l10714 04D7                       l10706 04B2                       l10810 0B85  
                     l10802 0B77                       l10484 0D4A                       l10476 0D2C  
                     l10468 0D14                       l10492 0798                       l10548 0CAD  
                     l10556 0CC2                       l10564 0A9D                       l10572 0A89  
                     l10580 0A4F                       l10636 073E                       l10628 0709  
                     l10660 0110                       l10652 00BA                       l10644 0063  
                     l10740 052B                       l10732 0514                       l10724 04EC  
                     l10716 04DB                       l10708 04C7                       l10812 0B86  
                     l10804 0B7B                       l10820 0251                       l10900 0EE4  
                     l10478 0D32                       l10486 0D52                       l10494 07A1  
                     l10558 0CC6                       l10566 0AA1                       l10574 0A8C  
                     l10582 0A52                       l10590 0DF1                       l10670 01A1  
                     l10662 014A                       l10654 00C3                       l10646 006D  
                     l10638 0015                       l10742 055F                       l10734 051A  
                     l10726 0508                       l10718 04E1                       l10750 058B  
                     l10814 0B87                       l10806 0B7D                       l10830 029D  
                     l10822 0257                       l10902 0EE5                       l10910 0F0A  
                     l10488 0D59                       l10496 07A5                       l10568 0AA5  
                     l10576 0A8E                       l10584 0A54                       l10592 0DF5  
                     l10672 01AA                       l10664 0154                       l10656 00FD  
                     l10648 0076                       l10680 0B18                       l10752 0590  
                     l10744 0566                       l10736 0521                       l10728 0509  
                     l10760 0C0A                       l10816 0B88                       l10808 0B81  
                     l10840 030B                       l10832 02B0                       l10824 0277  
                     l10920 0F37                       l10912 0F18                       l10904 0EFB  
                     l10498 07AB                       l10578 0A8F                       l10586 0A55  
                     l10594 0DFA                       l10674 01E4                       l10666 015D  
                     l10658 0107                       l10690 0B36                       l10682 0B1A  
                     l10746 056B                       l10738 0526                       l10754 0A3D  
                     l10762 0C0B                       l10770 0BB7                       l10850 035B  
                     l10842 0311                       l10834 02C3                       l10826 0288  
                     l10818 0238                       l10930 0F6E                       l10922 0F43  
                     l10914 0F19                       l10906 0F01                       l10588 0A20  
                     l10596 0E01                       l10676 01EE                       l10668 0197  
                     l10692 0B37                       l10684 0B24                       l10748 0577  
                     l10756 0A18                       l10764 0C1B                       l10780 0BC5  
                     l10772 0BBA                       l10852 0366                       l10844 0333  
                     l10836 02C9                       l10828 028E                       l10860 0E47  
                     l10932 0F77                       l10924 0F48                       l10916 0F1E  
                     l10908 0F06                       l10940 0393                       l10598 0E08  
                     l10678 01F7                       l10694 0B39                       l10686 0B2E  
                     l10758 0A19                       l10766 0C24                       l10782 0BCB  
                     l10774 0BBB                       l10790 0AB0                       l10854 0379  
                     l10846 0344                       l10838 02E0                       l10862 0E55  
                     l10870 0E77                       l10926 0F56                       l10918 0F2A  
                     l10950 03B1                       l10942 039A                       l10934 0385  
                     l10688 0B32                       l10696 0494                       l10784 0BD1  
                     l10776 0BBE                       l10768 0BB3                       l10792 0ABE  
                     l10848 034A                       l10856 037A                       l10864 0E56  
                     l10880 0EAD                       l10872 0E96                       l10928 0F5E  
                     l10960 03C9                       l10952 03B5                       l10944 039E  
                     l10936 038B                       l10698 0499                       l10786 0BD7  
                     l10778 0BBF                       l10794 0AC5                       l10866 0E63  
                     l10858 0E41                       l10890 0ED6                       l10882 0EB8  
                     l10874 0E9B                       l10962 03CF                       l10954 03BB  
                     l10946 039F                       l10970 03E2                       l10938 0391  
                     l10788 0ADD                       l10796 0B62                       l10868 0E69  
                     l10892 0EDA                       l10884 0EC4                       l10876 0EA8  
                     l10980 042E                       l10972 03F6                       l10964 03D3  
                     l10956 03BF                       l10948 03AB                       l10798 0B63  
                     l10894 0EDD                       l10886 0EC8                       l10878 0EAC  
                     l10990 046B                       l10982 043A                       l10974 03FC  
                     l10966 03DE                       l10958 03C5                       l10896 0EE1  
                     l10888 0ED2                       l10992 0472                       l10984 0449  
                     l10976 0409                       l10968 03E1                       l10898 0EE2  
                     l10986 0454                       l10978 041F                       l10994 0473  
                     l10988 045F                       l10996 0486        __size_of_calibrateIR 0065  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 0875                       STR_11 081A  
                     STR_12 081A                       STR_13 0861                       STR_14 0855  
                     STR_15 0865             __end_of___awmod 07F9                       _CARRY 0018  
           __end_of___lwdiv 0DF1             __end_of___lwmod 0D5A                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
    lcd_write_data@databyte 0022          i1___lwmod@dividend 0074             __end_of_scan360 0F78  
                     _total 00CA              __pbitbssCOMMON 0380                       pclath 000A  
               _turnlowByte 00DB             ?_lcd_write_data 0072           ?_adc_read_channel 0072  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0591  
          __end_of_Debounce 0709          __size_ofi1___lwmod 0044          ??_adc_read_channel 0026  
          ?_readAvgDistance 0072                __end_of_Menu 0DA1  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00E1                __end_of_isr1 0671                __end_of_main 0491  
              __end_of_init 0B8A             rotate@direction 0025                      ??_Menu 0020  
             ?_readDistance 0028      readAvgDistance@fullval 0030                      ??_isr1 0078  
                    ??_main 0062                      ??_init 0023         __end_of_ReadButtons 0C95  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of_adc_read 0BB3                      i1l2200 05B7  
                    i1l2201 05B6                      i1l2210 0665                      i1l2202 05DB  
                    i1l2203 05DB                      i1l2204 0665                      i1l2205 0601  
                    i1l2206 061A                      i1l2207 0633                      i1l2208 0652  
                    i1l2209 0664                      i1l5210 06AD                      i1l5211 06C7  
                    i1l5220 0708                      i1l5212 06C6                      i1l5213 06CB  
                    i1l5205 068B                      i1l5214 06E5                      i1l5206 068A  
                    i1l5215 06E4                      i1l5207 068F                      i1l5223 0C72  
                    i1l5216 06E9                      i1l5208 06A9                      i1l5224 0C94  
                    i1l5217 0703                      i1l5209 06A8                      i1l5225 0C7A  
                    i1l5218 0702                      i1l5226 0C82                      i1l5219 0708  
                    i1l5227 0C8A                      i1l5228 0C92                      i1l7440 0D0C  
                    i1l7441 0CE6                      i1l7442 0CDA                      i1l7443 0CEB  
                    i1l7444 0CEC                      i1l7445 0CFD                      i1l7446 0D0B  
                    i1l7447 0D13                      u412_20 0CD6                      u340_20 0595  
                    u412_21 0CD5                      u340_21 0594                      u341_20 05AD  
                    u341_21 05AC                      u413_25 0CDB                      u414_20 0CEA  
                    u350_20 0659                      u342_20 05BB                      u414_21 0CE9  
                    u350_21 0658                      u342_21 05BA                      u415_20 0CF6  
                    u351_20 0C6E                      u343_20 05C1                      u415_21 0CF5  
                    u351_21 0C6D                      u343_21 05C0                      u415_25 0CF2  
                    u352_20 0C76                      u344_20 05D7                      u352_21 0C75  
                    u344_21 05D6                      u416_25 0CFE                      u417_20 0D0A  
                    u353_20 0C7E                      u345_20 05DF                      u417_21 0D09  
                    u353_21 0C7D                      u345_21 05DE                      u354_20 0C86  
                    u346_20 05FF                      u354_21 0C85                      u346_21 05FE  
                    u371_20 0677                      u355_20 0C8E                      u347_20 0618  
                    u371_21 0676                      u355_21 0C8D                      u347_21 0617  
                    u380_20 06D1                      u372_20 0683                      u348_20 0631  
                    u380_21 06D0                      u372_21 0682                      u348_21 0630  
                    u381_20 06DD                      u373_20 0687                      u349_20 064A  
                    u381_21 06DC                      u373_21 0686                      u349_21 0649  
                    u382_20 06E1                      u374_20 0695                      u382_21 06E0  
                    u374_21 0694                      u383_20 06EF                      u375_20 06A1  
                    u383_21 06EE                      u375_21 06A0                      u384_20 06FB  
                    u376_20 06A5                      u384_21 06FA                      u376_21 06A4  
                    u385_20 06FF                      u377_20 06B3                      u385_21 06FE  
                    u377_21 06B2                      u378_20 06BF                      u378_21 06BE  
                    u379_20 06C3                      u379_21 06C2                      _TMR0IE 005D  
                    _TMR0IF 005A                scan360@steps 0060                      _SSPCON 0014  
                    _SSPBUF 0013                  _UpReleased 038E            __end_of_lcd_init 0BDE  
                    _adcVal 006A             _UpDebounceCount 00D3                      ___wmul 0BDE  
                 ??___awmod 0024                _turnhighByte 00DA                ??_ADCconvert 002E  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 0AB0  
            ??_readDistance 002A             ___awmod@divisor 0020    __end_of_lcd_write_string 0C36  
           ___awmod@counter 0025                      _rotate 0DF1                      _rxfifo 00A0  
                    clrloop 0A0E                      _txfifo 00B0                      _rxiptr 006D  
                    _rxoptr 006E                      _txiptr 007D                   ??_scan360 005C  
                    _txoptr 006F            __end_of_ser_init 0B62            __end_of_ser_isrx 0ADD  
         __end_ofi1___lwmod 0D14                      saved_w 007E               main@shortwall 0065  
               _LeftPressed 0384                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 0238              __pcstackCOMMON 0072  
              __pidataBANK1 0A2D                 _ReadButtons 0C65            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 006C                  __pbssBANK0 0068  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00CF  
        _RightDebounceCount 00D1                  __pmaintext 0385           robotTurn@distance 0022  
                   ?___wmul 0020                  __pintentry 0004       __end_of_UpdateDisplay 0385  
        __size_of_ser_getch 0022                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 0021          __size_of_robo_init 000D                     i1l10200 0C91  
                   i1l10120 05A5                     i1l10202 0C92                     i1l10130 05C9  
                   i1l10122 05AD                     i1l10114 0591                     i1l10204 0C94  
                   i1l10140 05E0                     i1l10132 05CD                     i1l10116 0595  
                   i1l10124 05B7                     i1l10150 0618                     i1l10142 05E9  
                   i1l10134 05D1                     i1l10126 05BB                     i1l10118 059D  
                   i1l10400 069B                     i1l10160 064B                     i1l10152 061A  
                   i1l10144 05EA                     i1l10136 05D7                     i1l10128 05C1  
                   i1l10410 06BF                     i1l10402 06A1                     i1l10170 0C6A  
                   i1l10162 064F                     i1l10154 0631                     i1l10146 05FF  
                   i1l10138 05DF                     i1l10420 06E1                     i1l10412 06C3  
                   i1l10404 06A5                     i1l10180 0C77                     i1l10172 0C6E  
                   i1l10164 0652                     i1l10156 0633                     i1l10148 0601  
                   i1l10422 06EF                     i1l10414 06D1                     i1l10406 06B3  
                   i1l10190 0C86                     i1l10182 0C79                     i1l10174 0C6F  
                   i1l10166 0659                     i1l10158 064A          __size_of_robotMove 0088  
                   i1l10424 06F5                     i1l10416 06D7                     i1l10408 06B9  
                   i1l10192 0C87                     i1l10184 0C7E                     i1l10176 0C71  
                   i1l10168 0C65                     i1l10426 06FB                     i1l10418 06DD  
                   i1l10530 0CE1                     i1l10194 0C89                     i1l10186 0C7F  
                   i1l10178 0C76                     i1l10428 06FF                     i1l10540 0D04  
                   i1l10532 0CE6                     i1l10524 0CD0                     i1l10196 0C8E  
                   i1l10188 0C81                     i1l10390 0677                     i1l10534 0CEC  
                   i1l10526 0CD6                     i1l10542 0D0C                     i1l10198 0C8F  
                   i1l10392 067D                     i1l10544 0D13                     i1l10536 0CF6  
                   i1l10528 0CDA                     i1l10394 0683                     i1l10538 0CFD  
                   i1l10396 0687                     i1l10388 0671                     i1l10398 0695  
        __size_of_robotTurn 0088                  ??_Debounce 0072            ??_lcd_write_data 0020  
                 ?_lcd_init 0072                     _SSPSTAT 0094        __end_of_readDistance 0AC6  
                 ?_init_adc 0072                   ?_ser_init 0072                   ?_ser_isrx 0072  
             ??_calibrateIR 005A                     ___awmod 0791             __size_of___wmul 002C  
                   ___lwdiv 0DA1                     ___lwmod 0D14   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 0EFB  
                   _dpowers 0810            ___awmod@dividend 0022                     _lowByte 00D7  
                   _ser_tmp 00D8                     _sprintf 0491                  ??_lcd_init 0023  
      end_of_initialization 0C61           __end_of_ser_getch 0B3A                   _SCAN_FLAG 00D2  
                   init_ram 0A63                  ??_init_adc 0020           __end_of_ser_putch 0B18  
         __end_of_robo_init 0A2D           __end_of_robotMove 1000                _LeftReleased 0385  
         __end_of_robotTurn 0791                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038C  
  __size_of_readAvgDistance 0055                  _robot_read 0A3A           ?_lcd_write_string 0027  
       __end_of_calibrateIR 0EFB          ??_lcd_write_string 0029                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024                   i1___lwmod 0CD0  
   __size_of_robot_distance 001A                  _totalSteps 00CC                  main@choice 0067  
             ?_spi_transfer 0072                   Menu@input 0020               _CenterPressed 0380  
              ?_ReadButtons 0072              __end_of___wmul 0C0A           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 0E41         start_initialization 0C36  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038D  
            _RTC_FLAG_250MS 0388              _RTC_FLAG_500MS 0389                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 0E96                 __pdataBANK1 00DC  
          _adc_read_channel 0C95                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 0AB0           __size_of_adc_read 0029                 __pbssCOMMON 007D  
         ??_readAvgDistance 0030               __pcstackBANK0 0020           __size_of_lcd_init 002B  
               sprintf@_val 003F                 sprintf@flag 003D           robotMove@distance 0022  
               sprintf@prec 003E                _current_step 00E8            readAvgDistance@i 0032  
         __size_of_init_adc 0016            ___lwdiv@dividend 0028                    ?___awmod 0020  
                 __ptext900 0A4C                   __ptext901 0A86                   __ptext910 0A72  
                 __ptext902 0A9A                   __ptext911 0D5A                   __ptext903 0C95  
                 __ptext912 0B3A                   __ptext904 0791                   __ptext913 0B8A  
                 __ptext905 0D14                   __ptext914 0591                   __ptext906 0DA1  
                 __ptext915 0C65                   __ptext907 0BDE                   __ptext916 0CD0  
                 __ptext908 0AF7                   __ptext917 0671                   __ptext909 0AC6  
                 __ptext918 0000                   __ptext890 0C0A                   __ptext882 0EFB  
                 __ptext891 0A15                   __ptext883 0E96                   __ptext892 0A3A  
                 __ptext884 0E41                   __ptext893 0491                   __ptext885 0238  
                 __ptext894 0B18                   __ptext886 0B62                   __ptext895 0015  
                 __ptext887 0AB0                   __ptext896 0709                   __ptext888 0ADD  
                 __ptext897 0F78                   __ptext889 0BB3                   __ptext898 0DF1  
                 __ptext899 0A20           __size_of_ser_init 0028           __size_of_ser_isrx 0017  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0800  
                 _dist_high 00C0                    ?_scan360 005A         readDistance@fullval 002C  
                ser_getch@c 0021            ___lwdiv@quotient 002B              _robot_distance 0ADD  
               ??i1___lwmod 0076                    ?_sprintf 0034     __size_of_lcd_set_cursor 000B  
         interrupt_function 0004      __size_of_UpdateDisplay 014D              ___wmul@product 0024  
       __size_of_robot_read 0012                  ser_putch@c 0021                   _ser_getch 0B18  
                 _ser_putch 0AF7                   _robo_init 0A20                   _robotMove 0F78  
                 _robotTurn 0709                _RightPressed 038B        __size_of_ReadButtons 0030  
      __end_of_spi_transfer 0A86                 __stringbase 080F           ___wmul@multiplier 0020  
    UpdateDisplay@adcOutput 004A            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 0671      __end_of_robot_distance 0AF7           _LeftDebounceCount 00D0  
 __size_of_lcd_write_string 002C          scan360@lowestSteps 005E     __size_of_lcd_write_data 0013  
                ?_ser_getch 0072                  ?_ser_putch 0072     adc_read_channel@channel 0027  
             _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 038A                  ?_robo_init 0072  
                 init_fetch 0A5F                  ?_robotMove 0022                  ?_robotTurn 0022  
                _ADCconvert 0015            __size_of___awmod 0068            __size_of___lwdiv 0050  
          __size_of___lwmod 0046               _UpdateDisplay 0238                    _adc_read 0B8A  
               _currentMenu 00D4            __size_of_scan360 007D             ?_robot_distance 0072  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00DC  
                  _highByte 00D6                    _lcd_init 0BB3                    _distance 00C4  
                  _dist_low 00C2            __size_of_sprintf 0100    __end_of_adc_read_channel 0CD0  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 0A9A  
             __size_of_isr1 00E0               __size_of_main 010C               __size_of_init 0028  
          robot_read@packet 0022                    clear_ram 0A0D                    _ser_init 0B3A  
                  _ser_isrx 0AC6             _readAvgDistance 0E41                ?_calibrateIR 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00CE  
              _RTC_FLAG_1MS 0387          UpdateDisplay@F1228 0190                    intlevel1 0000  
            _lcd_set_cursor 0A15                   sprintf@ap 003C                   sprintf@sp 0043  
          ___lwmod@dividend 0030          __end_of_robot_read 0A4C                   stringcode 080A  
               ??_ser_getch 0020                 _serialInput 00D9                 ??_ser_putch 0020  
             _distTravelled 00E6                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotMove 0024                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 0A86            scan360@lowestVal 005C          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
           ___lwmod@divisor 002E             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 0A20  
          _lcd_write_string 0C0A                _spi_transfer 0A72           _current_direction 00D5  
               _RTC_Counter 0068     __end_of_readAvgDistance 0E96              _lcd_write_data 0A4C  
