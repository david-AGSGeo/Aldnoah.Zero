

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri May 01 15:07:12 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMove
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_main,___wmul
    57                           	FNCALL	_main,___awdiv
    58                           	FNCALL	_main,_ChargeMode
    59                           	FNCALL	_robotMove,_ser_putch
    60                           	FNCALL	_robotMove,_robot_read
    61                           	FNCALL	_robotMove,_UpdateDisplay
    62                           	FNCALL	_scan360,_readAvgDistance
    63                           	FNCALL	_scan360,_rotate
    64                           	FNCALL	_scan360,_UpdateDisplay
    65                           	FNCALL	_ChargeMode,_ser_putch
    66                           	FNCALL	_ChargeMode,_UpdateDisplay
    67                           	FNCALL	_calibrateIR,_rotate
    68                           	FNCALL	_calibrateIR,_UpdateDisplay
    69                           	FNCALL	_readAvgDistance,_readDistance
    70                           	FNCALL	_readAvgDistance,___lwdiv
    71                           	FNCALL	_readAvgDistance,_ADCconvert
    72                           	FNCALL	_UpdateDisplay,_lcd_write_control
    73                           	FNCALL	_UpdateDisplay,_sprintf
    74                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    75                           	FNCALL	_UpdateDisplay,_lcd_write_string
    76                           	FNCALL	_UpdateDisplay,___awmod
    77                           	FNCALL	_init,_ser_init
    78                           	FNCALL	_init,_init_adc
    79                           	FNCALL	_init,_lcd_init
    80                           	FNCALL	_init,_robo_init
    81                           	FNCALL	_readDistance,_adc_read_channel
    82                           	FNCALL	_robot_read,_ser_putch
    83                           	FNCALL	_robot_read,_ser_getch
    84                           	FNCALL	_lcd_init,_lcd_write_control
    85                           	FNCALL	_lcd_write_string,_lcd_write_data
    86                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    87                           	FNCALL	_ser_getch,_ser_isrx
    88                           	FNCALL	_sprintf,___lwdiv
    89                           	FNCALL	_sprintf,___lwmod
    90                           	FNCALL	_ADCconvert,___wmul
    91                           	FNCALL	_ADCconvert,___lwdiv
    92                           	FNCALL	_robotTurn,_ser_putch
    93                           	FNCALL	_rotate,_spi_transfer
    94                           	FNCALL	_robo_init,_ser_putch
    95                           	FNCALL	_adc_read_channel,_adc_read
    96                           	FNROOT	_main
    97                           	FNCALL	_isr1,i1___lwmod
    98                           	FNCALL	_isr1,_ReadButtons
    99                           	FNCALL	_ReadButtons,_Debounce
   100                           	FNCALL	intlevel1,_isr1
   101                           	global	intlevel1
   102                           	FNROOT	intlevel1
   103                           	global	_menuStrings
   104                           	global	_shortMenuStrings
   105                           	global	_current_step
   106                           psect	idataBANK1,class=CODE,space=0,delta=2
   107                           global __pidataBANK1
   108  07F3                     __pidataBANK1:
   109                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
   110                           	line	32
   111                           
   112                           ;initializer for _menuStrings
   113  07F3  3455               	retlw	(STR_1-__stringbase)&0ffh
   114  07F4  344C               	retlw	(STR_2-__stringbase)&0ffh
   115  07F5  3467               	retlw	(STR_3-__stringbase)&0ffh
   116  07F6  3470               	retlw	(STR_4-__stringbase)&0ffh
   117  07F7  345E               	retlw	(STR_5-__stringbase)&0ffh
   118  07F8  3443               	retlw	(STR_6-__stringbase)&0ffh
   119                           	line	33
   120                           
   121                           ;initializer for _shortMenuStrings
   122  07F9  3494               	retlw	(STR_7-__stringbase)&0ffh
   123  07FA  3498               	retlw	(STR_8-__stringbase)&0ffh
   124  07FB  3480               	retlw	(STR_9-__stringbase)&0ffh
   125  07FC  348C               	retlw	(STR_10-__stringbase)&0ffh
   126  07FD  349C               	retlw	(STR_11-__stringbase)&0ffh
   127  07FE  3490               	retlw	(STR_12-__stringbase)&0ffh
   128                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
   129                           	line	30
   130                           
   131                           ;initializer for _current_step
   132  07FF  343C               	retlw	03Ch
   133                           	global	_dpowers
   134                           psect	strings,class=STRING,delta=2
   135                           global __pstrings
   136  0800                     __pstrings:
   137                           ;	global	stringdir,stringtab,__stringbase
   138  0800                     stringtab:
   139                           ;	String table - string pointers are 1 byte each
   140  0800  1BFF               	btfsc	(btemp+1),7
   141  0801  280A               	ljmp	stringcode
   142  0802  1383               	bcf	status,7
   143  0803  187F               	btfsc	(btemp+1),0
   144  0804  1783               	bsf	status,7
   145  0805  0800               	movf	indf,w
   146  0806  0A84               	incf fsr
   147  0807  1903               skipnz
   148  0808  0AFF               incf btemp+1
   149  0809  0008               	return
   150  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   151  080A  3008               movlw high(stringdir)
   152  080B  008A               movwf pclath
   153  080C  0804               movf fsr,w
   154  080D  0A84               incf fsr
   155  080E  0782               	addwf pc
   156  080F                     __stringbase:
   157  080F  3400               	retlw	0
   158                           psect	strings
   159                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   160                           	line	350
   161  0810                     _dpowers:
   162  0810  3401               	retlw	01h
   163  0811  3400               	retlw	0
   164                           
   165  0812  340A               	retlw	0Ah
   166  0813  3400               	retlw	0
   167                           
   168  0814  3464               	retlw	064h
   169  0815  3400               	retlw	0
   170                           
   171  0816  34E8               	retlw	0E8h
   172  0817  3403               	retlw	03h
   173                           
   174  0818  3410               	retlw	010h
   175  0819  3427               	retlw	027h
   176                           
   177                           	global	_dpowers
   178                           	global	_adcVal
   179                           	global	_txiptr
   180                           	global	UpdateDisplay@F1229
   181                           	global	_txfifo
   182                           	global	_buttonPressed
   183                           	global	_CenterPressed
   184                           	global	_CenterReleased
   185                           	global	_DownPressed
   186                           	global	_DownReleased
   187                           	global	_LeftPressed
   188                           	global	_LeftReleased
   189                           	global	_RTC_FLAG_10MS
   190                           	global	_RTC_FLAG_1MS
   191                           	global	_RTC_FLAG_250MS
   192                           	global	_RTC_FLAG_500MS
   193                           	global	_RTC_FLAG_50MS
   194                           	global	_RightPressed
   195                           	global	_RightReleased
   196                           	global	_UpPressed
   197                           	global	_UpReleased
   198                           	global	_rxfifo
   199                           	global	_RTC_Counter
   200                           	global	_distTravelled
   201                           	global	_dist_high
   202                           	global	_dist_low
   203                           	global	_distance
   204                           	global	_pos
   205                           	global	_test
   206                           	global	_total
   207                           	global	_totalSteps
   208                           	global	_BumpSensors
   209                           	global	_CenterDebounceCount
   210                           	global	_DistHighByte
   211                           	global	_DistLowByte
   212                           	global	_DownDebounceCount
   213                           	global	_LeftDebounceCount
   214                           	global	_RightDebounceCount
   215                           	global	_UpDebounceCount
   216                           	global	_currentMenu
   217                           	global	_current_direction
   218                           	global	_highByte
   219                           	global	_lowByte
   220                           	global	_rxiptr
   221                           	global	_rxoptr
   222                           	global	_ser_tmp
   223                           	global	_serialInput
   224                           	global	_turnhighByte
   225                           	global	_turnlowByte
   226                           	global	_txoptr
   227                           	global	_ADCON0
   228  001F                     _ADCON0	set	31
   229                           	global	_ADRESH
   230  001E                     _ADRESH	set	30
   231                           	global	_PORTA
   232  0005                     _PORTA	set	5
   233                           	global	_PORTC
   234  0007                     _PORTC	set	7
   235                           	global	_PORTD
   236  0008                     _PORTD	set	8
   237                           	global	_PORTE
   238  0009                     _PORTE	set	9
   239                           	global	_RCREG
   240  001A                     _RCREG	set	26
   241                           	global	_SSPBUF
   242  0013                     _SSPBUF	set	19
   243                           	global	_SSPCON
   244  0014                     _SSPCON	set	20
   245                           	global	_TMR0
   246  0001                     _TMR0	set	1
   247                           	global	_TXREG
   248  0019                     _TXREG	set	25
   249                           	global	AT25256A@CS0
   250  0038                     AT25256A@CS0	set	56
   251                           	global	AT25256A@CS1
   252  0039                     AT25256A@CS1	set	57
   253                           	global	_CARRY
   254  0018                     _CARRY	set	24
   255                           	global	_CHS0
   256  00FB                     _CHS0	set	251
   257                           	global	_CHS1
   258  00FC                     _CHS1	set	252
   259                           	global	_CHS2
   260  00FD                     _CHS2	set	253
   261                           	global	_CREN
   262  00C4                     _CREN	set	196
   263                           	global	_GIE
   264  005F                     _GIE	set	95
   265                           	global	_GO
   266  00FA                     _GO	set	250
   267                           	global	_OERR
   268  00C1                     _OERR	set	193
   269                           	global	_PEIE
   270  005E                     _PEIE	set	94
   271                           	global	_RB0
   272  0030                     _RB0	set	48
   273                           	global	_RB2
   274  0032                     _RB2	set	50
   275                           	global	_RB3
   276  0033                     _RB3	set	51
   277                           	global	_RB4
   278  0034                     _RB4	set	52
   279                           	global	_RB5
   280  0035                     _RB5	set	53
   281                           	global	_RB6
   282  0036                     _RB6	set	54
   283                           	global	_RC0
   284  0038                     _RC0	set	56
   285                           	global	_RC1
   286  0039                     _RC1	set	57
   287                           	global	_RC2
   288  003A                     _RC2	set	58
   289                           	global	_RCIF
   290  0065                     _RCIF	set	101
   291                           	global	_RE0
   292  0048                     _RE0	set	72
   293                           	global	_RE1
   294  0049                     _RE1	set	73
   295                           	global	_RE2
   296  004A                     _RE2	set	74
   297                           	global	_RX9
   298  00C6                     _RX9	set	198
   299                           	global	_SPEN
   300  00C7                     _SPEN	set	199
   301                           	global	_SSPIF
   302  0063                     _SSPIF	set	99
   303                           	global	_TMR0IE
   304  005D                     _TMR0IE	set	93
   305                           	global	_TMR0IF
   306  005A                     _TMR0IF	set	90
   307                           	global	_TXIF
   308  0064                     _TXIF	set	100
   309                           	global	_ADCON1
   310  009F                     _ADCON1	set	159
   311                           	global	_ADRESL
   312  009E                     _ADRESL	set	158
   313                           	global	_OPTION_REG
   314  0081                     _OPTION_REG	set	129
   315                           	global	_SPBRG
   316  0099                     _SPBRG	set	153
   317                           	global	_SSPSTAT
   318  0094                     _SSPSTAT	set	148
   319                           	global	_TRISA
   320  0085                     _TRISA	set	133
   321                           	global	_TRISB
   322  0086                     _TRISB	set	134
   323                           	global	_TRISC
   324  0087                     _TRISC	set	135
   325                           	global	_TRISD
   326  0088                     _TRISD	set	136
   327                           	global	_TRISE
   328  0089                     _TRISE	set	137
   329                           	global	_BRGH
   330  04C2                     _BRGH	set	1218
   331                           	global	_RCIE
   332  0465                     _RCIE	set	1125
   333                           	global	_SYNC
   334  04C4                     _SYNC	set	1220
   335                           	global	_TX9
   336  04C6                     _TX9	set	1222
   337                           	global	_TXEN
   338  04C5                     _TXEN	set	1221
   339                           	global	_TXIE
   340  0464                     _TXIE	set	1124
   341                           	global	_EEADR
   342  010D                     _EEADR	set	269
   343                           	global	_EEDATA
   344  010C                     _EEDATA	set	268
   345                           	global	_EECON1
   346  018C                     _EECON1	set	396
   347                           	global	_EECON2
   348  018D                     _EECON2	set	397
   349                           	global	_RD
   350  0C60                     _RD	set	3168
   351                           	global	_WR
   352  0C61                     _WR	set	3169
   353                           	global	_WREN
   354  0C62                     _WREN	set	3170
   355                           	
   356  081A                     STR_18:	
   357  081A  3420               	retlw	32	;' '
   358  081B  3443               	retlw	67	;'C'
   359  081C  3468               	retlw	104	;'h'
   360  081D  3461               	retlw	97	;'a'
   361  081E  3472               	retlw	114	;'r'
   362  081F  3467               	retlw	103	;'g'
   363  0820  3469               	retlw	105	;'i'
   364  0821  346E               	retlw	110	;'n'
   365  0822  3467               	retlw	103	;'g'
   366  0823  3420               	retlw	32	;' '
   367  0824  344D               	retlw	77	;'M'
   368  0825  346F               	retlw	111	;'o'
   369  0826  3464               	retlw	100	;'d'
   370  0827  3465               	retlw	101	;'e'
   371  0828  3420               	retlw	32	;' '
   372  0829  3400               	retlw	0
   373                           psect	strings
   374                           	
   375  082A                     STR_14:	
   376  082A  345A               	retlw	90	;'Z'
   377  082B  3465               	retlw	101	;'e'
   378  082C  3472               	retlw	114	;'r'
   379  082D  346F               	retlw	111	;'o'
   380  082E  3420               	retlw	32	;' '
   381  082F  3453               	retlw	83	;'S'
   382  0830  3474               	retlw	116	;'t'
   383  0831  3465               	retlw	101	;'e'
   384  0832  3470               	retlw	112	;'p'
   385  0833  345F               	retlw	95	;'_'
   386  0834  344D               	retlw	77	;'M'
   387  0835  346F               	retlw	111	;'o'
   388  0836  3474               	retlw	116	;'t'
   389  0837  346F               	retlw	111	;'o'
   390  0838  3472               	retlw	114	;'r'
   391  0839  3400               	retlw	0
   392                           psect	strings
   393                           	
   394  083A                     STR_13:	
   395  083A  3441               	retlw	65	;'A'
   396  083B  3444               	retlw	68	;'D'
   397  083C  3443               	retlw	67	;'C'
   398  083D  343A               	retlw	58	;':'
   399  083E  3425               	retlw	37	;'%'
   400  083F  3464               	retlw	100	;'d'
   401  0840  3420               	retlw	32	;' '
   402  0841  3444               	retlw	68	;'D'
   403  0842  3469               	retlw	105	;'i'
   404  0843  3473               	retlw	115	;'s'
   405  0844  3474               	retlw	116	;'t'
   406  0845  343A               	retlw	58	;':'
   407  0846  3425               	retlw	37	;'%'
   408  0847  3464               	retlw	100	;'d'
   409  0848  3400               	retlw	0
   410                           psect	strings
   411                           	
   412  0849                     STR_19:	
   413  0849  3420               	retlw	32	;' '
   414  084A  3420               	retlw	32	;' '
   415  084B  3445               	retlw	69	;'E'
   416  084C  3458               	retlw	88	;'X'
   417  084D  3449               	retlw	73	;'I'
   418  084E  3454               	retlw	84	;'T'
   419  084F  3420               	retlw	32	;' '
   420  0850  3420               	retlw	32	;' '
   421  0851  3400               	retlw	0
   422                           psect	strings
   423                           	
   424  0852                     STR_6:	
   425  0852  3420               	retlw	32	;' '
   426  0853  3443               	retlw	67	;'C'
   427  0854  3468               	retlw	104	;'h'
   428  0855  3461               	retlw	97	;'a'
   429  0856  3472               	retlw	114	;'r'
   430  0857  3467               	retlw	103	;'g'
   431  0858  3465               	retlw	101	;'e'
   432  0859  3420               	retlw	32	;' '
   433  085A  3400               	retlw	0
   434                           psect	strings
   435                           	
   436  085B                     STR_2:	
   437  085B  3453               	retlw	83	;'S'
   438  085C  3463               	retlw	99	;'c'
   439  085D  3461               	retlw	97	;'a'
   440  085E  346E               	retlw	110	;'n'
   441  085F  345F               	retlw	95	;'_'
   442  0860  3433               	retlw	51	;'3'
   443  0861  3436               	retlw	54	;'6'
   444  0862  3430               	retlw	48	;'0'
   445  0863  3400               	retlw	0
   446                           psect	strings
   447                           	
   448  0864                     STR_1:	
   449  0864  3443               	retlw	67	;'C'
   450  0865  3461               	retlw	97	;'a'
   451  0866  346C               	retlw	108	;'l'
   452  0867  3469               	retlw	105	;'i'
   453  0868  3462               	retlw	98	;'b'
   454  0869  345F               	retlw	95	;'_'
   455  086A  3449               	retlw	73	;'I'
   456  086B  3452               	retlw	82	;'R'
   457  086C  3400               	retlw	0
   458                           psect	strings
   459                           	
   460  086D                     STR_5:	
   461  086D  3446               	retlw	70	;'F'
   462  086E  346C               	retlw	108	;'l'
   463  086F  3477               	retlw	119	;'w'
   464  0870  345F               	retlw	95	;'_'
   465  0871  3457               	retlw	87	;'W'
   466  0872  3461               	retlw	97	;'a'
   467  0873  346C               	retlw	108	;'l'
   468  0874  346C               	retlw	108	;'l'
   469  0875  3400               	retlw	0
   470                           psect	strings
   471                           	
   472  0876                     STR_3:	
   473  0876  3444               	retlw	68	;'D'
   474  0877  3472               	retlw	114	;'r'
   475  0878  3469               	retlw	105	;'i'
   476  0879  3476               	retlw	118	;'v'
   477  087A  3465               	retlw	101	;'e'
   478  087B  345F               	retlw	95	;'_'
   479  087C  3432               	retlw	50	;'2'
   480  087D  346D               	retlw	109	;'m'
   481  087E  3400               	retlw	0
   482                           psect	strings
   483                           	
   484  087F                     STR_4:	
   485  087F  3444               	retlw	68	;'D'
   486  0880  3472               	retlw	114	;'r'
   487  0881  3469               	retlw	105	;'i'
   488  0882  3476               	retlw	118	;'v'
   489  0883  3465               	retlw	101	;'e'
   490  0884  345F               	retlw	95	;'_'
   491  0885  344C               	retlw	76	;'L'
   492  0886  3400               	retlw	0
   493                           psect	strings
   494                           	
   495  0887                     STR_16:	
   496  0887  3443               	retlw	67	;'C'
   497  0888  344F               	retlw	79	;'O'
   498  0889  344E               	retlw	78	;'N'
   499  088A  3446               	retlw	70	;'F'
   500  088B  3449               	retlw	73	;'I'
   501  088C  3452               	retlw	82	;'R'
   502  088D  344D               	retlw	77	;'M'
   503  088E  3400               	retlw	0
   504                           psect	strings
   505                           	
   506  088F                     STR_9:	
   507  088F  3444               	retlw	68	;'D'
   508  0890  3472               	retlw	114	;'r'
   509  0891  3432               	retlw	50	;'2'
   510  0892  3400               	retlw	0
   511                           psect	strings
   512                           	
   513  0893                     STR_15:	
   514  0893  343C               	retlw	60	;'<'
   515  0894  343C               	retlw	60	;'<'
   516  0895  343C               	retlw	60	;'<'
   517  0896  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  0897                     STR_17:	
   521  0897  343E               	retlw	62	;'>'
   522  0898  343E               	retlw	62	;'>'
   523  0899  343E               	retlw	62	;'>'
   524  089A  3400               	retlw	0
   525                           psect	strings
   526                           	
   527  089B                     STR_10:	
   528  089B  3444               	retlw	68	;'D'
   529  089C  3472               	retlw	114	;'r'
   530  089D  344C               	retlw	76	;'L'
   531  089E  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  089F                     STR_12:	
   535  089F  3443               	retlw	67	;'C'
   536  08A0  3468               	retlw	104	;'h'
   537  08A1  3467               	retlw	103	;'g'
   538  08A2  3400               	retlw	0
   539                           psect	strings
   540                           	
   541  08A3                     STR_7:	
   542  08A3  3443               	retlw	67	;'C'
   543  08A4  3461               	retlw	97	;'a'
   544  08A5  346C               	retlw	108	;'l'
   545  08A6  3400               	retlw	0
   546                           psect	strings
   547                           	
   548  08A7                     STR_8:	
   549  08A7  3453               	retlw	83	;'S'
   550  08A8  3463               	retlw	99	;'c'
   551  08A9  346E               	retlw	110	;'n'
   552  08AA  3400               	retlw	0
   553                           psect	strings
   554                           	
   555  08AB                     STR_11:	
   556  08AB  3446               	retlw	70	;'F'
   557  08AC  346C               	retlw	108	;'l'
   558  08AD  3477               	retlw	119	;'w'
   559  08AE  3400               	retlw	0
   560                           psect	strings
   561                           	file	"Assignment3_AldnoahZero.as"
   562                           	line	#
   563                           psect cinit,class=CODE,delta=2
   564                           global start_initialization
   565  17D6                     start_initialization:
   566                           
   567                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   568                           global __pbitbssCOMMON
   569  0380                     __pbitbssCOMMON:
   570  0380                     _CenterPressed:
   571  0380                            ds      1
   572                           
   573  0381                     _CenterReleased:
   574  0381                            ds      1
   575                           
   576  0382                     _DownPressed:
   577  0382                            ds      1
   578                           
   579  0383                     _DownReleased:
   580  0383                            ds      1
   581                           
   582  0384                     _LeftPressed:
   583  0384                            ds      1
   584                           
   585  0385                     _LeftReleased:
   586  0385                            ds      1
   587                           
   588  0386                     _RTC_FLAG_10MS:
   589  0386                            ds      1
   590                           
   591  0387                     _RTC_FLAG_1MS:
   592  0387                            ds      1
   593                           
   594  0388                     _RTC_FLAG_250MS:
   595  0388                            ds      1
   596                           
   597  0389                     _RTC_FLAG_500MS:
   598  0389                            ds      1
   599                           
   600  038A                     _RTC_FLAG_50MS:
   601  038A                            ds      1
   602                           
   603  038B                     _RightPressed:
   604  038B                            ds      1
   605                           
   606  038C                     _RightReleased:
   607  038C                            ds      1
   608                           
   609  038D                     _UpPressed:
   610  038D                            ds      1
   611                           
   612  038E                     _UpReleased:
   613  038E                            ds      1
   614                           
   615                           psect	bssCOMMON,class=COMMON,space=1
   616                           global __pbssCOMMON
   617  007D                     __pbssCOMMON:
   618  007D                     _buttonPressed:
   619  007D                            ds      1
   620                           
   621                           psect	bssBANK0,class=BANK0,space=1
   622                           global __pbssBANK0
   623  006D                     __pbssBANK0:
   624  006D                     _adcVal:
   625  006D                            ds      2
   626                           
   627  006F                     _txiptr:
   628  006F                            ds      1
   629                           
   630                           psect	bssBANK1,class=BANK1,space=1
   631                           global __pbssBANK1
   632  00A0                     __pbssBANK1:
   633  00A0                     _rxfifo:
   634  00A0                            ds      16
   635                           
   636  00B0                     _RTC_Counter:
   637  00B0                            ds      2
   638                           
   639  00B2                     _distTravelled:
   640  00B2                            ds      2
   641                           
   642  00B4                     _dist_high:
   643  00B4                            ds      2
   644                           
   645  00B6                     _dist_low:
   646  00B6                            ds      2
   647                           
   648  00B8                     _distance:
   649  00B8                            ds      2
   650                           
   651  00BA                     _pos:
   652  00BA                            ds      2
   653                           
   654  00BC                     _test:
   655  00BC                            ds      2
   656                           
   657  00BE                     _total:
   658  00BE                            ds      2
   659                           
   660  00C0                     _totalSteps:
   661  00C0                            ds      2
   662                           
   663  00C2                     _BumpSensors:
   664  00C2                            ds      1
   665                           
   666  00C3                     _CenterDebounceCount:
   667  00C3                            ds      1
   668                           
   669  00C4                     _DistHighByte:
   670  00C4                            ds      1
   671                           
   672  00C5                     _DistLowByte:
   673  00C5                            ds      1
   674                           
   675  00C6                     _DownDebounceCount:
   676  00C6                            ds      1
   677                           
   678  00C7                     _LeftDebounceCount:
   679  00C7                            ds      1
   680                           
   681  00C8                     _RightDebounceCount:
   682  00C8                            ds      1
   683                           
   684  00C9                     _UpDebounceCount:
   685  00C9                            ds      1
   686                           
   687  00CA                     _currentMenu:
   688  00CA                            ds      1
   689                           
   690  00CB                     _current_direction:
   691  00CB                            ds      1
   692                           
   693  00CC                     _highByte:
   694  00CC                            ds      1
   695                           
   696  00CD                     _lowByte:
   697  00CD                            ds      1
   698                           
   699  00CE                     _rxiptr:
   700  00CE                            ds      1
   701                           
   702  00CF                     _rxoptr:
   703  00CF                            ds      1
   704                           
   705  00D0                     _ser_tmp:
   706  00D0                            ds      1
   707                           
   708  00D1                     _serialInput:
   709  00D1                            ds      1
   710                           
   711  00D2                     _turnhighByte:
   712  00D2                            ds      1
   713                           
   714  00D3                     _turnlowByte:
   715  00D3                            ds      1
   716                           
   717  00D4                     _txoptr:
   718  00D4                            ds      1
   719                           
   720                           psect	dataBANK1,class=BANK1,space=1
   721                           global __pdataBANK1
   722  00D5                     __pdataBANK1:
   723                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
   724                           	line	32
   725  00D5                     _menuStrings:
   726  00D5                            ds      6
   727                           
   728                           psect	dataBANK1
   729                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
   730                           	line	33
   731  00DB                     _shortMenuStrings:
   732  00DB                            ds      6
   733                           
   734                           psect	dataBANK1
   735                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
   736                           	line	30
   737  00E1                     _current_step:
   738  00E1                            ds      1
   739                           
   740                           psect	bssBANK3,class=BANK3,space=1
   741                           global __pbssBANK3
   742  0190                     __pbssBANK3:
   743  0190                     UpdateDisplay@F1229:
   744  0190                            ds      16
   745                           
   746  01A0                     _txfifo:
   747  01A0                            ds      16
   748                           
   749                           psect clrtext,class=CODE,delta=2
   750                           global clear_ram
   751                           ;	Called with FSR containing the base address, and
   752                           ;	W with the last address+1
   753  16C8                     clear_ram:
   754  16C8  0064               	clrwdt			;clear the watchdog before getting into this loop
   755  16C9                     clrloop:
   756  16C9  0180               	clrf	indf		;clear RAM location pointed to by FSR
   757  16CA  0A84               	incf	fsr,f		;increment pointer
   758  16CB  0604               	xorwf	fsr,w		;XOR with final address
   759  16CC  1903               	btfsc	status,2	;have we reached the end yet?
   760  16CD  3400               	retlw	0		;all done for this memory range, return
   761  16CE  0604               	xorwf	fsr,w		;XOR again to restore value
   762  16CF  2EC9               	goto	clrloop		;do the next byte
   763                           
   764                           ; Clear objects allocated to BITCOMMON
   765                           psect cinit,class=CODE,delta=2
   766  17D6  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   767  17D7  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   768                           ; Clear objects allocated to COMMON
   769                           psect cinit,class=CODE,delta=2
   770  17D8  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   771                           ; Clear objects allocated to BANK0
   772                           psect cinit,class=CODE,delta=2
   773  17D9  01ED               	clrf	((__pbssBANK0)+0)&07Fh
   774  17DA  01EE               	clrf	((__pbssBANK0)+1)&07Fh
   775  17DB  01EF               	clrf	((__pbssBANK0)+2)&07Fh
   776                           ; Clear objects allocated to BANK1
   777                           psect cinit,class=CODE,delta=2
   778  17DC  1383               	bcf	status, 7	;select IRP bank0
   779  17DD  30A0               	movlw	low(__pbssBANK1)
   780  17DE  0084               	movwf	fsr
   781  17DF  30D5               	movlw	low((__pbssBANK1)+035h)
   782  17E0  160A  118A  26C8   	fcall	clear_ram
              160A  118A         
   783                           ; Clear objects allocated to BANK3
   784                           psect cinit,class=CODE,delta=2
   785  17E5  1783               	bsf	status, 7	;select IRP bank2
   786  17E6  3090               	movlw	low(__pbssBANK3)
   787  17E7  0084               	movwf	fsr
   788  17E8  30B0               	movlw	low((__pbssBANK3)+020h)
   789  17E9  160A  118A  26C8   	fcall	clear_ram
              160A  118A         
   790                           global btemp
   791                           psect inittext,class=CODE,delta=2
   792                           global init_fetch,btemp
   793                           ;	Called with low address in FSR and high address in W
   794  16EE                     init_fetch:
   795  16EE  087E               	movf btemp,w
   796  16EF  008A               	movwf pclath
   797  16F0  087F               	movf btemp+1,w
   798  16F1  0082               	movwf pc
   799                           global init_ram
   800                           ;Called with:
   801                           ;	high address of idata address in btemp 
   802                           ;	low address of idata address in btemp+1 
   803                           ;	low address of data in FSR
   804                           ;	high address + 1 of data in btemp-1
   805  16F2                     init_ram:
   806  16F2  160A  118A  26EE   	fcall init_fetch
              160A  118A         
   807  16F7  0080               	movwf indf,f
   808  16F8  0A84               	incf fsr,f
   809  16F9  0804               	movf fsr,w
   810  16FA  067D               	xorwf btemp-1,w
   811  16FB  1903               	btfsc status,2
   812  16FC  3400               	retlw 0
   813  16FD  0AFF               	incf btemp+1,f
   814  16FE  1903               	btfsc status,2
   815  16FF  0AFE               	incf btemp,f
   816  1700  2EF2               	goto init_ram
   817                           ; Initialize objects allocated to BANK1
   818                           psect cinit,class=CODE,delta=2
   819                           global init_ram, __pidataBANK1
   820  17EE  1383               	bcf	status, 7	;select IRP bank0
   821  17EF  30E2               	movlw low(__pdataBANK1+13)
   822  17F0  00FD               	movwf btemp-1,f
   823  17F1  3007               	movlw high(__pidataBANK1)
   824  17F2  00FE               	movwf btemp,f
   825  17F3  30F3               	movlw low(__pidataBANK1)
   826  17F4  00FF               	movwf btemp+1,f
   827  17F5  30D5               	movlw low(__pdataBANK1)
   828  17F6  0084               	movwf fsr,f
   829  17F7  160A  118A  26F2   	fcall init_ram
              160A  118A         
   830                           psect cinit,class=CODE,delta=2
   831                           global end_of_initialization
   832                           
   833                           ;End of C runtime variable initialization code
   834                           
   835  17FC                     end_of_initialization:
   836  17FC  0183               clrf status
   837  17FD  120A  118A  2815   ljmp _main	;jump to C main() function
   838                           psect	cstackCOMMON,class=COMMON,space=1
   839                           global __pcstackCOMMON
   840  0072                     __pcstackCOMMON:
   841                           	global	?_ser_init
   842  0072                     ?_ser_init:	; 0 bytes @ 0x0
   843                           	global	?_robo_init
   844  0072                     ?_robo_init:	; 0 bytes @ 0x0
   845                           	global	?_UpdateDisplay
   846  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   847                           	global	?_ser_putch
   848  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   849                           	global	?_readAvgDistance
   850  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   851                           	global	?_robot_read
   852  0072                     ?_robot_read:	; 0 bytes @ 0x0
   853                           	global	?_ADCconvert
   854  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   855                           	global	?_init_adc
   856  0072                     ?_init_adc:	; 0 bytes @ 0x0
   857                           	global	?_lcd_write_control
   858  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   859                           	global	?_lcd_write_data
   860  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   861                           	global	?_lcd_set_cursor
   862  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   863                           	global	?_lcd_init
   864  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   865                           	global	?_isr1
   866  0072                     ?_isr1:	; 0 bytes @ 0x0
   867                           	global	?_init
   868  0072                     ?_init:	; 0 bytes @ 0x0
   869                           	global	?_calibrateIR
   870  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   871                           	global	?_ChargeMode
   872  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   873                           	global	?_main
   874  0072                     ?_main:	; 0 bytes @ 0x0
   875                           	global	?_Debounce
   876  0072                     ?_Debounce:	; 0 bytes @ 0x0
   877                           	global	??_Debounce
   878  0072                     ??_Debounce:	; 0 bytes @ 0x0
   879                           	global	?_ser_isrx
   880  0072                     ?_ser_isrx:	; 1 bit 
   881                           	global	?_ReadButtons
   882  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   883                           	global	?_Menu
   884  0072                     ?_Menu:	; 1 bytes @ 0x0
   885                           	global	?_ser_getch
   886  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   887                           	global	?_adc_read_channel
   888  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   889                           	global	?_spi_transfer
   890  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   891                           	global	?i1___lwmod
   892  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   893                           	global	i1___lwmod@divisor
   894  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   895  0072                     	ds	1
   896                           	global	??_ReadButtons
   897  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   898  0073                     	ds	1
   899                           	global	i1___lwmod@dividend
   900  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   901  0074                     	ds	2
   902                           	global	??i1___lwmod
   903  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   904  0076                     	ds	1
   905                           	global	i1___lwmod@counter
   906  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   907  0077                     	ds	1
   908                           	global	??_isr1
   909  0078                     ??_isr1:	; 0 bytes @ 0x6
   910  0078                     	ds	5
   911                           psect	cstackBANK0,class=BANK0,space=1
   912                           global __pcstackBANK0
   913  0020                     __pcstackBANK0:
   914                           	global	??_ser_init
   915  0020                     ??_ser_init:	; 0 bytes @ 0x0
   916                           	global	??_ser_putch
   917  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   918                           	global	??_Menu
   919  0020                     ??_Menu:	; 0 bytes @ 0x0
   920                           	global	??_ser_getch
   921  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   922                           	global	??_init_adc
   923  0020                     ??_init_adc:	; 0 bytes @ 0x0
   924                           	global	??_lcd_write_control
   925  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   926                           	global	??_lcd_write_data
   927  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   928                           	global	??_spi_transfer
   929  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   930                           	global	??_ser_isrx
   931  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   932                           	global	?_adc_read
   933  0020                     ?_adc_read:	; 2 bytes @ 0x0
   934                           	global	?___wmul
   935  0020                     ?___wmul:	; 2 bytes @ 0x0
   936                           	global	?___awmod
   937  0020                     ?___awmod:	; 2 bytes @ 0x0
   938                           	global	Menu@BTN_input
   939  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   940                           	global	___wmul@multiplier
   941  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   942                           	global	___awmod@divisor
   943  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   944  0020                     	ds	1
   945                           	global	spi_transfer@temp
   946  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   947                           	global	ser_getch@c
   948  0021                     ser_getch@c:	; 1 bytes @ 0x1
   949                           	global	ser_putch@c
   950  0021                     ser_putch@c:	; 1 bytes @ 0x1
   951  0021                     	ds	1
   952                           	global	??_adc_read
   953  0022                     ??_adc_read:	; 0 bytes @ 0x2
   954                           	global	??_robo_init
   955  0022                     ??_robo_init:	; 0 bytes @ 0x2
   956                           	global	??_robot_read
   957  0022                     ??_robot_read:	; 0 bytes @ 0x2
   958                           	global	?_robotTurn
   959  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   960                           	global	lcd_write_control@databyte
   961  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   962                           	global	lcd_write_data@databyte
   963  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   964                           	global	spi_transfer@data
   965  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   966                           	global	robotTurn@distance
   967  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   968                           	global	___wmul@multiplicand
   969  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   970                           	global	___awmod@dividend
   971  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   972  0022                     	ds	1
   973                           	global	?_rotate
   974  0023                     ?_rotate:	; 0 bytes @ 0x3
   975                           	global	??_lcd_set_cursor
   976  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   977                           	global	??_lcd_init
   978  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   979                           	global	??_init
   980  0023                     ??_init:	; 0 bytes @ 0x3
   981                           	global	lcd_set_cursor@address
   982  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   983                           	global	rotate@numsteps
   984  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   985  0023                     	ds	1
   986                           	global	??_robotTurn
   987  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   988                           	global	??___wmul
   989  0024                     ??___wmul:	; 0 bytes @ 0x4
   990                           	global	??___awmod
   991  0024                     ??___awmod:	; 0 bytes @ 0x4
   992                           	global	adc_read@adc_value
   993  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   994                           	global	___wmul@product
   995  0024                     ___wmul@product:	; 2 bytes @ 0x4
   996  0024                     	ds	1
   997                           	global	rotate@direction
   998  0025                     rotate@direction:	; 1 bytes @ 0x5
   999                           	global	___awmod@counter
  1000  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1001  0025                     	ds	1
  1002                           	global	??_rotate
  1003  0026                     ??_rotate:	; 0 bytes @ 0x6
  1004                           	global	??_adc_read_channel
  1005  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1006                           	global	?___lwdiv
  1007  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1008                           	global	?___awdiv
  1009  0026                     ?___awdiv:	; 2 bytes @ 0x6
  1010                           	global	___awmod@sign
  1011  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1012                           	global	___lwdiv@divisor
  1013  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1014                           	global	___awdiv@divisor
  1015  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
  1016  0026                     	ds	1
  1017                           	global	?_lcd_write_string
  1018  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1019                           	global	adc_read_channel@channel
  1020  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1021                           	global	lcd_write_string@s
  1022  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1023  0027                     	ds	1
  1024                           	global	?_readDistance
  1025  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1026                           	global	rotate@i
  1027  0028                     rotate@i:	; 2 bytes @ 0x8
  1028                           	global	___lwdiv@dividend
  1029  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1030                           	global	___awdiv@dividend
  1031  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
  1032  0028                     	ds	1
  1033                           	global	??_lcd_write_string
  1034  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1035  0029                     	ds	1
  1036                           	global	??_readDistance
  1037  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1038                           	global	??___lwdiv
  1039  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1040                           	global	??___awdiv
  1041  002A                     ??___awdiv:	; 0 bytes @ 0xA
  1042  002A                     	ds	1
  1043                           	global	___awdiv@counter
  1044  002B                     ___awdiv@counter:	; 1 bytes @ 0xB
  1045                           	global	___lwdiv@quotient
  1046  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1047  002B                     	ds	1
  1048                           	global	___awdiv@sign
  1049  002C                     ___awdiv@sign:	; 1 bytes @ 0xC
  1050                           	global	readDistance@fullval
  1051  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1052  002C                     	ds	1
  1053                           	global	___lwdiv@counter
  1054  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1055                           	global	___awdiv@quotient
  1056  002D                     ___awdiv@quotient:	; 2 bytes @ 0xD
  1057  002D                     	ds	1
  1058                           	global	??_ADCconvert
  1059  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1060                           	global	?___lwmod
  1061  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1062                           	global	___lwmod@divisor
  1063  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1064  002E                     	ds	2
  1065                           	global	??_readAvgDistance
  1066  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1067                           	global	readAvgDistance@fullval
  1068  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1069                           	global	___lwmod@dividend
  1070  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1071  0030                     	ds	2
  1072                           	global	??___lwmod
  1073  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1074                           	global	readAvgDistance@i
  1075  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1076  0032                     	ds	1
  1077                           	global	___lwmod@counter
  1078  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1079  0033                     	ds	1
  1080                           	global	?_sprintf
  1081  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1082                           	global	sprintf@f
  1083  0034                     sprintf@f:	; 1 bytes @ 0x14
  1084  0034                     	ds	5
  1085                           	global	??_sprintf
  1086  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1087  0039                     	ds	3
  1088                           	global	sprintf@ap
  1089  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1090  003C                     	ds	1
  1091                           	global	sprintf@flag
  1092  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1093  003D                     	ds	1
  1094                           	global	sprintf@prec
  1095  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1096  003E                     	ds	1
  1097                           	global	sprintf@_val
  1098  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1099  003F                     	ds	4
  1100                           	global	sprintf@sp
  1101  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1102  0043                     	ds	1
  1103                           	global	sprintf@c
  1104  0044                     sprintf@c:	; 1 bytes @ 0x24
  1105  0044                     	ds	1
  1106                           	global	??_UpdateDisplay
  1107  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1108  0045                     	ds	4
  1109                           	global	UpdateDisplay@adcOutput
  1110  0049                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x29
  1111  0049                     	ds	16
  1112                           	global	?_robotMove
  1113  0059                     ?_robotMove:	; 0 bytes @ 0x39
  1114                           	global	??_calibrateIR
  1115  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1116                           	global	??_ChargeMode
  1117  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1118                           	global	?_scan360
  1119  0059                     ?_scan360:	; 2 bytes @ 0x39
  1120                           	global	robotMove@distance
  1121  0059                     robotMove@distance:	; 2 bytes @ 0x39
  1122  0059                     	ds	2
  1123                           	global	??_robotMove
  1124  005B                     ??_robotMove:	; 0 bytes @ 0x3B
  1125                           	global	??_scan360
  1126  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1127                           	global	scan360@lowestVal
  1128  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1129  005B                     	ds	2
  1130                           	global	scan360@lowestSteps
  1131  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1132  005D                     	ds	2
  1133                           	global	scan360@steps
  1134  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1135  005F                     	ds	2
  1136                           	global	??_main
  1137  0061                     ??_main:	; 0 bytes @ 0x41
  1138  0061                     	ds	3
  1139                           	global	main@direction1
  1140  0064                     main@direction1:	; 2 bytes @ 0x44
  1141  0064                     	ds	2
  1142                           	global	main@RT2A
  1143  0066                     main@RT2A:	; 2 bytes @ 0x46
  1144  0066                     	ds	2
  1145                           	global	main@choice
  1146  0068                     main@choice:	; 1 bytes @ 0x48
  1147  0068                     	ds	1
  1148                           	global	main@shortwall
  1149  0069                     main@shortwall:	; 2 bytes @ 0x49
  1150  0069                     	ds	2
  1151                           	global	main@RT2P
  1152  006B                     main@RT2P:	; 2 bytes @ 0x4B
  1153  006B                     	ds	2
  1154 ;;Data sizes: Strings 149, constant 10, data 13, bss 89, persistent 0 stack 0
  1155 ;;Auto spaces:   Size  Autos    Used
  1156 ;; COMMON          14     11      14
  1157 ;; BANK0           80     77      80
  1158 ;; BANK1           80      0      66
  1159 ;; BANK3           96      0      32
  1160 ;; BANK2           96      0       0
  1161                           
  1162 ;;
  1163 ;; Pointer list with targets:
  1164                           
  1165 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1166 ;;
  1167 ;; ?___awmod	int  size(1) Largest target is 0
  1168 ;;
  1169 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1170 ;;
  1171 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1172 ;;
  1173 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1174 ;;
  1175 ;; ?___awdiv	int  size(1) Largest target is 0
  1176 ;;
  1177 ;; ?_scan360	int  size(1) Largest target is 0
  1178 ;;
  1179 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1180 ;;
  1181 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1182 ;;
  1183 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1184 ;;		 -> STR_13(CODE[15]), 
  1185 ;;
  1186 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1187 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1188 ;;
  1189 ;; ?_sprintf	int  size(1) Largest target is 0
  1190 ;;
  1191 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1192 ;;		 -> ?_sprintf(BANK0[2]), 
  1193 ;;
  1194 ;; S8146$_cp	PTR const unsigned char  size(1) Largest target is 0
  1195 ;;
  1196 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1197 ;;
  1198 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1199 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1200 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1201 ;;
  1202 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1203 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1204 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1205 ;;
  1206 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1207 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1208 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), 
  1209 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1210 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1211 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1212 ;;
  1213                           
  1214                           
  1215 ;;
  1216 ;; Critical Paths under _main in COMMON
  1217 ;;
  1218 ;;   None.
  1219 ;;
  1220 ;; Critical Paths under _isr1 in COMMON
  1221 ;;
  1222 ;;   _isr1->i1___lwmod
  1223 ;;   _ReadButtons->_Debounce
  1224 ;;
  1225 ;; Critical Paths under _main in BANK0
  1226 ;;
  1227 ;;   _main->_scan360
  1228 ;;   _robotMove->_UpdateDisplay
  1229 ;;   _scan360->_UpdateDisplay
  1230 ;;   _ChargeMode->_UpdateDisplay
  1231 ;;   _calibrateIR->_UpdateDisplay
  1232 ;;   _readAvgDistance->_ADCconvert
  1233 ;;   _UpdateDisplay->_sprintf
  1234 ;;   _readDistance->_adc_read_channel
  1235 ;;   _robot_read->_ser_putch
  1236 ;;   _robot_read->_ser_getch
  1237 ;;   _lcd_init->_lcd_write_control
  1238 ;;   _lcd_write_string->___awmod
  1239 ;;   _lcd_set_cursor->_lcd_write_control
  1240 ;;   _sprintf->___lwmod
  1241 ;;   _ADCconvert->___lwdiv
  1242 ;;   _robotTurn->_ser_putch
  1243 ;;   _rotate->_spi_transfer
  1244 ;;   _robo_init->_ser_putch
  1245 ;;   _adc_read_channel->_adc_read
  1246 ;;   ___awdiv->___wmul
  1247 ;;   ___lwmod->___lwdiv
  1248 ;;   ___lwdiv->___wmul
  1249 ;;
  1250 ;; Critical Paths under _isr1 in BANK0
  1251 ;;
  1252 ;;   None.
  1253 ;;
  1254 ;; Critical Paths under _main in BANK1
  1255 ;;
  1256 ;;   None.
  1257 ;;
  1258 ;; Critical Paths under _isr1 in BANK1
  1259 ;;
  1260 ;;   None.
  1261 ;;
  1262 ;; Critical Paths under _main in BANK3
  1263 ;;
  1264 ;;   None.
  1265 ;;
  1266 ;; Critical Paths under _isr1 in BANK3
  1267 ;;
  1268 ;;   None.
  1269 ;;
  1270 ;; Critical Paths under _main in BANK2
  1271 ;;
  1272 ;;   None.
  1273 ;;
  1274 ;; Critical Paths under _isr1 in BANK2
  1275 ;;
  1276 ;;   None.
  1277                           
  1278 ;;
  1279 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1280 ;;
  1281                           
  1282 ;;
  1283 ;;Call Graph Tables:
  1284 ;;
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1287 ;; ---------------------------------------------------------------------------------
  1288 ;; (0) _main                                                12    12      0    9205
  1289 ;;                                             65 BANK0     12    12      0
  1290 ;;                               _init
  1291 ;;                         _robot_read
  1292 ;;                    _readAvgDistance
  1293 ;;                      _UpdateDisplay
  1294 ;;                               _Menu
  1295 ;;                        _calibrateIR
  1296 ;;                            _scan360
  1297 ;;                             _rotate
  1298 ;;                          _robotMove
  1299 ;;                          _robotTurn
  1300 ;;                             ___wmul
  1301 ;;                            ___awdiv
  1302 ;;                         _ChargeMode
  1303 ;; ---------------------------------------------------------------------------------
  1304 ;; (1) _robotMove                                            4     2      2    1394
  1305 ;;                                             57 BANK0      4     2      2
  1306 ;;                          _ser_putch
  1307 ;;                         _robot_read
  1308 ;;                      _UpdateDisplay
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (1) _scan360                                              8     6      2    2074
  1311 ;;                                             57 BANK0      8     6      2
  1312 ;;                    _readAvgDistance
  1313 ;;                             _rotate
  1314 ;;                      _UpdateDisplay
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (1) _ChargeMode                                           1     1      0    1305
  1317 ;;                                             57 BANK0      1     1      0
  1318 ;;                          _ser_putch
  1319 ;;                      _UpdateDisplay
  1320 ;; ---------------------------------------------------------------------------------
  1321 ;; (1) _calibrateIR                                          0     0      0    1381
  1322 ;;                             _rotate
  1323 ;;                      _UpdateDisplay
  1324 ;; ---------------------------------------------------------------------------------
  1325 ;; (2) _readAvgDistance                                      4     4      0     555
  1326 ;;                                             16 BANK0      4     4      0
  1327 ;;                       _readDistance
  1328 ;;                            ___lwdiv
  1329 ;;                         _ADCconvert
  1330 ;; ---------------------------------------------------------------------------------
  1331 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1332 ;;                                             37 BANK0     20    20      0
  1333 ;;                  _lcd_write_control
  1334 ;;                            _sprintf
  1335 ;;                     _lcd_set_cursor
  1336 ;;                   _lcd_write_string
  1337 ;;                            ___awmod
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (1) _init                                                 1     1      0      44
  1340 ;;                                              3 BANK0      1     1      0
  1341 ;;                           _ser_init
  1342 ;;                           _init_adc
  1343 ;;                           _lcd_init
  1344 ;;                          _robo_init
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (3) _readDistance                                         6     4      2      69
  1347 ;;                                              8 BANK0      6     4      2
  1348 ;;                   _adc_read_channel
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (2) _robot_read                                           2     2      0      45
  1351 ;;                                              2 BANK0      2     2      0
  1352 ;;                          _ser_putch
  1353 ;;                          _ser_getch
  1354 ;; ---------------------------------------------------------------------------------
  1355 ;; (2) _lcd_init                                             0     0      0      22
  1356 ;;                  _lcd_write_control
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (3) _lcd_write_string                                     2     0      2      67
  1359 ;;                                              7 BANK0      2     0      2
  1360 ;;                     _lcd_write_data
  1361 ;;                            ___awmod (ARG)
  1362 ;; ---------------------------------------------------------------------------------
  1363 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1364 ;;                                              3 BANK0      1     1      0
  1365 ;;                  _lcd_write_control
  1366 ;; ---------------------------------------------------------------------------------
  1367 ;; (3) _ser_getch                                            2     2      0      23
  1368 ;;                                              0 BANK0      2     2      0
  1369 ;;                           _ser_isrx
  1370 ;; ---------------------------------------------------------------------------------
  1371 ;; (3) _sprintf                                             17    12      5     798
  1372 ;;                                             20 BANK0     17    12      5
  1373 ;;                            ___lwdiv
  1374 ;;                            ___lwmod
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (3) _ADCconvert                                           2     2      0     254
  1377 ;;                                             14 BANK0      2     2      0
  1378 ;;                             ___wmul
  1379 ;;                            ___lwdiv
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (1) _robotTurn                                            3     1      2      88
  1382 ;;                                              2 BANK0      3     1      2
  1383 ;;                          _ser_putch
  1384 ;; ---------------------------------------------------------------------------------
  1385 ;; (1) _rotate                                               7     4      3      98
  1386 ;;                                              3 BANK0      7     4      3
  1387 ;;                       _spi_transfer
  1388 ;; ---------------------------------------------------------------------------------
  1389 ;; (2) _robo_init                                            0     0      0      22
  1390 ;;                          _ser_putch
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (4) _lcd_write_data                                       3     3      0      22
  1393 ;;                                              0 BANK0      3     3      0
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; (4) _lcd_write_control                                    3     3      0      22
  1396 ;;                                              0 BANK0      3     3      0
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (2) _init_adc                                             1     1      0       0
  1399 ;;                                              0 BANK0      1     1      0
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (4) _adc_read_channel                                     2     2      0      46
  1402 ;;                                              6 BANK0      2     2      0
  1403 ;;                           _adc_read
  1404 ;; ---------------------------------------------------------------------------------
  1405 ;; (3) ___awmod                                              7     3      4     296
  1406 ;;                                              0 BANK0      7     3      4
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (1) ___awdiv                                              9     5      4     300
  1409 ;;                                              6 BANK0      9     5      4
  1410 ;;                             ___wmul (ARG)
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (4) ___lwmod                                              6     2      4     159
  1413 ;;                                             14 BANK0      6     2      4
  1414 ;;                            ___lwdiv (ARG)
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (4) ___lwdiv                                              8     4      4     162
  1417 ;;                                              6 BANK0      8     4      4
  1418 ;;                             ___wmul (ARG)
  1419 ;; ---------------------------------------------------------------------------------
  1420 ;; (1) ___wmul                                               6     2      4      92
  1421 ;;                                              0 BANK0      6     2      4
  1422 ;; ---------------------------------------------------------------------------------
  1423 ;; (4) _ser_isrx                                             0     0      0       0
  1424 ;; ---------------------------------------------------------------------------------
  1425 ;; (2) _spi_transfer                                         3     3      0      30
  1426 ;;                                              0 BANK0      3     3      0
  1427 ;; ---------------------------------------------------------------------------------
  1428 ;; (1) _Menu                                                 1     1      0      22
  1429 ;;                                              0 BANK0      1     1      0
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (2) _ser_putch                                            2     2      0      22
  1432 ;;                                              0 BANK0      2     2      0
  1433 ;; ---------------------------------------------------------------------------------
  1434 ;; (2) _ser_init                                             1     1      0       0
  1435 ;;                                              0 BANK0      1     1      0
  1436 ;; ---------------------------------------------------------------------------------
  1437 ;; (5) _adc_read                                             6     4      2      24
  1438 ;;                                              0 BANK0      6     4      2
  1439 ;; ---------------------------------------------------------------------------------
  1440 ;; Estimated maximum stack depth 5
  1441 ;; ---------------------------------------------------------------------------------
  1442 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1443 ;; ---------------------------------------------------------------------------------
  1444 ;; (6) _isr1                                                 5     5      0     521
  1445 ;;                                              6 COMMON     5     5      0
  1446 ;;                          i1___lwmod
  1447 ;;                        _ReadButtons
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (7) _ReadButtons                                          0     0      0       0
  1450 ;;                           _Debounce
  1451 ;; ---------------------------------------------------------------------------------
  1452 ;; (7) i1___lwmod                                            6     2      4     521
  1453 ;;                                              0 COMMON     6     2      4
  1454 ;; ---------------------------------------------------------------------------------
  1455 ;; (8) _Debounce                                             1     1      0       0
  1456 ;;                                              0 COMMON     1     1      0
  1457 ;; ---------------------------------------------------------------------------------
  1458 ;; Estimated maximum stack depth 8
  1459 ;; ---------------------------------------------------------------------------------
  1460                           
  1461 ;; Call Graph Graphs:
  1462                           
  1463 ;; _main (ROOT)
  1464 ;;   _init
  1465 ;;     _ser_init
  1466 ;;     _init_adc
  1467 ;;     _lcd_init
  1468 ;;       _lcd_write_control
  1469 ;;     _robo_init
  1470 ;;       _ser_putch
  1471 ;;   _robot_read
  1472 ;;     _ser_putch
  1473 ;;     _ser_getch
  1474 ;;       _ser_isrx
  1475 ;;   _readAvgDistance
  1476 ;;     _readDistance
  1477 ;;       _adc_read_channel
  1478 ;;         _adc_read
  1479 ;;     ___lwdiv
  1480 ;;       ___wmul (ARG)
  1481 ;;     _ADCconvert
  1482 ;;       ___wmul
  1483 ;;       ___lwdiv
  1484 ;;         ___wmul (ARG)
  1485 ;;   _UpdateDisplay
  1486 ;;     _lcd_write_control
  1487 ;;     _sprintf
  1488 ;;       ___lwdiv
  1489 ;;         ___wmul (ARG)
  1490 ;;       ___lwmod
  1491 ;;         ___lwdiv (ARG)
  1492 ;;           ___wmul (ARG)
  1493 ;;     _lcd_set_cursor
  1494 ;;       _lcd_write_control
  1495 ;;     _lcd_write_string
  1496 ;;       _lcd_write_data
  1497 ;;       ___awmod (ARG)
  1498 ;;     ___awmod
  1499 ;;   _Menu
  1500 ;;   _calibrateIR
  1501 ;;     _rotate
  1502 ;;       _spi_transfer
  1503 ;;     _UpdateDisplay
  1504 ;;       _lcd_write_control
  1505 ;;       _sprintf
  1506 ;;         ___lwdiv
  1507 ;;           ___wmul (ARG)
  1508 ;;         ___lwmod
  1509 ;;           ___lwdiv (ARG)
  1510 ;;             ___wmul (ARG)
  1511 ;;       _lcd_set_cursor
  1512 ;;         _lcd_write_control
  1513 ;;       _lcd_write_string
  1514 ;;         _lcd_write_data
  1515 ;;         ___awmod (ARG)
  1516 ;;       ___awmod
  1517 ;;   _scan360
  1518 ;;     _readAvgDistance
  1519 ;;       _readDistance
  1520 ;;         _adc_read_channel
  1521 ;;           _adc_read
  1522 ;;       ___lwdiv
  1523 ;;         ___wmul (ARG)
  1524 ;;       _ADCconvert
  1525 ;;         ___wmul
  1526 ;;         ___lwdiv
  1527 ;;           ___wmul (ARG)
  1528 ;;     _rotate
  1529 ;;       _spi_transfer
  1530 ;;     _UpdateDisplay
  1531 ;;       _lcd_write_control
  1532 ;;       _sprintf
  1533 ;;         ___lwdiv
  1534 ;;           ___wmul (ARG)
  1535 ;;         ___lwmod
  1536 ;;           ___lwdiv (ARG)
  1537 ;;             ___wmul (ARG)
  1538 ;;       _lcd_set_cursor
  1539 ;;         _lcd_write_control
  1540 ;;       _lcd_write_string
  1541 ;;         _lcd_write_data
  1542 ;;         ___awmod (ARG)
  1543 ;;       ___awmod
  1544 ;;   _rotate
  1545 ;;     _spi_transfer
  1546 ;;   _robotMove
  1547 ;;     _ser_putch
  1548 ;;     _robot_read
  1549 ;;       _ser_putch
  1550 ;;       _ser_getch
  1551 ;;         _ser_isrx
  1552 ;;     _UpdateDisplay
  1553 ;;       _lcd_write_control
  1554 ;;       _sprintf
  1555 ;;         ___lwdiv
  1556 ;;           ___wmul (ARG)
  1557 ;;         ___lwmod
  1558 ;;           ___lwdiv (ARG)
  1559 ;;             ___wmul (ARG)
  1560 ;;       _lcd_set_cursor
  1561 ;;         _lcd_write_control
  1562 ;;       _lcd_write_string
  1563 ;;         _lcd_write_data
  1564 ;;         ___awmod (ARG)
  1565 ;;       ___awmod
  1566 ;;   _robotTurn
  1567 ;;     _ser_putch
  1568 ;;   ___wmul
  1569 ;;   ___awdiv
  1570 ;;     ___wmul (ARG)
  1571 ;;   _ChargeMode
  1572 ;;     _ser_putch
  1573 ;;     _UpdateDisplay
  1574 ;;       _lcd_write_control
  1575 ;;       _sprintf
  1576 ;;         ___lwdiv
  1577 ;;           ___wmul (ARG)
  1578 ;;         ___lwmod
  1579 ;;           ___lwdiv (ARG)
  1580 ;;             ___wmul (ARG)
  1581 ;;       _lcd_set_cursor
  1582 ;;         _lcd_write_control
  1583 ;;       _lcd_write_string
  1584 ;;         _lcd_write_data
  1585 ;;         ___awmod (ARG)
  1586 ;;       ___awmod
  1587 ;;
  1588 ;; _isr1 (ROOT)
  1589 ;;   i1___lwmod
  1590 ;;   _ReadButtons
  1591 ;;     _Debounce
  1592 ;;
  1593                           
  1594 ;; Address spaces:
  1595                           
  1596 ;;Name               Size   Autos  Total    Cost      Usage
  1597 ;;BANK3               60      0      20       9       33.3%
  1598 ;;BITBANK3            60      0       0       8        0.0%
  1599 ;;SFR3                 0      0       0       4        0.0%
  1600 ;;BITSFR3              0      0       0       4        0.0%
  1601 ;;BANK2               60      0       0      11        0.0%
  1602 ;;BITBANK2            60      0       0      10        0.0%
  1603 ;;SFR2                 0      0       0       5        0.0%
  1604 ;;BITSFR2              0      0       0       5        0.0%
  1605 ;;SFR1                 0      0       0       2        0.0%
  1606 ;;BITSFR1              0      0       0       2        0.0%
  1607 ;;BANK1               50      0      42       7       82.5%
  1608 ;;BITBANK1            50      0       0       6        0.0%
  1609 ;;CODE                 0      0       0       0        0.0%
  1610 ;;DATA                 0      0      CB      12        0.0%
  1611 ;;ABS                  0      0      C0       3        0.0%
  1612 ;;NULL                 0      0       0       0        0.0%
  1613 ;;STACK                0      0       B       2        0.0%
  1614 ;;BANK0               50     4D      50       5      100.0%
  1615 ;;BITBANK0            50      0       0       4        0.0%
  1616 ;;SFR0                 0      0       0       1        0.0%
  1617 ;;BITSFR0              0      0       0       1        0.0%
  1618 ;;COMMON               E      B       E       1      100.0%
  1619 ;;BITCOMMON            E      0       2       0       14.3%
  1620 ;;EEDATA             100      0       0       0        0.0%
  1621                           
  1622                           	global	_main
  1623                           psect	maintext,global,class=CODE,delta=2
  1624                           global __pmaintext
  1625  0015                     __pmaintext:
  1626                           
  1627 ;; *************** function _main *****************
  1628 ;; Defined at:
  1629 ;;		line 297 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  RT2P            2   75[BANK0 ] int 
  1634 ;;  RT2A            2   70[BANK0 ] int 
  1635 ;;  direction1      2   68[BANK0 ] int 
  1636 ;;  shortwall       2   73[BANK0 ] int 
  1637 ;;  choice          1   72[BANK0 ] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;		None               void
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 17F/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       9       0       0       0
  1649 ;;      Temps:          0       3       0       0       0
  1650 ;;      Totals:         0      12       0       0       0
  1651 ;;Total ram usage:       12 bytes
  1652 ;; Hardware stack levels required when called:    8
  1653 ;; This function calls:
  1654 ;;		_init
  1655 ;;		_robot_read
  1656 ;;		_readAvgDistance
  1657 ;;		_UpdateDisplay
  1658 ;;		_Menu
  1659 ;;		_calibrateIR
  1660 ;;		_scan360
  1661 ;;		_rotate
  1662 ;;		_robotMove
  1663 ;;		_robotTurn
  1664 ;;		___wmul
  1665 ;;		___awdiv
  1666 ;;		_ChargeMode
  1667 ;; This function is called by:
  1668 ;;		Startup code after reset
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           psect	maintext
  1672                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  1673                           	line	297
  1674                           	global	__size_of_main
  1675  0282                     	__size_of_main	equ	__end_of_main-_main
  1676                           	
  1677  0015                     _main:	
  1678                           	opt	stack 0
  1679                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1680                           	line	298
  1681                           	
  1682  0015                     l11229:	
  1683                           ;Main.c: 298: unsigned char choice = 255;
  1684  0015  30FF               	movlw	(0FFh)
  1685  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1686  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1687  0018  00E1               	movwf	(??_main+0)+0
  1688  0019  0861               	movf	(??_main+0)+0,w
  1689  001A  00E8               	movwf	(main@choice)
  1690                           	line	299
  1691                           	
  1692  001B                     l11231:	
  1693                           ;Main.c: 299: int shortwall = 0;
  1694  001B  01E9               	clrf	(main@shortwall)
  1695  001C  01EA               	clrf	(main@shortwall+1)
  1696                           	line	303
  1697                           	
  1698  001D                     l11233:	
  1699                           ;Main.c: 303: init();
  1700  001D  120A  158A  218C   	fcall	_init
              120A  118A         
  1701  0022  2823               	goto	l11235
  1702                           	line	308
  1703                           ;Main.c: 308: while(1)
  1704                           	
  1705  0023                     l2259:	
  1706                           	line	312
  1707                           	
  1708  0023                     l11235:	
  1709                           ;Main.c: 309: {
  1710                           ;Main.c: 312: if (RTC_FLAG_250MS == 1)
  1711  0023  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1712  0024  2826               	goto	u4811
  1713  0025  2827               	goto	u4810
  1714  0026                     u4811:
  1715  0026  2869               	goto	l11267
  1716  0027                     u4810:
  1717                           	line	314
  1718                           	
  1719  0027                     l11237:	
  1720                           ;Main.c: 313: {
  1721                           ;Main.c: 314: RTC_FLAG_250MS = 0;
  1722  0027  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1723                           	line	315
  1724                           	
  1725  0028                     l11239:	
  1726                           ;Main.c: 315: robot_read();
  1727  0028  120A  158A  23DD   	fcall	_robot_read
              120A  118A         
  1728                           	line	316
  1729                           	
  1730  002D                     l11241:	
  1731                           ;Main.c: 316: readAvgDistance();
  1732  002D  120A  158A  2430   	fcall	_readAvgDistance
              120A  118A         
  1733                           	line	317
  1734                           	
  1735  0032                     l11243:	
  1736                           ;Main.c: 317: UpdateDisplay();
  1737  0032  120A  118A  24BA   	fcall	_UpdateDisplay
              120A  118A         
  1738  0037  2869               	goto	l11267
  1739                           	line	318
  1740                           	
  1741  0038                     l2260:	
  1742                           	line	320
  1743                           ;Main.c: 318: }
  1744                           ;Main.c: 320: switch (buttonPressed)
  1745  0038  2869               	goto	l11267
  1746                           	line	322
  1747                           ;Main.c: 321: {
  1748                           ;Main.c: 322: case 1:
  1749                           	
  1750  0039                     l2262:	
  1751                           	line	323
  1752                           	
  1753  0039                     l11245:	
  1754                           ;Main.c: 323: Menu(1);
  1755  0039  3001               	movlw	(01h)
  1756  003A  120A  158A  22F6   	fcall	_Menu
              120A  118A         
  1757                           	line	325
  1758                           	
  1759  003F                     l11247:	
  1760                           ;Main.c: 325: buttonPressed = 0;
  1761  003F  01FD               	clrf	(_buttonPressed)	;volatile
  1762                           	line	327
  1763                           ;Main.c: 327: break;
  1764  0040  2A76               	goto	l11355
  1765                           	line	328
  1766                           ;Main.c: 328: case 2:
  1767                           	
  1768  0041                     l2264:	
  1769                           	line	329
  1770                           	
  1771  0041                     l11249:	
  1772                           ;Main.c: 329: Menu(2);
  1773  0041  3002               	movlw	(02h)
  1774  0042  120A  158A  22F6   	fcall	_Menu
              120A  118A         
  1775                           	line	331
  1776                           	
  1777  0047                     l11251:	
  1778                           ;Main.c: 331: buttonPressed = 0;
  1779  0047  01FD               	clrf	(_buttonPressed)	;volatile
  1780                           	line	333
  1781                           ;Main.c: 333: break;
  1782  0048  2A76               	goto	l11355
  1783                           	line	334
  1784                           ;Main.c: 334: case 3:
  1785                           	
  1786  0049                     l2265:	
  1787                           	line	335
  1788                           	
  1789  0049                     l11253:	
  1790                           ;Main.c: 335: Menu(3);
  1791  0049  3003               	movlw	(03h)
  1792  004A  120A  158A  22F6   	fcall	_Menu
              120A  118A         
  1793                           	line	337
  1794                           	
  1795  004F                     l11255:	
  1796                           ;Main.c: 337: buttonPressed = 0;
  1797  004F  01FD               	clrf	(_buttonPressed)	;volatile
  1798                           	line	339
  1799                           ;Main.c: 339: break;
  1800  0050  2A76               	goto	l11355
  1801                           	line	340
  1802                           ;Main.c: 340: case 4:
  1803                           	
  1804  0051                     l2266:	
  1805                           	line	341
  1806                           	
  1807  0051                     l11257:	
  1808                           ;Main.c: 341: Menu(4);
  1809  0051  3004               	movlw	(04h)
  1810  0052  120A  158A  22F6   	fcall	_Menu
              120A  118A         
  1811                           	line	343
  1812                           	
  1813  0057                     l11259:	
  1814                           ;Main.c: 343: buttonPressed = 0;
  1815  0057  01FD               	clrf	(_buttonPressed)	;volatile
  1816                           	line	345
  1817                           ;Main.c: 345: break;
  1818  0058  2A76               	goto	l11355
  1819                           	line	346
  1820                           ;Main.c: 346: case 5:
  1821                           	
  1822  0059                     l2267:	
  1823                           	line	347
  1824                           	
  1825  0059                     l11261:	
  1826                           ;Main.c: 347: choice = Menu(5);
  1827  0059  3005               	movlw	(05h)
  1828  005A  120A  158A  22F6   	fcall	_Menu
              120A  118A         
  1829  005F  1283               	bcf	status, 5	;RP0=0, select bank0
  1830  0060  1303               	bcf	status, 6	;RP1=0, select bank0
  1831  0061  00E1               	movwf	(??_main+0)+0
  1832  0062  0861               	movf	(??_main+0)+0,w
  1833  0063  00E8               	movwf	(main@choice)
  1834                           	line	349
  1835                           	
  1836  0064                     l11263:	
  1837                           ;Main.c: 349: buttonPressed = 0;
  1838  0064  01FD               	clrf	(_buttonPressed)	;volatile
  1839                           	line	351
  1840                           ;Main.c: 351: break;
  1841  0065  2A76               	goto	l11355
  1842                           	line	352
  1843                           ;Main.c: 352: default:
  1844                           	
  1845  0066                     l2268:	
  1846                           	line	353
  1847                           ;Main.c: 353: buttonPressed = 0;
  1848  0066  01FD               	clrf	(_buttonPressed)	;volatile
  1849                           	line	354
  1850                           ;Main.c: 354: break;
  1851  0067  2A76               	goto	l11355
  1852                           	line	355
  1853                           	
  1854  0068                     l11265:	
  1855                           ;Main.c: 355: }
  1856  0068  2A76               	goto	l11355
  1857                           	line	320
  1858                           	
  1859  0069                     l2261:	
  1860                           	
  1861  0069                     l11267:	
  1862  0069  087D               	movf	(_buttonPressed),w	;volatile
  1863                           	; Switch size 1, requested type "space"
  1864                           ; Number of cases is 5, Range of values is 1 to 5
  1865                           ; switch strategies available:
  1866                           ; Name         Instructions Cycles
  1867                           ; simple_byte           16     9 (average)
  1868                           ; direct_byte           26    11 (fixed)
  1869                           ; jumptable            263     9 (fixed)
  1870                           ;	Chosen strategy is simple_byte
  1871                           
  1872                           	opt asmopt_off
  1873  006A  3A01               	xorlw	1^0	; case 1
  1874  006B  1903               	skipnz
  1875  006C  2839               	goto	l11245
  1876  006D  3A03               	xorlw	2^1	; case 2
  1877  006E  1903               	skipnz
  1878  006F  2841               	goto	l11249
  1879  0070  3A01               	xorlw	3^2	; case 3
  1880  0071  1903               	skipnz
  1881  0072  2849               	goto	l11253
  1882  0073  3A07               	xorlw	4^3	; case 4
  1883  0074  1903               	skipnz
  1884  0075  2851               	goto	l11257
  1885  0076  3A01               	xorlw	5^4	; case 5
  1886  0077  1903               	skipnz
  1887  0078  2859               	goto	l11261
  1888  0079  2866               	goto	l2268
  1889                           	opt asmopt_on
  1890                           
  1891                           	line	355
  1892                           	
  1893  007A                     l2263:	
  1894                           	line	358
  1895                           ;Main.c: 358: switch (choice)
  1896  007A  2A76               	goto	l11355
  1897                           	line	360
  1898                           ;Main.c: 359: {
  1899                           ;Main.c: 360: case 0:
  1900                           	
  1901  007B                     l2270:	
  1902                           	line	361
  1903                           	
  1904  007B                     l11269:	
  1905                           ;Main.c: 361: calibrateIR();
  1906  007B  120A  158A  2485   	fcall	_calibrateIR
              120A  118A         
  1907                           	line	362
  1908                           ;Main.c: 362: break;
  1909  0080  2A8C               	goto	l11357
  1910                           	line	363
  1911                           ;Main.c: 363: case 1:
  1912                           	
  1913  0081                     l2272:	
  1914                           	line	364
  1915                           	
  1916  0081                     l11271:	
  1917                           ;Main.c: 364: shortwall = scan360();
  1918  0081  120A  158A  25C1   	fcall	_scan360
              120A  118A         
  1919  0086  1283               	bcf	status, 5	;RP0=0, select bank0
  1920  0087  1303               	bcf	status, 6	;RP1=0, select bank0
  1921  0088  085A               	movf	(1+(?_scan360)),w
  1922  0089  01EA               	clrf	(main@shortwall+1)
  1923  008A  07EA               	addwf	(main@shortwall+1)
  1924  008B  0859               	movf	(0+(?_scan360)),w
  1925  008C  01E9               	clrf	(main@shortwall)
  1926  008D  07E9               	addwf	(main@shortwall)
  1927                           
  1928                           	line	365
  1929                           	
  1930  008E                     l11273:	
  1931                           ;Main.c: 365: rotate((400 - shortwall), 0);
  1932  008E  0969               	comf	(main@shortwall),w
  1933  008F  00E1               	movwf	(??_main+0)+0
  1934  0090  096A               	comf	(main@shortwall+1),w
  1935  0091  00E2               	movwf	((??_main+0)+0+1)
  1936  0092  0AE1               	incf	(??_main+0)+0,f
  1937  0093  1903               	skipnz
  1938  0094  0AE2               	incf	((??_main+0)+0+1),f
  1939  0095  0861               	movf	0+(??_main+0)+0,w
  1940  0096  3E90               	addlw	low(0190h)
  1941  0097  00A3               	movwf	(?_rotate)
  1942  0098  0862               	movf	1+(??_main+0)+0,w
  1943  0099  1803               	skipnc
  1944  009A  3E01               	addlw	1
  1945  009B  3E01               	addlw	high(0190h)
  1946  009C  00A4               	movwf	1+(?_rotate)
  1947  009D  01A5               	clrf	0+(?_rotate)+02h
  1948  009E  120A  158A  238D   	fcall	_rotate
              120A  118A         
  1949                           	line	366
  1950                           ;Main.c: 366: break;
  1951  00A3  2A8C               	goto	l11357
  1952                           	line	367
  1953                           ;Main.c: 367: case 2:
  1954                           	
  1955  00A4                     l2273:	
  1956                           	line	368
  1957                           	
  1958  00A4                     l11275:	
  1959                           ;Main.c: 368: _delay((unsigned long)((100)*(20000000/4000.0)));
  1960                           	opt asmopt_off
  1961  00A4  3003               movlw  3
  1962  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
  1963  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
  1964  00A7  00E3               movwf	((??_main+0)+0+2),f
  1965  00A8  308A               movlw	138
  1966  00A9  00E2               movwf	((??_main+0)+0+1),f
  1967  00AA  3056               	movlw	86
  1968  00AB  00E1               movwf	((??_main+0)+0),f
  1969  00AC                     u4927:
  1970  00AC  0BE1               	decfsz	((??_main+0)+0),f
  1971  00AD  28AC               	goto	u4927
  1972  00AE  0BE2               	decfsz	((??_main+0)+0+1),f
  1973  00AF  28AC               	goto	u4927
  1974  00B0  0BE3               	decfsz	((??_main+0)+0+2),f
  1975  00B1  28AC               	goto	u4927
  1976  00B2  28B3               	nop2
  1977                           opt asmopt_on
  1978                           
  1979                           	line	369
  1980                           	
  1981  00B3                     l11277:	
  1982                           ;Main.c: 369: robotMove(2000);
  1983  00B3  30D0               	movlw	low(07D0h)
  1984  00B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1985  00B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1986  00B6  00D9               	movwf	(?_robotMove)
  1987  00B7  3007               	movlw	high(07D0h)
  1988  00B8  00DA               	movwf	((?_robotMove))+1
  1989  00B9  120A  158A  275B   	fcall	_robotMove
              120A  118A         
  1990                           	line	372
  1991                           ;Main.c: 372: break;
  1992  00BE  2A8C               	goto	l11357
  1993                           	line	373
  1994                           ;Main.c: 373: case 3:
  1995                           	
  1996  00BF                     l2274:	
  1997                           	line	374
  1998                           	
  1999  00BF                     l11279:	
  2000                           ;Main.c: 374: _delay((unsigned long)((100)*(20000000/4000.0)));
  2001                           	opt asmopt_off
  2002  00BF  3003               movlw  3
  2003  00C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2004  00C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2005  00C2  00E3               movwf	((??_main+0)+0+2),f
  2006  00C3  308A               movlw	138
  2007  00C4  00E2               movwf	((??_main+0)+0+1),f
  2008  00C5  3056               	movlw	86
  2009  00C6  00E1               movwf	((??_main+0)+0),f
  2010  00C7                     u4937:
  2011  00C7  0BE1               	decfsz	((??_main+0)+0),f
  2012  00C8  28C7               	goto	u4937
  2013  00C9  0BE2               	decfsz	((??_main+0)+0+1),f
  2014  00CA  28C7               	goto	u4937
  2015  00CB  0BE3               	decfsz	((??_main+0)+0+2),f
  2016  00CC  28C7               	goto	u4937
  2017  00CD  28CE               	nop2
  2018                           opt asmopt_on
  2019                           
  2020                           	line	375
  2021                           	
  2022  00CE                     l11281:	
  2023                           ;Main.c: 375: robotMove(1000);
  2024  00CE  30E8               	movlw	low(03E8h)
  2025  00CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2026  00D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2027  00D1  00D9               	movwf	(?_robotMove)
  2028  00D2  3003               	movlw	high(03E8h)
  2029  00D3  00DA               	movwf	((?_robotMove))+1
  2030  00D4  120A  158A  275B   	fcall	_robotMove
              120A  118A         
  2031                           	line	376
  2032                           	
  2033  00D9                     l11283:	
  2034                           ;Main.c: 376: robotTurn(-90);
  2035  00D9  30A6               	movlw	low(-90)
  2036  00DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2037  00DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2038  00DC  00A2               	movwf	(?_robotTurn)
  2039  00DD  30FF               	movlw	high(-90)
  2040  00DE  00A3               	movwf	((?_robotTurn))+1
  2041  00DF  120A  158A  263B   	fcall	_robotTurn
              120A  118A         
  2042                           	line	377
  2043                           	
  2044  00E4                     l11285:	
  2045                           ;Main.c: 377: robotMove(1000);
  2046  00E4  30E8               	movlw	low(03E8h)
  2047  00E5  1283               	bcf	status, 5	;RP0=0, select bank0
  2048  00E6  1303               	bcf	status, 6	;RP1=0, select bank0
  2049  00E7  00D9               	movwf	(?_robotMove)
  2050  00E8  3003               	movlw	high(03E8h)
  2051  00E9  00DA               	movwf	((?_robotMove))+1
  2052  00EA  120A  158A  275B   	fcall	_robotMove
              120A  118A         
  2053                           	line	378
  2054                           ;Main.c: 378: break;
  2055  00EF  2A8C               	goto	l11357
  2056                           	line	379
  2057                           ;Main.c: 379: case 4:
  2058                           	
  2059  00F0                     l2275:	
  2060  00F0  28F1               	goto	l11287
  2061                           	line	381
  2062                           ;Main.c: 381: while(1)
  2063                           	
  2064  00F1                     l2276:	
  2065                           	line	383
  2066                           	
  2067  00F1                     l11287:	
  2068                           ;Main.c: 382: {
  2069                           ;Main.c: 383: shortwall = scan360();
  2070  00F1  120A  158A  25C1   	fcall	_scan360
              120A  118A         
  2071  00F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2072  00F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2073  00F8  085A               	movf	(1+(?_scan360)),w
  2074  00F9  01EA               	clrf	(main@shortwall+1)
  2075  00FA  07EA               	addwf	(main@shortwall+1)
  2076  00FB  0859               	movf	(0+(?_scan360)),w
  2077  00FC  01E9               	clrf	(main@shortwall)
  2078  00FD  07E9               	addwf	(main@shortwall)
  2079                           
  2080                           	line	384
  2081                           	
  2082  00FE                     l11289:	
  2083                           ;Main.c: 384: int RT2P = 0;
  2084  00FE  01EB               	clrf	(main@RT2P)
  2085  00FF  01EC               	clrf	(main@RT2P+1)
  2086                           	line	385
  2087                           	
  2088  0100                     l11291:	
  2089                           ;Main.c: 385: int direction1 = 0;
  2090  0100  01E4               	clrf	(main@direction1)
  2091  0101  01E5               	clrf	(main@direction1+1)
  2092                           	line	386
  2093                           	
  2094  0102                     l11293:	
  2095                           ;Main.c: 386: if (shortwall > 200)
  2096  0102  086A               	movf	(main@shortwall+1),w
  2097  0103  3A80               	xorlw	80h
  2098  0104  00FF               	movwf	btemp+1
  2099  0105  3080               	movlw	(high(0C9h))^80h
  2100  0106  027F               	subwf	btemp+1,w
  2101  0107  1D03               	skipz
  2102  0108  290B               	goto	u4825
  2103  0109  30C9               	movlw	low(0C9h)
  2104  010A  0269               	subwf	(main@shortwall),w
  2105  010B                     u4825:
  2106                           
  2107  010B  1C03               	skipc
  2108  010C  290E               	goto	u4821
  2109  010D  290F               	goto	u4820
  2110  010E                     u4821:
  2111  010E  291A               	goto	l11297
  2112  010F                     u4820:
  2113                           	line	387
  2114                           	
  2115  010F                     l11295:	
  2116                           ;Main.c: 387: RT2P = shortwall + 100;
  2117  010F  1283               	bcf	status, 5	;RP0=0, select bank0
  2118  0110  1303               	bcf	status, 6	;RP1=0, select bank0
  2119  0111  0869               	movf	(main@shortwall),w
  2120  0112  3E64               	addlw	low(064h)
  2121  0113  00EB               	movwf	(main@RT2P)
  2122  0114  086A               	movf	(main@shortwall+1),w
  2123  0115  1803               	skipnc
  2124  0116  3E01               	addlw	1
  2125  0117  3E00               	addlw	high(064h)
  2126  0118  00EC               	movwf	1+(main@RT2P)
  2127  0119  291A               	goto	l11297
  2128                           	
  2129  011A                     l2277:	
  2130                           	line	388
  2131                           	
  2132  011A                     l11297:	
  2133                           ;Main.c: 388: if (shortwall < 200)
  2134  011A  1283               	bcf	status, 5	;RP0=0, select bank0
  2135  011B  1303               	bcf	status, 6	;RP1=0, select bank0
  2136  011C  086A               	movf	(main@shortwall+1),w
  2137  011D  3A80               	xorlw	80h
  2138  011E  00FF               	movwf	btemp+1
  2139  011F  3080               	movlw	(high(0C8h))^80h
  2140  0120  027F               	subwf	btemp+1,w
  2141  0121  1D03               	skipz
  2142  0122  2925               	goto	u4835
  2143  0123  30C8               	movlw	low(0C8h)
  2144  0124  0269               	subwf	(main@shortwall),w
  2145  0125                     u4835:
  2146                           
  2147  0125  1803               	skipnc
  2148  0126  2928               	goto	u4831
  2149  0127  2929               	goto	u4830
  2150  0128                     u4831:
  2151  0128  2934               	goto	l11301
  2152  0129                     u4830:
  2153                           	line	389
  2154                           	
  2155  0129                     l11299:	
  2156                           ;Main.c: 389: RT2P = shortwall - 100;
  2157  0129  1283               	bcf	status, 5	;RP0=0, select bank0
  2158  012A  1303               	bcf	status, 6	;RP1=0, select bank0
  2159  012B  0869               	movf	(main@shortwall),w
  2160  012C  3E9C               	addlw	low(-100)
  2161  012D  00EB               	movwf	(main@RT2P)
  2162  012E  086A               	movf	(main@shortwall+1),w
  2163  012F  1803               	skipnc
  2164  0130  3E01               	addlw	1
  2165  0131  3EFF               	addlw	high(-100)
  2166  0132  00EC               	movwf	1+(main@RT2P)
  2167  0133  2934               	goto	l11301
  2168                           	
  2169  0134                     l2278:	
  2170                           	line	392
  2171                           	
  2172  0134                     l11301:	
  2173                           ;Main.c: 392: if (RT2P > 400 && RT2P < 500 )
  2174  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  0136  086C               	movf	(main@RT2P+1),w
  2177  0137  3A80               	xorlw	80h
  2178  0138  00FF               	movwf	btemp+1
  2179  0139  3081               	movlw	(high(0191h))^80h
  2180  013A  027F               	subwf	btemp+1,w
  2181  013B  1D03               	skipz
  2182  013C  293F               	goto	u4845
  2183  013D  3091               	movlw	low(0191h)
  2184  013E  026B               	subwf	(main@RT2P),w
  2185  013F                     u4845:
  2186                           
  2187  013F  1C03               	skipc
  2188  0140  2942               	goto	u4841
  2189  0141  2943               	goto	u4840
  2190  0142                     u4841:
  2191  0142  2961               	goto	l11309
  2192  0143                     u4840:
  2193                           	
  2194  0143                     l11303:	
  2195  0143  1283               	bcf	status, 5	;RP0=0, select bank0
  2196  0144  1303               	bcf	status, 6	;RP1=0, select bank0
  2197  0145  086C               	movf	(main@RT2P+1),w
  2198  0146  3A80               	xorlw	80h
  2199  0147  00FF               	movwf	btemp+1
  2200  0148  3081               	movlw	(high(01F4h))^80h
  2201  0149  027F               	subwf	btemp+1,w
  2202  014A  1D03               	skipz
  2203  014B  294E               	goto	u4855
  2204  014C  30F4               	movlw	low(01F4h)
  2205  014D  026B               	subwf	(main@RT2P),w
  2206  014E                     u4855:
  2207                           
  2208  014E  1803               	skipnc
  2209  014F  2951               	goto	u4851
  2210  0150  2952               	goto	u4850
  2211  0151                     u4851:
  2212  0151  2961               	goto	l11309
  2213  0152                     u4850:
  2214                           	line	394
  2215                           	
  2216  0152                     l11305:	
  2217                           ;Main.c: 393: {
  2218                           ;Main.c: 394: RT2P = RT2P - 400;
  2219  0152  1283               	bcf	status, 5	;RP0=0, select bank0
  2220  0153  1303               	bcf	status, 6	;RP1=0, select bank0
  2221  0154  086B               	movf	(main@RT2P),w
  2222  0155  3E70               	addlw	low(-400)
  2223  0156  00EB               	movwf	(main@RT2P)
  2224  0157  086C               	movf	(main@RT2P+1),w
  2225  0158  1803               	skipnc
  2226  0159  3E01               	addlw	1
  2227  015A  3EFE               	addlw	high(-400)
  2228  015B  00EC               	movwf	1+(main@RT2P)
  2229                           	line	395
  2230                           	
  2231  015C                     l11307:	
  2232                           ;Main.c: 395: direction1 = 1;
  2233  015C  3001               	movlw	low(01h)
  2234  015D  00E4               	movwf	(main@direction1)
  2235  015E  3000               	movlw	high(01h)
  2236  015F  00E5               	movwf	((main@direction1))+1
  2237  0160  2961               	goto	l11309
  2238                           	line	396
  2239                           	
  2240  0161                     l2279:	
  2241                           	line	397
  2242                           	
  2243  0161                     l11309:	
  2244                           ;Main.c: 396: }
  2245                           ;Main.c: 397: if (RT2P > 200 && RT2P < 400)
  2246  0161  1283               	bcf	status, 5	;RP0=0, select bank0
  2247  0162  1303               	bcf	status, 6	;RP1=0, select bank0
  2248  0163  086C               	movf	(main@RT2P+1),w
  2249  0164  3A80               	xorlw	80h
  2250  0165  00FF               	movwf	btemp+1
  2251  0166  3080               	movlw	(high(0C9h))^80h
  2252  0167  027F               	subwf	btemp+1,w
  2253  0168  1D03               	skipz
  2254  0169  296C               	goto	u4865
  2255  016A  30C9               	movlw	low(0C9h)
  2256  016B  026B               	subwf	(main@RT2P),w
  2257  016C                     u4865:
  2258                           
  2259  016C  1C03               	skipc
  2260  016D  296F               	goto	u4861
  2261  016E  2970               	goto	u4860
  2262  016F                     u4861:
  2263  016F  2998               	goto	l11319
  2264  0170                     u4860:
  2265                           	
  2266  0170                     l11311:	
  2267  0170  1283               	bcf	status, 5	;RP0=0, select bank0
  2268  0171  1303               	bcf	status, 6	;RP1=0, select bank0
  2269  0172  086C               	movf	(main@RT2P+1),w
  2270  0173  3A80               	xorlw	80h
  2271  0174  00FF               	movwf	btemp+1
  2272  0175  3081               	movlw	(high(0190h))^80h
  2273  0176  027F               	subwf	btemp+1,w
  2274  0177  1D03               	skipz
  2275  0178  297B               	goto	u4875
  2276  0179  3090               	movlw	low(0190h)
  2277  017A  026B               	subwf	(main@RT2P),w
  2278  017B                     u4875:
  2279                           
  2280  017B  1803               	skipnc
  2281  017C  297E               	goto	u4871
  2282  017D  297F               	goto	u4870
  2283  017E                     u4871:
  2284  017E  2998               	goto	l11319
  2285  017F                     u4870:
  2286                           	line	399
  2287                           	
  2288  017F                     l11313:	
  2289                           ;Main.c: 398: {
  2290                           ;Main.c: 399: RT2P = 400 - RT2P;
  2291  017F  1283               	bcf	status, 5	;RP0=0, select bank0
  2292  0180  1303               	bcf	status, 6	;RP1=0, select bank0
  2293  0181  096B               	comf	(main@RT2P),w
  2294  0182  00E1               	movwf	(??_main+0)+0
  2295  0183  096C               	comf	(main@RT2P+1),w
  2296  0184  00E2               	movwf	((??_main+0)+0+1)
  2297  0185  0AE1               	incf	(??_main+0)+0,f
  2298  0186  1903               	skipnz
  2299  0187  0AE2               	incf	((??_main+0)+0+1),f
  2300  0188  0861               	movf	0+(??_main+0)+0,w
  2301  0189  3E90               	addlw	low(0190h)
  2302  018A  00EB               	movwf	(main@RT2P)
  2303  018B  0862               	movf	1+(??_main+0)+0,w
  2304  018C  1803               	skipnc
  2305  018D  3E01               	addlw	1
  2306  018E  3E01               	addlw	high(0190h)
  2307  018F  00EC               	movwf	1+(main@RT2P)
  2308                           	line	400
  2309                           	
  2310  0190                     l11315:	
  2311                           ;Main.c: 400: RT2P = RT2P * -1;
  2312  0190  09EB               	comf	(main@RT2P),f
  2313  0191  09EC               	comf	(main@RT2P+1),f
  2314  0192  0AEB               	incf	(main@RT2P),f
  2315  0193  1903               	skipnz
  2316  0194  0AEC               	incf	(main@RT2P+1),f
  2317                           	line	401
  2318                           	
  2319  0195                     l11317:	
  2320                           ;Main.c: 401: direction1 = 0;
  2321  0195  01E4               	clrf	(main@direction1)
  2322  0196  01E5               	clrf	(main@direction1+1)
  2323  0197  2998               	goto	l11319
  2324                           	line	402
  2325                           	
  2326  0198                     l2280:	
  2327                           	line	403
  2328                           	
  2329  0198                     l11319:	
  2330                           ;Main.c: 402: }
  2331                           ;Main.c: 403: if (RT2P < 200 && RT2P > 0)
  2332  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  2333  0199  1303               	bcf	status, 6	;RP1=0, select bank0
  2334  019A  086C               	movf	(main@RT2P+1),w
  2335  019B  3A80               	xorlw	80h
  2336  019C  00FF               	movwf	btemp+1
  2337  019D  3080               	movlw	(high(0C8h))^80h
  2338  019E  027F               	subwf	btemp+1,w
  2339  019F  1D03               	skipz
  2340  01A0  29A3               	goto	u4885
  2341  01A1  30C8               	movlw	low(0C8h)
  2342  01A2  026B               	subwf	(main@RT2P),w
  2343  01A3                     u4885:
  2344                           
  2345  01A3  1803               	skipnc
  2346  01A4  29A6               	goto	u4881
  2347  01A5  29A7               	goto	u4880
  2348  01A6                     u4881:
  2349  01A6  29BD               	goto	l11325
  2350  01A7                     u4880:
  2351                           	
  2352  01A7                     l11321:	
  2353  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2354  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2355  01A9  086C               	movf	(main@RT2P+1),w
  2356  01AA  3A80               	xorlw	80h
  2357  01AB  00FF               	movwf	btemp+1
  2358  01AC  3080               	movlw	(high(01h))^80h
  2359  01AD  027F               	subwf	btemp+1,w
  2360  01AE  1D03               	skipz
  2361  01AF  29B2               	goto	u4895
  2362  01B0  3001               	movlw	low(01h)
  2363  01B1  026B               	subwf	(main@RT2P),w
  2364  01B2                     u4895:
  2365                           
  2366  01B2  1C03               	skipc
  2367  01B3  29B5               	goto	u4891
  2368  01B4  29B6               	goto	u4890
  2369  01B5                     u4891:
  2370  01B5  29BD               	goto	l11325
  2371  01B6                     u4890:
  2372                           	line	405
  2373                           	
  2374  01B6                     l11323:	
  2375                           ;Main.c: 404: {
  2376                           ;Main.c: 405: direction1 = 1;
  2377  01B6  3001               	movlw	low(01h)
  2378  01B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  01B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2380  01B9  00E4               	movwf	(main@direction1)
  2381  01BA  3000               	movlw	high(01h)
  2382  01BB  00E5               	movwf	((main@direction1))+1
  2383  01BC  29BD               	goto	l11325
  2384                           	line	406
  2385                           	
  2386  01BD                     l2281:	
  2387                           	line	407
  2388                           	
  2389  01BD                     l11325:	
  2390                           ;Main.c: 406: }
  2391                           ;Main.c: 407: if (RT2P < 0 && RT2P > -200)
  2392  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2393  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2394  01BF  1FEC               	btfss	(main@RT2P+1),7
  2395  01C0  29C2               	goto	u4901
  2396  01C1  29C3               	goto	u4900
  2397  01C2                     u4901:
  2398  01C2  29D9               	goto	l11335
  2399  01C3                     u4900:
  2400                           	
  2401  01C3                     l11327:	
  2402  01C3  086C               	movf	(main@RT2P+1),w
  2403  01C4  3A80               	xorlw	80h
  2404  01C5  00FF               	movwf	btemp+1
  2405  01C6  307F               	movlw	(high(-199))^80h
  2406  01C7  027F               	subwf	btemp+1,w
  2407  01C8  1D03               	skipz
  2408  01C9  29CC               	goto	u4915
  2409  01CA  3039               	movlw	low(-199)
  2410  01CB  026B               	subwf	(main@RT2P),w
  2411  01CC                     u4915:
  2412                           
  2413  01CC  1C03               	skipc
  2414  01CD  29CF               	goto	u4911
  2415  01CE  29D0               	goto	u4910
  2416  01CF                     u4911:
  2417  01CF  29D9               	goto	l11335
  2418  01D0                     u4910:
  2419                           	line	410
  2420                           	
  2421  01D0                     l11329:	
  2422                           ;Main.c: 408: {
  2423                           ;Main.c: 410: direction1 = 0;
  2424  01D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2425  01D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2426  01D2  01E4               	clrf	(main@direction1)
  2427  01D3  01E5               	clrf	(main@direction1+1)
  2428  01D4  29D9               	goto	l11335
  2429                           	line	411
  2430                           	
  2431  01D5                     l2282:	
  2432  01D5  29D9               	goto	l11335
  2433                           	line	412
  2434                           	
  2435  01D6                     l11331:	
  2436  01D6  29D9               	goto	l11335
  2437                           	
  2438  01D7                     l11333:	
  2439  01D7  29D9               	goto	l11335
  2440                           	
  2441  01D8                     l2285:	
  2442  01D8  29D9               	goto	l11335
  2443                           	line	415
  2444                           ;Main.c: 413: {
  2445                           	
  2446  01D9                     l2283:	
  2447                           	line	417
  2448                           	
  2449  01D9                     l11335:	
  2450                           ;Main.c: 415: }
  2451                           ;Main.c: 417: rotate((400 - shortwall), 0);
  2452  01D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2453  01DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2454  01DB  0969               	comf	(main@shortwall),w
  2455  01DC  00E1               	movwf	(??_main+0)+0
  2456  01DD  096A               	comf	(main@shortwall+1),w
  2457  01DE  00E2               	movwf	((??_main+0)+0+1)
  2458  01DF  0AE1               	incf	(??_main+0)+0,f
  2459  01E0  1903               	skipnz
  2460  01E1  0AE2               	incf	((??_main+0)+0+1),f
  2461  01E2  0861               	movf	0+(??_main+0)+0,w
  2462  01E3  3E90               	addlw	low(0190h)
  2463  01E4  00A3               	movwf	(?_rotate)
  2464  01E5  0862               	movf	1+(??_main+0)+0,w
  2465  01E6  1803               	skipnc
  2466  01E7  3E01               	addlw	1
  2467  01E8  3E01               	addlw	high(0190h)
  2468  01E9  00A4               	movwf	1+(?_rotate)
  2469  01EA  01A5               	clrf	0+(?_rotate)+02h
  2470  01EB  120A  158A  238D   	fcall	_rotate
              120A  118A         
  2471                           	line	418
  2472                           	
  2473  01F0                     l11337:	
  2474                           ;Main.c: 418: _delay((unsigned long)((100)*(20000000/4000.0)));
  2475                           	opt asmopt_off
  2476  01F0  3003               movlw  3
  2477  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2478  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2479  01F3  00E3               movwf	((??_main+0)+0+2),f
  2480  01F4  308A               movlw	138
  2481  01F5  00E2               movwf	((??_main+0)+0+1),f
  2482  01F6  3056               	movlw	86
  2483  01F7  00E1               movwf	((??_main+0)+0),f
  2484  01F8                     u4947:
  2485  01F8  0BE1               	decfsz	((??_main+0)+0),f
  2486  01F9  29F8               	goto	u4947
  2487  01FA  0BE2               	decfsz	((??_main+0)+0+1),f
  2488  01FB  29F8               	goto	u4947
  2489  01FC  0BE3               	decfsz	((??_main+0)+0+2),f
  2490  01FD  29F8               	goto	u4947
  2491  01FE  29FF               	nop2
  2492                           opt asmopt_on
  2493                           
  2494                           	line	421
  2495                           	
  2496  01FF                     l11339:	
  2497                           ;Main.c: 421: int RT2A= RT2P * 36/40;
  2498  01FF  3028               	movlw	low(028h)
  2499  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  2500  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  2501  0202  00A6               	movwf	(?___awdiv)
  2502  0203  3000               	movlw	high(028h)
  2503  0204  00A7               	movwf	((?___awdiv))+1
  2504  0205  086C               	movf	(main@RT2P+1),w
  2505  0206  01A1               	clrf	(?___wmul+1)
  2506  0207  07A1               	addwf	(?___wmul+1)
  2507  0208  086B               	movf	(main@RT2P),w
  2508  0209  01A0               	clrf	(?___wmul)
  2509  020A  07A0               	addwf	(?___wmul)
  2510                           
  2511  020B  3024               	movlw	low(024h)
  2512  020C  00A2               	movwf	0+(?___wmul)+02h
  2513  020D  3000               	movlw	high(024h)
  2514  020E  00A3               	movwf	(0+(?___wmul)+02h)+1
  2515  020F  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  2516  0214  1283               	bcf	status, 5	;RP0=0, select bank0
  2517  0215  1303               	bcf	status, 6	;RP1=0, select bank0
  2518  0216  0821               	movf	(1+(?___wmul)),w
  2519  0217  01A9               	clrf	1+(?___awdiv)+02h
  2520  0218  07A9               	addwf	1+(?___awdiv)+02h
  2521  0219  0820               	movf	(0+(?___wmul)),w
  2522  021A  01A8               	clrf	0+(?___awdiv)+02h
  2523  021B  07A8               	addwf	0+(?___awdiv)+02h
  2524                           
  2525  021C  120A  158A  254B   	fcall	___awdiv
              120A  118A         
  2526  0221  1283               	bcf	status, 5	;RP0=0, select bank0
  2527  0222  1303               	bcf	status, 6	;RP1=0, select bank0
  2528  0223  0827               	movf	(1+(?___awdiv)),w
  2529  0224  01E7               	clrf	(main@RT2A+1)
  2530  0225  07E7               	addwf	(main@RT2A+1)
  2531  0226  0826               	movf	(0+(?___awdiv)),w
  2532  0227  01E6               	clrf	(main@RT2A)
  2533  0228  07E6               	addwf	(main@RT2A)
  2534                           
  2535                           	line	422
  2536                           	
  2537  0229                     l11341:	
  2538                           ;Main.c: 422: robotTurn(RT2A);
  2539  0229  0867               	movf	(main@RT2A+1),w
  2540  022A  01A3               	clrf	(?_robotTurn+1)
  2541  022B  07A3               	addwf	(?_robotTurn+1)
  2542  022C  0866               	movf	(main@RT2A),w
  2543  022D  01A2               	clrf	(?_robotTurn)
  2544  022E  07A2               	addwf	(?_robotTurn)
  2545                           
  2546  022F  120A  158A  263B   	fcall	_robotTurn
              120A  118A         
  2547                           	line	423
  2548                           	
  2549  0234                     l11343:	
  2550                           ;Main.c: 423: _delay((unsigned long)((100)*(20000000/4000.0)));
  2551                           	opt asmopt_off
  2552  0234  3003               movlw  3
  2553  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  2554  0236  1303               	bcf	status, 6	;RP1=0, select bank0
  2555  0237  00E3               movwf	((??_main+0)+0+2),f
  2556  0238  308A               movlw	138
  2557  0239  00E2               movwf	((??_main+0)+0+1),f
  2558  023A  3056               	movlw	86
  2559  023B  00E1               movwf	((??_main+0)+0),f
  2560  023C                     u4957:
  2561  023C  0BE1               	decfsz	((??_main+0)+0),f
  2562  023D  2A3C               	goto	u4957
  2563  023E  0BE2               	decfsz	((??_main+0)+0+1),f
  2564  023F  2A3C               	goto	u4957
  2565  0240  0BE3               	decfsz	((??_main+0)+0+2),f
  2566  0241  2A3C               	goto	u4957
  2567  0242  2A43               	nop2
  2568                           opt asmopt_on
  2569                           
  2570                           	line	424
  2571                           	
  2572  0243                     l11345:	
  2573                           ;Main.c: 424: rotate(shortwall,0);
  2574  0243  1283               	bcf	status, 5	;RP0=0, select bank0
  2575  0244  1303               	bcf	status, 6	;RP1=0, select bank0
  2576  0245  086A               	movf	(main@shortwall+1),w
  2577  0246  01A4               	clrf	(?_rotate+1)
  2578  0247  07A4               	addwf	(?_rotate+1)
  2579  0248  0869               	movf	(main@shortwall),w
  2580  0249  01A3               	clrf	(?_rotate)
  2581  024A  07A3               	addwf	(?_rotate)
  2582                           
  2583  024B  01A5               	clrf	0+(?_rotate)+02h
  2584  024C  120A  158A  238D   	fcall	_rotate
              120A  118A         
  2585                           	line	425
  2586                           	
  2587  0251                     l11347:	
  2588                           ;Main.c: 425: _delay((unsigned long)((100)*(20000000/4000.0)));
  2589                           	opt asmopt_off
  2590  0251  3003               movlw  3
  2591  0252  1283               	bcf	status, 5	;RP0=0, select bank0
  2592  0253  1303               	bcf	status, 6	;RP1=0, select bank0
  2593  0254  00E3               movwf	((??_main+0)+0+2),f
  2594  0255  308A               movlw	138
  2595  0256  00E2               movwf	((??_main+0)+0+1),f
  2596  0257  3056               	movlw	86
  2597  0258  00E1               movwf	((??_main+0)+0),f
  2598  0259                     u4967:
  2599  0259  0BE1               	decfsz	((??_main+0)+0),f
  2600  025A  2A59               	goto	u4967
  2601  025B  0BE2               	decfsz	((??_main+0)+0+1),f
  2602  025C  2A59               	goto	u4967
  2603  025D  0BE3               	decfsz	((??_main+0)+0+2),f
  2604  025E  2A59               	goto	u4967
  2605  025F  2A60               	nop2
  2606                           opt asmopt_on
  2607                           
  2608                           	line	426
  2609                           	
  2610  0260                     l11349:	
  2611                           ;Main.c: 426: robotMove(2000);
  2612  0260  30D0               	movlw	low(07D0h)
  2613  0261  1283               	bcf	status, 5	;RP0=0, select bank0
  2614  0262  1303               	bcf	status, 6	;RP1=0, select bank0
  2615  0263  00D9               	movwf	(?_robotMove)
  2616  0264  3007               	movlw	high(07D0h)
  2617  0265  00DA               	movwf	((?_robotMove))+1
  2618  0266  120A  158A  275B   	fcall	_robotMove
              120A  118A         
  2619  026B  28F1               	goto	l11287
  2620                           	line	427
  2621                           	
  2622  026C                     l2286:	
  2623                           	line	381
  2624  026C  28F1               	goto	l11287
  2625                           	
  2626  026D                     l2287:	
  2627                           	line	429
  2628                           ;Main.c: 427: }
  2629                           ;Main.c: 429: break;
  2630  026D  2A8C               	goto	l11357
  2631                           	line	431
  2632                           ;Main.c: 431: case 5:
  2633                           	
  2634  026E                     l2288:	
  2635                           	line	432
  2636                           	
  2637  026E                     l11351:	
  2638                           ;Main.c: 432: ChargeMode();
  2639  026E  120A  158A  22B0   	fcall	_ChargeMode
              120A  118A         
  2640                           	line	433
  2641                           ;Main.c: 433: break;
  2642  0273  2A8C               	goto	l11357
  2643                           	line	434
  2644                           ;Main.c: 434: default:
  2645                           	
  2646  0274                     l2289:	
  2647                           	line	436
  2648                           ;Main.c: 436: break;
  2649  0274  2A8C               	goto	l11357
  2650                           	line	437
  2651                           	
  2652  0275                     l11353:	
  2653                           ;Main.c: 437: }
  2654  0275  2A8C               	goto	l11357
  2655                           	line	358
  2656                           	
  2657  0276                     l2269:	
  2658                           	
  2659  0276                     l11355:	
  2660  0276  1283               	bcf	status, 5	;RP0=0, select bank0
  2661  0277  1303               	bcf	status, 6	;RP1=0, select bank0
  2662  0278  0868               	movf	(main@choice),w
  2663                           	; Switch size 1, requested type "space"
  2664                           ; Number of cases is 6, Range of values is 0 to 5
  2665                           ; switch strategies available:
  2666                           ; Name         Instructions Cycles
  2667                           ; simple_byte           19    10 (average)
  2668                           ; direct_byte           26     8 (fixed)
  2669                           ; jumptable            260     6 (fixed)
  2670                           ; rangetable            10     6 (fixed)
  2671                           ; spacedrange           18     9 (fixed)
  2672                           ; locatedrange           6     3 (fixed)
  2673                           ;	Chosen strategy is simple_byte
  2674                           
  2675                           	opt asmopt_off
  2676  0279  3A00               	xorlw	0^0	; case 0
  2677  027A  1903               	skipnz
  2678  027B  287B               	goto	l11269
  2679  027C  3A01               	xorlw	1^0	; case 1
  2680  027D  1903               	skipnz
  2681  027E  2881               	goto	l11271
  2682  027F  3A03               	xorlw	2^1	; case 2
  2683  0280  1903               	skipnz
  2684  0281  28A4               	goto	l11275
  2685  0282  3A01               	xorlw	3^2	; case 3
  2686  0283  1903               	skipnz
  2687  0284  28BF               	goto	l11279
  2688  0285  3A07               	xorlw	4^3	; case 4
  2689  0286  1903               	skipnz
  2690  0287  28F1               	goto	l11287
  2691  0288  3A01               	xorlw	5^4	; case 5
  2692  0289  1903               	skipnz
  2693  028A  2A6E               	goto	l11351
  2694  028B  2A8C               	goto	l11357
  2695                           	opt asmopt_on
  2696                           
  2697                           	line	437
  2698                           	
  2699  028C                     l2271:	
  2700                           	line	438
  2701                           	
  2702  028C                     l11357:	
  2703                           ;Main.c: 438: choice = 255;
  2704  028C  30FF               	movlw	(0FFh)
  2705  028D  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  028E  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  028F  00E1               	movwf	(??_main+0)+0
  2708  0290  0861               	movf	(??_main+0)+0,w
  2709  0291  00E8               	movwf	(main@choice)
  2710  0292  2823               	goto	l11235
  2711                           	line	439
  2712                           	
  2713  0293                     l2290:	
  2714                           	line	308
  2715  0293  2823               	goto	l11235
  2716                           	
  2717  0294                     l2291:	
  2718                           	line	440
  2719                           	
  2720  0294                     l2292:	
  2721                           	global	start
  2722  0294  120A  118A  2812   	ljmp	start
  2723                           	opt stack 0
  2724                           GLOBAL	__end_of_main
  2725  0297                     	__end_of_main:
  2726 ;; =============== function _main ends ============
  2727                           
  2728                           	signat	_main,88
  2729                           	global	_robotMove
  2730                           psect	text923,local,class=CODE,delta=2
  2731                           global __ptext923
  2732  0F5B                     __ptext923:
  2733                           
  2734 ;; *************** function _robotMove *****************
  2735 ;; Defined at:
  2736 ;;		line 40 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  distance        2   57[BANK0 ] int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;		None               void
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       2       0       0       0
  2751 ;;      Locals:         0       0       0       0       0
  2752 ;;      Temps:          0       2       0       0       0
  2753 ;;      Totals:         0       4       0       0       0
  2754 ;;Total ram usage:        4 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    6
  2757 ;; This function calls:
  2758 ;;		_ser_putch
  2759 ;;		_robot_read
  2760 ;;		_UpdateDisplay
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           psect	text923
  2766                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  2767                           	line	40
  2768                           	global	__size_of_robotMove
  2769  00A5                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  2770                           	
  2771  0F5B                     _robotMove:	
  2772                           	opt	stack 1
  2773                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2774                           	line	41
  2775                           	
  2776  0F5B                     l11207:	
  2777                           ;robot.c: 41: distTravelled =0;
  2778  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  2779  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  2780  0F5D  01B2               	clrf	(_distTravelled)^080h
  2781  0F5E  01B3               	clrf	(_distTravelled+1)^080h
  2782                           	line	43
  2783                           	
  2784  0F5F                     l11209:	
  2785                           ;robot.c: 43: if (distance >= 0)
  2786  0F5F  1283               	bcf	status, 5	;RP0=0, select bank0
  2787  0F60  1303               	bcf	status, 6	;RP1=0, select bank0
  2788  0F61  1BDA               	btfsc	(robotMove@distance+1),7
  2789  0F62  2F64               	goto	u4781
  2790  0F63  2F65               	goto	u4780
  2791  0F64                     u4781:
  2792  0F64  2F84               	goto	l11213
  2793  0F65                     u4780:
  2794                           	line	45
  2795                           	
  2796  0F65                     l11211:	
  2797                           ;robot.c: 44: {
  2798                           ;robot.c: 45: ser_putch(137);
  2799  0F65  3089               	movlw	(089h)
  2800  0F66  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2801                           	line	47
  2802                           ;robot.c: 47: ser_putch(0);
  2803  0F6B  3000               	movlw	(0)
  2804  0F6C  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2805                           	line	49
  2806                           ;robot.c: 49: ser_putch(50);
  2807  0F71  3032               	movlw	(032h)
  2808  0F72  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2809                           	line	51
  2810                           ;robot.c: 51: ser_putch(128);
  2811  0F77  3080               	movlw	(080h)
  2812  0F78  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2813                           	line	53
  2814                           ;robot.c: 53: ser_putch(0);
  2815  0F7D  3000               	movlw	(0)
  2816  0F7E  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2817                           	line	54
  2818                           ;robot.c: 54: }
  2819  0F83  2FC8               	goto	l11225
  2820                           	line	55
  2821                           	
  2822  0F84                     l6023:	
  2823                           	line	57
  2824                           	
  2825  0F84                     l11213:	
  2826                           ;robot.c: 55: else
  2827                           ;robot.c: 56: {
  2828                           ;robot.c: 57: ser_putch(137);
  2829  0F84  3089               	movlw	(089h)
  2830  0F85  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2831                           	line	59
  2832                           ;robot.c: 59: ser_putch(0xff);
  2833  0F8A  30FF               	movlw	(0FFh)
  2834  0F8B  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2835                           	line	61
  2836                           ;robot.c: 61: ser_putch(0x38);
  2837  0F90  3038               	movlw	(038h)
  2838  0F91  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2839                           	line	63
  2840                           ;robot.c: 63: ser_putch(128);
  2841  0F96  3080               	movlw	(080h)
  2842  0F97  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2843                           	line	65
  2844                           ;robot.c: 65: ser_putch(0);
  2845  0F9C  3000               	movlw	(0)
  2846  0F9D  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2847  0FA2  2FC8               	goto	l11225
  2848                           	line	66
  2849                           	
  2850  0FA3                     l6024:	
  2851                           	line	69
  2852                           ;robot.c: 66: }
  2853                           ;robot.c: 69: while (distTravelled <= distance)
  2854  0FA3  2FC8               	goto	l11225
  2855                           	
  2856  0FA4                     l6026:	
  2857                           	line	71
  2858                           	
  2859  0FA4                     l11215:	
  2860                           ;robot.c: 70: {
  2861                           ;robot.c: 71: robot_read();
  2862  0FA4  120A  158A  23DD   	fcall	_robot_read
              120A  158A         
  2863                           	line	72
  2864                           	
  2865  0FA9                     l11217:	
  2866                           ;robot.c: 72: if (BumpSensors)
  2867  0FA9  1683               	bsf	status, 5	;RP0=1, select bank1
  2868  0FAA  1303               	bcf	status, 6	;RP1=0, select bank1
  2869  0FAB  0842               	movf	(_BumpSensors)^080h,w	;volatile
  2870  0FAC  1D03               	skipz
  2871  0FAD  2FAF               	goto	u4790
  2872  0FAE  2FB1               	goto	l11221
  2873  0FAF                     u4790:
  2874  0FAF  2FE1               	goto	l11227
  2875                           	line	73
  2876                           	
  2877  0FB0                     l11219:	
  2878                           ;robot.c: 73: break;
  2879  0FB0  2FE1               	goto	l11227
  2880                           	
  2881  0FB1                     l6027:	
  2882                           	line	74
  2883                           	
  2884  0FB1                     l11221:	
  2885                           ;robot.c: 74: distTravelled += DistLowByte;
  2886  0FB1  0845               	movf	(_DistLowByte)^080h,w	;volatile
  2887  0FB2  1283               	bcf	status, 5	;RP0=0, select bank0
  2888  0FB3  1303               	bcf	status, 6	;RP1=0, select bank0
  2889  0FB4  00DB               	movwf	(??_robotMove+0)+0
  2890  0FB5  01DC               	clrf	(??_robotMove+0)+0+1
  2891  0FB6  085B               	movf	0+(??_robotMove+0)+0,w
  2892  0FB7  1683               	bsf	status, 5	;RP0=1, select bank1
  2893  0FB8  1303               	bcf	status, 6	;RP1=0, select bank1
  2894  0FB9  07B2               	addwf	(_distTravelled)^080h,f
  2895  0FBA  1803               	skipnc
  2896  0FBB  0AB3               	incf	(_distTravelled+1)^080h,f
  2897  0FBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2898  0FBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2899  0FBE  085C               	movf	1+(??_robotMove+0)+0,w
  2900  0FBF  1683               	bsf	status, 5	;RP0=1, select bank1
  2901  0FC0  1303               	bcf	status, 6	;RP1=0, select bank1
  2902  0FC1  07B3               	addwf	(_distTravelled+1)^080h,f
  2903                           	line	75
  2904                           	
  2905  0FC2                     l11223:	
  2906                           ;robot.c: 75: UpdateDisplay();
  2907  0FC2  120A  118A  24BA   	fcall	_UpdateDisplay
              120A  158A         
  2908  0FC7  2FC8               	goto	l11225
  2909                           	line	76
  2910                           	
  2911  0FC8                     l6025:	
  2912                           	line	69
  2913                           	
  2914  0FC8                     l11225:	
  2915  0FC8  1283               	bcf	status, 5	;RP0=0, select bank0
  2916  0FC9  1303               	bcf	status, 6	;RP1=0, select bank0
  2917  0FCA  085A               	movf	(robotMove@distance+1),w
  2918  0FCB  3A80               	xorlw	80h
  2919  0FCC  00DB               	movwf	(??_robotMove+0)+0
  2920  0FCD  1683               	bsf	status, 5	;RP0=1, select bank1
  2921  0FCE  1303               	bcf	status, 6	;RP1=0, select bank1
  2922  0FCF  0833               	movf	(_distTravelled+1)^080h,w
  2923  0FD0  3A80               	xorlw	80h
  2924  0FD1  1283               	bcf	status, 5	;RP0=0, select bank0
  2925  0FD2  1303               	bcf	status, 6	;RP1=0, select bank0
  2926  0FD3  025B               	subwf	(??_robotMove+0)+0,w
  2927  0FD4  1D03               	skipz
  2928  0FD5  2FDC               	goto	u4805
  2929  0FD6  1683               	bsf	status, 5	;RP0=1, select bank1
  2930  0FD7  1303               	bcf	status, 6	;RP1=0, select bank1
  2931  0FD8  0832               	movf	(_distTravelled)^080h,w
  2932  0FD9  1283               	bcf	status, 5	;RP0=0, select bank0
  2933  0FDA  1303               	bcf	status, 6	;RP1=0, select bank0
  2934  0FDB  0259               	subwf	(robotMove@distance),w
  2935  0FDC                     u4805:
  2936                           
  2937  0FDC  1803               	skipnc
  2938  0FDD  2FDF               	goto	u4801
  2939  0FDE  2FE0               	goto	u4800
  2940  0FDF                     u4801:
  2941  0FDF  2FA4               	goto	l11215
  2942  0FE0                     u4800:
  2943  0FE0  2FE1               	goto	l11227
  2944                           	
  2945  0FE1                     l6028:	
  2946                           	line	78
  2947                           	
  2948  0FE1                     l11227:	
  2949                           ;robot.c: 76: }
  2950                           ;robot.c: 78: ser_putch(137);
  2951  0FE1  3089               	movlw	(089h)
  2952  0FE2  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2953                           	line	80
  2954                           ;robot.c: 80: ser_putch(0);
  2955  0FE7  3000               	movlw	(0)
  2956  0FE8  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2957                           	line	82
  2958                           ;robot.c: 82: ser_putch(0);
  2959  0FED  3000               	movlw	(0)
  2960  0FEE  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2961                           	line	84
  2962                           ;robot.c: 84: ser_putch(0);
  2963  0FF3  3000               	movlw	(0)
  2964  0FF4  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2965                           	line	86
  2966                           ;robot.c: 86: ser_putch(0);
  2967  0FF9  3000               	movlw	(0)
  2968  0FFA  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  2969                           	line	88
  2970                           	
  2971  0FFF                     l6029:	
  2972  0FFF  0008               	return
  2973                           	opt stack 0
  2974                           GLOBAL	__end_of_robotMove
  2975  1000                     	__end_of_robotMove:
  2976 ;; =============== function _robotMove ends ============
  2977                           
  2978                           	signat	_robotMove,4216
  2979                           	global	_scan360
  2980                           psect	text924,local,class=CODE,delta=2
  2981                           global __ptext924
  2982  0DC1                     __ptext924:
  2983                           
  2984 ;; *************** function _scan360 *****************
  2985 ;; Defined at:
  2986 ;;		line 268 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  steps           2   63[BANK0 ] int 
  2991 ;;  lowestSteps     2   61[BANK0 ] int 
  2992 ;;  lowestVal       2   59[BANK0 ] int 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2   57[BANK0 ] int 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         0       2       0       0       0
  3003 ;;      Locals:         0       6       0       0       0
  3004 ;;      Temps:          0       0       0       0       0
  3005 ;;      Totals:         0       8       0       0       0
  3006 ;;Total ram usage:        8 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    7
  3009 ;; This function calls:
  3010 ;;		_readAvgDistance
  3011 ;;		_rotate
  3012 ;;		_UpdateDisplay
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           psect	text924
  3018                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3019                           	line	268
  3020                           	global	__size_of_scan360
  3021  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3022                           	
  3023  0DC1                     _scan360:	
  3024                           	opt	stack 0
  3025                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3026                           	line	269
  3027                           	
  3028  0DC1                     l11177:	
  3029                           ;Main.c: 269: int lowestVal = 0, lowestSteps = 0;
  3030  0DC1  1283               	bcf	status, 5	;RP0=0, select bank0
  3031  0DC2  1303               	bcf	status, 6	;RP1=0, select bank0
  3032  0DC3  01DB               	clrf	(scan360@lowestVal)
  3033  0DC4  01DC               	clrf	(scan360@lowestVal+1)
  3034  0DC5  01DD               	clrf	(scan360@lowestSteps)
  3035  0DC6  01DE               	clrf	(scan360@lowestSteps+1)
  3036                           	line	271
  3037                           ;Main.c: 271: for (int steps = 0; steps < 400; steps++)
  3038  0DC7  01DF               	clrf	(scan360@steps)
  3039  0DC8  01E0               	clrf	(scan360@steps+1)
  3040                           	
  3041  0DC9                     l11179:	
  3042  0DC9  0860               	movf	(scan360@steps+1),w
  3043  0DCA  3A80               	xorlw	80h
  3044  0DCB  00FF               	movwf	btemp+1
  3045  0DCC  3081               	movlw	(high(0190h))^80h
  3046  0DCD  027F               	subwf	btemp+1,w
  3047  0DCE  1D03               	skipz
  3048  0DCF  2DD2               	goto	u4745
  3049  0DD0  3090               	movlw	low(0190h)
  3050  0DD1  025F               	subwf	(scan360@steps),w
  3051  0DD2                     u4745:
  3052                           
  3053  0DD2  1C03               	skipc
  3054  0DD3  2DD5               	goto	u4741
  3055  0DD4  2DD6               	goto	u4740
  3056  0DD5                     u4741:
  3057  0DD5  2DD8               	goto	l11183
  3058  0DD6                     u4740:
  3059  0DD6  2E31               	goto	l11203
  3060                           	
  3061  0DD7                     l11181:	
  3062  0DD7  2E31               	goto	l11203
  3063                           	line	272
  3064                           	
  3065  0DD8                     l2252:	
  3066                           	line	273
  3067                           	
  3068  0DD8                     l11183:	
  3069                           ;Main.c: 272: {
  3070                           ;Main.c: 273: readAvgDistance();
  3071  0DD8  120A  158A  2430   	fcall	_readAvgDistance
              120A  158A         
  3072                           	line	274
  3073                           	
  3074  0DDD                     l11185:	
  3075                           ;Main.c: 274: if (adcVal > lowestVal)
  3076  0DDD  1283               	bcf	status, 5	;RP0=0, select bank0
  3077  0DDE  1303               	bcf	status, 6	;RP1=0, select bank0
  3078  0DDF  086E               	movf	(_adcVal+1),w	;volatile
  3079  0DE0  025C               	subwf	(scan360@lowestVal+1),w
  3080  0DE1  1D03               	skipz
  3081  0DE2  2DE5               	goto	u4755
  3082  0DE3  086D               	movf	(_adcVal),w	;volatile
  3083  0DE4  025B               	subwf	(scan360@lowestVal),w
  3084  0DE5                     u4755:
  3085  0DE5  1803               	skipnc
  3086  0DE6  2DE8               	goto	u4751
  3087  0DE7  2DE9               	goto	u4750
  3088  0DE8                     u4751:
  3089  0DE8  2DF6               	goto	l11189
  3090  0DE9                     u4750:
  3091                           	line	276
  3092                           	
  3093  0DE9                     l11187:	
  3094                           ;Main.c: 275: {
  3095                           ;Main.c: 276: lowestVal = adcVal;
  3096  0DE9  086E               	movf	(_adcVal+1),w	;volatile
  3097  0DEA  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3098  0DEB  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3099  0DEC  086D               	movf	(_adcVal),w	;volatile
  3100  0DED  01DB               	clrf	(scan360@lowestVal)	;volatile
  3101  0DEE  07DB               	addwf	(scan360@lowestVal)	;volatile
  3102                           
  3103                           	line	277
  3104                           ;Main.c: 277: lowestSteps = steps;
  3105  0DEF  0860               	movf	(scan360@steps+1),w
  3106  0DF0  01DE               	clrf	(scan360@lowestSteps+1)
  3107  0DF1  07DE               	addwf	(scan360@lowestSteps+1)
  3108  0DF2  085F               	movf	(scan360@steps),w
  3109  0DF3  01DD               	clrf	(scan360@lowestSteps)
  3110  0DF4  07DD               	addwf	(scan360@lowestSteps)
  3111                           
  3112  0DF5  2DF6               	goto	l11189
  3113                           	line	279
  3114                           	
  3115  0DF6                     l2254:	
  3116                           	line	280
  3117                           	
  3118  0DF6                     l11189:	
  3119                           ;Main.c: 279: }
  3120                           ;Main.c: 280: rotate(1, 1);
  3121  0DF6  3001               	movlw	low(01h)
  3122  0DF7  00A3               	movwf	(?_rotate)
  3123  0DF8  3000               	movlw	high(01h)
  3124  0DF9  00A4               	movwf	((?_rotate))+1
  3125  0DFA  01A5               	clrf	0+(?_rotate)+02h
  3126  0DFB  1403               	bsf	status,0
  3127  0DFC  0DA5               	rlf	0+(?_rotate)+02h,f
  3128  0DFD  120A  158A  238D   	fcall	_rotate
              120A  158A         
  3129                           	line	282
  3130                           	
  3131  0E02                     l11191:	
  3132                           ;Main.c: 282: if (RTC_FLAG_250MS == 1)
  3133  0E02  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3134  0E03  2E05               	goto	u4761
  3135  0E04  2E06               	goto	u4760
  3136  0E05                     u4761:
  3137  0E05  2E0D               	goto	l11197
  3138  0E06                     u4760:
  3139                           	line	284
  3140                           	
  3141  0E06                     l11193:	
  3142                           ;Main.c: 283: {
  3143                           ;Main.c: 284: RTC_FLAG_250MS = 0;
  3144  0E06  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3145                           	line	285
  3146                           	
  3147  0E07                     l11195:	
  3148                           ;Main.c: 285: UpdateDisplay();
  3149  0E07  120A  118A  24BA   	fcall	_UpdateDisplay
              120A  158A         
  3150  0E0C  2E0D               	goto	l11197
  3151                           	line	286
  3152                           	
  3153  0E0D                     l2255:	
  3154                           	line	287
  3155                           	
  3156  0E0D                     l11197:	
  3157                           ;Main.c: 286: }
  3158                           ;Main.c: 287: test = lowestSteps;
  3159  0E0D  1283               	bcf	status, 5	;RP0=0, select bank0
  3160  0E0E  1303               	bcf	status, 6	;RP1=0, select bank0
  3161  0E0F  085E               	movf	(scan360@lowestSteps+1),w
  3162  0E10  1683               	bsf	status, 5	;RP0=1, select bank1
  3163  0E11  1303               	bcf	status, 6	;RP1=0, select bank1
  3164  0E12  01BD               	clrf	(_test+1)^080h
  3165  0E13  07BD               	addwf	(_test+1)^080h
  3166  0E14  1283               	bcf	status, 5	;RP0=0, select bank0
  3167  0E15  1303               	bcf	status, 6	;RP1=0, select bank0
  3168  0E16  085D               	movf	(scan360@lowestSteps),w
  3169  0E17  1683               	bsf	status, 5	;RP0=1, select bank1
  3170  0E18  1303               	bcf	status, 6	;RP1=0, select bank1
  3171  0E19  01BC               	clrf	(_test)^080h
  3172  0E1A  07BC               	addwf	(_test)^080h
  3173                           
  3174                           	line	271
  3175                           	
  3176  0E1B                     l11199:	
  3177  0E1B  3001               	movlw	low(01h)
  3178  0E1C  1283               	bcf	status, 5	;RP0=0, select bank0
  3179  0E1D  1303               	bcf	status, 6	;RP1=0, select bank0
  3180  0E1E  07DF               	addwf	(scan360@steps),f
  3181  0E1F  1803               	skipnc
  3182  0E20  0AE0               	incf	(scan360@steps+1),f
  3183  0E21  3000               	movlw	high(01h)
  3184  0E22  07E0               	addwf	(scan360@steps+1),f
  3185                           	
  3186  0E23                     l11201:	
  3187  0E23  0860               	movf	(scan360@steps+1),w
  3188  0E24  3A80               	xorlw	80h
  3189  0E25  00FF               	movwf	btemp+1
  3190  0E26  3081               	movlw	(high(0190h))^80h
  3191  0E27  027F               	subwf	btemp+1,w
  3192  0E28  1D03               	skipz
  3193  0E29  2E2C               	goto	u4775
  3194  0E2A  3090               	movlw	low(0190h)
  3195  0E2B  025F               	subwf	(scan360@steps),w
  3196  0E2C                     u4775:
  3197                           
  3198  0E2C  1C03               	skipc
  3199  0E2D  2E2F               	goto	u4771
  3200  0E2E  2E30               	goto	u4770
  3201  0E2F                     u4771:
  3202  0E2F  2DD8               	goto	l11183
  3203  0E30                     u4770:
  3204  0E30  2E31               	goto	l11203
  3205                           	
  3206  0E31                     l2253:	
  3207                           	line	290
  3208                           	
  3209  0E31                     l11203:	
  3210                           ;Main.c: 288: }
  3211                           ;Main.c: 290: return lowestSteps;
  3212  0E31  1283               	bcf	status, 5	;RP0=0, select bank0
  3213  0E32  1303               	bcf	status, 6	;RP1=0, select bank0
  3214  0E33  085E               	movf	(scan360@lowestSteps+1),w
  3215  0E34  01DA               	clrf	(?_scan360+1)
  3216  0E35  07DA               	addwf	(?_scan360+1)
  3217  0E36  085D               	movf	(scan360@lowestSteps),w
  3218  0E37  01D9               	clrf	(?_scan360)
  3219  0E38  07D9               	addwf	(?_scan360)
  3220                           
  3221  0E39  2E3A               	goto	l2256
  3222                           	
  3223  0E3A                     l11205:	
  3224                           	line	291
  3225                           	
  3226  0E3A                     l2256:	
  3227  0E3A  0008               	return
  3228                           	opt stack 0
  3229                           GLOBAL	__end_of_scan360
  3230  0E3B                     	__end_of_scan360:
  3231 ;; =============== function _scan360 ends ============
  3232                           
  3233                           	signat	_scan360,90
  3234                           	global	_ChargeMode
  3235                           psect	text925,local,class=CODE,delta=2
  3236                           global __ptext925
  3237  0AB0                     __ptext925:
  3238                           
  3239 ;; *************** function _ChargeMode *****************
  3240 ;; Defined at:
  3241 ;;		line 214 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0
  3257 ;;      Temps:          0       1       0       0       0
  3258 ;;      Totals:         0       1       0       0       0
  3259 ;;Total ram usage:        1 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    6
  3262 ;; This function calls:
  3263 ;;		_ser_putch
  3264 ;;		_UpdateDisplay
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           psect	text925
  3270                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3271                           	line	214
  3272                           	global	__size_of_ChargeMode
  3273  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3274                           	
  3275  0AB0                     _ChargeMode:	
  3276                           	opt	stack 1
  3277                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3278                           	line	216
  3279                           	
  3280  0AB0                     l11155:	
  3281                           ;Main.c: 216: currentMenu = 2;
  3282  0AB0  3002               	movlw	(02h)
  3283  0AB1  1283               	bcf	status, 5	;RP0=0, select bank0
  3284  0AB2  1303               	bcf	status, 6	;RP1=0, select bank0
  3285  0AB3  00D9               	movwf	(??_ChargeMode+0)+0
  3286  0AB4  0859               	movf	(??_ChargeMode+0)+0,w
  3287  0AB5  1683               	bsf	status, 5	;RP0=1, select bank1
  3288  0AB6  1303               	bcf	status, 6	;RP1=0, select bank1
  3289  0AB7  00CA               	movwf	(_currentMenu)^080h	;volatile
  3290                           	line	217
  3291                           	
  3292  0AB8                     l11157:	
  3293                           ;Main.c: 217: ser_putch(128);
  3294  0AB8  3080               	movlw	(080h)
  3295  0AB9  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  3296  0ABE  2ABF               	goto	l11159
  3297                           	line	219
  3298                           ;Main.c: 219: while (1)
  3299                           	
  3300  0ABF                     l2237:	
  3301                           	line	221
  3302                           	
  3303  0ABF                     l11159:	
  3304                           ;Main.c: 220: {
  3305                           ;Main.c: 221: if (RTC_FLAG_250MS == 1)
  3306  0ABF  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3307  0AC0  2AC2               	goto	u4731
  3308  0AC1  2AC3               	goto	u4730
  3309  0AC2                     u4731:
  3310  0AC2  2AE2               	goto	l11175
  3311  0AC3                     u4730:
  3312                           	line	223
  3313                           	
  3314  0AC3                     l11161:	
  3315                           ;Main.c: 222: {
  3316                           ;Main.c: 223: RTC_FLAG_250MS = 0;
  3317  0AC3  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3318                           	line	224
  3319                           	
  3320  0AC4                     l11163:	
  3321                           ;Main.c: 224: UpdateDisplay();
  3322  0AC4  120A  118A  24BA   	fcall	_UpdateDisplay
              120A  158A         
  3323  0AC9  2AE2               	goto	l11175
  3324                           	line	225
  3325                           	
  3326  0ACA                     l2238:	
  3327                           	line	226
  3328                           ;Main.c: 225: }
  3329                           ;Main.c: 226: switch (buttonPressed)
  3330  0ACA  2AE2               	goto	l11175
  3331                           	line	228
  3332                           ;Main.c: 227: {
  3333                           ;Main.c: 228: case 1:
  3334                           	
  3335  0ACB                     l2240:	
  3336                           	line	231
  3337                           ;Main.c: 231: buttonPressed = 0;
  3338  0ACB  01FD               	clrf	(_buttonPressed)	;volatile
  3339                           	line	233
  3340                           ;Main.c: 233: break;
  3341  0ACC  2ABF               	goto	l11159
  3342                           	line	234
  3343                           ;Main.c: 234: case 2:
  3344                           	
  3345  0ACD                     l2242:	
  3346                           	line	237
  3347                           ;Main.c: 237: buttonPressed = 0;
  3348  0ACD  01FD               	clrf	(_buttonPressed)	;volatile
  3349                           	line	239
  3350                           ;Main.c: 239: break;
  3351  0ACE  2ABF               	goto	l11159
  3352                           	line	240
  3353                           ;Main.c: 240: case 3:
  3354                           	
  3355  0ACF                     l2243:	
  3356                           	line	243
  3357                           ;Main.c: 243: buttonPressed = 0;
  3358  0ACF  01FD               	clrf	(_buttonPressed)	;volatile
  3359                           	line	245
  3360                           ;Main.c: 245: break;
  3361  0AD0  2ABF               	goto	l11159
  3362                           	line	246
  3363                           ;Main.c: 246: case 4:
  3364                           	
  3365  0AD1                     l2244:	
  3366                           	line	249
  3367                           ;Main.c: 249: buttonPressed = 0;
  3368  0AD1  01FD               	clrf	(_buttonPressed)	;volatile
  3369                           	line	251
  3370                           ;Main.c: 251: break;
  3371  0AD2  2ABF               	goto	l11159
  3372                           	line	252
  3373                           ;Main.c: 252: case 5:
  3374                           	
  3375  0AD3                     l2245:	
  3376                           	line	253
  3377                           	
  3378  0AD3                     l11165:	
  3379                           ;Main.c: 253: ser_putch(132);
  3380  0AD3  3084               	movlw	(084h)
  3381  0AD4  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  3382                           	line	255
  3383                           	
  3384  0AD9                     l11167:	
  3385                           ;Main.c: 255: buttonPressed = 0;
  3386  0AD9  01FD               	clrf	(_buttonPressed)	;volatile
  3387                           	line	256
  3388                           	
  3389  0ADA                     l11169:	
  3390                           ;Main.c: 256: currentMenu = 0;
  3391  0ADA  1683               	bsf	status, 5	;RP0=1, select bank1
  3392  0ADB  1303               	bcf	status, 6	;RP1=0, select bank1
  3393  0ADC  01CA               	clrf	(_currentMenu)^080h	;volatile
  3394  0ADD  2AF5               	goto	l2246
  3395                           	line	257
  3396                           	
  3397  0ADE                     l11171:	
  3398                           ;Main.c: 257: return;
  3399  0ADE  2AF5               	goto	l2246
  3400                           	line	259
  3401                           ;Main.c: 259: default:
  3402                           	
  3403  0ADF                     l2247:	
  3404                           	line	260
  3405                           ;Main.c: 260: buttonPressed = 0;
  3406  0ADF  01FD               	clrf	(_buttonPressed)	;volatile
  3407                           	line	261
  3408                           ;Main.c: 261: break;
  3409  0AE0  2ABF               	goto	l11159
  3410                           	line	262
  3411                           	
  3412  0AE1                     l11173:	
  3413                           ;Main.c: 262: }
  3414  0AE1  2ABF               	goto	l11159
  3415                           	line	226
  3416                           	
  3417  0AE2                     l2239:	
  3418                           	
  3419  0AE2                     l11175:	
  3420  0AE2  087D               	movf	(_buttonPressed),w	;volatile
  3421                           	; Switch size 1, requested type "space"
  3422                           ; Number of cases is 5, Range of values is 1 to 5
  3423                           ; switch strategies available:
  3424                           ; Name         Instructions Cycles
  3425                           ; simple_byte           16     9 (average)
  3426                           ; direct_byte           26    11 (fixed)
  3427                           ; jumptable            263     9 (fixed)
  3428                           ;	Chosen strategy is simple_byte
  3429                           
  3430                           	opt asmopt_off
  3431  0AE3  3A01               	xorlw	1^0	; case 1
  3432  0AE4  1903               	skipnz
  3433  0AE5  2ACB               	goto	l2240
  3434  0AE6  3A03               	xorlw	2^1	; case 2
  3435  0AE7  1903               	skipnz
  3436  0AE8  2ACD               	goto	l2242
  3437  0AE9  3A01               	xorlw	3^2	; case 3
  3438  0AEA  1903               	skipnz
  3439  0AEB  2ACF               	goto	l2243
  3440  0AEC  3A07               	xorlw	4^3	; case 4
  3441  0AED  1903               	skipnz
  3442  0AEE  2AD1               	goto	l2244
  3443  0AEF  3A01               	xorlw	5^4	; case 5
  3444  0AF0  1903               	skipnz
  3445  0AF1  2AD3               	goto	l11165
  3446  0AF2  2ADF               	goto	l2247
  3447                           	opt asmopt_on
  3448                           
  3449                           	line	262
  3450                           	
  3451  0AF3                     l2241:	
  3452  0AF3  2ABF               	goto	l11159
  3453                           	line	263
  3454                           	
  3455  0AF4                     l2248:	
  3456                           	line	219
  3457  0AF4  2ABF               	goto	l11159
  3458                           	
  3459  0AF5                     l2249:	
  3460                           	line	264
  3461                           	
  3462  0AF5                     l2246:	
  3463  0AF5  0008               	return
  3464                           	opt stack 0
  3465                           GLOBAL	__end_of_ChargeMode
  3466  0AF6                     	__end_of_ChargeMode:
  3467 ;; =============== function _ChargeMode ends ============
  3468                           
  3469                           	signat	_ChargeMode,88
  3470                           	global	_calibrateIR
  3471                           psect	text926,local,class=CODE,delta=2
  3472                           global __ptext926
  3473  0C85                     __ptext926:
  3474                           
  3475 ;; *************** function _calibrateIR *****************
  3476 ;; Defined at:
  3477 ;;		line 163 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    6
  3498 ;; This function calls:
  3499 ;;		_rotate
  3500 ;;		_UpdateDisplay
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           psect	text926
  3506                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3507                           	line	163
  3508                           	global	__size_of_calibrateIR
  3509  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3510                           	
  3511  0C85                     _calibrateIR:	
  3512                           	opt	stack 1
  3513                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3514                           	line	165
  3515                           	
  3516  0C85                     l11125:	
  3517                           ;Main.c: 165: currentMenu = 1;
  3518  0C85  1683               	bsf	status, 5	;RP0=1, select bank1
  3519  0C86  1303               	bcf	status, 6	;RP1=0, select bank1
  3520  0C87  01CA               	clrf	(_currentMenu)^080h	;volatile
  3521  0C88  1403               	bsf	status,0
  3522  0C89  0DCA               	rlf	(_currentMenu)^080h,f	;volatile
  3523                           	line	166
  3524                           	
  3525  0C8A                     l11127:	
  3526                           ;Main.c: 166: rotate(8, 0);
  3527  0C8A  3008               	movlw	low(08h)
  3528  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  3529  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  3530  0C8D  00A3               	movwf	(?_rotate)
  3531  0C8E  3000               	movlw	high(08h)
  3532  0C8F  00A4               	movwf	((?_rotate))+1
  3533  0C90  01A5               	clrf	0+(?_rotate)+02h
  3534  0C91  120A  158A  238D   	fcall	_rotate
              120A  158A         
  3535  0C96  2C97               	goto	l11129
  3536                           	line	167
  3537                           ;Main.c: 167: while (1)
  3538                           	
  3539  0C97                     l2222:	
  3540                           	line	169
  3541                           	
  3542  0C97                     l11129:	
  3543                           ;Main.c: 168: {
  3544                           ;Main.c: 169: if (RTC_FLAG_250MS == 1)
  3545  0C97  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3546  0C98  2C9A               	goto	u4721
  3547  0C99  2C9B               	goto	u4720
  3548  0C9A                     u4721:
  3549  0C9A  2CCF               	goto	l11153
  3550  0C9B                     u4720:
  3551                           	line	171
  3552                           	
  3553  0C9B                     l11131:	
  3554                           ;Main.c: 170: {
  3555                           ;Main.c: 171: RTC_FLAG_250MS = 0;
  3556  0C9B  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3557                           	line	172
  3558                           	
  3559  0C9C                     l11133:	
  3560                           ;Main.c: 172: UpdateDisplay();
  3561  0C9C  120A  118A  24BA   	fcall	_UpdateDisplay
              120A  158A         
  3562  0CA1  2CCF               	goto	l11153
  3563                           	line	173
  3564                           	
  3565  0CA2                     l2223:	
  3566                           	line	174
  3567                           ;Main.c: 173: }
  3568                           ;Main.c: 174: switch (buttonPressed)
  3569  0CA2  2CCF               	goto	l11153
  3570                           	line	176
  3571                           ;Main.c: 175: {
  3572                           ;Main.c: 176: case 1:
  3573                           	
  3574  0CA3                     l2225:	
  3575                           	line	179
  3576                           ;Main.c: 179: buttonPressed = 0;
  3577  0CA3  01FD               	clrf	(_buttonPressed)	;volatile
  3578                           	line	181
  3579                           ;Main.c: 181: break;
  3580  0CA4  2C97               	goto	l11129
  3581                           	line	182
  3582                           ;Main.c: 182: case 2:
  3583                           	
  3584  0CA5                     l2227:	
  3585                           	line	185
  3586                           ;Main.c: 185: buttonPressed = 0;
  3587  0CA5  01FD               	clrf	(_buttonPressed)	;volatile
  3588                           	line	187
  3589                           ;Main.c: 187: break;
  3590  0CA6  2C97               	goto	l11129
  3591                           	line	188
  3592                           ;Main.c: 188: case 3:
  3593                           	
  3594  0CA7                     l2228:	
  3595                           	line	189
  3596                           	
  3597  0CA7                     l11135:	
  3598                           ;Main.c: 189: rotate(1, 1);
  3599  0CA7  3001               	movlw	low(01h)
  3600  0CA8  1283               	bcf	status, 5	;RP0=0, select bank0
  3601  0CA9  1303               	bcf	status, 6	;RP1=0, select bank0
  3602  0CAA  00A3               	movwf	(?_rotate)
  3603  0CAB  3000               	movlw	high(01h)
  3604  0CAC  00A4               	movwf	((?_rotate))+1
  3605  0CAD  01A5               	clrf	0+(?_rotate)+02h
  3606  0CAE  1403               	bsf	status,0
  3607  0CAF  0DA5               	rlf	0+(?_rotate)+02h,f
  3608  0CB0  120A  158A  238D   	fcall	_rotate
              120A  158A         
  3609                           	line	191
  3610                           	
  3611  0CB5                     l11137:	
  3612                           ;Main.c: 191: buttonPressed = 0;
  3613  0CB5  01FD               	clrf	(_buttonPressed)	;volatile
  3614                           	line	193
  3615                           ;Main.c: 193: break;
  3616  0CB6  2C97               	goto	l11129
  3617                           	line	194
  3618                           ;Main.c: 194: case 4:
  3619                           	
  3620  0CB7                     l2229:	
  3621                           	line	195
  3622                           	
  3623  0CB7                     l11139:	
  3624                           ;Main.c: 195: rotate(1, 0);
  3625  0CB7  3001               	movlw	low(01h)
  3626  0CB8  1283               	bcf	status, 5	;RP0=0, select bank0
  3627  0CB9  1303               	bcf	status, 6	;RP1=0, select bank0
  3628  0CBA  00A3               	movwf	(?_rotate)
  3629  0CBB  3000               	movlw	high(01h)
  3630  0CBC  00A4               	movwf	((?_rotate))+1
  3631  0CBD  01A5               	clrf	0+(?_rotate)+02h
  3632  0CBE  120A  158A  238D   	fcall	_rotate
              120A  158A         
  3633                           	line	197
  3634                           	
  3635  0CC3                     l11141:	
  3636                           ;Main.c: 197: buttonPressed = 0;
  3637  0CC3  01FD               	clrf	(_buttonPressed)	;volatile
  3638                           	line	199
  3639                           ;Main.c: 199: break;
  3640  0CC4  2C97               	goto	l11129
  3641                           	line	200
  3642                           ;Main.c: 200: case 5:
  3643                           	
  3644  0CC5                     l2230:	
  3645                           	line	201
  3646                           	
  3647  0CC5                     l11143:	
  3648                           ;Main.c: 201: totalSteps = 0;
  3649  0CC5  1683               	bsf	status, 5	;RP0=1, select bank1
  3650  0CC6  1303               	bcf	status, 6	;RP1=0, select bank1
  3651  0CC7  01C0               	clrf	(_totalSteps)^080h
  3652  0CC8  01C1               	clrf	(_totalSteps+1)^080h
  3653                           	line	203
  3654                           	
  3655  0CC9                     l11145:	
  3656                           ;Main.c: 203: buttonPressed = 0;
  3657  0CC9  01FD               	clrf	(_buttonPressed)	;volatile
  3658                           	line	204
  3659                           	
  3660  0CCA                     l11147:	
  3661                           ;Main.c: 204: currentMenu = 0;
  3662  0CCA  01CA               	clrf	(_currentMenu)^080h	;volatile
  3663  0CCB  2CE2               	goto	l2231
  3664                           	line	205
  3665                           	
  3666  0CCC                     l11149:	
  3667                           ;Main.c: 205: return;
  3668  0CCC  2CE2               	goto	l2231
  3669                           	line	207
  3670                           ;Main.c: 207: default:
  3671                           	
  3672  0CCD                     l2232:	
  3673                           	line	209
  3674                           ;Main.c: 209: break;
  3675  0CCD  2C97               	goto	l11129
  3676                           	line	210
  3677                           	
  3678  0CCE                     l11151:	
  3679                           ;Main.c: 210: }
  3680  0CCE  2C97               	goto	l11129
  3681                           	line	174
  3682                           	
  3683  0CCF                     l2224:	
  3684                           	
  3685  0CCF                     l11153:	
  3686  0CCF  087D               	movf	(_buttonPressed),w	;volatile
  3687                           	; Switch size 1, requested type "space"
  3688                           ; Number of cases is 5, Range of values is 1 to 5
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte           16     9 (average)
  3692                           ; direct_byte           26    11 (fixed)
  3693                           ; jumptable            263     9 (fixed)
  3694                           ;	Chosen strategy is simple_byte
  3695                           
  3696                           	opt asmopt_off
  3697  0CD0  3A01               	xorlw	1^0	; case 1
  3698  0CD1  1903               	skipnz
  3699  0CD2  2CA3               	goto	l2225
  3700  0CD3  3A03               	xorlw	2^1	; case 2
  3701  0CD4  1903               	skipnz
  3702  0CD5  2CA5               	goto	l2227
  3703  0CD6  3A01               	xorlw	3^2	; case 3
  3704  0CD7  1903               	skipnz
  3705  0CD8  2CA7               	goto	l11135
  3706  0CD9  3A07               	xorlw	4^3	; case 4
  3707  0CDA  1903               	skipnz
  3708  0CDB  2CB7               	goto	l11139
  3709  0CDC  3A01               	xorlw	5^4	; case 5
  3710  0CDD  1903               	skipnz
  3711  0CDE  2CC5               	goto	l11143
  3712  0CDF  2C97               	goto	l11129
  3713                           	opt asmopt_on
  3714                           
  3715                           	line	210
  3716                           	
  3717  0CE0                     l2226:	
  3718  0CE0  2C97               	goto	l11129
  3719                           	line	211
  3720                           	
  3721  0CE1                     l2233:	
  3722                           	line	167
  3723  0CE1  2C97               	goto	l11129
  3724                           	
  3725  0CE2                     l2234:	
  3726                           	line	212
  3727                           	
  3728  0CE2                     l2231:	
  3729  0CE2  0008               	return
  3730                           	opt stack 0
  3731                           GLOBAL	__end_of_calibrateIR
  3732  0CE3                     	__end_of_calibrateIR:
  3733 ;; =============== function _calibrateIR ends ============
  3734                           
  3735                           	signat	_calibrateIR,88
  3736                           	global	_readAvgDistance
  3737                           psect	text927,local,class=CODE,delta=2
  3738                           global __ptext927
  3739  0C30                     __ptext927:
  3740                           
  3741 ;; *************** function _readAvgDistance *****************
  3742 ;; Defined at:
  3743 ;;		line 10 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  i               2   18[BANK0 ] int 
  3748 ;;  fullval         2   16[BANK0 ] unsigned int 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       0       0       0
  3759 ;;      Locals:         0       4       0       0       0
  3760 ;;      Temps:          0       0       0       0       0
  3761 ;;      Totals:         0       4       0       0       0
  3762 ;;Total ram usage:        4 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    6
  3765 ;; This function calls:
  3766 ;;		_readDistance
  3767 ;;		___lwdiv
  3768 ;;		_ADCconvert
  3769 ;; This function is called by:
  3770 ;;		_scan360
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           psect	text927
  3775                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  3776                           	line	10
  3777                           	global	__size_of_readAvgDistance
  3778  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3779                           	
  3780  0C30                     _readAvgDistance:	
  3781                           	opt	stack 0
  3782                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3783                           	line	11
  3784                           	
  3785  0C30                     l11111:	
  3786                           ;infrared.c: 11: unsigned int fullval = 0;
  3787  0C30  1283               	bcf	status, 5	;RP0=0, select bank0
  3788  0C31  1303               	bcf	status, 6	;RP1=0, select bank0
  3789  0C32  01B0               	clrf	(readAvgDistance@fullval)
  3790  0C33  01B1               	clrf	(readAvgDistance@fullval+1)
  3791                           	line	14
  3792                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3793  0C34  01B2               	clrf	(readAvgDistance@i)
  3794  0C35  01B3               	clrf	(readAvgDistance@i+1)
  3795                           	
  3796  0C36                     l11113:	
  3797  0C36  0833               	movf	(readAvgDistance@i+1),w
  3798  0C37  3A80               	xorlw	80h
  3799  0C38  00FF               	movwf	btemp+1
  3800  0C39  3080               	movlw	(high(0Ah))^80h
  3801  0C3A  027F               	subwf	btemp+1,w
  3802  0C3B  1D03               	skipz
  3803  0C3C  2C3F               	goto	u4705
  3804  0C3D  300A               	movlw	low(0Ah)
  3805  0C3E  0232               	subwf	(readAvgDistance@i),w
  3806  0C3F                     u4705:
  3807                           
  3808  0C3F  1C03               	skipc
  3809  0C40  2C42               	goto	u4701
  3810  0C41  2C43               	goto	u4700
  3811  0C42                     u4701:
  3812  0C42  2C45               	goto	l11117
  3813  0C43                     u4700:
  3814  0C43  2C66               	goto	l11123
  3815                           	
  3816  0C44                     l11115:	
  3817  0C44  2C66               	goto	l11123
  3818                           	line	15
  3819                           	
  3820  0C45                     l2995:	
  3821                           	line	16
  3822                           	
  3823  0C45                     l11117:	
  3824                           ;infrared.c: 15: {
  3825                           ;infrared.c: 16: fullval += readDistance();
  3826  0C45  160A  118A  273F   	fcall	_readDistance
              120A  158A         
  3827  0C4A  1283               	bcf	status, 5	;RP0=0, select bank0
  3828  0C4B  1303               	bcf	status, 6	;RP1=0, select bank0
  3829  0C4C  0828               	movf	(0+(?_readDistance)),w
  3830  0C4D  07B0               	addwf	(readAvgDistance@fullval),f
  3831  0C4E  1803               	skipnc
  3832  0C4F  0AB1               	incf	(readAvgDistance@fullval+1),f
  3833  0C50  0829               	movf	(1+(?_readDistance)),w
  3834  0C51  07B1               	addwf	(readAvgDistance@fullval+1),f
  3835                           	line	14
  3836                           	
  3837  0C52                     l11119:	
  3838  0C52  3001               	movlw	low(01h)
  3839  0C53  07B2               	addwf	(readAvgDistance@i),f
  3840  0C54  1803               	skipnc
  3841  0C55  0AB3               	incf	(readAvgDistance@i+1),f
  3842  0C56  3000               	movlw	high(01h)
  3843  0C57  07B3               	addwf	(readAvgDistance@i+1),f
  3844                           	
  3845  0C58                     l11121:	
  3846  0C58  0833               	movf	(readAvgDistance@i+1),w
  3847  0C59  3A80               	xorlw	80h
  3848  0C5A  00FF               	movwf	btemp+1
  3849  0C5B  3080               	movlw	(high(0Ah))^80h
  3850  0C5C  027F               	subwf	btemp+1,w
  3851  0C5D  1D03               	skipz
  3852  0C5E  2C61               	goto	u4715
  3853  0C5F  300A               	movlw	low(0Ah)
  3854  0C60  0232               	subwf	(readAvgDistance@i),w
  3855  0C61                     u4715:
  3856                           
  3857  0C61  1C03               	skipc
  3858  0C62  2C64               	goto	u4711
  3859  0C63  2C65               	goto	u4710
  3860  0C64                     u4711:
  3861  0C64  2C45               	goto	l11117
  3862  0C65                     u4710:
  3863  0C65  2C66               	goto	l11123
  3864                           	
  3865  0C66                     l2996:	
  3866                           	line	19
  3867                           	
  3868  0C66                     l11123:	
  3869                           ;infrared.c: 18: }
  3870                           ;infrared.c: 19: adcVal = fullval / 10;
  3871  0C66  300A               	movlw	low(0Ah)
  3872  0C67  1283               	bcf	status, 5	;RP0=0, select bank0
  3873  0C68  1303               	bcf	status, 6	;RP1=0, select bank0
  3874  0C69  00A6               	movwf	(?___lwdiv)
  3875  0C6A  3000               	movlw	high(0Ah)
  3876  0C6B  00A7               	movwf	((?___lwdiv))+1
  3877  0C6C  0831               	movf	(readAvgDistance@fullval+1),w
  3878  0C6D  01A9               	clrf	1+(?___lwdiv)+02h
  3879  0C6E  07A9               	addwf	1+(?___lwdiv)+02h
  3880  0C6F  0830               	movf	(readAvgDistance@fullval),w
  3881  0C70  01A8               	clrf	0+(?___lwdiv)+02h
  3882  0C71  07A8               	addwf	0+(?___lwdiv)+02h
  3883                           
  3884  0C72  120A  158A  233D   	fcall	___lwdiv
              120A  158A         
  3885  0C77  1283               	bcf	status, 5	;RP0=0, select bank0
  3886  0C78  1303               	bcf	status, 6	;RP1=0, select bank0
  3887  0C79  0827               	movf	(1+(?___lwdiv)),w
  3888  0C7A  01EE               	clrf	(_adcVal+1)	;volatile
  3889  0C7B  07EE               	addwf	(_adcVal+1)	;volatile
  3890  0C7C  0826               	movf	(0+(?___lwdiv)),w
  3891  0C7D  01ED               	clrf	(_adcVal)	;volatile
  3892  0C7E  07ED               	addwf	(_adcVal)	;volatile
  3893                           
  3894                           	line	20
  3895                           ;infrared.c: 20: ADCconvert();
  3896  0C7F  120A  118A  2297   	fcall	_ADCconvert
              120A  158A         
  3897                           	line	21
  3898                           	
  3899  0C84                     l2997:	
  3900  0C84  0008               	return
  3901                           	opt stack 0
  3902                           GLOBAL	__end_of_readAvgDistance
  3903  0C85                     	__end_of_readAvgDistance:
  3904 ;; =============== function _readAvgDistance ends ============
  3905                           
  3906                           	signat	_readAvgDistance,88
  3907                           	global	_UpdateDisplay
  3908                           psect	text928,local,class=CODE,delta=2
  3909                           global __ptext928
  3910  04BA                     __ptext928:
  3911                           
  3912 ;; *************** function _UpdateDisplay *****************
  3913 ;; Defined at:
  3914 ;;		line 216 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  adcOutput      16   41[BANK0 ] unsigned char [16]
  3919 ;; Return value:  Size  Location     Type
  3920 ;;		None               void
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       0       0       0       0
  3929 ;;      Locals:         0      16       0       0       0
  3930 ;;      Temps:          0       4       0       0       0
  3931 ;;      Totals:         0      20       0       0       0
  3932 ;;Total ram usage:       20 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    5
  3935 ;; This function calls:
  3936 ;;		_lcd_write_control
  3937 ;;		_sprintf
  3938 ;;		_lcd_set_cursor
  3939 ;;		_lcd_write_string
  3940 ;;		___awmod
  3941 ;; This function is called by:
  3942 ;;		_calibrateIR
  3943 ;;		_ChargeMode
  3944 ;;		_scan360
  3945 ;;		_main
  3946 ;;		_robotMove
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           psect	text928
  3950                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  3951                           	line	216
  3952                           	global	__size_of_UpdateDisplay
  3953  015C                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3954                           	
  3955  04BA                     _UpdateDisplay:	
  3956                           	opt	stack 1
  3957                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3958                           	line	217
  3959                           	
  3960  04BA                     l11067:	
  3961                           ;HMI.c: 217: char adcOutput[16] = "";
  3962  04BA  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3963  04BB  0084               	movwf	fsr0
  3964  04BC  3090               	movlw	low(UpdateDisplay@F1229)
  3965  04BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3966  04BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3967  04BF  00C5               	movwf	(??_UpdateDisplay+0)+0
  3968  04C0  0804               	movf	fsr0,w
  3969  04C1  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3970  04C2  3010               	movlw	16
  3971  04C3  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3972  04C4                     u4680:
  3973  04C4  0845               	movf	(??_UpdateDisplay+0)+0,w
  3974  04C5  0084               	movwf	fsr0
  3975  04C6  1783               	bsf	status, 7	;select IRP bank3
  3976                           	
  3977  04C7  0800               	movf	indf,w
  3978  04C8  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3979  04C9  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3980  04CA  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3981  04CB  0084               	movwf	fsr0
  3982  04CC  1383               	bcf	status, 7	;select IRP bank0
  3983                           	
  3984  04CD  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3985  04CE  0080               	movwf	indf
  3986  04CF  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3987  04D0  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3988  04D1  2CC4               	goto	u4680
  3989                           	line	218
  3990                           ;HMI.c: 218: switch (currentMenu)
  3991  04D2  2E08               	goto	l11109
  3992                           	line	221
  3993                           ;HMI.c: 219: {
  3994                           ;HMI.c: 221: case 0:
  3995                           	
  3996  04D3                     l4554:	
  3997                           	line	224
  3998                           	
  3999  04D3                     l11069:	
  4000                           ;HMI.c: 224: lcd_write_control(0b00000001);
  4001  04D3  3001               	movlw	(01h)
  4002  04D4  160A  118A  2715   	fcall	_lcd_write_control
              120A  118A         
  4003                           	line	226
  4004                           	
  4005  04D9                     l11071:	
  4006                           ;HMI.c: 226: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  4007  04D9  302B               	movlw	((STR_13-__stringbase))&0ffh
  4008  04DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4009  04DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4010  04DC  00C5               	movwf	(??_UpdateDisplay+0)+0
  4011  04DD  0845               	movf	(??_UpdateDisplay+0)+0,w
  4012  04DE  00B4               	movwf	(?_sprintf)
  4013  04DF  1683               	bsf	status, 5	;RP0=1, select bank1
  4014  04E0  1303               	bcf	status, 6	;RP1=0, select bank1
  4015  04E1  0842               	movf	(_BumpSensors)^080h,w	;volatile
  4016  04E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4017  04E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4018  04E4  00C6               	movwf	(??_UpdateDisplay+1)+0
  4019  04E5  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  4020  04E6  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  4021  04E7  00B5               	movwf	0+(?_sprintf)+01h
  4022  04E8  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  4023  04E9  00B6               	movwf	1+(?_sprintf)+01h
  4024  04EA  1683               	bsf	status, 5	;RP0=1, select bank1
  4025  04EB  1303               	bcf	status, 6	;RP1=0, select bank1
  4026  04EC  0833               	movf	(_distTravelled+1)^080h,w
  4027  04ED  1283               	bcf	status, 5	;RP0=0, select bank0
  4028  04EE  1303               	bcf	status, 6	;RP1=0, select bank0
  4029  04EF  01B8               	clrf	1+(?_sprintf)+03h
  4030  04F0  07B8               	addwf	1+(?_sprintf)+03h
  4031  04F1  1683               	bsf	status, 5	;RP0=1, select bank1
  4032  04F2  1303               	bcf	status, 6	;RP1=0, select bank1
  4033  04F3  0832               	movf	(_distTravelled)^080h,w
  4034  04F4  1283               	bcf	status, 5	;RP0=0, select bank0
  4035  04F5  1303               	bcf	status, 6	;RP1=0, select bank0
  4036  04F6  01B7               	clrf	0+(?_sprintf)+03h
  4037  04F7  07B7               	addwf	0+(?_sprintf)+03h
  4038                           
  4039  04F8  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4040  04F9  120A  118A  2616   	fcall	_sprintf
              120A  118A         
  4041                           	line	229
  4042                           	
  4043  04FE                     l11073:	
  4044                           ;HMI.c: 229: lcd_set_cursor(0x00);
  4045  04FE  3000               	movlw	(0)
  4046  04FF  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4047                           	line	230
  4048                           ;HMI.c: 230: lcd_write_string(adcOutput);
  4049  0504  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4050  0505  1283               	bcf	status, 5	;RP0=0, select bank0
  4051  0506  1303               	bcf	status, 6	;RP1=0, select bank0
  4052  0507  00A7               	movwf	(?_lcd_write_string)
  4053  0508  3000               	movlw	(0x0/2)
  4054  0509  00A8               	movwf	(?_lcd_write_string+1)
  4055  050A  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4056                           	line	232
  4057                           	
  4058  050F                     l11075:	
  4059                           ;HMI.c: 232: lcd_set_cursor(0x40);
  4060  050F  3040               	movlw	(040h)
  4061  0510  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4062                           	line	233
  4063                           	
  4064  0515                     l11077:	
  4065                           ;HMI.c: 233: if (pos > 0)
  4066  0515  1683               	bsf	status, 5	;RP0=1, select bank1
  4067  0516  1303               	bcf	status, 6	;RP1=0, select bank1
  4068  0517  083B               	movf	(_pos+1)^080h,w
  4069  0518  3A80               	xorlw	80h
  4070  0519  00FF               	movwf	btemp+1
  4071  051A  3080               	movlw	(high(01h))^80h
  4072  051B  027F               	subwf	btemp+1,w
  4073  051C  1D03               	skipz
  4074  051D  2D20               	goto	u4695
  4075  051E  3001               	movlw	low(01h)
  4076  051F  023A               	subwf	(_pos)^080h,w
  4077  0520                     u4695:
  4078                           
  4079  0520  1C03               	skipc
  4080  0521  2D23               	goto	u4691
  4081  0522  2D24               	goto	u4690
  4082  0523                     u4691:
  4083  0523  2D37               	goto	l11081
  4084  0524                     u4690:
  4085                           	line	234
  4086                           	
  4087  0524                     l11079:	
  4088                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  4089  0524  1683               	bsf	status, 5	;RP0=1, select bank1
  4090  0525  1303               	bcf	status, 6	;RP1=0, select bank1
  4091  0526  083A               	movf	(_pos)^080h,w
  4092  0527  3EFF               	addlw	0FFh
  4093  0528  3EDB               	addlw	_shortMenuStrings&0ffh
  4094  0529  0084               	movwf	fsr0
  4095  052A  1383               	bcf	status, 7	;select IRP bank1
  4096  052B  0800               	movf	indf,w
  4097  052C  1283               	bcf	status, 5	;RP0=0, select bank0
  4098  052D  1303               	bcf	status, 6	;RP1=0, select bank0
  4099  052E  00A7               	movwf	(?_lcd_write_string)
  4100  052F  3080               	movlw	80h
  4101  0530  00A8               	movwf	(?_lcd_write_string+1)
  4102  0531  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4103  0536  2D4A               	goto	l11083
  4104                           	line	235
  4105                           	
  4106  0537                     l4555:	
  4107                           	line	236
  4108                           	
  4109  0537                     l11081:	
  4110                           ;HMI.c: 235: else
  4111                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4112  0537  1683               	bsf	status, 5	;RP0=1, select bank1
  4113  0538  1303               	bcf	status, 6	;RP1=0, select bank1
  4114  0539  083A               	movf	(_pos)^080h,w
  4115  053A  3E05               	addlw	05h
  4116  053B  3EDB               	addlw	_shortMenuStrings&0ffh
  4117  053C  0084               	movwf	fsr0
  4118  053D  1383               	bcf	status, 7	;select IRP bank1
  4119  053E  0800               	movf	indf,w
  4120  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  4121  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  4122  0541  00A7               	movwf	(?_lcd_write_string)
  4123  0542  3080               	movlw	80h
  4124  0543  00A8               	movwf	(?_lcd_write_string+1)
  4125  0544  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4126  0549  2D4A               	goto	l11083
  4127                           	
  4128  054A                     l4556:	
  4129                           	line	237
  4130                           	
  4131  054A                     l11083:	
  4132                           ;HMI.c: 237: lcd_set_cursor(0x44);
  4133  054A  3044               	movlw	(044h)
  4134  054B  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4135                           	line	238
  4136                           	
  4137  0550                     l11085:	
  4138                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  4139  0550  1683               	bsf	status, 5	;RP0=1, select bank1
  4140  0551  1303               	bcf	status, 6	;RP1=0, select bank1
  4141  0552  083A               	movf	(_pos)^080h,w
  4142  0553  3ED5               	addlw	_menuStrings&0ffh
  4143  0554  0084               	movwf	fsr0
  4144  0555  1383               	bcf	status, 7	;select IRP bank1
  4145  0556  0800               	movf	indf,w
  4146  0557  1283               	bcf	status, 5	;RP0=0, select bank0
  4147  0558  1303               	bcf	status, 6	;RP1=0, select bank0
  4148  0559  00A7               	movwf	(?_lcd_write_string)
  4149  055A  3080               	movlw	80h
  4150  055B  00A8               	movwf	(?_lcd_write_string+1)
  4151  055C  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4152                           	line	239
  4153                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  4154  0561  304D               	movlw	(04Dh)
  4155  0562  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4156                           	line	240
  4157                           	
  4158  0567                     l11087:	
  4159                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4160  0567  3006               	movlw	low(06h)
  4161  0568  1283               	bcf	status, 5	;RP0=0, select bank0
  4162  0569  1303               	bcf	status, 6	;RP1=0, select bank0
  4163  056A  00A0               	movwf	(?___awmod)
  4164  056B  3000               	movlw	high(06h)
  4165  056C  00A1               	movwf	((?___awmod))+1
  4166  056D  1683               	bsf	status, 5	;RP0=1, select bank1
  4167  056E  1303               	bcf	status, 6	;RP1=0, select bank1
  4168  056F  083A               	movf	(_pos)^080h,w
  4169  0570  3E01               	addlw	low(01h)
  4170  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  4171  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  4172  0573  00A2               	movwf	0+(?___awmod)+02h
  4173  0574  1683               	bsf	status, 5	;RP0=1, select bank1
  4174  0575  1303               	bcf	status, 6	;RP1=0, select bank1
  4175  0576  083B               	movf	(_pos+1)^080h,w
  4176  0577  1803               	skipnc
  4177  0578  3E01               	addlw	1
  4178  0579  3E00               	addlw	high(01h)
  4179  057A  1283               	bcf	status, 5	;RP0=0, select bank0
  4180  057B  1303               	bcf	status, 6	;RP1=0, select bank0
  4181  057C  00A3               	movwf	1+0+(?___awmod)+02h
  4182  057D  120A  158A  24E3   	fcall	___awmod
              120A  118A         
  4183  0582  1283               	bcf	status, 5	;RP0=0, select bank0
  4184  0583  1303               	bcf	status, 6	;RP1=0, select bank0
  4185  0584  0820               	movf	(0+(?___awmod)),w
  4186  0585  3EDB               	addlw	_shortMenuStrings&0ffh
  4187  0586  0084               	movwf	fsr0
  4188  0587  1383               	bcf	status, 7	;select IRP bank1
  4189  0588  0800               	movf	indf,w
  4190  0589  00A7               	movwf	(?_lcd_write_string)
  4191  058A  3080               	movlw	80h
  4192  058B  00A8               	movwf	(?_lcd_write_string+1)
  4193  058C  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4194                           	line	241
  4195                           ;HMI.c: 241: break;
  4196  0591  2E15               	goto	l4561
  4197                           	line	242
  4198                           ;HMI.c: 242: case 1:
  4199                           	
  4200  0592                     l4558:	
  4201                           	line	243
  4202                           	
  4203  0592                     l11089:	
  4204                           ;HMI.c: 243: lcd_write_control(0b00000001);
  4205  0592  3001               	movlw	(01h)
  4206  0593  160A  118A  2715   	fcall	_lcd_write_control
              120A  118A         
  4207                           	line	245
  4208                           ;HMI.c: 245: lcd_set_cursor(0x00);
  4209  0598  3000               	movlw	(0)
  4210  0599  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4211                           	line	246
  4212                           	
  4213  059E                     l11091:	
  4214                           ;HMI.c: 246: lcd_write_string("Zero Step_Motor");
  4215  059E  301B               	movlw	low((STR_14-__stringbase))
  4216  059F  1283               	bcf	status, 5	;RP0=0, select bank0
  4217  05A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4218  05A1  00A7               	movwf	(?_lcd_write_string)
  4219  05A2  3080               	movlw	80h
  4220  05A3  00A8               	movwf	(?_lcd_write_string+1)
  4221  05A4  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4222                           	line	251
  4223                           	
  4224  05A9                     l11093:	
  4225                           ;HMI.c: 251: lcd_set_cursor(0x40);
  4226  05A9  3040               	movlw	(040h)
  4227  05AA  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4228                           	line	253
  4229                           ;HMI.c: 253: lcd_write_string("<<<");
  4230  05AF  3084               	movlw	low((STR_15-__stringbase))
  4231  05B0  1283               	bcf	status, 5	;RP0=0, select bank0
  4232  05B1  1303               	bcf	status, 6	;RP1=0, select bank0
  4233  05B2  00A7               	movwf	(?_lcd_write_string)
  4234  05B3  3080               	movlw	80h
  4235  05B4  00A8               	movwf	(?_lcd_write_string+1)
  4236  05B5  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4237                           	line	256
  4238                           	
  4239  05BA                     l11095:	
  4240                           ;HMI.c: 256: lcd_set_cursor(0x44);
  4241  05BA  3044               	movlw	(044h)
  4242  05BB  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4243                           	line	257
  4244                           	
  4245  05C0                     l11097:	
  4246                           ;HMI.c: 257: lcd_write_string("CONFIRM");
  4247  05C0  3078               	movlw	low((STR_16-__stringbase))
  4248  05C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4249  05C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4250  05C3  00A7               	movwf	(?_lcd_write_string)
  4251  05C4  3080               	movlw	80h
  4252  05C5  00A8               	movwf	(?_lcd_write_string+1)
  4253  05C6  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4254                           	line	258
  4255                           ;HMI.c: 258: lcd_set_cursor(0x4D);
  4256  05CB  304D               	movlw	(04Dh)
  4257  05CC  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4258                           	line	259
  4259                           	
  4260  05D1                     l11099:	
  4261                           ;HMI.c: 259: lcd_write_string(">>>");
  4262  05D1  3088               	movlw	low((STR_17-__stringbase))
  4263  05D2  1283               	bcf	status, 5	;RP0=0, select bank0
  4264  05D3  1303               	bcf	status, 6	;RP1=0, select bank0
  4265  05D4  00A7               	movwf	(?_lcd_write_string)
  4266  05D5  3080               	movlw	80h
  4267  05D6  00A8               	movwf	(?_lcd_write_string+1)
  4268  05D7  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4269                           	line	260
  4270                           ;HMI.c: 260: break;
  4271  05DC  2E15               	goto	l4561
  4272                           	line	261
  4273                           ;HMI.c: 261: case 2:
  4274                           	
  4275  05DD                     l4559:	
  4276                           	line	262
  4277                           	
  4278  05DD                     l11101:	
  4279                           ;HMI.c: 262: lcd_write_control(0b00000001);
  4280  05DD  3001               	movlw	(01h)
  4281  05DE  160A  118A  2715   	fcall	_lcd_write_control
              120A  118A         
  4282                           	line	264
  4283                           ;HMI.c: 264: lcd_set_cursor(0x00);
  4284  05E3  3000               	movlw	(0)
  4285  05E4  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4286                           	line	265
  4287                           	
  4288  05E9                     l11103:	
  4289                           ;HMI.c: 265: lcd_write_string(" Charging Mode ");
  4290  05E9  300B               	movlw	low((STR_18-__stringbase))
  4291  05EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4292  05EB  1303               	bcf	status, 6	;RP1=0, select bank0
  4293  05EC  00A7               	movwf	(?_lcd_write_string)
  4294  05ED  3080               	movlw	80h
  4295  05EE  00A8               	movwf	(?_lcd_write_string+1)
  4296  05EF  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4297                           	line	269
  4298                           	
  4299  05F4                     l11105:	
  4300                           ;HMI.c: 269: lcd_set_cursor(0x44);
  4301  05F4  3044               	movlw	(044h)
  4302  05F5  160A  118A  26D0   	fcall	_lcd_set_cursor
              120A  118A         
  4303                           	line	270
  4304                           ;HMI.c: 270: lcd_write_string("  EXIT  ");
  4305  05FA  303A               	movlw	low((STR_19-__stringbase))
  4306  05FB  1283               	bcf	status, 5	;RP0=0, select bank0
  4307  05FC  1303               	bcf	status, 6	;RP1=0, select bank0
  4308  05FD  00A7               	movwf	(?_lcd_write_string)
  4309  05FE  3080               	movlw	80h
  4310  05FF  00A8               	movwf	(?_lcd_write_string+1)
  4311  0600  120A  158A  2132   	fcall	_lcd_write_string
              120A  118A         
  4312                           	line	272
  4313                           ;HMI.c: 272: break;
  4314  0605  2E15               	goto	l4561
  4315                           	line	274
  4316                           ;HMI.c: 274: default:
  4317                           	
  4318  0606                     l4560:	
  4319                           	line	276
  4320                           ;HMI.c: 276: break;
  4321  0606  2E15               	goto	l4561
  4322                           	line	279
  4323                           	
  4324  0607                     l11107:	
  4325                           ;HMI.c: 279: }
  4326  0607  2E15               	goto	l4561
  4327                           	line	218
  4328                           	
  4329  0608                     l4553:	
  4330                           	
  4331  0608                     l11109:	
  4332  0608  1683               	bsf	status, 5	;RP0=1, select bank1
  4333  0609  1303               	bcf	status, 6	;RP1=0, select bank1
  4334  060A  084A               	movf	(_currentMenu)^080h,w	;volatile
  4335                           	; Switch size 1, requested type "space"
  4336                           ; Number of cases is 3, Range of values is 0 to 2
  4337                           ; switch strategies available:
  4338                           ; Name         Instructions Cycles
  4339                           ; simple_byte           10     6 (average)
  4340                           ; direct_byte           17     8 (fixed)
  4341                           ; jumptable            260     6 (fixed)
  4342                           ; rangetable             7     6 (fixed)
  4343                           ; spacedrange           12     9 (fixed)
  4344                           ; locatedrange           3     3 (fixed)
  4345                           ;	Chosen strategy is simple_byte
  4346                           
  4347                           	opt asmopt_off
  4348  060B  3A00               	xorlw	0^0	; case 0
  4349  060C  1903               	skipnz
  4350  060D  2CD3               	goto	l11069
  4351  060E  3A01               	xorlw	1^0	; case 1
  4352  060F  1903               	skipnz
  4353  0610  2D92               	goto	l11089
  4354  0611  3A03               	xorlw	2^1	; case 2
  4355  0612  1903               	skipnz
  4356  0613  2DDD               	goto	l11101
  4357  0614  2E15               	goto	l4561
  4358                           	opt asmopt_on
  4359                           
  4360                           	line	279
  4361                           	
  4362  0615                     l4557:	
  4363                           	line	280
  4364                           	
  4365  0615                     l4561:	
  4366  0615  0008               	return
  4367                           	opt stack 0
  4368                           GLOBAL	__end_of_UpdateDisplay
  4369  0616                     	__end_of_UpdateDisplay:
  4370 ;; =============== function _UpdateDisplay ends ============
  4371                           
  4372                           	signat	_UpdateDisplay,88
  4373                           	global	_init
  4374                           psect	text929,local,class=CODE,delta=2
  4375                           global __ptext929
  4376  098C                     __ptext929:
  4377                           
  4378 ;; *************** function _init *****************
  4379 ;; Defined at:
  4380 ;;		line 135 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;		None               void
  4387 ;; Registers used:
  4388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0
  4396 ;;      Temps:          0       1       0       0       0
  4397 ;;      Totals:         0       1       0       0       0
  4398 ;;Total ram usage:        1 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    5
  4401 ;; This function calls:
  4402 ;;		_ser_init
  4403 ;;		_init_adc
  4404 ;;		_lcd_init
  4405 ;;		_robo_init
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           psect	text929
  4411                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  4412                           	line	135
  4413                           	global	__size_of_init
  4414  002F                     	__size_of_init	equ	__end_of_init-_init
  4415                           	
  4416  098C                     _init:	
  4417                           	opt	stack 2
  4418                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4419                           	line	138
  4420                           	
  4421  098C                     l11041:	
  4422                           ;Main.c: 138: buttonPressed = 0;
  4423  098C  01FD               	clrf	(_buttonPressed)	;volatile
  4424                           	line	142
  4425                           	
  4426  098D                     l11043:	
  4427                           ;Main.c: 142: TRISC &= 0b10010000;
  4428  098D  3090               	movlw	(090h)
  4429  098E  1283               	bcf	status, 5	;RP0=0, select bank0
  4430  098F  1303               	bcf	status, 6	;RP1=0, select bank0
  4431  0990  00A3               	movwf	(??_init+0)+0
  4432  0991  0823               	movf	(??_init+0)+0,w
  4433  0992  1683               	bsf	status, 5	;RP0=1, select bank1
  4434  0993  1303               	bcf	status, 6	;RP1=0, select bank1
  4435  0994  0587               	andwf	(135)^080h,f	;volatile
  4436                           	line	144
  4437                           	
  4438  0995                     l11045:	
  4439                           ;Main.c: 144: SSPSTAT = 0b01000000;
  4440  0995  3040               	movlw	(040h)
  4441  0996  0094               	movwf	(148)^080h	;volatile
  4442                           	line	145
  4443                           	
  4444  0997                     l11047:	
  4445                           ;Main.c: 145: SSPCON = 0b10100001;
  4446  0997  30A1               	movlw	(0A1h)
  4447  0998  1283               	bcf	status, 5	;RP0=0, select bank0
  4448  0999  1303               	bcf	status, 6	;RP1=0, select bank0
  4449  099A  0094               	movwf	(20)	;volatile
  4450                           	line	147
  4451                           	
  4452  099B                     l11049:	
  4453                           ;Main.c: 147: OPTION_REG = 0b00000100;
  4454  099B  3004               	movlw	(04h)
  4455  099C  1683               	bsf	status, 5	;RP0=1, select bank1
  4456  099D  1303               	bcf	status, 6	;RP1=0, select bank1
  4457  099E  0081               	movwf	(129)^080h	;volatile
  4458                           	line	148
  4459                           	
  4460  099F                     l11051:	
  4461                           ;Main.c: 148: ser_init();
  4462  099F  120A  158A  215E   	fcall	_ser_init
              120A  158A         
  4463                           	line	149
  4464                           	
  4465  09A4                     l11053:	
  4466                           ;Main.c: 149: init_adc();
  4467  09A4  160A  118A  2729   	fcall	_init_adc
              120A  158A         
  4468                           	line	150
  4469                           	
  4470  09A9                     l11055:	
  4471                           ;Main.c: 150: lcd_init();
  4472  09A9  120A  158A  20AF   	fcall	_lcd_init
              120A  158A         
  4473                           	line	151
  4474                           	
  4475  09AE                     l11057:	
  4476                           ;Main.c: 151: robo_init();
  4477  09AE  160A  118A  276E   	fcall	_robo_init
              120A  158A         
  4478                           	line	152
  4479                           	
  4480  09B3                     l11059:	
  4481                           ;Main.c: 152: TRISB = 0b11111100;
  4482  09B3  30FC               	movlw	(0FCh)
  4483  09B4  1683               	bsf	status, 5	;RP0=1, select bank1
  4484  09B5  1303               	bcf	status, 6	;RP1=0, select bank1
  4485  09B6  0086               	movwf	(134)^080h	;volatile
  4486                           	line	154
  4487                           	
  4488  09B7                     l11061:	
  4489                           ;Main.c: 154: TMR0IE = 1;
  4490  09B7  168B               	bsf	(93/8),(93)&7
  4491                           	line	155
  4492                           	
  4493  09B8                     l11063:	
  4494                           ;Main.c: 155: PEIE=1;
  4495  09B8  170B               	bsf	(94/8),(94)&7
  4496                           	line	157
  4497                           	
  4498  09B9                     l11065:	
  4499                           ;Main.c: 157: (GIE = 1);
  4500  09B9  178B               	bsf	(95/8),(95)&7
  4501                           	line	158
  4502                           	
  4503  09BA                     l2219:	
  4504  09BA  0008               	return
  4505                           	opt stack 0
  4506                           GLOBAL	__end_of_init
  4507  09BB                     	__end_of_init:
  4508 ;; =============== function _init ends ============
  4509                           
  4510                           	signat	_init,88
  4511                           	global	_readDistance
  4512                           psect	text930,local,class=CODE,delta=2
  4513                           global __ptext930
  4514  173F                     __ptext930:
  4515                           
  4516 ;; *************** function _readDistance *****************
  4517 ;; Defined at:
  4518 ;;		line 24 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  fullval         2   12[BANK0 ] unsigned int 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  2    8[BANK0 ] unsigned int 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4532 ;;      Params:         0       2       0       0       0
  4533 ;;      Locals:         0       2       0       0       0
  4534 ;;      Temps:          0       2       0       0       0
  4535 ;;      Totals:         0       6       0       0       0
  4536 ;;Total ram usage:        6 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    5
  4539 ;; This function calls:
  4540 ;;		_adc_read_channel
  4541 ;; This function is called by:
  4542 ;;		_readAvgDistance
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           psect	text930
  4546                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  4547                           	line	24
  4548                           	global	__size_of_readDistance
  4549  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4550                           	
  4551  173F                     _readDistance:	
  4552                           	opt	stack 0
  4553                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4554                           	line	27
  4555                           	
  4556  173F                     l11035:	
  4557                           ;infrared.c: 25: unsigned int fullval ;
  4558                           ;infrared.c: 27: fullval = adc_read_channel(0);
  4559  173F  3000               	movlw	(0)
  4560  1740  120A  158A  21EB   	fcall	_adc_read_channel
              160A  118A         
  4561  1745  1283               	bcf	status, 5	;RP0=0, select bank0
  4562  1746  1303               	bcf	status, 6	;RP1=0, select bank0
  4563  1747  00AA               	movwf	(??_readDistance+0)+0
  4564  1748  01AB               	clrf	(??_readDistance+0)+0+1
  4565  1749  082A               	movf	0+(??_readDistance+0)+0,w
  4566  174A  00AC               	movwf	(readDistance@fullval)
  4567  174B  082B               	movf	1+(??_readDistance+0)+0,w
  4568  174C  00AD               	movwf	(readDistance@fullval+1)
  4569                           	line	29
  4570                           	
  4571  174D                     l11037:	
  4572                           ;infrared.c: 29: return fullval;
  4573  174D  082D               	movf	(readDistance@fullval+1),w
  4574  174E  01A9               	clrf	(?_readDistance+1)
  4575  174F  07A9               	addwf	(?_readDistance+1)
  4576  1750  082C               	movf	(readDistance@fullval),w
  4577  1751  01A8               	clrf	(?_readDistance)
  4578  1752  07A8               	addwf	(?_readDistance)
  4579                           
  4580  1753  2F54               	goto	l3000
  4581                           	
  4582  1754                     l11039:	
  4583                           	line	30
  4584                           	
  4585  1754                     l3000:	
  4586  1754  0008               	return
  4587                           	opt stack 0
  4588                           GLOBAL	__end_of_readDistance
  4589  1755                     	__end_of_readDistance:
  4590 ;; =============== function _readDistance ends ============
  4591                           
  4592                           	signat	_readDistance,90
  4593                           	global	_robot_read
  4594                           psect	text931,local,class=CODE,delta=2
  4595                           global __ptext931
  4596  0BDD                     __ptext931:
  4597                           
  4598 ;; *************** function _robot_read *****************
  4599 ;; Defined at:
  4600 ;;		line 18 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;		None               void
  4607 ;; Registers used:
  4608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4614 ;;      Params:         0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0
  4616 ;;      Temps:          0       2       0       0       0
  4617 ;;      Totals:         0       2       0       0       0
  4618 ;;Total ram usage:        2 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    5
  4621 ;; This function calls:
  4622 ;;		_ser_putch
  4623 ;;		_ser_getch
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;;		_robotMove
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           psect	text931
  4630                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  4631                           	line	18
  4632                           	global	__size_of_robot_read
  4633  0053                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  4634                           	
  4635  0BDD                     _robot_read:	
  4636                           	opt	stack 1
  4637                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4638                           	line	23
  4639                           	
  4640  0BDD                     l11021:	
  4641                           ;robot.c: 23: ser_putch (142);
  4642  0BDD  308E               	movlw	(08Eh)
  4643  0BDE  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  4644                           	line	24
  4645                           ;robot.c: 24: ser_putch (7);
  4646  0BE3  3007               	movlw	(07h)
  4647  0BE4  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  4648                           	line	25
  4649                           	
  4650  0BE9                     l11023:	
  4651                           ;robot.c: 25: _delay((unsigned long)((5)*(20000000/4000.0)));
  4652                           	opt asmopt_off
  4653  0BE9  3021               movlw	33
  4654  0BEA  1283               	bcf	status, 5	;RP0=0, select bank0
  4655  0BEB  1303               	bcf	status, 6	;RP1=0, select bank0
  4656  0BEC  00A3               movwf	((??_robot_read+0)+0+1),f
  4657  0BED  3076               	movlw	118
  4658  0BEE  00A2               movwf	((??_robot_read+0)+0),f
  4659  0BEF                     u4977:
  4660  0BEF  0BA2               	decfsz	((??_robot_read+0)+0),f
  4661  0BF0  2BEF               	goto	u4977
  4662  0BF1  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4663  0BF2  2BEF               	goto	u4977
  4664  0BF3  0064               	clrwdt
  4665                           opt asmopt_on
  4666                           
  4667                           	line	26
  4668                           	
  4669  0BF4                     l11025:	
  4670                           ;robot.c: 26: BumpSensors = ser_getch();
  4671  0BF4  120A  158A  2106   	fcall	_ser_getch
              120A  158A         
  4672  0BF9  1283               	bcf	status, 5	;RP0=0, select bank0
  4673  0BFA  1303               	bcf	status, 6	;RP1=0, select bank0
  4674  0BFB  00A2               	movwf	(??_robot_read+0)+0
  4675  0BFC  0822               	movf	(??_robot_read+0)+0,w
  4676  0BFD  1683               	bsf	status, 5	;RP0=1, select bank1
  4677  0BFE  1303               	bcf	status, 6	;RP1=0, select bank1
  4678  0BFF  00C2               	movwf	(_BumpSensors)^080h	;volatile
  4679                           	line	27
  4680                           	
  4681  0C00                     l11027:	
  4682                           ;robot.c: 27: ser_putch (142);
  4683  0C00  308E               	movlw	(08Eh)
  4684  0C01  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  4685                           	line	28
  4686                           	
  4687  0C06                     l11029:	
  4688                           ;robot.c: 28: ser_putch (19);
  4689  0C06  3013               	movlw	(013h)
  4690  0C07  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  4691                           	line	29
  4692                           ;robot.c: 29: _delay((unsigned long)((5)*(20000000/4000.0)));
  4693                           	opt asmopt_off
  4694  0C0C  3021               movlw	33
  4695  0C0D  1283               	bcf	status, 5	;RP0=0, select bank0
  4696  0C0E  1303               	bcf	status, 6	;RP1=0, select bank0
  4697  0C0F  00A3               movwf	((??_robot_read+0)+0+1),f
  4698  0C10  3076               	movlw	118
  4699  0C11  00A2               movwf	((??_robot_read+0)+0),f
  4700  0C12                     u4987:
  4701  0C12  0BA2               	decfsz	((??_robot_read+0)+0),f
  4702  0C13  2C12               	goto	u4987
  4703  0C14  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4704  0C15  2C12               	goto	u4987
  4705  0C16  0064               	clrwdt
  4706                           opt asmopt_on
  4707                           
  4708                           	line	30
  4709                           	
  4710  0C17                     l11031:	
  4711                           ;robot.c: 30: DistHighByte = ser_getch();
  4712  0C17  120A  158A  2106   	fcall	_ser_getch
              120A  158A         
  4713  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  4714  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  4715  0C1E  00A2               	movwf	(??_robot_read+0)+0
  4716  0C1F  0822               	movf	(??_robot_read+0)+0,w
  4717  0C20  1683               	bsf	status, 5	;RP0=1, select bank1
  4718  0C21  1303               	bcf	status, 6	;RP1=0, select bank1
  4719  0C22  00C4               	movwf	(_DistHighByte)^080h	;volatile
  4720                           	line	31
  4721                           	
  4722  0C23                     l11033:	
  4723                           ;robot.c: 31: DistLowByte = ser_getch();
  4724  0C23  120A  158A  2106   	fcall	_ser_getch
              120A  158A         
  4725  0C28  1283               	bcf	status, 5	;RP0=0, select bank0
  4726  0C29  1303               	bcf	status, 6	;RP1=0, select bank0
  4727  0C2A  00A2               	movwf	(??_robot_read+0)+0
  4728  0C2B  0822               	movf	(??_robot_read+0)+0,w
  4729  0C2C  1683               	bsf	status, 5	;RP0=1, select bank1
  4730  0C2D  1303               	bcf	status, 6	;RP1=0, select bank1
  4731  0C2E  00C5               	movwf	(_DistLowByte)^080h	;volatile
  4732                           	line	33
  4733                           	
  4734  0C2F                     l6020:	
  4735  0C2F  0008               	return
  4736                           	opt stack 0
  4737                           GLOBAL	__end_of_robot_read
  4738  0C30                     	__end_of_robot_read:
  4739 ;; =============== function _robot_read ends ============
  4740                           
  4741                           	signat	_robot_read,88
  4742                           	global	_lcd_init
  4743                           psect	text932,local,class=CODE,delta=2
  4744                           global __ptext932
  4745  08AF                     __ptext932:
  4746                           
  4747 ;; *************** function _lcd_init *****************
  4748 ;; Defined at:
  4749 ;;		line 101 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;		None               void
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0, pclath, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    4
  4770 ;; This function calls:
  4771 ;;		_lcd_write_control
  4772 ;; This function is called by:
  4773 ;;		_init
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           psect	text932
  4777                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4778                           	line	101
  4779                           	global	__size_of_lcd_init
  4780  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4781                           	
  4782  08AF                     _lcd_init:	
  4783                           	opt	stack 2
  4784                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4785                           	line	105
  4786                           	
  4787  08AF                     l11001:	
  4788                           ;lcd.c: 105: ADCON1 = 0b00000010;
  4789  08AF  3002               	movlw	(02h)
  4790  08B0  1683               	bsf	status, 5	;RP0=1, select bank1
  4791  08B1  1303               	bcf	status, 6	;RP1=0, select bank1
  4792  08B2  009F               	movwf	(159)^080h	;volatile
  4793                           	line	108
  4794                           	
  4795  08B3                     l11003:	
  4796                           ;lcd.c: 108: PORTD = 0;
  4797  08B3  1283               	bcf	status, 5	;RP0=0, select bank0
  4798  08B4  1303               	bcf	status, 6	;RP1=0, select bank0
  4799  08B5  0188               	clrf	(8)	;volatile
  4800                           	line	109
  4801                           	
  4802  08B6                     l11005:	
  4803                           ;lcd.c: 109: PORTE = 0;
  4804  08B6  0189               	clrf	(9)	;volatile
  4805                           	line	111
  4806                           	
  4807  08B7                     l11007:	
  4808                           ;lcd.c: 111: TRISD = 0b00000000;
  4809  08B7  1683               	bsf	status, 5	;RP0=1, select bank1
  4810  08B8  1303               	bcf	status, 6	;RP1=0, select bank1
  4811  08B9  0188               	clrf	(136)^080h	;volatile
  4812                           	line	112
  4813                           	
  4814  08BA                     l11009:	
  4815                           ;lcd.c: 112: TRISE = 0b00000000;
  4816  08BA  0189               	clrf	(137)^080h	;volatile
  4817                           	line	115
  4818                           	
  4819  08BB                     l11011:	
  4820                           ;lcd.c: 115: lcd_write_control(0b00000001);
  4821  08BB  3001               	movlw	(01h)
  4822  08BC  160A  118A  2715   	fcall	_lcd_write_control
              120A  158A         
  4823                           	line	116
  4824                           	
  4825  08C1                     l11013:	
  4826                           ;lcd.c: 116: lcd_write_control(0b00111000);
  4827  08C1  3038               	movlw	(038h)
  4828  08C2  160A  118A  2715   	fcall	_lcd_write_control
              120A  158A         
  4829                           	line	117
  4830                           	
  4831  08C7                     l11015:	
  4832                           ;lcd.c: 117: lcd_write_control(0b00001100);
  4833  08C7  300C               	movlw	(0Ch)
  4834  08C8  160A  118A  2715   	fcall	_lcd_write_control
              120A  158A         
  4835                           	line	118
  4836                           	
  4837  08CD                     l11017:	
  4838                           ;lcd.c: 118: lcd_write_control(0b00000110);
  4839  08CD  3006               	movlw	(06h)
  4840  08CE  160A  118A  2715   	fcall	_lcd_write_control
              120A  158A         
  4841                           	line	119
  4842                           	
  4843  08D3                     l11019:	
  4844                           ;lcd.c: 119: lcd_write_control(0b00000010);
  4845  08D3  3002               	movlw	(02h)
  4846  08D4  160A  118A  2715   	fcall	_lcd_write_control
              120A  158A         
  4847                           	line	121
  4848                           	
  4849  08D9                     l1429:	
  4850  08D9  0008               	return
  4851                           	opt stack 0
  4852                           GLOBAL	__end_of_lcd_init
  4853  08DA                     	__end_of_lcd_init:
  4854 ;; =============== function _lcd_init ends ============
  4855                           
  4856                           	signat	_lcd_init,88
  4857                           	global	_lcd_write_string
  4858                           psect	text933,local,class=CODE,delta=2
  4859                           global __ptext933
  4860  0932                     __ptext933:
  4861                           
  4862 ;; *************** function _lcd_write_string *****************
  4863 ;; Defined at:
  4864 ;;		line 48 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  s               2    7[BANK0 ] PTR unsigned char 
  4867 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  4868 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@adcOutput(16), STR_12(4), 
  4869 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  4870 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  4871 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;		None               void
  4876 ;; Registers used:
  4877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4883 ;;      Params:         0       2       0       0       0
  4884 ;;      Locals:         0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0
  4886 ;;      Totals:         0       2       0       0       0
  4887 ;;Total ram usage:        2 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    4
  4890 ;; This function calls:
  4891 ;;		_lcd_write_data
  4892 ;; This function is called by:
  4893 ;;		_UpdateDisplay
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           psect	text933
  4897                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4898                           	line	48
  4899                           	global	__size_of_lcd_write_string
  4900  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4901                           	
  4902  0932                     _lcd_write_string:	
  4903                           	opt	stack 1
  4904                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4905                           	line	50
  4906                           	
  4907  0932                     l10993:	
  4908                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4909  0932  294C               	goto	l10999
  4910                           	
  4911  0933                     l1409:	
  4912                           	
  4913  0933                     l10995:	
  4914  0933  1283               	bcf	status, 5	;RP0=0, select bank0
  4915  0934  1303               	bcf	status, 6	;RP1=0, select bank0
  4916  0935  0828               	movf	(lcd_write_string@s+1),w
  4917  0936  00FF               	movwf	btemp+1
  4918  0937  0827               	movf	(lcd_write_string@s),w
  4919  0938  0084               	movwf	fsr0
  4920  0939  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4921  093E  160A  118A  26DB   	fcall	_lcd_write_data
              120A  158A         
  4922                           	
  4923  0943                     l10997:	
  4924  0943  3001               	movlw	low(01h)
  4925  0944  1283               	bcf	status, 5	;RP0=0, select bank0
  4926  0945  1303               	bcf	status, 6	;RP1=0, select bank0
  4927  0946  07A7               	addwf	(lcd_write_string@s),f
  4928  0947  1803               	skipnc
  4929  0948  0AA8               	incf	(lcd_write_string@s+1),f
  4930  0949  3000               	movlw	high(01h)
  4931  094A  07A8               	addwf	(lcd_write_string@s+1),f
  4932  094B  294C               	goto	l10999
  4933                           	
  4934  094C                     l1408:	
  4935                           	
  4936  094C                     l10999:	
  4937  094C  1283               	bcf	status, 5	;RP0=0, select bank0
  4938  094D  1303               	bcf	status, 6	;RP1=0, select bank0
  4939  094E  0828               	movf	(lcd_write_string@s+1),w
  4940  094F  00FF               	movwf	btemp+1
  4941  0950  0827               	movf	(lcd_write_string@s),w
  4942  0951  0084               	movwf	fsr0
  4943  0952  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4944  0957  3800               	iorlw	0
  4945  0958  1D03               	skipz
  4946  0959  295B               	goto	u4671
  4947  095A  295C               	goto	u4670
  4948  095B                     u4671:
  4949  095B  2933               	goto	l10995
  4950  095C                     u4670:
  4951  095C  295D               	goto	l1411
  4952                           	
  4953  095D                     l1410:	
  4954                           	line	51
  4955                           	
  4956  095D                     l1411:	
  4957  095D  0008               	return
  4958                           	opt stack 0
  4959                           GLOBAL	__end_of_lcd_write_string
  4960  095E                     	__end_of_lcd_write_string:
  4961 ;; =============== function _lcd_write_string ends ============
  4962                           
  4963                           	signat	_lcd_write_string,4216
  4964                           	global	_lcd_set_cursor
  4965                           psect	text934,local,class=CODE,delta=2
  4966                           global __ptext934
  4967  16D0                     __ptext934:
  4968                           
  4969 ;; *************** function _lcd_set_cursor *****************
  4970 ;; Defined at:
  4971 ;;		line 42 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  address         1    wreg     unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  address         1    3[BANK0 ] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;		None               void
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0, pclath, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4985 ;;      Params:         0       0       0       0       0
  4986 ;;      Locals:         0       1       0       0       0
  4987 ;;      Temps:          0       0       0       0       0
  4988 ;;      Totals:         0       1       0       0       0
  4989 ;;Total ram usage:        1 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    4
  4992 ;; This function calls:
  4993 ;;		_lcd_write_control
  4994 ;; This function is called by:
  4995 ;;		_UpdateDisplay
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           psect	text934
  4999                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  5000                           	line	42
  5001                           	global	__size_of_lcd_set_cursor
  5002  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5003                           	
  5004  16D0                     _lcd_set_cursor:	
  5005                           	opt	stack 1
  5006                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5007                           ;lcd_set_cursor@address stored from wreg
  5008  16D0  1283               	bcf	status, 5	;RP0=0, select bank0
  5009  16D1  1303               	bcf	status, 6	;RP1=0, select bank0
  5010  16D2  00A3               	movwf	(lcd_set_cursor@address)
  5011                           	line	43
  5012                           	
  5013  16D3                     l10989:	
  5014                           ;lcd.c: 43: address |= 0b10000000;
  5015  16D3  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5016                           	line	44
  5017                           	
  5018  16D4                     l10991:	
  5019                           ;lcd.c: 44: lcd_write_control(address);
  5020  16D4  0823               	movf	(lcd_set_cursor@address),w
  5021  16D5  160A  118A  2715   	fcall	_lcd_write_control
              160A  118A         
  5022                           	line	45
  5023                           	
  5024  16DA                     l1405:	
  5025  16DA  0008               	return
  5026                           	opt stack 0
  5027                           GLOBAL	__end_of_lcd_set_cursor
  5028  16DB                     	__end_of_lcd_set_cursor:
  5029 ;; =============== function _lcd_set_cursor ends ============
  5030                           
  5031                           	signat	_lcd_set_cursor,4216
  5032                           	global	_ser_getch
  5033                           psect	text935,local,class=CODE,delta=2
  5034                           global __ptext935
  5035  0906                     __ptext935:
  5036                           
  5037 ;; *************** function _ser_getch *****************
  5038 ;; Defined at:
  5039 ;;		line 55 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  c               1    1[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       0       0       0       0
  5054 ;;      Locals:         0       1       0       0       0
  5055 ;;      Temps:          0       1       0       0       0
  5056 ;;      Totals:         0       2       0       0       0
  5057 ;;Total ram usage:        2 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    4
  5060 ;; This function calls:
  5061 ;;		_ser_isrx
  5062 ;; This function is called by:
  5063 ;;		_robot_read
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           psect	text935
  5067                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  5068                           	line	55
  5069                           	global	__size_of_ser_getch
  5070  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  5071                           	
  5072  0906                     _ser_getch:	
  5073                           	opt	stack 1
  5074                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5075                           	line	58
  5076                           	
  5077  0906                     l10973:	
  5078                           ;ser.c: 56: unsigned char c;
  5079                           ;ser.c: 58: while (ser_isrx()==0)
  5080  0906  2908               	goto	l10975
  5081                           	
  5082  0907                     l6738:	
  5083                           	line	59
  5084                           ;ser.c: 59: continue;
  5085  0907  2908               	goto	l10975
  5086                           	
  5087  0908                     l6737:	
  5088                           	line	58
  5089                           	
  5090  0908                     l10975:	
  5091  0908  160A  118A  2755   	fcall	_ser_isrx
              120A  158A         
  5092  090D  1C03               	btfss	status,0
  5093  090E  2910               	goto	u4661
  5094  090F  2911               	goto	u4660
  5095  0910                     u4661:
  5096  0910  2908               	goto	l10975
  5097  0911                     u4660:
  5098                           	
  5099  0911                     l6739:	
  5100                           	line	61
  5101                           ;ser.c: 61: GIE=0;
  5102  0911  138B               	bcf	(95/8),(95)&7
  5103                           	line	62
  5104                           	
  5105  0912                     l10977:	
  5106                           ;ser.c: 62: c=rxfifo[rxoptr];
  5107  0912  1683               	bsf	status, 5	;RP0=1, select bank1
  5108  0913  1303               	bcf	status, 6	;RP1=0, select bank1
  5109  0914  084F               	movf	(_rxoptr)^080h,w
  5110  0915  3EA0               	addlw	_rxfifo&0ffh
  5111  0916  0084               	movwf	fsr0
  5112  0917  1383               	bcf	status, 7	;select IRP bank1
  5113  0918  0800               	movf	indf,w
  5114  0919  1283               	bcf	status, 5	;RP0=0, select bank0
  5115  091A  1303               	bcf	status, 6	;RP1=0, select bank0
  5116  091B  00A0               	movwf	(??_ser_getch+0)+0
  5117  091C  0820               	movf	(??_ser_getch+0)+0,w
  5118  091D  00A1               	movwf	(ser_getch@c)
  5119                           	line	63
  5120                           	
  5121  091E                     l10979:	
  5122                           ;ser.c: 63: ++rxoptr;
  5123  091E  3001               	movlw	(01h)
  5124  091F  00A0               	movwf	(??_ser_getch+0)+0
  5125  0920  0820               	movf	(??_ser_getch+0)+0,w
  5126  0921  1683               	bsf	status, 5	;RP0=1, select bank1
  5127  0922  1303               	bcf	status, 6	;RP1=0, select bank1
  5128  0923  07CF               	addwf	(_rxoptr)^080h,f	;volatile
  5129                           	line	64
  5130                           	
  5131  0924                     l10981:	
  5132                           ;ser.c: 64: rxoptr &= (16-1);
  5133  0924  300F               	movlw	(0Fh)
  5134  0925  1283               	bcf	status, 5	;RP0=0, select bank0
  5135  0926  1303               	bcf	status, 6	;RP1=0, select bank0
  5136  0927  00A0               	movwf	(??_ser_getch+0)+0
  5137  0928  0820               	movf	(??_ser_getch+0)+0,w
  5138  0929  1683               	bsf	status, 5	;RP0=1, select bank1
  5139  092A  1303               	bcf	status, 6	;RP1=0, select bank1
  5140  092B  05CF               	andwf	(_rxoptr)^080h,f	;volatile
  5141                           	line	65
  5142                           	
  5143  092C                     l10983:	
  5144                           ;ser.c: 65: GIE=1;
  5145  092C  178B               	bsf	(95/8),(95)&7
  5146                           	line	66
  5147                           	
  5148  092D                     l10985:	
  5149                           ;ser.c: 66: return c;
  5150  092D  1283               	bcf	status, 5	;RP0=0, select bank0
  5151  092E  1303               	bcf	status, 6	;RP1=0, select bank0
  5152  092F  0821               	movf	(ser_getch@c),w
  5153  0930  2931               	goto	l6740
  5154                           	
  5155  0931                     l10987:	
  5156                           	line	67
  5157                           	
  5158  0931                     l6740:	
  5159  0931  0008               	return
  5160                           	opt stack 0
  5161                           GLOBAL	__end_of_ser_getch
  5162  0932                     	__end_of_ser_getch:
  5163 ;; =============== function _ser_getch ends ============
  5164                           
  5165                           	signat	_ser_getch,89
  5166                           	global	_sprintf
  5167                           psect	text936,local,class=CODE,delta=2
  5168                           global __ptext936
  5169  0616                     __ptext936:
  5170                           
  5171 ;; *************** function _sprintf *****************
  5172 ;; Defined at:
  5173 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  sp              1    wreg     PTR unsigned char 
  5176 ;;		 -> UpdateDisplay@adcOutput(16), 
  5177 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  5178 ;;		 -> STR_13(15), 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  5181 ;;		 -> UpdateDisplay@adcOutput(16), 
  5182 ;;  _val            4   31[BANK0 ] struct .
  5183 ;;  c               1   36[BANK0 ] char 
  5184 ;;  prec            1   30[BANK0 ] char 
  5185 ;;  flag            1   29[BANK0 ] unsigned char 
  5186 ;;  ap              1   28[BANK0 ] PTR void [1]
  5187 ;;		 -> ?_sprintf(2), 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  2   20[BANK0 ] int 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5197 ;;      Params:         0       5       0       0       0
  5198 ;;      Locals:         0       9       0       0       0
  5199 ;;      Temps:          0       3       0       0       0
  5200 ;;      Totals:         0      17       0       0       0
  5201 ;;Total ram usage:       17 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    4
  5204 ;; This function calls:
  5205 ;;		___lwdiv
  5206 ;;		___lwmod
  5207 ;; This function is called by:
  5208 ;;		_UpdateDisplay
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           psect	text936
  5212                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  5213                           	line	488
  5214                           	global	__size_of_sprintf
  5215  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5216                           	
  5217  0616                     _sprintf:	
  5218                           	opt	stack 1
  5219                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5220                           ;sprintf@sp stored from wreg
  5221                           	line	537
  5222  0616  1283               	bcf	status, 5	;RP0=0, select bank0
  5223  0617  1303               	bcf	status, 6	;RP1=0, select bank0
  5224  0618  00C3               	movwf	(sprintf@sp)
  5225                           	
  5226  0619                     l10915:	
  5227  0619  3035               	movlw	(?_sprintf+01h)&0ffh
  5228  061A  00B9               	movwf	(??_sprintf+0)+0
  5229  061B  0839               	movf	(??_sprintf+0)+0,w
  5230  061C  00BC               	movwf	(sprintf@ap)
  5231                           	line	540
  5232  061D  2EFC               	goto	l10967
  5233                           	
  5234  061E                     l6778:	
  5235                           	line	542
  5236                           	
  5237  061E                     l10917:	
  5238  061E  0844               	movf	(sprintf@c),w
  5239  061F  3A25               	xorlw	025h
  5240  0620  1903               	skipnz
  5241  0621  2E23               	goto	u4581
  5242  0622  2E24               	goto	u4580
  5243  0623                     u4581:
  5244  0623  2E30               	goto	l6779
  5245  0624                     u4580:
  5246                           	line	545
  5247                           	
  5248  0624                     l10919:	
  5249  0624  0844               	movf	(sprintf@c),w
  5250  0625  00B9               	movwf	(??_sprintf+0)+0
  5251  0626  0843               	movf	(sprintf@sp),w
  5252  0627  0084               	movwf	fsr0
  5253  0628  0839               	movf	(??_sprintf+0)+0,w
  5254  0629  1383               	bcf	status, 7	;select IRP bank0
  5255  062A  0080               	movwf	indf
  5256                           	
  5257  062B                     l10921:	
  5258  062B  3001               	movlw	(01h)
  5259  062C  00B9               	movwf	(??_sprintf+0)+0
  5260  062D  0839               	movf	(??_sprintf+0)+0,w
  5261  062E  07C3               	addwf	(sprintf@sp),f
  5262                           	line	546
  5263  062F  2EFC               	goto	l10967
  5264                           	line	547
  5265                           	
  5266  0630                     l6779:	
  5267                           	line	552
  5268  0630  01BD               	clrf	(sprintf@flag)
  5269                           	line	638
  5270  0631  2E37               	goto	l10925
  5271                           	line	640
  5272                           	
  5273  0632                     l6781:	
  5274                           	line	641
  5275  0632  2F10               	goto	l10969
  5276                           	line	700
  5277                           	
  5278  0633                     l6783:	
  5279  0633  2E4C               	goto	l10927
  5280                           	line	701
  5281                           	
  5282  0634                     l6784:	
  5283                           	line	702
  5284  0634  2E4C               	goto	l10927
  5285                           	line	805
  5286                           	
  5287  0635                     l6786:	
  5288                           	line	816
  5289  0635  2EFC               	goto	l10967
  5290                           	line	825
  5291                           	
  5292  0636                     l10923:	
  5293  0636  2E4C               	goto	l10927
  5294                           	line	638
  5295                           	
  5296  0637                     l6780:	
  5297                           	
  5298  0637                     l10925:	
  5299  0637  3001               	movlw	01h
  5300  0638  07B4               	addwf	(sprintf@f),f
  5301  0639  30FF               	movlw	-01h
  5302  063A  0734               	addwf	(sprintf@f),w
  5303  063B  0084               	movwf	fsr0
  5304  063C  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5305  0641  00C4               	movwf	(sprintf@c)
  5306                           	; Switch size 1, requested type "space"
  5307                           ; Number of cases is 3, Range of values is 0 to 105
  5308                           ; switch strategies available:
  5309                           ; Name         Instructions Cycles
  5310                           ; simple_byte           10     6 (average)
  5311                           ; jumptable            260     6 (fixed)
  5312                           ; rangetable           110     6 (fixed)
  5313                           ; spacedrange          218     9 (fixed)
  5314                           ; locatedrange         106     3 (fixed)
  5315                           ;	Chosen strategy is simple_byte
  5316                           
  5317                           	opt asmopt_off
  5318  0642  3A00               	xorlw	0^0	; case 0
  5319  0643  1903               	skipnz
  5320  0644  2F10               	goto	l10969
  5321  0645  3A64               	xorlw	100^0	; case 100
  5322  0646  1903               	skipnz
  5323  0647  2E4C               	goto	l10927
  5324  0648  3A0D               	xorlw	105^100	; case 105
  5325  0649  1903               	skipnz
  5326  064A  2E4C               	goto	l10927
  5327  064B  2EFC               	goto	l10967
  5328                           	opt asmopt_on
  5329                           
  5330                           	line	825
  5331                           	
  5332  064C                     l6785:	
  5333                           	line	1254
  5334                           	
  5335  064C                     l10927:	
  5336  064C  083C               	movf	(sprintf@ap),w
  5337  064D  0084               	movwf	fsr0
  5338  064E  1383               	bcf	status, 7	;select IRP bank0
  5339  064F  0800               	movf	indf,w
  5340  0650  00BF               	movwf	(sprintf@_val)
  5341  0651  0A84               	incf	fsr0,f
  5342  0652  0800               	movf	indf,w
  5343  0653  00C0               	movwf	(sprintf@_val+1)
  5344                           	
  5345  0654                     l10929:	
  5346  0654  3002               	movlw	(02h)
  5347  0655  00B9               	movwf	(??_sprintf+0)+0
  5348  0656  0839               	movf	(??_sprintf+0)+0,w
  5349  0657  07BC               	addwf	(sprintf@ap),f
  5350                           	line	1256
  5351                           	
  5352  0658                     l10931:	
  5353  0658  1FC0               	btfss	(sprintf@_val+1),7
  5354  0659  2E5B               	goto	u4591
  5355  065A  2E5C               	goto	u4590
  5356  065B                     u4591:
  5357  065B  2E66               	goto	l10937
  5358  065C                     u4590:
  5359                           	line	1257
  5360                           	
  5361  065C                     l10933:	
  5362  065C  3003               	movlw	(03h)
  5363  065D  00B9               	movwf	(??_sprintf+0)+0
  5364  065E  0839               	movf	(??_sprintf+0)+0,w
  5365  065F  04BD               	iorwf	(sprintf@flag),f
  5366                           	line	1258
  5367                           	
  5368  0660                     l10935:	
  5369  0660  09BF               	comf	(sprintf@_val),f
  5370  0661  09C0               	comf	(sprintf@_val+1),f
  5371  0662  0ABF               	incf	(sprintf@_val),f
  5372  0663  1903               	skipnz
  5373  0664  0AC0               	incf	(sprintf@_val+1),f
  5374  0665  2E66               	goto	l10937
  5375                           	line	1259
  5376                           	
  5377  0666                     l6787:	
  5378                           	line	1300
  5379                           	
  5380  0666                     l10937:	
  5381  0666  01C4               	clrf	(sprintf@c)
  5382  0667  1403               	bsf	status,0
  5383  0668  0DC4               	rlf	(sprintf@c),f
  5384                           	
  5385  0669                     l10939:	
  5386  0669  0844               	movf	(sprintf@c),w
  5387  066A  3A05               	xorlw	05h
  5388  066B  1D03               	skipz
  5389  066C  2E6E               	goto	u4601
  5390  066D  2E6F               	goto	u4600
  5391  066E                     u4601:
  5392  066E  2E71               	goto	l10943
  5393  066F                     u4600:
  5394  066F  2E99               	goto	l10951
  5395                           	
  5396  0670                     l10941:	
  5397  0670  2E99               	goto	l10951
  5398                           	line	1301
  5399                           	
  5400  0671                     l6788:	
  5401                           	
  5402  0671                     l10943:	
  5403  0671  0844               	movf	(sprintf@c),w
  5404  0672  00B9               	movwf	(??_sprintf+0)+0
  5405  0673  0739               	addwf	(??_sprintf+0)+0,w
  5406  0674  3E01               	addlw	low((_dpowers-__stringbase))
  5407  0675  0084               	movwf	fsr0
  5408  0676  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5409  067B  00BA               	movwf	(??_sprintf+1)+0
  5410  067C  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5411  0681  00BB               	movwf	(??_sprintf+1)+0+1
  5412  0682  083B               	movf	1+(??_sprintf+1)+0,w
  5413  0683  0240               	subwf	(sprintf@_val+1),w
  5414  0684  1D03               	skipz
  5415  0685  2E88               	goto	u4615
  5416  0686  083A               	movf	0+(??_sprintf+1)+0,w
  5417  0687  023F               	subwf	(sprintf@_val),w
  5418  0688                     u4615:
  5419  0688  1803               	skipnc
  5420  0689  2E8B               	goto	u4611
  5421  068A  2E8C               	goto	u4610
  5422  068B                     u4611:
  5423  068B  2E8E               	goto	l10947
  5424  068C                     u4610:
  5425  068C  2E99               	goto	l10951
  5426                           	line	1302
  5427                           	
  5428  068D                     l10945:	
  5429  068D  2E99               	goto	l10951
  5430                           	
  5431  068E                     l6790:	
  5432                           	line	1300
  5433                           	
  5434  068E                     l10947:	
  5435  068E  3001               	movlw	(01h)
  5436  068F  00B9               	movwf	(??_sprintf+0)+0
  5437  0690  0839               	movf	(??_sprintf+0)+0,w
  5438  0691  07C4               	addwf	(sprintf@c),f
  5439                           	
  5440  0692                     l10949:	
  5441  0692  0844               	movf	(sprintf@c),w
  5442  0693  3A05               	xorlw	05h
  5443  0694  1D03               	skipz
  5444  0695  2E97               	goto	u4621
  5445  0696  2E98               	goto	u4620
  5446  0697                     u4621:
  5447  0697  2E71               	goto	l10943
  5448  0698                     u4620:
  5449  0698  2E99               	goto	l10951
  5450                           	
  5451  0699                     l6789:	
  5452                           	line	1433
  5453                           	
  5454  0699                     l10951:	
  5455  0699  083D               	movf	(sprintf@flag),w
  5456  069A  3903               	andlw	03h
  5457  069B  1903               	btfsc	status,2
  5458  069C  2E9E               	goto	u4631
  5459  069D  2E9F               	goto	u4630
  5460  069E                     u4631:
  5461  069E  2EAB               	goto	l10957
  5462  069F                     u4630:
  5463                           	line	1434
  5464                           	
  5465  069F                     l10953:	
  5466  069F  302D               	movlw	(02Dh)
  5467  06A0  00B9               	movwf	(??_sprintf+0)+0
  5468  06A1  0843               	movf	(sprintf@sp),w
  5469  06A2  0084               	movwf	fsr0
  5470  06A3  0839               	movf	(??_sprintf+0)+0,w
  5471  06A4  1383               	bcf	status, 7	;select IRP bank0
  5472  06A5  0080               	movwf	indf
  5473                           	
  5474  06A6                     l10955:	
  5475  06A6  3001               	movlw	(01h)
  5476  06A7  00B9               	movwf	(??_sprintf+0)+0
  5477  06A8  0839               	movf	(??_sprintf+0)+0,w
  5478  06A9  07C3               	addwf	(sprintf@sp),f
  5479  06AA  2EAB               	goto	l10957
  5480                           	
  5481  06AB                     l6791:	
  5482                           	line	1467
  5483                           	
  5484  06AB                     l10957:	
  5485  06AB  0844               	movf	(sprintf@c),w
  5486  06AC  00B9               	movwf	(??_sprintf+0)+0
  5487  06AD  0839               	movf	(??_sprintf+0)+0,w
  5488  06AE  00BE               	movwf	(sprintf@prec)
  5489                           	line	1469
  5490  06AF  2EF0               	goto	l10965
  5491                           	
  5492  06B0                     l6793:	
  5493                           	line	1484
  5494                           	
  5495  06B0                     l10959:	
  5496  06B0  300A               	movlw	low(0Ah)
  5497  06B1  00AE               	movwf	(?___lwmod)
  5498  06B2  3000               	movlw	high(0Ah)
  5499  06B3  00AF               	movwf	((?___lwmod))+1
  5500  06B4  083E               	movf	(sprintf@prec),w
  5501  06B5  00B9               	movwf	(??_sprintf+0)+0
  5502  06B6  0739               	addwf	(??_sprintf+0)+0,w
  5503  06B7  3E01               	addlw	low((_dpowers-__stringbase))
  5504  06B8  0084               	movwf	fsr0
  5505  06B9  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5506  06BE  00A6               	movwf	(?___lwdiv)
  5507  06BF  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5508  06C4  00A7               	movwf	(?___lwdiv+1)
  5509  06C5  0840               	movf	(sprintf@_val+1),w
  5510  06C6  01A9               	clrf	1+(?___lwdiv)+02h
  5511  06C7  07A9               	addwf	1+(?___lwdiv)+02h
  5512  06C8  083F               	movf	(sprintf@_val),w
  5513  06C9  01A8               	clrf	0+(?___lwdiv)+02h
  5514  06CA  07A8               	addwf	0+(?___lwdiv)+02h
  5515                           
  5516  06CB  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  5517  06D0  1283               	bcf	status, 5	;RP0=0, select bank0
  5518  06D1  1303               	bcf	status, 6	;RP1=0, select bank0
  5519  06D2  0827               	movf	(1+(?___lwdiv)),w
  5520  06D3  01B1               	clrf	1+(?___lwmod)+02h
  5521  06D4  07B1               	addwf	1+(?___lwmod)+02h
  5522  06D5  0826               	movf	(0+(?___lwdiv)),w
  5523  06D6  01B0               	clrf	0+(?___lwmod)+02h
  5524  06D7  07B0               	addwf	0+(?___lwmod)+02h
  5525                           
  5526  06D8  120A  158A  226A   	fcall	___lwmod
              120A  118A         
  5527  06DD  1283               	bcf	status, 5	;RP0=0, select bank0
  5528  06DE  1303               	bcf	status, 6	;RP1=0, select bank0
  5529  06DF  082E               	movf	(0+(?___lwmod)),w
  5530  06E0  3E30               	addlw	030h
  5531  06E1  00BA               	movwf	(??_sprintf+1)+0
  5532  06E2  083A               	movf	(??_sprintf+1)+0,w
  5533  06E3  00C4               	movwf	(sprintf@c)
  5534                           	line	1516
  5535                           	
  5536  06E4                     l10961:	
  5537  06E4  0844               	movf	(sprintf@c),w
  5538  06E5  00B9               	movwf	(??_sprintf+0)+0
  5539  06E6  0843               	movf	(sprintf@sp),w
  5540  06E7  0084               	movwf	fsr0
  5541  06E8  0839               	movf	(??_sprintf+0)+0,w
  5542  06E9  1383               	bcf	status, 7	;select IRP bank0
  5543  06EA  0080               	movwf	indf
  5544                           	
  5545  06EB                     l10963:	
  5546  06EB  3001               	movlw	(01h)
  5547  06EC  00B9               	movwf	(??_sprintf+0)+0
  5548  06ED  0839               	movf	(??_sprintf+0)+0,w
  5549  06EE  07C3               	addwf	(sprintf@sp),f
  5550  06EF  2EF0               	goto	l10965
  5551                           	line	1517
  5552                           	
  5553  06F0                     l6792:	
  5554                           	line	1469
  5555                           	
  5556  06F0                     l10965:	
  5557  06F0  30FF               	movlw	(-1)
  5558  06F1  00B9               	movwf	(??_sprintf+0)+0
  5559  06F2  0839               	movf	(??_sprintf+0)+0,w
  5560  06F3  07BE               	addwf	(sprintf@prec),f
  5561  06F4  083E               	movf	((sprintf@prec)),w
  5562  06F5  3AFF               	xorlw	-1
  5563  06F6  1D03               	skipz
  5564  06F7  2EF9               	goto	u4641
  5565  06F8  2EFA               	goto	u4640
  5566  06F9                     u4641:
  5567  06F9  2EB0               	goto	l10959
  5568  06FA                     u4640:
  5569  06FA  2EFC               	goto	l10967
  5570                           	
  5571  06FB                     l6794:	
  5572  06FB  2EFC               	goto	l10967
  5573                           	line	1525
  5574                           	
  5575  06FC                     l6777:	
  5576                           	line	540
  5577                           	
  5578  06FC                     l10967:	
  5579  06FC  3001               	movlw	01h
  5580  06FD  07B4               	addwf	(sprintf@f),f
  5581  06FE  30FF               	movlw	-01h
  5582  06FF  0734               	addwf	(sprintf@f),w
  5583  0700  0084               	movwf	fsr0
  5584  0701  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5585  0706  00B9               	movwf	(??_sprintf+0)+0
  5586  0707  0839               	movf	(??_sprintf+0)+0,w
  5587  0708  00C4               	movwf	(sprintf@c)
  5588  0709  08C4               	movf	((sprintf@c)),f
  5589  070A  1D03               	skipz
  5590  070B  2F0D               	goto	u4651
  5591  070C  2F0E               	goto	u4650
  5592  070D                     u4651:
  5593  070D  2E1E               	goto	l10917
  5594  070E                     u4650:
  5595  070E  2F10               	goto	l10969
  5596                           	
  5597  070F                     l6795:	
  5598  070F  2F10               	goto	l10969
  5599                           	line	1527
  5600                           	
  5601  0710                     l6782:	
  5602                           	line	1530
  5603                           	
  5604  0710                     l10969:	
  5605  0710  0843               	movf	(sprintf@sp),w
  5606  0711  0084               	movwf	fsr0
  5607  0712  1383               	bcf	status, 7	;select IRP bank0
  5608  0713  0180               	clrf	indf
  5609  0714  2F15               	goto	l6796
  5610                           	line	1532
  5611                           	
  5612  0715                     l10971:	
  5613                           	line	1533
  5614                           ;	Return value of _sprintf is never used
  5615                           	
  5616  0715                     l6796:	
  5617  0715  0008               	return
  5618                           	opt stack 0
  5619                           GLOBAL	__end_of_sprintf
  5620  0716                     	__end_of_sprintf:
  5621 ;; =============== function _sprintf ends ============
  5622                           
  5623                           	signat	_sprintf,4698
  5624                           	global	_ADCconvert
  5625                           psect	text937,local,class=CODE,delta=2
  5626                           global __ptext937
  5627  0297                     __ptext937:
  5628                           
  5629 ;; *************** function _ADCconvert *****************
  5630 ;; Defined at:
  5631 ;;		line 33 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       0       0       0       0
  5646 ;;      Locals:         0       0       0       0       0
  5647 ;;      Temps:          0       2       0       0       0
  5648 ;;      Totals:         0       2       0       0       0
  5649 ;;Total ram usage:        2 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    4
  5652 ;; This function calls:
  5653 ;;		___wmul
  5654 ;;		___lwdiv
  5655 ;; This function is called by:
  5656 ;;		_readAvgDistance
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           psect	text937
  5660                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  5661                           	line	33
  5662                           	global	__size_of_ADCconvert
  5663  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  5664                           	
  5665  0297                     _ADCconvert:	
  5666                           	opt	stack 1
  5667                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  5668                           	line	39
  5669                           	
  5670  0297                     l10873:	
  5671                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  5672  0297  3000               	movlw	high(0D5h)
  5673  0298  1283               	bcf	status, 5	;RP0=0, select bank0
  5674  0299  1303               	bcf	status, 6	;RP1=0, select bank0
  5675  029A  026E               	subwf	(_adcVal+1),w	;volatile
  5676  029B  30D5               	movlw	low(0D5h)
  5677  029C  1903               	skipnz
  5678  029D  026D               	subwf	(_adcVal),w	;volatile
  5679  029E  1C03               	skipc
  5680  029F  2AA1               	goto	u4441
  5681  02A0  2AA2               	goto	u4440
  5682  02A1                     u4441:
  5683  02A1  2AE5               	goto	l10879
  5684  02A2                     u4440:
  5685                           	
  5686  02A2                     l10875:	
  5687  02A2  3000               	movlw	high(0EAh)
  5688  02A3  026E               	subwf	(_adcVal+1),w	;volatile
  5689  02A4  30EA               	movlw	low(0EAh)
  5690  02A5  1903               	skipnz
  5691  02A6  026D               	subwf	(_adcVal),w	;volatile
  5692  02A7  1803               	skipnc
  5693  02A8  2AAA               	goto	u4451
  5694  02A9  2AAB               	goto	u4450
  5695  02AA                     u4451:
  5696  02AA  2AE5               	goto	l10879
  5697  02AB                     u4450:
  5698                           	line	41
  5699                           	
  5700  02AB                     l10877:	
  5701                           ;infrared.c: 40: {
  5702                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  5703  02AB  3015               	movlw	low(015h)
  5704  02AC  00A6               	movwf	(?___lwdiv)
  5705  02AD  3000               	movlw	high(015h)
  5706  02AE  00A7               	movwf	((?___lwdiv))+1
  5707  02AF  096D               	comf	(_adcVal),w	;volatile
  5708  02B0  00AE               	movwf	(??_ADCconvert+0)+0
  5709  02B1  096E               	comf	(_adcVal+1),w	;volatile
  5710  02B2  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5711  02B3  0AAE               	incf	(??_ADCconvert+0)+0,f
  5712  02B4  1903               	skipnz
  5713  02B5  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5714  02B6  082E               	movf	0+(??_ADCconvert+0)+0,w
  5715  02B7  3EEA               	addlw	low(0EAh)
  5716  02B8  00A0               	movwf	(?___wmul)
  5717  02B9  082F               	movf	1+(??_ADCconvert+0)+0,w
  5718  02BA  1803               	skipnc
  5719  02BB  3E01               	addlw	1
  5720  02BC  3E00               	addlw	high(0EAh)
  5721  02BD  00A1               	movwf	1+(?___wmul)
  5722  02BE  3005               	movlw	low(05h)
  5723  02BF  00A2               	movwf	0+(?___wmul)+02h
  5724  02C0  3000               	movlw	high(05h)
  5725  02C1  00A3               	movwf	(0+(?___wmul)+02h)+1
  5726  02C2  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  5727  02C7  1283               	bcf	status, 5	;RP0=0, select bank0
  5728  02C8  1303               	bcf	status, 6	;RP1=0, select bank0
  5729  02C9  0821               	movf	(1+(?___wmul)),w
  5730  02CA  01A9               	clrf	1+(?___lwdiv)+02h
  5731  02CB  07A9               	addwf	1+(?___lwdiv)+02h
  5732  02CC  0820               	movf	(0+(?___wmul)),w
  5733  02CD  01A8               	clrf	0+(?___lwdiv)+02h
  5734  02CE  07A8               	addwf	0+(?___lwdiv)+02h
  5735                           
  5736  02CF  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  5737  02D4  1283               	bcf	status, 5	;RP0=0, select bank0
  5738  02D5  1303               	bcf	status, 6	;RP1=0, select bank0
  5739  02D6  0826               	movf	(0+(?___lwdiv)),w
  5740  02D7  3E0F               	addlw	low(0Fh)
  5741  02D8  1683               	bsf	status, 5	;RP0=1, select bank1
  5742  02D9  1303               	bcf	status, 6	;RP1=0, select bank1
  5743  02DA  00B8               	movwf	(_distance)^080h	;volatile
  5744  02DB  1283               	bcf	status, 5	;RP0=0, select bank0
  5745  02DC  1303               	bcf	status, 6	;RP1=0, select bank0
  5746  02DD  0827               	movf	(1+(?___lwdiv)),w
  5747  02DE  1803               	skipnc
  5748  02DF  3E01               	addlw	1
  5749  02E0  3E00               	addlw	high(0Fh)
  5750  02E1  1683               	bsf	status, 5	;RP0=1, select bank1
  5751  02E2  1303               	bcf	status, 6	;RP1=0, select bank1
  5752  02E3  00B9               	movwf	1+(_distance)^080h	;volatile
  5753                           	line	42
  5754                           ;infrared.c: 42: }
  5755  02E4  2CB9               	goto	l3016
  5756                           	line	43
  5757                           	
  5758  02E5                     l3003:	
  5759                           	
  5760  02E5                     l10879:	
  5761                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  5762  02E5  3000               	movlw	high(0AAh)
  5763  02E6  1283               	bcf	status, 5	;RP0=0, select bank0
  5764  02E7  026E               	subwf	(_adcVal+1),w	;volatile
  5765  02E8  30AA               	movlw	low(0AAh)
  5766  02E9  1903               	skipnz
  5767  02EA  026D               	subwf	(_adcVal),w	;volatile
  5768  02EB  1C03               	skipc
  5769  02EC  2AEE               	goto	u4461
  5770  02ED  2AEF               	goto	u4460
  5771  02EE                     u4461:
  5772  02EE  2B32               	goto	l10885
  5773  02EF                     u4460:
  5774                           	
  5775  02EF                     l10881:	
  5776  02EF  3000               	movlw	high(0D5h)
  5777  02F0  026E               	subwf	(_adcVal+1),w	;volatile
  5778  02F1  30D5               	movlw	low(0D5h)
  5779  02F2  1903               	skipnz
  5780  02F3  026D               	subwf	(_adcVal),w	;volatile
  5781  02F4  1803               	skipnc
  5782  02F5  2AF7               	goto	u4471
  5783  02F6  2AF8               	goto	u4470
  5784  02F7                     u4471:
  5785  02F7  2B32               	goto	l10885
  5786  02F8                     u4470:
  5787                           	line	45
  5788                           	
  5789  02F8                     l10883:	
  5790                           ;infrared.c: 44: {
  5791                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  5792  02F8  302B               	movlw	low(02Bh)
  5793  02F9  00A6               	movwf	(?___lwdiv)
  5794  02FA  3000               	movlw	high(02Bh)
  5795  02FB  00A7               	movwf	((?___lwdiv))+1
  5796  02FC  096D               	comf	(_adcVal),w	;volatile
  5797  02FD  00AE               	movwf	(??_ADCconvert+0)+0
  5798  02FE  096E               	comf	(_adcVal+1),w	;volatile
  5799  02FF  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5800  0300  0AAE               	incf	(??_ADCconvert+0)+0,f
  5801  0301  1903               	skipnz
  5802  0302  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5803  0303  082E               	movf	0+(??_ADCconvert+0)+0,w
  5804  0304  3ED5               	addlw	low(0D5h)
  5805  0305  00A0               	movwf	(?___wmul)
  5806  0306  082F               	movf	1+(??_ADCconvert+0)+0,w
  5807  0307  1803               	skipnc
  5808  0308  3E01               	addlw	1
  5809  0309  3E00               	addlw	high(0D5h)
  5810  030A  00A1               	movwf	1+(?___wmul)
  5811  030B  300A               	movlw	low(0Ah)
  5812  030C  00A2               	movwf	0+(?___wmul)+02h
  5813  030D  3000               	movlw	high(0Ah)
  5814  030E  00A3               	movwf	(0+(?___wmul)+02h)+1
  5815  030F  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  5816  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  5817  0315  1303               	bcf	status, 6	;RP1=0, select bank0
  5818  0316  0821               	movf	(1+(?___wmul)),w
  5819  0317  01A9               	clrf	1+(?___lwdiv)+02h
  5820  0318  07A9               	addwf	1+(?___lwdiv)+02h
  5821  0319  0820               	movf	(0+(?___wmul)),w
  5822  031A  01A8               	clrf	0+(?___lwdiv)+02h
  5823  031B  07A8               	addwf	0+(?___lwdiv)+02h
  5824                           
  5825  031C  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  5826  0321  1283               	bcf	status, 5	;RP0=0, select bank0
  5827  0322  1303               	bcf	status, 6	;RP1=0, select bank0
  5828  0323  0826               	movf	(0+(?___lwdiv)),w
  5829  0324  3E14               	addlw	low(014h)
  5830  0325  1683               	bsf	status, 5	;RP0=1, select bank1
  5831  0326  1303               	bcf	status, 6	;RP1=0, select bank1
  5832  0327  00B8               	movwf	(_distance)^080h	;volatile
  5833  0328  1283               	bcf	status, 5	;RP0=0, select bank0
  5834  0329  1303               	bcf	status, 6	;RP1=0, select bank0
  5835  032A  0827               	movf	(1+(?___lwdiv)),w
  5836  032B  1803               	skipnc
  5837  032C  3E01               	addlw	1
  5838  032D  3E00               	addlw	high(014h)
  5839  032E  1683               	bsf	status, 5	;RP0=1, select bank1
  5840  032F  1303               	bcf	status, 6	;RP1=0, select bank1
  5841  0330  00B9               	movwf	1+(_distance)^080h	;volatile
  5842                           	line	46
  5843                           ;infrared.c: 46: }
  5844  0331  2CB9               	goto	l3016
  5845                           	line	47
  5846                           	
  5847  0332                     l3005:	
  5848                           	
  5849  0332                     l10885:	
  5850                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  5851  0332  3000               	movlw	high(080h)
  5852  0333  1283               	bcf	status, 5	;RP0=0, select bank0
  5853  0334  026E               	subwf	(_adcVal+1),w	;volatile
  5854  0335  3080               	movlw	low(080h)
  5855  0336  1903               	skipnz
  5856  0337  026D               	subwf	(_adcVal),w	;volatile
  5857  0338  1C03               	skipc
  5858  0339  2B3B               	goto	u4481
  5859  033A  2B3C               	goto	u4480
  5860  033B                     u4481:
  5861  033B  2B7F               	goto	l10891
  5862  033C                     u4480:
  5863                           	
  5864  033C                     l10887:	
  5865  033C  3000               	movlw	high(0AAh)
  5866  033D  026E               	subwf	(_adcVal+1),w	;volatile
  5867  033E  30AA               	movlw	low(0AAh)
  5868  033F  1903               	skipnz
  5869  0340  026D               	subwf	(_adcVal),w	;volatile
  5870  0341  1803               	skipnc
  5871  0342  2B44               	goto	u4491
  5872  0343  2B45               	goto	u4490
  5873  0344                     u4491:
  5874  0344  2B7F               	goto	l10891
  5875  0345                     u4490:
  5876                           	line	49
  5877                           	
  5878  0345                     l10889:	
  5879                           ;infrared.c: 48: {
  5880                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  5881  0345  302A               	movlw	low(02Ah)
  5882  0346  00A6               	movwf	(?___lwdiv)
  5883  0347  3000               	movlw	high(02Ah)
  5884  0348  00A7               	movwf	((?___lwdiv))+1
  5885  0349  096D               	comf	(_adcVal),w	;volatile
  5886  034A  00AE               	movwf	(??_ADCconvert+0)+0
  5887  034B  096E               	comf	(_adcVal+1),w	;volatile
  5888  034C  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5889  034D  0AAE               	incf	(??_ADCconvert+0)+0,f
  5890  034E  1903               	skipnz
  5891  034F  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5892  0350  082E               	movf	0+(??_ADCconvert+0)+0,w
  5893  0351  3EAA               	addlw	low(0AAh)
  5894  0352  00A0               	movwf	(?___wmul)
  5895  0353  082F               	movf	1+(??_ADCconvert+0)+0,w
  5896  0354  1803               	skipnc
  5897  0355  3E01               	addlw	1
  5898  0356  3E00               	addlw	high(0AAh)
  5899  0357  00A1               	movwf	1+(?___wmul)
  5900  0358  300A               	movlw	low(0Ah)
  5901  0359  00A2               	movwf	0+(?___wmul)+02h
  5902  035A  3000               	movlw	high(0Ah)
  5903  035B  00A3               	movwf	(0+(?___wmul)+02h)+1
  5904  035C  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  5905  0361  1283               	bcf	status, 5	;RP0=0, select bank0
  5906  0362  1303               	bcf	status, 6	;RP1=0, select bank0
  5907  0363  0821               	movf	(1+(?___wmul)),w
  5908  0364  01A9               	clrf	1+(?___lwdiv)+02h
  5909  0365  07A9               	addwf	1+(?___lwdiv)+02h
  5910  0366  0820               	movf	(0+(?___wmul)),w
  5911  0367  01A8               	clrf	0+(?___lwdiv)+02h
  5912  0368  07A8               	addwf	0+(?___lwdiv)+02h
  5913                           
  5914  0369  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  5915  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  5916  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  5917  0370  0826               	movf	(0+(?___lwdiv)),w
  5918  0371  3E1E               	addlw	low(01Eh)
  5919  0372  1683               	bsf	status, 5	;RP0=1, select bank1
  5920  0373  1303               	bcf	status, 6	;RP1=0, select bank1
  5921  0374  00B8               	movwf	(_distance)^080h	;volatile
  5922  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  5923  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  5924  0377  0827               	movf	(1+(?___lwdiv)),w
  5925  0378  1803               	skipnc
  5926  0379  3E01               	addlw	1
  5927  037A  3E00               	addlw	high(01Eh)
  5928  037B  1683               	bsf	status, 5	;RP0=1, select bank1
  5929  037C  1303               	bcf	status, 6	;RP1=0, select bank1
  5930  037D  00B9               	movwf	1+(_distance)^080h	;volatile
  5931                           	line	50
  5932                           ;infrared.c: 50: }
  5933  037E  2CB9               	goto	l3016
  5934                           	line	51
  5935                           	
  5936  037F                     l3007:	
  5937                           	
  5938  037F                     l10891:	
  5939                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  5940  037F  3000               	movlw	high(06Bh)
  5941  0380  1283               	bcf	status, 5	;RP0=0, select bank0
  5942  0381  026E               	subwf	(_adcVal+1),w	;volatile
  5943  0382  306B               	movlw	low(06Bh)
  5944  0383  1903               	skipnz
  5945  0384  026D               	subwf	(_adcVal),w	;volatile
  5946  0385  1C03               	skipc
  5947  0386  2B88               	goto	u4501
  5948  0387  2B89               	goto	u4500
  5949  0388                     u4501:
  5950  0388  2BCC               	goto	l10897
  5951  0389                     u4500:
  5952                           	
  5953  0389                     l10893:	
  5954  0389  3000               	movlw	high(080h)
  5955  038A  026E               	subwf	(_adcVal+1),w	;volatile
  5956  038B  3080               	movlw	low(080h)
  5957  038C  1903               	skipnz
  5958  038D  026D               	subwf	(_adcVal),w	;volatile
  5959  038E  1803               	skipnc
  5960  038F  2B91               	goto	u4511
  5961  0390  2B92               	goto	u4510
  5962  0391                     u4511:
  5963  0391  2BCC               	goto	l10897
  5964  0392                     u4510:
  5965                           	line	53
  5966                           	
  5967  0392                     l10895:	
  5968                           ;infrared.c: 52: {
  5969                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  5970  0392  3015               	movlw	low(015h)
  5971  0393  00A6               	movwf	(?___lwdiv)
  5972  0394  3000               	movlw	high(015h)
  5973  0395  00A7               	movwf	((?___lwdiv))+1
  5974  0396  096D               	comf	(_adcVal),w	;volatile
  5975  0397  00AE               	movwf	(??_ADCconvert+0)+0
  5976  0398  096E               	comf	(_adcVal+1),w	;volatile
  5977  0399  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5978  039A  0AAE               	incf	(??_ADCconvert+0)+0,f
  5979  039B  1903               	skipnz
  5980  039C  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5981  039D  082E               	movf	0+(??_ADCconvert+0)+0,w
  5982  039E  3E80               	addlw	low(080h)
  5983  039F  00A0               	movwf	(?___wmul)
  5984  03A0  082F               	movf	1+(??_ADCconvert+0)+0,w
  5985  03A1  1803               	skipnc
  5986  03A2  3E01               	addlw	1
  5987  03A3  3E00               	addlw	high(080h)
  5988  03A4  00A1               	movwf	1+(?___wmul)
  5989  03A5  300A               	movlw	low(0Ah)
  5990  03A6  00A2               	movwf	0+(?___wmul)+02h
  5991  03A7  3000               	movlw	high(0Ah)
  5992  03A8  00A3               	movwf	(0+(?___wmul)+02h)+1
  5993  03A9  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  5994  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  5995  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  5996  03B0  0821               	movf	(1+(?___wmul)),w
  5997  03B1  01A9               	clrf	1+(?___lwdiv)+02h
  5998  03B2  07A9               	addwf	1+(?___lwdiv)+02h
  5999  03B3  0820               	movf	(0+(?___wmul)),w
  6000  03B4  01A8               	clrf	0+(?___lwdiv)+02h
  6001  03B5  07A8               	addwf	0+(?___lwdiv)+02h
  6002                           
  6003  03B6  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  6004  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  6005  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  6006  03BD  0826               	movf	(0+(?___lwdiv)),w
  6007  03BE  3E28               	addlw	low(028h)
  6008  03BF  1683               	bsf	status, 5	;RP0=1, select bank1
  6009  03C0  1303               	bcf	status, 6	;RP1=0, select bank1
  6010  03C1  00B8               	movwf	(_distance)^080h	;volatile
  6011  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  6012  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  6013  03C4  0827               	movf	(1+(?___lwdiv)),w
  6014  03C5  1803               	skipnc
  6015  03C6  3E01               	addlw	1
  6016  03C7  3E00               	addlw	high(028h)
  6017  03C8  1683               	bsf	status, 5	;RP0=1, select bank1
  6018  03C9  1303               	bcf	status, 6	;RP1=0, select bank1
  6019  03CA  00B9               	movwf	1+(_distance)^080h	;volatile
  6020                           	line	54
  6021                           ;infrared.c: 54: }
  6022  03CB  2CB9               	goto	l3016
  6023                           	line	55
  6024                           	
  6025  03CC                     l3009:	
  6026                           	
  6027  03CC                     l10897:	
  6028                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  6029  03CC  3000               	movlw	high(04Dh)
  6030  03CD  1283               	bcf	status, 5	;RP0=0, select bank0
  6031  03CE  026E               	subwf	(_adcVal+1),w	;volatile
  6032  03CF  304D               	movlw	low(04Dh)
  6033  03D0  1903               	skipnz
  6034  03D1  026D               	subwf	(_adcVal),w	;volatile
  6035  03D2  1C03               	skipc
  6036  03D3  2BD5               	goto	u4521
  6037  03D4  2BD6               	goto	u4520
  6038  03D5                     u4521:
  6039  03D5  2C19               	goto	l10903
  6040  03D6                     u4520:
  6041                           	
  6042  03D6                     l10899:	
  6043  03D6  3000               	movlw	high(06Bh)
  6044  03D7  026E               	subwf	(_adcVal+1),w	;volatile
  6045  03D8  306B               	movlw	low(06Bh)
  6046  03D9  1903               	skipnz
  6047  03DA  026D               	subwf	(_adcVal),w	;volatile
  6048  03DB  1803               	skipnc
  6049  03DC  2BDE               	goto	u4531
  6050  03DD  2BDF               	goto	u4530
  6051  03DE                     u4531:
  6052  03DE  2C19               	goto	l10903
  6053  03DF                     u4530:
  6054                           	line	57
  6055                           	
  6056  03DF                     l10901:	
  6057                           ;infrared.c: 56: {
  6058                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  6059  03DF  301E               	movlw	low(01Eh)
  6060  03E0  00A6               	movwf	(?___lwdiv)
  6061  03E1  3000               	movlw	high(01Eh)
  6062  03E2  00A7               	movwf	((?___lwdiv))+1
  6063  03E3  096D               	comf	(_adcVal),w	;volatile
  6064  03E4  00AE               	movwf	(??_ADCconvert+0)+0
  6065  03E5  096E               	comf	(_adcVal+1),w	;volatile
  6066  03E6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6067  03E7  0AAE               	incf	(??_ADCconvert+0)+0,f
  6068  03E8  1903               	skipnz
  6069  03E9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6070  03EA  082E               	movf	0+(??_ADCconvert+0)+0,w
  6071  03EB  3E6B               	addlw	low(06Bh)
  6072  03EC  00A0               	movwf	(?___wmul)
  6073  03ED  082F               	movf	1+(??_ADCconvert+0)+0,w
  6074  03EE  1803               	skipnc
  6075  03EF  3E01               	addlw	1
  6076  03F0  3E00               	addlw	high(06Bh)
  6077  03F1  00A1               	movwf	1+(?___wmul)
  6078  03F2  300A               	movlw	low(0Ah)
  6079  03F3  00A2               	movwf	0+(?___wmul)+02h
  6080  03F4  3000               	movlw	high(0Ah)
  6081  03F5  00A3               	movwf	(0+(?___wmul)+02h)+1
  6082  03F6  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  6083  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  6084  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  6085  03FD  0821               	movf	(1+(?___wmul)),w
  6086  03FE  01A9               	clrf	1+(?___lwdiv)+02h
  6087  03FF  07A9               	addwf	1+(?___lwdiv)+02h
  6088  0400  0820               	movf	(0+(?___wmul)),w
  6089  0401  01A8               	clrf	0+(?___lwdiv)+02h
  6090  0402  07A8               	addwf	0+(?___lwdiv)+02h
  6091                           
  6092  0403  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  6093  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  6094  0409  1303               	bcf	status, 6	;RP1=0, select bank0
  6095  040A  0826               	movf	(0+(?___lwdiv)),w
  6096  040B  3E32               	addlw	low(032h)
  6097  040C  1683               	bsf	status, 5	;RP0=1, select bank1
  6098  040D  1303               	bcf	status, 6	;RP1=0, select bank1
  6099  040E  00B8               	movwf	(_distance)^080h	;volatile
  6100  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  6101  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  6102  0411  0827               	movf	(1+(?___lwdiv)),w
  6103  0412  1803               	skipnc
  6104  0413  3E01               	addlw	1
  6105  0414  3E00               	addlw	high(032h)
  6106  0415  1683               	bsf	status, 5	;RP0=1, select bank1
  6107  0416  1303               	bcf	status, 6	;RP1=0, select bank1
  6108  0417  00B9               	movwf	1+(_distance)^080h	;volatile
  6109                           	line	58
  6110                           ;infrared.c: 58: }
  6111  0418  2CB9               	goto	l3016
  6112                           	line	59
  6113                           	
  6114  0419                     l3011:	
  6115                           	
  6116  0419                     l10903:	
  6117                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  6118  0419  3000               	movlw	high(038h)
  6119  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  6120  041B  026E               	subwf	(_adcVal+1),w	;volatile
  6121  041C  3038               	movlw	low(038h)
  6122  041D  1903               	skipnz
  6123  041E  026D               	subwf	(_adcVal),w	;volatile
  6124  041F  1C03               	skipc
  6125  0420  2C22               	goto	u4541
  6126  0421  2C23               	goto	u4540
  6127  0422                     u4541:
  6128  0422  2C66               	goto	l10909
  6129  0423                     u4540:
  6130                           	
  6131  0423                     l10905:	
  6132  0423  3000               	movlw	high(04Dh)
  6133  0424  026E               	subwf	(_adcVal+1),w	;volatile
  6134  0425  304D               	movlw	low(04Dh)
  6135  0426  1903               	skipnz
  6136  0427  026D               	subwf	(_adcVal),w	;volatile
  6137  0428  1803               	skipnc
  6138  0429  2C2B               	goto	u4551
  6139  042A  2C2C               	goto	u4550
  6140  042B                     u4551:
  6141  042B  2C66               	goto	l10909
  6142  042C                     u4550:
  6143                           	line	61
  6144                           	
  6145  042C                     l10907:	
  6146                           ;infrared.c: 60: {
  6147                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  6148  042C  3015               	movlw	low(015h)
  6149  042D  00A6               	movwf	(?___lwdiv)
  6150  042E  3000               	movlw	high(015h)
  6151  042F  00A7               	movwf	((?___lwdiv))+1
  6152  0430  096D               	comf	(_adcVal),w	;volatile
  6153  0431  00AE               	movwf	(??_ADCconvert+0)+0
  6154  0432  096E               	comf	(_adcVal+1),w	;volatile
  6155  0433  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6156  0434  0AAE               	incf	(??_ADCconvert+0)+0,f
  6157  0435  1903               	skipnz
  6158  0436  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6159  0437  082E               	movf	0+(??_ADCconvert+0)+0,w
  6160  0438  3E4D               	addlw	low(04Dh)
  6161  0439  00A0               	movwf	(?___wmul)
  6162  043A  082F               	movf	1+(??_ADCconvert+0)+0,w
  6163  043B  1803               	skipnc
  6164  043C  3E01               	addlw	1
  6165  043D  3E00               	addlw	high(04Dh)
  6166  043E  00A1               	movwf	1+(?___wmul)
  6167  043F  300A               	movlw	low(0Ah)
  6168  0440  00A2               	movwf	0+(?___wmul)+02h
  6169  0441  3000               	movlw	high(0Ah)
  6170  0442  00A3               	movwf	(0+(?___wmul)+02h)+1
  6171  0443  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  6172  0448  1283               	bcf	status, 5	;RP0=0, select bank0
  6173  0449  1303               	bcf	status, 6	;RP1=0, select bank0
  6174  044A  0821               	movf	(1+(?___wmul)),w
  6175  044B  01A9               	clrf	1+(?___lwdiv)+02h
  6176  044C  07A9               	addwf	1+(?___lwdiv)+02h
  6177  044D  0820               	movf	(0+(?___wmul)),w
  6178  044E  01A8               	clrf	0+(?___lwdiv)+02h
  6179  044F  07A8               	addwf	0+(?___lwdiv)+02h
  6180                           
  6181  0450  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  6182  0455  1283               	bcf	status, 5	;RP0=0, select bank0
  6183  0456  1303               	bcf	status, 6	;RP1=0, select bank0
  6184  0457  0826               	movf	(0+(?___lwdiv)),w
  6185  0458  3E3C               	addlw	low(03Ch)
  6186  0459  1683               	bsf	status, 5	;RP0=1, select bank1
  6187  045A  1303               	bcf	status, 6	;RP1=0, select bank1
  6188  045B  00B8               	movwf	(_distance)^080h	;volatile
  6189  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  6190  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  6191  045E  0827               	movf	(1+(?___lwdiv)),w
  6192  045F  1803               	skipnc
  6193  0460  3E01               	addlw	1
  6194  0461  3E00               	addlw	high(03Ch)
  6195  0462  1683               	bsf	status, 5	;RP0=1, select bank1
  6196  0463  1303               	bcf	status, 6	;RP1=0, select bank1
  6197  0464  00B9               	movwf	1+(_distance)^080h	;volatile
  6198                           	line	62
  6199                           ;infrared.c: 62: }
  6200  0465  2CB9               	goto	l3016
  6201                           	line	63
  6202                           	
  6203  0466                     l3013:	
  6204                           	
  6205  0466                     l10909:	
  6206                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  6207  0466  3000               	movlw	high(02Bh)
  6208  0467  1283               	bcf	status, 5	;RP0=0, select bank0
  6209  0468  026E               	subwf	(_adcVal+1),w	;volatile
  6210  0469  302B               	movlw	low(02Bh)
  6211  046A  1903               	skipnz
  6212  046B  026D               	subwf	(_adcVal),w	;volatile
  6213  046C  1C03               	skipc
  6214  046D  2C6F               	goto	u4561
  6215  046E  2C70               	goto	u4560
  6216  046F                     u4561:
  6217  046F  2CB9               	goto	l3016
  6218  0470                     u4560:
  6219                           	
  6220  0470                     l10911:	
  6221  0470  3000               	movlw	high(038h)
  6222  0471  026E               	subwf	(_adcVal+1),w	;volatile
  6223  0472  3038               	movlw	low(038h)
  6224  0473  1903               	skipnz
  6225  0474  026D               	subwf	(_adcVal),w	;volatile
  6226  0475  1803               	skipnc
  6227  0476  2C78               	goto	u4571
  6228  0477  2C79               	goto	u4570
  6229  0478                     u4571:
  6230  0478  2CB9               	goto	l3016
  6231  0479                     u4570:
  6232                           	line	65
  6233                           	
  6234  0479                     l10913:	
  6235                           ;infrared.c: 64: {
  6236                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  6237  0479  300D               	movlw	low(0Dh)
  6238  047A  00A6               	movwf	(?___lwdiv)
  6239  047B  3000               	movlw	high(0Dh)
  6240  047C  00A7               	movwf	((?___lwdiv))+1
  6241  047D  096D               	comf	(_adcVal),w	;volatile
  6242  047E  00AE               	movwf	(??_ADCconvert+0)+0
  6243  047F  096E               	comf	(_adcVal+1),w	;volatile
  6244  0480  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6245  0481  0AAE               	incf	(??_ADCconvert+0)+0,f
  6246  0482  1903               	skipnz
  6247  0483  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6248  0484  082E               	movf	0+(??_ADCconvert+0)+0,w
  6249  0485  3E38               	addlw	low(038h)
  6250  0486  00A0               	movwf	(?___wmul)
  6251  0487  082F               	movf	1+(??_ADCconvert+0)+0,w
  6252  0488  1803               	skipnc
  6253  0489  3E01               	addlw	1
  6254  048A  3E00               	addlw	high(038h)
  6255  048B  00A1               	movwf	1+(?___wmul)
  6256  048C  300A               	movlw	low(0Ah)
  6257  048D  00A2               	movwf	0+(?___wmul)+02h
  6258  048E  3000               	movlw	high(0Ah)
  6259  048F  00A3               	movwf	(0+(?___wmul)+02h)+1
  6260  0490  120A  158A  20DA   	fcall	___wmul
              120A  118A         
  6261  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  6262  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  6263  0497  0821               	movf	(1+(?___wmul)),w
  6264  0498  01A9               	clrf	1+(?___lwdiv)+02h
  6265  0499  07A9               	addwf	1+(?___lwdiv)+02h
  6266  049A  0820               	movf	(0+(?___wmul)),w
  6267  049B  01A8               	clrf	0+(?___lwdiv)+02h
  6268  049C  07A8               	addwf	0+(?___lwdiv)+02h
  6269                           
  6270  049D  120A  158A  233D   	fcall	___lwdiv
              120A  118A         
  6271  04A2  1283               	bcf	status, 5	;RP0=0, select bank0
  6272  04A3  1303               	bcf	status, 6	;RP1=0, select bank0
  6273  04A4  0826               	movf	(0+(?___lwdiv)),w
  6274  04A5  3E46               	addlw	low(046h)
  6275  04A6  1683               	bsf	status, 5	;RP0=1, select bank1
  6276  04A7  1303               	bcf	status, 6	;RP1=0, select bank1
  6277  04A8  00B8               	movwf	(_distance)^080h	;volatile
  6278  04A9  1283               	bcf	status, 5	;RP0=0, select bank0
  6279  04AA  1303               	bcf	status, 6	;RP1=0, select bank0
  6280  04AB  0827               	movf	(1+(?___lwdiv)),w
  6281  04AC  1803               	skipnc
  6282  04AD  3E01               	addlw	1
  6283  04AE  3E00               	addlw	high(046h)
  6284  04AF  1683               	bsf	status, 5	;RP0=1, select bank1
  6285  04B0  1303               	bcf	status, 6	;RP1=0, select bank1
  6286  04B1  00B9               	movwf	1+(_distance)^080h	;volatile
  6287  04B2  2CB9               	goto	l3016
  6288                           	line	66
  6289                           	
  6290  04B3                     l3015:	
  6291  04B3  2CB9               	goto	l3016
  6292                           	line	67
  6293                           	
  6294  04B4                     l3014:	
  6295  04B4  2CB9               	goto	l3016
  6296                           	
  6297  04B5                     l3012:	
  6298  04B5  2CB9               	goto	l3016
  6299                           	
  6300  04B6                     l3010:	
  6301  04B6  2CB9               	goto	l3016
  6302                           	
  6303  04B7                     l3008:	
  6304  04B7  2CB9               	goto	l3016
  6305                           	
  6306  04B8                     l3006:	
  6307  04B8  2CB9               	goto	l3016
  6308                           	
  6309  04B9                     l3004:	
  6310                           	
  6311  04B9                     l3016:	
  6312  04B9  0008               	return
  6313                           	opt stack 0
  6314                           GLOBAL	__end_of_ADCconvert
  6315  04BA                     	__end_of_ADCconvert:
  6316 ;; =============== function _ADCconvert ends ============
  6317                           
  6318                           	signat	_ADCconvert,88
  6319                           	global	_robotTurn
  6320                           psect	text938,local,class=CODE,delta=2
  6321                           global __ptext938
  6322  0E3B                     __ptext938:
  6323                           
  6324 ;; *************** function _robotTurn *****************
  6325 ;; Defined at:
  6326 ;;		line 91 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  distance        2    2[BANK0 ] int 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6340 ;;      Params:         0       2       0       0       0
  6341 ;;      Locals:         0       0       0       0       0
  6342 ;;      Temps:          0       1       0       0       0
  6343 ;;      Totals:         0       3       0       0       0
  6344 ;;Total ram usage:        3 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    4
  6347 ;; This function calls:
  6348 ;;		_ser_putch
  6349 ;; This function is called by:
  6350 ;;		_main
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           psect	text938
  6354                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  6355                           	line	91
  6356                           	global	__size_of_robotTurn
  6357  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  6358                           	
  6359  0E3B                     _robotTurn:	
  6360                           	opt	stack 3
  6361                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6362                           	line	94
  6363                           	
  6364  0E3B                     l10863:	
  6365                           ;robot.c: 94: turnlowByte = (unsigned char) (distance) ;
  6366  0E3B  1283               	bcf	status, 5	;RP0=0, select bank0
  6367  0E3C  1303               	bcf	status, 6	;RP1=0, select bank0
  6368  0E3D  0822               	movf	(robotTurn@distance),w
  6369  0E3E  00A4               	movwf	(??_robotTurn+0)+0
  6370  0E3F  0824               	movf	(??_robotTurn+0)+0,w
  6371  0E40  1683               	bsf	status, 5	;RP0=1, select bank1
  6372  0E41  1303               	bcf	status, 6	;RP1=0, select bank1
  6373  0E42  00D3               	movwf	(_turnlowByte)^080h
  6374                           	line	95
  6375                           	
  6376  0E43                     l10865:	
  6377                           ;robot.c: 95: turnhighByte = (unsigned char) (distance >> 8);
  6378  0E43  1283               	bcf	status, 5	;RP0=0, select bank0
  6379  0E44  1303               	bcf	status, 6	;RP1=0, select bank0
  6380  0E45  0823               	movf	(robotTurn@distance+1),w
  6381  0E46  00A4               	movwf	(??_robotTurn+0)+0
  6382  0E47  0824               	movf	(??_robotTurn+0)+0,w
  6383  0E48  1683               	bsf	status, 5	;RP0=1, select bank1
  6384  0E49  1303               	bcf	status, 6	;RP1=0, select bank1
  6385  0E4A  00D2               	movwf	(_turnhighByte)^080h
  6386                           	line	96
  6387                           	
  6388  0E4B                     l10867:	
  6389                           ;robot.c: 96: if (distance >= 0)
  6390  0E4B  1283               	bcf	status, 5	;RP0=0, select bank0
  6391  0E4C  1303               	bcf	status, 6	;RP1=0, select bank0
  6392  0E4D  1BA3               	btfsc	(robotTurn@distance+1),7
  6393  0E4E  2E50               	goto	u4431
  6394  0E4F  2E51               	goto	u4430
  6395  0E50                     u4431:
  6396  0E50  2E70               	goto	l10871
  6397  0E51                     u4430:
  6398                           	line	98
  6399                           	
  6400  0E51                     l10869:	
  6401                           ;robot.c: 97: {
  6402                           ;robot.c: 98: ser_putch(137);
  6403  0E51  3089               	movlw	(089h)
  6404  0E52  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6405                           	line	100
  6406                           ;robot.c: 100: ser_putch(0);
  6407  0E57  3000               	movlw	(0)
  6408  0E58  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6409                           	line	102
  6410                           ;robot.c: 102: ser_putch(50);
  6411  0E5D  3032               	movlw	(032h)
  6412  0E5E  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6413                           	line	104
  6414                           ;robot.c: 104: ser_putch(0);
  6415  0E63  3000               	movlw	(0)
  6416  0E64  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6417                           	line	106
  6418                           ;robot.c: 106: ser_putch(1);
  6419  0E69  3001               	movlw	(01h)
  6420  0E6A  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6421                           	line	107
  6422                           ;robot.c: 107: }
  6423  0E6F  2E8E               	goto	l6033
  6424                           	line	108
  6425                           	
  6426  0E70                     l6032:	
  6427                           	line	110
  6428                           	
  6429  0E70                     l10871:	
  6430                           ;robot.c: 108: else
  6431                           ;robot.c: 109: {
  6432                           ;robot.c: 110: ser_putch(137);
  6433  0E70  3089               	movlw	(089h)
  6434  0E71  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6435                           	line	112
  6436                           ;robot.c: 112: ser_putch(0);
  6437  0E76  3000               	movlw	(0)
  6438  0E77  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6439                           	line	114
  6440                           ;robot.c: 114: ser_putch(50);
  6441  0E7C  3032               	movlw	(032h)
  6442  0E7D  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6443                           	line	116
  6444                           ;robot.c: 116: ser_putch(255);
  6445  0E82  30FF               	movlw	(0FFh)
  6446  0E83  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6447                           	line	118
  6448                           ;robot.c: 118: ser_putch(255);
  6449  0E88  30FF               	movlw	(0FFh)
  6450  0E89  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6451                           	line	119
  6452                           	
  6453  0E8E                     l6033:	
  6454                           	line	120
  6455                           ;robot.c: 119: }
  6456                           ;robot.c: 120: ser_putch(157);
  6457  0E8E  309D               	movlw	(09Dh)
  6458  0E8F  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6459                           	line	122
  6460                           ;robot.c: 122: ser_putch(turnhighByte);
  6461  0E94  1683               	bsf	status, 5	;RP0=1, select bank1
  6462  0E95  1303               	bcf	status, 6	;RP1=0, select bank1
  6463  0E96  0852               	movf	(_turnhighByte)^080h,w
  6464  0E97  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6465                           	line	124
  6466                           ;robot.c: 124: ser_putch(turnlowByte);
  6467  0E9C  1683               	bsf	status, 5	;RP0=1, select bank1
  6468  0E9D  1303               	bcf	status, 6	;RP1=0, select bank1
  6469  0E9E  0853               	movf	(_turnlowByte)^080h,w
  6470  0E9F  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6471                           	line	126
  6472                           ;robot.c: 126: ser_putch(137);
  6473  0EA4  3089               	movlw	(089h)
  6474  0EA5  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6475                           	line	128
  6476                           ;robot.c: 128: ser_putch(0);
  6477  0EAA  3000               	movlw	(0)
  6478  0EAB  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6479                           	line	130
  6480                           ;robot.c: 130: ser_putch(0);
  6481  0EB0  3000               	movlw	(0)
  6482  0EB1  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6483                           	line	132
  6484                           ;robot.c: 132: ser_putch(0);
  6485  0EB6  3000               	movlw	(0)
  6486  0EB7  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6487                           	line	134
  6488                           ;robot.c: 134: ser_putch(0);
  6489  0EBC  3000               	movlw	(0)
  6490  0EBD  160A  118A  2787   	fcall	_ser_putch
              120A  158A         
  6491                           	line	135
  6492                           	
  6493  0EC2                     l6034:	
  6494  0EC2  0008               	return
  6495                           	opt stack 0
  6496                           GLOBAL	__end_of_robotTurn
  6497  0EC3                     	__end_of_robotTurn:
  6498 ;; =============== function _robotTurn ends ============
  6499                           
  6500                           	signat	_robotTurn,4216
  6501                           	global	_rotate
  6502                           psect	text939,local,class=CODE,delta=2
  6503                           global __ptext939
  6504  0B8D                     __ptext939:
  6505                           
  6506 ;; *************** function _rotate *****************
  6507 ;; Defined at:
  6508 ;;		line 48 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  numsteps        2    3[BANK0 ] unsigned int 
  6511 ;;  direction       1    5[BANK0 ] unsigned char 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  i               2    8[BANK0 ] unsigned int 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0, pclath, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6523 ;;      Params:         0       3       0       0       0
  6524 ;;      Locals:         0       2       0       0       0
  6525 ;;      Temps:          0       2       0       0       0
  6526 ;;      Totals:         0       7       0       0       0
  6527 ;;Total ram usage:        7 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    4
  6530 ;; This function calls:
  6531 ;;		_spi_transfer
  6532 ;; This function is called by:
  6533 ;;		_calibrateIR
  6534 ;;		_scan360
  6535 ;;		_main
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           psect	text939
  6539                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  6540                           	line	48
  6541                           	global	__size_of_rotate
  6542  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  6543                           	
  6544  0B8D                     _rotate:	
  6545                           	opt	stack 3
  6546                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  6547                           	line	50
  6548                           	
  6549  0B8D                     l10835:	
  6550                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  6551  0B8D  1283               	bcf	status, 5	;RP0=0, select bank0
  6552  0B8E  1303               	bcf	status, 6	;RP1=0, select bank0
  6553  0B8F  1407               	bsf	(56/8),(56)&7
  6554  0B90  1487               	bsf	(57/8),(57)&7
  6555                           	line	51
  6556                           	
  6557  0B91                     l10837:	
  6558                           ;steppermotor.c: 51: if (direction == 0)
  6559  0B91  08A5               	movf	(rotate@direction),f
  6560  0B92  1D03               	skipz
  6561  0B93  2B95               	goto	u4411
  6562  0B94  2B96               	goto	u4410
  6563  0B95                     u4411:
  6564  0B95  2B9D               	goto	l10841
  6565  0B96                     u4410:
  6566                           	line	52
  6567                           	
  6568  0B96                     l10839:	
  6569                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  6570  0B96  300F               	movlw	(0Fh)
  6571  0B97  160A  118A  2701   	fcall	_spi_transfer
              120A  158A         
  6572  0B9C  2BA4               	goto	l10843
  6573                           	line	53
  6574                           	
  6575  0B9D                     l3717:	
  6576                           	line	54
  6577                           	
  6578  0B9D                     l10841:	
  6579                           ;steppermotor.c: 53: else
  6580                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  6581  0B9D  300D               	movlw	(0Dh)
  6582  0B9E  160A  118A  2701   	fcall	_spi_transfer
              120A  158A         
  6583  0BA3  2BA4               	goto	l10843
  6584                           	
  6585  0BA4                     l3718:	
  6586                           	line	55
  6587                           	
  6588  0BA4                     l10843:	
  6589                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  6590  0BA4  1283               	bcf	status, 5	;RP0=0, select bank0
  6591  0BA5  1303               	bcf	status, 6	;RP1=0, select bank0
  6592  0BA6  1007               	bcf	(56/8),(56)&7
  6593                           	
  6594  0BA7                     l10845:	
  6595  0BA7  1087               	bcf	(57/8),(57)&7
  6596                           	line	56
  6597                           	
  6598  0BA8                     l10847:	
  6599                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  6600  0BA8  01A8               	clrf	(rotate@i)
  6601  0BA9  01A9               	clrf	(rotate@i+1)
  6602  0BAA  2BC1               	goto	l3719
  6603                           	line	57
  6604                           	
  6605  0BAB                     l3720:	
  6606                           	line	58
  6607                           ;steppermotor.c: 57: {
  6608                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  6609  0BAB  1507               	bsf	(58/8),(58)&7
  6610  0BAC  0000               	nop
  6611  0BAD  1283               	bcf	status, 5	;RP0=0, select bank0
  6612  0BAE  1303               	bcf	status, 6	;RP1=0, select bank0
  6613  0BAF  1107               	bcf	(58/8),(58)&7
  6614                           	line	59
  6615                           	
  6616  0BB0                     l10849:	
  6617                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  6618                           	opt asmopt_off
  6619  0BB0  3062               movlw	98
  6620  0BB1  00A7               movwf	((??_rotate+0)+0+1),f
  6621  0BB2  3065               	movlw	101
  6622  0BB3  00A6               movwf	((??_rotate+0)+0),f
  6623  0BB4                     u4997:
  6624  0BB4  0BA6               	decfsz	((??_rotate+0)+0),f
  6625  0BB5  2BB4               	goto	u4997
  6626  0BB6  0BA7               	decfsz	((??_rotate+0)+0+1),f
  6627  0BB7  2BB4               	goto	u4997
  6628  0BB8  2BB9               	nop2
  6629                           opt asmopt_on
  6630                           
  6631                           	line	56
  6632  0BB9  3001               	movlw	low(01h)
  6633  0BBA  1283               	bcf	status, 5	;RP0=0, select bank0
  6634  0BBB  1303               	bcf	status, 6	;RP1=0, select bank0
  6635  0BBC  07A8               	addwf	(rotate@i),f
  6636  0BBD  1803               	skipnc
  6637  0BBE  0AA9               	incf	(rotate@i+1),f
  6638  0BBF  3000               	movlw	high(01h)
  6639  0BC0  07A9               	addwf	(rotate@i+1),f
  6640                           	
  6641  0BC1                     l3719:	
  6642  0BC1  0824               	movf	(rotate@numsteps+1),w
  6643  0BC2  0229               	subwf	(rotate@i+1),w
  6644  0BC3  1D03               	skipz
  6645  0BC4  2BC7               	goto	u4425
  6646  0BC5  0823               	movf	(rotate@numsteps),w
  6647  0BC6  0228               	subwf	(rotate@i),w
  6648  0BC7                     u4425:
  6649  0BC7  1C03               	skipc
  6650  0BC8  2BCA               	goto	u4421
  6651  0BC9  2BCB               	goto	u4420
  6652  0BCA                     u4421:
  6653  0BCA  2BAB               	goto	l3720
  6654  0BCB                     u4420:
  6655                           	
  6656  0BCB                     l3721:	
  6657                           	line	61
  6658                           ;steppermotor.c: 60: }
  6659                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  6660  0BCB  1407               	bsf	(56/8),(56)&7
  6661  0BCC  1487               	bsf	(57/8),(57)&7
  6662                           	line	62
  6663                           	
  6664  0BCD                     l10851:	
  6665                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  6666  0BCD  3000               	movlw	(0)
  6667  0BCE  160A  118A  2701   	fcall	_spi_transfer
              120A  158A         
  6668                           	line	63
  6669                           	
  6670  0BD3                     l10853:	
  6671                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  6672  0BD3  1283               	bcf	status, 5	;RP0=0, select bank0
  6673  0BD4  1303               	bcf	status, 6	;RP1=0, select bank0
  6674  0BD5  1007               	bcf	(56/8),(56)&7
  6675                           	
  6676  0BD6                     l10855:	
  6677  0BD6  1087               	bcf	(57/8),(57)&7
  6678                           	line	64
  6679                           	
  6680  0BD7                     l10857:	
  6681                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  6682  0BD7  1507               	bsf	(58/8),(58)&7
  6683                           	
  6684  0BD8                     l10859:	
  6685  0BD8  0000               	nop
  6686                           	
  6687  0BD9                     l10861:	
  6688  0BD9  1283               	bcf	status, 5	;RP0=0, select bank0
  6689  0BDA  1303               	bcf	status, 6	;RP1=0, select bank0
  6690  0BDB  1107               	bcf	(58/8),(58)&7
  6691                           	line	65
  6692                           	
  6693  0BDC                     l3722:	
  6694  0BDC  0008               	return
  6695                           	opt stack 0
  6696                           GLOBAL	__end_of_rotate
  6697  0BDD                     	__end_of_rotate:
  6698 ;; =============== function _rotate ends ============
  6699                           
  6700                           	signat	_rotate,8312
  6701                           	global	_robo_init
  6702                           psect	text940,local,class=CODE,delta=2
  6703                           global __ptext940
  6704  176E                     __ptext940:
  6705                           
  6706 ;; *************** function _robo_init *****************
  6707 ;; Defined at:
  6708 ;;		line 10 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;		None               void
  6715 ;; Registers used:
  6716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6722 ;;      Params:         0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0
  6725 ;;      Totals:         0       0       0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    4
  6729 ;; This function calls:
  6730 ;;		_ser_putch
  6731 ;; This function is called by:
  6732 ;;		_init
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           psect	text940
  6736                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  6737                           	line	10
  6738                           	global	__size_of_robo_init
  6739  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  6740                           	
  6741  176E                     _robo_init:	
  6742                           	opt	stack 2
  6743                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6744                           	line	11
  6745                           	
  6746  176E                     l10833:	
  6747                           ;robot.c: 11: ser_putch(128);
  6748  176E  3080               	movlw	(080h)
  6749  176F  160A  118A  2787   	fcall	_ser_putch
              160A  118A         
  6750                           	line	12
  6751                           ;robot.c: 12: ser_putch(132);
  6752  1774  3084               	movlw	(084h)
  6753  1775  160A  118A  2787   	fcall	_ser_putch
              160A  118A         
  6754                           	line	13
  6755                           ;robot.c: 13: ser_putch(150);
  6756  177A  3096               	movlw	(096h)
  6757  177B  160A  118A  2787   	fcall	_ser_putch
              160A  118A         
  6758                           	line	14
  6759                           ;robot.c: 14: ser_putch(0);
  6760  1780  3000               	movlw	(0)
  6761  1781  160A  118A  2787   	fcall	_ser_putch
              160A  118A         
  6762                           	line	15
  6763                           	
  6764  1786                     l6017:	
  6765  1786  0008               	return
  6766                           	opt stack 0
  6767                           GLOBAL	__end_of_robo_init
  6768  1787                     	__end_of_robo_init:
  6769 ;; =============== function _robo_init ends ============
  6770                           
  6771                           	signat	_robo_init,88
  6772                           	global	_lcd_write_data
  6773                           psect	text941,local,class=CODE,delta=2
  6774                           global __ptext941
  6775  16DB                     __ptext941:
  6776                           
  6777 ;; *************** function _lcd_write_data *****************
  6778 ;; Defined at:
  6779 ;;		line 30 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  databyte        1    wreg     unsigned char 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  databyte        1    2[BANK0 ] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;		None               void
  6786 ;; Registers used:
  6787 ;;		wreg
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6793 ;;      Params:         0       0       0       0       0
  6794 ;;      Locals:         0       1       0       0       0
  6795 ;;      Temps:          0       2       0       0       0
  6796 ;;      Totals:         0       3       0       0       0
  6797 ;;Total ram usage:        3 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    3
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_lcd_write_string
  6804 ;;		_lcd_write_2_digit_bcd
  6805 ;;		_lcd_write_3_digit_bcd
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           psect	text941
  6809                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  6810                           	line	30
  6811                           	global	__size_of_lcd_write_data
  6812  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6813                           	
  6814  16DB                     _lcd_write_data:	
  6815                           	opt	stack 1
  6816                           ; Regs used in _lcd_write_data: [wreg]
  6817                           ;lcd_write_data@databyte stored from wreg
  6818  16DB  1283               	bcf	status, 5	;RP0=0, select bank0
  6819  16DC  1303               	bcf	status, 6	;RP1=0, select bank0
  6820  16DD  00A2               	movwf	(lcd_write_data@databyte)
  6821                           	line	31
  6822                           	
  6823  16DE                     l10825:	
  6824                           ;lcd.c: 31: RE2 = 0;
  6825  16DE  1109               	bcf	(74/8),(74)&7
  6826                           	line	32
  6827                           ;lcd.c: 32: RE1 = 0;
  6828  16DF  1089               	bcf	(73/8),(73)&7
  6829                           	line	33
  6830                           ;lcd.c: 33: RE0 = 1;
  6831  16E0  1409               	bsf	(72/8),(72)&7
  6832                           	line	34
  6833                           	
  6834  16E1                     l10827:	
  6835                           ;lcd.c: 34: PORTD = databyte;
  6836  16E1  0822               	movf	(lcd_write_data@databyte),w
  6837  16E2  0088               	movwf	(8)	;volatile
  6838                           	line	35
  6839                           	
  6840  16E3                     l10829:	
  6841                           ;lcd.c: 35: RE2 = 1;
  6842  16E3  1509               	bsf	(74/8),(74)&7
  6843                           	line	36
  6844                           	
  6845  16E4                     l10831:	
  6846                           ;lcd.c: 36: RE2 = 0;
  6847  16E4  1109               	bcf	(74/8),(74)&7
  6848                           	line	37
  6849                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  6850                           	opt asmopt_off
  6851  16E5  3007               movlw	7
  6852  16E6  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  6853  16E7  307D               	movlw	125
  6854  16E8  00A0               movwf	((??_lcd_write_data+0)+0),f
  6855  16E9                     u5007:
  6856  16E9  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  6857  16EA  2EE9               	goto	u5007
  6858  16EB  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  6859  16EC  2EE9               	goto	u5007
  6860                           opt asmopt_on
  6861                           
  6862                           	line	38
  6863                           	
  6864  16ED                     l1402:	
  6865  16ED  0008               	return
  6866                           	opt stack 0
  6867                           GLOBAL	__end_of_lcd_write_data
  6868  16EE                     	__end_of_lcd_write_data:
  6869 ;; =============== function _lcd_write_data ends ============
  6870                           
  6871                           	signat	_lcd_write_data,4216
  6872                           	global	_lcd_write_control
  6873                           psect	text942,local,class=CODE,delta=2
  6874                           global __ptext942
  6875  1715                     __ptext942:
  6876                           
  6877 ;; *************** function _lcd_write_control *****************
  6878 ;; Defined at:
  6879 ;;		line 18 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  databyte        1    wreg     unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  databyte        1    2[BANK0 ] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;		None               void
  6886 ;; Registers used:
  6887 ;;		wreg
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6893 ;;      Params:         0       0       0       0       0
  6894 ;;      Locals:         0       1       0       0       0
  6895 ;;      Temps:          0       2       0       0       0
  6896 ;;      Totals:         0       3       0       0       0
  6897 ;;Total ram usage:        3 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    3
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_lcd_set_cursor
  6904 ;;		_lcd_init
  6905 ;;		_UpdateDisplay
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           psect	text942
  6909                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  6910                           	line	18
  6911                           	global	__size_of_lcd_write_control
  6912  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  6913                           	
  6914  1715                     _lcd_write_control:	
  6915                           	opt	stack 1
  6916                           ; Regs used in _lcd_write_control: [wreg]
  6917                           ;lcd_write_control@databyte stored from wreg
  6918  1715  1283               	bcf	status, 5	;RP0=0, select bank0
  6919  1716  1303               	bcf	status, 6	;RP1=0, select bank0
  6920  1717  00A2               	movwf	(lcd_write_control@databyte)
  6921                           	line	19
  6922                           	
  6923  1718                     l10817:	
  6924                           ;lcd.c: 19: RE2 = 0;
  6925  1718  1109               	bcf	(74/8),(74)&7
  6926                           	line	20
  6927                           ;lcd.c: 20: RE1 = 0;
  6928  1719  1089               	bcf	(73/8),(73)&7
  6929                           	line	21
  6930                           ;lcd.c: 21: RE0 = 0;
  6931  171A  1009               	bcf	(72/8),(72)&7
  6932                           	line	22
  6933                           	
  6934  171B                     l10819:	
  6935                           ;lcd.c: 22: PORTD = databyte;
  6936  171B  0822               	movf	(lcd_write_control@databyte),w
  6937  171C  0088               	movwf	(8)	;volatile
  6938                           	line	23
  6939                           	
  6940  171D                     l10821:	
  6941                           ;lcd.c: 23: RE2 = 1;
  6942  171D  1509               	bsf	(74/8),(74)&7
  6943                           	line	24
  6944                           	
  6945  171E                     l10823:	
  6946                           ;lcd.c: 24: RE2 = 0;
  6947  171E  1109               	bcf	(74/8),(74)&7
  6948                           	line	25
  6949                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  6950                           	opt asmopt_off
  6951  171F  300D               movlw	13
  6952  1720  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  6953  1721  30FB               	movlw	251
  6954  1722  00A0               movwf	((??_lcd_write_control+0)+0),f
  6955  1723                     u5017:
  6956  1723  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  6957  1724  2F23               	goto	u5017
  6958  1725  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  6959  1726  2F23               	goto	u5017
  6960  1727  2F28               	nop2
  6961                           opt asmopt_on
  6962                           
  6963                           	line	26
  6964                           	
  6965  1728                     l1399:	
  6966  1728  0008               	return
  6967                           	opt stack 0
  6968                           GLOBAL	__end_of_lcd_write_control
  6969  1729                     	__end_of_lcd_write_control:
  6970 ;; =============== function _lcd_write_control ends ============
  6971                           
  6972                           	signat	_lcd_write_control,4216
  6973                           	global	_init_adc
  6974                           psect	text943,local,class=CODE,delta=2
  6975                           global __ptext943
  6976  1729                     __ptext943:
  6977                           
  6978 ;; *************** function _init_adc *****************
  6979 ;; Defined at:
  6980 ;;		line 46 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6994 ;;      Params:         0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0
  6996 ;;      Temps:          0       1       0       0       0
  6997 ;;      Totals:         0       1       0       0       0
  6998 ;;Total ram usage:        1 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    3
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_init
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           psect	text943
  7008                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7009                           	line	46
  7010                           	global	__size_of_init_adc
  7011  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  7012                           	
  7013  1729                     _init_adc:	
  7014                           	opt	stack 3
  7015                           ; Regs used in _init_adc: [wreg+status,2]
  7016                           	line	48
  7017                           	
  7018  1729                     l10807:	
  7019                           ;adc.c: 48: PORTA = 0;
  7020  1729  1283               	bcf	status, 5	;RP0=0, select bank0
  7021  172A  1303               	bcf	status, 6	;RP1=0, select bank0
  7022  172B  0185               	clrf	(5)	;volatile
  7023                           	line	49
  7024                           	
  7025  172C                     l10809:	
  7026                           ;adc.c: 49: TRISA = 0b00111111;
  7027  172C  303F               	movlw	(03Fh)
  7028  172D  1683               	bsf	status, 5	;RP0=1, select bank1
  7029  172E  1303               	bcf	status, 6	;RP1=0, select bank1
  7030  172F  0085               	movwf	(133)^080h	;volatile
  7031                           	line	52
  7032                           	
  7033  1730                     l10811:	
  7034                           ;adc.c: 52: ADCON0 = 0b10100001;
  7035  1730  30A1               	movlw	(0A1h)
  7036  1731  1283               	bcf	status, 5	;RP0=0, select bank0
  7037  1732  1303               	bcf	status, 6	;RP1=0, select bank0
  7038  1733  009F               	movwf	(31)	;volatile
  7039                           	line	53
  7040                           	
  7041  1734                     l10813:	
  7042                           ;adc.c: 53: ADCON1 = 0b0000010;
  7043  1734  3002               	movlw	(02h)
  7044  1735  1683               	bsf	status, 5	;RP0=1, select bank1
  7045  1736  1303               	bcf	status, 6	;RP1=0, select bank1
  7046  1737  009F               	movwf	(159)^080h	;volatile
  7047                           	line	55
  7048                           	
  7049  1738                     l10815:	
  7050                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7051                           	opt asmopt_off
  7052  1738  3053               movlw	83
  7053  1739  1283               	bcf	status, 5	;RP0=0, select bank0
  7054  173A  1303               	bcf	status, 6	;RP1=0, select bank0
  7055  173B  00A0               movwf	(??_init_adc+0)+0,f
  7056  173C                     u5027:
  7057  173C  0BA0               decfsz	(??_init_adc+0)+0,f
  7058  173D  2F3C               	goto	u5027
  7059                           opt asmopt_on
  7060                           
  7061                           	line	57
  7062                           	
  7063  173E                     l700:	
  7064  173E  0008               	return
  7065                           	opt stack 0
  7066                           GLOBAL	__end_of_init_adc
  7067  173F                     	__end_of_init_adc:
  7068 ;; =============== function _init_adc ends ============
  7069                           
  7070                           	signat	_init_adc,88
  7071                           	global	_adc_read_channel
  7072                           psect	text944,local,class=CODE,delta=2
  7073                           global __ptext944
  7074  09EB                     __ptext944:
  7075                           
  7076 ;; *************** function _adc_read_channel *****************
  7077 ;; Defined at:
  7078 ;;		line 5 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  channel         1    wreg     unsigned char 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  channel         1    7[BANK0 ] unsigned char 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      unsigned char 
  7085 ;; Registers used:
  7086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7092 ;;      Params:         0       0       0       0       0
  7093 ;;      Locals:         0       1       0       0       0
  7094 ;;      Temps:          0       1       0       0       0
  7095 ;;      Totals:         0       2       0       0       0
  7096 ;;Total ram usage:        2 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    4
  7099 ;; This function calls:
  7100 ;;		_adc_read
  7101 ;; This function is called by:
  7102 ;;		_readDistance
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           psect	text944
  7106                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7107                           	line	5
  7108                           	global	__size_of_adc_read_channel
  7109  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  7110                           	
  7111  09EB                     _adc_read_channel:	
  7112                           	opt	stack 0
  7113                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7114                           ;adc_read_channel@channel stored from wreg
  7115  09EB  1283               	bcf	status, 5	;RP0=0, select bank0
  7116  09EC  1303               	bcf	status, 6	;RP1=0, select bank0
  7117  09ED  00A7               	movwf	(adc_read_channel@channel)
  7118                           	line	6
  7119                           	
  7120  09EE                     l10791:	
  7121                           ;adc.c: 6: switch(channel)
  7122  09EE  2A07               	goto	l10799
  7123                           	line	8
  7124                           ;adc.c: 7: {
  7125                           ;adc.c: 8: case 0:
  7126                           	
  7127  09EF                     l690:	
  7128                           	line	9
  7129                           ;adc.c: 9: CHS0 = 0;
  7130  09EF  119F               	bcf	(251/8),(251)&7
  7131                           	line	10
  7132                           ;adc.c: 10: CHS1 = 0;
  7133  09F0  121F               	bcf	(252/8),(252)&7
  7134                           	line	11
  7135                           ;adc.c: 11: CHS2 = 0;
  7136  09F1  129F               	bcf	(253/8),(253)&7
  7137                           	line	12
  7138                           ;adc.c: 12: break;
  7139  09F2  2A18               	goto	l10801
  7140                           	line	13
  7141                           ;adc.c: 13: case 1:
  7142                           	
  7143  09F3                     l692:	
  7144                           	line	14
  7145                           ;adc.c: 14: CHS0 = 1;
  7146  09F3  159F               	bsf	(251/8),(251)&7
  7147                           	line	15
  7148                           ;adc.c: 15: CHS1 = 0;
  7149  09F4  121F               	bcf	(252/8),(252)&7
  7150                           	line	16
  7151                           ;adc.c: 16: CHS2 = 0;
  7152  09F5  129F               	bcf	(253/8),(253)&7
  7153                           	line	17
  7154                           ;adc.c: 17: break;
  7155  09F6  2A18               	goto	l10801
  7156                           	line	18
  7157                           ;adc.c: 18: case 2:
  7158                           	
  7159  09F7                     l693:	
  7160                           	line	19
  7161                           ;adc.c: 19: CHS0 = 0;
  7162  09F7  119F               	bcf	(251/8),(251)&7
  7163                           	line	20
  7164                           ;adc.c: 20: CHS1 = 1;
  7165  09F8  161F               	bsf	(252/8),(252)&7
  7166                           	line	21
  7167                           ;adc.c: 21: CHS2 = 0;
  7168  09F9  129F               	bcf	(253/8),(253)&7
  7169                           	line	22
  7170                           ;adc.c: 22: break;
  7171  09FA  2A18               	goto	l10801
  7172                           	line	23
  7173                           ;adc.c: 23: case 3:
  7174                           	
  7175  09FB                     l694:	
  7176                           	line	24
  7177                           ;adc.c: 24: CHS0 = 1;
  7178  09FB  159F               	bsf	(251/8),(251)&7
  7179                           	line	25
  7180                           ;adc.c: 25: CHS1 = 1;
  7181  09FC  161F               	bsf	(252/8),(252)&7
  7182                           	line	26
  7183                           ;adc.c: 26: CHS2 = 0;
  7184  09FD  129F               	bcf	(253/8),(253)&7
  7185                           	line	27
  7186                           ;adc.c: 27: break;
  7187  09FE  2A18               	goto	l10801
  7188                           	line	28
  7189                           ;adc.c: 28: case 4:
  7190                           	
  7191  09FF                     l695:	
  7192                           	line	29
  7193                           ;adc.c: 29: CHS0 = 0;
  7194  09FF  119F               	bcf	(251/8),(251)&7
  7195                           	line	30
  7196                           ;adc.c: 30: CHS1 = 0;
  7197  0A00  121F               	bcf	(252/8),(252)&7
  7198                           	line	31
  7199                           ;adc.c: 31: CHS2 = 1;
  7200  0A01  169F               	bsf	(253/8),(253)&7
  7201                           	line	32
  7202                           ;adc.c: 32: break;
  7203  0A02  2A18               	goto	l10801
  7204                           	line	35
  7205                           ;adc.c: 35: default:
  7206                           	
  7207  0A03                     l696:	
  7208                           	line	36
  7209                           	
  7210  0A03                     l10793:	
  7211                           ;adc.c: 36: return 0;
  7212  0A03  3000               	movlw	(0)
  7213  0A04  2A25               	goto	l697
  7214                           	
  7215  0A05                     l10795:	
  7216  0A05  2A25               	goto	l697
  7217                           	line	37
  7218                           	
  7219  0A06                     l10797:	
  7220                           ;adc.c: 37: }
  7221  0A06  2A18               	goto	l10801
  7222                           	line	6
  7223                           	
  7224  0A07                     l689:	
  7225                           	
  7226  0A07                     l10799:	
  7227  0A07  0827               	movf	(adc_read_channel@channel),w
  7228                           	; Switch size 1, requested type "space"
  7229                           ; Number of cases is 5, Range of values is 0 to 4
  7230                           ; switch strategies available:
  7231                           ; Name         Instructions Cycles
  7232                           ; simple_byte           16     9 (average)
  7233                           ; direct_byte           23     8 (fixed)
  7234                           ; jumptable            260     6 (fixed)
  7235                           ; rangetable             9     6 (fixed)
  7236                           ; spacedrange           16     9 (fixed)
  7237                           ; locatedrange           5     3 (fixed)
  7238                           ;	Chosen strategy is simple_byte
  7239                           
  7240                           	opt asmopt_off
  7241  0A08  3A00               	xorlw	0^0	; case 0
  7242  0A09  1903               	skipnz
  7243  0A0A  29EF               	goto	l690
  7244  0A0B  3A01               	xorlw	1^0	; case 1
  7245  0A0C  1903               	skipnz
  7246  0A0D  29F3               	goto	l692
  7247  0A0E  3A03               	xorlw	2^1	; case 2
  7248  0A0F  1903               	skipnz
  7249  0A10  29F7               	goto	l693
  7250  0A11  3A01               	xorlw	3^2	; case 3
  7251  0A12  1903               	skipnz
  7252  0A13  29FB               	goto	l694
  7253  0A14  3A07               	xorlw	4^3	; case 4
  7254  0A15  1903               	skipnz
  7255  0A16  29FF               	goto	l695
  7256  0A17  2A03               	goto	l10793
  7257                           	opt asmopt_on
  7258                           
  7259                           	line	37
  7260                           	
  7261  0A18                     l691:	
  7262                           	line	39
  7263                           	
  7264  0A18                     l10801:	
  7265                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7266                           	opt asmopt_off
  7267  0A18  3053               movlw	83
  7268  0A19  00A6               movwf	(??_adc_read_channel+0)+0,f
  7269  0A1A                     u5037:
  7270  0A1A  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  7271  0A1B  2A1A               	goto	u5037
  7272                           opt asmopt_on
  7273                           
  7274                           	line	41
  7275                           	
  7276  0A1C                     l10803:	
  7277                           ;adc.c: 41: return adc_read();
  7278  0A1C  160A  118A  27AD   	fcall	_adc_read
              120A  158A         
  7279  0A21  1283               	bcf	status, 5	;RP0=0, select bank0
  7280  0A22  1303               	bcf	status, 6	;RP1=0, select bank0
  7281  0A23  0820               	movf	(0+(?_adc_read)),w
  7282  0A24  2A25               	goto	l697
  7283                           	
  7284  0A25                     l10805:	
  7285                           	line	43
  7286                           	
  7287  0A25                     l697:	
  7288  0A25  0008               	return
  7289                           	opt stack 0
  7290                           GLOBAL	__end_of_adc_read_channel
  7291  0A26                     	__end_of_adc_read_channel:
  7292 ;; =============== function _adc_read_channel ends ============
  7293                           
  7294                           	signat	_adc_read_channel,4217
  7295                           	global	___awmod
  7296                           psect	text945,local,class=CODE,delta=2
  7297                           global __ptext945
  7298  0CE3                     __ptext945:
  7299                           
  7300 ;; *************** function ___awmod *****************
  7301 ;; Defined at:
  7302 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  divisor         2    0[BANK0 ] int 
  7305 ;;  dividend        2    2[BANK0 ] int 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;  sign            1    6[BANK0 ] unsigned char 
  7308 ;;  counter         1    5[BANK0 ] unsigned char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  2    0[BANK0 ] int 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7318 ;;      Params:         0       4       0       0       0
  7319 ;;      Locals:         0       2       0       0       0
  7320 ;;      Temps:          0       1       0       0       0
  7321 ;;      Totals:         0       7       0       0       0
  7322 ;;Total ram usage:        7 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    3
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_UpdateDisplay
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           psect	text945
  7332                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7333                           	line	5
  7334                           	global	__size_of___awmod
  7335  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7336                           	
  7337  0CE3                     ___awmod:	
  7338                           	opt	stack 2
  7339                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7340                           	line	8
  7341                           	
  7342  0CE3                     l10735:	
  7343  0CE3  1283               	bcf	status, 5	;RP0=0, select bank0
  7344  0CE4  1303               	bcf	status, 6	;RP1=0, select bank0
  7345  0CE5  01A6               	clrf	(___awmod@sign)
  7346                           	line	9
  7347  0CE6  1FA3               	btfss	(___awmod@dividend+1),7
  7348  0CE7  2CE9               	goto	u4261
  7349  0CE8  2CEA               	goto	u4260
  7350  0CE9                     u4261:
  7351  0CE9  2CF3               	goto	l10739
  7352  0CEA                     u4260:
  7353                           	line	10
  7354                           	
  7355  0CEA                     l10737:	
  7356  0CEA  09A2               	comf	(___awmod@dividend),f
  7357  0CEB  09A3               	comf	(___awmod@dividend+1),f
  7358  0CEC  0AA2               	incf	(___awmod@dividend),f
  7359  0CED  1903               	skipnz
  7360  0CEE  0AA3               	incf	(___awmod@dividend+1),f
  7361                           	line	11
  7362  0CEF  01A6               	clrf	(___awmod@sign)
  7363  0CF0  1403               	bsf	status,0
  7364  0CF1  0DA6               	rlf	(___awmod@sign),f
  7365  0CF2  2CF3               	goto	l10739
  7366                           	line	12
  7367                           	
  7368  0CF3                     l7687:	
  7369                           	line	13
  7370                           	
  7371  0CF3                     l10739:	
  7372  0CF3  1FA1               	btfss	(___awmod@divisor+1),7
  7373  0CF4  2CF6               	goto	u4271
  7374  0CF5  2CF7               	goto	u4270
  7375  0CF6                     u4271:
  7376  0CF6  2CFD               	goto	l10743
  7377  0CF7                     u4270:
  7378                           	line	14
  7379                           	
  7380  0CF7                     l10741:	
  7381  0CF7  09A0               	comf	(___awmod@divisor),f
  7382  0CF8  09A1               	comf	(___awmod@divisor+1),f
  7383  0CF9  0AA0               	incf	(___awmod@divisor),f
  7384  0CFA  1903               	skipnz
  7385  0CFB  0AA1               	incf	(___awmod@divisor+1),f
  7386  0CFC  2CFD               	goto	l10743
  7387                           	
  7388  0CFD                     l7688:	
  7389                           	line	15
  7390                           	
  7391  0CFD                     l10743:	
  7392  0CFD  0821               	movf	(___awmod@divisor+1),w
  7393  0CFE  0420               	iorwf	(___awmod@divisor),w
  7394  0CFF  1903               	skipnz
  7395  0D00  2D02               	goto	u4281
  7396  0D01  2D03               	goto	u4280
  7397  0D02                     u4281:
  7398  0D02  2D39               	goto	l10761
  7399  0D03                     u4280:
  7400                           	line	16
  7401                           	
  7402  0D03                     l10745:	
  7403  0D03  01A5               	clrf	(___awmod@counter)
  7404  0D04  1403               	bsf	status,0
  7405  0D05  0DA5               	rlf	(___awmod@counter),f
  7406                           	line	17
  7407  0D06  2D13               	goto	l10751
  7408                           	
  7409  0D07                     l7691:	
  7410                           	line	18
  7411                           	
  7412  0D07                     l10747:	
  7413  0D07  3001               	movlw	01h
  7414                           	
  7415  0D08                     u4295:
  7416  0D08  1003               	clrc
  7417  0D09  0DA0               	rlf	(___awmod@divisor),f
  7418  0D0A  0DA1               	rlf	(___awmod@divisor+1),f
  7419  0D0B  3EFF               	addlw	-1
  7420  0D0C  1D03               	skipz
  7421  0D0D  2D08               	goto	u4295
  7422                           	line	19
  7423                           	
  7424  0D0E                     l10749:	
  7425  0D0E  3001               	movlw	(01h)
  7426  0D0F  00A4               	movwf	(??___awmod+0)+0
  7427  0D10  0824               	movf	(??___awmod+0)+0,w
  7428  0D11  07A5               	addwf	(___awmod@counter),f
  7429  0D12  2D13               	goto	l10751
  7430                           	line	20
  7431                           	
  7432  0D13                     l7690:	
  7433                           	line	17
  7434                           	
  7435  0D13                     l10751:	
  7436  0D13  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  7437  0D14  2D16               	goto	u4301
  7438  0D15  2D17               	goto	u4300
  7439  0D16                     u4301:
  7440  0D16  2D07               	goto	l10747
  7441  0D17                     u4300:
  7442  0D17  2D19               	goto	l10753
  7443                           	
  7444  0D18                     l7692:	
  7445  0D18  2D19               	goto	l10753
  7446                           	line	21
  7447                           	
  7448  0D19                     l7693:	
  7449                           	line	22
  7450                           	
  7451  0D19                     l10753:	
  7452  0D19  0821               	movf	(___awmod@divisor+1),w
  7453  0D1A  0223               	subwf	(___awmod@dividend+1),w
  7454  0D1B  1D03               	skipz
  7455  0D1C  2D1F               	goto	u4315
  7456  0D1D  0820               	movf	(___awmod@divisor),w
  7457  0D1E  0222               	subwf	(___awmod@dividend),w
  7458  0D1F                     u4315:
  7459  0D1F  1C03               	skipc
  7460  0D20  2D22               	goto	u4311
  7461  0D21  2D23               	goto	u4310
  7462  0D22                     u4311:
  7463  0D22  2D2A               	goto	l10757
  7464  0D23                     u4310:
  7465                           	line	23
  7466                           	
  7467  0D23                     l10755:	
  7468  0D23  0820               	movf	(___awmod@divisor),w
  7469  0D24  02A2               	subwf	(___awmod@dividend),f
  7470  0D25  0821               	movf	(___awmod@divisor+1),w
  7471  0D26  1C03               	skipc
  7472  0D27  03A3               	decf	(___awmod@dividend+1),f
  7473  0D28  02A3               	subwf	(___awmod@dividend+1),f
  7474  0D29  2D2A               	goto	l10757
  7475                           	
  7476  0D2A                     l7694:	
  7477                           	line	24
  7478                           	
  7479  0D2A                     l10757:	
  7480  0D2A  3001               	movlw	01h
  7481                           	
  7482  0D2B                     u4325:
  7483  0D2B  1003               	clrc
  7484  0D2C  0CA1               	rrf	(___awmod@divisor+1),f
  7485  0D2D  0CA0               	rrf	(___awmod@divisor),f
  7486  0D2E  3EFF               	addlw	-1
  7487  0D2F  1D03               	skipz
  7488  0D30  2D2B               	goto	u4325
  7489                           	line	25
  7490                           	
  7491  0D31                     l10759:	
  7492  0D31  3001               	movlw	low(01h)
  7493  0D32  02A5               	subwf	(___awmod@counter),f
  7494  0D33  1D03               	btfss	status,2
  7495  0D34  2D36               	goto	u4331
  7496  0D35  2D37               	goto	u4330
  7497  0D36                     u4331:
  7498  0D36  2D19               	goto	l10753
  7499  0D37                     u4330:
  7500  0D37  2D39               	goto	l10761
  7501                           	
  7502  0D38                     l7695:	
  7503  0D38  2D39               	goto	l10761
  7504                           	line	26
  7505                           	
  7506  0D39                     l7689:	
  7507                           	line	27
  7508                           	
  7509  0D39                     l10761:	
  7510  0D39  0826               	movf	(___awmod@sign),w
  7511  0D3A  1D03               	skipz
  7512  0D3B  2D3D               	goto	u4340
  7513  0D3C  2D43               	goto	l10765
  7514  0D3D                     u4340:
  7515                           	line	28
  7516                           	
  7517  0D3D                     l10763:	
  7518  0D3D  09A2               	comf	(___awmod@dividend),f
  7519  0D3E  09A3               	comf	(___awmod@dividend+1),f
  7520  0D3F  0AA2               	incf	(___awmod@dividend),f
  7521  0D40  1903               	skipnz
  7522  0D41  0AA3               	incf	(___awmod@dividend+1),f
  7523  0D42  2D43               	goto	l10765
  7524                           	
  7525  0D43                     l7696:	
  7526                           	line	29
  7527                           	
  7528  0D43                     l10765:	
  7529  0D43  0823               	movf	(___awmod@dividend+1),w
  7530  0D44  01A1               	clrf	(?___awmod+1)
  7531  0D45  07A1               	addwf	(?___awmod+1)
  7532  0D46  0822               	movf	(___awmod@dividend),w
  7533  0D47  01A0               	clrf	(?___awmod)
  7534  0D48  07A0               	addwf	(?___awmod)
  7535                           
  7536  0D49  2D4A               	goto	l7697
  7537                           	
  7538  0D4A                     l10767:	
  7539                           	line	30
  7540                           	
  7541  0D4A                     l7697:	
  7542  0D4A  0008               	return
  7543                           	opt stack 0
  7544                           GLOBAL	__end_of___awmod
  7545  0D4B                     	__end_of___awmod:
  7546 ;; =============== function ___awmod ends ============
  7547                           
  7548                           	signat	___awmod,8314
  7549                           	global	___awdiv
  7550                           psect	text946,local,class=CODE,delta=2
  7551                           global __ptext946
  7552  0D4B                     __ptext946:
  7553                           
  7554 ;; *************** function ___awdiv *****************
  7555 ;; Defined at:
  7556 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  divisor         2    6[BANK0 ] int 
  7559 ;;  dividend        2    8[BANK0 ] int 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  quotient        2   13[BANK0 ] int 
  7562 ;;  sign            1   12[BANK0 ] unsigned char 
  7563 ;;  counter         1   11[BANK0 ] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  2    6[BANK0 ] int 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7573 ;;      Params:         0       4       0       0       0
  7574 ;;      Locals:         0       4       0       0       0
  7575 ;;      Temps:          0       1       0       0       0
  7576 ;;      Totals:         0       9       0       0       0
  7577 ;;Total ram usage:        9 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    3
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_main
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           psect	text946
  7587                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  7588                           	line	5
  7589                           	global	__size_of___awdiv
  7590  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  7591                           	
  7592  0D4B                     ___awdiv:	
  7593                           	opt	stack 4
  7594                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7595                           	line	9
  7596                           	
  7597  0D4B                     l10695:	
  7598  0D4B  1283               	bcf	status, 5	;RP0=0, select bank0
  7599  0D4C  1303               	bcf	status, 6	;RP1=0, select bank0
  7600  0D4D  01AC               	clrf	(___awdiv@sign)
  7601                           	line	10
  7602  0D4E  1FA7               	btfss	(___awdiv@divisor+1),7
  7603  0D4F  2D51               	goto	u4161
  7604  0D50  2D52               	goto	u4160
  7605  0D51                     u4161:
  7606  0D51  2D5B               	goto	l10699
  7607  0D52                     u4160:
  7608                           	line	11
  7609                           	
  7610  0D52                     l10697:	
  7611  0D52  09A6               	comf	(___awdiv@divisor),f
  7612  0D53  09A7               	comf	(___awdiv@divisor+1),f
  7613  0D54  0AA6               	incf	(___awdiv@divisor),f
  7614  0D55  1903               	skipnz
  7615  0D56  0AA7               	incf	(___awdiv@divisor+1),f
  7616                           	line	12
  7617  0D57  01AC               	clrf	(___awdiv@sign)
  7618  0D58  1403               	bsf	status,0
  7619  0D59  0DAC               	rlf	(___awdiv@sign),f
  7620  0D5A  2D5B               	goto	l10699
  7621                           	line	13
  7622                           	
  7623  0D5B                     l7619:	
  7624                           	line	14
  7625                           	
  7626  0D5B                     l10699:	
  7627  0D5B  1FA9               	btfss	(___awdiv@dividend+1),7
  7628  0D5C  2D5E               	goto	u4171
  7629  0D5D  2D5F               	goto	u4170
  7630  0D5E                     u4171:
  7631  0D5E  2D69               	goto	l10705
  7632  0D5F                     u4170:
  7633                           	line	15
  7634                           	
  7635  0D5F                     l10701:	
  7636  0D5F  09A8               	comf	(___awdiv@dividend),f
  7637  0D60  09A9               	comf	(___awdiv@dividend+1),f
  7638  0D61  0AA8               	incf	(___awdiv@dividend),f
  7639  0D62  1903               	skipnz
  7640  0D63  0AA9               	incf	(___awdiv@dividend+1),f
  7641                           	line	16
  7642                           	
  7643  0D64                     l10703:	
  7644  0D64  3001               	movlw	(01h)
  7645  0D65  00AA               	movwf	(??___awdiv+0)+0
  7646  0D66  082A               	movf	(??___awdiv+0)+0,w
  7647  0D67  06AC               	xorwf	(___awdiv@sign),f
  7648  0D68  2D69               	goto	l10705
  7649                           	line	17
  7650                           	
  7651  0D69                     l7620:	
  7652                           	line	18
  7653                           	
  7654  0D69                     l10705:	
  7655  0D69  01AD               	clrf	(___awdiv@quotient)
  7656  0D6A  01AE               	clrf	(___awdiv@quotient+1)
  7657                           	line	19
  7658                           	
  7659  0D6B                     l10707:	
  7660  0D6B  0827               	movf	(___awdiv@divisor+1),w
  7661  0D6C  0426               	iorwf	(___awdiv@divisor),w
  7662  0D6D  1903               	skipnz
  7663  0D6E  2D70               	goto	u4181
  7664  0D6F  2D71               	goto	u4180
  7665  0D70                     u4181:
  7666  0D70  2DAF               	goto	l10727
  7667  0D71                     u4180:
  7668                           	line	20
  7669                           	
  7670  0D71                     l10709:	
  7671  0D71  01AB               	clrf	(___awdiv@counter)
  7672  0D72  1403               	bsf	status,0
  7673  0D73  0DAB               	rlf	(___awdiv@counter),f
  7674                           	line	21
  7675  0D74  2D81               	goto	l10715
  7676                           	
  7677  0D75                     l7623:	
  7678                           	line	22
  7679                           	
  7680  0D75                     l10711:	
  7681  0D75  3001               	movlw	01h
  7682                           	
  7683  0D76                     u4195:
  7684  0D76  1003               	clrc
  7685  0D77  0DA6               	rlf	(___awdiv@divisor),f
  7686  0D78  0DA7               	rlf	(___awdiv@divisor+1),f
  7687  0D79  3EFF               	addlw	-1
  7688  0D7A  1D03               	skipz
  7689  0D7B  2D76               	goto	u4195
  7690                           	line	23
  7691                           	
  7692  0D7C                     l10713:	
  7693  0D7C  3001               	movlw	(01h)
  7694  0D7D  00AA               	movwf	(??___awdiv+0)+0
  7695  0D7E  082A               	movf	(??___awdiv+0)+0,w
  7696  0D7F  07AB               	addwf	(___awdiv@counter),f
  7697  0D80  2D81               	goto	l10715
  7698                           	line	24
  7699                           	
  7700  0D81                     l7622:	
  7701                           	line	21
  7702                           	
  7703  0D81                     l10715:	
  7704  0D81  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
  7705  0D82  2D84               	goto	u4201
  7706  0D83  2D85               	goto	u4200
  7707  0D84                     u4201:
  7708  0D84  2D75               	goto	l10711
  7709  0D85                     u4200:
  7710  0D85  2D87               	goto	l10717
  7711                           	
  7712  0D86                     l7624:	
  7713  0D86  2D87               	goto	l10717
  7714                           	line	25
  7715                           	
  7716  0D87                     l7625:	
  7717                           	line	26
  7718                           	
  7719  0D87                     l10717:	
  7720  0D87  3001               	movlw	01h
  7721                           	
  7722  0D88                     u4215:
  7723  0D88  1003               	clrc
  7724  0D89  0DAD               	rlf	(___awdiv@quotient),f
  7725  0D8A  0DAE               	rlf	(___awdiv@quotient+1),f
  7726  0D8B  3EFF               	addlw	-1
  7727  0D8C  1D03               	skipz
  7728  0D8D  2D88               	goto	u4215
  7729                           	line	27
  7730  0D8E  0827               	movf	(___awdiv@divisor+1),w
  7731  0D8F  0229               	subwf	(___awdiv@dividend+1),w
  7732  0D90  1D03               	skipz
  7733  0D91  2D94               	goto	u4225
  7734  0D92  0826               	movf	(___awdiv@divisor),w
  7735  0D93  0228               	subwf	(___awdiv@dividend),w
  7736  0D94                     u4225:
  7737  0D94  1C03               	skipc
  7738  0D95  2D97               	goto	u4221
  7739  0D96  2D98               	goto	u4220
  7740  0D97                     u4221:
  7741  0D97  2DA0               	goto	l10723
  7742  0D98                     u4220:
  7743                           	line	28
  7744                           	
  7745  0D98                     l10719:	
  7746  0D98  0826               	movf	(___awdiv@divisor),w
  7747  0D99  02A8               	subwf	(___awdiv@dividend),f
  7748  0D9A  0827               	movf	(___awdiv@divisor+1),w
  7749  0D9B  1C03               	skipc
  7750  0D9C  03A9               	decf	(___awdiv@dividend+1),f
  7751  0D9D  02A9               	subwf	(___awdiv@dividend+1),f
  7752                           	line	29
  7753                           	
  7754  0D9E                     l10721:	
  7755  0D9E  142D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  7756  0D9F  2DA0               	goto	l10723
  7757                           	line	30
  7758                           	
  7759  0DA0                     l7626:	
  7760                           	line	31
  7761                           	
  7762  0DA0                     l10723:	
  7763  0DA0  3001               	movlw	01h
  7764                           	
  7765  0DA1                     u4235:
  7766  0DA1  1003               	clrc
  7767  0DA2  0CA7               	rrf	(___awdiv@divisor+1),f
  7768  0DA3  0CA6               	rrf	(___awdiv@divisor),f
  7769  0DA4  3EFF               	addlw	-1
  7770  0DA5  1D03               	skipz
  7771  0DA6  2DA1               	goto	u4235
  7772                           	line	32
  7773                           	
  7774  0DA7                     l10725:	
  7775  0DA7  3001               	movlw	low(01h)
  7776  0DA8  02AB               	subwf	(___awdiv@counter),f
  7777  0DA9  1D03               	btfss	status,2
  7778  0DAA  2DAC               	goto	u4241
  7779  0DAB  2DAD               	goto	u4240
  7780  0DAC                     u4241:
  7781  0DAC  2D87               	goto	l10717
  7782  0DAD                     u4240:
  7783  0DAD  2DAF               	goto	l10727
  7784                           	
  7785  0DAE                     l7627:	
  7786  0DAE  2DAF               	goto	l10727
  7787                           	line	33
  7788                           	
  7789  0DAF                     l7621:	
  7790                           	line	34
  7791                           	
  7792  0DAF                     l10727:	
  7793  0DAF  082C               	movf	(___awdiv@sign),w
  7794  0DB0  1D03               	skipz
  7795  0DB1  2DB3               	goto	u4250
  7796  0DB2  2DB9               	goto	l10731
  7797  0DB3                     u4250:
  7798                           	line	35
  7799                           	
  7800  0DB3                     l10729:	
  7801  0DB3  09AD               	comf	(___awdiv@quotient),f
  7802  0DB4  09AE               	comf	(___awdiv@quotient+1),f
  7803  0DB5  0AAD               	incf	(___awdiv@quotient),f
  7804  0DB6  1903               	skipnz
  7805  0DB7  0AAE               	incf	(___awdiv@quotient+1),f
  7806  0DB8  2DB9               	goto	l10731
  7807                           	
  7808  0DB9                     l7628:	
  7809                           	line	36
  7810                           	
  7811  0DB9                     l10731:	
  7812  0DB9  082E               	movf	(___awdiv@quotient+1),w
  7813  0DBA  01A7               	clrf	(?___awdiv+1)
  7814  0DBB  07A7               	addwf	(?___awdiv+1)
  7815  0DBC  082D               	movf	(___awdiv@quotient),w
  7816  0DBD  01A6               	clrf	(?___awdiv)
  7817  0DBE  07A6               	addwf	(?___awdiv)
  7818                           
  7819  0DBF  2DC0               	goto	l7629
  7820                           	
  7821  0DC0                     l10733:	
  7822                           	line	37
  7823                           	
  7824  0DC0                     l7629:	
  7825  0DC0  0008               	return
  7826                           	opt stack 0
  7827                           GLOBAL	__end_of___awdiv
  7828  0DC1                     	__end_of___awdiv:
  7829 ;; =============== function ___awdiv ends ============
  7830                           
  7831                           	signat	___awdiv,8314
  7832                           	global	___lwmod
  7833                           psect	text947,local,class=CODE,delta=2
  7834                           global __ptext947
  7835  0A6A                     __ptext947:
  7836                           
  7837 ;; *************** function ___lwmod *****************
  7838 ;; Defined at:
  7839 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  divisor         2   14[BANK0 ] unsigned int 
  7842 ;;  dividend        2   16[BANK0 ] unsigned int 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  counter         1   19[BANK0 ] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  2   14[BANK0 ] unsigned int 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2, status,0
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7854 ;;      Params:         0       4       0       0       0
  7855 ;;      Locals:         0       1       0       0       0
  7856 ;;      Temps:          0       1       0       0       0
  7857 ;;      Totals:         0       6       0       0       0
  7858 ;;Total ram usage:        6 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:    3
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_sprintf
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           psect	text947
  7868                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  7869                           	line	5
  7870                           	global	__size_of___lwmod
  7871  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7872                           	
  7873  0A6A                     ___lwmod:	
  7874                           	opt	stack 1
  7875                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7876                           	line	8
  7877                           	
  7878  0A6A                     l10673:	
  7879  0A6A  1283               	bcf	status, 5	;RP0=0, select bank0
  7880  0A6B  1303               	bcf	status, 6	;RP1=0, select bank0
  7881  0A6C  082F               	movf	(___lwmod@divisor+1),w
  7882  0A6D  042E               	iorwf	(___lwmod@divisor),w
  7883  0A6E  1903               	skipnz
  7884  0A6F  2A71               	goto	u4101
  7885  0A70  2A72               	goto	u4100
  7886  0A71                     u4101:
  7887  0A71  2AA8               	goto	l10691
  7888  0A72                     u4100:
  7889                           	line	9
  7890                           	
  7891  0A72                     l10675:	
  7892  0A72  01B3               	clrf	(___lwmod@counter)
  7893  0A73  1403               	bsf	status,0
  7894  0A74  0DB3               	rlf	(___lwmod@counter),f
  7895                           	line	10
  7896  0A75  2A82               	goto	l10681
  7897                           	
  7898  0A76                     l7497:	
  7899                           	line	11
  7900                           	
  7901  0A76                     l10677:	
  7902  0A76  3001               	movlw	01h
  7903                           	
  7904  0A77                     u4115:
  7905  0A77  1003               	clrc
  7906  0A78  0DAE               	rlf	(___lwmod@divisor),f
  7907  0A79  0DAF               	rlf	(___lwmod@divisor+1),f
  7908  0A7A  3EFF               	addlw	-1
  7909  0A7B  1D03               	skipz
  7910  0A7C  2A77               	goto	u4115
  7911                           	line	12
  7912                           	
  7913  0A7D                     l10679:	
  7914  0A7D  3001               	movlw	(01h)
  7915  0A7E  00B2               	movwf	(??___lwmod+0)+0
  7916  0A7F  0832               	movf	(??___lwmod+0)+0,w
  7917  0A80  07B3               	addwf	(___lwmod@counter),f
  7918  0A81  2A82               	goto	l10681
  7919                           	line	13
  7920                           	
  7921  0A82                     l7496:	
  7922                           	line	10
  7923                           	
  7924  0A82                     l10681:	
  7925  0A82  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  7926  0A83  2A85               	goto	u4121
  7927  0A84  2A86               	goto	u4120
  7928  0A85                     u4121:
  7929  0A85  2A76               	goto	l10677
  7930  0A86                     u4120:
  7931  0A86  2A88               	goto	l10683
  7932                           	
  7933  0A87                     l7498:	
  7934  0A87  2A88               	goto	l10683
  7935                           	line	14
  7936                           	
  7937  0A88                     l7499:	
  7938                           	line	15
  7939                           	
  7940  0A88                     l10683:	
  7941  0A88  082F               	movf	(___lwmod@divisor+1),w
  7942  0A89  0231               	subwf	(___lwmod@dividend+1),w
  7943  0A8A  1D03               	skipz
  7944  0A8B  2A8E               	goto	u4135
  7945  0A8C  082E               	movf	(___lwmod@divisor),w
  7946  0A8D  0230               	subwf	(___lwmod@dividend),w
  7947  0A8E                     u4135:
  7948  0A8E  1C03               	skipc
  7949  0A8F  2A91               	goto	u4131
  7950  0A90  2A92               	goto	u4130
  7951  0A91                     u4131:
  7952  0A91  2A99               	goto	l10687
  7953  0A92                     u4130:
  7954                           	line	16
  7955                           	
  7956  0A92                     l10685:	
  7957  0A92  082E               	movf	(___lwmod@divisor),w
  7958  0A93  02B0               	subwf	(___lwmod@dividend),f
  7959  0A94  082F               	movf	(___lwmod@divisor+1),w
  7960  0A95  1C03               	skipc
  7961  0A96  03B1               	decf	(___lwmod@dividend+1),f
  7962  0A97  02B1               	subwf	(___lwmod@dividend+1),f
  7963  0A98  2A99               	goto	l10687
  7964                           	
  7965  0A99                     l7500:	
  7966                           	line	17
  7967                           	
  7968  0A99                     l10687:	
  7969  0A99  3001               	movlw	01h
  7970                           	
  7971  0A9A                     u4145:
  7972  0A9A  1003               	clrc
  7973  0A9B  0CAF               	rrf	(___lwmod@divisor+1),f
  7974  0A9C  0CAE               	rrf	(___lwmod@divisor),f
  7975  0A9D  3EFF               	addlw	-1
  7976  0A9E  1D03               	skipz
  7977  0A9F  2A9A               	goto	u4145
  7978                           	line	18
  7979                           	
  7980  0AA0                     l10689:	
  7981  0AA0  3001               	movlw	low(01h)
  7982  0AA1  02B3               	subwf	(___lwmod@counter),f
  7983  0AA2  1D03               	btfss	status,2
  7984  0AA3  2AA5               	goto	u4151
  7985  0AA4  2AA6               	goto	u4150
  7986  0AA5                     u4151:
  7987  0AA5  2A88               	goto	l10683
  7988  0AA6                     u4150:
  7989  0AA6  2AA8               	goto	l10691
  7990                           	
  7991  0AA7                     l7501:	
  7992  0AA7  2AA8               	goto	l10691
  7993                           	line	19
  7994                           	
  7995  0AA8                     l7495:	
  7996                           	line	20
  7997                           	
  7998  0AA8                     l10691:	
  7999  0AA8  0831               	movf	(___lwmod@dividend+1),w
  8000  0AA9  01AF               	clrf	(?___lwmod+1)
  8001  0AAA  07AF               	addwf	(?___lwmod+1)
  8002  0AAB  0830               	movf	(___lwmod@dividend),w
  8003  0AAC  01AE               	clrf	(?___lwmod)
  8004  0AAD  07AE               	addwf	(?___lwmod)
  8005                           
  8006  0AAE  2AAF               	goto	l7502
  8007                           	
  8008  0AAF                     l10693:	
  8009                           	line	21
  8010                           	
  8011  0AAF                     l7502:	
  8012  0AAF  0008               	return
  8013                           	opt stack 0
  8014                           GLOBAL	__end_of___lwmod
  8015  0AB0                     	__end_of___lwmod:
  8016 ;; =============== function ___lwmod ends ============
  8017                           
  8018                           	signat	___lwmod,8314
  8019                           	global	___lwdiv
  8020                           psect	text948,local,class=CODE,delta=2
  8021                           global __ptext948
  8022  0B3D                     __ptext948:
  8023                           
  8024 ;; *************** function ___lwdiv *****************
  8025 ;; Defined at:
  8026 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  divisor         2    6[BANK0 ] unsigned int 
  8029 ;;  dividend        2    8[BANK0 ] unsigned int 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  quotient        2   11[BANK0 ] unsigned int 
  8032 ;;  counter         1   13[BANK0 ] unsigned char 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  2    6[BANK0 ] unsigned int 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8042 ;;      Params:         0       4       0       0       0
  8043 ;;      Locals:         0       3       0       0       0
  8044 ;;      Temps:          0       1       0       0       0
  8045 ;;      Totals:         0       8       0       0       0
  8046 ;;Total ram usage:        8 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    3
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_readAvgDistance
  8053 ;;		_ADCconvert
  8054 ;;		_sprintf
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           psect	text948
  8058                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8059                           	line	5
  8060                           	global	__size_of___lwdiv
  8061  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  8062                           	
  8063  0B3D                     ___lwdiv:	
  8064                           	opt	stack 1
  8065                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8066                           	line	9
  8067                           	
  8068  0B3D                     l10647:	
  8069  0B3D  1283               	bcf	status, 5	;RP0=0, select bank0
  8070  0B3E  1303               	bcf	status, 6	;RP1=0, select bank0
  8071  0B3F  01AB               	clrf	(___lwdiv@quotient)
  8072  0B40  01AC               	clrf	(___lwdiv@quotient+1)
  8073                           	line	10
  8074                           	
  8075  0B41                     l10649:	
  8076  0B41  0827               	movf	(___lwdiv@divisor+1),w
  8077  0B42  0426               	iorwf	(___lwdiv@divisor),w
  8078  0B43  1903               	skipnz
  8079  0B44  2B46               	goto	u4031
  8080  0B45  2B47               	goto	u4030
  8081  0B46                     u4031:
  8082  0B46  2B85               	goto	l10669
  8083  0B47                     u4030:
  8084                           	line	11
  8085                           	
  8086  0B47                     l10651:	
  8087  0B47  01AD               	clrf	(___lwdiv@counter)
  8088  0B48  1403               	bsf	status,0
  8089  0B49  0DAD               	rlf	(___lwdiv@counter),f
  8090                           	line	12
  8091  0B4A  2B57               	goto	l10657
  8092                           	
  8093  0B4B                     l7487:	
  8094                           	line	13
  8095                           	
  8096  0B4B                     l10653:	
  8097  0B4B  3001               	movlw	01h
  8098                           	
  8099  0B4C                     u4045:
  8100  0B4C  1003               	clrc
  8101  0B4D  0DA6               	rlf	(___lwdiv@divisor),f
  8102  0B4E  0DA7               	rlf	(___lwdiv@divisor+1),f
  8103  0B4F  3EFF               	addlw	-1
  8104  0B50  1D03               	skipz
  8105  0B51  2B4C               	goto	u4045
  8106                           	line	14
  8107                           	
  8108  0B52                     l10655:	
  8109  0B52  3001               	movlw	(01h)
  8110  0B53  00AA               	movwf	(??___lwdiv+0)+0
  8111  0B54  082A               	movf	(??___lwdiv+0)+0,w
  8112  0B55  07AD               	addwf	(___lwdiv@counter),f
  8113  0B56  2B57               	goto	l10657
  8114                           	line	15
  8115                           	
  8116  0B57                     l7486:	
  8117                           	line	12
  8118                           	
  8119  0B57                     l10657:	
  8120  0B57  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  8121  0B58  2B5A               	goto	u4051
  8122  0B59  2B5B               	goto	u4050
  8123  0B5A                     u4051:
  8124  0B5A  2B4B               	goto	l10653
  8125  0B5B                     u4050:
  8126  0B5B  2B5D               	goto	l10659
  8127                           	
  8128  0B5C                     l7488:	
  8129  0B5C  2B5D               	goto	l10659
  8130                           	line	16
  8131                           	
  8132  0B5D                     l7489:	
  8133                           	line	17
  8134                           	
  8135  0B5D                     l10659:	
  8136  0B5D  3001               	movlw	01h
  8137                           	
  8138  0B5E                     u4065:
  8139  0B5E  1003               	clrc
  8140  0B5F  0DAB               	rlf	(___lwdiv@quotient),f
  8141  0B60  0DAC               	rlf	(___lwdiv@quotient+1),f
  8142  0B61  3EFF               	addlw	-1
  8143  0B62  1D03               	skipz
  8144  0B63  2B5E               	goto	u4065
  8145                           	line	18
  8146  0B64  0827               	movf	(___lwdiv@divisor+1),w
  8147  0B65  0229               	subwf	(___lwdiv@dividend+1),w
  8148  0B66  1D03               	skipz
  8149  0B67  2B6A               	goto	u4075
  8150  0B68  0826               	movf	(___lwdiv@divisor),w
  8151  0B69  0228               	subwf	(___lwdiv@dividend),w
  8152  0B6A                     u4075:
  8153  0B6A  1C03               	skipc
  8154  0B6B  2B6D               	goto	u4071
  8155  0B6C  2B6E               	goto	u4070
  8156  0B6D                     u4071:
  8157  0B6D  2B76               	goto	l10665
  8158  0B6E                     u4070:
  8159                           	line	19
  8160                           	
  8161  0B6E                     l10661:	
  8162  0B6E  0826               	movf	(___lwdiv@divisor),w
  8163  0B6F  02A8               	subwf	(___lwdiv@dividend),f
  8164  0B70  0827               	movf	(___lwdiv@divisor+1),w
  8165  0B71  1C03               	skipc
  8166  0B72  03A9               	decf	(___lwdiv@dividend+1),f
  8167  0B73  02A9               	subwf	(___lwdiv@dividend+1),f
  8168                           	line	20
  8169                           	
  8170  0B74                     l10663:	
  8171  0B74  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  8172  0B75  2B76               	goto	l10665
  8173                           	line	21
  8174                           	
  8175  0B76                     l7490:	
  8176                           	line	22
  8177                           	
  8178  0B76                     l10665:	
  8179  0B76  3001               	movlw	01h
  8180                           	
  8181  0B77                     u4085:
  8182  0B77  1003               	clrc
  8183  0B78  0CA7               	rrf	(___lwdiv@divisor+1),f
  8184  0B79  0CA6               	rrf	(___lwdiv@divisor),f
  8185  0B7A  3EFF               	addlw	-1
  8186  0B7B  1D03               	skipz
  8187  0B7C  2B77               	goto	u4085
  8188                           	line	23
  8189                           	
  8190  0B7D                     l10667:	
  8191  0B7D  3001               	movlw	low(01h)
  8192  0B7E  02AD               	subwf	(___lwdiv@counter),f
  8193  0B7F  1D03               	btfss	status,2
  8194  0B80  2B82               	goto	u4091
  8195  0B81  2B83               	goto	u4090
  8196  0B82                     u4091:
  8197  0B82  2B5D               	goto	l10659
  8198  0B83                     u4090:
  8199  0B83  2B85               	goto	l10669
  8200                           	
  8201  0B84                     l7491:	
  8202  0B84  2B85               	goto	l10669
  8203                           	line	24
  8204                           	
  8205  0B85                     l7485:	
  8206                           	line	25
  8207                           	
  8208  0B85                     l10669:	
  8209  0B85  082C               	movf	(___lwdiv@quotient+1),w
  8210  0B86  01A7               	clrf	(?___lwdiv+1)
  8211  0B87  07A7               	addwf	(?___lwdiv+1)
  8212  0B88  082B               	movf	(___lwdiv@quotient),w
  8213  0B89  01A6               	clrf	(?___lwdiv)
  8214  0B8A  07A6               	addwf	(?___lwdiv)
  8215                           
  8216  0B8B  2B8C               	goto	l7492
  8217                           	
  8218  0B8C                     l10671:	
  8219                           	line	26
  8220                           	
  8221  0B8C                     l7492:	
  8222  0B8C  0008               	return
  8223                           	opt stack 0
  8224                           GLOBAL	__end_of___lwdiv
  8225  0B8D                     	__end_of___lwdiv:
  8226 ;; =============== function ___lwdiv ends ============
  8227                           
  8228                           	signat	___lwdiv,8314
  8229                           	global	___wmul
  8230                           psect	text949,local,class=CODE,delta=2
  8231                           global __ptext949
  8232  08DA                     __ptext949:
  8233                           
  8234 ;; *************** function ___wmul *****************
  8235 ;; Defined at:
  8236 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8239 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;  product         2    4[BANK0 ] unsigned int 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  2    0[BANK0 ] unsigned int 
  8244 ;; Registers used:
  8245 ;;		wreg, status,2, status,0
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8251 ;;      Params:         0       4       0       0       0
  8252 ;;      Locals:         0       2       0       0       0
  8253 ;;      Temps:          0       0       0       0       0
  8254 ;;      Totals:         0       6       0       0       0
  8255 ;;Total ram usage:        6 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    3
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_main
  8262 ;;		_ADCconvert
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           psect	text949
  8266                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  8267                           	line	3
  8268                           	global	__size_of___wmul
  8269  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  8270                           	
  8271  08DA                     ___wmul:	
  8272                           	opt	stack 4
  8273                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8274                           	line	4
  8275                           	
  8276  08DA                     l10635:	
  8277  08DA  1283               	bcf	status, 5	;RP0=0, select bank0
  8278  08DB  1303               	bcf	status, 6	;RP1=0, select bank0
  8279  08DC  01A4               	clrf	(___wmul@product)
  8280  08DD  01A5               	clrf	(___wmul@product+1)
  8281  08DE  28DF               	goto	l10637
  8282                           	line	6
  8283                           	
  8284  08DF                     l7479:	
  8285                           	line	7
  8286                           	
  8287  08DF                     l10637:	
  8288  08DF  1C20               	btfss	(___wmul@multiplier),(0)&7
  8289  08E0  28E2               	goto	u3991
  8290  08E1  28E3               	goto	u3990
  8291  08E2                     u3991:
  8292  08E2  28E9               	goto	l7480
  8293  08E3                     u3990:
  8294                           	line	8
  8295                           	
  8296  08E3                     l10639:	
  8297  08E3  0822               	movf	(___wmul@multiplicand),w
  8298  08E4  07A4               	addwf	(___wmul@product),f
  8299  08E5  1803               	skipnc
  8300  08E6  0AA5               	incf	(___wmul@product+1),f
  8301  08E7  0823               	movf	(___wmul@multiplicand+1),w
  8302  08E8  07A5               	addwf	(___wmul@product+1),f
  8303                           	
  8304  08E9                     l7480:	
  8305                           	line	9
  8306  08E9  3001               	movlw	01h
  8307                           	
  8308  08EA                     u4005:
  8309  08EA  1003               	clrc
  8310  08EB  0DA2               	rlf	(___wmul@multiplicand),f
  8311  08EC  0DA3               	rlf	(___wmul@multiplicand+1),f
  8312  08ED  3EFF               	addlw	-1
  8313  08EE  1D03               	skipz
  8314  08EF  28EA               	goto	u4005
  8315                           	line	10
  8316                           	
  8317  08F0                     l10641:	
  8318  08F0  3001               	movlw	01h
  8319                           	
  8320  08F1                     u4015:
  8321  08F1  1003               	clrc
  8322  08F2  0CA1               	rrf	(___wmul@multiplier+1),f
  8323  08F3  0CA0               	rrf	(___wmul@multiplier),f
  8324  08F4  3EFF               	addlw	-1
  8325  08F5  1D03               	skipz
  8326  08F6  28F1               	goto	u4015
  8327                           	line	11
  8328  08F7  0821               	movf	((___wmul@multiplier+1)),w
  8329  08F8  0420               	iorwf	((___wmul@multiplier)),w
  8330  08F9  1D03               	skipz
  8331  08FA  28FC               	goto	u4021
  8332  08FB  28FD               	goto	u4020
  8333  08FC                     u4021:
  8334  08FC  28DF               	goto	l10637
  8335  08FD                     u4020:
  8336  08FD  28FE               	goto	l10643
  8337                           	
  8338  08FE                     l7481:	
  8339                           	line	12
  8340                           	
  8341  08FE                     l10643:	
  8342  08FE  0825               	movf	(___wmul@product+1),w
  8343  08FF  01A1               	clrf	(?___wmul+1)
  8344  0900  07A1               	addwf	(?___wmul+1)
  8345  0901  0824               	movf	(___wmul@product),w
  8346  0902  01A0               	clrf	(?___wmul)
  8347  0903  07A0               	addwf	(?___wmul)
  8348                           
  8349  0904  2905               	goto	l7482
  8350                           	
  8351  0905                     l10645:	
  8352                           	line	13
  8353                           	
  8354  0905                     l7482:	
  8355  0905  0008               	return
  8356                           	opt stack 0
  8357                           GLOBAL	__end_of___wmul
  8358  0906                     	__end_of___wmul:
  8359 ;; =============== function ___wmul ends ============
  8360                           
  8361                           	signat	___wmul,8314
  8362                           	global	_ser_isrx
  8363                           psect	text950,local,class=CODE,delta=2
  8364                           global __ptext950
  8365  1755                     __ptext950:
  8366                           
  8367 ;; *************** function _ser_isrx *****************
  8368 ;; Defined at:
  8369 ;;		line 45 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;		None               void
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8383 ;;      Params:         0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0
  8386 ;;      Totals:         0       0       0       0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    3
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_ser_getch
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           psect	text950
  8397                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  8398                           	line	45
  8399                           	global	__size_of_ser_isrx
  8400  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  8401                           	
  8402  1755                     _ser_isrx:	
  8403                           	opt	stack 1
  8404                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  8405                           	line	46
  8406                           	
  8407  1755                     l10587:	
  8408                           ;ser.c: 46: if(OERR) {
  8409  1755  1283               	bcf	status, 5	;RP0=0, select bank0
  8410  1756  1303               	bcf	status, 6	;RP1=0, select bank0
  8411  1757  1C98               	btfss	(193/8),(193)&7
  8412  1758  2F5A               	goto	u3921
  8413  1759  2F5B               	goto	u3920
  8414  175A                     u3921:
  8415  175A  2F60               	goto	l10595
  8416  175B                     u3920:
  8417                           	line	47
  8418                           	
  8419  175B                     l10589:	
  8420                           ;ser.c: 47: CREN = 0;
  8421  175B  1218               	bcf	(196/8),(196)&7
  8422                           	line	48
  8423                           ;ser.c: 48: CREN = 1;
  8424  175C  1618               	bsf	(196/8),(196)&7
  8425                           	line	49
  8426                           	
  8427  175D                     l10591:	
  8428                           ;ser.c: 49: return 0;
  8429  175D  1003               	clrc
  8430                           	
  8431  175E  2F6D               	goto	l6734
  8432                           	
  8433  175F                     l10593:	
  8434  175F  2F6D               	goto	l6734
  8435                           	line	50
  8436                           	
  8437  1760                     l6733:	
  8438                           	line	51
  8439                           	
  8440  1760                     l10595:	
  8441                           ;ser.c: 50: }
  8442                           ;ser.c: 51: return (rxiptr!=rxoptr);
  8443  1760  1683               	bsf	status, 5	;RP0=1, select bank1
  8444  1761  1303               	bcf	status, 6	;RP1=0, select bank1
  8445  1762  084E               	movf	(_rxiptr)^080h,w	;volatile
  8446  1763  064F               	xorwf	(_rxoptr)^080h,w	;volatile
  8447  1764  1D03               	skipz
  8448  1765  2F67               	goto	u3931
  8449  1766  2F68               	goto	u3930
  8450  1767                     u3931:
  8451  1767  2F6A               	goto	l10599
  8452  1768                     u3930:
  8453                           	
  8454  1768                     l10597:	
  8455  1768  1003               	clrc
  8456                           	
  8457  1769  2F6D               	goto	l6734
  8458                           	
  8459  176A                     l10271:	
  8460                           	
  8461  176A                     l10599:	
  8462  176A  1403               	setc
  8463                           	
  8464  176B  2F6D               	goto	l6734
  8465                           	
  8466  176C                     l10273:	
  8467  176C  2F6D               	goto	l6734
  8468                           	
  8469  176D                     l10601:	
  8470                           	line	52
  8471                           	
  8472  176D                     l6734:	
  8473  176D  0008               	return
  8474                           	opt stack 0
  8475                           GLOBAL	__end_of_ser_isrx
  8476  176E                     	__end_of_ser_isrx:
  8477 ;; =============== function _ser_isrx ends ============
  8478                           
  8479                           	signat	_ser_isrx,88
  8480                           	global	_spi_transfer
  8481                           psect	text951,local,class=CODE,delta=2
  8482                           global __ptext951
  8483  1701                     __ptext951:
  8484                           
  8485 ;; *************** function _spi_transfer *****************
  8486 ;; Defined at:
  8487 ;;		line 34 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  data            1    wreg     unsigned char 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  data            1    2[BANK0 ] unsigned char 
  8492 ;;  temp            1    1[BANK0 ] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      unsigned char 
  8495 ;; Registers used:
  8496 ;;		wreg
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8502 ;;      Params:         0       0       0       0       0
  8503 ;;      Locals:         0       2       0       0       0
  8504 ;;      Temps:          0       1       0       0       0
  8505 ;;      Totals:         0       3       0       0       0
  8506 ;;Total ram usage:        3 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    3
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_rotate
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           psect	text951
  8516                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  8517                           	line	34
  8518                           	global	__size_of_spi_transfer
  8519  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  8520                           	
  8521  1701                     _spi_transfer:	
  8522                           	opt	stack 3
  8523                           ; Regs used in _spi_transfer: [wreg]
  8524                           ;spi_transfer@data stored from wreg
  8525  1701  1283               	bcf	status, 5	;RP0=0, select bank0
  8526  1702  1303               	bcf	status, 6	;RP1=0, select bank0
  8527  1703  00A2               	movwf	(spi_transfer@data)
  8528                           	line	35
  8529                           	
  8530  1704                     l10473:	
  8531                           ;steppermotor.c: 35: unsigned char temp = 0;
  8532  1704  01A1               	clrf	(spi_transfer@temp)
  8533                           	line	37
  8534                           ;steppermotor.c: 37: SSPIF = 0;
  8535  1705  118C               	bcf	(99/8),(99)&7
  8536                           	line	38
  8537                           	
  8538  1706                     l10475:	
  8539                           ;steppermotor.c: 38: SSPBUF = data;
  8540  1706  0822               	movf	(spi_transfer@data),w
  8541  1707  0093               	movwf	(19)	;volatile
  8542                           	line	40
  8543                           ;steppermotor.c: 40: while (SSPIF == 0);
  8544  1708  2F09               	goto	l3711
  8545                           	
  8546  1709                     l3712:	
  8547                           	
  8548  1709                     l3711:	
  8549  1709  1D8C               	btfss	(99/8),(99)&7
  8550  170A  2F0C               	goto	u3721
  8551  170B  2F0D               	goto	u3720
  8552  170C                     u3721:
  8553  170C  2F09               	goto	l3711
  8554  170D                     u3720:
  8555  170D  2F0E               	goto	l10477
  8556                           	
  8557  170E                     l3713:	
  8558                           	line	41
  8559                           	
  8560  170E                     l10477:	
  8561                           ;steppermotor.c: 41: temp = SSPBUF;
  8562  170E  0813               	movf	(19),w	;volatile
  8563  170F  00A0               	movwf	(??_spi_transfer+0)+0
  8564  1710  0820               	movf	(??_spi_transfer+0)+0,w
  8565  1711  00A1               	movwf	(spi_transfer@temp)
  8566                           	line	42
  8567                           	
  8568  1712                     l10479:	
  8569                           ;steppermotor.c: 42: SSPIF = 0;
  8570  1712  118C               	bcf	(99/8),(99)&7
  8571  1713  2F14               	goto	l3714
  8572                           	line	44
  8573                           	
  8574  1714                     l10481:	
  8575                           	line	45
  8576                           ;steppermotor.c: 44: return temp;
  8577                           ;	Return value of _spi_transfer is never used
  8578                           	
  8579  1714                     l3714:	
  8580  1714  0008               	return
  8581                           	opt stack 0
  8582                           GLOBAL	__end_of_spi_transfer
  8583  1715                     	__end_of_spi_transfer:
  8584 ;; =============== function _spi_transfer ends ============
  8585                           
  8586                           	signat	_spi_transfer,4217
  8587                           	global	_Menu
  8588                           psect	text952,local,class=CODE,delta=2
  8589                           global __ptext952
  8590  0AF6                     __ptext952:
  8591                           
  8592 ;; *************** function _Menu *****************
  8593 ;; Defined at:
  8594 ;;		line 181 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  BTN_input       1    wreg     unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  BTN_input       1    0[BANK0 ] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      unsigned char 
  8601 ;; Registers used:
  8602 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8608 ;;      Params:         0       0       0       0       0
  8609 ;;      Locals:         0       1       0       0       0
  8610 ;;      Temps:          0       0       0       0       0
  8611 ;;      Totals:         0       1       0       0       0
  8612 ;;Total ram usage:        1 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:    3
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		_main
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           psect	text952
  8622                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  8623                           	line	181
  8624                           	global	__size_of_Menu
  8625  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  8626                           	
  8627  0AF6                     _Menu:	
  8628                           	opt	stack 4
  8629                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  8630                           ;Menu@BTN_input stored from wreg
  8631  0AF6  1283               	bcf	status, 5	;RP0=0, select bank0
  8632  0AF7  1303               	bcf	status, 6	;RP1=0, select bank0
  8633  0AF8  00A0               	movwf	(Menu@BTN_input)
  8634                           	line	182
  8635                           	
  8636  0AF9                     l10449:	
  8637                           ;HMI.c: 182: switch (BTN_input)
  8638  0AF9  2B28               	goto	l10467
  8639                           	line	184
  8640                           ;HMI.c: 183: {
  8641                           ;HMI.c: 184: case 1:
  8642                           	
  8643  0AFA                     l4539:	
  8644                           	line	186
  8645                           ;HMI.c: 186: break;
  8646  0AFA  2B3A               	goto	l10469
  8647                           	line	187
  8648                           ;HMI.c: 187: case 2:
  8649                           	
  8650  0AFB                     l4541:	
  8651                           	line	189
  8652                           ;HMI.c: 189: break;
  8653  0AFB  2B3A               	goto	l10469
  8654                           	line	190
  8655                           ;HMI.c: 190: case 3:
  8656                           	
  8657  0AFC                     l4542:	
  8658                           	line	191
  8659                           	
  8660  0AFC                     l10451:	
  8661                           ;HMI.c: 191: pos--;
  8662  0AFC  30FF               	movlw	low(-1)
  8663  0AFD  1683               	bsf	status, 5	;RP0=1, select bank1
  8664  0AFE  1303               	bcf	status, 6	;RP1=0, select bank1
  8665  0AFF  07BA               	addwf	(_pos)^080h,f
  8666  0B00  1803               	skipnc
  8667  0B01  0ABB               	incf	(_pos+1)^080h,f
  8668  0B02  30FF               	movlw	high(-1)
  8669  0B03  07BB               	addwf	(_pos+1)^080h,f
  8670                           	line	192
  8671                           	
  8672  0B04                     l10453:	
  8673                           ;HMI.c: 192: if (pos < 0)
  8674  0B04  1FBB               	btfss	(_pos+1)^080h,7
  8675  0B05  2B07               	goto	u3701
  8676  0B06  2B08               	goto	u3700
  8677  0B07                     u3701:
  8678  0B07  2B3A               	goto	l10469
  8679  0B08                     u3700:
  8680                           	line	193
  8681                           	
  8682  0B08                     l10455:	
  8683                           ;HMI.c: 193: pos = 6 - 1;
  8684  0B08  3005               	movlw	low(05h)
  8685  0B09  00BA               	movwf	(_pos)^080h
  8686  0B0A  3000               	movlw	high(05h)
  8687  0B0B  00BB               	movwf	((_pos)^080h)+1
  8688  0B0C  2B3A               	goto	l10469
  8689                           	
  8690  0B0D                     l4543:	
  8691                           	line	195
  8692                           ;HMI.c: 195: break;
  8693  0B0D  2B3A               	goto	l10469
  8694                           	line	196
  8695                           ;HMI.c: 196: case 4:
  8696                           	
  8697  0B0E                     l4544:	
  8698                           	line	197
  8699                           	
  8700  0B0E                     l10457:	
  8701                           ;HMI.c: 197: pos++;
  8702  0B0E  3001               	movlw	low(01h)
  8703  0B0F  1683               	bsf	status, 5	;RP0=1, select bank1
  8704  0B10  1303               	bcf	status, 6	;RP1=0, select bank1
  8705  0B11  07BA               	addwf	(_pos)^080h,f
  8706  0B12  1803               	skipnc
  8707  0B13  0ABB               	incf	(_pos+1)^080h,f
  8708  0B14  3000               	movlw	high(01h)
  8709  0B15  07BB               	addwf	(_pos+1)^080h,f
  8710                           	line	198
  8711                           ;HMI.c: 198: if (pos == 6)
  8712  0B16  3006               	movlw	06h
  8713  0B17  063A               	xorwf	(_pos)^080h,w
  8714  0B18  043B               	iorwf	(_pos+1)^080h,w
  8715  0B19  1D03               	skipz
  8716  0B1A  2B1C               	goto	u3711
  8717  0B1B  2B1D               	goto	u3710
  8718  0B1C                     u3711:
  8719  0B1C  2B3A               	goto	l10469
  8720  0B1D                     u3710:
  8721                           	line	199
  8722                           	
  8723  0B1D                     l10459:	
  8724                           ;HMI.c: 199: pos = 0;
  8725  0B1D  01BA               	clrf	(_pos)^080h
  8726  0B1E  01BB               	clrf	(_pos+1)^080h
  8727  0B1F  2B3A               	goto	l10469
  8728                           	
  8729  0B20                     l4545:	
  8730                           	line	201
  8731                           ;HMI.c: 201: break;
  8732  0B20  2B3A               	goto	l10469
  8733                           	line	202
  8734                           ;HMI.c: 202: case 5:
  8735                           	
  8736  0B21                     l4546:	
  8737                           	line	203
  8738                           	
  8739  0B21                     l10461:	
  8740                           ;HMI.c: 203: return pos;
  8741  0B21  1683               	bsf	status, 5	;RP0=1, select bank1
  8742  0B22  1303               	bcf	status, 6	;RP1=0, select bank1
  8743  0B23  083A               	movf	(_pos)^080h,w
  8744  0B24  2B3C               	goto	l4547
  8745                           	
  8746  0B25                     l10463:	
  8747  0B25  2B3C               	goto	l4547
  8748                           	line	206
  8749                           ;HMI.c: 206: default:
  8750                           	
  8751  0B26                     l4548:	
  8752                           	line	208
  8753                           ;HMI.c: 208: break;
  8754  0B26  2B3A               	goto	l10469
  8755                           	line	209
  8756                           	
  8757  0B27                     l10465:	
  8758                           ;HMI.c: 209: }
  8759  0B27  2B3A               	goto	l10469
  8760                           	line	182
  8761                           	
  8762  0B28                     l4538:	
  8763                           	
  8764  0B28                     l10467:	
  8765  0B28  1283               	bcf	status, 5	;RP0=0, select bank0
  8766  0B29  0820               	movf	(Menu@BTN_input),w
  8767                           	; Switch size 1, requested type "space"
  8768                           ; Number of cases is 5, Range of values is 1 to 5
  8769                           ; switch strategies available:
  8770                           ; Name         Instructions Cycles
  8771                           ; simple_byte           16     9 (average)
  8772                           ; direct_byte           26    11 (fixed)
  8773                           ; jumptable            263     9 (fixed)
  8774                           ;	Chosen strategy is simple_byte
  8775                           
  8776                           	opt asmopt_off
  8777  0B2A  3A01               	xorlw	1^0	; case 1
  8778  0B2B  1903               	skipnz
  8779  0B2C  2B3A               	goto	l10469
  8780  0B2D  3A03               	xorlw	2^1	; case 2
  8781  0B2E  1903               	skipnz
  8782  0B2F  2B3A               	goto	l10469
  8783  0B30  3A01               	xorlw	3^2	; case 3
  8784  0B31  1903               	skipnz
  8785  0B32  2AFC               	goto	l10451
  8786  0B33  3A07               	xorlw	4^3	; case 4
  8787  0B34  1903               	skipnz
  8788  0B35  2B0E               	goto	l10457
  8789  0B36  3A01               	xorlw	5^4	; case 5
  8790  0B37  1903               	skipnz
  8791  0B38  2B21               	goto	l10461
  8792  0B39  2B3A               	goto	l10469
  8793                           	opt asmopt_on
  8794                           
  8795                           	line	209
  8796                           	
  8797  0B3A                     l4540:	
  8798                           	line	210
  8799                           	
  8800  0B3A                     l10469:	
  8801                           ;HMI.c: 210: return 255;
  8802  0B3A  30FF               	movlw	(0FFh)
  8803  0B3B  2B3C               	goto	l4547
  8804                           	
  8805  0B3C                     l10471:	
  8806                           	line	211
  8807                           	
  8808  0B3C                     l4547:	
  8809  0B3C  0008               	return
  8810                           	opt stack 0
  8811                           GLOBAL	__end_of_Menu
  8812  0B3D                     	__end_of_Menu:
  8813 ;; =============== function _Menu ends ============
  8814                           
  8815                           	signat	_Menu,4217
  8816                           	global	_ser_putch
  8817                           psect	text953,local,class=CODE,delta=2
  8818                           global __ptext953
  8819  1787                     __ptext953:
  8820                           
  8821 ;; *************** function _ser_putch *****************
  8822 ;; Defined at:
  8823 ;;		line 70 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  c               1    wreg     unsigned char 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  c               1    1[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;		None               void
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8837 ;;      Params:         0       0       0       0       0
  8838 ;;      Locals:         0       1       0       0       0
  8839 ;;      Temps:          0       1       0       0       0
  8840 ;;      Totals:         0       2       0       0       0
  8841 ;;Total ram usage:        2 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    3
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_ChargeMode
  8848 ;;		_robo_init
  8849 ;;		_robot_read
  8850 ;;		_robotMove
  8851 ;;		_robotTurn
  8852 ;;		_ser_puts
  8853 ;;		_ser_puts2
  8854 ;;		_ser_puthex
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           psect	text953
  8858                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  8859                           	line	70
  8860                           	global	__size_of_ser_putch
  8861  0026                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  8862                           	
  8863  1787                     _ser_putch:	
  8864                           	opt	stack 3
  8865                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  8866                           ;ser_putch@c stored from wreg
  8867  1787  1283               	bcf	status, 5	;RP0=0, select bank0
  8868  1788  1303               	bcf	status, 6	;RP1=0, select bank0
  8869  1789  00A1               	movwf	(ser_putch@c)
  8870                           	line	71
  8871                           	
  8872  178A                     l10437:	
  8873                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  8874  178A  2F8C               	goto	l10439
  8875                           	
  8876  178B                     l6744:	
  8877                           	line	72
  8878                           ;ser.c: 72: continue;
  8879  178B  2F8C               	goto	l10439
  8880                           	
  8881  178C                     l6743:	
  8882                           	line	71
  8883                           	
  8884  178C                     l10439:	
  8885  178C  1283               	bcf	status, 5	;RP0=0, select bank0
  8886  178D  086F               	movf	(_txiptr),w	;volatile
  8887  178E  3E01               	addlw	01h
  8888  178F  390F               	andlw	0Fh
  8889  1790  1683               	bsf	status, 5	;RP0=1, select bank1
  8890  1791  1303               	bcf	status, 6	;RP1=0, select bank1
  8891  1792  0654               	xorwf	(_txoptr)^080h,w	;volatile
  8892  1793  1903               	skipnz
  8893  1794  2F96               	goto	u3691
  8894  1795  2F97               	goto	u3690
  8895  1796                     u3691:
  8896  1796  2F8C               	goto	l10439
  8897  1797                     u3690:
  8898                           	
  8899  1797                     l6745:	
  8900                           	line	73
  8901                           ;ser.c: 73: GIE=0;
  8902  1797  138B               	bcf	(95/8),(95)&7
  8903                           	line	74
  8904                           	
  8905  1798                     l10441:	
  8906                           ;ser.c: 74: txfifo[txiptr] = c;
  8907  1798  1283               	bcf	status, 5	;RP0=0, select bank0
  8908  1799  1303               	bcf	status, 6	;RP1=0, select bank0
  8909  179A  0821               	movf	(ser_putch@c),w
  8910  179B  00A0               	movwf	(??_ser_putch+0)+0
  8911  179C  086F               	movf	(_txiptr),w
  8912  179D  3EA0               	addlw	_txfifo&0ffh
  8913  179E  0084               	movwf	fsr0
  8914  179F  0820               	movf	(??_ser_putch+0)+0,w
  8915  17A0  1783               	bsf	status, 7	;select IRP bank3
  8916  17A1  0080               	movwf	indf
  8917                           	line	75
  8918                           	
  8919  17A2                     l10443:	
  8920                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  8921  17A2  086F               	movf	(_txiptr),w	;volatile
  8922  17A3  3E01               	addlw	01h
  8923  17A4  390F               	andlw	0Fh
  8924  17A5  00A0               	movwf	(??_ser_putch+0)+0
  8925  17A6  0820               	movf	(??_ser_putch+0)+0,w
  8926  17A7  00EF               	movwf	(_txiptr)	;volatile
  8927                           	line	76
  8928                           	
  8929  17A8                     l10445:	
  8930                           ;ser.c: 76: TXIE=1;
  8931  17A8  1683               	bsf	status, 5	;RP0=1, select bank1
  8932  17A9  1303               	bcf	status, 6	;RP1=0, select bank1
  8933  17AA  160C               	bsf	(1124/8)^080h,(1124)&7
  8934                           	line	77
  8935                           	
  8936  17AB                     l10447:	
  8937                           ;ser.c: 77: GIE=1;
  8938  17AB  178B               	bsf	(95/8),(95)&7
  8939                           	line	78
  8940                           	
  8941  17AC                     l6746:	
  8942  17AC  0008               	return
  8943                           	opt stack 0
  8944                           GLOBAL	__end_of_ser_putch
  8945  17AD                     	__end_of_ser_putch:
  8946 ;; =============== function _ser_putch ends ============
  8947                           
  8948                           	signat	_ser_putch,4216
  8949                           	global	_ser_init
  8950                           psect	text954,local,class=CODE,delta=2
  8951                           global __ptext954
  8952  095E                     __ptext954:
  8953                           
  8954 ;; *************** function _ser_init *****************
  8955 ;; Defined at:
  8956 ;;		line 113 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;		None
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;		None               void
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8970 ;;      Params:         0       0       0       0       0
  8971 ;;      Locals:         0       0       0       0       0
  8972 ;;      Temps:          0       1       0       0       0
  8973 ;;      Totals:         0       1       0       0       0
  8974 ;;Total ram usage:        1 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    3
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_init
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           psect	text954
  8984                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  8985                           	line	113
  8986                           	global	__size_of_ser_init
  8987  002E                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  8988                           	
  8989  095E                     _ser_init:	
  8990                           	opt	stack 3
  8991                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  8992                           	line	114
  8993                           	
  8994  095E                     l10411:	
  8995                           ;ser.c: 114: TRISC |= 0b10000000;
  8996  095E  1683               	bsf	status, 5	;RP0=1, select bank1
  8997  095F  1303               	bcf	status, 6	;RP1=0, select bank1
  8998  0960  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  8999                           	line	115
  9000                           	
  9001  0961                     l10413:	
  9002                           ;ser.c: 115: TRISC &= 0b10111111;
  9003  0961  30BF               	movlw	(0BFh)
  9004  0962  1283               	bcf	status, 5	;RP0=0, select bank0
  9005  0963  1303               	bcf	status, 6	;RP1=0, select bank0
  9006  0964  00A0               	movwf	(??_ser_init+0)+0
  9007  0965  0820               	movf	(??_ser_init+0)+0,w
  9008  0966  1683               	bsf	status, 5	;RP0=1, select bank1
  9009  0967  1303               	bcf	status, 6	;RP1=0, select bank1
  9010  0968  0587               	andwf	(135)^080h,f	;volatile
  9011                           	line	116
  9012                           	
  9013  0969                     l10415:	
  9014                           ;ser.c: 116: BRGH=1;
  9015  0969  1518               	bsf	(1218/8)^080h,(1218)&7
  9016                           	line	118
  9017                           	
  9018  096A                     l10417:	
  9019                           ;ser.c: 118: SPBRG=20;
  9020  096A  3014               	movlw	(014h)
  9021  096B  0099               	movwf	(153)^080h	;volatile
  9022                           	line	121
  9023                           	
  9024  096C                     l10419:	
  9025                           ;ser.c: 121: TX9=0;
  9026  096C  1318               	bcf	(1222/8)^080h,(1222)&7
  9027                           	line	122
  9028                           	
  9029  096D                     l10421:	
  9030                           ;ser.c: 122: RX9=0;
  9031  096D  1283               	bcf	status, 5	;RP0=0, select bank0
  9032  096E  1303               	bcf	status, 6	;RP1=0, select bank0
  9033  096F  1318               	bcf	(198/8),(198)&7
  9034                           	line	124
  9035                           	
  9036  0970                     l10423:	
  9037                           ;ser.c: 124: SYNC=0;
  9038  0970  1683               	bsf	status, 5	;RP0=1, select bank1
  9039  0971  1303               	bcf	status, 6	;RP1=0, select bank1
  9040  0972  1218               	bcf	(1220/8)^080h,(1220)&7
  9041                           	line	125
  9042                           	
  9043  0973                     l10425:	
  9044                           ;ser.c: 125: SPEN=1;
  9045  0973  1283               	bcf	status, 5	;RP0=0, select bank0
  9046  0974  1303               	bcf	status, 6	;RP1=0, select bank0
  9047  0975  1798               	bsf	(199/8),(199)&7
  9048                           	line	126
  9049                           	
  9050  0976                     l10427:	
  9051                           ;ser.c: 126: CREN=1;
  9052  0976  1618               	bsf	(196/8),(196)&7
  9053                           	line	127
  9054                           	
  9055  0977                     l10429:	
  9056                           ;ser.c: 127: TXIE=0;
  9057  0977  1683               	bsf	status, 5	;RP0=1, select bank1
  9058  0978  1303               	bcf	status, 6	;RP1=0, select bank1
  9059  0979  120C               	bcf	(1124/8)^080h,(1124)&7
  9060                           	line	128
  9061                           	
  9062  097A                     l10431:	
  9063                           ;ser.c: 128: RCIE=1;
  9064  097A  168C               	bsf	(1125/8)^080h,(1125)&7
  9065                           	line	129
  9066                           	
  9067  097B                     l10433:	
  9068                           ;ser.c: 129: TXEN=1;
  9069  097B  1698               	bsf	(1221/8)^080h,(1221)&7
  9070                           	line	132
  9071                           	
  9072  097C                     l10435:	
  9073                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  9074  097C  3000               	movlw	(0)
  9075  097D  00D4               	movwf	(_txoptr)^080h	;volatile
  9076  097E  1283               	bcf	status, 5	;RP0=0, select bank0
  9077  097F  1303               	bcf	status, 6	;RP1=0, select bank0
  9078  0980  00EF               	movwf	(_txiptr)	;volatile
  9079  0981  1683               	bsf	status, 5	;RP0=1, select bank1
  9080  0982  1303               	bcf	status, 6	;RP1=0, select bank1
  9081  0983  00CF               	movwf	(_rxoptr)^080h	;volatile
  9082  0984  1283               	bcf	status, 5	;RP0=0, select bank0
  9083  0985  1303               	bcf	status, 6	;RP1=0, select bank0
  9084  0986  00A0               	movwf	(??_ser_init+0)+0
  9085  0987  0820               	movf	(??_ser_init+0)+0,w
  9086  0988  1683               	bsf	status, 5	;RP0=1, select bank1
  9087  0989  1303               	bcf	status, 6	;RP1=0, select bank1
  9088  098A  00CE               	movwf	(_rxiptr)^080h	;volatile
  9089                           	line	133
  9090                           	
  9091  098B                     l6768:	
  9092  098B  0008               	return
  9093                           	opt stack 0
  9094                           GLOBAL	__end_of_ser_init
  9095  098C                     	__end_of_ser_init:
  9096 ;; =============== function _ser_init ends ============
  9097                           
  9098                           	signat	_ser_init,88
  9099                           	global	_adc_read
  9100                           psect	text955,local,class=CODE,delta=2
  9101                           global __ptext955
  9102  17AD                     __ptext955:
  9103                           
  9104 ;; *************** function _adc_read *****************
  9105 ;; Defined at:
  9106 ;;		line 61 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;		None
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2    0[BANK0 ] unsigned int 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, status,0
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9120 ;;      Params:         0       2       0       0       0
  9121 ;;      Locals:         0       2       0       0       0
  9122 ;;      Temps:          0       2       0       0       0
  9123 ;;      Totals:         0       6       0       0       0
  9124 ;;Total ram usage:        6 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:    3
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_adc_read_channel
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           psect	text955
  9134                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  9135                           	line	61
  9136                           	global	__size_of_adc_read
  9137  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  9138                           	
  9139  17AD                     _adc_read:	
  9140                           	opt	stack 0
  9141                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  9142                           	line	64
  9143                           	
  9144  17AD                     l10283:	
  9145                           ;adc.c: 62: volatile unsigned int adc_value;
  9146                           ;adc.c: 64: ADRESH = 0;
  9147  17AD  1283               	bcf	status, 5	;RP0=0, select bank0
  9148  17AE  1303               	bcf	status, 6	;RP1=0, select bank0
  9149  17AF  019E               	clrf	(30)	;volatile
  9150                           	line	66
  9151                           	
  9152  17B0                     l10285:	
  9153                           ;adc.c: 66: GO = 1;
  9154  17B0  151F               	bsf	(250/8),(250)&7
  9155                           	line	67
  9156                           ;adc.c: 67: while(GO) continue;
  9157  17B1  2FB2               	goto	l703
  9158                           	
  9159  17B2                     l704:	
  9160                           	
  9161  17B2                     l703:	
  9162  17B2  191F               	btfsc	(250/8),(250)&7
  9163  17B3  2FB5               	goto	u3481
  9164  17B4  2FB6               	goto	u3480
  9165  17B5                     u3481:
  9166  17B5  2FB2               	goto	l703
  9167  17B6                     u3480:
  9168                           	
  9169  17B6                     l705:	
  9170                           	line	68
  9171                           # 68 "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  9172  17B6  0000               nop ;#
  9173                           	line	69
  9174                           # 69 "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  9175  17B7  0000               nop ;#
  9176                           	line	70
  9177                           # 70 "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  9178  17B8  0000               nop ;#
  9179                           psect	text955
  9180                           	line	73
  9181                           	
  9182  17B9                     l10287:	
  9183                           ;adc.c: 73: adc_value = ADRESH;
  9184  17B9  1283               	bcf	status, 5	;RP0=0, select bank0
  9185  17BA  1303               	bcf	status, 6	;RP1=0, select bank0
  9186  17BB  081E               	movf	(30),w	;volatile
  9187  17BC  00A2               	movwf	(??_adc_read+0)+0
  9188  17BD  01A3               	clrf	(??_adc_read+0)+0+1
  9189  17BE  0822               	movf	0+(??_adc_read+0)+0,w
  9190  17BF  00A4               	movwf	(adc_read@adc_value)	;volatile
  9191  17C0  0823               	movf	1+(??_adc_read+0)+0,w
  9192  17C1  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  9193                           	line	74
  9194                           ;adc.c: 74: adc_value <<= 1;
  9195  17C2  3001               	movlw	01h
  9196                           	
  9197  17C3                     u3495:
  9198  17C3  1003               	clrc
  9199  17C4  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  9200  17C5  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  9201  17C6  3EFF               	addlw	-1
  9202  17C7  1D03               	skipz
  9203  17C8  2FC3               	goto	u3495
  9204                           	line	75
  9205                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  9206  17C9  1683               	bsf	status, 5	;RP0=1, select bank1
  9207  17CA  1303               	bcf	status, 6	;RP1=0, select bank1
  9208  17CB  081E               	movf	(158)^080h,w	;volatile
  9209                           	line	78
  9210                           	
  9211  17CC                     l10289:	
  9212                           ;adc.c: 78: return (adc_value);
  9213  17CC  1283               	bcf	status, 5	;RP0=0, select bank0
  9214  17CD  1303               	bcf	status, 6	;RP1=0, select bank0
  9215  17CE  0825               	movf	(adc_read@adc_value+1),w	;volatile
  9216  17CF  01A1               	clrf	(?_adc_read+1)
  9217  17D0  07A1               	addwf	(?_adc_read+1)
  9218  17D1  0824               	movf	(adc_read@adc_value),w	;volatile
  9219  17D2  01A0               	clrf	(?_adc_read)
  9220  17D3  07A0               	addwf	(?_adc_read)
  9221                           
  9222  17D4  2FD5               	goto	l706
  9223                           	
  9224  17D5                     l10291:	
  9225                           	line	79
  9226                           	
  9227  17D5                     l706:	
  9228  17D5  0008               	return
  9229                           	opt stack 0
  9230                           GLOBAL	__end_of_adc_read
  9231  17D6                     	__end_of_adc_read:
  9232 ;; =============== function _adc_read ends ============
  9233                           
  9234                           	signat	_adc_read,90
  9235                           	global	_isr1
  9236                           psect	text956,local,class=CODE,delta=2
  9237                           global __ptext956
  9238  0716                     __ptext956:
  9239                           
  9240 ;; *************** function _isr1 *****************
  9241 ;; Defined at:
  9242 ;;		line 93 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;		None               void
  9249 ;; Registers used:
  9250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9256 ;;      Params:         0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0
  9258 ;;      Temps:          5       0       0       0       0
  9259 ;;      Totals:         5       0       0       0       0
  9260 ;;Total ram usage:        5 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    2
  9263 ;; This function calls:
  9264 ;;		i1___lwmod
  9265 ;;		_ReadButtons
  9266 ;; This function is called by:
  9267 ;;		Interrupt level 1
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           psect	text956
  9271                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  9272                           	line	93
  9273                           	global	__size_of_isr1
  9274  00DD                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  9275                           	
  9276  0716                     _isr1:	
  9277                           	opt	stack 0
  9278                           ; Regs used in _isr1: [allreg]
  9279                           psect	intentry,class=CODE,delta=2
  9280                           global __pintentry
  9281  0004                     __pintentry:
  9282                           global interrupt_function
  9283  0004                     interrupt_function:
  9284                           	global saved_w
  9285  007E                     	saved_w	set	btemp+0
  9286  0004  00FE               	movwf	saved_w
  9287  0005  0E03               	swapf	status,w
  9288  0006  00F9               	movwf	(??_isr1+1)
  9289  0007  0804               	movf	fsr0,w
  9290  0008  00FA               	movwf	(??_isr1+2)
  9291  0009  080A               	movf	pclath,w
  9292  000A  00FB               	movwf	(??_isr1+3)
  9293  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  9294  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  9295  000D  087F               	movf	btemp+1,w
  9296  000E  00FC               	movwf	(??_isr1+4)
  9297  000F  120A  118A  2F16   	ljmp	_isr1
  9298                           psect	text956
  9299                           	line	97
  9300                           	
  9301  0716                     i1l10319:	
  9302                           ;Main.c: 97: if(TMR0IF)
  9303  0716  1D0B               	btfss	(90/8),(90)&7
  9304  0717  2F19               	goto	u353_21
  9305  0718  2F1A               	goto	u353_20
  9306  0719                     u353_21:
  9307  0719  2F9B               	goto	i1l10349
  9308  071A                     u353_20:
  9309                           	line	99
  9310                           	
  9311  071A                     i1l10321:	
  9312                           ;Main.c: 98: {
  9313                           ;Main.c: 99: TMR0IF = 0;
  9314  071A  110B               	bcf	(90/8),(90)&7
  9315                           	line	100
  9316                           	
  9317  071B                     i1l10323:	
  9318                           ;Main.c: 100: TMR0 = 100;
  9319  071B  3064               	movlw	(064h)
  9320  071C  0081               	movwf	(1)	;volatile
  9321                           	line	102
  9322                           ;Main.c: 102: RTC_Counter++;
  9323  071D  3001               	movlw	low(01h)
  9324  071E  1683               	bsf	status, 5	;RP0=1, select bank1
  9325  071F  1303               	bcf	status, 6	;RP1=0, select bank1
  9326  0720  07B0               	addwf	(_RTC_Counter)^080h,f	;volatile
  9327  0721  1803               	skipnc
  9328  0722  0AB1               	incf	(_RTC_Counter+1)^080h,f	;volatile
  9329  0723  3000               	movlw	high(01h)
  9330  0724  07B1               	addwf	(_RTC_Counter+1)^080h,f	;volatile
  9331                           	line	104
  9332                           	
  9333  0725                     i1l10325:	
  9334                           ;Main.c: 104: RTC_FLAG_1MS = 1;
  9335  0725  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  9336                           	line	105
  9337                           	
  9338  0726                     i1l10327:	
  9339                           ;Main.c: 105: if(RTC_Counter % 10 == 0)
  9340  0726  300A               	movlw	low(0Ah)
  9341  0727  00F2               	movwf	(?i1___lwmod)
  9342  0728  3000               	movlw	high(0Ah)
  9343  0729  00F3               	movwf	((?i1___lwmod))+1
  9344  072A  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
  9345  072B  01F5               	clrf	1+(?i1___lwmod)+02h
  9346  072C  07F5               	addwf	1+(?i1___lwmod)+02h
  9347  072D  0830               	movf	(_RTC_Counter)^080h,w	;volatile
  9348  072E  01F4               	clrf	0+(?i1___lwmod)+02h
  9349  072F  07F4               	addwf	0+(?i1___lwmod)+02h
  9350                           
  9351  0730  120A  158A  2226   	fcall	i1___lwmod
              120A  118A         
  9352  0735  0873               	movf	((1+(?i1___lwmod))),w
  9353  0736  0472               	iorwf	((0+(?i1___lwmod))),w
  9354  0737  1D03               	skipz
  9355  0738  2F3A               	goto	u354_21
  9356  0739  2F3B               	goto	u354_20
  9357  073A                     u354_21:
  9358  073A  2F3D               	goto	i1l10331
  9359  073B                     u354_20:
  9360                           	line	107
  9361                           	
  9362  073B                     i1l10329:	
  9363                           ;Main.c: 106: {
  9364                           ;Main.c: 107: RTC_FLAG_10MS = 1;
  9365  073B  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  9366  073C  2F3D               	goto	i1l10331
  9367                           	line	110
  9368                           	
  9369  073D                     i1l2207:	
  9370                           	line	111
  9371                           	
  9372  073D                     i1l10331:	
  9373                           ;Main.c: 110: }
  9374                           ;Main.c: 111: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  9375  073D  3032               	movlw	low(032h)
  9376  073E  00F2               	movwf	(?i1___lwmod)
  9377  073F  3000               	movlw	high(032h)
  9378  0740  00F3               	movwf	((?i1___lwmod))+1
  9379  0741  1683               	bsf	status, 5	;RP0=1, select bank1
  9380  0742  1303               	bcf	status, 6	;RP1=0, select bank1
  9381  0743  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
  9382  0744  01F5               	clrf	1+(?i1___lwmod)+02h
  9383  0745  07F5               	addwf	1+(?i1___lwmod)+02h
  9384  0746  0830               	movf	(_RTC_Counter)^080h,w	;volatile
  9385  0747  01F4               	clrf	0+(?i1___lwmod)+02h
  9386  0748  07F4               	addwf	0+(?i1___lwmod)+02h
  9387                           
  9388  0749  120A  158A  2226   	fcall	i1___lwmod
              120A  118A         
  9389  074E  0873               	movf	((1+(?i1___lwmod))),w
  9390  074F  0472               	iorwf	((0+(?i1___lwmod))),w
  9391  0750  1D03               	skipz
  9392  0751  2F53               	goto	u355_21
  9393  0752  2F54               	goto	u355_20
  9394  0753                     u355_21:
  9395  0753  2F56               	goto	i1l10335
  9396  0754                     u355_20:
  9397                           	
  9398  0754                     i1l10333:	
  9399  0754  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  9400  0755  2F56               	goto	i1l10335
  9401                           	
  9402  0756                     i1l2208:	
  9403                           	line	112
  9404                           	
  9405  0756                     i1l10335:	
  9406                           ;Main.c: 112: if(RTC_Counter % 250 == 0)
  9407  0756  30FA               	movlw	low(0FAh)
  9408  0757  00F2               	movwf	(?i1___lwmod)
  9409  0758  3000               	movlw	high(0FAh)
  9410  0759  00F3               	movwf	((?i1___lwmod))+1
  9411  075A  1683               	bsf	status, 5	;RP0=1, select bank1
  9412  075B  1303               	bcf	status, 6	;RP1=0, select bank1
  9413  075C  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
  9414  075D  01F5               	clrf	1+(?i1___lwmod)+02h
  9415  075E  07F5               	addwf	1+(?i1___lwmod)+02h
  9416  075F  0830               	movf	(_RTC_Counter)^080h,w	;volatile
  9417  0760  01F4               	clrf	0+(?i1___lwmod)+02h
  9418  0761  07F4               	addwf	0+(?i1___lwmod)+02h
  9419                           
  9420  0762  120A  158A  2226   	fcall	i1___lwmod
              120A  118A         
  9421  0767  0873               	movf	((1+(?i1___lwmod))),w
  9422  0768  0472               	iorwf	((0+(?i1___lwmod))),w
  9423  0769  1D03               	skipz
  9424  076A  2F6C               	goto	u356_21
  9425  076B  2F6D               	goto	u356_20
  9426  076C                     u356_21:
  9427  076C  2F6F               	goto	i1l10339
  9428  076D                     u356_20:
  9429                           	line	115
  9430                           	
  9431  076D                     i1l10337:	
  9432                           ;Main.c: 113: {
  9433                           ;Main.c: 115: RTC_FLAG_250MS = 1;
  9434  076D  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  9435  076E  2F6F               	goto	i1l10339
  9436                           	line	117
  9437                           	
  9438  076F                     i1l2209:	
  9439                           	line	118
  9440                           	
  9441  076F                     i1l10339:	
  9442                           ;Main.c: 117: }
  9443                           ;Main.c: 118: if(RTC_Counter % 500 == 0)
  9444  076F  30F4               	movlw	low(01F4h)
  9445  0770  00F2               	movwf	(?i1___lwmod)
  9446  0771  3001               	movlw	high(01F4h)
  9447  0772  00F3               	movwf	((?i1___lwmod))+1
  9448  0773  1683               	bsf	status, 5	;RP0=1, select bank1
  9449  0774  1303               	bcf	status, 6	;RP1=0, select bank1
  9450  0775  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
  9451  0776  01F5               	clrf	1+(?i1___lwmod)+02h
  9452  0777  07F5               	addwf	1+(?i1___lwmod)+02h
  9453  0778  0830               	movf	(_RTC_Counter)^080h,w	;volatile
  9454  0779  01F4               	clrf	0+(?i1___lwmod)+02h
  9455  077A  07F4               	addwf	0+(?i1___lwmod)+02h
  9456                           
  9457  077B  120A  158A  2226   	fcall	i1___lwmod
              120A  118A         
  9458  0780  0873               	movf	((1+(?i1___lwmod))),w
  9459  0781  0472               	iorwf	((0+(?i1___lwmod))),w
  9460  0782  1D03               	skipz
  9461  0783  2F85               	goto	u357_21
  9462  0784  2F86               	goto	u357_20
  9463  0785                     u357_21:
  9464  0785  2F8C               	goto	i1l10345
  9465  0786                     u357_20:
  9466                           	line	120
  9467                           	
  9468  0786                     i1l10341:	
  9469                           ;Main.c: 119: {
  9470                           ;Main.c: 120: RTC_FLAG_500MS = 1;
  9471  0786  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  9472                           	line	121
  9473                           	
  9474  0787                     i1l10343:	
  9475                           ;Main.c: 121: RB0 ^= 0x01;
  9476  0787  1283               	bcf	status, 5	;RP0=0, select bank0
  9477  0788  1303               	bcf	status, 6	;RP1=0, select bank0
  9478  0789  3001               	movlw	1<<((48)&7)
  9479  078A  0686               	xorwf	((48)/8),f
  9480  078B  2F8C               	goto	i1l10345
  9481                           	line	123
  9482                           	
  9483  078C                     i1l2210:	
  9484                           	line	124
  9485                           	
  9486  078C                     i1l10345:	
  9487                           ;Main.c: 123: }
  9488                           ;Main.c: 124: if (buttonPressed == 0)
  9489  078C  08FD               	movf	(_buttonPressed),f
  9490  078D  1D03               	skipz	;volatile
  9491  078E  2F90               	goto	u358_21
  9492  078F  2F91               	goto	u358_20
  9493  0790                     u358_21:
  9494  0790  2F9B               	goto	i1l10349
  9495  0791                     u358_20:
  9496                           	line	127
  9497                           	
  9498  0791                     i1l10347:	
  9499                           ;Main.c: 125: {
  9500                           ;Main.c: 127: buttonPressed = ReadButtons();
  9501  0791  120A  158A  21BB   	fcall	_ReadButtons
              120A  118A         
  9502  0796  00F8               	movwf	(??_isr1+0)+0
  9503  0797  0878               	movf	(??_isr1+0)+0,w
  9504  0798  00FD               	movwf	(_buttonPressed)	;volatile
  9505  0799  2F9B               	goto	i1l10349
  9506                           	line	129
  9507                           	
  9508  079A                     i1l2211:	
  9509  079A  2F9B               	goto	i1l10349
  9510                           	line	130
  9511                           	
  9512  079B                     i1l2206:	
  9513                           	line	131
  9514                           	
  9515  079B                     i1l10349:	
  9516                           ;Main.c: 129: }
  9517                           ;Main.c: 130: }
  9518                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  9519  079B  1283               	bcf	status, 5	;RP0=0, select bank0
  9520  079C  1303               	bcf	status, 6	;RP1=0, select bank0
  9521  079D  1E8C               	btfss	(101/8),(101)&7
  9522  079E  2FA0               	goto	u359_21
  9523  079F  2FA1               	goto	u359_20
  9524  07A0                     u359_21:
  9525  07A0  2FBD               	goto	i1l10359
  9526  07A1                     u359_20:
  9527                           	
  9528  07A1                     i1l10351:	
  9529  07A1  081A               	movf	(26),w	;volatile
  9530  07A2  00F8               	movwf	(??_isr1+0)+0
  9531  07A3  1683               	bsf	status, 5	;RP0=1, select bank1
  9532  07A4  1303               	bcf	status, 6	;RP1=0, select bank1
  9533  07A5  084E               	movf	(_rxiptr)^080h,w
  9534  07A6  3EA0               	addlw	_rxfifo&0ffh
  9535  07A7  0084               	movwf	fsr0
  9536  07A8  0878               	movf	(??_isr1+0)+0,w
  9537  07A9  1383               	bcf	status, 7	;select IRP bank1
  9538  07AA  0080               	movwf	indf
  9539                           	
  9540  07AB                     i1l10353:	
  9541  07AB  084E               	movf	(_rxiptr)^080h,w	;volatile
  9542  07AC  3E01               	addlw	01h
  9543  07AD  390F               	andlw	0Fh
  9544  07AE  00F8               	movwf	(??_isr1+0)+0
  9545  07AF  0878               	movf	(??_isr1+0)+0,w
  9546  07B0  00D0               	movwf	(_ser_tmp)^080h
  9547                           	
  9548  07B1                     i1l10355:	
  9549  07B1  0850               	movf	(_ser_tmp)^080h,w
  9550  07B2  064F               	xorwf	(_rxoptr)^080h,w	;volatile
  9551  07B3  1903               	skipnz
  9552  07B4  2FB6               	goto	u360_21
  9553  07B5  2FB7               	goto	u360_20
  9554  07B6                     u360_21:
  9555  07B6  2FBD               	goto	i1l10359
  9556  07B7                     u360_20:
  9557                           	
  9558  07B7                     i1l10357:	
  9559  07B7  0850               	movf	(_ser_tmp)^080h,w
  9560  07B8  00F8               	movwf	(??_isr1+0)+0
  9561  07B9  0878               	movf	(??_isr1+0)+0,w
  9562  07BA  00CE               	movwf	(_rxiptr)^080h	;volatile
  9563  07BB  2FBD               	goto	i1l10359
  9564                           	
  9565  07BC                     i1l2213:	
  9566  07BC  2FBD               	goto	i1l10359
  9567                           	
  9568  07BD                     i1l2212:	
  9569                           	
  9570  07BD                     i1l10359:	
  9571  07BD  1283               	bcf	status, 5	;RP0=0, select bank0
  9572  07BE  1E0C               	btfss	(100/8),(100)&7
  9573  07BF  2FC1               	goto	u361_21
  9574  07C0  2FC2               	goto	u361_20
  9575  07C1                     u361_21:
  9576  07C1  2FE7               	goto	i1l2216
  9577  07C2                     u361_20:
  9578                           	
  9579  07C2                     i1l10361:	
  9580  07C2  1683               	bsf	status, 5	;RP0=1, select bank1
  9581  07C3  1303               	bcf	status, 6	;RP1=0, select bank1
  9582  07C4  1E0C               	btfss	(1124/8)^080h,(1124)&7
  9583  07C5  2FC7               	goto	u362_21
  9584  07C6  2FC8               	goto	u362_20
  9585  07C7                     u362_21:
  9586  07C7  2FE7               	goto	i1l2216
  9587  07C8                     u362_20:
  9588                           	
  9589  07C8                     i1l10363:	
  9590  07C8  0854               	movf	(_txoptr)^080h,w
  9591  07C9  3EA0               	addlw	_txfifo&0ffh
  9592  07CA  0084               	movwf	fsr0
  9593  07CB  1783               	bsf	status, 7	;select IRP bank3
  9594  07CC  0800               	movf	indf,w
  9595  07CD  1283               	bcf	status, 5	;RP0=0, select bank0
  9596  07CE  1303               	bcf	status, 6	;RP1=0, select bank0
  9597  07CF  0099               	movwf	(25)	;volatile
  9598                           	
  9599  07D0                     i1l10365:	
  9600  07D0  3001               	movlw	(01h)
  9601  07D1  00F8               	movwf	(??_isr1+0)+0
  9602  07D2  0878               	movf	(??_isr1+0)+0,w
  9603  07D3  1683               	bsf	status, 5	;RP0=1, select bank1
  9604  07D4  1303               	bcf	status, 6	;RP1=0, select bank1
  9605  07D5  07D4               	addwf	(_txoptr)^080h,f	;volatile
  9606                           	
  9607  07D6                     i1l10367:	
  9608  07D6  300F               	movlw	(0Fh)
  9609  07D7  00F8               	movwf	(??_isr1+0)+0
  9610  07D8  0878               	movf	(??_isr1+0)+0,w
  9611  07D9  05D4               	andwf	(_txoptr)^080h,f	;volatile
  9612                           	
  9613  07DA                     i1l10369:	
  9614  07DA  0854               	movf	(_txoptr)^080h,w	;volatile
  9615  07DB  1283               	bcf	status, 5	;RP0=0, select bank0
  9616  07DC  1303               	bcf	status, 6	;RP1=0, select bank0
  9617  07DD  066F               	xorwf	(_txiptr),w	;volatile
  9618  07DE  1D03               	skipz
  9619  07DF  2FE1               	goto	u363_21
  9620  07E0  2FE2               	goto	u363_20
  9621  07E1                     u363_21:
  9622  07E1  2FE7               	goto	i1l2216
  9623  07E2                     u363_20:
  9624                           	
  9625  07E2                     i1l10371:	
  9626  07E2  1683               	bsf	status, 5	;RP0=1, select bank1
  9627  07E3  1303               	bcf	status, 6	;RP1=0, select bank1
  9628  07E4  120C               	bcf	(1124/8)^080h,(1124)&7
  9629  07E5  2FE7               	goto	i1l2216
  9630                           	
  9631  07E6                     i1l2215:	
  9632  07E6  2FE7               	goto	i1l2216
  9633                           	
  9634  07E7                     i1l2214:	
  9635                           	line	132
  9636                           	
  9637  07E7                     i1l2216:	
  9638  07E7  087C               	movf	(??_isr1+4),w
  9639  07E8  1283               	bcf	status, 5	;RP0=0, select bank0
  9640  07E9  00FF               	movwf	btemp+1
  9641  07EA  087B               	movf	(??_isr1+3),w
  9642  07EB  008A               	movwf	pclath
  9643  07EC  087A               	movf	(??_isr1+2),w
  9644  07ED  0084               	movwf	fsr0
  9645  07EE  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
  9646  07EF  0083               	movwf	status
  9647  07F0  0EFE               	swapf	saved_w,f
  9648  07F1  0E7E               	swapf	saved_w,w
  9649  07F2  0009               	retfie
  9650                           	opt stack 0
  9651                           GLOBAL	__end_of_isr1
  9652  07F3                     	__end_of_isr1:
  9653 ;; =============== function _isr1 ends ============
  9654                           
  9655                           	signat	_isr1,88
  9656                           	global	_ReadButtons
  9657                           psect	text957,local,class=CODE,delta=2
  9658                           global __ptext957
  9659  09BB                     __ptext957:
  9660                           
  9661 ;; *************** function _ReadButtons *****************
  9662 ;; Defined at:
  9663 ;;		line 141 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      unsigned char 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, pclath, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9677 ;;      Params:         0       0       0       0       0
  9678 ;;      Locals:         0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0
  9680 ;;      Totals:         0       0       0       0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    1
  9684 ;; This function calls:
  9685 ;;		_Debounce
  9686 ;; This function is called by:
  9687 ;;		_isr1
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           psect	text957
  9691                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  9692                           	line	141
  9693                           	global	__size_of_ReadButtons
  9694  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  9695                           	
  9696  09BB                     _ReadButtons:	
  9697                           	opt	stack 0
  9698                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  9699                           	line	143
  9700                           	
  9701  09BB                     i1l10373:	
  9702                           ;HMI.c: 143: Debounce();
  9703  09BB  120A  158A  26C3   	fcall	_Debounce
              120A  158A         
  9704                           	line	145
  9705                           	
  9706  09C0                     i1l10375:	
  9707                           ;HMI.c: 145: if(UpPressed)
  9708  09C0  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  9709  09C1  29C3               	goto	u364_21
  9710  09C2  29C4               	goto	u364_20
  9711  09C3                     u364_21:
  9712  09C3  29C8               	goto	i1l4530
  9713  09C4                     u364_20:
  9714                           	line	147
  9715                           	
  9716  09C4                     i1l10377:	
  9717                           ;HMI.c: 146: {
  9718                           ;HMI.c: 147: UpPressed = 0;
  9719  09C4  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  9720                           	line	148
  9721                           	
  9722  09C5                     i1l10379:	
  9723                           ;HMI.c: 148: return 1;
  9724  09C5  3001               	movlw	(01h)
  9725  09C6  29EA               	goto	i1l4531
  9726                           	
  9727  09C7                     i1l10381:	
  9728  09C7  29EA               	goto	i1l4531
  9729                           	line	150
  9730                           	
  9731  09C8                     i1l4530:	
  9732                           	line	152
  9733                           ;HMI.c: 150: }
  9734                           ;HMI.c: 152: if(DownPressed)
  9735  09C8  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  9736  09C9  29CB               	goto	u365_21
  9737  09CA  29CC               	goto	u365_20
  9738  09CB                     u365_21:
  9739  09CB  29D0               	goto	i1l4532
  9740  09CC                     u365_20:
  9741                           	line	154
  9742                           	
  9743  09CC                     i1l10383:	
  9744                           ;HMI.c: 153: {
  9745                           ;HMI.c: 154: DownPressed = 0;
  9746  09CC  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  9747                           	line	155
  9748                           	
  9749  09CD                     i1l10385:	
  9750                           ;HMI.c: 155: return 2;
  9751  09CD  3002               	movlw	(02h)
  9752  09CE  29EA               	goto	i1l4531
  9753                           	
  9754  09CF                     i1l10387:	
  9755  09CF  29EA               	goto	i1l4531
  9756                           	line	157
  9757                           	
  9758  09D0                     i1l4532:	
  9759                           	line	158
  9760                           ;HMI.c: 157: }
  9761                           ;HMI.c: 158: if(LeftPressed)
  9762  09D0  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  9763  09D1  29D3               	goto	u366_21
  9764  09D2  29D4               	goto	u366_20
  9765  09D3                     u366_21:
  9766  09D3  29D8               	goto	i1l4533
  9767  09D4                     u366_20:
  9768                           	line	160
  9769                           	
  9770  09D4                     i1l10389:	
  9771                           ;HMI.c: 159: {
  9772                           ;HMI.c: 160: LeftPressed = 0;
  9773  09D4  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  9774                           	line	161
  9775                           	
  9776  09D5                     i1l10391:	
  9777                           ;HMI.c: 161: return 3;
  9778  09D5  3003               	movlw	(03h)
  9779  09D6  29EA               	goto	i1l4531
  9780                           	
  9781  09D7                     i1l10393:	
  9782  09D7  29EA               	goto	i1l4531
  9783                           	line	163
  9784                           	
  9785  09D8                     i1l4533:	
  9786                           	line	164
  9787                           ;HMI.c: 163: }
  9788                           ;HMI.c: 164: if(RightPressed)
  9789  09D8  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
  9790  09D9  29DB               	goto	u367_21
  9791  09DA  29DC               	goto	u367_20
  9792  09DB                     u367_21:
  9793  09DB  29E0               	goto	i1l4534
  9794  09DC                     u367_20:
  9795                           	line	166
  9796                           	
  9797  09DC                     i1l10395:	
  9798                           ;HMI.c: 165: {
  9799                           ;HMI.c: 166: RightPressed = 0;
  9800  09DC  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
  9801                           	line	167
  9802                           	
  9803  09DD                     i1l10397:	
  9804                           ;HMI.c: 167: return 4;
  9805  09DD  3004               	movlw	(04h)
  9806  09DE  29EA               	goto	i1l4531
  9807                           	
  9808  09DF                     i1l10399:	
  9809  09DF  29EA               	goto	i1l4531
  9810                           	line	169
  9811                           	
  9812  09E0                     i1l4534:	
  9813                           	line	171
  9814                           ;HMI.c: 169: }
  9815                           ;HMI.c: 171: if(CenterPressed)
  9816  09E0  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  9817  09E1  29E3               	goto	u368_21
  9818  09E2  29E4               	goto	u368_20
  9819  09E3                     u368_21:
  9820  09E3  29E8               	goto	i1l10407
  9821  09E4                     u368_20:
  9822                           	line	173
  9823                           	
  9824  09E4                     i1l10401:	
  9825                           ;HMI.c: 172: {
  9826                           ;HMI.c: 173: CenterPressed = 0;
  9827  09E4  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  9828                           	line	174
  9829                           	
  9830  09E5                     i1l10403:	
  9831                           ;HMI.c: 174: return 5;
  9832  09E5  3005               	movlw	(05h)
  9833  09E6  29EA               	goto	i1l4531
  9834                           	
  9835  09E7                     i1l10405:	
  9836  09E7  29EA               	goto	i1l4531
  9837                           	line	176
  9838                           	
  9839  09E8                     i1l4535:	
  9840                           	line	177
  9841                           	
  9842  09E8                     i1l10407:	
  9843                           ;HMI.c: 176: }
  9844                           ;HMI.c: 177: return 0;
  9845  09E8  3000               	movlw	(0)
  9846  09E9  29EA               	goto	i1l4531
  9847                           	
  9848  09EA                     i1l10409:	
  9849                           	line	178
  9850                           	
  9851  09EA                     i1l4531:	
  9852  09EA  0008               	return
  9853                           	opt stack 0
  9854                           GLOBAL	__end_of_ReadButtons
  9855  09EB                     	__end_of_ReadButtons:
  9856 ;; =============== function _ReadButtons ends ============
  9857                           
  9858                           	signat	_ReadButtons,89
  9859                           	global	i1___lwmod
  9860                           psect	text958,local,class=CODE,delta=2
  9861                           global __ptext958
  9862  0A26                     __ptext958:
  9863                           
  9864 ;; *************** function i1___lwmod *****************
  9865 ;; Defined at:
  9866 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  __lwmod         2    0[COMMON] unsigned int 
  9869 ;;  __lwmod         2    2[COMMON] unsigned int 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  __lwmod         1    5[COMMON] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  2    0[COMMON] unsigned int 
  9874 ;; Registers used:
  9875 ;;		wreg, status,2, status,0
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9881 ;;      Params:         4       0       0       0       0
  9882 ;;      Locals:         1       0       0       0       0
  9883 ;;      Temps:          1       0       0       0       0
  9884 ;;      Totals:         6       0       0       0       0
  9885 ;;Total ram usage:        6 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_isr1
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           psect	text958
  9894                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9895                           	line	5
  9896                           	global	__size_ofi1___lwmod
  9897  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  9898                           	
  9899  0A26                     i1___lwmod:	
  9900                           	opt	stack 1
  9901                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  9902                           	line	8
  9903                           	
  9904  0A26                     i1l10769:	
  9905  0A26  0873               	movf	(i1___lwmod@divisor+1),w
  9906  0A27  0472               	iorwf	(i1___lwmod@divisor),w
  9907  0A28  1903               	skipnz
  9908  0A29  2A2B               	goto	u435_21
  9909  0A2A  2A2C               	goto	u435_20
  9910  0A2B                     u435_21:
  9911  0A2B  2A62               	goto	i1l10787
  9912  0A2C                     u435_20:
  9913                           	line	9
  9914                           	
  9915  0A2C                     i1l10771:	
  9916  0A2C  01F7               	clrf	(i1___lwmod@counter)
  9917  0A2D  1403               	bsf	status,0
  9918  0A2E  0DF7               	rlf	(i1___lwmod@counter),f
  9919                           	line	10
  9920  0A2F  2A3C               	goto	i1l10777
  9921                           	
  9922  0A30                     i1l7497:	
  9923                           	line	11
  9924                           	
  9925  0A30                     i1l10773:	
  9926  0A30  3001               	movlw	01h
  9927                           	
  9928  0A31                     u436_25:
  9929  0A31  1003               	clrc
  9930  0A32  0DF2               	rlf	(i1___lwmod@divisor),f
  9931  0A33  0DF3               	rlf	(i1___lwmod@divisor+1),f
  9932  0A34  3EFF               	addlw	-1
  9933  0A35  1D03               	skipz
  9934  0A36  2A31               	goto	u436_25
  9935                           	line	12
  9936                           	
  9937  0A37                     i1l10775:	
  9938  0A37  3001               	movlw	(01h)
  9939  0A38  00F6               	movwf	(??i1___lwmod+0)+0
  9940  0A39  0876               	movf	(??i1___lwmod+0)+0,w
  9941  0A3A  07F7               	addwf	(i1___lwmod@counter),f
  9942  0A3B  2A3C               	goto	i1l10777
  9943                           	line	13
  9944                           	
  9945  0A3C                     i1l7496:	
  9946                           	line	10
  9947                           	
  9948  0A3C                     i1l10777:	
  9949  0A3C  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  9950  0A3D  2A3F               	goto	u437_21
  9951  0A3E  2A40               	goto	u437_20
  9952  0A3F                     u437_21:
  9953  0A3F  2A30               	goto	i1l10773
  9954  0A40                     u437_20:
  9955  0A40  2A42               	goto	i1l10779
  9956                           	
  9957  0A41                     i1l7498:	
  9958  0A41  2A42               	goto	i1l10779
  9959                           	line	14
  9960                           	
  9961  0A42                     i1l7499:	
  9962                           	line	15
  9963                           	
  9964  0A42                     i1l10779:	
  9965  0A42  0873               	movf	(i1___lwmod@divisor+1),w
  9966  0A43  0275               	subwf	(i1___lwmod@dividend+1),w
  9967  0A44  1D03               	skipz
  9968  0A45  2A48               	goto	u438_25
  9969  0A46  0872               	movf	(i1___lwmod@divisor),w
  9970  0A47  0274               	subwf	(i1___lwmod@dividend),w
  9971  0A48                     u438_25:
  9972  0A48  1C03               	skipc
  9973  0A49  2A4B               	goto	u438_21
  9974  0A4A  2A4C               	goto	u438_20
  9975  0A4B                     u438_21:
  9976  0A4B  2A53               	goto	i1l10783
  9977  0A4C                     u438_20:
  9978                           	line	16
  9979                           	
  9980  0A4C                     i1l10781:	
  9981  0A4C  0872               	movf	(i1___lwmod@divisor),w
  9982  0A4D  02F4               	subwf	(i1___lwmod@dividend),f
  9983  0A4E  0873               	movf	(i1___lwmod@divisor+1),w
  9984  0A4F  1C03               	skipc
  9985  0A50  03F5               	decf	(i1___lwmod@dividend+1),f
  9986  0A51  02F5               	subwf	(i1___lwmod@dividend+1),f
  9987  0A52  2A53               	goto	i1l10783
  9988                           	
  9989  0A53                     i1l7500:	
  9990                           	line	17
  9991                           	
  9992  0A53                     i1l10783:	
  9993  0A53  3001               	movlw	01h
  9994                           	
  9995  0A54                     u439_25:
  9996  0A54  1003               	clrc
  9997  0A55  0CF3               	rrf	(i1___lwmod@divisor+1),f
  9998  0A56  0CF2               	rrf	(i1___lwmod@divisor),f
  9999  0A57  3EFF               	addlw	-1
 10000  0A58  1D03               	skipz
 10001  0A59  2A54               	goto	u439_25
 10002                           	line	18
 10003                           	
 10004  0A5A                     i1l10785:	
 10005  0A5A  3001               	movlw	low(01h)
 10006  0A5B  02F7               	subwf	(i1___lwmod@counter),f
 10007  0A5C  1D03               	btfss	status,2
 10008  0A5D  2A5F               	goto	u440_21
 10009  0A5E  2A60               	goto	u440_20
 10010  0A5F                     u440_21:
 10011  0A5F  2A42               	goto	i1l10779
 10012  0A60                     u440_20:
 10013  0A60  2A62               	goto	i1l10787
 10014                           	
 10015  0A61                     i1l7501:	
 10016  0A61  2A62               	goto	i1l10787
 10017                           	line	19
 10018                           	
 10019  0A62                     i1l7495:	
 10020                           	line	20
 10021                           	
 10022  0A62                     i1l10787:	
 10023  0A62  0875               	movf	(i1___lwmod@dividend+1),w
 10024  0A63  01F3               	clrf	(?i1___lwmod+1)
 10025  0A64  07F3               	addwf	(?i1___lwmod+1)
 10026  0A65  0874               	movf	(i1___lwmod@dividend),w
 10027  0A66  01F2               	clrf	(?i1___lwmod)
 10028  0A67  07F2               	addwf	(?i1___lwmod)
 10029                           
 10030  0A68  2A69               	goto	i1l7502
 10031                           	
 10032  0A69                     i1l10789:	
 10033                           	line	21
 10034                           	
 10035  0A69                     i1l7502:	
 10036  0A69  0008               	return
 10037                           	opt stack 0
 10038                           GLOBAL	__end_ofi1___lwmod
 10039  0A6A                     	__end_ofi1___lwmod:
 10040 ;; =============== function i1___lwmod ends ============
 10041                           
 10042                           	signat	i1___lwmod,90
 10043                           	global	_Debounce
 10044                           psect	text959,local,class=CODE,delta=2
 10045                           global __ptext959
 10046  0EC3                     __ptext959:
 10047                           
 10048 ;; *************** function _Debounce *****************
 10049 ;; Defined at:
 10050 ;;		line 61 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;		None
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;		None
 10055 ;; Return value:  Size  Location     Type
 10056 ;;		None               void
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10064 ;;      Params:         0       0       0       0       0
 10065 ;;      Locals:         0       0       0       0       0
 10066 ;;      Temps:          1       0       0       0       0
 10067 ;;      Totals:         1       0       0       0       0
 10068 ;;Total ram usage:        1 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_ReadButtons
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           psect	text959
 10077                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
 10078                           	line	61
 10079                           	global	__size_of_Debounce
 10080  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 10081                           	
 10082  0EC3                     _Debounce:	
 10083                           	opt	stack 0
 10084                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 10085                           	line	63
 10086                           	
 10087  0EC3                     i1l10545:	
 10088                           ;HMI.c: 63: if(!RB2)
 10089  0EC3  1283               	bcf	status, 5	;RP0=0, select bank0
 10090  0EC4  1303               	bcf	status, 6	;RP1=0, select bank0
 10091  0EC5  1906               	btfsc	(50/8),(50)&7
 10092  0EC6  2EC8               	goto	u377_21
 10093  0EC7  2EC9               	goto	u377_20
 10094  0EC8                     u377_21:
 10095  0EC8  2EDD               	goto	i1l4512
 10096  0EC9                     u377_20:
 10097                           	line	65
 10098                           	
 10099  0EC9                     i1l10547:	
 10100                           ;HMI.c: 64: {
 10101                           ;HMI.c: 65: UpDebounceCount++;
 10102  0EC9  3001               	movlw	(01h)
 10103  0ECA  00F2               	movwf	(??_Debounce+0)+0
 10104  0ECB  0872               	movf	(??_Debounce+0)+0,w
 10105  0ECC  1683               	bsf	status, 5	;RP0=1, select bank1
 10106  0ECD  1303               	bcf	status, 6	;RP1=0, select bank1
 10107  0ECE  07C9               	addwf	(_UpDebounceCount)^080h,f	;volatile
 10108                           	line	66
 10109                           	
 10110  0ECF                     i1l10549:	
 10111                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
 10112  0ECF  300A               	movlw	(0Ah)
 10113  0ED0  0249               	subwf	(_UpDebounceCount)^080h,w	;volatile
 10114  0ED1  1C03               	skipc
 10115  0ED2  2ED4               	goto	u378_21
 10116  0ED3  2ED5               	goto	u378_20
 10117  0ED4                     u378_21:
 10118  0ED4  2EE1               	goto	i1l4514
 10119  0ED5                     u378_20:
 10120                           	
 10121  0ED5                     i1l10551:	
 10122  0ED5  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
 10123  0ED6  2ED8               	goto	u379_21
 10124  0ED7  2ED9               	goto	u379_20
 10125  0ED8                     u379_21:
 10126  0ED8  2EE1               	goto	i1l4514
 10127  0ED9                     u379_20:
 10128                           	line	68
 10129                           	
 10130  0ED9                     i1l10553:	
 10131                           ;HMI.c: 67: {
 10132                           ;HMI.c: 68: UpPressed = 1;
 10133  0ED9  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 10134                           	line	69
 10135                           ;HMI.c: 69: UpReleased = 0;
 10136  0EDA  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
 10137  0EDB  2EE1               	goto	i1l4514
 10138                           	line	70
 10139                           	
 10140  0EDC                     i1l4513:	
 10141                           	line	71
 10142                           ;HMI.c: 70: }
 10143                           ;HMI.c: 71: }
 10144  0EDC  2EE1               	goto	i1l4514
 10145                           	line	72
 10146                           	
 10147  0EDD                     i1l4512:	
 10148                           	line	74
 10149                           ;HMI.c: 72: else
 10150                           ;HMI.c: 73: {
 10151                           ;HMI.c: 74: UpDebounceCount = 0;
 10152  0EDD  1683               	bsf	status, 5	;RP0=1, select bank1
 10153  0EDE  1303               	bcf	status, 6	;RP1=0, select bank1
 10154  0EDF  01C9               	clrf	(_UpDebounceCount)^080h	;volatile
 10155                           	line	75
 10156                           ;HMI.c: 75: UpReleased = 1;
 10157  0EE0  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
 10158                           	line	76
 10159                           	
 10160  0EE1                     i1l4514:	
 10161                           	line	79
 10162                           ;HMI.c: 76: }
 10163                           ;HMI.c: 79: if(!RB3)
 10164  0EE1  1283               	bcf	status, 5	;RP0=0, select bank0
 10165  0EE2  1303               	bcf	status, 6	;RP1=0, select bank0
 10166  0EE3  1986               	btfsc	(51/8),(51)&7
 10167  0EE4  2EE6               	goto	u380_21
 10168  0EE5  2EE7               	goto	u380_20
 10169  0EE6                     u380_21:
 10170  0EE6  2EFB               	goto	i1l4515
 10171  0EE7                     u380_20:
 10172                           	line	81
 10173                           	
 10174  0EE7                     i1l10555:	
 10175                           ;HMI.c: 80: {
 10176                           ;HMI.c: 81: DownDebounceCount++;
 10177  0EE7  3001               	movlw	(01h)
 10178  0EE8  00F2               	movwf	(??_Debounce+0)+0
 10179  0EE9  0872               	movf	(??_Debounce+0)+0,w
 10180  0EEA  1683               	bsf	status, 5	;RP0=1, select bank1
 10181  0EEB  1303               	bcf	status, 6	;RP1=0, select bank1
 10182  0EEC  07C6               	addwf	(_DownDebounceCount)^080h,f	;volatile
 10183                           	line	82
 10184                           	
 10185  0EED                     i1l10557:	
 10186                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
 10187  0EED  300A               	movlw	(0Ah)
 10188  0EEE  0246               	subwf	(_DownDebounceCount)^080h,w	;volatile
 10189  0EEF  1C03               	skipc
 10190  0EF0  2EF2               	goto	u381_21
 10191  0EF1  2EF3               	goto	u381_20
 10192  0EF2                     u381_21:
 10193  0EF2  2EFF               	goto	i1l4517
 10194  0EF3                     u381_20:
 10195                           	
 10196  0EF3                     i1l10559:	
 10197  0EF3  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 10198  0EF4  2EF6               	goto	u382_21
 10199  0EF5  2EF7               	goto	u382_20
 10200  0EF6                     u382_21:
 10201  0EF6  2EFF               	goto	i1l4517
 10202  0EF7                     u382_20:
 10203                           	line	84
 10204                           	
 10205  0EF7                     i1l10561:	
 10206                           ;HMI.c: 83: {
 10207                           ;HMI.c: 84: DownPressed = 1;
 10208  0EF7  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 10209                           	line	85
 10210                           ;HMI.c: 85: DownReleased = 0;
 10211  0EF8  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 10212  0EF9  2EFF               	goto	i1l4517
 10213                           	line	86
 10214                           	
 10215  0EFA                     i1l4516:	
 10216                           	line	87
 10217                           ;HMI.c: 86: }
 10218                           ;HMI.c: 87: }
 10219  0EFA  2EFF               	goto	i1l4517
 10220                           	line	88
 10221                           	
 10222  0EFB                     i1l4515:	
 10223                           	line	90
 10224                           ;HMI.c: 88: else
 10225                           ;HMI.c: 89: {
 10226                           ;HMI.c: 90: DownDebounceCount = 0;
 10227  0EFB  1683               	bsf	status, 5	;RP0=1, select bank1
 10228  0EFC  1303               	bcf	status, 6	;RP1=0, select bank1
 10229  0EFD  01C6               	clrf	(_DownDebounceCount)^080h	;volatile
 10230                           	line	91
 10231                           ;HMI.c: 91: DownReleased = 1;
 10232  0EFE  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 10233                           	line	92
 10234                           	
 10235  0EFF                     i1l4517:	
 10236                           	line	94
 10237                           ;HMI.c: 92: }
 10238                           ;HMI.c: 94: if(!RB4)
 10239  0EFF  1283               	bcf	status, 5	;RP0=0, select bank0
 10240  0F00  1303               	bcf	status, 6	;RP1=0, select bank0
 10241  0F01  1A06               	btfsc	(52/8),(52)&7
 10242  0F02  2F04               	goto	u383_21
 10243  0F03  2F05               	goto	u383_20
 10244  0F04                     u383_21:
 10245  0F04  2F19               	goto	i1l4518
 10246  0F05                     u383_20:
 10247                           	line	96
 10248                           	
 10249  0F05                     i1l10563:	
 10250                           ;HMI.c: 95: {
 10251                           ;HMI.c: 96: LeftDebounceCount++;
 10252  0F05  3001               	movlw	(01h)
 10253  0F06  00F2               	movwf	(??_Debounce+0)+0
 10254  0F07  0872               	movf	(??_Debounce+0)+0,w
 10255  0F08  1683               	bsf	status, 5	;RP0=1, select bank1
 10256  0F09  1303               	bcf	status, 6	;RP1=0, select bank1
 10257  0F0A  07C7               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 10258                           	line	97
 10259                           	
 10260  0F0B                     i1l10565:	
 10261                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
 10262  0F0B  300A               	movlw	(0Ah)
 10263  0F0C  0247               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 10264  0F0D  1C03               	skipc
 10265  0F0E  2F10               	goto	u384_21
 10266  0F0F  2F11               	goto	u384_20
 10267  0F10                     u384_21:
 10268  0F10  2F1D               	goto	i1l4520
 10269  0F11                     u384_20:
 10270                           	
 10271  0F11                     i1l10567:	
 10272  0F11  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 10273  0F12  2F14               	goto	u385_21
 10274  0F13  2F15               	goto	u385_20
 10275  0F14                     u385_21:
 10276  0F14  2F1D               	goto	i1l4520
 10277  0F15                     u385_20:
 10278                           	line	99
 10279                           	
 10280  0F15                     i1l10569:	
 10281                           ;HMI.c: 98: {
 10282                           ;HMI.c: 99: LeftPressed = 1;
 10283  0F15  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 10284                           	line	100
 10285                           ;HMI.c: 100: LeftReleased = 0;
 10286  0F16  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 10287  0F17  2F1D               	goto	i1l4520
 10288                           	line	101
 10289                           	
 10290  0F18                     i1l4519:	
 10291                           	line	102
 10292                           ;HMI.c: 101: }
 10293                           ;HMI.c: 102: }
 10294  0F18  2F1D               	goto	i1l4520
 10295                           	line	103
 10296                           	
 10297  0F19                     i1l4518:	
 10298                           	line	105
 10299                           ;HMI.c: 103: else
 10300                           ;HMI.c: 104: {
 10301                           ;HMI.c: 105: LeftDebounceCount = 0;
 10302  0F19  1683               	bsf	status, 5	;RP0=1, select bank1
 10303  0F1A  1303               	bcf	status, 6	;RP1=0, select bank1
 10304  0F1B  01C7               	clrf	(_LeftDebounceCount)^080h	;volatile
 10305                           	line	106
 10306                           ;HMI.c: 106: LeftReleased = 1;
 10307  0F1C  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 10308                           	line	107
 10309                           	
 10310  0F1D                     i1l4520:	
 10311                           	line	109
 10312                           ;HMI.c: 107: }
 10313                           ;HMI.c: 109: if(!RB5)
 10314  0F1D  1283               	bcf	status, 5	;RP0=0, select bank0
 10315  0F1E  1303               	bcf	status, 6	;RP1=0, select bank0
 10316  0F1F  1A86               	btfsc	(53/8),(53)&7
 10317  0F20  2F22               	goto	u386_21
 10318  0F21  2F23               	goto	u386_20
 10319  0F22                     u386_21:
 10320  0F22  2F37               	goto	i1l4521
 10321  0F23                     u386_20:
 10322                           	line	111
 10323                           	
 10324  0F23                     i1l10571:	
 10325                           ;HMI.c: 110: {
 10326                           ;HMI.c: 111: RightDebounceCount++;
 10327  0F23  3001               	movlw	(01h)
 10328  0F24  00F2               	movwf	(??_Debounce+0)+0
 10329  0F25  0872               	movf	(??_Debounce+0)+0,w
 10330  0F26  1683               	bsf	status, 5	;RP0=1, select bank1
 10331  0F27  1303               	bcf	status, 6	;RP1=0, select bank1
 10332  0F28  07C8               	addwf	(_RightDebounceCount)^080h,f	;volatile
 10333                           	line	112
 10334                           	
 10335  0F29                     i1l10573:	
 10336                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
 10337  0F29  300A               	movlw	(0Ah)
 10338  0F2A  0248               	subwf	(_RightDebounceCount)^080h,w	;volatile
 10339  0F2B  1C03               	skipc
 10340  0F2C  2F2E               	goto	u387_21
 10341  0F2D  2F2F               	goto	u387_20
 10342  0F2E                     u387_21:
 10343  0F2E  2F3B               	goto	i1l4523
 10344  0F2F                     u387_20:
 10345                           	
 10346  0F2F                     i1l10575:	
 10347  0F2F  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
 10348  0F30  2F32               	goto	u388_21
 10349  0F31  2F33               	goto	u388_20
 10350  0F32                     u388_21:
 10351  0F32  2F3B               	goto	i1l4523
 10352  0F33                     u388_20:
 10353                           	line	114
 10354                           	
 10355  0F33                     i1l10577:	
 10356                           ;HMI.c: 113: {
 10357                           ;HMI.c: 114: RightPressed = 1;
 10358  0F33  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 10359                           	line	115
 10360                           ;HMI.c: 115: RightReleased = 0;
 10361  0F34  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
 10362  0F35  2F3B               	goto	i1l4523
 10363                           	line	116
 10364                           	
 10365  0F36                     i1l4522:	
 10366                           	line	117
 10367                           ;HMI.c: 116: }
 10368                           ;HMI.c: 117: }
 10369  0F36  2F3B               	goto	i1l4523
 10370                           	line	118
 10371                           	
 10372  0F37                     i1l4521:	
 10373                           	line	120
 10374                           ;HMI.c: 118: else
 10375                           ;HMI.c: 119: {
 10376                           ;HMI.c: 120: RightDebounceCount = 0;
 10377  0F37  1683               	bsf	status, 5	;RP0=1, select bank1
 10378  0F38  1303               	bcf	status, 6	;RP1=0, select bank1
 10379  0F39  01C8               	clrf	(_RightDebounceCount)^080h	;volatile
 10380                           	line	121
 10381                           ;HMI.c: 121: RightReleased = 1;
 10382  0F3A  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
 10383                           	line	122
 10384                           	
 10385  0F3B                     i1l4523:	
 10386                           	line	124
 10387                           ;HMI.c: 122: }
 10388                           ;HMI.c: 124: if(!RB6)
 10389  0F3B  1283               	bcf	status, 5	;RP0=0, select bank0
 10390  0F3C  1303               	bcf	status, 6	;RP1=0, select bank0
 10391  0F3D  1B06               	btfsc	(54/8),(54)&7
 10392  0F3E  2F40               	goto	u389_21
 10393  0F3F  2F41               	goto	u389_20
 10394  0F40                     u389_21:
 10395  0F40  2F55               	goto	i1l4524
 10396  0F41                     u389_20:
 10397                           	line	126
 10398                           	
 10399  0F41                     i1l10579:	
 10400                           ;HMI.c: 125: {
 10401                           ;HMI.c: 126: CenterDebounceCount++;
 10402  0F41  3001               	movlw	(01h)
 10403  0F42  00F2               	movwf	(??_Debounce+0)+0
 10404  0F43  0872               	movf	(??_Debounce+0)+0,w
 10405  0F44  1683               	bsf	status, 5	;RP0=1, select bank1
 10406  0F45  1303               	bcf	status, 6	;RP1=0, select bank1
 10407  0F46  07C3               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 10408                           	line	127
 10409                           	
 10410  0F47                     i1l10581:	
 10411                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
 10412  0F47  300A               	movlw	(0Ah)
 10413  0F48  0243               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 10414  0F49  1C03               	skipc
 10415  0F4A  2F4C               	goto	u390_21
 10416  0F4B  2F4D               	goto	u390_20
 10417  0F4C                     u390_21:
 10418  0F4C  2F5A               	goto	i1l4527
 10419  0F4D                     u390_20:
 10420                           	
 10421  0F4D                     i1l10583:	
 10422  0F4D  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 10423  0F4E  2F50               	goto	u391_21
 10424  0F4F  2F51               	goto	u391_20
 10425  0F50                     u391_21:
 10426  0F50  2F5A               	goto	i1l4527
 10427  0F51                     u391_20:
 10428                           	line	129
 10429                           	
 10430  0F51                     i1l10585:	
 10431                           ;HMI.c: 128: {
 10432                           ;HMI.c: 129: CenterPressed = 1;
 10433  0F51  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 10434                           	line	130
 10435                           ;HMI.c: 130: CenterReleased = 0;
 10436  0F52  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 10437  0F53  2F5A               	goto	i1l4527
 10438                           	line	131
 10439                           	
 10440  0F54                     i1l4525:	
 10441                           	line	132
 10442                           ;HMI.c: 131: }
 10443                           ;HMI.c: 132: }
 10444  0F54  2F5A               	goto	i1l4527
 10445                           	line	133
 10446                           	
 10447  0F55                     i1l4524:	
 10448                           	line	135
 10449                           ;HMI.c: 133: else
 10450                           ;HMI.c: 134: {
 10451                           ;HMI.c: 135: CenterDebounceCount = 0;
 10452  0F55  1683               	bsf	status, 5	;RP0=1, select bank1
 10453  0F56  1303               	bcf	status, 6	;RP1=0, select bank1
 10454  0F57  01C3               	clrf	(_CenterDebounceCount)^080h	;volatile
 10455                           	line	136
 10456                           ;HMI.c: 136: CenterReleased = 1;
 10457  0F58  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 10458  0F59  2F5A               	goto	i1l4527
 10459                           	line	137
 10460                           	
 10461  0F5A                     i1l4526:	
 10462                           	line	138
 10463                           	
 10464  0F5A                     i1l4527:	
 10465  0F5A  0008               	return
 10466                           	opt stack 0
 10467                           GLOBAL	__end_of_Debounce
 10468  0F5B                     	__end_of_Debounce:
 10469 ;; =============== function _Debounce ends ============
 10470                           
 10471                           	signat	_Debounce,88
 10472                           psect	text960,local,class=CODE,delta=2
 10473                           global __ptext960
 10474  0000                     __ptext960:
 10475                           	global	btemp
 10476  007E                     	btemp set 07Eh
 10477                           
 10478                           	DABS	1,126,2	;btemp
 10479                           	global	wtemp0
 10480  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri May 01 15:07:12 2015

 __end_of_lcd_write_control 1729             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
              ___awdiv@sign 002C                          fsr 0004         ___wmul@multiplicand 0022  
                       l700 173E                         l703 17B2                         l704 17B2  
                       l705 17B6                         l706 17D5                         l690 09EF  
                       l691 0A18                         l692 09F3                         l693 09F7  
                       l694 09FB                         l695 09FF                         l696 0A03  
                       l689 0A07                         l697 0A25                         _GIE 005F  
                       _RB0 0030                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _pos 00BA  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
           ?_lcd_set_cursor 0072                        l3000 1754                        l1402 16ED  
                      l3010 04B6                        l1410 095D                        l3011 0419  
                      l3003 02E5                        l1411 095D                        l3004 04B9  
                      l3012 04B5                        l3013 0466                        l3005 0332  
                      l1405 16DA                        l3006 04B8                        l3014 04B4  
                      l2230 0CC5                        l2222 0C97                        l3015 04B3  
                      l3007 037F                        l2231 0CE2                        l2223 0CA2  
                      l3008 04B7                        l3016 04B9                        l1408 094C  
                      l2224 0CCF                        l2232 0CCD                        l2240 0ACB  
                      l3009 03CC                        l1409 0933                        l2233 0CE1  
                      l2225 0CA3                        l2241 0AF3                        l2234 0CE2  
                      l2226 0CE0                        l2242 0ACD                        l2219 09BA  
                      l2227 0CA5                        l2243 0ACF                        l2228 0CA7  
                      l2244 0AD1                        l2252 0DD8                        l2260 0038  
                      l1429 08D9                        l2229 0CB7                        l2245 0AD3  
                      l2237 0ABF                        l2253 0E31                        l2261 0069  
                      l2246 0AF5                        l2238 0ACA                        l2254 0DF6  
                      l2270 007B                        l2262 0039                        l2239 0AE2  
                      l2247 0ADF                        l2255 0E0D                        l2271 028C  
                      l2263 007A                        l2248 0AF4                        l2256 0E3A  
                      l2280 0198                        l2272 0081                        l2264 0041  
                      l2249 0AF5                        l2281 01BD                        l2273 00A4  
                      l2265 0049                        l2290 0293                        l2282 01D5  
                      l2274 00BF                        l2266 0051                        l2291 0294  
                      l2283 01D9                        l2275 00F0                        l2267 0059  
                      l2259 0023                        l2292 0294                        l2276 00F1  
                      l2268 0066                        l2269 0276                        l2285 01D8  
                      l2277 011A                        l2286 026C                        l2278 0134  
                      l1399 1728                        l2287 026D                        l2279 0161  
                      l2288 026E                        l2289 0274                        l6020 0C2F  
                      l3711 1709                        l6023 0F84                        l3712 1709  
                      l3720 0BAB                        l6032 0E70                        l6024 0FA3  
                      l3713 170E                        l6017 1786                        l3721 0BCB  
                      l6033 0E8E                        l6025 0FC8                        l3714 1714  
                      l3722 0BDC                        l6034 0EC2                        l6026 0FA4  
                      l6027 0FB1                        l4540 0B3A                        l6028 0FE1  
                      l4541 0AFB                        l3717 0B9D                        l6029 0FFF  
                      l4542 0AFC                        l3718 0BA4                        l4543 0B0D  
                      l3719 0BC1                        l4544 0B0E                        l4560 0606  
                      l4545 0B20                        l4553 0608                        l4561 0615  
                      l4538 0B28                        l4546 0B21                        l4554 04D3  
                      l4547 0B3C                        l4539 0AFA                        l4555 0537  
                      l4548 0B26                        l4556 054A                        l4557 0615  
                      l4558 0592                        l4559 05DD                        l2995 0C45  
                      l7500 0A99                        l2996 0C66                        l7501 0AA7  
                      l2997 0C84                        l7502 0AAF                        l7620 0D69  
                      l6740 0931                        l6733 1760                        l7621 0DAF  
                      l6734 176D                        l7622 0D81                        l6743 178C  
                      l7623 0D75                        l6744 178B                        l7480 08E9  
                      l7624 0D86                        l6745 1797                        l7481 08FE  
                      l7625 0D87                        l6737 0908                        l6746 17AC  
                      l7482 0905                        l7490 0B76                        l7626 0DA0  
                      l6738 0907                        l7491 0B84                        l7627 0DAE  
                      l7619 0D5B                        l6739 0911                        l7492 0B8C  
                      l7628 0DB9                        l6780 0637                        l7485 0B85  
                      l7629 0DC0                        l6781 0632                        l7486 0B57  
                      l6782 0710                        l6790 068E                        l7479 08DF  
                      l7487 0B4B                        l7495 0AA8                        l6791 06AB  
                      l6783 0633                        l6768 098B                        l7488 0B5C  
                      l7496 0A82                        l6792 06F0                        l6784 0634  
                      l7489 0B5D                        l7497 0A76                        l6777 06FC  
                      l6793 06B0                        l6785 064C                        l7498 0A87  
                      l7690 0D13                        l6794 06FB                        l6786 0635  
                      l6778 061E                        l7499 0A88                        l7691 0D07  
                      l6795 070F                        l6787 0666                        l6779 0630  
                      l7692 0D18                        l6796 0715                        l6788 0671  
                      l7693 0D19                        l6789 0699                        l7694 0D2A  
                      l7695 0D38                        l7687 0CF3                        l7696 0D43  
                      l7688 0CFD                        l7697 0D4A                        l7689 0D39  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 0864                        STR_2 085B                        STR_3 0876  
                      STR_4 087F                        STR_5 086D                        STR_6 0852  
                      STR_7 08A3                        STR_8 08A7                        STR_9 088F  
                      _BRGH 04C2                        _CREN 00C4                        u4020 08FD  
                      u4100 0A72                        u4021 08FC                        u4005 08EA  
                      u4101 0A71                        u4030 0B47                        u4015 08F1  
                      u4031 0B46                        u4120 0A86                        u4200 0D85  
                      u4121 0A85                        u4201 0D84                        u4050 0B5B  
                      u4130 0A92                        u4051 0B5A                        u4131 0A91  
                      u4115 0A77                        u4220 0D98                        u4300 0D17  
                      u4045 0B4C                        u4221 0D97                        u4301 0D16  
                      u4070 0B6E                        u4150 0AA6                        u4310 0D23  
                      u4071 0B6D                        u4151 0AA5                        u4135 0A8E  
                      u4215 0D88                        u4311 0D22                        u5007 16E9  
                      u4240 0DAD                        u4160 0D52                        u4065 0B5E  
                      u4145 0A9A                        u4241 0DAC                        u4225 0D94  
                      u4161 0D51                        u5017 1723                        u4090 0B83  
                      u4250 0DB3                        u4170 0D5F                        u4330 0D37  
                      u4410 0B96                        u4091 0B82                        u4075 0B6A  
                      u4235 0DA1                        u4171 0D5E                        u4331 0D36  
                      u4315 0D1F                        u5027 173C                        u4411 0B95  
                      u3700 0B08                        u4180 0D71                        u4340 0D3D  
                      u4260 0CEA                        u4420 0BCB                        u4500 0389  
                      u3701 0B07                        u4085 0B77                        u4181 0D70  
                      u4325 0D2B                        u4261 0CE9                        u5037 0A1A  
                      u4421 0BCA                        u4501 0388                        u3710 0B1D  
                      u4270 0CF7                        u4430 0E51                        u4510 0392  
                      u3711 0B1C                        u4271 0CF6                        u4431 0E50  
                      u4511 0391                        u3480 17B6                        u3720 170D  
                      u4280 0D03                        u4520 03D6                        u4440 02A2  
                      u4600 066F                        u3481 17B5                        u3721 170C  
                      u4281 0D02                        u4425 0BC7                        u4521 03D5  
                      u4441 02A1                        u4601 066E                        u4530 03DF  
                      u4450 02AB                        u4610 068C                        u4195 0D76  
                      u4531 03DE                        u4451 02AA                        u4611 068B  
                      _PEIE 005E                        u4540 0423                        u4460 02EF  
                      u4620 0698                        u4700 0C43                        u4541 0422  
                      u4461 02EE                        u4621 0697                        u4701 0C42  
                      u4550 042C                        u4470 02F8                        u4630 069F  
                      u4710 0C65                        u3495 17C3                        u4295 0D08  
                      u4551 042B                        u4471 02F7                        u4631 069E  
                      u4615 0688                        u4711 0C64                        u3920 175B  
                      u4560 0470                        u4480 033C                        u4640 06FA  
                      u4720 0C9B                        u4800 0FE0                        u3921 175A  
                      u4561 046F                        u4481 033B                        u4641 06F9  
                      u4705 0C3F                        u4721 0C9A                        u4801 0FDF  
                      u3690 1797                        u3930 1768                        u4570 0479  
                      u4490 0345                        u4650 070E                        u4730 0AC3  
                      u4810 0027                        u3691 1796                        u3931 1767  
                      u4571 0478                        u4491 0344                        u4651 070D  
                      u4715 0C61                        u4731 0AC2                        u4811 0026  
                      _RCIE 0465                        u4580 0624                        u4660 0911  
                      u4740 0DD6                        u4900 01C3                        u4820 010F  
                      _RCIF 0065                        u4581 0623                        u4661 0910  
                      u4741 0DD5                        u4805 0FDC                        u4901 01C2  
                      u4821 010E                        u4590 065C                        u4670 095C  
                      u4750 0DE9                        u4910 01D0                        u4830 0129  
                      u4591 065B                        u4671 095B                        u4751 0DE8  
                      u4911 01CF                        u4831 0128                        u4680 04C4  
                      u4760 0E06                        u4840 0143                        u4761 0E05  
                      u4745 0DD2                        u4841 0142                        u4825 010B  
                      u4690 0524                        u4770 0E30                        u4850 0152  
                      u4691 0523                        u4771 0E2F                        u4755 0DE5  
                      u4915 01CC                        u4851 0151                        u4835 0125  
                      u4780 0F65                        u4860 0170                        u4781 0F64  
                      u4861 016F                        u4845 013F                        u3990 08E3  
                      u4790 0FAF                        u4870 017F                        u3991 08E2  
                      u4695 0520                        u4775 0E2C                        u4871 017E  
                      u4855 014E                        u4927 00AC                        u4880 01A7  
                      u4881 01A6                        u4865 016C                        u4937 00C7  
                      u4890 01B6                        _OERR 00C1                        u4947 01F8  
                      u4891 01B5                        u4875 017B                        u4957 023C  
                      u4885 01A3                        u4967 0259                        u4895 01B2  
                      u4977 0BEF                        u4987 0C12                        u4997 0BB4  
                      _TMR0 0001                  _ChargeMode 0AB0                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 0AF6      __end_of_lcd_write_data 16EE                        _isr1 0716  
                      _main 0015                        _init 098C                        _test 00BC  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073                       ?_Menu 0072                       l11001 08AF  
                     l11011 08BB                       l11003 08B3                       l11013 08C1  
                     l11005 08B6                       l11021 0BDD                       l11101 05DD  
                     l11015 08C7                       l11007 08B7                       l11031 0C17  
                     l11023 0BE9                       l11103 05E9                       l11111 0C30  
                     l11017 08CD                       l11009 08BA                       l11033 0C23  
                     l11025 0BF4                       l11041 098C                       l11105 05F4  
                     l11121 0C58                       l11113 0C36                       l11201 0E23  
                     l10411 095E                       l11019 08D3                       l11027 0C00  
                     l11035 173F                       l11051 099F                       l11043 098D  
                     l11107 0607                       l11115 0C44                       l11123 0C66  
                     l11131 0C9B                       l11203 0E31                       l11211 0F65  
                     l10421 096D                       l10413 0961                       l11029 0C06  
                     l11037 174D                       l11061 09B7                       l11053 09A4  
                     l11045 0995                       l11109 0608                       l11117 0C45  
                     l11141 0CC3                       l11133 0C9C                       l11125 0C85  
                     l11205 0E3A                       l11221 0FB1                       l11213 0F84  
                     l11301 0134                       l10431 097A                       l10423 0970  
                     l10415 0969                       l10271 176A                       l11039 1754  
                     l11063 09B8                       l11055 09A9                       l11047 0997  
                     l11071 04D9                       l11119 0C52                       l11151 0CCE  
                     l11143 0CC5                       l11135 0CA7                       l11127 0C8A  
                     l11223 0FC2                       l11215 0FA4                       l11207 0F5B  
                     l11311 0170                       l11303 0143                       l11231 001B  
                     l10433 097B                       l10425 0973                       l10417 096A  
                     l10441 1798                       l10601 176D                       l10273 176C  
                     l11065 09B9                       l11057 09AE                       l11049 099B  
                     l11081 0537                       l11073 04FE                       l11145 0CC9  
                     l11137 0CB5                       l11153 0CCF                       l11129 0C97  
                     l11161 0AC3                       l11217 0FA9                       l11225 0FC8  
                     l11209 0F5F                       l11321 01A7                       l11313 017F  
                     l11305 0152                       l11241 002D                       l11233 001D  
                     l10291 17D5                       l10283 17AD                       l10435 097C  
                     l10427 0976                       l10419 096C                       l10443 17A2  
                     l10451 0AFC                       l11059 09B3                       l11091 059E  
                     l11083 054A                       l11075 050F                       l11067 04BA  
                     l11147 0CCA                       l11139 0CB7                       l11171 0ADE  
                     l11163 0AC4                       l11155 0AB0                       l11219 0FB0  
                     l11227 0FE1                       l11331 01D6                       l11323 01B6  
                     l11315 0190                       l11307 015C                       l11251 0047  
                     l11243 0032                       l11235 0023                       l10285 17B0  
                     l10429 0977                       l10445 17A8                       l10437 178A  
                     l10461 0B21                       l10453 0B04                       l10701 0D5F  
                     l11093 05A9                       l11085 0550                       l11077 0515  
                     l11069 04D3                       l11149 0CCC                       l11173 0AE1  
                     l11165 0AD3                       l11157 0AB8                       l11181 0DD7  
                     l11341 0229                       l11333 01D7                       l11325 01BD  
                     l11317 0195                       l11309 0161                       l11261 0059  
                     l11253 0049                       l11245 0039                       l11237 0027  
                     l11229 0015                       l10287 17B9                       l10447 17AB  
                     l10439 178C                       l10471 0B3C                       l10463 0B25  
                     l10455 0B08                       l10711 0D75                       l10703 0D64  
                     l11095 05BA                       l11087 0567                       l11079 0524  
                     l11167 0AD9                       l11175 0AE2                       l11159 0ABF  
                     l11191 0E02                       l11183 0DD8                       l11351 026E  
                     l11343 0234                       l11327 01C3                       l11335 01D9  
                     l11319 0198                       l11271 0081                       l11263 0064  
                     l11255 004F                       l11247 003F                       l11239 0028  
                     l10289 17CC                       l10465 0B27                       l10457 0B0E  
                     l10449 0AF9                       l10481 1714                       l10473 1704  
                     l10641 08F0                       l10721 0D9E                       l10713 0D7C  
                     l10705 0D69                       l10801 0A18                       l11097 05C0  
                     l11089 0592                       l11169 0ADA                       l11193 0E06  
                     l11185 0DDD                       l11177 0DC1                       l11353 0275  
                     l11345 0243                       l11337 01F0                       l11329 01D0  
                     l11281 00CE                       l11273 008E                       l11265 0068  
                     l11257 0051                       l11249 0041                       l10459 0B1D  
                     l10467 0B28                       l10475 1706                       l10643 08FE  
                     l10635 08DA                       l10651 0B47                       l10731 0DB9  
                     l10723 0DA0                       l10715 0D81                       l10707 0D6B  
                     l10803 0A1C                       l10811 1730                       l11099 05D1  
                     l11195 0E07                       l11187 0DE9                       l11179 0DC9  
                     l11347 0251                       l11339 01FF                       l11291 0100  
                     l11283 00D9                       l11275 00A4                       l11259 0057  
                     l11355 0276                       l11267 0069                       l10469 0B3A  
                     l10477 170E                       l10645 0905                       l10637 08DF  
                     l10661 0B6E                       l10653 0B4B                       l10733 0DC0  
                     l10725 0DA7                       l10717 0D87                       l10709 0D71  
                     l10741 0CF7                       l10805 0A25                       l10813 1734  
                     l10821 171D                       l10901 03DF                       l11197 0E0D  
                     l11189 0DF6                       l11349 0260                       l11293 0102  
                     l11285 00E4                       l11277 00B3                       l11357 028C  
                     l11269 007B                       l10479 1712                       l10591 175D  
                     l10639 08E3                       l10671 0B8C                       l10663 0B74  
                     l10655 0B52                       l10647 0B3D                       l10719 0D98  
                     l10727 0DAF                       l10751 0D13                       l10743 0CFD  
                     l10735 0CE3                       l10815 1738                       l10807 1729  
                     l10823 171E                       l10831 16E4                       l10911 0470  
                     l10903 0419                       l11199 0E1B                       l11295 010F  
                     l11287 00F1                       l11279 00BF                       l10593 175F  
                     l10665 0B76                       l10657 0B57                       l10649 0B41  
                     l10681 0A82                       l10673 0A6A                       l10729 0DB3  
                     l10753 0D19                       l10745 0D03                       l10761 0D39  
                     l10737 0CEA                       l10809 172C                       l10817 1718  
                     l10825 16DE                       l10833 176E                       l10841 0B9D  
                     l10913 0479                       l10905 0423                       l10921 062B  
                     l11297 011A                       l11289 00FE                       l10595 1760  
                     l10587 1755                       l10667 0B7D                       l10659 0B5D  
                     l10683 0A88                       l10675 0A72                       l10691 0AA8  
                     l10763 0D3D                       l10755 0D23                       l10747 0D07  
                     l10739 0CF3                       l10819 171B                       l10827 16E1  
                     l10851 0BCD                       l10843 0BA4                       l10835 0B8D  
                     l10907 042C                       l10931 0658                       l10923 0636  
                     l10915 0619                       l11299 0129                       l10597 1768  
                     l10589 175B                       l10669 0B85                       l10693 0AAF  
                     l10685 0A92                       l10677 0A76                       l10765 0D43  
                     l10757 0D2A                       l10749 0D0E                       l10829 16E3  
                     l10861 0BD9                       l10853 0BD3                       l10845 0BA7  
                     l10837 0B91                       l10909 0466                       l10941 0670  
                     l10933 065C                       l10925 0637                       l10917 061E  
                     l10599 176A                       l10687 0A99                       l10679 0A7D  
                     l10695 0D4B                       l10767 0D4A                       l10759 0D31  
                     l10791 09EE                       l10855 0BD6                       l10847 0BA8  
                     l10839 0B96                       l10871 0E70                       l10863 0E3B  
                     l10951 0699                       l10943 0671                       l10935 0660  
                     l10927 064C                       l10919 0624                       l10689 0AA0  
                     l10697 0D52                       l10793 0A03                       l10857 0BD7  
                     l10849 0BB0                       l10865 0E43                       l10881 02EF  
                     l10873 0297                       l10961 06E4                       l10953 069F  
                     l10945 068D                       l10937 0666                       l10929 0654  
                     l10699 0D5B                       l10795 0A05                       l10859 0BD8  
                     l10867 0E4B                       l10891 037F                       l10883 02F8  
                     l10875 02A2                       l10971 0715                       l10963 06EB  
                     l10955 06A6                       l10947 068E                       l10939 0669  
                     l10797 0A06                       l10869 0E51                       l10893 0389  
                     l10885 0332                       l10877 02AB                       l10965 06F0  
                     l10957 06AB                       l10949 0692                       l10981 0924  
                     l10973 0906                       l10799 0A07                       l10895 0392  
                     l10887 033C                       l10879 02E5                       l10959 06B0  
                     l10967 06FC                       l10983 092C                       l10975 0908  
                     l10991 16D4                       l10897 03CC                       l10889 0345  
                     l10969 0710                       l10985 092D                       l10977 0912  
                     l10993 0932                       l10899 03D6                       l10987 0931  
                     l10979 091E                       l10995 0933                       l10989 16D3  
                     l10997 0943                       l10999 094C        __size_of_calibrateIR 005E  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
           __end_of___awdiv 0DC1                       _EEADR 010D                       STR_10 089B  
                     STR_11 08AB                       STR_12 089F                       STR_13 083A  
                     STR_14 082A                       STR_15 0893                       STR_16 0887  
                     STR_17 0897                       STR_18 081A                       STR_19 0849  
           __end_of___awmod 0D4B                       _CARRY 0018             ___awdiv@divisor 0026  
           __end_of___lwdiv 0B8D             __end_of___lwmod 0AB0             ___awdiv@counter 002B  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _SSPIF 0063  
                     _TXREG 0019      lcd_write_data@databyte 0022          i1___lwmod@dividend 0074  
           __end_of_scan360 0E3B                       _total 00BE              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00D3             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0716            __end_of_Debounce 0F5B          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 0B3D  
__size_of_lcd_write_control 0014            _shortMenuStrings 00DB                __end_of_isr1 07F3  
              __end_of_main 0297                __end_of_init 09BB             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0061                      ??_init 0023  
       __end_of_ReadButtons 09EB               Menu@BTN_input 0020                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          ___awdiv@dividend 0028            __end_of_adc_read 17D6                 ?_ChargeMode 0072  
                    i1l2210 078C                      i1l2211 079A                      i1l2212 07BD  
                    i1l2213 07BC                      i1l2214 07E7                      i1l2206 079B  
                    i1l2215 07E6                      i1l2207 073D                      i1l2216 07E7  
                    i1l2208 0756                      i1l2209 076F                      i1l4520 0F1D  
                    i1l4512 0EDD                      i1l4521 0F37                      i1l4513 0EDC  
                    i1l4522 0F36                      i1l4514 0EE1                      i1l4530 09C8  
                    i1l4523 0F3B                      i1l4515 0EFB                      i1l4531 09EA  
                    i1l4524 0F55                      i1l4516 0EFA                      i1l4532 09D0  
                    i1l4525 0F54                      i1l4517 0EFF                      i1l4533 09D8  
                    i1l4526 0F5A                      i1l4518 0F19                      i1l4534 09E0  
                    i1l4527 0F5A                      i1l4519 0F18                      i1l4535 09E8  
                    i1l7500 0A53                      i1l7501 0A61                      i1l7502 0A69  
                    i1l7495 0A62                      i1l7496 0A3C                      i1l7497 0A30  
                    i1l7498 0A41                      i1l7499 0A42                      u440_20 0A60  
                    u360_20 07B7                      u440_21 0A5F                      u360_21 07B6  
                    u361_20 07C2                      u353_20 071A                      u361_21 07C1  
                    u353_21 0719                      u362_20 07C8                      u354_20 073B  
                    u362_21 07C7                      u354_21 073A                      u435_20 0A2C  
                    u363_20 07E2                      u355_20 0754                      u435_21 0A2B  
                    u363_21 07E1                      u355_21 0753                      u380_20 0EE7  
                    u364_20 09C4                      u356_20 076D                      u380_21 0EE6  
                    u364_21 09C3                      u356_21 076C                      u436_25 0A31  
                    u381_20 0EF3                      u437_20 0A40                      u365_20 09CC  
                    u357_20 0786                      u381_21 0EF2                      u437_21 0A3F  
                    u365_21 09CB                      u357_21 0785                      u390_20 0F4D  
                    u382_20 0EF7                      u438_20 0A4C                      u366_20 09D4  
                    u358_20 0791                      u390_21 0F4C                      u382_21 0EF6  
                    u438_21 0A4B                      u366_21 09D3                      u358_21 0790  
               _DistLowByte 00C5                      u438_25 0A48                      u391_20 0F51  
                    u383_20 0F05                      u367_20 09DC                      u359_20 07A1  
                    u391_21 0F50                      u383_21 0F04                      u367_21 09DB  
                    u359_21 07A0                      u439_25 0A54                      u384_20 0F11  
                    u368_20 09E4                      u384_21 0F10                      u368_21 09E3  
                    u385_20 0F15                      u377_20 0EC9                      u385_21 0F14  
                    u377_21 0EC8                      u386_20 0F23                      u378_20 0ED5  
                    u386_21 0F22                      u378_21 0ED4                      u387_20 0F2F  
                    u379_20 0ED9                      u387_21 0F2E                      u379_21 0ED8  
                    u388_20 0F33                      u388_21 0F32                      u389_20 0F41  
                    u389_21 0F40                      _TMR0IE 005D                      _TMR0IF 005A  
              scan360@steps 005F                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038E            __end_of_lcd_init 08DA                      _adcVal 006D  
           _UpDebounceCount 00C9                      ___wmul 08DA                   ??___awdiv 002A  
                 ??___awmod 0024                _turnhighByte 00D2                ??_ADCconvert 002E  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 173F  
            ??_readDistance 002A            ___awdiv@quotient 002D             ___awmod@divisor 0020  
  __end_of_lcd_write_string 095E             ___awmod@counter 0025                      _rotate 0B8D  
                    _rxfifo 00A0                      clrloop 16C9                      _txfifo 01A0  
                    _rxiptr 00CE                      _rxoptr 00CF                 _BumpSensors 00C2  
                    _txiptr 006F                   ??_scan360 005B                      _txoptr 00D4  
          __end_of_ser_init 098C            __end_of_ser_isrx 176E           __end_ofi1___lwmod 0A6A  
                    saved_w 007E               main@shortwall 0069                 _LeftPressed 0384  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 04BA              __pcstackCOMMON 0072                __pidataBANK1 07F3  
               _ReadButtons 09BB         __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 007D                  __pbssBANK0 006D  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00C6  
            main@direction1 0064          _RightDebounceCount 00C8                  __pmaintext 0015  
         robotTurn@distance 0022                     ?___wmul 0020                  __pintentry 0004  
              _DistHighByte 00C4       __end_of_UpdateDisplay 0616          __size_of_ser_getch 002C  
                 ?_adc_read 0020                     ?_rotate 0023          __size_of_ser_putch 0026  
        __size_of_robo_init 0019                     i1l10401 09E4                     i1l10321 071A  
                   i1l10403 09E5                     i1l10331 073D                     i1l10323 071B  
                   i1l10405 09E7                     i1l10341 0786                     i1l10333 0754  
                   i1l10325 0725          __size_of_robotMove 00A5                     i1l10407 09E8  
                   i1l10351 07A1                     i1l10343 0787                     i1l10335 0756  
                   i1l10327 0726                     i1l10319 0716                     i1l10409 09EA  
                   i1l10361 07C2                     i1l10353 07AB                     i1l10345 078C  
                   i1l10337 076D                     i1l10329 073B                     i1l10371 07E2  
                   i1l10363 07C8                     i1l10355 07B1                     i1l10347 0791  
                   i1l10339 076F                     i1l10381 09C7                     i1l10373 09BB  
                   i1l10365 07D0                     i1l10357 07B7                     i1l10349 079B  
                   i1l10551 0ED5                     i1l10391 09D5                     i1l10383 09CC  
                   i1l10375 09C0                     i1l10367 07D6                     i1l10359 07BD  
                   i1l10561 0EF7                     i1l10553 0ED9                     i1l10545 0EC3  
                   i1l10393 09D7                     i1l10385 09CD                     i1l10377 09C4  
                   i1l10369 07DA                     i1l10571 0F23                     i1l10563 0F05  
                   i1l10555 0EE7                     i1l10547 0EC9                     i1l10395 09DC  
                   i1l10387 09CF                     i1l10379 09C5                     i1l10581 0F47  
                   i1l10573 0F29                     i1l10565 0F0B                     i1l10557 0EED  
                   i1l10549 0ECF                     i1l10397 09DD                     i1l10389 09D4  
                   i1l10583 0F4D                     i1l10575 0F2F                     i1l10567 0F11  
                   i1l10559 0EF3                     i1l10399 09DF                     i1l10585 0F51  
                   i1l10577 0F33                     i1l10569 0F15                     i1l10579 0F41  
                   i1l10771 0A2C                     i1l10781 0A4C                     i1l10773 0A30  
                   i1l10783 0A53                     i1l10775 0A37                     i1l10785 0A5A  
                   i1l10777 0A3C                     i1l10769 0A26                     i1l10779 0A42  
                   i1l10787 0A62                     i1l10789 0A69          __size_of_robotTurn 0088  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 1755                   ?_init_adc 0072  
                 ?_ser_init 0072                   ?_ser_isrx 0072               ??_calibrateIR 0059  
                   ___awdiv 0D4B                     ___awmod 0CE3             __size_of___wmul 002C  
                   ___lwdiv 0B3D                     ___lwmod 0A6A   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 0DC1  
                   _dpowers 0810            ___awmod@dividend 0022                     _lowByte 00CD  
                   _ser_tmp 00D0                     _sprintf 0616                  ??_lcd_init 0023  
      end_of_initialization 17FC                ??_ChargeMode 0059           __end_of_ser_getch 0932  
                   init_ram 16F2                  ??_init_adc 0020           __end_of_ser_putch 17AD  
         __end_of_robo_init 1787           __end_of_robotMove 1000                _LeftReleased 0385  
         __end_of_robotTurn 0EC3                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038C  
  __size_of_readAvgDistance 0055                  _robot_read 0BDD           ?_lcd_write_string 0027  
        __end_of_ChargeMode 0AF6         __end_of_calibrateIR 0CE3          ??_lcd_write_string 0029  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
                 i1___lwmod 0A26                  _totalSteps 00C0                  main@choice 0068  
             ?_spi_transfer 0072               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 0906           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 0BDD         start_initialization 17D6       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038D              _RTC_FLAG_250MS 0388  
            _RTC_FLAG_500MS 0389                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 0C85                 __pdataBANK1 00D5            _adc_read_channel 09EB  
               ?_robot_read 0072                    ??_rotate 0026                _readDistance 173F  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020           __size_of_lcd_init 002B                 sprintf@_val 003F  
               sprintf@flag 003D           robotMove@distance 0059                 sprintf@prec 003E  
              _current_step 00E1            readAvgDistance@i 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                    ?___awdiv 0026                    ?___awmod 0020  
                 __ptext930 173F                   __ptext931 0BDD                   __ptext923 0F5B  
                 __ptext940 176E                   __ptext932 08AF                   __ptext924 0DC1  
                 __ptext941 16DB                   __ptext933 0932                   __ptext925 0AB0  
                 __ptext950 1755                   __ptext942 1715                   __ptext934 16D0  
                 __ptext926 0C85                   __ptext951 1701                   __ptext943 1729  
                 __ptext935 0906                   __ptext927 0C30                   __ptext960 0000  
                 __ptext952 0AF6                   __ptext944 09EB                   __ptext936 0616  
                 __ptext928 04BA                   __ptext953 1787                   __ptext945 0CE3  
                 __ptext937 0297                   __ptext929 098C                   __ptext954 095E  
                 __ptext946 0D4B                   __ptext938 0E3B                   __ptext955 17AD  
                 __ptext947 0A6A                   __ptext939 0B8D                   __ptext956 0716  
                 __ptext948 0B3D                   __ptext957 09BB                   __ptext949 08DA  
                 __ptext958 0A26                   __ptext959 0EC3           __size_of_ser_init 002E  
         __size_of_ser_isrx 0019                    ?___lwdiv 0026                    ?___lwmod 002E  
                 __pstrings 0800                   _dist_high 00B4                    ?_scan360 0059  
       readDistance@fullval 002C                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034     __size_of_lcd_set_cursor 000B  
         interrupt_function 0004      __size_of_UpdateDisplay 015C              ___wmul@product 0024  
       __size_of_robot_read 0053                  ser_putch@c 0021                   _ser_getch 0906  
                 _ser_putch 1787                   _robo_init 176E                   _robotMove 0F5B  
                 _robotTurn 0E3B                _RightPressed 038B        __size_of_ReadButtons 0030  
      __end_of_spi_transfer 1715                 __stringbase 080F           ___wmul@multiplier 0020  
    UpdateDisplay@adcOutput 0049            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 0EC3           _LeftDebounceCount 00C7   __size_of_lcd_write_string 002C  
        scan360@lowestSteps 005D     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027               _RTC_FLAG_10MS 0386  
             _RTC_FLAG_50MS 038A                  ?_robo_init 0072                   init_fetch 16EE  
                ?_robotMove 0059                  ?_robotTurn 0022                  _ADCconvert 0297  
          __size_of___awdiv 0076            __size_of___awmod 0068            __size_of___lwdiv 0050  
          __size_of___lwmod 0046               _UpdateDisplay 04BA                    _adc_read 17AD  
               _currentMenu 00CA            __size_of_scan360 007A             ___lwdiv@divisor 0026  
           ___lwdiv@counter 002D                 _menuStrings 00D5                    _highByte 00CC  
                  _lcd_init 08AF                    _distance 00B8                    _dist_low 00B6  
          __size_of_sprintf 0100    __end_of_adc_read_channel 0A26   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 1729               __size_of_isr1 00DD  
             __size_of_main 0282               __size_of_init 002F                    clear_ram 16C8  
                  _ser_init 095E                    _ser_isrx 1755                    main@RT2A 0066  
                  main@RT2P 006B             _readAvgDistance 0C30                ?_calibrateIR 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00C3  
              _RTC_FLAG_1MS 0387          UpdateDisplay@F1229 0190                    intlevel1 0000  
            _lcd_set_cursor 16D0                   sprintf@ap 003C                   sprintf@sp 0043  
          ___lwmod@dividend 0030          __end_of_robot_read 0C30                   stringcode 080A  
               ??_ser_getch 0020                 _serialInput 00D1                 ??_ser_putch 0020  
             _distTravelled 00B2                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotMove 005B                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 1715            scan360@lowestVal 005B          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
           ___lwmod@divisor 002E             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 16DB  
          _lcd_write_string 0932                _spi_transfer 1701           _current_direction 00CB  
               _RTC_Counter 00B0     __end_of_readAvgDistance 0C85              _lcd_write_data 16DB  
