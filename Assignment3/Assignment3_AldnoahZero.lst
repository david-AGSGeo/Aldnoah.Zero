

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 11 17:16:28 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotFollow
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_robotTurn
    60                           	FNCALL	_main,_ChargeMode
    61                           	FNCALL	_ChargeMode,_ser_putch
    62                           	FNCALL	_ChargeMode,_UpdateDisplay
    63                           	FNCALL	_robotFollow,_RobotDrive
    64                           	FNCALL	_robotFollow,_readAvgDistance
    65                           	FNCALL	_robotFollow,_robot_read
    66                           	FNCALL	_robotFollow,_UpdateDisplay
    67                           	FNCALL	_robotFollow,_abs
    68                           	FNCALL	_robotFollow,___awtoft
    69                           	FNCALL	_robotFollow,___ftge
    70                           	FNCALL	_robotFollow,___ftdiv
    71                           	FNCALL	_robotFollow,___ftmul
    72                           	FNCALL	_robotFollow,___fttol
    73                           	FNCALL	_robotMoveSpeed,_RobotDrive
    74                           	FNCALL	_robotMoveSpeed,_robot_read
    75                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    76                           	FNCALL	_robotMoveSpeed,_abs
    77                           	FNCALL	_robotMoveSpeed,___awtoft
    78                           	FNCALL	_robotMoveSpeed,___ftge
    79                           	FNCALL	_robotMoveSpeed,___ftdiv
    80                           	FNCALL	_robotMoveSpeed,___ftmul
    81                           	FNCALL	_robotMoveSpeed,___fttol
    82                           	FNCALL	_scan360,_readAvgDistance
    83                           	FNCALL	_scan360,_rotate
    84                           	FNCALL	_scan360,_UpdateDisplay
    85                           	FNCALL	_calibrateIR,_rotate
    86                           	FNCALL	_calibrateIR,_UpdateDisplay
    87                           	FNCALL	_UpdateDisplay,_lcd_write_control
    88                           	FNCALL	_UpdateDisplay,_sprintf
    89                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    90                           	FNCALL	_UpdateDisplay,_lcd_write_string
    91                           	FNCALL	_UpdateDisplay,___awmod
    92                           	FNCALL	_readAvgDistance,_readDistance
    93                           	FNCALL	_readAvgDistance,___lwdiv
    94                           	FNCALL	_readAvgDistance,_ADCconvert
    95                           	FNCALL	_init,_ser_init
    96                           	FNCALL	_init,_init_adc
    97                           	FNCALL	_init,_lcd_init
    98                           	FNCALL	_init,_robo_init
    99                           	FNCALL	_readDistance,_adc_read_channel
   100                           	FNCALL	_robot_read,_ser_putch
   101                           	FNCALL	_robot_read,_ser_getch
   102                           	FNCALL	_lcd_init,_lcd_write_control
   103                           	FNCALL	_lcd_write_string,_lcd_write_data
   104                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   105                           	FNCALL	___awtoft,___ftpack
   106                           	FNCALL	___ftmul,___ftpack
   107                           	FNCALL	___ftdiv,___ftpack
   108                           	FNCALL	_abs,___wmul
   109                           	FNCALL	_RobotDrive,_ser_putch
   110                           	FNCALL	_ser_getch,_ser_isrx
   111                           	FNCALL	_sprintf,___lwdiv
   112                           	FNCALL	_sprintf,___lwmod
   113                           	FNCALL	_ADCconvert,___wmul
   114                           	FNCALL	_ADCconvert,___lwdiv
   115                           	FNCALL	_robotTurn,_ser_putch
   116                           	FNCALL	_rotate,_spi_transfer
   117                           	FNCALL	_robo_init,_ser_putch
   118                           	FNCALL	_adc_read_channel,_adc_read
   119                           	FNROOT	_main
   120                           	FNCALL	_isr1,i1___lwmod
   121                           	FNCALL	_isr1,_ReadButtons
   122                           	FNCALL	_ReadButtons,_Debounce
   123                           	FNCALL	intlevel1,_isr1
   124                           	global	intlevel1
   125                           	FNROOT	intlevel1
   126                           	global	_menuStrings
   127                           	global	_shortMenuStrings
   128                           	global	_current_step
   129                           psect	idataBANK1,class=CODE,space=0,delta=2
   130                           global __pidataBANK1
   131  1004                     __pidataBANK1:
   132                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   133                           	line	49
   134                           
   135                           ;initializer for _menuStrings
   136  1004  3453               	retlw	(STR_1-__stringbase)&0ffh
   137  1005  344A               	retlw	(STR_2-__stringbase)&0ffh
   138  1006  3465               	retlw	(STR_3-__stringbase)&0ffh
   139  1007  346E               	retlw	(STR_4-__stringbase)&0ffh
   140  1008  345C               	retlw	(STR_5-__stringbase)&0ffh
   141  1009  3441               	retlw	(STR_6-__stringbase)&0ffh
   142                           	line	50
   143                           
   144                           ;initializer for _shortMenuStrings
   145  100A  3492               	retlw	(STR_7-__stringbase)&0ffh
   146  100B  3496               	retlw	(STR_8-__stringbase)&0ffh
   147  100C  347E               	retlw	(STR_9-__stringbase)&0ffh
   148  100D  348A               	retlw	(STR_10-__stringbase)&0ffh
   149  100E  349A               	retlw	(STR_11-__stringbase)&0ffh
   150  100F  348E               	retlw	(STR_12-__stringbase)&0ffh
   151                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   152                           	line	45
   153                           
   154                           ;initializer for _current_step
   155  1010  343C               	retlw	03Ch
   156                           	global	_dpowers
   157                           psect	strings,class=STRING,delta=2
   158                           global __pstrings
   159  0800                     __pstrings:
   160                           ;	global	stringdir,stringtab,__stringbase
   161  0800                     stringtab:
   162                           ;	String table - string pointers are 1 byte each
   163  0800  1BFF               	btfsc	(btemp+1),7
   164  0801  280A               	ljmp	stringcode
   165  0802  1383               	bcf	status,7
   166  0803  187F               	btfsc	(btemp+1),0
   167  0804  1783               	bsf	status,7
   168  0805  0800               	movf	indf,w
   169  0806  0A84               	incf fsr
   170  0807  1903               skipnz
   171  0808  0AFF               incf btemp+1
   172  0809  0008               	return
   173  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   174  080A  3008               movlw high(stringdir)
   175  080B  008A               movwf pclath
   176  080C  0804               movf fsr,w
   177  080D  0A84               incf fsr
   178  080E  0782               	addwf pc
   179  080F                     __stringbase:
   180  080F  3400               	retlw	0
   181                           psect	strings
   182                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   183                           	line	350
   184  0810                     _dpowers:
   185  0810  3401               	retlw	01h
   186  0811  3400               	retlw	0
   187                           
   188  0812  340A               	retlw	0Ah
   189  0813  3400               	retlw	0
   190                           
   191  0814  3464               	retlw	064h
   192  0815  3400               	retlw	0
   193                           
   194  0816  34E8               	retlw	0E8h
   195  0817  3403               	retlw	03h
   196                           
   197  0818  3410               	retlw	010h
   198  0819  3427               	retlw	027h
   199                           
   200                           	global	_dpowers
   201                           	global	UpdateDisplay@F1249
   202                           	global	_rxfifo
   203                           	global	_txfifo
   204                           	global	_buttonPressed
   205                           	global	_CenterPressed
   206                           	global	_CenterReleased
   207                           	global	_DownPressed
   208                           	global	_DownReleased
   209                           	global	_LeftPressed
   210                           	global	_LeftReleased
   211                           	global	_RTC_FLAG_1MS
   212                           	global	_RTC_FLAG_250MS
   213                           	global	_RTC_FLAG_500MS
   214                           	global	_RightPressed
   215                           	global	_RightReleased
   216                           	global	_UpPressed
   217                           	global	_UpReleased
   218                           	global	_Disp1
   219                           	global	_Disp2
   220                           	global	_IRdistance
   221                           	global	_RTC_Counter
   222                           	global	_TotalDistTravelled
   223                           	global	_adcVal
   224                           	global	_angleTurned
   225                           	global	_distTravelled
   226                           	global	_dist_high
   227                           	global	_dist_low
   228                           	global	_pos
   229                           	global	_total
   230                           	global	_totalSteps
   231                           	global	_AngleHighByte
   232                           	global	_AngleLowByte
   233                           	global	_BumpSensors
   234                           	global	_CenterDebounceCount
   235                           	global	_DistHighByte
   236                           	global	_DistLowByte
   237                           	global	_DownDebounceCount
   238                           	global	_LeftDebounceCount
   239                           	global	_ROBOTerror
   240                           	global	_RightDebounceCount
   241                           	global	_UpDebounceCount
   242                           	global	_VwallSensor
   243                           	global	_currentMenu
   244                           	global	_highByte
   245                           	global	_lowByte
   246                           	global	_rxiptr
   247                           	global	_rxoptr
   248                           	global	_ser_tmp
   249                           	global	_turnhighByte
   250                           	global	_turnlowByte
   251                           	global	_txiptr
   252                           	global	_txoptr
   253                           	global	_ADCON0
   254  001F                     _ADCON0	set	31
   255                           	global	_ADRESH
   256  001E                     _ADRESH	set	30
   257                           	global	_PORTA
   258  0005                     _PORTA	set	5
   259                           	global	_PORTD
   260  0008                     _PORTD	set	8
   261                           	global	_PORTE
   262  0009                     _PORTE	set	9
   263                           	global	_RCREG
   264  001A                     _RCREG	set	26
   265                           	global	_SSPBUF
   266  0013                     _SSPBUF	set	19
   267                           	global	_SSPCON
   268  0014                     _SSPCON	set	20
   269                           	global	_TMR0
   270  0001                     _TMR0	set	1
   271                           	global	_TXREG
   272  0019                     _TXREG	set	25
   273                           	global	AT25256A@CS0
   274  0038                     AT25256A@CS0	set	56
   275                           	global	AT25256A@CS1
   276  0039                     AT25256A@CS1	set	57
   277                           	global	_CARRY
   278  0018                     _CARRY	set	24
   279                           	global	_CHS0
   280  00FB                     _CHS0	set	251
   281                           	global	_CHS1
   282  00FC                     _CHS1	set	252
   283                           	global	_CHS2
   284  00FD                     _CHS2	set	253
   285                           	global	_CREN
   286  00C4                     _CREN	set	196
   287                           	global	_GIE
   288  005F                     _GIE	set	95
   289                           	global	_GO
   290  00FA                     _GO	set	250
   291                           	global	_OERR
   292  00C1                     _OERR	set	193
   293                           	global	_PEIE
   294  005E                     _PEIE	set	94
   295                           	global	_RB0
   296  0030                     _RB0	set	48
   297                           	global	_RB2
   298  0032                     _RB2	set	50
   299                           	global	_RB3
   300  0033                     _RB3	set	51
   301                           	global	_RB4
   302  0034                     _RB4	set	52
   303                           	global	_RB5
   304  0035                     _RB5	set	53
   305                           	global	_RB6
   306  0036                     _RB6	set	54
   307                           	global	_RC0
   308  0038                     _RC0	set	56
   309                           	global	_RC1
   310  0039                     _RC1	set	57
   311                           	global	_RC2
   312  003A                     _RC2	set	58
   313                           	global	_RCIF
   314  0065                     _RCIF	set	101
   315                           	global	_RE0
   316  0048                     _RE0	set	72
   317                           	global	_RE1
   318  0049                     _RE1	set	73
   319                           	global	_RE2
   320  004A                     _RE2	set	74
   321                           	global	_RX9
   322  00C6                     _RX9	set	198
   323                           	global	_SPEN
   324  00C7                     _SPEN	set	199
   325                           	global	_SSPIF
   326  0063                     _SSPIF	set	99
   327                           	global	_TMR0IE
   328  005D                     _TMR0IE	set	93
   329                           	global	_TMR0IF
   330  005A                     _TMR0IF	set	90
   331                           	global	_TXIF
   332  0064                     _TXIF	set	100
   333                           	global	_ADCON1
   334  009F                     _ADCON1	set	159
   335                           	global	_ADRESL
   336  009E                     _ADRESL	set	158
   337                           	global	_OPTION_REG
   338  0081                     _OPTION_REG	set	129
   339                           	global	_SPBRG
   340  0099                     _SPBRG	set	153
   341                           	global	_SSPSTAT
   342  0094                     _SSPSTAT	set	148
   343                           	global	_TRISA
   344  0085                     _TRISA	set	133
   345                           	global	_TRISB
   346  0086                     _TRISB	set	134
   347                           	global	_TRISC
   348  0087                     _TRISC	set	135
   349                           	global	_TRISD
   350  0088                     _TRISD	set	136
   351                           	global	_TRISE
   352  0089                     _TRISE	set	137
   353                           	global	_BRGH
   354  04C2                     _BRGH	set	1218
   355                           	global	_RCIE
   356  0465                     _RCIE	set	1125
   357                           	global	_SYNC
   358  04C4                     _SYNC	set	1220
   359                           	global	_TX9
   360  04C6                     _TX9	set	1222
   361                           	global	_TXEN
   362  04C5                     _TXEN	set	1221
   363                           	global	_TXIE
   364  0464                     _TXIE	set	1124
   365                           	global	_EEADR
   366  010D                     _EEADR	set	269
   367                           	global	_EEDATA
   368  010C                     _EEDATA	set	268
   369                           	global	_EECON1
   370  018C                     _EECON1	set	396
   371                           	global	_EECON2
   372  018D                     _EECON2	set	397
   373                           	global	_RD
   374  0C60                     _RD	set	3168
   375                           	global	_WR
   376  0C61                     _WR	set	3169
   377                           	global	_WREN
   378  0C62                     _WREN	set	3170
   379                           	
   380  081A                     STR_18:	
   381  081A  3420               	retlw	32	;' '
   382  081B  3443               	retlw	67	;'C'
   383  081C  3468               	retlw	104	;'h'
   384  081D  3461               	retlw	97	;'a'
   385  081E  3472               	retlw	114	;'r'
   386  081F  3467               	retlw	103	;'g'
   387  0820  3469               	retlw	105	;'i'
   388  0821  346E               	retlw	110	;'n'
   389  0822  3467               	retlw	103	;'g'
   390  0823  3420               	retlw	32	;' '
   391  0824  344D               	retlw	77	;'M'
   392  0825  346F               	retlw	111	;'o'
   393  0826  3464               	retlw	100	;'d'
   394  0827  3465               	retlw	101	;'e'
   395  0828  3420               	retlw	32	;' '
   396  0829  3400               	retlw	0
   397                           psect	strings
   398                           	
   399  082A                     STR_14:	
   400  082A  345A               	retlw	90	;'Z'
   401  082B  3465               	retlw	101	;'e'
   402  082C  3472               	retlw	114	;'r'
   403  082D  346F               	retlw	111	;'o'
   404  082E  3420               	retlw	32	;' '
   405  082F  3453               	retlw	83	;'S'
   406  0830  3474               	retlw	116	;'t'
   407  0831  3465               	retlw	101	;'e'
   408  0832  3470               	retlw	112	;'p'
   409  0833  345F               	retlw	95	;'_'
   410  0834  344D               	retlw	77	;'M'
   411  0835  346F               	retlw	111	;'o'
   412  0836  3474               	retlw	116	;'t'
   413  0837  346F               	retlw	111	;'o'
   414  0838  3472               	retlw	114	;'r'
   415  0839  3400               	retlw	0
   416                           psect	strings
   417                           	
   418  083A                     STR_13:	
   419  083A  3449               	retlw	73	;'I'
   420  083B  3452               	retlw	82	;'R'
   421  083C  343A               	retlw	58	;':'
   422  083D  3425               	retlw	37	;'%'
   423  083E  3464               	retlw	100	;'d'
   424  083F  3463               	retlw	99	;'c'
   425  0840  346D               	retlw	109	;'m'
   426  0841  3420               	retlw	32	;' '
   427  0842  3444               	retlw	68	;'D'
   428  0843  343A               	retlw	58	;':'
   429  0844  3425               	retlw	37	;'%'
   430  0845  3464               	retlw	100	;'d'
   431  0846  3400               	retlw	0
   432                           psect	strings
   433                           	
   434  0847                     STR_19:	
   435  0847  3420               	retlw	32	;' '
   436  0848  3420               	retlw	32	;' '
   437  0849  3445               	retlw	69	;'E'
   438  084A  3458               	retlw	88	;'X'
   439  084B  3449               	retlw	73	;'I'
   440  084C  3454               	retlw	84	;'T'
   441  084D  3420               	retlw	32	;' '
   442  084E  3420               	retlw	32	;' '
   443  084F  3400               	retlw	0
   444                           psect	strings
   445                           	
   446  0850                     STR_6:	
   447  0850  3420               	retlw	32	;' '
   448  0851  3443               	retlw	67	;'C'
   449  0852  3468               	retlw	104	;'h'
   450  0853  3461               	retlw	97	;'a'
   451  0854  3472               	retlw	114	;'r'
   452  0855  3467               	retlw	103	;'g'
   453  0856  3465               	retlw	101	;'e'
   454  0857  3420               	retlw	32	;' '
   455  0858  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  0859                     STR_2:	
   459  0859  3453               	retlw	83	;'S'
   460  085A  3463               	retlw	99	;'c'
   461  085B  3461               	retlw	97	;'a'
   462  085C  346E               	retlw	110	;'n'
   463  085D  345F               	retlw	95	;'_'
   464  085E  3433               	retlw	51	;'3'
   465  085F  3436               	retlw	54	;'6'
   466  0860  3430               	retlw	48	;'0'
   467  0861  3400               	retlw	0
   468                           psect	strings
   469                           	
   470  0862                     STR_1:	
   471  0862  3443               	retlw	67	;'C'
   472  0863  3461               	retlw	97	;'a'
   473  0864  346C               	retlw	108	;'l'
   474  0865  3469               	retlw	105	;'i'
   475  0866  3462               	retlw	98	;'b'
   476  0867  345F               	retlw	95	;'_'
   477  0868  3449               	retlw	73	;'I'
   478  0869  3452               	retlw	82	;'R'
   479  086A  3400               	retlw	0
   480                           psect	strings
   481                           	
   482  086B                     STR_5:	
   483  086B  3446               	retlw	70	;'F'
   484  086C  346C               	retlw	108	;'l'
   485  086D  3477               	retlw	119	;'w'
   486  086E  345F               	retlw	95	;'_'
   487  086F  3457               	retlw	87	;'W'
   488  0870  3461               	retlw	97	;'a'
   489  0871  346C               	retlw	108	;'l'
   490  0872  346C               	retlw	108	;'l'
   491  0873  3400               	retlw	0
   492                           psect	strings
   493                           	
   494  0874                     STR_3:	
   495  0874  3444               	retlw	68	;'D'
   496  0875  3472               	retlw	114	;'r'
   497  0876  3469               	retlw	105	;'i'
   498  0877  3476               	retlw	118	;'v'
   499  0878  3465               	retlw	101	;'e'
   500  0879  345F               	retlw	95	;'_'
   501  087A  3432               	retlw	50	;'2'
   502  087B  346D               	retlw	109	;'m'
   503  087C  3400               	retlw	0
   504                           psect	strings
   505                           	
   506  087D                     STR_4:	
   507  087D  3444               	retlw	68	;'D'
   508  087E  3472               	retlw	114	;'r'
   509  087F  3469               	retlw	105	;'i'
   510  0880  3476               	retlw	118	;'v'
   511  0881  3465               	retlw	101	;'e'
   512  0882  345F               	retlw	95	;'_'
   513  0883  344C               	retlw	76	;'L'
   514  0884  3400               	retlw	0
   515                           psect	strings
   516                           	
   517  0885                     STR_16:	
   518  0885  3443               	retlw	67	;'C'
   519  0886  344F               	retlw	79	;'O'
   520  0887  344E               	retlw	78	;'N'
   521  0888  3446               	retlw	70	;'F'
   522  0889  3449               	retlw	73	;'I'
   523  088A  3452               	retlw	82	;'R'
   524  088B  344D               	retlw	77	;'M'
   525  088C  3400               	retlw	0
   526                           psect	strings
   527                           	
   528  088D                     STR_9:	
   529  088D  3444               	retlw	68	;'D'
   530  088E  3472               	retlw	114	;'r'
   531  088F  3432               	retlw	50	;'2'
   532  0890  3400               	retlw	0
   533                           psect	strings
   534                           	
   535  0891                     STR_15:	
   536  0891  343C               	retlw	60	;'<'
   537  0892  343C               	retlw	60	;'<'
   538  0893  343C               	retlw	60	;'<'
   539  0894  3400               	retlw	0
   540                           psect	strings
   541                           	
   542  0895                     STR_17:	
   543  0895  343E               	retlw	62	;'>'
   544  0896  343E               	retlw	62	;'>'
   545  0897  343E               	retlw	62	;'>'
   546  0898  3400               	retlw	0
   547                           psect	strings
   548                           	
   549  0899                     STR_10:	
   550  0899  3444               	retlw	68	;'D'
   551  089A  3472               	retlw	114	;'r'
   552  089B  344C               	retlw	76	;'L'
   553  089C  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  089D                     STR_12:	
   557  089D  3443               	retlw	67	;'C'
   558  089E  3468               	retlw	104	;'h'
   559  089F  3467               	retlw	103	;'g'
   560  08A0  3400               	retlw	0
   561                           psect	strings
   562                           	
   563  08A1                     STR_7:	
   564  08A1  3443               	retlw	67	;'C'
   565  08A2  3461               	retlw	97	;'a'
   566  08A3  346C               	retlw	108	;'l'
   567  08A4  3400               	retlw	0
   568                           psect	strings
   569                           	
   570  08A5                     STR_8:	
   571  08A5  3453               	retlw	83	;'S'
   572  08A6  3463               	retlw	99	;'c'
   573  08A7  346E               	retlw	110	;'n'
   574  08A8  3400               	retlw	0
   575                           psect	strings
   576                           	
   577  08A9                     STR_11:	
   578  08A9  3446               	retlw	70	;'F'
   579  08AA  346C               	retlw	108	;'l'
   580  08AB  3477               	retlw	119	;'w'
   581  08AC  3400               	retlw	0
   582                           psect	strings
   583                           	file	"Assignment3_AldnoahZero.as"
   584                           	line	#
   585                           psect cinit,class=CODE,delta=2
   586                           global start_initialization
   587  107E                     start_initialization:
   588                           
   589                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   590                           global __pbitbssCOMMON
   591  0380                     __pbitbssCOMMON:
   592  0380                     _CenterPressed:
   593  0380                            ds      1
   594                           
   595  0381                     _CenterReleased:
   596  0381                            ds      1
   597                           
   598  0382                     _DownPressed:
   599  0382                            ds      1
   600                           
   601  0383                     _DownReleased:
   602  0383                            ds      1
   603                           
   604  0384                     _LeftPressed:
   605  0384                            ds      1
   606                           
   607  0385                     _LeftReleased:
   608  0385                            ds      1
   609                           
   610  0386                     _RTC_FLAG_1MS:
   611  0386                            ds      1
   612                           
   613  0387                     _RTC_FLAG_250MS:
   614  0387                            ds      1
   615                           
   616  0388                     _RTC_FLAG_500MS:
   617  0388                            ds      1
   618                           
   619  0389                     _RightPressed:
   620  0389                            ds      1
   621                           
   622  038A                     _RightReleased:
   623  038A                            ds      1
   624                           
   625  038B                     _UpPressed:
   626  038B                            ds      1
   627                           
   628  038C                     _UpReleased:
   629  038C                            ds      1
   630                           
   631                           psect	bssCOMMON,class=COMMON,space=1
   632                           global __pbssCOMMON
   633  007D                     __pbssCOMMON:
   634  007D                     _buttonPressed:
   635  007D                            ds      1
   636                           
   637                           psect	bssBANK1,class=BANK1,space=1
   638                           global __pbssBANK1
   639  00A0                     __pbssBANK1:
   640  00A0                     _Disp1:
   641  00A0                            ds      2
   642                           
   643  00A2                     _Disp2:
   644  00A2                            ds      2
   645                           
   646  00A4                     _IRdistance:
   647  00A4                            ds      2
   648                           
   649  00A6                     _RTC_Counter:
   650  00A6                            ds      2
   651                           
   652  00A8                     _TotalDistTravelled:
   653  00A8                            ds      2
   654                           
   655  00AA                     _adcVal:
   656  00AA                            ds      2
   657                           
   658  00AC                     _angleTurned:
   659  00AC                            ds      2
   660                           
   661  00AE                     _distTravelled:
   662  00AE                            ds      2
   663                           
   664  00B0                     _dist_high:
   665  00B0                            ds      2
   666                           
   667  00B2                     _dist_low:
   668  00B2                            ds      2
   669                           
   670  00B4                     _pos:
   671  00B4                            ds      2
   672                           
   673  00B6                     _total:
   674  00B6                            ds      2
   675                           
   676  00B8                     _totalSteps:
   677  00B8                            ds      2
   678                           
   679  00BA                     _AngleHighByte:
   680  00BA                            ds      1
   681                           
   682  00BB                     _AngleLowByte:
   683  00BB                            ds      1
   684                           
   685  00BC                     _BumpSensors:
   686  00BC                            ds      1
   687                           
   688  00BD                     _CenterDebounceCount:
   689  00BD                            ds      1
   690                           
   691  00BE                     _DistHighByte:
   692  00BE                            ds      1
   693                           
   694  00BF                     _DistLowByte:
   695  00BF                            ds      1
   696                           
   697  00C0                     _DownDebounceCount:
   698  00C0                            ds      1
   699                           
   700  00C1                     _LeftDebounceCount:
   701  00C1                            ds      1
   702                           
   703  00C2                     _ROBOTerror:
   704  00C2                            ds      1
   705                           
   706  00C3                     _RightDebounceCount:
   707  00C3                            ds      1
   708                           
   709  00C4                     _UpDebounceCount:
   710  00C4                            ds      1
   711                           
   712  00C5                     _VwallSensor:
   713  00C5                            ds      1
   714                           
   715  00C6                     _currentMenu:
   716  00C6                            ds      1
   717                           
   718  00C7                     _highByte:
   719  00C7                            ds      1
   720                           
   721  00C8                     _lowByte:
   722  00C8                            ds      1
   723                           
   724  00C9                     _rxiptr:
   725  00C9                            ds      1
   726                           
   727  00CA                     _rxoptr:
   728  00CA                            ds      1
   729                           
   730  00CB                     _ser_tmp:
   731  00CB                            ds      1
   732                           
   733  00CC                     _turnhighByte:
   734  00CC                            ds      1
   735                           
   736  00CD                     _turnlowByte:
   737  00CD                            ds      1
   738                           
   739  00CE                     _txiptr:
   740  00CE                            ds      1
   741                           
   742  00CF                     _txoptr:
   743  00CF                            ds      1
   744                           
   745                           psect	dataBANK1,class=BANK1,space=1
   746                           global __pdataBANK1
   747  00D0                     __pdataBANK1:
   748                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   749                           	line	49
   750  00D0                     _menuStrings:
   751  00D0                            ds      6
   752                           
   753                           psect	dataBANK1
   754                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   755                           	line	50
   756  00D6                     _shortMenuStrings:
   757  00D6                            ds      6
   758                           
   759                           psect	dataBANK1
   760                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   761                           	line	45
   762  00DC                     _current_step:
   763  00DC                            ds      1
   764                           
   765                           psect	bssBANK3,class=BANK3,space=1
   766                           global __pbssBANK3
   767  0190                     __pbssBANK3:
   768  0190                     UpdateDisplay@F1249:
   769  0190                            ds      16
   770                           
   771  01A0                     _rxfifo:
   772  01A0                            ds      16
   773                           
   774  01B0                     _txfifo:
   775  01B0                            ds      16
   776                           
   777                           psect clrtext,class=CODE,delta=2
   778                           global clear_ram
   779                           ;	Called with FSR containing the base address, and
   780                           ;	W with the last address+1
   781  1FC7                     clear_ram:
   782  1FC7  0064               	clrwdt			;clear the watchdog before getting into this loop
   783  1FC8                     clrloop:
   784  1FC8  0180               	clrf	indf		;clear RAM location pointed to by FSR
   785  1FC9  0A84               	incf	fsr,f		;increment pointer
   786  1FCA  0604               	xorwf	fsr,w		;XOR with final address
   787  1FCB  1903               	btfsc	status,2	;have we reached the end yet?
   788  1FCC  3400               	retlw	0		;all done for this memory range, return
   789  1FCD  0604               	xorwf	fsr,w		;XOR again to restore value
   790  1FCE  2FC8               	goto	clrloop		;do the next byte
   791                           
   792                           ; Clear objects allocated to BITCOMMON
   793                           psect cinit,class=CODE,delta=2
   794  107E  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   795  107F  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   796                           ; Clear objects allocated to COMMON
   797                           psect cinit,class=CODE,delta=2
   798  1080  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   799                           ; Clear objects allocated to BANK1
   800                           psect cinit,class=CODE,delta=2
   801  1081  1383               	bcf	status, 7	;select IRP bank0
   802  1082  30A0               	movlw	low(__pbssBANK1)
   803  1083  0084               	movwf	fsr
   804  1084  30D0               	movlw	low((__pbssBANK1)+030h)
   805  1085  160A  158A  27C7   	fcall	clear_ram
              160A  118A         
   806                           ; Clear objects allocated to BANK3
   807                           psect cinit,class=CODE,delta=2
   808  108A  1783               	bsf	status, 7	;select IRP bank2
   809  108B  3090               	movlw	low(__pbssBANK3)
   810  108C  0084               	movwf	fsr
   811  108D  30C0               	movlw	low((__pbssBANK3)+030h)
   812  108E  160A  158A  27C7   	fcall	clear_ram
              160A  118A         
   813                           global btemp
   814                           psect inittext,class=CODE,delta=2
   815                           global init_fetch,btemp
   816                           ;	Called with low address in FSR and high address in W
   817  1FED                     init_fetch:
   818  1FED  087E               	movf btemp,w
   819  1FEE  008A               	movwf pclath
   820  1FEF  087F               	movf btemp+1,w
   821  1FF0  0082               	movwf pc
   822                           global init_ram
   823                           ;Called with:
   824                           ;	high address of idata address in btemp 
   825                           ;	low address of idata address in btemp+1 
   826                           ;	low address of data in FSR
   827                           ;	high address + 1 of data in btemp-1
   828  1FF1                     init_ram:
   829  1FF1  160A  158A  27ED   	fcall init_fetch
              160A  158A         
   830  1FF6  0080               	movwf indf,f
   831  1FF7  0A84               	incf fsr,f
   832  1FF8  0804               	movf fsr,w
   833  1FF9  067D               	xorwf btemp-1,w
   834  1FFA  1903               	btfsc status,2
   835  1FFB  3400               	retlw 0
   836  1FFC  0AFF               	incf btemp+1,f
   837  1FFD  1903               	btfsc status,2
   838  1FFE  0AFE               	incf btemp,f
   839  1FFF  2FF1               	goto init_ram
   840                           ; Initialize objects allocated to BANK1
   841                           psect cinit,class=CODE,delta=2
   842                           global init_ram, __pidataBANK1
   843  1093  1383               	bcf	status, 7	;select IRP bank0
   844  1094  30DD               	movlw low(__pdataBANK1+13)
   845  1095  00FD               	movwf btemp-1,f
   846  1096  3010               	movlw high(__pidataBANK1)
   847  1097  00FE               	movwf btemp,f
   848  1098  3004               	movlw low(__pidataBANK1)
   849  1099  00FF               	movwf btemp+1,f
   850  109A  30D0               	movlw low(__pdataBANK1)
   851  109B  0084               	movwf fsr,f
   852  109C  160A  158A  27F1   	fcall init_ram
              160A  118A         
   853                           psect cinit,class=CODE,delta=2
   854                           global end_of_initialization
   855                           
   856                           ;End of C runtime variable initialization code
   857                           
   858  10A1                     end_of_initialization:
   859  10A1  0183               clrf status
   860  10A2  120A  118A  2815   ljmp _main	;jump to C main() function
   861                           psect	cstackBANK1,class=BANK1,space=1
   862                           global __pcstackBANK1
   863  00DD                     __pcstackBANK1:
   864                           	global	main@direction1
   865  00DD                     main@direction1:	; 2 bytes @ 0x0
   866  00DD                     	ds	2
   867                           	global	main@RT2A
   868  00DF                     main@RT2A:	; 2 bytes @ 0x2
   869  00DF                     	ds	2
   870                           	global	main@shortwall
   871  00E1                     main@shortwall:	; 2 bytes @ 0x4
   872  00E1                     	ds	2
   873                           	global	main@choice
   874  00E3                     main@choice:	; 1 bytes @ 0x6
   875  00E3                     	ds	1
   876                           	global	main@shortwall_3025
   877  00E4                     main@shortwall_3025:	; 2 bytes @ 0x7
   878  00E4                     	ds	2
   879                           	global	main@RT2P
   880  00E6                     main@RT2P:	; 2 bytes @ 0x9
   881  00E6                     	ds	2
   882                           psect	cstackCOMMON,class=COMMON,space=1
   883                           global __pcstackCOMMON
   884  0072                     __pcstackCOMMON:
   885                           	global	?_ser_init
   886  0072                     ?_ser_init:	; 0 bytes @ 0x0
   887                           	global	?_robo_init
   888  0072                     ?_robo_init:	; 0 bytes @ 0x0
   889                           	global	?_robot_read
   890  0072                     ?_robot_read:	; 0 bytes @ 0x0
   891                           	global	?_readAvgDistance
   892  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   893                           	global	?_UpdateDisplay
   894  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   895                           	global	?_calibrateIR
   896  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   897                           	global	?_ChargeMode
   898  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   899                           	global	?_ser_putch
   900  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   901                           	global	?_ADCconvert
   902  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   903                           	global	?_init_adc
   904  0072                     ?_init_adc:	; 0 bytes @ 0x0
   905                           	global	?_lcd_write_control
   906  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   907                           	global	?_lcd_write_data
   908  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   909                           	global	?_lcd_set_cursor
   910  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   911                           	global	?_lcd_init
   912  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   913                           	global	?_isr1
   914  0072                     ?_isr1:	; 0 bytes @ 0x0
   915                           	global	?_init
   916  0072                     ?_init:	; 0 bytes @ 0x0
   917                           	global	?_main
   918  0072                     ?_main:	; 0 bytes @ 0x0
   919                           	global	?_Debounce
   920  0072                     ?_Debounce:	; 0 bytes @ 0x0
   921                           	global	??_Debounce
   922  0072                     ??_Debounce:	; 0 bytes @ 0x0
   923                           	global	?_ser_isrx
   924  0072                     ?_ser_isrx:	; 1 bit 
   925                           	global	?_ReadButtons
   926  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   927                           	global	?_Menu
   928  0072                     ?_Menu:	; 1 bytes @ 0x0
   929                           	global	?_ser_getch
   930  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   931                           	global	?_adc_read_channel
   932  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   933                           	global	?_spi_transfer
   934  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   935                           	global	?i1___lwmod
   936  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   937                           	global	i1___lwmod@divisor
   938  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   939  0072                     	ds	1
   940                           	global	??_ReadButtons
   941  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   942  0073                     	ds	1
   943                           	global	i1___lwmod@dividend
   944  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   945  0074                     	ds	2
   946                           	global	??i1___lwmod
   947  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   948  0076                     	ds	1
   949                           	global	i1___lwmod@counter
   950  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   951  0077                     	ds	1
   952                           	global	??_isr1
   953  0078                     ??_isr1:	; 0 bytes @ 0x6
   954  0078                     	ds	5
   955                           psect	cstackBANK0,class=BANK0,space=1
   956                           global __pcstackBANK0
   957  0020                     __pcstackBANK0:
   958                           	global	??_ser_init
   959  0020                     ??_ser_init:	; 0 bytes @ 0x0
   960                           	global	??_Menu
   961  0020                     ??_Menu:	; 0 bytes @ 0x0
   962                           	global	??_ser_putch
   963  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   964                           	global	??_ser_getch
   965  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   966                           	global	??_init_adc
   967  0020                     ??_init_adc:	; 0 bytes @ 0x0
   968                           	global	??_lcd_write_control
   969  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   970                           	global	??_lcd_write_data
   971  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   972                           	global	??_spi_transfer
   973  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   974                           	global	??_ser_isrx
   975  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   976                           	global	?___ftge
   977  0020                     ?___ftge:	; 1 bit 
   978                           	global	?_adc_read
   979  0020                     ?_adc_read:	; 2 bytes @ 0x0
   980                           	global	?___wmul
   981  0020                     ?___wmul:	; 2 bytes @ 0x0
   982                           	global	?___awmod
   983  0020                     ?___awmod:	; 2 bytes @ 0x0
   984                           	global	?___ftpack
   985  0020                     ?___ftpack:	; 3 bytes @ 0x0
   986                           	global	Menu@BTN_input
   987  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   988                           	global	___wmul@multiplier
   989  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   990                           	global	___awmod@divisor
   991  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   992                           	global	___ftge@ff1
   993  0020                     ___ftge@ff1:	; 3 bytes @ 0x0
   994                           	global	___ftpack@arg
   995  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   996  0020                     	ds	1
   997                           	global	spi_transfer@temp
   998  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   999                           	global	ser_getch@c
  1000  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1001                           	global	ser_putch@c
  1002  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1003  0021                     	ds	1
  1004                           	global	??_adc_read
  1005  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1006                           	global	??_robo_init
  1007  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1008                           	global	??_robot_read
  1009  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1010                           	global	?_robotTurn
  1011  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1012                           	global	lcd_write_control@databyte
  1013  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1014                           	global	lcd_write_data@databyte
  1015  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1016                           	global	spi_transfer@data
  1017  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1018                           	global	robotTurn@angle
  1019  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1020                           	global	___wmul@multiplicand
  1021  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1022                           	global	___awmod@dividend
  1023  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1024  0022                     	ds	1
  1025                           	global	?_rotate
  1026  0023                     ?_rotate:	; 0 bytes @ 0x3
  1027                           	global	??_lcd_set_cursor
  1028  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1029                           	global	??_lcd_init
  1030  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1031                           	global	??_init
  1032  0023                     ??_init:	; 0 bytes @ 0x3
  1033                           	global	lcd_set_cursor@address
  1034  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1035                           	global	___ftpack@exp
  1036  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1037                           	global	rotate@numsteps
  1038  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1039                           	global	___ftge@ff2
  1040  0023                     ___ftge@ff2:	; 3 bytes @ 0x3
  1041  0023                     	ds	1
  1042                           	global	??_robotTurn
  1043  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1044                           	global	??___wmul
  1045  0024                     ??___wmul:	; 0 bytes @ 0x4
  1046                           	global	??___awmod
  1047  0024                     ??___awmod:	; 0 bytes @ 0x4
  1048                           	global	robot_read@readType
  1049  0024                     robot_read@readType:	; 1 bytes @ 0x4
  1050                           	global	___ftpack@sign
  1051  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1052                           	global	adc_read@adc_value
  1053  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1054                           	global	___wmul@product
  1055  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1056  0024                     	ds	1
  1057                           	global	??___ftpack
  1058  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1059                           	global	rotate@direction
  1060  0025                     rotate@direction:	; 1 bytes @ 0x5
  1061                           	global	___awmod@counter
  1062  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1063  0025                     	ds	1
  1064                           	global	??_rotate
  1065  0026                     ??_rotate:	; 0 bytes @ 0x6
  1066                           	global	??_adc_read_channel
  1067  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1068                           	global	??___ftge
  1069  0026                     ??___ftge:	; 0 bytes @ 0x6
  1070                           	global	?_abs
  1071  0026                     ?_abs:	; 2 bytes @ 0x6
  1072                           	global	?___lwdiv
  1073  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1074                           	global	___awmod@sign
  1075  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1076                           	global	abs@v
  1077  0026                     abs@v:	; 2 bytes @ 0x6
  1078                           	global	___lwdiv@divisor
  1079  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1080  0026                     	ds	1
  1081                           	global	?_lcd_write_string
  1082  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1083                           	global	adc_read_channel@channel
  1084  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1085                           	global	lcd_write_string@s
  1086  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1087  0027                     	ds	1
  1088                           	global	??_abs
  1089  0028                     ??_abs:	; 0 bytes @ 0x8
  1090                           	global	?_readDistance
  1091  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1092                           	global	?___fttol
  1093  0028                     ?___fttol:	; 4 bytes @ 0x8
  1094                           	global	rotate@i
  1095  0028                     rotate@i:	; 2 bytes @ 0x8
  1096                           	global	___lwdiv@dividend
  1097  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1098                           	global	___fttol@f1
  1099  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1100  0028                     	ds	1
  1101                           	global	??_lcd_write_string
  1102  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1103  0029                     	ds	1
  1104                           	global	??_readDistance
  1105  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1106                           	global	??___lwdiv
  1107  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1108  002A                     	ds	1
  1109                           	global	___lwdiv@quotient
  1110  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1111  002B                     	ds	1
  1112                           	global	??___fttol
  1113  002C                     ??___fttol:	; 0 bytes @ 0xC
  1114                           	global	readDistance@readVal
  1115  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1116  002C                     	ds	1
  1117                           	global	___lwdiv@counter
  1118  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1119  002D                     	ds	1
  1120                           	global	??_ADCconvert
  1121  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1122                           	global	?___lwmod
  1123  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1124                           	global	___lwmod@divisor
  1125  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1126  002E                     	ds	2
  1127                           	global	??_readAvgDistance
  1128  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1129                           	global	___fttol@sign1
  1130  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1131                           	global	readAvgDistance@fullval
  1132  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1133                           	global	___lwmod@dividend
  1134  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1135  0030                     	ds	1
  1136                           	global	___fttol@lval
  1137  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1138  0031                     	ds	1
  1139                           	global	??___lwmod
  1140  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1141                           	global	readAvgDistance@j
  1142  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1143  0032                     	ds	1
  1144                           	global	___lwmod@counter
  1145  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1146  0033                     	ds	1
  1147                           	global	?_sprintf
  1148  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1149                           	global	sprintf@f
  1150  0034                     sprintf@f:	; 1 bytes @ 0x14
  1151                           	global	readAvgDistance@tempIR
  1152  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1153  0034                     	ds	1
  1154                           	global	___fttol@exp1
  1155  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1156  0035                     	ds	1
  1157                           	global	?___ftdiv
  1158  0036                     ?___ftdiv:	; 3 bytes @ 0x16
  1159                           	global	?___awtoft
  1160  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1161                           	global	readAvgDistance@i
  1162  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1163                           	global	___awtoft@c
  1164  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1165                           	global	___ftdiv@f2
  1166  0036                     ___ftdiv@f2:	; 3 bytes @ 0x16
  1167  0036                     	ds	3
  1168                           	global	??_sprintf
  1169  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1170                           	global	??___awtoft
  1171  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1172                           	global	___ftdiv@f1
  1173  0039                     ___ftdiv@f1:	; 3 bytes @ 0x19
  1174  0039                     	ds	2
  1175                           	global	___awtoft@sign
  1176  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1177  003B                     	ds	1
  1178                           	global	??___ftdiv
  1179  003C                     ??___ftdiv:	; 0 bytes @ 0x1C
  1180                           	global	sprintf@ap
  1181  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1182  003C                     	ds	1
  1183                           	global	sprintf@flag
  1184  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1185  003D                     	ds	1
  1186                           	global	sprintf@prec
  1187  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1188  003E                     	ds	1
  1189                           	global	sprintf@_val
  1190  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1191  003F                     	ds	1
  1192                           	global	___ftdiv@cntr
  1193  0040                     ___ftdiv@cntr:	; 1 bytes @ 0x20
  1194  0040                     	ds	1
  1195                           	global	___ftdiv@f3
  1196  0041                     ___ftdiv@f3:	; 3 bytes @ 0x21
  1197  0041                     	ds	2
  1198                           	global	sprintf@sp
  1199  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1200  0043                     	ds	1
  1201                           	global	sprintf@c
  1202  0044                     sprintf@c:	; 1 bytes @ 0x24
  1203                           	global	___ftdiv@exp
  1204  0044                     ___ftdiv@exp:	; 1 bytes @ 0x24
  1205  0044                     	ds	1
  1206                           	global	??_UpdateDisplay
  1207  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1208                           	global	___ftdiv@sign
  1209  0045                     ___ftdiv@sign:	; 1 bytes @ 0x25
  1210  0045                     	ds	1
  1211                           	global	?___ftmul
  1212  0046                     ?___ftmul:	; 3 bytes @ 0x26
  1213                           	global	___ftmul@f1
  1214  0046                     ___ftmul@f1:	; 3 bytes @ 0x26
  1215  0046                     	ds	3
  1216                           	global	___ftmul@f2
  1217  0049                     ___ftmul@f2:	; 3 bytes @ 0x29
  1218                           	global	UpdateDisplay@LCDOutput
  1219  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1220  0049                     	ds	3
  1221                           	global	??___ftmul
  1222  004C                     ??___ftmul:	; 0 bytes @ 0x2C
  1223  004C                     	ds	4
  1224                           	global	___ftmul@exp
  1225  0050                     ___ftmul@exp:	; 1 bytes @ 0x30
  1226  0050                     	ds	1
  1227                           	global	___ftmul@f3_as_product
  1228  0051                     ___ftmul@f3_as_product:	; 3 bytes @ 0x31
  1229  0051                     	ds	3
  1230                           	global	___ftmul@cntr
  1231  0054                     ___ftmul@cntr:	; 1 bytes @ 0x34
  1232  0054                     	ds	1
  1233                           	global	___ftmul@sign
  1234  0055                     ___ftmul@sign:	; 1 bytes @ 0x35
  1235  0055                     	ds	1
  1236                           	global	?_RobotDrive
  1237  0056                     ?_RobotDrive:	; 0 bytes @ 0x36
  1238                           	global	RobotDrive@speed
  1239  0056                     RobotDrive@speed:	; 2 bytes @ 0x36
  1240  0056                     	ds	2
  1241                           	global	RobotDrive@radius
  1242  0058                     RobotDrive@radius:	; 2 bytes @ 0x38
  1243  0058                     	ds	1
  1244                           	global	??_calibrateIR
  1245  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1246                           	global	??_ChargeMode
  1247  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1248                           	global	?_scan360
  1249  0059                     ?_scan360:	; 2 bytes @ 0x39
  1250  0059                     	ds	1
  1251                           	global	??_RobotDrive
  1252  005A                     ??_RobotDrive:	; 0 bytes @ 0x3A
  1253  005A                     	ds	1
  1254                           	global	??_scan360
  1255  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1256                           	global	RobotDrive@speedlowByte
  1257  005B                     RobotDrive@speedlowByte:	; 1 bytes @ 0x3B
  1258                           	global	scan360@lowestVal
  1259  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1260  005B                     	ds	1
  1261                           	global	RobotDrive@speedhighByte
  1262  005C                     RobotDrive@speedhighByte:	; 1 bytes @ 0x3C
  1263  005C                     	ds	1
  1264                           	global	RobotDrive@radiuslowByte
  1265  005D                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x3D
  1266                           	global	scan360@lowestSteps
  1267  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1268  005D                     	ds	1
  1269                           	global	RobotDrive@radiushighByte
  1270  005E                     RobotDrive@radiushighByte:	; 1 bytes @ 0x3E
  1271  005E                     	ds	1
  1272                           	global	?_robotMoveSpeed
  1273  005F                     ?_robotMoveSpeed:	; 0 bytes @ 0x3F
  1274                           	global	?_robotFollow
  1275  005F                     ?_robotFollow:	; 0 bytes @ 0x3F
  1276                           	global	scan360@steps
  1277  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1278                           	global	robotFollow@distance
  1279  005F                     robotFollow@distance:	; 2 bytes @ 0x3F
  1280                           	global	robotMoveSpeed@distance
  1281  005F                     robotMoveSpeed@distance:	; 2 bytes @ 0x3F
  1282  005F                     	ds	2
  1283                           	global	robotFollow@speed
  1284  0061                     robotFollow@speed:	; 2 bytes @ 0x41
  1285                           	global	robotMoveSpeed@speed
  1286  0061                     robotMoveSpeed@speed:	; 2 bytes @ 0x41
  1287  0061                     	ds	2
  1288                           	global	??_robotMoveSpeed
  1289  0063                     ??_robotMoveSpeed:	; 0 bytes @ 0x43
  1290                           	global	robotFollow@AdcTarget
  1291  0063                     robotFollow@AdcTarget:	; 2 bytes @ 0x43
  1292  0063                     	ds	2
  1293                           	global	??_robotFollow
  1294  0065                     ??_robotFollow:	; 0 bytes @ 0x45
  1295  0065                     	ds	1
  1296                           	global	robotMoveSpeed@remaining
  1297  0066                     robotMoveSpeed@remaining:	; 3 bytes @ 0x46
  1298  0066                     	ds	2
  1299                           	global	robotFollow@remaining
  1300  0068                     robotFollow@remaining:	; 3 bytes @ 0x48
  1301  0068                     	ds	1
  1302                           	global	robotMoveSpeed@temp1
  1303  0069                     robotMoveSpeed@temp1:	; 2 bytes @ 0x49
  1304  0069                     	ds	2
  1305                           	global	robotFollow@temp1
  1306  006B                     robotFollow@temp1:	; 2 bytes @ 0x4B
  1307  006B                     	ds	2
  1308                           	global	??_main
  1309  006D                     ??_main:	; 0 bytes @ 0x4D
  1310  006D                     	ds	3
  1311 ;;Data sizes: Strings 147, constant 10, data 13, bss 97, persistent 0 stack 0
  1312 ;;Auto spaces:   Size  Autos    Used
  1313 ;; COMMON          14     11      14
  1314 ;; BANK0           80     80      80
  1315 ;; BANK1           80     11      72
  1316 ;; BANK3           96      0      48
  1317 ;; BANK2           96      0       0
  1318                           
  1319 ;;
  1320 ;; Pointer list with targets:
  1321                           
  1322 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1323 ;;
  1324 ;; ?___ftpack	float  size(1) Largest target is 2
  1325 ;;		 -> main@RT2P(BANK1[2]), 
  1326 ;;
  1327 ;; ?___ftdiv	float  size(1) Largest target is 0
  1328 ;;
  1329 ;; ?_abs	int  size(1) Largest target is 0
  1330 ;;
  1331 ;; ?___awmod	int  size(1) Largest target is 0
  1332 ;;
  1333 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1334 ;;
  1335 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1336 ;;
  1337 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1338 ;;
  1339 ;; ?_scan360	int  size(1) Largest target is 0
  1340 ;;
  1341 ;; ?___fttol	long  size(1) Largest target is 0
  1342 ;;
  1343 ;; ?___ftmul	float  size(1) Largest target is 0
  1344 ;;
  1345 ;; ?___awtoft	float  size(1) Largest target is 0
  1346 ;;
  1347 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1348 ;;
  1349 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1350 ;;
  1351 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1352 ;;		 -> STR_13(CODE[13]), 
  1353 ;;
  1354 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1355 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1356 ;;
  1357 ;; ?_sprintf	int  size(1) Largest target is 0
  1358 ;;
  1359 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1360 ;;		 -> ?_sprintf(BANK0[2]), 
  1361 ;;
  1362 ;; S8218$_cp	PTR const unsigned char  size(1) Largest target is 0
  1363 ;;
  1364 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1365 ;;
  1366 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1367 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1368 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1369 ;;
  1370 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1371 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1372 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1373 ;;
  1374 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1375 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1376 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1377 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1378 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1379 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1380 ;;
  1381                           
  1382                           
  1383 ;;
  1384 ;; Critical Paths under _main in COMMON
  1385 ;;
  1386 ;;   None.
  1387 ;;
  1388 ;; Critical Paths under _isr1 in COMMON
  1389 ;;
  1390 ;;   _isr1->i1___lwmod
  1391 ;;   _ReadButtons->_Debounce
  1392 ;;
  1393 ;; Critical Paths under _main in BANK0
  1394 ;;
  1395 ;;   _main->_robotFollow
  1396 ;;   _ChargeMode->_UpdateDisplay
  1397 ;;   _robotFollow->_RobotDrive
  1398 ;;   _robotMoveSpeed->_RobotDrive
  1399 ;;   _scan360->_UpdateDisplay
  1400 ;;   _calibrateIR->_UpdateDisplay
  1401 ;;   _UpdateDisplay->_sprintf
  1402 ;;   _readAvgDistance->_ADCconvert
  1403 ;;   _readDistance->_adc_read_channel
  1404 ;;   _robot_read->_ser_putch
  1405 ;;   _robot_read->_ser_getch
  1406 ;;   _lcd_init->_lcd_write_control
  1407 ;;   _lcd_write_string->___awmod
  1408 ;;   _lcd_set_cursor->_lcd_write_control
  1409 ;;   ___awtoft->___fttol
  1410 ;;   ___ftmul->___ftdiv
  1411 ;;   ___ftdiv->___fttol
  1412 ;;   _abs->___wmul
  1413 ;;   _RobotDrive->___ftmul
  1414 ;;   _sprintf->___lwmod
  1415 ;;   _ADCconvert->___lwdiv
  1416 ;;   _robotTurn->_ser_putch
  1417 ;;   _rotate->_spi_transfer
  1418 ;;   _robo_init->_ser_putch
  1419 ;;   _adc_read_channel->_adc_read
  1420 ;;   ___fttol->___ftpack
  1421 ;;   ___lwmod->___lwdiv
  1422 ;;   ___lwdiv->___wmul
  1423 ;;
  1424 ;; Critical Paths under _isr1 in BANK0
  1425 ;;
  1426 ;;   None.
  1427 ;;
  1428 ;; Critical Paths under _main in BANK1
  1429 ;;
  1430 ;;   None.
  1431 ;;
  1432 ;; Critical Paths under _isr1 in BANK1
  1433 ;;
  1434 ;;   None.
  1435 ;;
  1436 ;; Critical Paths under _main in BANK3
  1437 ;;
  1438 ;;   None.
  1439 ;;
  1440 ;; Critical Paths under _isr1 in BANK3
  1441 ;;
  1442 ;;   None.
  1443 ;;
  1444 ;; Critical Paths under _main in BANK2
  1445 ;;
  1446 ;;   None.
  1447 ;;
  1448 ;; Critical Paths under _isr1 in BANK2
  1449 ;;
  1450 ;;   None.
  1451                           
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1454 ;;
  1455                           
  1456 ;;
  1457 ;;Call Graph Tables:
  1458 ;;
  1459 ;; ---------------------------------------------------------------------------------
  1460 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1461 ;; ---------------------------------------------------------------------------------
  1462 ;; (0) _main                                                14    14      0   16739
  1463 ;;                                             77 BANK0      3     3      0
  1464 ;;                                              0 BANK1     11    11      0
  1465 ;;                               _init
  1466 ;;                         _robot_read
  1467 ;;                    _readAvgDistance
  1468 ;;                      _UpdateDisplay
  1469 ;;                               _Menu
  1470 ;;                        _calibrateIR
  1471 ;;                            _scan360
  1472 ;;                             _rotate
  1473 ;;                     _robotMoveSpeed
  1474 ;;                        _robotFollow
  1475 ;;                           ___awtoft
  1476 ;;                            ___ftmul
  1477 ;;                            ___fttol
  1478 ;;                          _robotTurn
  1479 ;;                         _ChargeMode
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (1) _ChargeMode                                           1     1      0    1305
  1482 ;;                                             57 BANK0      1     1      0
  1483 ;;                          _ser_putch
  1484 ;;                      _UpdateDisplay
  1485 ;; ---------------------------------------------------------------------------------
  1486 ;; (1) _robotFollow                                         14     8      6    4403
  1487 ;;                                             63 BANK0     14     8      6
  1488 ;;                         _RobotDrive
  1489 ;;                    _readAvgDistance
  1490 ;;                         _robot_read
  1491 ;;                      _UpdateDisplay
  1492 ;;                                _abs
  1493 ;;                           ___awtoft
  1494 ;;                             ___ftge
  1495 ;;                            ___ftdiv
  1496 ;;                            ___ftmul
  1497 ;;                            ___fttol
  1498 ;; ---------------------------------------------------------------------------------
  1499 ;; (1) _robotMoveSpeed                                      12     8      4    3668
  1500 ;;                                             63 BANK0     12     8      4
  1501 ;;                         _RobotDrive
  1502 ;;                         _robot_read
  1503 ;;                      _UpdateDisplay
  1504 ;;                                _abs
  1505 ;;                           ___awtoft
  1506 ;;                             ___ftge
  1507 ;;                            ___ftdiv
  1508 ;;                            ___ftmul
  1509 ;;                            ___fttol
  1510 ;; ---------------------------------------------------------------------------------
  1511 ;; (1) _scan360                                              8     6      2    2122
  1512 ;;                                             57 BANK0      8     6      2
  1513 ;;                    _readAvgDistance
  1514 ;;                             _rotate
  1515 ;;                      _UpdateDisplay
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (1) _calibrateIR                                          0     0      0    1381
  1518 ;;                             _rotate
  1519 ;;                      _UpdateDisplay
  1520 ;; ---------------------------------------------------------------------------------
  1521 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1522 ;;                                             37 BANK0     20    20      0
  1523 ;;                  _lcd_write_control
  1524 ;;                            _sprintf
  1525 ;;                     _lcd_set_cursor
  1526 ;;                   _lcd_write_string
  1527 ;;                            ___awmod
  1528 ;; ---------------------------------------------------------------------------------
  1529 ;; (2) _readAvgDistance                                      8     8      0     625
  1530 ;;                                             16 BANK0      8     8      0
  1531 ;;                       _readDistance
  1532 ;;                            ___lwdiv
  1533 ;;                         _ADCconvert
  1534 ;; ---------------------------------------------------------------------------------
  1535 ;; (1) _init                                                 1     1      0      44
  1536 ;;                                              3 BANK0      1     1      0
  1537 ;;                           _ser_init
  1538 ;;                           _init_adc
  1539 ;;                           _lcd_init
  1540 ;;                          _robo_init
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (3) _readDistance                                         6     4      2      69
  1543 ;;                                              8 BANK0      6     4      2
  1544 ;;                   _adc_read_channel
  1545 ;; ---------------------------------------------------------------------------------
  1546 ;; (2) _robot_read                                           3     3      0     111
  1547 ;;                                              2 BANK0      3     3      0
  1548 ;;                          _ser_putch
  1549 ;;                          _ser_getch
  1550 ;; ---------------------------------------------------------------------------------
  1551 ;; (2) _lcd_init                                             0     0      0      22
  1552 ;;                  _lcd_write_control
  1553 ;; ---------------------------------------------------------------------------------
  1554 ;; (3) _lcd_write_string                                     2     0      2      67
  1555 ;;                                              7 BANK0      2     0      2
  1556 ;;                     _lcd_write_data
  1557 ;;                            ___awmod (ARG)
  1558 ;; ---------------------------------------------------------------------------------
  1559 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1560 ;;                                              3 BANK0      1     1      0
  1561 ;;                  _lcd_write_control
  1562 ;; ---------------------------------------------------------------------------------
  1563 ;; (1) ___awtoft                                             6     3      3     300
  1564 ;;                                             22 BANK0      6     3      3
  1565 ;;                           ___ftpack
  1566 ;;                            ___fttol (ARG)
  1567 ;;                                _abs (ARG)
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (1) ___ftmul                                             16    10      6     535
  1570 ;;                                             38 BANK0     16    10      6
  1571 ;;                           ___ftpack
  1572 ;;                           ___awtoft (ARG)
  1573 ;;                            ___fttol (ARG)
  1574 ;;                            ___ftdiv (ARG)
  1575 ;; ---------------------------------------------------------------------------------
  1576 ;; (2) ___ftdiv                                             16    10      6     489
  1577 ;;                                             22 BANK0     16    10      6
  1578 ;;                           ___ftpack
  1579 ;;                            ___fttol (ARG)
  1580 ;; ---------------------------------------------------------------------------------
  1581 ;; (2) _abs                                                  4     2      2     158
  1582 ;;                                              6 BANK0      4     2      2
  1583 ;;                             ___wmul
  1584 ;; ---------------------------------------------------------------------------------
  1585 ;; (2) _RobotDrive                                           9     5      4     202
  1586 ;;                                             54 BANK0      9     5      4
  1587 ;;                          _ser_putch
  1588 ;;                            ___fttol (ARG)
  1589 ;;                            ___ftmul (ARG)
  1590 ;;                           ___awtoft (ARG)
  1591 ;;                            ___ftdiv (ARG)
  1592 ;; ---------------------------------------------------------------------------------
  1593 ;; (3) _ser_getch                                            2     2      0      23
  1594 ;;                                              0 BANK0      2     2      0
  1595 ;;                           _ser_isrx
  1596 ;; ---------------------------------------------------------------------------------
  1597 ;; (3) _sprintf                                             17    12      5     798
  1598 ;;                                             20 BANK0     17    12      5
  1599 ;;                            ___lwdiv
  1600 ;;                            ___lwmod
  1601 ;; ---------------------------------------------------------------------------------
  1602 ;; (3) _ADCconvert                                           2     2      0     254
  1603 ;;                                             14 BANK0      2     2      0
  1604 ;;                             ___wmul
  1605 ;;                            ___lwdiv
  1606 ;; ---------------------------------------------------------------------------------
  1607 ;; (1) _robotTurn                                            2     0      2      66
  1608 ;;                                              2 BANK0      2     0      2
  1609 ;;                          _ser_putch
  1610 ;; ---------------------------------------------------------------------------------
  1611 ;; (1) _rotate                                               7     4      3      98
  1612 ;;                                              3 BANK0      7     4      3
  1613 ;;                       _spi_transfer
  1614 ;; ---------------------------------------------------------------------------------
  1615 ;; (2) _robo_init                                            0     0      0      22
  1616 ;;                          _ser_putch
  1617 ;; ---------------------------------------------------------------------------------
  1618 ;; (4) _lcd_write_data                                       3     3      0      22
  1619 ;;                                              0 BANK0      3     3      0
  1620 ;; ---------------------------------------------------------------------------------
  1621 ;; (4) _lcd_write_control                                    3     3      0      22
  1622 ;;                                              0 BANK0      3     3      0
  1623 ;; ---------------------------------------------------------------------------------
  1624 ;; (2) _init_adc                                             1     1      0       0
  1625 ;;                                              0 BANK0      1     1      0
  1626 ;; ---------------------------------------------------------------------------------
  1627 ;; (4) _adc_read_channel                                     2     2      0      46
  1628 ;;                                              6 BANK0      2     2      0
  1629 ;;                           _adc_read
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (3) ___awmod                                              7     3      4     296
  1632 ;;                                              0 BANK0      7     3      4
  1633 ;; ---------------------------------------------------------------------------------
  1634 ;; (2) ___ftge                                              12     6      6     136
  1635 ;;                                              0 BANK0     12     6      6
  1636 ;; ---------------------------------------------------------------------------------
  1637 ;; (1) ___fttol                                             14    10      4     252
  1638 ;;                                              8 BANK0     14    10      4
  1639 ;;                           ___ftpack (ARG)
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (2) ___ftpack                                             8     3      5     209
  1642 ;;                                              0 BANK0      8     3      5
  1643 ;; ---------------------------------------------------------------------------------
  1644 ;; (4) ___lwmod                                              6     2      4     159
  1645 ;;                                             14 BANK0      6     2      4
  1646 ;;                            ___lwdiv (ARG)
  1647 ;; ---------------------------------------------------------------------------------
  1648 ;; (4) ___lwdiv                                              8     4      4     162
  1649 ;;                                              6 BANK0      8     4      4
  1650 ;;                             ___wmul (ARG)
  1651 ;; ---------------------------------------------------------------------------------
  1652 ;; (3) ___wmul                                               6     2      4      92
  1653 ;;                                              0 BANK0      6     2      4
  1654 ;; ---------------------------------------------------------------------------------
  1655 ;; (4) _ser_isrx                                             0     0      0       0
  1656 ;; ---------------------------------------------------------------------------------
  1657 ;; (2) _spi_transfer                                         3     3      0      30
  1658 ;;                                              0 BANK0      3     3      0
  1659 ;; ---------------------------------------------------------------------------------
  1660 ;; (2) _ser_putch                                            2     2      0      22
  1661 ;;                                              0 BANK0      2     2      0
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (1) _Menu                                                 1     1      0      22
  1664 ;;                                              0 BANK0      1     1      0
  1665 ;; ---------------------------------------------------------------------------------
  1666 ;; (2) _ser_init                                             1     1      0       0
  1667 ;;                                              0 BANK0      1     1      0
  1668 ;; ---------------------------------------------------------------------------------
  1669 ;; (5) _adc_read                                             6     4      2      24
  1670 ;;                                              0 BANK0      6     4      2
  1671 ;; ---------------------------------------------------------------------------------
  1672 ;; Estimated maximum stack depth 5
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1675 ;; ---------------------------------------------------------------------------------
  1676 ;; (6) _isr1                                                 5     5      0     521
  1677 ;;                                              6 COMMON     5     5      0
  1678 ;;                          i1___lwmod
  1679 ;;                        _ReadButtons
  1680 ;; ---------------------------------------------------------------------------------
  1681 ;; (7) _ReadButtons                                          0     0      0       0
  1682 ;;                           _Debounce
  1683 ;; ---------------------------------------------------------------------------------
  1684 ;; (7) i1___lwmod                                            6     2      4     521
  1685 ;;                                              0 COMMON     6     2      4
  1686 ;; ---------------------------------------------------------------------------------
  1687 ;; (8) _Debounce                                             1     1      0       0
  1688 ;;                                              0 COMMON     1     1      0
  1689 ;; ---------------------------------------------------------------------------------
  1690 ;; Estimated maximum stack depth 8
  1691 ;; ---------------------------------------------------------------------------------
  1692                           
  1693 ;; Call Graph Graphs:
  1694                           
  1695 ;; _main (ROOT)
  1696 ;;   _init
  1697 ;;     _ser_init
  1698 ;;     _init_adc
  1699 ;;     _lcd_init
  1700 ;;       _lcd_write_control
  1701 ;;     _robo_init
  1702 ;;       _ser_putch
  1703 ;;   _robot_read
  1704 ;;     _ser_putch
  1705 ;;     _ser_getch
  1706 ;;       _ser_isrx
  1707 ;;   _readAvgDistance
  1708 ;;     _readDistance
  1709 ;;       _adc_read_channel
  1710 ;;         _adc_read
  1711 ;;     ___lwdiv
  1712 ;;       ___wmul (ARG)
  1713 ;;     _ADCconvert
  1714 ;;       ___wmul
  1715 ;;       ___lwdiv
  1716 ;;         ___wmul (ARG)
  1717 ;;   _UpdateDisplay
  1718 ;;     _lcd_write_control
  1719 ;;     _sprintf
  1720 ;;       ___lwdiv
  1721 ;;         ___wmul (ARG)
  1722 ;;       ___lwmod
  1723 ;;         ___lwdiv (ARG)
  1724 ;;           ___wmul (ARG)
  1725 ;;     _lcd_set_cursor
  1726 ;;       _lcd_write_control
  1727 ;;     _lcd_write_string
  1728 ;;       _lcd_write_data
  1729 ;;       ___awmod (ARG)
  1730 ;;     ___awmod
  1731 ;;   _Menu
  1732 ;;   _calibrateIR
  1733 ;;     _rotate
  1734 ;;       _spi_transfer
  1735 ;;     _UpdateDisplay
  1736 ;;       _lcd_write_control
  1737 ;;       _sprintf
  1738 ;;         ___lwdiv
  1739 ;;           ___wmul (ARG)
  1740 ;;         ___lwmod
  1741 ;;           ___lwdiv (ARG)
  1742 ;;             ___wmul (ARG)
  1743 ;;       _lcd_set_cursor
  1744 ;;         _lcd_write_control
  1745 ;;       _lcd_write_string
  1746 ;;         _lcd_write_data
  1747 ;;         ___awmod (ARG)
  1748 ;;       ___awmod
  1749 ;;   _scan360
  1750 ;;     _readAvgDistance
  1751 ;;       _readDistance
  1752 ;;         _adc_read_channel
  1753 ;;           _adc_read
  1754 ;;       ___lwdiv
  1755 ;;         ___wmul (ARG)
  1756 ;;       _ADCconvert
  1757 ;;         ___wmul
  1758 ;;         ___lwdiv
  1759 ;;           ___wmul (ARG)
  1760 ;;     _rotate
  1761 ;;       _spi_transfer
  1762 ;;     _UpdateDisplay
  1763 ;;       _lcd_write_control
  1764 ;;       _sprintf
  1765 ;;         ___lwdiv
  1766 ;;           ___wmul (ARG)
  1767 ;;         ___lwmod
  1768 ;;           ___lwdiv (ARG)
  1769 ;;             ___wmul (ARG)
  1770 ;;       _lcd_set_cursor
  1771 ;;         _lcd_write_control
  1772 ;;       _lcd_write_string
  1773 ;;         _lcd_write_data
  1774 ;;         ___awmod (ARG)
  1775 ;;       ___awmod
  1776 ;;   _rotate
  1777 ;;     _spi_transfer
  1778 ;;   _robotMoveSpeed
  1779 ;;     _RobotDrive
  1780 ;;       _ser_putch
  1781 ;;       ___fttol (ARG)
  1782 ;;         ___ftpack (ARG)
  1783 ;;       ___ftmul (ARG)
  1784 ;;         ___ftpack
  1785 ;;         ___awtoft (ARG)
  1786 ;;           ___ftpack
  1787 ;;           ___fttol (ARG)
  1788 ;;             ___ftpack (ARG)
  1789 ;;           _abs (ARG)
  1790 ;;             ___wmul
  1791 ;;         ___fttol (ARG)
  1792 ;;           ___ftpack (ARG)
  1793 ;;         ___ftdiv (ARG)
  1794 ;;           ___ftpack
  1795 ;;           ___fttol (ARG)
  1796 ;;             ___ftpack (ARG)
  1797 ;;       ___awtoft (ARG)
  1798 ;;         ___ftpack
  1799 ;;         ___fttol (ARG)
  1800 ;;           ___ftpack (ARG)
  1801 ;;         _abs (ARG)
  1802 ;;           ___wmul
  1803 ;;       ___ftdiv (ARG)
  1804 ;;         ___ftpack
  1805 ;;         ___fttol (ARG)
  1806 ;;           ___ftpack (ARG)
  1807 ;;     _robot_read
  1808 ;;       _ser_putch
  1809 ;;       _ser_getch
  1810 ;;         _ser_isrx
  1811 ;;     _UpdateDisplay
  1812 ;;       _lcd_write_control
  1813 ;;       _sprintf
  1814 ;;         ___lwdiv
  1815 ;;           ___wmul (ARG)
  1816 ;;         ___lwmod
  1817 ;;           ___lwdiv (ARG)
  1818 ;;             ___wmul (ARG)
  1819 ;;       _lcd_set_cursor
  1820 ;;         _lcd_write_control
  1821 ;;       _lcd_write_string
  1822 ;;         _lcd_write_data
  1823 ;;         ___awmod (ARG)
  1824 ;;       ___awmod
  1825 ;;     _abs
  1826 ;;       ___wmul
  1827 ;;     ___awtoft
  1828 ;;       ___ftpack
  1829 ;;       ___fttol (ARG)
  1830 ;;         ___ftpack (ARG)
  1831 ;;       _abs (ARG)
  1832 ;;         ___wmul
  1833 ;;     ___ftge
  1834 ;;     ___ftdiv
  1835 ;;       ___ftpack
  1836 ;;       ___fttol (ARG)
  1837 ;;         ___ftpack (ARG)
  1838 ;;     ___ftmul
  1839 ;;       ___ftpack
  1840 ;;       ___awtoft (ARG)
  1841 ;;         ___ftpack
  1842 ;;         ___fttol (ARG)
  1843 ;;           ___ftpack (ARG)
  1844 ;;         _abs (ARG)
  1845 ;;           ___wmul
  1846 ;;       ___fttol (ARG)
  1847 ;;         ___ftpack (ARG)
  1848 ;;       ___ftdiv (ARG)
  1849 ;;         ___ftpack
  1850 ;;         ___fttol (ARG)
  1851 ;;           ___ftpack (ARG)
  1852 ;;     ___fttol
  1853 ;;       ___ftpack (ARG)
  1854 ;;   _robotFollow
  1855 ;;     _RobotDrive
  1856 ;;       _ser_putch
  1857 ;;       ___fttol (ARG)
  1858 ;;         ___ftpack (ARG)
  1859 ;;       ___ftmul (ARG)
  1860 ;;         ___ftpack
  1861 ;;         ___awtoft (ARG)
  1862 ;;           ___ftpack
  1863 ;;           ___fttol (ARG)
  1864 ;;             ___ftpack (ARG)
  1865 ;;           _abs (ARG)
  1866 ;;             ___wmul
  1867 ;;         ___fttol (ARG)
  1868 ;;           ___ftpack (ARG)
  1869 ;;         ___ftdiv (ARG)
  1870 ;;           ___ftpack
  1871 ;;           ___fttol (ARG)
  1872 ;;             ___ftpack (ARG)
  1873 ;;       ___awtoft (ARG)
  1874 ;;         ___ftpack
  1875 ;;         ___fttol (ARG)
  1876 ;;           ___ftpack (ARG)
  1877 ;;         _abs (ARG)
  1878 ;;           ___wmul
  1879 ;;       ___ftdiv (ARG)
  1880 ;;         ___ftpack
  1881 ;;         ___fttol (ARG)
  1882 ;;           ___ftpack (ARG)
  1883 ;;     _readAvgDistance
  1884 ;;       _readDistance
  1885 ;;         _adc_read_channel
  1886 ;;           _adc_read
  1887 ;;       ___lwdiv
  1888 ;;         ___wmul (ARG)
  1889 ;;       _ADCconvert
  1890 ;;         ___wmul
  1891 ;;         ___lwdiv
  1892 ;;           ___wmul (ARG)
  1893 ;;     _robot_read
  1894 ;;       _ser_putch
  1895 ;;       _ser_getch
  1896 ;;         _ser_isrx
  1897 ;;     _UpdateDisplay
  1898 ;;       _lcd_write_control
  1899 ;;       _sprintf
  1900 ;;         ___lwdiv
  1901 ;;           ___wmul (ARG)
  1902 ;;         ___lwmod
  1903 ;;           ___lwdiv (ARG)
  1904 ;;             ___wmul (ARG)
  1905 ;;       _lcd_set_cursor
  1906 ;;         _lcd_write_control
  1907 ;;       _lcd_write_string
  1908 ;;         _lcd_write_data
  1909 ;;         ___awmod (ARG)
  1910 ;;       ___awmod
  1911 ;;     _abs
  1912 ;;       ___wmul
  1913 ;;     ___awtoft
  1914 ;;       ___ftpack
  1915 ;;       ___fttol (ARG)
  1916 ;;         ___ftpack (ARG)
  1917 ;;       _abs (ARG)
  1918 ;;         ___wmul
  1919 ;;     ___ftge
  1920 ;;     ___ftdiv
  1921 ;;       ___ftpack
  1922 ;;       ___fttol (ARG)
  1923 ;;         ___ftpack (ARG)
  1924 ;;     ___ftmul
  1925 ;;       ___ftpack
  1926 ;;       ___awtoft (ARG)
  1927 ;;         ___ftpack
  1928 ;;         ___fttol (ARG)
  1929 ;;           ___ftpack (ARG)
  1930 ;;         _abs (ARG)
  1931 ;;           ___wmul
  1932 ;;       ___fttol (ARG)
  1933 ;;         ___ftpack (ARG)
  1934 ;;       ___ftdiv (ARG)
  1935 ;;         ___ftpack
  1936 ;;         ___fttol (ARG)
  1937 ;;           ___ftpack (ARG)
  1938 ;;     ___fttol
  1939 ;;       ___ftpack (ARG)
  1940 ;;   ___awtoft
  1941 ;;     ___ftpack
  1942 ;;     ___fttol (ARG)
  1943 ;;       ___ftpack (ARG)
  1944 ;;     _abs (ARG)
  1945 ;;       ___wmul
  1946 ;;   ___ftmul
  1947 ;;     ___ftpack
  1948 ;;     ___awtoft (ARG)
  1949 ;;       ___ftpack
  1950 ;;       ___fttol (ARG)
  1951 ;;         ___ftpack (ARG)
  1952 ;;       _abs (ARG)
  1953 ;;         ___wmul
  1954 ;;     ___fttol (ARG)
  1955 ;;       ___ftpack (ARG)
  1956 ;;     ___ftdiv (ARG)
  1957 ;;       ___ftpack
  1958 ;;       ___fttol (ARG)
  1959 ;;         ___ftpack (ARG)
  1960 ;;   ___fttol
  1961 ;;     ___ftpack (ARG)
  1962 ;;   _robotTurn
  1963 ;;     _ser_putch
  1964 ;;   _ChargeMode
  1965 ;;     _ser_putch
  1966 ;;     _UpdateDisplay
  1967 ;;       _lcd_write_control
  1968 ;;       _sprintf
  1969 ;;         ___lwdiv
  1970 ;;           ___wmul (ARG)
  1971 ;;         ___lwmod
  1972 ;;           ___lwdiv (ARG)
  1973 ;;             ___wmul (ARG)
  1974 ;;       _lcd_set_cursor
  1975 ;;         _lcd_write_control
  1976 ;;       _lcd_write_string
  1977 ;;         _lcd_write_data
  1978 ;;         ___awmod (ARG)
  1979 ;;       ___awmod
  1980 ;;
  1981 ;; _isr1 (ROOT)
  1982 ;;   i1___lwmod
  1983 ;;   _ReadButtons
  1984 ;;     _Debounce
  1985 ;;
  1986                           
  1987 ;; Address spaces:
  1988                           
  1989 ;;Name               Size   Autos  Total    Cost      Usage
  1990 ;;BANK3               60      0      30       9       50.0%
  1991 ;;BITBANK3            60      0       0       8        0.0%
  1992 ;;SFR3                 0      0       0       4        0.0%
  1993 ;;BITSFR3              0      0       0       4        0.0%
  1994 ;;BANK2               60      0       0      11        0.0%
  1995 ;;BITBANK2            60      0       0      10        0.0%
  1996 ;;SFR2                 0      0       0       5        0.0%
  1997 ;;BITSFR2              0      0       0       5        0.0%
  1998 ;;SFR1                 0      0       0       2        0.0%
  1999 ;;BITSFR1              0      0       0       2        0.0%
  2000 ;;BANK1               50      B      48       7       90.0%
  2001 ;;BITBANK1            50      0       0       6        0.0%
  2002 ;;CODE                 0      0       0       0        0.0%
  2003 ;;DATA                 0      0      E1      12        0.0%
  2004 ;;ABS                  0      0      D6       3        0.0%
  2005 ;;NULL                 0      0       0       0        0.0%
  2006 ;;STACK                0      0       B       2        0.0%
  2007 ;;BANK0               50     50      50       5      100.0%
  2008 ;;BITBANK0            50      0       0       4        0.0%
  2009 ;;SFR0                 0      0       0       1        0.0%
  2010 ;;BITSFR0              0      0       0       1        0.0%
  2011 ;;COMMON               E      B       E       1      100.0%
  2012 ;;BITCOMMON            E      0       2       0       14.3%
  2013 ;;EEDATA             100      0       0       0        0.0%
  2014                           
  2015                           	global	_main
  2016                           psect	maintext,global,class=CODE,delta=2
  2017                           global __pmaintext
  2018  0015                     __pmaintext:
  2019                           
  2020 ;; *************** function _main *****************
  2021 ;; Defined at:
  2022 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  RT2P            2    9[BANK1 ] int 
  2027 ;;  shortwall       2    7[BANK1 ] int 
  2028 ;;  RT2A            2    2[BANK1 ] int 
  2029 ;;  direction1      2    0[BANK1 ] int 
  2030 ;;  shortwall       2    4[BANK1 ] int 
  2031 ;;  choice          1    6[BANK1 ] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;		None               void
  2034 ;; Registers used:
  2035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 17F/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         0       0       0       0       0
  2042 ;;      Locals:         0       0      11       0       0
  2043 ;;      Temps:          0       3       0       0       0
  2044 ;;      Totals:         0       3      11       0       0
  2045 ;;Total ram usage:       14 bytes
  2046 ;; Hardware stack levels required when called:    8
  2047 ;; This function calls:
  2048 ;;		_init
  2049 ;;		_robot_read
  2050 ;;		_readAvgDistance
  2051 ;;		_UpdateDisplay
  2052 ;;		_Menu
  2053 ;;		_calibrateIR
  2054 ;;		_scan360
  2055 ;;		_rotate
  2056 ;;		_robotMoveSpeed
  2057 ;;		_robotFollow
  2058 ;;		___awtoft
  2059 ;;		___ftmul
  2060 ;;		___fttol
  2061 ;;		_robotTurn
  2062 ;;		_ChargeMode
  2063 ;; This function is called by:
  2064 ;;		Startup code after reset
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           psect	maintext
  2068                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2069                           	line	172
  2070                           	global	__size_of_main
  2071  02A0                     	__size_of_main	equ	__end_of_main-_main
  2072                           	
  2073  0015                     _main:	
  2074                           	opt	stack 0
  2075                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2076                           	line	173
  2077                           	
  2078  0015                     l11923:	
  2079                           ;Main.c: 173: unsigned char choice = 255;
  2080  0015  30FF               	movlw	(0FFh)
  2081  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  2082  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  2083  0018  00ED               	movwf	(??_main+0)+0
  2084  0019  086D               	movf	(??_main+0)+0,w
  2085  001A  1683               	bsf	status, 5	;RP0=1, select bank1
  2086  001B  1303               	bcf	status, 6	;RP1=0, select bank1
  2087  001C  00E3               	movwf	(main@choice)^080h
  2088                           	line	174
  2089                           	
  2090  001D                     l11925:	
  2091                           ;Main.c: 174: int shortwall = 0;
  2092  001D  01E1               	clrf	(main@shortwall)^080h
  2093  001E  01E2               	clrf	(main@shortwall+1)^080h
  2094                           	line	177
  2095                           	
  2096  001F                     l11927:	
  2097                           ;Main.c: 177: init();
  2098  001F  160A  118A  2200   	fcall	_init
              120A  118A         
  2099  0024  2825               	goto	l11929
  2100                           	line	180
  2101                           ;Main.c: 180: while(1)
  2102                           	
  2103  0025                     l2234:	
  2104                           	line	182
  2105                           	
  2106  0025                     l11929:	
  2107                           ;Main.c: 181: {
  2108                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  2109  0025  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2110  0026  2828               	goto	u5761
  2111  0027  2829               	goto	u5760
  2112  0028                     u5761:
  2113  0028  283B               	goto	l11939
  2114  0029                     u5760:
  2115                           	line	184
  2116                           	
  2117  0029                     l11931:	
  2118                           ;Main.c: 183: {
  2119                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  2120  0029  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2121                           	line	185
  2122                           	
  2123  002A                     l11933:	
  2124                           ;Main.c: 185: robot_read(2);
  2125  002A  3002               	movlw	(02h)
  2126  002B  120A  158A  2424   	fcall	_robot_read
              120A  118A         
  2127                           	line	186
  2128                           	
  2129  0030                     l11935:	
  2130                           ;Main.c: 186: readAvgDistance();
  2131  0030  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  2132                           	line	187
  2133                           	
  2134  0035                     l11937:	
  2135                           ;Main.c: 187: UpdateDisplay();
  2136  0035  120A  158A  26A1   	fcall	_UpdateDisplay
              120A  118A         
  2137  003A  283B               	goto	l11939
  2138                           	line	188
  2139                           	
  2140  003B                     l2235:	
  2141                           	line	189
  2142                           	
  2143  003B                     l11939:	
  2144                           ;Main.c: 188: }
  2145                           ;Main.c: 189: if (buttonPressed)
  2146  003B  087D               	movf	(_buttonPressed),w	;volatile
  2147  003C  1D03               	skipz
  2148  003D  283F               	goto	u5770
  2149  003E  2A92               	goto	l12027
  2150  003F                     u5770:
  2151                           	line	192
  2152                           	
  2153  003F                     l11941:	
  2154                           ;Main.c: 191: {
  2155                           ;Main.c: 192: choice = Menu(buttonPressed);
  2156  003F  087D               	movf	(_buttonPressed),w	;volatile
  2157  0040  160A  118A  23D8   	fcall	_Menu
              120A  118A         
  2158  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  2159  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  2160  0047  00ED               	movwf	(??_main+0)+0
  2161  0048  086D               	movf	(??_main+0)+0,w
  2162  0049  1683               	bsf	status, 5	;RP0=1, select bank1
  2163  004A  1303               	bcf	status, 6	;RP1=0, select bank1
  2164  004B  00E3               	movwf	(main@choice)^080h
  2165                           	line	193
  2166                           	
  2167  004C                     l11943:	
  2168                           ;Main.c: 193: buttonPressed = 0;
  2169  004C  01FD               	clrf	(_buttonPressed)	;volatile
  2170  004D  2A92               	goto	l12027
  2171                           	line	194
  2172                           	
  2173  004E                     l2236:	
  2174                           	line	198
  2175                           ;Main.c: 194: }
  2176                           ;Main.c: 198: switch (choice)
  2177  004E  2A92               	goto	l12027
  2178                           	line	200
  2179                           ;Main.c: 199: {
  2180                           ;Main.c: 200: case 0:
  2181                           	
  2182  004F                     l2238:	
  2183                           	line	201
  2184                           	
  2185  004F                     l11945:	
  2186                           ;Main.c: 201: calibrateIR();
  2187  004F  160A  118A  24BF   	fcall	_calibrateIR
              120A  118A         
  2188                           	line	202
  2189                           ;Main.c: 202: break;
  2190  0054  2AA8               	goto	l12029
  2191                           	line	203
  2192                           ;Main.c: 203: case 1:
  2193                           	
  2194  0055                     l2240:	
  2195                           	line	204
  2196                           	
  2197  0055                     l11947:	
  2198                           ;Main.c: 204: shortwall = scan360();
  2199  0055  160A  118A  25F3   	fcall	_scan360
              120A  118A         
  2200  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  2201  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  2202  005C  085A               	movf	(1+(?_scan360)),w
  2203  005D  1683               	bsf	status, 5	;RP0=1, select bank1
  2204  005E  1303               	bcf	status, 6	;RP1=0, select bank1
  2205  005F  01E2               	clrf	(main@shortwall+1)^080h
  2206  0060  07E2               	addwf	(main@shortwall+1)^080h
  2207  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  2208  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  2209  0063  0859               	movf	(0+(?_scan360)),w
  2210  0064  1683               	bsf	status, 5	;RP0=1, select bank1
  2211  0065  1303               	bcf	status, 6	;RP1=0, select bank1
  2212  0066  01E1               	clrf	(main@shortwall)^080h
  2213  0067  07E1               	addwf	(main@shortwall)^080h
  2214                           
  2215                           	line	205
  2216                           	
  2217  0068                     l11949:	
  2218                           ;Main.c: 205: rotate((200 - shortwall), 0);
  2219  0068  0961               	comf	(main@shortwall)^080h,w
  2220  0069  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  006A  1303               	bcf	status, 6	;RP1=0, select bank0
  2222  006B  00ED               	movwf	(??_main+0)+0
  2223  006C  1683               	bsf	status, 5	;RP0=1, select bank1
  2224  006D  1303               	bcf	status, 6	;RP1=0, select bank1
  2225  006E  0962               	comf	(main@shortwall+1)^080h,w
  2226  006F  1283               	bcf	status, 5	;RP0=0, select bank0
  2227  0070  1303               	bcf	status, 6	;RP1=0, select bank0
  2228  0071  00EE               	movwf	((??_main+0)+0+1)
  2229  0072  0AED               	incf	(??_main+0)+0,f
  2230  0073  1903               	skipnz
  2231  0074  0AEE               	incf	((??_main+0)+0+1),f
  2232  0075  086D               	movf	0+(??_main+0)+0,w
  2233  0076  3EC8               	addlw	low(0C8h)
  2234  0077  00A3               	movwf	(?_rotate)
  2235  0078  086E               	movf	1+(??_main+0)+0,w
  2236  0079  1803               	skipnc
  2237  007A  3E01               	addlw	1
  2238  007B  3E00               	addlw	high(0C8h)
  2239  007C  00A4               	movwf	1+(?_rotate)
  2240  007D  01A5               	clrf	0+(?_rotate)+02h
  2241  007E  160A  118A  246F   	fcall	_rotate
              120A  118A         
  2242                           	line	206
  2243                           ;Main.c: 206: break;
  2244  0083  2AA8               	goto	l12029
  2245                           	line	207
  2246                           ;Main.c: 207: case 2:
  2247                           	
  2248  0084                     l2241:	
  2249                           	line	209
  2250                           	
  2251  0084                     l11951:	
  2252                           ;Main.c: 209: robotMoveSpeed(2000, 400);
  2253  0084  30D0               	movlw	low(07D0h)
  2254  0085  1283               	bcf	status, 5	;RP0=0, select bank0
  2255  0086  1303               	bcf	status, 6	;RP1=0, select bank0
  2256  0087  00DF               	movwf	(?_robotMoveSpeed)
  2257  0088  3007               	movlw	high(07D0h)
  2258  0089  00E0               	movwf	((?_robotMoveSpeed))+1
  2259  008A  3090               	movlw	low(0190h)
  2260  008B  00E1               	movwf	0+(?_robotMoveSpeed)+02h
  2261  008C  3001               	movlw	high(0190h)
  2262  008D  00E2               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2263  008E  120A  158A  2544   	fcall	_robotMoveSpeed
              120A  118A         
  2264                           	line	210
  2265                           ;Main.c: 210: break;
  2266  0093  2AA8               	goto	l12029
  2267                           	line	211
  2268                           ;Main.c: 211: case 3:
  2269                           	
  2270  0094                     l2242:	
  2271                           	line	213
  2272                           	
  2273  0094                     l11953:	
  2274                           ;Main.c: 213: robotFollow(2000, 400, adcVal);
  2275  0094  30D0               	movlw	low(07D0h)
  2276  0095  1283               	bcf	status, 5	;RP0=0, select bank0
  2277  0096  1303               	bcf	status, 6	;RP1=0, select bank0
  2278  0097  00DF               	movwf	(?_robotFollow)
  2279  0098  3007               	movlw	high(07D0h)
  2280  0099  00E0               	movwf	((?_robotFollow))+1
  2281  009A  3090               	movlw	low(0190h)
  2282  009B  00E1               	movwf	0+(?_robotFollow)+02h
  2283  009C  3001               	movlw	high(0190h)
  2284  009D  00E2               	movwf	(0+(?_robotFollow)+02h)+1
  2285  009E  1683               	bsf	status, 5	;RP0=1, select bank1
  2286  009F  1303               	bcf	status, 6	;RP1=0, select bank1
  2287  00A0  082B               	movf	(_adcVal+1)^080h,w	;volatile
  2288  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  2289  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  2290  00A3  01E4               	clrf	1+(?_robotFollow)+04h
  2291  00A4  07E4               	addwf	1+(?_robotFollow)+04h
  2292  00A5  1683               	bsf	status, 5	;RP0=1, select bank1
  2293  00A6  1303               	bcf	status, 6	;RP1=0, select bank1
  2294  00A7  082A               	movf	(_adcVal)^080h,w	;volatile
  2295  00A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2296  00A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2297  00AA  01E3               	clrf	0+(?_robotFollow)+04h
  2298  00AB  07E3               	addwf	0+(?_robotFollow)+04h
  2299                           
  2300  00AC  120A  118A  2518   	fcall	_robotFollow
              120A  118A         
  2301                           	line	215
  2302                           ;Main.c: 215: break;
  2303  00B1  2AA8               	goto	l12029
  2304                           	line	216
  2305                           ;Main.c: 216: case 4:
  2306                           	
  2307  00B2                     l2243:	
  2308                           	line	217
  2309                           	
  2310  00B2                     l11955:	
  2311                           ;Main.c: 217: TotalDistTravelled = 0;
  2312  00B2  1683               	bsf	status, 5	;RP0=1, select bank1
  2313  00B3  1303               	bcf	status, 6	;RP1=0, select bank1
  2314  00B4  01A8               	clrf	(_TotalDistTravelled)^080h
  2315  00B5  01A9               	clrf	(_TotalDistTravelled+1)^080h
  2316                           	line	218
  2317                           ;Main.c: 218: while(!ROBOTerror)
  2318  00B6  2A82               	goto	l12021
  2319                           	
  2320  00B7                     l2245:	
  2321                           	line	220
  2322                           	
  2323  00B7                     l11957:	
  2324                           ;Main.c: 219: {
  2325                           ;Main.c: 220: int shortwall = scan360();
  2326  00B7  160A  118A  25F3   	fcall	_scan360
              120A  118A         
  2327  00BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2328  00BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2329  00BE  085A               	movf	(1+(?_scan360)),w
  2330  00BF  1683               	bsf	status, 5	;RP0=1, select bank1
  2331  00C0  1303               	bcf	status, 6	;RP1=0, select bank1
  2332  00C1  01E5               	clrf	(main@shortwall_3025+1)^080h
  2333  00C2  07E5               	addwf	(main@shortwall_3025+1)^080h
  2334  00C3  1283               	bcf	status, 5	;RP0=0, select bank0
  2335  00C4  1303               	bcf	status, 6	;RP1=0, select bank0
  2336  00C5  0859               	movf	(0+(?_scan360)),w
  2337  00C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2338  00C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2339  00C8  01E4               	clrf	(main@shortwall_3025)^080h
  2340  00C9  07E4               	addwf	(main@shortwall_3025)^080h
  2341                           
  2342                           	line	221
  2343                           	
  2344  00CA                     l11959:	
  2345                           ;Main.c: 221: int RT2P = 0;
  2346  00CA  01E6               	clrf	(main@RT2P)^080h
  2347  00CB  01E7               	clrf	(main@RT2P+1)^080h
  2348                           	line	222
  2349                           	
  2350  00CC                     l11961:	
  2351                           ;Main.c: 222: int direction1 = 0;
  2352  00CC  01DD               	clrf	(main@direction1)^080h
  2353  00CD  01DE               	clrf	(main@direction1+1)^080h
  2354                           	line	223
  2355                           	
  2356  00CE                     l11963:	
  2357                           ;Main.c: 223: if (shortwall > 200)
  2358  00CE  0865               	movf	(main@shortwall_3025+1)^080h,w
  2359  00CF  3A80               	xorlw	80h
  2360  00D0  00FF               	movwf	btemp+1
  2361  00D1  3080               	movlw	(high(0C9h))^80h
  2362  00D2  027F               	subwf	btemp+1,w
  2363  00D3  1D03               	skipz
  2364  00D4  28D7               	goto	u5785
  2365  00D5  30C9               	movlw	low(0C9h)
  2366  00D6  0264               	subwf	(main@shortwall_3025)^080h,w
  2367  00D7                     u5785:
  2368                           
  2369  00D7  1C03               	skipc
  2370  00D8  28DA               	goto	u5781
  2371  00D9  28DB               	goto	u5780
  2372  00DA                     u5781:
  2373  00DA  28E6               	goto	l11967
  2374  00DB                     u5780:
  2375                           	line	224
  2376                           	
  2377  00DB                     l11965:	
  2378                           ;Main.c: 224: RT2P = shortwall + 100;
  2379  00DB  1683               	bsf	status, 5	;RP0=1, select bank1
  2380  00DC  1303               	bcf	status, 6	;RP1=0, select bank1
  2381  00DD  0864               	movf	(main@shortwall_3025)^080h,w
  2382  00DE  3E64               	addlw	low(064h)
  2383  00DF  00E6               	movwf	(main@RT2P)^080h
  2384  00E0  0865               	movf	(main@shortwall_3025+1)^080h,w
  2385  00E1  1803               	skipnc
  2386  00E2  3E01               	addlw	1
  2387  00E3  3E00               	addlw	high(064h)
  2388  00E4  00E7               	movwf	1+(main@RT2P)^080h
  2389  00E5  28E6               	goto	l11967
  2390                           	
  2391  00E6                     l2246:	
  2392                           	line	225
  2393                           	
  2394  00E6                     l11967:	
  2395                           ;Main.c: 225: if (shortwall < 200)
  2396  00E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2397  00E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2398  00E8  0865               	movf	(main@shortwall_3025+1)^080h,w
  2399  00E9  3A80               	xorlw	80h
  2400  00EA  00FF               	movwf	btemp+1
  2401  00EB  3080               	movlw	(high(0C8h))^80h
  2402  00EC  027F               	subwf	btemp+1,w
  2403  00ED  1D03               	skipz
  2404  00EE  28F1               	goto	u5795
  2405  00EF  30C8               	movlw	low(0C8h)
  2406  00F0  0264               	subwf	(main@shortwall_3025)^080h,w
  2407  00F1                     u5795:
  2408                           
  2409  00F1  1803               	skipnc
  2410  00F2  28F4               	goto	u5791
  2411  00F3  28F5               	goto	u5790
  2412  00F4                     u5791:
  2413  00F4  2900               	goto	l11971
  2414  00F5                     u5790:
  2415                           	line	226
  2416                           	
  2417  00F5                     l11969:	
  2418                           ;Main.c: 226: RT2P = shortwall - 100;
  2419  00F5  1683               	bsf	status, 5	;RP0=1, select bank1
  2420  00F6  1303               	bcf	status, 6	;RP1=0, select bank1
  2421  00F7  0864               	movf	(main@shortwall_3025)^080h,w
  2422  00F8  3E9C               	addlw	low(-100)
  2423  00F9  00E6               	movwf	(main@RT2P)^080h
  2424  00FA  0865               	movf	(main@shortwall_3025+1)^080h,w
  2425  00FB  1803               	skipnc
  2426  00FC  3E01               	addlw	1
  2427  00FD  3EFF               	addlw	high(-100)
  2428  00FE  00E7               	movwf	1+(main@RT2P)^080h
  2429  00FF  2900               	goto	l11971
  2430                           	
  2431  0100                     l2247:	
  2432                           	line	228
  2433                           	
  2434  0100                     l11971:	
  2435                           ;Main.c: 228: if (RT2P >= 400 && RT2P < 500 )
  2436  0100  1683               	bsf	status, 5	;RP0=1, select bank1
  2437  0101  1303               	bcf	status, 6	;RP1=0, select bank1
  2438  0102  0867               	movf	(main@RT2P+1)^080h,w
  2439  0103  3A80               	xorlw	80h
  2440  0104  00FF               	movwf	btemp+1
  2441  0105  3081               	movlw	(high(0190h))^80h
  2442  0106  027F               	subwf	btemp+1,w
  2443  0107  1D03               	skipz
  2444  0108  290B               	goto	u5805
  2445  0109  3090               	movlw	low(0190h)
  2446  010A  0266               	subwf	(main@RT2P)^080h,w
  2447  010B                     u5805:
  2448                           
  2449  010B  1C03               	skipc
  2450  010C  290E               	goto	u5801
  2451  010D  290F               	goto	u5800
  2452  010E                     u5801:
  2453  010E  292D               	goto	l11979
  2454  010F                     u5800:
  2455                           	
  2456  010F                     l11973:	
  2457  010F  1683               	bsf	status, 5	;RP0=1, select bank1
  2458  0110  1303               	bcf	status, 6	;RP1=0, select bank1
  2459  0111  0867               	movf	(main@RT2P+1)^080h,w
  2460  0112  3A80               	xorlw	80h
  2461  0113  00FF               	movwf	btemp+1
  2462  0114  3081               	movlw	(high(01F4h))^80h
  2463  0115  027F               	subwf	btemp+1,w
  2464  0116  1D03               	skipz
  2465  0117  291A               	goto	u5815
  2466  0118  30F4               	movlw	low(01F4h)
  2467  0119  0266               	subwf	(main@RT2P)^080h,w
  2468  011A                     u5815:
  2469                           
  2470  011A  1803               	skipnc
  2471  011B  291D               	goto	u5811
  2472  011C  291E               	goto	u5810
  2473  011D                     u5811:
  2474  011D  292D               	goto	l11979
  2475  011E                     u5810:
  2476                           	line	230
  2477                           	
  2478  011E                     l11975:	
  2479                           ;Main.c: 229: {
  2480                           ;Main.c: 230: RT2P = RT2P - 400;
  2481  011E  1683               	bsf	status, 5	;RP0=1, select bank1
  2482  011F  1303               	bcf	status, 6	;RP1=0, select bank1
  2483  0120  0866               	movf	(main@RT2P)^080h,w
  2484  0121  3E70               	addlw	low(-400)
  2485  0122  00E6               	movwf	(main@RT2P)^080h
  2486  0123  0867               	movf	(main@RT2P+1)^080h,w
  2487  0124  1803               	skipnc
  2488  0125  3E01               	addlw	1
  2489  0126  3EFE               	addlw	high(-400)
  2490  0127  00E7               	movwf	1+(main@RT2P)^080h
  2491                           	line	231
  2492                           	
  2493  0128                     l11977:	
  2494                           ;Main.c: 231: direction1 = 1;
  2495  0128  3001               	movlw	low(01h)
  2496  0129  00DD               	movwf	(main@direction1)^080h
  2497  012A  3000               	movlw	high(01h)
  2498  012B  00DE               	movwf	((main@direction1)^080h)+1
  2499  012C  292D               	goto	l11979
  2500                           	line	232
  2501                           	
  2502  012D                     l2248:	
  2503                           	line	233
  2504                           	
  2505  012D                     l11979:	
  2506                           ;Main.c: 232: }
  2507                           ;Main.c: 233: if (RT2P >= 200 && RT2P < 400)
  2508  012D  1683               	bsf	status, 5	;RP0=1, select bank1
  2509  012E  1303               	bcf	status, 6	;RP1=0, select bank1
  2510  012F  0867               	movf	(main@RT2P+1)^080h,w
  2511  0130  3A80               	xorlw	80h
  2512  0131  00FF               	movwf	btemp+1
  2513  0132  3080               	movlw	(high(0C8h))^80h
  2514  0133  027F               	subwf	btemp+1,w
  2515  0134  1D03               	skipz
  2516  0135  2938               	goto	u5825
  2517  0136  30C8               	movlw	low(0C8h)
  2518  0137  0266               	subwf	(main@RT2P)^080h,w
  2519  0138                     u5825:
  2520                           
  2521  0138  1C03               	skipc
  2522  0139  293B               	goto	u5821
  2523  013A  293C               	goto	u5820
  2524  013B                     u5821:
  2525  013B  2970               	goto	l11989
  2526  013C                     u5820:
  2527                           	
  2528  013C                     l11981:	
  2529  013C  1683               	bsf	status, 5	;RP0=1, select bank1
  2530  013D  1303               	bcf	status, 6	;RP1=0, select bank1
  2531  013E  0867               	movf	(main@RT2P+1)^080h,w
  2532  013F  3A80               	xorlw	80h
  2533  0140  00FF               	movwf	btemp+1
  2534  0141  3081               	movlw	(high(0190h))^80h
  2535  0142  027F               	subwf	btemp+1,w
  2536  0143  1D03               	skipz
  2537  0144  2947               	goto	u5835
  2538  0145  3090               	movlw	low(0190h)
  2539  0146  0266               	subwf	(main@RT2P)^080h,w
  2540  0147                     u5835:
  2541                           
  2542  0147  1803               	skipnc
  2543  0148  294A               	goto	u5831
  2544  0149  294B               	goto	u5830
  2545  014A                     u5831:
  2546  014A  2970               	goto	l11989
  2547  014B                     u5830:
  2548                           	line	235
  2549                           	
  2550  014B                     l11983:	
  2551                           ;Main.c: 234: {
  2552                           ;Main.c: 235: RT2P = 400 - RT2P;
  2553  014B  1683               	bsf	status, 5	;RP0=1, select bank1
  2554  014C  1303               	bcf	status, 6	;RP1=0, select bank1
  2555  014D  0966               	comf	(main@RT2P)^080h,w
  2556  014E  1283               	bcf	status, 5	;RP0=0, select bank0
  2557  014F  1303               	bcf	status, 6	;RP1=0, select bank0
  2558  0150  00ED               	movwf	(??_main+0)+0
  2559  0151  1683               	bsf	status, 5	;RP0=1, select bank1
  2560  0152  1303               	bcf	status, 6	;RP1=0, select bank1
  2561  0153  0967               	comf	(main@RT2P+1)^080h,w
  2562  0154  1283               	bcf	status, 5	;RP0=0, select bank0
  2563  0155  1303               	bcf	status, 6	;RP1=0, select bank0
  2564  0156  00EE               	movwf	((??_main+0)+0+1)
  2565  0157  0AED               	incf	(??_main+0)+0,f
  2566  0158  1903               	skipnz
  2567  0159  0AEE               	incf	((??_main+0)+0+1),f
  2568  015A  086D               	movf	0+(??_main+0)+0,w
  2569  015B  3E90               	addlw	low(0190h)
  2570  015C  1683               	bsf	status, 5	;RP0=1, select bank1
  2571  015D  1303               	bcf	status, 6	;RP1=0, select bank1
  2572  015E  00E6               	movwf	(main@RT2P)^080h
  2573  015F  1283               	bcf	status, 5	;RP0=0, select bank0
  2574  0160  1303               	bcf	status, 6	;RP1=0, select bank0
  2575  0161  086E               	movf	1+(??_main+0)+0,w
  2576  0162  1803               	skipnc
  2577  0163  3E01               	addlw	1
  2578  0164  3E01               	addlw	high(0190h)
  2579  0165  1683               	bsf	status, 5	;RP0=1, select bank1
  2580  0166  1303               	bcf	status, 6	;RP1=0, select bank1
  2581  0167  00E7               	movwf	1+(main@RT2P)^080h
  2582                           	line	236
  2583                           	
  2584  0168                     l11985:	
  2585                           ;Main.c: 236: RT2P = RT2P * -1;
  2586  0168  09E6               	comf	(main@RT2P)^080h,f
  2587  0169  09E7               	comf	(main@RT2P+1)^080h,f
  2588  016A  0AE6               	incf	(main@RT2P)^080h,f
  2589  016B  1903               	skipnz
  2590  016C  0AE7               	incf	(main@RT2P+1)^080h,f
  2591                           	line	237
  2592                           	
  2593  016D                     l11987:	
  2594                           ;Main.c: 237: direction1 = 0;
  2595  016D  01DD               	clrf	(main@direction1)^080h
  2596  016E  01DE               	clrf	(main@direction1+1)^080h
  2597  016F  2970               	goto	l11989
  2598                           	line	238
  2599                           	
  2600  0170                     l2249:	
  2601                           	line	239
  2602                           	
  2603  0170                     l11989:	
  2604                           ;Main.c: 238: }
  2605                           ;Main.c: 239: if (RT2P < 200 && RT2P >= 0)
  2606  0170  1683               	bsf	status, 5	;RP0=1, select bank1
  2607  0171  1303               	bcf	status, 6	;RP1=0, select bank1
  2608  0172  0867               	movf	(main@RT2P+1)^080h,w
  2609  0173  3A80               	xorlw	80h
  2610  0174  00FF               	movwf	btemp+1
  2611  0175  3080               	movlw	(high(0C8h))^80h
  2612  0176  027F               	subwf	btemp+1,w
  2613  0177  1D03               	skipz
  2614  0178  297B               	goto	u5845
  2615  0179  30C8               	movlw	low(0C8h)
  2616  017A  0266               	subwf	(main@RT2P)^080h,w
  2617  017B                     u5845:
  2618                           
  2619  017B  1803               	skipnc
  2620  017C  297E               	goto	u5841
  2621  017D  297F               	goto	u5840
  2622  017E                     u5841:
  2623  017E  298A               	goto	l11995
  2624  017F                     u5840:
  2625                           	
  2626  017F                     l11991:	
  2627  017F  1683               	bsf	status, 5	;RP0=1, select bank1
  2628  0180  1303               	bcf	status, 6	;RP1=0, select bank1
  2629  0181  1BE7               	btfsc	(main@RT2P+1)^080h,7
  2630  0182  2984               	goto	u5851
  2631  0183  2985               	goto	u5850
  2632  0184                     u5851:
  2633  0184  298A               	goto	l11995
  2634  0185                     u5850:
  2635                           	line	241
  2636                           	
  2637  0185                     l11993:	
  2638                           ;Main.c: 240: {
  2639                           ;Main.c: 241: direction1 = 1;
  2640  0185  3001               	movlw	low(01h)
  2641  0186  00DD               	movwf	(main@direction1)^080h
  2642  0187  3000               	movlw	high(01h)
  2643  0188  00DE               	movwf	((main@direction1)^080h)+1
  2644  0189  298A               	goto	l11995
  2645                           	line	242
  2646                           	
  2647  018A                     l2250:	
  2648                           	line	243
  2649                           	
  2650  018A                     l11995:	
  2651                           ;Main.c: 242: }
  2652                           ;Main.c: 243: if (RT2P < 0 && RT2P >= -200)
  2653  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  2654  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  2655  018C  1FE7               	btfss	(main@RT2P+1)^080h,7
  2656  018D  298F               	goto	u5861
  2657  018E  2990               	goto	u5860
  2658  018F                     u5861:
  2659  018F  29A2               	goto	l12001
  2660  0190                     u5860:
  2661                           	
  2662  0190                     l11997:	
  2663  0190  0867               	movf	(main@RT2P+1)^080h,w
  2664  0191  3A80               	xorlw	80h
  2665  0192  00FF               	movwf	btemp+1
  2666  0193  307F               	movlw	(high(-200))^80h
  2667  0194  027F               	subwf	btemp+1,w
  2668  0195  1D03               	skipz
  2669  0196  2999               	goto	u5875
  2670  0197  3038               	movlw	low(-200)
  2671  0198  0266               	subwf	(main@RT2P)^080h,w
  2672  0199                     u5875:
  2673                           
  2674  0199  1C03               	skipc
  2675  019A  299C               	goto	u5871
  2676  019B  299D               	goto	u5870
  2677  019C                     u5871:
  2678  019C  29A2               	goto	l12001
  2679  019D                     u5870:
  2680                           	line	245
  2681                           	
  2682  019D                     l11999:	
  2683                           ;Main.c: 244: {
  2684                           ;Main.c: 245: direction1 = 0;
  2685  019D  1683               	bsf	status, 5	;RP0=1, select bank1
  2686  019E  1303               	bcf	status, 6	;RP1=0, select bank1
  2687  019F  01DD               	clrf	(main@direction1)^080h
  2688  01A0  01DE               	clrf	(main@direction1+1)^080h
  2689  01A1  29A2               	goto	l12001
  2690                           	line	246
  2691                           	
  2692  01A2                     l2251:	
  2693                           	line	247
  2694                           	
  2695  01A2                     l12001:	
  2696                           ;Main.c: 246: }
  2697                           ;Main.c: 247: if(RT2P < -200 || RT2P >500)
  2698  01A2  1683               	bsf	status, 5	;RP0=1, select bank1
  2699  01A3  1303               	bcf	status, 6	;RP1=0, select bank1
  2700  01A4  0867               	movf	(main@RT2P+1)^080h,w
  2701  01A5  3A80               	xorlw	80h
  2702  01A6  00FF               	movwf	btemp+1
  2703  01A7  307F               	movlw	(high(-200))^80h
  2704  01A8  027F               	subwf	btemp+1,w
  2705  01A9  1D03               	skipz
  2706  01AA  29AD               	goto	u5885
  2707  01AB  3038               	movlw	low(-200)
  2708  01AC  0266               	subwf	(main@RT2P)^080h,w
  2709  01AD                     u5885:
  2710                           
  2711  01AD  1C03               	skipc
  2712  01AE  29B0               	goto	u5881
  2713  01AF  29B1               	goto	u5880
  2714  01B0                     u5881:
  2715  01B0  2AA8               	goto	l12029
  2716  01B1                     u5880:
  2717                           	
  2718  01B1                     l12003:	
  2719  01B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2720  01B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2721  01B3  0867               	movf	(main@RT2P+1)^080h,w
  2722  01B4  3A80               	xorlw	80h
  2723  01B5  00FF               	movwf	btemp+1
  2724  01B6  3081               	movlw	(high(01F5h))^80h
  2725  01B7  027F               	subwf	btemp+1,w
  2726  01B8  1D03               	skipz
  2727  01B9  29BC               	goto	u5895
  2728  01BA  30F5               	movlw	low(01F5h)
  2729  01BB  0266               	subwf	(main@RT2P)^080h,w
  2730  01BC                     u5895:
  2731                           
  2732  01BC  1C03               	skipc
  2733  01BD  29BF               	goto	u5891
  2734  01BE  29C0               	goto	u5890
  2735  01BF                     u5891:
  2736  01BF  29C2               	goto	l12005
  2737  01C0                     u5890:
  2738  01C0  2AA8               	goto	l12029
  2739                           	
  2740  01C1                     l2254:	
  2741                           	line	249
  2742                           ;Main.c: 248: {
  2743                           ;Main.c: 249: break;
  2744  01C1  2AA8               	goto	l12029
  2745                           	line	250
  2746                           	
  2747  01C2                     l2252:	
  2748                           	line	252
  2749                           	
  2750  01C2                     l12005:	
  2751                           ;Main.c: 250: }
  2752                           ;Main.c: 252: rotate((400 - shortwall ), 0);
  2753  01C2  1683               	bsf	status, 5	;RP0=1, select bank1
  2754  01C3  1303               	bcf	status, 6	;RP1=0, select bank1
  2755  01C4  0964               	comf	(main@shortwall_3025)^080h,w
  2756  01C5  1283               	bcf	status, 5	;RP0=0, select bank0
  2757  01C6  1303               	bcf	status, 6	;RP1=0, select bank0
  2758  01C7  00ED               	movwf	(??_main+0)+0
  2759  01C8  1683               	bsf	status, 5	;RP0=1, select bank1
  2760  01C9  1303               	bcf	status, 6	;RP1=0, select bank1
  2761  01CA  0965               	comf	(main@shortwall_3025+1)^080h,w
  2762  01CB  1283               	bcf	status, 5	;RP0=0, select bank0
  2763  01CC  1303               	bcf	status, 6	;RP1=0, select bank0
  2764  01CD  00EE               	movwf	((??_main+0)+0+1)
  2765  01CE  0AED               	incf	(??_main+0)+0,f
  2766  01CF  1903               	skipnz
  2767  01D0  0AEE               	incf	((??_main+0)+0+1),f
  2768  01D1  086D               	movf	0+(??_main+0)+0,w
  2769  01D2  3E90               	addlw	low(0190h)
  2770  01D3  00A3               	movwf	(?_rotate)
  2771  01D4  086E               	movf	1+(??_main+0)+0,w
  2772  01D5  1803               	skipnc
  2773  01D6  3E01               	addlw	1
  2774  01D7  3E01               	addlw	high(0190h)
  2775  01D8  00A4               	movwf	1+(?_rotate)
  2776  01D9  01A5               	clrf	0+(?_rotate)+02h
  2777  01DA  160A  118A  246F   	fcall	_rotate
              120A  118A         
  2778                           	line	253
  2779                           	
  2780  01DF                     l12007:	
  2781                           ;Main.c: 253: _delay((unsigned long)((100)*(20000000/4000.0)));
  2782                           	opt asmopt_off
  2783  01DF  3003               movlw  3
  2784  01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2785  01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2786  01E2  00EF               movwf	((??_main+0)+0+2),f
  2787  01E3  308A               movlw	138
  2788  01E4  00EE               movwf	((??_main+0)+0+1),f
  2789  01E5  3056               	movlw	86
  2790  01E6  00ED               movwf	((??_main+0)+0),f
  2791  01E7                     u5917:
  2792  01E7  0BED               	decfsz	((??_main+0)+0),f
  2793  01E8  29E7               	goto	u5917
  2794  01E9  0BEE               	decfsz	((??_main+0)+0+1),f
  2795  01EA  29E7               	goto	u5917
  2796  01EB  0BEF               	decfsz	((??_main+0)+0+2),f
  2797  01EC  29E7               	goto	u5917
  2798  01ED  29EE               	nop2
  2799                           opt asmopt_on
  2800                           
  2801                           	line	256
  2802                           	
  2803  01EE                     l12009:	
  2804                           ;Main.c: 256: int RT2A= RT2P * (36.0/40.0);
  2805  01EE  1683               	bsf	status, 5	;RP0=1, select bank1
  2806  01EF  1303               	bcf	status, 6	;RP1=0, select bank1
  2807  01F0  0867               	movf	(main@RT2P+1)^080h,w
  2808  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2809  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2810  01F3  01B7               	clrf	(?___awtoft+1)
  2811  01F4  07B7               	addwf	(?___awtoft+1)
  2812  01F5  1683               	bsf	status, 5	;RP0=1, select bank1
  2813  01F6  1303               	bcf	status, 6	;RP1=0, select bank1
  2814  01F7  0866               	movf	(main@RT2P)^080h,w
  2815  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2816  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2817  01FA  01B6               	clrf	(?___awtoft)
  2818  01FB  07B6               	addwf	(?___awtoft)
  2819                           
  2820  01FC  160A  118A  217B   	fcall	___awtoft
              120A  118A         
  2821  0201  1283               	bcf	status, 5	;RP0=0, select bank0
  2822  0202  1303               	bcf	status, 6	;RP1=0, select bank0
  2823  0203  0836               	movf	(0+(?___awtoft)),w
  2824  0204  00C9               	movwf	0+(?___ftmul)+03h
  2825  0205  0837               	movf	(1+(?___awtoft)),w
  2826  0206  00CA               	movwf	1+(?___ftmul)+03h
  2827  0207  0838               	movf	(2+(?___awtoft)),w
  2828  0208  00CB               	movwf	2+(?___ftmul)+03h
  2829  0209  3066               	movlw	0x66
  2830  020A  00C6               	movwf	(?___ftmul)
  2831  020B  3066               	movlw	0x66
  2832  020C  00C7               	movwf	(?___ftmul+1)
  2833  020D  303F               	movlw	0x3f
  2834  020E  00C8               	movwf	(?___ftmul+2)
  2835  020F  120A  158A  2336   	fcall	___ftmul
              120A  118A         
  2836  0214  1283               	bcf	status, 5	;RP0=0, select bank0
  2837  0215  1303               	bcf	status, 6	;RP1=0, select bank0
  2838  0216  0846               	movf	(0+(?___ftmul)),w
  2839  0217  00A8               	movwf	(?___fttol)
  2840  0218  0847               	movf	(1+(?___ftmul)),w
  2841  0219  00A9               	movwf	(?___fttol+1)
  2842  021A  0848               	movf	(2+(?___ftmul)),w
  2843  021B  00AA               	movwf	(?___fttol+2)
  2844  021C  120A  158A  2121   	fcall	___fttol
              120A  118A         
  2845  0221  1283               	bcf	status, 5	;RP0=0, select bank0
  2846  0222  1303               	bcf	status, 6	;RP1=0, select bank0
  2847  0223  0829               	movf	1+(((0+(?___fttol)))),w
  2848  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  2849  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  2850  0226  01E0               	clrf	(main@RT2A+1)^080h
  2851  0227  07E0               	addwf	(main@RT2A+1)^080h
  2852  0228  1283               	bcf	status, 5	;RP0=0, select bank0
  2853  0229  1303               	bcf	status, 6	;RP1=0, select bank0
  2854  022A  0828               	movf	0+(((0+(?___fttol)))),w
  2855  022B  1683               	bsf	status, 5	;RP0=1, select bank1
  2856  022C  1303               	bcf	status, 6	;RP1=0, select bank1
  2857  022D  01DF               	clrf	(main@RT2A)^080h
  2858  022E  07DF               	addwf	(main@RT2A)^080h
  2859                           
  2860                           	line	257
  2861                           	
  2862  022F                     l12011:	
  2863                           ;Main.c: 257: robotTurn(RT2A);
  2864  022F  0860               	movf	(main@RT2A+1)^080h,w
  2865  0230  1283               	bcf	status, 5	;RP0=0, select bank0
  2866  0231  1303               	bcf	status, 6	;RP1=0, select bank0
  2867  0232  01A3               	clrf	(?_robotTurn+1)
  2868  0233  07A3               	addwf	(?_robotTurn+1)
  2869  0234  1683               	bsf	status, 5	;RP0=1, select bank1
  2870  0235  1303               	bcf	status, 6	;RP1=0, select bank1
  2871  0236  085F               	movf	(main@RT2A)^080h,w
  2872  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  2873  0238  1303               	bcf	status, 6	;RP1=0, select bank0
  2874  0239  01A2               	clrf	(?_robotTurn)
  2875  023A  07A2               	addwf	(?_robotTurn)
  2876                           
  2877  023B  120A  158A  20AD   	fcall	_robotTurn
              120A  118A         
  2878                           	line	258
  2879                           	
  2880  0240                     l12013:	
  2881                           ;Main.c: 258: _delay((unsigned long)((100)*(20000000/4000.0)));
  2882                           	opt asmopt_off
  2883  0240  3003               movlw  3
  2884  0241  1283               	bcf	status, 5	;RP0=0, select bank0
  2885  0242  1303               	bcf	status, 6	;RP1=0, select bank0
  2886  0243  00EF               movwf	((??_main+0)+0+2),f
  2887  0244  308A               movlw	138
  2888  0245  00EE               movwf	((??_main+0)+0+1),f
  2889  0246  3056               	movlw	86
  2890  0247  00ED               movwf	((??_main+0)+0),f
  2891  0248                     u5927:
  2892  0248  0BED               	decfsz	((??_main+0)+0),f
  2893  0249  2A48               	goto	u5927
  2894  024A  0BEE               	decfsz	((??_main+0)+0+1),f
  2895  024B  2A48               	goto	u5927
  2896  024C  0BEF               	decfsz	((??_main+0)+0+2),f
  2897  024D  2A48               	goto	u5927
  2898  024E  2A4F               	nop2
  2899                           opt asmopt_on
  2900                           
  2901                           	line	259
  2902                           	
  2903  024F                     l12015:	
  2904                           ;Main.c: 259: rotate(shortwall,0);
  2905  024F  1683               	bsf	status, 5	;RP0=1, select bank1
  2906  0250  1303               	bcf	status, 6	;RP1=0, select bank1
  2907  0251  0865               	movf	(main@shortwall_3025+1)^080h,w
  2908  0252  1283               	bcf	status, 5	;RP0=0, select bank0
  2909  0253  1303               	bcf	status, 6	;RP1=0, select bank0
  2910  0254  01A4               	clrf	(?_rotate+1)
  2911  0255  07A4               	addwf	(?_rotate+1)
  2912  0256  1683               	bsf	status, 5	;RP0=1, select bank1
  2913  0257  1303               	bcf	status, 6	;RP1=0, select bank1
  2914  0258  0864               	movf	(main@shortwall_3025)^080h,w
  2915  0259  1283               	bcf	status, 5	;RP0=0, select bank0
  2916  025A  1303               	bcf	status, 6	;RP1=0, select bank0
  2917  025B  01A3               	clrf	(?_rotate)
  2918  025C  07A3               	addwf	(?_rotate)
  2919                           
  2920  025D  01A5               	clrf	0+(?_rotate)+02h
  2921  025E  160A  118A  246F   	fcall	_rotate
              120A  118A         
  2922                           	line	260
  2923                           	
  2924  0263                     l12017:	
  2925                           ;Main.c: 260: _delay((unsigned long)((100)*(20000000/4000.0)));
  2926                           	opt asmopt_off
  2927  0263  3003               movlw  3
  2928  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  2929  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  2930  0266  00EF               movwf	((??_main+0)+0+2),f
  2931  0267  308A               movlw	138
  2932  0268  00EE               movwf	((??_main+0)+0+1),f
  2933  0269  3056               	movlw	86
  2934  026A  00ED               movwf	((??_main+0)+0),f
  2935  026B                     u5937:
  2936  026B  0BED               	decfsz	((??_main+0)+0),f
  2937  026C  2A6B               	goto	u5937
  2938  026D  0BEE               	decfsz	((??_main+0)+0+1),f
  2939  026E  2A6B               	goto	u5937
  2940  026F  0BEF               	decfsz	((??_main+0)+0+2),f
  2941  0270  2A6B               	goto	u5937
  2942  0271  2A72               	nop2
  2943                           opt asmopt_on
  2944                           
  2945                           	line	261
  2946                           	
  2947  0272                     l12019:	
  2948                           ;Main.c: 261: robotMoveSpeed(500, 200);
  2949  0272  30F4               	movlw	low(01F4h)
  2950  0273  1283               	bcf	status, 5	;RP0=0, select bank0
  2951  0274  1303               	bcf	status, 6	;RP1=0, select bank0
  2952  0275  00DF               	movwf	(?_robotMoveSpeed)
  2953  0276  3001               	movlw	high(01F4h)
  2954  0277  00E0               	movwf	((?_robotMoveSpeed))+1
  2955  0278  30C8               	movlw	low(0C8h)
  2956  0279  00E1               	movwf	0+(?_robotMoveSpeed)+02h
  2957  027A  3000               	movlw	high(0C8h)
  2958  027B  00E2               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2959  027C  120A  158A  2544   	fcall	_robotMoveSpeed
              120A  118A         
  2960  0281  2A82               	goto	l12021
  2961                           	line	262
  2962                           	
  2963  0282                     l2244:	
  2964                           	line	218
  2965                           	
  2966  0282                     l12021:	
  2967  0282  1683               	bsf	status, 5	;RP0=1, select bank1
  2968  0283  1303               	bcf	status, 6	;RP1=0, select bank1
  2969  0284  0842               	movf	(_ROBOTerror)^080h,w
  2970  0285  1D03               	skipz
  2971  0286  2A88               	goto	u5900
  2972  0287  28B7               	goto	l11957
  2973  0288                     u5900:
  2974  0288  2AA8               	goto	l12029
  2975                           	
  2976  0289                     l2255:	
  2977                           	line	264
  2978                           ;Main.c: 262: }
  2979                           ;Main.c: 264: break;
  2980  0289  2AA8               	goto	l12029
  2981                           	line	266
  2982                           ;Main.c: 266: case 5:
  2983                           	
  2984  028A                     l2256:	
  2985                           	line	267
  2986                           	
  2987  028A                     l12023:	
  2988                           ;Main.c: 267: ChargeMode();
  2989  028A  160A  118A  2392   	fcall	_ChargeMode
              120A  118A         
  2990                           	line	268
  2991                           ;Main.c: 268: break;
  2992  028F  2AA8               	goto	l12029
  2993                           	line	269
  2994                           ;Main.c: 269: default:
  2995                           	
  2996  0290                     l2257:	
  2997                           	line	271
  2998                           ;Main.c: 271: break;
  2999  0290  2AA8               	goto	l12029
  3000                           	line	272
  3001                           	
  3002  0291                     l12025:	
  3003                           ;Main.c: 272: }
  3004  0291  2AA8               	goto	l12029
  3005                           	line	198
  3006                           	
  3007  0292                     l2237:	
  3008                           	
  3009  0292                     l12027:	
  3010  0292  1683               	bsf	status, 5	;RP0=1, select bank1
  3011  0293  1303               	bcf	status, 6	;RP1=0, select bank1
  3012  0294  0863               	movf	(main@choice)^080h,w
  3013                           	; Switch size 1, requested type "space"
  3014                           ; Number of cases is 6, Range of values is 0 to 5
  3015                           ; switch strategies available:
  3016                           ; Name         Instructions Cycles
  3017                           ; simple_byte           19    10 (average)
  3018                           ; direct_byte           26     8 (fixed)
  3019                           ; jumptable            260     6 (fixed)
  3020                           ; rangetable            10     6 (fixed)
  3021                           ; spacedrange           18     9 (fixed)
  3022                           ; locatedrange           6     3 (fixed)
  3023                           ;	Chosen strategy is simple_byte
  3024                           
  3025                           	opt asmopt_off
  3026  0295  3A00               	xorlw	0^0	; case 0
  3027  0296  1903               	skipnz
  3028  0297  284F               	goto	l11945
  3029  0298  3A01               	xorlw	1^0	; case 1
  3030  0299  1903               	skipnz
  3031  029A  2855               	goto	l11947
  3032  029B  3A03               	xorlw	2^1	; case 2
  3033  029C  1903               	skipnz
  3034  029D  2884               	goto	l11951
  3035  029E  3A01               	xorlw	3^2	; case 3
  3036  029F  1903               	skipnz
  3037  02A0  2894               	goto	l11953
  3038  02A1  3A07               	xorlw	4^3	; case 4
  3039  02A2  1903               	skipnz
  3040  02A3  28B2               	goto	l11955
  3041  02A4  3A01               	xorlw	5^4	; case 5
  3042  02A5  1903               	skipnz
  3043  02A6  2A8A               	goto	l12023
  3044  02A7  2AA8               	goto	l12029
  3045                           	opt asmopt_on
  3046                           
  3047                           	line	272
  3048                           	
  3049  02A8                     l2239:	
  3050                           	line	273
  3051                           	
  3052  02A8                     l12029:	
  3053                           ;Main.c: 273: choice = 255;
  3054  02A8  30FF               	movlw	(0FFh)
  3055  02A9  1283               	bcf	status, 5	;RP0=0, select bank0
  3056  02AA  1303               	bcf	status, 6	;RP1=0, select bank0
  3057  02AB  00ED               	movwf	(??_main+0)+0
  3058  02AC  086D               	movf	(??_main+0)+0,w
  3059  02AD  1683               	bsf	status, 5	;RP0=1, select bank1
  3060  02AE  1303               	bcf	status, 6	;RP1=0, select bank1
  3061  02AF  00E3               	movwf	(main@choice)^080h
  3062  02B0  2825               	goto	l11929
  3063                           	line	274
  3064                           	
  3065  02B1                     l2258:	
  3066                           	line	180
  3067  02B1  2825               	goto	l11929
  3068                           	
  3069  02B2                     l2259:	
  3070                           	line	275
  3071                           	
  3072  02B2                     l2260:	
  3073                           	global	start
  3074  02B2  120A  118A  2812   	ljmp	start
  3075                           	opt stack 0
  3076                           GLOBAL	__end_of_main
  3077  02B5                     	__end_of_main:
  3078 ;; =============== function _main ends ============
  3079                           
  3080                           	signat	_main,88
  3081                           	global	_ChargeMode
  3082                           psect	text1120,local,class=CODE,delta=2
  3083                           global __ptext1120
  3084  1392                     __ptext1120:
  3085                           
  3086 ;; *************** function _ChargeMode *****************
  3087 ;; Defined at:
  3088 ;;		line 321 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       1       0       0       0
  3105 ;;      Totals:         0       1       0       0       0
  3106 ;;Total ram usage:        1 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    6
  3109 ;; This function calls:
  3110 ;;		_ser_putch
  3111 ;;		_UpdateDisplay
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           psect	text1120
  3117                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3118                           	line	321
  3119                           	global	__size_of_ChargeMode
  3120  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3121                           	
  3122  1392                     _ChargeMode:	
  3123                           	opt	stack 1
  3124                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3125                           	line	323
  3126                           	
  3127  1392                     l11901:	
  3128                           ;Main.c: 323: currentMenu = 2;
  3129  1392  3002               	movlw	(02h)
  3130  1393  1283               	bcf	status, 5	;RP0=0, select bank0
  3131  1394  1303               	bcf	status, 6	;RP1=0, select bank0
  3132  1395  00D9               	movwf	(??_ChargeMode+0)+0
  3133  1396  0859               	movf	(??_ChargeMode+0)+0,w
  3134  1397  1683               	bsf	status, 5	;RP0=1, select bank1
  3135  1398  1303               	bcf	status, 6	;RP1=0, select bank1
  3136  1399  00C6               	movwf	(_currentMenu)^080h	;volatile
  3137                           	line	324
  3138                           	
  3139  139A                     l11903:	
  3140                           ;Main.c: 324: ser_putch(128);
  3141  139A  3080               	movlw	(080h)
  3142  139B  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  3143  13A0  2BA1               	goto	l11905
  3144                           	line	326
  3145                           ;Main.c: 326: while (1)
  3146                           	
  3147  13A1                     l2278:	
  3148                           	line	328
  3149                           	
  3150  13A1                     l11905:	
  3151                           ;Main.c: 327: {
  3152                           ;Main.c: 328: if (RTC_FLAG_250MS == 1)
  3153  13A1  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3154  13A2  2BA4               	goto	u5751
  3155  13A3  2BA5               	goto	u5750
  3156  13A4                     u5751:
  3157  13A4  2BC4               	goto	l11921
  3158  13A5                     u5750:
  3159                           	line	330
  3160                           	
  3161  13A5                     l11907:	
  3162                           ;Main.c: 329: {
  3163                           ;Main.c: 330: RTC_FLAG_250MS = 0;
  3164  13A5  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3165                           	line	331
  3166                           	
  3167  13A6                     l11909:	
  3168                           ;Main.c: 331: UpdateDisplay();
  3169  13A6  120A  158A  26A1   	fcall	_UpdateDisplay
              160A  118A         
  3170  13AB  2BC4               	goto	l11921
  3171                           	line	332
  3172                           	
  3173  13AC                     l2279:	
  3174                           	line	333
  3175                           ;Main.c: 332: }
  3176                           ;Main.c: 333: switch (buttonPressed)
  3177  13AC  2BC4               	goto	l11921
  3178                           	line	335
  3179                           ;Main.c: 334: {
  3180                           ;Main.c: 335: case 1:
  3181                           	
  3182  13AD                     l2281:	
  3183                           	line	336
  3184                           ;Main.c: 336: buttonPressed = 0;
  3185  13AD  01FD               	clrf	(_buttonPressed)	;volatile
  3186                           	line	337
  3187                           ;Main.c: 337: break;
  3188  13AE  2BA1               	goto	l11905
  3189                           	line	338
  3190                           ;Main.c: 338: case 2:
  3191                           	
  3192  13AF                     l2283:	
  3193                           	line	339
  3194                           ;Main.c: 339: buttonPressed = 0;
  3195  13AF  01FD               	clrf	(_buttonPressed)	;volatile
  3196                           	line	340
  3197                           ;Main.c: 340: break;
  3198  13B0  2BA1               	goto	l11905
  3199                           	line	341
  3200                           ;Main.c: 341: case 3:
  3201                           	
  3202  13B1                     l2284:	
  3203                           	line	342
  3204                           ;Main.c: 342: buttonPressed = 0;
  3205  13B1  01FD               	clrf	(_buttonPressed)	;volatile
  3206                           	line	343
  3207                           ;Main.c: 343: break;
  3208  13B2  2BA1               	goto	l11905
  3209                           	line	344
  3210                           ;Main.c: 344: case 4:
  3211                           	
  3212  13B3                     l2285:	
  3213                           	line	345
  3214                           ;Main.c: 345: buttonPressed = 0;
  3215  13B3  01FD               	clrf	(_buttonPressed)	;volatile
  3216                           	line	346
  3217                           ;Main.c: 346: break;
  3218  13B4  2BA1               	goto	l11905
  3219                           	line	347
  3220                           ;Main.c: 347: case 5:
  3221                           	
  3222  13B5                     l2286:	
  3223                           	line	348
  3224                           	
  3225  13B5                     l11911:	
  3226                           ;Main.c: 348: ser_putch(132);
  3227  13B5  3084               	movlw	(084h)
  3228  13B6  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  3229                           	line	349
  3230                           	
  3231  13BB                     l11913:	
  3232                           ;Main.c: 349: buttonPressed = 0;
  3233  13BB  01FD               	clrf	(_buttonPressed)	;volatile
  3234                           	line	350
  3235                           	
  3236  13BC                     l11915:	
  3237                           ;Main.c: 350: currentMenu = 0;
  3238  13BC  1683               	bsf	status, 5	;RP0=1, select bank1
  3239  13BD  1303               	bcf	status, 6	;RP1=0, select bank1
  3240  13BE  01C6               	clrf	(_currentMenu)^080h	;volatile
  3241  13BF  2BD7               	goto	l2287
  3242                           	line	351
  3243                           	
  3244  13C0                     l11917:	
  3245                           ;Main.c: 351: return;
  3246  13C0  2BD7               	goto	l2287
  3247                           	line	352
  3248                           ;Main.c: 352: default:
  3249                           	
  3250  13C1                     l2288:	
  3251                           	line	353
  3252                           ;Main.c: 353: buttonPressed = 0;
  3253  13C1  01FD               	clrf	(_buttonPressed)	;volatile
  3254                           	line	354
  3255                           ;Main.c: 354: break;
  3256  13C2  2BA1               	goto	l11905
  3257                           	line	355
  3258                           	
  3259  13C3                     l11919:	
  3260                           ;Main.c: 355: }
  3261  13C3  2BA1               	goto	l11905
  3262                           	line	333
  3263                           	
  3264  13C4                     l2280:	
  3265                           	
  3266  13C4                     l11921:	
  3267  13C4  087D               	movf	(_buttonPressed),w	;volatile
  3268                           	; Switch size 1, requested type "space"
  3269                           ; Number of cases is 5, Range of values is 1 to 5
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte           16     9 (average)
  3273                           ; direct_byte           26    11 (fixed)
  3274                           ; jumptable            263     9 (fixed)
  3275                           ;	Chosen strategy is simple_byte
  3276                           
  3277                           	opt asmopt_off
  3278  13C5  3A01               	xorlw	1^0	; case 1
  3279  13C6  1903               	skipnz
  3280  13C7  2BAD               	goto	l2281
  3281  13C8  3A03               	xorlw	2^1	; case 2
  3282  13C9  1903               	skipnz
  3283  13CA  2BAF               	goto	l2283
  3284  13CB  3A01               	xorlw	3^2	; case 3
  3285  13CC  1903               	skipnz
  3286  13CD  2BB1               	goto	l2284
  3287  13CE  3A07               	xorlw	4^3	; case 4
  3288  13CF  1903               	skipnz
  3289  13D0  2BB3               	goto	l2285
  3290  13D1  3A01               	xorlw	5^4	; case 5
  3291  13D2  1903               	skipnz
  3292  13D3  2BB5               	goto	l11911
  3293  13D4  2BC1               	goto	l2288
  3294                           	opt asmopt_on
  3295                           
  3296                           	line	355
  3297                           	
  3298  13D5                     l2282:	
  3299  13D5  2BA1               	goto	l11905
  3300                           	line	356
  3301                           	
  3302  13D6                     l2289:	
  3303                           	line	326
  3304  13D6  2BA1               	goto	l11905
  3305                           	
  3306  13D7                     l2290:	
  3307                           	line	357
  3308                           	
  3309  13D7                     l2287:	
  3310  13D7  0008               	return
  3311                           	opt stack 0
  3312                           GLOBAL	__end_of_ChargeMode
  3313  13D8                     	__end_of_ChargeMode:
  3314 ;; =============== function _ChargeMode ends ============
  3315                           
  3316                           	signat	_ChargeMode,88
  3317                           	global	_robotFollow
  3318                           psect	text1121,local,class=CODE,delta=2
  3319                           global __ptext1121
  3320  0518                     __ptext1121:
  3321                           
  3322 ;; *************** function _robotFollow *****************
  3323 ;; Defined at:
  3324 ;;		line 156 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  distance        2   63[BANK0 ] int 
  3327 ;;  speed           2   65[BANK0 ] int 
  3328 ;;  AdcTarget       2   67[BANK0 ] int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  remaining       3   72[BANK0 ] float 
  3331 ;;  temp1           2   75[BANK0 ] int 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;		None               void
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       6       0       0       0
  3342 ;;      Locals:         0       5       0       0       0
  3343 ;;      Temps:          0       3       0       0       0
  3344 ;;      Totals:         0      14       0       0       0
  3345 ;;Total ram usage:       14 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    7
  3348 ;; This function calls:
  3349 ;;		_RobotDrive
  3350 ;;		_readAvgDistance
  3351 ;;		_robot_read
  3352 ;;		_UpdateDisplay
  3353 ;;		_abs
  3354 ;;		___awtoft
  3355 ;;		___ftge
  3356 ;;		___ftdiv
  3357 ;;		___ftmul
  3358 ;;		___fttol
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           psect	text1121
  3364                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3365                           	line	156
  3366                           	global	__size_of_robotFollow
  3367  01CC                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  3368                           	
  3369  0518                     _robotFollow:	
  3370                           	opt	stack 0
  3371                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3372                           	line	157
  3373                           	
  3374  0518                     l11855:	
  3375                           ;robot.c: 157: distTravelled = 0;
  3376  0518  1683               	bsf	status, 5	;RP0=1, select bank1
  3377  0519  1303               	bcf	status, 6	;RP1=0, select bank1
  3378  051A  01AE               	clrf	(_distTravelled)^080h
  3379  051B  01AF               	clrf	(_distTravelled+1)^080h
  3380                           	line	159
  3381                           	
  3382  051C                     l11857:	
  3383                           ;robot.c: 158: int temp1;
  3384                           ;robot.c: 159: RobotDrive(speed, 0x7FFF);
  3385  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  3386  051D  1303               	bcf	status, 6	;RP1=0, select bank0
  3387  051E  0862               	movf	(robotFollow@speed+1),w
  3388  051F  01D7               	clrf	(?_RobotDrive+1)
  3389  0520  07D7               	addwf	(?_RobotDrive+1)
  3390  0521  0861               	movf	(robotFollow@speed),w
  3391  0522  01D6               	clrf	(?_RobotDrive)
  3392  0523  07D6               	addwf	(?_RobotDrive)
  3393                           
  3394  0524  30FF               	movlw	low(07FFFh)
  3395  0525  00D8               	movwf	0+(?_RobotDrive)+02h
  3396  0526  307F               	movlw	high(07FFFh)
  3397  0527  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  3398  0528  160A  118A  2294   	fcall	_RobotDrive
              120A  118A         
  3399                           	line	162
  3400                           ;robot.c: 162: while (abs(distTravelled) < abs(distance))
  3401  052D  2E9F               	goto	l11897
  3402                           	
  3403  052E                     l6056:	
  3404                           	line	164
  3405                           	
  3406  052E                     l11859:	
  3407                           ;robot.c: 163: {
  3408                           ;robot.c: 164: readAvgDistance();
  3409  052E  160A  118A  26EA   	fcall	_readAvgDistance
              120A  118A         
  3410                           	line	165
  3411                           	
  3412  0533                     l11861:	
  3413                           ;robot.c: 165: if (adcVal > (AdcTarget + 5))
  3414  0533  1283               	bcf	status, 5	;RP0=0, select bank0
  3415  0534  1303               	bcf	status, 6	;RP1=0, select bank0
  3416  0535  0863               	movf	(robotFollow@AdcTarget),w
  3417  0536  3E05               	addlw	low(05h)
  3418  0537  00E5               	movwf	(??_robotFollow+0)+0
  3419  0538  0864               	movf	(robotFollow@AdcTarget+1),w
  3420  0539  1803               	skipnc
  3421  053A  3E01               	addlw	1
  3422  053B  3E00               	addlw	high(05h)
  3423  053C  00E6               	movwf	1+(??_robotFollow+0)+0
  3424  053D  1683               	bsf	status, 5	;RP0=1, select bank1
  3425  053E  1303               	bcf	status, 6	;RP1=0, select bank1
  3426  053F  082B               	movf	(_adcVal+1)^080h,w	;volatile
  3427  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  3428  0541  1303               	bcf	status, 6	;RP1=0, select bank0
  3429  0542  0266               	subwf	1+(??_robotFollow+0)+0,w
  3430  0543  1D03               	skipz
  3431  0544  2D4B               	goto	u5695
  3432  0545  1683               	bsf	status, 5	;RP0=1, select bank1
  3433  0546  1303               	bcf	status, 6	;RP1=0, select bank1
  3434  0547  082A               	movf	(_adcVal)^080h,w	;volatile
  3435  0548  1283               	bcf	status, 5	;RP0=0, select bank0
  3436  0549  1303               	bcf	status, 6	;RP1=0, select bank0
  3437  054A  0265               	subwf	0+(??_robotFollow+0)+0,w
  3438  054B                     u5695:
  3439  054B  1803               	skipnc
  3440  054C  2D4E               	goto	u5691
  3441  054D  2D4F               	goto	u5690
  3442  054E                     u5691:
  3443  054E  2D5F               	goto	l11865
  3444  054F                     u5690:
  3445                           	line	167
  3446                           	
  3447  054F                     l11863:	
  3448                           ;robot.c: 166: {
  3449                           ;robot.c: 167: RobotDrive(speed, 1800);
  3450  054F  0862               	movf	(robotFollow@speed+1),w
  3451  0550  01D7               	clrf	(?_RobotDrive+1)
  3452  0551  07D7               	addwf	(?_RobotDrive+1)
  3453  0552  0861               	movf	(robotFollow@speed),w
  3454  0553  01D6               	clrf	(?_RobotDrive)
  3455  0554  07D6               	addwf	(?_RobotDrive)
  3456                           
  3457  0555  3008               	movlw	low(0708h)
  3458  0556  00D8               	movwf	0+(?_RobotDrive)+02h
  3459  0557  3007               	movlw	high(0708h)
  3460  0558  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  3461  0559  160A  118A  2294   	fcall	_RobotDrive
              120A  118A         
  3462                           	line	168
  3463                           ;robot.c: 168: }
  3464  055E  2D9D               	goto	l6058
  3465                           	line	169
  3466                           	
  3467  055F                     l6057:	
  3468                           	
  3469  055F                     l11865:	
  3470                           ;robot.c: 169: else if (adcVal < (AdcTarget - 5))
  3471  055F  1283               	bcf	status, 5	;RP0=0, select bank0
  3472  0560  1303               	bcf	status, 6	;RP1=0, select bank0
  3473  0561  0863               	movf	(robotFollow@AdcTarget),w
  3474  0562  3EFB               	addlw	low(0FFFBh)
  3475  0563  00E5               	movwf	(??_robotFollow+0)+0
  3476  0564  0864               	movf	(robotFollow@AdcTarget+1),w
  3477  0565  1803               	skipnc
  3478  0566  3E01               	addlw	1
  3479  0567  3EFF               	addlw	high(0FFFBh)
  3480  0568  00E6               	movwf	1+(??_robotFollow+0)+0
  3481  0569  0866               	movf	1+(??_robotFollow+0)+0,w
  3482  056A  1683               	bsf	status, 5	;RP0=1, select bank1
  3483  056B  1303               	bcf	status, 6	;RP1=0, select bank1
  3484  056C  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  3485  056D  1D03               	skipz
  3486  056E  2D75               	goto	u5705
  3487  056F  1283               	bcf	status, 5	;RP0=0, select bank0
  3488  0570  1303               	bcf	status, 6	;RP1=0, select bank0
  3489  0571  0865               	movf	0+(??_robotFollow+0)+0,w
  3490  0572  1683               	bsf	status, 5	;RP0=1, select bank1
  3491  0573  1303               	bcf	status, 6	;RP1=0, select bank1
  3492  0574  022A               	subwf	(_adcVal)^080h,w	;volatile
  3493  0575                     u5705:
  3494  0575  1803               	skipnc
  3495  0576  2D78               	goto	u5701
  3496  0577  2D79               	goto	u5700
  3497  0578                     u5701:
  3498  0578  2D8B               	goto	l11869
  3499  0579                     u5700:
  3500                           	line	171
  3501                           	
  3502  0579                     l11867:	
  3503                           ;robot.c: 170: {
  3504                           ;robot.c: 171: RobotDrive(speed, -1800);
  3505  0579  1283               	bcf	status, 5	;RP0=0, select bank0
  3506  057A  1303               	bcf	status, 6	;RP1=0, select bank0
  3507  057B  0862               	movf	(robotFollow@speed+1),w
  3508  057C  01D7               	clrf	(?_RobotDrive+1)
  3509  057D  07D7               	addwf	(?_RobotDrive+1)
  3510  057E  0861               	movf	(robotFollow@speed),w
  3511  057F  01D6               	clrf	(?_RobotDrive)
  3512  0580  07D6               	addwf	(?_RobotDrive)
  3513                           
  3514  0581  30F8               	movlw	low(-1800)
  3515  0582  00D8               	movwf	0+(?_RobotDrive)+02h
  3516  0583  30F8               	movlw	high(-1800)
  3517  0584  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  3518  0585  160A  118A  2294   	fcall	_RobotDrive
              120A  118A         
  3519                           	line	172
  3520                           ;robot.c: 172: }
  3521  058A  2D9D               	goto	l6058
  3522                           	line	173
  3523                           	
  3524  058B                     l6059:	
  3525                           	line	175
  3526                           	
  3527  058B                     l11869:	
  3528                           ;robot.c: 173: else
  3529                           ;robot.c: 174: {
  3530                           ;robot.c: 175: RobotDrive(speed, 0x7FFF);
  3531  058B  1283               	bcf	status, 5	;RP0=0, select bank0
  3532  058C  1303               	bcf	status, 6	;RP1=0, select bank0
  3533  058D  0862               	movf	(robotFollow@speed+1),w
  3534  058E  01D7               	clrf	(?_RobotDrive+1)
  3535  058F  07D7               	addwf	(?_RobotDrive+1)
  3536  0590  0861               	movf	(robotFollow@speed),w
  3537  0591  01D6               	clrf	(?_RobotDrive)
  3538  0592  07D6               	addwf	(?_RobotDrive)
  3539                           
  3540  0593  30FF               	movlw	low(07FFFh)
  3541  0594  00D8               	movwf	0+(?_RobotDrive)+02h
  3542  0595  307F               	movlw	high(07FFFh)
  3543  0596  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  3544  0597  160A  118A  2294   	fcall	_RobotDrive
              120A  118A         
  3545  059C  2D9D               	goto	l6058
  3546                           	line	176
  3547                           	
  3548  059D                     l6060:	
  3549                           	
  3550  059D                     l6058:	
  3551                           	line	177
  3552                           ;robot.c: 176: }
  3553                           ;robot.c: 177: robot_read(0);
  3554  059D  3000               	movlw	(0)
  3555  059E  120A  158A  2424   	fcall	_robot_read
              120A  118A         
  3556                           	line	178
  3557                           	
  3558  05A3                     l11871:	
  3559                           ;robot.c: 178: if (BumpSensors || VwallSensor)
  3560  05A3  1683               	bsf	status, 5	;RP0=1, select bank1
  3561  05A4  1303               	bcf	status, 6	;RP1=0, select bank1
  3562  05A5  08BC               	movf	(_BumpSensors)^080h,f
  3563  05A6  1D03               	skipz	;volatile
  3564  05A7  2DA9               	goto	u5711
  3565  05A8  2DAA               	goto	u5710
  3566  05A9                     u5711:
  3567  05A9  2DAF               	goto	l11875
  3568  05AA                     u5710:
  3569                           	
  3570  05AA                     l11873:	
  3571  05AA  0845               	movf	(_VwallSensor)^080h,w	;volatile
  3572  05AB  1D03               	skipz
  3573  05AC  2DAE               	goto	u5720
  3574  05AD  2DB3               	goto	l11877
  3575  05AE                     u5720:
  3576  05AE  2DAF               	goto	l11875
  3577                           	
  3578  05AF                     l6063:	
  3579                           	line	180
  3580                           	
  3581  05AF                     l11875:	
  3582                           ;robot.c: 179: {
  3583                           ;robot.c: 180: ROBOTerror = 1;
  3584  05AF  01C2               	clrf	(_ROBOTerror)^080h
  3585  05B0  1403               	bsf	status,0
  3586  05B1  0DC2               	rlf	(_ROBOTerror)^080h,f
  3587                           	line	181
  3588                           ;robot.c: 181: break;
  3589  05B2  2ED4               	goto	l11899
  3590                           	line	182
  3591                           	
  3592  05B3                     l6061:	
  3593                           	line	183
  3594                           	
  3595  05B3                     l11877:	
  3596                           ;robot.c: 182: }
  3597                           ;robot.c: 183: temp1 = DistHighByte;
  3598  05B3  083E               	movf	(_DistHighByte)^080h,w	;volatile
  3599  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  3600  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  3601  05B6  00E5               	movwf	(??_robotFollow+0)+0
  3602  05B7  01E6               	clrf	(??_robotFollow+0)+0+1
  3603  05B8  0865               	movf	0+(??_robotFollow+0)+0,w
  3604  05B9  00EB               	movwf	(robotFollow@temp1)
  3605  05BA  0866               	movf	1+(??_robotFollow+0)+0,w
  3606  05BB  00EC               	movwf	(robotFollow@temp1+1)
  3607                           	line	184
  3608                           	
  3609  05BC                     l11879:	
  3610                           ;robot.c: 184: temp1 = temp1 << 8;
  3611  05BC  086C               	movf	(robotFollow@temp1+1),w
  3612  05BD  00E6               	movwf	(??_robotFollow+0)+0+1
  3613  05BE  086B               	movf	(robotFollow@temp1),w
  3614  05BF  00E5               	movwf	(??_robotFollow+0)+0
  3615  05C0  0865               	movf	(??_robotFollow+0)+0,w
  3616  05C1  00E6               	movwf	(??_robotFollow+0)+1
  3617  05C2  01E5               	clrf	(??_robotFollow+0)+0
  3618  05C3  0865               	movf	0+(??_robotFollow+0)+0,w
  3619  05C4  00EB               	movwf	(robotFollow@temp1)
  3620  05C5  0866               	movf	1+(??_robotFollow+0)+0,w
  3621  05C6  00EC               	movwf	(robotFollow@temp1+1)
  3622                           	line	185
  3623                           	
  3624  05C7                     l11881:	
  3625                           ;robot.c: 185: temp1 += DistLowByte;
  3626  05C7  1683               	bsf	status, 5	;RP0=1, select bank1
  3627  05C8  1303               	bcf	status, 6	;RP1=0, select bank1
  3628  05C9  083F               	movf	(_DistLowByte)^080h,w	;volatile
  3629  05CA  1283               	bcf	status, 5	;RP0=0, select bank0
  3630  05CB  1303               	bcf	status, 6	;RP1=0, select bank0
  3631  05CC  00E5               	movwf	(??_robotFollow+0)+0
  3632  05CD  01E6               	clrf	(??_robotFollow+0)+0+1
  3633  05CE  0865               	movf	0+(??_robotFollow+0)+0,w
  3634  05CF  07EB               	addwf	(robotFollow@temp1),f
  3635  05D0  1803               	skipnc
  3636  05D1  0AEC               	incf	(robotFollow@temp1+1),f
  3637  05D2  0866               	movf	1+(??_robotFollow+0)+0,w
  3638  05D3  07EC               	addwf	(robotFollow@temp1+1),f
  3639                           	line	186
  3640                           	
  3641  05D4                     l11883:	
  3642                           ;robot.c: 186: distTravelled += temp1;
  3643  05D4  086B               	movf	(robotFollow@temp1),w
  3644  05D5  1683               	bsf	status, 5	;RP0=1, select bank1
  3645  05D6  1303               	bcf	status, 6	;RP1=0, select bank1
  3646  05D7  07AE               	addwf	(_distTravelled)^080h,f
  3647  05D8  1803               	skipnc
  3648  05D9  0AAF               	incf	(_distTravelled+1)^080h,f
  3649  05DA  1283               	bcf	status, 5	;RP0=0, select bank0
  3650  05DB  1303               	bcf	status, 6	;RP1=0, select bank0
  3651  05DC  086C               	movf	(robotFollow@temp1+1),w
  3652  05DD  1683               	bsf	status, 5	;RP0=1, select bank1
  3653  05DE  1303               	bcf	status, 6	;RP1=0, select bank1
  3654  05DF  07AF               	addwf	(_distTravelled+1)^080h,f
  3655                           	line	187
  3656                           	
  3657  05E0                     l11885:	
  3658                           ;robot.c: 187: TotalDistTravelled += temp1;
  3659  05E0  1283               	bcf	status, 5	;RP0=0, select bank0
  3660  05E1  1303               	bcf	status, 6	;RP1=0, select bank0
  3661  05E2  086B               	movf	(robotFollow@temp1),w
  3662  05E3  1683               	bsf	status, 5	;RP0=1, select bank1
  3663  05E4  1303               	bcf	status, 6	;RP1=0, select bank1
  3664  05E5  07A8               	addwf	(_TotalDistTravelled)^080h,f
  3665  05E6  1803               	skipnc
  3666  05E7  0AA9               	incf	(_TotalDistTravelled+1)^080h,f
  3667  05E8  1283               	bcf	status, 5	;RP0=0, select bank0
  3668  05E9  1303               	bcf	status, 6	;RP1=0, select bank0
  3669  05EA  086C               	movf	(robotFollow@temp1+1),w
  3670  05EB  1683               	bsf	status, 5	;RP0=1, select bank1
  3671  05EC  1303               	bcf	status, 6	;RP1=0, select bank1
  3672  05ED  07A9               	addwf	(_TotalDistTravelled+1)^080h,f
  3673                           	line	188
  3674                           	
  3675  05EE                     l11887:	
  3676                           ;robot.c: 188: Disp2 = distTravelled;
  3677  05EE  082F               	movf	(_distTravelled+1)^080h,w
  3678  05EF  01A3               	clrf	(_Disp2+1)^080h
  3679  05F0  07A3               	addwf	(_Disp2+1)^080h
  3680  05F1  082E               	movf	(_distTravelled)^080h,w
  3681  05F2  01A2               	clrf	(_Disp2)^080h
  3682  05F3  07A2               	addwf	(_Disp2)^080h
  3683                           
  3684                           	line	189
  3685                           	
  3686  05F4                     l11889:	
  3687                           ;robot.c: 189: UpdateDisplay();
  3688  05F4  120A  158A  26A1   	fcall	_UpdateDisplay
              120A  118A         
  3689                           	line	190
  3690                           	
  3691  05F9                     l11891:	
  3692                           ;robot.c: 190: float remaining = abs(distance) - abs(distTravelled) ;
  3693  05F9  1683               	bsf	status, 5	;RP0=1, select bank1
  3694  05FA  1303               	bcf	status, 6	;RP1=0, select bank1
  3695  05FB  082F               	movf	(_distTravelled+1)^080h,w
  3696  05FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3697  05FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3698  05FE  01A7               	clrf	(?_abs+1)
  3699  05FF  07A7               	addwf	(?_abs+1)
  3700  0600  1683               	bsf	status, 5	;RP0=1, select bank1
  3701  0601  1303               	bcf	status, 6	;RP1=0, select bank1
  3702  0602  082E               	movf	(_distTravelled)^080h,w
  3703  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  3704  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  3705  0605  01A6               	clrf	(?_abs)
  3706  0606  07A6               	addwf	(?_abs)
  3707                           
  3708  0607  160A  118A  225F   	fcall	_abs
              120A  118A         
  3709  060C  1283               	bcf	status, 5	;RP0=0, select bank0
  3710  060D  1303               	bcf	status, 6	;RP1=0, select bank0
  3711  060E  0926               	comf	(0+(?_abs)),w
  3712  060F  00E5               	movwf	(??_robotFollow+0)+0
  3713  0610  0927               	comf	(1+(?_abs)),w
  3714  0611  00E6               	movwf	((??_robotFollow+0)+0+1)
  3715  0612  0AE5               	incf	(??_robotFollow+0)+0,f
  3716  0613  1903               	skipnz
  3717  0614  0AE6               	incf	((??_robotFollow+0)+0+1),f
  3718  0615  0860               	movf	(robotFollow@distance+1),w
  3719  0616  01A7               	clrf	(?_abs+1)
  3720  0617  07A7               	addwf	(?_abs+1)
  3721  0618  085F               	movf	(robotFollow@distance),w
  3722  0619  01A6               	clrf	(?_abs)
  3723  061A  07A6               	addwf	(?_abs)
  3724                           
  3725  061B  160A  118A  225F   	fcall	_abs
              120A  118A         
  3726  0620  1283               	bcf	status, 5	;RP0=0, select bank0
  3727  0621  1303               	bcf	status, 6	;RP1=0, select bank0
  3728  0622  0865               	movf	0+(??_robotFollow+0)+0,w
  3729  0623  0726               	addwf	(0+(?_abs)),w
  3730  0624  00B6               	movwf	(?___awtoft)
  3731  0625  0866               	movf	1+(??_robotFollow+0)+0,w
  3732  0626  1803               	skipnc
  3733  0627  0A66               	incf	1+(??_robotFollow+0)+0,w
  3734  0628  0727               	addwf	(1+(?_abs)),w
  3735  0629  00B7               	movwf	1+(?___awtoft)
  3736  062A  160A  118A  217B   	fcall	___awtoft
              120A  118A         
  3737  062F  1283               	bcf	status, 5	;RP0=0, select bank0
  3738  0630  1303               	bcf	status, 6	;RP1=0, select bank0
  3739  0631  0836               	movf	(0+(?___awtoft)),w
  3740  0632  00E8               	movwf	(robotFollow@remaining)
  3741  0633  0837               	movf	(1+(?___awtoft)),w
  3742  0634  00E9               	movwf	(robotFollow@remaining+1)
  3743  0635  0838               	movf	(2+(?___awtoft)),w
  3744  0636  00EA               	movwf	(robotFollow@remaining+2)
  3745                           	line	191
  3746                           	
  3747  0637                     l11893:	
  3748                           ;robot.c: 191: if ( remaining < 100)
  3749  0637  0868               	movf	(robotFollow@remaining),w
  3750  0638  00A0               	movwf	(?___ftge)
  3751  0639  0869               	movf	(robotFollow@remaining+1),w
  3752  063A  00A1               	movwf	(?___ftge+1)
  3753  063B  086A               	movf	(robotFollow@remaining+2),w
  3754  063C  00A2               	movwf	(?___ftge+2)
  3755  063D  3000               	movlw	0x0
  3756  063E  00A3               	movwf	0+(?___ftge)+03h
  3757  063F  30C8               	movlw	0xc8
  3758  0640  00A4               	movwf	1+(?___ftge)+03h
  3759  0641  3042               	movlw	0x42
  3760  0642  00A5               	movwf	2+(?___ftge)+03h
  3761  0643  160A  118A  2585   	fcall	___ftge
              120A  118A         
  3762  0648  1803               	btfsc	status,0
  3763  0649  2E4B               	goto	u5731
  3764  064A  2E4C               	goto	u5730
  3765  064B                     u5731:
  3766  064B  2E9F               	goto	l11897
  3767  064C                     u5730:
  3768                           	line	193
  3769                           	
  3770  064C                     l11895:	
  3771                           ;robot.c: 192: {
  3772                           ;robot.c: 193: RobotDrive(speed * (remaining/100.0), 0x7FFF);
  3773  064C  1283               	bcf	status, 5	;RP0=0, select bank0
  3774  064D  1303               	bcf	status, 6	;RP1=0, select bank0
  3775  064E  0862               	movf	(robotFollow@speed+1),w
  3776  064F  01B7               	clrf	(?___awtoft+1)
  3777  0650  07B7               	addwf	(?___awtoft+1)
  3778  0651  0861               	movf	(robotFollow@speed),w
  3779  0652  01B6               	clrf	(?___awtoft)
  3780  0653  07B6               	addwf	(?___awtoft)
  3781                           
  3782  0654  160A  118A  217B   	fcall	___awtoft
              120A  118A         
  3783  0659  1283               	bcf	status, 5	;RP0=0, select bank0
  3784  065A  1303               	bcf	status, 6	;RP1=0, select bank0
  3785  065B  0836               	movf	(0+(?___awtoft)),w
  3786  065C  00C9               	movwf	0+(?___ftmul)+03h
  3787  065D  0837               	movf	(1+(?___awtoft)),w
  3788  065E  00CA               	movwf	1+(?___ftmul)+03h
  3789  065F  0838               	movf	(2+(?___awtoft)),w
  3790  0660  00CB               	movwf	2+(?___ftmul)+03h
  3791  0661  0868               	movf	(robotFollow@remaining),w
  3792  0662  00B9               	movwf	0+(?___ftdiv)+03h
  3793  0663  0869               	movf	(robotFollow@remaining+1),w
  3794  0664  00BA               	movwf	1+(?___ftdiv)+03h
  3795  0665  086A               	movf	(robotFollow@remaining+2),w
  3796  0666  00BB               	movwf	2+(?___ftdiv)+03h
  3797  0667  3000               	movlw	0x0
  3798  0668  00B6               	movwf	(?___ftdiv)
  3799  0669  30C8               	movlw	0xc8
  3800  066A  00B7               	movwf	(?___ftdiv+1)
  3801  066B  3042               	movlw	0x42
  3802  066C  00B8               	movwf	(?___ftdiv+2)
  3803  066D  120A  158A  226E   	fcall	___ftdiv
              120A  118A         
  3804  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  3805  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  3806  0674  0836               	movf	(0+(?___ftdiv)),w
  3807  0675  00C6               	movwf	(?___ftmul)
  3808  0676  0837               	movf	(1+(?___ftdiv)),w
  3809  0677  00C7               	movwf	(?___ftmul+1)
  3810  0678  0838               	movf	(2+(?___ftdiv)),w
  3811  0679  00C8               	movwf	(?___ftmul+2)
  3812  067A  120A  158A  2336   	fcall	___ftmul
              120A  118A         
  3813  067F  1283               	bcf	status, 5	;RP0=0, select bank0
  3814  0680  1303               	bcf	status, 6	;RP1=0, select bank0
  3815  0681  0846               	movf	(0+(?___ftmul)),w
  3816  0682  00A8               	movwf	(?___fttol)
  3817  0683  0847               	movf	(1+(?___ftmul)),w
  3818  0684  00A9               	movwf	(?___fttol+1)
  3819  0685  0848               	movf	(2+(?___ftmul)),w
  3820  0686  00AA               	movwf	(?___fttol+2)
  3821  0687  120A  158A  2121   	fcall	___fttol
              120A  118A         
  3822  068C  1283               	bcf	status, 5	;RP0=0, select bank0
  3823  068D  1303               	bcf	status, 6	;RP1=0, select bank0
  3824  068E  0829               	movf	1+(((0+(?___fttol)))),w
  3825  068F  01D7               	clrf	(?_RobotDrive+1)
  3826  0690  07D7               	addwf	(?_RobotDrive+1)
  3827  0691  0828               	movf	0+(((0+(?___fttol)))),w
  3828  0692  01D6               	clrf	(?_RobotDrive)
  3829  0693  07D6               	addwf	(?_RobotDrive)
  3830                           
  3831  0694  30FF               	movlw	low(07FFFh)
  3832  0695  00D8               	movwf	0+(?_RobotDrive)+02h
  3833  0696  307F               	movlw	high(07FFFh)
  3834  0697  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  3835  0698  160A  118A  2294   	fcall	_RobotDrive
              120A  118A         
  3836  069D  2E9F               	goto	l11897
  3837                           	line	194
  3838                           	
  3839  069E                     l6065:	
  3840  069E  2E9F               	goto	l11897
  3841                           	line	195
  3842                           	
  3843  069F                     l6055:	
  3844                           	line	162
  3845                           	
  3846  069F                     l11897:	
  3847  069F  1683               	bsf	status, 5	;RP0=1, select bank1
  3848  06A0  1303               	bcf	status, 6	;RP1=0, select bank1
  3849  06A1  082F               	movf	(_distTravelled+1)^080h,w
  3850  06A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3851  06A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3852  06A4  01A7               	clrf	(?_abs+1)
  3853  06A5  07A7               	addwf	(?_abs+1)
  3854  06A6  1683               	bsf	status, 5	;RP0=1, select bank1
  3855  06A7  1303               	bcf	status, 6	;RP1=0, select bank1
  3856  06A8  082E               	movf	(_distTravelled)^080h,w
  3857  06A9  1283               	bcf	status, 5	;RP0=0, select bank0
  3858  06AA  1303               	bcf	status, 6	;RP1=0, select bank0
  3859  06AB  01A6               	clrf	(?_abs)
  3860  06AC  07A6               	addwf	(?_abs)
  3861                           
  3862  06AD  160A  118A  225F   	fcall	_abs
              120A  118A         
  3863  06B2  1283               	bcf	status, 5	;RP0=0, select bank0
  3864  06B3  1303               	bcf	status, 6	;RP1=0, select bank0
  3865  06B4  0826               	movf	(0+?_abs),w
  3866  06B5  00E5               	movwf	(??_robotFollow+0)+0
  3867  06B6  0827               	movf	(1+?_abs),w
  3868  06B7  00E6               	movwf	((??_robotFollow+0)+0+1)
  3869  06B8  0860               	movf	(robotFollow@distance+1),w
  3870  06B9  01A7               	clrf	(?_abs+1)
  3871  06BA  07A7               	addwf	(?_abs+1)
  3872  06BB  085F               	movf	(robotFollow@distance),w
  3873  06BC  01A6               	clrf	(?_abs)
  3874  06BD  07A6               	addwf	(?_abs)
  3875                           
  3876  06BE  160A  118A  225F   	fcall	_abs
              120A  118A         
  3877  06C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3878  06C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3879  06C5  0866               	movf	1+(??_robotFollow+0)+0,w
  3880  06C6  3A80               	xorlw	80h
  3881  06C7  00E7               	movwf	(??_robotFollow+2)+0
  3882  06C8  0827               	movf	(1+(?_abs)),w
  3883  06C9  3A80               	xorlw	80h
  3884  06CA  0267               	subwf	(??_robotFollow+2)+0,w
  3885  06CB  1D03               	skipz
  3886  06CC  2ECF               	goto	u5745
  3887  06CD  0826               	movf	(0+(?_abs)),w
  3888  06CE  0265               	subwf	0+(??_robotFollow+0)+0,w
  3889  06CF                     u5745:
  3890                           
  3891  06CF  1C03               	skipc
  3892  06D0  2ED2               	goto	u5741
  3893  06D1  2ED3               	goto	u5740
  3894  06D2                     u5741:
  3895  06D2  2D2E               	goto	l11859
  3896  06D3                     u5740:
  3897  06D3  2ED4               	goto	l11899
  3898                           	
  3899  06D4                     l6064:	
  3900                           	line	197
  3901                           	
  3902  06D4                     l11899:	
  3903                           ;robot.c: 194: }
  3904                           ;robot.c: 195: }
  3905                           ;robot.c: 197: RobotDrive(0, 0x7FFF);
  3906  06D4  3000               	movlw	low(0)
  3907  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  3908  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  3909  06D7  00D6               	movwf	(?_RobotDrive)
  3910  06D8  3000               	movlw	high(0)
  3911  06D9  00D7               	movwf	((?_RobotDrive))+1
  3912  06DA  30FF               	movlw	low(07FFFh)
  3913  06DB  00D8               	movwf	0+(?_RobotDrive)+02h
  3914  06DC  307F               	movlw	high(07FFFh)
  3915  06DD  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  3916  06DE  160A  118A  2294   	fcall	_RobotDrive
              120A  118A         
  3917                           	line	199
  3918                           	
  3919  06E3                     l6066:	
  3920  06E3  0008               	return
  3921                           	opt stack 0
  3922                           GLOBAL	__end_of_robotFollow
  3923  06E4                     	__end_of_robotFollow:
  3924 ;; =============== function _robotFollow ends ============
  3925                           
  3926                           	signat	_robotFollow,12408
  3927                           	global	_robotMoveSpeed
  3928                           psect	text1122,local,class=CODE,delta=2
  3929                           global __ptext1122
  3930  0D44                     __ptext1122:
  3931                           
  3932 ;; *************** function _robotMoveSpeed *****************
  3933 ;; Defined at:
  3934 ;;		line 206 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  distance        2   63[BANK0 ] int 
  3937 ;;  speed           2   65[BANK0 ] int 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  remaining       3   70[BANK0 ] float 
  3940 ;;  temp1           2   73[BANK0 ] int 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;		None               void
  3943 ;; Registers used:
  3944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3950 ;;      Params:         0       4       0       0       0
  3951 ;;      Locals:         0       5       0       0       0
  3952 ;;      Temps:          0       3       0       0       0
  3953 ;;      Totals:         0      12       0       0       0
  3954 ;;Total ram usage:       12 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    6
  3957 ;; This function calls:
  3958 ;;		_RobotDrive
  3959 ;;		_robot_read
  3960 ;;		_UpdateDisplay
  3961 ;;		_abs
  3962 ;;		___awtoft
  3963 ;;		___ftge
  3964 ;;		___ftdiv
  3965 ;;		___ftmul
  3966 ;;		___fttol
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           psect	text1122
  3972                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3973                           	line	206
  3974                           	global	__size_of_robotMoveSpeed
  3975  015D                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3976                           	
  3977  0D44                     _robotMoveSpeed:	
  3978                           	opt	stack 1
  3979                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3980                           	line	207
  3981                           	
  3982  0D44                     l11819:	
  3983                           ;robot.c: 207: distTravelled = 0;
  3984  0D44  1683               	bsf	status, 5	;RP0=1, select bank1
  3985  0D45  1303               	bcf	status, 6	;RP1=0, select bank1
  3986  0D46  01AE               	clrf	(_distTravelled)^080h
  3987  0D47  01AF               	clrf	(_distTravelled+1)^080h
  3988                           	line	209
  3989                           	
  3990  0D48                     l11821:	
  3991                           ;robot.c: 208: int temp1;
  3992                           ;robot.c: 209: RobotDrive(speed, 0x7FFF);
  3993  0D48  1283               	bcf	status, 5	;RP0=0, select bank0
  3994  0D49  1303               	bcf	status, 6	;RP1=0, select bank0
  3995  0D4A  0862               	movf	(robotMoveSpeed@speed+1),w
  3996  0D4B  01D7               	clrf	(?_RobotDrive+1)
  3997  0D4C  07D7               	addwf	(?_RobotDrive+1)
  3998  0D4D  0861               	movf	(robotMoveSpeed@speed),w
  3999  0D4E  01D6               	clrf	(?_RobotDrive)
  4000  0D4F  07D6               	addwf	(?_RobotDrive)
  4001                           
  4002  0D50  30FF               	movlw	low(07FFFh)
  4003  0D51  00D8               	movwf	0+(?_RobotDrive)+02h
  4004  0D52  307F               	movlw	high(07FFFh)
  4005  0D53  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  4006  0D54  160A  118A  2294   	fcall	_RobotDrive
              120A  158A         
  4007                           	line	212
  4008                           ;robot.c: 212: while (abs(distTravelled) < abs(distance))
  4009  0D59  2E5C               	goto	l11851
  4010                           	
  4011  0D5A                     l6070:	
  4012                           	line	214
  4013                           	
  4014  0D5A                     l11823:	
  4015                           ;robot.c: 213: {
  4016                           ;robot.c: 214: robot_read(0);
  4017  0D5A  3000               	movlw	(0)
  4018  0D5B  120A  158A  2424   	fcall	_robot_read
              120A  158A         
  4019                           	line	215
  4020                           	
  4021  0D60                     l11825:	
  4022                           ;robot.c: 215: if (BumpSensors || VwallSensor)
  4023  0D60  1683               	bsf	status, 5	;RP0=1, select bank1
  4024  0D61  1303               	bcf	status, 6	;RP1=0, select bank1
  4025  0D62  08BC               	movf	(_BumpSensors)^080h,f
  4026  0D63  1D03               	skipz	;volatile
  4027  0D64  2D66               	goto	u5651
  4028  0D65  2D67               	goto	u5650
  4029  0D66                     u5651:
  4030  0D66  2D6C               	goto	l11829
  4031  0D67                     u5650:
  4032                           	
  4033  0D67                     l11827:	
  4034  0D67  0845               	movf	(_VwallSensor)^080h,w	;volatile
  4035  0D68  1D03               	skipz
  4036  0D69  2D6B               	goto	u5660
  4037  0D6A  2D70               	goto	l11831
  4038  0D6B                     u5660:
  4039  0D6B  2D6C               	goto	l11829
  4040                           	
  4041  0D6C                     l6073:	
  4042                           	line	217
  4043                           	
  4044  0D6C                     l11829:	
  4045                           ;robot.c: 216: {
  4046                           ;robot.c: 217: ROBOTerror = 1;
  4047  0D6C  01C2               	clrf	(_ROBOTerror)^080h
  4048  0D6D  1403               	bsf	status,0
  4049  0D6E  0DC2               	rlf	(_ROBOTerror)^080h,f
  4050                           	line	218
  4051                           ;robot.c: 218: break;
  4052  0D6F  2E91               	goto	l11853
  4053                           	line	219
  4054                           	
  4055  0D70                     l6071:	
  4056                           	line	220
  4057                           	
  4058  0D70                     l11831:	
  4059                           ;robot.c: 219: }
  4060                           ;robot.c: 220: temp1 = DistHighByte;
  4061  0D70  083E               	movf	(_DistHighByte)^080h,w	;volatile
  4062  0D71  1283               	bcf	status, 5	;RP0=0, select bank0
  4063  0D72  1303               	bcf	status, 6	;RP1=0, select bank0
  4064  0D73  00E3               	movwf	(??_robotMoveSpeed+0)+0
  4065  0D74  01E4               	clrf	(??_robotMoveSpeed+0)+0+1
  4066  0D75  0863               	movf	0+(??_robotMoveSpeed+0)+0,w
  4067  0D76  00E9               	movwf	(robotMoveSpeed@temp1)
  4068  0D77  0864               	movf	1+(??_robotMoveSpeed+0)+0,w
  4069  0D78  00EA               	movwf	(robotMoveSpeed@temp1+1)
  4070                           	line	221
  4071                           	
  4072  0D79                     l11833:	
  4073                           ;robot.c: 221: temp1 = temp1 << 8;
  4074  0D79  086A               	movf	(robotMoveSpeed@temp1+1),w
  4075  0D7A  00E4               	movwf	(??_robotMoveSpeed+0)+0+1
  4076  0D7B  0869               	movf	(robotMoveSpeed@temp1),w
  4077  0D7C  00E3               	movwf	(??_robotMoveSpeed+0)+0
  4078  0D7D  0863               	movf	(??_robotMoveSpeed+0)+0,w
  4079  0D7E  00E4               	movwf	(??_robotMoveSpeed+0)+1
  4080  0D7F  01E3               	clrf	(??_robotMoveSpeed+0)+0
  4081  0D80  0863               	movf	0+(??_robotMoveSpeed+0)+0,w
  4082  0D81  00E9               	movwf	(robotMoveSpeed@temp1)
  4083  0D82  0864               	movf	1+(??_robotMoveSpeed+0)+0,w
  4084  0D83  00EA               	movwf	(robotMoveSpeed@temp1+1)
  4085                           	line	222
  4086                           	
  4087  0D84                     l11835:	
  4088                           ;robot.c: 222: temp1 += DistLowByte;
  4089  0D84  1683               	bsf	status, 5	;RP0=1, select bank1
  4090  0D85  1303               	bcf	status, 6	;RP1=0, select bank1
  4091  0D86  083F               	movf	(_DistLowByte)^080h,w	;volatile
  4092  0D87  1283               	bcf	status, 5	;RP0=0, select bank0
  4093  0D88  1303               	bcf	status, 6	;RP1=0, select bank0
  4094  0D89  00E3               	movwf	(??_robotMoveSpeed+0)+0
  4095  0D8A  01E4               	clrf	(??_robotMoveSpeed+0)+0+1
  4096  0D8B  0863               	movf	0+(??_robotMoveSpeed+0)+0,w
  4097  0D8C  07E9               	addwf	(robotMoveSpeed@temp1),f
  4098  0D8D  1803               	skipnc
  4099  0D8E  0AEA               	incf	(robotMoveSpeed@temp1+1),f
  4100  0D8F  0864               	movf	1+(??_robotMoveSpeed+0)+0,w
  4101  0D90  07EA               	addwf	(robotMoveSpeed@temp1+1),f
  4102                           	line	223
  4103                           	
  4104  0D91                     l11837:	
  4105                           ;robot.c: 223: distTravelled += temp1;
  4106  0D91  0869               	movf	(robotMoveSpeed@temp1),w
  4107  0D92  1683               	bsf	status, 5	;RP0=1, select bank1
  4108  0D93  1303               	bcf	status, 6	;RP1=0, select bank1
  4109  0D94  07AE               	addwf	(_distTravelled)^080h,f
  4110  0D95  1803               	skipnc
  4111  0D96  0AAF               	incf	(_distTravelled+1)^080h,f
  4112  0D97  1283               	bcf	status, 5	;RP0=0, select bank0
  4113  0D98  1303               	bcf	status, 6	;RP1=0, select bank0
  4114  0D99  086A               	movf	(robotMoveSpeed@temp1+1),w
  4115  0D9A  1683               	bsf	status, 5	;RP0=1, select bank1
  4116  0D9B  1303               	bcf	status, 6	;RP1=0, select bank1
  4117  0D9C  07AF               	addwf	(_distTravelled+1)^080h,f
  4118                           	line	224
  4119                           	
  4120  0D9D                     l11839:	
  4121                           ;robot.c: 224: TotalDistTravelled += temp1;
  4122  0D9D  1283               	bcf	status, 5	;RP0=0, select bank0
  4123  0D9E  1303               	bcf	status, 6	;RP1=0, select bank0
  4124  0D9F  0869               	movf	(robotMoveSpeed@temp1),w
  4125  0DA0  1683               	bsf	status, 5	;RP0=1, select bank1
  4126  0DA1  1303               	bcf	status, 6	;RP1=0, select bank1
  4127  0DA2  07A8               	addwf	(_TotalDistTravelled)^080h,f
  4128  0DA3  1803               	skipnc
  4129  0DA4  0AA9               	incf	(_TotalDistTravelled+1)^080h,f
  4130  0DA5  1283               	bcf	status, 5	;RP0=0, select bank0
  4131  0DA6  1303               	bcf	status, 6	;RP1=0, select bank0
  4132  0DA7  086A               	movf	(robotMoveSpeed@temp1+1),w
  4133  0DA8  1683               	bsf	status, 5	;RP0=1, select bank1
  4134  0DA9  1303               	bcf	status, 6	;RP1=0, select bank1
  4135  0DAA  07A9               	addwf	(_TotalDistTravelled+1)^080h,f
  4136                           	line	225
  4137                           	
  4138  0DAB                     l11841:	
  4139                           ;robot.c: 225: Disp2 = distTravelled;
  4140  0DAB  082F               	movf	(_distTravelled+1)^080h,w
  4141  0DAC  01A3               	clrf	(_Disp2+1)^080h
  4142  0DAD  07A3               	addwf	(_Disp2+1)^080h
  4143  0DAE  082E               	movf	(_distTravelled)^080h,w
  4144  0DAF  01A2               	clrf	(_Disp2)^080h
  4145  0DB0  07A2               	addwf	(_Disp2)^080h
  4146                           
  4147                           	line	226
  4148                           	
  4149  0DB1                     l11843:	
  4150                           ;robot.c: 226: UpdateDisplay();
  4151  0DB1  120A  158A  26A1   	fcall	_UpdateDisplay
              120A  158A         
  4152                           	line	227
  4153                           	
  4154  0DB6                     l11845:	
  4155                           ;robot.c: 227: float remaining = abs(distance) - abs(distTravelled) ;
  4156  0DB6  1683               	bsf	status, 5	;RP0=1, select bank1
  4157  0DB7  1303               	bcf	status, 6	;RP1=0, select bank1
  4158  0DB8  082F               	movf	(_distTravelled+1)^080h,w
  4159  0DB9  1283               	bcf	status, 5	;RP0=0, select bank0
  4160  0DBA  1303               	bcf	status, 6	;RP1=0, select bank0
  4161  0DBB  01A7               	clrf	(?_abs+1)
  4162  0DBC  07A7               	addwf	(?_abs+1)
  4163  0DBD  1683               	bsf	status, 5	;RP0=1, select bank1
  4164  0DBE  1303               	bcf	status, 6	;RP1=0, select bank1
  4165  0DBF  082E               	movf	(_distTravelled)^080h,w
  4166  0DC0  1283               	bcf	status, 5	;RP0=0, select bank0
  4167  0DC1  1303               	bcf	status, 6	;RP1=0, select bank0
  4168  0DC2  01A6               	clrf	(?_abs)
  4169  0DC3  07A6               	addwf	(?_abs)
  4170                           
  4171  0DC4  160A  118A  225F   	fcall	_abs
              120A  158A         
  4172  0DC9  1283               	bcf	status, 5	;RP0=0, select bank0
  4173  0DCA  1303               	bcf	status, 6	;RP1=0, select bank0
  4174  0DCB  0926               	comf	(0+(?_abs)),w
  4175  0DCC  00E3               	movwf	(??_robotMoveSpeed+0)+0
  4176  0DCD  0927               	comf	(1+(?_abs)),w
  4177  0DCE  00E4               	movwf	((??_robotMoveSpeed+0)+0+1)
  4178  0DCF  0AE3               	incf	(??_robotMoveSpeed+0)+0,f
  4179  0DD0  1903               	skipnz
  4180  0DD1  0AE4               	incf	((??_robotMoveSpeed+0)+0+1),f
  4181  0DD2  0860               	movf	(robotMoveSpeed@distance+1),w
  4182  0DD3  01A7               	clrf	(?_abs+1)
  4183  0DD4  07A7               	addwf	(?_abs+1)
  4184  0DD5  085F               	movf	(robotMoveSpeed@distance),w
  4185  0DD6  01A6               	clrf	(?_abs)
  4186  0DD7  07A6               	addwf	(?_abs)
  4187                           
  4188  0DD8  160A  118A  225F   	fcall	_abs
              120A  158A         
  4189  0DDD  1283               	bcf	status, 5	;RP0=0, select bank0
  4190  0DDE  1303               	bcf	status, 6	;RP1=0, select bank0
  4191  0DDF  0863               	movf	0+(??_robotMoveSpeed+0)+0,w
  4192  0DE0  0726               	addwf	(0+(?_abs)),w
  4193  0DE1  00B6               	movwf	(?___awtoft)
  4194  0DE2  0864               	movf	1+(??_robotMoveSpeed+0)+0,w
  4195  0DE3  1803               	skipnc
  4196  0DE4  0A64               	incf	1+(??_robotMoveSpeed+0)+0,w
  4197  0DE5  0727               	addwf	(1+(?_abs)),w
  4198  0DE6  00B7               	movwf	1+(?___awtoft)
  4199  0DE7  160A  118A  217B   	fcall	___awtoft
              120A  158A         
  4200  0DEC  1283               	bcf	status, 5	;RP0=0, select bank0
  4201  0DED  1303               	bcf	status, 6	;RP1=0, select bank0
  4202  0DEE  0836               	movf	(0+(?___awtoft)),w
  4203  0DEF  00E6               	movwf	(robotMoveSpeed@remaining)
  4204  0DF0  0837               	movf	(1+(?___awtoft)),w
  4205  0DF1  00E7               	movwf	(robotMoveSpeed@remaining+1)
  4206  0DF2  0838               	movf	(2+(?___awtoft)),w
  4207  0DF3  00E8               	movwf	(robotMoveSpeed@remaining+2)
  4208                           	line	228
  4209                           	
  4210  0DF4                     l11847:	
  4211                           ;robot.c: 228: if ( remaining < 100)
  4212  0DF4  0866               	movf	(robotMoveSpeed@remaining),w
  4213  0DF5  00A0               	movwf	(?___ftge)
  4214  0DF6  0867               	movf	(robotMoveSpeed@remaining+1),w
  4215  0DF7  00A1               	movwf	(?___ftge+1)
  4216  0DF8  0868               	movf	(robotMoveSpeed@remaining+2),w
  4217  0DF9  00A2               	movwf	(?___ftge+2)
  4218  0DFA  3000               	movlw	0x0
  4219  0DFB  00A3               	movwf	0+(?___ftge)+03h
  4220  0DFC  30C8               	movlw	0xc8
  4221  0DFD  00A4               	movwf	1+(?___ftge)+03h
  4222  0DFE  3042               	movlw	0x42
  4223  0DFF  00A5               	movwf	2+(?___ftge)+03h
  4224  0E00  160A  118A  2585   	fcall	___ftge
              120A  158A         
  4225  0E05  1803               	btfsc	status,0
  4226  0E06  2E08               	goto	u5671
  4227  0E07  2E09               	goto	u5670
  4228  0E08                     u5671:
  4229  0E08  2E5C               	goto	l11851
  4230  0E09                     u5670:
  4231                           	line	230
  4232                           	
  4233  0E09                     l11849:	
  4234                           ;robot.c: 229: {
  4235                           ;robot.c: 230: RobotDrive(speed * (remaining/100.0), 0x7FFF);
  4236  0E09  1283               	bcf	status, 5	;RP0=0, select bank0
  4237  0E0A  1303               	bcf	status, 6	;RP1=0, select bank0
  4238  0E0B  0862               	movf	(robotMoveSpeed@speed+1),w
  4239  0E0C  01B7               	clrf	(?___awtoft+1)
  4240  0E0D  07B7               	addwf	(?___awtoft+1)
  4241  0E0E  0861               	movf	(robotMoveSpeed@speed),w
  4242  0E0F  01B6               	clrf	(?___awtoft)
  4243  0E10  07B6               	addwf	(?___awtoft)
  4244                           
  4245  0E11  160A  118A  217B   	fcall	___awtoft
              120A  158A         
  4246  0E16  1283               	bcf	status, 5	;RP0=0, select bank0
  4247  0E17  1303               	bcf	status, 6	;RP1=0, select bank0
  4248  0E18  0836               	movf	(0+(?___awtoft)),w
  4249  0E19  00C9               	movwf	0+(?___ftmul)+03h
  4250  0E1A  0837               	movf	(1+(?___awtoft)),w
  4251  0E1B  00CA               	movwf	1+(?___ftmul)+03h
  4252  0E1C  0838               	movf	(2+(?___awtoft)),w
  4253  0E1D  00CB               	movwf	2+(?___ftmul)+03h
  4254  0E1E  0866               	movf	(robotMoveSpeed@remaining),w
  4255  0E1F  00B9               	movwf	0+(?___ftdiv)+03h
  4256  0E20  0867               	movf	(robotMoveSpeed@remaining+1),w
  4257  0E21  00BA               	movwf	1+(?___ftdiv)+03h
  4258  0E22  0868               	movf	(robotMoveSpeed@remaining+2),w
  4259  0E23  00BB               	movwf	2+(?___ftdiv)+03h
  4260  0E24  3000               	movlw	0x0
  4261  0E25  00B6               	movwf	(?___ftdiv)
  4262  0E26  30C8               	movlw	0xc8
  4263  0E27  00B7               	movwf	(?___ftdiv+1)
  4264  0E28  3042               	movlw	0x42
  4265  0E29  00B8               	movwf	(?___ftdiv+2)
  4266  0E2A  120A  158A  226E   	fcall	___ftdiv
              120A  158A         
  4267  0E2F  1283               	bcf	status, 5	;RP0=0, select bank0
  4268  0E30  1303               	bcf	status, 6	;RP1=0, select bank0
  4269  0E31  0836               	movf	(0+(?___ftdiv)),w
  4270  0E32  00C6               	movwf	(?___ftmul)
  4271  0E33  0837               	movf	(1+(?___ftdiv)),w
  4272  0E34  00C7               	movwf	(?___ftmul+1)
  4273  0E35  0838               	movf	(2+(?___ftdiv)),w
  4274  0E36  00C8               	movwf	(?___ftmul+2)
  4275  0E37  120A  158A  2336   	fcall	___ftmul
              120A  158A         
  4276  0E3C  1283               	bcf	status, 5	;RP0=0, select bank0
  4277  0E3D  1303               	bcf	status, 6	;RP1=0, select bank0
  4278  0E3E  0846               	movf	(0+(?___ftmul)),w
  4279  0E3F  00A8               	movwf	(?___fttol)
  4280  0E40  0847               	movf	(1+(?___ftmul)),w
  4281  0E41  00A9               	movwf	(?___fttol+1)
  4282  0E42  0848               	movf	(2+(?___ftmul)),w
  4283  0E43  00AA               	movwf	(?___fttol+2)
  4284  0E44  120A  158A  2121   	fcall	___fttol
              120A  158A         
  4285  0E49  1283               	bcf	status, 5	;RP0=0, select bank0
  4286  0E4A  1303               	bcf	status, 6	;RP1=0, select bank0
  4287  0E4B  0829               	movf	1+(((0+(?___fttol)))),w
  4288  0E4C  01D7               	clrf	(?_RobotDrive+1)
  4289  0E4D  07D7               	addwf	(?_RobotDrive+1)
  4290  0E4E  0828               	movf	0+(((0+(?___fttol)))),w
  4291  0E4F  01D6               	clrf	(?_RobotDrive)
  4292  0E50  07D6               	addwf	(?_RobotDrive)
  4293                           
  4294  0E51  30FF               	movlw	low(07FFFh)
  4295  0E52  00D8               	movwf	0+(?_RobotDrive)+02h
  4296  0E53  307F               	movlw	high(07FFFh)
  4297  0E54  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  4298  0E55  160A  118A  2294   	fcall	_RobotDrive
              120A  158A         
  4299  0E5A  2E5C               	goto	l11851
  4300                           	line	231
  4301                           	
  4302  0E5B                     l6075:	
  4303  0E5B  2E5C               	goto	l11851
  4304                           	line	232
  4305                           	
  4306  0E5C                     l6069:	
  4307                           	line	212
  4308                           	
  4309  0E5C                     l11851:	
  4310  0E5C  1683               	bsf	status, 5	;RP0=1, select bank1
  4311  0E5D  1303               	bcf	status, 6	;RP1=0, select bank1
  4312  0E5E  082F               	movf	(_distTravelled+1)^080h,w
  4313  0E5F  1283               	bcf	status, 5	;RP0=0, select bank0
  4314  0E60  1303               	bcf	status, 6	;RP1=0, select bank0
  4315  0E61  01A7               	clrf	(?_abs+1)
  4316  0E62  07A7               	addwf	(?_abs+1)
  4317  0E63  1683               	bsf	status, 5	;RP0=1, select bank1
  4318  0E64  1303               	bcf	status, 6	;RP1=0, select bank1
  4319  0E65  082E               	movf	(_distTravelled)^080h,w
  4320  0E66  1283               	bcf	status, 5	;RP0=0, select bank0
  4321  0E67  1303               	bcf	status, 6	;RP1=0, select bank0
  4322  0E68  01A6               	clrf	(?_abs)
  4323  0E69  07A6               	addwf	(?_abs)
  4324                           
  4325  0E6A  160A  118A  225F   	fcall	_abs
              120A  158A         
  4326  0E6F  1283               	bcf	status, 5	;RP0=0, select bank0
  4327  0E70  1303               	bcf	status, 6	;RP1=0, select bank0
  4328  0E71  0826               	movf	(0+?_abs),w
  4329  0E72  00E3               	movwf	(??_robotMoveSpeed+0)+0
  4330  0E73  0827               	movf	(1+?_abs),w
  4331  0E74  00E4               	movwf	((??_robotMoveSpeed+0)+0+1)
  4332  0E75  0860               	movf	(robotMoveSpeed@distance+1),w
  4333  0E76  01A7               	clrf	(?_abs+1)
  4334  0E77  07A7               	addwf	(?_abs+1)
  4335  0E78  085F               	movf	(robotMoveSpeed@distance),w
  4336  0E79  01A6               	clrf	(?_abs)
  4337  0E7A  07A6               	addwf	(?_abs)
  4338                           
  4339  0E7B  160A  118A  225F   	fcall	_abs
              120A  158A         
  4340  0E80  1283               	bcf	status, 5	;RP0=0, select bank0
  4341  0E81  1303               	bcf	status, 6	;RP1=0, select bank0
  4342  0E82  0864               	movf	1+(??_robotMoveSpeed+0)+0,w
  4343  0E83  3A80               	xorlw	80h
  4344  0E84  00E5               	movwf	(??_robotMoveSpeed+2)+0
  4345  0E85  0827               	movf	(1+(?_abs)),w
  4346  0E86  3A80               	xorlw	80h
  4347  0E87  0265               	subwf	(??_robotMoveSpeed+2)+0,w
  4348  0E88  1D03               	skipz
  4349  0E89  2E8C               	goto	u5685
  4350  0E8A  0826               	movf	(0+(?_abs)),w
  4351  0E8B  0263               	subwf	0+(??_robotMoveSpeed+0)+0,w
  4352  0E8C                     u5685:
  4353                           
  4354  0E8C  1C03               	skipc
  4355  0E8D  2E8F               	goto	u5681
  4356  0E8E  2E90               	goto	u5680
  4357  0E8F                     u5681:
  4358  0E8F  2D5A               	goto	l11823
  4359  0E90                     u5680:
  4360  0E90  2E91               	goto	l11853
  4361                           	
  4362  0E91                     l6074:	
  4363                           	line	234
  4364                           	
  4365  0E91                     l11853:	
  4366                           ;robot.c: 231: }
  4367                           ;robot.c: 232: }
  4368                           ;robot.c: 234: RobotDrive(0, 0x7FFF);
  4369  0E91  3000               	movlw	low(0)
  4370  0E92  1283               	bcf	status, 5	;RP0=0, select bank0
  4371  0E93  1303               	bcf	status, 6	;RP1=0, select bank0
  4372  0E94  00D6               	movwf	(?_RobotDrive)
  4373  0E95  3000               	movlw	high(0)
  4374  0E96  00D7               	movwf	((?_RobotDrive))+1
  4375  0E97  30FF               	movlw	low(07FFFh)
  4376  0E98  00D8               	movwf	0+(?_RobotDrive)+02h
  4377  0E99  307F               	movlw	high(07FFFh)
  4378  0E9A  00D9               	movwf	(0+(?_RobotDrive)+02h)+1
  4379  0E9B  160A  118A  2294   	fcall	_RobotDrive
              120A  158A         
  4380                           	line	236
  4381                           	
  4382  0EA0                     l6076:	
  4383  0EA0  0008               	return
  4384                           	opt stack 0
  4385                           GLOBAL	__end_of_robotMoveSpeed
  4386  0EA1                     	__end_of_robotMoveSpeed:
  4387 ;; =============== function _robotMoveSpeed ends ============
  4388                           
  4389                           	signat	_robotMoveSpeed,8312
  4390                           	global	_scan360
  4391                           psect	text1123,local,class=CODE,delta=2
  4392                           global __ptext1123
  4393  15F3                     __ptext1123:
  4394                           
  4395 ;; *************** function _scan360 *****************
  4396 ;; Defined at:
  4397 ;;		line 362 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  steps           2   63[BANK0 ] int 
  4402 ;;  lowestSteps     2   61[BANK0 ] int 
  4403 ;;  lowestVal       2   59[BANK0 ] int 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  2   57[BANK0 ] int 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       2       0       0       0
  4414 ;;      Locals:         0       6       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       8       0       0       0
  4417 ;;Total ram usage:        8 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    7
  4420 ;; This function calls:
  4421 ;;		_readAvgDistance
  4422 ;;		_rotate
  4423 ;;		_UpdateDisplay
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           psect	text1123
  4429                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4430                           	line	362
  4431                           	global	__size_of_scan360
  4432  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  4433                           	
  4434  15F3                     _scan360:	
  4435                           	opt	stack 0
  4436                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4437                           	line	363
  4438                           	
  4439  15F3                     l11791:	
  4440                           ;Main.c: 363: int lowestVal = 0, lowestSteps = 0;
  4441  15F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4442  15F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4443  15F5  01DB               	clrf	(scan360@lowestVal)
  4444  15F6  01DC               	clrf	(scan360@lowestVal+1)
  4445  15F7  01DD               	clrf	(scan360@lowestSteps)
  4446  15F8  01DE               	clrf	(scan360@lowestSteps+1)
  4447                           	line	365
  4448                           ;Main.c: 365: for (int steps = 0; steps < 200; steps+= 2)
  4449  15F9  01DF               	clrf	(scan360@steps)
  4450  15FA  01E0               	clrf	(scan360@steps+1)
  4451                           	
  4452  15FB                     l11793:	
  4453  15FB  0860               	movf	(scan360@steps+1),w
  4454  15FC  3A80               	xorlw	80h
  4455  15FD  00FF               	movwf	btemp+1
  4456  15FE  3080               	movlw	(high(0C8h))^80h
  4457  15FF  027F               	subwf	btemp+1,w
  4458  1600  1D03               	skipz
  4459  1601  2E04               	goto	u5615
  4460  1602  30C8               	movlw	low(0C8h)
  4461  1603  025F               	subwf	(scan360@steps),w
  4462  1604                     u5615:
  4463                           
  4464  1604  1C03               	skipc
  4465  1605  2E07               	goto	u5611
  4466  1606  2E08               	goto	u5610
  4467  1607                     u5611:
  4468  1607  2E0A               	goto	l11797
  4469  1608                     u5610:
  4470  1608  2E63               	goto	l11815
  4471                           	
  4472  1609                     l11795:	
  4473  1609  2E63               	goto	l11815
  4474                           	line	366
  4475                           	
  4476  160A                     l2293:	
  4477                           	line	367
  4478                           	
  4479  160A                     l11797:	
  4480                           ;Main.c: 366: {
  4481                           ;Main.c: 367: readAvgDistance();
  4482  160A  160A  118A  26EA   	fcall	_readAvgDistance
              160A  118A         
  4483                           	line	368
  4484                           	
  4485  160F                     l11799:	
  4486                           ;Main.c: 368: if (adcVal > lowestVal)
  4487  160F  1683               	bsf	status, 5	;RP0=1, select bank1
  4488  1610  1303               	bcf	status, 6	;RP1=0, select bank1
  4489  1611  082B               	movf	(_adcVal+1)^080h,w	;volatile
  4490  1612  1283               	bcf	status, 5	;RP0=0, select bank0
  4491  1613  1303               	bcf	status, 6	;RP1=0, select bank0
  4492  1614  025C               	subwf	(scan360@lowestVal+1),w
  4493  1615  1D03               	skipz
  4494  1616  2E1D               	goto	u5625
  4495  1617  1683               	bsf	status, 5	;RP0=1, select bank1
  4496  1618  1303               	bcf	status, 6	;RP1=0, select bank1
  4497  1619  082A               	movf	(_adcVal)^080h,w	;volatile
  4498  161A  1283               	bcf	status, 5	;RP0=0, select bank0
  4499  161B  1303               	bcf	status, 6	;RP1=0, select bank0
  4500  161C  025B               	subwf	(scan360@lowestVal),w
  4501  161D                     u5625:
  4502  161D  1803               	skipnc
  4503  161E  2E20               	goto	u5621
  4504  161F  2E21               	goto	u5620
  4505  1620                     u5621:
  4506  1620  2E36               	goto	l11803
  4507  1621                     u5620:
  4508                           	line	370
  4509                           	
  4510  1621                     l11801:	
  4511                           ;Main.c: 369: {
  4512                           ;Main.c: 370: lowestVal = adcVal;
  4513  1621  1683               	bsf	status, 5	;RP0=1, select bank1
  4514  1622  1303               	bcf	status, 6	;RP1=0, select bank1
  4515  1623  082B               	movf	(_adcVal+1)^080h,w	;volatile
  4516  1624  1283               	bcf	status, 5	;RP0=0, select bank0
  4517  1625  1303               	bcf	status, 6	;RP1=0, select bank0
  4518  1626  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  4519  1627  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  4520  1628  1683               	bsf	status, 5	;RP0=1, select bank1
  4521  1629  1303               	bcf	status, 6	;RP1=0, select bank1
  4522  162A  082A               	movf	(_adcVal)^080h,w	;volatile
  4523  162B  1283               	bcf	status, 5	;RP0=0, select bank0
  4524  162C  1303               	bcf	status, 6	;RP1=0, select bank0
  4525  162D  01DB               	clrf	(scan360@lowestVal)	;volatile
  4526  162E  07DB               	addwf	(scan360@lowestVal)	;volatile
  4527                           
  4528                           	line	371
  4529                           ;Main.c: 371: lowestSteps = steps;
  4530  162F  0860               	movf	(scan360@steps+1),w
  4531  1630  01DE               	clrf	(scan360@lowestSteps+1)
  4532  1631  07DE               	addwf	(scan360@lowestSteps+1)
  4533  1632  085F               	movf	(scan360@steps),w
  4534  1633  01DD               	clrf	(scan360@lowestSteps)
  4535  1634  07DD               	addwf	(scan360@lowestSteps)
  4536                           
  4537  1635  2E36               	goto	l11803
  4538                           	line	373
  4539                           	
  4540  1636                     l2295:	
  4541                           	line	374
  4542                           	
  4543  1636                     l11803:	
  4544                           ;Main.c: 373: }
  4545                           ;Main.c: 374: rotate(2, 1);
  4546  1636  3002               	movlw	low(02h)
  4547  1637  00A3               	movwf	(?_rotate)
  4548  1638  3000               	movlw	high(02h)
  4549  1639  00A4               	movwf	((?_rotate))+1
  4550  163A  01A5               	clrf	0+(?_rotate)+02h
  4551  163B  1403               	bsf	status,0
  4552  163C  0DA5               	rlf	0+(?_rotate)+02h,f
  4553  163D  160A  118A  246F   	fcall	_rotate
              160A  118A         
  4554                           	line	376
  4555                           	
  4556  1642                     l11805:	
  4557                           ;Main.c: 376: if (RTC_FLAG_250MS == 1)
  4558  1642  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4559  1643  2E45               	goto	u5631
  4560  1644  2E46               	goto	u5630
  4561  1645                     u5631:
  4562  1645  2E4D               	goto	l11811
  4563  1646                     u5630:
  4564                           	line	378
  4565                           	
  4566  1646                     l11807:	
  4567                           ;Main.c: 377: {
  4568                           ;Main.c: 378: RTC_FLAG_250MS = 0;
  4569  1646  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4570                           	line	379
  4571                           	
  4572  1647                     l11809:	
  4573                           ;Main.c: 379: UpdateDisplay();
  4574  1647  120A  158A  26A1   	fcall	_UpdateDisplay
              160A  118A         
  4575  164C  2E4D               	goto	l11811
  4576                           	line	380
  4577                           	
  4578  164D                     l2296:	
  4579                           	line	365
  4580                           	
  4581  164D                     l11811:	
  4582  164D  3002               	movlw	low(02h)
  4583  164E  1283               	bcf	status, 5	;RP0=0, select bank0
  4584  164F  1303               	bcf	status, 6	;RP1=0, select bank0
  4585  1650  07DF               	addwf	(scan360@steps),f
  4586  1651  1803               	skipnc
  4587  1652  0AE0               	incf	(scan360@steps+1),f
  4588  1653  3000               	movlw	high(02h)
  4589  1654  07E0               	addwf	(scan360@steps+1),f
  4590                           	
  4591  1655                     l11813:	
  4592  1655  0860               	movf	(scan360@steps+1),w
  4593  1656  3A80               	xorlw	80h
  4594  1657  00FF               	movwf	btemp+1
  4595  1658  3080               	movlw	(high(0C8h))^80h
  4596  1659  027F               	subwf	btemp+1,w
  4597  165A  1D03               	skipz
  4598  165B  2E5E               	goto	u5645
  4599  165C  30C8               	movlw	low(0C8h)
  4600  165D  025F               	subwf	(scan360@steps),w
  4601  165E                     u5645:
  4602                           
  4603  165E  1C03               	skipc
  4604  165F  2E61               	goto	u5641
  4605  1660  2E62               	goto	u5640
  4606  1661                     u5641:
  4607  1661  2E0A               	goto	l11797
  4608  1662                     u5640:
  4609  1662  2E63               	goto	l11815
  4610                           	
  4611  1663                     l2294:	
  4612                           	line	383
  4613                           	
  4614  1663                     l11815:	
  4615                           ;Main.c: 380: }
  4616                           ;Main.c: 381: }
  4617                           ;Main.c: 383: return lowestSteps;
  4618  1663  1283               	bcf	status, 5	;RP0=0, select bank0
  4619  1664  1303               	bcf	status, 6	;RP1=0, select bank0
  4620  1665  085E               	movf	(scan360@lowestSteps+1),w
  4621  1666  01DA               	clrf	(?_scan360+1)
  4622  1667  07DA               	addwf	(?_scan360+1)
  4623  1668  085D               	movf	(scan360@lowestSteps),w
  4624  1669  01D9               	clrf	(?_scan360)
  4625  166A  07D9               	addwf	(?_scan360)
  4626                           
  4627  166B  2E6C               	goto	l2297
  4628                           	
  4629  166C                     l11817:	
  4630                           	line	384
  4631                           	
  4632  166C                     l2297:	
  4633  166C  0008               	return
  4634                           	opt stack 0
  4635                           GLOBAL	__end_of_scan360
  4636  166D                     	__end_of_scan360:
  4637 ;; =============== function _scan360 ends ============
  4638                           
  4639                           	signat	_scan360,90
  4640                           	global	_calibrateIR
  4641                           psect	text1124,local,class=CODE,delta=2
  4642                           global __ptext1124
  4643  14BF                     __ptext1124:
  4644                           
  4645 ;; *************** function _calibrateIR *****************
  4646 ;; Defined at:
  4647 ;;		line 281 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;		None               void
  4654 ;; Registers used:
  4655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    6
  4668 ;; This function calls:
  4669 ;;		_rotate
  4670 ;;		_UpdateDisplay
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           psect	text1124
  4676                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4677                           	line	281
  4678                           	global	__size_of_calibrateIR
  4679  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  4680                           	
  4681  14BF                     _calibrateIR:	
  4682                           	opt	stack 1
  4683                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4684                           	line	282
  4685                           	
  4686  14BF                     l11761:	
  4687                           ;Main.c: 282: currentMenu = 1;
  4688  14BF  1683               	bsf	status, 5	;RP0=1, select bank1
  4689  14C0  1303               	bcf	status, 6	;RP1=0, select bank1
  4690  14C1  01C6               	clrf	(_currentMenu)^080h	;volatile
  4691  14C2  1403               	bsf	status,0
  4692  14C3  0DC6               	rlf	(_currentMenu)^080h,f	;volatile
  4693                           	line	283
  4694                           	
  4695  14C4                     l11763:	
  4696                           ;Main.c: 283: rotate(8, 0);
  4697  14C4  3008               	movlw	low(08h)
  4698  14C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4699  14C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4700  14C7  00A3               	movwf	(?_rotate)
  4701  14C8  3000               	movlw	high(08h)
  4702  14C9  00A4               	movwf	((?_rotate))+1
  4703  14CA  01A5               	clrf	0+(?_rotate)+02h
  4704  14CB  160A  118A  246F   	fcall	_rotate
              160A  118A         
  4705  14D0  2CD1               	goto	l11765
  4706                           	line	284
  4707                           ;Main.c: 284: while (1)
  4708                           	
  4709  14D1                     l2263:	
  4710                           	line	286
  4711                           	
  4712  14D1                     l11765:	
  4713                           ;Main.c: 285: {
  4714                           ;Main.c: 286: if (RTC_FLAG_250MS == 1)
  4715  14D1  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4716  14D2  2CD4               	goto	u5601
  4717  14D3  2CD5               	goto	u5600
  4718  14D4                     u5601:
  4719  14D4  2D09               	goto	l11789
  4720  14D5                     u5600:
  4721                           	line	288
  4722                           	
  4723  14D5                     l11767:	
  4724                           ;Main.c: 287: {
  4725                           ;Main.c: 288: RTC_FLAG_250MS = 0;
  4726  14D5  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4727                           	line	289
  4728                           	
  4729  14D6                     l11769:	
  4730                           ;Main.c: 289: UpdateDisplay();
  4731  14D6  120A  158A  26A1   	fcall	_UpdateDisplay
              160A  118A         
  4732  14DB  2D09               	goto	l11789
  4733                           	line	290
  4734                           	
  4735  14DC                     l2264:	
  4736                           	line	291
  4737                           ;Main.c: 290: }
  4738                           ;Main.c: 291: switch (buttonPressed)
  4739  14DC  2D09               	goto	l11789
  4740                           	line	293
  4741                           ;Main.c: 292: {
  4742                           ;Main.c: 293: case 1:
  4743                           	
  4744  14DD                     l2266:	
  4745                           	line	294
  4746                           ;Main.c: 294: buttonPressed = 0;
  4747  14DD  01FD               	clrf	(_buttonPressed)	;volatile
  4748                           	line	295
  4749                           ;Main.c: 295: break;
  4750  14DE  2CD1               	goto	l11765
  4751                           	line	296
  4752                           ;Main.c: 296: case 2:
  4753                           	
  4754  14DF                     l2268:	
  4755                           	line	297
  4756                           ;Main.c: 297: buttonPressed = 0;
  4757  14DF  01FD               	clrf	(_buttonPressed)	;volatile
  4758                           	line	298
  4759                           ;Main.c: 298: break;
  4760  14E0  2CD1               	goto	l11765
  4761                           	line	299
  4762                           ;Main.c: 299: case 3:
  4763                           	
  4764  14E1                     l2269:	
  4765                           	line	300
  4766                           	
  4767  14E1                     l11771:	
  4768                           ;Main.c: 300: rotate(1, 1);
  4769  14E1  3001               	movlw	low(01h)
  4770  14E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4771  14E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4772  14E4  00A3               	movwf	(?_rotate)
  4773  14E5  3000               	movlw	high(01h)
  4774  14E6  00A4               	movwf	((?_rotate))+1
  4775  14E7  01A5               	clrf	0+(?_rotate)+02h
  4776  14E8  1403               	bsf	status,0
  4777  14E9  0DA5               	rlf	0+(?_rotate)+02h,f
  4778  14EA  160A  118A  246F   	fcall	_rotate
              160A  118A         
  4779                           	line	301
  4780                           	
  4781  14EF                     l11773:	
  4782                           ;Main.c: 301: buttonPressed = 0;
  4783  14EF  01FD               	clrf	(_buttonPressed)	;volatile
  4784                           	line	302
  4785                           ;Main.c: 302: break;
  4786  14F0  2CD1               	goto	l11765
  4787                           	line	303
  4788                           ;Main.c: 303: case 4:
  4789                           	
  4790  14F1                     l2270:	
  4791                           	line	304
  4792                           	
  4793  14F1                     l11775:	
  4794                           ;Main.c: 304: rotate(1, 0);
  4795  14F1  3001               	movlw	low(01h)
  4796  14F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4797  14F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4798  14F4  00A3               	movwf	(?_rotate)
  4799  14F5  3000               	movlw	high(01h)
  4800  14F6  00A4               	movwf	((?_rotate))+1
  4801  14F7  01A5               	clrf	0+(?_rotate)+02h
  4802  14F8  160A  118A  246F   	fcall	_rotate
              160A  118A         
  4803                           	line	305
  4804                           	
  4805  14FD                     l11777:	
  4806                           ;Main.c: 305: buttonPressed = 0;
  4807  14FD  01FD               	clrf	(_buttonPressed)	;volatile
  4808                           	line	306
  4809                           ;Main.c: 306: break;
  4810  14FE  2CD1               	goto	l11765
  4811                           	line	307
  4812                           ;Main.c: 307: case 5:
  4813                           	
  4814  14FF                     l2271:	
  4815                           	line	308
  4816                           	
  4817  14FF                     l11779:	
  4818                           ;Main.c: 308: totalSteps = 0;
  4819  14FF  1683               	bsf	status, 5	;RP0=1, select bank1
  4820  1500  1303               	bcf	status, 6	;RP1=0, select bank1
  4821  1501  01B8               	clrf	(_totalSteps)^080h
  4822  1502  01B9               	clrf	(_totalSteps+1)^080h
  4823                           	line	309
  4824                           	
  4825  1503                     l11781:	
  4826                           ;Main.c: 309: buttonPressed = 0;
  4827  1503  01FD               	clrf	(_buttonPressed)	;volatile
  4828                           	line	310
  4829                           	
  4830  1504                     l11783:	
  4831                           ;Main.c: 310: currentMenu = 0;
  4832  1504  01C6               	clrf	(_currentMenu)^080h	;volatile
  4833  1505  2D1C               	goto	l2272
  4834                           	line	311
  4835                           	
  4836  1506                     l11785:	
  4837                           ;Main.c: 311: return;
  4838  1506  2D1C               	goto	l2272
  4839                           	line	312
  4840                           ;Main.c: 312: default:
  4841                           	
  4842  1507                     l2273:	
  4843                           	line	313
  4844                           ;Main.c: 313: break;
  4845  1507  2CD1               	goto	l11765
  4846                           	line	314
  4847                           	
  4848  1508                     l11787:	
  4849                           ;Main.c: 314: }
  4850  1508  2CD1               	goto	l11765
  4851                           	line	291
  4852                           	
  4853  1509                     l2265:	
  4854                           	
  4855  1509                     l11789:	
  4856  1509  087D               	movf	(_buttonPressed),w	;volatile
  4857                           	; Switch size 1, requested type "space"
  4858                           ; Number of cases is 5, Range of values is 1 to 5
  4859                           ; switch strategies available:
  4860                           ; Name         Instructions Cycles
  4861                           ; simple_byte           16     9 (average)
  4862                           ; direct_byte           26    11 (fixed)
  4863                           ; jumptable            263     9 (fixed)
  4864                           ;	Chosen strategy is simple_byte
  4865                           
  4866                           	opt asmopt_off
  4867  150A  3A01               	xorlw	1^0	; case 1
  4868  150B  1903               	skipnz
  4869  150C  2CDD               	goto	l2266
  4870  150D  3A03               	xorlw	2^1	; case 2
  4871  150E  1903               	skipnz
  4872  150F  2CDF               	goto	l2268
  4873  1510  3A01               	xorlw	3^2	; case 3
  4874  1511  1903               	skipnz
  4875  1512  2CE1               	goto	l11771
  4876  1513  3A07               	xorlw	4^3	; case 4
  4877  1514  1903               	skipnz
  4878  1515  2CF1               	goto	l11775
  4879  1516  3A01               	xorlw	5^4	; case 5
  4880  1517  1903               	skipnz
  4881  1518  2CFF               	goto	l11779
  4882  1519  2CD1               	goto	l11765
  4883                           	opt asmopt_on
  4884                           
  4885                           	line	314
  4886                           	
  4887  151A                     l2267:	
  4888  151A  2CD1               	goto	l11765
  4889                           	line	315
  4890                           	
  4891  151B                     l2274:	
  4892                           	line	284
  4893  151B  2CD1               	goto	l11765
  4894                           	
  4895  151C                     l2275:	
  4896                           	line	316
  4897                           	
  4898  151C                     l2272:	
  4899  151C  0008               	return
  4900                           	opt stack 0
  4901                           GLOBAL	__end_of_calibrateIR
  4902  151D                     	__end_of_calibrateIR:
  4903 ;; =============== function _calibrateIR ends ============
  4904                           
  4905                           	signat	_calibrateIR,88
  4906                           	global	_UpdateDisplay
  4907                           psect	text1125,local,class=CODE,delta=2
  4908                           global __ptext1125
  4909  0EA1                     __ptext1125:
  4910                           
  4911 ;; *************** function _UpdateDisplay *****************
  4912 ;; Defined at:
  4913 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4927 ;;      Params:         0       0       0       0       0
  4928 ;;      Locals:         0      16       0       0       0
  4929 ;;      Temps:          0       4       0       0       0
  4930 ;;      Totals:         0      20       0       0       0
  4931 ;;Total ram usage:       20 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    5
  4934 ;; This function calls:
  4935 ;;		_lcd_write_control
  4936 ;;		_sprintf
  4937 ;;		_lcd_set_cursor
  4938 ;;		_lcd_write_string
  4939 ;;		___awmod
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;;		_calibrateIR
  4943 ;;		_ChargeMode
  4944 ;;		_scan360
  4945 ;;		_robotFollow
  4946 ;;		_robotMoveSpeed
  4947 ;;		_robotTurnSpeed
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           psect	text1125
  4951                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4952                           	line	236
  4953                           	global	__size_of_UpdateDisplay
  4954  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4955                           	
  4956  0EA1                     _UpdateDisplay:	
  4957                           	opt	stack 1
  4958                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4959                           	line	237
  4960                           	
  4961  0EA1                     l11717:	
  4962                           ;HMI.c: 237: char LCDOutput[16] = "";
  4963  0EA1  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4964  0EA2  0084               	movwf	fsr0
  4965  0EA3  3090               	movlw	low(UpdateDisplay@F1249)
  4966  0EA4  1283               	bcf	status, 5	;RP0=0, select bank0
  4967  0EA5  1303               	bcf	status, 6	;RP1=0, select bank0
  4968  0EA6  00C5               	movwf	(??_UpdateDisplay+0)+0
  4969  0EA7  0804               	movf	fsr0,w
  4970  0EA8  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4971  0EA9  3010               	movlw	16
  4972  0EAA  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4973  0EAB                     u5580:
  4974  0EAB  0845               	movf	(??_UpdateDisplay+0)+0,w
  4975  0EAC  0084               	movwf	fsr0
  4976  0EAD  1783               	bsf	status, 7	;select IRP bank3
  4977                           	
  4978  0EAE  0800               	movf	indf,w
  4979  0EAF  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4980  0EB0  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4981  0EB1  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4982  0EB2  0084               	movwf	fsr0
  4983  0EB3  1383               	bcf	status, 7	;select IRP bank0
  4984                           	
  4985  0EB4  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4986  0EB5  0080               	movwf	indf
  4987  0EB6  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4988  0EB7  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4989  0EB8  2EAB               	goto	u5580
  4990                           	line	238
  4991                           ;HMI.c: 238: switch (currentMenu)
  4992  0EB9  2FF2               	goto	l11759
  4993                           	line	240
  4994                           ;HMI.c: 239: {
  4995                           ;HMI.c: 240: case 0:
  4996                           	
  4997  0EBA                     l4547:	
  4998                           	line	241
  4999                           	
  5000  0EBA                     l11719:	
  5001                           ;HMI.c: 241: lcd_write_control(0b00000001);
  5002  0EBA  3001               	movlw	(01h)
  5003  0EBB  160A  118A  2025   	fcall	_lcd_write_control
              120A  158A         
  5004                           	line	242
  5005                           	
  5006  0EC0                     l11721:	
  5007                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  5008  0EC0  302B               	movlw	((STR_13-__stringbase))&0ffh
  5009  0EC1  1283               	bcf	status, 5	;RP0=0, select bank0
  5010  0EC2  1303               	bcf	status, 6	;RP1=0, select bank0
  5011  0EC3  00C5               	movwf	(??_UpdateDisplay+0)+0
  5012  0EC4  0845               	movf	(??_UpdateDisplay+0)+0,w
  5013  0EC5  00B4               	movwf	(?_sprintf)
  5014  0EC6  1683               	bsf	status, 5	;RP0=1, select bank1
  5015  0EC7  1303               	bcf	status, 6	;RP1=0, select bank1
  5016  0EC8  0821               	movf	(_Disp1+1)^080h,w
  5017  0EC9  1283               	bcf	status, 5	;RP0=0, select bank0
  5018  0ECA  1303               	bcf	status, 6	;RP1=0, select bank0
  5019  0ECB  01B6               	clrf	1+(?_sprintf)+01h
  5020  0ECC  07B6               	addwf	1+(?_sprintf)+01h
  5021  0ECD  1683               	bsf	status, 5	;RP0=1, select bank1
  5022  0ECE  1303               	bcf	status, 6	;RP1=0, select bank1
  5023  0ECF  0820               	movf	(_Disp1)^080h,w
  5024  0ED0  1283               	bcf	status, 5	;RP0=0, select bank0
  5025  0ED1  1303               	bcf	status, 6	;RP1=0, select bank0
  5026  0ED2  01B5               	clrf	0+(?_sprintf)+01h
  5027  0ED3  07B5               	addwf	0+(?_sprintf)+01h
  5028                           
  5029  0ED4  1683               	bsf	status, 5	;RP0=1, select bank1
  5030  0ED5  1303               	bcf	status, 6	;RP1=0, select bank1
  5031  0ED6  0823               	movf	(_Disp2+1)^080h,w
  5032  0ED7  1283               	bcf	status, 5	;RP0=0, select bank0
  5033  0ED8  1303               	bcf	status, 6	;RP1=0, select bank0
  5034  0ED9  01B8               	clrf	1+(?_sprintf)+03h
  5035  0EDA  07B8               	addwf	1+(?_sprintf)+03h
  5036  0EDB  1683               	bsf	status, 5	;RP0=1, select bank1
  5037  0EDC  1303               	bcf	status, 6	;RP1=0, select bank1
  5038  0EDD  0822               	movf	(_Disp2)^080h,w
  5039  0EDE  1283               	bcf	status, 5	;RP0=0, select bank0
  5040  0EDF  1303               	bcf	status, 6	;RP1=0, select bank0
  5041  0EE0  01B7               	clrf	0+(?_sprintf)+03h
  5042  0EE1  07B7               	addwf	0+(?_sprintf)+03h
  5043                           
  5044  0EE2  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  5045  0EE3  120A  118A  26E4   	fcall	_sprintf
              120A  158A         
  5046                           	line	243
  5047                           	
  5048  0EE8                     l11723:	
  5049                           ;HMI.c: 243: lcd_set_cursor(0x00);
  5050  0EE8  3000               	movlw	(0)
  5051  0EE9  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5052                           	line	244
  5053                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  5054  0EEE  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  5055  0EEF  1283               	bcf	status, 5	;RP0=0, select bank0
  5056  0EF0  1303               	bcf	status, 6	;RP1=0, select bank0
  5057  0EF1  00A7               	movwf	(?_lcd_write_string)
  5058  0EF2  3000               	movlw	(0x0/2)
  5059  0EF3  00A8               	movwf	(?_lcd_write_string+1)
  5060  0EF4  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5061                           	line	245
  5062                           	
  5063  0EF9                     l11725:	
  5064                           ;HMI.c: 245: lcd_set_cursor(0x40);
  5065  0EF9  3040               	movlw	(040h)
  5066  0EFA  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5067                           	line	246
  5068                           	
  5069  0EFF                     l11727:	
  5070                           ;HMI.c: 246: if (pos > 0)
  5071  0EFF  1683               	bsf	status, 5	;RP0=1, select bank1
  5072  0F00  1303               	bcf	status, 6	;RP1=0, select bank1
  5073  0F01  0835               	movf	(_pos+1)^080h,w
  5074  0F02  3A80               	xorlw	80h
  5075  0F03  00FF               	movwf	btemp+1
  5076  0F04  3080               	movlw	(high(01h))^80h
  5077  0F05  027F               	subwf	btemp+1,w
  5078  0F06  1D03               	skipz
  5079  0F07  2F0A               	goto	u5595
  5080  0F08  3001               	movlw	low(01h)
  5081  0F09  0234               	subwf	(_pos)^080h,w
  5082  0F0A                     u5595:
  5083                           
  5084  0F0A  1C03               	skipc
  5085  0F0B  2F0D               	goto	u5591
  5086  0F0C  2F0E               	goto	u5590
  5087  0F0D                     u5591:
  5088  0F0D  2F21               	goto	l11731
  5089  0F0E                     u5590:
  5090                           	line	247
  5091                           	
  5092  0F0E                     l11729:	
  5093                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  5094  0F0E  1683               	bsf	status, 5	;RP0=1, select bank1
  5095  0F0F  1303               	bcf	status, 6	;RP1=0, select bank1
  5096  0F10  0834               	movf	(_pos)^080h,w
  5097  0F11  3EFF               	addlw	0FFh
  5098  0F12  3ED6               	addlw	_shortMenuStrings&0ffh
  5099  0F13  0084               	movwf	fsr0
  5100  0F14  1383               	bcf	status, 7	;select IRP bank1
  5101  0F15  0800               	movf	indf,w
  5102  0F16  1283               	bcf	status, 5	;RP0=0, select bank0
  5103  0F17  1303               	bcf	status, 6	;RP1=0, select bank0
  5104  0F18  00A7               	movwf	(?_lcd_write_string)
  5105  0F19  3080               	movlw	80h
  5106  0F1A  00A8               	movwf	(?_lcd_write_string+1)
  5107  0F1B  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5108  0F20  2F34               	goto	l11733
  5109                           	line	248
  5110                           	
  5111  0F21                     l4548:	
  5112                           	line	249
  5113                           	
  5114  0F21                     l11731:	
  5115                           ;HMI.c: 248: else
  5116                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  5117  0F21  1683               	bsf	status, 5	;RP0=1, select bank1
  5118  0F22  1303               	bcf	status, 6	;RP1=0, select bank1
  5119  0F23  0834               	movf	(_pos)^080h,w
  5120  0F24  3E05               	addlw	05h
  5121  0F25  3ED6               	addlw	_shortMenuStrings&0ffh
  5122  0F26  0084               	movwf	fsr0
  5123  0F27  1383               	bcf	status, 7	;select IRP bank1
  5124  0F28  0800               	movf	indf,w
  5125  0F29  1283               	bcf	status, 5	;RP0=0, select bank0
  5126  0F2A  1303               	bcf	status, 6	;RP1=0, select bank0
  5127  0F2B  00A7               	movwf	(?_lcd_write_string)
  5128  0F2C  3080               	movlw	80h
  5129  0F2D  00A8               	movwf	(?_lcd_write_string+1)
  5130  0F2E  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5131  0F33  2F34               	goto	l11733
  5132                           	
  5133  0F34                     l4549:	
  5134                           	line	250
  5135                           	
  5136  0F34                     l11733:	
  5137                           ;HMI.c: 250: lcd_set_cursor(0x44);
  5138  0F34  3044               	movlw	(044h)
  5139  0F35  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5140                           	line	251
  5141                           	
  5142  0F3A                     l11735:	
  5143                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  5144  0F3A  1683               	bsf	status, 5	;RP0=1, select bank1
  5145  0F3B  1303               	bcf	status, 6	;RP1=0, select bank1
  5146  0F3C  0834               	movf	(_pos)^080h,w
  5147  0F3D  3ED0               	addlw	_menuStrings&0ffh
  5148  0F3E  0084               	movwf	fsr0
  5149  0F3F  1383               	bcf	status, 7	;select IRP bank1
  5150  0F40  0800               	movf	indf,w
  5151  0F41  1283               	bcf	status, 5	;RP0=0, select bank0
  5152  0F42  1303               	bcf	status, 6	;RP1=0, select bank0
  5153  0F43  00A7               	movwf	(?_lcd_write_string)
  5154  0F44  3080               	movlw	80h
  5155  0F45  00A8               	movwf	(?_lcd_write_string+1)
  5156  0F46  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5157                           	line	252
  5158                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  5159  0F4B  304D               	movlw	(04Dh)
  5160  0F4C  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5161                           	line	253
  5162                           	
  5163  0F51                     l11737:	
  5164                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  5165  0F51  3006               	movlw	low(06h)
  5166  0F52  1283               	bcf	status, 5	;RP0=0, select bank0
  5167  0F53  1303               	bcf	status, 6	;RP1=0, select bank0
  5168  0F54  00A0               	movwf	(?___awmod)
  5169  0F55  3000               	movlw	high(06h)
  5170  0F56  00A1               	movwf	((?___awmod))+1
  5171  0F57  1683               	bsf	status, 5	;RP0=1, select bank1
  5172  0F58  1303               	bcf	status, 6	;RP1=0, select bank1
  5173  0F59  0834               	movf	(_pos)^080h,w
  5174  0F5A  3E01               	addlw	low(01h)
  5175  0F5B  1283               	bcf	status, 5	;RP0=0, select bank0
  5176  0F5C  1303               	bcf	status, 6	;RP1=0, select bank0
  5177  0F5D  00A2               	movwf	0+(?___awmod)+02h
  5178  0F5E  1683               	bsf	status, 5	;RP0=1, select bank1
  5179  0F5F  1303               	bcf	status, 6	;RP1=0, select bank1
  5180  0F60  0835               	movf	(_pos+1)^080h,w
  5181  0F61  1803               	skipnc
  5182  0F62  3E01               	addlw	1
  5183  0F63  3E00               	addlw	high(01h)
  5184  0F64  1283               	bcf	status, 5	;RP0=0, select bank0
  5185  0F65  1303               	bcf	status, 6	;RP1=0, select bank0
  5186  0F66  00A3               	movwf	1+0+(?___awmod)+02h
  5187  0F67  160A  118A  251D   	fcall	___awmod
              120A  158A         
  5188  0F6C  1283               	bcf	status, 5	;RP0=0, select bank0
  5189  0F6D  1303               	bcf	status, 6	;RP1=0, select bank0
  5190  0F6E  0820               	movf	(0+(?___awmod)),w
  5191  0F6F  3ED6               	addlw	_shortMenuStrings&0ffh
  5192  0F70  0084               	movwf	fsr0
  5193  0F71  1383               	bcf	status, 7	;select IRP bank1
  5194  0F72  0800               	movf	indf,w
  5195  0F73  00A7               	movwf	(?_lcd_write_string)
  5196  0F74  3080               	movlw	80h
  5197  0F75  00A8               	movwf	(?_lcd_write_string+1)
  5198  0F76  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5199                           	line	254
  5200                           ;HMI.c: 254: break;
  5201  0F7B  2FFF               	goto	l4554
  5202                           	line	255
  5203                           ;HMI.c: 255: case 1:
  5204                           	
  5205  0F7C                     l4551:	
  5206                           	line	256
  5207                           	
  5208  0F7C                     l11739:	
  5209                           ;HMI.c: 256: lcd_write_control(0b00000001);
  5210  0F7C  3001               	movlw	(01h)
  5211  0F7D  160A  118A  2025   	fcall	_lcd_write_control
              120A  158A         
  5212                           	line	257
  5213                           ;HMI.c: 257: lcd_set_cursor(0x00);
  5214  0F82  3000               	movlw	(0)
  5215  0F83  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5216                           	line	258
  5217                           	
  5218  0F88                     l11741:	
  5219                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  5220  0F88  301B               	movlw	low((STR_14-__stringbase))
  5221  0F89  1283               	bcf	status, 5	;RP0=0, select bank0
  5222  0F8A  1303               	bcf	status, 6	;RP1=0, select bank0
  5223  0F8B  00A7               	movwf	(?_lcd_write_string)
  5224  0F8C  3080               	movlw	80h
  5225  0F8D  00A8               	movwf	(?_lcd_write_string+1)
  5226  0F8E  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5227                           	line	259
  5228                           	
  5229  0F93                     l11743:	
  5230                           ;HMI.c: 259: lcd_set_cursor(0x40);
  5231  0F93  3040               	movlw	(040h)
  5232  0F94  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5233                           	line	260
  5234                           ;HMI.c: 260: lcd_write_string("<<<");
  5235  0F99  3082               	movlw	low((STR_15-__stringbase))
  5236  0F9A  1283               	bcf	status, 5	;RP0=0, select bank0
  5237  0F9B  1303               	bcf	status, 6	;RP1=0, select bank0
  5238  0F9C  00A7               	movwf	(?_lcd_write_string)
  5239  0F9D  3080               	movlw	80h
  5240  0F9E  00A8               	movwf	(?_lcd_write_string+1)
  5241  0F9F  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5242                           	line	261
  5243                           	
  5244  0FA4                     l11745:	
  5245                           ;HMI.c: 261: lcd_set_cursor(0x44);
  5246  0FA4  3044               	movlw	(044h)
  5247  0FA5  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5248                           	line	262
  5249                           	
  5250  0FAA                     l11747:	
  5251                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  5252  0FAA  3076               	movlw	low((STR_16-__stringbase))
  5253  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5254  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5255  0FAD  00A7               	movwf	(?_lcd_write_string)
  5256  0FAE  3080               	movlw	80h
  5257  0FAF  00A8               	movwf	(?_lcd_write_string+1)
  5258  0FB0  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5259                           	line	263
  5260                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  5261  0FB5  304D               	movlw	(04Dh)
  5262  0FB6  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5263                           	line	264
  5264                           	
  5265  0FBB                     l11749:	
  5266                           ;HMI.c: 264: lcd_write_string(">>>");
  5267  0FBB  3086               	movlw	low((STR_17-__stringbase))
  5268  0FBC  1283               	bcf	status, 5	;RP0=0, select bank0
  5269  0FBD  1303               	bcf	status, 6	;RP1=0, select bank0
  5270  0FBE  00A7               	movwf	(?_lcd_write_string)
  5271  0FBF  3080               	movlw	80h
  5272  0FC0  00A8               	movwf	(?_lcd_write_string+1)
  5273  0FC1  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5274                           	line	265
  5275                           ;HMI.c: 265: break;
  5276  0FC6  2FFF               	goto	l4554
  5277                           	line	266
  5278                           ;HMI.c: 266: case 2:
  5279                           	
  5280  0FC7                     l4552:	
  5281                           	line	267
  5282                           	
  5283  0FC7                     l11751:	
  5284                           ;HMI.c: 267: lcd_write_control(0b00000001);
  5285  0FC7  3001               	movlw	(01h)
  5286  0FC8  160A  118A  2025   	fcall	_lcd_write_control
              120A  158A         
  5287                           	line	268
  5288                           ;HMI.c: 268: lcd_set_cursor(0x00);
  5289  0FCD  3000               	movlw	(0)
  5290  0FCE  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5291                           	line	269
  5292                           	
  5293  0FD3                     l11753:	
  5294                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  5295  0FD3  300B               	movlw	low((STR_18-__stringbase))
  5296  0FD4  1283               	bcf	status, 5	;RP0=0, select bank0
  5297  0FD5  1303               	bcf	status, 6	;RP1=0, select bank0
  5298  0FD6  00A7               	movwf	(?_lcd_write_string)
  5299  0FD7  3080               	movlw	80h
  5300  0FD8  00A8               	movwf	(?_lcd_write_string+1)
  5301  0FD9  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5302                           	line	270
  5303                           	
  5304  0FDE                     l11755:	
  5305                           ;HMI.c: 270: lcd_set_cursor(0x44);
  5306  0FDE  3044               	movlw	(044h)
  5307  0FDF  160A  158A  27CF   	fcall	_lcd_set_cursor
              120A  158A         
  5308                           	line	271
  5309                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  5310  0FE4  3038               	movlw	low((STR_19-__stringbase))
  5311  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  5312  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  5313  0FE7  00A7               	movwf	(?_lcd_write_string)
  5314  0FE8  3080               	movlw	80h
  5315  0FE9  00A8               	movwf	(?_lcd_write_string+1)
  5316  0FEA  160A  118A  21A7   	fcall	_lcd_write_string
              120A  158A         
  5317                           	line	272
  5318                           ;HMI.c: 272: break;
  5319  0FEF  2FFF               	goto	l4554
  5320                           	line	273
  5321                           ;HMI.c: 273: default:
  5322                           	
  5323  0FF0                     l4553:	
  5324                           	line	274
  5325                           ;HMI.c: 274: break;
  5326  0FF0  2FFF               	goto	l4554
  5327                           	line	275
  5328                           	
  5329  0FF1                     l11757:	
  5330                           ;HMI.c: 275: }
  5331  0FF1  2FFF               	goto	l4554
  5332                           	line	238
  5333                           	
  5334  0FF2                     l4546:	
  5335                           	
  5336  0FF2                     l11759:	
  5337  0FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  5338  0FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  5339  0FF4  0846               	movf	(_currentMenu)^080h,w	;volatile
  5340                           	; Switch size 1, requested type "space"
  5341                           ; Number of cases is 3, Range of values is 0 to 2
  5342                           ; switch strategies available:
  5343                           ; Name         Instructions Cycles
  5344                           ; simple_byte           10     6 (average)
  5345                           ; direct_byte           17     8 (fixed)
  5346                           ; jumptable            260     6 (fixed)
  5347                           ; rangetable             7     6 (fixed)
  5348                           ; spacedrange           12     9 (fixed)
  5349                           ; locatedrange           3     3 (fixed)
  5350                           ;	Chosen strategy is simple_byte
  5351                           
  5352                           	opt asmopt_off
  5353  0FF5  3A00               	xorlw	0^0	; case 0
  5354  0FF6  1903               	skipnz
  5355  0FF7  2EBA               	goto	l11719
  5356  0FF8  3A01               	xorlw	1^0	; case 1
  5357  0FF9  1903               	skipnz
  5358  0FFA  2F7C               	goto	l11739
  5359  0FFB  3A03               	xorlw	2^1	; case 2
  5360  0FFC  1903               	skipnz
  5361  0FFD  2FC7               	goto	l11751
  5362  0FFE  2FFF               	goto	l4554
  5363                           	opt asmopt_on
  5364                           
  5365                           	line	275
  5366                           	
  5367  0FFF                     l4550:	
  5368                           	line	276
  5369                           	
  5370  0FFF                     l4554:	
  5371  0FFF  0008               	return
  5372                           	opt stack 0
  5373                           GLOBAL	__end_of_UpdateDisplay
  5374  1000                     	__end_of_UpdateDisplay:
  5375 ;; =============== function _UpdateDisplay ends ============
  5376                           
  5377                           	signat	_UpdateDisplay,88
  5378                           	global	_readAvgDistance
  5379                           psect	text1126,local,class=CODE,delta=2
  5380                           global __ptext1126
  5381  16EA                     __ptext1126:
  5382                           
  5383 ;; *************** function _readAvgDistance *****************
  5384 ;; Defined at:
  5385 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  i               2   22[BANK0 ] int 
  5390 ;;  tempIR          2   20[BANK0 ] unsigned int 
  5391 ;;  j               2   18[BANK0 ] int 
  5392 ;;  fullval         2   16[BANK0 ] unsigned int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;		None               void
  5395 ;; Registers used:
  5396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5402 ;;      Params:         0       0       0       0       0
  5403 ;;      Locals:         0       8       0       0       0
  5404 ;;      Temps:          0       0       0       0       0
  5405 ;;      Totals:         0       8       0       0       0
  5406 ;;Total ram usage:        8 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    6
  5409 ;; This function calls:
  5410 ;;		_readDistance
  5411 ;;		___lwdiv
  5412 ;;		_ADCconvert
  5413 ;; This function is called by:
  5414 ;;		_main
  5415 ;;		_scan360
  5416 ;;		_robotFollow
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           psect	text1126
  5420                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  5421                           	line	28
  5422                           	global	__size_of_readAvgDistance
  5423  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  5424                           	
  5425  16EA                     _readAvgDistance:	
  5426                           	opt	stack 0
  5427                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5428                           	line	29
  5429                           	
  5430  16EA                     l11699:	
  5431                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  5432  16EA  1283               	bcf	status, 5	;RP0=0, select bank0
  5433  16EB  1303               	bcf	status, 6	;RP1=0, select bank0
  5434  16EC  01B0               	clrf	(readAvgDistance@fullval)
  5435  16ED  01B1               	clrf	(readAvgDistance@fullval+1)
  5436  16EE  01B4               	clrf	(readAvgDistance@tempIR)
  5437  16EF  01B5               	clrf	(readAvgDistance@tempIR+1)
  5438                           	line	30
  5439                           ;infrared.c: 30: int j = 0;
  5440  16F0  01B2               	clrf	(readAvgDistance@j)
  5441  16F1  01B3               	clrf	(readAvgDistance@j+1)
  5442                           	line	32
  5443                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  5444  16F2  01B6               	clrf	(readAvgDistance@i)
  5445  16F3  01B7               	clrf	(readAvgDistance@i+1)
  5446                           	
  5447  16F4                     l11701:	
  5448  16F4  0837               	movf	(readAvgDistance@i+1),w
  5449  16F5  3A80               	xorlw	80h
  5450  16F6  00FF               	movwf	btemp+1
  5451  16F7  3080               	movlw	(high(08h))^80h
  5452  16F8  027F               	subwf	btemp+1,w
  5453  16F9  1D03               	skipz
  5454  16FA  2EFD               	goto	u5555
  5455  16FB  3008               	movlw	low(08h)
  5456  16FC  0236               	subwf	(readAvgDistance@i),w
  5457  16FD                     u5555:
  5458                           
  5459  16FD  1C03               	skipc
  5460  16FE  2F00               	goto	u5551
  5461  16FF  2F01               	goto	u5550
  5462  1700                     u5551:
  5463  1700  2F03               	goto	l11705
  5464  1701                     u5550:
  5465  1701  2F39               	goto	l11713
  5466                           	
  5467  1702                     l11703:	
  5468  1702  2F39               	goto	l11713
  5469                           	line	33
  5470                           	
  5471  1703                     l3004:	
  5472                           	line	34
  5473                           	
  5474  1703                     l11705:	
  5475                           ;infrared.c: 33: {
  5476                           ;infrared.c: 34: tempIR = readDistance();
  5477  1703  160A  118A  204F   	fcall	_readDistance
              160A  118A         
  5478  1708  1283               	bcf	status, 5	;RP0=0, select bank0
  5479  1709  1303               	bcf	status, 6	;RP1=0, select bank0
  5480  170A  0829               	movf	(1+(?_readDistance)),w
  5481  170B  01B5               	clrf	(readAvgDistance@tempIR+1)
  5482  170C  07B5               	addwf	(readAvgDistance@tempIR+1)
  5483  170D  0828               	movf	(0+(?_readDistance)),w
  5484  170E  01B4               	clrf	(readAvgDistance@tempIR)
  5485  170F  07B4               	addwf	(readAvgDistance@tempIR)
  5486                           
  5487                           	line	35
  5488                           	
  5489  1710                     l11707:	
  5490                           ;infrared.c: 35: if (tempIR <= 1000)
  5491  1710  3003               	movlw	high(03E9h)
  5492  1711  0235               	subwf	(readAvgDistance@tempIR+1),w
  5493  1712  30E9               	movlw	low(03E9h)
  5494  1713  1903               	skipnz
  5495  1714  0234               	subwf	(readAvgDistance@tempIR),w
  5496  1715  1803               	skipnc
  5497  1716  2F18               	goto	u5561
  5498  1717  2F19               	goto	u5560
  5499  1718                     u5561:
  5500  1718  2F25               	goto	l3006
  5501  1719                     u5560:
  5502                           	line	37
  5503                           	
  5504  1719                     l11709:	
  5505                           ;infrared.c: 36: {
  5506                           ;infrared.c: 37: fullval += tempIR;
  5507  1719  0834               	movf	(readAvgDistance@tempIR),w
  5508  171A  07B0               	addwf	(readAvgDistance@fullval),f
  5509  171B  1803               	skipnc
  5510  171C  0AB1               	incf	(readAvgDistance@fullval+1),f
  5511  171D  0835               	movf	(readAvgDistance@tempIR+1),w
  5512  171E  07B1               	addwf	(readAvgDistance@fullval+1),f
  5513                           	line	38
  5514                           ;infrared.c: 38: j++;
  5515  171F  3001               	movlw	low(01h)
  5516  1720  07B2               	addwf	(readAvgDistance@j),f
  5517  1721  1803               	skipnc
  5518  1722  0AB3               	incf	(readAvgDistance@j+1),f
  5519  1723  3000               	movlw	high(01h)
  5520  1724  07B3               	addwf	(readAvgDistance@j+1),f
  5521                           	line	39
  5522                           	
  5523  1725                     l3006:	
  5524                           	line	32
  5525  1725  3001               	movlw	low(01h)
  5526  1726  07B6               	addwf	(readAvgDistance@i),f
  5527  1727  1803               	skipnc
  5528  1728  0AB7               	incf	(readAvgDistance@i+1),f
  5529  1729  3000               	movlw	high(01h)
  5530  172A  07B7               	addwf	(readAvgDistance@i+1),f
  5531                           	
  5532  172B                     l11711:	
  5533  172B  0837               	movf	(readAvgDistance@i+1),w
  5534  172C  3A80               	xorlw	80h
  5535  172D  00FF               	movwf	btemp+1
  5536  172E  3080               	movlw	(high(08h))^80h
  5537  172F  027F               	subwf	btemp+1,w
  5538  1730  1D03               	skipz
  5539  1731  2F34               	goto	u5575
  5540  1732  3008               	movlw	low(08h)
  5541  1733  0236               	subwf	(readAvgDistance@i),w
  5542  1734                     u5575:
  5543                           
  5544  1734  1C03               	skipc
  5545  1735  2F37               	goto	u5571
  5546  1736  2F38               	goto	u5570
  5547  1737                     u5571:
  5548  1737  2F03               	goto	l11705
  5549  1738                     u5570:
  5550  1738  2F39               	goto	l11713
  5551                           	
  5552  1739                     l3005:	
  5553                           	line	41
  5554                           	
  5555  1739                     l11713:	
  5556                           ;infrared.c: 39: }
  5557                           ;infrared.c: 40: }
  5558                           ;infrared.c: 41: adcVal = fullval / j;
  5559  1739  1283               	bcf	status, 5	;RP0=0, select bank0
  5560  173A  1303               	bcf	status, 6	;RP1=0, select bank0
  5561  173B  0833               	movf	(readAvgDistance@j+1),w
  5562  173C  01A7               	clrf	(?___lwdiv+1)
  5563  173D  07A7               	addwf	(?___lwdiv+1)
  5564  173E  0832               	movf	(readAvgDistance@j),w
  5565  173F  01A6               	clrf	(?___lwdiv)
  5566  1740  07A6               	addwf	(?___lwdiv)
  5567                           
  5568  1741  0831               	movf	(readAvgDistance@fullval+1),w
  5569  1742  01A9               	clrf	1+(?___lwdiv)+02h
  5570  1743  07A9               	addwf	1+(?___lwdiv)+02h
  5571  1744  0830               	movf	(readAvgDistance@fullval),w
  5572  1745  01A8               	clrf	0+(?___lwdiv)+02h
  5573  1746  07A8               	addwf	0+(?___lwdiv)+02h
  5574                           
  5575  1747  160A  118A  241F   	fcall	___lwdiv
              160A  118A         
  5576  174C  1283               	bcf	status, 5	;RP0=0, select bank0
  5577  174D  1303               	bcf	status, 6	;RP1=0, select bank0
  5578  174E  0827               	movf	(1+(?___lwdiv)),w
  5579  174F  1683               	bsf	status, 5	;RP0=1, select bank1
  5580  1750  1303               	bcf	status, 6	;RP1=0, select bank1
  5581  1751  01AB               	clrf	(_adcVal+1)^080h	;volatile
  5582  1752  07AB               	addwf	(_adcVal+1)^080h	;volatile
  5583  1753  1283               	bcf	status, 5	;RP0=0, select bank0
  5584  1754  1303               	bcf	status, 6	;RP1=0, select bank0
  5585  1755  0826               	movf	(0+(?___lwdiv)),w
  5586  1756  1683               	bsf	status, 5	;RP0=1, select bank1
  5587  1757  1303               	bcf	status, 6	;RP1=0, select bank1
  5588  1758  01AA               	clrf	(_adcVal)^080h	;volatile
  5589  1759  07AA               	addwf	(_adcVal)^080h	;volatile
  5590                           
  5591                           	line	42
  5592                           ;infrared.c: 42: ADCconvert();
  5593  175A  120A  118A  22B5   	fcall	_ADCconvert
              160A  118A         
  5594                           	line	43
  5595                           	
  5596  175F                     l11715:	
  5597                           ;infrared.c: 43: Disp1 = adcVal;
  5598  175F  1683               	bsf	status, 5	;RP0=1, select bank1
  5599  1760  1303               	bcf	status, 6	;RP1=0, select bank1
  5600  1761  082B               	movf	(_adcVal+1)^080h,w	;volatile
  5601  1762  01A1               	clrf	(_Disp1+1)^080h	;volatile
  5602  1763  07A1               	addwf	(_Disp1+1)^080h	;volatile
  5603  1764  082A               	movf	(_adcVal)^080h,w	;volatile
  5604  1765  01A0               	clrf	(_Disp1)^080h	;volatile
  5605  1766  07A0               	addwf	(_Disp1)^080h	;volatile
  5606                           
  5607                           	line	44
  5608                           	
  5609  1767                     l3007:	
  5610  1767  0008               	return
  5611                           	opt stack 0
  5612                           GLOBAL	__end_of_readAvgDistance
  5613  1768                     	__end_of_readAvgDistance:
  5614 ;; =============== function _readAvgDistance ends ============
  5615                           
  5616                           	signat	_readAvgDistance,88
  5617                           	global	_init
  5618                           psect	text1127,local,class=CODE,delta=2
  5619                           global __ptext1127
  5620  1200                     __ptext1127:
  5621                           
  5622 ;; *************** function _init *****************
  5623 ;; Defined at:
  5624 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;		None               void
  5631 ;; Registers used:
  5632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5638 ;;      Params:         0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0
  5640 ;;      Temps:          0       1       0       0       0
  5641 ;;      Totals:         0       1       0       0       0
  5642 ;;Total ram usage:        1 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    5
  5645 ;; This function calls:
  5646 ;;		_ser_init
  5647 ;;		_init_adc
  5648 ;;		_lcd_init
  5649 ;;		_robo_init
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           psect	text1127
  5655                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5656                           	line	139
  5657                           	global	__size_of_init
  5658  002F                     	__size_of_init	equ	__end_of_init-_init
  5659                           	
  5660  1200                     _init:	
  5661                           	opt	stack 2
  5662                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5663                           	line	140
  5664                           	
  5665  1200                     l11673:	
  5666                           ;Main.c: 140: buttonPressed = 0;
  5667  1200  01FD               	clrf	(_buttonPressed)	;volatile
  5668                           	line	142
  5669                           	
  5670  1201                     l11675:	
  5671                           ;Main.c: 142: TRISB = 0b11111100;
  5672  1201  30FC               	movlw	(0FCh)
  5673  1202  1683               	bsf	status, 5	;RP0=1, select bank1
  5674  1203  1303               	bcf	status, 6	;RP1=0, select bank1
  5675  1204  0086               	movwf	(134)^080h	;volatile
  5676                           	line	143
  5677                           	
  5678  1205                     l11677:	
  5679                           ;Main.c: 143: TRISC &= 0b10010000;
  5680  1205  3090               	movlw	(090h)
  5681  1206  1283               	bcf	status, 5	;RP0=0, select bank0
  5682  1207  1303               	bcf	status, 6	;RP1=0, select bank0
  5683  1208  00A3               	movwf	(??_init+0)+0
  5684  1209  0823               	movf	(??_init+0)+0,w
  5685  120A  1683               	bsf	status, 5	;RP0=1, select bank1
  5686  120B  1303               	bcf	status, 6	;RP1=0, select bank1
  5687  120C  0587               	andwf	(135)^080h,f	;volatile
  5688                           	line	146
  5689                           	
  5690  120D                     l11679:	
  5691                           ;Main.c: 146: SSPSTAT = 0b01000000;
  5692  120D  3040               	movlw	(040h)
  5693  120E  0094               	movwf	(148)^080h	;volatile
  5694                           	line	147
  5695                           	
  5696  120F                     l11681:	
  5697                           ;Main.c: 147: SSPCON = 0b10100001;
  5698  120F  30A1               	movlw	(0A1h)
  5699  1210  1283               	bcf	status, 5	;RP0=0, select bank0
  5700  1211  1303               	bcf	status, 6	;RP1=0, select bank0
  5701  1212  0094               	movwf	(20)	;volatile
  5702                           	line	150
  5703                           	
  5704  1213                     l11683:	
  5705                           ;Main.c: 150: OPTION_REG = 0b00000100;
  5706  1213  3004               	movlw	(04h)
  5707  1214  1683               	bsf	status, 5	;RP0=1, select bank1
  5708  1215  1303               	bcf	status, 6	;RP1=0, select bank1
  5709  1216  0081               	movwf	(129)^080h	;volatile
  5710                           	line	153
  5711                           	
  5712  1217                     l11685:	
  5713                           ;Main.c: 153: ser_init();
  5714  1217  160A  118A  20CE   	fcall	_ser_init
              160A  118A         
  5715                           	line	154
  5716                           	
  5717  121C                     l11687:	
  5718                           ;Main.c: 154: init_adc();
  5719  121C  160A  118A  2039   	fcall	_init_adc
              160A  118A         
  5720                           	line	155
  5721                           	
  5722  1221                     l11689:	
  5723                           ;Main.c: 155: lcd_init();
  5724  1221  160A  118A  20F8   	fcall	_lcd_init
              160A  118A         
  5725                           	line	156
  5726                           	
  5727  1226                     l11691:	
  5728                           ;Main.c: 156: robo_init();
  5729  1226  120A  118A  27E4   	fcall	_robo_init
              160A  118A         
  5730                           	line	160
  5731                           	
  5732  122B                     l11693:	
  5733                           ;Main.c: 160: TMR0IE = 1;
  5734  122B  168B               	bsf	(93/8),(93)&7
  5735                           	line	162
  5736                           	
  5737  122C                     l11695:	
  5738                           ;Main.c: 162: PEIE=1;
  5739  122C  170B               	bsf	(94/8),(94)&7
  5740                           	line	164
  5741                           	
  5742  122D                     l11697:	
  5743                           ;Main.c: 164: (GIE = 1);
  5744  122D  178B               	bsf	(95/8),(95)&7
  5745                           	line	165
  5746                           	
  5747  122E                     l2231:	
  5748  122E  0008               	return
  5749                           	opt stack 0
  5750                           GLOBAL	__end_of_init
  5751  122F                     	__end_of_init:
  5752 ;; =============== function _init ends ============
  5753                           
  5754                           	signat	_init,88
  5755                           	global	_readDistance
  5756                           psect	text1128,local,class=CODE,delta=2
  5757                           global __ptext1128
  5758  104F                     __ptext1128:
  5759                           
  5760 ;; *************** function _readDistance *****************
  5761 ;; Defined at:
  5762 ;;		line 49 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  readVal         2   12[BANK0 ] unsigned int 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  2    8[BANK0 ] unsigned int 
  5769 ;; Registers used:
  5770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       2       0       0       0
  5777 ;;      Locals:         0       2       0       0       0
  5778 ;;      Temps:          0       2       0       0       0
  5779 ;;      Totals:         0       6       0       0       0
  5780 ;;Total ram usage:        6 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    5
  5783 ;; This function calls:
  5784 ;;		_adc_read_channel
  5785 ;; This function is called by:
  5786 ;;		_readAvgDistance
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           psect	text1128
  5790                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  5791                           	line	49
  5792                           	global	__size_of_readDistance
  5793  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5794                           	
  5795  104F                     _readDistance:	
  5796                           	opt	stack 0
  5797                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5798                           	line	52
  5799                           	
  5800  104F                     l11667:	
  5801                           ;infrared.c: 50: unsigned int readVal;
  5802                           ;infrared.c: 52: readVal = adc_read_channel(0);
  5803  104F  3000               	movlw	(0)
  5804  1050  160A  118A  22CD   	fcall	_adc_read_channel
              160A  118A         
  5805  1055  1283               	bcf	status, 5	;RP0=0, select bank0
  5806  1056  1303               	bcf	status, 6	;RP1=0, select bank0
  5807  1057  00AA               	movwf	(??_readDistance+0)+0
  5808  1058  01AB               	clrf	(??_readDistance+0)+0+1
  5809  1059  082A               	movf	0+(??_readDistance+0)+0,w
  5810  105A  00AC               	movwf	(readDistance@readVal)
  5811  105B  082B               	movf	1+(??_readDistance+0)+0,w
  5812  105C  00AD               	movwf	(readDistance@readVal+1)
  5813                           	line	54
  5814                           	
  5815  105D                     l11669:	
  5816                           ;infrared.c: 54: return readVal;
  5817  105D  082D               	movf	(readDistance@readVal+1),w
  5818  105E  01A9               	clrf	(?_readDistance+1)
  5819  105F  07A9               	addwf	(?_readDistance+1)
  5820  1060  082C               	movf	(readDistance@readVal),w
  5821  1061  01A8               	clrf	(?_readDistance)
  5822  1062  07A8               	addwf	(?_readDistance)
  5823                           
  5824  1063  2864               	goto	l3010
  5825                           	
  5826  1064                     l11671:	
  5827                           	line	55
  5828                           	
  5829  1064                     l3010:	
  5830  1064  0008               	return
  5831                           	opt stack 0
  5832                           GLOBAL	__end_of_readDistance
  5833  1065                     	__end_of_readDistance:
  5834 ;; =============== function _readDistance ends ============
  5835                           
  5836                           	signat	_readDistance,90
  5837                           	global	_robot_read
  5838                           psect	text1129,local,class=CODE,delta=2
  5839                           global __ptext1129
  5840  0C24                     __ptext1129:
  5841                           
  5842 ;; *************** function _robot_read *****************
  5843 ;; Defined at:
  5844 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  readType        1    wreg     unsigned char 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  readType        1    4[BANK0 ] unsigned char 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;		None               void
  5851 ;; Registers used:
  5852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5858 ;;      Params:         0       0       0       0       0
  5859 ;;      Locals:         0       1       0       0       0
  5860 ;;      Temps:          0       2       0       0       0
  5861 ;;      Totals:         0       3       0       0       0
  5862 ;;Total ram usage:        3 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    5
  5865 ;; This function calls:
  5866 ;;		_ser_putch
  5867 ;;		_ser_getch
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;;		_robotFollow
  5871 ;;		_robotMoveSpeed
  5872 ;;		_robotTurnSpeed
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           psect	text1129
  5876                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5877                           	line	46
  5878                           	global	__size_of_robot_read
  5879  0120                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5880                           	
  5881  0C24                     _robot_read:	
  5882                           	opt	stack 1
  5883                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5884                           ;robot_read@readType stored from wreg
  5885  0C24  1283               	bcf	status, 5	;RP0=0, select bank0
  5886  0C25  1303               	bcf	status, 6	;RP1=0, select bank0
  5887  0C26  00A4               	movwf	(robot_read@readType)
  5888                           	line	47
  5889                           	
  5890  0C27                     l11619:	
  5891                           ;robot.c: 47: ser_putch(142);
  5892  0C27  308E               	movlw	(08Eh)
  5893  0C28  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  5894                           	line	48
  5895                           ;robot.c: 48: ser_putch(7);
  5896  0C2D  3007               	movlw	(07h)
  5897  0C2E  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  5898                           	line	49
  5899                           	
  5900  0C33                     l11621:	
  5901                           ;robot.c: 49: _delay((unsigned long)((5)*(20000000/4000.0)));
  5902                           	opt asmopt_off
  5903  0C33  3021               movlw	33
  5904  0C34  1283               	bcf	status, 5	;RP0=0, select bank0
  5905  0C35  1303               	bcf	status, 6	;RP1=0, select bank0
  5906  0C36  00A3               movwf	((??_robot_read+0)+0+1),f
  5907  0C37  3076               	movlw	118
  5908  0C38  00A2               movwf	((??_robot_read+0)+0),f
  5909  0C39                     u5947:
  5910  0C39  0BA2               	decfsz	((??_robot_read+0)+0),f
  5911  0C3A  2C39               	goto	u5947
  5912  0C3B  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5913  0C3C  2C39               	goto	u5947
  5914  0C3D  0064               	clrwdt
  5915                           opt asmopt_on
  5916                           
  5917                           	line	50
  5918                           	
  5919  0C3E                     l11623:	
  5920                           ;robot.c: 50: BumpSensors = ser_getch();
  5921  0C3E  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  5922  0C43  1283               	bcf	status, 5	;RP0=0, select bank0
  5923  0C44  1303               	bcf	status, 6	;RP1=0, select bank0
  5924  0C45  00A2               	movwf	(??_robot_read+0)+0
  5925  0C46  0822               	movf	(??_robot_read+0)+0,w
  5926  0C47  1683               	bsf	status, 5	;RP0=1, select bank1
  5927  0C48  1303               	bcf	status, 6	;RP1=0, select bank1
  5928  0C49  00BC               	movwf	(_BumpSensors)^080h	;volatile
  5929                           	line	51
  5930                           	
  5931  0C4A                     l11625:	
  5932                           ;robot.c: 51: ser_putch(142);
  5933  0C4A  308E               	movlw	(08Eh)
  5934  0C4B  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  5935                           	line	52
  5936                           	
  5937  0C50                     l11627:	
  5938                           ;robot.c: 52: ser_putch(13);
  5939  0C50  300D               	movlw	(0Dh)
  5940  0C51  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  5941                           	line	53
  5942                           ;robot.c: 53: _delay((unsigned long)((5)*(20000000/4000.0)));
  5943                           	opt asmopt_off
  5944  0C56  3021               movlw	33
  5945  0C57  1283               	bcf	status, 5	;RP0=0, select bank0
  5946  0C58  1303               	bcf	status, 6	;RP1=0, select bank0
  5947  0C59  00A3               movwf	((??_robot_read+0)+0+1),f
  5948  0C5A  3076               	movlw	118
  5949  0C5B  00A2               movwf	((??_robot_read+0)+0),f
  5950  0C5C                     u5957:
  5951  0C5C  0BA2               	decfsz	((??_robot_read+0)+0),f
  5952  0C5D  2C5C               	goto	u5957
  5953  0C5E  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5954  0C5F  2C5C               	goto	u5957
  5955  0C60  0064               	clrwdt
  5956                           opt asmopt_on
  5957                           
  5958                           	line	54
  5959                           	
  5960  0C61                     l11629:	
  5961                           ;robot.c: 54: VwallSensor = ser_getch();
  5962  0C61  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  5963  0C66  1283               	bcf	status, 5	;RP0=0, select bank0
  5964  0C67  1303               	bcf	status, 6	;RP1=0, select bank0
  5965  0C68  00A2               	movwf	(??_robot_read+0)+0
  5966  0C69  0822               	movf	(??_robot_read+0)+0,w
  5967  0C6A  1683               	bsf	status, 5	;RP0=1, select bank1
  5968  0C6B  1303               	bcf	status, 6	;RP1=0, select bank1
  5969  0C6C  00C5               	movwf	(_VwallSensor)^080h	;volatile
  5970                           	line	56
  5971                           	
  5972  0C6D                     l11631:	
  5973                           ;robot.c: 56: if (readType == 0)
  5974  0C6D  1283               	bcf	status, 5	;RP0=0, select bank0
  5975  0C6E  1303               	bcf	status, 6	;RP1=0, select bank0
  5976  0C6F  08A4               	movf	(robot_read@readType),f
  5977  0C70  1D03               	skipz
  5978  0C71  2C73               	goto	u5521
  5979  0C72  2C74               	goto	u5520
  5980  0C73                     u5521:
  5981  0C73  2CA4               	goto	l11641
  5982  0C74                     u5520:
  5983                           	line	58
  5984                           	
  5985  0C74                     l11633:	
  5986                           ;robot.c: 57: {
  5987                           ;robot.c: 58: ser_putch(142);
  5988  0C74  308E               	movlw	(08Eh)
  5989  0C75  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  5990                           	line	59
  5991                           ;robot.c: 59: ser_putch(19);
  5992  0C7A  3013               	movlw	(013h)
  5993  0C7B  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  5994                           	line	60
  5995                           	
  5996  0C80                     l11635:	
  5997                           ;robot.c: 60: _delay((unsigned long)((5)*(20000000/4000.0)));
  5998                           	opt asmopt_off
  5999  0C80  3021               movlw	33
  6000  0C81  1283               	bcf	status, 5	;RP0=0, select bank0
  6001  0C82  1303               	bcf	status, 6	;RP1=0, select bank0
  6002  0C83  00A3               movwf	((??_robot_read+0)+0+1),f
  6003  0C84  3076               	movlw	118
  6004  0C85  00A2               movwf	((??_robot_read+0)+0),f
  6005  0C86                     u5967:
  6006  0C86  0BA2               	decfsz	((??_robot_read+0)+0),f
  6007  0C87  2C86               	goto	u5967
  6008  0C88  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  6009  0C89  2C86               	goto	u5967
  6010  0C8A  0064               	clrwdt
  6011                           opt asmopt_on
  6012                           
  6013                           	line	61
  6014                           	
  6015  0C8B                     l11637:	
  6016                           ;robot.c: 61: DistHighByte = ser_getch();
  6017  0C8B  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6018  0C90  1283               	bcf	status, 5	;RP0=0, select bank0
  6019  0C91  1303               	bcf	status, 6	;RP1=0, select bank0
  6020  0C92  00A2               	movwf	(??_robot_read+0)+0
  6021  0C93  0822               	movf	(??_robot_read+0)+0,w
  6022  0C94  1683               	bsf	status, 5	;RP0=1, select bank1
  6023  0C95  1303               	bcf	status, 6	;RP1=0, select bank1
  6024  0C96  00BE               	movwf	(_DistHighByte)^080h	;volatile
  6025                           	line	62
  6026                           	
  6027  0C97                     l11639:	
  6028                           ;robot.c: 62: DistLowByte = ser_getch();
  6029  0C97  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6030  0C9C  1283               	bcf	status, 5	;RP0=0, select bank0
  6031  0C9D  1303               	bcf	status, 6	;RP1=0, select bank0
  6032  0C9E  00A2               	movwf	(??_robot_read+0)+0
  6033  0C9F  0822               	movf	(??_robot_read+0)+0,w
  6034  0CA0  1683               	bsf	status, 5	;RP0=1, select bank1
  6035  0CA1  1303               	bcf	status, 6	;RP1=0, select bank1
  6036  0CA2  00BF               	movwf	(_DistLowByte)^080h	;volatile
  6037                           	line	63
  6038                           ;robot.c: 63: }
  6039  0CA3  2D43               	goto	l6042
  6040                           	line	64
  6041                           	
  6042  0CA4                     l6037:	
  6043                           	
  6044  0CA4                     l11641:	
  6045                           ;robot.c: 64: else if (readType == 1)
  6046  0CA4  1283               	bcf	status, 5	;RP0=0, select bank0
  6047  0CA5  0824               	movf	(robot_read@readType),w
  6048  0CA6  3A01               	xorlw	01h
  6049  0CA7  1D03               	skipz
  6050  0CA8  2CAA               	goto	u5531
  6051  0CA9  2CAB               	goto	u5530
  6052  0CAA                     u5531:
  6053  0CAA  2CDB               	goto	l11651
  6054  0CAB                     u5530:
  6055                           	line	66
  6056                           	
  6057  0CAB                     l11643:	
  6058                           ;robot.c: 65: {
  6059                           ;robot.c: 66: ser_putch(142);
  6060  0CAB  308E               	movlw	(08Eh)
  6061  0CAC  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  6062                           	line	67
  6063                           ;robot.c: 67: ser_putch(20);
  6064  0CB1  3014               	movlw	(014h)
  6065  0CB2  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  6066                           	line	68
  6067                           	
  6068  0CB7                     l11645:	
  6069                           ;robot.c: 68: _delay((unsigned long)((5)*(20000000/4000.0)));
  6070                           	opt asmopt_off
  6071  0CB7  3021               movlw	33
  6072  0CB8  1283               	bcf	status, 5	;RP0=0, select bank0
  6073  0CB9  1303               	bcf	status, 6	;RP1=0, select bank0
  6074  0CBA  00A3               movwf	((??_robot_read+0)+0+1),f
  6075  0CBB  3076               	movlw	118
  6076  0CBC  00A2               movwf	((??_robot_read+0)+0),f
  6077  0CBD                     u5977:
  6078  0CBD  0BA2               	decfsz	((??_robot_read+0)+0),f
  6079  0CBE  2CBD               	goto	u5977
  6080  0CBF  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  6081  0CC0  2CBD               	goto	u5977
  6082  0CC1  0064               	clrwdt
  6083                           opt asmopt_on
  6084                           
  6085                           	line	69
  6086                           	
  6087  0CC2                     l11647:	
  6088                           ;robot.c: 69: AngleHighByte = ser_getch();
  6089  0CC2  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6090  0CC7  1283               	bcf	status, 5	;RP0=0, select bank0
  6091  0CC8  1303               	bcf	status, 6	;RP1=0, select bank0
  6092  0CC9  00A2               	movwf	(??_robot_read+0)+0
  6093  0CCA  0822               	movf	(??_robot_read+0)+0,w
  6094  0CCB  1683               	bsf	status, 5	;RP0=1, select bank1
  6095  0CCC  1303               	bcf	status, 6	;RP1=0, select bank1
  6096  0CCD  00BA               	movwf	(_AngleHighByte)^080h	;volatile
  6097                           	line	70
  6098                           	
  6099  0CCE                     l11649:	
  6100                           ;robot.c: 70: AngleLowByte = ser_getch();
  6101  0CCE  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6102  0CD3  1283               	bcf	status, 5	;RP0=0, select bank0
  6103  0CD4  1303               	bcf	status, 6	;RP1=0, select bank0
  6104  0CD5  00A2               	movwf	(??_robot_read+0)+0
  6105  0CD6  0822               	movf	(??_robot_read+0)+0,w
  6106  0CD7  1683               	bsf	status, 5	;RP0=1, select bank1
  6107  0CD8  1303               	bcf	status, 6	;RP1=0, select bank1
  6108  0CD9  00BB               	movwf	(_AngleLowByte)^080h	;volatile
  6109                           	line	71
  6110                           ;robot.c: 71: }
  6111  0CDA  2D43               	goto	l6042
  6112                           	line	72
  6113                           	
  6114  0CDB                     l6039:	
  6115                           	
  6116  0CDB                     l11651:	
  6117                           ;robot.c: 72: else if (readType == 2)
  6118  0CDB  1283               	bcf	status, 5	;RP0=0, select bank0
  6119  0CDC  0824               	movf	(robot_read@readType),w
  6120  0CDD  3A02               	xorlw	02h
  6121  0CDE  1D03               	skipz
  6122  0CDF  2CE1               	goto	u5541
  6123  0CE0  2CE2               	goto	u5540
  6124  0CE1                     u5541:
  6125  0CE1  2D43               	goto	l6042
  6126  0CE2                     u5540:
  6127                           	line	75
  6128                           	
  6129  0CE2                     l11653:	
  6130                           ;robot.c: 73: {
  6131                           ;robot.c: 75: ser_putch(142);
  6132  0CE2  308E               	movlw	(08Eh)
  6133  0CE3  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  6134                           	line	76
  6135                           ;robot.c: 76: ser_putch(19);
  6136  0CE8  3013               	movlw	(013h)
  6137  0CE9  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  6138                           	line	77
  6139                           	
  6140  0CEE                     l11655:	
  6141                           ;robot.c: 77: _delay((unsigned long)((5)*(20000000/4000.0)));
  6142                           	opt asmopt_off
  6143  0CEE  3021               movlw	33
  6144  0CEF  1283               	bcf	status, 5	;RP0=0, select bank0
  6145  0CF0  1303               	bcf	status, 6	;RP1=0, select bank0
  6146  0CF1  00A3               movwf	((??_robot_read+0)+0+1),f
  6147  0CF2  3076               	movlw	118
  6148  0CF3  00A2               movwf	((??_robot_read+0)+0),f
  6149  0CF4                     u5987:
  6150  0CF4  0BA2               	decfsz	((??_robot_read+0)+0),f
  6151  0CF5  2CF4               	goto	u5987
  6152  0CF6  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  6153  0CF7  2CF4               	goto	u5987
  6154  0CF8  0064               	clrwdt
  6155                           opt asmopt_on
  6156                           
  6157                           	line	78
  6158                           	
  6159  0CF9                     l11657:	
  6160                           ;robot.c: 78: DistHighByte = ser_getch();
  6161  0CF9  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6162  0CFE  1283               	bcf	status, 5	;RP0=0, select bank0
  6163  0CFF  1303               	bcf	status, 6	;RP1=0, select bank0
  6164  0D00  00A2               	movwf	(??_robot_read+0)+0
  6165  0D01  0822               	movf	(??_robot_read+0)+0,w
  6166  0D02  1683               	bsf	status, 5	;RP0=1, select bank1
  6167  0D03  1303               	bcf	status, 6	;RP1=0, select bank1
  6168  0D04  00BE               	movwf	(_DistHighByte)^080h	;volatile
  6169                           	line	79
  6170                           	
  6171  0D05                     l11659:	
  6172                           ;robot.c: 79: DistLowByte = ser_getch();
  6173  0D05  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6174  0D0A  1283               	bcf	status, 5	;RP0=0, select bank0
  6175  0D0B  1303               	bcf	status, 6	;RP1=0, select bank0
  6176  0D0C  00A2               	movwf	(??_robot_read+0)+0
  6177  0D0D  0822               	movf	(??_robot_read+0)+0,w
  6178  0D0E  1683               	bsf	status, 5	;RP0=1, select bank1
  6179  0D0F  1303               	bcf	status, 6	;RP1=0, select bank1
  6180  0D10  00BF               	movwf	(_DistLowByte)^080h	;volatile
  6181                           	line	80
  6182                           	
  6183  0D11                     l11661:	
  6184                           ;robot.c: 80: ser_putch(142);
  6185  0D11  308E               	movlw	(08Eh)
  6186  0D12  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  6187                           	line	81
  6188                           	
  6189  0D17                     l11663:	
  6190                           ;robot.c: 81: ser_putch(20);
  6191  0D17  3014               	movlw	(014h)
  6192  0D18  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  6193                           	line	82
  6194                           	
  6195  0D1D                     l11665:	
  6196                           ;robot.c: 82: _delay((unsigned long)((5)*(20000000/4000.0)));
  6197                           	opt asmopt_off
  6198  0D1D  3021               movlw	33
  6199  0D1E  1283               	bcf	status, 5	;RP0=0, select bank0
  6200  0D1F  1303               	bcf	status, 6	;RP1=0, select bank0
  6201  0D20  00A3               movwf	((??_robot_read+0)+0+1),f
  6202  0D21  3076               	movlw	118
  6203  0D22  00A2               movwf	((??_robot_read+0)+0),f
  6204  0D23                     u5997:
  6205  0D23  0BA2               	decfsz	((??_robot_read+0)+0),f
  6206  0D24  2D23               	goto	u5997
  6207  0D25  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  6208  0D26  2D23               	goto	u5997
  6209  0D27  0064               	clrwdt
  6210                           opt asmopt_on
  6211                           
  6212                           	line	83
  6213                           ;robot.c: 83: AngleHighByte = ser_getch();
  6214  0D28  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6215  0D2D  1283               	bcf	status, 5	;RP0=0, select bank0
  6216  0D2E  1303               	bcf	status, 6	;RP1=0, select bank0
  6217  0D2F  00A2               	movwf	(??_robot_read+0)+0
  6218  0D30  0822               	movf	(??_robot_read+0)+0,w
  6219  0D31  1683               	bsf	status, 5	;RP0=1, select bank1
  6220  0D32  1303               	bcf	status, 6	;RP1=0, select bank1
  6221  0D33  00BA               	movwf	(_AngleHighByte)^080h	;volatile
  6222                           	line	84
  6223                           ;robot.c: 84: AngleLowByte = ser_getch();
  6224  0D34  160A  118A  214F   	fcall	_ser_getch
              120A  158A         
  6225  0D39  1283               	bcf	status, 5	;RP0=0, select bank0
  6226  0D3A  1303               	bcf	status, 6	;RP1=0, select bank0
  6227  0D3B  00A2               	movwf	(??_robot_read+0)+0
  6228  0D3C  0822               	movf	(??_robot_read+0)+0,w
  6229  0D3D  1683               	bsf	status, 5	;RP0=1, select bank1
  6230  0D3E  1303               	bcf	status, 6	;RP1=0, select bank1
  6231  0D3F  00BB               	movwf	(_AngleLowByte)^080h	;volatile
  6232  0D40  2D43               	goto	l6042
  6233                           	line	85
  6234                           	
  6235  0D41                     l6041:	
  6236  0D41  2D43               	goto	l6042
  6237                           	line	86
  6238                           	
  6239  0D42                     l6040:	
  6240  0D42  2D43               	goto	l6042
  6241                           	
  6242  0D43                     l6038:	
  6243                           	
  6244  0D43                     l6042:	
  6245  0D43  0008               	return
  6246                           	opt stack 0
  6247                           GLOBAL	__end_of_robot_read
  6248  0D44                     	__end_of_robot_read:
  6249 ;; =============== function _robot_read ends ============
  6250                           
  6251                           	signat	_robot_read,4216
  6252                           	global	_lcd_init
  6253                           psect	text1130,local,class=CODE,delta=2
  6254                           global __ptext1130
  6255  10F8                     __ptext1130:
  6256                           
  6257 ;; *************** function _lcd_init *****************
  6258 ;; Defined at:
  6259 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;		None               void
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, pclath, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6273 ;;      Params:         0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    4
  6280 ;; This function calls:
  6281 ;;		_lcd_write_control
  6282 ;; This function is called by:
  6283 ;;		_init
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           psect	text1130
  6287                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6288                           	line	101
  6289                           	global	__size_of_lcd_init
  6290  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  6291                           	
  6292  10F8                     _lcd_init:	
  6293                           	opt	stack 2
  6294                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  6295                           	line	105
  6296                           	
  6297  10F8                     l11599:	
  6298                           ;lcd.c: 105: ADCON1 = 0b00000010;
  6299  10F8  3002               	movlw	(02h)
  6300  10F9  1683               	bsf	status, 5	;RP0=1, select bank1
  6301  10FA  1303               	bcf	status, 6	;RP1=0, select bank1
  6302  10FB  009F               	movwf	(159)^080h	;volatile
  6303                           	line	108
  6304                           	
  6305  10FC                     l11601:	
  6306                           ;lcd.c: 108: PORTD = 0;
  6307  10FC  1283               	bcf	status, 5	;RP0=0, select bank0
  6308  10FD  1303               	bcf	status, 6	;RP1=0, select bank0
  6309  10FE  0188               	clrf	(8)	;volatile
  6310                           	line	109
  6311                           	
  6312  10FF                     l11603:	
  6313                           ;lcd.c: 109: PORTE = 0;
  6314  10FF  0189               	clrf	(9)	;volatile
  6315                           	line	111
  6316                           	
  6317  1100                     l11605:	
  6318                           ;lcd.c: 111: TRISD = 0b00000000;
  6319  1100  1683               	bsf	status, 5	;RP0=1, select bank1
  6320  1101  1303               	bcf	status, 6	;RP1=0, select bank1
  6321  1102  0188               	clrf	(136)^080h	;volatile
  6322                           	line	112
  6323                           	
  6324  1103                     l11607:	
  6325                           ;lcd.c: 112: TRISE = 0b00000000;
  6326  1103  0189               	clrf	(137)^080h	;volatile
  6327                           	line	115
  6328                           	
  6329  1104                     l11609:	
  6330                           ;lcd.c: 115: lcd_write_control(0b00000001);
  6331  1104  3001               	movlw	(01h)
  6332  1105  160A  118A  2025   	fcall	_lcd_write_control
              160A  118A         
  6333                           	line	116
  6334                           	
  6335  110A                     l11611:	
  6336                           ;lcd.c: 116: lcd_write_control(0b00111000);
  6337  110A  3038               	movlw	(038h)
  6338  110B  160A  118A  2025   	fcall	_lcd_write_control
              160A  118A         
  6339                           	line	117
  6340                           	
  6341  1110                     l11613:	
  6342                           ;lcd.c: 117: lcd_write_control(0b00001100);
  6343  1110  300C               	movlw	(0Ch)
  6344  1111  160A  118A  2025   	fcall	_lcd_write_control
              160A  118A         
  6345                           	line	118
  6346                           	
  6347  1116                     l11615:	
  6348                           ;lcd.c: 118: lcd_write_control(0b00000110);
  6349  1116  3006               	movlw	(06h)
  6350  1117  160A  118A  2025   	fcall	_lcd_write_control
              160A  118A         
  6351                           	line	119
  6352                           	
  6353  111C                     l11617:	
  6354                           ;lcd.c: 119: lcd_write_control(0b00000010);
  6355  111C  3002               	movlw	(02h)
  6356  111D  160A  118A  2025   	fcall	_lcd_write_control
              160A  118A         
  6357                           	line	121
  6358                           	
  6359  1122                     l1429:	
  6360  1122  0008               	return
  6361                           	opt stack 0
  6362                           GLOBAL	__end_of_lcd_init
  6363  1123                     	__end_of_lcd_init:
  6364 ;; =============== function _lcd_init ends ============
  6365                           
  6366                           	signat	_lcd_init,88
  6367                           	global	_lcd_write_string
  6368                           psect	text1131,local,class=CODE,delta=2
  6369                           global __ptext1131
  6370  11A7                     __ptext1131:
  6371                           
  6372 ;; *************** function _lcd_write_string *****************
  6373 ;; Defined at:
  6374 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  s               2    7[BANK0 ] PTR unsigned char 
  6377 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  6378 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  6379 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  6380 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  6381 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;		None               void
  6386 ;; Registers used:
  6387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6393 ;;      Params:         0       2       0       0       0
  6394 ;;      Locals:         0       0       0       0       0
  6395 ;;      Temps:          0       0       0       0       0
  6396 ;;      Totals:         0       2       0       0       0
  6397 ;;Total ram usage:        2 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    4
  6400 ;; This function calls:
  6401 ;;		_lcd_write_data
  6402 ;; This function is called by:
  6403 ;;		_UpdateDisplay
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           psect	text1131
  6407                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6408                           	line	48
  6409                           	global	__size_of_lcd_write_string
  6410  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  6411                           	
  6412  11A7                     _lcd_write_string:	
  6413                           	opt	stack 1
  6414                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6415                           	line	50
  6416                           	
  6417  11A7                     l11591:	
  6418                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  6419  11A7  29C1               	goto	l11597
  6420                           	
  6421  11A8                     l1409:	
  6422                           	
  6423  11A8                     l11593:	
  6424  11A8  1283               	bcf	status, 5	;RP0=0, select bank0
  6425  11A9  1303               	bcf	status, 6	;RP1=0, select bank0
  6426  11AA  0828               	movf	(lcd_write_string@s+1),w
  6427  11AB  00FF               	movwf	btemp+1
  6428  11AC  0827               	movf	(lcd_write_string@s),w
  6429  11AD  0084               	movwf	fsr0
  6430  11AE  120A  158A  2000   	fcall	stringtab
              160A  118A         
  6431  11B3  160A  158A  27DA   	fcall	_lcd_write_data
              160A  118A         
  6432                           	
  6433  11B8                     l11595:	
  6434  11B8  3001               	movlw	low(01h)
  6435  11B9  1283               	bcf	status, 5	;RP0=0, select bank0
  6436  11BA  1303               	bcf	status, 6	;RP1=0, select bank0
  6437  11BB  07A7               	addwf	(lcd_write_string@s),f
  6438  11BC  1803               	skipnc
  6439  11BD  0AA8               	incf	(lcd_write_string@s+1),f
  6440  11BE  3000               	movlw	high(01h)
  6441  11BF  07A8               	addwf	(lcd_write_string@s+1),f
  6442  11C0  29C1               	goto	l11597
  6443                           	
  6444  11C1                     l1408:	
  6445                           	
  6446  11C1                     l11597:	
  6447  11C1  1283               	bcf	status, 5	;RP0=0, select bank0
  6448  11C2  1303               	bcf	status, 6	;RP1=0, select bank0
  6449  11C3  0828               	movf	(lcd_write_string@s+1),w
  6450  11C4  00FF               	movwf	btemp+1
  6451  11C5  0827               	movf	(lcd_write_string@s),w
  6452  11C6  0084               	movwf	fsr0
  6453  11C7  120A  158A  2000   	fcall	stringtab
              160A  118A         
  6454  11CC  3800               	iorlw	0
  6455  11CD  1D03               	skipz
  6456  11CE  29D0               	goto	u5511
  6457  11CF  29D1               	goto	u5510
  6458  11D0                     u5511:
  6459  11D0  29A8               	goto	l11593
  6460  11D1                     u5510:
  6461  11D1  29D2               	goto	l1411
  6462                           	
  6463  11D2                     l1410:	
  6464                           	line	51
  6465                           	
  6466  11D2                     l1411:	
  6467  11D2  0008               	return
  6468                           	opt stack 0
  6469                           GLOBAL	__end_of_lcd_write_string
  6470  11D3                     	__end_of_lcd_write_string:
  6471 ;; =============== function _lcd_write_string ends ============
  6472                           
  6473                           	signat	_lcd_write_string,4216
  6474                           	global	_lcd_set_cursor
  6475                           psect	text1132,local,class=CODE,delta=2
  6476                           global __ptext1132
  6477  1FCF                     __ptext1132:
  6478                           
  6479 ;; *************** function _lcd_set_cursor *****************
  6480 ;; Defined at:
  6481 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  address         1    wreg     unsigned char 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  address         1    3[BANK0 ] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;		None               void
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0, pclath, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6495 ;;      Params:         0       0       0       0       0
  6496 ;;      Locals:         0       1       0       0       0
  6497 ;;      Temps:          0       0       0       0       0
  6498 ;;      Totals:         0       1       0       0       0
  6499 ;;Total ram usage:        1 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    4
  6502 ;; This function calls:
  6503 ;;		_lcd_write_control
  6504 ;; This function is called by:
  6505 ;;		_UpdateDisplay
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           psect	text1132
  6509                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6510                           	line	42
  6511                           	global	__size_of_lcd_set_cursor
  6512  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  6513                           	
  6514  1FCF                     _lcd_set_cursor:	
  6515                           	opt	stack 1
  6516                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6517                           ;lcd_set_cursor@address stored from wreg
  6518  1FCF  1283               	bcf	status, 5	;RP0=0, select bank0
  6519  1FD0  1303               	bcf	status, 6	;RP1=0, select bank0
  6520  1FD1  00A3               	movwf	(lcd_set_cursor@address)
  6521                           	line	43
  6522                           	
  6523  1FD2                     l11587:	
  6524                           ;lcd.c: 43: address |= 0b10000000;
  6525  1FD2  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  6526                           	line	44
  6527                           	
  6528  1FD3                     l11589:	
  6529                           ;lcd.c: 44: lcd_write_control(address);
  6530  1FD3  0823               	movf	(lcd_set_cursor@address),w
  6531  1FD4  160A  118A  2025   	fcall	_lcd_write_control
              160A  158A         
  6532                           	line	45
  6533                           	
  6534  1FD9                     l1405:	
  6535  1FD9  0008               	return
  6536                           	opt stack 0
  6537                           GLOBAL	__end_of_lcd_set_cursor
  6538  1FDA                     	__end_of_lcd_set_cursor:
  6539 ;; =============== function _lcd_set_cursor ends ============
  6540                           
  6541                           	signat	_lcd_set_cursor,4216
  6542                           	global	___awtoft
  6543                           psect	text1133,local,class=CODE,delta=2
  6544                           global __ptext1133
  6545  117B                     __ptext1133:
  6546                           
  6547 ;; *************** function ___awtoft *****************
  6548 ;; Defined at:
  6549 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  c               2   22[BANK0 ] int 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  sign            1   27[BANK0 ] unsigned char 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  3   22[BANK0 ] float 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0, pclath, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6563 ;;      Params:         0       3       0       0       0
  6564 ;;      Locals:         0       1       0       0       0
  6565 ;;      Temps:          0       2       0       0       0
  6566 ;;      Totals:         0       6       0       0       0
  6567 ;;Total ram usage:        6 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    4
  6570 ;; This function calls:
  6571 ;;		___ftpack
  6572 ;; This function is called by:
  6573 ;;		_main
  6574 ;;		_robotFollow
  6575 ;;		_robotMoveSpeed
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           psect	text1133
  6579                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6580                           	line	33
  6581                           	global	__size_of___awtoft
  6582  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  6583                           	
  6584  117B                     ___awtoft:	
  6585                           	opt	stack 3
  6586                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6587                           	line	36
  6588                           	
  6589  117B                     l11579:	
  6590  117B  1283               	bcf	status, 5	;RP0=0, select bank0
  6591  117C  1303               	bcf	status, 6	;RP1=0, select bank0
  6592  117D  01BB               	clrf	(___awtoft@sign)
  6593                           	line	37
  6594  117E  1FB7               	btfss	(___awtoft@c+1),7
  6595  117F  2981               	goto	u5501
  6596  1180  2982               	goto	u5500
  6597  1181                     u5501:
  6598  1181  298B               	goto	l11583
  6599  1182                     u5500:
  6600                           	line	38
  6601                           	
  6602  1182                     l11581:	
  6603  1182  09B6               	comf	(___awtoft@c),f
  6604  1183  09B7               	comf	(___awtoft@c+1),f
  6605  1184  0AB6               	incf	(___awtoft@c),f
  6606  1185  1903               	skipnz
  6607  1186  0AB7               	incf	(___awtoft@c+1),f
  6608                           	line	39
  6609  1187  01BB               	clrf	(___awtoft@sign)
  6610  1188  1403               	bsf	status,0
  6611  1189  0DBB               	rlf	(___awtoft@sign),f
  6612  118A  298B               	goto	l11583
  6613                           	line	40
  6614                           	
  6615  118B                     l7669:	
  6616                           	line	41
  6617                           	
  6618  118B                     l11583:	
  6619  118B  0836               	movf	(___awtoft@c),w
  6620  118C  00A0               	movwf	(?___ftpack)
  6621  118D  0837               	movf	(___awtoft@c+1),w
  6622  118E  00A1               	movwf	(?___ftpack+1)
  6623  118F  01A2               	clrf	(?___ftpack+2)
  6624  1190  308E               	movlw	(08Eh)
  6625  1191  00B9               	movwf	(??___awtoft+0)+0
  6626  1192  0839               	movf	(??___awtoft+0)+0,w
  6627  1193  00A3               	movwf	0+(?___ftpack)+03h
  6628  1194  083B               	movf	(___awtoft@sign),w
  6629  1195  00BA               	movwf	(??___awtoft+1)+0
  6630  1196  083A               	movf	(??___awtoft+1)+0,w
  6631  1197  00A4               	movwf	0+(?___ftpack)+04h
  6632  1198  160A  118A  266D   	fcall	___ftpack
              160A  118A         
  6633  119D  1283               	bcf	status, 5	;RP0=0, select bank0
  6634  119E  1303               	bcf	status, 6	;RP1=0, select bank0
  6635  119F  0820               	movf	(0+(?___ftpack)),w
  6636  11A0  00B6               	movwf	(?___awtoft)
  6637  11A1  0821               	movf	(1+(?___ftpack)),w
  6638  11A2  00B7               	movwf	(?___awtoft+1)
  6639  11A3  0822               	movf	(2+(?___ftpack)),w
  6640  11A4  00B8               	movwf	(?___awtoft+2)
  6641  11A5  29A6               	goto	l7670
  6642                           	
  6643  11A6                     l11585:	
  6644                           	line	42
  6645                           	
  6646  11A6                     l7670:	
  6647  11A6  0008               	return
  6648                           	opt stack 0
  6649                           GLOBAL	__end_of___awtoft
  6650  11A7                     	__end_of___awtoft:
  6651 ;; =============== function ___awtoft ends ============
  6652                           
  6653                           	signat	___awtoft,4219
  6654                           	global	___ftmul
  6655                           psect	text1134,local,class=CODE,delta=2
  6656                           global __ptext1134
  6657  0B36                     __ptext1134:
  6658                           
  6659 ;; *************** function ___ftmul *****************
  6660 ;; Defined at:
  6661 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  f1              3   38[BANK0 ] float 
  6664 ;;  f2              3   41[BANK0 ] float 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  f3_as_produc    3   49[BANK0 ] unsigned um
  6667 ;;  sign            1   53[BANK0 ] unsigned char 
  6668 ;;  cntr            1   52[BANK0 ] unsigned char 
  6669 ;;  exp             1   48[BANK0 ] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  3   38[BANK0 ] float 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0, pclath, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6679 ;;      Params:         0       6       0       0       0
  6680 ;;      Locals:         0       6       0       0       0
  6681 ;;      Temps:          0       4       0       0       0
  6682 ;;      Totals:         0      16       0       0       0
  6683 ;;Total ram usage:       16 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    4
  6686 ;; This function calls:
  6687 ;;		___ftpack
  6688 ;; This function is called by:
  6689 ;;		_main
  6690 ;;		_robotFollow
  6691 ;;		_robotMoveSpeed
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           psect	text1134
  6695                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6696                           	line	52
  6697                           	global	__size_of___ftmul
  6698  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  6699                           	
  6700  0B36                     ___ftmul:	
  6701                           	opt	stack 3
  6702                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6703                           	line	56
  6704                           	
  6705  0B36                     l11529:	
  6706  0B36  1283               	bcf	status, 5	;RP0=0, select bank0
  6707  0B37  1303               	bcf	status, 6	;RP1=0, select bank0
  6708  0B38  0846               	movf	(___ftmul@f1),w
  6709  0B39  00CC               	movwf	((??___ftmul+0)+0)
  6710  0B3A  0847               	movf	(___ftmul@f1+1),w
  6711  0B3B  00CD               	movwf	((??___ftmul+0)+0+1)
  6712  0B3C  0848               	movf	(___ftmul@f1+2),w
  6713  0B3D  00CE               	movwf	((??___ftmul+0)+0+2)
  6714  0B3E  1003               	clrc
  6715  0B3F  0D4D               	rlf	(??___ftmul+0)+1,w
  6716  0B40  0D4E               	rlf	(??___ftmul+0)+2,w
  6717  0B41  00CF               	movwf	(??___ftmul+3)+0
  6718  0B42  084F               	movf	(??___ftmul+3)+0,w
  6719  0B43  00D0               	movwf	(___ftmul@exp)
  6720  0B44  08D0               	movf	((___ftmul@exp)),f
  6721  0B45  1D03               	skipz
  6722  0B46  2B48               	goto	u5361
  6723  0B47  2B49               	goto	u5360
  6724  0B48                     u5361:
  6725  0B48  2B51               	goto	l11535
  6726  0B49                     u5360:
  6727                           	line	57
  6728                           	
  6729  0B49                     l11531:	
  6730  0B49  3000               	movlw	0x0
  6731  0B4A  00C6               	movwf	(?___ftmul)
  6732  0B4B  3000               	movlw	0x0
  6733  0B4C  00C7               	movwf	(?___ftmul+1)
  6734  0B4D  3000               	movlw	0x0
  6735  0B4E  00C8               	movwf	(?___ftmul+2)
  6736  0B4F  2C23               	goto	l7632
  6737                           	
  6738  0B50                     l11533:	
  6739  0B50  2C23               	goto	l7632
  6740                           	
  6741  0B51                     l7631:	
  6742                           	line	58
  6743                           	
  6744  0B51                     l11535:	
  6745  0B51  0849               	movf	(___ftmul@f2),w
  6746  0B52  00CC               	movwf	((??___ftmul+0)+0)
  6747  0B53  084A               	movf	(___ftmul@f2+1),w
  6748  0B54  00CD               	movwf	((??___ftmul+0)+0+1)
  6749  0B55  084B               	movf	(___ftmul@f2+2),w
  6750  0B56  00CE               	movwf	((??___ftmul+0)+0+2)
  6751  0B57  1003               	clrc
  6752  0B58  0D4D               	rlf	(??___ftmul+0)+1,w
  6753  0B59  0D4E               	rlf	(??___ftmul+0)+2,w
  6754  0B5A  00CF               	movwf	(??___ftmul+3)+0
  6755  0B5B  084F               	movf	(??___ftmul+3)+0,w
  6756  0B5C  00D5               	movwf	(___ftmul@sign)
  6757  0B5D  08D5               	movf	((___ftmul@sign)),f
  6758  0B5E  1D03               	skipz
  6759  0B5F  2B61               	goto	u5371
  6760  0B60  2B62               	goto	u5370
  6761  0B61                     u5371:
  6762  0B61  2B6A               	goto	l11541
  6763  0B62                     u5370:
  6764                           	line	59
  6765                           	
  6766  0B62                     l11537:	
  6767  0B62  3000               	movlw	0x0
  6768  0B63  00C6               	movwf	(?___ftmul)
  6769  0B64  3000               	movlw	0x0
  6770  0B65  00C7               	movwf	(?___ftmul+1)
  6771  0B66  3000               	movlw	0x0
  6772  0B67  00C8               	movwf	(?___ftmul+2)
  6773  0B68  2C23               	goto	l7632
  6774                           	
  6775  0B69                     l11539:	
  6776  0B69  2C23               	goto	l7632
  6777                           	
  6778  0B6A                     l7633:	
  6779                           	line	60
  6780                           	
  6781  0B6A                     l11541:	
  6782  0B6A  0855               	movf	(___ftmul@sign),w
  6783  0B6B  3E7B               	addlw	07Bh
  6784  0B6C  00CC               	movwf	(??___ftmul+0)+0
  6785  0B6D  084C               	movf	(??___ftmul+0)+0,w
  6786  0B6E  07D0               	addwf	(___ftmul@exp),f
  6787                           	line	61
  6788  0B6F  0846               	movf	(___ftmul@f1),w
  6789  0B70  00CC               	movwf	((??___ftmul+0)+0)
  6790  0B71  0847               	movf	(___ftmul@f1+1),w
  6791  0B72  00CD               	movwf	((??___ftmul+0)+0+1)
  6792  0B73  0848               	movf	(___ftmul@f1+2),w
  6793  0B74  00CE               	movwf	((??___ftmul+0)+0+2)
  6794  0B75  3010               	movlw	010h
  6795  0B76                     u5385:
  6796  0B76  1003               	clrc
  6797  0B77  0CCE               	rrf	(??___ftmul+0)+2,f
  6798  0B78  0CCD               	rrf	(??___ftmul+0)+1,f
  6799  0B79  0CCC               	rrf	(??___ftmul+0)+0,f
  6800  0B7A                     u5380:
  6801  0B7A  3EFF               	addlw	-1
  6802  0B7B  1D03               	skipz
  6803  0B7C  2B76               	goto	u5385
  6804  0B7D  084C               	movf	0+(??___ftmul+0)+0,w
  6805  0B7E  00CF               	movwf	(??___ftmul+3)+0
  6806  0B7F  084F               	movf	(??___ftmul+3)+0,w
  6807  0B80  00D5               	movwf	(___ftmul@sign)
  6808                           	line	62
  6809  0B81  0849               	movf	(___ftmul@f2),w
  6810  0B82  00CC               	movwf	((??___ftmul+0)+0)
  6811  0B83  084A               	movf	(___ftmul@f2+1),w
  6812  0B84  00CD               	movwf	((??___ftmul+0)+0+1)
  6813  0B85  084B               	movf	(___ftmul@f2+2),w
  6814  0B86  00CE               	movwf	((??___ftmul+0)+0+2)
  6815  0B87  3010               	movlw	010h
  6816  0B88                     u5395:
  6817  0B88  1003               	clrc
  6818  0B89  0CCE               	rrf	(??___ftmul+0)+2,f
  6819  0B8A  0CCD               	rrf	(??___ftmul+0)+1,f
  6820  0B8B  0CCC               	rrf	(??___ftmul+0)+0,f
  6821  0B8C                     u5390:
  6822  0B8C  3EFF               	addlw	-1
  6823  0B8D  1D03               	skipz
  6824  0B8E  2B88               	goto	u5395
  6825  0B8F  084C               	movf	0+(??___ftmul+0)+0,w
  6826  0B90  00CF               	movwf	(??___ftmul+3)+0
  6827  0B91  084F               	movf	(??___ftmul+3)+0,w
  6828  0B92  06D5               	xorwf	(___ftmul@sign),f
  6829                           	line	63
  6830  0B93  3080               	movlw	(080h)
  6831  0B94  00CC               	movwf	(??___ftmul+0)+0
  6832  0B95  084C               	movf	(??___ftmul+0)+0,w
  6833  0B96  05D5               	andwf	(___ftmul@sign),f
  6834                           	line	64
  6835                           	
  6836  0B97                     l11543:	
  6837  0B97  17C7               	bsf	(___ftmul@f1)+(15/8),(15)&7
  6838                           	line	66
  6839                           	
  6840  0B98                     l11545:	
  6841  0B98  17CA               	bsf	(___ftmul@f2)+(15/8),(15)&7
  6842                           	line	67
  6843                           	
  6844  0B99                     l11547:	
  6845  0B99  30FF               	movlw	0FFh
  6846  0B9A  05C9               	andwf	(___ftmul@f2),f
  6847  0B9B  30FF               	movlw	0FFh
  6848  0B9C  05CA               	andwf	(___ftmul@f2+1),f
  6849  0B9D  3000               	movlw	0
  6850  0B9E  05CB               	andwf	(___ftmul@f2+2),f
  6851                           	line	68
  6852                           	
  6853  0B9F                     l11549:	
  6854  0B9F  3000               	movlw	0
  6855  0BA0  00D1               	movwf	(___ftmul@f3_as_product)
  6856  0BA1  3000               	movlw	0
  6857  0BA2  00D2               	movwf	(___ftmul@f3_as_product+1)
  6858  0BA3  3000               	movlw	0
  6859  0BA4  00D3               	movwf	(___ftmul@f3_as_product+2)
  6860                           	line	69
  6861                           	
  6862  0BA5                     l11551:	
  6863  0BA5  3007               	movlw	(07h)
  6864  0BA6  00CC               	movwf	(??___ftmul+0)+0
  6865  0BA7  084C               	movf	(??___ftmul+0)+0,w
  6866  0BA8  00D4               	movwf	(___ftmul@cntr)
  6867  0BA9  2BAA               	goto	l11553
  6868                           	line	70
  6869                           	
  6870  0BAA                     l7634:	
  6871                           	line	71
  6872                           	
  6873  0BAA                     l11553:	
  6874  0BAA  1C46               	btfss	(___ftmul@f1),(0)&7
  6875  0BAB  2BAD               	goto	u5401
  6876  0BAC  2BAE               	goto	u5400
  6877  0BAD                     u5401:
  6878  0BAD  2BBF               	goto	l11557
  6879  0BAE                     u5400:
  6880                           	line	72
  6881                           	
  6882  0BAE                     l11555:	
  6883  0BAE  0849               	movf	(___ftmul@f2),w
  6884  0BAF  07D1               	addwf	(___ftmul@f3_as_product),f
  6885  0BB0  084A               	movf	(___ftmul@f2+1),w
  6886  0BB1  1103               	clrz
  6887  0BB2  1803               	skipnc
  6888  0BB3  0A4A               	incf	(___ftmul@f2+1),w
  6889  0BB4  1903               	skipnz
  6890  0BB5  2BB7               	goto	u5411
  6891  0BB6  07D2               	addwf	(___ftmul@f3_as_product+1),f
  6892  0BB7                     u5411:
  6893  0BB7  084B               	movf	(___ftmul@f2+2),w
  6894  0BB8  1103               	clrz
  6895  0BB9  1803               	skipnc
  6896  0BBA  0A4B               	incf	(___ftmul@f2+2),w
  6897  0BBB  1903               	skipnz
  6898  0BBC  2BBE               	goto	u5412
  6899  0BBD  07D3               	addwf	(___ftmul@f3_as_product+2),f
  6900  0BBE                     u5412:
  6901                           
  6902  0BBE  2BBF               	goto	l11557
  6903                           	
  6904  0BBF                     l7635:	
  6905                           	line	73
  6906                           	
  6907  0BBF                     l11557:	
  6908  0BBF  3001               	movlw	01h
  6909  0BC0                     u5425:
  6910  0BC0  1003               	clrc
  6911  0BC1  0CC8               	rrf	(___ftmul@f1+2),f
  6912  0BC2  0CC7               	rrf	(___ftmul@f1+1),f
  6913  0BC3  0CC6               	rrf	(___ftmul@f1),f
  6914  0BC4  3EFF               	addlw	-1
  6915  0BC5  1D03               	skipz
  6916  0BC6  2BC0               	goto	u5425
  6917                           
  6918                           	line	74
  6919                           	
  6920  0BC7                     l11559:	
  6921  0BC7  3001               	movlw	01h
  6922  0BC8                     u5435:
  6923  0BC8  1003               	clrc
  6924  0BC9  0DC9               	rlf	(___ftmul@f2),f
  6925  0BCA  0DCA               	rlf	(___ftmul@f2+1),f
  6926  0BCB  0DCB               	rlf	(___ftmul@f2+2),f
  6927  0BCC  3EFF               	addlw	-1
  6928  0BCD  1D03               	skipz
  6929  0BCE  2BC8               	goto	u5435
  6930                           	line	75
  6931                           	
  6932  0BCF                     l11561:	
  6933  0BCF  3001               	movlw	low(01h)
  6934  0BD0  02D4               	subwf	(___ftmul@cntr),f
  6935  0BD1  1D03               	btfss	status,2
  6936  0BD2  2BD4               	goto	u5441
  6937  0BD3  2BD5               	goto	u5440
  6938  0BD4                     u5441:
  6939  0BD4  2BAA               	goto	l11553
  6940  0BD5                     u5440:
  6941  0BD5  2BD6               	goto	l11563
  6942                           	
  6943  0BD6                     l7636:	
  6944                           	line	76
  6945                           	
  6946  0BD6                     l11563:	
  6947  0BD6  3009               	movlw	(09h)
  6948  0BD7  00CC               	movwf	(??___ftmul+0)+0
  6949  0BD8  084C               	movf	(??___ftmul+0)+0,w
  6950  0BD9  00D4               	movwf	(___ftmul@cntr)
  6951  0BDA  2BDB               	goto	l11565
  6952                           	line	77
  6953                           	
  6954  0BDB                     l7637:	
  6955                           	line	78
  6956                           	
  6957  0BDB                     l11565:	
  6958  0BDB  1C46               	btfss	(___ftmul@f1),(0)&7
  6959  0BDC  2BDE               	goto	u5451
  6960  0BDD  2BDF               	goto	u5450
  6961  0BDE                     u5451:
  6962  0BDE  2BF0               	goto	l11569
  6963  0BDF                     u5450:
  6964                           	line	79
  6965                           	
  6966  0BDF                     l11567:	
  6967  0BDF  0849               	movf	(___ftmul@f2),w
  6968  0BE0  07D1               	addwf	(___ftmul@f3_as_product),f
  6969  0BE1  084A               	movf	(___ftmul@f2+1),w
  6970  0BE2  1103               	clrz
  6971  0BE3  1803               	skipnc
  6972  0BE4  0A4A               	incf	(___ftmul@f2+1),w
  6973  0BE5  1903               	skipnz
  6974  0BE6  2BE8               	goto	u5461
  6975  0BE7  07D2               	addwf	(___ftmul@f3_as_product+1),f
  6976  0BE8                     u5461:
  6977  0BE8  084B               	movf	(___ftmul@f2+2),w
  6978  0BE9  1103               	clrz
  6979  0BEA  1803               	skipnc
  6980  0BEB  0A4B               	incf	(___ftmul@f2+2),w
  6981  0BEC  1903               	skipnz
  6982  0BED  2BEF               	goto	u5462
  6983  0BEE  07D3               	addwf	(___ftmul@f3_as_product+2),f
  6984  0BEF                     u5462:
  6985                           
  6986  0BEF  2BF0               	goto	l11569
  6987                           	
  6988  0BF0                     l7638:	
  6989                           	line	80
  6990                           	
  6991  0BF0                     l11569:	
  6992  0BF0  3001               	movlw	01h
  6993  0BF1                     u5475:
  6994  0BF1  1003               	clrc
  6995  0BF2  0CC8               	rrf	(___ftmul@f1+2),f
  6996  0BF3  0CC7               	rrf	(___ftmul@f1+1),f
  6997  0BF4  0CC6               	rrf	(___ftmul@f1),f
  6998  0BF5  3EFF               	addlw	-1
  6999  0BF6  1D03               	skipz
  7000  0BF7  2BF1               	goto	u5475
  7001                           
  7002                           	line	81
  7003                           	
  7004  0BF8                     l11571:	
  7005  0BF8  3001               	movlw	01h
  7006  0BF9                     u5485:
  7007  0BF9  1003               	clrc
  7008  0BFA  0CD3               	rrf	(___ftmul@f3_as_product+2),f
  7009  0BFB  0CD2               	rrf	(___ftmul@f3_as_product+1),f
  7010  0BFC  0CD1               	rrf	(___ftmul@f3_as_product),f
  7011  0BFD  3EFF               	addlw	-1
  7012  0BFE  1D03               	skipz
  7013  0BFF  2BF9               	goto	u5485
  7014                           
  7015                           	line	82
  7016                           	
  7017  0C00                     l11573:	
  7018  0C00  3001               	movlw	low(01h)
  7019  0C01  02D4               	subwf	(___ftmul@cntr),f
  7020  0C02  1D03               	btfss	status,2
  7021  0C03  2C05               	goto	u5491
  7022  0C04  2C06               	goto	u5490
  7023  0C05                     u5491:
  7024  0C05  2BDB               	goto	l11565
  7025  0C06                     u5490:
  7026  0C06  2C07               	goto	l11575
  7027                           	
  7028  0C07                     l7639:	
  7029                           	line	83
  7030                           	
  7031  0C07                     l11575:	
  7032  0C07  0851               	movf	(___ftmul@f3_as_product),w
  7033  0C08  00A0               	movwf	(?___ftpack)
  7034  0C09  0852               	movf	(___ftmul@f3_as_product+1),w
  7035  0C0A  00A1               	movwf	(?___ftpack+1)
  7036  0C0B  0853               	movf	(___ftmul@f3_as_product+2),w
  7037  0C0C  00A2               	movwf	(?___ftpack+2)
  7038  0C0D  0850               	movf	(___ftmul@exp),w
  7039  0C0E  00CC               	movwf	(??___ftmul+0)+0
  7040  0C0F  084C               	movf	(??___ftmul+0)+0,w
  7041  0C10  00A3               	movwf	0+(?___ftpack)+03h
  7042  0C11  0855               	movf	(___ftmul@sign),w
  7043  0C12  00CD               	movwf	(??___ftmul+1)+0
  7044  0C13  084D               	movf	(??___ftmul+1)+0,w
  7045  0C14  00A4               	movwf	0+(?___ftpack)+04h
  7046  0C15  160A  118A  266D   	fcall	___ftpack
              120A  158A         
  7047  0C1A  1283               	bcf	status, 5	;RP0=0, select bank0
  7048  0C1B  1303               	bcf	status, 6	;RP1=0, select bank0
  7049  0C1C  0820               	movf	(0+(?___ftpack)),w
  7050  0C1D  00C6               	movwf	(?___ftmul)
  7051  0C1E  0821               	movf	(1+(?___ftpack)),w
  7052  0C1F  00C7               	movwf	(?___ftmul+1)
  7053  0C20  0822               	movf	(2+(?___ftpack)),w
  7054  0C21  00C8               	movwf	(?___ftmul+2)
  7055  0C22  2C23               	goto	l7632
  7056                           	
  7057  0C23                     l11577:	
  7058                           	line	84
  7059                           	
  7060  0C23                     l7632:	
  7061  0C23  0008               	return
  7062                           	opt stack 0
  7063                           GLOBAL	__end_of___ftmul
  7064  0C24                     	__end_of___ftmul:
  7065 ;; =============== function ___ftmul ends ============
  7066                           
  7067                           	signat	___ftmul,8315
  7068                           	global	___ftdiv
  7069                           psect	text1135,local,class=CODE,delta=2
  7070                           global __ptext1135
  7071  0A6E                     __ptext1135:
  7072                           
  7073 ;; *************** function ___ftdiv *****************
  7074 ;; Defined at:
  7075 ;;		line 50 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  f2              3   22[BANK0 ] float 
  7078 ;;  f1              3   25[BANK0 ] float 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  f3              3   33[BANK0 ] float 
  7081 ;;  sign            1   37[BANK0 ] unsigned char 
  7082 ;;  exp             1   36[BANK0 ] unsigned char 
  7083 ;;  cntr            1   32[BANK0 ] unsigned char 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  3   22[BANK0 ] float 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0, pclath, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7093 ;;      Params:         0       6       0       0       0
  7094 ;;      Locals:         0       6       0       0       0
  7095 ;;      Temps:          0       4       0       0       0
  7096 ;;      Totals:         0      16       0       0       0
  7097 ;;Total ram usage:       16 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    4
  7100 ;; This function calls:
  7101 ;;		___ftpack
  7102 ;; This function is called by:
  7103 ;;		_robotFollow
  7104 ;;		_robotMoveSpeed
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           psect	text1135
  7108                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  7109                           	line	50
  7110                           	global	__size_of___ftdiv
  7111  00C8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  7112                           	
  7113  0A6E                     ___ftdiv:	
  7114                           	opt	stack 2
  7115                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7116                           	line	55
  7117                           	
  7118  0A6E                     l11487:	
  7119  0A6E  1283               	bcf	status, 5	;RP0=0, select bank0
  7120  0A6F  1303               	bcf	status, 6	;RP1=0, select bank0
  7121  0A70  0839               	movf	(___ftdiv@f1),w
  7122  0A71  00BC               	movwf	((??___ftdiv+0)+0)
  7123  0A72  083A               	movf	(___ftdiv@f1+1),w
  7124  0A73  00BD               	movwf	((??___ftdiv+0)+0+1)
  7125  0A74  083B               	movf	(___ftdiv@f1+2),w
  7126  0A75  00BE               	movwf	((??___ftdiv+0)+0+2)
  7127  0A76  1003               	clrc
  7128  0A77  0D3D               	rlf	(??___ftdiv+0)+1,w
  7129  0A78  0D3E               	rlf	(??___ftdiv+0)+2,w
  7130  0A79  00BF               	movwf	(??___ftdiv+3)+0
  7131  0A7A  083F               	movf	(??___ftdiv+3)+0,w
  7132  0A7B  00C4               	movwf	(___ftdiv@exp)
  7133  0A7C  08C4               	movf	((___ftdiv@exp)),f
  7134  0A7D  1D03               	skipz
  7135  0A7E  2A80               	goto	u5281
  7136  0A7F  2A81               	goto	u5280
  7137  0A80                     u5281:
  7138  0A80  2A89               	goto	l11493
  7139  0A81                     u5280:
  7140                           	line	56
  7141                           	
  7142  0A81                     l11489:	
  7143  0A81  3000               	movlw	0x0
  7144  0A82  00B6               	movwf	(?___ftdiv)
  7145  0A83  3000               	movlw	0x0
  7146  0A84  00B7               	movwf	(?___ftdiv+1)
  7147  0A85  3000               	movlw	0x0
  7148  0A86  00B8               	movwf	(?___ftdiv+2)
  7149  0A87  2B35               	goto	l7622
  7150                           	
  7151  0A88                     l11491:	
  7152  0A88  2B35               	goto	l7622
  7153                           	
  7154  0A89                     l7621:	
  7155                           	line	57
  7156                           	
  7157  0A89                     l11493:	
  7158  0A89  0836               	movf	(___ftdiv@f2),w
  7159  0A8A  00BC               	movwf	((??___ftdiv+0)+0)
  7160  0A8B  0837               	movf	(___ftdiv@f2+1),w
  7161  0A8C  00BD               	movwf	((??___ftdiv+0)+0+1)
  7162  0A8D  0838               	movf	(___ftdiv@f2+2),w
  7163  0A8E  00BE               	movwf	((??___ftdiv+0)+0+2)
  7164  0A8F  1003               	clrc
  7165  0A90  0D3D               	rlf	(??___ftdiv+0)+1,w
  7166  0A91  0D3E               	rlf	(??___ftdiv+0)+2,w
  7167  0A92  00BF               	movwf	(??___ftdiv+3)+0
  7168  0A93  083F               	movf	(??___ftdiv+3)+0,w
  7169  0A94  00C5               	movwf	(___ftdiv@sign)
  7170  0A95  08C5               	movf	((___ftdiv@sign)),f
  7171  0A96  1D03               	skipz
  7172  0A97  2A99               	goto	u5291
  7173  0A98  2A9A               	goto	u5290
  7174  0A99                     u5291:
  7175  0A99  2AA2               	goto	l11499
  7176  0A9A                     u5290:
  7177                           	line	58
  7178                           	
  7179  0A9A                     l11495:	
  7180  0A9A  3000               	movlw	0x0
  7181  0A9B  00B6               	movwf	(?___ftdiv)
  7182  0A9C  3000               	movlw	0x0
  7183  0A9D  00B7               	movwf	(?___ftdiv+1)
  7184  0A9E  3000               	movlw	0x0
  7185  0A9F  00B8               	movwf	(?___ftdiv+2)
  7186  0AA0  2B35               	goto	l7622
  7187                           	
  7188  0AA1                     l11497:	
  7189  0AA1  2B35               	goto	l7622
  7190                           	
  7191  0AA2                     l7623:	
  7192                           	line	59
  7193                           	
  7194  0AA2                     l11499:	
  7195  0AA2  3000               	movlw	0
  7196  0AA3  00C1               	movwf	(___ftdiv@f3)
  7197  0AA4  3000               	movlw	0
  7198  0AA5  00C2               	movwf	(___ftdiv@f3+1)
  7199  0AA6  3000               	movlw	0
  7200  0AA7  00C3               	movwf	(___ftdiv@f3+2)
  7201                           	line	60
  7202                           	
  7203  0AA8                     l11501:	
  7204  0AA8  3089               	movlw	(089h)
  7205  0AA9  0745               	addwf	(___ftdiv@sign),w
  7206  0AAA  00BC               	movwf	(??___ftdiv+0)+0
  7207  0AAB  083C               	movf	0+(??___ftdiv+0)+0,w
  7208  0AAC  02C4               	subwf	(___ftdiv@exp),f
  7209                           	line	61
  7210                           	
  7211  0AAD                     l11503:	
  7212  0AAD  0839               	movf	(___ftdiv@f1),w
  7213  0AAE  00BC               	movwf	((??___ftdiv+0)+0)
  7214  0AAF  083A               	movf	(___ftdiv@f1+1),w
  7215  0AB0  00BD               	movwf	((??___ftdiv+0)+0+1)
  7216  0AB1  083B               	movf	(___ftdiv@f1+2),w
  7217  0AB2  00BE               	movwf	((??___ftdiv+0)+0+2)
  7218  0AB3  3010               	movlw	010h
  7219  0AB4                     u5305:
  7220  0AB4  1003               	clrc
  7221  0AB5  0CBE               	rrf	(??___ftdiv+0)+2,f
  7222  0AB6  0CBD               	rrf	(??___ftdiv+0)+1,f
  7223  0AB7  0CBC               	rrf	(??___ftdiv+0)+0,f
  7224  0AB8                     u5300:
  7225  0AB8  3EFF               	addlw	-1
  7226  0AB9  1D03               	skipz
  7227  0ABA  2AB4               	goto	u5305
  7228  0ABB  083C               	movf	0+(??___ftdiv+0)+0,w
  7229  0ABC  00BF               	movwf	(??___ftdiv+3)+0
  7230  0ABD  083F               	movf	(??___ftdiv+3)+0,w
  7231  0ABE  00C5               	movwf	(___ftdiv@sign)
  7232                           	line	62
  7233                           	
  7234  0ABF                     l11505:	
  7235  0ABF  0836               	movf	(___ftdiv@f2),w
  7236  0AC0  00BC               	movwf	((??___ftdiv+0)+0)
  7237  0AC1  0837               	movf	(___ftdiv@f2+1),w
  7238  0AC2  00BD               	movwf	((??___ftdiv+0)+0+1)
  7239  0AC3  0838               	movf	(___ftdiv@f2+2),w
  7240  0AC4  00BE               	movwf	((??___ftdiv+0)+0+2)
  7241  0AC5  3010               	movlw	010h
  7242  0AC6                     u5315:
  7243  0AC6  1003               	clrc
  7244  0AC7  0CBE               	rrf	(??___ftdiv+0)+2,f
  7245  0AC8  0CBD               	rrf	(??___ftdiv+0)+1,f
  7246  0AC9  0CBC               	rrf	(??___ftdiv+0)+0,f
  7247  0ACA                     u5310:
  7248  0ACA  3EFF               	addlw	-1
  7249  0ACB  1D03               	skipz
  7250  0ACC  2AC6               	goto	u5315
  7251  0ACD  083C               	movf	0+(??___ftdiv+0)+0,w
  7252  0ACE  00BF               	movwf	(??___ftdiv+3)+0
  7253  0ACF  083F               	movf	(??___ftdiv+3)+0,w
  7254  0AD0  06C5               	xorwf	(___ftdiv@sign),f
  7255                           	line	63
  7256                           	
  7257  0AD1                     l11507:	
  7258  0AD1  3080               	movlw	(080h)
  7259  0AD2  00BC               	movwf	(??___ftdiv+0)+0
  7260  0AD3  083C               	movf	(??___ftdiv+0)+0,w
  7261  0AD4  05C5               	andwf	(___ftdiv@sign),f
  7262                           	line	64
  7263                           	
  7264  0AD5                     l11509:	
  7265  0AD5  17BA               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  7266                           	line	65
  7267  0AD6  30FF               	movlw	0FFh
  7268  0AD7  05B9               	andwf	(___ftdiv@f1),f
  7269  0AD8  30FF               	movlw	0FFh
  7270  0AD9  05BA               	andwf	(___ftdiv@f1+1),f
  7271  0ADA  3000               	movlw	0
  7272  0ADB  05BB               	andwf	(___ftdiv@f1+2),f
  7273                           	line	66
  7274                           	
  7275  0ADC                     l11511:	
  7276  0ADC  17B7               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  7277                           	line	67
  7278  0ADD  30FF               	movlw	0FFh
  7279  0ADE  05B6               	andwf	(___ftdiv@f2),f
  7280  0ADF  30FF               	movlw	0FFh
  7281  0AE0  05B7               	andwf	(___ftdiv@f2+1),f
  7282  0AE1  3000               	movlw	0
  7283  0AE2  05B8               	andwf	(___ftdiv@f2+2),f
  7284                           	line	68
  7285  0AE3  3018               	movlw	(018h)
  7286  0AE4  00BC               	movwf	(??___ftdiv+0)+0
  7287  0AE5  083C               	movf	(??___ftdiv+0)+0,w
  7288  0AE6  00C0               	movwf	(___ftdiv@cntr)
  7289  0AE7  2AE8               	goto	l11513
  7290                           	line	69
  7291                           	
  7292  0AE8                     l7624:	
  7293                           	line	70
  7294                           	
  7295  0AE8                     l11513:	
  7296  0AE8  3001               	movlw	01h
  7297  0AE9                     u5325:
  7298  0AE9  1003               	clrc
  7299  0AEA  0DC1               	rlf	(___ftdiv@f3),f
  7300  0AEB  0DC2               	rlf	(___ftdiv@f3+1),f
  7301  0AEC  0DC3               	rlf	(___ftdiv@f3+2),f
  7302  0AED  3EFF               	addlw	-1
  7303  0AEE  1D03               	skipz
  7304  0AEF  2AE9               	goto	u5325
  7305                           	line	71
  7306                           	
  7307  0AF0                     l11515:	
  7308  0AF0  0838               	movf	(___ftdiv@f2+2),w
  7309  0AF1  023B               	subwf	(___ftdiv@f1+2),w
  7310  0AF2  1D03               	skipz
  7311  0AF3  2AFA               	goto	u5335
  7312  0AF4  0837               	movf	(___ftdiv@f2+1),w
  7313  0AF5  023A               	subwf	(___ftdiv@f1+1),w
  7314  0AF6  1D03               	skipz
  7315  0AF7  2AFA               	goto	u5335
  7316  0AF8  0836               	movf	(___ftdiv@f2),w
  7317  0AF9  0239               	subwf	(___ftdiv@f1),w
  7318  0AFA                     u5335:
  7319  0AFA  1C03               	skipc
  7320  0AFB  2AFD               	goto	u5331
  7321  0AFC  2AFE               	goto	u5330
  7322  0AFD                     u5331:
  7323  0AFD  2B0A               	goto	l11521
  7324  0AFE                     u5330:
  7325                           	line	72
  7326                           	
  7327  0AFE                     l11517:	
  7328  0AFE  0836               	movf	(___ftdiv@f2),w
  7329  0AFF  02B9               	subwf	(___ftdiv@f1),f
  7330  0B00  0837               	movf	(___ftdiv@f2+1),w
  7331  0B01  1C03               	skipc
  7332  0B02  0F37               	incfsz	(___ftdiv@f2+1),w
  7333  0B03  02BA               	subwf	(___ftdiv@f1+1),f
  7334  0B04  0838               	movf	(___ftdiv@f2+2),w
  7335  0B05  1C03               	skipc
  7336  0B06  0A38               	incf	(___ftdiv@f2+2),w
  7337  0B07  02BB               	subwf	(___ftdiv@f1+2),f
  7338                           	line	73
  7339                           	
  7340  0B08                     l11519:	
  7341  0B08  1441               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  7342  0B09  2B0A               	goto	l11521
  7343                           	line	74
  7344                           	
  7345  0B0A                     l7625:	
  7346                           	line	75
  7347                           	
  7348  0B0A                     l11521:	
  7349  0B0A  3001               	movlw	01h
  7350  0B0B                     u5345:
  7351  0B0B  1003               	clrc
  7352  0B0C  0DB9               	rlf	(___ftdiv@f1),f
  7353  0B0D  0DBA               	rlf	(___ftdiv@f1+1),f
  7354  0B0E  0DBB               	rlf	(___ftdiv@f1+2),f
  7355  0B0F  3EFF               	addlw	-1
  7356  0B10  1D03               	skipz
  7357  0B11  2B0B               	goto	u5345
  7358                           	line	76
  7359                           	
  7360  0B12                     l11523:	
  7361  0B12  3001               	movlw	low(01h)
  7362  0B13  02C0               	subwf	(___ftdiv@cntr),f
  7363  0B14  1D03               	btfss	status,2
  7364  0B15  2B17               	goto	u5351
  7365  0B16  2B18               	goto	u5350
  7366  0B17                     u5351:
  7367  0B17  2AE8               	goto	l11513
  7368  0B18                     u5350:
  7369  0B18  2B19               	goto	l11525
  7370                           	
  7371  0B19                     l7626:	
  7372                           	line	77
  7373                           	
  7374  0B19                     l11525:	
  7375  0B19  0841               	movf	(___ftdiv@f3),w
  7376  0B1A  00A0               	movwf	(?___ftpack)
  7377  0B1B  0842               	movf	(___ftdiv@f3+1),w
  7378  0B1C  00A1               	movwf	(?___ftpack+1)
  7379  0B1D  0843               	movf	(___ftdiv@f3+2),w
  7380  0B1E  00A2               	movwf	(?___ftpack+2)
  7381  0B1F  0844               	movf	(___ftdiv@exp),w
  7382  0B20  00BC               	movwf	(??___ftdiv+0)+0
  7383  0B21  083C               	movf	(??___ftdiv+0)+0,w
  7384  0B22  00A3               	movwf	0+(?___ftpack)+03h
  7385  0B23  0845               	movf	(___ftdiv@sign),w
  7386  0B24  00BD               	movwf	(??___ftdiv+1)+0
  7387  0B25  083D               	movf	(??___ftdiv+1)+0,w
  7388  0B26  00A4               	movwf	0+(?___ftpack)+04h
  7389  0B27  160A  118A  266D   	fcall	___ftpack
              120A  158A         
  7390  0B2C  1283               	bcf	status, 5	;RP0=0, select bank0
  7391  0B2D  1303               	bcf	status, 6	;RP1=0, select bank0
  7392  0B2E  0820               	movf	(0+(?___ftpack)),w
  7393  0B2F  00B6               	movwf	(?___ftdiv)
  7394  0B30  0821               	movf	(1+(?___ftpack)),w
  7395  0B31  00B7               	movwf	(?___ftdiv+1)
  7396  0B32  0822               	movf	(2+(?___ftpack)),w
  7397  0B33  00B8               	movwf	(?___ftdiv+2)
  7398  0B34  2B35               	goto	l7622
  7399                           	
  7400  0B35                     l11527:	
  7401                           	line	78
  7402                           	
  7403  0B35                     l7622:	
  7404  0B35  0008               	return
  7405                           	opt stack 0
  7406                           GLOBAL	__end_of___ftdiv
  7407  0B36                     	__end_of___ftdiv:
  7408 ;; =============== function ___ftdiv ends ============
  7409                           
  7410                           	signat	___ftdiv,8315
  7411                           	global	_abs
  7412                           psect	text1136,local,class=CODE,delta=2
  7413                           global __ptext1136
  7414  125F                     __ptext1136:
  7415                           
  7416 ;; *************** function _abs *****************
  7417 ;; Defined at:
  7418 ;;		line 272 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  v               2    6[BANK0 ] int 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2    6[BANK0 ] int 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7432 ;;      Params:         0       2       0       0       0
  7433 ;;      Locals:         0       0       0       0       0
  7434 ;;      Temps:          0       2       0       0       0
  7435 ;;      Totals:         0       4       0       0       0
  7436 ;;Total ram usage:        4 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    4
  7439 ;; This function calls:
  7440 ;;		___wmul
  7441 ;; This function is called by:
  7442 ;;		_robotFollow
  7443 ;;		_robotMoveSpeed
  7444 ;;		_robotTurnSpeed
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           psect	text1136
  7448                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7449                           	line	272
  7450                           	global	__size_of_abs
  7451  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  7452                           	
  7453  125F                     _abs:	
  7454                           	opt	stack 2
  7455                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7456                           	line	273
  7457                           	
  7458  125F                     l11483:	
  7459                           ;robot.c: 273: return (v * ((v > 0) - (v < 0)));
  7460  125F  3000               	movlw	0
  7461  1260  1283               	bcf	status, 5	;RP0=0, select bank0
  7462  1261  1303               	bcf	status, 6	;RP1=0, select bank0
  7463  1262  1BA7               	btfsc	(abs@v+1),7
  7464  1263  3001               	movlw	1
  7465  1264  00A8               	movwf	(??_abs+0)+0
  7466  1265  01A9               	clrf	(??_abs+0)+0+1
  7467  1266  09A8               	comf	(??_abs+0)+0,f
  7468  1267  09A9               	comf	(??_abs+0)+1,f
  7469  1268  0AA8               	incf	(??_abs+0)+0,f
  7470  1269  1903               	skipnz
  7471  126A  0AA9               	incf	(??_abs+0)+1,f
  7472  126B  0827               	movf	(abs@v+1),w
  7473  126C  3A80               	xorlw	80h
  7474  126D  00FF               	movwf	btemp+1
  7475  126E  3080               	movlw	(high(01h))^80h
  7476  126F  027F               	subwf	btemp+1,w
  7477  1270  1D03               	skipz
  7478  1271  2A74               	goto	u5275
  7479  1272  3001               	movlw	low(01h)
  7480  1273  0226               	subwf	(abs@v),w
  7481  1274                     u5275:
  7482                           
  7483  1274  3000               	movlw	0
  7484  1275  1803               	skipnc
  7485  1276  3001               	movlw	1
  7486  1277  1283               	bcf	status, 5	;RP0=0, select bank0
  7487  1278  1303               	bcf	status, 6	;RP1=0, select bank0
  7488  1279  0728               	addwf	0+(??_abs+0)+0,w
  7489  127A  00A0               	movwf	(?___wmul)
  7490  127B  0829               	movf	1+(??_abs+0)+0,w
  7491  127C  1803               	skipnc
  7492  127D  0A29               	incf	1+(??_abs+0)+0,w
  7493  127E  00A1               	movwf	((?___wmul))+1
  7494  127F  0827               	movf	(abs@v+1),w
  7495  1280  01A3               	clrf	1+(?___wmul)+02h
  7496  1281  07A3               	addwf	1+(?___wmul)+02h
  7497  1282  0826               	movf	(abs@v),w
  7498  1283  01A2               	clrf	0+(?___wmul)+02h
  7499  1284  07A2               	addwf	0+(?___wmul)+02h
  7500                           
  7501  1285  160A  118A  2123   	fcall	___wmul
              160A  118A         
  7502  128A  1283               	bcf	status, 5	;RP0=0, select bank0
  7503  128B  1303               	bcf	status, 6	;RP1=0, select bank0
  7504  128C  0821               	movf	(1+(?___wmul)),w
  7505  128D  01A7               	clrf	(?_abs+1)
  7506  128E  07A7               	addwf	(?_abs+1)
  7507  128F  0820               	movf	(0+(?___wmul)),w
  7508  1290  01A6               	clrf	(?_abs)
  7509  1291  07A6               	addwf	(?_abs)
  7510                           
  7511  1292  2A93               	goto	l6088
  7512                           	
  7513  1293                     l11485:	
  7514                           	line	274
  7515                           	
  7516  1293                     l6088:	
  7517  1293  0008               	return
  7518                           	opt stack 0
  7519                           GLOBAL	__end_of_abs
  7520  1294                     	__end_of_abs:
  7521 ;; =============== function _abs ends ============
  7522                           
  7523                           	signat	_abs,4218
  7524                           	global	_RobotDrive
  7525                           psect	text1137,local,class=CODE,delta=2
  7526                           global __ptext1137
  7527  1294                     __ptext1137:
  7528                           
  7529 ;; *************** function _RobotDrive *****************
  7530 ;; Defined at:
  7531 ;;		line 91 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  speed           2   54[BANK0 ] int 
  7534 ;;  radius          2   56[BANK0 ] int 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  radiushighBy    1   62[BANK0 ] unsigned char 
  7537 ;;  radiuslowByt    1   61[BANK0 ] unsigned char 
  7538 ;;  speedhighByt    1   60[BANK0 ] unsigned char 
  7539 ;;  speedlowByte    1   59[BANK0 ] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;		None               void
  7542 ;; Registers used:
  7543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7549 ;;      Params:         0       4       0       0       0
  7550 ;;      Locals:         0       4       0       0       0
  7551 ;;      Temps:          0       1       0       0       0
  7552 ;;      Totals:         0       9       0       0       0
  7553 ;;Total ram usage:        9 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    4
  7556 ;; This function calls:
  7557 ;;		_ser_putch
  7558 ;; This function is called by:
  7559 ;;		_robotFollow
  7560 ;;		_robotMoveSpeed
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           psect	text1137
  7564                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7565                           	line	91
  7566                           	global	__size_of_RobotDrive
  7567  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  7568                           	
  7569  1294                     _RobotDrive:	
  7570                           	opt	stack 2
  7571                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7572                           	line	93
  7573                           	
  7574  1294                     l11467:	
  7575                           ;robot.c: 93: unsigned char speedlowByte = (unsigned char)(speed);
  7576  1294  1283               	bcf	status, 5	;RP0=0, select bank0
  7577  1295  1303               	bcf	status, 6	;RP1=0, select bank0
  7578  1296  0856               	movf	(RobotDrive@speed),w
  7579  1297  00DA               	movwf	(??_RobotDrive+0)+0
  7580  1298  085A               	movf	(??_RobotDrive+0)+0,w
  7581  1299  00DB               	movwf	(RobotDrive@speedlowByte)
  7582                           	line	94
  7583                           	
  7584  129A                     l11469:	
  7585                           ;robot.c: 94: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  7586  129A  0857               	movf	(RobotDrive@speed+1),w
  7587  129B  00DA               	movwf	(??_RobotDrive+0)+0
  7588  129C  085A               	movf	(??_RobotDrive+0)+0,w
  7589  129D  00DC               	movwf	(RobotDrive@speedhighByte)
  7590                           	line	95
  7591                           	
  7592  129E                     l11471:	
  7593                           ;robot.c: 95: unsigned char radiuslowByte = (unsigned char)(radius);
  7594  129E  0858               	movf	(RobotDrive@radius),w
  7595  129F  00DA               	movwf	(??_RobotDrive+0)+0
  7596  12A0  085A               	movf	(??_RobotDrive+0)+0,w
  7597  12A1  00DD               	movwf	(RobotDrive@radiuslowByte)
  7598                           	line	96
  7599                           ;robot.c: 96: unsigned char radiushighByte = (unsigned char)(radius >> 8);
  7600  12A2  0859               	movf	(RobotDrive@radius+1),w
  7601  12A3  00DA               	movwf	(??_RobotDrive+0)+0
  7602  12A4  085A               	movf	(??_RobotDrive+0)+0,w
  7603  12A5  00DE               	movwf	(RobotDrive@radiushighByte)
  7604                           	line	98
  7605                           	
  7606  12A6                     l11473:	
  7607                           ;robot.c: 98: ser_putch(137);
  7608  12A6  3089               	movlw	(089h)
  7609  12A7  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  7610                           	line	100
  7611                           	
  7612  12AC                     l11475:	
  7613                           ;robot.c: 100: ser_putch(speedhighByte);
  7614  12AC  1283               	bcf	status, 5	;RP0=0, select bank0
  7615  12AD  1303               	bcf	status, 6	;RP1=0, select bank0
  7616  12AE  085C               	movf	(RobotDrive@speedhighByte),w
  7617  12AF  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  7618                           	line	102
  7619                           	
  7620  12B4                     l11477:	
  7621                           ;robot.c: 102: ser_putch(speedlowByte);
  7622  12B4  1283               	bcf	status, 5	;RP0=0, select bank0
  7623  12B5  1303               	bcf	status, 6	;RP1=0, select bank0
  7624  12B6  085B               	movf	(RobotDrive@speedlowByte),w
  7625  12B7  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  7626                           	line	104
  7627                           	
  7628  12BC                     l11479:	
  7629                           ;robot.c: 104: ser_putch(radiushighByte);
  7630  12BC  1283               	bcf	status, 5	;RP0=0, select bank0
  7631  12BD  1303               	bcf	status, 6	;RP1=0, select bank0
  7632  12BE  085E               	movf	(RobotDrive@radiushighByte),w
  7633  12BF  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  7634                           	line	106
  7635                           	
  7636  12C4                     l11481:	
  7637                           ;robot.c: 106: ser_putch(radiuslowByte);
  7638  12C4  1283               	bcf	status, 5	;RP0=0, select bank0
  7639  12C5  1303               	bcf	status, 6	;RP1=0, select bank0
  7640  12C6  085D               	movf	(RobotDrive@radiuslowByte),w
  7641  12C7  160A  118A  21D3   	fcall	_ser_putch
              160A  118A         
  7642                           	line	107
  7643                           	
  7644  12CC                     l6045:	
  7645  12CC  0008               	return
  7646                           	opt stack 0
  7647                           GLOBAL	__end_of_RobotDrive
  7648  12CD                     	__end_of_RobotDrive:
  7649 ;; =============== function _RobotDrive ends ============
  7650                           
  7651                           	signat	_RobotDrive,8312
  7652                           	global	_ser_getch
  7653                           psect	text1138,local,class=CODE,delta=2
  7654                           global __ptext1138
  7655  114F                     __ptext1138:
  7656                           
  7657 ;; *************** function _ser_getch *****************
  7658 ;; Defined at:
  7659 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  c               1    1[BANK0 ] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      unsigned char 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7673 ;;      Params:         0       0       0       0       0
  7674 ;;      Locals:         0       1       0       0       0
  7675 ;;      Temps:          0       1       0       0       0
  7676 ;;      Totals:         0       2       0       0       0
  7677 ;;Total ram usage:        2 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    4
  7680 ;; This function calls:
  7681 ;;		_ser_isrx
  7682 ;; This function is called by:
  7683 ;;		_robot_read
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           psect	text1138
  7687                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7688                           	line	55
  7689                           	global	__size_of_ser_getch
  7690  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  7691                           	
  7692  114F                     _ser_getch:	
  7693                           	opt	stack 1
  7694                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7695                           	line	58
  7696                           	
  7697  114F                     l11451:	
  7698                           ;ser.c: 56: unsigned char c;
  7699                           ;ser.c: 58: while (ser_isrx()==0)
  7700  114F  2951               	goto	l11453
  7701                           	
  7702  1150                     l6792:	
  7703                           	line	59
  7704                           ;ser.c: 59: continue;
  7705  1150  2951               	goto	l11453
  7706                           	
  7707  1151                     l6791:	
  7708                           	line	58
  7709                           	
  7710  1151                     l11453:	
  7711  1151  160A  118A  2065   	fcall	_ser_isrx
              160A  118A         
  7712  1156  1C03               	btfss	status,0
  7713  1157  2959               	goto	u5261
  7714  1158  295A               	goto	u5260
  7715  1159                     u5261:
  7716  1159  2951               	goto	l11453
  7717  115A                     u5260:
  7718                           	
  7719  115A                     l6793:	
  7720                           	line	61
  7721                           ;ser.c: 61: GIE=0;
  7722  115A  138B               	bcf	(95/8),(95)&7
  7723                           	line	62
  7724                           	
  7725  115B                     l11455:	
  7726                           ;ser.c: 62: c=rxfifo[rxoptr];
  7727  115B  1683               	bsf	status, 5	;RP0=1, select bank1
  7728  115C  1303               	bcf	status, 6	;RP1=0, select bank1
  7729  115D  084A               	movf	(_rxoptr)^080h,w
  7730  115E  3EA0               	addlw	_rxfifo&0ffh
  7731  115F  0084               	movwf	fsr0
  7732  1160  1783               	bsf	status, 7	;select IRP bank3
  7733  1161  0800               	movf	indf,w
  7734  1162  1283               	bcf	status, 5	;RP0=0, select bank0
  7735  1163  1303               	bcf	status, 6	;RP1=0, select bank0
  7736  1164  00A0               	movwf	(??_ser_getch+0)+0
  7737  1165  0820               	movf	(??_ser_getch+0)+0,w
  7738  1166  00A1               	movwf	(ser_getch@c)
  7739                           	line	63
  7740                           	
  7741  1167                     l11457:	
  7742                           ;ser.c: 63: ++rxoptr;
  7743  1167  3001               	movlw	(01h)
  7744  1168  00A0               	movwf	(??_ser_getch+0)+0
  7745  1169  0820               	movf	(??_ser_getch+0)+0,w
  7746  116A  1683               	bsf	status, 5	;RP0=1, select bank1
  7747  116B  1303               	bcf	status, 6	;RP1=0, select bank1
  7748  116C  07CA               	addwf	(_rxoptr)^080h,f	;volatile
  7749                           	line	64
  7750                           	
  7751  116D                     l11459:	
  7752                           ;ser.c: 64: rxoptr &= (16-1);
  7753  116D  300F               	movlw	(0Fh)
  7754  116E  1283               	bcf	status, 5	;RP0=0, select bank0
  7755  116F  1303               	bcf	status, 6	;RP1=0, select bank0
  7756  1170  00A0               	movwf	(??_ser_getch+0)+0
  7757  1171  0820               	movf	(??_ser_getch+0)+0,w
  7758  1172  1683               	bsf	status, 5	;RP0=1, select bank1
  7759  1173  1303               	bcf	status, 6	;RP1=0, select bank1
  7760  1174  05CA               	andwf	(_rxoptr)^080h,f	;volatile
  7761                           	line	65
  7762                           	
  7763  1175                     l11461:	
  7764                           ;ser.c: 65: GIE=1;
  7765  1175  178B               	bsf	(95/8),(95)&7
  7766                           	line	66
  7767                           	
  7768  1176                     l11463:	
  7769                           ;ser.c: 66: return c;
  7770  1176  1283               	bcf	status, 5	;RP0=0, select bank0
  7771  1177  1303               	bcf	status, 6	;RP1=0, select bank0
  7772  1178  0821               	movf	(ser_getch@c),w
  7773  1179  297A               	goto	l6794
  7774                           	
  7775  117A                     l11465:	
  7776                           	line	67
  7777                           	
  7778  117A                     l6794:	
  7779  117A  0008               	return
  7780                           	opt stack 0
  7781                           GLOBAL	__end_of_ser_getch
  7782  117B                     	__end_of_ser_getch:
  7783 ;; =============== function _ser_getch ends ============
  7784                           
  7785                           	signat	_ser_getch,89
  7786                           	global	_sprintf
  7787                           psect	text1139,local,class=CODE,delta=2
  7788                           global __ptext1139
  7789  06E4                     __ptext1139:
  7790                           
  7791 ;; *************** function _sprintf *****************
  7792 ;; Defined at:
  7793 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  sp              1    wreg     PTR unsigned char 
  7796 ;;		 -> UpdateDisplay@LCDOutput(16), 
  7797 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  7798 ;;		 -> STR_13(13), 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  7801 ;;		 -> UpdateDisplay@LCDOutput(16), 
  7802 ;;  _val            4   31[BANK0 ] struct .
  7803 ;;  c               1   36[BANK0 ] char 
  7804 ;;  prec            1   30[BANK0 ] char 
  7805 ;;  flag            1   29[BANK0 ] unsigned char 
  7806 ;;  ap              1   28[BANK0 ] PTR void [1]
  7807 ;;		 -> ?_sprintf(2), 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  2   20[BANK0 ] int 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7817 ;;      Params:         0       5       0       0       0
  7818 ;;      Locals:         0       9       0       0       0
  7819 ;;      Temps:          0       3       0       0       0
  7820 ;;      Totals:         0      17       0       0       0
  7821 ;;Total ram usage:       17 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    4
  7824 ;; This function calls:
  7825 ;;		___lwdiv
  7826 ;;		___lwmod
  7827 ;; This function is called by:
  7828 ;;		_UpdateDisplay
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           psect	text1139
  7832                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  7833                           	line	488
  7834                           	global	__size_of_sprintf
  7835  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  7836                           	
  7837  06E4                     _sprintf:	
  7838                           	opt	stack 1
  7839                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7840                           ;sprintf@sp stored from wreg
  7841                           	line	537
  7842  06E4  1283               	bcf	status, 5	;RP0=0, select bank0
  7843  06E5  1303               	bcf	status, 6	;RP1=0, select bank0
  7844  06E6  00C3               	movwf	(sprintf@sp)
  7845                           	
  7846  06E7                     l11393:	
  7847  06E7  3035               	movlw	(?_sprintf+01h)&0ffh
  7848  06E8  00B9               	movwf	(??_sprintf+0)+0
  7849  06E9  0839               	movf	(??_sprintf+0)+0,w
  7850  06EA  00BC               	movwf	(sprintf@ap)
  7851                           	line	540
  7852  06EB  2FCA               	goto	l11445
  7853                           	
  7854  06EC                     l6832:	
  7855                           	line	542
  7856                           	
  7857  06EC                     l11395:	
  7858  06EC  0844               	movf	(sprintf@c),w
  7859  06ED  3A25               	xorlw	025h
  7860  06EE  1903               	skipnz
  7861  06EF  2EF1               	goto	u5181
  7862  06F0  2EF2               	goto	u5180
  7863  06F1                     u5181:
  7864  06F1  2EFE               	goto	l6833
  7865  06F2                     u5180:
  7866                           	line	545
  7867                           	
  7868  06F2                     l11397:	
  7869  06F2  0844               	movf	(sprintf@c),w
  7870  06F3  00B9               	movwf	(??_sprintf+0)+0
  7871  06F4  0843               	movf	(sprintf@sp),w
  7872  06F5  0084               	movwf	fsr0
  7873  06F6  0839               	movf	(??_sprintf+0)+0,w
  7874  06F7  1383               	bcf	status, 7	;select IRP bank0
  7875  06F8  0080               	movwf	indf
  7876                           	
  7877  06F9                     l11399:	
  7878  06F9  3001               	movlw	(01h)
  7879  06FA  00B9               	movwf	(??_sprintf+0)+0
  7880  06FB  0839               	movf	(??_sprintf+0)+0,w
  7881  06FC  07C3               	addwf	(sprintf@sp),f
  7882                           	line	546
  7883  06FD  2FCA               	goto	l11445
  7884                           	line	547
  7885                           	
  7886  06FE                     l6833:	
  7887                           	line	552
  7888  06FE  01BD               	clrf	(sprintf@flag)
  7889                           	line	638
  7890  06FF  2F05               	goto	l11403
  7891                           	line	640
  7892                           	
  7893  0700                     l6835:	
  7894                           	line	641
  7895  0700  2FDE               	goto	l11447
  7896                           	line	700
  7897                           	
  7898  0701                     l6837:	
  7899  0701  2F1A               	goto	l11405
  7900                           	line	701
  7901                           	
  7902  0702                     l6838:	
  7903                           	line	702
  7904  0702  2F1A               	goto	l11405
  7905                           	line	805
  7906                           	
  7907  0703                     l6840:	
  7908                           	line	816
  7909  0703  2FCA               	goto	l11445
  7910                           	line	825
  7911                           	
  7912  0704                     l11401:	
  7913  0704  2F1A               	goto	l11405
  7914                           	line	638
  7915                           	
  7916  0705                     l6834:	
  7917                           	
  7918  0705                     l11403:	
  7919  0705  3001               	movlw	01h
  7920  0706  07B4               	addwf	(sprintf@f),f
  7921  0707  30FF               	movlw	-01h
  7922  0708  0734               	addwf	(sprintf@f),w
  7923  0709  0084               	movwf	fsr0
  7924  070A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  7925  070F  00C4               	movwf	(sprintf@c)
  7926                           	; Switch size 1, requested type "space"
  7927                           ; Number of cases is 3, Range of values is 0 to 105
  7928                           ; switch strategies available:
  7929                           ; Name         Instructions Cycles
  7930                           ; simple_byte           10     6 (average)
  7931                           ; jumptable            260     6 (fixed)
  7932                           ; rangetable           110     6 (fixed)
  7933                           ; spacedrange          218     9 (fixed)
  7934                           ; locatedrange         106     3 (fixed)
  7935                           ;	Chosen strategy is simple_byte
  7936                           
  7937                           	opt asmopt_off
  7938  0710  3A00               	xorlw	0^0	; case 0
  7939  0711  1903               	skipnz
  7940  0712  2FDE               	goto	l11447
  7941  0713  3A64               	xorlw	100^0	; case 100
  7942  0714  1903               	skipnz
  7943  0715  2F1A               	goto	l11405
  7944  0716  3A0D               	xorlw	105^100	; case 105
  7945  0717  1903               	skipnz
  7946  0718  2F1A               	goto	l11405
  7947  0719  2FCA               	goto	l11445
  7948                           	opt asmopt_on
  7949                           
  7950                           	line	825
  7951                           	
  7952  071A                     l6839:	
  7953                           	line	1254
  7954                           	
  7955  071A                     l11405:	
  7956  071A  083C               	movf	(sprintf@ap),w
  7957  071B  0084               	movwf	fsr0
  7958  071C  1383               	bcf	status, 7	;select IRP bank0
  7959  071D  0800               	movf	indf,w
  7960  071E  00BF               	movwf	(sprintf@_val)
  7961  071F  0A84               	incf	fsr0,f
  7962  0720  0800               	movf	indf,w
  7963  0721  00C0               	movwf	(sprintf@_val+1)
  7964                           	
  7965  0722                     l11407:	
  7966  0722  3002               	movlw	(02h)
  7967  0723  00B9               	movwf	(??_sprintf+0)+0
  7968  0724  0839               	movf	(??_sprintf+0)+0,w
  7969  0725  07BC               	addwf	(sprintf@ap),f
  7970                           	line	1256
  7971                           	
  7972  0726                     l11409:	
  7973  0726  1FC0               	btfss	(sprintf@_val+1),7
  7974  0727  2F29               	goto	u5191
  7975  0728  2F2A               	goto	u5190
  7976  0729                     u5191:
  7977  0729  2F34               	goto	l11415
  7978  072A                     u5190:
  7979                           	line	1257
  7980                           	
  7981  072A                     l11411:	
  7982  072A  3003               	movlw	(03h)
  7983  072B  00B9               	movwf	(??_sprintf+0)+0
  7984  072C  0839               	movf	(??_sprintf+0)+0,w
  7985  072D  04BD               	iorwf	(sprintf@flag),f
  7986                           	line	1258
  7987                           	
  7988  072E                     l11413:	
  7989  072E  09BF               	comf	(sprintf@_val),f
  7990  072F  09C0               	comf	(sprintf@_val+1),f
  7991  0730  0ABF               	incf	(sprintf@_val),f
  7992  0731  1903               	skipnz
  7993  0732  0AC0               	incf	(sprintf@_val+1),f
  7994  0733  2F34               	goto	l11415
  7995                           	line	1259
  7996                           	
  7997  0734                     l6841:	
  7998                           	line	1300
  7999                           	
  8000  0734                     l11415:	
  8001  0734  01C4               	clrf	(sprintf@c)
  8002  0735  1403               	bsf	status,0
  8003  0736  0DC4               	rlf	(sprintf@c),f
  8004                           	
  8005  0737                     l11417:	
  8006  0737  0844               	movf	(sprintf@c),w
  8007  0738  3A05               	xorlw	05h
  8008  0739  1D03               	skipz
  8009  073A  2F3C               	goto	u5201
  8010  073B  2F3D               	goto	u5200
  8011  073C                     u5201:
  8012  073C  2F3F               	goto	l11421
  8013  073D                     u5200:
  8014  073D  2F67               	goto	l11429
  8015                           	
  8016  073E                     l11419:	
  8017  073E  2F67               	goto	l11429
  8018                           	line	1301
  8019                           	
  8020  073F                     l6842:	
  8021                           	
  8022  073F                     l11421:	
  8023  073F  0844               	movf	(sprintf@c),w
  8024  0740  00B9               	movwf	(??_sprintf+0)+0
  8025  0741  0739               	addwf	(??_sprintf+0)+0,w
  8026  0742  3E01               	addlw	low((_dpowers-__stringbase))
  8027  0743  0084               	movwf	fsr0
  8028  0744  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8029  0749  00BA               	movwf	(??_sprintf+1)+0
  8030  074A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8031  074F  00BB               	movwf	(??_sprintf+1)+0+1
  8032  0750  083B               	movf	1+(??_sprintf+1)+0,w
  8033  0751  0240               	subwf	(sprintf@_val+1),w
  8034  0752  1D03               	skipz
  8035  0753  2F56               	goto	u5215
  8036  0754  083A               	movf	0+(??_sprintf+1)+0,w
  8037  0755  023F               	subwf	(sprintf@_val),w
  8038  0756                     u5215:
  8039  0756  1803               	skipnc
  8040  0757  2F59               	goto	u5211
  8041  0758  2F5A               	goto	u5210
  8042  0759                     u5211:
  8043  0759  2F5C               	goto	l11425
  8044  075A                     u5210:
  8045  075A  2F67               	goto	l11429
  8046                           	line	1302
  8047                           	
  8048  075B                     l11423:	
  8049  075B  2F67               	goto	l11429
  8050                           	
  8051  075C                     l6844:	
  8052                           	line	1300
  8053                           	
  8054  075C                     l11425:	
  8055  075C  3001               	movlw	(01h)
  8056  075D  00B9               	movwf	(??_sprintf+0)+0
  8057  075E  0839               	movf	(??_sprintf+0)+0,w
  8058  075F  07C4               	addwf	(sprintf@c),f
  8059                           	
  8060  0760                     l11427:	
  8061  0760  0844               	movf	(sprintf@c),w
  8062  0761  3A05               	xorlw	05h
  8063  0762  1D03               	skipz
  8064  0763  2F65               	goto	u5221
  8065  0764  2F66               	goto	u5220
  8066  0765                     u5221:
  8067  0765  2F3F               	goto	l11421
  8068  0766                     u5220:
  8069  0766  2F67               	goto	l11429
  8070                           	
  8071  0767                     l6843:	
  8072                           	line	1433
  8073                           	
  8074  0767                     l11429:	
  8075  0767  083D               	movf	(sprintf@flag),w
  8076  0768  3903               	andlw	03h
  8077  0769  1903               	btfsc	status,2
  8078  076A  2F6C               	goto	u5231
  8079  076B  2F6D               	goto	u5230
  8080  076C                     u5231:
  8081  076C  2F79               	goto	l11435
  8082  076D                     u5230:
  8083                           	line	1434
  8084                           	
  8085  076D                     l11431:	
  8086  076D  302D               	movlw	(02Dh)
  8087  076E  00B9               	movwf	(??_sprintf+0)+0
  8088  076F  0843               	movf	(sprintf@sp),w
  8089  0770  0084               	movwf	fsr0
  8090  0771  0839               	movf	(??_sprintf+0)+0,w
  8091  0772  1383               	bcf	status, 7	;select IRP bank0
  8092  0773  0080               	movwf	indf
  8093                           	
  8094  0774                     l11433:	
  8095  0774  3001               	movlw	(01h)
  8096  0775  00B9               	movwf	(??_sprintf+0)+0
  8097  0776  0839               	movf	(??_sprintf+0)+0,w
  8098  0777  07C3               	addwf	(sprintf@sp),f
  8099  0778  2F79               	goto	l11435
  8100                           	
  8101  0779                     l6845:	
  8102                           	line	1467
  8103                           	
  8104  0779                     l11435:	
  8105  0779  0844               	movf	(sprintf@c),w
  8106  077A  00B9               	movwf	(??_sprintf+0)+0
  8107  077B  0839               	movf	(??_sprintf+0)+0,w
  8108  077C  00BE               	movwf	(sprintf@prec)
  8109                           	line	1469
  8110  077D  2FBE               	goto	l11443
  8111                           	
  8112  077E                     l6847:	
  8113                           	line	1484
  8114                           	
  8115  077E                     l11437:	
  8116  077E  300A               	movlw	low(0Ah)
  8117  077F  00AE               	movwf	(?___lwmod)
  8118  0780  3000               	movlw	high(0Ah)
  8119  0781  00AF               	movwf	((?___lwmod))+1
  8120  0782  083E               	movf	(sprintf@prec),w
  8121  0783  00B9               	movwf	(??_sprintf+0)+0
  8122  0784  0739               	addwf	(??_sprintf+0)+0,w
  8123  0785  3E01               	addlw	low((_dpowers-__stringbase))
  8124  0786  0084               	movwf	fsr0
  8125  0787  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8126  078C  00A6               	movwf	(?___lwdiv)
  8127  078D  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8128  0792  00A7               	movwf	(?___lwdiv+1)
  8129  0793  0840               	movf	(sprintf@_val+1),w
  8130  0794  01A9               	clrf	1+(?___lwdiv)+02h
  8131  0795  07A9               	addwf	1+(?___lwdiv)+02h
  8132  0796  083F               	movf	(sprintf@_val),w
  8133  0797  01A8               	clrf	0+(?___lwdiv)+02h
  8134  0798  07A8               	addwf	0+(?___lwdiv)+02h
  8135                           
  8136  0799  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8137  079E  1283               	bcf	status, 5	;RP0=0, select bank0
  8138  079F  1303               	bcf	status, 6	;RP1=0, select bank0
  8139  07A0  0827               	movf	(1+(?___lwdiv)),w
  8140  07A1  01B1               	clrf	1+(?___lwmod)+02h
  8141  07A2  07B1               	addwf	1+(?___lwmod)+02h
  8142  07A3  0826               	movf	(0+(?___lwdiv)),w
  8143  07A4  01B0               	clrf	0+(?___lwmod)+02h
  8144  07A5  07B0               	addwf	0+(?___lwmod)+02h
  8145                           
  8146  07A6  160A  118A  234C   	fcall	___lwmod
              120A  118A         
  8147  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
  8148  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
  8149  07AD  082E               	movf	(0+(?___lwmod)),w
  8150  07AE  3E30               	addlw	030h
  8151  07AF  00BA               	movwf	(??_sprintf+1)+0
  8152  07B0  083A               	movf	(??_sprintf+1)+0,w
  8153  07B1  00C4               	movwf	(sprintf@c)
  8154                           	line	1516
  8155                           	
  8156  07B2                     l11439:	
  8157  07B2  0844               	movf	(sprintf@c),w
  8158  07B3  00B9               	movwf	(??_sprintf+0)+0
  8159  07B4  0843               	movf	(sprintf@sp),w
  8160  07B5  0084               	movwf	fsr0
  8161  07B6  0839               	movf	(??_sprintf+0)+0,w
  8162  07B7  1383               	bcf	status, 7	;select IRP bank0
  8163  07B8  0080               	movwf	indf
  8164                           	
  8165  07B9                     l11441:	
  8166  07B9  3001               	movlw	(01h)
  8167  07BA  00B9               	movwf	(??_sprintf+0)+0
  8168  07BB  0839               	movf	(??_sprintf+0)+0,w
  8169  07BC  07C3               	addwf	(sprintf@sp),f
  8170  07BD  2FBE               	goto	l11443
  8171                           	line	1517
  8172                           	
  8173  07BE                     l6846:	
  8174                           	line	1469
  8175                           	
  8176  07BE                     l11443:	
  8177  07BE  30FF               	movlw	(-1)
  8178  07BF  00B9               	movwf	(??_sprintf+0)+0
  8179  07C0  0839               	movf	(??_sprintf+0)+0,w
  8180  07C1  07BE               	addwf	(sprintf@prec),f
  8181  07C2  083E               	movf	((sprintf@prec)),w
  8182  07C3  3AFF               	xorlw	-1
  8183  07C4  1D03               	skipz
  8184  07C5  2FC7               	goto	u5241
  8185  07C6  2FC8               	goto	u5240
  8186  07C7                     u5241:
  8187  07C7  2F7E               	goto	l11437
  8188  07C8                     u5240:
  8189  07C8  2FCA               	goto	l11445
  8190                           	
  8191  07C9                     l6848:	
  8192  07C9  2FCA               	goto	l11445
  8193                           	line	1525
  8194                           	
  8195  07CA                     l6831:	
  8196                           	line	540
  8197                           	
  8198  07CA                     l11445:	
  8199  07CA  3001               	movlw	01h
  8200  07CB  07B4               	addwf	(sprintf@f),f
  8201  07CC  30FF               	movlw	-01h
  8202  07CD  0734               	addwf	(sprintf@f),w
  8203  07CE  0084               	movwf	fsr0
  8204  07CF  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8205  07D4  00B9               	movwf	(??_sprintf+0)+0
  8206  07D5  0839               	movf	(??_sprintf+0)+0,w
  8207  07D6  00C4               	movwf	(sprintf@c)
  8208  07D7  08C4               	movf	((sprintf@c)),f
  8209  07D8  1D03               	skipz
  8210  07D9  2FDB               	goto	u5251
  8211  07DA  2FDC               	goto	u5250
  8212  07DB                     u5251:
  8213  07DB  2EEC               	goto	l11395
  8214  07DC                     u5250:
  8215  07DC  2FDE               	goto	l11447
  8216                           	
  8217  07DD                     l6849:	
  8218  07DD  2FDE               	goto	l11447
  8219                           	line	1527
  8220                           	
  8221  07DE                     l6836:	
  8222                           	line	1530
  8223                           	
  8224  07DE                     l11447:	
  8225  07DE  0843               	movf	(sprintf@sp),w
  8226  07DF  0084               	movwf	fsr0
  8227  07E0  1383               	bcf	status, 7	;select IRP bank0
  8228  07E1  0180               	clrf	indf
  8229  07E2  2FE3               	goto	l6850
  8230                           	line	1532
  8231                           	
  8232  07E3                     l11449:	
  8233                           	line	1533
  8234                           ;	Return value of _sprintf is never used
  8235                           	
  8236  07E3                     l6850:	
  8237  07E3  0008               	return
  8238                           	opt stack 0
  8239                           GLOBAL	__end_of_sprintf
  8240  07E4                     	__end_of_sprintf:
  8241 ;; =============== function _sprintf ends ============
  8242                           
  8243                           	signat	_sprintf,4698
  8244                           	global	_ADCconvert
  8245                           psect	text1140,local,class=CODE,delta=2
  8246                           global __ptext1140
  8247  02B5                     __ptext1140:
  8248                           
  8249 ;; *************** function _ADCconvert *****************
  8250 ;; Defined at:
  8251 ;;		line 60 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;		None               void
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8265 ;;      Params:         0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0
  8267 ;;      Temps:          0       2       0       0       0
  8268 ;;      Totals:         0       2       0       0       0
  8269 ;;Total ram usage:        2 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    4
  8272 ;; This function calls:
  8273 ;;		___wmul
  8274 ;;		___lwdiv
  8275 ;; This function is called by:
  8276 ;;		_readAvgDistance
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           psect	text1140
  8280                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8281                           	line	60
  8282                           	global	__size_of_ADCconvert
  8283  0263                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  8284                           	
  8285  02B5                     _ADCconvert:	
  8286                           	opt	stack 1
  8287                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  8288                           	line	66
  8289                           	
  8290  02B5                     l11351:	
  8291                           ;infrared.c: 66: if (adcVal >= 213 && adcVal < 234)
  8292  02B5  3000               	movlw	high(0D5h)
  8293  02B6  1683               	bsf	status, 5	;RP0=1, select bank1
  8294  02B7  1303               	bcf	status, 6	;RP1=0, select bank1
  8295  02B8  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8296  02B9  30D5               	movlw	low(0D5h)
  8297  02BA  1903               	skipnz
  8298  02BB  022A               	subwf	(_adcVal)^080h,w	;volatile
  8299  02BC  1C03               	skipc
  8300  02BD  2ABF               	goto	u5041
  8301  02BE  2AC0               	goto	u5040
  8302  02BF                     u5041:
  8303  02BF  2B0D               	goto	l11357
  8304  02C0                     u5040:
  8305                           	
  8306  02C0                     l11353:	
  8307  02C0  3000               	movlw	high(0EAh)
  8308  02C1  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8309  02C2  30EA               	movlw	low(0EAh)
  8310  02C3  1903               	skipnz
  8311  02C4  022A               	subwf	(_adcVal)^080h,w	;volatile
  8312  02C5  1803               	skipnc
  8313  02C6  2AC8               	goto	u5051
  8314  02C7  2AC9               	goto	u5050
  8315  02C8                     u5051:
  8316  02C8  2B0D               	goto	l11357
  8317  02C9                     u5050:
  8318                           	line	68
  8319                           	
  8320  02C9                     l11355:	
  8321                           ;infrared.c: 67: {
  8322                           ;infrared.c: 68: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  8323  02C9  3015               	movlw	low(015h)
  8324  02CA  1283               	bcf	status, 5	;RP0=0, select bank0
  8325  02CB  1303               	bcf	status, 6	;RP1=0, select bank0
  8326  02CC  00A6               	movwf	(?___lwdiv)
  8327  02CD  3000               	movlw	high(015h)
  8328  02CE  00A7               	movwf	((?___lwdiv))+1
  8329  02CF  1683               	bsf	status, 5	;RP0=1, select bank1
  8330  02D0  1303               	bcf	status, 6	;RP1=0, select bank1
  8331  02D1  092A               	comf	(_adcVal)^080h,w	;volatile
  8332  02D2  1283               	bcf	status, 5	;RP0=0, select bank0
  8333  02D3  1303               	bcf	status, 6	;RP1=0, select bank0
  8334  02D4  00AE               	movwf	(??_ADCconvert+0)+0
  8335  02D5  1683               	bsf	status, 5	;RP0=1, select bank1
  8336  02D6  1303               	bcf	status, 6	;RP1=0, select bank1
  8337  02D7  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8338  02D8  1283               	bcf	status, 5	;RP0=0, select bank0
  8339  02D9  1303               	bcf	status, 6	;RP1=0, select bank0
  8340  02DA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8341  02DB  0AAE               	incf	(??_ADCconvert+0)+0,f
  8342  02DC  1903               	skipnz
  8343  02DD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8344  02DE  082E               	movf	0+(??_ADCconvert+0)+0,w
  8345  02DF  3EEA               	addlw	low(0EAh)
  8346  02E0  00A0               	movwf	(?___wmul)
  8347  02E1  082F               	movf	1+(??_ADCconvert+0)+0,w
  8348  02E2  1803               	skipnc
  8349  02E3  3E01               	addlw	1
  8350  02E4  3E00               	addlw	high(0EAh)
  8351  02E5  00A1               	movwf	1+(?___wmul)
  8352  02E6  3005               	movlw	low(05h)
  8353  02E7  00A2               	movwf	0+(?___wmul)+02h
  8354  02E8  3000               	movlw	high(05h)
  8355  02E9  00A3               	movwf	(0+(?___wmul)+02h)+1
  8356  02EA  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8357  02EF  1283               	bcf	status, 5	;RP0=0, select bank0
  8358  02F0  1303               	bcf	status, 6	;RP1=0, select bank0
  8359  02F1  0821               	movf	(1+(?___wmul)),w
  8360  02F2  01A9               	clrf	1+(?___lwdiv)+02h
  8361  02F3  07A9               	addwf	1+(?___lwdiv)+02h
  8362  02F4  0820               	movf	(0+(?___wmul)),w
  8363  02F5  01A8               	clrf	0+(?___lwdiv)+02h
  8364  02F6  07A8               	addwf	0+(?___lwdiv)+02h
  8365                           
  8366  02F7  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8367  02FC  1283               	bcf	status, 5	;RP0=0, select bank0
  8368  02FD  1303               	bcf	status, 6	;RP1=0, select bank0
  8369  02FE  0826               	movf	(0+(?___lwdiv)),w
  8370  02FF  3E0F               	addlw	low(0Fh)
  8371  0300  1683               	bsf	status, 5	;RP0=1, select bank1
  8372  0301  1303               	bcf	status, 6	;RP1=0, select bank1
  8373  0302  00A4               	movwf	(_IRdistance)^080h	;volatile
  8374  0303  1283               	bcf	status, 5	;RP0=0, select bank0
  8375  0304  1303               	bcf	status, 6	;RP1=0, select bank0
  8376  0305  0827               	movf	(1+(?___lwdiv)),w
  8377  0306  1803               	skipnc
  8378  0307  3E01               	addlw	1
  8379  0308  3E00               	addlw	high(0Fh)
  8380  0309  1683               	bsf	status, 5	;RP0=1, select bank1
  8381  030A  1303               	bcf	status, 6	;RP1=0, select bank1
  8382  030B  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8383                           	line	69
  8384                           ;infrared.c: 69: }
  8385  030C  2D17               	goto	l3026
  8386                           	line	70
  8387                           	
  8388  030D                     l3013:	
  8389                           	
  8390  030D                     l11357:	
  8391                           ;infrared.c: 70: else if (adcVal >= 170 && adcVal < 213)
  8392  030D  3000               	movlw	high(0AAh)
  8393  030E  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8394  030F  30AA               	movlw	low(0AAh)
  8395  0310  1903               	skipnz
  8396  0311  022A               	subwf	(_adcVal)^080h,w	;volatile
  8397  0312  1C03               	skipc
  8398  0313  2B15               	goto	u5061
  8399  0314  2B16               	goto	u5060
  8400  0315                     u5061:
  8401  0315  2B63               	goto	l11363
  8402  0316                     u5060:
  8403                           	
  8404  0316                     l11359:	
  8405  0316  3000               	movlw	high(0D5h)
  8406  0317  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8407  0318  30D5               	movlw	low(0D5h)
  8408  0319  1903               	skipnz
  8409  031A  022A               	subwf	(_adcVal)^080h,w	;volatile
  8410  031B  1803               	skipnc
  8411  031C  2B1E               	goto	u5071
  8412  031D  2B1F               	goto	u5070
  8413  031E                     u5071:
  8414  031E  2B63               	goto	l11363
  8415  031F                     u5070:
  8416                           	line	72
  8417                           	
  8418  031F                     l11361:	
  8419                           ;infrared.c: 71: {
  8420                           ;infrared.c: 72: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  8421  031F  302B               	movlw	low(02Bh)
  8422  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  8423  0321  1303               	bcf	status, 6	;RP1=0, select bank0
  8424  0322  00A6               	movwf	(?___lwdiv)
  8425  0323  3000               	movlw	high(02Bh)
  8426  0324  00A7               	movwf	((?___lwdiv))+1
  8427  0325  1683               	bsf	status, 5	;RP0=1, select bank1
  8428  0326  1303               	bcf	status, 6	;RP1=0, select bank1
  8429  0327  092A               	comf	(_adcVal)^080h,w	;volatile
  8430  0328  1283               	bcf	status, 5	;RP0=0, select bank0
  8431  0329  1303               	bcf	status, 6	;RP1=0, select bank0
  8432  032A  00AE               	movwf	(??_ADCconvert+0)+0
  8433  032B  1683               	bsf	status, 5	;RP0=1, select bank1
  8434  032C  1303               	bcf	status, 6	;RP1=0, select bank1
  8435  032D  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8436  032E  1283               	bcf	status, 5	;RP0=0, select bank0
  8437  032F  1303               	bcf	status, 6	;RP1=0, select bank0
  8438  0330  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8439  0331  0AAE               	incf	(??_ADCconvert+0)+0,f
  8440  0332  1903               	skipnz
  8441  0333  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8442  0334  082E               	movf	0+(??_ADCconvert+0)+0,w
  8443  0335  3ED5               	addlw	low(0D5h)
  8444  0336  00A0               	movwf	(?___wmul)
  8445  0337  082F               	movf	1+(??_ADCconvert+0)+0,w
  8446  0338  1803               	skipnc
  8447  0339  3E01               	addlw	1
  8448  033A  3E00               	addlw	high(0D5h)
  8449  033B  00A1               	movwf	1+(?___wmul)
  8450  033C  300A               	movlw	low(0Ah)
  8451  033D  00A2               	movwf	0+(?___wmul)+02h
  8452  033E  3000               	movlw	high(0Ah)
  8453  033F  00A3               	movwf	(0+(?___wmul)+02h)+1
  8454  0340  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8455  0345  1283               	bcf	status, 5	;RP0=0, select bank0
  8456  0346  1303               	bcf	status, 6	;RP1=0, select bank0
  8457  0347  0821               	movf	(1+(?___wmul)),w
  8458  0348  01A9               	clrf	1+(?___lwdiv)+02h
  8459  0349  07A9               	addwf	1+(?___lwdiv)+02h
  8460  034A  0820               	movf	(0+(?___wmul)),w
  8461  034B  01A8               	clrf	0+(?___lwdiv)+02h
  8462  034C  07A8               	addwf	0+(?___lwdiv)+02h
  8463                           
  8464  034D  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8465  0352  1283               	bcf	status, 5	;RP0=0, select bank0
  8466  0353  1303               	bcf	status, 6	;RP1=0, select bank0
  8467  0354  0826               	movf	(0+(?___lwdiv)),w
  8468  0355  3E14               	addlw	low(014h)
  8469  0356  1683               	bsf	status, 5	;RP0=1, select bank1
  8470  0357  1303               	bcf	status, 6	;RP1=0, select bank1
  8471  0358  00A4               	movwf	(_IRdistance)^080h	;volatile
  8472  0359  1283               	bcf	status, 5	;RP0=0, select bank0
  8473  035A  1303               	bcf	status, 6	;RP1=0, select bank0
  8474  035B  0827               	movf	(1+(?___lwdiv)),w
  8475  035C  1803               	skipnc
  8476  035D  3E01               	addlw	1
  8477  035E  3E00               	addlw	high(014h)
  8478  035F  1683               	bsf	status, 5	;RP0=1, select bank1
  8479  0360  1303               	bcf	status, 6	;RP1=0, select bank1
  8480  0361  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8481                           	line	73
  8482                           ;infrared.c: 73: }
  8483  0362  2D17               	goto	l3026
  8484                           	line	74
  8485                           	
  8486  0363                     l3015:	
  8487                           	
  8488  0363                     l11363:	
  8489                           ;infrared.c: 74: else if (adcVal >= 128 && adcVal < 170)
  8490  0363  3000               	movlw	high(080h)
  8491  0364  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8492  0365  3080               	movlw	low(080h)
  8493  0366  1903               	skipnz
  8494  0367  022A               	subwf	(_adcVal)^080h,w	;volatile
  8495  0368  1C03               	skipc
  8496  0369  2B6B               	goto	u5081
  8497  036A  2B6C               	goto	u5080
  8498  036B                     u5081:
  8499  036B  2BB9               	goto	l11369
  8500  036C                     u5080:
  8501                           	
  8502  036C                     l11365:	
  8503  036C  3000               	movlw	high(0AAh)
  8504  036D  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8505  036E  30AA               	movlw	low(0AAh)
  8506  036F  1903               	skipnz
  8507  0370  022A               	subwf	(_adcVal)^080h,w	;volatile
  8508  0371  1803               	skipnc
  8509  0372  2B74               	goto	u5091
  8510  0373  2B75               	goto	u5090
  8511  0374                     u5091:
  8512  0374  2BB9               	goto	l11369
  8513  0375                     u5090:
  8514                           	line	76
  8515                           	
  8516  0375                     l11367:	
  8517                           ;infrared.c: 75: {
  8518                           ;infrared.c: 76: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  8519  0375  302A               	movlw	low(02Ah)
  8520  0376  1283               	bcf	status, 5	;RP0=0, select bank0
  8521  0377  1303               	bcf	status, 6	;RP1=0, select bank0
  8522  0378  00A6               	movwf	(?___lwdiv)
  8523  0379  3000               	movlw	high(02Ah)
  8524  037A  00A7               	movwf	((?___lwdiv))+1
  8525  037B  1683               	bsf	status, 5	;RP0=1, select bank1
  8526  037C  1303               	bcf	status, 6	;RP1=0, select bank1
  8527  037D  092A               	comf	(_adcVal)^080h,w	;volatile
  8528  037E  1283               	bcf	status, 5	;RP0=0, select bank0
  8529  037F  1303               	bcf	status, 6	;RP1=0, select bank0
  8530  0380  00AE               	movwf	(??_ADCconvert+0)+0
  8531  0381  1683               	bsf	status, 5	;RP0=1, select bank1
  8532  0382  1303               	bcf	status, 6	;RP1=0, select bank1
  8533  0383  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8534  0384  1283               	bcf	status, 5	;RP0=0, select bank0
  8535  0385  1303               	bcf	status, 6	;RP1=0, select bank0
  8536  0386  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8537  0387  0AAE               	incf	(??_ADCconvert+0)+0,f
  8538  0388  1903               	skipnz
  8539  0389  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8540  038A  082E               	movf	0+(??_ADCconvert+0)+0,w
  8541  038B  3EAA               	addlw	low(0AAh)
  8542  038C  00A0               	movwf	(?___wmul)
  8543  038D  082F               	movf	1+(??_ADCconvert+0)+0,w
  8544  038E  1803               	skipnc
  8545  038F  3E01               	addlw	1
  8546  0390  3E00               	addlw	high(0AAh)
  8547  0391  00A1               	movwf	1+(?___wmul)
  8548  0392  300A               	movlw	low(0Ah)
  8549  0393  00A2               	movwf	0+(?___wmul)+02h
  8550  0394  3000               	movlw	high(0Ah)
  8551  0395  00A3               	movwf	(0+(?___wmul)+02h)+1
  8552  0396  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8553  039B  1283               	bcf	status, 5	;RP0=0, select bank0
  8554  039C  1303               	bcf	status, 6	;RP1=0, select bank0
  8555  039D  0821               	movf	(1+(?___wmul)),w
  8556  039E  01A9               	clrf	1+(?___lwdiv)+02h
  8557  039F  07A9               	addwf	1+(?___lwdiv)+02h
  8558  03A0  0820               	movf	(0+(?___wmul)),w
  8559  03A1  01A8               	clrf	0+(?___lwdiv)+02h
  8560  03A2  07A8               	addwf	0+(?___lwdiv)+02h
  8561                           
  8562  03A3  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8563  03A8  1283               	bcf	status, 5	;RP0=0, select bank0
  8564  03A9  1303               	bcf	status, 6	;RP1=0, select bank0
  8565  03AA  0826               	movf	(0+(?___lwdiv)),w
  8566  03AB  3E1E               	addlw	low(01Eh)
  8567  03AC  1683               	bsf	status, 5	;RP0=1, select bank1
  8568  03AD  1303               	bcf	status, 6	;RP1=0, select bank1
  8569  03AE  00A4               	movwf	(_IRdistance)^080h	;volatile
  8570  03AF  1283               	bcf	status, 5	;RP0=0, select bank0
  8571  03B0  1303               	bcf	status, 6	;RP1=0, select bank0
  8572  03B1  0827               	movf	(1+(?___lwdiv)),w
  8573  03B2  1803               	skipnc
  8574  03B3  3E01               	addlw	1
  8575  03B4  3E00               	addlw	high(01Eh)
  8576  03B5  1683               	bsf	status, 5	;RP0=1, select bank1
  8577  03B6  1303               	bcf	status, 6	;RP1=0, select bank1
  8578  03B7  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8579                           	line	77
  8580                           ;infrared.c: 77: }
  8581  03B8  2D17               	goto	l3026
  8582                           	line	78
  8583                           	
  8584  03B9                     l3017:	
  8585                           	
  8586  03B9                     l11369:	
  8587                           ;infrared.c: 78: else if (adcVal >= 107 && adcVal < 128)
  8588  03B9  3000               	movlw	high(06Bh)
  8589  03BA  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8590  03BB  306B               	movlw	low(06Bh)
  8591  03BC  1903               	skipnz
  8592  03BD  022A               	subwf	(_adcVal)^080h,w	;volatile
  8593  03BE  1C03               	skipc
  8594  03BF  2BC1               	goto	u5101
  8595  03C0  2BC2               	goto	u5100
  8596  03C1                     u5101:
  8597  03C1  2C0F               	goto	l11375
  8598  03C2                     u5100:
  8599                           	
  8600  03C2                     l11371:	
  8601  03C2  3000               	movlw	high(080h)
  8602  03C3  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8603  03C4  3080               	movlw	low(080h)
  8604  03C5  1903               	skipnz
  8605  03C6  022A               	subwf	(_adcVal)^080h,w	;volatile
  8606  03C7  1803               	skipnc
  8607  03C8  2BCA               	goto	u5111
  8608  03C9  2BCB               	goto	u5110
  8609  03CA                     u5111:
  8610  03CA  2C0F               	goto	l11375
  8611  03CB                     u5110:
  8612                           	line	80
  8613                           	
  8614  03CB                     l11373:	
  8615                           ;infrared.c: 79: {
  8616                           ;infrared.c: 80: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  8617  03CB  3015               	movlw	low(015h)
  8618  03CC  1283               	bcf	status, 5	;RP0=0, select bank0
  8619  03CD  1303               	bcf	status, 6	;RP1=0, select bank0
  8620  03CE  00A6               	movwf	(?___lwdiv)
  8621  03CF  3000               	movlw	high(015h)
  8622  03D0  00A7               	movwf	((?___lwdiv))+1
  8623  03D1  1683               	bsf	status, 5	;RP0=1, select bank1
  8624  03D2  1303               	bcf	status, 6	;RP1=0, select bank1
  8625  03D3  092A               	comf	(_adcVal)^080h,w	;volatile
  8626  03D4  1283               	bcf	status, 5	;RP0=0, select bank0
  8627  03D5  1303               	bcf	status, 6	;RP1=0, select bank0
  8628  03D6  00AE               	movwf	(??_ADCconvert+0)+0
  8629  03D7  1683               	bsf	status, 5	;RP0=1, select bank1
  8630  03D8  1303               	bcf	status, 6	;RP1=0, select bank1
  8631  03D9  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8632  03DA  1283               	bcf	status, 5	;RP0=0, select bank0
  8633  03DB  1303               	bcf	status, 6	;RP1=0, select bank0
  8634  03DC  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8635  03DD  0AAE               	incf	(??_ADCconvert+0)+0,f
  8636  03DE  1903               	skipnz
  8637  03DF  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8638  03E0  082E               	movf	0+(??_ADCconvert+0)+0,w
  8639  03E1  3E80               	addlw	low(080h)
  8640  03E2  00A0               	movwf	(?___wmul)
  8641  03E3  082F               	movf	1+(??_ADCconvert+0)+0,w
  8642  03E4  1803               	skipnc
  8643  03E5  3E01               	addlw	1
  8644  03E6  3E00               	addlw	high(080h)
  8645  03E7  00A1               	movwf	1+(?___wmul)
  8646  03E8  300A               	movlw	low(0Ah)
  8647  03E9  00A2               	movwf	0+(?___wmul)+02h
  8648  03EA  3000               	movlw	high(0Ah)
  8649  03EB  00A3               	movwf	(0+(?___wmul)+02h)+1
  8650  03EC  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8651  03F1  1283               	bcf	status, 5	;RP0=0, select bank0
  8652  03F2  1303               	bcf	status, 6	;RP1=0, select bank0
  8653  03F3  0821               	movf	(1+(?___wmul)),w
  8654  03F4  01A9               	clrf	1+(?___lwdiv)+02h
  8655  03F5  07A9               	addwf	1+(?___lwdiv)+02h
  8656  03F6  0820               	movf	(0+(?___wmul)),w
  8657  03F7  01A8               	clrf	0+(?___lwdiv)+02h
  8658  03F8  07A8               	addwf	0+(?___lwdiv)+02h
  8659                           
  8660  03F9  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8661  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  8662  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  8663  0400  0826               	movf	(0+(?___lwdiv)),w
  8664  0401  3E28               	addlw	low(028h)
  8665  0402  1683               	bsf	status, 5	;RP0=1, select bank1
  8666  0403  1303               	bcf	status, 6	;RP1=0, select bank1
  8667  0404  00A4               	movwf	(_IRdistance)^080h	;volatile
  8668  0405  1283               	bcf	status, 5	;RP0=0, select bank0
  8669  0406  1303               	bcf	status, 6	;RP1=0, select bank0
  8670  0407  0827               	movf	(1+(?___lwdiv)),w
  8671  0408  1803               	skipnc
  8672  0409  3E01               	addlw	1
  8673  040A  3E00               	addlw	high(028h)
  8674  040B  1683               	bsf	status, 5	;RP0=1, select bank1
  8675  040C  1303               	bcf	status, 6	;RP1=0, select bank1
  8676  040D  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8677                           	line	81
  8678                           ;infrared.c: 81: }
  8679  040E  2D17               	goto	l3026
  8680                           	line	82
  8681                           	
  8682  040F                     l3019:	
  8683                           	
  8684  040F                     l11375:	
  8685                           ;infrared.c: 82: else if (adcVal >= 77 && adcVal < 107)
  8686  040F  3000               	movlw	high(04Dh)
  8687  0410  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8688  0411  304D               	movlw	low(04Dh)
  8689  0412  1903               	skipnz
  8690  0413  022A               	subwf	(_adcVal)^080h,w	;volatile
  8691  0414  1C03               	skipc
  8692  0415  2C17               	goto	u5121
  8693  0416  2C18               	goto	u5120
  8694  0417                     u5121:
  8695  0417  2C65               	goto	l11381
  8696  0418                     u5120:
  8697                           	
  8698  0418                     l11377:	
  8699  0418  3000               	movlw	high(06Bh)
  8700  0419  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8701  041A  306B               	movlw	low(06Bh)
  8702  041B  1903               	skipnz
  8703  041C  022A               	subwf	(_adcVal)^080h,w	;volatile
  8704  041D  1803               	skipnc
  8705  041E  2C20               	goto	u5131
  8706  041F  2C21               	goto	u5130
  8707  0420                     u5131:
  8708  0420  2C65               	goto	l11381
  8709  0421                     u5130:
  8710                           	line	84
  8711                           	
  8712  0421                     l11379:	
  8713                           ;infrared.c: 83: {
  8714                           ;infrared.c: 84: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  8715  0421  301E               	movlw	low(01Eh)
  8716  0422  1283               	bcf	status, 5	;RP0=0, select bank0
  8717  0423  1303               	bcf	status, 6	;RP1=0, select bank0
  8718  0424  00A6               	movwf	(?___lwdiv)
  8719  0425  3000               	movlw	high(01Eh)
  8720  0426  00A7               	movwf	((?___lwdiv))+1
  8721  0427  1683               	bsf	status, 5	;RP0=1, select bank1
  8722  0428  1303               	bcf	status, 6	;RP1=0, select bank1
  8723  0429  092A               	comf	(_adcVal)^080h,w	;volatile
  8724  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  8725  042B  1303               	bcf	status, 6	;RP1=0, select bank0
  8726  042C  00AE               	movwf	(??_ADCconvert+0)+0
  8727  042D  1683               	bsf	status, 5	;RP0=1, select bank1
  8728  042E  1303               	bcf	status, 6	;RP1=0, select bank1
  8729  042F  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8730  0430  1283               	bcf	status, 5	;RP0=0, select bank0
  8731  0431  1303               	bcf	status, 6	;RP1=0, select bank0
  8732  0432  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8733  0433  0AAE               	incf	(??_ADCconvert+0)+0,f
  8734  0434  1903               	skipnz
  8735  0435  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8736  0436  082E               	movf	0+(??_ADCconvert+0)+0,w
  8737  0437  3E6B               	addlw	low(06Bh)
  8738  0438  00A0               	movwf	(?___wmul)
  8739  0439  082F               	movf	1+(??_ADCconvert+0)+0,w
  8740  043A  1803               	skipnc
  8741  043B  3E01               	addlw	1
  8742  043C  3E00               	addlw	high(06Bh)
  8743  043D  00A1               	movwf	1+(?___wmul)
  8744  043E  300A               	movlw	low(0Ah)
  8745  043F  00A2               	movwf	0+(?___wmul)+02h
  8746  0440  3000               	movlw	high(0Ah)
  8747  0441  00A3               	movwf	(0+(?___wmul)+02h)+1
  8748  0442  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8749  0447  1283               	bcf	status, 5	;RP0=0, select bank0
  8750  0448  1303               	bcf	status, 6	;RP1=0, select bank0
  8751  0449  0821               	movf	(1+(?___wmul)),w
  8752  044A  01A9               	clrf	1+(?___lwdiv)+02h
  8753  044B  07A9               	addwf	1+(?___lwdiv)+02h
  8754  044C  0820               	movf	(0+(?___wmul)),w
  8755  044D  01A8               	clrf	0+(?___lwdiv)+02h
  8756  044E  07A8               	addwf	0+(?___lwdiv)+02h
  8757                           
  8758  044F  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8759  0454  1283               	bcf	status, 5	;RP0=0, select bank0
  8760  0455  1303               	bcf	status, 6	;RP1=0, select bank0
  8761  0456  0826               	movf	(0+(?___lwdiv)),w
  8762  0457  3E32               	addlw	low(032h)
  8763  0458  1683               	bsf	status, 5	;RP0=1, select bank1
  8764  0459  1303               	bcf	status, 6	;RP1=0, select bank1
  8765  045A  00A4               	movwf	(_IRdistance)^080h	;volatile
  8766  045B  1283               	bcf	status, 5	;RP0=0, select bank0
  8767  045C  1303               	bcf	status, 6	;RP1=0, select bank0
  8768  045D  0827               	movf	(1+(?___lwdiv)),w
  8769  045E  1803               	skipnc
  8770  045F  3E01               	addlw	1
  8771  0460  3E00               	addlw	high(032h)
  8772  0461  1683               	bsf	status, 5	;RP0=1, select bank1
  8773  0462  1303               	bcf	status, 6	;RP1=0, select bank1
  8774  0463  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8775                           	line	85
  8776                           ;infrared.c: 85: }
  8777  0464  2D17               	goto	l3026
  8778                           	line	86
  8779                           	
  8780  0465                     l3021:	
  8781                           	
  8782  0465                     l11381:	
  8783                           ;infrared.c: 86: else if (adcVal >= 56 && adcVal < 77)
  8784  0465  3000               	movlw	high(038h)
  8785  0466  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8786  0467  3038               	movlw	low(038h)
  8787  0468  1903               	skipnz
  8788  0469  022A               	subwf	(_adcVal)^080h,w	;volatile
  8789  046A  1C03               	skipc
  8790  046B  2C6D               	goto	u5141
  8791  046C  2C6E               	goto	u5140
  8792  046D                     u5141:
  8793  046D  2CBB               	goto	l11387
  8794  046E                     u5140:
  8795                           	
  8796  046E                     l11383:	
  8797  046E  3000               	movlw	high(04Dh)
  8798  046F  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8799  0470  304D               	movlw	low(04Dh)
  8800  0471  1903               	skipnz
  8801  0472  022A               	subwf	(_adcVal)^080h,w	;volatile
  8802  0473  1803               	skipnc
  8803  0474  2C76               	goto	u5151
  8804  0475  2C77               	goto	u5150
  8805  0476                     u5151:
  8806  0476  2CBB               	goto	l11387
  8807  0477                     u5150:
  8808                           	line	88
  8809                           	
  8810  0477                     l11385:	
  8811                           ;infrared.c: 87: {
  8812                           ;infrared.c: 88: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  8813  0477  3015               	movlw	low(015h)
  8814  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  8815  0479  1303               	bcf	status, 6	;RP1=0, select bank0
  8816  047A  00A6               	movwf	(?___lwdiv)
  8817  047B  3000               	movlw	high(015h)
  8818  047C  00A7               	movwf	((?___lwdiv))+1
  8819  047D  1683               	bsf	status, 5	;RP0=1, select bank1
  8820  047E  1303               	bcf	status, 6	;RP1=0, select bank1
  8821  047F  092A               	comf	(_adcVal)^080h,w	;volatile
  8822  0480  1283               	bcf	status, 5	;RP0=0, select bank0
  8823  0481  1303               	bcf	status, 6	;RP1=0, select bank0
  8824  0482  00AE               	movwf	(??_ADCconvert+0)+0
  8825  0483  1683               	bsf	status, 5	;RP0=1, select bank1
  8826  0484  1303               	bcf	status, 6	;RP1=0, select bank1
  8827  0485  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8828  0486  1283               	bcf	status, 5	;RP0=0, select bank0
  8829  0487  1303               	bcf	status, 6	;RP1=0, select bank0
  8830  0488  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8831  0489  0AAE               	incf	(??_ADCconvert+0)+0,f
  8832  048A  1903               	skipnz
  8833  048B  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8834  048C  082E               	movf	0+(??_ADCconvert+0)+0,w
  8835  048D  3E4D               	addlw	low(04Dh)
  8836  048E  00A0               	movwf	(?___wmul)
  8837  048F  082F               	movf	1+(??_ADCconvert+0)+0,w
  8838  0490  1803               	skipnc
  8839  0491  3E01               	addlw	1
  8840  0492  3E00               	addlw	high(04Dh)
  8841  0493  00A1               	movwf	1+(?___wmul)
  8842  0494  300A               	movlw	low(0Ah)
  8843  0495  00A2               	movwf	0+(?___wmul)+02h
  8844  0496  3000               	movlw	high(0Ah)
  8845  0497  00A3               	movwf	(0+(?___wmul)+02h)+1
  8846  0498  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8847  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  8848  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  8849  049F  0821               	movf	(1+(?___wmul)),w
  8850  04A0  01A9               	clrf	1+(?___lwdiv)+02h
  8851  04A1  07A9               	addwf	1+(?___lwdiv)+02h
  8852  04A2  0820               	movf	(0+(?___wmul)),w
  8853  04A3  01A8               	clrf	0+(?___lwdiv)+02h
  8854  04A4  07A8               	addwf	0+(?___lwdiv)+02h
  8855                           
  8856  04A5  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8857  04AA  1283               	bcf	status, 5	;RP0=0, select bank0
  8858  04AB  1303               	bcf	status, 6	;RP1=0, select bank0
  8859  04AC  0826               	movf	(0+(?___lwdiv)),w
  8860  04AD  3E3C               	addlw	low(03Ch)
  8861  04AE  1683               	bsf	status, 5	;RP0=1, select bank1
  8862  04AF  1303               	bcf	status, 6	;RP1=0, select bank1
  8863  04B0  00A4               	movwf	(_IRdistance)^080h	;volatile
  8864  04B1  1283               	bcf	status, 5	;RP0=0, select bank0
  8865  04B2  1303               	bcf	status, 6	;RP1=0, select bank0
  8866  04B3  0827               	movf	(1+(?___lwdiv)),w
  8867  04B4  1803               	skipnc
  8868  04B5  3E01               	addlw	1
  8869  04B6  3E00               	addlw	high(03Ch)
  8870  04B7  1683               	bsf	status, 5	;RP0=1, select bank1
  8871  04B8  1303               	bcf	status, 6	;RP1=0, select bank1
  8872  04B9  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8873                           	line	89
  8874                           ;infrared.c: 89: }
  8875  04BA  2D17               	goto	l3026
  8876                           	line	90
  8877                           	
  8878  04BB                     l3023:	
  8879                           	
  8880  04BB                     l11387:	
  8881                           ;infrared.c: 90: else if (adcVal >= 43 && adcVal < 56)
  8882  04BB  3000               	movlw	high(02Bh)
  8883  04BC  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8884  04BD  302B               	movlw	low(02Bh)
  8885  04BE  1903               	skipnz
  8886  04BF  022A               	subwf	(_adcVal)^080h,w	;volatile
  8887  04C0  1C03               	skipc
  8888  04C1  2CC3               	goto	u5161
  8889  04C2  2CC4               	goto	u5160
  8890  04C3                     u5161:
  8891  04C3  2D17               	goto	l3026
  8892  04C4                     u5160:
  8893                           	
  8894  04C4                     l11389:	
  8895  04C4  3000               	movlw	high(038h)
  8896  04C5  022B               	subwf	(_adcVal+1)^080h,w	;volatile
  8897  04C6  3038               	movlw	low(038h)
  8898  04C7  1903               	skipnz
  8899  04C8  022A               	subwf	(_adcVal)^080h,w	;volatile
  8900  04C9  1803               	skipnc
  8901  04CA  2CCC               	goto	u5171
  8902  04CB  2CCD               	goto	u5170
  8903  04CC                     u5171:
  8904  04CC  2D17               	goto	l3026
  8905  04CD                     u5170:
  8906                           	line	92
  8907                           	
  8908  04CD                     l11391:	
  8909                           ;infrared.c: 91: {
  8910                           ;infrared.c: 92: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  8911  04CD  300D               	movlw	low(0Dh)
  8912  04CE  1283               	bcf	status, 5	;RP0=0, select bank0
  8913  04CF  1303               	bcf	status, 6	;RP1=0, select bank0
  8914  04D0  00A6               	movwf	(?___lwdiv)
  8915  04D1  3000               	movlw	high(0Dh)
  8916  04D2  00A7               	movwf	((?___lwdiv))+1
  8917  04D3  1683               	bsf	status, 5	;RP0=1, select bank1
  8918  04D4  1303               	bcf	status, 6	;RP1=0, select bank1
  8919  04D5  092A               	comf	(_adcVal)^080h,w	;volatile
  8920  04D6  1283               	bcf	status, 5	;RP0=0, select bank0
  8921  04D7  1303               	bcf	status, 6	;RP1=0, select bank0
  8922  04D8  00AE               	movwf	(??_ADCconvert+0)+0
  8923  04D9  1683               	bsf	status, 5	;RP0=1, select bank1
  8924  04DA  1303               	bcf	status, 6	;RP1=0, select bank1
  8925  04DB  092B               	comf	(_adcVal+1)^080h,w	;volatile
  8926  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
  8927  04DD  1303               	bcf	status, 6	;RP1=0, select bank0
  8928  04DE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8929  04DF  0AAE               	incf	(??_ADCconvert+0)+0,f
  8930  04E0  1903               	skipnz
  8931  04E1  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8932  04E2  082E               	movf	0+(??_ADCconvert+0)+0,w
  8933  04E3  3E38               	addlw	low(038h)
  8934  04E4  00A0               	movwf	(?___wmul)
  8935  04E5  082F               	movf	1+(??_ADCconvert+0)+0,w
  8936  04E6  1803               	skipnc
  8937  04E7  3E01               	addlw	1
  8938  04E8  3E00               	addlw	high(038h)
  8939  04E9  00A1               	movwf	1+(?___wmul)
  8940  04EA  300A               	movlw	low(0Ah)
  8941  04EB  00A2               	movwf	0+(?___wmul)+02h
  8942  04EC  3000               	movlw	high(0Ah)
  8943  04ED  00A3               	movwf	(0+(?___wmul)+02h)+1
  8944  04EE  160A  118A  2123   	fcall	___wmul
              120A  118A         
  8945  04F3  1283               	bcf	status, 5	;RP0=0, select bank0
  8946  04F4  1303               	bcf	status, 6	;RP1=0, select bank0
  8947  04F5  0821               	movf	(1+(?___wmul)),w
  8948  04F6  01A9               	clrf	1+(?___lwdiv)+02h
  8949  04F7  07A9               	addwf	1+(?___lwdiv)+02h
  8950  04F8  0820               	movf	(0+(?___wmul)),w
  8951  04F9  01A8               	clrf	0+(?___lwdiv)+02h
  8952  04FA  07A8               	addwf	0+(?___lwdiv)+02h
  8953                           
  8954  04FB  160A  118A  241F   	fcall	___lwdiv
              120A  118A         
  8955  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  8956  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  8957  0502  0826               	movf	(0+(?___lwdiv)),w
  8958  0503  3E46               	addlw	low(046h)
  8959  0504  1683               	bsf	status, 5	;RP0=1, select bank1
  8960  0505  1303               	bcf	status, 6	;RP1=0, select bank1
  8961  0506  00A4               	movwf	(_IRdistance)^080h	;volatile
  8962  0507  1283               	bcf	status, 5	;RP0=0, select bank0
  8963  0508  1303               	bcf	status, 6	;RP1=0, select bank0
  8964  0509  0827               	movf	(1+(?___lwdiv)),w
  8965  050A  1803               	skipnc
  8966  050B  3E01               	addlw	1
  8967  050C  3E00               	addlw	high(046h)
  8968  050D  1683               	bsf	status, 5	;RP0=1, select bank1
  8969  050E  1303               	bcf	status, 6	;RP1=0, select bank1
  8970  050F  00A5               	movwf	1+(_IRdistance)^080h	;volatile
  8971  0510  2D17               	goto	l3026
  8972                           	line	93
  8973                           	
  8974  0511                     l3025:	
  8975  0511  2D17               	goto	l3026
  8976                           	line	94
  8977                           	
  8978  0512                     l3024:	
  8979  0512  2D17               	goto	l3026
  8980                           	
  8981  0513                     l3022:	
  8982  0513  2D17               	goto	l3026
  8983                           	
  8984  0514                     l3020:	
  8985  0514  2D17               	goto	l3026
  8986                           	
  8987  0515                     l3018:	
  8988  0515  2D17               	goto	l3026
  8989                           	
  8990  0516                     l3016:	
  8991  0516  2D17               	goto	l3026
  8992                           	
  8993  0517                     l3014:	
  8994                           	
  8995  0517                     l3026:	
  8996  0517  0008               	return
  8997                           	opt stack 0
  8998                           GLOBAL	__end_of_ADCconvert
  8999  0518                     	__end_of_ADCconvert:
  9000 ;; =============== function _ADCconvert ends ============
  9001                           
  9002                           	signat	_ADCconvert,88
  9003                           	global	_robotTurn
  9004                           psect	text1141,local,class=CODE,delta=2
  9005                           global __ptext1141
  9006  08AD                     __ptext1141:
  9007                           
  9008 ;; *************** function _robotTurn *****************
  9009 ;; Defined at:
  9010 ;;		line 112 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  angle           2    2[BANK0 ] int 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;		None               void
  9017 ;; Registers used:
  9018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9024 ;;      Params:         0       2       0       0       0
  9025 ;;      Locals:         0       0       0       0       0
  9026 ;;      Temps:          0       0       0       0       0
  9027 ;;      Totals:         0       2       0       0       0
  9028 ;;Total ram usage:        2 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:    4
  9031 ;; This function calls:
  9032 ;;		_ser_putch
  9033 ;; This function is called by:
  9034 ;;		_main
  9035 ;;		_robotTurnSpeed
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           psect	text1141
  9039                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9040                           	line	112
  9041                           	global	__size_of_robotTurn
  9042  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  9043                           	
  9044  08AD                     _robotTurn:	
  9045                           	opt	stack 3
  9046                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9047                           	line	114
  9048                           	
  9049  08AD                     l11343:	
  9050                           ;robot.c: 114: if (angle > 0)
  9051  08AD  1283               	bcf	status, 5	;RP0=0, select bank0
  9052  08AE  1303               	bcf	status, 6	;RP1=0, select bank0
  9053  08AF  0823               	movf	(robotTurn@angle+1),w
  9054  08B0  3A80               	xorlw	80h
  9055  08B1  00FF               	movwf	btemp+1
  9056  08B2  3080               	movlw	(high(01h))^80h
  9057  08B3  027F               	subwf	btemp+1,w
  9058  08B4  1D03               	skipz
  9059  08B5  28B8               	goto	u5025
  9060  08B6  3001               	movlw	low(01h)
  9061  08B7  0222               	subwf	(robotTurn@angle),w
  9062  08B8                     u5025:
  9063                           
  9064  08B8  1C03               	skipc
  9065  08B9  28BB               	goto	u5021
  9066  08BA  28BC               	goto	u5020
  9067  08BB                     u5021:
  9068  08BB  28DB               	goto	l6048
  9069  08BC                     u5020:
  9070                           	line	116
  9071                           	
  9072  08BC                     l11345:	
  9073                           ;robot.c: 115: {
  9074                           ;robot.c: 116: ser_putch(137);
  9075  08BC  3089               	movlw	(089h)
  9076  08BD  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9077                           	line	118
  9078                           ;robot.c: 118: ser_putch(0);
  9079  08C2  3000               	movlw	(0)
  9080  08C3  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9081                           	line	120
  9082                           ;robot.c: 120: ser_putch(50);
  9083  08C8  3032               	movlw	(032h)
  9084  08C9  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9085                           	line	122
  9086                           ;robot.c: 122: ser_putch(0);
  9087  08CE  3000               	movlw	(0)
  9088  08CF  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9089                           	line	124
  9090                           ;robot.c: 124: ser_putch(1);
  9091  08D4  3001               	movlw	(01h)
  9092  08D5  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9093                           	line	125
  9094                           ;robot.c: 125: }
  9095  08DA  2920               	goto	l6052
  9096                           	line	126
  9097                           	
  9098  08DB                     l6048:	
  9099                           ;robot.c: 126: else if (angle < 0)
  9100  08DB  1283               	bcf	status, 5	;RP0=0, select bank0
  9101  08DC  1303               	bcf	status, 6	;RP1=0, select bank0
  9102  08DD  1FA3               	btfss	(robotTurn@angle+1),7
  9103  08DE  28E0               	goto	u5031
  9104  08DF  28E1               	goto	u5030
  9105  08E0                     u5031:
  9106  08E0  2900               	goto	l11349
  9107  08E1                     u5030:
  9108                           	line	128
  9109                           	
  9110  08E1                     l11347:	
  9111                           ;robot.c: 127: {
  9112                           ;robot.c: 128: ser_putch(137);
  9113  08E1  3089               	movlw	(089h)
  9114  08E2  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9115                           	line	130
  9116                           ;robot.c: 130: ser_putch(0);
  9117  08E7  3000               	movlw	(0)
  9118  08E8  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9119                           	line	132
  9120                           ;robot.c: 132: ser_putch(50);
  9121  08ED  3032               	movlw	(032h)
  9122  08EE  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9123                           	line	134
  9124                           ;robot.c: 134: ser_putch(255);
  9125  08F3  30FF               	movlw	(0FFh)
  9126  08F4  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9127                           	line	136
  9128                           ;robot.c: 136: ser_putch(255);
  9129  08F9  30FF               	movlw	(0FFh)
  9130  08FA  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9131                           	line	137
  9132                           ;robot.c: 137: }
  9133  08FF  2920               	goto	l6052
  9134                           	line	138
  9135                           	
  9136  0900                     l6050:	
  9137                           	line	140
  9138                           	
  9139  0900                     l11349:	
  9140                           ;robot.c: 138: else
  9141                           ;robot.c: 139: {
  9142                           ;robot.c: 140: ser_putch(137);
  9143  0900  3089               	movlw	(089h)
  9144  0901  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9145                           	line	142
  9146                           ;robot.c: 142: ser_putch(0);
  9147  0906  3000               	movlw	(0)
  9148  0907  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9149                           	line	144
  9150                           ;robot.c: 144: ser_putch(0);
  9151  090C  3000               	movlw	(0)
  9152  090D  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9153                           	line	146
  9154                           ;robot.c: 146: ser_putch(0);
  9155  0912  3000               	movlw	(0)
  9156  0913  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9157                           	line	148
  9158                           ;robot.c: 148: ser_putch(0);
  9159  0918  3000               	movlw	(0)
  9160  0919  160A  118A  21D3   	fcall	_ser_putch
              120A  158A         
  9161  091E  2920               	goto	l6052
  9162                           	line	149
  9163                           	
  9164  091F                     l6051:	
  9165  091F  2920               	goto	l6052
  9166                           	
  9167  0920                     l6049:	
  9168                           	line	150
  9169                           	
  9170  0920                     l6052:	
  9171  0920  0008               	return
  9172                           	opt stack 0
  9173                           GLOBAL	__end_of_robotTurn
  9174  0921                     	__end_of_robotTurn:
  9175 ;; =============== function _robotTurn ends ============
  9176                           
  9177                           	signat	_robotTurn,4216
  9178                           	global	_rotate
  9179                           psect	text1142,local,class=CODE,delta=2
  9180                           global __ptext1142
  9181  146F                     __ptext1142:
  9182                           
  9183 ;; *************** function _rotate *****************
  9184 ;; Defined at:
  9185 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  numsteps        2    3[BANK0 ] unsigned int 
  9188 ;;  direction       1    5[BANK0 ] unsigned char 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  i               2    8[BANK0 ] unsigned int 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;		None               void
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0, pclath, cstack
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9200 ;;      Params:         0       3       0       0       0
  9201 ;;      Locals:         0       2       0       0       0
  9202 ;;      Temps:          0       2       0       0       0
  9203 ;;      Totals:         0       7       0       0       0
  9204 ;;Total ram usage:        7 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    4
  9207 ;; This function calls:
  9208 ;;		_spi_transfer
  9209 ;; This function is called by:
  9210 ;;		_main
  9211 ;;		_calibrateIR
  9212 ;;		_scan360
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           psect	text1142
  9216                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9217                           	line	66
  9218                           	global	__size_of_rotate
  9219  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  9220                           	
  9221  146F                     _rotate:	
  9222                           	opt	stack 3
  9223                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  9224                           	line	68
  9225                           	
  9226  146F                     l11315:	
  9227                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  9228  146F  1283               	bcf	status, 5	;RP0=0, select bank0
  9229  1470  1303               	bcf	status, 6	;RP1=0, select bank0
  9230  1471  1407               	bsf	(56/8),(56)&7
  9231  1472  1487               	bsf	(57/8),(57)&7
  9232                           	line	69
  9233                           	
  9234  1473                     l11317:	
  9235                           ;steppermotor.c: 69: if (direction == 0)
  9236  1473  08A5               	movf	(rotate@direction),f
  9237  1474  1D03               	skipz
  9238  1475  2C77               	goto	u5001
  9239  1476  2C78               	goto	u5000
  9240  1477                     u5001:
  9241  1477  2C7F               	goto	l11321
  9242  1478                     u5000:
  9243                           	line	70
  9244                           	
  9245  1478                     l11319:	
  9246                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  9247  1478  300B               	movlw	(0Bh)
  9248  1479  160A  118A  2011   	fcall	_spi_transfer
              160A  118A         
  9249  147E  2C86               	goto	l11323
  9250                           	line	71
  9251                           	
  9252  147F                     l3727:	
  9253                           	line	72
  9254                           	
  9255  147F                     l11321:	
  9256                           ;steppermotor.c: 71: else
  9257                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  9258  147F  3009               	movlw	(09h)
  9259  1480  160A  118A  2011   	fcall	_spi_transfer
              160A  118A         
  9260  1485  2C86               	goto	l11323
  9261                           	
  9262  1486                     l3728:	
  9263                           	line	73
  9264                           	
  9265  1486                     l11323:	
  9266                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  9267  1486  1283               	bcf	status, 5	;RP0=0, select bank0
  9268  1487  1303               	bcf	status, 6	;RP1=0, select bank0
  9269  1488  1007               	bcf	(56/8),(56)&7
  9270                           	
  9271  1489                     l11325:	
  9272  1489  1087               	bcf	(57/8),(57)&7
  9273                           	line	74
  9274                           	
  9275  148A                     l11327:	
  9276                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  9277  148A  01A8               	clrf	(rotate@i)
  9278  148B  01A9               	clrf	(rotate@i+1)
  9279  148C  2CA3               	goto	l3729
  9280                           	line	75
  9281                           	
  9282  148D                     l3730:	
  9283                           	line	76
  9284                           ;steppermotor.c: 75: {
  9285                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  9286  148D  1507               	bsf	(58/8),(58)&7
  9287  148E  0000               	nop
  9288  148F  1283               	bcf	status, 5	;RP0=0, select bank0
  9289  1490  1303               	bcf	status, 6	;RP1=0, select bank0
  9290  1491  1107               	bcf	(58/8),(58)&7
  9291                           	line	77
  9292                           	
  9293  1492                     l11329:	
  9294                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  9295                           	opt asmopt_off
  9296  1492  3062               movlw	98
  9297  1493  00A7               movwf	((??_rotate+0)+0+1),f
  9298  1494  3065               	movlw	101
  9299  1495  00A6               movwf	((??_rotate+0)+0),f
  9300  1496                     u6007:
  9301  1496  0BA6               	decfsz	((??_rotate+0)+0),f
  9302  1497  2C96               	goto	u6007
  9303  1498  0BA7               	decfsz	((??_rotate+0)+0+1),f
  9304  1499  2C96               	goto	u6007
  9305  149A  2C9B               	nop2
  9306                           opt asmopt_on
  9307                           
  9308                           	line	74
  9309  149B  3001               	movlw	low(01h)
  9310  149C  1283               	bcf	status, 5	;RP0=0, select bank0
  9311  149D  1303               	bcf	status, 6	;RP1=0, select bank0
  9312  149E  07A8               	addwf	(rotate@i),f
  9313  149F  1803               	skipnc
  9314  14A0  0AA9               	incf	(rotate@i+1),f
  9315  14A1  3000               	movlw	high(01h)
  9316  14A2  07A9               	addwf	(rotate@i+1),f
  9317                           	
  9318  14A3                     l3729:	
  9319  14A3  0824               	movf	(rotate@numsteps+1),w
  9320  14A4  0229               	subwf	(rotate@i+1),w
  9321  14A5  1D03               	skipz
  9322  14A6  2CA9               	goto	u5015
  9323  14A7  0823               	movf	(rotate@numsteps),w
  9324  14A8  0228               	subwf	(rotate@i),w
  9325  14A9                     u5015:
  9326  14A9  1C03               	skipc
  9327  14AA  2CAC               	goto	u5011
  9328  14AB  2CAD               	goto	u5010
  9329  14AC                     u5011:
  9330  14AC  2C8D               	goto	l3730
  9331  14AD                     u5010:
  9332                           	
  9333  14AD                     l3731:	
  9334                           	line	79
  9335                           ;steppermotor.c: 78: }
  9336                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  9337  14AD  1407               	bsf	(56/8),(56)&7
  9338  14AE  1487               	bsf	(57/8),(57)&7
  9339                           	line	80
  9340                           	
  9341  14AF                     l11331:	
  9342                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  9343  14AF  3000               	movlw	(0)
  9344  14B0  160A  118A  2011   	fcall	_spi_transfer
              160A  118A         
  9345                           	line	81
  9346                           	
  9347  14B5                     l11333:	
  9348                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  9349  14B5  1283               	bcf	status, 5	;RP0=0, select bank0
  9350  14B6  1303               	bcf	status, 6	;RP1=0, select bank0
  9351  14B7  1007               	bcf	(56/8),(56)&7
  9352                           	
  9353  14B8                     l11335:	
  9354  14B8  1087               	bcf	(57/8),(57)&7
  9355                           	line	82
  9356                           	
  9357  14B9                     l11337:	
  9358                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  9359  14B9  1507               	bsf	(58/8),(58)&7
  9360                           	
  9361  14BA                     l11339:	
  9362  14BA  0000               	nop
  9363                           	
  9364  14BB                     l11341:	
  9365  14BB  1283               	bcf	status, 5	;RP0=0, select bank0
  9366  14BC  1303               	bcf	status, 6	;RP1=0, select bank0
  9367  14BD  1107               	bcf	(58/8),(58)&7
  9368                           	line	83
  9369                           	
  9370  14BE                     l3732:	
  9371  14BE  0008               	return
  9372                           	opt stack 0
  9373                           GLOBAL	__end_of_rotate
  9374  14BF                     	__end_of_rotate:
  9375 ;; =============== function _rotate ends ============
  9376                           
  9377                           	signat	_rotate,8312
  9378                           	global	_robo_init
  9379                           psect	text1143,local,class=CODE,delta=2
  9380                           global __ptext1143
  9381  07E4                     __ptext1143:
  9382                           
  9383 ;; *************** function _robo_init *****************
  9384 ;; Defined at:
  9385 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;		None
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;		None               void
  9392 ;; Registers used:
  9393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9399 ;;      Params:         0       0       0       0       0
  9400 ;;      Locals:         0       0       0       0       0
  9401 ;;      Temps:          0       0       0       0       0
  9402 ;;      Totals:         0       0       0       0       0
  9403 ;;Total ram usage:        0 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; Hardware stack levels required when called:    4
  9406 ;; This function calls:
  9407 ;;		_ser_putch
  9408 ;; This function is called by:
  9409 ;;		_init
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           psect	text1143
  9413                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9414                           	line	36
  9415                           	global	__size_of_robo_init
  9416  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  9417                           	
  9418  07E4                     _robo_init:	
  9419                           	opt	stack 2
  9420                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9421                           	line	37
  9422                           	
  9423  07E4                     l11313:	
  9424                           ;robot.c: 37: ser_putch(128);
  9425  07E4  3080               	movlw	(080h)
  9426  07E5  160A  118A  21D3   	fcall	_ser_putch
              120A  118A         
  9427                           	line	38
  9428                           ;robot.c: 38: ser_putch(132);
  9429  07EA  3084               	movlw	(084h)
  9430  07EB  160A  118A  21D3   	fcall	_ser_putch
              120A  118A         
  9431                           	line	39
  9432                           ;robot.c: 39: ser_putch(150);
  9433  07F0  3096               	movlw	(096h)
  9434  07F1  160A  118A  21D3   	fcall	_ser_putch
              120A  118A         
  9435                           	line	40
  9436                           ;robot.c: 40: ser_putch(0);
  9437  07F6  3000               	movlw	(0)
  9438  07F7  160A  118A  21D3   	fcall	_ser_putch
              120A  118A         
  9439                           	line	41
  9440                           	
  9441  07FC                     l6034:	
  9442  07FC  0008               	return
  9443                           	opt stack 0
  9444                           GLOBAL	__end_of_robo_init
  9445  07FD                     	__end_of_robo_init:
  9446 ;; =============== function _robo_init ends ============
  9447                           
  9448                           	signat	_robo_init,88
  9449                           	global	_lcd_write_data
  9450                           psect	text1144,local,class=CODE,delta=2
  9451                           global __ptext1144
  9452  1FDA                     __ptext1144:
  9453                           
  9454 ;; *************** function _lcd_write_data *****************
  9455 ;; Defined at:
  9456 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  databyte        1    wreg     unsigned char 
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;  databyte        1    2[BANK0 ] unsigned char 
  9461 ;; Return value:  Size  Location     Type
  9462 ;;		None               void
  9463 ;; Registers used:
  9464 ;;		wreg
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9470 ;;      Params:         0       0       0       0       0
  9471 ;;      Locals:         0       1       0       0       0
  9472 ;;      Temps:          0       2       0       0       0
  9473 ;;      Totals:         0       3       0       0       0
  9474 ;;Total ram usage:        3 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; Hardware stack levels required when called:    3
  9477 ;; This function calls:
  9478 ;;		Nothing
  9479 ;; This function is called by:
  9480 ;;		_lcd_write_string
  9481 ;;		_lcd_write_2_digit_bcd
  9482 ;;		_lcd_write_3_digit_bcd
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           psect	text1144
  9486                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9487                           	line	30
  9488                           	global	__size_of_lcd_write_data
  9489  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  9490                           	
  9491  1FDA                     _lcd_write_data:	
  9492                           	opt	stack 1
  9493                           ; Regs used in _lcd_write_data: [wreg]
  9494                           ;lcd_write_data@databyte stored from wreg
  9495  1FDA  1283               	bcf	status, 5	;RP0=0, select bank0
  9496  1FDB  1303               	bcf	status, 6	;RP1=0, select bank0
  9497  1FDC  00A2               	movwf	(lcd_write_data@databyte)
  9498                           	line	31
  9499                           	
  9500  1FDD                     l11305:	
  9501                           ;lcd.c: 31: RE2 = 0;
  9502  1FDD  1109               	bcf	(74/8),(74)&7
  9503                           	line	32
  9504                           ;lcd.c: 32: RE1 = 0;
  9505  1FDE  1089               	bcf	(73/8),(73)&7
  9506                           	line	33
  9507                           ;lcd.c: 33: RE0 = 1;
  9508  1FDF  1409               	bsf	(72/8),(72)&7
  9509                           	line	34
  9510                           	
  9511  1FE0                     l11307:	
  9512                           ;lcd.c: 34: PORTD = databyte;
  9513  1FE0  0822               	movf	(lcd_write_data@databyte),w
  9514  1FE1  0088               	movwf	(8)	;volatile
  9515                           	line	35
  9516                           	
  9517  1FE2                     l11309:	
  9518                           ;lcd.c: 35: RE2 = 1;
  9519  1FE2  1509               	bsf	(74/8),(74)&7
  9520                           	line	36
  9521                           	
  9522  1FE3                     l11311:	
  9523                           ;lcd.c: 36: RE2 = 0;
  9524  1FE3  1109               	bcf	(74/8),(74)&7
  9525                           	line	37
  9526                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  9527                           	opt asmopt_off
  9528  1FE4  3007               movlw	7
  9529  1FE5  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  9530  1FE6  307D               	movlw	125
  9531  1FE7  00A0               movwf	((??_lcd_write_data+0)+0),f
  9532  1FE8                     u6017:
  9533  1FE8  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  9534  1FE9  2FE8               	goto	u6017
  9535  1FEA  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  9536  1FEB  2FE8               	goto	u6017
  9537                           opt asmopt_on
  9538                           
  9539                           	line	38
  9540                           	
  9541  1FEC                     l1402:	
  9542  1FEC  0008               	return
  9543                           	opt stack 0
  9544                           GLOBAL	__end_of_lcd_write_data
  9545  1FED                     	__end_of_lcd_write_data:
  9546 ;; =============== function _lcd_write_data ends ============
  9547                           
  9548                           	signat	_lcd_write_data,4216
  9549                           	global	_lcd_write_control
  9550                           psect	text1145,local,class=CODE,delta=2
  9551                           global __ptext1145
  9552  1025                     __ptext1145:
  9553                           
  9554 ;; *************** function _lcd_write_control *****************
  9555 ;; Defined at:
  9556 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  databyte        1    wreg     unsigned char 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  databyte        1    2[BANK0 ] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;		None               void
  9563 ;; Registers used:
  9564 ;;		wreg
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9570 ;;      Params:         0       0       0       0       0
  9571 ;;      Locals:         0       1       0       0       0
  9572 ;;      Temps:          0       2       0       0       0
  9573 ;;      Totals:         0       3       0       0       0
  9574 ;;Total ram usage:        3 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    3
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		_lcd_set_cursor
  9581 ;;		_lcd_init
  9582 ;;		_UpdateDisplay
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           psect	text1145
  9586                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9587                           	line	18
  9588                           	global	__size_of_lcd_write_control
  9589  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  9590                           	
  9591  1025                     _lcd_write_control:	
  9592                           	opt	stack 1
  9593                           ; Regs used in _lcd_write_control: [wreg]
  9594                           ;lcd_write_control@databyte stored from wreg
  9595  1025  1283               	bcf	status, 5	;RP0=0, select bank0
  9596  1026  1303               	bcf	status, 6	;RP1=0, select bank0
  9597  1027  00A2               	movwf	(lcd_write_control@databyte)
  9598                           	line	19
  9599                           	
  9600  1028                     l11297:	
  9601                           ;lcd.c: 19: RE2 = 0;
  9602  1028  1109               	bcf	(74/8),(74)&7
  9603                           	line	20
  9604                           ;lcd.c: 20: RE1 = 0;
  9605  1029  1089               	bcf	(73/8),(73)&7
  9606                           	line	21
  9607                           ;lcd.c: 21: RE0 = 0;
  9608  102A  1009               	bcf	(72/8),(72)&7
  9609                           	line	22
  9610                           	
  9611  102B                     l11299:	
  9612                           ;lcd.c: 22: PORTD = databyte;
  9613  102B  0822               	movf	(lcd_write_control@databyte),w
  9614  102C  0088               	movwf	(8)	;volatile
  9615                           	line	23
  9616                           	
  9617  102D                     l11301:	
  9618                           ;lcd.c: 23: RE2 = 1;
  9619  102D  1509               	bsf	(74/8),(74)&7
  9620                           	line	24
  9621                           	
  9622  102E                     l11303:	
  9623                           ;lcd.c: 24: RE2 = 0;
  9624  102E  1109               	bcf	(74/8),(74)&7
  9625                           	line	25
  9626                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  9627                           	opt asmopt_off
  9628  102F  300D               movlw	13
  9629  1030  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  9630  1031  30FB               	movlw	251
  9631  1032  00A0               movwf	((??_lcd_write_control+0)+0),f
  9632  1033                     u6027:
  9633  1033  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  9634  1034  2833               	goto	u6027
  9635  1035  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  9636  1036  2833               	goto	u6027
  9637  1037  2838               	nop2
  9638                           opt asmopt_on
  9639                           
  9640                           	line	26
  9641                           	
  9642  1038                     l1399:	
  9643  1038  0008               	return
  9644                           	opt stack 0
  9645                           GLOBAL	__end_of_lcd_write_control
  9646  1039                     	__end_of_lcd_write_control:
  9647 ;; =============== function _lcd_write_control ends ============
  9648                           
  9649                           	signat	_lcd_write_control,4216
  9650                           	global	_init_adc
  9651                           psect	text1146,local,class=CODE,delta=2
  9652                           global __ptext1146
  9653  1039                     __ptext1146:
  9654                           
  9655 ;; *************** function _init_adc *****************
  9656 ;; Defined at:
  9657 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;		None
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;		None               void
  9664 ;; Registers used:
  9665 ;;		wreg, status,2
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         0       0       0       0       0
  9672 ;;      Locals:         0       0       0       0       0
  9673 ;;      Temps:          0       1       0       0       0
  9674 ;;      Totals:         0       1       0       0       0
  9675 ;;Total ram usage:        1 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    3
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_init
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           psect	text1146
  9685                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9686                           	line	61
  9687                           	global	__size_of_init_adc
  9688  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  9689                           	
  9690  1039                     _init_adc:	
  9691                           	opt	stack 3
  9692                           ; Regs used in _init_adc: [wreg+status,2]
  9693                           	line	63
  9694                           	
  9695  1039                     l11287:	
  9696                           ;adc.c: 63: PORTA = 0;
  9697  1039  1283               	bcf	status, 5	;RP0=0, select bank0
  9698  103A  1303               	bcf	status, 6	;RP1=0, select bank0
  9699  103B  0185               	clrf	(5)	;volatile
  9700                           	line	64
  9701                           	
  9702  103C                     l11289:	
  9703                           ;adc.c: 64: TRISA = 0b00111111;
  9704  103C  303F               	movlw	(03Fh)
  9705  103D  1683               	bsf	status, 5	;RP0=1, select bank1
  9706  103E  1303               	bcf	status, 6	;RP1=0, select bank1
  9707  103F  0085               	movwf	(133)^080h	;volatile
  9708                           	line	67
  9709                           	
  9710  1040                     l11291:	
  9711                           ;adc.c: 67: ADCON0 = 0b10100001;
  9712  1040  30A1               	movlw	(0A1h)
  9713  1041  1283               	bcf	status, 5	;RP0=0, select bank0
  9714  1042  1303               	bcf	status, 6	;RP1=0, select bank0
  9715  1043  009F               	movwf	(31)	;volatile
  9716                           	line	68
  9717                           	
  9718  1044                     l11293:	
  9719                           ;adc.c: 68: ADCON1 = 0b0000010;
  9720  1044  3002               	movlw	(02h)
  9721  1045  1683               	bsf	status, 5	;RP0=1, select bank1
  9722  1046  1303               	bcf	status, 6	;RP1=0, select bank1
  9723  1047  009F               	movwf	(159)^080h	;volatile
  9724                           	line	70
  9725                           	
  9726  1048                     l11295:	
  9727                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9728                           	opt asmopt_off
  9729  1048  3053               movlw	83
  9730  1049  1283               	bcf	status, 5	;RP0=0, select bank0
  9731  104A  1303               	bcf	status, 6	;RP1=0, select bank0
  9732  104B  00A0               movwf	(??_init_adc+0)+0,f
  9733  104C                     u6037:
  9734  104C  0BA0               decfsz	(??_init_adc+0)+0,f
  9735  104D  284C               	goto	u6037
  9736                           opt asmopt_on
  9737                           
  9738                           	line	72
  9739                           	
  9740  104E                     l700:	
  9741  104E  0008               	return
  9742                           	opt stack 0
  9743                           GLOBAL	__end_of_init_adc
  9744  104F                     	__end_of_init_adc:
  9745 ;; =============== function _init_adc ends ============
  9746                           
  9747                           	signat	_init_adc,88
  9748                           	global	_adc_read_channel
  9749                           psect	text1147,local,class=CODE,delta=2
  9750                           global __ptext1147
  9751  12CD                     __ptext1147:
  9752                           
  9753 ;; *************** function _adc_read_channel *****************
  9754 ;; Defined at:
  9755 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  channel         1    wreg     unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  channel         1    7[BANK0 ] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      unsigned char 
  9762 ;; Registers used:
  9763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9769 ;;      Params:         0       0       0       0       0
  9770 ;;      Locals:         0       1       0       0       0
  9771 ;;      Temps:          0       1       0       0       0
  9772 ;;      Totals:         0       2       0       0       0
  9773 ;;Total ram usage:        2 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    4
  9776 ;; This function calls:
  9777 ;;		_adc_read
  9778 ;; This function is called by:
  9779 ;;		_readDistance
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           psect	text1147
  9783                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9784                           	line	20
  9785                           	global	__size_of_adc_read_channel
  9786  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  9787                           	
  9788  12CD                     _adc_read_channel:	
  9789                           	opt	stack 0
  9790                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9791                           ;adc_read_channel@channel stored from wreg
  9792  12CD  1283               	bcf	status, 5	;RP0=0, select bank0
  9793  12CE  1303               	bcf	status, 6	;RP1=0, select bank0
  9794  12CF  00A7               	movwf	(adc_read_channel@channel)
  9795                           	line	21
  9796                           	
  9797  12D0                     l11271:	
  9798                           ;adc.c: 21: switch(channel)
  9799  12D0  2AE9               	goto	l11279
  9800                           	line	23
  9801                           ;adc.c: 22: {
  9802                           ;adc.c: 23: case 0:
  9803                           	
  9804  12D1                     l690:	
  9805                           	line	24
  9806                           ;adc.c: 24: CHS0 = 0;
  9807  12D1  119F               	bcf	(251/8),(251)&7
  9808                           	line	25
  9809                           ;adc.c: 25: CHS1 = 0;
  9810  12D2  121F               	bcf	(252/8),(252)&7
  9811                           	line	26
  9812                           ;adc.c: 26: CHS2 = 0;
  9813  12D3  129F               	bcf	(253/8),(253)&7
  9814                           	line	27
  9815                           ;adc.c: 27: break;
  9816  12D4  2AFA               	goto	l11281
  9817                           	line	28
  9818                           ;adc.c: 28: case 1:
  9819                           	
  9820  12D5                     l692:	
  9821                           	line	29
  9822                           ;adc.c: 29: CHS0 = 1;
  9823  12D5  159F               	bsf	(251/8),(251)&7
  9824                           	line	30
  9825                           ;adc.c: 30: CHS1 = 0;
  9826  12D6  121F               	bcf	(252/8),(252)&7
  9827                           	line	31
  9828                           ;adc.c: 31: CHS2 = 0;
  9829  12D7  129F               	bcf	(253/8),(253)&7
  9830                           	line	32
  9831                           ;adc.c: 32: break;
  9832  12D8  2AFA               	goto	l11281
  9833                           	line	33
  9834                           ;adc.c: 33: case 2:
  9835                           	
  9836  12D9                     l693:	
  9837                           	line	34
  9838                           ;adc.c: 34: CHS0 = 0;
  9839  12D9  119F               	bcf	(251/8),(251)&7
  9840                           	line	35
  9841                           ;adc.c: 35: CHS1 = 1;
  9842  12DA  161F               	bsf	(252/8),(252)&7
  9843                           	line	36
  9844                           ;adc.c: 36: CHS2 = 0;
  9845  12DB  129F               	bcf	(253/8),(253)&7
  9846                           	line	37
  9847                           ;adc.c: 37: break;
  9848  12DC  2AFA               	goto	l11281
  9849                           	line	38
  9850                           ;adc.c: 38: case 3:
  9851                           	
  9852  12DD                     l694:	
  9853                           	line	39
  9854                           ;adc.c: 39: CHS0 = 1;
  9855  12DD  159F               	bsf	(251/8),(251)&7
  9856                           	line	40
  9857                           ;adc.c: 40: CHS1 = 1;
  9858  12DE  161F               	bsf	(252/8),(252)&7
  9859                           	line	41
  9860                           ;adc.c: 41: CHS2 = 0;
  9861  12DF  129F               	bcf	(253/8),(253)&7
  9862                           	line	42
  9863                           ;adc.c: 42: break;
  9864  12E0  2AFA               	goto	l11281
  9865                           	line	43
  9866                           ;adc.c: 43: case 4:
  9867                           	
  9868  12E1                     l695:	
  9869                           	line	44
  9870                           ;adc.c: 44: CHS0 = 0;
  9871  12E1  119F               	bcf	(251/8),(251)&7
  9872                           	line	45
  9873                           ;adc.c: 45: CHS1 = 0;
  9874  12E2  121F               	bcf	(252/8),(252)&7
  9875                           	line	46
  9876                           ;adc.c: 46: CHS2 = 1;
  9877  12E3  169F               	bsf	(253/8),(253)&7
  9878                           	line	47
  9879                           ;adc.c: 47: break;
  9880  12E4  2AFA               	goto	l11281
  9881                           	line	50
  9882                           ;adc.c: 50: default:
  9883                           	
  9884  12E5                     l696:	
  9885                           	line	51
  9886                           	
  9887  12E5                     l11273:	
  9888                           ;adc.c: 51: return 0;
  9889  12E5  3000               	movlw	(0)
  9890  12E6  2B07               	goto	l697
  9891                           	
  9892  12E7                     l11275:	
  9893  12E7  2B07               	goto	l697
  9894                           	line	52
  9895                           	
  9896  12E8                     l11277:	
  9897                           ;adc.c: 52: }
  9898  12E8  2AFA               	goto	l11281
  9899                           	line	21
  9900                           	
  9901  12E9                     l689:	
  9902                           	
  9903  12E9                     l11279:	
  9904  12E9  0827               	movf	(adc_read_channel@channel),w
  9905                           	; Switch size 1, requested type "space"
  9906                           ; Number of cases is 5, Range of values is 0 to 4
  9907                           ; switch strategies available:
  9908                           ; Name         Instructions Cycles
  9909                           ; simple_byte           16     9 (average)
  9910                           ; direct_byte           23     8 (fixed)
  9911                           ; jumptable            260     6 (fixed)
  9912                           ; rangetable             9     6 (fixed)
  9913                           ; spacedrange           16     9 (fixed)
  9914                           ; locatedrange           5     3 (fixed)
  9915                           ;	Chosen strategy is simple_byte
  9916                           
  9917                           	opt asmopt_off
  9918  12EA  3A00               	xorlw	0^0	; case 0
  9919  12EB  1903               	skipnz
  9920  12EC  2AD1               	goto	l690
  9921  12ED  3A01               	xorlw	1^0	; case 1
  9922  12EE  1903               	skipnz
  9923  12EF  2AD5               	goto	l692
  9924  12F0  3A03               	xorlw	2^1	; case 2
  9925  12F1  1903               	skipnz
  9926  12F2  2AD9               	goto	l693
  9927  12F3  3A01               	xorlw	3^2	; case 3
  9928  12F4  1903               	skipnz
  9929  12F5  2ADD               	goto	l694
  9930  12F6  3A07               	xorlw	4^3	; case 4
  9931  12F7  1903               	skipnz
  9932  12F8  2AE1               	goto	l695
  9933  12F9  2AE5               	goto	l11273
  9934                           	opt asmopt_on
  9935                           
  9936                           	line	52
  9937                           	
  9938  12FA                     l691:	
  9939                           	line	54
  9940                           	
  9941  12FA                     l11281:	
  9942                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9943                           	opt asmopt_off
  9944  12FA  3053               movlw	83
  9945  12FB  00A6               movwf	(??_adc_read_channel+0)+0,f
  9946  12FC                     u6047:
  9947  12FC  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  9948  12FD  2AFC               	goto	u6047
  9949                           opt asmopt_on
  9950                           
  9951                           	line	56
  9952                           	
  9953  12FE                     l11283:	
  9954                           ;adc.c: 56: return adc_read();
  9955  12FE  160A  118A  20A5   	fcall	_adc_read
              160A  118A         
  9956  1303  1283               	bcf	status, 5	;RP0=0, select bank0
  9957  1304  1303               	bcf	status, 6	;RP1=0, select bank0
  9958  1305  0820               	movf	(0+(?_adc_read)),w
  9959  1306  2B07               	goto	l697
  9960                           	
  9961  1307                     l11285:	
  9962                           	line	58
  9963                           	
  9964  1307                     l697:	
  9965  1307  0008               	return
  9966                           	opt stack 0
  9967                           GLOBAL	__end_of_adc_read_channel
  9968  1308                     	__end_of_adc_read_channel:
  9969 ;; =============== function _adc_read_channel ends ============
  9970                           
  9971                           	signat	_adc_read_channel,4217
  9972                           	global	___awmod
  9973                           psect	text1148,local,class=CODE,delta=2
  9974                           global __ptext1148
  9975  151D                     __ptext1148:
  9976                           
  9977 ;; *************** function ___awmod *****************
  9978 ;; Defined at:
  9979 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  divisor         2    0[BANK0 ] int 
  9982 ;;  dividend        2    2[BANK0 ] int 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  sign            1    6[BANK0 ] unsigned char 
  9985 ;;  counter         1    5[BANK0 ] unsigned char 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  2    0[BANK0 ] int 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9995 ;;      Params:         0       4       0       0       0
  9996 ;;      Locals:         0       2       0       0       0
  9997 ;;      Temps:          0       1       0       0       0
  9998 ;;      Totals:         0       7       0       0       0
  9999 ;;Total ram usage:        7 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    3
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		_UpdateDisplay
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           psect	text1148
 10009                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10010                           	line	5
 10011                           	global	__size_of___awmod
 10012  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 10013                           	
 10014  151D                     ___awmod:	
 10015                           	opt	stack 2
 10016                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10017                           	line	8
 10018                           	
 10019  151D                     l11169:	
 10020  151D  1283               	bcf	status, 5	;RP0=0, select bank0
 10021  151E  1303               	bcf	status, 6	;RP1=0, select bank0
 10022  151F  01A6               	clrf	(___awmod@sign)
 10023                           	line	9
 10024  1520  1FA3               	btfss	(___awmod@dividend+1),7
 10025  1521  2D23               	goto	u4791
 10026  1522  2D24               	goto	u4790
 10027  1523                     u4791:
 10028  1523  2D2D               	goto	l11173
 10029  1524                     u4790:
 10030                           	line	10
 10031                           	
 10032  1524                     l11171:	
 10033  1524  09A2               	comf	(___awmod@dividend),f
 10034  1525  09A3               	comf	(___awmod@dividend+1),f
 10035  1526  0AA2               	incf	(___awmod@dividend),f
 10036  1527  1903               	skipnz
 10037  1528  0AA3               	incf	(___awmod@dividend+1),f
 10038                           	line	11
 10039  1529  01A6               	clrf	(___awmod@sign)
 10040  152A  1403               	bsf	status,0
 10041  152B  0DA6               	rlf	(___awmod@sign),f
 10042  152C  2D2D               	goto	l11173
 10043                           	line	12
 10044                           	
 10045  152D                     l7741:	
 10046                           	line	13
 10047                           	
 10048  152D                     l11173:	
 10049  152D  1FA1               	btfss	(___awmod@divisor+1),7
 10050  152E  2D30               	goto	u4801
 10051  152F  2D31               	goto	u4800
 10052  1530                     u4801:
 10053  1530  2D37               	goto	l11177
 10054  1531                     u4800:
 10055                           	line	14
 10056                           	
 10057  1531                     l11175:	
 10058  1531  09A0               	comf	(___awmod@divisor),f
 10059  1532  09A1               	comf	(___awmod@divisor+1),f
 10060  1533  0AA0               	incf	(___awmod@divisor),f
 10061  1534  1903               	skipnz
 10062  1535  0AA1               	incf	(___awmod@divisor+1),f
 10063  1536  2D37               	goto	l11177
 10064                           	
 10065  1537                     l7742:	
 10066                           	line	15
 10067                           	
 10068  1537                     l11177:	
 10069  1537  0821               	movf	(___awmod@divisor+1),w
 10070  1538  0420               	iorwf	(___awmod@divisor),w
 10071  1539  1903               	skipnz
 10072  153A  2D3C               	goto	u4811
 10073  153B  2D3D               	goto	u4810
 10074  153C                     u4811:
 10075  153C  2D73               	goto	l11195
 10076  153D                     u4810:
 10077                           	line	16
 10078                           	
 10079  153D                     l11179:	
 10080  153D  01A5               	clrf	(___awmod@counter)
 10081  153E  1403               	bsf	status,0
 10082  153F  0DA5               	rlf	(___awmod@counter),f
 10083                           	line	17
 10084  1540  2D4D               	goto	l11185
 10085                           	
 10086  1541                     l7745:	
 10087                           	line	18
 10088                           	
 10089  1541                     l11181:	
 10090  1541  3001               	movlw	01h
 10091                           	
 10092  1542                     u4825:
 10093  1542  1003               	clrc
 10094  1543  0DA0               	rlf	(___awmod@divisor),f
 10095  1544  0DA1               	rlf	(___awmod@divisor+1),f
 10096  1545  3EFF               	addlw	-1
 10097  1546  1D03               	skipz
 10098  1547  2D42               	goto	u4825
 10099                           	line	19
 10100                           	
 10101  1548                     l11183:	
 10102  1548  3001               	movlw	(01h)
 10103  1549  00A4               	movwf	(??___awmod+0)+0
 10104  154A  0824               	movf	(??___awmod+0)+0,w
 10105  154B  07A5               	addwf	(___awmod@counter),f
 10106  154C  2D4D               	goto	l11185
 10107                           	line	20
 10108                           	
 10109  154D                     l7744:	
 10110                           	line	17
 10111                           	
 10112  154D                     l11185:	
 10113  154D  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 10114  154E  2D50               	goto	u4831
 10115  154F  2D51               	goto	u4830
 10116  1550                     u4831:
 10117  1550  2D41               	goto	l11181
 10118  1551                     u4830:
 10119  1551  2D53               	goto	l11187
 10120                           	
 10121  1552                     l7746:	
 10122  1552  2D53               	goto	l11187
 10123                           	line	21
 10124                           	
 10125  1553                     l7747:	
 10126                           	line	22
 10127                           	
 10128  1553                     l11187:	
 10129  1553  0821               	movf	(___awmod@divisor+1),w
 10130  1554  0223               	subwf	(___awmod@dividend+1),w
 10131  1555  1D03               	skipz
 10132  1556  2D59               	goto	u4845
 10133  1557  0820               	movf	(___awmod@divisor),w
 10134  1558  0222               	subwf	(___awmod@dividend),w
 10135  1559                     u4845:
 10136  1559  1C03               	skipc
 10137  155A  2D5C               	goto	u4841
 10138  155B  2D5D               	goto	u4840
 10139  155C                     u4841:
 10140  155C  2D64               	goto	l11191
 10141  155D                     u4840:
 10142                           	line	23
 10143                           	
 10144  155D                     l11189:	
 10145  155D  0820               	movf	(___awmod@divisor),w
 10146  155E  02A2               	subwf	(___awmod@dividend),f
 10147  155F  0821               	movf	(___awmod@divisor+1),w
 10148  1560  1C03               	skipc
 10149  1561  03A3               	decf	(___awmod@dividend+1),f
 10150  1562  02A3               	subwf	(___awmod@dividend+1),f
 10151  1563  2D64               	goto	l11191
 10152                           	
 10153  1564                     l7748:	
 10154                           	line	24
 10155                           	
 10156  1564                     l11191:	
 10157  1564  3001               	movlw	01h
 10158                           	
 10159  1565                     u4855:
 10160  1565  1003               	clrc
 10161  1566  0CA1               	rrf	(___awmod@divisor+1),f
 10162  1567  0CA0               	rrf	(___awmod@divisor),f
 10163  1568  3EFF               	addlw	-1
 10164  1569  1D03               	skipz
 10165  156A  2D65               	goto	u4855
 10166                           	line	25
 10167                           	
 10168  156B                     l11193:	
 10169  156B  3001               	movlw	low(01h)
 10170  156C  02A5               	subwf	(___awmod@counter),f
 10171  156D  1D03               	btfss	status,2
 10172  156E  2D70               	goto	u4861
 10173  156F  2D71               	goto	u4860
 10174  1570                     u4861:
 10175  1570  2D53               	goto	l11187
 10176  1571                     u4860:
 10177  1571  2D73               	goto	l11195
 10178                           	
 10179  1572                     l7749:	
 10180  1572  2D73               	goto	l11195
 10181                           	line	26
 10182                           	
 10183  1573                     l7743:	
 10184                           	line	27
 10185                           	
 10186  1573                     l11195:	
 10187  1573  0826               	movf	(___awmod@sign),w
 10188  1574  1D03               	skipz
 10189  1575  2D77               	goto	u4870
 10190  1576  2D7D               	goto	l11199
 10191  1577                     u4870:
 10192                           	line	28
 10193                           	
 10194  1577                     l11197:	
 10195  1577  09A2               	comf	(___awmod@dividend),f
 10196  1578  09A3               	comf	(___awmod@dividend+1),f
 10197  1579  0AA2               	incf	(___awmod@dividend),f
 10198  157A  1903               	skipnz
 10199  157B  0AA3               	incf	(___awmod@dividend+1),f
 10200  157C  2D7D               	goto	l11199
 10201                           	
 10202  157D                     l7750:	
 10203                           	line	29
 10204                           	
 10205  157D                     l11199:	
 10206  157D  0823               	movf	(___awmod@dividend+1),w
 10207  157E  01A1               	clrf	(?___awmod+1)
 10208  157F  07A1               	addwf	(?___awmod+1)
 10209  1580  0822               	movf	(___awmod@dividend),w
 10210  1581  01A0               	clrf	(?___awmod)
 10211  1582  07A0               	addwf	(?___awmod)
 10212                           
 10213  1583  2D84               	goto	l7751
 10214                           	
 10215  1584                     l11201:	
 10216                           	line	30
 10217                           	
 10218  1584                     l7751:	
 10219  1584  0008               	return
 10220                           	opt stack 0
 10221                           GLOBAL	__end_of___awmod
 10222  1585                     	__end_of___awmod:
 10223 ;; =============== function ___awmod ends ============
 10224                           
 10225                           	signat	___awmod,8314
 10226                           	global	___ftge
 10227                           psect	text1149,local,class=CODE,delta=2
 10228                           global __ptext1149
 10229  1585                     __ptext1149:
 10230                           
 10231 ;; *************** function ___ftge *****************
 10232 ;; Defined at:
 10233 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftge.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  ff1             3    0[BANK0 ] float 
 10236 ;;  ff2             3    3[BANK0 ] float 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;		None               void
 10241 ;; Registers used:
 10242 ;;		wreg, status,2, status,0
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10248 ;;      Params:         0       6       0       0       0
 10249 ;;      Locals:         0       0       0       0       0
 10250 ;;      Temps:          0       6       0       0       0
 10251 ;;      Totals:         0      12       0       0       0
 10252 ;;Total ram usage:       12 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:    3
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_robotFollow
 10259 ;;		_robotMoveSpeed
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           psect	text1149
 10263                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftge.c"
 10264                           	line	5
 10265                           	global	__size_of___ftge
 10266  006E                     	__size_of___ftge	equ	__end_of___ftge-___ftge
 10267                           	
 10268  1585                     ___ftge:	
 10269                           	opt	stack 3
 10270                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10271                           	line	6
 10272                           	
 10273  1585                     l11149:	
 10274  1585  1283               	bcf	status, 5	;RP0=0, select bank0
 10275  1586  1303               	bcf	status, 6	;RP1=0, select bank0
 10276  1587  1FA2               	btfss	(___ftge@ff1+2),(23)&7
 10277  1588  2D8A               	goto	u4741
 10278  1589  2D8B               	goto	u4740
 10279  158A                     u4741:
 10280  158A  2DB1               	goto	l11153
 10281  158B                     u4740:
 10282                           	line	7
 10283                           	
 10284  158B                     l11151:	
 10285  158B  3000               	movlw	0
 10286  158C  00A6               	movwf	((??___ftge+0)+0)
 10287  158D  3000               	movlw	0
 10288  158E  00A7               	movwf	((??___ftge+0)+0+1)
 10289  158F  3080               	movlw	080h
 10290  1590  00A8               	movwf	((??___ftge+0)+0+2)
 10291  1591  0920               	comf	(___ftge@ff1),w
 10292  1592  00A9               	movwf	(??___ftge+3)+0
 10293  1593  0921               	comf	(___ftge@ff1+1),w
 10294  1594  00AA               	movwf	((??___ftge+3)+0+1)
 10295  1595  0922               	comf	(___ftge@ff1+2),w
 10296  1596  00AB               	movwf	((??___ftge+3)+0+2)
 10297  1597  0AA9               	incf	(??___ftge+3)+0,f
 10298  1598  1903               	skipnz
 10299  1599  0AAA               	incf	((??___ftge+3)+0+1),f
 10300  159A  1903               	skipnz
 10301  159B  0AAB               	incf	((??___ftge+3)+0+2),f
 10302  159C  0829               	movf	0+(??___ftge+3)+0,w
 10303  159D  07A6               	addwf	(??___ftge+0)+0,f
 10304  159E  082A               	movf	1+(??___ftge+3)+0,w
 10305  159F  1803               	skipnc
 10306  15A0  0F2A               	incfsz	1+(??___ftge+3)+0,w
 10307  15A1  2DA3               	goto	u4751
 10308  15A2  2DA4               	goto	u4752
 10309  15A3                     u4751:
 10310  15A3  07A7               	addwf	(??___ftge+0)+1,f
 10311                           	
 10312  15A4                     u4752:
 10313  15A4  082B               	movf	2+(??___ftge+3)+0,w
 10314  15A5  1803               	skipnc
 10315  15A6  0F2B               	incfsz	2+(??___ftge+3)+0,w
 10316  15A7  2DA9               	goto	u4753
 10317  15A8  2DAA               	goto	u4754
 10318  15A9                     u4753:
 10319  15A9  07A8               	addwf	(??___ftge+0)+2,f
 10320                           	
 10321  15AA                     u4754:
 10322  15AA  0826               	movf	0+(??___ftge+0)+0,w
 10323  15AB  00A0               	movwf	(___ftge@ff1)
 10324  15AC  0827               	movf	1+(??___ftge+0)+0,w
 10325  15AD  00A1               	movwf	(___ftge@ff1+1)
 10326  15AE  0828               	movf	2+(??___ftge+0)+0,w
 10327  15AF  00A2               	movwf	(___ftge@ff1+2)
 10328  15B0  2DB1               	goto	l11153
 10329                           	
 10330  15B1                     l7700:	
 10331                           	line	8
 10332                           	
 10333  15B1                     l11153:	
 10334  15B1  1FA5               	btfss	(___ftge@ff2+2),(23)&7
 10335  15B2  2DB4               	goto	u4761
 10336  15B3  2DB5               	goto	u4760
 10337  15B4                     u4761:
 10338  15B4  2DDB               	goto	l11157
 10339  15B5                     u4760:
 10340                           	line	9
 10341                           	
 10342  15B5                     l11155:	
 10343  15B5  3000               	movlw	0
 10344  15B6  00A6               	movwf	((??___ftge+0)+0)
 10345  15B7  3000               	movlw	0
 10346  15B8  00A7               	movwf	((??___ftge+0)+0+1)
 10347  15B9  3080               	movlw	080h
 10348  15BA  00A8               	movwf	((??___ftge+0)+0+2)
 10349  15BB  0923               	comf	(___ftge@ff2),w
 10350  15BC  00A9               	movwf	(??___ftge+3)+0
 10351  15BD  0924               	comf	(___ftge@ff2+1),w
 10352  15BE  00AA               	movwf	((??___ftge+3)+0+1)
 10353  15BF  0925               	comf	(___ftge@ff2+2),w
 10354  15C0  00AB               	movwf	((??___ftge+3)+0+2)
 10355  15C1  0AA9               	incf	(??___ftge+3)+0,f
 10356  15C2  1903               	skipnz
 10357  15C3  0AAA               	incf	((??___ftge+3)+0+1),f
 10358  15C4  1903               	skipnz
 10359  15C5  0AAB               	incf	((??___ftge+3)+0+2),f
 10360  15C6  0829               	movf	0+(??___ftge+3)+0,w
 10361  15C7  07A6               	addwf	(??___ftge+0)+0,f
 10362  15C8  082A               	movf	1+(??___ftge+3)+0,w
 10363  15C9  1803               	skipnc
 10364  15CA  0F2A               	incfsz	1+(??___ftge+3)+0,w
 10365  15CB  2DCD               	goto	u4771
 10366  15CC  2DCE               	goto	u4772
 10367  15CD                     u4771:
 10368  15CD  07A7               	addwf	(??___ftge+0)+1,f
 10369                           	
 10370  15CE                     u4772:
 10371  15CE  082B               	movf	2+(??___ftge+3)+0,w
 10372  15CF  1803               	skipnc
 10373  15D0  0F2B               	incfsz	2+(??___ftge+3)+0,w
 10374  15D1  2DD3               	goto	u4773
 10375  15D2  2DD4               	goto	u4774
 10376  15D3                     u4773:
 10377  15D3  07A8               	addwf	(??___ftge+0)+2,f
 10378                           	
 10379  15D4                     u4774:
 10380  15D4  0826               	movf	0+(??___ftge+0)+0,w
 10381  15D5  00A3               	movwf	(___ftge@ff2)
 10382  15D6  0827               	movf	1+(??___ftge+0)+0,w
 10383  15D7  00A4               	movwf	(___ftge@ff2+1)
 10384  15D8  0828               	movf	2+(??___ftge+0)+0,w
 10385  15D9  00A5               	movwf	(___ftge@ff2+2)
 10386  15DA  2DDB               	goto	l11157
 10387                           	
 10388  15DB                     l7701:	
 10389                           	line	10
 10390                           	
 10391  15DB                     l11157:	
 10392  15DB  3080               	movlw	080h
 10393  15DC  06A2               	xorwf	(___ftge@ff1+2),f
 10394                           	line	11
 10395                           	
 10396  15DD                     l11159:	
 10397  15DD  3080               	movlw	080h
 10398  15DE  06A5               	xorwf	(___ftge@ff2+2),f
 10399                           	line	12
 10400                           	
 10401  15DF                     l11161:	
 10402  15DF  0825               	movf	(___ftge@ff2+2),w
 10403  15E0  0222               	subwf	(___ftge@ff1+2),w
 10404  15E1  1D03               	skipz
 10405  15E2  2DE9               	goto	u4785
 10406  15E3  0824               	movf	(___ftge@ff2+1),w
 10407  15E4  0221               	subwf	(___ftge@ff1+1),w
 10408  15E5  1D03               	skipz
 10409  15E6  2DE9               	goto	u4785
 10410  15E7  0823               	movf	(___ftge@ff2),w
 10411  15E8  0220               	subwf	(___ftge@ff1),w
 10412  15E9                     u4785:
 10413  15E9  1803               	skipnc
 10414  15EA  2DEC               	goto	u4781
 10415  15EB  2DED               	goto	u4780
 10416  15EC                     u4781:
 10417  15EC  2DEF               	goto	l11165
 10418  15ED                     u4780:
 10419                           	
 10420  15ED                     l11163:	
 10421  15ED  1003               	clrc
 10422                           	
 10423  15EE  2DF2               	goto	l7702
 10424                           	
 10425  15EF                     l10599:	
 10426                           	
 10427  15EF                     l11165:	
 10428  15EF  1403               	setc
 10429                           	
 10430  15F0  2DF2               	goto	l7702
 10431                           	
 10432  15F1                     l10601:	
 10433  15F1  2DF2               	goto	l7702
 10434                           	
 10435  15F2                     l11167:	
 10436                           	line	13
 10437                           	
 10438  15F2                     l7702:	
 10439  15F2  0008               	return
 10440                           	opt stack 0
 10441                           GLOBAL	__end_of___ftge
 10442  15F3                     	__end_of___ftge:
 10443 ;; =============== function ___ftge ends ============
 10444                           
 10445                           	signat	___ftge,8312
 10446                           	global	___fttol
 10447                           psect	text1150,local,class=CODE,delta=2
 10448                           global __ptext1150
 10449  0921                     __ptext1150:
 10450                           
 10451 ;; *************** function ___fttol *****************
 10452 ;; Defined at:
 10453 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  f1              3    8[BANK0 ] float 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  lval            4   17[BANK0 ] unsigned long 
 10458 ;;  exp1            1   21[BANK0 ] unsigned char 
 10459 ;;  sign1           1   16[BANK0 ] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  4    8[BANK0 ] long 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2, status,0
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10469 ;;      Params:         0       4       0       0       0
 10470 ;;      Locals:         0       6       0       0       0
 10471 ;;      Temps:          0       4       0       0       0
 10472 ;;      Totals:         0      14       0       0       0
 10473 ;;Total ram usage:       14 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:    3
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_main
 10480 ;;		_robotFollow
 10481 ;;		_robotMoveSpeed
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           psect	text1150
 10485                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
 10486                           	line	45
 10487                           	global	__size_of___fttol
 10488  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 10489                           	
 10490  0921                     ___fttol:	
 10491                           	opt	stack 4
 10492                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10493                           	line	49
 10494                           	
 10495  0921                     l11093:	
 10496  0921  1283               	bcf	status, 5	;RP0=0, select bank0
 10497  0922  1303               	bcf	status, 6	;RP1=0, select bank0
 10498  0923  0828               	movf	(___fttol@f1),w
 10499  0924  00AC               	movwf	((??___fttol+0)+0)
 10500  0925  0829               	movf	(___fttol@f1+1),w
 10501  0926  00AD               	movwf	((??___fttol+0)+0+1)
 10502  0927  082A               	movf	(___fttol@f1+2),w
 10503  0928  00AE               	movwf	((??___fttol+0)+0+2)
 10504  0929  1003               	clrc
 10505  092A  0D2D               	rlf	(??___fttol+0)+1,w
 10506  092B  0D2E               	rlf	(??___fttol+0)+2,w
 10507  092C  00AF               	movwf	(??___fttol+3)+0
 10508  092D  082F               	movf	(??___fttol+3)+0,w
 10509  092E  00B5               	movwf	(___fttol@exp1)
 10510  092F  08B5               	movf	((___fttol@exp1)),f
 10511  0930  1D03               	skipz
 10512  0931  2933               	goto	u4631
 10513  0932  2934               	goto	u4630
 10514  0933                     u4631:
 10515  0933  293E               	goto	l11099
 10516  0934                     u4630:
 10517                           	line	50
 10518                           	
 10519  0934                     l11095:	
 10520  0934  3000               	movlw	0
 10521  0935  00AB               	movwf	(?___fttol+3)
 10522  0936  3000               	movlw	0
 10523  0937  00AA               	movwf	(?___fttol+2)
 10524  0938  3000               	movlw	0
 10525  0939  00A9               	movwf	(?___fttol+1)
 10526  093A  3000               	movlw	0
 10527  093B  00A8               	movwf	(?___fttol)
 10528                           
 10529  093C  29C6               	goto	l7643
 10530                           	
 10531  093D                     l11097:	
 10532  093D  29C6               	goto	l7643
 10533                           	
 10534  093E                     l7642:	
 10535                           	line	51
 10536                           	
 10537  093E                     l11099:	
 10538  093E  0828               	movf	(___fttol@f1),w
 10539  093F  00AC               	movwf	((??___fttol+0)+0)
 10540  0940  0829               	movf	(___fttol@f1+1),w
 10541  0941  00AD               	movwf	((??___fttol+0)+0+1)
 10542  0942  082A               	movf	(___fttol@f1+2),w
 10543  0943  00AE               	movwf	((??___fttol+0)+0+2)
 10544  0944  3017               	movlw	017h
 10545  0945                     u4645:
 10546  0945  1003               	clrc
 10547  0946  0CAE               	rrf	(??___fttol+0)+2,f
 10548  0947  0CAD               	rrf	(??___fttol+0)+1,f
 10549  0948  0CAC               	rrf	(??___fttol+0)+0,f
 10550  0949                     u4640:
 10551  0949  3EFF               	addlw	-1
 10552  094A  1D03               	skipz
 10553  094B  2945               	goto	u4645
 10554  094C  082C               	movf	0+(??___fttol+0)+0,w
 10555  094D  00AF               	movwf	(??___fttol+3)+0
 10556  094E  082F               	movf	(??___fttol+3)+0,w
 10557  094F  00B0               	movwf	(___fttol@sign1)
 10558                           	line	52
 10559                           	
 10560  0950                     l11101:	
 10561  0950  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
 10562                           	line	53
 10563                           	
 10564  0951                     l11103:	
 10565  0951  30FF               	movlw	0FFh
 10566  0952  05A8               	andwf	(___fttol@f1),f
 10567  0953  30FF               	movlw	0FFh
 10568  0954  05A9               	andwf	(___fttol@f1+1),f
 10569  0955  3000               	movlw	0
 10570  0956  05AA               	andwf	(___fttol@f1+2),f
 10571                           	line	54
 10572                           	
 10573  0957                     l11105:	
 10574  0957  0828               	movf	(___fttol@f1),w
 10575  0958  00B1               	movwf	(___fttol@lval)
 10576  0959  0829               	movf	(___fttol@f1+1),w
 10577  095A  00B2               	movwf	((___fttol@lval))+1
 10578  095B  082A               	movf	(___fttol@f1+2),w
 10579  095C  00B3               	movwf	((___fttol@lval))+2
 10580  095D  01B4               	clrf	((___fttol@lval))+3
 10581                           	line	55
 10582                           	
 10583  095E                     l11107:	
 10584  095E  308E               	movlw	low(08Eh)
 10585  095F  02B5               	subwf	(___fttol@exp1),f
 10586                           	line	56
 10587                           	
 10588  0960                     l11109:	
 10589  0960  1FB5               	btfss	(___fttol@exp1),7
 10590  0961  2963               	goto	u4651
 10591  0962  2964               	goto	u4650
 10592  0963                     u4651:
 10593  0963  2989               	goto	l11119
 10594  0964                     u4650:
 10595                           	line	57
 10596                           	
 10597  0964                     l11111:	
 10598  0964  0835               	movf	(___fttol@exp1),w
 10599  0965  3A80               	xorlw	80h
 10600  0966  3E8F               	addlw	-((-15)^80h)
 10601  0967  1803               	skipnc
 10602  0968  296A               	goto	u4661
 10603  0969  296B               	goto	u4660
 10604  096A                     u4661:
 10605  096A  2976               	goto	l11117
 10606  096B                     u4660:
 10607                           	line	58
 10608                           	
 10609  096B                     l11113:	
 10610  096B  3000               	movlw	0
 10611  096C  00AB               	movwf	(?___fttol+3)
 10612  096D  3000               	movlw	0
 10613  096E  00AA               	movwf	(?___fttol+2)
 10614  096F  3000               	movlw	0
 10615  0970  00A9               	movwf	(?___fttol+1)
 10616  0971  3000               	movlw	0
 10617  0972  00A8               	movwf	(?___fttol)
 10618                           
 10619  0973  29C6               	goto	l7643
 10620                           	
 10621  0974                     l11115:	
 10622  0974  29C6               	goto	l7643
 10623                           	
 10624  0975                     l7645:	
 10625  0975  2976               	goto	l11117
 10626                           	line	59
 10627                           	
 10628  0976                     l7646:	
 10629                           	line	60
 10630                           	
 10631  0976                     l11117:	
 10632  0976  3001               	movlw	01h
 10633  0977                     u4675:
 10634  0977  1003               	clrc
 10635  0978  0CB4               	rrf	(___fttol@lval+3),f
 10636  0979  0CB3               	rrf	(___fttol@lval+2),f
 10637  097A  0CB2               	rrf	(___fttol@lval+1),f
 10638  097B  0CB1               	rrf	(___fttol@lval),f
 10639  097C  3EFF               	addlw	-1
 10640  097D  1D03               	skipz
 10641  097E  2977               	goto	u4675
 10642                           
 10643                           	line	61
 10644  097F  3001               	movlw	(01h)
 10645  0980  00AC               	movwf	(??___fttol+0)+0
 10646  0981  082C               	movf	(??___fttol+0)+0,w
 10647  0982  07B5               	addwf	(___fttol@exp1),f
 10648  0983  1D03               	btfss	status,2
 10649  0984  2986               	goto	u4681
 10650  0985  2987               	goto	u4680
 10651  0986                     u4681:
 10652  0986  2976               	goto	l11117
 10653  0987                     u4680:
 10654  0987  29AD               	goto	l11129
 10655                           	
 10656  0988                     l7647:	
 10657                           	line	62
 10658  0988  29AD               	goto	l11129
 10659                           	
 10660  0989                     l7644:	
 10661                           	line	63
 10662                           	
 10663  0989                     l11119:	
 10664  0989  3018               	movlw	(018h)
 10665  098A  0235               	subwf	(___fttol@exp1),w
 10666  098B  1C03               	skipc
 10667  098C  298E               	goto	u4691
 10668  098D  298F               	goto	u4690
 10669  098E                     u4691:
 10670  098E  29A6               	goto	l11127
 10671  098F                     u4690:
 10672                           	line	64
 10673                           	
 10674  098F                     l11121:	
 10675  098F  3000               	movlw	0
 10676  0990  00AB               	movwf	(?___fttol+3)
 10677  0991  3000               	movlw	0
 10678  0992  00AA               	movwf	(?___fttol+2)
 10679  0993  3000               	movlw	0
 10680  0994  00A9               	movwf	(?___fttol+1)
 10681  0995  3000               	movlw	0
 10682  0996  00A8               	movwf	(?___fttol)
 10683                           
 10684  0997  29C6               	goto	l7643
 10685                           	
 10686  0998                     l11123:	
 10687  0998  29C6               	goto	l7643
 10688                           	
 10689  0999                     l7649:	
 10690                           	line	65
 10691  0999  29A6               	goto	l11127
 10692                           	
 10693  099A                     l7651:	
 10694                           	line	66
 10695                           	
 10696  099A                     l11125:	
 10697  099A  3001               	movlw	01h
 10698  099B  00AC               	movwf	(??___fttol+0)+0
 10699  099C                     u4705:
 10700  099C  1003               	clrc
 10701  099D  0DB1               	rlf	(___fttol@lval),f
 10702  099E  0DB2               	rlf	(___fttol@lval+1),f
 10703  099F  0DB3               	rlf	(___fttol@lval+2),f
 10704  09A0  0DB4               	rlf	(___fttol@lval+3),f
 10705  09A1  0BAC               	decfsz	(??___fttol+0)+0
 10706  09A2  299C               	goto	u4705
 10707                           	line	67
 10708  09A3  3001               	movlw	low(01h)
 10709  09A4  02B5               	subwf	(___fttol@exp1),f
 10710  09A5  29A6               	goto	l11127
 10711                           	line	68
 10712                           	
 10713  09A6                     l7650:	
 10714                           	line	65
 10715                           	
 10716  09A6                     l11127:	
 10717  09A6  08B5               	movf	(___fttol@exp1),f
 10718  09A7  1D03               	skipz
 10719  09A8  29AA               	goto	u4711
 10720  09A9  29AB               	goto	u4710
 10721  09AA                     u4711:
 10722  09AA  299A               	goto	l11125
 10723  09AB                     u4710:
 10724  09AB  29AD               	goto	l11129
 10725                           	
 10726  09AC                     l7652:	
 10727  09AC  29AD               	goto	l11129
 10728                           	line	69
 10729                           	
 10730  09AD                     l7648:	
 10731                           	line	70
 10732                           	
 10733  09AD                     l11129:	
 10734  09AD  0830               	movf	(___fttol@sign1),w
 10735  09AE  1D03               	skipz
 10736  09AF  29B1               	goto	u4720
 10737  09B0  29BD               	goto	l11133
 10738  09B1                     u4720:
 10739                           	line	71
 10740                           	
 10741  09B1                     l11131:	
 10742  09B1  09B1               	comf	(___fttol@lval),f
 10743  09B2  09B2               	comf	(___fttol@lval+1),f
 10744  09B3  09B3               	comf	(___fttol@lval+2),f
 10745  09B4  09B4               	comf	(___fttol@lval+3),f
 10746  09B5  0AB1               	incf	(___fttol@lval),f
 10747  09B6  1903               	skipnz
 10748  09B7  0AB2               	incf	(___fttol@lval+1),f
 10749  09B8  1903               	skipnz
 10750  09B9  0AB3               	incf	(___fttol@lval+2),f
 10751  09BA  1903               	skipnz
 10752  09BB  0AB4               	incf	(___fttol@lval+3),f
 10753  09BC  29BD               	goto	l11133
 10754                           	
 10755  09BD                     l7653:	
 10756                           	line	72
 10757                           	
 10758  09BD                     l11133:	
 10759  09BD  0834               	movf	(___fttol@lval+3),w
 10760  09BE  00AB               	movwf	(?___fttol+3)
 10761  09BF  0833               	movf	(___fttol@lval+2),w
 10762  09C0  00AA               	movwf	(?___fttol+2)
 10763  09C1  0832               	movf	(___fttol@lval+1),w
 10764  09C2  00A9               	movwf	(?___fttol+1)
 10765  09C3  0831               	movf	(___fttol@lval),w
 10766  09C4  00A8               	movwf	(?___fttol)
 10767                           
 10768  09C5  29C6               	goto	l7643
 10769                           	
 10770  09C6                     l11135:	
 10771                           	line	73
 10772                           	
 10773  09C6                     l7643:	
 10774  09C6  0008               	return
 10775                           	opt stack 0
 10776                           GLOBAL	__end_of___fttol
 10777  09C7                     	__end_of___fttol:
 10778 ;; =============== function ___fttol ends ============
 10779                           
 10780                           	signat	___fttol,4220
 10781                           	global	___ftpack
 10782                           psect	text1151,local,class=CODE,delta=2
 10783                           global __ptext1151
 10784  166D                     __ptext1151:
 10785                           
 10786 ;; *************** function ___ftpack *****************
 10787 ;; Defined at:
 10788 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;  arg             3    0[BANK0 ] unsigned um
 10791 ;;  exp             1    3[BANK0 ] unsigned char 
 10792 ;;  sign            1    4[BANK0 ] unsigned char 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  3    0[BANK0 ] float 
 10797 ;; Registers used:
 10798 ;;		wreg, status,2, status,0
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10804 ;;      Params:         0       5       0       0       0
 10805 ;;      Locals:         0       0       0       0       0
 10806 ;;      Temps:          0       3       0       0       0
 10807 ;;      Totals:         0       8       0       0       0
 10808 ;;Total ram usage:        8 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    3
 10811 ;; This function calls:
 10812 ;;		Nothing
 10813 ;; This function is called by:
 10814 ;;		___ftdiv
 10815 ;;		___ftmul
 10816 ;;		___awtoft
 10817 ;;		___ftadd
 10818 ;;		___lbtoft
 10819 ;;		___abtoft
 10820 ;;		___lwtoft
 10821 ;;		___altoft
 10822 ;;		___lltoft
 10823 ;;		___attoft
 10824 ;;		___lttoft
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           psect	text1151
 10828                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
 10829                           	line	63
 10830                           	global	__size_of___ftpack
 10831  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 10832                           	
 10833  166D                     ___ftpack:	
 10834                           	opt	stack 3
 10835                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10836                           	line	64
 10837                           	
 10838  166D                     l11057:	
 10839  166D  1283               	bcf	status, 5	;RP0=0, select bank0
 10840  166E  1303               	bcf	status, 6	;RP1=0, select bank0
 10841  166F  0823               	movf	(___ftpack@exp),w
 10842  1670  1D03               	skipz
 10843  1671  2E73               	goto	u4520
 10844  1672  2E7B               	goto	l11061
 10845  1673                     u4520:
 10846                           	
 10847  1673                     l11059:	
 10848  1673  0822               	movf	(___ftpack@arg+2),w
 10849  1674  0421               	iorwf	(___ftpack@arg+1),w
 10850  1675  0420               	iorwf	(___ftpack@arg),w
 10851  1676  1D03               	skipz
 10852  1677  2E79               	goto	u4531
 10853  1678  2E7A               	goto	u4530
 10854  1679                     u4531:
 10855  1679  2E91               	goto	l11067
 10856  167A                     u4530:
 10857  167A  2E7B               	goto	l11061
 10858                           	
 10859  167B                     l7867:	
 10860                           	line	65
 10861                           	
 10862  167B                     l11061:	
 10863  167B  3000               	movlw	0x0
 10864  167C  00A0               	movwf	(?___ftpack)
 10865  167D  3000               	movlw	0x0
 10866  167E  00A1               	movwf	(?___ftpack+1)
 10867  167F  3000               	movlw	0x0
 10868  1680  00A2               	movwf	(?___ftpack+2)
 10869  1681  2EE9               	goto	l7868
 10870                           	
 10871  1682                     l11063:	
 10872  1682  2EE9               	goto	l7868
 10873                           	
 10874  1683                     l7865:	
 10875                           	line	66
 10876  1683  2E91               	goto	l11067
 10877                           	
 10878  1684                     l7870:	
 10879                           	line	67
 10880                           	
 10881  1684                     l11065:	
 10882  1684  3001               	movlw	(01h)
 10883  1685  00A5               	movwf	(??___ftpack+0)+0
 10884  1686  0825               	movf	(??___ftpack+0)+0,w
 10885  1687  07A3               	addwf	(___ftpack@exp),f
 10886                           	line	68
 10887  1688  3001               	movlw	01h
 10888  1689                     u4545:
 10889  1689  1003               	clrc
 10890  168A  0CA2               	rrf	(___ftpack@arg+2),f
 10891  168B  0CA1               	rrf	(___ftpack@arg+1),f
 10892  168C  0CA0               	rrf	(___ftpack@arg),f
 10893  168D  3EFF               	addlw	-1
 10894  168E  1D03               	skipz
 10895  168F  2E89               	goto	u4545
 10896                           
 10897  1690  2E91               	goto	l11067
 10898                           	line	69
 10899                           	
 10900  1691                     l7869:	
 10901                           	line	66
 10902                           	
 10903  1691                     l11067:	
 10904  1691  30FE               	movlw	low highword(0FE0000h)
 10905  1692  0522               	andwf	(___ftpack@arg+2),w
 10906  1693  1D03               	btfss	status,2
 10907  1694  2E96               	goto	u4551
 10908  1695  2E97               	goto	u4550
 10909  1696                     u4551:
 10910  1696  2E84               	goto	l11065
 10911  1697                     u4550:
 10912  1697  2EAF               	goto	l7872
 10913                           	
 10914  1698                     l7871:	
 10915                           	line	70
 10916  1698  2EAF               	goto	l7872
 10917                           	
 10918  1699                     l7873:	
 10919                           	line	71
 10920                           	
 10921  1699                     l11069:	
 10922  1699  3001               	movlw	(01h)
 10923  169A  00A5               	movwf	(??___ftpack+0)+0
 10924  169B  0825               	movf	(??___ftpack+0)+0,w
 10925  169C  07A3               	addwf	(___ftpack@exp),f
 10926                           	line	72
 10927                           	
 10928  169D                     l11071:	
 10929  169D  3001               	movlw	01h
 10930  169E  07A0               	addwf	(___ftpack@arg),f
 10931  169F  3000               	movlw	0
 10932  16A0  1803               	skipnc
 10933  16A1  3001               movlw 1
 10934  16A2  07A1               	addwf	(___ftpack@arg+1),f
 10935  16A3  3000               	movlw	0
 10936  16A4  1803               	skipnc
 10937  16A5  3001               movlw 1
 10938  16A6  07A2               	addwf	(___ftpack@arg+2),f
 10939                           	line	73
 10940                           	
 10941  16A7                     l11073:	
 10942  16A7  3001               	movlw	01h
 10943  16A8                     u4565:
 10944  16A8  1003               	clrc
 10945  16A9  0CA2               	rrf	(___ftpack@arg+2),f
 10946  16AA  0CA1               	rrf	(___ftpack@arg+1),f
 10947  16AB  0CA0               	rrf	(___ftpack@arg),f
 10948  16AC  3EFF               	addlw	-1
 10949  16AD  1D03               	skipz
 10950  16AE  2EA8               	goto	u4565
 10951                           
 10952                           	line	74
 10953                           	
 10954  16AF                     l7872:	
 10955                           	line	70
 10956  16AF  30FF               	movlw	low highword(0FF0000h)
 10957  16B0  0522               	andwf	(___ftpack@arg+2),w
 10958  16B1  1D03               	btfss	status,2
 10959  16B2  2EB4               	goto	u4571
 10960  16B3  2EB5               	goto	u4570
 10961  16B4                     u4571:
 10962  16B4  2E99               	goto	l11069
 10963  16B5                     u4570:
 10964  16B5  2EC2               	goto	l11077
 10965                           	
 10966  16B6                     l7874:	
 10967                           	line	75
 10968  16B6  2EC2               	goto	l11077
 10969                           	
 10970  16B7                     l7876:	
 10971                           	line	76
 10972                           	
 10973  16B7                     l11075:	
 10974  16B7  3001               	movlw	low(01h)
 10975  16B8  02A3               	subwf	(___ftpack@exp),f
 10976                           	line	77
 10977  16B9  3001               	movlw	01h
 10978  16BA                     u4585:
 10979  16BA  1003               	clrc
 10980  16BB  0DA0               	rlf	(___ftpack@arg),f
 10981  16BC  0DA1               	rlf	(___ftpack@arg+1),f
 10982  16BD  0DA2               	rlf	(___ftpack@arg+2),f
 10983  16BE  3EFF               	addlw	-1
 10984  16BF  1D03               	skipz
 10985  16C0  2EBA               	goto	u4585
 10986  16C1  2EC2               	goto	l11077
 10987                           	line	78
 10988                           	
 10989  16C2                     l7875:	
 10990                           	line	75
 10991                           	
 10992  16C2                     l11077:	
 10993  16C2  1FA1               	btfss	(___ftpack@arg+1),(15)&7
 10994  16C3  2EC5               	goto	u4591
 10995  16C4  2EC6               	goto	u4590
 10996  16C5                     u4591:
 10997  16C5  2EB7               	goto	l11075
 10998  16C6                     u4590:
 10999                           	
 11000  16C6                     l7877:	
 11001                           	line	79
 11002  16C6  1823               	btfsc	(___ftpack@exp),(0)&7
 11003  16C7  2EC9               	goto	u4601
 11004  16C8  2ECA               	goto	u4600
 11005  16C9                     u4601:
 11006  16C9  2ED0               	goto	l7878
 11007  16CA                     u4600:
 11008                           	line	80
 11009                           	
 11010  16CA                     l11079:	
 11011  16CA  30FF               	movlw	0FFh
 11012  16CB  05A0               	andwf	(___ftpack@arg),f
 11013  16CC  307F               	movlw	07Fh
 11014  16CD  05A1               	andwf	(___ftpack@arg+1),f
 11015  16CE  30FF               	movlw	0FFh
 11016  16CF  05A2               	andwf	(___ftpack@arg+2),f
 11017                           	
 11018  16D0                     l7878:	
 11019                           	line	81
 11020  16D0  1003               	clrc
 11021  16D1  0CA3               	rrf	(___ftpack@exp),f
 11022                           
 11023                           	line	82
 11024                           	
 11025  16D2                     l11081:	
 11026  16D2  0823               	movf	(___ftpack@exp),w
 11027  16D3  00A5               	movwf	((??___ftpack+0)+0)
 11028  16D4  01A6               	clrf	((??___ftpack+0)+0+1)
 11029  16D5  01A7               	clrf	((??___ftpack+0)+0+2)
 11030  16D6  3010               	movlw	010h
 11031  16D7                     u4615:
 11032  16D7  1003               	clrc
 11033  16D8  0DA5               	rlf	(??___ftpack+0)+0,f
 11034  16D9  0DA6               	rlf	(??___ftpack+0)+1,f
 11035  16DA  0DA7               	rlf	(??___ftpack+0)+2,f
 11036  16DB                     u4610:
 11037  16DB  3EFF               	addlw	-1
 11038  16DC  1D03               	skipz
 11039  16DD  2ED7               	goto	u4615
 11040  16DE  0825               	movf	0+(??___ftpack+0)+0,w
 11041  16DF  04A0               	iorwf	(___ftpack@arg),f
 11042  16E0  0826               	movf	1+(??___ftpack+0)+0,w
 11043  16E1  04A1               	iorwf	(___ftpack@arg+1),f
 11044  16E2  0827               	movf	2+(??___ftpack+0)+0,w
 11045  16E3  04A2               	iorwf	(___ftpack@arg+2),f
 11046                           	line	83
 11047                           	
 11048  16E4                     l11083:	
 11049  16E4  0824               	movf	(___ftpack@sign),w
 11050  16E5  1D03               	skipz
 11051  16E6  2EE8               	goto	u4620
 11052  16E7  2EE9               	goto	l7879
 11053  16E8                     u4620:
 11054                           	line	84
 11055                           	
 11056  16E8                     l11085:	
 11057  16E8  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 11058                           	
 11059  16E9                     l7879:	
 11060                           	line	85
 11061                           	line	86
 11062                           	
 11063  16E9                     l7868:	
 11064  16E9  0008               	return
 11065                           	opt stack 0
 11066                           GLOBAL	__end_of___ftpack
 11067  16EA                     	__end_of___ftpack:
 11068 ;; =============== function ___ftpack ends ============
 11069                           
 11070                           	signat	___ftpack,12411
 11071                           	global	___lwmod
 11072                           psect	text1152,local,class=CODE,delta=2
 11073                           global __ptext1152
 11074  134C                     __ptext1152:
 11075                           
 11076 ;; *************** function ___lwmod *****************
 11077 ;; Defined at:
 11078 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  divisor         2   14[BANK0 ] unsigned int 
 11081 ;;  dividend        2   16[BANK0 ] unsigned int 
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;  counter         1   19[BANK0 ] unsigned char 
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  2   14[BANK0 ] unsigned int 
 11086 ;; Registers used:
 11087 ;;		wreg, status,2, status,0
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11093 ;;      Params:         0       4       0       0       0
 11094 ;;      Locals:         0       1       0       0       0
 11095 ;;      Temps:          0       1       0       0       0
 11096 ;;      Totals:         0       6       0       0       0
 11097 ;;Total ram usage:        6 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:    3
 11100 ;; This function calls:
 11101 ;;		Nothing
 11102 ;; This function is called by:
 11103 ;;		_sprintf
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           psect	text1152
 11107                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11108                           	line	5
 11109                           	global	__size_of___lwmod
 11110  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 11111                           	
 11112  134C                     ___lwmod:	
 11113                           	opt	stack 1
 11114                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11115                           	line	8
 11116                           	
 11117  134C                     l10965:	
 11118  134C  1283               	bcf	status, 5	;RP0=0, select bank0
 11119  134D  1303               	bcf	status, 6	;RP1=0, select bank0
 11120  134E  082F               	movf	(___lwmod@divisor+1),w
 11121  134F  042E               	iorwf	(___lwmod@divisor),w
 11122  1350  1903               	skipnz
 11123  1351  2B53               	goto	u4221
 11124  1352  2B54               	goto	u4220
 11125  1353                     u4221:
 11126  1353  2B8A               	goto	l10983
 11127  1354                     u4220:
 11128                           	line	9
 11129                           	
 11130  1354                     l10967:	
 11131  1354  01B3               	clrf	(___lwmod@counter)
 11132  1355  1403               	bsf	status,0
 11133  1356  0DB3               	rlf	(___lwmod@counter),f
 11134                           	line	10
 11135  1357  2B64               	goto	l10973
 11136                           	
 11137  1358                     l7551:	
 11138                           	line	11
 11139                           	
 11140  1358                     l10969:	
 11141  1358  3001               	movlw	01h
 11142                           	
 11143  1359                     u4235:
 11144  1359  1003               	clrc
 11145  135A  0DAE               	rlf	(___lwmod@divisor),f
 11146  135B  0DAF               	rlf	(___lwmod@divisor+1),f
 11147  135C  3EFF               	addlw	-1
 11148  135D  1D03               	skipz
 11149  135E  2B59               	goto	u4235
 11150                           	line	12
 11151                           	
 11152  135F                     l10971:	
 11153  135F  3001               	movlw	(01h)
 11154  1360  00B2               	movwf	(??___lwmod+0)+0
 11155  1361  0832               	movf	(??___lwmod+0)+0,w
 11156  1362  07B3               	addwf	(___lwmod@counter),f
 11157  1363  2B64               	goto	l10973
 11158                           	line	13
 11159                           	
 11160  1364                     l7550:	
 11161                           	line	10
 11162                           	
 11163  1364                     l10973:	
 11164  1364  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 11165  1365  2B67               	goto	u4241
 11166  1366  2B68               	goto	u4240
 11167  1367                     u4241:
 11168  1367  2B58               	goto	l10969
 11169  1368                     u4240:
 11170  1368  2B6A               	goto	l10975
 11171                           	
 11172  1369                     l7552:	
 11173  1369  2B6A               	goto	l10975
 11174                           	line	14
 11175                           	
 11176  136A                     l7553:	
 11177                           	line	15
 11178                           	
 11179  136A                     l10975:	
 11180  136A  082F               	movf	(___lwmod@divisor+1),w
 11181  136B  0231               	subwf	(___lwmod@dividend+1),w
 11182  136C  1D03               	skipz
 11183  136D  2B70               	goto	u4255
 11184  136E  082E               	movf	(___lwmod@divisor),w
 11185  136F  0230               	subwf	(___lwmod@dividend),w
 11186  1370                     u4255:
 11187  1370  1C03               	skipc
 11188  1371  2B73               	goto	u4251
 11189  1372  2B74               	goto	u4250
 11190  1373                     u4251:
 11191  1373  2B7B               	goto	l10979
 11192  1374                     u4250:
 11193                           	line	16
 11194                           	
 11195  1374                     l10977:	
 11196  1374  082E               	movf	(___lwmod@divisor),w
 11197  1375  02B0               	subwf	(___lwmod@dividend),f
 11198  1376  082F               	movf	(___lwmod@divisor+1),w
 11199  1377  1C03               	skipc
 11200  1378  03B1               	decf	(___lwmod@dividend+1),f
 11201  1379  02B1               	subwf	(___lwmod@dividend+1),f
 11202  137A  2B7B               	goto	l10979
 11203                           	
 11204  137B                     l7554:	
 11205                           	line	17
 11206                           	
 11207  137B                     l10979:	
 11208  137B  3001               	movlw	01h
 11209                           	
 11210  137C                     u4265:
 11211  137C  1003               	clrc
 11212  137D  0CAF               	rrf	(___lwmod@divisor+1),f
 11213  137E  0CAE               	rrf	(___lwmod@divisor),f
 11214  137F  3EFF               	addlw	-1
 11215  1380  1D03               	skipz
 11216  1381  2B7C               	goto	u4265
 11217                           	line	18
 11218                           	
 11219  1382                     l10981:	
 11220  1382  3001               	movlw	low(01h)
 11221  1383  02B3               	subwf	(___lwmod@counter),f
 11222  1384  1D03               	btfss	status,2
 11223  1385  2B87               	goto	u4271
 11224  1386  2B88               	goto	u4270
 11225  1387                     u4271:
 11226  1387  2B6A               	goto	l10975
 11227  1388                     u4270:
 11228  1388  2B8A               	goto	l10983
 11229                           	
 11230  1389                     l7555:	
 11231  1389  2B8A               	goto	l10983
 11232                           	line	19
 11233                           	
 11234  138A                     l7549:	
 11235                           	line	20
 11236                           	
 11237  138A                     l10983:	
 11238  138A  0831               	movf	(___lwmod@dividend+1),w
 11239  138B  01AF               	clrf	(?___lwmod+1)
 11240  138C  07AF               	addwf	(?___lwmod+1)
 11241  138D  0830               	movf	(___lwmod@dividend),w
 11242  138E  01AE               	clrf	(?___lwmod)
 11243  138F  07AE               	addwf	(?___lwmod)
 11244                           
 11245  1390  2B91               	goto	l7556
 11246                           	
 11247  1391                     l10985:	
 11248                           	line	21
 11249                           	
 11250  1391                     l7556:	
 11251  1391  0008               	return
 11252                           	opt stack 0
 11253                           GLOBAL	__end_of___lwmod
 11254  1392                     	__end_of___lwmod:
 11255 ;; =============== function ___lwmod ends ============
 11256                           
 11257                           	signat	___lwmod,8314
 11258                           	global	___lwdiv
 11259                           psect	text1153,local,class=CODE,delta=2
 11260                           global __ptext1153
 11261  141F                     __ptext1153:
 11262                           
 11263 ;; *************** function ___lwdiv *****************
 11264 ;; Defined at:
 11265 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  divisor         2    6[BANK0 ] unsigned int 
 11268 ;;  dividend        2    8[BANK0 ] unsigned int 
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;  quotient        2   11[BANK0 ] unsigned int 
 11271 ;;  counter         1   13[BANK0 ] unsigned char 
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  2    6[BANK0 ] unsigned int 
 11274 ;; Registers used:
 11275 ;;		wreg, status,2, status,0
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11281 ;;      Params:         0       4       0       0       0
 11282 ;;      Locals:         0       3       0       0       0
 11283 ;;      Temps:          0       1       0       0       0
 11284 ;;      Totals:         0       8       0       0       0
 11285 ;;Total ram usage:        8 bytes
 11286 ;; Hardware stack levels used:    1
 11287 ;; Hardware stack levels required when called:    3
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_readAvgDistance
 11292 ;;		_ADCconvert
 11293 ;;		_sprintf
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           psect	text1153
 11297                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11298                           	line	5
 11299                           	global	__size_of___lwdiv
 11300  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 11301                           	
 11302  141F                     ___lwdiv:	
 11303                           	opt	stack 1
 11304                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11305                           	line	9
 11306                           	
 11307  141F                     l10939:	
 11308  141F  1283               	bcf	status, 5	;RP0=0, select bank0
 11309  1420  1303               	bcf	status, 6	;RP1=0, select bank0
 11310  1421  01AB               	clrf	(___lwdiv@quotient)
 11311  1422  01AC               	clrf	(___lwdiv@quotient+1)
 11312                           	line	10
 11313                           	
 11314  1423                     l10941:	
 11315  1423  0827               	movf	(___lwdiv@divisor+1),w
 11316  1424  0426               	iorwf	(___lwdiv@divisor),w
 11317  1425  1903               	skipnz
 11318  1426  2C28               	goto	u4151
 11319  1427  2C29               	goto	u4150
 11320  1428                     u4151:
 11321  1428  2C67               	goto	l10961
 11322  1429                     u4150:
 11323                           	line	11
 11324                           	
 11325  1429                     l10943:	
 11326  1429  01AD               	clrf	(___lwdiv@counter)
 11327  142A  1403               	bsf	status,0
 11328  142B  0DAD               	rlf	(___lwdiv@counter),f
 11329                           	line	12
 11330  142C  2C39               	goto	l10949
 11331                           	
 11332  142D                     l7541:	
 11333                           	line	13
 11334                           	
 11335  142D                     l10945:	
 11336  142D  3001               	movlw	01h
 11337                           	
 11338  142E                     u4165:
 11339  142E  1003               	clrc
 11340  142F  0DA6               	rlf	(___lwdiv@divisor),f
 11341  1430  0DA7               	rlf	(___lwdiv@divisor+1),f
 11342  1431  3EFF               	addlw	-1
 11343  1432  1D03               	skipz
 11344  1433  2C2E               	goto	u4165
 11345                           	line	14
 11346                           	
 11347  1434                     l10947:	
 11348  1434  3001               	movlw	(01h)
 11349  1435  00AA               	movwf	(??___lwdiv+0)+0
 11350  1436  082A               	movf	(??___lwdiv+0)+0,w
 11351  1437  07AD               	addwf	(___lwdiv@counter),f
 11352  1438  2C39               	goto	l10949
 11353                           	line	15
 11354                           	
 11355  1439                     l7540:	
 11356                           	line	12
 11357                           	
 11358  1439                     l10949:	
 11359  1439  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 11360  143A  2C3C               	goto	u4171
 11361  143B  2C3D               	goto	u4170
 11362  143C                     u4171:
 11363  143C  2C2D               	goto	l10945
 11364  143D                     u4170:
 11365  143D  2C3F               	goto	l10951
 11366                           	
 11367  143E                     l7542:	
 11368  143E  2C3F               	goto	l10951
 11369                           	line	16
 11370                           	
 11371  143F                     l7543:	
 11372                           	line	17
 11373                           	
 11374  143F                     l10951:	
 11375  143F  3001               	movlw	01h
 11376                           	
 11377  1440                     u4185:
 11378  1440  1003               	clrc
 11379  1441  0DAB               	rlf	(___lwdiv@quotient),f
 11380  1442  0DAC               	rlf	(___lwdiv@quotient+1),f
 11381  1443  3EFF               	addlw	-1
 11382  1444  1D03               	skipz
 11383  1445  2C40               	goto	u4185
 11384                           	line	18
 11385  1446  0827               	movf	(___lwdiv@divisor+1),w
 11386  1447  0229               	subwf	(___lwdiv@dividend+1),w
 11387  1448  1D03               	skipz
 11388  1449  2C4C               	goto	u4195
 11389  144A  0826               	movf	(___lwdiv@divisor),w
 11390  144B  0228               	subwf	(___lwdiv@dividend),w
 11391  144C                     u4195:
 11392  144C  1C03               	skipc
 11393  144D  2C4F               	goto	u4191
 11394  144E  2C50               	goto	u4190
 11395  144F                     u4191:
 11396  144F  2C58               	goto	l10957
 11397  1450                     u4190:
 11398                           	line	19
 11399                           	
 11400  1450                     l10953:	
 11401  1450  0826               	movf	(___lwdiv@divisor),w
 11402  1451  02A8               	subwf	(___lwdiv@dividend),f
 11403  1452  0827               	movf	(___lwdiv@divisor+1),w
 11404  1453  1C03               	skipc
 11405  1454  03A9               	decf	(___lwdiv@dividend+1),f
 11406  1455  02A9               	subwf	(___lwdiv@dividend+1),f
 11407                           	line	20
 11408                           	
 11409  1456                     l10955:	
 11410  1456  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 11411  1457  2C58               	goto	l10957
 11412                           	line	21
 11413                           	
 11414  1458                     l7544:	
 11415                           	line	22
 11416                           	
 11417  1458                     l10957:	
 11418  1458  3001               	movlw	01h
 11419                           	
 11420  1459                     u4205:
 11421  1459  1003               	clrc
 11422  145A  0CA7               	rrf	(___lwdiv@divisor+1),f
 11423  145B  0CA6               	rrf	(___lwdiv@divisor),f
 11424  145C  3EFF               	addlw	-1
 11425  145D  1D03               	skipz
 11426  145E  2C59               	goto	u4205
 11427                           	line	23
 11428                           	
 11429  145F                     l10959:	
 11430  145F  3001               	movlw	low(01h)
 11431  1460  02AD               	subwf	(___lwdiv@counter),f
 11432  1461  1D03               	btfss	status,2
 11433  1462  2C64               	goto	u4211
 11434  1463  2C65               	goto	u4210
 11435  1464                     u4211:
 11436  1464  2C3F               	goto	l10951
 11437  1465                     u4210:
 11438  1465  2C67               	goto	l10961
 11439                           	
 11440  1466                     l7545:	
 11441  1466  2C67               	goto	l10961
 11442                           	line	24
 11443                           	
 11444  1467                     l7539:	
 11445                           	line	25
 11446                           	
 11447  1467                     l10961:	
 11448  1467  082C               	movf	(___lwdiv@quotient+1),w
 11449  1468  01A7               	clrf	(?___lwdiv+1)
 11450  1469  07A7               	addwf	(?___lwdiv+1)
 11451  146A  082B               	movf	(___lwdiv@quotient),w
 11452  146B  01A6               	clrf	(?___lwdiv)
 11453  146C  07A6               	addwf	(?___lwdiv)
 11454                           
 11455  146D  2C6E               	goto	l7546
 11456                           	
 11457  146E                     l10963:	
 11458                           	line	26
 11459                           	
 11460  146E                     l7546:	
 11461  146E  0008               	return
 11462                           	opt stack 0
 11463                           GLOBAL	__end_of___lwdiv
 11464  146F                     	__end_of___lwdiv:
 11465 ;; =============== function ___lwdiv ends ============
 11466                           
 11467                           	signat	___lwdiv,8314
 11468                           	global	___wmul
 11469                           psect	text1154,local,class=CODE,delta=2
 11470                           global __ptext1154
 11471  1123                     __ptext1154:
 11472                           
 11473 ;; *************** function ___wmul *****************
 11474 ;; Defined at:
 11475 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11478 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  product         2    4[BANK0 ] unsigned int 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  2    0[BANK0 ] unsigned int 
 11483 ;; Registers used:
 11484 ;;		wreg, status,2, status,0
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11490 ;;      Params:         0       4       0       0       0
 11491 ;;      Locals:         0       2       0       0       0
 11492 ;;      Temps:          0       0       0       0       0
 11493 ;;      Totals:         0       6       0       0       0
 11494 ;;Total ram usage:        6 bytes
 11495 ;; Hardware stack levels used:    1
 11496 ;; Hardware stack levels required when called:    3
 11497 ;; This function calls:
 11498 ;;		Nothing
 11499 ;; This function is called by:
 11500 ;;		_ADCconvert
 11501 ;;		_abs
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           psect	text1154
 11505                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11506                           	line	3
 11507                           	global	__size_of___wmul
 11508  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 11509                           	
 11510  1123                     ___wmul:	
 11511                           	opt	stack 2
 11512                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11513                           	line	4
 11514                           	
 11515  1123                     l10927:	
 11516  1123  1283               	bcf	status, 5	;RP0=0, select bank0
 11517  1124  1303               	bcf	status, 6	;RP1=0, select bank0
 11518  1125  01A4               	clrf	(___wmul@product)
 11519  1126  01A5               	clrf	(___wmul@product+1)
 11520  1127  2928               	goto	l10929
 11521                           	line	6
 11522                           	
 11523  1128                     l7533:	
 11524                           	line	7
 11525                           	
 11526  1128                     l10929:	
 11527  1128  1C20               	btfss	(___wmul@multiplier),(0)&7
 11528  1129  292B               	goto	u4111
 11529  112A  292C               	goto	u4110
 11530  112B                     u4111:
 11531  112B  2932               	goto	l7534
 11532  112C                     u4110:
 11533                           	line	8
 11534                           	
 11535  112C                     l10931:	
 11536  112C  0822               	movf	(___wmul@multiplicand),w
 11537  112D  07A4               	addwf	(___wmul@product),f
 11538  112E  1803               	skipnc
 11539  112F  0AA5               	incf	(___wmul@product+1),f
 11540  1130  0823               	movf	(___wmul@multiplicand+1),w
 11541  1131  07A5               	addwf	(___wmul@product+1),f
 11542                           	
 11543  1132                     l7534:	
 11544                           	line	9
 11545  1132  3001               	movlw	01h
 11546                           	
 11547  1133                     u4125:
 11548  1133  1003               	clrc
 11549  1134  0DA2               	rlf	(___wmul@multiplicand),f
 11550  1135  0DA3               	rlf	(___wmul@multiplicand+1),f
 11551  1136  3EFF               	addlw	-1
 11552  1137  1D03               	skipz
 11553  1138  2933               	goto	u4125
 11554                           	line	10
 11555                           	
 11556  1139                     l10933:	
 11557  1139  3001               	movlw	01h
 11558                           	
 11559  113A                     u4135:
 11560  113A  1003               	clrc
 11561  113B  0CA1               	rrf	(___wmul@multiplier+1),f
 11562  113C  0CA0               	rrf	(___wmul@multiplier),f
 11563  113D  3EFF               	addlw	-1
 11564  113E  1D03               	skipz
 11565  113F  293A               	goto	u4135
 11566                           	line	11
 11567  1140  0821               	movf	((___wmul@multiplier+1)),w
 11568  1141  0420               	iorwf	((___wmul@multiplier)),w
 11569  1142  1D03               	skipz
 11570  1143  2945               	goto	u4141
 11571  1144  2946               	goto	u4140
 11572  1145                     u4141:
 11573  1145  2928               	goto	l10929
 11574  1146                     u4140:
 11575  1146  2947               	goto	l10935
 11576                           	
 11577  1147                     l7535:	
 11578                           	line	12
 11579                           	
 11580  1147                     l10935:	
 11581  1147  0825               	movf	(___wmul@product+1),w
 11582  1148  01A1               	clrf	(?___wmul+1)
 11583  1149  07A1               	addwf	(?___wmul+1)
 11584  114A  0824               	movf	(___wmul@product),w
 11585  114B  01A0               	clrf	(?___wmul)
 11586  114C  07A0               	addwf	(?___wmul)
 11587                           
 11588  114D  294E               	goto	l7536
 11589                           	
 11590  114E                     l10937:	
 11591                           	line	13
 11592                           	
 11593  114E                     l7536:	
 11594  114E  0008               	return
 11595                           	opt stack 0
 11596                           GLOBAL	__end_of___wmul
 11597  114F                     	__end_of___wmul:
 11598 ;; =============== function ___wmul ends ============
 11599                           
 11600                           	signat	___wmul,8314
 11601                           	global	_ser_isrx
 11602                           psect	text1155,local,class=CODE,delta=2
 11603                           global __ptext1155
 11604  1065                     __ptext1155:
 11605                           
 11606 ;; *************** function _ser_isrx *****************
 11607 ;; Defined at:
 11608 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;		None               void
 11615 ;; Registers used:
 11616 ;;		wreg, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11622 ;;      Params:         0       0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0
 11625 ;;      Totals:         0       0       0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:    3
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_ser_getch
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           psect	text1155
 11636                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11637                           	line	45
 11638                           	global	__size_of_ser_isrx
 11639  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11640                           	
 11641  1065                     _ser_isrx:	
 11642                           	opt	stack 1
 11643                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11644                           	line	46
 11645                           	
 11646  1065                     l10879:	
 11647                           ;ser.c: 46: if(OERR) {
 11648  1065  1283               	bcf	status, 5	;RP0=0, select bank0
 11649  1066  1303               	bcf	status, 6	;RP1=0, select bank0
 11650  1067  1C98               	btfss	(193/8),(193)&7
 11651  1068  286A               	goto	u4041
 11652  1069  286B               	goto	u4040
 11653  106A                     u4041:
 11654  106A  2870               	goto	l10887
 11655  106B                     u4040:
 11656                           	line	47
 11657                           	
 11658  106B                     l10881:	
 11659                           ;ser.c: 47: CREN = 0;
 11660  106B  1218               	bcf	(196/8),(196)&7
 11661                           	line	48
 11662                           ;ser.c: 48: CREN = 1;
 11663  106C  1618               	bsf	(196/8),(196)&7
 11664                           	line	49
 11665                           	
 11666  106D                     l10883:	
 11667                           ;ser.c: 49: return 0;
 11668  106D  1003               	clrc
 11669                           	
 11670  106E  287D               	goto	l6788
 11671                           	
 11672  106F                     l10885:	
 11673  106F  287D               	goto	l6788
 11674                           	line	50
 11675                           	
 11676  1070                     l6787:	
 11677                           	line	51
 11678                           	
 11679  1070                     l10887:	
 11680                           ;ser.c: 50: }
 11681                           ;ser.c: 51: return (rxiptr!=rxoptr);
 11682  1070  1683               	bsf	status, 5	;RP0=1, select bank1
 11683  1071  1303               	bcf	status, 6	;RP1=0, select bank1
 11684  1072  0849               	movf	(_rxiptr)^080h,w	;volatile
 11685  1073  064A               	xorwf	(_rxoptr)^080h,w	;volatile
 11686  1074  1D03               	skipz
 11687  1075  2877               	goto	u4051
 11688  1076  2878               	goto	u4050
 11689  1077                     u4051:
 11690  1077  287A               	goto	l10891
 11691  1078                     u4050:
 11692                           	
 11693  1078                     l10889:	
 11694  1078  1003               	clrc
 11695                           	
 11696  1079  287D               	goto	l6788
 11697                           	
 11698  107A                     l10609:	
 11699                           	
 11700  107A                     l10891:	
 11701  107A  1403               	setc
 11702                           	
 11703  107B  287D               	goto	l6788
 11704                           	
 11705  107C                     l10611:	
 11706  107C  287D               	goto	l6788
 11707                           	
 11708  107D                     l10893:	
 11709                           	line	52
 11710                           	
 11711  107D                     l6788:	
 11712  107D  0008               	return
 11713                           	opt stack 0
 11714                           GLOBAL	__end_of_ser_isrx
 11715  107E                     	__end_of_ser_isrx:
 11716 ;; =============== function _ser_isrx ends ============
 11717                           
 11718                           	signat	_ser_isrx,88
 11719                           	global	_spi_transfer
 11720                           psect	text1156,local,class=CODE,delta=2
 11721                           global __ptext1156
 11722  1011                     __ptext1156:
 11723                           
 11724 ;; *************** function _spi_transfer *****************
 11725 ;; Defined at:
 11726 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;  data            1    wreg     unsigned char 
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;  data            1    2[BANK0 ] unsigned char 
 11731 ;;  temp            1    1[BANK0 ] unsigned char 
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  1    wreg      unsigned char 
 11734 ;; Registers used:
 11735 ;;		wreg
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11741 ;;      Params:         0       0       0       0       0
 11742 ;;      Locals:         0       2       0       0       0
 11743 ;;      Temps:          0       1       0       0       0
 11744 ;;      Totals:         0       3       0       0       0
 11745 ;;Total ram usage:        3 bytes
 11746 ;; Hardware stack levels used:    1
 11747 ;; Hardware stack levels required when called:    3
 11748 ;; This function calls:
 11749 ;;		Nothing
 11750 ;; This function is called by:
 11751 ;;		_rotate
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           psect	text1156
 11755                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11756                           	line	50
 11757                           	global	__size_of_spi_transfer
 11758  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 11759                           	
 11760  1011                     _spi_transfer:	
 11761                           	opt	stack 3
 11762                           ; Regs used in _spi_transfer: [wreg]
 11763                           ;spi_transfer@data stored from wreg
 11764  1011  1283               	bcf	status, 5	;RP0=0, select bank0
 11765  1012  1303               	bcf	status, 6	;RP1=0, select bank0
 11766  1013  00A2               	movwf	(spi_transfer@data)
 11767                           	line	51
 11768                           	
 11769  1014                     l10799:	
 11770                           ;steppermotor.c: 51: unsigned char temp = 0;
 11771  1014  01A1               	clrf	(spi_transfer@temp)
 11772                           	line	53
 11773                           ;steppermotor.c: 53: SSPIF = 0;
 11774  1015  118C               	bcf	(99/8),(99)&7
 11775                           	line	54
 11776                           	
 11777  1016                     l10801:	
 11778                           ;steppermotor.c: 54: SSPBUF = data;
 11779  1016  0822               	movf	(spi_transfer@data),w
 11780  1017  0093               	movwf	(19)	;volatile
 11781                           	line	56
 11782                           ;steppermotor.c: 56: while (SSPIF == 0);
 11783  1018  2819               	goto	l3721
 11784                           	
 11785  1019                     l3722:	
 11786                           	
 11787  1019                     l3721:	
 11788  1019  1D8C               	btfss	(99/8),(99)&7
 11789  101A  281C               	goto	u3851
 11790  101B  281D               	goto	u3850
 11791  101C                     u3851:
 11792  101C  2819               	goto	l3721
 11793  101D                     u3850:
 11794  101D  281E               	goto	l10803
 11795                           	
 11796  101E                     l3723:	
 11797                           	line	57
 11798                           	
 11799  101E                     l10803:	
 11800                           ;steppermotor.c: 57: temp = SSPBUF;
 11801  101E  0813               	movf	(19),w	;volatile
 11802  101F  00A0               	movwf	(??_spi_transfer+0)+0
 11803  1020  0820               	movf	(??_spi_transfer+0)+0,w
 11804  1021  00A1               	movwf	(spi_transfer@temp)
 11805                           	line	58
 11806                           	
 11807  1022                     l10805:	
 11808                           ;steppermotor.c: 58: SSPIF = 0;
 11809  1022  118C               	bcf	(99/8),(99)&7
 11810  1023  2824               	goto	l3724
 11811                           	line	60
 11812                           	
 11813  1024                     l10807:	
 11814                           	line	61
 11815                           ;steppermotor.c: 60: return temp;
 11816                           ;	Return value of _spi_transfer is never used
 11817                           	
 11818  1024                     l3724:	
 11819  1024  0008               	return
 11820                           	opt stack 0
 11821                           GLOBAL	__end_of_spi_transfer
 11822  1025                     	__end_of_spi_transfer:
 11823 ;; =============== function _spi_transfer ends ============
 11824                           
 11825                           	signat	_spi_transfer,4217
 11826                           	global	_ser_putch
 11827                           psect	text1157,local,class=CODE,delta=2
 11828                           global __ptext1157
 11829  11D3                     __ptext1157:
 11830                           
 11831 ;; *************** function _ser_putch *****************
 11832 ;; Defined at:
 11833 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  c               1    wreg     unsigned char 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  c               1    1[BANK0 ] unsigned char 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;		None               void
 11840 ;; Registers used:
 11841 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11847 ;;      Params:         0       0       0       0       0
 11848 ;;      Locals:         0       1       0       0       0
 11849 ;;      Temps:          0       1       0       0       0
 11850 ;;      Totals:         0       2       0       0       0
 11851 ;;Total ram usage:        2 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:    3
 11854 ;; This function calls:
 11855 ;;		Nothing
 11856 ;; This function is called by:
 11857 ;;		_ChargeMode
 11858 ;;		_robo_init
 11859 ;;		_robot_read
 11860 ;;		_RobotDrive
 11861 ;;		_robotTurn
 11862 ;;		_ser_puts
 11863 ;;		_ser_puts2
 11864 ;;		_ser_puthex
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           psect	text1157
 11868                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11869                           	line	70
 11870                           	global	__size_of_ser_putch
 11871  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 11872                           	
 11873  11D3                     _ser_putch:	
 11874                           	opt	stack 3
 11875                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 11876                           ;ser_putch@c stored from wreg
 11877  11D3  1283               	bcf	status, 5	;RP0=0, select bank0
 11878  11D4  1303               	bcf	status, 6	;RP1=0, select bank0
 11879  11D5  00A1               	movwf	(ser_putch@c)
 11880                           	line	71
 11881                           	
 11882  11D6                     l10787:	
 11883                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 11884  11D6  29D8               	goto	l10789
 11885                           	
 11886  11D7                     l6798:	
 11887                           	line	72
 11888                           ;ser.c: 72: continue;
 11889  11D7  29D8               	goto	l10789
 11890                           	
 11891  11D8                     l6797:	
 11892                           	line	71
 11893                           	
 11894  11D8                     l10789:	
 11895  11D8  1683               	bsf	status, 5	;RP0=1, select bank1
 11896  11D9  1303               	bcf	status, 6	;RP1=0, select bank1
 11897  11DA  084E               	movf	(_txiptr)^080h,w	;volatile
 11898  11DB  3E01               	addlw	01h
 11899  11DC  390F               	andlw	0Fh
 11900  11DD  064F               	xorwf	(_txoptr)^080h,w	;volatile
 11901  11DE  1903               	skipnz
 11902  11DF  29E1               	goto	u3841
 11903  11E0  29E2               	goto	u3840
 11904  11E1                     u3841:
 11905  11E1  29D8               	goto	l10789
 11906  11E2                     u3840:
 11907                           	
 11908  11E2                     l6799:	
 11909                           	line	73
 11910                           ;ser.c: 73: GIE=0;
 11911  11E2  138B               	bcf	(95/8),(95)&7
 11912                           	line	74
 11913                           	
 11914  11E3                     l10791:	
 11915                           ;ser.c: 74: txfifo[txiptr] = c;
 11916  11E3  1283               	bcf	status, 5	;RP0=0, select bank0
 11917  11E4  1303               	bcf	status, 6	;RP1=0, select bank0
 11918  11E5  0821               	movf	(ser_putch@c),w
 11919  11E6  00A0               	movwf	(??_ser_putch+0)+0
 11920  11E7  1683               	bsf	status, 5	;RP0=1, select bank1
 11921  11E8  1303               	bcf	status, 6	;RP1=0, select bank1
 11922  11E9  084E               	movf	(_txiptr)^080h,w
 11923  11EA  3EB0               	addlw	_txfifo&0ffh
 11924  11EB  0084               	movwf	fsr0
 11925  11EC  1283               	bcf	status, 5	;RP0=0, select bank0
 11926  11ED  1303               	bcf	status, 6	;RP1=0, select bank0
 11927  11EE  0820               	movf	(??_ser_putch+0)+0,w
 11928  11EF  1783               	bsf	status, 7	;select IRP bank3
 11929  11F0  0080               	movwf	indf
 11930                           	line	75
 11931                           	
 11932  11F1                     l10793:	
 11933                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 11934  11F1  1683               	bsf	status, 5	;RP0=1, select bank1
 11935  11F2  1303               	bcf	status, 6	;RP1=0, select bank1
 11936  11F3  084E               	movf	(_txiptr)^080h,w	;volatile
 11937  11F4  3E01               	addlw	01h
 11938  11F5  390F               	andlw	0Fh
 11939  11F6  1283               	bcf	status, 5	;RP0=0, select bank0
 11940  11F7  1303               	bcf	status, 6	;RP1=0, select bank0
 11941  11F8  00A0               	movwf	(??_ser_putch+0)+0
 11942  11F9  0820               	movf	(??_ser_putch+0)+0,w
 11943  11FA  1683               	bsf	status, 5	;RP0=1, select bank1
 11944  11FB  1303               	bcf	status, 6	;RP1=0, select bank1
 11945  11FC  00CE               	movwf	(_txiptr)^080h	;volatile
 11946                           	line	76
 11947                           	
 11948  11FD                     l10795:	
 11949                           ;ser.c: 76: TXIE=1;
 11950  11FD  160C               	bsf	(1124/8)^080h,(1124)&7
 11951                           	line	77
 11952                           	
 11953  11FE                     l10797:	
 11954                           ;ser.c: 77: GIE=1;
 11955  11FE  178B               	bsf	(95/8),(95)&7
 11956                           	line	78
 11957                           	
 11958  11FF                     l6800:	
 11959  11FF  0008               	return
 11960                           	opt stack 0
 11961                           GLOBAL	__end_of_ser_putch
 11962  1200                     	__end_of_ser_putch:
 11963 ;; =============== function _ser_putch ends ============
 11964                           
 11965                           	signat	_ser_putch,4216
 11966                           	global	_Menu
 11967                           psect	text1158,local,class=CODE,delta=2
 11968                           global __ptext1158
 11969  13D8                     __ptext1158:
 11970                           
 11971 ;; *************** function _Menu *****************
 11972 ;; Defined at:
 11973 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  BTN_input       1    wreg     unsigned char 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      unsigned char 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11987 ;;      Params:         0       0       0       0       0
 11988 ;;      Locals:         0       1       0       0       0
 11989 ;;      Temps:          0       0       0       0       0
 11990 ;;      Totals:         0       1       0       0       0
 11991 ;;Total ram usage:        1 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    3
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		_main
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           psect	text1158
 12001                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12002                           	line	201
 12003                           	global	__size_of_Menu
 12004  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 12005                           	
 12006  13D8                     _Menu:	
 12007                           	opt	stack 4
 12008                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 12009                           ;Menu@BTN_input stored from wreg
 12010  13D8  1283               	bcf	status, 5	;RP0=0, select bank0
 12011  13D9  1303               	bcf	status, 6	;RP1=0, select bank0
 12012  13DA  00A0               	movwf	(Menu@BTN_input)
 12013                           	line	202
 12014                           	
 12015  13DB                     l10763:	
 12016                           ;HMI.c: 202: switch (BTN_input)
 12017  13DB  2C0A               	goto	l10781
 12018                           	line	204
 12019                           ;HMI.c: 203: {
 12020                           ;HMI.c: 204: case 1:
 12021                           	
 12022  13DC                     l4532:	
 12023                           	line	206
 12024                           ;HMI.c: 206: break;
 12025  13DC  2C1C               	goto	l10783
 12026                           	line	207
 12027                           ;HMI.c: 207: case 2:
 12028                           	
 12029  13DD                     l4534:	
 12030                           	line	209
 12031                           ;HMI.c: 209: break;
 12032  13DD  2C1C               	goto	l10783
 12033                           	line	210
 12034                           ;HMI.c: 210: case 3:
 12035                           	
 12036  13DE                     l4535:	
 12037                           	line	211
 12038                           	
 12039  13DE                     l10765:	
 12040                           ;HMI.c: 211: pos--;
 12041  13DE  30FF               	movlw	low(-1)
 12042  13DF  1683               	bsf	status, 5	;RP0=1, select bank1
 12043  13E0  1303               	bcf	status, 6	;RP1=0, select bank1
 12044  13E1  07B4               	addwf	(_pos)^080h,f
 12045  13E2  1803               	skipnc
 12046  13E3  0AB5               	incf	(_pos+1)^080h,f
 12047  13E4  30FF               	movlw	high(-1)
 12048  13E5  07B5               	addwf	(_pos+1)^080h,f
 12049                           	line	212
 12050                           	
 12051  13E6                     l10767:	
 12052                           ;HMI.c: 212: if (pos < 0)
 12053  13E6  1FB5               	btfss	(_pos+1)^080h,7
 12054  13E7  2BE9               	goto	u3821
 12055  13E8  2BEA               	goto	u3820
 12056  13E9                     u3821:
 12057  13E9  2C1C               	goto	l10783
 12058  13EA                     u3820:
 12059                           	line	213
 12060                           	
 12061  13EA                     l10769:	
 12062                           ;HMI.c: 213: pos = 6 - 1;
 12063  13EA  3005               	movlw	low(05h)
 12064  13EB  00B4               	movwf	(_pos)^080h
 12065  13EC  3000               	movlw	high(05h)
 12066  13ED  00B5               	movwf	((_pos)^080h)+1
 12067  13EE  2C1C               	goto	l10783
 12068                           	
 12069  13EF                     l4536:	
 12070                           	line	215
 12071                           ;HMI.c: 215: break;
 12072  13EF  2C1C               	goto	l10783
 12073                           	line	216
 12074                           ;HMI.c: 216: case 4:
 12075                           	
 12076  13F0                     l4537:	
 12077                           	line	217
 12078                           	
 12079  13F0                     l10771:	
 12080                           ;HMI.c: 217: pos++;
 12081  13F0  3001               	movlw	low(01h)
 12082  13F1  1683               	bsf	status, 5	;RP0=1, select bank1
 12083  13F2  1303               	bcf	status, 6	;RP1=0, select bank1
 12084  13F3  07B4               	addwf	(_pos)^080h,f
 12085  13F4  1803               	skipnc
 12086  13F5  0AB5               	incf	(_pos+1)^080h,f
 12087  13F6  3000               	movlw	high(01h)
 12088  13F7  07B5               	addwf	(_pos+1)^080h,f
 12089                           	line	218
 12090                           ;HMI.c: 218: if (pos == 6)
 12091  13F8  3006               	movlw	06h
 12092  13F9  0634               	xorwf	(_pos)^080h,w
 12093  13FA  0435               	iorwf	(_pos+1)^080h,w
 12094  13FB  1D03               	skipz
 12095  13FC  2BFE               	goto	u3831
 12096  13FD  2BFF               	goto	u3830
 12097  13FE                     u3831:
 12098  13FE  2C1C               	goto	l10783
 12099  13FF                     u3830:
 12100                           	line	219
 12101                           	
 12102  13FF                     l10773:	
 12103                           ;HMI.c: 219: pos = 0;
 12104  13FF  01B4               	clrf	(_pos)^080h
 12105  1400  01B5               	clrf	(_pos+1)^080h
 12106  1401  2C1C               	goto	l10783
 12107                           	
 12108  1402                     l4538:	
 12109                           	line	221
 12110                           ;HMI.c: 221: break;
 12111  1402  2C1C               	goto	l10783
 12112                           	line	222
 12113                           ;HMI.c: 222: case 5:
 12114                           	
 12115  1403                     l4539:	
 12116                           	line	223
 12117                           	
 12118  1403                     l10775:	
 12119                           ;HMI.c: 223: return pos;
 12120  1403  1683               	bsf	status, 5	;RP0=1, select bank1
 12121  1404  1303               	bcf	status, 6	;RP1=0, select bank1
 12122  1405  0834               	movf	(_pos)^080h,w
 12123  1406  2C1E               	goto	l4540
 12124                           	
 12125  1407                     l10777:	
 12126  1407  2C1E               	goto	l4540
 12127                           	line	226
 12128                           ;HMI.c: 226: default:
 12129                           	
 12130  1408                     l4541:	
 12131                           	line	228
 12132                           ;HMI.c: 228: break;
 12133  1408  2C1C               	goto	l10783
 12134                           	line	229
 12135                           	
 12136  1409                     l10779:	
 12137                           ;HMI.c: 229: }
 12138  1409  2C1C               	goto	l10783
 12139                           	line	202
 12140                           	
 12141  140A                     l4531:	
 12142                           	
 12143  140A                     l10781:	
 12144  140A  1283               	bcf	status, 5	;RP0=0, select bank0
 12145  140B  0820               	movf	(Menu@BTN_input),w
 12146                           	; Switch size 1, requested type "space"
 12147                           ; Number of cases is 5, Range of values is 1 to 5
 12148                           ; switch strategies available:
 12149                           ; Name         Instructions Cycles
 12150                           ; simple_byte           16     9 (average)
 12151                           ; direct_byte           26    11 (fixed)
 12152                           ; jumptable            263     9 (fixed)
 12153                           ;	Chosen strategy is simple_byte
 12154                           
 12155                           	opt asmopt_off
 12156  140C  3A01               	xorlw	1^0	; case 1
 12157  140D  1903               	skipnz
 12158  140E  2C1C               	goto	l10783
 12159  140F  3A03               	xorlw	2^1	; case 2
 12160  1410  1903               	skipnz
 12161  1411  2C1C               	goto	l10783
 12162  1412  3A01               	xorlw	3^2	; case 3
 12163  1413  1903               	skipnz
 12164  1414  2BDE               	goto	l10765
 12165  1415  3A07               	xorlw	4^3	; case 4
 12166  1416  1903               	skipnz
 12167  1417  2BF0               	goto	l10771
 12168  1418  3A01               	xorlw	5^4	; case 5
 12169  1419  1903               	skipnz
 12170  141A  2C03               	goto	l10775
 12171  141B  2C1C               	goto	l10783
 12172                           	opt asmopt_on
 12173                           
 12174                           	line	229
 12175                           	
 12176  141C                     l4533:	
 12177                           	line	230
 12178                           	
 12179  141C                     l10783:	
 12180                           ;HMI.c: 230: return 255;
 12181  141C  30FF               	movlw	(0FFh)
 12182  141D  2C1E               	goto	l4540
 12183                           	
 12184  141E                     l10785:	
 12185                           	line	231
 12186                           	
 12187  141E                     l4540:	
 12188  141E  0008               	return
 12189                           	opt stack 0
 12190                           GLOBAL	__end_of_Menu
 12191  141F                     	__end_of_Menu:
 12192 ;; =============== function _Menu ends ============
 12193                           
 12194                           	signat	_Menu,4217
 12195                           	global	_ser_init
 12196                           psect	text1159,local,class=CODE,delta=2
 12197                           global __ptext1159
 12198  10CE                     __ptext1159:
 12199                           
 12200 ;; *************** function _ser_init *****************
 12201 ;; Defined at:
 12202 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;		None               void
 12209 ;; Registers used:
 12210 ;;		wreg, status,2, status,0
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12216 ;;      Params:         0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0
 12218 ;;      Temps:          0       1       0       0       0
 12219 ;;      Totals:         0       1       0       0       0
 12220 ;;Total ram usage:        1 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:    3
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		_init
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           psect	text1159
 12230                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 12231                           	line	113
 12232                           	global	__size_of_ser_init
 12233  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 12234                           	
 12235  10CE                     _ser_init:	
 12236                           	opt	stack 3
 12237                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 12238                           	line	114
 12239                           	
 12240  10CE                     l10737:	
 12241                           ;ser.c: 114: TRISC |= 0b10000000;
 12242  10CE  1683               	bsf	status, 5	;RP0=1, select bank1
 12243  10CF  1303               	bcf	status, 6	;RP1=0, select bank1
 12244  10D0  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 12245                           	line	115
 12246                           	
 12247  10D1                     l10739:	
 12248                           ;ser.c: 115: TRISC &= 0b10111111;
 12249  10D1  30BF               	movlw	(0BFh)
 12250  10D2  1283               	bcf	status, 5	;RP0=0, select bank0
 12251  10D3  1303               	bcf	status, 6	;RP1=0, select bank0
 12252  10D4  00A0               	movwf	(??_ser_init+0)+0
 12253  10D5  0820               	movf	(??_ser_init+0)+0,w
 12254  10D6  1683               	bsf	status, 5	;RP0=1, select bank1
 12255  10D7  1303               	bcf	status, 6	;RP1=0, select bank1
 12256  10D8  0587               	andwf	(135)^080h,f	;volatile
 12257                           	line	116
 12258                           	
 12259  10D9                     l10741:	
 12260                           ;ser.c: 116: BRGH=1;
 12261  10D9  1518               	bsf	(1218/8)^080h,(1218)&7
 12262                           	line	118
 12263                           	
 12264  10DA                     l10743:	
 12265                           ;ser.c: 118: SPBRG=20;
 12266  10DA  3014               	movlw	(014h)
 12267  10DB  0099               	movwf	(153)^080h	;volatile
 12268                           	line	121
 12269                           	
 12270  10DC                     l10745:	
 12271                           ;ser.c: 121: TX9=0;
 12272  10DC  1318               	bcf	(1222/8)^080h,(1222)&7
 12273                           	line	122
 12274                           	
 12275  10DD                     l10747:	
 12276                           ;ser.c: 122: RX9=0;
 12277  10DD  1283               	bcf	status, 5	;RP0=0, select bank0
 12278  10DE  1303               	bcf	status, 6	;RP1=0, select bank0
 12279  10DF  1318               	bcf	(198/8),(198)&7
 12280                           	line	124
 12281                           	
 12282  10E0                     l10749:	
 12283                           ;ser.c: 124: SYNC=0;
 12284  10E0  1683               	bsf	status, 5	;RP0=1, select bank1
 12285  10E1  1303               	bcf	status, 6	;RP1=0, select bank1
 12286  10E2  1218               	bcf	(1220/8)^080h,(1220)&7
 12287                           	line	125
 12288                           	
 12289  10E3                     l10751:	
 12290                           ;ser.c: 125: SPEN=1;
 12291  10E3  1283               	bcf	status, 5	;RP0=0, select bank0
 12292  10E4  1303               	bcf	status, 6	;RP1=0, select bank0
 12293  10E5  1798               	bsf	(199/8),(199)&7
 12294                           	line	126
 12295                           	
 12296  10E6                     l10753:	
 12297                           ;ser.c: 126: CREN=1;
 12298  10E6  1618               	bsf	(196/8),(196)&7
 12299                           	line	127
 12300                           	
 12301  10E7                     l10755:	
 12302                           ;ser.c: 127: TXIE=0;
 12303  10E7  1683               	bsf	status, 5	;RP0=1, select bank1
 12304  10E8  1303               	bcf	status, 6	;RP1=0, select bank1
 12305  10E9  120C               	bcf	(1124/8)^080h,(1124)&7
 12306                           	line	128
 12307                           	
 12308  10EA                     l10757:	
 12309                           ;ser.c: 128: RCIE=1;
 12310  10EA  168C               	bsf	(1125/8)^080h,(1125)&7
 12311                           	line	129
 12312                           	
 12313  10EB                     l10759:	
 12314                           ;ser.c: 129: TXEN=1;
 12315  10EB  1698               	bsf	(1221/8)^080h,(1221)&7
 12316                           	line	132
 12317                           	
 12318  10EC                     l10761:	
 12319                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 12320  10EC  3000               	movlw	(0)
 12321  10ED  00CF               	movwf	(_txoptr)^080h	;volatile
 12322  10EE  00CE               	movwf	(_txiptr)^080h	;volatile
 12323  10EF  00CA               	movwf	(_rxoptr)^080h	;volatile
 12324  10F0  1283               	bcf	status, 5	;RP0=0, select bank0
 12325  10F1  1303               	bcf	status, 6	;RP1=0, select bank0
 12326  10F2  00A0               	movwf	(??_ser_init+0)+0
 12327  10F3  0820               	movf	(??_ser_init+0)+0,w
 12328  10F4  1683               	bsf	status, 5	;RP0=1, select bank1
 12329  10F5  1303               	bcf	status, 6	;RP1=0, select bank1
 12330  10F6  00C9               	movwf	(_rxiptr)^080h	;volatile
 12331                           	line	133
 12332                           	
 12333  10F7                     l6822:	
 12334  10F7  0008               	return
 12335                           	opt stack 0
 12336                           GLOBAL	__end_of_ser_init
 12337  10F8                     	__end_of_ser_init:
 12338 ;; =============== function _ser_init ends ============
 12339                           
 12340                           	signat	_ser_init,88
 12341                           	global	_adc_read
 12342                           psect	text1160,local,class=CODE,delta=2
 12343                           global __ptext1160
 12344  10A5                     __ptext1160:
 12345                           
 12346 ;; *************** function _adc_read *****************
 12347 ;; Defined at:
 12348 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  2    0[BANK0 ] unsigned int 
 12355 ;; Registers used:
 12356 ;;		wreg, status,2, status,0
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12362 ;;      Params:         0       2       0       0       0
 12363 ;;      Locals:         0       2       0       0       0
 12364 ;;      Temps:          0       2       0       0       0
 12365 ;;      Totals:         0       6       0       0       0
 12366 ;;Total ram usage:        6 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:    3
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_adc_read_channel
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           psect	text1160
 12376                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 12377                           	line	76
 12378                           	global	__size_of_adc_read
 12379  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 12380                           	
 12381  10A5                     _adc_read:	
 12382                           	opt	stack 0
 12383                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 12384                           	line	79
 12385                           	
 12386  10A5                     l10617:	
 12387                           ;adc.c: 77: volatile unsigned int adc_value;
 12388                           ;adc.c: 79: ADRESH = 0;
 12389  10A5  1283               	bcf	status, 5	;RP0=0, select bank0
 12390  10A6  1303               	bcf	status, 6	;RP1=0, select bank0
 12391  10A7  019E               	clrf	(30)	;volatile
 12392                           	line	81
 12393                           	
 12394  10A8                     l10619:	
 12395                           ;adc.c: 81: GO = 1;
 12396  10A8  151F               	bsf	(250/8),(250)&7
 12397                           	line	82
 12398                           ;adc.c: 82: while(GO) continue;
 12399  10A9  28AA               	goto	l703
 12400                           	
 12401  10AA                     l704:	
 12402                           	
 12403  10AA                     l703:	
 12404  10AA  191F               	btfsc	(250/8),(250)&7
 12405  10AB  28AD               	goto	u3631
 12406  10AC  28AE               	goto	u3630
 12407  10AD                     u3631:
 12408  10AD  28AA               	goto	l703
 12409  10AE                     u3630:
 12410                           	
 12411  10AE                     l705:	
 12412                           	line	83
 12413                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12414  10AE  0000               nop ;#
 12415                           	line	84
 12416                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12417  10AF  0000               nop ;#
 12418                           	line	85
 12419                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12420  10B0  0000               nop ;#
 12421                           psect	text1160
 12422                           	line	88
 12423                           	
 12424  10B1                     l10621:	
 12425                           ;adc.c: 88: adc_value = ADRESH;
 12426  10B1  1283               	bcf	status, 5	;RP0=0, select bank0
 12427  10B2  1303               	bcf	status, 6	;RP1=0, select bank0
 12428  10B3  081E               	movf	(30),w	;volatile
 12429  10B4  00A2               	movwf	(??_adc_read+0)+0
 12430  10B5  01A3               	clrf	(??_adc_read+0)+0+1
 12431  10B6  0822               	movf	0+(??_adc_read+0)+0,w
 12432  10B7  00A4               	movwf	(adc_read@adc_value)	;volatile
 12433  10B8  0823               	movf	1+(??_adc_read+0)+0,w
 12434  10B9  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 12435                           	line	89
 12436                           ;adc.c: 89: adc_value <<= 1;
 12437  10BA  3001               	movlw	01h
 12438                           	
 12439  10BB                     u3645:
 12440  10BB  1003               	clrc
 12441  10BC  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 12442  10BD  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 12443  10BE  3EFF               	addlw	-1
 12444  10BF  1D03               	skipz
 12445  10C0  28BB               	goto	u3645
 12446                           	line	90
 12447                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 12448  10C1  1683               	bsf	status, 5	;RP0=1, select bank1
 12449  10C2  1303               	bcf	status, 6	;RP1=0, select bank1
 12450  10C3  081E               	movf	(158)^080h,w	;volatile
 12451                           	line	93
 12452                           	
 12453  10C4                     l10623:	
 12454                           ;adc.c: 93: return (adc_value);
 12455  10C4  1283               	bcf	status, 5	;RP0=0, select bank0
 12456  10C5  1303               	bcf	status, 6	;RP1=0, select bank0
 12457  10C6  0825               	movf	(adc_read@adc_value+1),w	;volatile
 12458  10C7  01A1               	clrf	(?_adc_read+1)
 12459  10C8  07A1               	addwf	(?_adc_read+1)
 12460  10C9  0824               	movf	(adc_read@adc_value),w	;volatile
 12461  10CA  01A0               	clrf	(?_adc_read)
 12462  10CB  07A0               	addwf	(?_adc_read)
 12463                           
 12464  10CC  28CD               	goto	l706
 12465                           	
 12466  10CD                     l10625:	
 12467                           	line	94
 12468                           	
 12469  10CD                     l706:	
 12470  10CD  0008               	return
 12471                           	opt stack 0
 12472                           GLOBAL	__end_of_adc_read
 12473  10CE                     	__end_of_adc_read:
 12474 ;; =============== function _adc_read ends ============
 12475                           
 12476                           	signat	_adc_read,90
 12477                           	global	_isr1
 12478                           psect	text1161,local,class=CODE,delta=2
 12479                           global __ptext1161
 12480  09C7                     __ptext1161:
 12481                           
 12482 ;; *************** function _isr1 *****************
 12483 ;; Defined at:
 12484 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;		None
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;		None               void
 12491 ;; Registers used:
 12492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12498 ;;      Params:         0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0
 12500 ;;      Temps:          5       0       0       0       0
 12501 ;;      Totals:         5       0       0       0       0
 12502 ;;Total ram usage:        5 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; Hardware stack levels required when called:    2
 12505 ;; This function calls:
 12506 ;;		i1___lwmod
 12507 ;;		_ReadButtons
 12508 ;; This function is called by:
 12509 ;;		Interrupt level 1
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           psect	text1161
 12513                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 12514                           	line	109
 12515                           	global	__size_of_isr1
 12516  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 12517                           	
 12518  09C7                     _isr1:	
 12519                           	opt	stack 0
 12520                           ; Regs used in _isr1: [allreg]
 12521                           psect	intentry,class=CODE,delta=2
 12522                           global __pintentry
 12523  0004                     __pintentry:
 12524                           global interrupt_function
 12525  0004                     interrupt_function:
 12526                           	global saved_w
 12527  007E                     	saved_w	set	btemp+0
 12528  0004  00FE               	movwf	saved_w
 12529  0005  0E03               	swapf	status,w
 12530  0006  00F9               	movwf	(??_isr1+1)
 12531  0007  0804               	movf	fsr0,w
 12532  0008  00FA               	movwf	(??_isr1+2)
 12533  0009  080A               	movf	pclath,w
 12534  000A  00FB               	movwf	(??_isr1+3)
 12535  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 12536  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 12537  000D  087F               	movf	btemp+1,w
 12538  000E  00FC               	movwf	(??_isr1+4)
 12539  000F  120A  158A  29C7   	ljmp	_isr1
 12540                           psect	text1161
 12541                           	line	110
 12542                           	
 12543  09C7                     i1l10653:	
 12544                           ;Main.c: 110: if(TMR0IF)
 12545  09C7  1D0B               	btfss	(90/8),(90)&7
 12546  09C8  29CA               	goto	u368_21
 12547  09C9  29CB               	goto	u368_20
 12548  09CA                     u368_21:
 12549  09CA  2A1A               	goto	i1l10675
 12550  09CB                     u368_20:
 12551                           	line	112
 12552                           	
 12553  09CB                     i1l10655:	
 12554                           ;Main.c: 111: {
 12555                           ;Main.c: 112: TMR0IF = 0;
 12556  09CB  110B               	bcf	(90/8),(90)&7
 12557                           	line	113
 12558                           	
 12559  09CC                     i1l10657:	
 12560                           ;Main.c: 113: TMR0 = 100;
 12561  09CC  3064               	movlw	(064h)
 12562  09CD  0081               	movwf	(1)	;volatile
 12563                           	line	115
 12564                           ;Main.c: 115: RTC_Counter++;
 12565  09CE  3001               	movlw	low(01h)
 12566  09CF  1683               	bsf	status, 5	;RP0=1, select bank1
 12567  09D0  1303               	bcf	status, 6	;RP1=0, select bank1
 12568  09D1  07A6               	addwf	(_RTC_Counter)^080h,f	;volatile
 12569  09D2  1803               	skipnc
 12570  09D3  0AA7               	incf	(_RTC_Counter+1)^080h,f	;volatile
 12571  09D4  3000               	movlw	high(01h)
 12572  09D5  07A7               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 12573                           	line	118
 12574                           	
 12575  09D6                     i1l10659:	
 12576                           ;Main.c: 118: RTC_FLAG_1MS = 1;
 12577  09D6  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 12578                           	line	119
 12579                           	
 12580  09D7                     i1l10661:	
 12581                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
 12582  09D7  30FA               	movlw	low(0FAh)
 12583  09D8  00F2               	movwf	(?i1___lwmod)
 12584  09D9  3000               	movlw	high(0FAh)
 12585  09DA  00F3               	movwf	((?i1___lwmod))+1
 12586  09DB  0827               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12587  09DC  01F5               	clrf	1+(?i1___lwmod)+02h
 12588  09DD  07F5               	addwf	1+(?i1___lwmod)+02h
 12589  09DE  0826               	movf	(_RTC_Counter)^080h,w	;volatile
 12590  09DF  01F4               	clrf	0+(?i1___lwmod)+02h
 12591  09E0  07F4               	addwf	0+(?i1___lwmod)+02h
 12592                           
 12593  09E1  160A  118A  2308   	fcall	i1___lwmod
              120A  158A         
 12594  09E6  0873               	movf	((1+(?i1___lwmod))),w
 12595  09E7  0472               	iorwf	((0+(?i1___lwmod))),w
 12596  09E8  1D03               	skipz
 12597  09E9  29EB               	goto	u369_21
 12598  09EA  29EC               	goto	u369_20
 12599  09EB                     u369_21:
 12600  09EB  29EE               	goto	i1l10665
 12601  09EC                     u369_20:
 12602                           	line	121
 12603                           	
 12604  09EC                     i1l10663:	
 12605                           ;Main.c: 120: {
 12606                           ;Main.c: 121: RTC_FLAG_250MS = 1;
 12607  09EC  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 12608  09ED  29EE               	goto	i1l10665
 12609                           	line	122
 12610                           	
 12611  09EE                     i1l2221:	
 12612                           	line	123
 12613                           	
 12614  09EE                     i1l10665:	
 12615                           ;Main.c: 122: }
 12616                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
 12617  09EE  30F4               	movlw	low(01F4h)
 12618  09EF  00F2               	movwf	(?i1___lwmod)
 12619  09F0  3001               	movlw	high(01F4h)
 12620  09F1  00F3               	movwf	((?i1___lwmod))+1
 12621  09F2  1683               	bsf	status, 5	;RP0=1, select bank1
 12622  09F3  1303               	bcf	status, 6	;RP1=0, select bank1
 12623  09F4  0827               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12624  09F5  01F5               	clrf	1+(?i1___lwmod)+02h
 12625  09F6  07F5               	addwf	1+(?i1___lwmod)+02h
 12626  09F7  0826               	movf	(_RTC_Counter)^080h,w	;volatile
 12627  09F8  01F4               	clrf	0+(?i1___lwmod)+02h
 12628  09F9  07F4               	addwf	0+(?i1___lwmod)+02h
 12629                           
 12630  09FA  160A  118A  2308   	fcall	i1___lwmod
              120A  158A         
 12631  09FF  0873               	movf	((1+(?i1___lwmod))),w
 12632  0A00  0472               	iorwf	((0+(?i1___lwmod))),w
 12633  0A01  1D03               	skipz
 12634  0A02  2A04               	goto	u370_21
 12635  0A03  2A05               	goto	u370_20
 12636  0A04                     u370_21:
 12637  0A04  2A0B               	goto	i1l10671
 12638  0A05                     u370_20:
 12639                           	line	125
 12640                           	
 12641  0A05                     i1l10667:	
 12642                           ;Main.c: 124: {
 12643                           ;Main.c: 125: RTC_FLAG_500MS = 1;
 12644  0A05  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 12645                           	line	126
 12646                           	
 12647  0A06                     i1l10669:	
 12648                           ;Main.c: 126: RB0 ^= 0x01;
 12649  0A06  1283               	bcf	status, 5	;RP0=0, select bank0
 12650  0A07  1303               	bcf	status, 6	;RP1=0, select bank0
 12651  0A08  3001               	movlw	1<<((48)&7)
 12652  0A09  0686               	xorwf	((48)/8),f
 12653  0A0A  2A0B               	goto	i1l10671
 12654                           	line	127
 12655                           	
 12656  0A0B                     i1l2222:	
 12657                           	line	128
 12658                           	
 12659  0A0B                     i1l10671:	
 12660                           ;Main.c: 127: }
 12661                           ;Main.c: 128: if (buttonPressed == 0)
 12662  0A0B  08FD               	movf	(_buttonPressed),f
 12663  0A0C  1D03               	skipz	;volatile
 12664  0A0D  2A0F               	goto	u371_21
 12665  0A0E  2A10               	goto	u371_20
 12666  0A0F                     u371_21:
 12667  0A0F  2A1A               	goto	i1l10675
 12668  0A10                     u371_20:
 12669                           	line	130
 12670                           	
 12671  0A10                     i1l10673:	
 12672                           ;Main.c: 129: {
 12673                           ;Main.c: 130: buttonPressed = ReadButtons();
 12674  0A10  160A  118A  222F   	fcall	_ReadButtons
              120A  158A         
 12675  0A15  00F8               	movwf	(??_isr1+0)+0
 12676  0A16  0878               	movf	(??_isr1+0)+0,w
 12677  0A17  00FD               	movwf	(_buttonPressed)	;volatile
 12678  0A18  2A1A               	goto	i1l10675
 12679                           	line	131
 12680                           	
 12681  0A19                     i1l2223:	
 12682  0A19  2A1A               	goto	i1l10675
 12683                           	line	132
 12684                           	
 12685  0A1A                     i1l2220:	
 12686                           	line	133
 12687                           	
 12688  0A1A                     i1l10675:	
 12689                           ;Main.c: 131: }
 12690                           ;Main.c: 132: }
 12691                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 12692  0A1A  1283               	bcf	status, 5	;RP0=0, select bank0
 12693  0A1B  1303               	bcf	status, 6	;RP1=0, select bank0
 12694  0A1C  1E8C               	btfss	(101/8),(101)&7
 12695  0A1D  2A1F               	goto	u372_21
 12696  0A1E  2A20               	goto	u372_20
 12697  0A1F                     u372_21:
 12698  0A1F  2A3C               	goto	i1l10685
 12699  0A20                     u372_20:
 12700                           	
 12701  0A20                     i1l10677:	
 12702  0A20  081A               	movf	(26),w	;volatile
 12703  0A21  00F8               	movwf	(??_isr1+0)+0
 12704  0A22  1683               	bsf	status, 5	;RP0=1, select bank1
 12705  0A23  1303               	bcf	status, 6	;RP1=0, select bank1
 12706  0A24  0849               	movf	(_rxiptr)^080h,w
 12707  0A25  3EA0               	addlw	_rxfifo&0ffh
 12708  0A26  0084               	movwf	fsr0
 12709  0A27  0878               	movf	(??_isr1+0)+0,w
 12710  0A28  1783               	bsf	status, 7	;select IRP bank3
 12711  0A29  0080               	movwf	indf
 12712                           	
 12713  0A2A                     i1l10679:	
 12714  0A2A  0849               	movf	(_rxiptr)^080h,w	;volatile
 12715  0A2B  3E01               	addlw	01h
 12716  0A2C  390F               	andlw	0Fh
 12717  0A2D  00F8               	movwf	(??_isr1+0)+0
 12718  0A2E  0878               	movf	(??_isr1+0)+0,w
 12719  0A2F  00CB               	movwf	(_ser_tmp)^080h
 12720                           	
 12721  0A30                     i1l10681:	
 12722  0A30  084B               	movf	(_ser_tmp)^080h,w
 12723  0A31  064A               	xorwf	(_rxoptr)^080h,w	;volatile
 12724  0A32  1903               	skipnz
 12725  0A33  2A35               	goto	u373_21
 12726  0A34  2A36               	goto	u373_20
 12727  0A35                     u373_21:
 12728  0A35  2A3C               	goto	i1l10685
 12729  0A36                     u373_20:
 12730                           	
 12731  0A36                     i1l10683:	
 12732  0A36  084B               	movf	(_ser_tmp)^080h,w
 12733  0A37  00F8               	movwf	(??_isr1+0)+0
 12734  0A38  0878               	movf	(??_isr1+0)+0,w
 12735  0A39  00C9               	movwf	(_rxiptr)^080h	;volatile
 12736  0A3A  2A3C               	goto	i1l10685
 12737                           	
 12738  0A3B                     i1l2225:	
 12739  0A3B  2A3C               	goto	i1l10685
 12740                           	
 12741  0A3C                     i1l2224:	
 12742                           	
 12743  0A3C                     i1l10685:	
 12744  0A3C  1283               	bcf	status, 5	;RP0=0, select bank0
 12745  0A3D  1E0C               	btfss	(100/8),(100)&7
 12746  0A3E  2A40               	goto	u374_21
 12747  0A3F  2A41               	goto	u374_20
 12748  0A40                     u374_21:
 12749  0A40  2A62               	goto	i1l2228
 12750  0A41                     u374_20:
 12751                           	
 12752  0A41                     i1l10687:	
 12753  0A41  1683               	bsf	status, 5	;RP0=1, select bank1
 12754  0A42  1303               	bcf	status, 6	;RP1=0, select bank1
 12755  0A43  1E0C               	btfss	(1124/8)^080h,(1124)&7
 12756  0A44  2A46               	goto	u375_21
 12757  0A45  2A47               	goto	u375_20
 12758  0A46                     u375_21:
 12759  0A46  2A62               	goto	i1l2228
 12760  0A47                     u375_20:
 12761                           	
 12762  0A47                     i1l10689:	
 12763  0A47  084F               	movf	(_txoptr)^080h,w
 12764  0A48  3EB0               	addlw	_txfifo&0ffh
 12765  0A49  0084               	movwf	fsr0
 12766  0A4A  1783               	bsf	status, 7	;select IRP bank3
 12767  0A4B  0800               	movf	indf,w
 12768  0A4C  1283               	bcf	status, 5	;RP0=0, select bank0
 12769  0A4D  1303               	bcf	status, 6	;RP1=0, select bank0
 12770  0A4E  0099               	movwf	(25)	;volatile
 12771                           	
 12772  0A4F                     i1l10691:	
 12773  0A4F  3001               	movlw	(01h)
 12774  0A50  00F8               	movwf	(??_isr1+0)+0
 12775  0A51  0878               	movf	(??_isr1+0)+0,w
 12776  0A52  1683               	bsf	status, 5	;RP0=1, select bank1
 12777  0A53  1303               	bcf	status, 6	;RP1=0, select bank1
 12778  0A54  07CF               	addwf	(_txoptr)^080h,f	;volatile
 12779                           	
 12780  0A55                     i1l10693:	
 12781  0A55  300F               	movlw	(0Fh)
 12782  0A56  00F8               	movwf	(??_isr1+0)+0
 12783  0A57  0878               	movf	(??_isr1+0)+0,w
 12784  0A58  05CF               	andwf	(_txoptr)^080h,f	;volatile
 12785                           	
 12786  0A59                     i1l10695:	
 12787  0A59  084F               	movf	(_txoptr)^080h,w	;volatile
 12788  0A5A  064E               	xorwf	(_txiptr)^080h,w	;volatile
 12789  0A5B  1D03               	skipz
 12790  0A5C  2A5E               	goto	u376_21
 12791  0A5D  2A5F               	goto	u376_20
 12792  0A5E                     u376_21:
 12793  0A5E  2A62               	goto	i1l2228
 12794  0A5F                     u376_20:
 12795                           	
 12796  0A5F                     i1l10697:	
 12797  0A5F  120C               	bcf	(1124/8)^080h,(1124)&7
 12798  0A60  2A62               	goto	i1l2228
 12799                           	
 12800  0A61                     i1l2227:	
 12801  0A61  2A62               	goto	i1l2228
 12802                           	
 12803  0A62                     i1l2226:	
 12804                           	line	134
 12805                           	
 12806  0A62                     i1l2228:	
 12807  0A62  087C               	movf	(??_isr1+4),w
 12808  0A63  1283               	bcf	status, 5	;RP0=0, select bank0
 12809  0A64  00FF               	movwf	btemp+1
 12810  0A65  087B               	movf	(??_isr1+3),w
 12811  0A66  008A               	movwf	pclath
 12812  0A67  087A               	movf	(??_isr1+2),w
 12813  0A68  0084               	movwf	fsr0
 12814  0A69  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 12815  0A6A  0083               	movwf	status
 12816  0A6B  0EFE               	swapf	saved_w,f
 12817  0A6C  0E7E               	swapf	saved_w,w
 12818  0A6D  0009               	retfie
 12819                           	opt stack 0
 12820                           GLOBAL	__end_of_isr1
 12821  0A6E                     	__end_of_isr1:
 12822 ;; =============== function _isr1 ends ============
 12823                           
 12824                           	signat	_isr1,88
 12825                           	global	_ReadButtons
 12826                           psect	text1162,local,class=CODE,delta=2
 12827                           global __ptext1162
 12828  122F                     __ptext1162:
 12829                           
 12830 ;; *************** function _ReadButtons *****************
 12831 ;; Defined at:
 12832 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;		None
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;		None
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1    wreg      unsigned char 
 12839 ;; Registers used:
 12840 ;;		wreg, status,2, status,0, pclath, cstack
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12846 ;;      Params:         0       0       0       0       0
 12847 ;;      Locals:         0       0       0       0       0
 12848 ;;      Temps:          0       0       0       0       0
 12849 ;;      Totals:         0       0       0       0       0
 12850 ;;Total ram usage:        0 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    1
 12853 ;; This function calls:
 12854 ;;		_Debounce
 12855 ;; This function is called by:
 12856 ;;		_isr1
 12857 ;; This function uses a non-reentrant model
 12858 ;;
 12859                           psect	text1162
 12860                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12861                           	line	159
 12862                           	global	__size_of_ReadButtons
 12863  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 12864                           	
 12865  122F                     _ReadButtons:	
 12866                           	opt	stack 0
 12867                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 12868                           	line	161
 12869                           	
 12870  122F                     i1l10699:	
 12871                           ;HMI.c: 161: Debounce();
 12872  122F  160A  118A  2768   	fcall	_Debounce
              160A  118A         
 12873                           	line	163
 12874                           	
 12875  1234                     i1l10701:	
 12876                           ;HMI.c: 163: if(UpPressed)
 12877  1234  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 12878  1235  2A37               	goto	u377_21
 12879  1236  2A38               	goto	u377_20
 12880  1237                     u377_21:
 12881  1237  2A3C               	goto	i1l4523
 12882  1238                     u377_20:
 12883                           	line	165
 12884                           	
 12885  1238                     i1l10703:	
 12886                           ;HMI.c: 164: {
 12887                           ;HMI.c: 165: UpPressed = 0;
 12888  1238  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 12889                           	line	166
 12890                           	
 12891  1239                     i1l10705:	
 12892                           ;HMI.c: 166: return 1;
 12893  1239  3001               	movlw	(01h)
 12894  123A  2A5E               	goto	i1l4524
 12895                           	
 12896  123B                     i1l10707:	
 12897  123B  2A5E               	goto	i1l4524
 12898                           	line	168
 12899                           	
 12900  123C                     i1l4523:	
 12901                           	line	170
 12902                           ;HMI.c: 168: }
 12903                           ;HMI.c: 170: if(DownPressed)
 12904  123C  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 12905  123D  2A3F               	goto	u378_21
 12906  123E  2A40               	goto	u378_20
 12907  123F                     u378_21:
 12908  123F  2A44               	goto	i1l4525
 12909  1240                     u378_20:
 12910                           	line	172
 12911                           	
 12912  1240                     i1l10709:	
 12913                           ;HMI.c: 171: {
 12914                           ;HMI.c: 172: DownPressed = 0;
 12915  1240  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 12916                           	line	173
 12917                           	
 12918  1241                     i1l10711:	
 12919                           ;HMI.c: 173: return 2;
 12920  1241  3002               	movlw	(02h)
 12921  1242  2A5E               	goto	i1l4524
 12922                           	
 12923  1243                     i1l10713:	
 12924  1243  2A5E               	goto	i1l4524
 12925                           	line	175
 12926                           	
 12927  1244                     i1l4525:	
 12928                           	line	176
 12929                           ;HMI.c: 175: }
 12930                           ;HMI.c: 176: if(LeftPressed)
 12931  1244  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 12932  1245  2A47               	goto	u379_21
 12933  1246  2A48               	goto	u379_20
 12934  1247                     u379_21:
 12935  1247  2A4C               	goto	i1l4526
 12936  1248                     u379_20:
 12937                           	line	178
 12938                           	
 12939  1248                     i1l10715:	
 12940                           ;HMI.c: 177: {
 12941                           ;HMI.c: 178: LeftPressed = 0;
 12942  1248  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 12943                           	line	179
 12944                           	
 12945  1249                     i1l10717:	
 12946                           ;HMI.c: 179: return 3;
 12947  1249  3003               	movlw	(03h)
 12948  124A  2A5E               	goto	i1l4524
 12949                           	
 12950  124B                     i1l10719:	
 12951  124B  2A5E               	goto	i1l4524
 12952                           	line	181
 12953                           	
 12954  124C                     i1l4526:	
 12955                           	line	182
 12956                           ;HMI.c: 181: }
 12957                           ;HMI.c: 182: if(RightPressed)
 12958  124C  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 12959  124D  2A4F               	goto	u380_21
 12960  124E  2A50               	goto	u380_20
 12961  124F                     u380_21:
 12962  124F  2A54               	goto	i1l4527
 12963  1250                     u380_20:
 12964                           	line	184
 12965                           	
 12966  1250                     i1l10721:	
 12967                           ;HMI.c: 183: {
 12968                           ;HMI.c: 184: RightPressed = 0;
 12969  1250  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 12970                           	line	185
 12971                           	
 12972  1251                     i1l10723:	
 12973                           ;HMI.c: 185: return 4;
 12974  1251  3004               	movlw	(04h)
 12975  1252  2A5E               	goto	i1l4524
 12976                           	
 12977  1253                     i1l10725:	
 12978  1253  2A5E               	goto	i1l4524
 12979                           	line	187
 12980                           	
 12981  1254                     i1l4527:	
 12982                           	line	189
 12983                           ;HMI.c: 187: }
 12984                           ;HMI.c: 189: if(CenterPressed)
 12985  1254  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 12986  1255  2A57               	goto	u381_21
 12987  1256  2A58               	goto	u381_20
 12988  1257                     u381_21:
 12989  1257  2A5C               	goto	i1l10733
 12990  1258                     u381_20:
 12991                           	line	191
 12992                           	
 12993  1258                     i1l10727:	
 12994                           ;HMI.c: 190: {
 12995                           ;HMI.c: 191: CenterPressed = 0;
 12996  1258  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 12997                           	line	192
 12998                           	
 12999  1259                     i1l10729:	
 13000                           ;HMI.c: 192: return 5;
 13001  1259  3005               	movlw	(05h)
 13002  125A  2A5E               	goto	i1l4524
 13003                           	
 13004  125B                     i1l10731:	
 13005  125B  2A5E               	goto	i1l4524
 13006                           	line	194
 13007                           	
 13008  125C                     i1l4528:	
 13009                           	line	195
 13010                           	
 13011  125C                     i1l10733:	
 13012                           ;HMI.c: 194: }
 13013                           ;HMI.c: 195: return 0;
 13014  125C  3000               	movlw	(0)
 13015  125D  2A5E               	goto	i1l4524
 13016                           	
 13017  125E                     i1l10735:	
 13018                           	line	196
 13019                           	
 13020  125E                     i1l4524:	
 13021  125E  0008               	return
 13022                           	opt stack 0
 13023                           GLOBAL	__end_of_ReadButtons
 13024  125F                     	__end_of_ReadButtons:
 13025 ;; =============== function _ReadButtons ends ============
 13026                           
 13027                           	signat	_ReadButtons,89
 13028                           	global	i1___lwmod
 13029                           psect	text1163,local,class=CODE,delta=2
 13030                           global __ptext1163
 13031  1308                     __ptext1163:
 13032                           
 13033 ;; *************** function i1___lwmod *****************
 13034 ;; Defined at:
 13035 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  __lwmod         2    0[COMMON] unsigned int 
 13038 ;;  __lwmod         2    2[COMMON] unsigned int 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;  __lwmod         1    5[COMMON] unsigned char 
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  2    0[COMMON] unsigned int 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13050 ;;      Params:         4       0       0       0       0
 13051 ;;      Locals:         1       0       0       0       0
 13052 ;;      Temps:          1       0       0       0       0
 13053 ;;      Totals:         6       0       0       0       0
 13054 ;;Total ram usage:        6 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; This function calls:
 13057 ;;		Nothing
 13058 ;; This function is called by:
 13059 ;;		_isr1
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           psect	text1163
 13063                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13064                           	line	5
 13065                           	global	__size_ofi1___lwmod
 13066  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 13067                           	
 13068  1308                     i1___lwmod:	
 13069                           	opt	stack 1
 13070                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 13071                           	line	8
 13072                           	
 13073  1308                     i1l11249:	
 13074  1308  0873               	movf	(i1___lwmod@divisor+1),w
 13075  1309  0472               	iorwf	(i1___lwmod@divisor),w
 13076  130A  1903               	skipnz
 13077  130B  2B0D               	goto	u494_21
 13078  130C  2B0E               	goto	u494_20
 13079  130D                     u494_21:
 13080  130D  2B44               	goto	i1l11267
 13081  130E                     u494_20:
 13082                           	line	9
 13083                           	
 13084  130E                     i1l11251:	
 13085  130E  01F7               	clrf	(i1___lwmod@counter)
 13086  130F  1403               	bsf	status,0
 13087  1310  0DF7               	rlf	(i1___lwmod@counter),f
 13088                           	line	10
 13089  1311  2B1E               	goto	i1l11257
 13090                           	
 13091  1312                     i1l7551:	
 13092                           	line	11
 13093                           	
 13094  1312                     i1l11253:	
 13095  1312  3001               	movlw	01h
 13096                           	
 13097  1313                     u495_25:
 13098  1313  1003               	clrc
 13099  1314  0DF2               	rlf	(i1___lwmod@divisor),f
 13100  1315  0DF3               	rlf	(i1___lwmod@divisor+1),f
 13101  1316  3EFF               	addlw	-1
 13102  1317  1D03               	skipz
 13103  1318  2B13               	goto	u495_25
 13104                           	line	12
 13105                           	
 13106  1319                     i1l11255:	
 13107  1319  3001               	movlw	(01h)
 13108  131A  00F6               	movwf	(??i1___lwmod+0)+0
 13109  131B  0876               	movf	(??i1___lwmod+0)+0,w
 13110  131C  07F7               	addwf	(i1___lwmod@counter),f
 13111  131D  2B1E               	goto	i1l11257
 13112                           	line	13
 13113                           	
 13114  131E                     i1l7550:	
 13115                           	line	10
 13116                           	
 13117  131E                     i1l11257:	
 13118  131E  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 13119  131F  2B21               	goto	u496_21
 13120  1320  2B22               	goto	u496_20
 13121  1321                     u496_21:
 13122  1321  2B12               	goto	i1l11253
 13123  1322                     u496_20:
 13124  1322  2B24               	goto	i1l11259
 13125                           	
 13126  1323                     i1l7552:	
 13127  1323  2B24               	goto	i1l11259
 13128                           	line	14
 13129                           	
 13130  1324                     i1l7553:	
 13131                           	line	15
 13132                           	
 13133  1324                     i1l11259:	
 13134  1324  0873               	movf	(i1___lwmod@divisor+1),w
 13135  1325  0275               	subwf	(i1___lwmod@dividend+1),w
 13136  1326  1D03               	skipz
 13137  1327  2B2A               	goto	u497_25
 13138  1328  0872               	movf	(i1___lwmod@divisor),w
 13139  1329  0274               	subwf	(i1___lwmod@dividend),w
 13140  132A                     u497_25:
 13141  132A  1C03               	skipc
 13142  132B  2B2D               	goto	u497_21
 13143  132C  2B2E               	goto	u497_20
 13144  132D                     u497_21:
 13145  132D  2B35               	goto	i1l11263
 13146  132E                     u497_20:
 13147                           	line	16
 13148                           	
 13149  132E                     i1l11261:	
 13150  132E  0872               	movf	(i1___lwmod@divisor),w
 13151  132F  02F4               	subwf	(i1___lwmod@dividend),f
 13152  1330  0873               	movf	(i1___lwmod@divisor+1),w
 13153  1331  1C03               	skipc
 13154  1332  03F5               	decf	(i1___lwmod@dividend+1),f
 13155  1333  02F5               	subwf	(i1___lwmod@dividend+1),f
 13156  1334  2B35               	goto	i1l11263
 13157                           	
 13158  1335                     i1l7554:	
 13159                           	line	17
 13160                           	
 13161  1335                     i1l11263:	
 13162  1335  3001               	movlw	01h
 13163                           	
 13164  1336                     u498_25:
 13165  1336  1003               	clrc
 13166  1337  0CF3               	rrf	(i1___lwmod@divisor+1),f
 13167  1338  0CF2               	rrf	(i1___lwmod@divisor),f
 13168  1339  3EFF               	addlw	-1
 13169  133A  1D03               	skipz
 13170  133B  2B36               	goto	u498_25
 13171                           	line	18
 13172                           	
 13173  133C                     i1l11265:	
 13174  133C  3001               	movlw	low(01h)
 13175  133D  02F7               	subwf	(i1___lwmod@counter),f
 13176  133E  1D03               	btfss	status,2
 13177  133F  2B41               	goto	u499_21
 13178  1340  2B42               	goto	u499_20
 13179  1341                     u499_21:
 13180  1341  2B24               	goto	i1l11259
 13181  1342                     u499_20:
 13182  1342  2B44               	goto	i1l11267
 13183                           	
 13184  1343                     i1l7555:	
 13185  1343  2B44               	goto	i1l11267
 13186                           	line	19
 13187                           	
 13188  1344                     i1l7549:	
 13189                           	line	20
 13190                           	
 13191  1344                     i1l11267:	
 13192  1344  0875               	movf	(i1___lwmod@dividend+1),w
 13193  1345  01F3               	clrf	(?i1___lwmod+1)
 13194  1346  07F3               	addwf	(?i1___lwmod+1)
 13195  1347  0874               	movf	(i1___lwmod@dividend),w
 13196  1348  01F2               	clrf	(?i1___lwmod)
 13197  1349  07F2               	addwf	(?i1___lwmod)
 13198                           
 13199  134A  2B4B               	goto	i1l7556
 13200                           	
 13201  134B                     i1l11269:	
 13202                           	line	21
 13203                           	
 13204  134B                     i1l7556:	
 13205  134B  0008               	return
 13206                           	opt stack 0
 13207                           GLOBAL	__end_ofi1___lwmod
 13208  134C                     	__end_ofi1___lwmod:
 13209 ;; =============== function i1___lwmod ends ============
 13210                           
 13211                           	signat	i1___lwmod,90
 13212                           	global	_Debounce
 13213                           psect	text1164,local,class=CODE,delta=2
 13214                           global __ptext1164
 13215  1768                     __ptext1164:
 13216                           
 13217 ;; *************** function _Debounce *****************
 13218 ;; Defined at:
 13219 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;		None
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;		None
 13224 ;; Return value:  Size  Location     Type
 13225 ;;		None               void
 13226 ;; Registers used:
 13227 ;;		wreg, status,2, status,0
 13228 ;; Tracked objects:
 13229 ;;		On entry : 0/0
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13233 ;;      Params:         0       0       0       0       0
 13234 ;;      Locals:         0       0       0       0       0
 13235 ;;      Temps:          1       0       0       0       0
 13236 ;;      Totals:         1       0       0       0       0
 13237 ;;Total ram usage:        1 bytes
 13238 ;; Hardware stack levels used:    1
 13239 ;; This function calls:
 13240 ;;		Nothing
 13241 ;; This function is called by:
 13242 ;;		_ReadButtons
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           psect	text1164
 13246                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 13247                           	line	77
 13248                           	global	__size_of_Debounce
 13249  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 13250                           	
 13251  1768                     _Debounce:	
 13252                           	opt	stack 0
 13253                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 13254                           	line	79
 13255                           	
 13256  1768                     i1l10809:	
 13257                           ;HMI.c: 79: if(!RB2)
 13258  1768  1283               	bcf	status, 5	;RP0=0, select bank0
 13259  1769  1303               	bcf	status, 6	;RP1=0, select bank0
 13260  176A  1906               	btfsc	(50/8),(50)&7
 13261  176B  2F6D               	goto	u386_21
 13262  176C  2F6E               	goto	u386_20
 13263  176D                     u386_21:
 13264  176D  2F82               	goto	i1l4505
 13265  176E                     u386_20:
 13266                           	line	81
 13267                           	
 13268  176E                     i1l10811:	
 13269                           ;HMI.c: 80: {
 13270                           ;HMI.c: 81: UpDebounceCount++;
 13271  176E  3001               	movlw	(01h)
 13272  176F  00F2               	movwf	(??_Debounce+0)+0
 13273  1770  0872               	movf	(??_Debounce+0)+0,w
 13274  1771  1683               	bsf	status, 5	;RP0=1, select bank1
 13275  1772  1303               	bcf	status, 6	;RP1=0, select bank1
 13276  1773  07C4               	addwf	(_UpDebounceCount)^080h,f	;volatile
 13277                           	line	82
 13278                           	
 13279  1774                     i1l10813:	
 13280                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 13281  1774  300A               	movlw	(0Ah)
 13282  1775  0244               	subwf	(_UpDebounceCount)^080h,w	;volatile
 13283  1776  1C03               	skipc
 13284  1777  2F79               	goto	u387_21
 13285  1778  2F7A               	goto	u387_20
 13286  1779                     u387_21:
 13287  1779  2F86               	goto	i1l4507
 13288  177A                     u387_20:
 13289                           	
 13290  177A                     i1l10815:	
 13291  177A  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 13292  177B  2F7D               	goto	u388_21
 13293  177C  2F7E               	goto	u388_20
 13294  177D                     u388_21:
 13295  177D  2F86               	goto	i1l4507
 13296  177E                     u388_20:
 13297                           	line	84
 13298                           	
 13299  177E                     i1l10817:	
 13300                           ;HMI.c: 83: {
 13301                           ;HMI.c: 84: UpPressed = 1;
 13302  177E  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 13303                           	line	85
 13304                           ;HMI.c: 85: UpReleased = 0;
 13305  177F  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 13306  1780  2F86               	goto	i1l4507
 13307                           	line	86
 13308                           	
 13309  1781                     i1l4506:	
 13310                           	line	87
 13311                           ;HMI.c: 86: }
 13312                           ;HMI.c: 87: }
 13313  1781  2F86               	goto	i1l4507
 13314                           	line	88
 13315                           	
 13316  1782                     i1l4505:	
 13317                           	line	90
 13318                           ;HMI.c: 88: else
 13319                           ;HMI.c: 89: {
 13320                           ;HMI.c: 90: UpDebounceCount = 0;
 13321  1782  1683               	bsf	status, 5	;RP0=1, select bank1
 13322  1783  1303               	bcf	status, 6	;RP1=0, select bank1
 13323  1784  01C4               	clrf	(_UpDebounceCount)^080h	;volatile
 13324                           	line	91
 13325                           ;HMI.c: 91: UpReleased = 1;
 13326  1785  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 13327                           	line	92
 13328                           	
 13329  1786                     i1l4507:	
 13330                           	line	95
 13331                           ;HMI.c: 92: }
 13332                           ;HMI.c: 95: if(!RB3)
 13333  1786  1283               	bcf	status, 5	;RP0=0, select bank0
 13334  1787  1303               	bcf	status, 6	;RP1=0, select bank0
 13335  1788  1986               	btfsc	(51/8),(51)&7
 13336  1789  2F8B               	goto	u389_21
 13337  178A  2F8C               	goto	u389_20
 13338  178B                     u389_21:
 13339  178B  2FA0               	goto	i1l4508
 13340  178C                     u389_20:
 13341                           	line	97
 13342                           	
 13343  178C                     i1l10819:	
 13344                           ;HMI.c: 96: {
 13345                           ;HMI.c: 97: DownDebounceCount++;
 13346  178C  3001               	movlw	(01h)
 13347  178D  00F2               	movwf	(??_Debounce+0)+0
 13348  178E  0872               	movf	(??_Debounce+0)+0,w
 13349  178F  1683               	bsf	status, 5	;RP0=1, select bank1
 13350  1790  1303               	bcf	status, 6	;RP1=0, select bank1
 13351  1791  07C0               	addwf	(_DownDebounceCount)^080h,f	;volatile
 13352                           	line	98
 13353                           	
 13354  1792                     i1l10821:	
 13355                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 13356  1792  300A               	movlw	(0Ah)
 13357  1793  0240               	subwf	(_DownDebounceCount)^080h,w	;volatile
 13358  1794  1C03               	skipc
 13359  1795  2F97               	goto	u390_21
 13360  1796  2F98               	goto	u390_20
 13361  1797                     u390_21:
 13362  1797  2FA4               	goto	i1l4510
 13363  1798                     u390_20:
 13364                           	
 13365  1798                     i1l10823:	
 13366  1798  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 13367  1799  2F9B               	goto	u391_21
 13368  179A  2F9C               	goto	u391_20
 13369  179B                     u391_21:
 13370  179B  2FA4               	goto	i1l4510
 13371  179C                     u391_20:
 13372                           	line	100
 13373                           	
 13374  179C                     i1l10825:	
 13375                           ;HMI.c: 99: {
 13376                           ;HMI.c: 100: DownPressed = 1;
 13377  179C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 13378                           	line	101
 13379                           ;HMI.c: 101: DownReleased = 0;
 13380  179D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 13381  179E  2FA4               	goto	i1l4510
 13382                           	line	102
 13383                           	
 13384  179F                     i1l4509:	
 13385                           	line	103
 13386                           ;HMI.c: 102: }
 13387                           ;HMI.c: 103: }
 13388  179F  2FA4               	goto	i1l4510
 13389                           	line	104
 13390                           	
 13391  17A0                     i1l4508:	
 13392                           	line	106
 13393                           ;HMI.c: 104: else
 13394                           ;HMI.c: 105: {
 13395                           ;HMI.c: 106: DownDebounceCount = 0;
 13396  17A0  1683               	bsf	status, 5	;RP0=1, select bank1
 13397  17A1  1303               	bcf	status, 6	;RP1=0, select bank1
 13398  17A2  01C0               	clrf	(_DownDebounceCount)^080h	;volatile
 13399                           	line	107
 13400                           ;HMI.c: 107: DownReleased = 1;
 13401  17A3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 13402                           	line	108
 13403                           	
 13404  17A4                     i1l4510:	
 13405                           	line	110
 13406                           ;HMI.c: 108: }
 13407                           ;HMI.c: 110: if(!RB4)
 13408  17A4  1283               	bcf	status, 5	;RP0=0, select bank0
 13409  17A5  1303               	bcf	status, 6	;RP1=0, select bank0
 13410  17A6  1A06               	btfsc	(52/8),(52)&7
 13411  17A7  2FA9               	goto	u392_21
 13412  17A8  2FAA               	goto	u392_20
 13413  17A9                     u392_21:
 13414  17A9  2FBE               	goto	i1l4511
 13415  17AA                     u392_20:
 13416                           	line	112
 13417                           	
 13418  17AA                     i1l10827:	
 13419                           ;HMI.c: 111: {
 13420                           ;HMI.c: 112: LeftDebounceCount++;
 13421  17AA  3001               	movlw	(01h)
 13422  17AB  00F2               	movwf	(??_Debounce+0)+0
 13423  17AC  0872               	movf	(??_Debounce+0)+0,w
 13424  17AD  1683               	bsf	status, 5	;RP0=1, select bank1
 13425  17AE  1303               	bcf	status, 6	;RP1=0, select bank1
 13426  17AF  07C1               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 13427                           	line	113
 13428                           	
 13429  17B0                     i1l10829:	
 13430                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 13431  17B0  300A               	movlw	(0Ah)
 13432  17B1  0241               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 13433  17B2  1C03               	skipc
 13434  17B3  2FB5               	goto	u393_21
 13435  17B4  2FB6               	goto	u393_20
 13436  17B5                     u393_21:
 13437  17B5  2FC2               	goto	i1l4513
 13438  17B6                     u393_20:
 13439                           	
 13440  17B6                     i1l10831:	
 13441  17B6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 13442  17B7  2FB9               	goto	u394_21
 13443  17B8  2FBA               	goto	u394_20
 13444  17B9                     u394_21:
 13445  17B9  2FC2               	goto	i1l4513
 13446  17BA                     u394_20:
 13447                           	line	115
 13448                           	
 13449  17BA                     i1l10833:	
 13450                           ;HMI.c: 114: {
 13451                           ;HMI.c: 115: LeftPressed = 1;
 13452  17BA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 13453                           	line	116
 13454                           ;HMI.c: 116: LeftReleased = 0;
 13455  17BB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 13456  17BC  2FC2               	goto	i1l4513
 13457                           	line	117
 13458                           	
 13459  17BD                     i1l4512:	
 13460                           	line	118
 13461                           ;HMI.c: 117: }
 13462                           ;HMI.c: 118: }
 13463  17BD  2FC2               	goto	i1l4513
 13464                           	line	119
 13465                           	
 13466  17BE                     i1l4511:	
 13467                           	line	121
 13468                           ;HMI.c: 119: else
 13469                           ;HMI.c: 120: {
 13470                           ;HMI.c: 121: LeftDebounceCount = 0;
 13471  17BE  1683               	bsf	status, 5	;RP0=1, select bank1
 13472  17BF  1303               	bcf	status, 6	;RP1=0, select bank1
 13473  17C0  01C1               	clrf	(_LeftDebounceCount)^080h	;volatile
 13474                           	line	122
 13475                           ;HMI.c: 122: LeftReleased = 1;
 13476  17C1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 13477                           	line	123
 13478                           	
 13479  17C2                     i1l4513:	
 13480                           	line	125
 13481                           ;HMI.c: 123: }
 13482                           ;HMI.c: 125: if(!RB5)
 13483  17C2  1283               	bcf	status, 5	;RP0=0, select bank0
 13484  17C3  1303               	bcf	status, 6	;RP1=0, select bank0
 13485  17C4  1A86               	btfsc	(53/8),(53)&7
 13486  17C5  2FC7               	goto	u395_21
 13487  17C6  2FC8               	goto	u395_20
 13488  17C7                     u395_21:
 13489  17C7  2FDC               	goto	i1l4514
 13490  17C8                     u395_20:
 13491                           	line	127
 13492                           	
 13493  17C8                     i1l10835:	
 13494                           ;HMI.c: 126: {
 13495                           ;HMI.c: 127: RightDebounceCount++;
 13496  17C8  3001               	movlw	(01h)
 13497  17C9  00F2               	movwf	(??_Debounce+0)+0
 13498  17CA  0872               	movf	(??_Debounce+0)+0,w
 13499  17CB  1683               	bsf	status, 5	;RP0=1, select bank1
 13500  17CC  1303               	bcf	status, 6	;RP1=0, select bank1
 13501  17CD  07C3               	addwf	(_RightDebounceCount)^080h,f	;volatile
 13502                           	line	128
 13503                           	
 13504  17CE                     i1l10837:	
 13505                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 13506  17CE  300A               	movlw	(0Ah)
 13507  17CF  0243               	subwf	(_RightDebounceCount)^080h,w	;volatile
 13508  17D0  1C03               	skipc
 13509  17D1  2FD3               	goto	u396_21
 13510  17D2  2FD4               	goto	u396_20
 13511  17D3                     u396_21:
 13512  17D3  2FE0               	goto	i1l4516
 13513  17D4                     u396_20:
 13514                           	
 13515  17D4                     i1l10839:	
 13516  17D4  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 13517  17D5  2FD7               	goto	u397_21
 13518  17D6  2FD8               	goto	u397_20
 13519  17D7                     u397_21:
 13520  17D7  2FE0               	goto	i1l4516
 13521  17D8                     u397_20:
 13522                           	line	130
 13523                           	
 13524  17D8                     i1l10841:	
 13525                           ;HMI.c: 129: {
 13526                           ;HMI.c: 130: RightPressed = 1;
 13527  17D8  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 13528                           	line	131
 13529                           ;HMI.c: 131: RightReleased = 0;
 13530  17D9  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 13531  17DA  2FE0               	goto	i1l4516
 13532                           	line	132
 13533                           	
 13534  17DB                     i1l4515:	
 13535                           	line	133
 13536                           ;HMI.c: 132: }
 13537                           ;HMI.c: 133: }
 13538  17DB  2FE0               	goto	i1l4516
 13539                           	line	134
 13540                           	
 13541  17DC                     i1l4514:	
 13542                           	line	136
 13543                           ;HMI.c: 134: else
 13544                           ;HMI.c: 135: {
 13545                           ;HMI.c: 136: RightDebounceCount = 0;
 13546  17DC  1683               	bsf	status, 5	;RP0=1, select bank1
 13547  17DD  1303               	bcf	status, 6	;RP1=0, select bank1
 13548  17DE  01C3               	clrf	(_RightDebounceCount)^080h	;volatile
 13549                           	line	137
 13550                           ;HMI.c: 137: RightReleased = 1;
 13551  17DF  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 13552                           	line	138
 13553                           	
 13554  17E0                     i1l4516:	
 13555                           	line	140
 13556                           ;HMI.c: 138: }
 13557                           ;HMI.c: 140: if(!RB6)
 13558  17E0  1283               	bcf	status, 5	;RP0=0, select bank0
 13559  17E1  1303               	bcf	status, 6	;RP1=0, select bank0
 13560  17E2  1B06               	btfsc	(54/8),(54)&7
 13561  17E3  2FE5               	goto	u398_21
 13562  17E4  2FE6               	goto	u398_20
 13563  17E5                     u398_21:
 13564  17E5  2FFA               	goto	i1l4517
 13565  17E6                     u398_20:
 13566                           	line	142
 13567                           	
 13568  17E6                     i1l10843:	
 13569                           ;HMI.c: 141: {
 13570                           ;HMI.c: 142: CenterDebounceCount++;
 13571  17E6  3001               	movlw	(01h)
 13572  17E7  00F2               	movwf	(??_Debounce+0)+0
 13573  17E8  0872               	movf	(??_Debounce+0)+0,w
 13574  17E9  1683               	bsf	status, 5	;RP0=1, select bank1
 13575  17EA  1303               	bcf	status, 6	;RP1=0, select bank1
 13576  17EB  07BD               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 13577                           	line	143
 13578                           	
 13579  17EC                     i1l10845:	
 13580                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 13581  17EC  300A               	movlw	(0Ah)
 13582  17ED  023D               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 13583  17EE  1C03               	skipc
 13584  17EF  2FF1               	goto	u399_21
 13585  17F0  2FF2               	goto	u399_20
 13586  17F1                     u399_21:
 13587  17F1  2FFF               	goto	i1l4520
 13588  17F2                     u399_20:
 13589                           	
 13590  17F2                     i1l10847:	
 13591  17F2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 13592  17F3  2FF5               	goto	u400_21
 13593  17F4  2FF6               	goto	u400_20
 13594  17F5                     u400_21:
 13595  17F5  2FFF               	goto	i1l4520
 13596  17F6                     u400_20:
 13597                           	line	145
 13598                           	
 13599  17F6                     i1l10849:	
 13600                           ;HMI.c: 144: {
 13601                           ;HMI.c: 145: CenterPressed = 1;
 13602  17F6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 13603                           	line	146
 13604                           ;HMI.c: 146: CenterReleased = 0;
 13605  17F7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 13606  17F8  2FFF               	goto	i1l4520
 13607                           	line	147
 13608                           	
 13609  17F9                     i1l4518:	
 13610                           	line	148
 13611                           ;HMI.c: 147: }
 13612                           ;HMI.c: 148: }
 13613  17F9  2FFF               	goto	i1l4520
 13614                           	line	149
 13615                           	
 13616  17FA                     i1l4517:	
 13617                           	line	151
 13618                           ;HMI.c: 149: else
 13619                           ;HMI.c: 150: {
 13620                           ;HMI.c: 151: CenterDebounceCount = 0;
 13621  17FA  1683               	bsf	status, 5	;RP0=1, select bank1
 13622  17FB  1303               	bcf	status, 6	;RP1=0, select bank1
 13623  17FC  01BD               	clrf	(_CenterDebounceCount)^080h	;volatile
 13624                           	line	152
 13625                           ;HMI.c: 152: CenterReleased = 1;
 13626  17FD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 13627  17FE  2FFF               	goto	i1l4520
 13628                           	line	153
 13629                           	
 13630  17FF                     i1l4519:	
 13631                           	line	154
 13632                           	
 13633  17FF                     i1l4520:	
 13634  17FF  0008               	return
 13635                           	opt stack 0
 13636                           GLOBAL	__end_of_Debounce
 13637  1800                     	__end_of_Debounce:
 13638 ;; =============== function _Debounce ends ============
 13639                           
 13640                           	signat	_Debounce,88
 13641                           psect	text1165,local,class=CODE,delta=2
 13642                           global __ptext1165
 13643  0000                     __ptext1165:
 13644                           	global	btemp
 13645  007E                     	btemp set 07Eh
 13646                           
 13647                           	DABS	1,126,2	;btemp
 13648                           	global	wtemp0
 13649  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 11 17:16:28 2015

   RobotDrive@radiuslowByte 005D   __end_of_lcd_write_control 1039             ??_UpdateDisplay 0045  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                  _IRdistance 00A4                          fsr 0004  
       ___wmul@multiplicand 0022                         l700 104E                         l703 10AA  
                       l704 10AA                         l705 10AE                         l706 10CD  
                       l690 12D1                         l691 12FA                         l692 12D5  
                       l693 12D9                         l694 12DD                         l695 12E1  
                       l696 12E5                         l689 12E9                         l697 1307  
                       _GIE 005F                         _RB0 0030                         _RC0 0038  
                       _RB2 0032                         _RC1 0039                         _RB3 0033  
                       _RC2 003A                         _RB4 0034                         _RB5 0035  
                       _RE0 0048                         _RB6 0036                         _RE1 0049  
                       _RE2 004A                         _RX9 00C6                         _TX9 04C6  
                       _abs 125F                         _pos 00B4                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026         robotFollow@distance 005F  
          ??_robotMoveSpeed 0063             ?_lcd_set_cursor 0072                ___ftdiv@cntr 0040  
              ___ftdiv@sign 0045                        ?_abs 0026                        l1402 1FEC  
                      l1410 11D2                        l3010 1064                        l1411 11D2  
                      l3020 0514                        l3004 1703                        l3021 0465  
                      l3013 030D                        l1405 1FD9                        l3005 1739  
                      l3014 0517                        l3022 0513                        l3006 1725  
                      l3023 04BB                        l3015 0363                        l2231 122E  
                      l3007 1767                        l3016 0516                        l3024 0512  
                      l1408 11C1                        l2240 0055                        l3025 0511  
                      l3017 03B9                        l1409 11A8                        l2241 0084  
                      l3018 0515                        l3026 0517                        l2250 018A  
                      l2242 0094                        l2234 0025                        l3019 040F  
                      l2251 01A2                        l2243 00B2                        l2235 003B  
                      l2260 02B2                        l2244 0282                        l2252 01C2  
                      l2236 004E                        l1429 1122                        l2237 0292  
                      l2245 00B7                        l2270 14F1                        l2254 01C1  
                      l2246 00E6                        l2238 004F                        l2271 14FF  
                      l2263 14D1                        l2239 02A8                        l2255 0289  
                      l2247 0100                        l2272 151C                        l2264 14DC  
                      l2280 13C4                        l2256 028A                        l2248 012D  
                      l2265 1509                        l2273 1507                        l2281 13AD  
                      l2257 0290                        l2249 0170                        l2274 151B  
                      l2266 14DD                        l2290 13D7                        l2282 13D5  
                      l2258 02B1                        l2275 151C                        l2267 151A  
                      l2283 13AF                        l2259 02B2                        l2268 14DF  
                      l2284 13B1                        l2269 14E1                        l2293 160A  
                      l2285 13B3                        l2294 1663                        l2286 13B5  
                      l2278 13A1                        l1399 1038                        l2295 1636  
                      l2287 13D7                        l2279 13AC                        l2296 164D  
                      l2288 13C1                        l2297 166C                        l2289 13D6  
                      l6040 0D42                        l3721 1019                        l6041 0D41  
                      l3722 1019                        l6034 07FC                        l3730 148D  
                      l6050 0900                        l6042 0D43                        l4531 140A  
                      l3723 101E                        l3731 14AD                        l6051 091F  
                      l4540 141E                        l4532 13DC                        l3724 1024  
                      l3732 14BE                        l6052 0920                        l6060 059D  
                      l4533 141C                        l4541 1408                        l6045 12CC  
                      l6037 0CA4                        l6061 05B3                        l4534 13DD  
                      l6038 0D43                        l4550 0FFF                        l6070 0D5A  
                      l4535 13DE                        l3727 147F                        l6039 0CDB  
                      l4551 0F7C                        l6071 0D70                        l6055 069F  
                      l6063 05AF                        l4536 13EF                        l3728 1486  
                      l6048 08DB                        l4552 0FC7                        l6064 06D4  
                      l6056 052E                        l4537 13F0                        l3729 14A3  
                      l6049 0920                        l4553 0FF0                        l6073 0D6C  
                      l6065 069E                        l6057 055F                        l4538 1402  
                      l4546 0FF2                        l4554 0FFF                        l6074 0E91  
                      l6066 06E3                        l6058 059D                        l4539 1403  
                      l4547 0EBA                        l6075 0E5B                        l6059 058B  
                      l4548 0F21                        l6076 0EA0                        l4549 0F34  
                      l6069 0E5C                        l6088 1293                        l6800 11FF  
                      l7540 1439                        l7700 15B1                        l7533 1128  
                      l7541 142D                        l7701 15DB                        l7621 0A89  
                      l6822 10F7                        l7534 1132                        l7542 143E  
                      l7550 1364                        l7702 15F2                        l7622 0B35  
                      l7535 1147                        l7543 143F                        l7551 1358  
                      l6831 07CA                        l7623 0AA2                        l7631 0B51  
                      l7536 114E                        l7544 1458                        l7552 1369  
                      l6840 0703                        l6832 06EC                        l7624 0AE8  
                      l7632 0C23                        l7545 1466                        l7553 136A  
                      l6841 0734                        l6833 06FE                        l7625 0B0A  
                      l7633 0B6A                        l7546 146E                        l7554 137B  
                      l7650 09A6                        l7642 093E                        l6850 07E3  
                      l6842 073F                        l6834 0705                        l7626 0B19  
                      l7634 0BAA                        l7539 1467                        l7555 1389  
                      l7651 099A                        l7643 09C6                        l6843 0767  
                      l6835 0700                        l7635 0BBF                        l7556 1391  
                      l7652 09AC                        l7644 0989                        l6836 07DE  
                      l6844 075C                        l7636 0BD6                        l7549 138A  
                      l7653 09BD                        l7645 0975                        l7741 152D  
                      l6845 0779                        l6837 0701                        l7637 0BDB  
                      l7646 0976                        l7750 157D                        l7742 1537  
                      l6846 07BE                        l6838 0702                        l7638 0BF0  
                      l7670 11A6                        l7647 0988                        l7751 1584  
                      l7743 1573                        l6847 077E                        l6839 071A  
                      l6791 1151                        l7639 0C07                        l7648 09AD  
                      l7744 154D                        l6848 07C9                        l6792 1150  
                      l7649 0999                        l7745 1541                        l6849 07DD  
                      l6793 115A                        l7746 1552                        l6794 117A  
                      l6787 1070                        l7747 1553                        l6788 107D  
                      l7748 1564                        l6797 11D8                        l7749 1572  
                      l7669 118B                        l6798 11D7                        l7870 1684  
                      l6799 11E2                        l7871 1698                        l7872 16AF  
                      l7873 1699                        l7865 1683                        l7874 16B6  
                      l7875 16C2                        l7867 167B                        l7876 16B7  
                      l7868 16E9                        l7877 16C6                        l7869 1691  
                      l7878 16D0                        _CHS0 00FB                        l7879 16E9  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 0862  
                      STR_2 0859                        STR_3 0874                        STR_4 087D  
                      STR_5 086B                        STR_6 0850                        STR_7 08A1  
                      STR_8 08A5                        STR_9 088D                        _BRGH 04C2  
                      _CREN 00C4                        u4110 112C                        u4111 112B  
                      u4040 106B                        u5000 1478                        u4041 106A  
                      u5001 1477                        u4050 1078                        u4210 1465  
                      u5010 14AD                        u4051 1077                        u4211 1464  
                      u5011 14AC                        u4140 1146                        u4220 1354  
                      u5020 08BC                        u5100 03C2                        u4141 1145  
                      u4125 1133                        u4205 1459                        u4221 1353  
                      u5021 08BB                        u5101 03C1                        u4150 1429  
                      u5030 08E1                        u5110 03CB                        u4135 113A  
                      u4151 1428                        u5015 14A9                        u5031 08E0  
                      u5111 03CA                        u4240 1368                        u5120 0418  
                      u5040 02C0                        u5200 073D                        u4241 1367  
                      u5025 08B8                        u5121 0417                        u5041 02BF  
                      u5201 073C                        u4170 143D                        u4250 1374  
                      u5130 0421                        u5050 02C9                        u5210 075A  
                      u4171 143C                        u4251 1373                        u4235 1359  
                      u5131 0420                        u5051 02C8                        u5211 0759  
                      u5140 046E                        u5060 0316                        u5220 0766  
                      u5300 0AB8                        u4165 142E                        u5141 046D  
                      u5061 0315                        u5221 0765                        u3630 10AE  
                      u4190 1450                        u4270 1388                        u5150 0477  
                      u5070 031F                        u5230 076D                        u5310 0ACA  
                      u3631 10AD                        u4191 144F                        u4271 1387  
                      u4255 1370                        u6007 1496                        u5151 0476  
                      u5071 031E                        u5231 076C                        u5215 0756  
                      u4600 16CA                        u4520 1673                        u5160 04C4  
                      u5080 036C                        u5240 07C8                        u5400 0BAE  
                      u4185 1440                        u4265 137C                        u4601 16C9  
                      u6017 1FE8                        u5161 04C3                        u5081 036B  
                      u5241 07C7                        u5305 0AB4                        u5401 0BAD  
                      u4610 16DB                        u4530 167A                        u5170 04CD  
                      u5090 0375                        u5250 07DC                        u5330 0AFE  
                      u4195 144C                        u4531 1679                        u6027 1033  
                      u5171 04CC                        u5091 0374                        u5251 07DB  
                      u5331 0AFD                        u5315 0AC6                        u5411 0BB7  
                      _PEIE 005E                        u3820 13EA                        u4620 16E8  
                      u5180 06F2                        u5260 115A                        u5412 0BBE  
                      u5500 1182                        u3645 10BB                        u3821 13E9  
                      u6037 104C                        u5181 06F1                        u5261 1159  
                      u5325 0AE9                        u5501 1181                        u3830 13FF  
                      u4550 1697                        u4710 09AB                        u4630 0934  
                      u5190 072A                        u5350 0B18                        u5510 11D1  
                      u3831 13FE                        u4615 16D7                        u4551 1696  
                      u4711 09AA                        u4631 0933                        u6047 12FC  
                      u5191 0729                        u5351 0B17                        u5335 0AFA  
                      u5511 11D0                        u3840 11E2                        u4720 09B1  
                      u4640 0949                        u4800 1531                        u5280 0A81  
                      u5440 0BD5                        u5360 0B49                        u5520 0C74  
                      u5600 14D5                        u3841 11E1                        u4545 1689  
                      u4705 099C                        u4801 1530                        u5345 0B0B  
                      u5281 0A80                        u5441 0BD4                        u5425 0BC0  
                      u5361 0B48                        u5521 0C73                        u5601 14D4  
                      u3850 101D                        u4570 16B5                        u4650 0964  
                      u4810 153D                        u5290 0A9A                        u5450 0BDF  
                      u5370 0B62                        u5530 0CAB                        u5610 1608  
                      u3851 101C                        u4571 16B4                        u4651 0963  
                      u4811 153C                        u5275 1274                        u5291 0A99  
                      u5451 0BDE                        u5435 0BC8                        u5371 0B61  
                      u5531 0CAA                        u5611 1607                        _RCIE 0465  
                      u4660 096B                        u4740 158B                        u5380 0B7A  
                      u5540 0CE2                        u5620 1621                        u5700 0579  
                      _RCIF 0065                        u4565 16A8                        u4661 096A  
                      u4645 0945                        u4741 158A                        u5461 0BE8  
                      u5541 0CE1                        u5621 1620                        u5701 0578  
                      u4590 16C6                        u4830 1551                        u5462 0BEF  
                      u5390 0B8C                        u5550 1701                        u5630 1646  
                      u5710 05AA                        u4591 16C5                        u4751 15A3  
                      u4831 1550                        u5551 1700                        u5631 1645  
                      u5615 1604                        u5711 05A9                        u4680 0987  
                      u4760 15B5                        u4752 15A4                        u4840 155D  
                      u5560 1719                        u5640 1662                        u5720 05AE  
                      u5800 010F                        u4585 16BA                        u4681 0986  
                      u4761 15B4                        u4753 15A9                        u4841 155C  
                      u4825 1542                        u5385 0B76                        u5561 1718  
                      u5641 1661                        u5625 161D                        u5705 0575  
                      u5801 010E                        u4690 098F                        u4754 15AA  
                      u5490 0C06                        u5570 1738                        u5650 0D67  
                      u5730 064C                        u5810 011E                        u4691 098E  
                      u4675 0977                        u4771 15CD                        u5491 0C05  
                      u5475 0BF1                        u5395 0B88                        u5571 1737  
                      u5555 16FD                        u5651 0D66                        u5731 064B  
                      u5811 011D                        u4780 15ED                        u4772 15CE  
                      u4860 1571                        u5580 0EAB                        u5660 0D6B  
                      u5740 06D3                        u5900 0288                        u5820 013C  
                      u4781 15EC                        u4773 15D3                        u4861 1570  
                      u4845 1559                        u5485 0BF9                        u5645 165E  
                      u5741 06D2                        u5821 013B                        u5805 010B  
                      u4774 15D4                        u4870 1577                        u4790 1524  
                      u5590 0F0E                        u5670 0E09                        u5750 13A5  
                      u5830 014B                        u4855 1565                        u4791 1523  
                      u5575 1734                        u5591 0F0D                        u5671 0E08  
                      u5751 13A4                        u5831 014A                        u5815 011A  
                      u5680 0E90                        u5840 017F                        u5760 0029  
                      u4785 15E9                        u5681 0E8F                        u5745 06CF  
                      u5841 017E                        u5825 0138                        u5761 0028  
                      u5690 054F                        u5850 0185                        u5770 003F  
                      _OERR 00C1                        u5595 0F0A                        u5691 054E  
                      u5851 0184                        u5835 0147                        u5860 0190  
                      u5780 00DB                        u5685 0E8C                        u5917 01E7  
                      u5861 018F                        u5845 017B                        u5781 00DA  
                      u5870 019D                        u5790 00F5                        u5695 054B  
                      u5927 0248                        u5871 019C                        u5791 00F4  
                      u5880 01B1                        u5937 026B                        u5881 01B0  
                      u5785 00D7                        u5890 01C0                        u5947 0C39  
                      u5891 01BF                        u5875 0199                        u5795 00F1  
                      u5957 0C5C                        u5885 01AD                        u5967 0C86  
                      u5895 01BC                        u5977 0CBD                        u5987 0CF4  
                      u5997 0D23                        _TMR0 0001                  _ChargeMode 1392  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0263                        _Menu 13D8      __end_of_lcd_write_data 1FED  
                      abs@v 0026                        _isr1 09C7                        _main 0015  
              ___ftpack@arg 0020                        _init 1200                ___ftpack@exp 0023  
                      btemp 007E              _CenterReleased 0381                        start 0012  
              ___ftmul@cntr 0054                ___ftmul@sign 0055               ??_ReadButtons 0073  
              ___fttol@exp1 0035                       ??_abs 0028                ___fttol@lval 0031  
     readAvgDistance@tempIR 0034                       ?_Menu 0072                       l11101 0950  
                     l11111 0964                       l11103 0951                       l11121 098F  
                     l11113 096B                       l11105 0957                       l11201 1584  
                     l12001 01A2                       l11131 09B1                       l11123 0998  
                     l11115 0974                       l11107 095E                       l12011 022F  
                     l12003 01B1                       l11061 167B                       l11133 09BD  
                     l11125 099A                       l11117 0976                       l11109 0960  
                     l11301 102D                       l12013 0240                       l12005 01C2  
                     l12021 0282                       l11071 169D                       l11063 1682  
                     l11135 09C6                       l11127 09A6                       l11119 0989  
                     l11151 158B                       l11303 102E                       l11311 1FE3  
                     l12023 028A                       l12015 024F                       l12007 01DF  
                     l11081 16D2                       l11073 16A7                       l11065 1684  
                     l11057 166D                       l11129 09AD                       l10601 15F1  
                     l11161 15DF                       l11153 15B1                       l11305 1FDD  
                     l11313 07E4                       l11321 147F                       l11401 0704  
                     l12025 0291                       l12017 0263                       l12009 01EE  
                     l10611 107C                       l11083 16E4                       l11075 16B7  
                     l11067 1691                       l11059 1673                       l11163 15ED  
                     l11155 15B5                       l11171 1524                       l11307 1FE0  
                     l11331 14AF                       l11323 1486                       l11315 146F  
                     l11411 072A                       l11403 0705                       l12019 0272  
                     l12027 0292                       l10621 10B1                       l11085 16E8  
                     l11077 16C2                       l11069 1699                       l11093 0921  
                     l11165 15EF                       l11157 15DB                       l11149 1585  
                     l11181 1541                       l11173 152D                       l11309 1FE2  
                     l11341 14BB                       l11333 14B5                       l11325 1489  
                     l11317 1473                       l11421 073F                       l11413 072E  
                     l11405 071A                       l11501 0AA8                       l12029 02A8  
                     l10623 10C4                       l11079 16CA                       l11095 0934  
                     l11167 15F2                       l11159 15DD                       l11191 1564  
                     l11183 1548                       l11175 1531                       l11271 12D0  
                     l11335 14B8                       l11327 148A                       l11319 1478  
                     l11343 08AD                       l11351 02B5                       l11431 076D  
                     l11423 075B                       l11415 0734                       l11407 0722  
                     l11511 0ADC                       l11503 0AAD                       l10625 10CD  
                     l10617 10A5                       l10801 1016                       l10609 107A  
                     l11097 093D                       l11193 156B                       l11185 154D  
                     l11177 1537                       l11169 151D                       l11273 12E5  
                     l11281 12FA                       l11337 14B9                       l11329 1492  
                     l11345 08BC                       l11361 031F                       l11353 02C0  
                     l11441 07B9                       l11433 0774                       l11425 075C  
                     l11417 0737                       l11409 0726                       l11521 0B0A  
                     l11513 0AE8                       l11505 0ABF                       l11601 10FC  
                     l10619 10A8                       l10803 101E                       l11099 093E  
                     l11187 1553                       l11179 153D                       l11195 1573  
                     l11283 12FE                       l11275 12E7                       l11291 1040  
                     l11339 14BA                       l11347 08E1                       l11371 03C2  
                     l11363 0363                       l11355 02C9                       l11443 07BE  
                     l11435 0779                       l11427 0760                       l11419 073E  
                     l11451 114F                       l11523 0B12                       l11515 0AF0  
                     l11507 0AD1                       l11531 0B49                       l11611 110A  
                     l11603 10FF                       l10741 10D9                       l10805 1022  
                     l11197 1577                       l11189 155D                       l11285 1307  
                     l11277 12E8                       l11293 1044                       l11349 0900  
                     l11381 0465                       l11373 03CB                       l11365 036C  
                     l11357 030D                       l11437 077E                       l11429 0767  
                     l11445 07CA                       l11461 1175                       l11453 1151  
                     l11525 0B19                       l11517 0AFE                       l11509 0AD5  
                     l11541 0B6A                       l11533 0B50                       l11613 1110  
                     l11605 1100                       l11621 0C33                       l11701 16F4  
                     l10751 10E3                       l10743 10DA                       l10807 1024  
                     l11199 157D                       l11279 12E9                       l11295 1048  
                     l11287 1039                       l11391 04CD                       l11383 046E  
                     l11375 040F                       l11367 0375                       l11359 0316  
                     l11439 07B2                       l11447 07DE                       l11463 1176  
                     l11455 115B                       l11471 129E                       l11527 0B35  
                     l11519 0B08                       l11551 0BA5                       l11543 0B97  
                     l11535 0B51                       l11615 1116                       l11607 1103  
                     l11631 0C6D                       l11623 0C3E                       l11711 172B  
                     l11703 1702                       l10761 10EC                       l10753 10E6  
                     l10745 10DC                       l10737 10CE                       l11289 103C  
                     l11297 1028                       l11385 0477                       l11377 0418  
                     l11369 03B9                       l11449 07E3                       l11393 06E7  
                     l11465 117A                       l11457 1167                       l11481 12C4  
                     l11473 12A6                       l11561 0BCF                       l11553 0BAA  
                     l11545 0B98                       l11537 0B62                       l11529 0B36  
                     l11617 111C                       l11609 1104                       l11633 0C74  
                     l11641 0CA4                       l11625 0C4A                       l11713 1739  
                     l11705 1703                       l11721 0EC0                       l11801 1621  
                     l10755 10E7                       l10747 10DD                       l10739 10D1  
                     l10771 13F0                       l10763 13DB                       l10931 112C  
                     l11299 102B                       l11387 04BB                       l11379 0421  
                     l11395 06EC                       l11459 116D                       l11475 12AC  
                     l11467 1294                       l11483 125F                       l11491 0A88  
                     l11571 0BF8                       l11563 0BD6                       l11555 0BAE  
                     l11547 0B99                       l11539 0B69                       l11643 0CAB  
                     l11651 0CDB                       l11635 0C80                       l11627 0C50  
                     l11619 0C27                       l11715 175F                       l11707 1710  
                     l11731 0F21                       l11723 0EE8                       l11811 164D  
                     l11803 1636                       l10757 10EA                       l10749 10E0  
                     l10773 13FF                       l10765 13DE                       l10781 140A  
                     l10933 1139                       l10941 1423                       l11389 04C4  
                     l11397 06F2                       l11477 12B4                       l11469 129A  
                     l11485 1293                       l11493 0A89                       l11573 0C00  
                     l11565 0BDB                       l11557 0BBF                       l11549 0B9F  
                     l11581 1182                       l11661 0D11                       l11653 0CE2  
                     l11645 0CB7                       l11637 0C8B                       l11629 0C61  
                     l11709 1719                       l11741 0F88                       l11733 0F34  
                     l11725 0EF9                       l11717 0EA1                       l11813 1655  
                     l11805 1642                       l11821 0D48                       l11901 1392  
                     l10759 10EB                       l10775 1403                       l10767 13E6  
                     l10783 141C                       l10791 11E3                       l10935 1147  
                     l10927 1123                       l10951 143F                       l10943 1429  
                     l10599 15EF                       l11399 06F9                       l11479 12BC  
                     l11495 0A9A                       l11487 0A6E                       l11575 0C07  
                     l11567 0BDF                       l11559 0BC7                       l11583 118B  
                     l11591 11A7                       l11663 0D17                       l11655 0CEE  
                     l11647 0CC2                       l11639 0C97                       l11671 1064  
                     l11751 0FC7                       l11743 0F93                       l11735 0F3A  
                     l11727 0EFF                       l11719 0EBA                       l11807 1646  
                     l11815 1663                       l11831 0D70                       l11823 0D5A  
                     l11911 13B5                       l11903 139A                       l10785 141E  
                     l10777 1407                       l10769 13EA                       l10793 11F1  
                     l10881 106B                       l10937 114E                       l10929 1128  
                     l10953 1450                       l10945 142D                       l10961 1467  
                     l11497 0AA1                       l11489 0A81                       l11577 0C23  
                     l11569 0BF0                       l11585 11A6                       l11593 11A8  
                     l11665 0D1D                       l11657 0CF9                       l11649 0CCE  
                     l11681 120F                       l11673 1200                       l11753 0FD3  
                     l11745 0FA4                       l11737 0F51                       l11729 0F0E  
                     l11761 14BF                       l11817 166C                       l11809 1647  
                     l11841 0DAB                       l11833 0D79                       l11825 0D60  
                     l11913 13BB                       l11921 13C4                       l11905 13A1  
                     l10779 1409                       l10795 11FD                       l10787 11D6  
                     l10891 107A                       l10883 106D                       l10963 146E  
                     l10955 1456                       l10947 1434                       l10939 141F  
                     l10971 135F                       l11499 0AA2                       l11579 117B  
                     l11587 1FD2                       l11595 11B8                       l11659 0D05  
                     l11667 104F                       l11691 1226                       l11683 1213  
                     l11675 1201                       l11755 0FDE                       l11747 0FAA  
                     l11739 0F7C                       l11771 14E1                       l11763 14C4  
                     l11843 0DB1                       l11835 0D84                       l11827 0D67  
                     l11851 0E5C                       l11819 0D44                       l11915 13BC  
                     l11907 13A5                       l11931 0029                       l11923 0015  
                     l10797 11FE                       l10789 11D8                       l10893 107D  
                     l10885 106F                       l10957 1458                       l10949 1439  
                     l10981 1382                       l10973 1364                       l10965 134C  
                     l11589 1FD3                       l11597 11C1                       l11669 105D  
                     l11693 122B                       l11685 1217                       l11677 1205  
                     l11757 0FF1                       l11749 0FBB                       l11781 1503  
                     l11773 14EF                       l11765 14D1                       l11845 0DB6  
                     l11837 0D91                       l11853 0E91                       l11829 0D6C  
                     l11861 0533                       l11917 13C0                       l11909 13A6  
                     l11941 003F                       l11933 002A                       l11925 001D  
                     l10799 1014                       l10887 1070                       l10879 1065  
                     l10959 145F                       l10975 136A                       l10967 1354  
                     l10983 138A                       l11599 10F8                       l11695 122C  
                     l11687 121C                       l11679 120D                       l11759 0FF2  
                     l11783 1504                       l11775 14F1                       l11767 14D5  
                     l11791 15F3                       l11847 0DF4                       l11839 0D9D  
                     l11871 05A3                       l11863 054F                       l11855 0518  
                     l11919 13C3                       l11951 0084                       l11943 004C  
                     l11935 0030                       l11927 001F                       l10889 1078  
                     l10985 1391                       l10977 1374                       l10969 1358  
                     l11697 122D                       l11689 1221                       l11785 1506  
                     l11777 14FD                       l11769 14D6                       l11793 15FB  
                     l11849 0E09                       l11881 05C7                       l11873 05AA  
                     l11865 055F                       l11857 051C                       l11961 00CC  
                     l11953 0094                       l11945 004F                       l11937 0035  
                     l11929 0025                       l10979 137B                       l11699 16EA  
                     l11787 1508                       l11779 14FF                       l11795 1609  
                     l11891 05F9                       l11883 05D4                       l11875 05AF  
                     l11867 0579                       l11859 052E                       l11971 0100  
                     l11963 00CE                       l11955 00B2                       l11947 0055  
                     l11939 003B                       l11789 1509                       l11797 160A  
                     l11893 0637                       l11885 05E0                       l11877 05B3  
                     l11869 058B                       l11981 013C                       l11973 010F  
                     l11965 00DB                       l11957 00B7                       l11949 0068  
      __size_of_calibrateIR 005E                       l11799 160F                       l11895 064C  
                     l11887 05EE                       l11879 05BC                       l11991 017F  
                     l11983 014B                       l11975 011E                       l11967 00E6  
                     l11959 00CA                       l11889 05F4                       l11897 069F  
                     l11993 0185                       l11985 0168                       l11977 0128  
                     l11969 00F5                       l11899 06D4                       l11995 018A  
                     l11987 016D                       l11979 012D                       l11997 0190  
                     l11989 0170                       l11999 019D                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072                       _EEADR 010D  
                     STR_10 0899                       STR_11 08A9                       STR_12 089D  
                     STR_13 083A                       STR_14 082A                       STR_15 0891  
                     STR_16 0885                       STR_17 0895                       STR_18 081A  
                     STR_19 0847             __end_of___awmod 1585                       _CARRY 0018  
           __end_of___ftdiv 0B36             __end_of___ftmul 0C24             __end_of___fttol 09C7  
           __end_of___lwdiv 146F             __end_of___lwmod 1392                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019        robotFollow@remaining 0068  
                     _Disp1 00A0                       _Disp2 00A2      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 166D               ___awtoft@sign 003B  
             ___ftpack@sign 0024                       _total 00B6              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00CD             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 07E4            __end_of_Debounce 1800          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072            robotFollow@temp1 006B  
          robotFollow@speed 0061                __end_of_Menu 141F  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00D6                __end_of_isr1 0A6E                __end_of_main 02B5  
              __end_of_init 122F             rotate@direction 0025                      ??_Menu 0020  
             ?_readDistance 0028      readAvgDistance@fullval 0030                      ??_isr1 0078  
                    ??_main 006D               ___fttol@sign1 0030                      ??_init 0023  
       __end_of_ReadButtons 125F               Menu@BTN_input 0020                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          __end_of___awtoft 11A7            __end_of___ftpack 16EA            __end_of_adc_read 10CE  
               ?_ChargeMode 0072                      i1l2220 0A1A                      i1l2221 09EE  
                    i1l2222 0A0B                      i1l2223 0A19                      i1l2224 0A3C  
                    i1l2225 0A3B                      i1l2226 0A62                      i1l2227 0A61  
                    i1l2228 0A62                      i1l4510 17A4                      i1l4511 17BE  
                    i1l4520 17FF                      i1l4512 17BD                      i1l4513 17C2  
                    i1l4505 1782                      i1l4514 17DC                      i1l4506 1781  
                    i1l4515 17DB                      i1l4507 1786                      i1l4523 123C  
                    i1l4516 17E0                      i1l4508 17A0                      i1l4524 125E  
                    i1l4517 17FA                      i1l4509 179F                      i1l4525 1244  
                    i1l4518 17F9                      i1l4526 124C                      i1l4519 17FF  
                    i1l4527 1254                      i1l4528 125C                      i1l7550 131E  
                    i1l7551 1312                      i1l7552 1323                      i1l7553 1324  
                    i1l7554 1335                      i1l7555 1343                      i1l7556 134B  
                    i1l7549 1344                      u400_20 17F6                      u400_21 17F5  
                    u370_20 0A05                      u370_21 0A04                      u371_20 0A10  
                    u371_21 0A0F                      u380_20 1250                      u372_20 0A20  
                    u380_21 124F                      u372_21 0A1F                      u381_20 1258  
                    u373_20 0A36                      u381_21 1257                      u373_21 0A35  
                    u390_20 1798                      u374_20 0A41                      u390_21 1797  
                    u374_21 0A40                 _DistLowByte 00BF                      u391_20 179C  
                    u375_20 0A47                      u391_21 179B                      u375_21 0A46  
                    u392_20 17AA                      u376_20 0A5F                      u368_20 09CB  
                    u392_21 17A9                      u376_21 0A5E                      u368_21 09CA  
                    u393_20 17B6                      u377_20 1238                      u369_20 09EC  
                    u393_21 17B5                      u377_21 1237                      u369_21 09EB  
                    u394_20 17BA                      u386_20 176E                      u378_20 1240  
                    u394_21 17B9                      u386_21 176D                      u378_21 123F  
                    u395_20 17C8                      u387_20 177A                      u379_20 1248  
                    u395_21 17C7                      u387_21 1779                      u379_21 1247  
                    u396_20 17D4                      u388_20 177E                      u396_21 17D3  
                    u388_21 177D                      u397_20 17D8                      u389_20 178C  
                    u397_21 17D7                      u389_21 178B                      u398_20 17E6  
                    u494_20 130E                      u398_21 17E5                      u494_21 130D  
                    u399_20 17F2                      u399_21 17F1                      u495_25 1313  
                    u496_20 1322                      u496_21 1321                      u497_20 132E  
                    u497_21 132D                      u497_25 132A                      u498_25 1336  
                    u499_20 1342                      u499_21 1341                      _TMR0IE 005D  
                    _TMR0IF 005A                scan360@steps 005F                      _SSPCON 0014  
                    _SSPBUF 0013                  _UpReleased 038C            __end_of_lcd_init 1123  
                    _adcVal 00AA                      ___ftge 1585             _UpDebounceCount 00C4  
           RobotDrive@speed 0056                  _RobotDrive 1294                      ___wmul 1123  
                 ??___awmod 0024                   ??___ftdiv 003C                _turnhighByte 00CC  
                 ??___ftmul 004C                ??_ADCconvert 002E                   ??___fttol 002C  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 104F  
            ??_readDistance 002A             ___awmod@divisor 0020    __end_of_lcd_write_string 11D3  
           ___awmod@counter 0025                ?_robotFollow 005F                      _rotate 146F  
                    _rxfifo 01A0                      clrloop 1FC8                      _txfifo 01B0  
                    _rxiptr 00C9                      _rxoptr 00CA                 _BumpSensors 00BC  
                    _txiptr 00CE                   ??_scan360 005B       ___ftmul@f3_as_product 0051  
                    _txoptr 00CF            __end_of_ser_init 10F8            __end_of_ser_isrx 107E  
         __end_ofi1___lwmod 134C                      saved_w 007E               main@shortwall 00E1  
              _AngleLowByte 00BB                 _LeftPressed 0384      RobotDrive@speedlowByte 005B  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 0518                  ___ftge@ff1 0020                  ___ftge@ff2 0023  
                ___ftdiv@f1 0039                  ___ftdiv@f2 0036                  ___ftdiv@f3 0041  
                ___awtoft@c 0036                  ___ftmul@f1 0046                  ___ftmul@f2 0049  
                ___fttol@f1 0028              __pcstackCOMMON 0072                __pidataBANK1 1004  
               _ReadButtons 122F         __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 007D                  __pbssBANK1 00A0  
                __pbssBANK3 0190           _DownDebounceCount 00C0              main@direction1 00DD  
   robotMoveSpeed@remaining 0066          _RightDebounceCount 00C3                  __pmaintext 0015  
                   ?___ftge 0020                 ?_RobotDrive 0056                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00BE                  __ptext1120 1392  
     __end_of_UpdateDisplay 1000                  __ptext1121 0518                  __ptext1130 10F8  
                __ptext1122 0D44                  __ptext1131 11A7                  __ptext1123 15F3  
                __ptext1140 02B5                  __ptext1132 1FCF                  __ptext1124 14BF  
                __ptext1141 08AD                  __ptext1133 117B                  __ptext1125 0EA1  
                __ptext1150 0921                  __ptext1142 146F                  __ptext1134 0B36  
                __ptext1126 16EA                  __ptext1151 166D                  __ptext1143 07E4  
                __ptext1135 0A6E                  __ptext1127 1200                  __ptext1160 10A5  
                __ptext1152 134C                  __ptext1144 1FDA                  __ptext1136 125F  
                __ptext1128 104F                  __ptext1161 09C7                  __ptext1153 141F  
                __ptext1145 1025                  __ptext1137 1294                  __ptext1129 0C24  
                __ptext1162 122F                  __ptext1154 1123                  __ptext1146 1039  
                __ptext1138 114F                  __ptext1163 1308                  __ptext1155 1065  
                __ptext1147 12CD                  __ptext1139 06E4                  __ptext1164 1768  
                __ptext1156 1011                  __ptext1148 151D                  __ptext1165 0000  
                __ptext1157 11D3                  __ptext1149 1585                  __ptext1158 13D8  
                __ptext1159 10CE          __size_of_ser_getch 002C                   ?___awtoft 0036  
                 ?___ftpack 0020                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 002D          __size_of_robo_init 0019                     i1l11251 130E  
                   i1l11261 132E                     i1l11253 1312                     i1l10701 1234  
                   i1l11263 1335                     i1l11255 1319                     i1l10711 1241  
                   i1l10703 1238                     i1l11265 133C                     i1l11257 131E  
                   i1l11249 1308                     i1l10721 1250                     i1l10713 1243  
                   i1l10705 1239                     i1l10811 176E                     i1l11259 1324  
                   i1l11267 1344                     i1l10731 125B                     i1l10723 1251  
                   i1l10715 1248                     i1l10707 123B                     i1l10821 1792  
                   i1l10813 1774                     i1l11269 134B                     i1l10733 125C  
                   i1l10725 1253                     i1l10717 1249                     i1l10709 1240  
                   i1l10661 09D7                     i1l10653 09C7                     i1l10831 17B6  
                   i1l10823 1798                     i1l10815 177A                     i1l10735 125E  
                   i1l10727 1258                     i1l10719 124B                     i1l10671 0A0B  
                   i1l10663 09EC                     i1l10655 09CB                     i1l10841 17D8  
                   i1l10833 17BA                     i1l10825 179C                     i1l10817 177E  
                   i1l10809 1768                     i1l10729 1259                     i1l10681 0A30  
                   i1l10673 0A10                     i1l10665 09EE                     i1l10657 09CC  
                   i1l10843 17E6                     i1l10835 17C8                     i1l10827 17AA  
                   i1l10819 178C                     i1l10691 0A4F                     i1l10683 0A36  
                   i1l10667 0A05                     i1l10659 09D6                     i1l10675 0A1A  
                   i1l10845 17EC                     i1l10837 17CE                     i1l10829 17B0  
                   i1l10693 0A55                     i1l10677 0A20                     i1l10685 0A3C  
                   i1l10669 0A06                     i1l10847 17F2                     i1l10839 17D4  
                   i1l10695 0A59                     i1l10687 0A41                     i1l10679 0A2A  
                   i1l10849 17F6                     i1l10697 0A5F                     i1l10689 0A47  
                   i1l10699 122F          __size_of_robotTurn 0074                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 1065                   ?_init_adc 0072          main@shortwall_3025 00E4  
                 ?_ser_init 0072                   ?_ser_isrx 0072             __size_of___ftge 006E  
          RobotDrive@radius 0058               ??_calibrateIR 0059                     ___awmod 151D  
                   ___ftdiv 0A6E             __size_of___wmul 002C                     ___ftmul 0B36  
                   ___fttol 0921                     ___lwdiv 141F                     ___lwmod 134C  
 __size_of_adc_read_channel 003B                  ??___awtoft 0039                  ??___ftpack 0025  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 15F3  
                   _dpowers 0810                __size_of_abs 0035        __size_of_robotFollow 01CC  
          ___awmod@dividend 0022                     _lowByte 00C8                     _ser_tmp 00CB  
                   _sprintf 06E4                  ??_lcd_init 0023         __size_of_RobotDrive 0039  
      end_of_initialization 10A1               _AngleHighByte 00BA                ??_ChargeMode 0059  
        robot_read@readType 0024           __end_of_ser_getch 117B                     init_ram 1FF1  
                ??_init_adc 0020     __size_of_robotMoveSpeed 015D           __end_of_ser_putch 1200  
   RobotDrive@speedhighByte 005C           __end_of_robo_init 07FD                _LeftReleased 0385  
         __end_of_robotTurn 0921                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038A  
  __size_of_readAvgDistance 007E                  _robot_read 0C24           ?_lcd_write_string 0027  
        __end_of_ChargeMode 13D8         __end_of_calibrateIR 151D          ??_lcd_write_string 0029  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
                 i1___lwmod 1308                  _totalSteps 00B8                  main@choice 00E3  
             ?_spi_transfer 0072                 ___ftdiv@exp 0044                 _VwallSensor 00C5  
               ___ftmul@exp 0050               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___ftge 15F3              __end_of___wmul 114F           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 14BF         start_initialization 107E  
    UpdateDisplay@LCDOutput 0049                 __end_of_abs 1294       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072          _TotalDistTravelled 00A8  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038B  
                  ??___ftge 0026                ??_RobotDrive 005A              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 14BF                 __pdataBANK1 00D0            _adc_read_channel 12CD  
               ?_robot_read 0072                    ??_rotate 0026                _readDistance 104F  
         __size_of___awtoft 002C           __size_of___ftpack 007D           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
             __pcstackBANK1 00DD      robotMoveSpeed@distance 005F          __end_of_RobotDrive 12CD  
         __size_of_lcd_init 002B              _robotMoveSpeed 0D44                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00DC  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                 _angleTurned 00AC                    ?___awmod 0020  
                  ?___ftdiv 0036                    ?___ftmul 0046           __size_of_ser_init 002A  
                  ?___fttol 0028           __size_of_ser_isrx 0019                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 0800                   _dist_high 00B0  
                  ?_scan360 0059         readDistance@readVal 002C                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
    __end_of_robotMoveSpeed 0EA1     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 015F              ___wmul@product 0024         __size_of_robot_read 0120  
                ser_putch@c 0021                   _ser_getch 114F                   _ser_putch 11D3  
                 _robo_init 07E4                   _robotTurn 08AD                _RightPressed 0389  
      __size_of_ReadButtons 0030               ??_robotFollow 0065        __end_of_spi_transfer 1025  
               __stringbase 080F           ___wmul@multiplier 0020            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 1768           _LeftDebounceCount 00C1  
           ?_robotMoveSpeed 005F   __size_of_lcd_write_string 002C          scan360@lowestSteps 005D  
   __size_of_lcd_write_data 0013                  ?_ser_getch 0072                  ?_ser_putch 0072  
   adc_read_channel@channel 0027                  ?_robo_init 0072                   init_fetch 1FED  
                ?_robotTurn 0022                  _ADCconvert 02B5            __size_of___awmod 0068  
          __size_of___ftdiv 00C8            __size_of___ftmul 00EE            __size_of___fttol 00A6  
          __size_of___lwdiv 0050            __size_of___lwmod 0046                    ___awtoft 117B  
                  ___ftpack 166D               _UpdateDisplay 0EA1                    _adc_read 10A5  
               _currentMenu 00C6            __size_of_scan360 007A             ___lwdiv@divisor 0026  
       __end_of_robotFollow 06E4             ___lwdiv@counter 002D                 _menuStrings 00D0  
                  _highByte 00C7                    _lcd_init 10F8                    _dist_low 00B2  
          __size_of_sprintf 0100    __end_of_adc_read_channel 1308   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 1039               __size_of_isr1 00A7  
             __size_of_main 02A0               __size_of_init 002F                    clear_ram 1FC7  
                  _ser_init 10CE        robotFollow@AdcTarget 0063                    _ser_isrx 1065  
                  main@RT2A 00DF                    main@RT2P 00E6             _readAvgDistance 16EA  
              ?_calibrateIR 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
       _CenterDebounceCount 00BD                _RTC_FLAG_1MS 0386          UpdateDisplay@F1249 0190  
                  intlevel1 0000              _lcd_set_cursor 1FCF                   sprintf@ap 003C  
                 sprintf@sp 0043              robotTurn@angle 0022            ___lwmod@dividend 0030  
        __end_of_robot_read 0D44                   stringcode 080A                 ??_ser_getch 0020  
               ??_ser_putch 0020               _distTravelled 00AE                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 1025            scan360@lowestVal 005B                 _robotFollow 0518  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0044  
                  sprintf@f 0034         robotMoveSpeed@temp1 0069         robotMoveSpeed@speed 0061  
           ___lwmod@divisor 002E                  _ROBOTerror 00C2             ___lwmod@counter 0033  
                  stringdir 080A                    stringtab 0800         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 1FDA            _lcd_write_string 11A7    RobotDrive@radiushighByte 005E  
              _spi_transfer 1011                 _RTC_Counter 00A6     __end_of_readAvgDistance 1768  
            _lcd_write_data 1FDA  
