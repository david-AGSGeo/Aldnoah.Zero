

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 20 17:11:12 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_Menu
    48                           	FNCALL	_main,_calibrateIR
    49                           	FNCALL	_main,_rotate
    50                           	FNCALL	_main,_spi_transfer
    51                           	FNCALL	_init,_init_adc
    52                           	FNCALL	_init,_lcd_init
    53                           	FNCALL	_init,_ser_init
    54                           	FNCALL	_init,_robo_init
    55                           	FNCALL	_calibrateIR,_rotate
    56                           	FNCALL	_lcd_init,_lcd_write_control
    57                           	FNCALL	_rotate,_spi_transfer
    58                           	FNCALL	_robo_init,_ser_putch
    59                           	FNROOT	_main
    60                           	FNCALL	_isr1,___lwmod
    61                           	FNCALL	_isr1,_readAvgDistance
    62                           	FNCALL	_isr1,_UpdateDisplay
    63                           	FNCALL	_isr1,_ReadButtons
    64                           	FNCALL	_UpdateDisplay,i1_lcd_write_control
    65                           	FNCALL	_UpdateDisplay,_sprintf
    66                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    67                           	FNCALL	_UpdateDisplay,_lcd_write_string
    68                           	FNCALL	_UpdateDisplay,___awmod
    69                           	FNCALL	_readAvgDistance,_readDistance
    70                           	FNCALL	_readAvgDistance,___lwdiv
    71                           	FNCALL	_readAvgDistance,_ADCconvert
    72                           	FNCALL	_readDistance,_adc_read_channel
    73                           	FNCALL	_lcd_write_string,_lcd_write_data
    74                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    75                           	FNCALL	_sprintf,___lwdiv
    76                           	FNCALL	_sprintf,___lwmod
    77                           	FNCALL	_ADCconvert,___wmul
    78                           	FNCALL	_ADCconvert,___lwdiv
    79                           	FNCALL	_ReadButtons,_Debounce
    80                           	FNCALL	_adc_read_channel,_adc_read
    81                           	FNCALL	intlevel1,_isr1
    82                           	global	intlevel1
    83                           	FNROOT	intlevel1
    84                           	global	_current_step
    85                           	global	_menuStrings
    86                           	global	_shortMenuStrings
    87                           psect	idataBANK0,class=CODE,space=0,delta=2
    88                           global __pidataBANK0
    89  0003                     __pidataBANK0:
    90                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
    91                           	line	30
    92                           
    93                           ;initializer for _current_step
    94  0003  343C               	retlw	03Ch
    95                           psect	idataBANK1,class=CODE,space=0,delta=2
    96                           global __pidataBANK1
    97  0D33                     __pidataBANK1:
    98                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
    99                           	line	32
   100                           
   101                           ;initializer for _menuStrings
   102  0D33  3423               	retlw	(STR_1-__stringbase)&0ffh
   103  0D34  341A               	retlw	(STR_2-__stringbase)&0ffh
   104  0D35  3435               	retlw	(STR_3-__stringbase)&0ffh
   105  0D36  343E               	retlw	(STR_4-__stringbase)&0ffh
   106  0D37  342C               	retlw	(STR_5-__stringbase)&0ffh
   107                           	line	33
   108                           
   109                           ;initializer for _shortMenuStrings
   110  0D38  344E               	retlw	(STR_6-__stringbase)&0ffh
   111  0D39  3452               	retlw	(STR_7-__stringbase)&0ffh
   112  0D3A  3446               	retlw	(STR_8-__stringbase)&0ffh
   113  0D3B  344A               	retlw	(STR_9-__stringbase)&0ffh
   114  0D3C  3456               	retlw	(STR_10-__stringbase)&0ffh
   115                           	global	_dpowers
   116                           psect	strings,class=STRING,delta=2
   117                           global __pstrings
   118  0600                     __pstrings:
   119                           ;	global	stringdir,stringtab,__stringbase
   120  0600                     stringtab:
   121                           ;	String table - string pointers are 1 byte each
   122  0600  1BFF               	btfsc	(btemp+1),7
   123  0601  2E0A               	ljmp	stringcode
   124  0602  1383               	bcf	status,7
   125  0603  187F               	btfsc	(btemp+1),0
   126  0604  1783               	bsf	status,7
   127  0605  0800               	movf	indf,w
   128  0606  0A84               	incf fsr
   129  0607  1903               skipnz
   130  0608  0AFF               incf btemp+1
   131  0609  0008               	return
   132  060A                     stringcode:stringdir:
      + 060A                     stringdir:	
   133  060A  3006               movlw high(stringdir)
   134  060B  008A               movwf pclath
   135  060C  0804               movf fsr,w
   136  060D  0A84               incf fsr
   137  060E  0782               	addwf pc
   138  060F                     __stringbase:
   139  060F  3400               	retlw	0
   140                           psect	strings
   141                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   142                           	line	350
   143  0610                     _dpowers:
   144  0610  3401               	retlw	01h
   145  0611  3400               	retlw	0
   146                           
   147  0612  340A               	retlw	0Ah
   148  0613  3400               	retlw	0
   149                           
   150  0614  3464               	retlw	064h
   151  0615  3400               	retlw	0
   152                           
   153  0616  34E8               	retlw	0E8h
   154  0617  3403               	retlw	03h
   155                           
   156  0618  3410               	retlw	010h
   157  0619  3427               	retlw	027h
   158                           
   159                           	global	_dpowers
   160                           	global	_RTC_Counter
   161                           	global	_adcVal
   162                           	global	_dist_high
   163                           	global	_pos
   164                           	global	_total
   165                           	global	_CenterDebounceCount
   166                           	global	_DownDebounceCount
   167                           	global	_LeftDebounceCount
   168                           	global	_RightDebounceCount
   169                           	global	_UpDebounceCount
   170                           	global	_buttonPressed
   171                           	global	_currentMenu
   172                           	global	_current_direction
   173                           	global	_highByte
   174                           	global	_lowByte
   175                           	global	_rxiptr
   176                           	global	_rxoptr
   177                           	global	_ser_tmp
   178                           	global	_serialInput
   179                           	global	_turnhighByte
   180                           	global	_turnlowByte
   181                           	global	_txiptr
   182                           	global	_txoptr
   183                           	global	_CenterPressed
   184                           	global	_CenterReleased
   185                           	global	_DownPressed
   186                           	global	_DownReleased
   187                           	global	_LeftPressed
   188                           	global	_LeftReleased
   189                           	global	_RTC_FLAG_10MS
   190                           	global	_RTC_FLAG_1MS
   191                           	global	_RTC_FLAG_250MS
   192                           	global	_RTC_FLAG_500MS
   193                           	global	_RTC_FLAG_50MS
   194                           	global	_RightPressed
   195                           	global	_RightReleased
   196                           	global	_UpPressed
   197                           	global	_UpReleased
   198                           	global	UpdateDisplay@F1222
   199                           	global	_rxfifo
   200                           	global	_txfifo
   201                           	global	_dist_low
   202                           	global	_distance
   203                           	global	_totalSteps
   204                           	global	_ADCON0
   205  001F                     _ADCON0	set	31
   206                           	global	_ADRESH
   207  001E                     _ADRESH	set	30
   208                           	global	_PORTA
   209  0005                     _PORTA	set	5
   210                           	global	_PORTC
   211  0007                     _PORTC	set	7
   212                           	global	_PORTD
   213  0008                     _PORTD	set	8
   214                           	global	_PORTE
   215  0009                     _PORTE	set	9
   216                           	global	_RCREG
   217  001A                     _RCREG	set	26
   218                           	global	_SSPBUF
   219  0013                     _SSPBUF	set	19
   220                           	global	_SSPCON
   221  0014                     _SSPCON	set	20
   222                           	global	_TMR0
   223  0001                     _TMR0	set	1
   224                           	global	_TXREG
   225  0019                     _TXREG	set	25
   226                           	global	AT25256A@CS0
   227  0038                     AT25256A@CS0	set	56
   228                           	global	AT25256A@CS1
   229  0039                     AT25256A@CS1	set	57
   230                           	global	_CARRY
   231  0018                     _CARRY	set	24
   232                           	global	_CHS0
   233  00FB                     _CHS0	set	251
   234                           	global	_CHS1
   235  00FC                     _CHS1	set	252
   236                           	global	_CHS2
   237  00FD                     _CHS2	set	253
   238                           	global	_CREN
   239  00C4                     _CREN	set	196
   240                           	global	_GIE
   241  005F                     _GIE	set	95
   242                           	global	_GO
   243  00FA                     _GO	set	250
   244                           	global	_OERR
   245  00C1                     _OERR	set	193
   246                           	global	_RB0
   247  0030                     _RB0	set	48
   248                           	global	_RB2
   249  0032                     _RB2	set	50
   250                           	global	_RB3
   251  0033                     _RB3	set	51
   252                           	global	_RB4
   253  0034                     _RB4	set	52
   254                           	global	_RB5
   255  0035                     _RB5	set	53
   256                           	global	_RB6
   257  0036                     _RB6	set	54
   258                           	global	_RC0
   259  0038                     _RC0	set	56
   260                           	global	_RC1
   261  0039                     _RC1	set	57
   262                           	global	_RC2
   263  003A                     _RC2	set	58
   264                           	global	_RCIF
   265  0065                     _RCIF	set	101
   266                           	global	_RE0
   267  0048                     _RE0	set	72
   268                           	global	_RE1
   269  0049                     _RE1	set	73
   270                           	global	_RE2
   271  004A                     _RE2	set	74
   272                           	global	_RX9
   273  00C6                     _RX9	set	198
   274                           	global	_SPEN
   275  00C7                     _SPEN	set	199
   276                           	global	_SSPIF
   277  0063                     _SSPIF	set	99
   278                           	global	_TMR0IE
   279  005D                     _TMR0IE	set	93
   280                           	global	_TMR0IF
   281  005A                     _TMR0IF	set	90
   282                           	global	_TXIF
   283  0064                     _TXIF	set	100
   284                           	global	_ADCON1
   285  009F                     _ADCON1	set	159
   286                           	global	_ADRESL
   287  009E                     _ADRESL	set	158
   288                           	global	_OPTION_REG
   289  0081                     _OPTION_REG	set	129
   290                           	global	_SPBRG
   291  0099                     _SPBRG	set	153
   292                           	global	_SSPSTAT
   293  0094                     _SSPSTAT	set	148
   294                           	global	_TRISA
   295  0085                     _TRISA	set	133
   296                           	global	_TRISB
   297  0086                     _TRISB	set	134
   298                           	global	_TRISC
   299  0087                     _TRISC	set	135
   300                           	global	_TRISD
   301  0088                     _TRISD	set	136
   302                           	global	_TRISE
   303  0089                     _TRISE	set	137
   304                           	global	_BRGH
   305  04C2                     _BRGH	set	1218
   306                           	global	_RCIE
   307  0465                     _RCIE	set	1125
   308                           	global	_SYNC
   309  04C4                     _SYNC	set	1220
   310                           	global	_TX9
   311  04C6                     _TX9	set	1222
   312                           	global	_TXEN
   313  04C5                     _TXEN	set	1221
   314                           	global	_TXIE
   315  0464                     _TXIE	set	1124
   316                           	global	_EEADR
   317  010D                     _EEADR	set	269
   318                           	global	_EEDATA
   319  010C                     _EEDATA	set	268
   320                           	global	_EECON1
   321  018C                     _EECON1	set	396
   322                           	global	_EECON2
   323  018D                     _EECON2	set	397
   324                           	global	_RD
   325  0C60                     _RD	set	3168
   326                           	global	_WR
   327  0C61                     _WR	set	3169
   328                           	global	_WREN
   329  0C62                     _WREN	set	3170
   330                           	
   331  061A                     STR_11:	
   332  061A  3441               	retlw	65	;'A'
   333  061B  3444               	retlw	68	;'D'
   334  061C  3443               	retlw	67	;'C'
   335  061D  343A               	retlw	58	;':'
   336  061E  3425               	retlw	37	;'%'
   337  061F  3464               	retlw	100	;'d'
   338  0620  3420               	retlw	32	;' '
   339  0621  3444               	retlw	68	;'D'
   340  0622  3469               	retlw	105	;'i'
   341  0623  3473               	retlw	115	;'s'
   342  0624  3474               	retlw	116	;'t'
   343  0625  343A               	retlw	58	;':'
   344  0626  3425               	retlw	37	;'%'
   345  0627  3464               	retlw	100	;'d'
   346  0628  3400               	retlw	0
   347                           psect	strings
   348                           	
   349  0629                     STR_2:	
   350  0629  3453               	retlw	83	;'S'
   351  062A  3463               	retlw	99	;'c'
   352  062B  3461               	retlw	97	;'a'
   353  062C  346E               	retlw	110	;'n'
   354  062D  345F               	retlw	95	;'_'
   355  062E  3433               	retlw	51	;'3'
   356  062F  3436               	retlw	54	;'6'
   357  0630  3430               	retlw	48	;'0'
   358  0631  3400               	retlw	0
   359                           psect	strings
   360                           	
   361  0632                     STR_1:	
   362  0632  3443               	retlw	67	;'C'
   363  0633  3461               	retlw	97	;'a'
   364  0634  346C               	retlw	108	;'l'
   365  0635  3469               	retlw	105	;'i'
   366  0636  3462               	retlw	98	;'b'
   367  0637  345F               	retlw	95	;'_'
   368  0638  3449               	retlw	73	;'I'
   369  0639  3452               	retlw	82	;'R'
   370  063A  3400               	retlw	0
   371                           psect	strings
   372                           	
   373  063B                     STR_5:	
   374  063B  3446               	retlw	70	;'F'
   375  063C  346C               	retlw	108	;'l'
   376  063D  3477               	retlw	119	;'w'
   377  063E  345F               	retlw	95	;'_'
   378  063F  3457               	retlw	87	;'W'
   379  0640  3461               	retlw	97	;'a'
   380  0641  346C               	retlw	108	;'l'
   381  0642  346C               	retlw	108	;'l'
   382  0643  3400               	retlw	0
   383                           psect	strings
   384                           	
   385  0644                     STR_3:	
   386  0644  3444               	retlw	68	;'D'
   387  0645  3472               	retlw	114	;'r'
   388  0646  3469               	retlw	105	;'i'
   389  0647  3476               	retlw	118	;'v'
   390  0648  3465               	retlw	101	;'e'
   391  0649  345F               	retlw	95	;'_'
   392  064A  3432               	retlw	50	;'2'
   393  064B  346D               	retlw	109	;'m'
   394  064C  3400               	retlw	0
   395                           psect	strings
   396                           	
   397  064D                     STR_4:	
   398  064D  3444               	retlw	68	;'D'
   399  064E  3472               	retlw	114	;'r'
   400  064F  3469               	retlw	105	;'i'
   401  0650  3476               	retlw	118	;'v'
   402  0651  3465               	retlw	101	;'e'
   403  0652  345F               	retlw	95	;'_'
   404  0653  344C               	retlw	76	;'L'
   405  0654  3400               	retlw	0
   406                           psect	strings
   407                           	
   408  0655                     STR_8:	
   409  0655  3444               	retlw	68	;'D'
   410  0656  3472               	retlw	114	;'r'
   411  0657  3432               	retlw	50	;'2'
   412  0658  3400               	retlw	0
   413                           psect	strings
   414                           	
   415  0659                     STR_9:	
   416  0659  3444               	retlw	68	;'D'
   417  065A  3472               	retlw	114	;'r'
   418  065B  344C               	retlw	76	;'L'
   419  065C  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  065D                     STR_6:	
   423  065D  3443               	retlw	67	;'C'
   424  065E  3461               	retlw	97	;'a'
   425  065F  346C               	retlw	108	;'l'
   426  0660  3400               	retlw	0
   427                           psect	strings
   428                           	
   429  0661                     STR_7:	
   430  0661  3453               	retlw	83	;'S'
   431  0662  3463               	retlw	99	;'c'
   432  0663  346E               	retlw	110	;'n'
   433  0664  3400               	retlw	0
   434                           psect	strings
   435                           	
   436  0665                     STR_10:	
   437  0665  3446               	retlw	70	;'F'
   438  0666  346C               	retlw	108	;'l'
   439  0667  3477               	retlw	119	;'w'
   440  0668  3400               	retlw	0
   441                           psect	strings
   442                           	file	"Assignment3_AldnoahZero.as"
   443                           	line	#
   444                           psect cinit,class=CODE,delta=2
   445                           global start_initialization
   446  0EBE                     start_initialization:
   447                           
   448                           psect	bitbssBANK0,class=BANK0,bit,space=1
   449                           global __pbitbssBANK0
   450  0368                     __pbitbssBANK0:
   451  0368                     _CenterPressed:
   452  0368                            ds      1
   453                           
   454  0369                     _CenterReleased:
   455  0369                            ds      1
   456                           
   457  036A                     _DownPressed:
   458  036A                            ds      1
   459                           
   460  036B                     _DownReleased:
   461  036B                            ds      1
   462                           
   463  036C                     _LeftPressed:
   464  036C                            ds      1
   465                           
   466  036D                     _LeftReleased:
   467  036D                            ds      1
   468                           
   469  036E                     _RTC_FLAG_10MS:
   470  036E                            ds      1
   471                           
   472  036F                     _RTC_FLAG_1MS:
   473  036F                            ds      1
   474                           
   475  0370                     _RTC_FLAG_250MS:
   476  0370                            ds      1
   477                           
   478  0371                     _RTC_FLAG_500MS:
   479  0371                            ds      1
   480                           
   481  0372                     _RTC_FLAG_50MS:
   482  0372                            ds      1
   483                           
   484  0373                     _RightPressed:
   485  0373                            ds      1
   486                           
   487  0374                     _RightReleased:
   488  0374                            ds      1
   489                           
   490  0375                     _UpPressed:
   491  0375                            ds      1
   492                           
   493  0376                     _UpReleased:
   494  0376                            ds      1
   495                           
   496                           psect	bssBANK0,class=BANK0,space=1
   497                           global __pbssBANK0
   498  0051                     __pbssBANK0:
   499  0051                     _RTC_Counter:
   500  0051                            ds      2
   501                           
   502  0053                     _adcVal:
   503  0053                            ds      2
   504                           
   505  0055                     _dist_high:
   506  0055                            ds      2
   507                           
   508  0057                     _pos:
   509  0057                            ds      2
   510                           
   511  0059                     _total:
   512  0059                            ds      2
   513                           
   514  005B                     _CenterDebounceCount:
   515  005B                            ds      1
   516                           
   517  005C                     _DownDebounceCount:
   518  005C                            ds      1
   519                           
   520  005D                     _LeftDebounceCount:
   521  005D                            ds      1
   522                           
   523  005E                     _RightDebounceCount:
   524  005E                            ds      1
   525                           
   526  005F                     _UpDebounceCount:
   527  005F                            ds      1
   528                           
   529  0060                     _buttonPressed:
   530  0060                            ds      1
   531                           
   532  0061                     _currentMenu:
   533  0061                            ds      1
   534                           
   535  0062                     _current_direction:
   536  0062                            ds      1
   537                           
   538  0063                     _highByte:
   539  0063                            ds      1
   540                           
   541  0064                     _lowByte:
   542  0064                            ds      1
   543                           
   544  0065                     _rxiptr:
   545  0065                            ds      1
   546                           
   547  0066                     _rxoptr:
   548  0066                            ds      1
   549                           
   550  0067                     _ser_tmp:
   551  0067                            ds      1
   552                           
   553  0068                     _serialInput:
   554  0068                            ds      1
   555                           
   556  0069                     _turnhighByte:
   557  0069                            ds      1
   558                           
   559  006A                     _turnlowByte:
   560  006A                            ds      1
   561                           
   562  006B                     _txiptr:
   563  006B                            ds      1
   564                           
   565  006C                     _txoptr:
   566  006C                            ds      1
   567                           
   568                           psect	dataBANK0,class=BANK0,space=1
   569                           global __pdataBANK0
   570  006F                     __pdataBANK0:
   571                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   572                           	line	30
   573  006F                     _current_step:
   574  006F                            ds      1
   575                           
   576                           psect	bssBANK1,class=BANK1,space=1
   577                           global __pbssBANK1
   578  00A0                     __pbssBANK1:
   579  00A0                     UpdateDisplay@F1222:
   580  00A0                            ds      16
   581                           
   582  00B0                     _rxfifo:
   583  00B0                            ds      16
   584                           
   585  00C0                     _txfifo:
   586  00C0                            ds      16
   587                           
   588  00D0                     _dist_low:
   589  00D0                            ds      2
   590                           
   591  00D2                     _distance:
   592  00D2                            ds      2
   593                           
   594  00D4                     _totalSteps:
   595  00D4                            ds      2
   596                           
   597                           psect	dataBANK1,class=BANK1,space=1
   598                           global __pdataBANK1
   599  00D6                     __pdataBANK1:
   600                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   601                           	line	32
   602  00D6                     _menuStrings:
   603  00D6                            ds      5
   604                           
   605                           psect	dataBANK1
   606                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   607                           	line	33
   608  00DB                     _shortMenuStrings:
   609  00DB                            ds      5
   610                           
   611                           psect clrtext,class=CODE,delta=2
   612                           global clear_ram
   613                           ;	Called with FSR containing the base address, and
   614                           ;	W with the last address+1
   615  0D22                     clear_ram:
   616  0D22  0064               	clrwdt			;clear the watchdog before getting into this loop
   617  0D23                     clrloop:
   618  0D23  0180               	clrf	indf		;clear RAM location pointed to by FSR
   619  0D24  0A84               	incf	fsr,f		;increment pointer
   620  0D25  0604               	xorwf	fsr,w		;XOR with final address
   621  0D26  1903               	btfsc	status,2	;have we reached the end yet?
   622  0D27  3400               	retlw	0		;all done for this memory range, return
   623  0D28  0604               	xorwf	fsr,w		;XOR again to restore value
   624  0D29  2D23               	goto	clrloop		;do the next byte
   625                           
   626                           ; Clear objects allocated to BITBANK0
   627                           psect cinit,class=CODE,delta=2
   628  0EBE  01ED               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   629  0EBF  01EE               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   630                           ; Clear objects allocated to BANK0
   631                           psect cinit,class=CODE,delta=2
   632  0EC0  1383               	bcf	status, 7	;select IRP bank0
   633  0EC1  3051               	movlw	low(__pbssBANK0)
   634  0EC2  0084               	movwf	fsr
   635  0EC3  306D               	movlw	low((__pbssBANK0)+01Ch)
   636  0EC4  120A  158A  2522   	fcall	clear_ram
              120A  158A         
   637                           ; Clear objects allocated to BANK1
   638                           psect cinit,class=CODE,delta=2
   639  0EC9  30A0               	movlw	low(__pbssBANK1)
   640  0ECA  0084               	movwf	fsr
   641  0ECB  30D6               	movlw	low((__pbssBANK1)+036h)
   642  0ECC  120A  158A  2522   	fcall	clear_ram
              120A  158A         
   643                           global btemp
   644                           psect inittext,class=CODE,delta=2
   645                           global init_fetch,btemp
   646                           ;	Called with low address in FSR and high address in W
   647  0D50                     init_fetch:
   648  0D50  087E               	movf btemp,w
   649  0D51  008A               	movwf pclath
   650  0D52  087F               	movf btemp+1,w
   651  0D53  0082               	movwf pc
   652                           global init_ram
   653                           ;Called with:
   654                           ;	high address of idata address in btemp 
   655                           ;	low address of idata address in btemp+1 
   656                           ;	low address of data in FSR
   657                           ;	high address + 1 of data in btemp-1
   658  0D54                     init_ram:
   659  0D54  120A  158A  2550   	fcall init_fetch
              120A  158A         
   660  0D59  0080               	movwf indf,f
   661  0D5A  0A84               	incf fsr,f
   662  0D5B  0804               	movf fsr,w
   663  0D5C  067D               	xorwf btemp-1,w
   664  0D5D  1903               	btfsc status,2
   665  0D5E  3400               	retlw 0
   666  0D5F  0AFF               	incf btemp+1,f
   667  0D60  1903               	btfsc status,2
   668  0D61  0AFE               	incf btemp,f
   669  0D62  2D54               	goto init_ram
   670                           ; Initialize objects allocated to BANK1
   671                           psect cinit,class=CODE,delta=2
   672                           global init_ram, __pidataBANK1
   673  0ED1  30E0               	movlw low(__pdataBANK1+10)
   674  0ED2  00FD               	movwf btemp-1,f
   675  0ED3  300D               	movlw high(__pidataBANK1)
   676  0ED4  00FE               	movwf btemp,f
   677  0ED5  3033               	movlw low(__pidataBANK1)
   678  0ED6  00FF               	movwf btemp+1,f
   679  0ED7  30D6               	movlw low(__pdataBANK1)
   680  0ED8  0084               	movwf fsr,f
   681  0ED9  120A  158A  2554   	fcall init_ram
              120A  158A         
   682                           ; Initialize objects allocated to BANK0
   683                           	global __pidataBANK0
   684                           psect cinit,class=CODE,delta=2
   685  0EDE  120A  118A  2003   	fcall	__pidataBANK0+0		;fetch initializer
              120A  158A         
   686  0EE3  00EF               	movwf	__pdataBANK0+0&07fh		
   687                           psect cinit,class=CODE,delta=2
   688                           global end_of_initialization
   689                           
   690                           ;End of C runtime variable initialization code
   691                           
   692  0EE4                     end_of_initialization:
   693  0EE4  0183               clrf status
   694  0EE5  120A  118A  2C9E   ljmp _main	;jump to C main() function
   695                           psect	cstackBANK1,class=BANK1,space=1
   696                           global __pcstackBANK1
   697  00E0                     __pcstackBANK1:
   698                           	global	??_ser_init
   699  00E0                     ??_ser_init:	; 0 bytes @ 0x0
   700                           	global	??_Menu
   701  00E0                     ??_Menu:	; 0 bytes @ 0x0
   702                           	global	??_spi_transfer
   703  00E0                     ??_spi_transfer:	; 0 bytes @ 0x0
   704                           	global	??_init_adc
   705  00E0                     ??_init_adc:	; 0 bytes @ 0x0
   706                           	global	??_lcd_write_control
   707  00E0                     ??_lcd_write_control:	; 0 bytes @ 0x0
   708                           	global	??_ser_putch
   709  00E0                     ??_ser_putch:	; 0 bytes @ 0x0
   710                           	global	Menu@input
   711  00E0                     Menu@input:	; 1 bytes @ 0x0
   712  00E0                     	ds	1
   713                           	global	spi_transfer@temp
   714  00E1                     spi_transfer@temp:	; 1 bytes @ 0x1
   715                           	global	ser_putch@c
   716  00E1                     ser_putch@c:	; 1 bytes @ 0x1
   717  00E1                     	ds	1
   718                           	global	??_robo_init
   719  00E2                     ??_robo_init:	; 0 bytes @ 0x2
   720                           	global	lcd_write_control@databyte
   721  00E2                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   722                           	global	spi_transfer@data
   723  00E2                     spi_transfer@data:	; 1 bytes @ 0x2
   724  00E2                     	ds	1
   725                           	global	?_rotate
   726  00E3                     ?_rotate:	; 0 bytes @ 0x3
   727                           	global	??_lcd_init
   728  00E3                     ??_lcd_init:	; 0 bytes @ 0x3
   729                           	global	??_init
   730  00E3                     ??_init:	; 0 bytes @ 0x3
   731                           	global	rotate@direction
   732  00E3                     rotate@direction:	; 1 bytes @ 0x3
   733  00E3                     	ds	1
   734                           	global	??_rotate
   735  00E4                     ??_rotate:	; 0 bytes @ 0x4
   736  00E4                     	ds	2
   737                           	global	rotate@steps
   738  00E6                     rotate@steps:	; 1 bytes @ 0x6
   739  00E6                     	ds	1
   740                           	global	rotate@i
   741  00E7                     rotate@i:	; 1 bytes @ 0x7
   742  00E7                     	ds	1
   743                           	global	??_calibrateIR
   744  00E8                     ??_calibrateIR:	; 0 bytes @ 0x8
   745                           	global	??_main
   746  00E8                     ??_main:	; 0 bytes @ 0x8
   747  00E8                     	ds	1
   748                           	global	main@choice
   749  00E9                     main@choice:	; 1 bytes @ 0x9
   750  00E9                     	ds	1
   751                           psect	cstackCOMMON,class=COMMON,space=1
   752                           global __pcstackCOMMON
   753  0070                     __pcstackCOMMON:
   754                           	global	?_readAvgDistance
   755  0070                     ?_readAvgDistance:	; 0 bytes @ 0x0
   756                           	global	?_UpdateDisplay
   757  0070                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   758                           	global	?_ser_init
   759  0070                     ?_ser_init:	; 0 bytes @ 0x0
   760                           	global	?_robo_init
   761  0070                     ?_robo_init:	; 0 bytes @ 0x0
   762                           	global	?_ADCconvert
   763  0070                     ?_ADCconvert:	; 0 bytes @ 0x0
   764                           	global	?_init_adc
   765  0070                     ?_init_adc:	; 0 bytes @ 0x0
   766                           	global	?_lcd_write_control
   767  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   768                           	global	?_lcd_write_data
   769  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   770                           	global	??_lcd_write_data
   771  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   772                           	global	?_lcd_set_cursor
   773  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   774                           	global	?_lcd_init
   775  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   776                           	global	?_isr1
   777  0070                     ?_isr1:	; 0 bytes @ 0x0
   778                           	global	?_init
   779  0070                     ?_init:	; 0 bytes @ 0x0
   780                           	global	?_calibrateIR
   781  0070                     ?_calibrateIR:	; 0 bytes @ 0x0
   782                           	global	?_main
   783  0070                     ?_main:	; 0 bytes @ 0x0
   784                           	global	?_ser_putch
   785  0070                     ?_ser_putch:	; 0 bytes @ 0x0
   786                           	global	?_Debounce
   787  0070                     ?_Debounce:	; 0 bytes @ 0x0
   788                           	global	??_Debounce
   789  0070                     ??_Debounce:	; 0 bytes @ 0x0
   790                           	global	?i1_lcd_write_control
   791  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   792                           	global	??i1_lcd_write_control
   793  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   794                           	global	?_ReadButtons
   795  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
   796                           	global	?_Menu
   797  0070                     ?_Menu:	; 1 bytes @ 0x0
   798                           	global	?_spi_transfer
   799  0070                     ?_spi_transfer:	; 1 bytes @ 0x0
   800                           	global	?_adc_read_channel
   801  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   802                           	global	?_adc_read
   803  0070                     ?_adc_read:	; 2 bytes @ 0x0
   804                           	global	?___wmul
   805  0070                     ?___wmul:	; 2 bytes @ 0x0
   806                           	global	?___awmod
   807  0070                     ?___awmod:	; 2 bytes @ 0x0
   808                           	global	UpdateDisplay@serialInput
   809  0070                     UpdateDisplay@serialInput:	; 1 bytes @ 0x0
   810                           	global	___wmul@multiplier
   811  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   812                           	global	___awmod@divisor
   813  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   814  0070                     	ds	1
   815                           	global	??_ReadButtons
   816  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
   817  0071                     	ds	1
   818                           	global	??_adc_read
   819  0072                     ??_adc_read:	; 0 bytes @ 0x2
   820                           	global	lcd_write_data@databyte
   821  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   822                           	global	i1lcd_write_control@databyte
   823  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   824                           	global	___wmul@multiplicand
   825  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   826                           	global	___awmod@dividend
   827  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   828  0072                     	ds	1
   829                           	global	??_lcd_set_cursor
   830  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   831                           	global	lcd_set_cursor@address
   832  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   833  0073                     	ds	1
   834                           	global	??___wmul
   835  0074                     ??___wmul:	; 0 bytes @ 0x4
   836                           	global	??___awmod
   837  0074                     ??___awmod:	; 0 bytes @ 0x4
   838                           	global	adc_read@adc_value
   839  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   840                           	global	___wmul@product
   841  0074                     ___wmul@product:	; 2 bytes @ 0x4
   842  0074                     	ds	1
   843                           	global	___awmod@counter
   844  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   845  0075                     	ds	1
   846                           	global	??_adc_read_channel
   847  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   848                           	global	?___lwdiv
   849  0076                     ?___lwdiv:	; 2 bytes @ 0x6
   850                           	global	___awmod@sign
   851  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   852                           	global	___lwdiv@divisor
   853  0076                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   854  0076                     	ds	1
   855                           	global	?_lcd_write_string
   856  0077                     ?_lcd_write_string:	; 0 bytes @ 0x7
   857                           	global	adc_read_channel@channel
   858  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   859                           	global	lcd_write_string@s
   860  0077                     lcd_write_string@s:	; 2 bytes @ 0x7
   861  0077                     	ds	1
   862                           	global	?_readDistance
   863  0078                     ?_readDistance:	; 2 bytes @ 0x8
   864                           	global	___lwdiv@dividend
   865  0078                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   866  0078                     	ds	1
   867                           	global	??_lcd_write_string
   868  0079                     ??_lcd_write_string:	; 0 bytes @ 0x9
   869  0079                     	ds	1
   870                           	global	??_readDistance
   871  007A                     ??_readDistance:	; 0 bytes @ 0xA
   872                           	global	??___lwdiv
   873  007A                     ??___lwdiv:	; 0 bytes @ 0xA
   874  007A                     	ds	1
   875                           	global	___lwdiv@quotient
   876  007B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   877  007B                     	ds	1
   878                           	global	readDistance@fullval
   879  007C                     readDistance@fullval:	; 2 bytes @ 0xC
   880  007C                     	ds	1
   881                           	global	___lwdiv@counter
   882  007D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   883  007D                     	ds	1
   884                           	global	??_readAvgDistance
   885  007E                     ??_readAvgDistance:	; 0 bytes @ 0xE
   886                           psect	cstackBANK0,class=BANK0,space=1
   887                           global __pcstackBANK0
   888  0020                     __pcstackBANK0:
   889                           	global	??_ADCconvert
   890  0020                     ??_ADCconvert:	; 0 bytes @ 0x0
   891                           	global	?___lwmod
   892  0020                     ?___lwmod:	; 2 bytes @ 0x0
   893                           	global	___lwmod@divisor
   894  0020                     ___lwmod@divisor:	; 2 bytes @ 0x0
   895  0020                     	ds	2
   896                           	global	readAvgDistance@fullval
   897  0022                     readAvgDistance@fullval:	; 2 bytes @ 0x2
   898                           	global	___lwmod@dividend
   899  0022                     ___lwmod@dividend:	; 2 bytes @ 0x2
   900  0022                     	ds	2
   901                           	global	??___lwmod
   902  0024                     ??___lwmod:	; 0 bytes @ 0x4
   903                           	global	readAvgDistance@i
   904  0024                     readAvgDistance@i:	; 2 bytes @ 0x4
   905  0024                     	ds	1
   906                           	global	___lwmod@counter
   907  0025                     ___lwmod@counter:	; 1 bytes @ 0x5
   908  0025                     	ds	1
   909                           	global	?_sprintf
   910  0026                     ?_sprintf:	; 2 bytes @ 0x6
   911                           	global	sprintf@f
   912  0026                     sprintf@f:	; 1 bytes @ 0x6
   913  0026                     	ds	5
   914                           	global	??_sprintf
   915  002B                     ??_sprintf:	; 0 bytes @ 0xB
   916  002B                     	ds	3
   917                           	global	sprintf@ap
   918  002E                     sprintf@ap:	; 1 bytes @ 0xE
   919  002E                     	ds	1
   920                           	global	sprintf@flag
   921  002F                     sprintf@flag:	; 1 bytes @ 0xF
   922  002F                     	ds	1
   923                           	global	sprintf@prec
   924  0030                     sprintf@prec:	; 1 bytes @ 0x10
   925  0030                     	ds	1
   926                           	global	sprintf@_val
   927  0031                     sprintf@_val:	; 4 bytes @ 0x11
   928  0031                     	ds	4
   929                           	global	sprintf@sp
   930  0035                     sprintf@sp:	; 1 bytes @ 0x15
   931  0035                     	ds	1
   932                           	global	sprintf@c
   933  0036                     sprintf@c:	; 1 bytes @ 0x16
   934  0036                     	ds	1
   935                           	global	??_UpdateDisplay
   936  0037                     ??_UpdateDisplay:	; 0 bytes @ 0x17
   937  0037                     	ds	5
   938                           	global	UpdateDisplay@adcOutput
   939  003C                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x1C
   940  003C                     	ds	16
   941                           	global	??_isr1
   942  004C                     ??_isr1:	; 0 bytes @ 0x2C
   943  004C                     	ds	5
   944 ;;Data sizes: Strings 79, constant 10, data 11, bss 82, persistent 0 stack 0
   945 ;;Auto spaces:   Size  Autos    Used
   946 ;; COMMON          14     14      14
   947 ;; BANK0           80     49      80
   948 ;; BANK1           80     10      74
   949 ;; BANK3           96      0       0
   950 ;; BANK2           96      0       0
   951                           
   952 ;;
   953 ;; Pointer list with targets:
   954                           
   955 ;; ?___awmod	int  size(1) Largest target is 0
   956 ;;
   957 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   958 ;;
   959 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
   960 ;;
   961 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   962 ;;
   963 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   964 ;;
   965 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   966 ;;
   967 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   968 ;;		 -> STR_11(CODE[15]), 
   969 ;;
   970 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   971 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
   972 ;;
   973 ;; ?_sprintf	int  size(1) Largest target is 0
   974 ;;
   975 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   976 ;;		 -> ?_sprintf(BANK0[2]), 
   977 ;;
   978 ;; S8098$_cp	PTR const unsigned char  size(1) Largest target is 0
   979 ;;
   980 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   981 ;;
   982 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
   983 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
   984 ;;		 -> STR_6(CODE[4]), 
   985 ;;
   986 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
   987 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
   988 ;;		 -> STR_1(CODE[9]), 
   989 ;;
   990 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
   991 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
   992 ;;		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), 
   993 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
   994 ;;
   995                           
   996                           
   997 ;;
   998 ;; Critical Paths under _main in COMMON
   999 ;;
  1000 ;;   None.
  1001 ;;
  1002 ;; Critical Paths under _isr1 in COMMON
  1003 ;;
  1004 ;;   _readAvgDistance->_readDistance
  1005 ;;   _readAvgDistance->___lwdiv
  1006 ;;   _readDistance->_adc_read_channel
  1007 ;;   _lcd_write_string->___awmod
  1008 ;;   _lcd_set_cursor->i1_lcd_write_control
  1009 ;;   _sprintf->___lwdiv
  1010 ;;   _ADCconvert->___lwdiv
  1011 ;;   _ReadButtons->_Debounce
  1012 ;;   _adc_read_channel->_adc_read
  1013 ;;   ___lwmod->___lwdiv
  1014 ;;   ___lwdiv->___wmul
  1015 ;;
  1016 ;; Critical Paths under _main in BANK0
  1017 ;;
  1018 ;;   None.
  1019 ;;
  1020 ;; Critical Paths under _isr1 in BANK0
  1021 ;;
  1022 ;;   _isr1->_UpdateDisplay
  1023 ;;   _UpdateDisplay->_sprintf
  1024 ;;   _readAvgDistance->_ADCconvert
  1025 ;;   _sprintf->___lwmod
  1026 ;;
  1027 ;; Critical Paths under _main in BANK1
  1028 ;;
  1029 ;;   _main->_rotate
  1030 ;;   _calibrateIR->_rotate
  1031 ;;   _lcd_init->_lcd_write_control
  1032 ;;   _rotate->_spi_transfer
  1033 ;;   _robo_init->_ser_putch
  1034 ;;
  1035 ;; Critical Paths under _isr1 in BANK1
  1036 ;;
  1037 ;;   None.
  1038 ;;
  1039 ;; Critical Paths under _main in BANK3
  1040 ;;
  1041 ;;   None.
  1042 ;;
  1043 ;; Critical Paths under _isr1 in BANK3
  1044 ;;
  1045 ;;   None.
  1046 ;;
  1047 ;; Critical Paths under _main in BANK2
  1048 ;;
  1049 ;;   None.
  1050 ;;
  1051 ;; Critical Paths under _isr1 in BANK2
  1052 ;;
  1053 ;;   None.
  1054                           
  1055 ;;
  1056 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1057 ;;
  1058                           
  1059 ;;
  1060 ;;Call Graph Tables:
  1061 ;;
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (0) _main                                                 2     2      0     317
  1066 ;;                                              8 BANK1      2     2      0
  1067 ;;                               _init
  1068 ;;                               _Menu
  1069 ;;                        _calibrateIR
  1070 ;;                             _rotate
  1071 ;;                       _spi_transfer
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (1) _init                                                 1     1      0      44
  1074 ;;                                              3 BANK1      1     1      0
  1075 ;;                           _init_adc
  1076 ;;                           _lcd_init
  1077 ;;                           _ser_init
  1078 ;;                          _robo_init
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (1) _calibrateIR                                          0     0      0      98
  1081 ;;                             _rotate
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (2) _lcd_init                                             0     0      0      22
  1084 ;;                  _lcd_write_control
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (1) _rotate                                               5     4      1      98
  1087 ;;                                              3 BANK1      5     4      1
  1088 ;;                       _spi_transfer
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (2) _robo_init                                            0     0      0      22
  1091 ;;                          _ser_putch
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (3) _lcd_write_control                                    3     3      0      22
  1094 ;;                                              0 BANK1      3     3      0
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (2) _init_adc                                             1     1      0       0
  1097 ;;                                              0 BANK1      1     1      0
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (3) _ser_putch                                            2     2      0      22
  1100 ;;                                              0 BANK1      2     2      0
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (1) _spi_transfer                                         3     3      0      30
  1103 ;;                                              0 BANK1      3     3      0
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (1) _Menu                                                 1     1      0      22
  1106 ;;                                              0 BANK1      1     1      0
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (2) _ser_init                                             1     1      0       0
  1109 ;;                                              0 BANK1      1     1      0
  1110 ;; ---------------------------------------------------------------------------------
  1111 ;; Estimated maximum stack depth 3
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (4) _isr1                                                 5     5      0    2099
  1116 ;;                                             44 BANK0      5     5      0
  1117 ;;                            ___lwmod
  1118 ;;                    _readAvgDistance
  1119 ;;                      _UpdateDisplay
  1120 ;;                        _ReadButtons
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (5) _UpdateDisplay                                       22    22      0    1385
  1123 ;;                                             23 BANK0     21    21      0
  1124 ;;                i1_lcd_write_control
  1125 ;;                            _sprintf
  1126 ;;                     _lcd_set_cursor
  1127 ;;                   _lcd_write_string
  1128 ;;                            ___awmod
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (5) _readAvgDistance                                      4     4      0     555
  1131 ;;                                              2 BANK0      4     4      0
  1132 ;;                       _readDistance
  1133 ;;                            ___lwdiv
  1134 ;;                         _ADCconvert
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (6) _readDistance                                         6     4      2      69
  1137 ;;                                              8 COMMON     6     4      2
  1138 ;;                   _adc_read_channel
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (6) _lcd_write_string                                     2     0      2      67
  1141 ;;                                              7 COMMON     2     0      2
  1142 ;;                     _lcd_write_data
  1143 ;;                            ___awmod (ARG)
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; (6) _lcd_set_cursor                                       1     1      0      96
  1146 ;;                                              3 COMMON     1     1      0
  1147 ;;                i1_lcd_write_control
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (7) i1_lcd_write_control                                  3     3      0      73
  1150 ;;                                              0 COMMON     3     3      0
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (6) _sprintf                                             17    12      5     798
  1153 ;;                                              6 BANK0     17    12      5
  1154 ;;                            ___lwdiv
  1155 ;;                            ___lwmod
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (6) _ADCconvert                                           2     2      0     254
  1158 ;;                                              0 BANK0      2     2      0
  1159 ;;                             ___wmul
  1160 ;;                            ___lwdiv
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (5) _ReadButtons                                          0     0      0       0
  1163 ;;                           _Debounce
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (7) _lcd_write_data                                       3     3      0      22
  1166 ;;                                              0 COMMON     3     3      0
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (7) _adc_read_channel                                     2     2      0      46
  1169 ;;                                              6 COMMON     2     2      0
  1170 ;;                           _adc_read
  1171 ;; ---------------------------------------------------------------------------------
  1172 ;; (6) ___awmod                                              7     3      4     296
  1173 ;;                                              0 COMMON     7     3      4
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (7) ___lwmod                                              6     2      4     159
  1176 ;;                                              0 BANK0      6     2      4
  1177 ;;                            ___lwdiv (ARG)
  1178 ;; ---------------------------------------------------------------------------------
  1179 ;; (7) ___lwdiv                                              8     4      4     162
  1180 ;;                                              6 COMMON     8     4      4
  1181 ;;                             ___wmul (ARG)
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (7) ___wmul                                               6     2      4      92
  1184 ;;                                              0 COMMON     6     2      4
  1185 ;; ---------------------------------------------------------------------------------
  1186 ;; (6) _Debounce                                             1     1      0       0
  1187 ;;                                              0 COMMON     1     1      0
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (8) _adc_read                                             6     4      2      24
  1190 ;;                                              0 COMMON     6     4      2
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; Estimated maximum stack depth 8
  1193 ;; ---------------------------------------------------------------------------------
  1194                           
  1195 ;; Call Graph Graphs:
  1196                           
  1197 ;; _main (ROOT)
  1198 ;;   _init
  1199 ;;     _init_adc
  1200 ;;     _lcd_init
  1201 ;;       _lcd_write_control
  1202 ;;     _ser_init
  1203 ;;     _robo_init
  1204 ;;       _ser_putch
  1205 ;;   _Menu
  1206 ;;   _calibrateIR
  1207 ;;     _rotate
  1208 ;;       _spi_transfer
  1209 ;;   _rotate
  1210 ;;     _spi_transfer
  1211 ;;   _spi_transfer
  1212 ;;
  1213 ;; _isr1 (ROOT)
  1214 ;;   ___lwmod
  1215 ;;     ___lwdiv (ARG)
  1216 ;;       ___wmul (ARG)
  1217 ;;   _readAvgDistance
  1218 ;;     _readDistance
  1219 ;;       _adc_read_channel
  1220 ;;         _adc_read
  1221 ;;     ___lwdiv
  1222 ;;       ___wmul (ARG)
  1223 ;;     _ADCconvert
  1224 ;;       ___wmul
  1225 ;;       ___lwdiv
  1226 ;;         ___wmul (ARG)
  1227 ;;   _UpdateDisplay
  1228 ;;     i1_lcd_write_control
  1229 ;;     _sprintf
  1230 ;;       ___lwdiv
  1231 ;;         ___wmul (ARG)
  1232 ;;       ___lwmod
  1233 ;;         ___lwdiv (ARG)
  1234 ;;           ___wmul (ARG)
  1235 ;;     _lcd_set_cursor
  1236 ;;       i1_lcd_write_control
  1237 ;;     _lcd_write_string
  1238 ;;       _lcd_write_data
  1239 ;;       ___awmod (ARG)
  1240 ;;     ___awmod
  1241 ;;   _ReadButtons
  1242 ;;     _Debounce
  1243 ;;
  1244                           
  1245 ;; Address spaces:
  1246                           
  1247 ;;Name               Size   Autos  Total    Cost      Usage
  1248 ;;BANK3               60      0       0       9        0.0%
  1249 ;;BITBANK3            60      0       0       8        0.0%
  1250 ;;SFR3                 0      0       0       4        0.0%
  1251 ;;BITSFR3              0      0       0       4        0.0%
  1252 ;;BANK2               60      0       0      11        0.0%
  1253 ;;BITBANK2            60      0       0      10        0.0%
  1254 ;;SFR2                 0      0       0       5        0.0%
  1255 ;;BITSFR2              0      0       0       5        0.0%
  1256 ;;SFR1                 0      0       0       2        0.0%
  1257 ;;BITSFR1              0      0       0       2        0.0%
  1258 ;;BANK1               50      A      4A       7       92.5%
  1259 ;;BITBANK1            50      0       0       6        0.0%
  1260 ;;CODE                 0      0       0       0        0.0%
  1261 ;;DATA                 0      0      B5      12        0.0%
  1262 ;;ABS                  0      0      A8       3        0.0%
  1263 ;;NULL                 0      0       0       0        0.0%
  1264 ;;STACK                0      0       D       2        0.0%
  1265 ;;BANK0               50     31      50       5      100.0%
  1266 ;;BITBANK0            50      0       2       4        2.5%
  1267 ;;SFR0                 0      0       0       1        0.0%
  1268 ;;BITSFR0              0      0       0       1        0.0%
  1269 ;;COMMON               E      E       E       1      100.0%
  1270 ;;BITCOMMON            E      0       0       0        0.0%
  1271 ;;EEDATA             100      0       0       0        0.0%
  1272                           
  1273                           	global	_main
  1274                           psect	maintext,global,class=CODE,delta=2
  1275                           global __pmaintext
  1276  049E                     __pmaintext:
  1277                           
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 202 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  choice          1    9[BANK1 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 17F/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       0       1       0       0
  1296 ;;      Temps:          0       0       1       0       0
  1297 ;;      Totals:         0       0       2       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels required when called:    8
  1300 ;; This function calls:
  1301 ;;		_init
  1302 ;;		_Menu
  1303 ;;		_calibrateIR
  1304 ;;		_rotate
  1305 ;;		_spi_transfer
  1306 ;; This function is called by:
  1307 ;;		Startup code after reset
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           psect	maintext
  1311                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1312                           	line	202
  1313                           	global	__size_of_main
  1314  00A1                     	__size_of_main	equ	__end_of_main-_main
  1315                           	
  1316  049E                     _main:	
  1317                           	opt	stack 0
  1318                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1319                           	line	207
  1320                           	
  1321  049E                     l10742:	
  1322                           ;Main.c: 207: init();
  1323  049E  120A  158A  2641   	fcall	_init
              120A  118A         
  1324  04A3  2CA4               	goto	l10744
  1325                           	line	213
  1326                           ;Main.c: 213: while(1)
  1327                           	
  1328  04A4                     l2220:	
  1329                           	line	215
  1330                           	
  1331  04A4                     l10744:	
  1332                           ;Main.c: 214: {
  1333                           ;Main.c: 215: unsigned char choice = 255;
  1334  04A4  30FF               	movlw	(0FFh)
  1335  04A5  1683               	bsf	status, 5	;RP0=1, select bank1
  1336  04A6  1303               	bcf	status, 6	;RP1=0, select bank1
  1337  04A7  00E8               	movwf	(??_main+0)^080h+0
  1338  04A8  0868               	movf	(??_main+0)^080h+0,w
  1339  04A9  00E9               	movwf	(main@choice)^080h
  1340                           	line	217
  1341                           ;Main.c: 217: switch (buttonPressed)
  1342  04AA  2CE4               	goto	l10768
  1343                           	line	219
  1344                           ;Main.c: 218: {
  1345                           ;Main.c: 219: case 1:
  1346                           	
  1347  04AB                     l2222:	
  1348                           	line	220
  1349                           	
  1350  04AB                     l10746:	
  1351                           ;Main.c: 220: Menu(1);
  1352  04AB  3001               	movlw	(01h)
  1353  04AC  120A  158A  27B9   	fcall	_Menu
              120A  118A         
  1354                           	line	222
  1355                           	
  1356  04B1                     l10748:	
  1357                           ;Main.c: 222: buttonPressed = 0;
  1358  04B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1359  04B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1360  04B3  01E0               	clrf	(_buttonPressed)	;volatile
  1361                           	line	224
  1362                           ;Main.c: 224: break;
  1363  04B4  2D21               	goto	l10788
  1364                           	line	225
  1365                           ;Main.c: 225: case 2:
  1366                           	
  1367  04B5                     l2224:	
  1368                           	line	226
  1369                           	
  1370  04B5                     l10750:	
  1371                           ;Main.c: 226: Menu(2);
  1372  04B5  3002               	movlw	(02h)
  1373  04B6  120A  158A  27B9   	fcall	_Menu
              120A  118A         
  1374                           	line	228
  1375                           	
  1376  04BB                     l10752:	
  1377                           ;Main.c: 228: buttonPressed = 0;
  1378  04BB  1283               	bcf	status, 5	;RP0=0, select bank0
  1379  04BC  1303               	bcf	status, 6	;RP1=0, select bank0
  1380  04BD  01E0               	clrf	(_buttonPressed)	;volatile
  1381                           	line	230
  1382                           ;Main.c: 230: break;
  1383  04BE  2D21               	goto	l10788
  1384                           	line	231
  1385                           ;Main.c: 231: case 3:
  1386                           	
  1387  04BF                     l2225:	
  1388                           	line	232
  1389                           	
  1390  04BF                     l10754:	
  1391                           ;Main.c: 232: Menu(3);
  1392  04BF  3003               	movlw	(03h)
  1393  04C0  120A  158A  27B9   	fcall	_Menu
              120A  118A         
  1394                           	line	234
  1395                           	
  1396  04C5                     l10756:	
  1397                           ;Main.c: 234: buttonPressed = 0;
  1398  04C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1399  04C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1400  04C7  01E0               	clrf	(_buttonPressed)	;volatile
  1401                           	line	236
  1402                           ;Main.c: 236: break;
  1403  04C8  2D21               	goto	l10788
  1404                           	line	237
  1405                           ;Main.c: 237: case 4:
  1406                           	
  1407  04C9                     l2226:	
  1408                           	line	238
  1409                           	
  1410  04C9                     l10758:	
  1411                           ;Main.c: 238: Menu(4);
  1412  04C9  3004               	movlw	(04h)
  1413  04CA  120A  158A  27B9   	fcall	_Menu
              120A  118A         
  1414                           	line	240
  1415                           	
  1416  04CF                     l10760:	
  1417                           ;Main.c: 240: buttonPressed = 0;
  1418  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1419  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1420  04D1  01E0               	clrf	(_buttonPressed)	;volatile
  1421                           	line	242
  1422                           ;Main.c: 242: break;
  1423  04D2  2D21               	goto	l10788
  1424                           	line	243
  1425                           ;Main.c: 243: case 5:
  1426                           	
  1427  04D3                     l2227:	
  1428                           	line	244
  1429                           	
  1430  04D3                     l10762:	
  1431                           ;Main.c: 244: choice = Menu(5);
  1432  04D3  3005               	movlw	(05h)
  1433  04D4  120A  158A  27B9   	fcall	_Menu
              120A  118A         
  1434  04D9  1683               	bsf	status, 5	;RP0=1, select bank1
  1435  04DA  1303               	bcf	status, 6	;RP1=0, select bank1
  1436  04DB  00E8               	movwf	(??_main+0)^080h+0
  1437  04DC  0868               	movf	(??_main+0)^080h+0,w
  1438  04DD  00E9               	movwf	(main@choice)^080h
  1439                           	line	246
  1440                           	
  1441  04DE                     l10764:	
  1442                           ;Main.c: 246: buttonPressed = 0;
  1443  04DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1444  04DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1445  04E0  01E0               	clrf	(_buttonPressed)	;volatile
  1446                           	line	248
  1447                           ;Main.c: 248: break;
  1448  04E1  2D21               	goto	l10788
  1449                           	line	249
  1450                           ;Main.c: 249: default:
  1451                           	
  1452  04E2                     l2228:	
  1453                           	line	251
  1454                           ;Main.c: 251: break;
  1455  04E2  2D21               	goto	l10788
  1456                           	line	252
  1457                           	
  1458  04E3                     l10766:	
  1459                           ;Main.c: 252: }
  1460  04E3  2D21               	goto	l10788
  1461                           	line	217
  1462                           	
  1463  04E4                     l2221:	
  1464                           	
  1465  04E4                     l10768:	
  1466  04E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1467  04E5  0860               	movf	(_buttonPressed),w	;volatile
  1468                           	; Switch size 1, requested type "space"
  1469                           ; Number of cases is 5, Range of values is 1 to 5
  1470                           ; switch strategies available:
  1471                           ; Name         Instructions Cycles
  1472                           ; simple_byte           16     9 (average)
  1473                           ; direct_byte           26    11 (fixed)
  1474                           ; jumptable            263     9 (fixed)
  1475                           ;	Chosen strategy is simple_byte
  1476                           
  1477                           	opt asmopt_off
  1478  04E6  3A01               	xorlw	1^0	; case 1
  1479  04E7  1903               	skipnz
  1480  04E8  2CAB               	goto	l10746
  1481  04E9  3A03               	xorlw	2^1	; case 2
  1482  04EA  1903               	skipnz
  1483  04EB  2CB5               	goto	l10750
  1484  04EC  3A01               	xorlw	3^2	; case 3
  1485  04ED  1903               	skipnz
  1486  04EE  2CBF               	goto	l10754
  1487  04EF  3A07               	xorlw	4^3	; case 4
  1488  04F0  1903               	skipnz
  1489  04F1  2CC9               	goto	l10758
  1490  04F2  3A01               	xorlw	5^4	; case 5
  1491  04F3  1903               	skipnz
  1492  04F4  2CD3               	goto	l10762
  1493  04F5  2D21               	goto	l10788
  1494                           	opt asmopt_on
  1495                           
  1496                           	line	252
  1497                           	
  1498  04F6                     l2223:	
  1499                           	line	255
  1500                           ;Main.c: 255: switch (choice)
  1501  04F6  2D21               	goto	l10788
  1502                           	line	257
  1503                           ;Main.c: 256: {
  1504                           ;Main.c: 257: case 0:
  1505                           	
  1506  04F7                     l2230:	
  1507                           	line	258
  1508                           	
  1509  04F7                     l10770:	
  1510                           ;Main.c: 258: calibrateIR();
  1511  04F7  120A  118A  2772   	fcall	_calibrateIR
              120A  118A         
  1512                           	line	259
  1513                           ;Main.c: 259: break;
  1514  04FC  2D34               	goto	l10790
  1515                           	line	260
  1516                           ;Main.c: 260: case 1:
  1517                           	
  1518  04FD                     l2232:	
  1519                           	line	261
  1520                           	
  1521  04FD                     l10772:	
  1522                           ;Main.c: 261: rotate(100, 1);
  1523  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  1524  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  1525  04FF  01E3               	clrf	(?_rotate)^080h
  1526  0500  1403               	bsf	status,0
  1527  0501  0DE3               	rlf	(?_rotate)^080h,f
  1528  0502  3064               	movlw	(064h)
  1529  0503  120A  118A  25BB   	fcall	_rotate
              120A  118A         
  1530                           	line	263
  1531                           ;Main.c: 263: break;
  1532  0508  2D34               	goto	l10790
  1533                           	line	264
  1534                           ;Main.c: 264: case 2:
  1535                           	
  1536  0509                     l2233:	
  1537                           	line	265
  1538                           ;Main.c: 265: RC0 = 1; RC1 = 1;;
  1539  0509  1283               	bcf	status, 5	;RP0=0, select bank0
  1540  050A  1303               	bcf	status, 6	;RP1=0, select bank0
  1541  050B  1407               	bsf	(56/8),(56)&7
  1542  050C  1487               	bsf	(57/8),(57)&7
  1543                           	line	266
  1544                           	
  1545  050D                     l10774:	
  1546                           ;Main.c: 266: spi_transfer(0b00001011);
  1547  050D  300B               	movlw	(0Bh)
  1548  050E  120A  158A  25D4   	fcall	_spi_transfer
              120A  118A         
  1549                           	line	267
  1550                           	
  1551  0513                     l10776:	
  1552                           ;Main.c: 267: RC0 = 0; RC1 = 0;;
  1553  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  1554  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  1555  0515  1007               	bcf	(56/8),(56)&7
  1556                           	
  1557  0516                     l10778:	
  1558  0516  1087               	bcf	(57/8),(57)&7
  1559                           	line	268
  1560                           	
  1561  0517                     l10780:	
  1562                           ;Main.c: 268: RC2 = 1; _nop(); RC2 = 0;;
  1563  0517  1507               	bsf	(58/8),(58)&7
  1564                           	
  1565  0518                     l10782:	
  1566  0518  0000               	nop
  1567                           	
  1568  0519                     l10784:	
  1569  0519  1283               	bcf	status, 5	;RP0=0, select bank0
  1570  051A  1303               	bcf	status, 6	;RP1=0, select bank0
  1571  051B  1107               	bcf	(58/8),(58)&7
  1572                           	line	271
  1573                           ;Main.c: 271: break;
  1574  051C  2D34               	goto	l10790
  1575                           	line	272
  1576                           ;Main.c: 272: case 3:
  1577                           	
  1578  051D                     l2234:	
  1579                           	line	275
  1580                           ;Main.c: 275: break;
  1581  051D  2D34               	goto	l10790
  1582                           	line	276
  1583                           ;Main.c: 276: case 4:
  1584                           	
  1585  051E                     l2235:	
  1586                           	line	278
  1587                           ;Main.c: 278: break;
  1588  051E  2D34               	goto	l10790
  1589                           	line	281
  1590                           ;Main.c: 281: default:
  1591                           	
  1592  051F                     l2236:	
  1593                           	line	283
  1594                           ;Main.c: 283: break;
  1595  051F  2D34               	goto	l10790
  1596                           	line	284
  1597                           	
  1598  0520                     l10786:	
  1599                           ;Main.c: 284: }
  1600  0520  2D34               	goto	l10790
  1601                           	line	255
  1602                           	
  1603  0521                     l2229:	
  1604                           	
  1605  0521                     l10788:	
  1606  0521  1683               	bsf	status, 5	;RP0=1, select bank1
  1607  0522  1303               	bcf	status, 6	;RP1=0, select bank1
  1608  0523  0869               	movf	(main@choice)^080h,w
  1609                           	; Switch size 1, requested type "space"
  1610                           ; Number of cases is 5, Range of values is 0 to 4
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte           16     9 (average)
  1614                           ; direct_byte           23     8 (fixed)
  1615                           ; jumptable            260     6 (fixed)
  1616                           ; rangetable             9     6 (fixed)
  1617                           ; spacedrange           16     9 (fixed)
  1618                           ; locatedrange           5     3 (fixed)
  1619                           ;	Chosen strategy is simple_byte
  1620                           
  1621                           	opt asmopt_off
  1622  0524  3A00               	xorlw	0^0	; case 0
  1623  0525  1903               	skipnz
  1624  0526  2CF7               	goto	l10770
  1625  0527  3A01               	xorlw	1^0	; case 1
  1626  0528  1903               	skipnz
  1627  0529  2CFD               	goto	l10772
  1628  052A  3A03               	xorlw	2^1	; case 2
  1629  052B  1903               	skipnz
  1630  052C  2D09               	goto	l2233
  1631  052D  3A01               	xorlw	3^2	; case 3
  1632  052E  1903               	skipnz
  1633  052F  2D34               	goto	l10790
  1634  0530  3A07               	xorlw	4^3	; case 4
  1635  0531  1903               	skipnz
  1636  0532  2D34               	goto	l10790
  1637  0533  2D34               	goto	l10790
  1638                           	opt asmopt_on
  1639                           
  1640                           	line	284
  1641                           	
  1642  0534                     l2231:	
  1643                           	line	285
  1644                           	
  1645  0534                     l10790:	
  1646                           ;Main.c: 285: choice = 255;
  1647  0534  30FF               	movlw	(0FFh)
  1648  0535  1683               	bsf	status, 5	;RP0=1, select bank1
  1649  0536  1303               	bcf	status, 6	;RP1=0, select bank1
  1650  0537  00E8               	movwf	(??_main+0)^080h+0
  1651  0538  0868               	movf	(??_main+0)^080h+0,w
  1652  0539  00E9               	movwf	(main@choice)^080h
  1653  053A  2CA4               	goto	l10744
  1654                           	line	435
  1655                           	
  1656  053B                     l2237:	
  1657                           	line	213
  1658  053B  2CA4               	goto	l10744
  1659                           	
  1660  053C                     l2238:	
  1661                           	line	436
  1662                           	
  1663  053C                     l2239:	
  1664                           	global	start
  1665  053C  120A  118A  2812   	ljmp	start
  1666                           	opt stack 0
  1667                           GLOBAL	__end_of_main
  1668  053F                     	__end_of_main:
  1669 ;; =============== function _main ends ============
  1670                           
  1671                           	signat	_main,88
  1672                           	global	_init
  1673                           psect	text713,local,class=CODE,delta=2
  1674                           global __ptext713
  1675  0E41                     __ptext713:
  1676                           
  1677 ;; *************** function _init *****************
  1678 ;; Defined at:
  1679 ;;		line 127 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          0       0       1       0       0
  1696 ;;      Totals:         0       0       1       0       0
  1697 ;;Total ram usage:        1 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    7
  1700 ;; This function calls:
  1701 ;;		_init_adc
  1702 ;;		_lcd_init
  1703 ;;		_ser_init
  1704 ;;		_robo_init
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           psect	text713
  1710                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1711                           	line	127
  1712                           	global	__size_of_init
  1713  0029                     	__size_of_init	equ	__end_of_init-_init
  1714                           	
  1715  0E41                     _init:	
  1716                           	opt	stack 0
  1717                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1718                           	line	128
  1719                           	
  1720  0E41                     l10724:	
  1721                           ;Main.c: 128: init_adc();
  1722  0E41  120A  158A  258B   	fcall	_init_adc
              120A  158A         
  1723                           	line	129
  1724                           ;Main.c: 129: lcd_init();
  1725  0E46  120A  158A  26E8   	fcall	_lcd_init
              120A  158A         
  1726                           	line	130
  1727                           ;Main.c: 130: ser_init();
  1728  0E4B  120A  158A  2619   	fcall	_ser_init
              120A  158A         
  1729                           	line	131
  1730                           	
  1731  0E50                     l10726:	
  1732                           ;Main.c: 131: robo_init();
  1733  0E50  120A  158A  259F   	fcall	_robo_init
              120A  158A         
  1734                           	line	133
  1735                           	
  1736  0E55                     l10728:	
  1737                           ;Main.c: 133: TRISB = 0b11111100;
  1738  0E55  30FC               	movlw	(0FCh)
  1739  0E56  1683               	bsf	status, 5	;RP0=1, select bank1
  1740  0E57  1303               	bcf	status, 6	;RP1=0, select bank1
  1741  0E58  0086               	movwf	(134)^080h	;volatile
  1742                           	line	135
  1743                           	
  1744  0E59                     l10730:	
  1745                           ;Main.c: 135: TRISC &= 0b10010000;
  1746  0E59  3090               	movlw	(090h)
  1747  0E5A  00E3               	movwf	(??_init+0)^080h+0
  1748  0E5B  0863               	movf	(??_init+0)^080h+0,w
  1749  0E5C  0587               	andwf	(135)^080h,f	;volatile
  1750                           	line	137
  1751                           	
  1752  0E5D                     l10732:	
  1753                           ;Main.c: 137: SSPSTAT = 0b01000000;
  1754  0E5D  3040               	movlw	(040h)
  1755  0E5E  0094               	movwf	(148)^080h	;volatile
  1756                           	line	138
  1757                           	
  1758  0E5F                     l10734:	
  1759                           ;Main.c: 138: SSPCON = 0b10100001;
  1760  0E5F  30A1               	movlw	(0A1h)
  1761  0E60  1283               	bcf	status, 5	;RP0=0, select bank0
  1762  0E61  1303               	bcf	status, 6	;RP1=0, select bank0
  1763  0E62  0094               	movwf	(20)	;volatile
  1764                           	line	140
  1765                           	
  1766  0E63                     l10736:	
  1767                           ;Main.c: 140: OPTION_REG = 0b00000100;
  1768  0E63  3004               	movlw	(04h)
  1769  0E64  1683               	bsf	status, 5	;RP0=1, select bank1
  1770  0E65  1303               	bcf	status, 6	;RP1=0, select bank1
  1771  0E66  0081               	movwf	(129)^080h	;volatile
  1772                           	line	143
  1773                           	
  1774  0E67                     l10738:	
  1775                           ;Main.c: 143: TMR0IE = 1;
  1776  0E67  168B               	bsf	(93/8),(93)&7
  1777                           	line	146
  1778                           	
  1779  0E68                     l10740:	
  1780                           ;Main.c: 146: (GIE = 1);
  1781  0E68  178B               	bsf	(95/8),(95)&7
  1782                           	line	147
  1783                           	
  1784  0E69                     l2203:	
  1785  0E69  0008               	return
  1786                           	opt stack 0
  1787                           GLOBAL	__end_of_init
  1788  0E6A                     	__end_of_init:
  1789 ;; =============== function _init ends ============
  1790                           
  1791                           	signat	_init,88
  1792                           	global	_calibrateIR
  1793                           psect	text714,local,class=CODE,delta=2
  1794                           global __ptext714
  1795  0772                     __ptext714:
  1796                           
  1797 ;; *************** function _calibrateIR *****************
  1798 ;; Defined at:
  1799 ;;		line 152 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;		None               void
  1806 ;; Registers used:
  1807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    7
  1820 ;; This function calls:
  1821 ;;		_rotate
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           psect	text714
  1827                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1828                           	line	152
  1829                           	global	__size_of_calibrateIR
  1830  004D                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  1831                           	
  1832  0772                     _calibrateIR:	
  1833                           	opt	stack 0
  1834                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1835                           	line	155
  1836                           	
  1837  0772                     l10702:	
  1838                           ;Main.c: 155: rotate(8, 0);
  1839  0772  1683               	bsf	status, 5	;RP0=1, select bank1
  1840  0773  1303               	bcf	status, 6	;RP1=0, select bank1
  1841  0774  01E3               	clrf	(?_rotate)^080h
  1842  0775  3008               	movlw	(08h)
  1843  0776  120A  118A  25BB   	fcall	_rotate
              120A  118A         
  1844  077B  2FA9               	goto	l10722
  1845                           	line	156
  1846                           ;Main.c: 156: while (1)
  1847                           	
  1848  077C                     l2206:	
  1849                           	line	158
  1850                           ;Main.c: 157: {
  1851                           ;Main.c: 158: switch (buttonPressed)
  1852  077C  2FA9               	goto	l10722
  1853                           	line	160
  1854                           ;Main.c: 159: {
  1855                           ;Main.c: 160: case 1:
  1856                           	
  1857  077D                     l2208:	
  1858                           	line	163
  1859                           ;Main.c: 163: buttonPressed = 0;
  1860  077D  01E0               	clrf	(_buttonPressed)	;volatile
  1861                           	line	165
  1862                           ;Main.c: 165: break;
  1863  077E  2FA9               	goto	l10722
  1864                           	line	166
  1865                           ;Main.c: 166: case 2:
  1866                           	
  1867  077F                     l2210:	
  1868                           	line	169
  1869                           ;Main.c: 169: buttonPressed = 0;
  1870  077F  01E0               	clrf	(_buttonPressed)	;volatile
  1871                           	line	171
  1872                           ;Main.c: 171: break;
  1873  0780  2FA9               	goto	l10722
  1874                           	line	172
  1875                           ;Main.c: 172: case 3:
  1876                           	
  1877  0781                     l2211:	
  1878                           	line	173
  1879                           	
  1880  0781                     l10704:	
  1881                           ;Main.c: 173: rotate(1, 1);
  1882  0781  1683               	bsf	status, 5	;RP0=1, select bank1
  1883  0782  1303               	bcf	status, 6	;RP1=0, select bank1
  1884  0783  01E3               	clrf	(?_rotate)^080h
  1885  0784  1403               	bsf	status,0
  1886  0785  0DE3               	rlf	(?_rotate)^080h,f
  1887  0786  3001               	movlw	(01h)
  1888  0787  120A  118A  25BB   	fcall	_rotate
              120A  118A         
  1889                           	line	175
  1890                           	
  1891  078C                     l10706:	
  1892                           ;Main.c: 175: buttonPressed = 0;
  1893  078C  1283               	bcf	status, 5	;RP0=0, select bank0
  1894  078D  1303               	bcf	status, 6	;RP1=0, select bank0
  1895  078E  01E0               	clrf	(_buttonPressed)	;volatile
  1896                           	line	177
  1897                           ;Main.c: 177: break;
  1898  078F  2FA9               	goto	l10722
  1899                           	line	178
  1900                           ;Main.c: 178: case 4:
  1901                           	
  1902  0790                     l2212:	
  1903                           	line	179
  1904                           	
  1905  0790                     l10708:	
  1906                           ;Main.c: 179: rotate(1, 0);
  1907  0790  1683               	bsf	status, 5	;RP0=1, select bank1
  1908  0791  1303               	bcf	status, 6	;RP1=0, select bank1
  1909  0792  01E3               	clrf	(?_rotate)^080h
  1910  0793  3001               	movlw	(01h)
  1911  0794  120A  118A  25BB   	fcall	_rotate
              120A  118A         
  1912                           	line	181
  1913                           	
  1914  0799                     l10710:	
  1915                           ;Main.c: 181: buttonPressed = 0;
  1916  0799  1283               	bcf	status, 5	;RP0=0, select bank0
  1917  079A  1303               	bcf	status, 6	;RP1=0, select bank0
  1918  079B  01E0               	clrf	(_buttonPressed)	;volatile
  1919                           	line	183
  1920                           ;Main.c: 183: break;
  1921  079C  2FA9               	goto	l10722
  1922                           	line	184
  1923                           ;Main.c: 184: case 5:
  1924                           	
  1925  079D                     l2213:	
  1926                           	line	185
  1927                           	
  1928  079D                     l10712:	
  1929                           ;Main.c: 185: totalSteps = 0;
  1930  079D  1683               	bsf	status, 5	;RP0=1, select bank1
  1931  079E  1303               	bcf	status, 6	;RP1=0, select bank1
  1932  079F  01D4               	clrf	(_totalSteps)^080h
  1933  07A0  01D5               	clrf	(_totalSteps+1)^080h
  1934                           	line	187
  1935                           	
  1936  07A1                     l10714:	
  1937                           ;Main.c: 187: buttonPressed = 0;
  1938  07A1  1283               	bcf	status, 5	;RP0=0, select bank0
  1939  07A2  1303               	bcf	status, 6	;RP1=0, select bank0
  1940  07A3  01E0               	clrf	(_buttonPressed)	;volatile
  1941  07A4  2FBE               	goto	l2214
  1942                           	line	188
  1943                           	
  1944  07A5                     l10716:	
  1945                           ;Main.c: 188: return;
  1946  07A5  2FBE               	goto	l2214
  1947                           	line	189
  1948                           	
  1949  07A6                     l10718:	
  1950                           ;Main.c: 189: break;
  1951  07A6  2FA9               	goto	l10722
  1952                           	line	190
  1953                           ;Main.c: 190: default:
  1954                           	
  1955  07A7                     l2215:	
  1956                           	line	192
  1957                           ;Main.c: 192: break;
  1958  07A7  2FA9               	goto	l10722
  1959                           	line	193
  1960                           	
  1961  07A8                     l10720:	
  1962                           ;Main.c: 193: }
  1963  07A8  2FA9               	goto	l10722
  1964                           	line	158
  1965                           	
  1966  07A9                     l2207:	
  1967                           	
  1968  07A9                     l10722:	
  1969  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
  1970  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
  1971  07AB  0860               	movf	(_buttonPressed),w	;volatile
  1972                           	; Switch size 1, requested type "space"
  1973                           ; Number of cases is 5, Range of values is 1 to 5
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte           16     9 (average)
  1977                           ; direct_byte           26    11 (fixed)
  1978                           ; jumptable            263     9 (fixed)
  1979                           ;	Chosen strategy is simple_byte
  1980                           
  1981                           	opt asmopt_off
  1982  07AC  3A01               	xorlw	1^0	; case 1
  1983  07AD  1903               	skipnz
  1984  07AE  2F7D               	goto	l2208
  1985  07AF  3A03               	xorlw	2^1	; case 2
  1986  07B0  1903               	skipnz
  1987  07B1  2F7F               	goto	l2210
  1988  07B2  3A01               	xorlw	3^2	; case 3
  1989  07B3  1903               	skipnz
  1990  07B4  2F81               	goto	l10704
  1991  07B5  3A07               	xorlw	4^3	; case 4
  1992  07B6  1903               	skipnz
  1993  07B7  2F90               	goto	l10708
  1994  07B8  3A01               	xorlw	5^4	; case 5
  1995  07B9  1903               	skipnz
  1996  07BA  2F9D               	goto	l10712
  1997  07BB  2FA9               	goto	l10722
  1998                           	opt asmopt_on
  1999                           
  2000                           	line	193
  2001                           	
  2002  07BC                     l2209:	
  2003  07BC  2FA9               	goto	l10722
  2004                           	line	194
  2005                           	
  2006  07BD                     l2216:	
  2007                           	line	156
  2008  07BD  2FA9               	goto	l10722
  2009                           	
  2010  07BE                     l2217:	
  2011                           	line	195
  2012                           	
  2013  07BE                     l2214:	
  2014  07BE  0008               	return
  2015                           	opt stack 0
  2016                           GLOBAL	__end_of_calibrateIR
  2017  07BF                     	__end_of_calibrateIR:
  2018 ;; =============== function _calibrateIR ends ============
  2019                           
  2020                           	signat	_calibrateIR,88
  2021                           	global	_lcd_init
  2022                           psect	text715,local,class=CODE,delta=2
  2023                           global __ptext715
  2024  0EE8                     __ptext715:
  2025                           
  2026 ;; *************** function _lcd_init *****************
  2027 ;; Defined at:
  2028 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;		None               void
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    6
  2049 ;; This function calls:
  2050 ;;		_lcd_write_control
  2051 ;; This function is called by:
  2052 ;;		_init
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           psect	text715
  2056                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  2057                           	line	101
  2058                           	global	__size_of_lcd_init
  2059  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2060                           	
  2061  0EE8                     _lcd_init:	
  2062                           	opt	stack 0
  2063                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2064                           	line	105
  2065                           	
  2066  0EE8                     l10682:	
  2067                           ;lcd.c: 105: ADCON1 = 0b00000010;
  2068  0EE8  3002               	movlw	(02h)
  2069  0EE9  1683               	bsf	status, 5	;RP0=1, select bank1
  2070  0EEA  1303               	bcf	status, 6	;RP1=0, select bank1
  2071  0EEB  009F               	movwf	(159)^080h	;volatile
  2072                           	line	108
  2073                           	
  2074  0EEC                     l10684:	
  2075                           ;lcd.c: 108: PORTD = 0;
  2076  0EEC  1283               	bcf	status, 5	;RP0=0, select bank0
  2077  0EED  1303               	bcf	status, 6	;RP1=0, select bank0
  2078  0EEE  0188               	clrf	(8)	;volatile
  2079                           	line	109
  2080                           	
  2081  0EEF                     l10686:	
  2082                           ;lcd.c: 109: PORTE = 0;
  2083  0EEF  0189               	clrf	(9)	;volatile
  2084                           	line	111
  2085                           	
  2086  0EF0                     l10688:	
  2087                           ;lcd.c: 111: TRISD = 0b00000000;
  2088  0EF0  1683               	bsf	status, 5	;RP0=1, select bank1
  2089  0EF1  1303               	bcf	status, 6	;RP1=0, select bank1
  2090  0EF2  0188               	clrf	(136)^080h	;volatile
  2091                           	line	112
  2092                           	
  2093  0EF3                     l10690:	
  2094                           ;lcd.c: 112: TRISE = 0b00000000;
  2095  0EF3  0189               	clrf	(137)^080h	;volatile
  2096                           	line	115
  2097                           	
  2098  0EF4                     l10692:	
  2099                           ;lcd.c: 115: lcd_write_control(0b00000001);
  2100  0EF4  3001               	movlw	(01h)
  2101  0EF5  120A  158A  25B8   	fcall	_lcd_write_control
              120A  158A         
  2102                           	line	116
  2103                           	
  2104  0EFA                     l10694:	
  2105                           ;lcd.c: 116: lcd_write_control(0b00111000);
  2106  0EFA  3038               	movlw	(038h)
  2107  0EFB  120A  158A  25B8   	fcall	_lcd_write_control
              120A  158A         
  2108                           	line	117
  2109                           	
  2110  0F00                     l10696:	
  2111                           ;lcd.c: 117: lcd_write_control(0b00001100);
  2112  0F00  300C               	movlw	(0Ch)
  2113  0F01  120A  158A  25B8   	fcall	_lcd_write_control
              120A  158A         
  2114                           	line	118
  2115                           	
  2116  0F06                     l10698:	
  2117                           ;lcd.c: 118: lcd_write_control(0b00000110);
  2118  0F06  3006               	movlw	(06h)
  2119  0F07  120A  158A  25B8   	fcall	_lcd_write_control
              120A  158A         
  2120                           	line	119
  2121                           	
  2122  0F0C                     l10700:	
  2123                           ;lcd.c: 119: lcd_write_control(0b00000010);
  2124  0F0C  3002               	movlw	(02h)
  2125  0F0D  120A  158A  25B8   	fcall	_lcd_write_control
              120A  158A         
  2126                           	line	121
  2127                           	
  2128  0F12                     l1429:	
  2129  0F12  0008               	return
  2130                           	opt stack 0
  2131                           GLOBAL	__end_of_lcd_init
  2132  0F13                     	__end_of_lcd_init:
  2133 ;; =============== function _lcd_init ends ============
  2134                           
  2135                           	signat	_lcd_init,88
  2136                           	global	_rotate
  2137                           psect	text716,local,class=CODE,delta=2
  2138                           global __ptext716
  2139  05BB                     __ptext716:
  2140                           
  2141 ;; *************** function _rotate *****************
  2142 ;; Defined at:
  2143 ;;		line 48 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  steps           1    wreg     unsigned char 
  2146 ;;  direction       1    3[BANK1 ] unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  steps           1    6[BANK1 ] unsigned char 
  2149 ;;  i               1    7[BANK1 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       1       0       0
  2160 ;;      Locals:         0       0       2       0       0
  2161 ;;      Temps:          0       0       2       0       0
  2162 ;;      Totals:         0       0       5       0       0
  2163 ;;Total ram usage:        5 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    6
  2166 ;; This function calls:
  2167 ;;		_spi_transfer
  2168 ;; This function is called by:
  2169 ;;		_calibrateIR
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           psect	text716
  2174                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  2175                           	line	48
  2176                           	global	__size_of_rotate
  2177  0045                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  2178                           	
  2179  05BB                     _rotate:	
  2180                           	opt	stack 1
  2181                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  2182                           ;rotate@steps stored from wreg
  2183                           	line	50
  2184  05BB  1683               	bsf	status, 5	;RP0=1, select bank1
  2185  05BC  1303               	bcf	status, 6	;RP1=0, select bank1
  2186  05BD  00E6               	movwf	(rotate@steps)^080h
  2187                           	
  2188  05BE                     l10662:	
  2189                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  2190  05BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2191  05BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2192  05C0  1407               	bsf	(56/8),(56)&7
  2193  05C1  1487               	bsf	(57/8),(57)&7
  2194                           	line	51
  2195                           	
  2196  05C2                     l10664:	
  2197                           ;steppermotor.c: 51: if (direction == 0)
  2198  05C2  1683               	bsf	status, 5	;RP0=1, select bank1
  2199  05C3  1303               	bcf	status, 6	;RP1=0, select bank1
  2200  05C4  08E3               	movf	(rotate@direction)^080h,f
  2201  05C5  1D03               	skipz
  2202  05C6  2DC8               	goto	u4281
  2203  05C7  2DC9               	goto	u4280
  2204  05C8                     u4281:
  2205  05C8  2DD0               	goto	l10668
  2206  05C9                     u4280:
  2207                           	line	52
  2208                           	
  2209  05C9                     l10666:	
  2210                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  2211  05C9  300F               	movlw	(0Fh)
  2212  05CA  120A  158A  25D4   	fcall	_spi_transfer
              120A  118A         
  2213  05CF  2DD7               	goto	l10670
  2214                           	line	53
  2215                           	
  2216  05D0                     l3662:	
  2217                           	line	54
  2218                           	
  2219  05D0                     l10668:	
  2220                           ;steppermotor.c: 53: else
  2221                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  2222  05D0  300D               	movlw	(0Dh)
  2223  05D1  120A  158A  25D4   	fcall	_spi_transfer
              120A  118A         
  2224  05D6  2DD7               	goto	l10670
  2225                           	
  2226  05D7                     l3663:	
  2227                           	line	55
  2228                           	
  2229  05D7                     l10670:	
  2230                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  2231  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2232  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2233  05D9  1007               	bcf	(56/8),(56)&7
  2234                           	
  2235  05DA                     l10672:	
  2236  05DA  1087               	bcf	(57/8),(57)&7
  2237                           	line	56
  2238                           	
  2239  05DB                     l10674:	
  2240                           ;steppermotor.c: 56: for (unsigned char i = 0; i <= steps; i++)
  2241  05DB  1683               	bsf	status, 5	;RP0=1, select bank1
  2242  05DC  1303               	bcf	status, 6	;RP1=0, select bank1
  2243  05DD  01E7               	clrf	(rotate@i)^080h
  2244  05DE  2DF8               	goto	l10680
  2245                           	line	57
  2246                           	
  2247  05DF                     l3665:	
  2248                           	line	58
  2249                           ;steppermotor.c: 57: {
  2250                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  2251  05DF  1283               	bcf	status, 5	;RP0=0, select bank0
  2252  05E0  1303               	bcf	status, 6	;RP1=0, select bank0
  2253  05E1  1507               	bsf	(58/8),(58)&7
  2254  05E2  0000               	nop
  2255  05E3  1283               	bcf	status, 5	;RP0=0, select bank0
  2256  05E4  1303               	bcf	status, 6	;RP1=0, select bank0
  2257  05E5  1107               	bcf	(58/8),(58)&7
  2258                           	line	59
  2259                           	
  2260  05E6                     l10676:	
  2261                           ;steppermotor.c: 59: _delay((unsigned long)((10)*(20000000/4000.0)));
  2262                           	opt asmopt_off
  2263  05E6  3041               movlw	65
  2264  05E7  1683               	bsf	status, 5	;RP0=1, select bank1
  2265  05E8  1303               	bcf	status, 6	;RP1=0, select bank1
  2266  05E9  00E5               movwf	((??_rotate+0)^080h+0+1),f
  2267  05EA  30EE               	movlw	238
  2268  05EB  00E4               movwf	((??_rotate+0)^080h+0),f
  2269  05EC                     u4307:
  2270  05EC  0BE4               	decfsz	((??_rotate+0)^080h+0),f
  2271  05ED  2DEC               	goto	u4307
  2272  05EE  0BE5               	decfsz	((??_rotate+0)^080h+0+1),f
  2273  05EF  2DEC               	goto	u4307
  2274  05F0  0064               	clrwdt
  2275                           opt asmopt_on
  2276                           
  2277                           	line	56
  2278                           	
  2279  05F1                     l10678:	
  2280  05F1  3001               	movlw	(01h)
  2281  05F2  1683               	bsf	status, 5	;RP0=1, select bank1
  2282  05F3  1303               	bcf	status, 6	;RP1=0, select bank1
  2283  05F4  00E4               	movwf	(??_rotate+0)^080h+0
  2284  05F5  0864               	movf	(??_rotate+0)^080h+0,w
  2285  05F6  07E7               	addwf	(rotate@i)^080h,f
  2286  05F7  2DF8               	goto	l10680
  2287                           	
  2288  05F8                     l3664:	
  2289                           	
  2290  05F8                     l10680:	
  2291  05F8  0867               	movf	(rotate@i)^080h,w
  2292  05F9  0266               	subwf	(rotate@steps)^080h,w
  2293  05FA  1803               	skipnc
  2294  05FB  2DFD               	goto	u4291
  2295  05FC  2DFE               	goto	u4290
  2296  05FD                     u4291:
  2297  05FD  2DDF               	goto	l3665
  2298  05FE                     u4290:
  2299  05FE  2DFF               	goto	l3667
  2300                           	
  2301  05FF                     l3666:	
  2302                           	line	61
  2303                           	
  2304  05FF                     l3667:	
  2305  05FF  0008               	return
  2306                           	opt stack 0
  2307                           GLOBAL	__end_of_rotate
  2308  0600                     	__end_of_rotate:
  2309 ;; =============== function _rotate ends ============
  2310                           
  2311                           	signat	_rotate,8312
  2312                           	global	_robo_init
  2313                           psect	text717,local,class=CODE,delta=2
  2314                           global __ptext717
  2315  0D9F                     __ptext717:
  2316                           
  2317 ;; *************** function _robo_init *****************
  2318 ;; Defined at:
  2319 ;;		line 9 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;		None               void
  2326 ;; Registers used:
  2327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    6
  2340 ;; This function calls:
  2341 ;;		_ser_putch
  2342 ;; This function is called by:
  2343 ;;		_init
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           psect	text717
  2347                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2348                           	line	9
  2349                           	global	__size_of_robo_init
  2350  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  2351                           	
  2352  0D9F                     _robo_init:	
  2353                           	opt	stack 0
  2354                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2355                           	line	10
  2356                           	
  2357  0D9F                     l10660:	
  2358                           ;robot.c: 10: ser_putch(128);
  2359  0D9F  3080               	movlw	(080h)
  2360  0DA0  120A  158A  2713   	fcall	_ser_putch
              120A  158A         
  2361                           	line	11
  2362                           ;robot.c: 11: ser_putch(132);
  2363  0DA5  3084               	movlw	(084h)
  2364  0DA6  120A  158A  2713   	fcall	_ser_putch
              120A  158A         
  2365                           	line	14
  2366                           ;robot.c: 14: ser_putch (142);
  2367  0DAB  308E               	movlw	(08Eh)
  2368  0DAC  120A  158A  2713   	fcall	_ser_putch
              120A  158A         
  2369                           	line	15
  2370                           ;robot.c: 15: ser_putch (19);
  2371  0DB1  3013               	movlw	(013h)
  2372  0DB2  120A  158A  2713   	fcall	_ser_putch
              120A  158A         
  2373                           	line	16
  2374                           	
  2375  0DB7                     l6666:	
  2376  0DB7  0008               	return
  2377                           	opt stack 0
  2378                           GLOBAL	__end_of_robo_init
  2379  0DB8                     	__end_of_robo_init:
  2380 ;; =============== function _robo_init ends ============
  2381                           
  2382                           	signat	_robo_init,88
  2383                           	global	_lcd_write_control
  2384                           psect	text718,local,class=CODE,delta=2
  2385                           global __ptext718
  2386  0DB8                     __ptext718:
  2387                           
  2388 ;; *************** function _lcd_write_control *****************
  2389 ;; Defined at:
  2390 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  databyte        1    wreg     unsigned char 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  databyte        1    2[BANK1 ] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;		None               void
  2397 ;; Registers used:
  2398 ;;		wreg
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       1       0       0
  2406 ;;      Temps:          0       0       2       0       0
  2407 ;;      Totals:         0       0       3       0       0
  2408 ;;Total ram usage:        3 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    5
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_lcd_init
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           psect	text718
  2418                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  2419                           	line	18
  2420                           	global	__size_of_lcd_write_control
  2421  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  2422                           	
  2423  0DB8                     _lcd_write_control:	
  2424                           	opt	stack 0
  2425                           ; Regs used in _lcd_write_control: [wreg]
  2426                           ;lcd_write_control@databyte stored from wreg
  2427  0DB8  1683               	bsf	status, 5	;RP0=1, select bank1
  2428  0DB9  1303               	bcf	status, 6	;RP1=0, select bank1
  2429  0DBA  00E2               	movwf	(lcd_write_control@databyte)^080h
  2430                           	line	19
  2431                           	
  2432  0DBB                     l10652:	
  2433                           ;lcd.c: 19: RE2 = 0;
  2434  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  2435  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  2436  0DBD  1109               	bcf	(74/8),(74)&7
  2437                           	line	20
  2438                           ;lcd.c: 20: RE1 = 0;
  2439  0DBE  1089               	bcf	(73/8),(73)&7
  2440                           	line	21
  2441                           ;lcd.c: 21: RE0 = 0;
  2442  0DBF  1009               	bcf	(72/8),(72)&7
  2443                           	line	22
  2444                           	
  2445  0DC0                     l10654:	
  2446                           ;lcd.c: 22: PORTD = databyte;
  2447  0DC0  1683               	bsf	status, 5	;RP0=1, select bank1
  2448  0DC1  1303               	bcf	status, 6	;RP1=0, select bank1
  2449  0DC2  0862               	movf	(lcd_write_control@databyte)^080h,w
  2450  0DC3  1283               	bcf	status, 5	;RP0=0, select bank0
  2451  0DC4  1303               	bcf	status, 6	;RP1=0, select bank0
  2452  0DC5  0088               	movwf	(8)	;volatile
  2453                           	line	23
  2454                           	
  2455  0DC6                     l10656:	
  2456                           ;lcd.c: 23: RE2 = 1;
  2457  0DC6  1509               	bsf	(74/8),(74)&7
  2458                           	line	24
  2459                           	
  2460  0DC7                     l10658:	
  2461                           ;lcd.c: 24: RE2 = 0;
  2462  0DC7  1109               	bcf	(74/8),(74)&7
  2463                           	line	25
  2464                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  2465                           	opt asmopt_off
  2466  0DC8  300D               movlw	13
  2467  0DC9  1683               	bsf	status, 5	;RP0=1, select bank1
  2468  0DCA  1303               	bcf	status, 6	;RP1=0, select bank1
  2469  0DCB  00E1               movwf	((??_lcd_write_control+0)^080h+0+1),f
  2470  0DCC  30FB               	movlw	251
  2471  0DCD  00E0               movwf	((??_lcd_write_control+0)^080h+0),f
  2472  0DCE                     u4317:
  2473  0DCE  0BE0               	decfsz	((??_lcd_write_control+0)^080h+0),f
  2474  0DCF  2DCE               	goto	u4317
  2475  0DD0  0BE1               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  2476  0DD1  2DCE               	goto	u4317
  2477  0DD2  2DD3               	nop2
  2478                           opt asmopt_on
  2479                           
  2480                           	line	26
  2481                           	
  2482  0DD3                     l1399:	
  2483  0DD3  0008               	return
  2484                           	opt stack 0
  2485                           GLOBAL	__end_of_lcd_write_control
  2486  0DD4                     	__end_of_lcd_write_control:
  2487 ;; =============== function _lcd_write_control ends ============
  2488                           
  2489                           	signat	_lcd_write_control,4216
  2490                           	global	_init_adc
  2491                           psect	text719,local,class=CODE,delta=2
  2492                           global __ptext719
  2493  0D8B                     __ptext719:
  2494                           
  2495 ;; *************** function _init_adc *****************
  2496 ;; Defined at:
  2497 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;		None               void
  2504 ;; Registers used:
  2505 ;;		wreg, status,2
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0
  2513 ;;      Temps:          0       0       1       0       0
  2514 ;;      Totals:         0       0       1       0       0
  2515 ;;Total ram usage:        1 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    5
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_init
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           psect	text719
  2525                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  2526                           	line	46
  2527                           	global	__size_of_init_adc
  2528  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  2529                           	
  2530  0D8B                     _init_adc:	
  2531                           	opt	stack 1
  2532                           ; Regs used in _init_adc: [wreg+status,2]
  2533                           	line	48
  2534                           	
  2535  0D8B                     l10642:	
  2536                           ;adc.c: 48: PORTA = 0;
  2537  0D8B  1283               	bcf	status, 5	;RP0=0, select bank0
  2538  0D8C  1303               	bcf	status, 6	;RP1=0, select bank0
  2539  0D8D  0185               	clrf	(5)	;volatile
  2540                           	line	49
  2541                           	
  2542  0D8E                     l10644:	
  2543                           ;adc.c: 49: TRISA = 0b00111111;
  2544  0D8E  303F               	movlw	(03Fh)
  2545  0D8F  1683               	bsf	status, 5	;RP0=1, select bank1
  2546  0D90  1303               	bcf	status, 6	;RP1=0, select bank1
  2547  0D91  0085               	movwf	(133)^080h	;volatile
  2548                           	line	52
  2549                           	
  2550  0D92                     l10646:	
  2551                           ;adc.c: 52: ADCON0 = 0b10100001;
  2552  0D92  30A1               	movlw	(0A1h)
  2553  0D93  1283               	bcf	status, 5	;RP0=0, select bank0
  2554  0D94  1303               	bcf	status, 6	;RP1=0, select bank0
  2555  0D95  009F               	movwf	(31)	;volatile
  2556                           	line	53
  2557                           	
  2558  0D96                     l10648:	
  2559                           ;adc.c: 53: ADCON1 = 0b0000010;
  2560  0D96  3002               	movlw	(02h)
  2561  0D97  1683               	bsf	status, 5	;RP0=1, select bank1
  2562  0D98  1303               	bcf	status, 6	;RP1=0, select bank1
  2563  0D99  009F               	movwf	(159)^080h	;volatile
  2564                           	line	55
  2565                           	
  2566  0D9A                     l10650:	
  2567                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2568                           	opt asmopt_off
  2569  0D9A  3053               movlw	83
  2570  0D9B  00E0               movwf	(??_init_adc+0)^080h+0,f
  2571  0D9C                     u4327:
  2572  0D9C  0BE0               decfsz	(??_init_adc+0)^080h+0,f
  2573  0D9D  2D9C               	goto	u4327
  2574                           opt asmopt_on
  2575                           
  2576                           	line	57
  2577                           	
  2578  0D9E                     l700:	
  2579  0D9E  0008               	return
  2580                           	opt stack 0
  2581                           GLOBAL	__end_of_init_adc
  2582  0D9F                     	__end_of_init_adc:
  2583 ;; =============== function _init_adc ends ============
  2584                           
  2585                           	signat	_init_adc,88
  2586                           	global	_ser_putch
  2587                           psect	text720,local,class=CODE,delta=2
  2588                           global __ptext720
  2589  0F13                     __ptext720:
  2590                           
  2591 ;; *************** function _ser_putch *****************
  2592 ;; Defined at:
  2593 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  c               1    wreg     unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  c               1    1[BANK1 ] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       1       0       0
  2609 ;;      Temps:          0       0       1       0       0
  2610 ;;      Totals:         0       0       2       0       0
  2611 ;;Total ram usage:        2 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    5
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_robo_init
  2618 ;;		_ser_puts
  2619 ;;		_ser_puts2
  2620 ;;		_ser_puthex
  2621 ;;		_robotMove
  2622 ;;		_robotTurn
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           psect	text720
  2626                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  2627                           	line	70
  2628                           	global	__size_of_ser_putch
  2629  002E                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  2630                           	
  2631  0F13                     _ser_putch:	
  2632                           	opt	stack 0
  2633                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  2634                           ;ser_putch@c stored from wreg
  2635  0F13  1683               	bsf	status, 5	;RP0=1, select bank1
  2636  0F14  1303               	bcf	status, 6	;RP1=0, select bank1
  2637  0F15  00E1               	movwf	(ser_putch@c)^080h
  2638                           	line	71
  2639                           	
  2640  0F16                     l10360:	
  2641                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  2642  0F16  2F18               	goto	l10362
  2643                           	
  2644  0F17                     l4408:	
  2645                           	line	72
  2646                           ;ser.c: 72: continue;
  2647  0F17  2F18               	goto	l10362
  2648                           	
  2649  0F18                     l4407:	
  2650                           	line	71
  2651                           	
  2652  0F18                     l10362:	
  2653  0F18  1283               	bcf	status, 5	;RP0=0, select bank0
  2654  0F19  086B               	movf	(_txiptr),w	;volatile
  2655  0F1A  3E01               	addlw	01h
  2656  0F1B  390F               	andlw	0Fh
  2657  0F1C  066C               	xorwf	(_txoptr),w	;volatile
  2658  0F1D  1903               	skipnz
  2659  0F1E  2F20               	goto	u3691
  2660  0F1F  2F21               	goto	u3690
  2661  0F20                     u3691:
  2662  0F20  2F18               	goto	l10362
  2663  0F21                     u3690:
  2664                           	
  2665  0F21                     l4409:	
  2666                           	line	73
  2667                           ;ser.c: 73: GIE=0;
  2668  0F21  138B               	bcf	(95/8),(95)&7
  2669                           	line	74
  2670                           	
  2671  0F22                     l10364:	
  2672                           ;ser.c: 74: txfifo[txiptr] = c;
  2673  0F22  1683               	bsf	status, 5	;RP0=1, select bank1
  2674  0F23  1303               	bcf	status, 6	;RP1=0, select bank1
  2675  0F24  0861               	movf	(ser_putch@c)^080h,w
  2676  0F25  00E0               	movwf	(??_ser_putch+0)^080h+0
  2677  0F26  1283               	bcf	status, 5	;RP0=0, select bank0
  2678  0F27  1303               	bcf	status, 6	;RP1=0, select bank0
  2679  0F28  086B               	movf	(_txiptr),w
  2680  0F29  3EC0               	addlw	_txfifo&0ffh
  2681  0F2A  0084               	movwf	fsr0
  2682  0F2B  1683               	bsf	status, 5	;RP0=1, select bank1
  2683  0F2C  1303               	bcf	status, 6	;RP1=0, select bank1
  2684  0F2D  0860               	movf	(??_ser_putch+0)^080h+0,w
  2685  0F2E  1383               	bcf	status, 7	;select IRP bank1
  2686  0F2F  0080               	movwf	indf
  2687                           	line	75
  2688                           	
  2689  0F30                     l10366:	
  2690                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  2691  0F30  1283               	bcf	status, 5	;RP0=0, select bank0
  2692  0F31  1303               	bcf	status, 6	;RP1=0, select bank0
  2693  0F32  086B               	movf	(_txiptr),w	;volatile
  2694  0F33  3E01               	addlw	01h
  2695  0F34  390F               	andlw	0Fh
  2696  0F35  1683               	bsf	status, 5	;RP0=1, select bank1
  2697  0F36  1303               	bcf	status, 6	;RP1=0, select bank1
  2698  0F37  00E0               	movwf	(??_ser_putch+0)^080h+0
  2699  0F38  0860               	movf	(??_ser_putch+0)^080h+0,w
  2700  0F39  1283               	bcf	status, 5	;RP0=0, select bank0
  2701  0F3A  1303               	bcf	status, 6	;RP1=0, select bank0
  2702  0F3B  00EB               	movwf	(_txiptr)	;volatile
  2703                           	line	76
  2704                           	
  2705  0F3C                     l10368:	
  2706                           ;ser.c: 76: TXIE=1;
  2707  0F3C  1683               	bsf	status, 5	;RP0=1, select bank1
  2708  0F3D  1303               	bcf	status, 6	;RP1=0, select bank1
  2709  0F3E  160C               	bsf	(1124/8)^080h,(1124)&7
  2710                           	line	77
  2711                           	
  2712  0F3F                     l10370:	
  2713                           ;ser.c: 77: GIE=1;
  2714  0F3F  178B               	bsf	(95/8),(95)&7
  2715                           	line	78
  2716                           	
  2717  0F40                     l4410:	
  2718  0F40  0008               	return
  2719                           	opt stack 0
  2720                           GLOBAL	__end_of_ser_putch
  2721  0F41                     	__end_of_ser_putch:
  2722 ;; =============== function _ser_putch ends ============
  2723                           
  2724                           	signat	_ser_putch,4216
  2725                           	global	_spi_transfer
  2726                           psect	text721,local,class=CODE,delta=2
  2727                           global __ptext721
  2728  0DD4                     __ptext721:
  2729                           
  2730 ;; *************** function _spi_transfer *****************
  2731 ;; Defined at:
  2732 ;;		line 34 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  data            1    wreg     unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  data            1    2[BANK1 ] unsigned char 
  2737 ;;  temp            1    1[BANK1 ] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      unsigned char 
  2740 ;; Registers used:
  2741 ;;		wreg
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         0       0       2       0       0
  2749 ;;      Temps:          0       0       1       0       0
  2750 ;;      Totals:         0       0       3       0       0
  2751 ;;Total ram usage:        3 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    5
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;;		_rotate
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           psect	text721
  2762                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  2763                           	line	34
  2764                           	global	__size_of_spi_transfer
  2765  001E                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  2766                           	
  2767  0DD4                     _spi_transfer:	
  2768                           	opt	stack 2
  2769                           ; Regs used in _spi_transfer: [wreg]
  2770                           ;spi_transfer@data stored from wreg
  2771  0DD4  1683               	bsf	status, 5	;RP0=1, select bank1
  2772  0DD5  1303               	bcf	status, 6	;RP1=0, select bank1
  2773  0DD6  00E2               	movwf	(spi_transfer@data)^080h
  2774                           	line	35
  2775                           	
  2776  0DD7                     l10208:	
  2777                           ;steppermotor.c: 35: unsigned char temp = 0;
  2778  0DD7  01E1               	clrf	(spi_transfer@temp)^080h
  2779                           	line	37
  2780                           ;steppermotor.c: 37: SSPIF = 0;
  2781  0DD8  1283               	bcf	status, 5	;RP0=0, select bank0
  2782  0DD9  1303               	bcf	status, 6	;RP1=0, select bank0
  2783  0DDA  118C               	bcf	(99/8),(99)&7
  2784                           	line	38
  2785                           	
  2786  0DDB                     l10210:	
  2787                           ;steppermotor.c: 38: SSPBUF = data;
  2788  0DDB  1683               	bsf	status, 5	;RP0=1, select bank1
  2789  0DDC  1303               	bcf	status, 6	;RP1=0, select bank1
  2790  0DDD  0862               	movf	(spi_transfer@data)^080h,w
  2791  0DDE  1283               	bcf	status, 5	;RP0=0, select bank0
  2792  0DDF  1303               	bcf	status, 6	;RP1=0, select bank0
  2793  0DE0  0093               	movwf	(19)	;volatile
  2794                           	line	40
  2795                           ;steppermotor.c: 40: while (SSPIF == 0);
  2796  0DE1  2DE2               	goto	l3656
  2797                           	
  2798  0DE2                     l3657:	
  2799                           	
  2800  0DE2                     l3656:	
  2801  0DE2  1D8C               	btfss	(99/8),(99)&7
  2802  0DE3  2DE5               	goto	u3471
  2803  0DE4  2DE6               	goto	u3470
  2804  0DE5                     u3471:
  2805  0DE5  2DE2               	goto	l3656
  2806  0DE6                     u3470:
  2807  0DE6  2DE7               	goto	l10212
  2808                           	
  2809  0DE7                     l3658:	
  2810                           	line	41
  2811                           	
  2812  0DE7                     l10212:	
  2813                           ;steppermotor.c: 41: temp = SSPBUF;
  2814  0DE7  0813               	movf	(19),w	;volatile
  2815  0DE8  1683               	bsf	status, 5	;RP0=1, select bank1
  2816  0DE9  1303               	bcf	status, 6	;RP1=0, select bank1
  2817  0DEA  00E0               	movwf	(??_spi_transfer+0)^080h+0
  2818  0DEB  0860               	movf	(??_spi_transfer+0)^080h+0,w
  2819  0DEC  00E1               	movwf	(spi_transfer@temp)^080h
  2820                           	line	42
  2821                           	
  2822  0DED                     l10214:	
  2823                           ;steppermotor.c: 42: SSPIF = 0;
  2824  0DED  1283               	bcf	status, 5	;RP0=0, select bank0
  2825  0DEE  1303               	bcf	status, 6	;RP1=0, select bank0
  2826  0DEF  118C               	bcf	(99/8),(99)&7
  2827  0DF0  2DF1               	goto	l3659
  2828                           	line	44
  2829                           	
  2830  0DF1                     l10216:	
  2831                           	line	45
  2832                           ;steppermotor.c: 44: return temp;
  2833                           ;	Return value of _spi_transfer is never used
  2834                           	
  2835  0DF1                     l3659:	
  2836  0DF1  0008               	return
  2837                           	opt stack 0
  2838                           GLOBAL	__end_of_spi_transfer
  2839  0DF2                     	__end_of_spi_transfer:
  2840 ;; =============== function _spi_transfer ends ============
  2841                           
  2842                           	signat	_spi_transfer,4217
  2843                           	global	_Menu
  2844                           psect	text722,local,class=CODE,delta=2
  2845                           global __ptext722
  2846  0FB9                     __ptext722:
  2847                           
  2848 ;; *************** function _Menu *****************
  2849 ;; Defined at:
  2850 ;;		line 180 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  input           1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  input           1    0[BANK1 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       0       1       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         0       0       1       0       0
  2868 ;;Total ram usage:        1 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    5
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           psect	text722
  2878                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  2879                           	line	180
  2880                           	global	__size_of_Menu
  2881  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  2882                           	
  2883  0FB9                     _Menu:	
  2884                           	opt	stack 2
  2885                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  2886                           ;Menu@input stored from wreg
  2887  0FB9  1683               	bsf	status, 5	;RP0=1, select bank1
  2888  0FBA  1303               	bcf	status, 6	;RP1=0, select bank1
  2889  0FBB  00E0               	movwf	(Menu@input)^080h
  2890                           	line	181
  2891                           	
  2892  0FBC                     l10182:	
  2893                           ;HMI.c: 181: switch (input)
  2894  0FBC  2FEA               	goto	l10202
  2895                           	line	183
  2896                           ;HMI.c: 182: {
  2897                           ;HMI.c: 183: case 1:
  2898                           	
  2899  0FBD                     l5208:	
  2900                           	line	185
  2901                           ;HMI.c: 185: break;
  2902  0FBD  2FFD               	goto	l10204
  2903                           	line	186
  2904                           ;HMI.c: 186: case 2:
  2905                           	
  2906  0FBE                     l5210:	
  2907                           	line	188
  2908                           ;HMI.c: 188: break;
  2909  0FBE  2FFD               	goto	l10204
  2910                           	line	189
  2911                           ;HMI.c: 189: case 3:
  2912                           	
  2913  0FBF                     l5211:	
  2914                           	line	190
  2915                           	
  2916  0FBF                     l10184:	
  2917                           ;HMI.c: 190: pos--;
  2918  0FBF  30FF               	movlw	low(-1)
  2919  0FC0  1283               	bcf	status, 5	;RP0=0, select bank0
  2920  0FC1  1303               	bcf	status, 6	;RP1=0, select bank0
  2921  0FC2  07D7               	addwf	(_pos),f
  2922  0FC3  1803               	skipnc
  2923  0FC4  0AD8               	incf	(_pos+1),f
  2924  0FC5  30FF               	movlw	high(-1)
  2925  0FC6  07D8               	addwf	(_pos+1),f
  2926                           	line	191
  2927                           	
  2928  0FC7                     l10186:	
  2929                           ;HMI.c: 191: if (pos < 0)
  2930  0FC7  1FD8               	btfss	(_pos+1),7
  2931  0FC8  2FCA               	goto	u3451
  2932  0FC9  2FCB               	goto	u3450
  2933  0FCA                     u3451:
  2934  0FCA  2FFD               	goto	l10204
  2935  0FCB                     u3450:
  2936                           	line	192
  2937                           	
  2938  0FCB                     l10188:	
  2939                           ;HMI.c: 192: pos = 5 - 1;
  2940  0FCB  3004               	movlw	low(04h)
  2941  0FCC  00D7               	movwf	(_pos)
  2942  0FCD  3000               	movlw	high(04h)
  2943  0FCE  00D8               	movwf	((_pos))+1
  2944  0FCF  2FFD               	goto	l10204
  2945                           	
  2946  0FD0                     l5212:	
  2947                           	line	194
  2948                           ;HMI.c: 194: break;
  2949  0FD0  2FFD               	goto	l10204
  2950                           	line	195
  2951                           ;HMI.c: 195: case 4:
  2952                           	
  2953  0FD1                     l5213:	
  2954                           	line	196
  2955                           	
  2956  0FD1                     l10190:	
  2957                           ;HMI.c: 196: pos++;
  2958  0FD1  3001               	movlw	low(01h)
  2959  0FD2  1283               	bcf	status, 5	;RP0=0, select bank0
  2960  0FD3  07D7               	addwf	(_pos),f
  2961  0FD4  1803               	skipnc
  2962  0FD5  0AD8               	incf	(_pos+1),f
  2963  0FD6  3000               	movlw	high(01h)
  2964  0FD7  07D8               	addwf	(_pos+1),f
  2965                           	line	197
  2966                           ;HMI.c: 197: if (pos == 5)
  2967  0FD8  3005               	movlw	05h
  2968  0FD9  0657               	xorwf	(_pos),w
  2969  0FDA  0458               	iorwf	(_pos+1),w
  2970  0FDB  1D03               	skipz
  2971  0FDC  2FDE               	goto	u3461
  2972  0FDD  2FDF               	goto	u3460
  2973  0FDE                     u3461:
  2974  0FDE  2FFD               	goto	l10204
  2975  0FDF                     u3460:
  2976                           	line	198
  2977                           	
  2978  0FDF                     l10192:	
  2979                           ;HMI.c: 198: pos = 0;
  2980  0FDF  01D7               	clrf	(_pos)
  2981  0FE0  01D8               	clrf	(_pos+1)
  2982  0FE1  2FFD               	goto	l10204
  2983                           	
  2984  0FE2                     l5214:	
  2985                           	line	200
  2986                           ;HMI.c: 200: break;
  2987  0FE2  2FFD               	goto	l10204
  2988                           	line	201
  2989                           ;HMI.c: 201: case 5:
  2990                           	
  2991  0FE3                     l5215:	
  2992                           	line	202
  2993                           	
  2994  0FE3                     l10194:	
  2995                           ;HMI.c: 202: return pos;
  2996  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  2997  0FE4  0857               	movf	(_pos),w
  2998  0FE5  2FFF               	goto	l5216
  2999                           	
  3000  0FE6                     l10196:	
  3001  0FE6  2FFF               	goto	l5216
  3002                           	line	203
  3003                           	
  3004  0FE7                     l10198:	
  3005                           ;HMI.c: 203: break;
  3006  0FE7  2FFD               	goto	l10204
  3007                           	line	205
  3008                           ;HMI.c: 205: default:
  3009                           	
  3010  0FE8                     l5217:	
  3011                           	line	207
  3012                           ;HMI.c: 207: break;
  3013  0FE8  2FFD               	goto	l10204
  3014                           	line	208
  3015                           	
  3016  0FE9                     l10200:	
  3017                           ;HMI.c: 208: }
  3018  0FE9  2FFD               	goto	l10204
  3019                           	line	181
  3020                           	
  3021  0FEA                     l5207:	
  3022                           	
  3023  0FEA                     l10202:	
  3024  0FEA  1683               	bsf	status, 5	;RP0=1, select bank1
  3025  0FEB  1303               	bcf	status, 6	;RP1=0, select bank1
  3026  0FEC  0860               	movf	(Menu@input)^080h,w
  3027                           	; Switch size 1, requested type "space"
  3028                           ; Number of cases is 5, Range of values is 1 to 5
  3029                           ; switch strategies available:
  3030                           ; Name         Instructions Cycles
  3031                           ; simple_byte           16     9 (average)
  3032                           ; direct_byte           26    11 (fixed)
  3033                           ; jumptable            263     9 (fixed)
  3034                           ;	Chosen strategy is simple_byte
  3035                           
  3036                           	opt asmopt_off
  3037  0FED  3A01               	xorlw	1^0	; case 1
  3038  0FEE  1903               	skipnz
  3039  0FEF  2FFD               	goto	l10204
  3040  0FF0  3A03               	xorlw	2^1	; case 2
  3041  0FF1  1903               	skipnz
  3042  0FF2  2FFD               	goto	l10204
  3043  0FF3  3A01               	xorlw	3^2	; case 3
  3044  0FF4  1903               	skipnz
  3045  0FF5  2FBF               	goto	l10184
  3046  0FF6  3A07               	xorlw	4^3	; case 4
  3047  0FF7  1903               	skipnz
  3048  0FF8  2FD1               	goto	l10190
  3049  0FF9  3A01               	xorlw	5^4	; case 5
  3050  0FFA  1903               	skipnz
  3051  0FFB  2FE3               	goto	l10194
  3052  0FFC  2FFD               	goto	l10204
  3053                           	opt asmopt_on
  3054                           
  3055                           	line	208
  3056                           	
  3057  0FFD                     l5209:	
  3058                           	line	209
  3059                           	
  3060  0FFD                     l10204:	
  3061                           ;HMI.c: 209: return 255;
  3062  0FFD  30FF               	movlw	(0FFh)
  3063  0FFE  2FFF               	goto	l5216
  3064                           	
  3065  0FFF                     l10206:	
  3066                           	line	210
  3067                           	
  3068  0FFF                     l5216:	
  3069  0FFF  0008               	return
  3070                           	opt stack 0
  3071                           GLOBAL	__end_of_Menu
  3072  1000                     	__end_of_Menu:
  3073 ;; =============== function _Menu ends ============
  3074                           
  3075                           	signat	_Menu,4217
  3076                           	global	_ser_init
  3077                           psect	text723,local,class=CODE,delta=2
  3078                           global __ptext723
  3079  0E19                     __ptext723:
  3080                           
  3081 ;; *************** function _ser_init *****************
  3082 ;; Defined at:
  3083 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0
  3099 ;;      Temps:          0       0       1       0       0
  3100 ;;      Totals:         0       0       1       0       0
  3101 ;;Total ram usage:        1 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    5
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_init
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           psect	text723
  3111                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  3112                           	line	113
  3113                           	global	__size_of_ser_init
  3114  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  3115                           	
  3116  0E19                     _ser_init:	
  3117                           	opt	stack 1
  3118                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  3119                           	line	114
  3120                           	
  3121  0E19                     l10156:	
  3122                           ;ser.c: 114: TRISC |= 0b10000000;
  3123  0E19  1683               	bsf	status, 5	;RP0=1, select bank1
  3124  0E1A  1303               	bcf	status, 6	;RP1=0, select bank1
  3125  0E1B  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  3126                           	line	115
  3127                           	
  3128  0E1C                     l10158:	
  3129                           ;ser.c: 115: TRISC &= 0b10111111;
  3130  0E1C  30BF               	movlw	(0BFh)
  3131  0E1D  00E0               	movwf	(??_ser_init+0)^080h+0
  3132  0E1E  0860               	movf	(??_ser_init+0)^080h+0,w
  3133  0E1F  0587               	andwf	(135)^080h,f	;volatile
  3134                           	line	116
  3135                           	
  3136  0E20                     l10160:	
  3137                           ;ser.c: 116: BRGH=1;
  3138  0E20  1518               	bsf	(1218/8)^080h,(1218)&7
  3139                           	line	118
  3140                           	
  3141  0E21                     l10162:	
  3142                           ;ser.c: 118: SPBRG=20;
  3143  0E21  3014               	movlw	(014h)
  3144  0E22  0099               	movwf	(153)^080h	;volatile
  3145                           	line	121
  3146                           	
  3147  0E23                     l10164:	
  3148                           ;ser.c: 121: TX9=0;
  3149  0E23  1318               	bcf	(1222/8)^080h,(1222)&7
  3150                           	line	122
  3151                           	
  3152  0E24                     l10166:	
  3153                           ;ser.c: 122: RX9=0;
  3154  0E24  1283               	bcf	status, 5	;RP0=0, select bank0
  3155  0E25  1303               	bcf	status, 6	;RP1=0, select bank0
  3156  0E26  1318               	bcf	(198/8),(198)&7
  3157                           	line	124
  3158                           	
  3159  0E27                     l10168:	
  3160                           ;ser.c: 124: SYNC=0;
  3161  0E27  1683               	bsf	status, 5	;RP0=1, select bank1
  3162  0E28  1303               	bcf	status, 6	;RP1=0, select bank1
  3163  0E29  1218               	bcf	(1220/8)^080h,(1220)&7
  3164                           	line	125
  3165                           	
  3166  0E2A                     l10170:	
  3167                           ;ser.c: 125: SPEN=1;
  3168  0E2A  1283               	bcf	status, 5	;RP0=0, select bank0
  3169  0E2B  1303               	bcf	status, 6	;RP1=0, select bank0
  3170  0E2C  1798               	bsf	(199/8),(199)&7
  3171                           	line	126
  3172                           	
  3173  0E2D                     l10172:	
  3174                           ;ser.c: 126: CREN=1;
  3175  0E2D  1618               	bsf	(196/8),(196)&7
  3176                           	line	127
  3177                           	
  3178  0E2E                     l10174:	
  3179                           ;ser.c: 127: TXIE=0;
  3180  0E2E  1683               	bsf	status, 5	;RP0=1, select bank1
  3181  0E2F  1303               	bcf	status, 6	;RP1=0, select bank1
  3182  0E30  120C               	bcf	(1124/8)^080h,(1124)&7
  3183                           	line	128
  3184                           	
  3185  0E31                     l10176:	
  3186                           ;ser.c: 128: RCIE=1;
  3187  0E31  168C               	bsf	(1125/8)^080h,(1125)&7
  3188                           	line	129
  3189                           	
  3190  0E32                     l10178:	
  3191                           ;ser.c: 129: TXEN=1;
  3192  0E32  1698               	bsf	(1221/8)^080h,(1221)&7
  3193                           	line	132
  3194                           	
  3195  0E33                     l10180:	
  3196                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  3197  0E33  3000               	movlw	(0)
  3198  0E34  1283               	bcf	status, 5	;RP0=0, select bank0
  3199  0E35  1303               	bcf	status, 6	;RP1=0, select bank0
  3200  0E36  00EC               	movwf	(_txoptr)	;volatile
  3201  0E37  00EB               	movwf	(_txiptr)	;volatile
  3202  0E38  00E6               	movwf	(_rxoptr)	;volatile
  3203  0E39  1683               	bsf	status, 5	;RP0=1, select bank1
  3204  0E3A  1303               	bcf	status, 6	;RP1=0, select bank1
  3205  0E3B  00E0               	movwf	(??_ser_init+0)^080h+0
  3206  0E3C  0860               	movf	(??_ser_init+0)^080h+0,w
  3207  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  3208  0E3E  1303               	bcf	status, 6	;RP1=0, select bank0
  3209  0E3F  00E5               	movwf	(_rxiptr)	;volatile
  3210                           	line	133
  3211                           	
  3212  0E40                     l4432:	
  3213  0E40  0008               	return
  3214                           	opt stack 0
  3215                           GLOBAL	__end_of_ser_init
  3216  0E41                     	__end_of_ser_init:
  3217 ;; =============== function _ser_init ends ============
  3218                           
  3219                           	signat	_ser_init,88
  3220                           	global	_isr1
  3221                           psect	text724,local,class=CODE,delta=2
  3222                           global __ptext724
  3223  0300                     __ptext724:
  3224                           
  3225 ;; *************** function _isr1 *****************
  3226 ;; Defined at:
  3227 ;;		line 85 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0
  3243 ;;      Temps:          0       5       0       0       0
  3244 ;;      Totals:         0       5       0       0       0
  3245 ;;Total ram usage:        5 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    4
  3248 ;; This function calls:
  3249 ;;		___lwmod
  3250 ;;		_readAvgDistance
  3251 ;;		_UpdateDisplay
  3252 ;;		_ReadButtons
  3253 ;; This function is called by:
  3254 ;;		Interrupt level 1
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           psect	text724
  3258                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3259                           	line	85
  3260                           	global	__size_of_isr1
  3261  00E5                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  3262                           	
  3263  0300                     _isr1:	
  3264                           	opt	stack 0
  3265                           ; Regs used in _isr1: [allreg]
  3266                           psect	intentry,class=CODE,delta=2
  3267                           global __pintentry
  3268  0004                     __pintentry:
  3269                           global interrupt_function
  3270  0004                     interrupt_function:
  3271                           	global saved_w
  3272  007E                     	saved_w	set	btemp+0
  3273  0004  00FE               	movwf	saved_w
  3274  0005  0E03               	swapf	status,w
  3275  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3276  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  3277  0008  00CD               	movwf	(??_isr1+1)
  3278  0009  0804               	movf	fsr0,w
  3279  000A  00CE               	movwf	(??_isr1+2)
  3280  000B  080A               	movf	pclath,w
  3281  000C  00CF               	movwf	(??_isr1+3)
  3282  000D  087F               	movf	btemp+1,w
  3283  000E  00D0               	movwf	(??_isr1+4)
  3284  000F  120A  118A  2B00   	ljmp	_isr1
  3285                           psect	text724
  3286                           	line	87
  3287                           	
  3288  0300                     i1l10022:	
  3289                           ;Main.c: 87: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  3290  0300  1E8C               	btfss	(101/8),(101)&7
  3291  0301  2B03               	goto	u325_21
  3292  0302  2B04               	goto	u325_20
  3293  0303                     u325_21:
  3294  0303  2B1E               	goto	i1l10032
  3295  0304                     u325_20:
  3296                           	
  3297  0304                     i1l10024:	
  3298  0304  081A               	movf	(26),w	;volatile
  3299  0305  00CC               	movwf	(??_isr1+0)+0
  3300  0306  0865               	movf	(_rxiptr),w
  3301  0307  3EB0               	addlw	_rxfifo&0ffh
  3302  0308  0084               	movwf	fsr0
  3303  0309  084C               	movf	(??_isr1+0)+0,w
  3304  030A  1383               	bcf	status, 7	;select IRP bank1
  3305  030B  0080               	movwf	indf
  3306                           	
  3307  030C                     i1l10026:	
  3308  030C  0865               	movf	(_rxiptr),w	;volatile
  3309  030D  3E01               	addlw	01h
  3310  030E  390F               	andlw	0Fh
  3311  030F  00CC               	movwf	(??_isr1+0)+0
  3312  0310  084C               	movf	(??_isr1+0)+0,w
  3313  0311  00E7               	movwf	(_ser_tmp)
  3314                           	
  3315  0312                     i1l10028:	
  3316  0312  0867               	movf	(_ser_tmp),w
  3317  0313  0666               	xorwf	(_rxoptr),w	;volatile
  3318  0314  1903               	skipnz
  3319  0315  2B17               	goto	u326_21
  3320  0316  2B18               	goto	u326_20
  3321  0317                     u326_21:
  3322  0317  2B1E               	goto	i1l10032
  3323  0318                     u326_20:
  3324                           	
  3325  0318                     i1l10030:	
  3326  0318  0867               	movf	(_ser_tmp),w
  3327  0319  00CC               	movwf	(??_isr1+0)+0
  3328  031A  084C               	movf	(??_isr1+0)+0,w
  3329  031B  00E5               	movwf	(_rxiptr)	;volatile
  3330  031C  2B1E               	goto	i1l10032
  3331                           	
  3332  031D                     i1l2191:	
  3333  031D  2B1E               	goto	i1l10032
  3334                           	
  3335  031E                     i1l2190:	
  3336                           	
  3337  031E                     i1l10032:	
  3338  031E  1E0C               	btfss	(100/8),(100)&7
  3339  031F  2B21               	goto	u327_21
  3340  0320  2B22               	goto	u327_20
  3341  0321                     u327_21:
  3342  0321  2B42               	goto	i1l2192
  3343  0322                     u327_20:
  3344                           	
  3345  0322                     i1l10034:	
  3346  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3347  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3348  0324  1E0C               	btfss	(1124/8)^080h,(1124)&7
  3349  0325  2B27               	goto	u328_21
  3350  0326  2B28               	goto	u328_20
  3351  0327                     u328_21:
  3352  0327  2B42               	goto	i1l2192
  3353  0328                     u328_20:
  3354                           	
  3355  0328                     i1l10036:	
  3356  0328  1283               	bcf	status, 5	;RP0=0, select bank0
  3357  0329  1303               	bcf	status, 6	;RP1=0, select bank0
  3358  032A  086C               	movf	(_txoptr),w
  3359  032B  3EC0               	addlw	_txfifo&0ffh
  3360  032C  0084               	movwf	fsr0
  3361  032D  1383               	bcf	status, 7	;select IRP bank1
  3362  032E  0800               	movf	indf,w
  3363  032F  0099               	movwf	(25)	;volatile
  3364                           	
  3365  0330                     i1l10038:	
  3366  0330  3001               	movlw	(01h)
  3367  0331  00CC               	movwf	(??_isr1+0)+0
  3368  0332  084C               	movf	(??_isr1+0)+0,w
  3369  0333  07EC               	addwf	(_txoptr),f	;volatile
  3370                           	
  3371  0334                     i1l10040:	
  3372  0334  300F               	movlw	(0Fh)
  3373  0335  00CC               	movwf	(??_isr1+0)+0
  3374  0336  084C               	movf	(??_isr1+0)+0,w
  3375  0337  05EC               	andwf	(_txoptr),f	;volatile
  3376                           	
  3377  0338                     i1l10042:	
  3378  0338  086C               	movf	(_txoptr),w	;volatile
  3379  0339  066B               	xorwf	(_txiptr),w	;volatile
  3380  033A  1D03               	skipz
  3381  033B  2B3D               	goto	u329_21
  3382  033C  2B3E               	goto	u329_20
  3383  033D                     u329_21:
  3384  033D  2B42               	goto	i1l2192
  3385  033E                     u329_20:
  3386                           	
  3387  033E                     i1l10044:	
  3388  033E  1683               	bsf	status, 5	;RP0=1, select bank1
  3389  033F  1303               	bcf	status, 6	;RP1=0, select bank1
  3390  0340  120C               	bcf	(1124/8)^080h,(1124)&7
  3391  0341  2B42               	goto	i1l2192
  3392                           	
  3393  0342                     i1l2193:	
  3394                           	
  3395  0342                     i1l2192:	
  3396                           	line	90
  3397                           ;Main.c: 90: if(TMR0IF)
  3398  0342  1D0B               	btfss	(90/8),(90)&7
  3399  0343  2B45               	goto	u330_21
  3400  0344  2B46               	goto	u330_20
  3401  0345                     u330_21:
  3402  0345  2BD9               	goto	i1l2200
  3403  0346                     u330_20:
  3404                           	line	92
  3405                           	
  3406  0346                     i1l10046:	
  3407                           ;Main.c: 91: {
  3408                           ;Main.c: 92: TMR0IF = 0;
  3409  0346  110B               	bcf	(90/8),(90)&7
  3410                           	line	93
  3411                           	
  3412  0347                     i1l10048:	
  3413                           ;Main.c: 93: TMR0 = 100;
  3414  0347  3064               	movlw	(064h)
  3415  0348  1283               	bcf	status, 5	;RP0=0, select bank0
  3416  0349  0081               	movwf	(1)	;volatile
  3417                           	line	95
  3418                           ;Main.c: 95: RTC_Counter++;
  3419  034A  3001               	movlw	low(01h)
  3420  034B  07D1               	addwf	(_RTC_Counter),f	;volatile
  3421  034C  1803               	skipnc
  3422  034D  0AD2               	incf	(_RTC_Counter+1),f	;volatile
  3423  034E  3000               	movlw	high(01h)
  3424  034F  07D2               	addwf	(_RTC_Counter+1),f	;volatile
  3425                           	line	97
  3426                           	
  3427  0350                     i1l10050:	
  3428                           ;Main.c: 97: RTC_FLAG_1MS = 1;
  3429  0350  17ED               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  3430                           	line	98
  3431                           	
  3432  0351                     i1l10052:	
  3433                           ;Main.c: 98: if(RTC_Counter % 10 == 0)
  3434  0351  300A               	movlw	low(0Ah)
  3435  0352  00A0               	movwf	(?___lwmod)
  3436  0353  3000               	movlw	high(0Ah)
  3437  0354  00A1               	movwf	((?___lwmod))+1
  3438  0355  0852               	movf	(_RTC_Counter+1),w	;volatile
  3439  0356  01A3               	clrf	1+(?___lwmod)+02h
  3440  0357  07A3               	addwf	1+(?___lwmod)+02h
  3441  0358  0851               	movf	(_RTC_Counter),w	;volatile
  3442  0359  01A2               	clrf	0+(?___lwmod)+02h
  3443  035A  07A2               	addwf	0+(?___lwmod)+02h
  3444                           
  3445  035B  120A  158A  2773   	fcall	___lwmod
              120A  118A         
  3446  0360  1283               	bcf	status, 5	;RP0=0, select bank0
  3447  0361  1303               	bcf	status, 6	;RP1=0, select bank0
  3448  0362  0821               	movf	((1+(?___lwmod))),w
  3449  0363  0420               	iorwf	((0+(?___lwmod))),w
  3450  0364  1D03               	skipz
  3451  0365  2B67               	goto	u331_21
  3452  0366  2B68               	goto	u331_20
  3453  0367                     u331_21:
  3454  0367  2B6A               	goto	i1l10056
  3455  0368                     u331_20:
  3456                           	line	100
  3457                           	
  3458  0368                     i1l10054:	
  3459                           ;Main.c: 99: {
  3460                           ;Main.c: 100: RTC_FLAG_10MS = 1;
  3461  0368  176D               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  3462  0369  2B6A               	goto	i1l10056
  3463                           	line	103
  3464                           	
  3465  036A                     i1l2195:	
  3466                           	line	104
  3467                           	
  3468  036A                     i1l10056:	
  3469                           ;Main.c: 103: }
  3470                           ;Main.c: 104: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  3471  036A  3032               	movlw	low(032h)
  3472  036B  00A0               	movwf	(?___lwmod)
  3473  036C  3000               	movlw	high(032h)
  3474  036D  00A1               	movwf	((?___lwmod))+1
  3475  036E  0852               	movf	(_RTC_Counter+1),w	;volatile
  3476  036F  01A3               	clrf	1+(?___lwmod)+02h
  3477  0370  07A3               	addwf	1+(?___lwmod)+02h
  3478  0371  0851               	movf	(_RTC_Counter),w	;volatile
  3479  0372  01A2               	clrf	0+(?___lwmod)+02h
  3480  0373  07A2               	addwf	0+(?___lwmod)+02h
  3481                           
  3482  0374  120A  158A  2773   	fcall	___lwmod
              120A  118A         
  3483  0379  1283               	bcf	status, 5	;RP0=0, select bank0
  3484  037A  1303               	bcf	status, 6	;RP1=0, select bank0
  3485  037B  0821               	movf	((1+(?___lwmod))),w
  3486  037C  0420               	iorwf	((0+(?___lwmod))),w
  3487  037D  1D03               	skipz
  3488  037E  2B80               	goto	u332_21
  3489  037F  2B81               	goto	u332_20
  3490  0380                     u332_21:
  3491  0380  2B83               	goto	i1l10060
  3492  0381                     u332_20:
  3493                           	
  3494  0381                     i1l10058:	
  3495  0381  156E               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  3496  0382  2B83               	goto	i1l10060
  3497                           	
  3498  0383                     i1l2196:	
  3499                           	line	105
  3500                           	
  3501  0383                     i1l10060:	
  3502                           ;Main.c: 105: if(RTC_Counter % 250 == 0)
  3503  0383  30FA               	movlw	low(0FAh)
  3504  0384  00A0               	movwf	(?___lwmod)
  3505  0385  3000               	movlw	high(0FAh)
  3506  0386  00A1               	movwf	((?___lwmod))+1
  3507  0387  0852               	movf	(_RTC_Counter+1),w	;volatile
  3508  0388  01A3               	clrf	1+(?___lwmod)+02h
  3509  0389  07A3               	addwf	1+(?___lwmod)+02h
  3510  038A  0851               	movf	(_RTC_Counter),w	;volatile
  3511  038B  01A2               	clrf	0+(?___lwmod)+02h
  3512  038C  07A2               	addwf	0+(?___lwmod)+02h
  3513                           
  3514  038D  120A  158A  2773   	fcall	___lwmod
              120A  118A         
  3515  0392  1283               	bcf	status, 5	;RP0=0, select bank0
  3516  0393  1303               	bcf	status, 6	;RP1=0, select bank0
  3517  0394  0821               	movf	((1+(?___lwmod))),w
  3518  0395  0420               	iorwf	((0+(?___lwmod))),w
  3519  0396  1D03               	skipz
  3520  0397  2B99               	goto	u333_21
  3521  0398  2B9A               	goto	u333_20
  3522  0399                     u333_21:
  3523  0399  2BAB               	goto	i1l10066
  3524  039A                     u333_20:
  3525                           	line	107
  3526                           	
  3527  039A                     i1l10062:	
  3528                           ;Main.c: 106: {
  3529                           ;Main.c: 107: readAvgDistance();
  3530  039A  120A  118A  26CF   	fcall	_readAvgDistance
              120A  118A         
  3531                           	line	108
  3532                           ;Main.c: 108: UpdateDisplay(serialInput);
  3533  039F  1283               	bcf	status, 5	;RP0=0, select bank0
  3534  03A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3535  03A1  0868               	movf	(_serialInput),w	;volatile
  3536  03A2  120A  118A  23E5   	fcall	_UpdateDisplay
              120A  118A         
  3537                           	line	109
  3538                           	
  3539  03A7                     i1l10064:	
  3540                           ;Main.c: 109: RTC_FLAG_250MS = 1;
  3541  03A7  1283               	bcf	status, 5	;RP0=0, select bank0
  3542  03A8  1303               	bcf	status, 6	;RP1=0, select bank0
  3543  03A9  146E               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3544  03AA  2BAB               	goto	i1l10066
  3545                           	line	111
  3546                           	
  3547  03AB                     i1l2197:	
  3548                           	line	112
  3549                           	
  3550  03AB                     i1l10066:	
  3551                           ;Main.c: 111: }
  3552                           ;Main.c: 112: if(RTC_Counter % 500 == 0)
  3553  03AB  30F4               	movlw	low(01F4h)
  3554  03AC  00A0               	movwf	(?___lwmod)
  3555  03AD  3001               	movlw	high(01F4h)
  3556  03AE  00A1               	movwf	((?___lwmod))+1
  3557  03AF  0852               	movf	(_RTC_Counter+1),w	;volatile
  3558  03B0  01A3               	clrf	1+(?___lwmod)+02h
  3559  03B1  07A3               	addwf	1+(?___lwmod)+02h
  3560  03B2  0851               	movf	(_RTC_Counter),w	;volatile
  3561  03B3  01A2               	clrf	0+(?___lwmod)+02h
  3562  03B4  07A2               	addwf	0+(?___lwmod)+02h
  3563                           
  3564  03B5  120A  158A  2773   	fcall	___lwmod
              120A  118A         
  3565  03BA  1283               	bcf	status, 5	;RP0=0, select bank0
  3566  03BB  1303               	bcf	status, 6	;RP1=0, select bank0
  3567  03BC  0821               	movf	((1+(?___lwmod))),w
  3568  03BD  0420               	iorwf	((0+(?___lwmod))),w
  3569  03BE  1D03               	skipz
  3570  03BF  2BC1               	goto	u334_21
  3571  03C0  2BC2               	goto	u334_20
  3572  03C1                     u334_21:
  3573  03C1  2BC8               	goto	i1l10074
  3574  03C2                     u334_20:
  3575                           	line	114
  3576                           	
  3577  03C2                     i1l10068:	
  3578                           ;Main.c: 113: {
  3579                           ;Main.c: 114: RTC_FLAG_500MS = 1;
  3580  03C2  14EE               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  3581                           	line	115
  3582                           	
  3583  03C3                     i1l10070:	
  3584                           ;Main.c: 115: RTC_Counter = 0;
  3585  03C3  01D1               	clrf	(_RTC_Counter)	;volatile
  3586  03C4  01D2               	clrf	(_RTC_Counter+1)	;volatile
  3587                           	line	116
  3588                           	
  3589  03C5                     i1l10072:	
  3590                           ;Main.c: 116: RB0 ^= 0x01;
  3591  03C5  3001               	movlw	1<<((48)&7)
  3592  03C6  0686               	xorwf	((48)/8),f
  3593  03C7  2BC8               	goto	i1l10074
  3594                           	line	117
  3595                           	
  3596  03C8                     i1l2198:	
  3597                           	line	119
  3598                           	
  3599  03C8                     i1l10074:	
  3600                           ;Main.c: 117: }
  3601                           ;Main.c: 119: if (buttonPressed == 0)
  3602  03C8  08E0               	movf	(_buttonPressed),f
  3603  03C9  1D03               	skipz	;volatile
  3604  03CA  2BCC               	goto	u335_21
  3605  03CB  2BCD               	goto	u335_20
  3606  03CC                     u335_21:
  3607  03CC  2BD9               	goto	i1l2200
  3608  03CD                     u335_20:
  3609                           	line	121
  3610                           	
  3611  03CD                     i1l10076:	
  3612                           ;Main.c: 120: {
  3613                           ;Main.c: 121: buttonPressed = ReadButtons();
  3614  03CD  120A  158A  2741   	fcall	_ReadButtons
              120A  118A         
  3615  03D2  1283               	bcf	status, 5	;RP0=0, select bank0
  3616  03D3  1303               	bcf	status, 6	;RP1=0, select bank0
  3617  03D4  00CC               	movwf	(??_isr1+0)+0
  3618  03D5  084C               	movf	(??_isr1+0)+0,w
  3619  03D6  00E0               	movwf	(_buttonPressed)	;volatile
  3620  03D7  2BD9               	goto	i1l2200
  3621                           	line	122
  3622                           	
  3623  03D8                     i1l2199:	
  3624  03D8  2BD9               	goto	i1l2200
  3625                           	line	123
  3626                           	
  3627  03D9                     i1l2194:	
  3628                           	line	124
  3629                           	
  3630  03D9                     i1l2200:	
  3631  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  3632  03DA  0850               	movf	(??_isr1+4),w
  3633  03DB  00FF               	movwf	btemp+1
  3634  03DC  084F               	movf	(??_isr1+3),w
  3635  03DD  008A               	movwf	pclath
  3636  03DE  084E               	movf	(??_isr1+2),w
  3637  03DF  0084               	movwf	fsr0
  3638  03E0  0E4D               	swapf	(??_isr1+1)^00h,w
  3639  03E1  0083               	movwf	status
  3640  03E2  0EFE               	swapf	saved_w,f
  3641  03E3  0E7E               	swapf	saved_w,w
  3642  03E4  0009               	retfie
  3643                           	opt stack 0
  3644                           GLOBAL	__end_of_isr1
  3645  03E5                     	__end_of_isr1:
  3646 ;; =============== function _isr1 ends ============
  3647                           
  3648                           	signat	_isr1,88
  3649                           	global	_UpdateDisplay
  3650                           psect	text725,local,class=CODE,delta=2
  3651                           global __ptext725
  3652  03E5                     __ptext725:
  3653                           
  3654 ;; *************** function _UpdateDisplay *****************
  3655 ;; Defined at:
  3656 ;;		line 215 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  serialInput     1    wreg     unsigned char 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  serialInput     1    0[COMMON] unsigned char 
  3661 ;;  adcOutput      16   28[BANK0 ] unsigned char [16]
  3662 ;; Return value:  Size  Location     Type
  3663 ;;		None               void
  3664 ;; Registers used:
  3665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3671 ;;      Params:         0       0       0       0       0
  3672 ;;      Locals:         0      16       0       0       0
  3673 ;;      Temps:          0       5       0       0       0
  3674 ;;      Totals:         0      21       0       0       0
  3675 ;;Total ram usage:       21 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    2
  3678 ;; This function calls:
  3679 ;;		i1_lcd_write_control
  3680 ;;		_sprintf
  3681 ;;		_lcd_set_cursor
  3682 ;;		_lcd_write_string
  3683 ;;		___awmod
  3684 ;; This function is called by:
  3685 ;;		_isr1
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           psect	text725
  3689                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  3690                           	line	215
  3691                           	global	__size_of_UpdateDisplay
  3692  00B9                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3693                           	
  3694  03E5                     _UpdateDisplay:	
  3695                           	opt	stack 1
  3696                           ; Regs used in _UpdateDisplay: [allreg]
  3697                           	line	216
  3698                           	
  3699  03E5                     i1l10094:	
  3700                           ;HMI.c: 216: char adcOutput[16] = "";
  3701  03E5  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3702  03E6  0084               	movwf	fsr0
  3703  03E7  30A0               	movlw	low(UpdateDisplay@F1222)
  3704  03E8  1283               	bcf	status, 5	;RP0=0, select bank0
  3705  03E9  1303               	bcf	status, 6	;RP1=0, select bank0
  3706  03EA  00B7               	movwf	(??_UpdateDisplay+0)+0
  3707  03EB  0804               	movf	fsr0,w
  3708  03EC  00B8               	movwf	((??_UpdateDisplay+0)+0+1)
  3709  03ED  3010               	movlw	16
  3710  03EE  00B9               	movwf	((??_UpdateDisplay+0)+0+2)
  3711  03EF                     u338_20:
  3712  03EF  0837               	movf	(??_UpdateDisplay+0)+0,w
  3713  03F0  0084               	movwf	fsr0
  3714  03F1  1383               	bcf	status, 7	;select IRP bank1
  3715                           	
  3716  03F2  0800               	movf	indf,w
  3717  03F3  00BA               	movwf	((??_UpdateDisplay+0)+0+3)
  3718  03F4  0AB7               	incf	(??_UpdateDisplay+0)+0,f
  3719  03F5  0838               	movf	((??_UpdateDisplay+0)+0+1),w
  3720  03F6  0084               	movwf	fsr0
  3721                           	
  3722  03F7  083A               	movf	((??_UpdateDisplay+0)+0+3),w
  3723  03F8  0080               	movwf	indf
  3724  03F9  0AB8               	incf	((??_UpdateDisplay+0)+0+1),f
  3725  03FA  0BB9               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3726  03FB  2BEF               	goto	u338_20
  3727                           	line	217
  3728                           	
  3729  03FC                     i1l10096:	
  3730                           ;HMI.c: 217: lcd_write_control(0b00000001);
  3731  03FC  3001               	movlw	(01h)
  3732  03FD  120A  158A  2563   	fcall	i1_lcd_write_control
              120A  118A         
  3733                           	line	219
  3734                           	
  3735  0402                     i1l10098:	
  3736                           ;HMI.c: 219: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3737  0402  300B               	movlw	((STR_11-__stringbase))&0ffh
  3738  0403  1283               	bcf	status, 5	;RP0=0, select bank0
  3739  0404  1303               	bcf	status, 6	;RP1=0, select bank0
  3740  0405  00B7               	movwf	(??_UpdateDisplay+0)+0
  3741  0406  0837               	movf	(??_UpdateDisplay+0)+0,w
  3742  0407  00A6               	movwf	(?_sprintf)
  3743  0408  0863               	movf	(_highByte),w
  3744  0409  00B8               	movwf	(??_UpdateDisplay+1)+0
  3745  040A  01B9               	clrf	(??_UpdateDisplay+1)+0+1
  3746  040B  0838               	movf	0+(??_UpdateDisplay+1)+0,w
  3747  040C  00A7               	movwf	0+(?_sprintf)+01h
  3748  040D  0839               	movf	1+(??_UpdateDisplay+1)+0,w
  3749  040E  00A8               	movwf	1+(?_sprintf)+01h
  3750  040F  0864               	movf	(_lowByte),w
  3751  0410  00BA               	movwf	(??_UpdateDisplay+3)+0
  3752  0411  01BB               	clrf	(??_UpdateDisplay+3)+0+1
  3753  0412  083A               	movf	0+(??_UpdateDisplay+3)+0,w
  3754  0413  00A9               	movwf	0+(?_sprintf)+03h
  3755  0414  083B               	movf	1+(??_UpdateDisplay+3)+0,w
  3756  0415  00AA               	movwf	1+(?_sprintf)+03h
  3757  0416  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3758  0417  120A  118A  2200   	fcall	_sprintf
              120A  118A         
  3759                           	line	221
  3760                           	
  3761  041C                     i1l10100:	
  3762                           ;HMI.c: 221: lcd_set_cursor(0x00);
  3763  041C  3000               	movlw	(0)
  3764  041D  120A  158A  252A   	fcall	_lcd_set_cursor
              120A  118A         
  3765                           	line	222
  3766                           	
  3767  0422                     i1l10102:	
  3768                           ;HMI.c: 222: lcd_write_string(adcOutput);
  3769  0422  303C               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3770  0423  00F7               	movwf	(?_lcd_write_string)
  3771  0424  3000               	movlw	(0x0/2)
  3772  0425  00F8               	movwf	(?_lcd_write_string+1)
  3773  0426  120A  158A  2694   	fcall	_lcd_write_string
              120A  118A         
  3774                           	line	227
  3775                           	
  3776  042B                     i1l10104:	
  3777                           ;HMI.c: 227: lcd_set_cursor(0x40);
  3778  042B  3040               	movlw	(040h)
  3779  042C  120A  158A  252A   	fcall	_lcd_set_cursor
              120A  118A         
  3780                           	line	228
  3781                           	
  3782  0431                     i1l10106:	
  3783                           ;HMI.c: 228: if (pos > 0)
  3784  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  3785  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  3786  0433  0858               	movf	(_pos+1),w
  3787  0434  3A80               	xorlw	80h
  3788  0435  00FF               	movwf	btemp+1
  3789  0436  3080               	movlw	(high(01h))^80h
  3790  0437  027F               	subwf	btemp+1,w
  3791  0438  1D03               	skipz
  3792  0439  2C3C               	goto	u339_25
  3793  043A  3001               	movlw	low(01h)
  3794  043B  0257               	subwf	(_pos),w
  3795  043C                     u339_25:
  3796                           
  3797  043C  1C03               	skipc
  3798  043D  2C3F               	goto	u339_21
  3799  043E  2C40               	goto	u339_20
  3800  043F                     u339_21:
  3801  043F  2C51               	goto	i1l10110
  3802  0440                     u339_20:
  3803                           	line	229
  3804                           	
  3805  0440                     i1l10108:	
  3806                           ;HMI.c: 229: lcd_write_string(shortMenuStrings[pos - 1]);
  3807  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  3808  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  3809  0442  0857               	movf	(_pos),w
  3810  0443  3EFF               	addlw	0FFh
  3811  0444  3EDB               	addlw	_shortMenuStrings&0ffh
  3812  0445  0084               	movwf	fsr0
  3813  0446  1383               	bcf	status, 7	;select IRP bank1
  3814  0447  0800               	movf	indf,w
  3815  0448  00F7               	movwf	(?_lcd_write_string)
  3816  0449  3080               	movlw	80h
  3817  044A  00F8               	movwf	(?_lcd_write_string+1)
  3818  044B  120A  158A  2694   	fcall	_lcd_write_string
              120A  118A         
  3819  0450  2C62               	goto	i1l10112
  3820                           	line	230
  3821                           	
  3822  0451                     i1l5222:	
  3823                           	line	231
  3824                           	
  3825  0451                     i1l10110:	
  3826                           ;HMI.c: 230: else
  3827                           ;HMI.c: 231: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  3828  0451  1283               	bcf	status, 5	;RP0=0, select bank0
  3829  0452  1303               	bcf	status, 6	;RP1=0, select bank0
  3830  0453  0857               	movf	(_pos),w
  3831  0454  3E04               	addlw	04h
  3832  0455  3EDB               	addlw	_shortMenuStrings&0ffh
  3833  0456  0084               	movwf	fsr0
  3834  0457  1383               	bcf	status, 7	;select IRP bank1
  3835  0458  0800               	movf	indf,w
  3836  0459  00F7               	movwf	(?_lcd_write_string)
  3837  045A  3080               	movlw	80h
  3838  045B  00F8               	movwf	(?_lcd_write_string+1)
  3839  045C  120A  158A  2694   	fcall	_lcd_write_string
              120A  118A         
  3840  0461  2C62               	goto	i1l10112
  3841                           	
  3842  0462                     i1l5223:	
  3843                           	line	232
  3844                           	
  3845  0462                     i1l10112:	
  3846                           ;HMI.c: 232: lcd_set_cursor(0x44);
  3847  0462  3044               	movlw	(044h)
  3848  0463  120A  158A  252A   	fcall	_lcd_set_cursor
              120A  118A         
  3849                           	line	233
  3850                           	
  3851  0468                     i1l10114:	
  3852                           ;HMI.c: 233: lcd_write_string(menuStrings[pos]);
  3853  0468  1283               	bcf	status, 5	;RP0=0, select bank0
  3854  0469  1303               	bcf	status, 6	;RP1=0, select bank0
  3855  046A  0857               	movf	(_pos),w
  3856  046B  3ED6               	addlw	_menuStrings&0ffh
  3857  046C  0084               	movwf	fsr0
  3858  046D  1383               	bcf	status, 7	;select IRP bank1
  3859  046E  0800               	movf	indf,w
  3860  046F  00F7               	movwf	(?_lcd_write_string)
  3861  0470  3080               	movlw	80h
  3862  0471  00F8               	movwf	(?_lcd_write_string+1)
  3863  0472  120A  158A  2694   	fcall	_lcd_write_string
              120A  118A         
  3864                           	line	234
  3865                           ;HMI.c: 234: lcd_set_cursor(0x4D);
  3866  0477  304D               	movlw	(04Dh)
  3867  0478  120A  158A  252A   	fcall	_lcd_set_cursor
              120A  118A         
  3868                           	line	235
  3869                           	
  3870  047D                     i1l10116:	
  3871                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  3872  047D  3005               	movlw	low(05h)
  3873  047E  00F0               	movwf	(?___awmod)
  3874  047F  3000               	movlw	high(05h)
  3875  0480  00F1               	movwf	((?___awmod))+1
  3876  0481  1283               	bcf	status, 5	;RP0=0, select bank0
  3877  0482  1303               	bcf	status, 6	;RP1=0, select bank0
  3878  0483  0857               	movf	(_pos),w
  3879  0484  3E01               	addlw	low(01h)
  3880  0485  00F2               	movwf	0+(?___awmod)+02h
  3881  0486  0858               	movf	(_pos+1),w
  3882  0487  1803               	skipnc
  3883  0488  3E01               	addlw	1
  3884  0489  3E00               	addlw	high(01h)
  3885  048A  00F3               	movwf	1+0+(?___awmod)+02h
  3886  048B  120A  118A  2669   	fcall	___awmod
              120A  118A         
  3887  0490  0870               	movf	(0+(?___awmod)),w
  3888  0491  3EDB               	addlw	_shortMenuStrings&0ffh
  3889  0492  0084               	movwf	fsr0
  3890  0493  1383               	bcf	status, 7	;select IRP bank1
  3891  0494  0800               	movf	indf,w
  3892  0495  00F7               	movwf	(?_lcd_write_string)
  3893  0496  3080               	movlw	80h
  3894  0497  00F8               	movwf	(?_lcd_write_string+1)
  3895  0498  120A  158A  2694   	fcall	_lcd_write_string
              120A  118A         
  3896                           	line	236
  3897                           	
  3898  049D                     i1l5224:	
  3899  049D  0008               	return
  3900                           	opt stack 0
  3901                           GLOBAL	__end_of_UpdateDisplay
  3902  049E                     	__end_of_UpdateDisplay:
  3903 ;; =============== function _UpdateDisplay ends ============
  3904                           
  3905                           	signat	_UpdateDisplay,4216
  3906                           	global	_readAvgDistance
  3907                           psect	text726,local,class=CODE,delta=2
  3908                           global __ptext726
  3909  06CF                     __ptext726:
  3910                           
  3911 ;; *************** function _readAvgDistance *****************
  3912 ;; Defined at:
  3913 ;;		line 10 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  i               2    4[BANK0 ] int 
  3918 ;;  fullval         2    2[BANK0 ] unsigned int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;		None               void
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       0       0       0       0
  3929 ;;      Locals:         0       4       0       0       0
  3930 ;;      Temps:          0       0       0       0       0
  3931 ;;      Totals:         0       4       0       0       0
  3932 ;;Total ram usage:        4 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    3
  3935 ;; This function calls:
  3936 ;;		_readDistance
  3937 ;;		___lwdiv
  3938 ;;		_ADCconvert
  3939 ;; This function is called by:
  3940 ;;		_isr1
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           psect	text726
  3944                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3945                           	line	10
  3946                           	global	__size_of_readAvgDistance
  3947  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3948                           	
  3949  06CF                     _readAvgDistance:	
  3950                           	opt	stack 0
  3951                           ; Regs used in _readAvgDistance: [allreg]
  3952                           	line	11
  3953                           	
  3954  06CF                     i1l10078:	
  3955                           ;infrared.c: 11: unsigned int fullval = 0;
  3956  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3957  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3958  06D1  01A2               	clrf	(readAvgDistance@fullval)
  3959  06D2  01A3               	clrf	(readAvgDistance@fullval+1)
  3960                           	line	14
  3961                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3962  06D3  01A4               	clrf	(readAvgDistance@i)
  3963  06D4  01A5               	clrf	(readAvgDistance@i+1)
  3964                           	
  3965  06D5                     i1l10080:	
  3966  06D5  0825               	movf	(readAvgDistance@i+1),w
  3967  06D6  3A80               	xorlw	80h
  3968  06D7  00FF               	movwf	btemp+1
  3969  06D8  3080               	movlw	(high(0Ah))^80h
  3970  06D9  027F               	subwf	btemp+1,w
  3971  06DA  1D03               	skipz
  3972  06DB  2EDE               	goto	u336_25
  3973  06DC  300A               	movlw	low(0Ah)
  3974  06DD  0224               	subwf	(readAvgDistance@i),w
  3975  06DE                     u336_25:
  3976                           
  3977  06DE  1C03               	skipc
  3978  06DF  2EE1               	goto	u336_21
  3979  06E0  2EE2               	goto	u336_20
  3980  06E1                     u336_21:
  3981  06E1  2EE4               	goto	i1l10084
  3982  06E2                     u336_20:
  3983  06E2  2F05               	goto	i1l10090
  3984                           	
  3985  06E3                     i1l10082:	
  3986  06E3  2F05               	goto	i1l10090
  3987                           	line	15
  3988                           	
  3989  06E4                     i1l2940:	
  3990                           	line	16
  3991                           	
  3992  06E4                     i1l10084:	
  3993                           ;infrared.c: 15: {
  3994                           ;infrared.c: 16: fullval += readDistance();
  3995  06E4  120A  158A  2577   	fcall	_readDistance
              120A  118A         
  3996  06E9  0878               	movf	(0+(?_readDistance)),w
  3997  06EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3998  06EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3999  06EC  07A2               	addwf	(readAvgDistance@fullval),f
  4000  06ED  1803               	skipnc
  4001  06EE  0AA3               	incf	(readAvgDistance@fullval+1),f
  4002  06EF  0879               	movf	(1+(?_readDistance)),w
  4003  06F0  07A3               	addwf	(readAvgDistance@fullval+1),f
  4004                           	line	14
  4005                           	
  4006  06F1                     i1l10086:	
  4007  06F1  3001               	movlw	low(01h)
  4008  06F2  07A4               	addwf	(readAvgDistance@i),f
  4009  06F3  1803               	skipnc
  4010  06F4  0AA5               	incf	(readAvgDistance@i+1),f
  4011  06F5  3000               	movlw	high(01h)
  4012  06F6  07A5               	addwf	(readAvgDistance@i+1),f
  4013                           	
  4014  06F7                     i1l10088:	
  4015  06F7  0825               	movf	(readAvgDistance@i+1),w
  4016  06F8  3A80               	xorlw	80h
  4017  06F9  00FF               	movwf	btemp+1
  4018  06FA  3080               	movlw	(high(0Ah))^80h
  4019  06FB  027F               	subwf	btemp+1,w
  4020  06FC  1D03               	skipz
  4021  06FD  2F00               	goto	u337_25
  4022  06FE  300A               	movlw	low(0Ah)
  4023  06FF  0224               	subwf	(readAvgDistance@i),w
  4024  0700                     u337_25:
  4025                           
  4026  0700  1C03               	skipc
  4027  0701  2F03               	goto	u337_21
  4028  0702  2F04               	goto	u337_20
  4029  0703                     u337_21:
  4030  0703  2EE4               	goto	i1l10084
  4031  0704                     u337_20:
  4032  0704  2F05               	goto	i1l10090
  4033                           	
  4034  0705                     i1l2941:	
  4035                           	line	19
  4036                           	
  4037  0705                     i1l10090:	
  4038                           ;infrared.c: 18: }
  4039                           ;infrared.c: 19: adcVal = fullval / 10;
  4040  0705  300A               	movlw	low(0Ah)
  4041  0706  00F6               	movwf	(?___lwdiv)
  4042  0707  3000               	movlw	high(0Ah)
  4043  0708  00F7               	movwf	((?___lwdiv))+1
  4044  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  4045  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  4046  070B  0823               	movf	(readAvgDistance@fullval+1),w
  4047  070C  01F9               	clrf	1+(?___lwdiv)+02h
  4048  070D  07F9               	addwf	1+(?___lwdiv)+02h
  4049  070E  0822               	movf	(readAvgDistance@fullval),w
  4050  070F  01F8               	clrf	0+(?___lwdiv)+02h
  4051  0710  07F8               	addwf	0+(?___lwdiv)+02h
  4052                           
  4053  0711  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  4054  0716  0877               	movf	(1+(?___lwdiv)),w
  4055  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  4056  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  4057  0719  01D4               	clrf	(_adcVal+1)	;volatile
  4058  071A  07D4               	addwf	(_adcVal+1)	;volatile
  4059  071B  0876               	movf	(0+(?___lwdiv)),w
  4060  071C  01D3               	clrf	(_adcVal)	;volatile
  4061  071D  07D3               	addwf	(_adcVal)	;volatile
  4062                           
  4063                           	line	20
  4064                           	
  4065  071E                     i1l10092:	
  4066                           ;infrared.c: 20: ADCconvert();
  4067  071E  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  4068                           	line	21
  4069                           	
  4070  0723                     i1l2942:	
  4071  0723  0008               	return
  4072                           	opt stack 0
  4073                           GLOBAL	__end_of_readAvgDistance
  4074  0724                     	__end_of_readAvgDistance:
  4075 ;; =============== function _readAvgDistance ends ============
  4076                           
  4077                           	signat	_readAvgDistance,88
  4078                           	global	_readDistance
  4079                           psect	text727,local,class=CODE,delta=2
  4080                           global __ptext727
  4081  0D77                     __ptext727:
  4082                           
  4083 ;; *************** function _readDistance *****************
  4084 ;; Defined at:
  4085 ;;		line 24 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  fullval         2   12[COMMON] unsigned int 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  2    8[COMMON] unsigned int 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         2       0       0       0       0
  4100 ;;      Locals:         2       0       0       0       0
  4101 ;;      Temps:          2       0       0       0       0
  4102 ;;      Totals:         6       0       0       0       0
  4103 ;;Total ram usage:        6 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    2
  4106 ;; This function calls:
  4107 ;;		_adc_read_channel
  4108 ;; This function is called by:
  4109 ;;		_readAvgDistance
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           psect	text727
  4113                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4114                           	line	24
  4115                           	global	__size_of_readDistance
  4116  0014                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4117                           	
  4118  0D77                     _readDistance:	
  4119                           	opt	stack 0
  4120                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4121                           	line	27
  4122                           	
  4123  0D77                     i1l10218:	
  4124                           ;infrared.c: 25: unsigned int fullval ;
  4125                           ;infrared.c: 27: fullval = adc_read_channel(0);
  4126  0D77  3000               	movlw	(0)
  4127  0D78  120A  118A  27BF   	fcall	_adc_read_channel
              120A  158A         
  4128  0D7D  00FA               	movwf	(??_readDistance+0)+0
  4129  0D7E  01FB               	clrf	(??_readDistance+0)+0+1
  4130  0D7F  087A               	movf	0+(??_readDistance+0)+0,w
  4131  0D80  00FC               	movwf	(readDistance@fullval)
  4132  0D81  087B               	movf	1+(??_readDistance+0)+0,w
  4133  0D82  00FD               	movwf	(readDistance@fullval+1)
  4134                           	line	29
  4135                           	
  4136  0D83                     i1l10220:	
  4137                           ;infrared.c: 29: return fullval;
  4138  0D83  087D               	movf	(readDistance@fullval+1),w
  4139  0D84  01F9               	clrf	(?_readDistance+1)
  4140  0D85  07F9               	addwf	(?_readDistance+1)
  4141  0D86  087C               	movf	(readDistance@fullval),w
  4142  0D87  01F8               	clrf	(?_readDistance)
  4143  0D88  07F8               	addwf	(?_readDistance)
  4144                           
  4145  0D89  2D8A               	goto	i1l2945
  4146                           	
  4147  0D8A                     i1l10222:	
  4148                           	line	30
  4149                           	
  4150  0D8A                     i1l2945:	
  4151  0D8A  0008               	return
  4152                           	opt stack 0
  4153                           GLOBAL	__end_of_readDistance
  4154  0D8B                     	__end_of_readDistance:
  4155 ;; =============== function _readDistance ends ============
  4156                           
  4157                           	signat	_readDistance,90
  4158                           	global	_lcd_write_string
  4159                           psect	text728,local,class=CODE,delta=2
  4160                           global __ptext728
  4161  0E94                     __ptext728:
  4162                           
  4163 ;; *************** function _lcd_write_string *****************
  4164 ;; Defined at:
  4165 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  s               2    7[COMMON] PTR unsigned char 
  4168 ;;		 -> UpdateDisplay@adcOutput(16), STR_10(4), STR_9(4), STR_8(4), 
  4169 ;;		 -> STR_7(4), STR_6(4), STR_5(9), STR_4(8), 
  4170 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;		None               void
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         2       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0
  4185 ;;      Totals:         2       0       0       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    1
  4189 ;; This function calls:
  4190 ;;		_lcd_write_data
  4191 ;; This function is called by:
  4192 ;;		_UpdateDisplay
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           psect	text728
  4196                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4197                           	line	48
  4198                           	global	__size_of_lcd_write_string
  4199  002A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4200                           	
  4201  0E94                     _lcd_write_string:	
  4202                           	opt	stack 1
  4203                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4204                           	line	50
  4205                           	
  4206  0E94                     i1l9988:	
  4207                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4208  0E94  2EAC               	goto	i1l9994
  4209                           	
  4210  0E95                     i1l1409:	
  4211                           	
  4212  0E95                     i1l9990:	
  4213  0E95  0878               	movf	(lcd_write_string@s+1),w
  4214  0E96  1283               	bcf	status, 5	;RP0=0, select bank0
  4215  0E97  1303               	bcf	status, 6	;RP1=0, select bank0
  4216  0E98  00FF               	movwf	btemp+1
  4217  0E99  0877               	movf	(lcd_write_string@s),w
  4218  0E9A  0084               	movwf	fsr0
  4219  0E9B  120A  118A  2600   	fcall	stringtab
              120A  158A         
  4220  0EA0  120A  158A  253D   	fcall	_lcd_write_data
              120A  158A         
  4221                           	
  4222  0EA5                     i1l9992:	
  4223  0EA5  3001               	movlw	low(01h)
  4224  0EA6  07F7               	addwf	(lcd_write_string@s),f
  4225  0EA7  1803               	skipnc
  4226  0EA8  0AF8               	incf	(lcd_write_string@s+1),f
  4227  0EA9  3000               	movlw	high(01h)
  4228  0EAA  07F8               	addwf	(lcd_write_string@s+1),f
  4229  0EAB  2EAC               	goto	i1l9994
  4230                           	
  4231  0EAC                     i1l1408:	
  4232                           	
  4233  0EAC                     i1l9994:	
  4234  0EAC  0878               	movf	(lcd_write_string@s+1),w
  4235  0EAD  1283               	bcf	status, 5	;RP0=0, select bank0
  4236  0EAE  1303               	bcf	status, 6	;RP1=0, select bank0
  4237  0EAF  00FF               	movwf	btemp+1
  4238  0EB0  0877               	movf	(lcd_write_string@s),w
  4239  0EB1  0084               	movwf	fsr0
  4240  0EB2  120A  118A  2600   	fcall	stringtab
              120A  158A         
  4241  0EB7  3800               	iorlw	0
  4242  0EB8  1D03               	skipz
  4243  0EB9  2EBB               	goto	u321_21
  4244  0EBA  2EBC               	goto	u321_20
  4245  0EBB                     u321_21:
  4246  0EBB  2E95               	goto	i1l9990
  4247  0EBC                     u321_20:
  4248  0EBC  2EBD               	goto	i1l1411
  4249                           	
  4250  0EBD                     i1l1410:	
  4251                           	line	51
  4252                           	
  4253  0EBD                     i1l1411:	
  4254  0EBD  0008               	return
  4255                           	opt stack 0
  4256                           GLOBAL	__end_of_lcd_write_string
  4257  0EBE                     	__end_of_lcd_write_string:
  4258 ;; =============== function _lcd_write_string ends ============
  4259                           
  4260                           	signat	_lcd_write_string,4216
  4261                           	global	_lcd_set_cursor
  4262                           psect	text729,local,class=CODE,delta=2
  4263                           global __ptext729
  4264  0D2A                     __ptext729:
  4265                           
  4266 ;; *************** function _lcd_set_cursor *****************
  4267 ;; Defined at:
  4268 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  address         1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  address         1    3[COMMON] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;		None               void
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         0       0       0       0       0
  4283 ;;      Locals:         1       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0
  4285 ;;      Totals:         1       0       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    1
  4289 ;; This function calls:
  4290 ;;		i1_lcd_write_control
  4291 ;; This function is called by:
  4292 ;;		_UpdateDisplay
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           psect	text729
  4296                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4297                           	line	42
  4298                           	global	__size_of_lcd_set_cursor
  4299  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4300                           	
  4301  0D2A                     _lcd_set_cursor:	
  4302                           	opt	stack 1
  4303                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4304                           ;lcd_set_cursor@address stored from wreg
  4305  0D2A  00F3               	movwf	(lcd_set_cursor@address)
  4306                           	line	43
  4307                           	
  4308  0D2B                     i1l9984:	
  4309                           ;lcd.c: 43: address |= 0b10000000;
  4310  0D2B  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4311                           	line	44
  4312                           	
  4313  0D2C                     i1l9986:	
  4314                           ;lcd.c: 44: lcd_write_control(address);
  4315  0D2C  0873               	movf	(lcd_set_cursor@address),w
  4316  0D2D  120A  158A  2563   	fcall	i1_lcd_write_control
              120A  158A         
  4317                           	line	45
  4318                           	
  4319  0D32                     i1l1405:	
  4320  0D32  0008               	return
  4321                           	opt stack 0
  4322                           GLOBAL	__end_of_lcd_set_cursor
  4323  0D33                     	__end_of_lcd_set_cursor:
  4324 ;; =============== function _lcd_set_cursor ends ============
  4325                           
  4326                           	signat	_lcd_set_cursor,4216
  4327                           	global	i1_lcd_write_control
  4328                           psect	text730,local,class=CODE,delta=2
  4329                           global __ptext730
  4330  0D63                     __ptext730:
  4331                           
  4332 ;; *************** function i1_lcd_write_control *****************
  4333 ;; Defined at:
  4334 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  lcd_write_co    1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		wreg
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         1       0       0       0       0
  4350 ;;      Temps:          2       0       0       0       0
  4351 ;;      Totals:         3       0       0       0       0
  4352 ;;Total ram usage:        3 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_lcd_set_cursor
  4358 ;;		_UpdateDisplay
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           psect	text730
  4362                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4363                           	line	18
  4364                           	global	__size_ofi1_lcd_write_control
  4365  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  4366                           	
  4367  0D63                     i1_lcd_write_control:	
  4368                           	opt	stack 1
  4369                           ; Regs used in i1_lcd_write_control: [wreg]
  4370                           ;i1lcd_write_control@databyte stored from wreg
  4371  0D63  00F2               	movwf	(i1lcd_write_control@databyte)
  4372                           	line	19
  4373                           	
  4374  0D64                     i1l10634:	
  4375                           ;lcd.c: 19: RE2 = 0;
  4376  0D64  1283               	bcf	status, 5	;RP0=0, select bank0
  4377  0D65  1303               	bcf	status, 6	;RP1=0, select bank0
  4378  0D66  1109               	bcf	(74/8),(74)&7
  4379                           	line	20
  4380                           ;lcd.c: 20: RE1 = 0;
  4381  0D67  1089               	bcf	(73/8),(73)&7
  4382                           	line	21
  4383                           ;lcd.c: 21: RE0 = 0;
  4384  0D68  1009               	bcf	(72/8),(72)&7
  4385                           	line	22
  4386                           	
  4387  0D69                     i1l10636:	
  4388                           ;lcd.c: 22: PORTD = databyte;
  4389  0D69  0872               	movf	(i1lcd_write_control@databyte),w
  4390  0D6A  0088               	movwf	(8)	;volatile
  4391                           	line	23
  4392                           	
  4393  0D6B                     i1l10638:	
  4394                           ;lcd.c: 23: RE2 = 1;
  4395  0D6B  1509               	bsf	(74/8),(74)&7
  4396                           	line	24
  4397                           	
  4398  0D6C                     i1l10640:	
  4399                           ;lcd.c: 24: RE2 = 0;
  4400  0D6C  1109               	bcf	(74/8),(74)&7
  4401                           	line	25
  4402                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  4403                           	opt asmopt_off
  4404  0D6D  300D               movlw	13
  4405  0D6E  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  4406  0D6F  30FB               	movlw	251
  4407  0D70  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  4408  0D71                     u433_27:
  4409  0D71  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  4410  0D72  2D71               	goto	u433_27
  4411  0D73  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  4412  0D74  2D71               	goto	u433_27
  4413  0D75  2D76               	nop2
  4414                           opt asmopt_on
  4415                           
  4416                           	line	26
  4417                           	
  4418  0D76                     i1l1399:	
  4419  0D76  0008               	return
  4420                           	opt stack 0
  4421                           GLOBAL	__end_ofi1_lcd_write_control
  4422  0D77                     	__end_ofi1_lcd_write_control:
  4423 ;; =============== function i1_lcd_write_control ends ============
  4424                           
  4425                           	signat	i1_lcd_write_control,88
  4426                           	global	_sprintf
  4427                           psect	text731,local,class=CODE,delta=2
  4428                           global __ptext731
  4429  0200                     __ptext731:
  4430                           
  4431 ;; *************** function _sprintf *****************
  4432 ;; Defined at:
  4433 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  sp              1    wreg     PTR unsigned char 
  4436 ;;		 -> UpdateDisplay@adcOutput(16), 
  4437 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  4438 ;;		 -> STR_11(15), 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  4441 ;;		 -> UpdateDisplay@adcOutput(16), 
  4442 ;;  _val            4   17[BANK0 ] struct .
  4443 ;;  c               1   22[BANK0 ] char 
  4444 ;;  prec            1   16[BANK0 ] char 
  4445 ;;  flag            1   15[BANK0 ] unsigned char 
  4446 ;;  ap              1   14[BANK0 ] PTR void [1]
  4447 ;;		 -> ?_sprintf(2), 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  2    6[BANK0 ] int 
  4450 ;; Registers used:
  4451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4457 ;;      Params:         0       5       0       0       0
  4458 ;;      Locals:         0       9       0       0       0
  4459 ;;      Temps:          0       3       0       0       0
  4460 ;;      Totals:         0      17       0       0       0
  4461 ;;Total ram usage:       17 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    1
  4464 ;; This function calls:
  4465 ;;		___lwdiv
  4466 ;;		___lwmod
  4467 ;; This function is called by:
  4468 ;;		_UpdateDisplay
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           psect	text731
  4472                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4473                           	line	488
  4474                           	global	__size_of_sprintf
  4475  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4476                           	
  4477  0200                     _sprintf:	
  4478                           	opt	stack 1
  4479                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4480                           ;sprintf@sp stored from wreg
  4481                           	line	537
  4482  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  4483  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  4484  0202  00B5               	movwf	(sprintf@sp)
  4485                           	
  4486  0203                     i1l10446:	
  4487  0203  3027               	movlw	(?_sprintf+01h)&0ffh
  4488  0204  00AB               	movwf	(??_sprintf+0)+0
  4489  0205  082B               	movf	(??_sprintf+0)+0,w
  4490  0206  00AE               	movwf	(sprintf@ap)
  4491                           	line	540
  4492  0207  2AE6               	goto	i1l10498
  4493                           	
  4494  0208                     i1l6691:	
  4495                           	line	542
  4496                           	
  4497  0208                     i1l10448:	
  4498  0208  0836               	movf	(sprintf@c),w
  4499  0209  3A25               	xorlw	025h
  4500  020A  1903               	skipnz
  4501  020B  2A0D               	goto	u390_21
  4502  020C  2A0E               	goto	u390_20
  4503  020D                     u390_21:
  4504  020D  2A1A               	goto	i1l6692
  4505  020E                     u390_20:
  4506                           	line	545
  4507                           	
  4508  020E                     i1l10450:	
  4509  020E  0836               	movf	(sprintf@c),w
  4510  020F  00AB               	movwf	(??_sprintf+0)+0
  4511  0210  0835               	movf	(sprintf@sp),w
  4512  0211  0084               	movwf	fsr0
  4513  0212  082B               	movf	(??_sprintf+0)+0,w
  4514  0213  1383               	bcf	status, 7	;select IRP bank0
  4515  0214  0080               	movwf	indf
  4516                           	
  4517  0215                     i1l10452:	
  4518  0215  3001               	movlw	(01h)
  4519  0216  00AB               	movwf	(??_sprintf+0)+0
  4520  0217  082B               	movf	(??_sprintf+0)+0,w
  4521  0218  07B5               	addwf	(sprintf@sp),f
  4522                           	line	546
  4523  0219  2AE6               	goto	i1l10498
  4524                           	line	547
  4525                           	
  4526  021A                     i1l6692:	
  4527                           	line	552
  4528  021A  01AF               	clrf	(sprintf@flag)
  4529                           	line	638
  4530  021B  2A21               	goto	i1l10456
  4531                           	line	640
  4532                           	
  4533  021C                     i1l6694:	
  4534                           	line	641
  4535  021C  2AFA               	goto	i1l10500
  4536                           	line	700
  4537                           	
  4538  021D                     i1l6696:	
  4539  021D  2A36               	goto	i1l10458
  4540                           	line	701
  4541                           	
  4542  021E                     i1l6697:	
  4543                           	line	702
  4544  021E  2A36               	goto	i1l10458
  4545                           	line	805
  4546                           	
  4547  021F                     i1l6699:	
  4548                           	line	816
  4549  021F  2AE6               	goto	i1l10498
  4550                           	line	825
  4551                           	
  4552  0220                     i1l10454:	
  4553  0220  2A36               	goto	i1l10458
  4554                           	line	638
  4555                           	
  4556  0221                     i1l6693:	
  4557                           	
  4558  0221                     i1l10456:	
  4559  0221  3001               	movlw	01h
  4560  0222  07A6               	addwf	(sprintf@f),f
  4561  0223  30FF               	movlw	-01h
  4562  0224  0726               	addwf	(sprintf@f),w
  4563  0225  0084               	movwf	fsr0
  4564  0226  120A  118A  260A   	fcall	stringdir
              120A  118A         
  4565  022B  00B6               	movwf	(sprintf@c)
  4566                           	; Switch size 1, requested type "space"
  4567                           ; Number of cases is 3, Range of values is 0 to 105
  4568                           ; switch strategies available:
  4569                           ; Name         Instructions Cycles
  4570                           ; simple_byte           10     6 (average)
  4571                           ; jumptable            260     6 (fixed)
  4572                           ; rangetable           110     6 (fixed)
  4573                           ; spacedrange          218     9 (fixed)
  4574                           ; locatedrange         106     3 (fixed)
  4575                           ;	Chosen strategy is simple_byte
  4576                           
  4577                           	opt asmopt_off
  4578  022C  3A00               	xorlw	0^0	; case 0
  4579  022D  1903               	skipnz
  4580  022E  2AFA               	goto	i1l10500
  4581  022F  3A64               	xorlw	100^0	; case 100
  4582  0230  1903               	skipnz
  4583  0231  2A36               	goto	i1l10458
  4584  0232  3A0D               	xorlw	105^100	; case 105
  4585  0233  1903               	skipnz
  4586  0234  2A36               	goto	i1l10458
  4587  0235  2AE6               	goto	i1l10498
  4588                           	opt asmopt_on
  4589                           
  4590                           	line	825
  4591                           	
  4592  0236                     i1l6698:	
  4593                           	line	1254
  4594                           	
  4595  0236                     i1l10458:	
  4596  0236  082E               	movf	(sprintf@ap),w
  4597  0237  0084               	movwf	fsr0
  4598  0238  1383               	bcf	status, 7	;select IRP bank0
  4599  0239  0800               	movf	indf,w
  4600  023A  00B1               	movwf	(sprintf@_val)
  4601  023B  0A84               	incf	fsr0,f
  4602  023C  0800               	movf	indf,w
  4603  023D  00B2               	movwf	(sprintf@_val+1)
  4604                           	
  4605  023E                     i1l10460:	
  4606  023E  3002               	movlw	(02h)
  4607  023F  00AB               	movwf	(??_sprintf+0)+0
  4608  0240  082B               	movf	(??_sprintf+0)+0,w
  4609  0241  07AE               	addwf	(sprintf@ap),f
  4610                           	line	1256
  4611                           	
  4612  0242                     i1l10462:	
  4613  0242  1FB2               	btfss	(sprintf@_val+1),7
  4614  0243  2A45               	goto	u391_21
  4615  0244  2A46               	goto	u391_20
  4616  0245                     u391_21:
  4617  0245  2A50               	goto	i1l10468
  4618  0246                     u391_20:
  4619                           	line	1257
  4620                           	
  4621  0246                     i1l10464:	
  4622  0246  3003               	movlw	(03h)
  4623  0247  00AB               	movwf	(??_sprintf+0)+0
  4624  0248  082B               	movf	(??_sprintf+0)+0,w
  4625  0249  04AF               	iorwf	(sprintf@flag),f
  4626                           	line	1258
  4627                           	
  4628  024A                     i1l10466:	
  4629  024A  09B1               	comf	(sprintf@_val),f
  4630  024B  09B2               	comf	(sprintf@_val+1),f
  4631  024C  0AB1               	incf	(sprintf@_val),f
  4632  024D  1903               	skipnz
  4633  024E  0AB2               	incf	(sprintf@_val+1),f
  4634  024F  2A50               	goto	i1l10468
  4635                           	line	1259
  4636                           	
  4637  0250                     i1l6700:	
  4638                           	line	1300
  4639                           	
  4640  0250                     i1l10468:	
  4641  0250  01B6               	clrf	(sprintf@c)
  4642  0251  1403               	bsf	status,0
  4643  0252  0DB6               	rlf	(sprintf@c),f
  4644                           	
  4645  0253                     i1l10470:	
  4646  0253  0836               	movf	(sprintf@c),w
  4647  0254  3A05               	xorlw	05h
  4648  0255  1D03               	skipz
  4649  0256  2A58               	goto	u392_21
  4650  0257  2A59               	goto	u392_20
  4651  0258                     u392_21:
  4652  0258  2A5B               	goto	i1l10474
  4653  0259                     u392_20:
  4654  0259  2A83               	goto	i1l10482
  4655                           	
  4656  025A                     i1l10472:	
  4657  025A  2A83               	goto	i1l10482
  4658                           	line	1301
  4659                           	
  4660  025B                     i1l6701:	
  4661                           	
  4662  025B                     i1l10474:	
  4663  025B  0836               	movf	(sprintf@c),w
  4664  025C  00AB               	movwf	(??_sprintf+0)+0
  4665  025D  072B               	addwf	(??_sprintf+0)+0,w
  4666  025E  3E01               	addlw	low((_dpowers-__stringbase))
  4667  025F  0084               	movwf	fsr0
  4668  0260  120A  118A  260A   	fcall	stringdir
              120A  118A         
  4669  0265  00AC               	movwf	(??_sprintf+1)+0
  4670  0266  120A  118A  260A   	fcall	stringdir
              120A  118A         
  4671  026B  00AD               	movwf	(??_sprintf+1)+0+1
  4672  026C  082D               	movf	1+(??_sprintf+1)+0,w
  4673  026D  0232               	subwf	(sprintf@_val+1),w
  4674  026E  1D03               	skipz
  4675  026F  2A72               	goto	u393_25
  4676  0270  082C               	movf	0+(??_sprintf+1)+0,w
  4677  0271  0231               	subwf	(sprintf@_val),w
  4678  0272                     u393_25:
  4679  0272  1803               	skipnc
  4680  0273  2A75               	goto	u393_21
  4681  0274  2A76               	goto	u393_20
  4682  0275                     u393_21:
  4683  0275  2A78               	goto	i1l10478
  4684  0276                     u393_20:
  4685  0276  2A83               	goto	i1l10482
  4686                           	line	1302
  4687                           	
  4688  0277                     i1l10476:	
  4689  0277  2A83               	goto	i1l10482
  4690                           	
  4691  0278                     i1l6703:	
  4692                           	line	1300
  4693                           	
  4694  0278                     i1l10478:	
  4695  0278  3001               	movlw	(01h)
  4696  0279  00AB               	movwf	(??_sprintf+0)+0
  4697  027A  082B               	movf	(??_sprintf+0)+0,w
  4698  027B  07B6               	addwf	(sprintf@c),f
  4699                           	
  4700  027C                     i1l10480:	
  4701  027C  0836               	movf	(sprintf@c),w
  4702  027D  3A05               	xorlw	05h
  4703  027E  1D03               	skipz
  4704  027F  2A81               	goto	u394_21
  4705  0280  2A82               	goto	u394_20
  4706  0281                     u394_21:
  4707  0281  2A5B               	goto	i1l10474
  4708  0282                     u394_20:
  4709  0282  2A83               	goto	i1l10482
  4710                           	
  4711  0283                     i1l6702:	
  4712                           	line	1433
  4713                           	
  4714  0283                     i1l10482:	
  4715  0283  082F               	movf	(sprintf@flag),w
  4716  0284  3903               	andlw	03h
  4717  0285  1903               	btfsc	status,2
  4718  0286  2A88               	goto	u395_21
  4719  0287  2A89               	goto	u395_20
  4720  0288                     u395_21:
  4721  0288  2A95               	goto	i1l10488
  4722  0289                     u395_20:
  4723                           	line	1434
  4724                           	
  4725  0289                     i1l10484:	
  4726  0289  302D               	movlw	(02Dh)
  4727  028A  00AB               	movwf	(??_sprintf+0)+0
  4728  028B  0835               	movf	(sprintf@sp),w
  4729  028C  0084               	movwf	fsr0
  4730  028D  082B               	movf	(??_sprintf+0)+0,w
  4731  028E  1383               	bcf	status, 7	;select IRP bank0
  4732  028F  0080               	movwf	indf
  4733                           	
  4734  0290                     i1l10486:	
  4735  0290  3001               	movlw	(01h)
  4736  0291  00AB               	movwf	(??_sprintf+0)+0
  4737  0292  082B               	movf	(??_sprintf+0)+0,w
  4738  0293  07B5               	addwf	(sprintf@sp),f
  4739  0294  2A95               	goto	i1l10488
  4740                           	
  4741  0295                     i1l6704:	
  4742                           	line	1467
  4743                           	
  4744  0295                     i1l10488:	
  4745  0295  0836               	movf	(sprintf@c),w
  4746  0296  00AB               	movwf	(??_sprintf+0)+0
  4747  0297  082B               	movf	(??_sprintf+0)+0,w
  4748  0298  00B0               	movwf	(sprintf@prec)
  4749                           	line	1469
  4750  0299  2ADA               	goto	i1l10496
  4751                           	
  4752  029A                     i1l6706:	
  4753                           	line	1484
  4754                           	
  4755  029A                     i1l10490:	
  4756  029A  300A               	movlw	low(0Ah)
  4757  029B  00A0               	movwf	(?___lwmod)
  4758  029C  3000               	movlw	high(0Ah)
  4759  029D  00A1               	movwf	((?___lwmod))+1
  4760  029E  0830               	movf	(sprintf@prec),w
  4761  029F  00AB               	movwf	(??_sprintf+0)+0
  4762  02A0  072B               	addwf	(??_sprintf+0)+0,w
  4763  02A1  3E01               	addlw	low((_dpowers-__stringbase))
  4764  02A2  0084               	movwf	fsr0
  4765  02A3  120A  118A  260A   	fcall	stringdir
              120A  118A         
  4766  02A8  00F6               	movwf	(?___lwdiv)
  4767  02A9  120A  118A  260A   	fcall	stringdir
              120A  118A         
  4768  02AE  00F7               	movwf	(?___lwdiv+1)
  4769  02AF  0832               	movf	(sprintf@_val+1),w
  4770  02B0  01F9               	clrf	1+(?___lwdiv)+02h
  4771  02B1  07F9               	addwf	1+(?___lwdiv)+02h
  4772  02B2  0831               	movf	(sprintf@_val),w
  4773  02B3  01F8               	clrf	0+(?___lwdiv)+02h
  4774  02B4  07F8               	addwf	0+(?___lwdiv)+02h
  4775                           
  4776  02B5  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  4777  02BA  0877               	movf	(1+(?___lwdiv)),w
  4778  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4779  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  4780  02BD  01A3               	clrf	1+(?___lwmod)+02h
  4781  02BE  07A3               	addwf	1+(?___lwmod)+02h
  4782  02BF  0876               	movf	(0+(?___lwdiv)),w
  4783  02C0  01A2               	clrf	0+(?___lwmod)+02h
  4784  02C1  07A2               	addwf	0+(?___lwmod)+02h
  4785                           
  4786  02C2  120A  158A  2773   	fcall	___lwmod
              120A  118A         
  4787  02C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4788  02C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4789  02C9  0820               	movf	(0+(?___lwmod)),w
  4790  02CA  3E30               	addlw	030h
  4791  02CB  00AC               	movwf	(??_sprintf+1)+0
  4792  02CC  082C               	movf	(??_sprintf+1)+0,w
  4793  02CD  00B6               	movwf	(sprintf@c)
  4794                           	line	1516
  4795                           	
  4796  02CE                     i1l10492:	
  4797  02CE  0836               	movf	(sprintf@c),w
  4798  02CF  00AB               	movwf	(??_sprintf+0)+0
  4799  02D0  0835               	movf	(sprintf@sp),w
  4800  02D1  0084               	movwf	fsr0
  4801  02D2  082B               	movf	(??_sprintf+0)+0,w
  4802  02D3  1383               	bcf	status, 7	;select IRP bank0
  4803  02D4  0080               	movwf	indf
  4804                           	
  4805  02D5                     i1l10494:	
  4806  02D5  3001               	movlw	(01h)
  4807  02D6  00AB               	movwf	(??_sprintf+0)+0
  4808  02D7  082B               	movf	(??_sprintf+0)+0,w
  4809  02D8  07B5               	addwf	(sprintf@sp),f
  4810  02D9  2ADA               	goto	i1l10496
  4811                           	line	1517
  4812                           	
  4813  02DA                     i1l6705:	
  4814                           	line	1469
  4815                           	
  4816  02DA                     i1l10496:	
  4817  02DA  30FF               	movlw	(-1)
  4818  02DB  00AB               	movwf	(??_sprintf+0)+0
  4819  02DC  082B               	movf	(??_sprintf+0)+0,w
  4820  02DD  07B0               	addwf	(sprintf@prec),f
  4821  02DE  0830               	movf	((sprintf@prec)),w
  4822  02DF  3AFF               	xorlw	-1
  4823  02E0  1D03               	skipz
  4824  02E1  2AE3               	goto	u396_21
  4825  02E2  2AE4               	goto	u396_20
  4826  02E3                     u396_21:
  4827  02E3  2A9A               	goto	i1l10490
  4828  02E4                     u396_20:
  4829  02E4  2AE6               	goto	i1l10498
  4830                           	
  4831  02E5                     i1l6707:	
  4832  02E5  2AE6               	goto	i1l10498
  4833                           	line	1525
  4834                           	
  4835  02E6                     i1l6690:	
  4836                           	line	540
  4837                           	
  4838  02E6                     i1l10498:	
  4839  02E6  3001               	movlw	01h
  4840  02E7  07A6               	addwf	(sprintf@f),f
  4841  02E8  30FF               	movlw	-01h
  4842  02E9  0726               	addwf	(sprintf@f),w
  4843  02EA  0084               	movwf	fsr0
  4844  02EB  120A  118A  260A   	fcall	stringdir
              120A  118A         
  4845  02F0  00AB               	movwf	(??_sprintf+0)+0
  4846  02F1  082B               	movf	(??_sprintf+0)+0,w
  4847  02F2  00B6               	movwf	(sprintf@c)
  4848  02F3  08B6               	movf	((sprintf@c)),f
  4849  02F4  1D03               	skipz
  4850  02F5  2AF7               	goto	u397_21
  4851  02F6  2AF8               	goto	u397_20
  4852  02F7                     u397_21:
  4853  02F7  2A08               	goto	i1l10448
  4854  02F8                     u397_20:
  4855  02F8  2AFA               	goto	i1l10500
  4856                           	
  4857  02F9                     i1l6708:	
  4858  02F9  2AFA               	goto	i1l10500
  4859                           	line	1527
  4860                           	
  4861  02FA                     i1l6695:	
  4862                           	line	1530
  4863                           	
  4864  02FA                     i1l10500:	
  4865  02FA  0835               	movf	(sprintf@sp),w
  4866  02FB  0084               	movwf	fsr0
  4867  02FC  1383               	bcf	status, 7	;select IRP bank0
  4868  02FD  0180               	clrf	indf
  4869  02FE  2AFF               	goto	i1l6709
  4870                           	line	1532
  4871                           	
  4872  02FF                     i1l10502:	
  4873                           	line	1533
  4874                           ;	Return value of _sprintf is never used
  4875                           	
  4876  02FF                     i1l6709:	
  4877  02FF  0008               	return
  4878                           	opt stack 0
  4879                           GLOBAL	__end_of_sprintf
  4880  0300                     	__end_of_sprintf:
  4881 ;; =============== function _sprintf ends ============
  4882                           
  4883                           	signat	_sprintf,4698
  4884                           	global	_ADCconvert
  4885                           psect	text732,local,class=CODE,delta=2
  4886                           global __ptext732
  4887  0015                     __ptext732:
  4888                           
  4889 ;; *************** function _ADCconvert *****************
  4890 ;; Defined at:
  4891 ;;		line 33 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;		None               void
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0, pclath, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4905 ;;      Params:         0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0
  4907 ;;      Temps:          0       2       0       0       0
  4908 ;;      Totals:         0       2       0       0       0
  4909 ;;Total ram usage:        2 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    1
  4912 ;; This function calls:
  4913 ;;		___wmul
  4914 ;;		___lwdiv
  4915 ;; This function is called by:
  4916 ;;		_readAvgDistance
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           psect	text732
  4920                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4921                           	line	33
  4922                           	global	__size_of_ADCconvert
  4923  01EB                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4924                           	
  4925  0015                     _ADCconvert:	
  4926                           	opt	stack 1
  4927                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4928                           	line	39
  4929                           	
  4930  0015                     i1l10224:	
  4931                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4932  0015  3000               	movlw	high(0D5h)
  4933  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4934  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4935  0018  0254               	subwf	(_adcVal+1),w	;volatile
  4936  0019  30D5               	movlw	low(0D5h)
  4937  001A  1903               	skipnz
  4938  001B  0253               	subwf	(_adcVal),w	;volatile
  4939  001C  1C03               	skipc
  4940  001D  281F               	goto	u348_21
  4941  001E  2820               	goto	u348_20
  4942  001F                     u348_21:
  4943  001F  285B               	goto	i1l10230
  4944  0020                     u348_20:
  4945                           	
  4946  0020                     i1l10226:	
  4947  0020  3000               	movlw	high(0EAh)
  4948  0021  0254               	subwf	(_adcVal+1),w	;volatile
  4949  0022  30EA               	movlw	low(0EAh)
  4950  0023  1903               	skipnz
  4951  0024  0253               	subwf	(_adcVal),w	;volatile
  4952  0025  1803               	skipnc
  4953  0026  2828               	goto	u349_21
  4954  0027  2829               	goto	u349_20
  4955  0028                     u349_21:
  4956  0028  285B               	goto	i1l10230
  4957  0029                     u349_20:
  4958                           	line	41
  4959                           	
  4960  0029                     i1l10228:	
  4961                           ;infrared.c: 40: {
  4962                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4963  0029  3015               	movlw	low(015h)
  4964  002A  00F6               	movwf	(?___lwdiv)
  4965  002B  3000               	movlw	high(015h)
  4966  002C  00F7               	movwf	((?___lwdiv))+1
  4967  002D  0953               	comf	(_adcVal),w	;volatile
  4968  002E  00A0               	movwf	(??_ADCconvert+0)+0
  4969  002F  0954               	comf	(_adcVal+1),w	;volatile
  4970  0030  00A1               	movwf	((??_ADCconvert+0)+0+1)
  4971  0031  0AA0               	incf	(??_ADCconvert+0)+0,f
  4972  0032  1903               	skipnz
  4973  0033  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  4974  0034  0820               	movf	0+(??_ADCconvert+0)+0,w
  4975  0035  3EEA               	addlw	low(0EAh)
  4976  0036  00F0               	movwf	(?___wmul)
  4977  0037  0821               	movf	1+(??_ADCconvert+0)+0,w
  4978  0038  1803               	skipnc
  4979  0039  3E01               	addlw	1
  4980  003A  3E00               	addlw	high(0EAh)
  4981  003B  00F1               	movwf	1+(?___wmul)
  4982  003C  3005               	movlw	low(05h)
  4983  003D  00F2               	movwf	0+(?___wmul)+02h
  4984  003E  3000               	movlw	high(05h)
  4985  003F  00F3               	movwf	(0+(?___wmul)+02h)+1
  4986  0040  120A  158A  266A   	fcall	___wmul
              120A  118A         
  4987  0045  0871               	movf	(1+(?___wmul)),w
  4988  0046  01F9               	clrf	1+(?___lwdiv)+02h
  4989  0047  07F9               	addwf	1+(?___lwdiv)+02h
  4990  0048  0870               	movf	(0+(?___wmul)),w
  4991  0049  01F8               	clrf	0+(?___lwdiv)+02h
  4992  004A  07F8               	addwf	0+(?___lwdiv)+02h
  4993                           
  4994  004B  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  4995  0050  0876               	movf	(0+(?___lwdiv)),w
  4996  0051  3E0F               	addlw	low(0Fh)
  4997  0052  1683               	bsf	status, 5	;RP0=1, select bank1
  4998  0053  1303               	bcf	status, 6	;RP1=0, select bank1
  4999  0054  00D2               	movwf	(_distance)^080h	;volatile
  5000  0055  0877               	movf	(1+(?___lwdiv)),w
  5001  0056  1803               	skipnc
  5002  0057  3E01               	addlw	1
  5003  0058  3E00               	addlw	high(0Fh)
  5004  0059  00D3               	movwf	1+(_distance)^080h	;volatile
  5005                           	line	42
  5006                           ;infrared.c: 42: }
  5007  005A  29FF               	goto	i1l2961
  5008                           	line	43
  5009                           	
  5010  005B                     i1l2948:	
  5011                           	
  5012  005B                     i1l10230:	
  5013                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  5014  005B  3000               	movlw	high(0AAh)
  5015  005C  1283               	bcf	status, 5	;RP0=0, select bank0
  5016  005D  0254               	subwf	(_adcVal+1),w	;volatile
  5017  005E  30AA               	movlw	low(0AAh)
  5018  005F  1903               	skipnz
  5019  0060  0253               	subwf	(_adcVal),w	;volatile
  5020  0061  1C03               	skipc
  5021  0062  2864               	goto	u350_21
  5022  0063  2865               	goto	u350_20
  5023  0064                     u350_21:
  5024  0064  28A0               	goto	i1l10236
  5025  0065                     u350_20:
  5026                           	
  5027  0065                     i1l10232:	
  5028  0065  3000               	movlw	high(0D5h)
  5029  0066  0254               	subwf	(_adcVal+1),w	;volatile
  5030  0067  30D5               	movlw	low(0D5h)
  5031  0068  1903               	skipnz
  5032  0069  0253               	subwf	(_adcVal),w	;volatile
  5033  006A  1803               	skipnc
  5034  006B  286D               	goto	u351_21
  5035  006C  286E               	goto	u351_20
  5036  006D                     u351_21:
  5037  006D  28A0               	goto	i1l10236
  5038  006E                     u351_20:
  5039                           	line	45
  5040                           	
  5041  006E                     i1l10234:	
  5042                           ;infrared.c: 44: {
  5043                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  5044  006E  302B               	movlw	low(02Bh)
  5045  006F  00F6               	movwf	(?___lwdiv)
  5046  0070  3000               	movlw	high(02Bh)
  5047  0071  00F7               	movwf	((?___lwdiv))+1
  5048  0072  0953               	comf	(_adcVal),w	;volatile
  5049  0073  00A0               	movwf	(??_ADCconvert+0)+0
  5050  0074  0954               	comf	(_adcVal+1),w	;volatile
  5051  0075  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5052  0076  0AA0               	incf	(??_ADCconvert+0)+0,f
  5053  0077  1903               	skipnz
  5054  0078  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5055  0079  0820               	movf	0+(??_ADCconvert+0)+0,w
  5056  007A  3ED5               	addlw	low(0D5h)
  5057  007B  00F0               	movwf	(?___wmul)
  5058  007C  0821               	movf	1+(??_ADCconvert+0)+0,w
  5059  007D  1803               	skipnc
  5060  007E  3E01               	addlw	1
  5061  007F  3E00               	addlw	high(0D5h)
  5062  0080  00F1               	movwf	1+(?___wmul)
  5063  0081  300A               	movlw	low(0Ah)
  5064  0082  00F2               	movwf	0+(?___wmul)+02h
  5065  0083  3000               	movlw	high(0Ah)
  5066  0084  00F3               	movwf	(0+(?___wmul)+02h)+1
  5067  0085  120A  158A  266A   	fcall	___wmul
              120A  118A         
  5068  008A  0871               	movf	(1+(?___wmul)),w
  5069  008B  01F9               	clrf	1+(?___lwdiv)+02h
  5070  008C  07F9               	addwf	1+(?___lwdiv)+02h
  5071  008D  0870               	movf	(0+(?___wmul)),w
  5072  008E  01F8               	clrf	0+(?___lwdiv)+02h
  5073  008F  07F8               	addwf	0+(?___lwdiv)+02h
  5074                           
  5075  0090  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  5076  0095  0876               	movf	(0+(?___lwdiv)),w
  5077  0096  3E14               	addlw	low(014h)
  5078  0097  1683               	bsf	status, 5	;RP0=1, select bank1
  5079  0098  1303               	bcf	status, 6	;RP1=0, select bank1
  5080  0099  00D2               	movwf	(_distance)^080h	;volatile
  5081  009A  0877               	movf	(1+(?___lwdiv)),w
  5082  009B  1803               	skipnc
  5083  009C  3E01               	addlw	1
  5084  009D  3E00               	addlw	high(014h)
  5085  009E  00D3               	movwf	1+(_distance)^080h	;volatile
  5086                           	line	46
  5087                           ;infrared.c: 46: }
  5088  009F  29FF               	goto	i1l2961
  5089                           	line	47
  5090                           	
  5091  00A0                     i1l2950:	
  5092                           	
  5093  00A0                     i1l10236:	
  5094                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  5095  00A0  3000               	movlw	high(080h)
  5096  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5097  00A2  0254               	subwf	(_adcVal+1),w	;volatile
  5098  00A3  3080               	movlw	low(080h)
  5099  00A4  1903               	skipnz
  5100  00A5  0253               	subwf	(_adcVal),w	;volatile
  5101  00A6  1C03               	skipc
  5102  00A7  28A9               	goto	u352_21
  5103  00A8  28AA               	goto	u352_20
  5104  00A9                     u352_21:
  5105  00A9  28E5               	goto	i1l10242
  5106  00AA                     u352_20:
  5107                           	
  5108  00AA                     i1l10238:	
  5109  00AA  3000               	movlw	high(0AAh)
  5110  00AB  0254               	subwf	(_adcVal+1),w	;volatile
  5111  00AC  30AA               	movlw	low(0AAh)
  5112  00AD  1903               	skipnz
  5113  00AE  0253               	subwf	(_adcVal),w	;volatile
  5114  00AF  1803               	skipnc
  5115  00B0  28B2               	goto	u353_21
  5116  00B1  28B3               	goto	u353_20
  5117  00B2                     u353_21:
  5118  00B2  28E5               	goto	i1l10242
  5119  00B3                     u353_20:
  5120                           	line	49
  5121                           	
  5122  00B3                     i1l10240:	
  5123                           ;infrared.c: 48: {
  5124                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  5125  00B3  302A               	movlw	low(02Ah)
  5126  00B4  00F6               	movwf	(?___lwdiv)
  5127  00B5  3000               	movlw	high(02Ah)
  5128  00B6  00F7               	movwf	((?___lwdiv))+1
  5129  00B7  0953               	comf	(_adcVal),w	;volatile
  5130  00B8  00A0               	movwf	(??_ADCconvert+0)+0
  5131  00B9  0954               	comf	(_adcVal+1),w	;volatile
  5132  00BA  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5133  00BB  0AA0               	incf	(??_ADCconvert+0)+0,f
  5134  00BC  1903               	skipnz
  5135  00BD  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5136  00BE  0820               	movf	0+(??_ADCconvert+0)+0,w
  5137  00BF  3EAA               	addlw	low(0AAh)
  5138  00C0  00F0               	movwf	(?___wmul)
  5139  00C1  0821               	movf	1+(??_ADCconvert+0)+0,w
  5140  00C2  1803               	skipnc
  5141  00C3  3E01               	addlw	1
  5142  00C4  3E00               	addlw	high(0AAh)
  5143  00C5  00F1               	movwf	1+(?___wmul)
  5144  00C6  300A               	movlw	low(0Ah)
  5145  00C7  00F2               	movwf	0+(?___wmul)+02h
  5146  00C8  3000               	movlw	high(0Ah)
  5147  00C9  00F3               	movwf	(0+(?___wmul)+02h)+1
  5148  00CA  120A  158A  266A   	fcall	___wmul
              120A  118A         
  5149  00CF  0871               	movf	(1+(?___wmul)),w
  5150  00D0  01F9               	clrf	1+(?___lwdiv)+02h
  5151  00D1  07F9               	addwf	1+(?___lwdiv)+02h
  5152  00D2  0870               	movf	(0+(?___wmul)),w
  5153  00D3  01F8               	clrf	0+(?___lwdiv)+02h
  5154  00D4  07F8               	addwf	0+(?___lwdiv)+02h
  5155                           
  5156  00D5  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  5157  00DA  0876               	movf	(0+(?___lwdiv)),w
  5158  00DB  3E1E               	addlw	low(01Eh)
  5159  00DC  1683               	bsf	status, 5	;RP0=1, select bank1
  5160  00DD  1303               	bcf	status, 6	;RP1=0, select bank1
  5161  00DE  00D2               	movwf	(_distance)^080h	;volatile
  5162  00DF  0877               	movf	(1+(?___lwdiv)),w
  5163  00E0  1803               	skipnc
  5164  00E1  3E01               	addlw	1
  5165  00E2  3E00               	addlw	high(01Eh)
  5166  00E3  00D3               	movwf	1+(_distance)^080h	;volatile
  5167                           	line	50
  5168                           ;infrared.c: 50: }
  5169  00E4  29FF               	goto	i1l2961
  5170                           	line	51
  5171                           	
  5172  00E5                     i1l2952:	
  5173                           	
  5174  00E5                     i1l10242:	
  5175                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  5176  00E5  3000               	movlw	high(06Bh)
  5177  00E6  1283               	bcf	status, 5	;RP0=0, select bank0
  5178  00E7  0254               	subwf	(_adcVal+1),w	;volatile
  5179  00E8  306B               	movlw	low(06Bh)
  5180  00E9  1903               	skipnz
  5181  00EA  0253               	subwf	(_adcVal),w	;volatile
  5182  00EB  1C03               	skipc
  5183  00EC  28EE               	goto	u354_21
  5184  00ED  28EF               	goto	u354_20
  5185  00EE                     u354_21:
  5186  00EE  292A               	goto	i1l10248
  5187  00EF                     u354_20:
  5188                           	
  5189  00EF                     i1l10244:	
  5190  00EF  3000               	movlw	high(080h)
  5191  00F0  0254               	subwf	(_adcVal+1),w	;volatile
  5192  00F1  3080               	movlw	low(080h)
  5193  00F2  1903               	skipnz
  5194  00F3  0253               	subwf	(_adcVal),w	;volatile
  5195  00F4  1803               	skipnc
  5196  00F5  28F7               	goto	u355_21
  5197  00F6  28F8               	goto	u355_20
  5198  00F7                     u355_21:
  5199  00F7  292A               	goto	i1l10248
  5200  00F8                     u355_20:
  5201                           	line	53
  5202                           	
  5203  00F8                     i1l10246:	
  5204                           ;infrared.c: 52: {
  5205                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  5206  00F8  3015               	movlw	low(015h)
  5207  00F9  00F6               	movwf	(?___lwdiv)
  5208  00FA  3000               	movlw	high(015h)
  5209  00FB  00F7               	movwf	((?___lwdiv))+1
  5210  00FC  0953               	comf	(_adcVal),w	;volatile
  5211  00FD  00A0               	movwf	(??_ADCconvert+0)+0
  5212  00FE  0954               	comf	(_adcVal+1),w	;volatile
  5213  00FF  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5214  0100  0AA0               	incf	(??_ADCconvert+0)+0,f
  5215  0101  1903               	skipnz
  5216  0102  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5217  0103  0820               	movf	0+(??_ADCconvert+0)+0,w
  5218  0104  3E80               	addlw	low(080h)
  5219  0105  00F0               	movwf	(?___wmul)
  5220  0106  0821               	movf	1+(??_ADCconvert+0)+0,w
  5221  0107  1803               	skipnc
  5222  0108  3E01               	addlw	1
  5223  0109  3E00               	addlw	high(080h)
  5224  010A  00F1               	movwf	1+(?___wmul)
  5225  010B  300A               	movlw	low(0Ah)
  5226  010C  00F2               	movwf	0+(?___wmul)+02h
  5227  010D  3000               	movlw	high(0Ah)
  5228  010E  00F3               	movwf	(0+(?___wmul)+02h)+1
  5229  010F  120A  158A  266A   	fcall	___wmul
              120A  118A         
  5230  0114  0871               	movf	(1+(?___wmul)),w
  5231  0115  01F9               	clrf	1+(?___lwdiv)+02h
  5232  0116  07F9               	addwf	1+(?___lwdiv)+02h
  5233  0117  0870               	movf	(0+(?___wmul)),w
  5234  0118  01F8               	clrf	0+(?___lwdiv)+02h
  5235  0119  07F8               	addwf	0+(?___lwdiv)+02h
  5236                           
  5237  011A  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  5238  011F  0876               	movf	(0+(?___lwdiv)),w
  5239  0120  3E28               	addlw	low(028h)
  5240  0121  1683               	bsf	status, 5	;RP0=1, select bank1
  5241  0122  1303               	bcf	status, 6	;RP1=0, select bank1
  5242  0123  00D2               	movwf	(_distance)^080h	;volatile
  5243  0124  0877               	movf	(1+(?___lwdiv)),w
  5244  0125  1803               	skipnc
  5245  0126  3E01               	addlw	1
  5246  0127  3E00               	addlw	high(028h)
  5247  0128  00D3               	movwf	1+(_distance)^080h	;volatile
  5248                           	line	54
  5249                           ;infrared.c: 54: }
  5250  0129  29FF               	goto	i1l2961
  5251                           	line	55
  5252                           	
  5253  012A                     i1l2954:	
  5254                           	
  5255  012A                     i1l10248:	
  5256                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  5257  012A  3000               	movlw	high(04Dh)
  5258  012B  1283               	bcf	status, 5	;RP0=0, select bank0
  5259  012C  0254               	subwf	(_adcVal+1),w	;volatile
  5260  012D  304D               	movlw	low(04Dh)
  5261  012E  1903               	skipnz
  5262  012F  0253               	subwf	(_adcVal),w	;volatile
  5263  0130  1C03               	skipc
  5264  0131  2933               	goto	u356_21
  5265  0132  2934               	goto	u356_20
  5266  0133                     u356_21:
  5267  0133  296F               	goto	i1l10254
  5268  0134                     u356_20:
  5269                           	
  5270  0134                     i1l10250:	
  5271  0134  3000               	movlw	high(06Bh)
  5272  0135  0254               	subwf	(_adcVal+1),w	;volatile
  5273  0136  306B               	movlw	low(06Bh)
  5274  0137  1903               	skipnz
  5275  0138  0253               	subwf	(_adcVal),w	;volatile
  5276  0139  1803               	skipnc
  5277  013A  293C               	goto	u357_21
  5278  013B  293D               	goto	u357_20
  5279  013C                     u357_21:
  5280  013C  296F               	goto	i1l10254
  5281  013D                     u357_20:
  5282                           	line	57
  5283                           	
  5284  013D                     i1l10252:	
  5285                           ;infrared.c: 56: {
  5286                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  5287  013D  301E               	movlw	low(01Eh)
  5288  013E  00F6               	movwf	(?___lwdiv)
  5289  013F  3000               	movlw	high(01Eh)
  5290  0140  00F7               	movwf	((?___lwdiv))+1
  5291  0141  0953               	comf	(_adcVal),w	;volatile
  5292  0142  00A0               	movwf	(??_ADCconvert+0)+0
  5293  0143  0954               	comf	(_adcVal+1),w	;volatile
  5294  0144  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5295  0145  0AA0               	incf	(??_ADCconvert+0)+0,f
  5296  0146  1903               	skipnz
  5297  0147  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5298  0148  0820               	movf	0+(??_ADCconvert+0)+0,w
  5299  0149  3E6B               	addlw	low(06Bh)
  5300  014A  00F0               	movwf	(?___wmul)
  5301  014B  0821               	movf	1+(??_ADCconvert+0)+0,w
  5302  014C  1803               	skipnc
  5303  014D  3E01               	addlw	1
  5304  014E  3E00               	addlw	high(06Bh)
  5305  014F  00F1               	movwf	1+(?___wmul)
  5306  0150  300A               	movlw	low(0Ah)
  5307  0151  00F2               	movwf	0+(?___wmul)+02h
  5308  0152  3000               	movlw	high(0Ah)
  5309  0153  00F3               	movwf	(0+(?___wmul)+02h)+1
  5310  0154  120A  158A  266A   	fcall	___wmul
              120A  118A         
  5311  0159  0871               	movf	(1+(?___wmul)),w
  5312  015A  01F9               	clrf	1+(?___lwdiv)+02h
  5313  015B  07F9               	addwf	1+(?___lwdiv)+02h
  5314  015C  0870               	movf	(0+(?___wmul)),w
  5315  015D  01F8               	clrf	0+(?___lwdiv)+02h
  5316  015E  07F8               	addwf	0+(?___lwdiv)+02h
  5317                           
  5318  015F  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  5319  0164  0876               	movf	(0+(?___lwdiv)),w
  5320  0165  3E32               	addlw	low(032h)
  5321  0166  1683               	bsf	status, 5	;RP0=1, select bank1
  5322  0167  1303               	bcf	status, 6	;RP1=0, select bank1
  5323  0168  00D2               	movwf	(_distance)^080h	;volatile
  5324  0169  0877               	movf	(1+(?___lwdiv)),w
  5325  016A  1803               	skipnc
  5326  016B  3E01               	addlw	1
  5327  016C  3E00               	addlw	high(032h)
  5328  016D  00D3               	movwf	1+(_distance)^080h	;volatile
  5329                           	line	58
  5330                           ;infrared.c: 58: }
  5331  016E  29FF               	goto	i1l2961
  5332                           	line	59
  5333                           	
  5334  016F                     i1l2956:	
  5335                           	
  5336  016F                     i1l10254:	
  5337                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  5338  016F  3000               	movlw	high(038h)
  5339  0170  1283               	bcf	status, 5	;RP0=0, select bank0
  5340  0171  0254               	subwf	(_adcVal+1),w	;volatile
  5341  0172  3038               	movlw	low(038h)
  5342  0173  1903               	skipnz
  5343  0174  0253               	subwf	(_adcVal),w	;volatile
  5344  0175  1C03               	skipc
  5345  0176  2978               	goto	u358_21
  5346  0177  2979               	goto	u358_20
  5347  0178                     u358_21:
  5348  0178  29B4               	goto	i1l10260
  5349  0179                     u358_20:
  5350                           	
  5351  0179                     i1l10256:	
  5352  0179  3000               	movlw	high(04Dh)
  5353  017A  0254               	subwf	(_adcVal+1),w	;volatile
  5354  017B  304D               	movlw	low(04Dh)
  5355  017C  1903               	skipnz
  5356  017D  0253               	subwf	(_adcVal),w	;volatile
  5357  017E  1803               	skipnc
  5358  017F  2981               	goto	u359_21
  5359  0180  2982               	goto	u359_20
  5360  0181                     u359_21:
  5361  0181  29B4               	goto	i1l10260
  5362  0182                     u359_20:
  5363                           	line	61
  5364                           	
  5365  0182                     i1l10258:	
  5366                           ;infrared.c: 60: {
  5367                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  5368  0182  3015               	movlw	low(015h)
  5369  0183  00F6               	movwf	(?___lwdiv)
  5370  0184  3000               	movlw	high(015h)
  5371  0185  00F7               	movwf	((?___lwdiv))+1
  5372  0186  0953               	comf	(_adcVal),w	;volatile
  5373  0187  00A0               	movwf	(??_ADCconvert+0)+0
  5374  0188  0954               	comf	(_adcVal+1),w	;volatile
  5375  0189  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5376  018A  0AA0               	incf	(??_ADCconvert+0)+0,f
  5377  018B  1903               	skipnz
  5378  018C  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5379  018D  0820               	movf	0+(??_ADCconvert+0)+0,w
  5380  018E  3E4D               	addlw	low(04Dh)
  5381  018F  00F0               	movwf	(?___wmul)
  5382  0190  0821               	movf	1+(??_ADCconvert+0)+0,w
  5383  0191  1803               	skipnc
  5384  0192  3E01               	addlw	1
  5385  0193  3E00               	addlw	high(04Dh)
  5386  0194  00F1               	movwf	1+(?___wmul)
  5387  0195  300A               	movlw	low(0Ah)
  5388  0196  00F2               	movwf	0+(?___wmul)+02h
  5389  0197  3000               	movlw	high(0Ah)
  5390  0198  00F3               	movwf	(0+(?___wmul)+02h)+1
  5391  0199  120A  158A  266A   	fcall	___wmul
              120A  118A         
  5392  019E  0871               	movf	(1+(?___wmul)),w
  5393  019F  01F9               	clrf	1+(?___lwdiv)+02h
  5394  01A0  07F9               	addwf	1+(?___lwdiv)+02h
  5395  01A1  0870               	movf	(0+(?___wmul)),w
  5396  01A2  01F8               	clrf	0+(?___lwdiv)+02h
  5397  01A3  07F8               	addwf	0+(?___lwdiv)+02h
  5398                           
  5399  01A4  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  5400  01A9  0876               	movf	(0+(?___lwdiv)),w
  5401  01AA  3E3C               	addlw	low(03Ch)
  5402  01AB  1683               	bsf	status, 5	;RP0=1, select bank1
  5403  01AC  1303               	bcf	status, 6	;RP1=0, select bank1
  5404  01AD  00D2               	movwf	(_distance)^080h	;volatile
  5405  01AE  0877               	movf	(1+(?___lwdiv)),w
  5406  01AF  1803               	skipnc
  5407  01B0  3E01               	addlw	1
  5408  01B1  3E00               	addlw	high(03Ch)
  5409  01B2  00D3               	movwf	1+(_distance)^080h	;volatile
  5410                           	line	62
  5411                           ;infrared.c: 62: }
  5412  01B3  29FF               	goto	i1l2961
  5413                           	line	63
  5414                           	
  5415  01B4                     i1l2958:	
  5416                           	
  5417  01B4                     i1l10260:	
  5418                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  5419  01B4  3000               	movlw	high(02Bh)
  5420  01B5  1283               	bcf	status, 5	;RP0=0, select bank0
  5421  01B6  0254               	subwf	(_adcVal+1),w	;volatile
  5422  01B7  302B               	movlw	low(02Bh)
  5423  01B8  1903               	skipnz
  5424  01B9  0253               	subwf	(_adcVal),w	;volatile
  5425  01BA  1C03               	skipc
  5426  01BB  29BD               	goto	u360_21
  5427  01BC  29BE               	goto	u360_20
  5428  01BD                     u360_21:
  5429  01BD  29FF               	goto	i1l2961
  5430  01BE                     u360_20:
  5431                           	
  5432  01BE                     i1l10262:	
  5433  01BE  3000               	movlw	high(038h)
  5434  01BF  0254               	subwf	(_adcVal+1),w	;volatile
  5435  01C0  3038               	movlw	low(038h)
  5436  01C1  1903               	skipnz
  5437  01C2  0253               	subwf	(_adcVal),w	;volatile
  5438  01C3  1803               	skipnc
  5439  01C4  29C6               	goto	u361_21
  5440  01C5  29C7               	goto	u361_20
  5441  01C6                     u361_21:
  5442  01C6  29FF               	goto	i1l2961
  5443  01C7                     u361_20:
  5444                           	line	65
  5445                           	
  5446  01C7                     i1l10264:	
  5447                           ;infrared.c: 64: {
  5448                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5449  01C7  300D               	movlw	low(0Dh)
  5450  01C8  00F6               	movwf	(?___lwdiv)
  5451  01C9  3000               	movlw	high(0Dh)
  5452  01CA  00F7               	movwf	((?___lwdiv))+1
  5453  01CB  0953               	comf	(_adcVal),w	;volatile
  5454  01CC  00A0               	movwf	(??_ADCconvert+0)+0
  5455  01CD  0954               	comf	(_adcVal+1),w	;volatile
  5456  01CE  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5457  01CF  0AA0               	incf	(??_ADCconvert+0)+0,f
  5458  01D0  1903               	skipnz
  5459  01D1  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5460  01D2  0820               	movf	0+(??_ADCconvert+0)+0,w
  5461  01D3  3E38               	addlw	low(038h)
  5462  01D4  00F0               	movwf	(?___wmul)
  5463  01D5  0821               	movf	1+(??_ADCconvert+0)+0,w
  5464  01D6  1803               	skipnc
  5465  01D7  3E01               	addlw	1
  5466  01D8  3E00               	addlw	high(038h)
  5467  01D9  00F1               	movwf	1+(?___wmul)
  5468  01DA  300A               	movlw	low(0Ah)
  5469  01DB  00F2               	movwf	0+(?___wmul)+02h
  5470  01DC  3000               	movlw	high(0Ah)
  5471  01DD  00F3               	movwf	(0+(?___wmul)+02h)+1
  5472  01DE  120A  158A  266A   	fcall	___wmul
              120A  118A         
  5473  01E3  0871               	movf	(1+(?___wmul)),w
  5474  01E4  01F9               	clrf	1+(?___lwdiv)+02h
  5475  01E5  07F9               	addwf	1+(?___lwdiv)+02h
  5476  01E6  0870               	movf	(0+(?___wmul)),w
  5477  01E7  01F8               	clrf	0+(?___lwdiv)+02h
  5478  01E8  07F8               	addwf	0+(?___lwdiv)+02h
  5479                           
  5480  01E9  120A  118A  2724   	fcall	___lwdiv
              120A  118A         
  5481  01EE  0876               	movf	(0+(?___lwdiv)),w
  5482  01EF  3E46               	addlw	low(046h)
  5483  01F0  1683               	bsf	status, 5	;RP0=1, select bank1
  5484  01F1  1303               	bcf	status, 6	;RP1=0, select bank1
  5485  01F2  00D2               	movwf	(_distance)^080h	;volatile
  5486  01F3  0877               	movf	(1+(?___lwdiv)),w
  5487  01F4  1803               	skipnc
  5488  01F5  3E01               	addlw	1
  5489  01F6  3E00               	addlw	high(046h)
  5490  01F7  00D3               	movwf	1+(_distance)^080h	;volatile
  5491  01F8  29FF               	goto	i1l2961
  5492                           	line	66
  5493                           	
  5494  01F9                     i1l2960:	
  5495  01F9  29FF               	goto	i1l2961
  5496                           	line	67
  5497                           	
  5498  01FA                     i1l2959:	
  5499  01FA  29FF               	goto	i1l2961
  5500                           	
  5501  01FB                     i1l2957:	
  5502  01FB  29FF               	goto	i1l2961
  5503                           	
  5504  01FC                     i1l2955:	
  5505  01FC  29FF               	goto	i1l2961
  5506                           	
  5507  01FD                     i1l2953:	
  5508  01FD  29FF               	goto	i1l2961
  5509                           	
  5510  01FE                     i1l2951:	
  5511  01FE  29FF               	goto	i1l2961
  5512                           	
  5513  01FF                     i1l2949:	
  5514                           	
  5515  01FF                     i1l2961:	
  5516  01FF  0008               	return
  5517                           	opt stack 0
  5518                           GLOBAL	__end_of_ADCconvert
  5519  0200                     	__end_of_ADCconvert:
  5520 ;; =============== function _ADCconvert ends ============
  5521                           
  5522                           	signat	_ADCconvert,88
  5523                           	global	_ReadButtons
  5524                           psect	text733,local,class=CODE,delta=2
  5525                           global __ptext733
  5526  0F41                     __ptext733:
  5527                           
  5528 ;; *************** function _ReadButtons *****************
  5529 ;; Defined at:
  5530 ;;		line 141 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      unsigned char 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5544 ;;      Params:         0       0       0       0       0
  5545 ;;      Locals:         0       0       0       0       0
  5546 ;;      Temps:          0       0       0       0       0
  5547 ;;      Totals:         0       0       0       0       0
  5548 ;;Total ram usage:        0 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		_Debounce
  5553 ;; This function is called by:
  5554 ;;		_isr1
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           psect	text733
  5558                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  5559                           	line	141
  5560                           	global	__size_of_ReadButtons
  5561  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  5562                           	
  5563  0F41                     _ReadButtons:	
  5564                           	opt	stack 2
  5565                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  5566                           	line	142
  5567                           	
  5568  0F41                     i1l10118:	
  5569                           ;HMI.c: 142: Debounce();
  5570  0F41  120A  118A  253F   	fcall	_Debounce
              120A  158A         
  5571                           	line	144
  5572                           	
  5573  0F46                     i1l10120:	
  5574                           ;HMI.c: 144: if(UpPressed)
  5575  0F46  1283               	bcf	status, 5	;RP0=0, select bank0
  5576  0F47  1303               	bcf	status, 6	;RP1=0, select bank0
  5577  0F48  1EEE               	btfss	(_UpPressed/8),(_UpPressed)&7
  5578  0F49  2F4B               	goto	u340_21
  5579  0F4A  2F4C               	goto	u340_20
  5580  0F4B                     u340_21:
  5581  0F4B  2F50               	goto	i1l5199
  5582  0F4C                     u340_20:
  5583                           	line	146
  5584                           	
  5585  0F4C                     i1l10122:	
  5586                           ;HMI.c: 145: {
  5587                           ;HMI.c: 146: UpPressed = 0;
  5588  0F4C  12EE               	bcf	(_UpPressed/8),(_UpPressed)&7
  5589                           	line	147
  5590                           	
  5591  0F4D                     i1l10124:	
  5592                           ;HMI.c: 147: return 1;
  5593  0F4D  3001               	movlw	(01h)
  5594  0F4E  2F72               	goto	i1l5200
  5595                           	
  5596  0F4F                     i1l10126:	
  5597  0F4F  2F72               	goto	i1l5200
  5598                           	line	149
  5599                           	
  5600  0F50                     i1l5199:	
  5601                           	line	151
  5602                           ;HMI.c: 149: }
  5603                           ;HMI.c: 151: if(DownPressed)
  5604  0F50  1D6D               	btfss	(_DownPressed/8),(_DownPressed)&7
  5605  0F51  2F53               	goto	u341_21
  5606  0F52  2F54               	goto	u341_20
  5607  0F53                     u341_21:
  5608  0F53  2F58               	goto	i1l5201
  5609  0F54                     u341_20:
  5610                           	line	153
  5611                           	
  5612  0F54                     i1l10128:	
  5613                           ;HMI.c: 152: {
  5614                           ;HMI.c: 153: DownPressed = 0;
  5615  0F54  116D               	bcf	(_DownPressed/8),(_DownPressed)&7
  5616                           	line	154
  5617                           	
  5618  0F55                     i1l10130:	
  5619                           ;HMI.c: 154: return 2;
  5620  0F55  3002               	movlw	(02h)
  5621  0F56  2F72               	goto	i1l5200
  5622                           	
  5623  0F57                     i1l10132:	
  5624  0F57  2F72               	goto	i1l5200
  5625                           	line	156
  5626                           	
  5627  0F58                     i1l5201:	
  5628                           	line	157
  5629                           ;HMI.c: 156: }
  5630                           ;HMI.c: 157: if(LeftPressed)
  5631  0F58  1E6D               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  5632  0F59  2F5B               	goto	u342_21
  5633  0F5A  2F5C               	goto	u342_20
  5634  0F5B                     u342_21:
  5635  0F5B  2F60               	goto	i1l5202
  5636  0F5C                     u342_20:
  5637                           	line	159
  5638                           	
  5639  0F5C                     i1l10134:	
  5640                           ;HMI.c: 158: {
  5641                           ;HMI.c: 159: LeftPressed = 0;
  5642  0F5C  126D               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  5643                           	line	160
  5644                           	
  5645  0F5D                     i1l10136:	
  5646                           ;HMI.c: 160: return 3;
  5647  0F5D  3003               	movlw	(03h)
  5648  0F5E  2F72               	goto	i1l5200
  5649                           	
  5650  0F5F                     i1l10138:	
  5651  0F5F  2F72               	goto	i1l5200
  5652                           	line	162
  5653                           	
  5654  0F60                     i1l5202:	
  5655                           	line	163
  5656                           ;HMI.c: 162: }
  5657                           ;HMI.c: 163: if(RightPressed)
  5658  0F60  1DEE               	btfss	(_RightPressed/8),(_RightPressed)&7
  5659  0F61  2F63               	goto	u343_21
  5660  0F62  2F64               	goto	u343_20
  5661  0F63                     u343_21:
  5662  0F63  2F68               	goto	i1l5203
  5663  0F64                     u343_20:
  5664                           	line	165
  5665                           	
  5666  0F64                     i1l10140:	
  5667                           ;HMI.c: 164: {
  5668                           ;HMI.c: 165: RightPressed = 0;
  5669  0F64  11EE               	bcf	(_RightPressed/8),(_RightPressed)&7
  5670                           	line	166
  5671                           	
  5672  0F65                     i1l10142:	
  5673                           ;HMI.c: 166: return 4;
  5674  0F65  3004               	movlw	(04h)
  5675  0F66  2F72               	goto	i1l5200
  5676                           	
  5677  0F67                     i1l10144:	
  5678  0F67  2F72               	goto	i1l5200
  5679                           	line	168
  5680                           	
  5681  0F68                     i1l5203:	
  5682                           	line	170
  5683                           ;HMI.c: 168: }
  5684                           ;HMI.c: 170: if(CenterPressed)
  5685  0F68  1C6D               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  5686  0F69  2F6B               	goto	u344_21
  5687  0F6A  2F6C               	goto	u344_20
  5688  0F6B                     u344_21:
  5689  0F6B  2F70               	goto	i1l10152
  5690  0F6C                     u344_20:
  5691                           	line	172
  5692                           	
  5693  0F6C                     i1l10146:	
  5694                           ;HMI.c: 171: {
  5695                           ;HMI.c: 172: CenterPressed = 0;
  5696  0F6C  106D               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  5697                           	line	173
  5698                           	
  5699  0F6D                     i1l10148:	
  5700                           ;HMI.c: 173: return 5;
  5701  0F6D  3005               	movlw	(05h)
  5702  0F6E  2F72               	goto	i1l5200
  5703                           	
  5704  0F6F                     i1l10150:	
  5705  0F6F  2F72               	goto	i1l5200
  5706                           	line	175
  5707                           	
  5708  0F70                     i1l5204:	
  5709                           	line	176
  5710                           	
  5711  0F70                     i1l10152:	
  5712                           ;HMI.c: 175: }
  5713                           ;HMI.c: 176: return 0;
  5714  0F70  3000               	movlw	(0)
  5715  0F71  2F72               	goto	i1l5200
  5716                           	
  5717  0F72                     i1l10154:	
  5718                           	line	177
  5719                           	
  5720  0F72                     i1l5200:	
  5721  0F72  0008               	return
  5722                           	opt stack 0
  5723                           GLOBAL	__end_of_ReadButtons
  5724  0F73                     	__end_of_ReadButtons:
  5725 ;; =============== function _ReadButtons ends ============
  5726                           
  5727                           	signat	_ReadButtons,89
  5728                           	global	_lcd_write_data
  5729                           psect	text734,local,class=CODE,delta=2
  5730                           global __ptext734
  5731  0D3D                     __ptext734:
  5732                           
  5733 ;; *************** function _lcd_write_data *****************
  5734 ;; Defined at:
  5735 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  databyte        1    wreg     unsigned char 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  databyte        1    2[COMMON] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;		None               void
  5742 ;; Registers used:
  5743 ;;		wreg
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5749 ;;      Params:         0       0       0       0       0
  5750 ;;      Locals:         1       0       0       0       0
  5751 ;;      Temps:          2       0       0       0       0
  5752 ;;      Totals:         3       0       0       0       0
  5753 ;;Total ram usage:        3 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_lcd_write_string
  5759 ;;		_lcd_write_2_digit_bcd
  5760 ;;		_lcd_write_3_digit_bcd
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           psect	text734
  5764                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5765                           	line	30
  5766                           	global	__size_of_lcd_write_data
  5767  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5768                           	
  5769  0D3D                     _lcd_write_data:	
  5770                           	opt	stack 1
  5771                           ; Regs used in _lcd_write_data: [wreg]
  5772                           ;lcd_write_data@databyte stored from wreg
  5773  0D3D  00F2               	movwf	(lcd_write_data@databyte)
  5774                           	line	31
  5775                           	
  5776  0D3E                     i1l9976:	
  5777                           ;lcd.c: 31: RE2 = 0;
  5778  0D3E  1283               	bcf	status, 5	;RP0=0, select bank0
  5779  0D3F  1303               	bcf	status, 6	;RP1=0, select bank0
  5780  0D40  1109               	bcf	(74/8),(74)&7
  5781                           	line	32
  5782                           ;lcd.c: 32: RE1 = 0;
  5783  0D41  1089               	bcf	(73/8),(73)&7
  5784                           	line	33
  5785                           ;lcd.c: 33: RE0 = 1;
  5786  0D42  1409               	bsf	(72/8),(72)&7
  5787                           	line	34
  5788                           	
  5789  0D43                     i1l9978:	
  5790                           ;lcd.c: 34: PORTD = databyte;
  5791  0D43  0872               	movf	(lcd_write_data@databyte),w
  5792  0D44  0088               	movwf	(8)	;volatile
  5793                           	line	35
  5794                           	
  5795  0D45                     i1l9980:	
  5796                           ;lcd.c: 35: RE2 = 1;
  5797  0D45  1509               	bsf	(74/8),(74)&7
  5798                           	line	36
  5799                           	
  5800  0D46                     i1l9982:	
  5801                           ;lcd.c: 36: RE2 = 0;
  5802  0D46  1109               	bcf	(74/8),(74)&7
  5803                           	line	37
  5804                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5805                           	opt asmopt_off
  5806  0D47  3007               movlw	7
  5807  0D48  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  5808  0D49  307D               	movlw	125
  5809  0D4A  00F0               movwf	((??_lcd_write_data+0)+0),f
  5810  0D4B                     u434_27:
  5811  0D4B  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  5812  0D4C  2D4B               	goto	u434_27
  5813  0D4D  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  5814  0D4E  2D4B               	goto	u434_27
  5815                           opt asmopt_on
  5816                           
  5817                           	line	38
  5818                           	
  5819  0D4F                     i1l1402:	
  5820  0D4F  0008               	return
  5821                           	opt stack 0
  5822                           GLOBAL	__end_of_lcd_write_data
  5823  0D50                     	__end_of_lcd_write_data:
  5824 ;; =============== function _lcd_write_data ends ============
  5825                           
  5826                           	signat	_lcd_write_data,4216
  5827                           	global	_adc_read_channel
  5828                           psect	text735,local,class=CODE,delta=2
  5829                           global __ptext735
  5830  07BF                     __ptext735:
  5831                           
  5832 ;; *************** function _adc_read_channel *****************
  5833 ;; Defined at:
  5834 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  channel         1    wreg     unsigned char 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  channel         1    7[COMMON] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      unsigned char 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         1       0       0       0       0
  5850 ;;      Temps:          1       0       0       0       0
  5851 ;;      Totals:         2       0       0       0       0
  5852 ;;Total ram usage:        2 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    1
  5855 ;; This function calls:
  5856 ;;		_adc_read
  5857 ;; This function is called by:
  5858 ;;		_readDistance
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           psect	text735
  5862                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5863                           	line	5
  5864                           	global	__size_of_adc_read_channel
  5865  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5866                           	
  5867  07BF                     _adc_read_channel:	
  5868                           	opt	stack 0
  5869                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5870                           ;adc_read_channel@channel stored from wreg
  5871  07BF  00F7               	movwf	(adc_read_channel@channel)
  5872                           	line	6
  5873                           	
  5874  07C0                     i1l9950:	
  5875                           ;adc.c: 6: switch(channel)
  5876  07C0  2FE3               	goto	i1l9958
  5877                           	line	8
  5878                           ;adc.c: 7: {
  5879                           ;adc.c: 8: case 0:
  5880                           	
  5881  07C1                     i1l690:	
  5882                           	line	9
  5883                           ;adc.c: 9: CHS0 = 0;
  5884  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
  5885  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
  5886  07C3  119F               	bcf	(251/8),(251)&7
  5887                           	line	10
  5888                           ;adc.c: 10: CHS1 = 0;
  5889  07C4  121F               	bcf	(252/8),(252)&7
  5890                           	line	11
  5891                           ;adc.c: 11: CHS2 = 0;
  5892  07C5  129F               	bcf	(253/8),(253)&7
  5893                           	line	12
  5894                           ;adc.c: 12: break;
  5895  07C6  2FF4               	goto	i1l9960
  5896                           	line	13
  5897                           ;adc.c: 13: case 1:
  5898                           	
  5899  07C7                     i1l692:	
  5900                           	line	14
  5901                           ;adc.c: 14: CHS0 = 1;
  5902  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
  5903  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
  5904  07C9  159F               	bsf	(251/8),(251)&7
  5905                           	line	15
  5906                           ;adc.c: 15: CHS1 = 0;
  5907  07CA  121F               	bcf	(252/8),(252)&7
  5908                           	line	16
  5909                           ;adc.c: 16: CHS2 = 0;
  5910  07CB  129F               	bcf	(253/8),(253)&7
  5911                           	line	17
  5912                           ;adc.c: 17: break;
  5913  07CC  2FF4               	goto	i1l9960
  5914                           	line	18
  5915                           ;adc.c: 18: case 2:
  5916                           	
  5917  07CD                     i1l693:	
  5918                           	line	19
  5919                           ;adc.c: 19: CHS0 = 0;
  5920  07CD  1283               	bcf	status, 5	;RP0=0, select bank0
  5921  07CE  1303               	bcf	status, 6	;RP1=0, select bank0
  5922  07CF  119F               	bcf	(251/8),(251)&7
  5923                           	line	20
  5924                           ;adc.c: 20: CHS1 = 1;
  5925  07D0  161F               	bsf	(252/8),(252)&7
  5926                           	line	21
  5927                           ;adc.c: 21: CHS2 = 0;
  5928  07D1  129F               	bcf	(253/8),(253)&7
  5929                           	line	22
  5930                           ;adc.c: 22: break;
  5931  07D2  2FF4               	goto	i1l9960
  5932                           	line	23
  5933                           ;adc.c: 23: case 3:
  5934                           	
  5935  07D3                     i1l694:	
  5936                           	line	24
  5937                           ;adc.c: 24: CHS0 = 1;
  5938  07D3  1283               	bcf	status, 5	;RP0=0, select bank0
  5939  07D4  1303               	bcf	status, 6	;RP1=0, select bank0
  5940  07D5  159F               	bsf	(251/8),(251)&7
  5941                           	line	25
  5942                           ;adc.c: 25: CHS1 = 1;
  5943  07D6  161F               	bsf	(252/8),(252)&7
  5944                           	line	26
  5945                           ;adc.c: 26: CHS2 = 0;
  5946  07D7  129F               	bcf	(253/8),(253)&7
  5947                           	line	27
  5948                           ;adc.c: 27: break;
  5949  07D8  2FF4               	goto	i1l9960
  5950                           	line	28
  5951                           ;adc.c: 28: case 4:
  5952                           	
  5953  07D9                     i1l695:	
  5954                           	line	29
  5955                           ;adc.c: 29: CHS0 = 0;
  5956  07D9  1283               	bcf	status, 5	;RP0=0, select bank0
  5957  07DA  1303               	bcf	status, 6	;RP1=0, select bank0
  5958  07DB  119F               	bcf	(251/8),(251)&7
  5959                           	line	30
  5960                           ;adc.c: 30: CHS1 = 0;
  5961  07DC  121F               	bcf	(252/8),(252)&7
  5962                           	line	31
  5963                           ;adc.c: 31: CHS2 = 1;
  5964  07DD  169F               	bsf	(253/8),(253)&7
  5965                           	line	32
  5966                           ;adc.c: 32: break;
  5967  07DE  2FF4               	goto	i1l9960
  5968                           	line	35
  5969                           ;adc.c: 35: default:
  5970                           	
  5971  07DF                     i1l696:	
  5972                           	line	36
  5973                           	
  5974  07DF                     i1l9952:	
  5975                           ;adc.c: 36: return 0;
  5976  07DF  3000               	movlw	(0)
  5977  07E0  2FFF               	goto	i1l697
  5978                           	
  5979  07E1                     i1l9954:	
  5980  07E1  2FFF               	goto	i1l697
  5981                           	line	37
  5982                           	
  5983  07E2                     i1l9956:	
  5984                           ;adc.c: 37: }
  5985  07E2  2FF4               	goto	i1l9960
  5986                           	line	6
  5987                           	
  5988  07E3                     i1l689:	
  5989                           	
  5990  07E3                     i1l9958:	
  5991  07E3  0877               	movf	(adc_read_channel@channel),w
  5992                           	; Switch size 1, requested type "space"
  5993                           ; Number of cases is 5, Range of values is 0 to 4
  5994                           ; switch strategies available:
  5995                           ; Name         Instructions Cycles
  5996                           ; simple_byte           16     9 (average)
  5997                           ; direct_byte           23     8 (fixed)
  5998                           ; jumptable            260     6 (fixed)
  5999                           ; rangetable             9     6 (fixed)
  6000                           ; spacedrange           16     9 (fixed)
  6001                           ; locatedrange           5     3 (fixed)
  6002                           ;	Chosen strategy is simple_byte
  6003                           
  6004                           	opt asmopt_off
  6005  07E4  3A00               	xorlw	0^0	; case 0
  6006  07E5  1903               	skipnz
  6007  07E6  2FC1               	goto	i1l690
  6008  07E7  3A01               	xorlw	1^0	; case 1
  6009  07E8  1903               	skipnz
  6010  07E9  2FC7               	goto	i1l692
  6011  07EA  3A03               	xorlw	2^1	; case 2
  6012  07EB  1903               	skipnz
  6013  07EC  2FCD               	goto	i1l693
  6014  07ED  3A01               	xorlw	3^2	; case 3
  6015  07EE  1903               	skipnz
  6016  07EF  2FD3               	goto	i1l694
  6017  07F0  3A07               	xorlw	4^3	; case 4
  6018  07F1  1903               	skipnz
  6019  07F2  2FD9               	goto	i1l695
  6020  07F3  2FDF               	goto	i1l9952
  6021                           	opt asmopt_on
  6022                           
  6023                           	line	37
  6024                           	
  6025  07F4                     i1l691:	
  6026                           	line	39
  6027                           	
  6028  07F4                     i1l9960:	
  6029                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6030                           	opt asmopt_off
  6031  07F4  3053               movlw	83
  6032  07F5  00F6               movwf	(??_adc_read_channel+0)+0,f
  6033  07F6                     u435_27:
  6034  07F6  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  6035  07F7  2FF6               	goto	u435_27
  6036                           opt asmopt_on
  6037                           
  6038                           	line	41
  6039                           	
  6040  07F8                     i1l9962:	
  6041                           ;adc.c: 41: return adc_read();
  6042  07F8  120A  158A  25F2   	fcall	_adc_read
              120A  118A         
  6043  07FD  0870               	movf	(0+(?_adc_read)),w
  6044  07FE  2FFF               	goto	i1l697
  6045                           	
  6046  07FF                     i1l9964:	
  6047                           	line	43
  6048                           	
  6049  07FF                     i1l697:	
  6050  07FF  0008               	return
  6051                           	opt stack 0
  6052                           GLOBAL	__end_of_adc_read_channel
  6053  0800                     	__end_of_adc_read_channel:
  6054 ;; =============== function _adc_read_channel ends ============
  6055                           
  6056                           	signat	_adc_read_channel,4217
  6057                           	global	___awmod
  6058                           psect	text736,local,class=CODE,delta=2
  6059                           global __ptext736
  6060  0669                     __ptext736:
  6061                           
  6062 ;; *************** function ___awmod *****************
  6063 ;; Defined at:
  6064 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  divisor         2    0[COMMON] int 
  6067 ;;  dividend        2    2[COMMON] int 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  sign            1    6[COMMON] unsigned char 
  6070 ;;  counter         1    5[COMMON] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  2    0[COMMON] int 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6080 ;;      Params:         4       0       0       0       0
  6081 ;;      Locals:         2       0       0       0       0
  6082 ;;      Temps:          1       0       0       0       0
  6083 ;;      Totals:         7       0       0       0       0
  6084 ;;Total ram usage:        7 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_UpdateDisplay
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           psect	text736
  6093                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6094                           	line	5
  6095                           	global	__size_of___awmod
  6096  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6097                           	
  6098  0669                     ___awmod:	
  6099                           	opt	stack 2
  6100                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6101                           	line	8
  6102                           	
  6103  0669                     i1l10600:	
  6104  0669  01F6               	clrf	(___awmod@sign)
  6105                           	line	9
  6106  066A  1FF3               	btfss	(___awmod@dividend+1),7
  6107  066B  2E6D               	goto	u419_21
  6108  066C  2E6E               	goto	u419_20
  6109  066D                     u419_21:
  6110  066D  2E77               	goto	i1l10604
  6111  066E                     u419_20:
  6112                           	line	10
  6113                           	
  6114  066E                     i1l10602:	
  6115  066E  09F2               	comf	(___awmod@dividend),f
  6116  066F  09F3               	comf	(___awmod@dividend+1),f
  6117  0670  0AF2               	incf	(___awmod@dividend),f
  6118  0671  1903               	skipnz
  6119  0672  0AF3               	incf	(___awmod@dividend+1),f
  6120                           	line	11
  6121  0673  01F6               	clrf	(___awmod@sign)
  6122  0674  1403               	bsf	status,0
  6123  0675  0DF6               	rlf	(___awmod@sign),f
  6124  0676  2E77               	goto	i1l10604
  6125                           	line	12
  6126                           	
  6127  0677                     i1l7600:	
  6128                           	line	13
  6129                           	
  6130  0677                     i1l10604:	
  6131  0677  1FF1               	btfss	(___awmod@divisor+1),7
  6132  0678  2E7A               	goto	u420_21
  6133  0679  2E7B               	goto	u420_20
  6134  067A                     u420_21:
  6135  067A  2E81               	goto	i1l10608
  6136  067B                     u420_20:
  6137                           	line	14
  6138                           	
  6139  067B                     i1l10606:	
  6140  067B  09F0               	comf	(___awmod@divisor),f
  6141  067C  09F1               	comf	(___awmod@divisor+1),f
  6142  067D  0AF0               	incf	(___awmod@divisor),f
  6143  067E  1903               	skipnz
  6144  067F  0AF1               	incf	(___awmod@divisor+1),f
  6145  0680  2E81               	goto	i1l10608
  6146                           	
  6147  0681                     i1l7601:	
  6148                           	line	15
  6149                           	
  6150  0681                     i1l10608:	
  6151  0681  0871               	movf	(___awmod@divisor+1),w
  6152  0682  0470               	iorwf	(___awmod@divisor),w
  6153  0683  1903               	skipnz
  6154  0684  2E86               	goto	u421_21
  6155  0685  2E87               	goto	u421_20
  6156  0686                     u421_21:
  6157  0686  2EBD               	goto	i1l10626
  6158  0687                     u421_20:
  6159                           	line	16
  6160                           	
  6161  0687                     i1l10610:	
  6162  0687  01F5               	clrf	(___awmod@counter)
  6163  0688  1403               	bsf	status,0
  6164  0689  0DF5               	rlf	(___awmod@counter),f
  6165                           	line	17
  6166  068A  2E97               	goto	i1l10616
  6167                           	
  6168  068B                     i1l7604:	
  6169                           	line	18
  6170                           	
  6171  068B                     i1l10612:	
  6172  068B  3001               	movlw	01h
  6173                           	
  6174  068C                     u422_25:
  6175  068C  1003               	clrc
  6176  068D  0DF0               	rlf	(___awmod@divisor),f
  6177  068E  0DF1               	rlf	(___awmod@divisor+1),f
  6178  068F  3EFF               	addlw	-1
  6179  0690  1D03               	skipz
  6180  0691  2E8C               	goto	u422_25
  6181                           	line	19
  6182                           	
  6183  0692                     i1l10614:	
  6184  0692  3001               	movlw	(01h)
  6185  0693  00F4               	movwf	(??___awmod+0)+0
  6186  0694  0874               	movf	(??___awmod+0)+0,w
  6187  0695  07F5               	addwf	(___awmod@counter),f
  6188  0696  2E97               	goto	i1l10616
  6189                           	line	20
  6190                           	
  6191  0697                     i1l7603:	
  6192                           	line	17
  6193                           	
  6194  0697                     i1l10616:	
  6195  0697  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  6196  0698  2E9A               	goto	u423_21
  6197  0699  2E9B               	goto	u423_20
  6198  069A                     u423_21:
  6199  069A  2E8B               	goto	i1l10612
  6200  069B                     u423_20:
  6201  069B  2E9D               	goto	i1l10618
  6202                           	
  6203  069C                     i1l7605:	
  6204  069C  2E9D               	goto	i1l10618
  6205                           	line	21
  6206                           	
  6207  069D                     i1l7606:	
  6208                           	line	22
  6209                           	
  6210  069D                     i1l10618:	
  6211  069D  0871               	movf	(___awmod@divisor+1),w
  6212  069E  0273               	subwf	(___awmod@dividend+1),w
  6213  069F  1D03               	skipz
  6214  06A0  2EA3               	goto	u424_25
  6215  06A1  0870               	movf	(___awmod@divisor),w
  6216  06A2  0272               	subwf	(___awmod@dividend),w
  6217  06A3                     u424_25:
  6218  06A3  1C03               	skipc
  6219  06A4  2EA6               	goto	u424_21
  6220  06A5  2EA7               	goto	u424_20
  6221  06A6                     u424_21:
  6222  06A6  2EAE               	goto	i1l10622
  6223  06A7                     u424_20:
  6224                           	line	23
  6225                           	
  6226  06A7                     i1l10620:	
  6227  06A7  0870               	movf	(___awmod@divisor),w
  6228  06A8  02F2               	subwf	(___awmod@dividend),f
  6229  06A9  0871               	movf	(___awmod@divisor+1),w
  6230  06AA  1C03               	skipc
  6231  06AB  03F3               	decf	(___awmod@dividend+1),f
  6232  06AC  02F3               	subwf	(___awmod@dividend+1),f
  6233  06AD  2EAE               	goto	i1l10622
  6234                           	
  6235  06AE                     i1l7607:	
  6236                           	line	24
  6237                           	
  6238  06AE                     i1l10622:	
  6239  06AE  3001               	movlw	01h
  6240                           	
  6241  06AF                     u425_25:
  6242  06AF  1003               	clrc
  6243  06B0  0CF1               	rrf	(___awmod@divisor+1),f
  6244  06B1  0CF0               	rrf	(___awmod@divisor),f
  6245  06B2  3EFF               	addlw	-1
  6246  06B3  1D03               	skipz
  6247  06B4  2EAF               	goto	u425_25
  6248                           	line	25
  6249                           	
  6250  06B5                     i1l10624:	
  6251  06B5  3001               	movlw	low(01h)
  6252  06B6  02F5               	subwf	(___awmod@counter),f
  6253  06B7  1D03               	btfss	status,2
  6254  06B8  2EBA               	goto	u426_21
  6255  06B9  2EBB               	goto	u426_20
  6256  06BA                     u426_21:
  6257  06BA  2E9D               	goto	i1l10618
  6258  06BB                     u426_20:
  6259  06BB  2EBD               	goto	i1l10626
  6260                           	
  6261  06BC                     i1l7608:	
  6262  06BC  2EBD               	goto	i1l10626
  6263                           	line	26
  6264                           	
  6265  06BD                     i1l7602:	
  6266                           	line	27
  6267                           	
  6268  06BD                     i1l10626:	
  6269  06BD  0876               	movf	(___awmod@sign),w
  6270  06BE  1D03               	skipz
  6271  06BF  2EC1               	goto	u427_20
  6272  06C0  2EC7               	goto	i1l10630
  6273  06C1                     u427_20:
  6274                           	line	28
  6275                           	
  6276  06C1                     i1l10628:	
  6277  06C1  09F2               	comf	(___awmod@dividend),f
  6278  06C2  09F3               	comf	(___awmod@dividend+1),f
  6279  06C3  0AF2               	incf	(___awmod@dividend),f
  6280  06C4  1903               	skipnz
  6281  06C5  0AF3               	incf	(___awmod@dividend+1),f
  6282  06C6  2EC7               	goto	i1l10630
  6283                           	
  6284  06C7                     i1l7609:	
  6285                           	line	29
  6286                           	
  6287  06C7                     i1l10630:	
  6288  06C7  0873               	movf	(___awmod@dividend+1),w
  6289  06C8  01F1               	clrf	(?___awmod+1)
  6290  06C9  07F1               	addwf	(?___awmod+1)
  6291  06CA  0872               	movf	(___awmod@dividend),w
  6292  06CB  01F0               	clrf	(?___awmod)
  6293  06CC  07F0               	addwf	(?___awmod)
  6294                           
  6295  06CD  2ECE               	goto	i1l7610
  6296                           	
  6297  06CE                     i1l10632:	
  6298                           	line	30
  6299                           	
  6300  06CE                     i1l7610:	
  6301  06CE  0008               	return
  6302                           	opt stack 0
  6303                           GLOBAL	__end_of___awmod
  6304  06CF                     	__end_of___awmod:
  6305 ;; =============== function ___awmod ends ============
  6306                           
  6307                           	signat	___awmod,8314
  6308                           	global	___lwmod
  6309                           psect	text737,local,class=CODE,delta=2
  6310                           global __ptext737
  6311  0F73                     __ptext737:
  6312                           
  6313 ;; *************** function ___lwmod *****************
  6314 ;; Defined at:
  6315 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  divisor         2    0[BANK0 ] unsigned int 
  6318 ;;  dividend        2    2[BANK0 ] unsigned int 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  counter         1    5[BANK0 ] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  2    0[BANK0 ] unsigned int 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6330 ;;      Params:         0       4       0       0       0
  6331 ;;      Locals:         0       1       0       0       0
  6332 ;;      Temps:          0       1       0       0       0
  6333 ;;      Totals:         0       6       0       0       0
  6334 ;;Total ram usage:        6 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_isr1
  6340 ;;		_sprintf
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           psect	text737
  6344                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6345                           	line	5
  6346                           	global	__size_of___lwmod
  6347  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6348                           	
  6349  0F73                     ___lwmod:	
  6350                           	opt	stack 1
  6351                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6352                           	line	8
  6353                           	
  6354  0F73                     i1l10578:	
  6355  0F73  1283               	bcf	status, 5	;RP0=0, select bank0
  6356  0F74  1303               	bcf	status, 6	;RP1=0, select bank0
  6357  0F75  0821               	movf	(___lwmod@divisor+1),w
  6358  0F76  0420               	iorwf	(___lwmod@divisor),w
  6359  0F77  1903               	skipnz
  6360  0F78  2F7A               	goto	u413_21
  6361  0F79  2F7B               	goto	u413_20
  6362  0F7A                     u413_21:
  6363  0F7A  2FB1               	goto	i1l10596
  6364  0F7B                     u413_20:
  6365                           	line	9
  6366                           	
  6367  0F7B                     i1l10580:	
  6368  0F7B  01A5               	clrf	(___lwmod@counter)
  6369  0F7C  1403               	bsf	status,0
  6370  0F7D  0DA5               	rlf	(___lwmod@counter),f
  6371                           	line	10
  6372  0F7E  2F8B               	goto	i1l10586
  6373                           	
  6374  0F7F                     i1l7410:	
  6375                           	line	11
  6376                           	
  6377  0F7F                     i1l10582:	
  6378  0F7F  3001               	movlw	01h
  6379                           	
  6380  0F80                     u414_25:
  6381  0F80  1003               	clrc
  6382  0F81  0DA0               	rlf	(___lwmod@divisor),f
  6383  0F82  0DA1               	rlf	(___lwmod@divisor+1),f
  6384  0F83  3EFF               	addlw	-1
  6385  0F84  1D03               	skipz
  6386  0F85  2F80               	goto	u414_25
  6387                           	line	12
  6388                           	
  6389  0F86                     i1l10584:	
  6390  0F86  3001               	movlw	(01h)
  6391  0F87  00A4               	movwf	(??___lwmod+0)+0
  6392  0F88  0824               	movf	(??___lwmod+0)+0,w
  6393  0F89  07A5               	addwf	(___lwmod@counter),f
  6394  0F8A  2F8B               	goto	i1l10586
  6395                           	line	13
  6396                           	
  6397  0F8B                     i1l7409:	
  6398                           	line	10
  6399                           	
  6400  0F8B                     i1l10586:	
  6401  0F8B  1FA1               	btfss	(___lwmod@divisor+1),(15)&7
  6402  0F8C  2F8E               	goto	u415_21
  6403  0F8D  2F8F               	goto	u415_20
  6404  0F8E                     u415_21:
  6405  0F8E  2F7F               	goto	i1l10582
  6406  0F8F                     u415_20:
  6407  0F8F  2F91               	goto	i1l10588
  6408                           	
  6409  0F90                     i1l7411:	
  6410  0F90  2F91               	goto	i1l10588
  6411                           	line	14
  6412                           	
  6413  0F91                     i1l7412:	
  6414                           	line	15
  6415                           	
  6416  0F91                     i1l10588:	
  6417  0F91  0821               	movf	(___lwmod@divisor+1),w
  6418  0F92  0223               	subwf	(___lwmod@dividend+1),w
  6419  0F93  1D03               	skipz
  6420  0F94  2F97               	goto	u416_25
  6421  0F95  0820               	movf	(___lwmod@divisor),w
  6422  0F96  0222               	subwf	(___lwmod@dividend),w
  6423  0F97                     u416_25:
  6424  0F97  1C03               	skipc
  6425  0F98  2F9A               	goto	u416_21
  6426  0F99  2F9B               	goto	u416_20
  6427  0F9A                     u416_21:
  6428  0F9A  2FA2               	goto	i1l10592
  6429  0F9B                     u416_20:
  6430                           	line	16
  6431                           	
  6432  0F9B                     i1l10590:	
  6433  0F9B  0820               	movf	(___lwmod@divisor),w
  6434  0F9C  02A2               	subwf	(___lwmod@dividend),f
  6435  0F9D  0821               	movf	(___lwmod@divisor+1),w
  6436  0F9E  1C03               	skipc
  6437  0F9F  03A3               	decf	(___lwmod@dividend+1),f
  6438  0FA0  02A3               	subwf	(___lwmod@dividend+1),f
  6439  0FA1  2FA2               	goto	i1l10592
  6440                           	
  6441  0FA2                     i1l7413:	
  6442                           	line	17
  6443                           	
  6444  0FA2                     i1l10592:	
  6445  0FA2  3001               	movlw	01h
  6446                           	
  6447  0FA3                     u417_25:
  6448  0FA3  1003               	clrc
  6449  0FA4  0CA1               	rrf	(___lwmod@divisor+1),f
  6450  0FA5  0CA0               	rrf	(___lwmod@divisor),f
  6451  0FA6  3EFF               	addlw	-1
  6452  0FA7  1D03               	skipz
  6453  0FA8  2FA3               	goto	u417_25
  6454                           	line	18
  6455                           	
  6456  0FA9                     i1l10594:	
  6457  0FA9  3001               	movlw	low(01h)
  6458  0FAA  02A5               	subwf	(___lwmod@counter),f
  6459  0FAB  1D03               	btfss	status,2
  6460  0FAC  2FAE               	goto	u418_21
  6461  0FAD  2FAF               	goto	u418_20
  6462  0FAE                     u418_21:
  6463  0FAE  2F91               	goto	i1l10588
  6464  0FAF                     u418_20:
  6465  0FAF  2FB1               	goto	i1l10596
  6466                           	
  6467  0FB0                     i1l7414:	
  6468  0FB0  2FB1               	goto	i1l10596
  6469                           	line	19
  6470                           	
  6471  0FB1                     i1l7408:	
  6472                           	line	20
  6473                           	
  6474  0FB1                     i1l10596:	
  6475  0FB1  0823               	movf	(___lwmod@dividend+1),w
  6476  0FB2  01A1               	clrf	(?___lwmod+1)
  6477  0FB3  07A1               	addwf	(?___lwmod+1)
  6478  0FB4  0822               	movf	(___lwmod@dividend),w
  6479  0FB5  01A0               	clrf	(?___lwmod)
  6480  0FB6  07A0               	addwf	(?___lwmod)
  6481                           
  6482  0FB7  2FB8               	goto	i1l7415
  6483                           	
  6484  0FB8                     i1l10598:	
  6485                           	line	21
  6486                           	
  6487  0FB8                     i1l7415:	
  6488  0FB8  0008               	return
  6489                           	opt stack 0
  6490                           GLOBAL	__end_of___lwmod
  6491  0FB9                     	__end_of___lwmod:
  6492 ;; =============== function ___lwmod ends ============
  6493                           
  6494                           	signat	___lwmod,8314
  6495                           	global	___lwdiv
  6496                           psect	text738,local,class=CODE,delta=2
  6497                           global __ptext738
  6498  0724                     __ptext738:
  6499                           
  6500 ;; *************** function ___lwdiv *****************
  6501 ;; Defined at:
  6502 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  divisor         2    6[COMMON] unsigned int 
  6505 ;;  dividend        2    8[COMMON] unsigned int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  quotient        2   11[COMMON] unsigned int 
  6508 ;;  counter         1   13[COMMON] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  2    6[COMMON] unsigned int 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6518 ;;      Params:         4       0       0       0       0
  6519 ;;      Locals:         3       0       0       0       0
  6520 ;;      Temps:          1       0       0       0       0
  6521 ;;      Totals:         8       0       0       0       0
  6522 ;;Total ram usage:        8 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_readAvgDistance
  6528 ;;		_ADCconvert
  6529 ;;		_sprintf
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           psect	text738
  6533                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6534                           	line	5
  6535                           	global	__size_of___lwdiv
  6536  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6537                           	
  6538  0724                     ___lwdiv:	
  6539                           	opt	stack 1
  6540                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6541                           	line	9
  6542                           	
  6543  0724                     i1l10552:	
  6544  0724  01FB               	clrf	(___lwdiv@quotient)
  6545  0725  01FC               	clrf	(___lwdiv@quotient+1)
  6546                           	line	10
  6547                           	
  6548  0726                     i1l10554:	
  6549  0726  0877               	movf	(___lwdiv@divisor+1),w
  6550  0727  0476               	iorwf	(___lwdiv@divisor),w
  6551  0728  1903               	skipnz
  6552  0729  2F2B               	goto	u406_21
  6553  072A  2F2C               	goto	u406_20
  6554  072B                     u406_21:
  6555  072B  2F6A               	goto	i1l10574
  6556  072C                     u406_20:
  6557                           	line	11
  6558                           	
  6559  072C                     i1l10556:	
  6560  072C  01FD               	clrf	(___lwdiv@counter)
  6561  072D  1403               	bsf	status,0
  6562  072E  0DFD               	rlf	(___lwdiv@counter),f
  6563                           	line	12
  6564  072F  2F3C               	goto	i1l10562
  6565                           	
  6566  0730                     i1l7400:	
  6567                           	line	13
  6568                           	
  6569  0730                     i1l10558:	
  6570  0730  3001               	movlw	01h
  6571                           	
  6572  0731                     u407_25:
  6573  0731  1003               	clrc
  6574  0732  0DF6               	rlf	(___lwdiv@divisor),f
  6575  0733  0DF7               	rlf	(___lwdiv@divisor+1),f
  6576  0734  3EFF               	addlw	-1
  6577  0735  1D03               	skipz
  6578  0736  2F31               	goto	u407_25
  6579                           	line	14
  6580                           	
  6581  0737                     i1l10560:	
  6582  0737  3001               	movlw	(01h)
  6583  0738  00FA               	movwf	(??___lwdiv+0)+0
  6584  0739  087A               	movf	(??___lwdiv+0)+0,w
  6585  073A  07FD               	addwf	(___lwdiv@counter),f
  6586  073B  2F3C               	goto	i1l10562
  6587                           	line	15
  6588                           	
  6589  073C                     i1l7399:	
  6590                           	line	12
  6591                           	
  6592  073C                     i1l10562:	
  6593  073C  1FF7               	btfss	(___lwdiv@divisor+1),(15)&7
  6594  073D  2F3F               	goto	u408_21
  6595  073E  2F40               	goto	u408_20
  6596  073F                     u408_21:
  6597  073F  2F30               	goto	i1l10558
  6598  0740                     u408_20:
  6599  0740  2F42               	goto	i1l10564
  6600                           	
  6601  0741                     i1l7401:	
  6602  0741  2F42               	goto	i1l10564
  6603                           	line	16
  6604                           	
  6605  0742                     i1l7402:	
  6606                           	line	17
  6607                           	
  6608  0742                     i1l10564:	
  6609  0742  3001               	movlw	01h
  6610                           	
  6611  0743                     u409_25:
  6612  0743  1003               	clrc
  6613  0744  0DFB               	rlf	(___lwdiv@quotient),f
  6614  0745  0DFC               	rlf	(___lwdiv@quotient+1),f
  6615  0746  3EFF               	addlw	-1
  6616  0747  1D03               	skipz
  6617  0748  2F43               	goto	u409_25
  6618                           	line	18
  6619  0749  0877               	movf	(___lwdiv@divisor+1),w
  6620  074A  0279               	subwf	(___lwdiv@dividend+1),w
  6621  074B  1D03               	skipz
  6622  074C  2F4F               	goto	u410_25
  6623  074D  0876               	movf	(___lwdiv@divisor),w
  6624  074E  0278               	subwf	(___lwdiv@dividend),w
  6625  074F                     u410_25:
  6626  074F  1C03               	skipc
  6627  0750  2F52               	goto	u410_21
  6628  0751  2F53               	goto	u410_20
  6629  0752                     u410_21:
  6630  0752  2F5B               	goto	i1l10570
  6631  0753                     u410_20:
  6632                           	line	19
  6633                           	
  6634  0753                     i1l10566:	
  6635  0753  0876               	movf	(___lwdiv@divisor),w
  6636  0754  02F8               	subwf	(___lwdiv@dividend),f
  6637  0755  0877               	movf	(___lwdiv@divisor+1),w
  6638  0756  1C03               	skipc
  6639  0757  03F9               	decf	(___lwdiv@dividend+1),f
  6640  0758  02F9               	subwf	(___lwdiv@dividend+1),f
  6641                           	line	20
  6642                           	
  6643  0759                     i1l10568:	
  6644  0759  147B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6645  075A  2F5B               	goto	i1l10570
  6646                           	line	21
  6647                           	
  6648  075B                     i1l7403:	
  6649                           	line	22
  6650                           	
  6651  075B                     i1l10570:	
  6652  075B  3001               	movlw	01h
  6653                           	
  6654  075C                     u411_25:
  6655  075C  1003               	clrc
  6656  075D  0CF7               	rrf	(___lwdiv@divisor+1),f
  6657  075E  0CF6               	rrf	(___lwdiv@divisor),f
  6658  075F  3EFF               	addlw	-1
  6659  0760  1D03               	skipz
  6660  0761  2F5C               	goto	u411_25
  6661                           	line	23
  6662                           	
  6663  0762                     i1l10572:	
  6664  0762  3001               	movlw	low(01h)
  6665  0763  02FD               	subwf	(___lwdiv@counter),f
  6666  0764  1D03               	btfss	status,2
  6667  0765  2F67               	goto	u412_21
  6668  0766  2F68               	goto	u412_20
  6669  0767                     u412_21:
  6670  0767  2F42               	goto	i1l10564
  6671  0768                     u412_20:
  6672  0768  2F6A               	goto	i1l10574
  6673                           	
  6674  0769                     i1l7404:	
  6675  0769  2F6A               	goto	i1l10574
  6676                           	line	24
  6677                           	
  6678  076A                     i1l7398:	
  6679                           	line	25
  6680                           	
  6681  076A                     i1l10574:	
  6682  076A  087C               	movf	(___lwdiv@quotient+1),w
  6683  076B  01F7               	clrf	(?___lwdiv+1)
  6684  076C  07F7               	addwf	(?___lwdiv+1)
  6685  076D  087B               	movf	(___lwdiv@quotient),w
  6686  076E  01F6               	clrf	(?___lwdiv)
  6687  076F  07F6               	addwf	(?___lwdiv)
  6688                           
  6689  0770  2F71               	goto	i1l7405
  6690                           	
  6691  0771                     i1l10576:	
  6692                           	line	26
  6693                           	
  6694  0771                     i1l7405:	
  6695  0771  0008               	return
  6696                           	opt stack 0
  6697                           GLOBAL	__end_of___lwdiv
  6698  0772                     	__end_of___lwdiv:
  6699 ;; =============== function ___lwdiv ends ============
  6700                           
  6701                           	signat	___lwdiv,8314
  6702                           	global	___wmul
  6703                           psect	text739,local,class=CODE,delta=2
  6704                           global __ptext739
  6705  0E6A                     __ptext739:
  6706                           
  6707 ;; *************** function ___wmul *****************
  6708 ;; Defined at:
  6709 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  multiplier      2    0[COMMON] unsigned int 
  6712 ;;  multiplicand    2    2[COMMON] unsigned int 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  product         2    4[COMMON] unsigned int 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  2    0[COMMON] unsigned int 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         4       0       0       0       0
  6725 ;;      Locals:         2       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0
  6727 ;;      Totals:         6       0       0       0       0
  6728 ;;Total ram usage:        6 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_ADCconvert
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           psect	text739
  6737                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6738                           	line	3
  6739                           	global	__size_of___wmul
  6740  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6741                           	
  6742  0E6A                     ___wmul:	
  6743                           	opt	stack 1
  6744                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6745                           	line	4
  6746                           	
  6747  0E6A                     i1l10540:	
  6748  0E6A  01F4               	clrf	(___wmul@product)
  6749  0E6B  01F5               	clrf	(___wmul@product+1)
  6750  0E6C  2E6D               	goto	i1l10542
  6751                           	line	6
  6752                           	
  6753  0E6D                     i1l7392:	
  6754                           	line	7
  6755                           	
  6756  0E6D                     i1l10542:	
  6757  0E6D  1C70               	btfss	(___wmul@multiplier),(0)&7
  6758  0E6E  2E70               	goto	u402_21
  6759  0E6F  2E71               	goto	u402_20
  6760  0E70                     u402_21:
  6761  0E70  2E77               	goto	i1l7393
  6762  0E71                     u402_20:
  6763                           	line	8
  6764                           	
  6765  0E71                     i1l10544:	
  6766  0E71  0872               	movf	(___wmul@multiplicand),w
  6767  0E72  07F4               	addwf	(___wmul@product),f
  6768  0E73  1803               	skipnc
  6769  0E74  0AF5               	incf	(___wmul@product+1),f
  6770  0E75  0873               	movf	(___wmul@multiplicand+1),w
  6771  0E76  07F5               	addwf	(___wmul@product+1),f
  6772                           	
  6773  0E77                     i1l7393:	
  6774                           	line	9
  6775  0E77  3001               	movlw	01h
  6776                           	
  6777  0E78                     u403_25:
  6778  0E78  1003               	clrc
  6779  0E79  0DF2               	rlf	(___wmul@multiplicand),f
  6780  0E7A  0DF3               	rlf	(___wmul@multiplicand+1),f
  6781  0E7B  3EFF               	addlw	-1
  6782  0E7C  1D03               	skipz
  6783  0E7D  2E78               	goto	u403_25
  6784                           	line	10
  6785                           	
  6786  0E7E                     i1l10546:	
  6787  0E7E  3001               	movlw	01h
  6788                           	
  6789  0E7F                     u404_25:
  6790  0E7F  1003               	clrc
  6791  0E80  0CF1               	rrf	(___wmul@multiplier+1),f
  6792  0E81  0CF0               	rrf	(___wmul@multiplier),f
  6793  0E82  3EFF               	addlw	-1
  6794  0E83  1D03               	skipz
  6795  0E84  2E7F               	goto	u404_25
  6796                           	line	11
  6797  0E85  0871               	movf	((___wmul@multiplier+1)),w
  6798  0E86  0470               	iorwf	((___wmul@multiplier)),w
  6799  0E87  1D03               	skipz
  6800  0E88  2E8A               	goto	u405_21
  6801  0E89  2E8B               	goto	u405_20
  6802  0E8A                     u405_21:
  6803  0E8A  2E6D               	goto	i1l10542
  6804  0E8B                     u405_20:
  6805  0E8B  2E8C               	goto	i1l10548
  6806                           	
  6807  0E8C                     i1l7394:	
  6808                           	line	12
  6809                           	
  6810  0E8C                     i1l10548:	
  6811  0E8C  0875               	movf	(___wmul@product+1),w
  6812  0E8D  01F1               	clrf	(?___wmul+1)
  6813  0E8E  07F1               	addwf	(?___wmul+1)
  6814  0E8F  0874               	movf	(___wmul@product),w
  6815  0E90  01F0               	clrf	(?___wmul)
  6816  0E91  07F0               	addwf	(?___wmul)
  6817                           
  6818  0E92  2E93               	goto	i1l7395
  6819                           	
  6820  0E93                     i1l10550:	
  6821                           	line	13
  6822                           	
  6823  0E93                     i1l7395:	
  6824  0E93  0008               	return
  6825                           	opt stack 0
  6826                           GLOBAL	__end_of___wmul
  6827  0E94                     	__end_of___wmul:
  6828 ;; =============== function ___wmul ends ============
  6829                           
  6830                           	signat	___wmul,8314
  6831                           	global	_Debounce
  6832                           psect	text740,local,class=CODE,delta=2
  6833                           global __ptext740
  6834  053F                     __ptext740:
  6835                           
  6836 ;; *************** function _Debounce *****************
  6837 ;; Defined at:
  6838 ;;		line 61 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;		None               void
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6852 ;;      Params:         0       0       0       0       0
  6853 ;;      Locals:         0       0       0       0       0
  6854 ;;      Temps:          1       0       0       0       0
  6855 ;;      Totals:         1       0       0       0       0
  6856 ;;Total ram usage:        1 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; This function calls:
  6859 ;;		Nothing
  6860 ;; This function is called by:
  6861 ;;		_ReadButtons
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           psect	text740
  6865                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  6866                           	line	61
  6867                           	global	__size_of_Debounce
  6868  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  6869                           	
  6870  053F                     _Debounce:	
  6871                           	opt	stack 2
  6872                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  6873                           	line	63
  6874                           	
  6875  053F                     i1l10404:	
  6876                           ;HMI.c: 63: if(!RB2)
  6877  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  6878  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  6879  0541  1906               	btfsc	(50/8),(50)&7
  6880  0542  2D44               	goto	u375_21
  6881  0543  2D45               	goto	u375_20
  6882  0544                     u375_21:
  6883  0544  2D57               	goto	i1l5181
  6884  0545                     u375_20:
  6885                           	line	65
  6886                           	
  6887  0545                     i1l10406:	
  6888                           ;HMI.c: 64: {
  6889                           ;HMI.c: 65: UpDebounceCount++;
  6890  0545  3001               	movlw	(01h)
  6891  0546  00F0               	movwf	(??_Debounce+0)+0
  6892  0547  0870               	movf	(??_Debounce+0)+0,w
  6893  0548  07DF               	addwf	(_UpDebounceCount),f	;volatile
  6894                           	line	66
  6895                           	
  6896  0549                     i1l10408:	
  6897                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  6898  0549  300A               	movlw	(0Ah)
  6899  054A  025F               	subwf	(_UpDebounceCount),w	;volatile
  6900  054B  1C03               	skipc
  6901  054C  2D4E               	goto	u376_21
  6902  054D  2D4F               	goto	u376_20
  6903  054E                     u376_21:
  6904  054E  2D59               	goto	i1l5183
  6905  054F                     u376_20:
  6906                           	
  6907  054F                     i1l10410:	
  6908  054F  1F6E               	btfss	(_UpReleased/8),(_UpReleased)&7
  6909  0550  2D52               	goto	u377_21
  6910  0551  2D53               	goto	u377_20
  6911  0552                     u377_21:
  6912  0552  2D59               	goto	i1l5183
  6913  0553                     u377_20:
  6914                           	line	68
  6915                           	
  6916  0553                     i1l10412:	
  6917                           ;HMI.c: 67: {
  6918                           ;HMI.c: 68: UpPressed = 1;
  6919  0553  16EE               	bsf	(_UpPressed/8),(_UpPressed)&7
  6920                           	line	69
  6921                           ;HMI.c: 69: UpReleased = 0;
  6922  0554  136E               	bcf	(_UpReleased/8),(_UpReleased)&7
  6923  0555  2D59               	goto	i1l5183
  6924                           	line	70
  6925                           	
  6926  0556                     i1l5182:	
  6927                           	line	71
  6928                           ;HMI.c: 70: }
  6929                           ;HMI.c: 71: }
  6930  0556  2D59               	goto	i1l5183
  6931                           	line	72
  6932                           	
  6933  0557                     i1l5181:	
  6934                           	line	74
  6935                           ;HMI.c: 72: else
  6936                           ;HMI.c: 73: {
  6937                           ;HMI.c: 74: UpDebounceCount = 0;
  6938  0557  01DF               	clrf	(_UpDebounceCount)	;volatile
  6939                           	line	75
  6940                           ;HMI.c: 75: UpReleased = 1;
  6941  0558  176E               	bsf	(_UpReleased/8),(_UpReleased)&7
  6942                           	line	76
  6943                           	
  6944  0559                     i1l5183:	
  6945                           	line	79
  6946                           ;HMI.c: 76: }
  6947                           ;HMI.c: 79: if(!RB3)
  6948  0559  1986               	btfsc	(51/8),(51)&7
  6949  055A  2D5C               	goto	u378_21
  6950  055B  2D5D               	goto	u378_20
  6951  055C                     u378_21:
  6952  055C  2D6F               	goto	i1l5184
  6953  055D                     u378_20:
  6954                           	line	81
  6955                           	
  6956  055D                     i1l10414:	
  6957                           ;HMI.c: 80: {
  6958                           ;HMI.c: 81: DownDebounceCount++;
  6959  055D  3001               	movlw	(01h)
  6960  055E  00F0               	movwf	(??_Debounce+0)+0
  6961  055F  0870               	movf	(??_Debounce+0)+0,w
  6962  0560  07DC               	addwf	(_DownDebounceCount),f	;volatile
  6963                           	line	82
  6964                           	
  6965  0561                     i1l10416:	
  6966                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  6967  0561  300A               	movlw	(0Ah)
  6968  0562  025C               	subwf	(_DownDebounceCount),w	;volatile
  6969  0563  1C03               	skipc
  6970  0564  2D66               	goto	u379_21
  6971  0565  2D67               	goto	u379_20
  6972  0566                     u379_21:
  6973  0566  2D71               	goto	i1l5186
  6974  0567                     u379_20:
  6975                           	
  6976  0567                     i1l10418:	
  6977  0567  1DED               	btfss	(_DownReleased/8),(_DownReleased)&7
  6978  0568  2D6A               	goto	u380_21
  6979  0569  2D6B               	goto	u380_20
  6980  056A                     u380_21:
  6981  056A  2D71               	goto	i1l5186
  6982  056B                     u380_20:
  6983                           	line	84
  6984                           	
  6985  056B                     i1l10420:	
  6986                           ;HMI.c: 83: {
  6987                           ;HMI.c: 84: DownPressed = 1;
  6988  056B  156D               	bsf	(_DownPressed/8),(_DownPressed)&7
  6989                           	line	85
  6990                           ;HMI.c: 85: DownReleased = 0;
  6991  056C  11ED               	bcf	(_DownReleased/8),(_DownReleased)&7
  6992  056D  2D71               	goto	i1l5186
  6993                           	line	86
  6994                           	
  6995  056E                     i1l5185:	
  6996                           	line	87
  6997                           ;HMI.c: 86: }
  6998                           ;HMI.c: 87: }
  6999  056E  2D71               	goto	i1l5186
  7000                           	line	88
  7001                           	
  7002  056F                     i1l5184:	
  7003                           	line	90
  7004                           ;HMI.c: 88: else
  7005                           ;HMI.c: 89: {
  7006                           ;HMI.c: 90: DownDebounceCount = 0;
  7007  056F  01DC               	clrf	(_DownDebounceCount)	;volatile
  7008                           	line	91
  7009                           ;HMI.c: 91: DownReleased = 1;
  7010  0570  15ED               	bsf	(_DownReleased/8),(_DownReleased)&7
  7011                           	line	92
  7012                           	
  7013  0571                     i1l5186:	
  7014                           	line	94
  7015                           ;HMI.c: 92: }
  7016                           ;HMI.c: 94: if(!RB4)
  7017  0571  1A06               	btfsc	(52/8),(52)&7
  7018  0572  2D74               	goto	u381_21
  7019  0573  2D75               	goto	u381_20
  7020  0574                     u381_21:
  7021  0574  2D87               	goto	i1l5187
  7022  0575                     u381_20:
  7023                           	line	96
  7024                           	
  7025  0575                     i1l10422:	
  7026                           ;HMI.c: 95: {
  7027                           ;HMI.c: 96: LeftDebounceCount++;
  7028  0575  3001               	movlw	(01h)
  7029  0576  00F0               	movwf	(??_Debounce+0)+0
  7030  0577  0870               	movf	(??_Debounce+0)+0,w
  7031  0578  07DD               	addwf	(_LeftDebounceCount),f	;volatile
  7032                           	line	97
  7033                           	
  7034  0579                     i1l10424:	
  7035                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  7036  0579  300A               	movlw	(0Ah)
  7037  057A  025D               	subwf	(_LeftDebounceCount),w	;volatile
  7038  057B  1C03               	skipc
  7039  057C  2D7E               	goto	u382_21
  7040  057D  2D7F               	goto	u382_20
  7041  057E                     u382_21:
  7042  057E  2D89               	goto	i1l5189
  7043  057F                     u382_20:
  7044                           	
  7045  057F                     i1l10426:	
  7046  057F  1EED               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  7047  0580  2D82               	goto	u383_21
  7048  0581  2D83               	goto	u383_20
  7049  0582                     u383_21:
  7050  0582  2D89               	goto	i1l5189
  7051  0583                     u383_20:
  7052                           	line	99
  7053                           	
  7054  0583                     i1l10428:	
  7055                           ;HMI.c: 98: {
  7056                           ;HMI.c: 99: LeftPressed = 1;
  7057  0583  166D               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  7058                           	line	100
  7059                           ;HMI.c: 100: LeftReleased = 0;
  7060  0584  12ED               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  7061  0585  2D89               	goto	i1l5189
  7062                           	line	101
  7063                           	
  7064  0586                     i1l5188:	
  7065                           	line	102
  7066                           ;HMI.c: 101: }
  7067                           ;HMI.c: 102: }
  7068  0586  2D89               	goto	i1l5189
  7069                           	line	103
  7070                           	
  7071  0587                     i1l5187:	
  7072                           	line	105
  7073                           ;HMI.c: 103: else
  7074                           ;HMI.c: 104: {
  7075                           ;HMI.c: 105: LeftDebounceCount = 0;
  7076  0587  01DD               	clrf	(_LeftDebounceCount)	;volatile
  7077                           	line	106
  7078                           ;HMI.c: 106: LeftReleased = 1;
  7079  0588  16ED               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  7080                           	line	107
  7081                           	
  7082  0589                     i1l5189:	
  7083                           	line	109
  7084                           ;HMI.c: 107: }
  7085                           ;HMI.c: 109: if(!RB5)
  7086  0589  1A86               	btfsc	(53/8),(53)&7
  7087  058A  2D8C               	goto	u384_21
  7088  058B  2D8D               	goto	u384_20
  7089  058C                     u384_21:
  7090  058C  2D9F               	goto	i1l5190
  7091  058D                     u384_20:
  7092                           	line	111
  7093                           	
  7094  058D                     i1l10430:	
  7095                           ;HMI.c: 110: {
  7096                           ;HMI.c: 111: RightDebounceCount++;
  7097  058D  3001               	movlw	(01h)
  7098  058E  00F0               	movwf	(??_Debounce+0)+0
  7099  058F  0870               	movf	(??_Debounce+0)+0,w
  7100  0590  07DE               	addwf	(_RightDebounceCount),f	;volatile
  7101                           	line	112
  7102                           	
  7103  0591                     i1l10432:	
  7104                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  7105  0591  300A               	movlw	(0Ah)
  7106  0592  025E               	subwf	(_RightDebounceCount),w	;volatile
  7107  0593  1C03               	skipc
  7108  0594  2D96               	goto	u385_21
  7109  0595  2D97               	goto	u385_20
  7110  0596                     u385_21:
  7111  0596  2DA1               	goto	i1l5192
  7112  0597                     u385_20:
  7113                           	
  7114  0597                     i1l10434:	
  7115  0597  1E6E               	btfss	(_RightReleased/8),(_RightReleased)&7
  7116  0598  2D9A               	goto	u386_21
  7117  0599  2D9B               	goto	u386_20
  7118  059A                     u386_21:
  7119  059A  2DA1               	goto	i1l5192
  7120  059B                     u386_20:
  7121                           	line	114
  7122                           	
  7123  059B                     i1l10436:	
  7124                           ;HMI.c: 113: {
  7125                           ;HMI.c: 114: RightPressed = 1;
  7126  059B  15EE               	bsf	(_RightPressed/8),(_RightPressed)&7
  7127                           	line	115
  7128                           ;HMI.c: 115: RightReleased = 0;
  7129  059C  126E               	bcf	(_RightReleased/8),(_RightReleased)&7
  7130  059D  2DA1               	goto	i1l5192
  7131                           	line	116
  7132                           	
  7133  059E                     i1l5191:	
  7134                           	line	117
  7135                           ;HMI.c: 116: }
  7136                           ;HMI.c: 117: }
  7137  059E  2DA1               	goto	i1l5192
  7138                           	line	118
  7139                           	
  7140  059F                     i1l5190:	
  7141                           	line	120
  7142                           ;HMI.c: 118: else
  7143                           ;HMI.c: 119: {
  7144                           ;HMI.c: 120: RightDebounceCount = 0;
  7145  059F  01DE               	clrf	(_RightDebounceCount)	;volatile
  7146                           	line	121
  7147                           ;HMI.c: 121: RightReleased = 1;
  7148  05A0  166E               	bsf	(_RightReleased/8),(_RightReleased)&7
  7149                           	line	122
  7150                           	
  7151  05A1                     i1l5192:	
  7152                           	line	124
  7153                           ;HMI.c: 122: }
  7154                           ;HMI.c: 124: if(!RB6)
  7155  05A1  1B06               	btfsc	(54/8),(54)&7
  7156  05A2  2DA4               	goto	u387_21
  7157  05A3  2DA5               	goto	u387_20
  7158  05A4                     u387_21:
  7159  05A4  2DB7               	goto	i1l5193
  7160  05A5                     u387_20:
  7161                           	line	126
  7162                           	
  7163  05A5                     i1l10438:	
  7164                           ;HMI.c: 125: {
  7165                           ;HMI.c: 126: CenterDebounceCount++;
  7166  05A5  3001               	movlw	(01h)
  7167  05A6  00F0               	movwf	(??_Debounce+0)+0
  7168  05A7  0870               	movf	(??_Debounce+0)+0,w
  7169  05A8  07DB               	addwf	(_CenterDebounceCount),f	;volatile
  7170                           	line	127
  7171                           	
  7172  05A9                     i1l10440:	
  7173                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  7174  05A9  300A               	movlw	(0Ah)
  7175  05AA  025B               	subwf	(_CenterDebounceCount),w	;volatile
  7176  05AB  1C03               	skipc
  7177  05AC  2DAE               	goto	u388_21
  7178  05AD  2DAF               	goto	u388_20
  7179  05AE                     u388_21:
  7180  05AE  2DBA               	goto	i1l5196
  7181  05AF                     u388_20:
  7182                           	
  7183  05AF                     i1l10442:	
  7184  05AF  1CED               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  7185  05B0  2DB2               	goto	u389_21
  7186  05B1  2DB3               	goto	u389_20
  7187  05B2                     u389_21:
  7188  05B2  2DBA               	goto	i1l5196
  7189  05B3                     u389_20:
  7190                           	line	129
  7191                           	
  7192  05B3                     i1l10444:	
  7193                           ;HMI.c: 128: {
  7194                           ;HMI.c: 129: CenterPressed = 1;
  7195  05B3  146D               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  7196                           	line	130
  7197                           ;HMI.c: 130: CenterReleased = 0;
  7198  05B4  10ED               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  7199  05B5  2DBA               	goto	i1l5196
  7200                           	line	131
  7201                           	
  7202  05B6                     i1l5194:	
  7203                           	line	132
  7204                           ;HMI.c: 131: }
  7205                           ;HMI.c: 132: }
  7206  05B6  2DBA               	goto	i1l5196
  7207                           	line	133
  7208                           	
  7209  05B7                     i1l5193:	
  7210                           	line	135
  7211                           ;HMI.c: 133: else
  7212                           ;HMI.c: 134: {
  7213                           ;HMI.c: 135: CenterDebounceCount = 0;
  7214  05B7  01DB               	clrf	(_CenterDebounceCount)	;volatile
  7215                           	line	136
  7216                           ;HMI.c: 136: CenterReleased = 1;
  7217  05B8  14ED               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  7218  05B9  2DBA               	goto	i1l5196
  7219                           	line	137
  7220                           	
  7221  05BA                     i1l5195:	
  7222                           	line	138
  7223                           	
  7224  05BA                     i1l5196:	
  7225  05BA  0008               	return
  7226                           	opt stack 0
  7227                           GLOBAL	__end_of_Debounce
  7228  05BB                     	__end_of_Debounce:
  7229 ;; =============== function _Debounce ends ============
  7230                           
  7231                           	signat	_Debounce,88
  7232                           	global	_adc_read
  7233                           psect	text741,local,class=CODE,delta=2
  7234                           global __ptext741
  7235  0DF2                     __ptext741:
  7236                           
  7237 ;; *************** function _adc_read *****************
  7238 ;; Defined at:
  7239 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2    0[COMMON] unsigned int 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7253 ;;      Params:         2       0       0       0       0
  7254 ;;      Locals:         2       0       0       0       0
  7255 ;;      Temps:          2       0       0       0       0
  7256 ;;      Totals:         6       0       0       0       0
  7257 ;;Total ram usage:        6 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_adc_read_channel
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           psect	text741
  7266                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7267                           	line	61
  7268                           	global	__size_of_adc_read
  7269  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7270                           	
  7271  0DF2                     _adc_read:	
  7272                           	opt	stack 0
  7273                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7274                           	line	64
  7275                           	
  7276  0DF2                     i1l9966:	
  7277                           ;adc.c: 62: volatile unsigned int adc_value;
  7278                           ;adc.c: 64: ADRESH = 0;
  7279  0DF2  1283               	bcf	status, 5	;RP0=0, select bank0
  7280  0DF3  1303               	bcf	status, 6	;RP1=0, select bank0
  7281  0DF4  019E               	clrf	(30)	;volatile
  7282                           	line	66
  7283                           	
  7284  0DF5                     i1l9968:	
  7285                           ;adc.c: 66: GO = 1;
  7286  0DF5  151F               	bsf	(250/8),(250)&7
  7287                           	line	67
  7288                           ;adc.c: 67: while(GO) continue;
  7289  0DF6  2DF7               	goto	i1l703
  7290                           	
  7291  0DF7                     i1l704:	
  7292                           	
  7293  0DF7                     i1l703:	
  7294  0DF7  191F               	btfsc	(250/8),(250)&7
  7295  0DF8  2DFA               	goto	u319_21
  7296  0DF9  2DFB               	goto	u319_20
  7297  0DFA                     u319_21:
  7298  0DFA  2DF7               	goto	i1l703
  7299  0DFB                     u319_20:
  7300                           	
  7301  0DFB                     i1l705:	
  7302                           	line	68
  7303                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7304  0DFB  0000               nop ;#
  7305                           	line	69
  7306                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7307  0DFC  0000               nop ;#
  7308                           	line	70
  7309                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7310  0DFD  0000               nop ;#
  7311                           psect	text741
  7312                           	line	73
  7313                           	
  7314  0DFE                     i1l9970:	
  7315                           ;adc.c: 73: adc_value = ADRESH;
  7316  0DFE  1283               	bcf	status, 5	;RP0=0, select bank0
  7317  0DFF  1303               	bcf	status, 6	;RP1=0, select bank0
  7318  0E00  081E               	movf	(30),w	;volatile
  7319  0E01  00F2               	movwf	(??_adc_read+0)+0
  7320  0E02  01F3               	clrf	(??_adc_read+0)+0+1
  7321  0E03  0872               	movf	0+(??_adc_read+0)+0,w
  7322  0E04  00F4               	movwf	(adc_read@adc_value)	;volatile
  7323  0E05  0873               	movf	1+(??_adc_read+0)+0,w
  7324  0E06  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  7325                           	line	74
  7326                           ;adc.c: 74: adc_value <<= 1;
  7327  0E07  3001               	movlw	01h
  7328                           	
  7329  0E08                     u320_25:
  7330  0E08  1003               	clrc
  7331  0E09  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  7332  0E0A  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  7333  0E0B  3EFF               	addlw	-1
  7334  0E0C  1D03               	skipz
  7335  0E0D  2E08               	goto	u320_25
  7336                           	line	75
  7337                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7338  0E0E  1683               	bsf	status, 5	;RP0=1, select bank1
  7339  0E0F  1303               	bcf	status, 6	;RP1=0, select bank1
  7340  0E10  081E               	movf	(158)^080h,w	;volatile
  7341                           	line	78
  7342                           	
  7343  0E11                     i1l9972:	
  7344                           ;adc.c: 78: return (adc_value);
  7345  0E11  0875               	movf	(adc_read@adc_value+1),w	;volatile
  7346  0E12  01F1               	clrf	(?_adc_read+1)
  7347  0E13  07F1               	addwf	(?_adc_read+1)
  7348  0E14  0874               	movf	(adc_read@adc_value),w	;volatile
  7349  0E15  01F0               	clrf	(?_adc_read)
  7350  0E16  07F0               	addwf	(?_adc_read)
  7351                           
  7352  0E17  2E18               	goto	i1l706
  7353                           	
  7354  0E18                     i1l9974:	
  7355                           	line	79
  7356                           	
  7357  0E18                     i1l706:	
  7358  0E18  0008               	return
  7359                           	opt stack 0
  7360                           GLOBAL	__end_of_adc_read
  7361  0E19                     	__end_of_adc_read:
  7362 ;; =============== function _adc_read ends ============
  7363                           
  7364                           	signat	_adc_read,90
  7365                           psect	text742,local,class=CODE,delta=2
  7366                           global __ptext742
  7367  0000                     __ptext742:
  7368                           	global	btemp
  7369  007E                     	btemp set 07Eh
  7370                           
  7371                           	DABS	1,126,2	;btemp
  7372                           	global	wtemp0
  7373  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 20 17:11:12 2015

   __end_of_lcd_write_control 0DD4               ??_UpdateDisplay 0037                             pc 0002  
                          _GO 00FA                            _RD 0C60                            _WR 0C61  
                          fsr 0004           ___wmul@multiplicand 0072                           l700 0D9E  
                         _GIE 005F                           _RB0 0030                           _RC0 0038  
                         _RB2 0032                           _RC1 0039                           _RB3 0033  
                         _RC2 003A                           _RB4 0034                           _RB5 0035  
                         _RE0 0048                           _RB6 0036                           _RE1 0049  
                         _RE2 004A                           _RX9 00C6                           _TX9 04C6  
                         _pos 0057                           fsr0 0004                           indf 0000  
                ___awmod@sign 0076               ?_lcd_set_cursor 0070                          l2210 077F  
                        l2211 0781                          l2203 0E69                          l2212 0790  
                        l2220 04A4                          l2213 079D                          l2221 04E4  
                        l2214 07BE                          l2206 077C                          l2230 04F7  
                        l2222 04AB                          l2207 07A9                          l2215 07A7  
                        l2231 0534                          l2223 04F6                          l2216 07BD  
                        l2208 077D                          l2232 04FD                          l2224 04B5  
                        l2217 07BE                          l2209 07BC                          l2233 0509  
                        l2225 04BF                          l2234 051D                          l2226 04C9  
                        l2235 051E                          l2227 04D3                          l2236 051F  
                        l2228 04E2                          l1429 0F12                          l2237 053B  
                        l2229 0521                          l2238 053C                          l2239 053C  
                        l1399 0DD3                          l5210 0FBE                          l4410 0F40  
                        l5211 0FBF                          l5212 0FD0                          l5213 0FD1  
                        l5214 0FE2                          l5207 0FEA                          l5215 0FE3  
                        l4407 0F18                          l4432 0E40                          l5216 0FFF  
                        l5208 0FBD                          l4408 0F17                          l5209 0FFD  
                        l5217 0FE8                          l4409 0F21                          l3662 05D0  
                        l3663 05D7                          l3656 0DE2                          l3664 05F8  
                        l3657 0DE2                          l3665 05DF                          l3658 0DE7  
                        l3666 05FF                          l3659 0DF1                          l3667 05FF  
                        l6666 0DB7                          _CHS0 00FB                          _CHS1 00FC  
                        _CHS2 00FD                          STR_1 0632                          STR_2 0629  
                        STR_3 0644                          STR_4 064D                          STR_5 063B  
                        STR_6 065D                          STR_7 0661                          STR_8 0655  
                        STR_9 0659                          _BRGH 04C2                          _CREN 00C4  
                        u3450 0FCB                          u3451 0FCA                          u4307 05EC  
                        u3460 0FDF                          u3461 0FDE                          u4317 0DCE  
                        u3470 0DE6                          u3471 0DE5                          u4327 0D9C  
                        u4280 05C9                          u4281 05C8                          u4290 05FE  
                        u4291 05FD                          u3690 0F21                          u3691 0F20  
                        _RCIE 0465                          _RCIF 0065                          _OERR 00C1  
                        _TMR0 0001                          _SPEN 00C7                          _TXIE 0464  
                        _WREN 0C62                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4           __size_of_ADCconvert 01EB                          _Menu 0FB9  
      __end_of_lcd_write_data 0D50                          _isr1 0300                          _main 049E  
                        _init 0E41                          btemp 007E                _CenterReleased 0369  
                        start 0012                 ??_ReadButtons 0071  __size_ofi1_lcd_write_control 0014  
                       ?_Menu 0070                         l10200 0FE9                         l10202 0FEA  
                       l10210 0DDB                         l10204 0FFD                         l10212 0DE7  
                       l10206 0FFF                         l10214 0DED                         l10160 0E20  
                       l10216 0DF1                         l10208 0DD7                         l10170 0E2A  
                       l10162 0E21                         l10180 0E33                         l10172 0E2D  
                       l10164 0E23                         l10156 0E19                         l10174 0E2E  
                       l10166 0E24                         l10158 0E1C                         l10190 0FD1  
                       l10182 0FBC                         l10176 0E31                         l10168 0E27  
                       l10192 0FDF                         l10184 0FBF                         l10360 0F16  
                       l10178 0E32                         l10194 0FE3                         l10186 0FC7  
                       l10370 0F3F                         l10362 0F18                         l10196 0FE6  
                       l10188 0FCB                         l10364 0F22                         l10700 0F0C  
                       l10198 0FE7                         l10366 0F30                         l10710 0799  
                       l10702 0772                         l10368 0F3C                         l10720 07A8  
                       l10712 079D                         l10704 0781                         l10650 0D9A  
                       l10642 0D8B                         l10714 07A1                         l10706 078C  
                       l10722 07A9                         l10730 0E59                         l10644 0D8E  
                       l10652 0DBB                         l10660 0D9F                         l10716 07A5  
                       l10708 0790                         l10740 0E68                         l10732 0E5D  
                       l10724 0E41                         l10646 0D92                         l10654 0DC0  
                       l10670 05D7                         l10662 05BE                         l10718 07A6  
                       l10734 0E5F                         l10726 0E50                         l10750 04B5  
                       l10742 049E                         l10648 0D96                         l10656 0DC6  
                       l10680 05F8                         l10672 05DA                         l10664 05C2  
                       l10736 0E63                         l10728 0E55                         l10760 04CF  
                       l10752 04BB                         l10744 04A4                         l10658 0DC7  
                       l10674 05DB                         l10666 05C9                         l10690 0EF3  
                       l10682 0EE8                         l10738 0E67                         l10770 04F7  
                       l10762 04D3                         l10754 04BF                         l10746 04AB  
                       l10676 05E6                         l10668 05D0                         l10692 0EF4  
                       l10684 0EEC                         l10780 0517                         l10772 04FD  
                       l10764 04DE                         l10756 04C5                         l10748 04B1  
                       l10678 05F1                         l10694 0EFA                         l10686 0EEF  
                       l10782 0518                         l10774 050D                         l10790 0534  
                       l10766 04E3                         l10758 04C9                         l10696 0F00  
                       l10688 0EF0                         l10784 0519                         l10776 0513  
                       l10768 04E4                         l10698 0F06                         l10786 0520  
                       l10778 0516                         l10788 0521          __size_of_calibrateIR 004D  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         STR_10 0665                         STR_11 061A  
             __end_of___awmod 06CF                         _CARRY 0018               __end_of___lwdiv 0772  
             __end_of___lwmod 0FB9                         i1l703 0DF7                         i1l704 0DF7  
                       i1l705 0DFB                         i1l706 0E18                         i1l690 07C1  
                       i1l691 07F4                         i1l692 07C7                         i1l693 07CD  
                       i1l694 07D3                         i1l695 07D9                         i1l696 07DF  
                       i1l689 07E3                         i1l697 07FF                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _SSPIF 0063                         _TXREG 0019  
      lcd_write_data@databyte 0072                         _total 0059                         pclath 000A  
                 _turnlowByte 006A               ?_lcd_write_data 0070             ?_adc_read_channel 0070  
                       status 0003                         wtemp0 007E               __end_of_sprintf 0300  
            __end_of_Debounce 05BB            ??_adc_read_channel 0076              ?_readAvgDistance 0070  
                __end_of_Menu 1000    __size_of_lcd_write_control 001C              _shortMenuStrings 00DB  
                __end_of_isr1 03E5                  __end_of_main 053F                  __end_of_init 0E6A  
             rotate@direction 00E3                        ??_Menu 00E0                 ?_readDistance 0078  
      readAvgDistance@fullval 0022                        ??_isr1 004C                        ??_main 00E8  
                      ??_init 00E3           __end_of_ReadButtons 0F73                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
            __end_of_adc_read 0E19                        i1l2200 03D9                        i1l1402 0D4F  
                      i1l1410 0EBD                        i1l1411 0EBD                        i1l1405 0D32  
                      i1l1408 0EAC                        i1l1409 0E95                        i1l2190 031E  
                      i1l2191 031D                        i1l2192 0342                        i1l2193 0342  
                      i1l2194 03D9                        i1l2195 036A                        i1l2196 0383  
                      i1l2197 03AB                        i1l2198 03C8                        i1l1399 0D76  
                      i1l2199 03D8                        i1l5200 0F72                        i1l5201 0F58  
                      i1l5202 0F60                        i1l5203 0F68                        i1l5204 0F70  
                      i1l5222 0451                        i1l5223 0462                        i1l5224 049D  
                      i1l2940 06E4                        i1l5181 0557                        i1l2941 0705  
                      i1l5190 059F                        i1l5182 0556                        i1l2950 00A0  
                      i1l2942 0723                        i1l5191 059E                        i1l5183 0559  
                      i1l2951 01FE                        i1l5192 05A1                        i1l5184 056F  
                      i1l2960 01F9                        i1l2952 00E5                        i1l5193 05B7  
                      i1l5185 056E                        i1l2953 01FD                        i1l2961 01FF  
                      i1l2945 0D8A                        i1l5194 05B6                        i1l5186 0571  
                      i1l2954 012A                        i1l5195 05BA                        i1l5187 0587  
                      i1l2955 01FC                        i1l5196 05BA                        i1l5188 0586  
                      i1l2956 016F                        i1l2948 005B                        i1l5189 0589  
                      i1l2949 01FF                        i1l2957 01FB                        i1l2958 01B4  
                      i1l5199 0F50                        i1l2959 01FA                        i1l7400 0730  
                      i1l7401 0741                        i1l7402 0742                        i1l7410 0F7F  
                      i1l7403 075B                        i1l7411 0F90                        i1l7404 0769  
                      i1l7412 0F91                        i1l6700 0250                        i1l7405 0771  
                      i1l7413 0FA2                        i1l6701 025B                        i1l7414 0FB0  
                      i1l6702 0283                        i1l7415 0FB8                        i1l6703 0278  
                      i1l7408 0FB1                        i1l7600 0677                        i1l6704 0295  
                      i1l7409 0F8B                        i1l7601 0681                        i1l6705 02DA  
                      i1l7610 06CE                        i1l7602 06BD                        i1l6706 029A  
                      i1l7603 0697                        i1l6707 02E5                        i1l7604 068B  
                      i1l6708 02F9                        i1l7605 069C                        i1l6709 02FF  
                      i1l7606 069D                        i1l7607 06AE                        i1l7392 0E6D  
                      i1l7608 06BC                        i1l7393 0E77                        i1l7609 06C7  
                      i1l7394 0E8C                        i1l6690 02E6                        i1l7395 0E93  
                      i1l6691 0208                        i1l6692 021A                        i1l6693 0221  
                      i1l7398 076A                        i1l6694 021C                        i1l7399 073C  
                      i1l6695 02FA                        i1l6696 021D                        i1l6697 021E  
                      i1l6698 0236                        i1l6699 021F                        u320_25 0E08  
                      u321_20 0EBC                        u321_21 0EBB                        u402_20 0E71  
                      u410_20 0753                        u330_20 0346                        u402_21 0E70  
                      u410_21 0752                        u330_21 0345                        u410_25 074F  
                      i1l9950 07C0                        i1l9952 07DF                        i1l9960 07F4  
                      u331_20 0368                        u331_21 0367                        i1l9970 0DFE  
                      i1l9962 07F8                        i1l9954 07E1                        i1l9972 0E11  
                      i1l9964 07FF                        i1l9956 07E2                        i1l9980 0D45  
                      u403_25 0E78                        u411_25 075C                        i1l9974 0E18  
                      i1l9966 0DF2                        i1l9958 07E3                        i1l9982 0D46  
                      i1l9990 0E95                        i1l9968 0DF5                        u412_20 0768  
                      u420_20 067B                        i1l9976 0D3E                        u340_20 0F4C  
                      i1l9984 0D2B                        i1l9992 0EA5                        u332_20 0381  
                      u412_21 0767                        u420_21 067A                        u340_21 0F4B  
                      u332_21 0380                        i1l9978 0D43                        i1l9986 0D2C  
                      i1l9994 0EAC                        i1l9988 0E94                        u404_25 0E7F  
                      u405_20 0E8B                        u413_20 0F7B                        u421_20 0687  
                      u341_20 0F54                        u333_20 039A                        u325_20 0304  
                      u405_21 0E8A                        u413_21 0F7A                        u421_21 0686  
                      u341_21 0F53                        u333_21 0399                        u325_21 0303  
                      u406_20 072C                        u342_20 0F5C                        u350_20 0065  
                      u334_20 03C2                        u326_20 0318                        u406_21 072B  
                      u342_21 0F5B                        u350_21 0064                        u334_21 03C1  
                      u326_21 0317                        u414_25 0F80                        u422_25 068C  
                      u319_20 0DFB                        u415_20 0F8F                        u423_20 069B  
                      u343_20 0F64                        u351_20 006E                        u335_20 03CD  
                      u327_20 0322                        u319_21 0DFA                        u415_21 0F8E  
                      u423_21 069A                        u343_21 0F63                        u351_21 006D  
                      u335_21 03CC                        u327_21 0321                        u407_25 0731  
                      u408_20 0740                        u416_20 0F9B                        u424_20 06A7  
                      u344_20 0F6C                        u360_20 01BE                        u352_20 00AA  
                      u336_20 06E2                        u328_20 0328                        u408_21 073F  
                      u416_21 0F9A                        u424_21 06A6                        u344_21 0F6B  
                      u360_21 01BD                        u352_21 00A9                        u336_21 06E1  
                      u328_21 0327                        u416_25 0F97                        u424_25 06A3  
                      u336_25 06DE                        u361_20 01C7                        u353_20 00B3  
                      u337_20 0704                        u329_20 033E                        u361_21 01C6  
                      u353_21 00B2                        u337_21 0703                        u329_21 033D  
                      u409_25 0743                        u417_25 0FA3                        u425_25 06AF  
                      u337_25 0700                        u433_27 0D71                        u418_20 0FAF  
                      u426_20 06BB                        u354_20 00EF                        u338_20 03EF  
                      u418_21 0FAE                        u426_21 06BA                        u354_21 00EE  
                      u434_27 0D4B                        u427_20 06C1                        u419_20 066E  
                      u355_20 00F8                        u339_20 0440                        u419_21 066D  
                      u355_21 00F7                        u339_21 043F                        u339_25 043C  
                      u435_27 07F6                        u380_20 056B                        u356_20 0134  
                      u348_20 0020                        u380_21 056A                        u356_21 0133  
                      u348_21 001F                        u381_20 0575                        u357_20 013D  
                      u349_20 0029                        u381_21 0574                        u357_21 013C  
                      u349_21 0028                        u382_20 057F                        u358_20 0179  
                      u390_20 020E                        u382_21 057E                        u358_21 0178  
                      u390_21 020D                        u383_20 0583                        u375_20 0545  
                      u359_20 0182                        u391_20 0246                        u383_21 0582  
                      u375_21 0544                        u359_21 0181                        u391_21 0245  
                      u384_20 058D                        u376_20 054F                        u392_20 0259  
                      u384_21 058C                        u376_21 054E                        u392_21 0258  
                      u385_20 0597                        u377_20 0553                        u393_20 0276  
                      u385_21 0596                        u377_21 0552                        u393_21 0275  
                      u393_25 0272                        u386_20 059B                        u378_20 055D  
                      u394_20 0282                        u386_21 059A                        u378_21 055C  
                      u394_21 0281                        u387_20 05A5                        u379_20 0567  
                      u395_20 0289                        u387_21 05A4                        u379_21 0566  
                      u395_21 0288                        u388_20 05AF                        u396_20 02E4  
                      u388_21 05AE                        u396_21 02E3                        u389_20 05B3  
                      u397_20 02F8                        u389_21 05B2                        u397_21 02F7  
                      _TMR0IE 005D                        _TMR0IF 005A                        _SSPCON 0014  
                      _SSPBUF 0013                    _UpReleased 0376              __end_of_lcd_init 0F13  
                      _adcVal 0053               _UpDebounceCount 005F                        ___wmul 0E6A  
                   ??___awmod 0074                  _turnhighByte 0069                  ??_ADCconvert 0020  
                   ??___lwdiv 007A                     ??___lwmod 0024              __end_of_init_adc 0D9F  
              ??_readDistance 007A               ___awmod@divisor 0070      __end_of_lcd_write_string 0EBE  
             ___awmod@counter 0075                        _rotate 05BB                        _rxfifo 00B0  
                      clrloop 0D23                        _txfifo 00C0                        _rxiptr 0065  
                      _rxoptr 0066                        _txiptr 006B                        _txoptr 006C  
            __end_of_ser_init 0E41                        saved_w 007E                   _LeftPressed 036C  
                   ??_sprintf 002B                   _DownPressed 036A             lcd_write_string@s 0077  
          __end_of_ADCconvert 0200                __pcstackCOMMON 0070                  __pidataBANK0 0003  
                __pidataBANK1 0D33                   _ReadButtons 0F41              ??_lcd_set_cursor 0073  
                   ?_Debounce 0070                 _buttonPressed 0060           i1_lcd_write_control 0D63  
                  __pbssBANK0 0051                    __pbssBANK1 00A0             _DownDebounceCount 005C  
          _RightDebounceCount 005E                    __pmaintext 049E                       ?___wmul 0070  
                  __pintentry 0004          ?i1_lcd_write_control 0070         __end_of_UpdateDisplay 049E  
                   ?_adc_read 0070                       ?_rotate 00E3            __size_of_ser_putch 002E  
          __size_of_robo_init 0019                       i1l10100 041C                       i1l10110 0451  
                     i1l10102 0422                       i1l10030 0318                       i1l10022 0300  
                     i1l10120 0F46                       i1l10112 0462                       i1l10104 042B  
                     i1l10040 0334                       i1l10024 0304                       i1l10032 031E  
                     i1l10130 0F55                       i1l10122 0F4C                       i1l10114 0468  
                     i1l10106 0431                       i1l10050 0350                       i1l10042 0338  
                     i1l10034 0322                       i1l10026 030C                       i1l10140 0F64  
                     i1l10132 0F57                       i1l10124 0F4D                       i1l10220 0D83  
                     i1l10116 047D                       i1l10108 0440                       i1l10060 0383  
                     i1l10052 0351                       i1l10044 033E                       i1l10036 0328  
                     i1l10028 0312                       i1l10150 0F6F                       i1l10142 0F65  
                     i1l10134 0F5C                       i1l10126 0F4F                       i1l10118 0F41  
                     i1l10230 005B                       i1l10222 0D8A                       i1l10070 03C3  
                     i1l10062 039A                       i1l10054 0368                       i1l10046 0346  
                     i1l10038 0330                       i1l10152 0F70                       i1l10144 0F67  
                     i1l10136 0F5D                       i1l10128 0F54                       i1l10240 00B3  
                     i1l10232 0065                       i1l10224 0015                       i1l10080 06D5  
                     i1l10072 03C5                       i1l10064 03A7                       i1l10056 036A  
                     i1l10048 0347                       i1l10410 054F                       i1l10154 0F72  
                     i1l10146 0F6C                       i1l10138 0F5F                       i1l10250 0134  
                     i1l10242 00E5                       i1l10234 006E                       i1l10226 0020  
                     i1l10218 0D77                       i1l10082 06E3                       i1l10090 0705  
                     i1l10074 03C8                       i1l10066 03AB                       i1l10058 0381  
                     i1l10420 056B                       i1l10412 0553                       i1l10404 053F  
                     i1l10148 0F6D                       i1l10260 01B4                       i1l10252 013D  
                     i1l10244 00EF                       i1l10236 00A0                       i1l10228 0029  
                     i1l10500 02FA                       i1l10092 071E                       i1l10084 06E4  
                     i1l10076 03CD                       i1l10068 03C2                       i1l10430 058D  
                     i1l10422 0575                       i1l10414 055D                       i1l10406 0545  
                     i1l10262 01BE                       i1l10254 016F                       i1l10246 00F8  
                     i1l10238 00AA                       i1l10502 02FF                       i1l10086 06F1  
                     i1l10078 06CF                       i1l10094 03E5                       i1l10440 05A9  
                     i1l10432 0591                       i1l10424 0579                       i1l10416 0561  
                     i1l10408 0549                       i1l10600 0669                       i1l10264 01C7  
                     i1l10256 0179                       i1l10248 012A                       i1l10088 06F7  
                     i1l10096 03FC                       i1l10442 05AF                       i1l10434 0597  
                     i1l10426 057F                       i1l10418 0567                       i1l10610 0687  
                     i1l10602 066E                       i1l10258 0182                       i1l10450 020E  
                     i1l10098 0402                       i1l10444 05B3                       i1l10436 059B  
                     i1l10428 0583                       i1l10540 0E6A                       i1l10620 06A7  
                     i1l10612 068B                       i1l10604 0677                       i1l10460 023E  
                     i1l10452 0215                       i1l10438 05A5                       i1l10550 0E93  
                     i1l10542 0E6D                       i1l10630 06C7                       i1l10622 06AE  
                     i1l10614 0692                       i1l10606 067B                       i1l10470 0253  
                     i1l10462 0242                       i1l10454 0220                       i1l10446 0203  
                     i1l10544 0E71                       i1l10560 0737                       i1l10552 0724  
                     i1l10632 06CE                       i1l10624 06B5                       i1l10616 0697  
                     i1l10608 0681                       i1l10480 027C                       i1l10472 025A  
                     i1l10464 0246                       i1l10456 0221                       i1l10448 0208  
                     i1l10640 0D6C                       i1l10546 0E7E                       i1l10570 075B  
                     i1l10562 073C                       i1l10554 0726                       i1l10618 069D  
                     i1l10626 06BD                       i1l10490 029A                       i1l10482 0283  
                     i1l10474 025B                       i1l10466 024A                       i1l10458 0236  
                     i1l10634 0D64                       i1l10548 0E8C                       i1l10572 0762  
                     i1l10564 0742                       i1l10556 072C                       i1l10580 0F7B  
                     i1l10628 06C1                       i1l10492 02CE                       i1l10484 0289  
                     i1l10476 0277                       i1l10468 0250                       i1l10636 0D69  
                     i1l10566 0753                       i1l10558 0730                       i1l10574 076A  
                     i1l10590 0F9B                       i1l10582 0F7F                       i1l10494 02D5  
                     i1l10486 0290                       i1l10478 0278                       i1l10638 0D6B  
                     i1l10576 0771                       i1l10568 0759                       i1l10592 0FA2  
                     i1l10584 0F86                       i1l10496 02DA                       i1l10488 0295  
                     i1l10594 0FA9                       i1l10586 0F8B                       i1l10578 0F73  
                     i1l10498 02E6                       i1l10588 0F91                       i1l10596 0FB1  
                     i1l10598 0FB8                    ??_Debounce 0070              ??_lcd_write_data 0070  
                   ?_lcd_init 0070                       _SSPSTAT 0094          __end_of_readDistance 0D8B  
                   ?_init_adc 0070                     ?_ser_init 0070                 ??_calibrateIR 00E8  
                     ___awmod 0669         ??i1_lcd_write_control 0070               __size_of___wmul 002A  
                     ___lwdiv 0724                       ___lwmod 0F73     __size_of_adc_read_channel 0041  
                  ??_adc_read 0072               __size_of_rotate 0045                       _dpowers 0610  
    UpdateDisplay@serialInput 0070              ___awmod@dividend 0072                       _lowByte 0064  
                     _ser_tmp 0067                       _sprintf 0200                    ??_lcd_init 00E3  
        end_of_initialization 0EE4                       init_ram 0D54                    ??_init_adc 00E0  
           __end_of_ser_putch 0F41             __end_of_robo_init 0DB8                  _LeftReleased 036D  
                  ??_ser_init 00E0                       rotate@i 00E7                  _DownReleased 036B  
               _RightReleased 0374      __size_of_readAvgDistance 0055             ?_lcd_write_string 0077  
         __end_of_calibrateIR 07BF            ??_lcd_write_string 0079                   AT25256A@CS0 0038  
                 AT25256A@CS1 0039             adc_read@adc_value 0074                    _totalSteps 00D4  
                  main@choice 00E9                 ?_spi_transfer 0070                     Menu@input 00E0  
               _CenterPressed 0368                  ?_ReadButtons 0070                __end_of___wmul 0E94  
               __pbitbssBANK0 0368                __end_of_rotate 0600           start_initialization 0EBE  
       __size_of_readDistance 0014             __size_of_Debounce 007C                   rotate@steps 00E6  
              ??_spi_transfer 00E0         lcd_set_cursor@address 0073                     _UpPressed 0375  
              _RTC_FLAG_250MS 0370                _RTC_FLAG_500MS 0371                      ??___wmul 0074  
                 _calibrateIR 0772                   __pdataBANK0 006F                   __pdataBANK1 00D6  
            _adc_read_channel 07BF                      ??_rotate 00E4                  _readDistance 0D77  
           __size_of_adc_read 0027             ??_readAvgDistance 007E                 __pcstackBANK0 0020  
               __pcstackBANK1 00E0             __size_of_lcd_init 002B                   sprintf@_val 0031  
                 sprintf@flag 002F                   sprintf@prec 0030                  _current_step 006F  
            readAvgDistance@i 0024             __size_of_init_adc 0014              ___lwdiv@dividend 0078  
                    ?___awmod 0070                     __ptext720 0F13                     __ptext721 0DD4  
                   __ptext713 0E41                     __ptext730 0D63                     __ptext722 0FB9  
                   __ptext714 0772                     __ptext731 0200                     __ptext723 0E19  
                   __ptext715 0EE8                     __ptext740 053F                     __ptext732 0015  
                   __ptext724 0300                     __ptext716 05BB                     __ptext741 0DF2  
                   __ptext733 0F41                     __ptext725 03E5                     __ptext717 0D9F  
                   __ptext742 0000                     __ptext734 0D3D                     __ptext726 06CF  
                   __ptext718 0DB8                     __ptext735 07BF                     __ptext727 0D77  
                   __ptext719 0D8B                     __ptext736 0669                     __ptext728 0E94  
                   __ptext737 0F73                     __ptext729 0D2A                     __ptext738 0724  
                   __ptext739 0E6A             __size_of_ser_init 0028                      ?___lwdiv 0076  
                    ?___lwmod 0020                     __pstrings 0600                     _dist_high 0055  
         readDistance@fullval 007C              ___lwdiv@quotient 007B                      ?_sprintf 0026  
     __size_of_lcd_set_cursor 0009             interrupt_function 0004        __size_of_UpdateDisplay 00B9  
              ___wmul@product 0074                    ser_putch@c 00E1   __end_ofi1_lcd_write_control 0D77  
                   _ser_putch 0F13                     _robo_init 0D9F                  _RightPressed 0373  
        __size_of_ReadButtons 0032          __end_of_spi_transfer 0DF2                   __stringbase 060F  
           ___wmul@multiplier 0070        UpdateDisplay@adcOutput 003C              spi_transfer@data 00E2  
            spi_transfer@temp 00E1                      _Debounce 053F             _LeftDebounceCount 005D  
   __size_of_lcd_write_string 002A       __size_of_lcd_write_data 0013                    ?_ser_putch 0070  
     adc_read_channel@channel 0077                 _RTC_FLAG_10MS 036E                 _RTC_FLAG_50MS 0372  
                  ?_robo_init 0070                     init_fetch 0D50                    _ADCconvert 0015  
            __size_of___awmod 0066              __size_of___lwdiv 004E              __size_of___lwmod 0046  
               _UpdateDisplay 03E5                      _adc_read 0DF2                   _currentMenu 0061  
             ___lwdiv@divisor 0076               ___lwdiv@counter 007D                   _menuStrings 00D6  
                    _highByte 0063                      _lcd_init 0EE8                      _distance 00D2  
                    _dist_low 00D0              __size_of_sprintf 0100      __end_of_adc_read_channel 0800  
   lcd_write_control@databyte 00E2                 __size_of_Menu 0047                      _init_adc 0D8B  
               __size_of_isr1 00E5                 __size_of_main 00A1                 __size_of_init 0029  
                    clear_ram 0D22                      _ser_init 0E19               _readAvgDistance 06CF  
                ?_calibrateIR 0070                ?_UpdateDisplay 0070           _CenterDebounceCount 005B  
                _RTC_FLAG_1MS 036F            UpdateDisplay@F1222 00A0                      intlevel1 0000  
              _lcd_set_cursor 0D2A                     sprintf@ap 002E                     sprintf@sp 0035  
            ___lwmod@dividend 0022                     stringcode 060A                   _serialInput 0068  
                 ??_ser_putch 00E0                   ??_robo_init 00E2         __size_of_spi_transfer 001E  
                 ?_ADCconvert 0070             _lcd_write_control 0DB8   i1lcd_write_control@databyte 0072  
          ?_lcd_write_control 0070                    _OPTION_REG 0081                      sprintf@c 0036  
                    sprintf@f 0026               ___lwmod@divisor 0020               ___lwmod@counter 0025  
                    stringdir 060A                      stringtab 0600           ??_lcd_write_control 00E0  
      __end_of_lcd_set_cursor 0D33              _lcd_write_string 0E94                  _spi_transfer 0DD4  
           _current_direction 0062                   _RTC_Counter 0051       __end_of_readAvgDistance 0724  
              _lcd_write_data 0D3D  
