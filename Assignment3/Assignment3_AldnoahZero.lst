

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed May 20 15:10:50 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robotLoadSong
    48                           	FNCALL	_main,_robot_read
    49                           	FNCALL	_main,_readAvgDistance
    50                           	FNCALL	_main,_UpdateDisplay
    51                           	FNCALL	_main,_Menu
    52                           	FNCALL	_main,_calibrateIR
    53                           	FNCALL	_main,_Init_Follow_IR
    54                           	FNCALL	_main,_robotFollow
    55                           	FNCALL	_main,_RobotDrive
    56                           	FNCALL	_main,_robotTurnSpeed
    57                           	FNCALL	_main,_robotMoveSpeed
    58                           	FNCALL	_main,_rotate
    59                           	FNCALL	_main,_robot_turnRight
    60                           	FNCALL	_main,_ChargeMode
    61                           	FNCALL	_Init_Follow_IR,_calibrateIR
    62                           	FNCALL	_Init_Follow_IR,_rotate
    63                           	FNCALL	_ChargeMode,_ser_putch
    64                           	FNCALL	_ChargeMode,_RobotBattRead
    65                           	FNCALL	_ChargeMode,_UpdateDisplay
    66                           	FNCALL	_robot_turnRight,_RobotDrive
    67                           	FNCALL	_robot_turnRight,_readAvgDistance
    68                           	FNCALL	_robot_turnRight,_ser_putch
    69                           	FNCALL	_robot_turnRight,_robot_read
    70                           	FNCALL	_robot_turnRight,_UpdateDisplay
    71                           	FNCALL	_robot_turnRight,___wmul
    72                           	FNCALL	_robot_turnRight,___awdiv
    73                           	FNCALL	_robot_turnRight,_abs
    74                           	FNCALL	_robotMoveSpeed,_RobotDrive
    75                           	FNCALL	_robotMoveSpeed,_robot_read
    76                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    77                           	FNCALL	_robotMoveSpeed,_abs
    78                           	FNCALL	_robotTurnSpeed,_robotTurn
    79                           	FNCALL	_robotTurnSpeed,_robot_read
    80                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    81                           	FNCALL	_robotTurnSpeed,_abs
    82                           	FNCALL	_robotFollow,_RobotDrive
    83                           	FNCALL	_robotFollow,_readAvgDistance
    84                           	FNCALL	_robotFollow,_rotate
    85                           	FNCALL	_robotFollow,_robot_read
    86                           	FNCALL	_robotFollow,_UpdateDisplay
    87                           	FNCALL	_calibrateIR,_rotate
    88                           	FNCALL	_calibrateIR,_UpdateDisplay
    89                           	FNCALL	_UpdateDisplay,_lcd_write_control
    90                           	FNCALL	_UpdateDisplay,_sprintf
    91                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    92                           	FNCALL	_UpdateDisplay,_lcd_write_string
    93                           	FNCALL	_UpdateDisplay,___awmod
    94                           	FNCALL	_readAvgDistance,_readDistance
    95                           	FNCALL	_readAvgDistance,___lwdiv
    96                           	FNCALL	_readAvgDistance,_ADCconvert
    97                           	FNCALL	_init,_ser_init
    98                           	FNCALL	_init,_init_adc
    99                           	FNCALL	_init,_lcd_init
   100                           	FNCALL	_init,_robo_init
   101                           	FNCALL	_readDistance,_adc_read_channel
   102                           	FNCALL	_RobotBattRead,_ser_putch
   103                           	FNCALL	_RobotBattRead,_ser_getch
   104                           	FNCALL	_robot_read,_ser_putch
   105                           	FNCALL	_robot_read,_ser_getch
   106                           	FNCALL	_lcd_init,_lcd_write_control
   107                           	FNCALL	_lcd_write_string,_lcd_write_data
   108                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   109                           	FNCALL	_abs,___wmul
   110                           	FNCALL	_robotTurn,_ser_putch
   111                           	FNCALL	_ser_getch,_ser_isrx
   112                           	FNCALL	_sprintf,___lwdiv
   113                           	FNCALL	_sprintf,___lwmod
   114                           	FNCALL	_ADCconvert,___wmul
   115                           	FNCALL	_ADCconvert,___lwdiv
   116                           	FNCALL	_rotate,_spi_transfer
   117                           	FNCALL	_RobotDrive,_ser_putch
   118                           	FNCALL	_robotLoadSong,_ser_putch
   119                           	FNCALL	_robo_init,_ser_putch
   120                           	FNCALL	_adc_read_channel,_adc_read
   121                           	FNROOT	_main
   122                           	FNCALL	_isr1,i1___lwmod
   123                           	FNCALL	_isr1,_ReadButtons
   124                           	FNCALL	_ReadButtons,_Debounce
   125                           	FNCALL	intlevel1,_isr1
   126                           	global	intlevel1
   127                           	FNROOT	intlevel1
   128                           	global	_menuStrings
   129                           	global	_shortMenuStrings
   130                           	global	_current_step
   131                           psect	idataBANK1,class=CODE,space=0,delta=2
   132                           global __pidataBANK1
   133  1004                     __pidataBANK1:
   134                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   135                           	line	49
   136                           
   137                           ;initializer for _menuStrings
   138  1004  3453               	retlw	(STR_1-__stringbase)&0ffh
   139  1005  344A               	retlw	(STR_2-__stringbase)&0ffh
   140  1006  3465               	retlw	(STR_3-__stringbase)&0ffh
   141  1007  346E               	retlw	(STR_4-__stringbase)&0ffh
   142  1008  345C               	retlw	(STR_5-__stringbase)&0ffh
   143  1009  3441               	retlw	(STR_6-__stringbase)&0ffh
   144                           	line	50
   145                           
   146                           ;initializer for _shortMenuStrings
   147  100A  3497               	retlw	(STR_7-__stringbase)&0ffh
   148  100B  349B               	retlw	(STR_8-__stringbase)&0ffh
   149  100C  3483               	retlw	(STR_9-__stringbase)&0ffh
   150  100D  348F               	retlw	(STR_10-__stringbase)&0ffh
   151  100E  349F               	retlw	(STR_11-__stringbase)&0ffh
   152  100F  3493               	retlw	(STR_12-__stringbase)&0ffh
   153                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   154                           	line	45
   155                           
   156                           ;initializer for _current_step
   157  1010  343C               	retlw	03Ch
   158                           	global	_dpowers
   159                           psect	strings,class=STRING,delta=2
   160                           global __pstrings
   161  0800                     __pstrings:
   162                           ;	global	stringdir,stringtab,__stringbase
   163  0800                     stringtab:
   164                           ;	String table - string pointers are 1 byte each
   165  0800  1BFF               	btfsc	(btemp+1),7
   166  0801  280A               	ljmp	stringcode
   167  0802  1383               	bcf	status,7
   168  0803  187F               	btfsc	(btemp+1),0
   169  0804  1783               	bsf	status,7
   170  0805  0800               	movf	indf,w
   171  0806  0A84               	incf fsr
   172  0807  1903               skipnz
   173  0808  0AFF               incf btemp+1
   174  0809  0008               	return
   175  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   176  080A  3008               movlw high(stringdir)
   177  080B  008A               movwf pclath
   178  080C  0804               movf fsr,w
   179  080D  0A84               incf fsr
   180  080E  0782               	addwf pc
   181  080F                     __stringbase:
   182  080F  3400               	retlw	0
   183                           psect	strings
   184                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   185                           	line	350
   186  0810                     _dpowers:
   187  0810  3401               	retlw	01h
   188  0811  3400               	retlw	0
   189                           
   190  0812  340A               	retlw	0Ah
   191  0813  3400               	retlw	0
   192                           
   193  0814  3464               	retlw	064h
   194  0815  3400               	retlw	0
   195                           
   196  0816  34E8               	retlw	0E8h
   197  0817  3403               	retlw	03h
   198                           
   199  0818  3410               	retlw	010h
   200  0819  3427               	retlw	027h
   201                           
   202                           	global	_dpowers
   203                           	global	_adcVal
   204                           	global	_BumpSensors
   205                           	global	_VwallSensor
   206                           	global	UpdateDisplay@F1263
   207                           	global	_txfifo
   208                           	global	_buttonPressed
   209                           	global	_CenterPressed
   210                           	global	_CenterReleased
   211                           	global	_DownPressed
   212                           	global	_DownReleased
   213                           	global	_LeftPressed
   214                           	global	_LeftReleased
   215                           	global	_RTC_FLAG_1MS
   216                           	global	_RTC_FLAG_250MS
   217                           	global	_RTC_FLAG_500MS
   218                           	global	_RightPressed
   219                           	global	_RightReleased
   220                           	global	_UpPressed
   221                           	global	_UpReleased
   222                           	global	_rxfifo
   223                           	global	_BattCharge
   224                           	global	_BattState
   225                           	global	_Disp1
   226                           	global	_Disp2
   227                           	global	_IRdistance
   228                           	global	_RTC_Counter
   229                           	global	_TotalDistTravelled
   230                           	global	_angleTurned
   231                           	global	_distTravelled
   232                           	global	_dist_high
   233                           	global	_dist_low
   234                           	global	_pos
   235                           	global	_total
   236                           	global	_totalSteps
   237                           	global	_AngleHighByte
   238                           	global	_AngleLowByte
   239                           	global	_CenterDebounceCount
   240                           	global	_CliffSensors
   241                           	global	_DistHighByte
   242                           	global	_DistLowByte
   243                           	global	_DownDebounceCount
   244                           	global	_LeftDebounceCount
   245                           	global	_ROBOTerror
   246                           	global	_RightDebounceCount
   247                           	global	_RobotPos
   248                           	global	_UpDebounceCount
   249                           	global	_currentMenu
   250                           	global	_highByte
   251                           	global	_lowByte
   252                           	global	_rxiptr
   253                           	global	_rxoptr
   254                           	global	_ser_tmp
   255                           	global	_turnhighByte
   256                           	global	_turnlowByte
   257                           	global	_txiptr
   258                           	global	_txoptr
   259                           	global	_ADCON0
   260  001F                     _ADCON0	set	31
   261                           	global	_ADRESH
   262  001E                     _ADRESH	set	30
   263                           	global	_PORTA
   264  0005                     _PORTA	set	5
   265                           	global	_PORTD
   266  0008                     _PORTD	set	8
   267                           	global	_PORTE
   268  0009                     _PORTE	set	9
   269                           	global	_RCREG
   270  001A                     _RCREG	set	26
   271                           	global	_SSPBUF
   272  0013                     _SSPBUF	set	19
   273                           	global	_SSPCON
   274  0014                     _SSPCON	set	20
   275                           	global	_TMR0
   276  0001                     _TMR0	set	1
   277                           	global	_TXREG
   278  0019                     _TXREG	set	25
   279                           	global	AT25256A@CS0
   280  0038                     AT25256A@CS0	set	56
   281                           	global	AT25256A@CS1
   282  0039                     AT25256A@CS1	set	57
   283                           	global	_CARRY
   284  0018                     _CARRY	set	24
   285                           	global	_CHS0
   286  00FB                     _CHS0	set	251
   287                           	global	_CHS1
   288  00FC                     _CHS1	set	252
   289                           	global	_CHS2
   290  00FD                     _CHS2	set	253
   291                           	global	_CREN
   292  00C4                     _CREN	set	196
   293                           	global	_GIE
   294  005F                     _GIE	set	95
   295                           	global	_GO
   296  00FA                     _GO	set	250
   297                           	global	_OERR
   298  00C1                     _OERR	set	193
   299                           	global	_PEIE
   300  005E                     _PEIE	set	94
   301                           	global	_RB0
   302  0030                     _RB0	set	48
   303                           	global	_RB2
   304  0032                     _RB2	set	50
   305                           	global	_RB3
   306  0033                     _RB3	set	51
   307                           	global	_RB4
   308  0034                     _RB4	set	52
   309                           	global	_RB5
   310  0035                     _RB5	set	53
   311                           	global	_RB6
   312  0036                     _RB6	set	54
   313                           	global	_RC0
   314  0038                     _RC0	set	56
   315                           	global	_RC1
   316  0039                     _RC1	set	57
   317                           	global	_RC2
   318  003A                     _RC2	set	58
   319                           	global	_RCIF
   320  0065                     _RCIF	set	101
   321                           	global	_RE0
   322  0048                     _RE0	set	72
   323                           	global	_RE1
   324  0049                     _RE1	set	73
   325                           	global	_RE2
   326  004A                     _RE2	set	74
   327                           	global	_RX9
   328  00C6                     _RX9	set	198
   329                           	global	_SPEN
   330  00C7                     _SPEN	set	199
   331                           	global	_SSPIF
   332  0063                     _SSPIF	set	99
   333                           	global	_TMR0IE
   334  005D                     _TMR0IE	set	93
   335                           	global	_TMR0IF
   336  005A                     _TMR0IF	set	90
   337                           	global	_TXIF
   338  0064                     _TXIF	set	100
   339                           	global	_ADCON1
   340  009F                     _ADCON1	set	159
   341                           	global	_ADRESL
   342  009E                     _ADRESL	set	158
   343                           	global	_OPTION_REG
   344  0081                     _OPTION_REG	set	129
   345                           	global	_SPBRG
   346  0099                     _SPBRG	set	153
   347                           	global	_SSPSTAT
   348  0094                     _SSPSTAT	set	148
   349                           	global	_TRISA
   350  0085                     _TRISA	set	133
   351                           	global	_TRISB
   352  0086                     _TRISB	set	134
   353                           	global	_TRISC
   354  0087                     _TRISC	set	135
   355                           	global	_TRISD
   356  0088                     _TRISD	set	136
   357                           	global	_TRISE
   358  0089                     _TRISE	set	137
   359                           	global	_BRGH
   360  04C2                     _BRGH	set	1218
   361                           	global	_RCIE
   362  0465                     _RCIE	set	1125
   363                           	global	_SYNC
   364  04C4                     _SYNC	set	1220
   365                           	global	_TX9
   366  04C6                     _TX9	set	1222
   367                           	global	_TXEN
   368  04C5                     _TXEN	set	1221
   369                           	global	_TXIE
   370  0464                     _TXIE	set	1124
   371                           	global	_EEADR
   372  010D                     _EEADR	set	269
   373                           	global	_EEDATA
   374  010C                     _EEDATA	set	268
   375                           	global	_EECON1
   376  018C                     _EECON1	set	396
   377                           	global	_EECON2
   378  018D                     _EECON2	set	397
   379                           	global	_RD
   380  0C60                     _RD	set	3168
   381                           	global	_WR
   382  0C61                     _WR	set	3169
   383                           	global	_WREN
   384  0C62                     _WREN	set	3170
   385                           	
   386  081A                     STR_18:	
   387  081A  3420               	retlw	32	;' '
   388  081B  3443               	retlw	67	;'C'
   389  081C  3468               	retlw	104	;'h'
   390  081D  3461               	retlw	97	;'a'
   391  081E  3472               	retlw	114	;'r'
   392  081F  3467               	retlw	103	;'g'
   393  0820  3469               	retlw	105	;'i'
   394  0821  346E               	retlw	110	;'n'
   395  0822  3467               	retlw	103	;'g'
   396  0823  3420               	retlw	32	;' '
   397  0824  344D               	retlw	77	;'M'
   398  0825  346F               	retlw	111	;'o'
   399  0826  3464               	retlw	100	;'d'
   400  0827  3465               	retlw	101	;'e'
   401  0828  3420               	retlw	32	;' '
   402  0829  3400               	retlw	0
   403                           psect	strings
   404                           	
   405  082A                     STR_14:	
   406  082A  345A               	retlw	90	;'Z'
   407  082B  3465               	retlw	101	;'e'
   408  082C  3472               	retlw	114	;'r'
   409  082D  346F               	retlw	111	;'o'
   410  082E  3420               	retlw	32	;' '
   411  082F  3453               	retlw	83	;'S'
   412  0830  3474               	retlw	116	;'t'
   413  0831  3465               	retlw	101	;'e'
   414  0832  3470               	retlw	112	;'p'
   415  0833  345F               	retlw	95	;'_'
   416  0834  344D               	retlw	77	;'M'
   417  0835  346F               	retlw	111	;'o'
   418  0836  3474               	retlw	116	;'t'
   419  0837  346F               	retlw	111	;'o'
   420  0838  3472               	retlw	114	;'r'
   421  0839  3400               	retlw	0
   422                           psect	strings
   423                           	
   424  083A                     STR_13:	
   425  083A  3449               	retlw	73	;'I'
   426  083B  3452               	retlw	82	;'R'
   427  083C  343A               	retlw	58	;':'
   428  083D  3425               	retlw	37	;'%'
   429  083E  3464               	retlw	100	;'d'
   430  083F  3463               	retlw	99	;'c'
   431  0840  346D               	retlw	109	;'m'
   432  0841  3420               	retlw	32	;' '
   433  0842  3444               	retlw	68	;'D'
   434  0843  343A               	retlw	58	;':'
   435  0844  3425               	retlw	37	;'%'
   436  0845  3464               	retlw	100	;'d'
   437  0846  3400               	retlw	0
   438                           psect	strings
   439                           	
   440  0847                     STR_26:	
   441  0847  3420               	retlw	32	;' '
   442  0848  3420               	retlw	32	;' '
   443  0849  3445               	retlw	69	;'E'
   444  084A  3458               	retlw	88	;'X'
   445  084B  3449               	retlw	73	;'I'
   446  084C  3454               	retlw	84	;'T'
   447  084D  3420               	retlw	32	;' '
   448  084E  3420               	retlw	32	;' '
   449  084F  3400               	retlw	0
   450                           psect	strings
   451                           	
   452  0850                     STR_6:	
   453  0850  3420               	retlw	32	;' '
   454  0851  3443               	retlw	67	;'C'
   455  0852  3468               	retlw	104	;'h'
   456  0853  3461               	retlw	97	;'a'
   457  0854  3472               	retlw	114	;'r'
   458  0855  3467               	retlw	103	;'g'
   459  0856  3465               	retlw	101	;'e'
   460  0857  3420               	retlw	32	;' '
   461  0858  3400               	retlw	0
   462                           psect	strings
   463                           	
   464  0859                     STR_2:	
   465  0859  3453               	retlw	83	;'S'
   466  085A  3463               	retlw	99	;'c'
   467  085B  3461               	retlw	97	;'a'
   468  085C  346E               	retlw	110	;'n'
   469  085D  345F               	retlw	95	;'_'
   470  085E  3433               	retlw	51	;'3'
   471  085F  3436               	retlw	54	;'6'
   472  0860  3430               	retlw	48	;'0'
   473  0861  3400               	retlw	0
   474                           psect	strings
   475                           	
   476  0862                     STR_1:	
   477  0862  3443               	retlw	67	;'C'
   478  0863  3461               	retlw	97	;'a'
   479  0864  346C               	retlw	108	;'l'
   480  0865  3469               	retlw	105	;'i'
   481  0866  3462               	retlw	98	;'b'
   482  0867  345F               	retlw	95	;'_'
   483  0868  3449               	retlw	73	;'I'
   484  0869  3452               	retlw	82	;'R'
   485  086A  3400               	retlw	0
   486                           psect	strings
   487                           	
   488  086B                     STR_5:	
   489  086B  3446               	retlw	70	;'F'
   490  086C  346C               	retlw	108	;'l'
   491  086D  3477               	retlw	119	;'w'
   492  086E  345F               	retlw	95	;'_'
   493  086F  3457               	retlw	87	;'W'
   494  0870  3461               	retlw	97	;'a'
   495  0871  346C               	retlw	108	;'l'
   496  0872  346C               	retlw	108	;'l'
   497  0873  3400               	retlw	0
   498                           psect	strings
   499                           	
   500  0874                     STR_3:	
   501  0874  3444               	retlw	68	;'D'
   502  0875  3472               	retlw	114	;'r'
   503  0876  3469               	retlw	105	;'i'
   504  0877  3476               	retlw	118	;'v'
   505  0878  3465               	retlw	101	;'e'
   506  0879  345F               	retlw	95	;'_'
   507  087A  3432               	retlw	50	;'2'
   508  087B  346D               	retlw	109	;'m'
   509  087C  3400               	retlw	0
   510                           psect	strings
   511                           	
   512  087D                     STR_4:	
   513  087D  3444               	retlw	68	;'D'
   514  087E  3472               	retlw	114	;'r'
   515  087F  3469               	retlw	105	;'i'
   516  0880  3476               	retlw	118	;'v'
   517  0881  3465               	retlw	101	;'e'
   518  0882  345F               	retlw	95	;'_'
   519  0883  344C               	retlw	76	;'L'
   520  0884  3400               	retlw	0
   521                           psect	strings
   522                           	
   523  0885                     STR_16:	
   524  0885  3443               	retlw	67	;'C'
   525  0886  344F               	retlw	79	;'O'
   526  0887  344E               	retlw	78	;'N'
   527  0888  3446               	retlw	70	;'F'
   528  0889  3449               	retlw	73	;'I'
   529  088A  3452               	retlw	82	;'R'
   530  088B  344D               	retlw	77	;'M'
   531  088C  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  088D                     STR_19:	
   535  088D  3425               	retlw	37	;'%'
   536  088E  3464               	retlw	100	;'d'
   537  088F  346D               	retlw	109	;'m'
   538  0890  3441               	retlw	65	;'A'
   539  0891  3400               	retlw	0
   540                           psect	strings
   541                           	
   542  0892                     STR_9:	
   543  0892  3444               	retlw	68	;'D'
   544  0893  3472               	retlw	114	;'r'
   545  0894  3432               	retlw	50	;'2'
   546  0895  3400               	retlw	0
   547                           psect	strings
   548                           	
   549  0896                     STR_15:	
   550  0896  343C               	retlw	60	;'<'
   551  0897  343C               	retlw	60	;'<'
   552  0898  343C               	retlw	60	;'<'
   553  0899  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  089A                     STR_17:	
   557  089A  343E               	retlw	62	;'>'
   558  089B  343E               	retlw	62	;'>'
   559  089C  343E               	retlw	62	;'>'
   560  089D  3400               	retlw	0
   561                           psect	strings
   562                           	
   563  089E                     STR_10:	
   564  089E  3444               	retlw	68	;'D'
   565  089F  3472               	retlw	114	;'r'
   566  08A0  344C               	retlw	76	;'L'
   567  08A1  3400               	retlw	0
   568                           psect	strings
   569                           	
   570  08A2                     STR_12:	
   571  08A2  3443               	retlw	67	;'C'
   572  08A3  3468               	retlw	104	;'h'
   573  08A4  3467               	retlw	103	;'g'
   574  08A5  3400               	retlw	0
   575                           psect	strings
   576                           	
   577  08A6                     STR_7:	
   578  08A6  3443               	retlw	67	;'C'
   579  08A7  3461               	retlw	97	;'a'
   580  08A8  346C               	retlw	108	;'l'
   581  08A9  3400               	retlw	0
   582                           psect	strings
   583                           	
   584  08AA                     STR_8:	
   585  08AA  3453               	retlw	83	;'S'
   586  08AB  3463               	retlw	99	;'c'
   587  08AC  346E               	retlw	110	;'n'
   588  08AD  3400               	retlw	0
   589                           psect	strings
   590                           	
   591  08AE                     STR_11:	
   592  08AE  3446               	retlw	70	;'F'
   593  08AF  346C               	retlw	108	;'l'
   594  08B0  3477               	retlw	119	;'w'
   595  08B1  3400               	retlw	0
   596                           psect	strings
   597                           	
   598  08B2                     STR_22:	
   599  08B2  3446               	retlw	70	;'F'
   600  08B3  3443               	retlw	67	;'C'
   601  08B4  3400               	retlw	0
   602                           psect	strings
   603                           	
   604  08B5                     STR_20:	
   605  08B5  344E               	retlw	78	;'N'
   606  08B6  3443               	retlw	67	;'C'
   607  08B7  3400               	retlw	0
   608                           psect	strings
   609                           	
   610  08B8                     STR_21:	
   611  08B8  3452               	retlw	82	;'R'
   612  08B9  3443               	retlw	67	;'C'
   613  08BA  3400               	retlw	0
   614                           psect	strings
   615                           	
   616  08BB                     STR_23:	
   617  08BB  3454               	retlw	84	;'T'
   618  08BC  3443               	retlw	67	;'C'
   619  08BD  3400               	retlw	0
   620                           psect	strings
   621                           	
   622  08BE                     STR_24:	
   623  08BE  3457               	retlw	87	;'W'
   624  08BF  3461               	retlw	97	;'a'
   625  08C0  3400               	retlw	0
   626                           psect	strings
   627  08B2                     STR_25	equ	STR_22+0
   628                           	file	"Assignment3_AldnoahZero.as"
   629                           	line	#
   630                           psect cinit,class=CODE,delta=2
   631                           global start_initialization
   632  1123                     start_initialization:
   633                           
   634                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   635                           global __pbitbssCOMMON
   636  0380                     __pbitbssCOMMON:
   637  0380                     _CenterPressed:
   638  0380                            ds      1
   639                           
   640  0381                     _CenterReleased:
   641  0381                            ds      1
   642                           
   643  0382                     _DownPressed:
   644  0382                            ds      1
   645                           
   646  0383                     _DownReleased:
   647  0383                            ds      1
   648                           
   649  0384                     _LeftPressed:
   650  0384                            ds      1
   651                           
   652  0385                     _LeftReleased:
   653  0385                            ds      1
   654                           
   655  0386                     _RTC_FLAG_1MS:
   656  0386                            ds      1
   657                           
   658  0387                     _RTC_FLAG_250MS:
   659  0387                            ds      1
   660                           
   661  0388                     _RTC_FLAG_500MS:
   662  0388                            ds      1
   663                           
   664  0389                     _RightPressed:
   665  0389                            ds      1
   666                           
   667  038A                     _RightReleased:
   668  038A                            ds      1
   669                           
   670  038B                     _UpPressed:
   671  038B                            ds      1
   672                           
   673  038C                     _UpReleased:
   674  038C                            ds      1
   675                           
   676                           psect	bssCOMMON,class=COMMON,space=1
   677                           global __pbssCOMMON
   678  007D                     __pbssCOMMON:
   679  007D                     _buttonPressed:
   680  007D                            ds      1
   681                           
   682                           psect	bssBANK0,class=BANK0,space=1
   683                           global __pbssBANK0
   684  006C                     __pbssBANK0:
   685  006C                     _adcVal:
   686  006C                            ds      2
   687                           
   688  006E                     _BumpSensors:
   689  006E                            ds      1
   690                           
   691  006F                     _VwallSensor:
   692  006F                            ds      1
   693                           
   694                           psect	bssBANK1,class=BANK1,space=1
   695                           global __pbssBANK1
   696  00A0                     __pbssBANK1:
   697  00A0                     _rxfifo:
   698  00A0                            ds      16
   699                           
   700  00B0                     _BattCharge:
   701  00B0                            ds      2
   702                           
   703  00B2                     _BattState:
   704  00B2                            ds      2
   705                           
   706  00B4                     _Disp1:
   707  00B4                            ds      2
   708                           
   709  00B6                     _Disp2:
   710  00B6                            ds      2
   711                           
   712  00B8                     _IRdistance:
   713  00B8                            ds      2
   714                           
   715  00BA                     _RTC_Counter:
   716  00BA                            ds      2
   717                           
   718  00BC                     _TotalDistTravelled:
   719  00BC                            ds      2
   720                           
   721  00BE                     _angleTurned:
   722  00BE                            ds      2
   723                           
   724  00C0                     _distTravelled:
   725  00C0                            ds      2
   726                           
   727  00C2                     _dist_high:
   728  00C2                            ds      2
   729                           
   730  00C4                     _dist_low:
   731  00C4                            ds      2
   732                           
   733  00C6                     _pos:
   734  00C6                            ds      2
   735                           
   736  00C8                     _total:
   737  00C8                            ds      2
   738                           
   739  00CA                     _totalSteps:
   740  00CA                            ds      2
   741                           
   742  00CC                     _AngleHighByte:
   743  00CC                            ds      1
   744                           
   745  00CD                     _AngleLowByte:
   746  00CD                            ds      1
   747                           
   748  00CE                     _CenterDebounceCount:
   749  00CE                            ds      1
   750                           
   751  00CF                     _CliffSensors:
   752  00CF                            ds      1
   753                           
   754  00D0                     _DistHighByte:
   755  00D0                            ds      1
   756                           
   757  00D1                     _DistLowByte:
   758  00D1                            ds      1
   759                           
   760  00D2                     _DownDebounceCount:
   761  00D2                            ds      1
   762                           
   763  00D3                     _LeftDebounceCount:
   764  00D3                            ds      1
   765                           
   766  00D4                     _ROBOTerror:
   767  00D4                            ds      1
   768                           
   769  00D5                     _RightDebounceCount:
   770  00D5                            ds      1
   771                           
   772  00D6                     _RobotPos:
   773  00D6                            ds      1
   774                           
   775  00D7                     _UpDebounceCount:
   776  00D7                            ds      1
   777                           
   778  00D8                     _currentMenu:
   779  00D8                            ds      1
   780                           
   781  00D9                     _highByte:
   782  00D9                            ds      1
   783                           
   784  00DA                     _lowByte:
   785  00DA                            ds      1
   786                           
   787  00DB                     _rxiptr:
   788  00DB                            ds      1
   789                           
   790  00DC                     _rxoptr:
   791  00DC                            ds      1
   792                           
   793  00DD                     _ser_tmp:
   794  00DD                            ds      1
   795                           
   796  00DE                     _turnhighByte:
   797  00DE                            ds      1
   798                           
   799  00DF                     _turnlowByte:
   800  00DF                            ds      1
   801                           
   802  00E0                     _txiptr:
   803  00E0                            ds      1
   804                           
   805  00E1                     _txoptr:
   806  00E1                            ds      1
   807                           
   808                           psect	dataBANK1,class=BANK1,space=1
   809                           global __pdataBANK1
   810  00E2                     __pdataBANK1:
   811                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   812                           	line	49
   813  00E2                     _menuStrings:
   814  00E2                            ds      6
   815                           
   816                           psect	dataBANK1
   817                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   818                           	line	50
   819  00E8                     _shortMenuStrings:
   820  00E8                            ds      6
   821                           
   822                           psect	dataBANK1
   823                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   824                           	line	45
   825  00EE                     _current_step:
   826  00EE                            ds      1
   827                           
   828                           psect	bssBANK3,class=BANK3,space=1
   829                           global __pbssBANK3
   830  0190                     __pbssBANK3:
   831  0190                     UpdateDisplay@F1263:
   832  0190                            ds      16
   833                           
   834  01A0                     _txfifo:
   835  01A0                            ds      16
   836                           
   837                           psect clrtext,class=CODE,delta=2
   838                           global clear_ram
   839                           ;	Called with FSR containing the base address, and
   840                           ;	W with the last address+1
   841  1F89                     clear_ram:
   842  1F89  0064               	clrwdt			;clear the watchdog before getting into this loop
   843  1F8A                     clrloop:
   844  1F8A  0180               	clrf	indf		;clear RAM location pointed to by FSR
   845  1F8B  0A84               	incf	fsr,f		;increment pointer
   846  1F8C  0604               	xorwf	fsr,w		;XOR with final address
   847  1F8D  1903               	btfsc	status,2	;have we reached the end yet?
   848  1F8E  3400               	retlw	0		;all done for this memory range, return
   849  1F8F  0604               	xorwf	fsr,w		;XOR again to restore value
   850  1F90  2F8A               	goto	clrloop		;do the next byte
   851                           
   852                           ; Clear objects allocated to BITCOMMON
   853                           psect cinit,class=CODE,delta=2
   854  1123  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   855  1124  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   856                           ; Clear objects allocated to COMMON
   857                           psect cinit,class=CODE,delta=2
   858  1125  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   859                           ; Clear objects allocated to BANK0
   860                           psect cinit,class=CODE,delta=2
   861  1126  01EC               	clrf	((__pbssBANK0)+0)&07Fh
   862  1127  01ED               	clrf	((__pbssBANK0)+1)&07Fh
   863  1128  01EE               	clrf	((__pbssBANK0)+2)&07Fh
   864  1129  01EF               	clrf	((__pbssBANK0)+3)&07Fh
   865                           ; Clear objects allocated to BANK1
   866                           psect cinit,class=CODE,delta=2
   867  112A  1383               	bcf	status, 7	;select IRP bank0
   868  112B  30A0               	movlw	low(__pbssBANK1)
   869  112C  0084               	movwf	fsr
   870  112D  30E2               	movlw	low((__pbssBANK1)+042h)
   871  112E  160A  158A  2789   	fcall	clear_ram
              160A  118A         
   872                           ; Clear objects allocated to BANK3
   873                           psect cinit,class=CODE,delta=2
   874  1133  1783               	bsf	status, 7	;select IRP bank2
   875  1134  3090               	movlw	low(__pbssBANK3)
   876  1135  0084               	movwf	fsr
   877  1136  30B0               	movlw	low((__pbssBANK3)+020h)
   878  1137  160A  158A  2789   	fcall	clear_ram
              160A  118A         
   879                           global btemp
   880                           psect inittext,class=CODE,delta=2
   881                           global init_fetch,btemp
   882                           ;	Called with low address in FSR and high address in W
   883  1FAF                     init_fetch:
   884  1FAF  087E               	movf btemp,w
   885  1FB0  008A               	movwf pclath
   886  1FB1  087F               	movf btemp+1,w
   887  1FB2  0082               	movwf pc
   888                           global init_ram
   889                           ;Called with:
   890                           ;	high address of idata address in btemp 
   891                           ;	low address of idata address in btemp+1 
   892                           ;	low address of data in FSR
   893                           ;	high address + 1 of data in btemp-1
   894  1FB3                     init_ram:
   895  1FB3  160A  158A  27AF   	fcall init_fetch
              160A  158A         
   896  1FB8  0080               	movwf indf,f
   897  1FB9  0A84               	incf fsr,f
   898  1FBA  0804               	movf fsr,w
   899  1FBB  067D               	xorwf btemp-1,w
   900  1FBC  1903               	btfsc status,2
   901  1FBD  3400               	retlw 0
   902  1FBE  0AFF               	incf btemp+1,f
   903  1FBF  1903               	btfsc status,2
   904  1FC0  0AFE               	incf btemp,f
   905  1FC1  2FB3               	goto init_ram
   906                           ; Initialize objects allocated to BANK1
   907                           psect cinit,class=CODE,delta=2
   908                           global init_ram, __pidataBANK1
   909  113C  1383               	bcf	status, 7	;select IRP bank0
   910  113D  30EF               	movlw low(__pdataBANK1+13)
   911  113E  00FD               	movwf btemp-1,f
   912  113F  3010               	movlw high(__pidataBANK1)
   913  1140  00FE               	movwf btemp,f
   914  1141  3004               	movlw low(__pidataBANK1)
   915  1142  00FF               	movwf btemp+1,f
   916  1143  30E2               	movlw low(__pdataBANK1)
   917  1144  0084               	movwf fsr,f
   918  1145  160A  158A  27B3   	fcall init_ram
              160A  118A         
   919                           psect cinit,class=CODE,delta=2
   920                           global end_of_initialization
   921                           
   922                           ;End of C runtime variable initialization code
   923                           
   924  114A                     end_of_initialization:
   925  114A  0183               clrf status
   926  114B  120A  118A  2A9C   ljmp _main	;jump to C main() function
   927                           psect	cstackCOMMON,class=COMMON,space=1
   928                           global __pcstackCOMMON
   929  0072                     __pcstackCOMMON:
   930                           	global	?_ser_init
   931  0072                     ?_ser_init:	; 0 bytes @ 0x0
   932                           	global	?_robo_init
   933  0072                     ?_robo_init:	; 0 bytes @ 0x0
   934                           	global	?_robotLoadSong
   935  0072                     ?_robotLoadSong:	; 0 bytes @ 0x0
   936                           	global	?_robot_read
   937  0072                     ?_robot_read:	; 0 bytes @ 0x0
   938                           	global	?_readAvgDistance
   939  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   940                           	global	?_UpdateDisplay
   941  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   942                           	global	?_calibrateIR
   943  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   944                           	global	?_Init_Follow_IR
   945  0072                     ?_Init_Follow_IR:	; 0 bytes @ 0x0
   946                           	global	?_ChargeMode
   947  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   948                           	global	?_ser_putch
   949  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   950                           	global	?_RobotBattRead
   951  0072                     ?_RobotBattRead:	; 0 bytes @ 0x0
   952                           	global	?_ADCconvert
   953  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   954                           	global	?_init_adc
   955  0072                     ?_init_adc:	; 0 bytes @ 0x0
   956                           	global	?_lcd_write_control
   957  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   958                           	global	?_lcd_write_data
   959  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   960                           	global	?_lcd_set_cursor
   961  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   962                           	global	?_lcd_init
   963  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   964                           	global	?_isr1
   965  0072                     ?_isr1:	; 0 bytes @ 0x0
   966                           	global	?_init
   967  0072                     ?_init:	; 0 bytes @ 0x0
   968                           	global	?_main
   969  0072                     ?_main:	; 0 bytes @ 0x0
   970                           	global	?_Debounce
   971  0072                     ?_Debounce:	; 0 bytes @ 0x0
   972                           	global	??_Debounce
   973  0072                     ??_Debounce:	; 0 bytes @ 0x0
   974                           	global	?_ser_isrx
   975  0072                     ?_ser_isrx:	; 1 bit 
   976                           	global	?_ReadButtons
   977  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   978                           	global	?_Menu
   979  0072                     ?_Menu:	; 1 bytes @ 0x0
   980                           	global	?_ser_getch
   981  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   982                           	global	?_adc_read_channel
   983  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   984                           	global	?_spi_transfer
   985  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   986                           	global	?i1___lwmod
   987  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   988                           	global	i1___lwmod@divisor
   989  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   990  0072                     	ds	1
   991                           	global	??_ReadButtons
   992  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   993  0073                     	ds	1
   994                           	global	i1___lwmod@dividend
   995  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   996  0074                     	ds	2
   997                           	global	??i1___lwmod
   998  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   999  0076                     	ds	1
  1000                           	global	i1___lwmod@counter
  1001  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
  1002  0077                     	ds	1
  1003                           	global	??_isr1
  1004  0078                     ??_isr1:	; 0 bytes @ 0x6
  1005  0078                     	ds	5
  1006                           psect	cstackBANK0,class=BANK0,space=1
  1007                           global __pcstackBANK0
  1008  0020                     __pcstackBANK0:
  1009                           	global	??_ser_init
  1010  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1011                           	global	??_Menu
  1012  0020                     ??_Menu:	; 0 bytes @ 0x0
  1013                           	global	??_ser_putch
  1014  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1015                           	global	??_ser_getch
  1016  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1017                           	global	??_init_adc
  1018  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1019                           	global	??_lcd_write_control
  1020  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1021                           	global	??_lcd_write_data
  1022  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1023                           	global	??_spi_transfer
  1024  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1025                           	global	??_ser_isrx
  1026  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1027                           	global	?_adc_read
  1028  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1029                           	global	?___wmul
  1030  0020                     ?___wmul:	; 2 bytes @ 0x0
  1031                           	global	?___awmod
  1032  0020                     ?___awmod:	; 2 bytes @ 0x0
  1033                           	global	Menu@BTN_input
  1034  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1035                           	global	___wmul@multiplier
  1036  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1037                           	global	___awmod@divisor
  1038  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1039  0020                     	ds	1
  1040                           	global	spi_transfer@temp
  1041  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1042                           	global	ser_getch@c
  1043  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1044                           	global	ser_putch@c
  1045  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1046  0021                     	ds	1
  1047                           	global	??_adc_read
  1048  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1049                           	global	??_robo_init
  1050  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1051                           	global	??_robotLoadSong
  1052  0022                     ??_robotLoadSong:	; 0 bytes @ 0x2
  1053                           	global	??_robot_read
  1054  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1055                           	global	??_RobotBattRead
  1056  0022                     ??_RobotBattRead:	; 0 bytes @ 0x2
  1057                           	global	?_robotTurn
  1058  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1059                           	global	lcd_write_control@databyte
  1060  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1061                           	global	lcd_write_data@databyte
  1062  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1063                           	global	spi_transfer@data
  1064  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1065                           	global	robotTurn@angle
  1066  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1067                           	global	___wmul@multiplicand
  1068  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1069                           	global	___awmod@dividend
  1070  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1071  0022                     	ds	1
  1072                           	global	?_rotate
  1073  0023                     ?_rotate:	; 0 bytes @ 0x3
  1074                           	global	??_lcd_set_cursor
  1075  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1076                           	global	??_lcd_init
  1077  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1078                           	global	??_init
  1079  0023                     ??_init:	; 0 bytes @ 0x3
  1080                           	global	lcd_set_cursor@address
  1081  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1082                           	global	robot_read@readType
  1083  0023                     robot_read@readType:	; 1 bytes @ 0x3
  1084                           	global	rotate@numsteps
  1085  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1086  0023                     	ds	1
  1087                           	global	??_robotTurn
  1088  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1089                           	global	??___wmul
  1090  0024                     ??___wmul:	; 0 bytes @ 0x4
  1091                           	global	??___awmod
  1092  0024                     ??___awmod:	; 0 bytes @ 0x4
  1093                           	global	adc_read@adc_value
  1094  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1095                           	global	RobotBattRead@temp1
  1096  0024                     RobotBattRead@temp1:	; 2 bytes @ 0x4
  1097                           	global	___wmul@product
  1098  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1099  0024                     	ds	1
  1100                           	global	rotate@direction
  1101  0025                     rotate@direction:	; 1 bytes @ 0x5
  1102                           	global	___awmod@counter
  1103  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1104  0025                     	ds	1
  1105                           	global	??_rotate
  1106  0026                     ??_rotate:	; 0 bytes @ 0x6
  1107                           	global	??_adc_read_channel
  1108  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1109                           	global	?_abs
  1110  0026                     ?_abs:	; 2 bytes @ 0x6
  1111                           	global	?___lwdiv
  1112  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1113                           	global	?___awdiv
  1114  0026                     ?___awdiv:	; 2 bytes @ 0x6
  1115                           	global	___awmod@sign
  1116  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1117                           	global	abs@v
  1118  0026                     abs@v:	; 2 bytes @ 0x6
  1119                           	global	___lwdiv@divisor
  1120  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1121                           	global	___awdiv@divisor
  1122  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
  1123  0026                     	ds	1
  1124                           	global	?_lcd_write_string
  1125  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1126                           	global	adc_read_channel@channel
  1127  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1128                           	global	lcd_write_string@s
  1129  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1130  0027                     	ds	1
  1131                           	global	??_abs
  1132  0028                     ??_abs:	; 0 bytes @ 0x8
  1133                           	global	?_readDistance
  1134  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1135                           	global	rotate@i
  1136  0028                     rotate@i:	; 2 bytes @ 0x8
  1137                           	global	___lwdiv@dividend
  1138  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1139                           	global	___awdiv@dividend
  1140  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
  1141  0028                     	ds	1
  1142                           	global	??_lcd_write_string
  1143  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1144  0029                     	ds	1
  1145                           	global	??_readDistance
  1146  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1147                           	global	??___lwdiv
  1148  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1149                           	global	??___awdiv
  1150  002A                     ??___awdiv:	; 0 bytes @ 0xA
  1151  002A                     	ds	1
  1152                           	global	___awdiv@counter
  1153  002B                     ___awdiv@counter:	; 1 bytes @ 0xB
  1154                           	global	___lwdiv@quotient
  1155  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1156  002B                     	ds	1
  1157                           	global	___awdiv@sign
  1158  002C                     ___awdiv@sign:	; 1 bytes @ 0xC
  1159                           	global	readDistance@readVal
  1160  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1161  002C                     	ds	1
  1162                           	global	___lwdiv@counter
  1163  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1164                           	global	___awdiv@quotient
  1165  002D                     ___awdiv@quotient:	; 2 bytes @ 0xD
  1166  002D                     	ds	1
  1167                           	global	??_ADCconvert
  1168  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1169                           	global	?___lwmod
  1170  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1171                           	global	___lwmod@divisor
  1172  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1173  002E                     	ds	1
  1174                           	global	?_RobotDrive
  1175  002F                     ?_RobotDrive:	; 0 bytes @ 0xF
  1176                           	global	RobotDrive@speed
  1177  002F                     RobotDrive@speed:	; 2 bytes @ 0xF
  1178  002F                     	ds	1
  1179                           	global	??_readAvgDistance
  1180  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1181                           	global	readAvgDistance@fullval
  1182  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1183                           	global	___lwmod@dividend
  1184  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1185  0030                     	ds	1
  1186                           	global	RobotDrive@radius
  1187  0031                     RobotDrive@radius:	; 2 bytes @ 0x11
  1188  0031                     	ds	1
  1189                           	global	??___lwmod
  1190  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1191                           	global	readAvgDistance@j
  1192  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1193  0032                     	ds	1
  1194                           	global	??_RobotDrive
  1195  0033                     ??_RobotDrive:	; 0 bytes @ 0x13
  1196                           	global	___lwmod@counter
  1197  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1198  0033                     	ds	1
  1199                           	global	?_sprintf
  1200  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1201                           	global	RobotDrive@speedlowByte
  1202  0034                     RobotDrive@speedlowByte:	; 1 bytes @ 0x14
  1203                           	global	sprintf@f
  1204  0034                     sprintf@f:	; 1 bytes @ 0x14
  1205                           	global	readAvgDistance@tempIR
  1206  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1207  0034                     	ds	1
  1208                           	global	RobotDrive@speedhighByte
  1209  0035                     RobotDrive@speedhighByte:	; 1 bytes @ 0x15
  1210  0035                     	ds	1
  1211                           	global	RobotDrive@radiuslowByte
  1212  0036                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x16
  1213                           	global	readAvgDistance@i
  1214  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1215  0036                     	ds	1
  1216                           	global	RobotDrive@radiushighByte
  1217  0037                     RobotDrive@radiushighByte:	; 1 bytes @ 0x17
  1218  0037                     	ds	2
  1219                           	global	??_sprintf
  1220  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1221  0039                     	ds	3
  1222                           	global	sprintf@ap
  1223  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1224  003C                     	ds	1
  1225                           	global	sprintf@flag
  1226  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1227  003D                     	ds	1
  1228                           	global	sprintf@prec
  1229  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1230  003E                     	ds	1
  1231                           	global	sprintf@_val
  1232  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1233  003F                     	ds	4
  1234                           	global	sprintf@sp
  1235  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1236  0043                     	ds	1
  1237                           	global	sprintf@c
  1238  0044                     sprintf@c:	; 1 bytes @ 0x24
  1239  0044                     	ds	1
  1240                           	global	??_UpdateDisplay
  1241  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1242  0045                     	ds	4
  1243                           	global	UpdateDisplay@LCDOutput
  1244  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1245  0049                     	ds	16
  1246                           	global	??_calibrateIR
  1247  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1248                           	global	??_Init_Follow_IR
  1249  0059                     ??_Init_Follow_IR:	; 0 bytes @ 0x39
  1250                           	global	?_robotFollow
  1251  0059                     ?_robotFollow:	; 0 bytes @ 0x39
  1252                           	global	?_robotTurnSpeed
  1253  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1254                           	global	?_robotMoveSpeed
  1255  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1256                           	global	?_robot_turnRight
  1257  0059                     ?_robot_turnRight:	; 0 bytes @ 0x39
  1258                           	global	??_ChargeMode
  1259  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1260                           	global	robotFollow@speed
  1261  0059                     robotFollow@speed:	; 2 bytes @ 0x39
  1262                           	global	robot_turnRight@speed
  1263  0059                     robot_turnRight@speed:	; 2 bytes @ 0x39
  1264                           	global	robotMoveSpeed@distance
  1265  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1266                           	global	robotTurnSpeed@angle
  1267  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1268  0059                     	ds	2
  1269                           	global	robotFollow@AdcTarget
  1270  005B                     robotFollow@AdcTarget:	; 2 bytes @ 0x3B
  1271                           	global	robot_turnRight@AdcTarget
  1272  005B                     robot_turnRight@AdcTarget:	; 2 bytes @ 0x3B
  1273                           	global	robotMoveSpeed@speed
  1274  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1275                           	global	robotTurnSpeed@speed
  1276  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1277  005B                     	ds	2
  1278                           	global	??_robotTurnSpeed
  1279  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1280                           	global	??_robotMoveSpeed
  1281  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1282                           	global	??_robot_turnRight
  1283  005D                     ??_robot_turnRight:	; 0 bytes @ 0x3D
  1284                           	global	robotFollow@followDir
  1285  005D                     robotFollow@followDir:	; 1 bytes @ 0x3D
  1286  005D                     	ds	1
  1287                           	global	??_robotFollow
  1288  005E                     ??_robotFollow:	; 0 bytes @ 0x3E
  1289  005E                     	ds	2
  1290                           	global	robot_turnRight@turnTarget
  1291  0060                     robot_turnRight@turnTarget:	; 2 bytes @ 0x40
  1292                           	global	robotMoveSpeed@temp1
  1293  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1294                           	global	robotTurnSpeed@temp1
  1295  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1296  0060                     	ds	2
  1297                           	global	robotFollow@temp1
  1298  0062                     robotFollow@temp1:	; 2 bytes @ 0x42
  1299                           	global	robot_turnRight@temp1
  1300  0062                     robot_turnRight@temp1:	; 2 bytes @ 0x42
  1301  0062                     	ds	2
  1302                           	global	robotFollow@hysterysis
  1303  0064                     robotFollow@hysterysis:	; 1 bytes @ 0x44
  1304  0064                     	ds	1
  1305                           	global	??_main
  1306  0065                     ??_main:	; 0 bytes @ 0x45
  1307  0065                     	ds	3
  1308                           	global	main@shortwall
  1309  0068                     main@shortwall:	; 2 bytes @ 0x48
  1310  0068                     	ds	2
  1311                           	global	main@choice
  1312  006A                     main@choice:	; 1 bytes @ 0x4A
  1313  006A                     	ds	1
  1314                           	global	main@currentFlw
  1315  006B                     main@currentFlw:	; 1 bytes @ 0x4B
  1316  006B                     	ds	1
  1317 ;;Data sizes: Strings 167, constant 10, data 13, bss 103, persistent 0 stack 0
  1318 ;;Auto spaces:   Size  Autos    Used
  1319 ;; COMMON          14     11      14
  1320 ;; BANK0           80     76      80
  1321 ;; BANK1           80      0      79
  1322 ;; BANK3           96      0      32
  1323 ;; BANK2           96      0       0
  1324                           
  1325 ;;
  1326 ;; Pointer list with targets:
  1327                           
  1328 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1329 ;;
  1330 ;; ?_abs	int  size(1) Largest target is 0
  1331 ;;
  1332 ;; ?___awdiv	int  size(1) Largest target is 0
  1333 ;;
  1334 ;; ?___awmod	int  size(1) Largest target is 0
  1335 ;;
  1336 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1337 ;;
  1338 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1339 ;;
  1340 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1341 ;;
  1342 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1343 ;;
  1344 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1345 ;;
  1346 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1347 ;;		 -> STR_19(CODE[5]), STR_13(CODE[13]), 
  1348 ;;
  1349 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1350 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1351 ;;
  1352 ;; ?_sprintf	int  size(1) Largest target is 0
  1353 ;;
  1354 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1355 ;;		 -> ?_sprintf(BANK0[2]), 
  1356 ;;
  1357 ;; S8267$_cp	PTR const unsigned char  size(1) Largest target is 0
  1358 ;;
  1359 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1360 ;;
  1361 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1362 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1363 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1364 ;;
  1365 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1366 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1367 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1368 ;;
  1369 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1370 ;;		 -> STR_26(CODE[9]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
  1371 ;;		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_18(CODE[16]), 
  1372 ;;		 -> STR_17(CODE[4]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[16]), 
  1373 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1374 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1375 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1376 ;;		 -> STR_1(CODE[9]), 
  1377 ;;
  1378                           
  1379                           
  1380 ;;
  1381 ;; Critical Paths under _main in COMMON
  1382 ;;
  1383 ;;   None.
  1384 ;;
  1385 ;; Critical Paths under _isr1 in COMMON
  1386 ;;
  1387 ;;   _isr1->i1___lwmod
  1388 ;;   _ReadButtons->_Debounce
  1389 ;;
  1390 ;; Critical Paths under _main in BANK0
  1391 ;;
  1392 ;;   _main->_robotFollow
  1393 ;;   _ChargeMode->_UpdateDisplay
  1394 ;;   _robot_turnRight->_UpdateDisplay
  1395 ;;   _robotMoveSpeed->_UpdateDisplay
  1396 ;;   _robotTurnSpeed->_UpdateDisplay
  1397 ;;   _robotFollow->_UpdateDisplay
  1398 ;;   _calibrateIR->_UpdateDisplay
  1399 ;;   _UpdateDisplay->_sprintf
  1400 ;;   _readAvgDistance->_ADCconvert
  1401 ;;   _readDistance->_adc_read_channel
  1402 ;;   _RobotBattRead->_ser_putch
  1403 ;;   _RobotBattRead->_ser_getch
  1404 ;;   _robot_read->_ser_putch
  1405 ;;   _robot_read->_ser_getch
  1406 ;;   _lcd_init->_lcd_write_control
  1407 ;;   _lcd_write_string->___awmod
  1408 ;;   _lcd_set_cursor->_lcd_write_control
  1409 ;;   _abs->___wmul
  1410 ;;   _robotTurn->_ser_putch
  1411 ;;   _sprintf->___lwmod
  1412 ;;   _ADCconvert->___lwdiv
  1413 ;;   _rotate->_spi_transfer
  1414 ;;   _RobotDrive->___awdiv
  1415 ;;   _robotLoadSong->_ser_putch
  1416 ;;   _robo_init->_ser_putch
  1417 ;;   _adc_read_channel->_adc_read
  1418 ;;   ___awdiv->___wmul
  1419 ;;   ___lwmod->___lwdiv
  1420 ;;   ___lwdiv->___wmul
  1421 ;;
  1422 ;; Critical Paths under _isr1 in BANK0
  1423 ;;
  1424 ;;   None.
  1425 ;;
  1426 ;; Critical Paths under _main in BANK1
  1427 ;;
  1428 ;;   None.
  1429 ;;
  1430 ;; Critical Paths under _isr1 in BANK1
  1431 ;;
  1432 ;;   None.
  1433 ;;
  1434 ;; Critical Paths under _main in BANK3
  1435 ;;
  1436 ;;   None.
  1437 ;;
  1438 ;; Critical Paths under _isr1 in BANK3
  1439 ;;
  1440 ;;   None.
  1441 ;;
  1442 ;; Critical Paths under _main in BANK2
  1443 ;;
  1444 ;;   None.
  1445 ;;
  1446 ;; Critical Paths under _isr1 in BANK2
  1447 ;;
  1448 ;;   None.
  1449                           
  1450 ;;
  1451 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1452 ;;
  1453                           
  1454 ;;
  1455 ;;Call Graph Tables:
  1456 ;;
  1457 ;; ---------------------------------------------------------------------------------
  1458 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1459 ;; ---------------------------------------------------------------------------------
  1460 ;; (0) _main                                                 7     7      0   16918
  1461 ;;                                             69 BANK0      7     7      0
  1462 ;;                               _init
  1463 ;;                      _robotLoadSong
  1464 ;;                         _robot_read
  1465 ;;                    _readAvgDistance
  1466 ;;                      _UpdateDisplay
  1467 ;;                               _Menu
  1468 ;;                        _calibrateIR
  1469 ;;                     _Init_Follow_IR
  1470 ;;                        _robotFollow
  1471 ;;                         _RobotDrive
  1472 ;;                     _robotTurnSpeed
  1473 ;;                     _robotMoveSpeed
  1474 ;;                             _rotate
  1475 ;;                    _robot_turnRight
  1476 ;;                         _ChargeMode
  1477 ;; ---------------------------------------------------------------------------------
  1478 ;; (1) _Init_Follow_IR                                       3     3      0    1567
  1479 ;;                                             57 BANK0      3     3      0
  1480 ;;                        _calibrateIR
  1481 ;;                             _rotate
  1482 ;; ---------------------------------------------------------------------------------
  1483 ;; (1) _ChargeMode                                           1     1      0    1442
  1484 ;;                                             57 BANK0      1     1      0
  1485 ;;                          _ser_putch
  1486 ;;                      _RobotBattRead
  1487 ;;                      _UpdateDisplay
  1488 ;; ---------------------------------------------------------------------------------
  1489 ;; (1) _robot_turnRight                                     11     7      4    3290
  1490 ;;                                             57 BANK0     11     7      4
  1491 ;;                         _RobotDrive
  1492 ;;                    _readAvgDistance
  1493 ;;                          _ser_putch
  1494 ;;                         _robot_read
  1495 ;;                      _UpdateDisplay
  1496 ;;                             ___wmul
  1497 ;;                            ___awdiv
  1498 ;;                                _abs
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; (1) _robotMoveSpeed                                       9     5      4    1933
  1501 ;;                                             57 BANK0      9     5      4
  1502 ;;                         _RobotDrive
  1503 ;;                         _robot_read
  1504 ;;                      _UpdateDisplay
  1505 ;;                                _abs
  1506 ;; ---------------------------------------------------------------------------------
  1507 ;; (1) _robotTurnSpeed                                       9     5      4    1776
  1508 ;;                                             57 BANK0      9     5      4
  1509 ;;                          _robotTurn
  1510 ;;                         _robot_read
  1511 ;;                      _UpdateDisplay
  1512 ;;                                _abs
  1513 ;; ---------------------------------------------------------------------------------
  1514 ;; (1) _robotFollow                                         12     7      5    2831
  1515 ;;                                             57 BANK0     12     7      5
  1516 ;;                         _RobotDrive
  1517 ;;                    _readAvgDistance
  1518 ;;                             _rotate
  1519 ;;                         _robot_read
  1520 ;;                      _UpdateDisplay
  1521 ;; ---------------------------------------------------------------------------------
  1522 ;; (2) _calibrateIR                                          0     0      0    1447
  1523 ;;                             _rotate
  1524 ;;                      _UpdateDisplay
  1525 ;; ---------------------------------------------------------------------------------
  1526 ;; (2) _UpdateDisplay                                       20    20      0    1327
  1527 ;;                                             37 BANK0     20    20      0
  1528 ;;                  _lcd_write_control
  1529 ;;                            _sprintf
  1530 ;;                     _lcd_set_cursor
  1531 ;;                   _lcd_write_string
  1532 ;;                            ___awmod
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (2) _readAvgDistance                                      8     8      0     625
  1535 ;;                                             16 BANK0      8     8      0
  1536 ;;                       _readDistance
  1537 ;;                            ___lwdiv
  1538 ;;                         _ADCconvert
  1539 ;; ---------------------------------------------------------------------------------
  1540 ;; (1) _init                                                 1     1      0      44
  1541 ;;                                              3 BANK0      1     1      0
  1542 ;;                           _ser_init
  1543 ;;                           _init_adc
  1544 ;;                           _lcd_init
  1545 ;;                          _robo_init
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (3) _readDistance                                         6     4      2      69
  1548 ;;                                              8 BANK0      6     4      2
  1549 ;;                   _adc_read_channel
  1550 ;; ---------------------------------------------------------------------------------
  1551 ;; (2) _RobotBattRead                                        4     4      0      93
  1552 ;;                                              2 BANK0      4     4      0
  1553 ;;                          _ser_putch
  1554 ;;                          _ser_getch
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (2) _robot_read                                           2     2      0     133
  1557 ;;                                              2 BANK0      2     2      0
  1558 ;;                          _ser_putch
  1559 ;;                          _ser_getch
  1560 ;; ---------------------------------------------------------------------------------
  1561 ;; (2) _lcd_init                                             0     0      0      22
  1562 ;;                  _lcd_write_control
  1563 ;; ---------------------------------------------------------------------------------
  1564 ;; (3) _lcd_write_string                                     2     0      2      67
  1565 ;;                                              7 BANK0      2     0      2
  1566 ;;                     _lcd_write_data
  1567 ;;                            ___awmod (ARG)
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1570 ;;                                              3 BANK0      1     1      0
  1571 ;;                  _lcd_write_control
  1572 ;; ---------------------------------------------------------------------------------
  1573 ;; (2) _abs                                                  4     2      2     158
  1574 ;;                                              6 BANK0      4     2      2
  1575 ;;                             ___wmul
  1576 ;; ---------------------------------------------------------------------------------
  1577 ;; (2) _robotTurn                                            2     0      2      66
  1578 ;;                                              2 BANK0      2     0      2
  1579 ;;                          _ser_putch
  1580 ;; ---------------------------------------------------------------------------------
  1581 ;; (3) _ser_getch                                            2     2      0      23
  1582 ;;                                              0 BANK0      2     2      0
  1583 ;;                           _ser_isrx
  1584 ;; ---------------------------------------------------------------------------------
  1585 ;; (3) _sprintf                                             17    12      5     798
  1586 ;;                                             20 BANK0     17    12      5
  1587 ;;                            ___lwdiv
  1588 ;;                            ___lwmod
  1589 ;; ---------------------------------------------------------------------------------
  1590 ;; (3) _ADCconvert                                           2     2      0     254
  1591 ;;                                             14 BANK0      2     2      0
  1592 ;;                             ___wmul
  1593 ;;                            ___lwdiv
  1594 ;; ---------------------------------------------------------------------------------
  1595 ;; (1) _rotate                                               7     4      3     120
  1596 ;;                                              3 BANK0      7     4      3
  1597 ;;                       _spi_transfer
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (2) _RobotDrive                                           9     5      4     202
  1600 ;;                                             15 BANK0      9     5      4
  1601 ;;                          _ser_putch
  1602 ;;                            ___awdiv (ARG)
  1603 ;;                             ___wmul (ARG)
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (1) _robotLoadSong                                        0     0      0      22
  1606 ;;                          _ser_putch
  1607 ;; ---------------------------------------------------------------------------------
  1608 ;; (2) _robo_init                                            0     0      0      22
  1609 ;;                          _ser_putch
  1610 ;; ---------------------------------------------------------------------------------
  1611 ;; (4) _lcd_write_data                                       3     3      0      22
  1612 ;;                                              0 BANK0      3     3      0
  1613 ;; ---------------------------------------------------------------------------------
  1614 ;; (4) _lcd_write_control                                    3     3      0      22
  1615 ;;                                              0 BANK0      3     3      0
  1616 ;; ---------------------------------------------------------------------------------
  1617 ;; (2) _init_adc                                             1     1      0       0
  1618 ;;                                              0 BANK0      1     1      0
  1619 ;; ---------------------------------------------------------------------------------
  1620 ;; (4) _adc_read_channel                                     2     2      0      46
  1621 ;;                                              6 BANK0      2     2      0
  1622 ;;                           _adc_read
  1623 ;; ---------------------------------------------------------------------------------
  1624 ;; (3) ___awmod                                              7     3      4     296
  1625 ;;                                              0 BANK0      7     3      4
  1626 ;; ---------------------------------------------------------------------------------
  1627 ;; (2) ___awdiv                                              9     5      4     300
  1628 ;;                                              6 BANK0      9     5      4
  1629 ;;                             ___wmul (ARG)
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (4) ___lwmod                                              6     2      4     159
  1632 ;;                                             14 BANK0      6     2      4
  1633 ;;                            ___lwdiv (ARG)
  1634 ;; ---------------------------------------------------------------------------------
  1635 ;; (4) ___lwdiv                                              8     4      4     162
  1636 ;;                                              6 BANK0      8     4      4
  1637 ;;                             ___wmul (ARG)
  1638 ;; ---------------------------------------------------------------------------------
  1639 ;; (3) ___wmul                                               6     2      4      92
  1640 ;;                                              0 BANK0      6     2      4
  1641 ;; ---------------------------------------------------------------------------------
  1642 ;; (4) _ser_isrx                                             0     0      0       0
  1643 ;; ---------------------------------------------------------------------------------
  1644 ;; (2) _spi_transfer                                         3     3      0      30
  1645 ;;                                              0 BANK0      3     3      0
  1646 ;; ---------------------------------------------------------------------------------
  1647 ;; (3) _ser_putch                                            2     2      0      22
  1648 ;;                                              0 BANK0      2     2      0
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (1) _Menu                                                 1     1      0      22
  1651 ;;                                              0 BANK0      1     1      0
  1652 ;; ---------------------------------------------------------------------------------
  1653 ;; (2) _ser_init                                             1     1      0       0
  1654 ;;                                              0 BANK0      1     1      0
  1655 ;; ---------------------------------------------------------------------------------
  1656 ;; (5) _adc_read                                             6     4      2      24
  1657 ;;                                              0 BANK0      6     4      2
  1658 ;; ---------------------------------------------------------------------------------
  1659 ;; Estimated maximum stack depth 5
  1660 ;; ---------------------------------------------------------------------------------
  1661 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (6) _isr1                                                 5     5      0     521
  1664 ;;                                              6 COMMON     5     5      0
  1665 ;;                          i1___lwmod
  1666 ;;                        _ReadButtons
  1667 ;; ---------------------------------------------------------------------------------
  1668 ;; (7) _ReadButtons                                          0     0      0       0
  1669 ;;                           _Debounce
  1670 ;; ---------------------------------------------------------------------------------
  1671 ;; (7) i1___lwmod                                            6     2      4     521
  1672 ;;                                              0 COMMON     6     2      4
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (8) _Debounce                                             1     1      0       0
  1675 ;;                                              0 COMMON     1     1      0
  1676 ;; ---------------------------------------------------------------------------------
  1677 ;; Estimated maximum stack depth 8
  1678 ;; ---------------------------------------------------------------------------------
  1679                           
  1680 ;; Call Graph Graphs:
  1681                           
  1682 ;; _main (ROOT)
  1683 ;;   _init
  1684 ;;     _ser_init
  1685 ;;     _init_adc
  1686 ;;     _lcd_init
  1687 ;;       _lcd_write_control
  1688 ;;     _robo_init
  1689 ;;       _ser_putch
  1690 ;;   _robotLoadSong
  1691 ;;     _ser_putch
  1692 ;;   _robot_read
  1693 ;;     _ser_putch
  1694 ;;     _ser_getch
  1695 ;;       _ser_isrx
  1696 ;;   _readAvgDistance
  1697 ;;     _readDistance
  1698 ;;       _adc_read_channel
  1699 ;;         _adc_read
  1700 ;;     ___lwdiv
  1701 ;;       ___wmul (ARG)
  1702 ;;     _ADCconvert
  1703 ;;       ___wmul
  1704 ;;       ___lwdiv
  1705 ;;         ___wmul (ARG)
  1706 ;;   _UpdateDisplay
  1707 ;;     _lcd_write_control
  1708 ;;     _sprintf
  1709 ;;       ___lwdiv
  1710 ;;         ___wmul (ARG)
  1711 ;;       ___lwmod
  1712 ;;         ___lwdiv (ARG)
  1713 ;;           ___wmul (ARG)
  1714 ;;     _lcd_set_cursor
  1715 ;;       _lcd_write_control
  1716 ;;     _lcd_write_string
  1717 ;;       _lcd_write_data
  1718 ;;       ___awmod (ARG)
  1719 ;;     ___awmod
  1720 ;;   _Menu
  1721 ;;   _calibrateIR
  1722 ;;     _rotate
  1723 ;;       _spi_transfer
  1724 ;;     _UpdateDisplay
  1725 ;;       _lcd_write_control
  1726 ;;       _sprintf
  1727 ;;         ___lwdiv
  1728 ;;           ___wmul (ARG)
  1729 ;;         ___lwmod
  1730 ;;           ___lwdiv (ARG)
  1731 ;;             ___wmul (ARG)
  1732 ;;       _lcd_set_cursor
  1733 ;;         _lcd_write_control
  1734 ;;       _lcd_write_string
  1735 ;;         _lcd_write_data
  1736 ;;         ___awmod (ARG)
  1737 ;;       ___awmod
  1738 ;;   _Init_Follow_IR
  1739 ;;     _calibrateIR
  1740 ;;       _rotate
  1741 ;;         _spi_transfer
  1742 ;;       _UpdateDisplay
  1743 ;;         _lcd_write_control
  1744 ;;         _sprintf
  1745 ;;           ___lwdiv
  1746 ;;             ___wmul (ARG)
  1747 ;;           ___lwmod
  1748 ;;             ___lwdiv (ARG)
  1749 ;;               ___wmul (ARG)
  1750 ;;         _lcd_set_cursor
  1751 ;;           _lcd_write_control
  1752 ;;         _lcd_write_string
  1753 ;;           _lcd_write_data
  1754 ;;           ___awmod (ARG)
  1755 ;;         ___awmod
  1756 ;;     _rotate
  1757 ;;       _spi_transfer
  1758 ;;   _robotFollow
  1759 ;;     _RobotDrive
  1760 ;;       _ser_putch
  1761 ;;       ___awdiv (ARG)
  1762 ;;         ___wmul (ARG)
  1763 ;;       ___wmul (ARG)
  1764 ;;     _readAvgDistance
  1765 ;;       _readDistance
  1766 ;;         _adc_read_channel
  1767 ;;           _adc_read
  1768 ;;       ___lwdiv
  1769 ;;         ___wmul (ARG)
  1770 ;;       _ADCconvert
  1771 ;;         ___wmul
  1772 ;;         ___lwdiv
  1773 ;;           ___wmul (ARG)
  1774 ;;     _rotate
  1775 ;;       _spi_transfer
  1776 ;;     _robot_read
  1777 ;;       _ser_putch
  1778 ;;       _ser_getch
  1779 ;;         _ser_isrx
  1780 ;;     _UpdateDisplay
  1781 ;;       _lcd_write_control
  1782 ;;       _sprintf
  1783 ;;         ___lwdiv
  1784 ;;           ___wmul (ARG)
  1785 ;;         ___lwmod
  1786 ;;           ___lwdiv (ARG)
  1787 ;;             ___wmul (ARG)
  1788 ;;       _lcd_set_cursor
  1789 ;;         _lcd_write_control
  1790 ;;       _lcd_write_string
  1791 ;;         _lcd_write_data
  1792 ;;         ___awmod (ARG)
  1793 ;;       ___awmod
  1794 ;;   _RobotDrive
  1795 ;;     _ser_putch
  1796 ;;     ___awdiv (ARG)
  1797 ;;       ___wmul (ARG)
  1798 ;;     ___wmul (ARG)
  1799 ;;   _robotTurnSpeed
  1800 ;;     _robotTurn
  1801 ;;       _ser_putch
  1802 ;;     _robot_read
  1803 ;;       _ser_putch
  1804 ;;       _ser_getch
  1805 ;;         _ser_isrx
  1806 ;;     _UpdateDisplay
  1807 ;;       _lcd_write_control
  1808 ;;       _sprintf
  1809 ;;         ___lwdiv
  1810 ;;           ___wmul (ARG)
  1811 ;;         ___lwmod
  1812 ;;           ___lwdiv (ARG)
  1813 ;;             ___wmul (ARG)
  1814 ;;       _lcd_set_cursor
  1815 ;;         _lcd_write_control
  1816 ;;       _lcd_write_string
  1817 ;;         _lcd_write_data
  1818 ;;         ___awmod (ARG)
  1819 ;;       ___awmod
  1820 ;;     _abs
  1821 ;;       ___wmul
  1822 ;;   _robotMoveSpeed
  1823 ;;     _RobotDrive
  1824 ;;       _ser_putch
  1825 ;;       ___awdiv (ARG)
  1826 ;;         ___wmul (ARG)
  1827 ;;       ___wmul (ARG)
  1828 ;;     _robot_read
  1829 ;;       _ser_putch
  1830 ;;       _ser_getch
  1831 ;;         _ser_isrx
  1832 ;;     _UpdateDisplay
  1833 ;;       _lcd_write_control
  1834 ;;       _sprintf
  1835 ;;         ___lwdiv
  1836 ;;           ___wmul (ARG)
  1837 ;;         ___lwmod
  1838 ;;           ___lwdiv (ARG)
  1839 ;;             ___wmul (ARG)
  1840 ;;       _lcd_set_cursor
  1841 ;;         _lcd_write_control
  1842 ;;       _lcd_write_string
  1843 ;;         _lcd_write_data
  1844 ;;         ___awmod (ARG)
  1845 ;;       ___awmod
  1846 ;;     _abs
  1847 ;;       ___wmul
  1848 ;;   _rotate
  1849 ;;     _spi_transfer
  1850 ;;   _robot_turnRight
  1851 ;;     _RobotDrive
  1852 ;;       _ser_putch
  1853 ;;       ___awdiv (ARG)
  1854 ;;         ___wmul (ARG)
  1855 ;;       ___wmul (ARG)
  1856 ;;     _readAvgDistance
  1857 ;;       _readDistance
  1858 ;;         _adc_read_channel
  1859 ;;           _adc_read
  1860 ;;       ___lwdiv
  1861 ;;         ___wmul (ARG)
  1862 ;;       _ADCconvert
  1863 ;;         ___wmul
  1864 ;;         ___lwdiv
  1865 ;;           ___wmul (ARG)
  1866 ;;     _ser_putch
  1867 ;;     _robot_read
  1868 ;;       _ser_putch
  1869 ;;       _ser_getch
  1870 ;;         _ser_isrx
  1871 ;;     _UpdateDisplay
  1872 ;;       _lcd_write_control
  1873 ;;       _sprintf
  1874 ;;         ___lwdiv
  1875 ;;           ___wmul (ARG)
  1876 ;;         ___lwmod
  1877 ;;           ___lwdiv (ARG)
  1878 ;;             ___wmul (ARG)
  1879 ;;       _lcd_set_cursor
  1880 ;;         _lcd_write_control
  1881 ;;       _lcd_write_string
  1882 ;;         _lcd_write_data
  1883 ;;         ___awmod (ARG)
  1884 ;;       ___awmod
  1885 ;;     ___wmul
  1886 ;;     ___awdiv
  1887 ;;       ___wmul (ARG)
  1888 ;;     _abs
  1889 ;;       ___wmul
  1890 ;;   _ChargeMode
  1891 ;;     _ser_putch
  1892 ;;     _RobotBattRead
  1893 ;;       _ser_putch
  1894 ;;       _ser_getch
  1895 ;;         _ser_isrx
  1896 ;;     _UpdateDisplay
  1897 ;;       _lcd_write_control
  1898 ;;       _sprintf
  1899 ;;         ___lwdiv
  1900 ;;           ___wmul (ARG)
  1901 ;;         ___lwmod
  1902 ;;           ___lwdiv (ARG)
  1903 ;;             ___wmul (ARG)
  1904 ;;       _lcd_set_cursor
  1905 ;;         _lcd_write_control
  1906 ;;       _lcd_write_string
  1907 ;;         _lcd_write_data
  1908 ;;         ___awmod (ARG)
  1909 ;;       ___awmod
  1910 ;;
  1911 ;; _isr1 (ROOT)
  1912 ;;   i1___lwmod
  1913 ;;   _ReadButtons
  1914 ;;     _Debounce
  1915 ;;
  1916                           
  1917 ;; Address spaces:
  1918                           
  1919 ;;Name               Size   Autos  Total    Cost      Usage
  1920 ;;BANK3               60      0      20       9       33.3%
  1921 ;;BITBANK3            60      0       0       8        0.0%
  1922 ;;SFR3                 0      0       0       4        0.0%
  1923 ;;BITSFR3              0      0       0       4        0.0%
  1924 ;;BANK2               60      0       0      11        0.0%
  1925 ;;BITBANK2            60      0       0      10        0.0%
  1926 ;;SFR2                 0      0       0       5        0.0%
  1927 ;;BITSFR2              0      0       0       5        0.0%
  1928 ;;SFR1                 0      0       0       2        0.0%
  1929 ;;BITSFR1              0      0       0       2        0.0%
  1930 ;;BANK1               50      0      4F       7       98.8%
  1931 ;;BITBANK1            50      0       0       6        0.0%
  1932 ;;CODE                 0      0       0       0        0.0%
  1933 ;;DATA                 0      0      D8      12        0.0%
  1934 ;;ABS                  0      0      CD       3        0.0%
  1935 ;;NULL                 0      0       0       0        0.0%
  1936 ;;STACK                0      0       B       2        0.0%
  1937 ;;BANK0               50     4C      50       5      100.0%
  1938 ;;BITBANK0            50      0       0       4        0.0%
  1939 ;;SFR0                 0      0       0       1        0.0%
  1940 ;;BITSFR0              0      0       0       1        0.0%
  1941 ;;COMMON               E      B       E       1      100.0%
  1942 ;;BITCOMMON            E      0       2       0       14.3%
  1943 ;;EEDATA             100      0       0       0        0.0%
  1944                           
  1945                           	global	_main
  1946                           psect	maintext,global,class=CODE,delta=2
  1947                           global __pmaintext
  1948  029C                     __pmaintext:
  1949                           
  1950 ;; *************** function _main *****************
  1951 ;; Defined at:
  1952 ;;		line 170 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  currentFlw      1   75[BANK0 ] unsigned char 
  1957 ;;  shortwall       2   72[BANK0 ] int 
  1958 ;;  choice          1   74[BANK0 ] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;		None               void
  1961 ;; Registers used:
  1962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 17F/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         0       4       0       0       0
  1970 ;;      Temps:          0       3       0       0       0
  1971 ;;      Totals:         0       7       0       0       0
  1972 ;;Total ram usage:        7 bytes
  1973 ;; Hardware stack levels required when called:    8
  1974 ;; This function calls:
  1975 ;;		_init
  1976 ;;		_robotLoadSong
  1977 ;;		_robot_read
  1978 ;;		_readAvgDistance
  1979 ;;		_UpdateDisplay
  1980 ;;		_Menu
  1981 ;;		_calibrateIR
  1982 ;;		_Init_Follow_IR
  1983 ;;		_robotFollow
  1984 ;;		_RobotDrive
  1985 ;;		_robotTurnSpeed
  1986 ;;		_robotMoveSpeed
  1987 ;;		_rotate
  1988 ;;		_robot_turnRight
  1989 ;;		_ChargeMode
  1990 ;; This function is called by:
  1991 ;;		Startup code after reset
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           psect	maintext
  1995                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1996                           	line	170
  1997                           	global	__size_of_main
  1998  0240                     	__size_of_main	equ	__end_of_main-_main
  1999                           	
  2000  029C                     _main:	
  2001                           	opt	stack 0
  2002                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2003                           	line	171
  2004                           	
  2005  029C                     l11871:	
  2006                           ;Main.c: 171: unsigned char choice = 255;
  2007  029C  30FF               	movlw	(0FFh)
  2008  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  2009  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  2010  029F  00E5               	movwf	(??_main+0)+0
  2011  02A0  0865               	movf	(??_main+0)+0,w
  2012  02A1  00EA               	movwf	(main@choice)
  2013                           	line	172
  2014                           	
  2015  02A2                     l11873:	
  2016                           ;Main.c: 172: int shortwall = 0;
  2017  02A2  01E8               	clrf	(main@shortwall)
  2018  02A3  01E9               	clrf	(main@shortwall+1)
  2019                           	line	175
  2020                           	
  2021  02A4                     l11875:	
  2022                           ;Main.c: 175: init();
  2023  02A4  160A  118A  21FF   	fcall	_init
              120A  118A         
  2024                           	line	176
  2025                           	
  2026  02A9                     l11877:	
  2027                           ;Main.c: 176: robotLoadSong();
  2028  02A9  160A  118A  20CD   	fcall	_robotLoadSong
              120A  118A         
  2029  02AE  2AAF               	goto	l11879
  2030                           	line	178
  2031                           ;Main.c: 178: while(1)
  2032                           	
  2033  02AF                     l2250:	
  2034                           	line	180
  2035                           	
  2036  02AF                     l11879:	
  2037                           ;Main.c: 179: {
  2038                           ;Main.c: 180: if (RTC_FLAG_250MS == 1)
  2039  02AF  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2040  02B0  2AB2               	goto	u5351
  2041  02B1  2AB3               	goto	u5350
  2042  02B2                     u5351:
  2043  02B2  2AC5               	goto	l11889
  2044  02B3                     u5350:
  2045                           	line	182
  2046                           	
  2047  02B3                     l11881:	
  2048                           ;Main.c: 181: {
  2049                           ;Main.c: 182: RTC_FLAG_250MS = 0;
  2050  02B3  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2051                           	line	183
  2052                           	
  2053  02B4                     l11883:	
  2054                           ;Main.c: 183: robot_read(2);
  2055  02B4  3002               	movlw	(02h)
  2056  02B5  120A  158A  232E   	fcall	_robot_read
              120A  118A         
  2057                           	line	184
  2058                           	
  2059  02BA                     l11885:	
  2060                           ;Main.c: 184: readAvgDistance();
  2061  02BA  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2062                           	line	185
  2063                           	
  2064  02BF                     l11887:	
  2065                           ;Main.c: 185: UpdateDisplay();
  2066  02BF  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  2067  02C4  2AC5               	goto	l11889
  2068                           	line	186
  2069                           	
  2070  02C5                     l2251:	
  2071                           	line	187
  2072                           	
  2073  02C5                     l11889:	
  2074                           ;Main.c: 186: }
  2075                           ;Main.c: 187: if (buttonPressed)
  2076  02C5  087D               	movf	(_buttonPressed),w	;volatile
  2077  02C6  1D03               	skipz
  2078  02C7  2AC9               	goto	u5360
  2079  02C8  2CBB               	goto	l11973
  2080  02C9                     u5360:
  2081                           	line	190
  2082                           	
  2083  02C9                     l11891:	
  2084                           ;Main.c: 189: {
  2085                           ;Main.c: 190: choice = Menu(buttonPressed);
  2086  02C9  087D               	movf	(_buttonPressed),w	;volatile
  2087  02CA  160A  118A  2358   	fcall	_Menu
              120A  118A         
  2088  02CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2089  02D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2090  02D1  00E5               	movwf	(??_main+0)+0
  2091  02D2  0865               	movf	(??_main+0)+0,w
  2092  02D3  00EA               	movwf	(main@choice)
  2093                           	line	191
  2094                           	
  2095  02D4                     l11893:	
  2096                           ;Main.c: 191: buttonPressed = 0;
  2097  02D4  01FD               	clrf	(_buttonPressed)	;volatile
  2098  02D5  2CBB               	goto	l11973
  2099                           	line	192
  2100                           	
  2101  02D6                     l2252:	
  2102                           	line	196
  2103                           ;Main.c: 192: }
  2104                           ;Main.c: 196: switch (choice)
  2105  02D6  2CBB               	goto	l11973
  2106                           	line	198
  2107                           ;Main.c: 197: {
  2108                           ;Main.c: 198: case 0:
  2109                           	
  2110  02D7                     l2254:	
  2111                           	line	199
  2112                           	
  2113  02D7                     l11895:	
  2114                           ;Main.c: 199: calibrateIR();
  2115  02D7  160A  118A  2509   	fcall	_calibrateIR
              120A  118A         
  2116                           	line	200
  2117                           ;Main.c: 200: break;
  2118  02DC  2CD1               	goto	l11975
  2119                           	line	201
  2120                           ;Main.c: 201: case 1:
  2121                           	
  2122  02DD                     l2256:	
  2123                           	line	207
  2124                           ;Main.c: 207: break;
  2125  02DD  2CD1               	goto	l11975
  2126                           	line	208
  2127                           ;Main.c: 208: case 2:
  2128                           	
  2129  02DE                     l2257:	
  2130                           	line	211
  2131                           ;Main.c: 211: break;
  2132  02DE  2CD1               	goto	l11975
  2133                           	line	212
  2134                           ;Main.c: 212: case 3:
  2135                           	
  2136  02DF                     l2258:	
  2137                           	line	215
  2138                           ;Main.c: 215: break;
  2139  02DF  2CD1               	goto	l11975
  2140                           	line	216
  2141                           ;Main.c: 216: case 4:
  2142                           	
  2143  02E0                     l2259:	
  2144                           	line	217
  2145                           	
  2146  02E0                     l11897:	
  2147                           ;Main.c: 217: RobotPos = 6;
  2148  02E0  3006               	movlw	(06h)
  2149  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2150  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2151  02E3  00E5               	movwf	(??_main+0)+0
  2152  02E4  0865               	movf	(??_main+0)+0,w
  2153  02E5  1683               	bsf	status, 5	;RP0=1, select bank1
  2154  02E6  1303               	bcf	status, 6	;RP1=0, select bank1
  2155  02E7  00D6               	movwf	(_RobotPos)^080h
  2156                           	line	218
  2157                           	
  2158  02E8                     l11899:	
  2159                           ;Main.c: 218: unsigned char currentFlw = 0;
  2160  02E8  1283               	bcf	status, 5	;RP0=0, select bank0
  2161  02E9  1303               	bcf	status, 6	;RP1=0, select bank0
  2162  02EA  01EB               	clrf	(main@currentFlw)
  2163                           	line	219
  2164                           	
  2165  02EB                     l11901:	
  2166                           ;Main.c: 219: Init_Follow_IR();
  2167  02EB  160A  118A  2059   	fcall	_Init_Follow_IR
              120A  118A         
  2168                           	line	220
  2169                           ;Main.c: 220: while (ROBOTerror != 9)
  2170  02F0  2CA9               	goto	l11967
  2171                           	
  2172  02F1                     l2261:	
  2173                           	line	222
  2174                           ;Main.c: 221: {
  2175                           ;Main.c: 222: switch (ROBOTerror)
  2176  02F1  2C92               	goto	l11965
  2177                           	line	224
  2178                           ;Main.c: 223: {
  2179                           ;Main.c: 224: case 0:
  2180                           	
  2181  02F2                     l2263:	
  2182                           	line	225
  2183                           	
  2184  02F2                     l11903:	
  2185                           ;Main.c: 225: readAvgDistance();
  2186  02F2  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2187                           	line	226
  2188                           ;Main.c: 226: robotFollow(200, adcVal, currentFlw);
  2189  02F7  30C8               	movlw	low(0C8h)
  2190  02F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2191  02F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2192  02FA  00D9               	movwf	(?_robotFollow)
  2193  02FB  3000               	movlw	high(0C8h)
  2194  02FC  00DA               	movwf	((?_robotFollow))+1
  2195  02FD  086D               	movf	(_adcVal+1),w	;volatile
  2196  02FE  01DC               	clrf	1+(?_robotFollow)+02h
  2197  02FF  07DC               	addwf	1+(?_robotFollow)+02h
  2198  0300  086C               	movf	(_adcVal),w	;volatile
  2199  0301  01DB               	clrf	0+(?_robotFollow)+02h
  2200  0302  07DB               	addwf	0+(?_robotFollow)+02h
  2201                           
  2202  0303  086B               	movf	(main@currentFlw),w
  2203  0304  00E5               	movwf	(??_main+0)+0
  2204  0305  0865               	movf	(??_main+0)+0,w
  2205  0306  00DD               	movwf	0+(?_robotFollow)+04h
  2206  0307  120A  158A  2439   	fcall	_robotFollow
              120A  118A         
  2207                           	line	227
  2208                           ;Main.c: 227: break;
  2209  030C  2CA9               	goto	l11967
  2210                           	line	228
  2211                           ;Main.c: 228: case 1:
  2212                           	
  2213  030D                     l2265:	
  2214                           	line	229
  2215                           	
  2216  030D                     l11905:	
  2217                           ;Main.c: 229: if (RobotPos == 10 || RobotPos == 11)
  2218  030D  1683               	bsf	status, 5	;RP0=1, select bank1
  2219  030E  1303               	bcf	status, 6	;RP1=0, select bank1
  2220  030F  0856               	movf	(_RobotPos)^080h,w
  2221  0310  3A0A               	xorlw	0Ah
  2222  0311  1903               	skipnz
  2223  0312  2B14               	goto	u5371
  2224  0313  2B15               	goto	u5370
  2225  0314                     u5371:
  2226  0314  2B1C               	goto	l11909
  2227  0315                     u5370:
  2228                           	
  2229  0315                     l11907:	
  2230  0315  0856               	movf	(_RobotPos)^080h,w
  2231  0316  3A0B               	xorlw	0Bh
  2232  0317  1D03               	skipz
  2233  0318  2B1A               	goto	u5381
  2234  0319  2B1B               	goto	u5380
  2235  031A                     u5381:
  2236  031A  2B5E               	goto	l11917
  2237  031B                     u5380:
  2238  031B  2B1C               	goto	l11909
  2239                           	
  2240  031C                     l2268:	
  2241                           	line	231
  2242                           	
  2243  031C                     l11909:	
  2244                           ;Main.c: 230: {
  2245                           ;Main.c: 231: RobotDrive(-200, 0x7FFF);
  2246  031C  3038               	movlw	low(-200)
  2247  031D  1283               	bcf	status, 5	;RP0=0, select bank0
  2248  031E  1303               	bcf	status, 6	;RP1=0, select bank0
  2249  031F  00AF               	movwf	(?_RobotDrive)
  2250  0320  30FF               	movlw	high(-200)
  2251  0321  00B0               	movwf	((?_RobotDrive))+1
  2252  0322  30FF               	movlw	low(07FFFh)
  2253  0323  00B1               	movwf	0+(?_RobotDrive)+02h
  2254  0324  307F               	movlw	high(07FFFh)
  2255  0325  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  2256  0326  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  2257                           	line	232
  2258                           	
  2259  032B                     l11911:	
  2260                           ;Main.c: 232: _delay((unsigned long)((200)*(20000000/4000.0)));
  2261                           	opt asmopt_off
  2262  032B  3006               movlw  6
  2263  032C  1283               	bcf	status, 5	;RP0=0, select bank0
  2264  032D  1303               	bcf	status, 6	;RP1=0, select bank0
  2265  032E  00E7               movwf	((??_main+0)+0+2),f
  2266  032F  3013               movlw	19
  2267  0330  00E6               movwf	((??_main+0)+0+1),f
  2268  0331  30B1               	movlw	177
  2269  0332  00E5               movwf	((??_main+0)+0),f
  2270  0333                     u5407:
  2271  0333  0BE5               	decfsz	((??_main+0)+0),f
  2272  0334  2B33               	goto	u5407
  2273  0335  0BE6               	decfsz	((??_main+0)+0+1),f
  2274  0336  2B33               	goto	u5407
  2275  0337  0BE7               	decfsz	((??_main+0)+0+2),f
  2276  0338  2B33               	goto	u5407
  2277  0339  2B3A               	nop2
  2278                           opt asmopt_on
  2279                           
  2280                           	line	234
  2281                           	
  2282  033A                     l11913:	
  2283                           ;Main.c: 234: ROBOTerror = 0;
  2284  033A  1683               	bsf	status, 5	;RP0=1, select bank1
  2285  033B  1303               	bcf	status, 6	;RP1=0, select bank1
  2286  033C  01D4               	clrf	(_ROBOTerror)^080h
  2287                           	line	235
  2288                           	
  2289  033D                     l11915:	
  2290                           ;Main.c: 235: robotTurnSpeed((-(angleTurned - 75)),400);
  2291  033D  083E               	movf	(_angleTurned)^080h,w
  2292  033E  3EB5               	addlw	low(-75)
  2293  033F  1283               	bcf	status, 5	;RP0=0, select bank0
  2294  0340  1303               	bcf	status, 6	;RP1=0, select bank0
  2295  0341  00E5               	movwf	(??_main+0)+0
  2296  0342  1683               	bsf	status, 5	;RP0=1, select bank1
  2297  0343  1303               	bcf	status, 6	;RP1=0, select bank1
  2298  0344  083F               	movf	(_angleTurned+1)^080h,w
  2299  0345  1803               	skipnc
  2300  0346  3E01               	addlw	1
  2301  0347  3EFF               	addlw	high(-75)
  2302  0348  1283               	bcf	status, 5	;RP0=0, select bank0
  2303  0349  1303               	bcf	status, 6	;RP1=0, select bank0
  2304  034A  00E6               	movwf	1+(??_main+0)+0
  2305  034B  09E5               	comf	(??_main+0)+0,f
  2306  034C  09E6               	comf	(??_main+0)+1,f
  2307  034D  0AE5               	incf	(??_main+0)+0,f
  2308  034E  1903               	skipnz
  2309  034F  0AE6               	incf	(??_main+0)+1,f
  2310  0350  0865               	movf	0+(??_main+0)+0,w
  2311  0351  00D9               	movwf	(?_robotTurnSpeed)
  2312  0352  0866               	movf	1+(??_main+0)+0,w
  2313  0353  00DA               	movwf	(?_robotTurnSpeed+1)
  2314  0354  3090               	movlw	low(0190h)
  2315  0355  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2316  0356  3001               	movlw	high(0190h)
  2317  0357  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2318  0358  120A  158A  21A1   	fcall	_robotTurnSpeed
              120A  118A         
  2319                           	line	236
  2320                           ;Main.c: 236: }
  2321  035D  2CA9               	goto	l11967
  2322                           	line	237
  2323                           	
  2324  035E                     l2266:	
  2325                           	line	238
  2326                           	
  2327  035E                     l11917:	
  2328                           ;Main.c: 237: else
  2329                           ;Main.c: 238: ROBOTerror = 9;
  2330  035E  3009               	movlw	(09h)
  2331  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  2332  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  2333  0361  00E5               	movwf	(??_main+0)+0
  2334  0362  0865               	movf	(??_main+0)+0,w
  2335  0363  1683               	bsf	status, 5	;RP0=1, select bank1
  2336  0364  1303               	bcf	status, 6	;RP1=0, select bank1
  2337  0365  00D4               	movwf	(_ROBOTerror)^080h
  2338  0366  2CA9               	goto	l11967
  2339                           	
  2340  0367                     l2269:	
  2341                           	line	239
  2342                           ;Main.c: 239: break;
  2343  0367  2CA9               	goto	l11967
  2344                           	line	240
  2345                           ;Main.c: 240: case 2:
  2346                           	
  2347  0368                     l2270:	
  2348                           	line	241
  2349                           	
  2350  0368                     l11919:	
  2351                           ;Main.c: 241: ROBOTerror = 9;
  2352  0368  3009               	movlw	(09h)
  2353  0369  1283               	bcf	status, 5	;RP0=0, select bank0
  2354  036A  1303               	bcf	status, 6	;RP1=0, select bank0
  2355  036B  00E5               	movwf	(??_main+0)+0
  2356  036C  0865               	movf	(??_main+0)+0,w
  2357  036D  1683               	bsf	status, 5	;RP0=1, select bank1
  2358  036E  1303               	bcf	status, 6	;RP1=0, select bank1
  2359  036F  00D4               	movwf	(_ROBOTerror)^080h
  2360                           	line	242
  2361                           ;Main.c: 242: break;
  2362  0370  2CA9               	goto	l11967
  2363                           	line	243
  2364                           ;Main.c: 243: case 3:
  2365                           	
  2366  0371                     l2271:	
  2367                           	line	244
  2368                           	
  2369  0371                     l11921:	
  2370                           ;Main.c: 244: RobotPos++;
  2371  0371  3001               	movlw	(01h)
  2372  0372  1283               	bcf	status, 5	;RP0=0, select bank0
  2373  0373  1303               	bcf	status, 6	;RP1=0, select bank0
  2374  0374  00E5               	movwf	(??_main+0)+0
  2375  0375  0865               	movf	(??_main+0)+0,w
  2376  0376  1683               	bsf	status, 5	;RP0=1, select bank1
  2377  0377  1303               	bcf	status, 6	;RP1=0, select bank1
  2378  0378  07D6               	addwf	(_RobotPos)^080h,f
  2379                           	line	245
  2380                           	
  2381  0379                     l11923:	
  2382                           ;Main.c: 245: ROBOTerror = 0;
  2383  0379  01D4               	clrf	(_ROBOTerror)^080h
  2384                           	line	246
  2385                           	
  2386  037A                     l11925:	
  2387                           ;Main.c: 246: RobotDrive(-200, 0x7FFF);
  2388  037A  3038               	movlw	low(-200)
  2389  037B  1283               	bcf	status, 5	;RP0=0, select bank0
  2390  037C  1303               	bcf	status, 6	;RP1=0, select bank0
  2391  037D  00AF               	movwf	(?_RobotDrive)
  2392  037E  30FF               	movlw	high(-200)
  2393  037F  00B0               	movwf	((?_RobotDrive))+1
  2394  0380  30FF               	movlw	low(07FFFh)
  2395  0381  00B1               	movwf	0+(?_RobotDrive)+02h
  2396  0382  307F               	movlw	high(07FFFh)
  2397  0383  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  2398  0384  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  2399                           	line	247
  2400                           	
  2401  0389                     l11927:	
  2402                           ;Main.c: 247: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2403                           	opt asmopt_off
  2404  0389  301A               movlw  26
  2405  038A  1283               	bcf	status, 5	;RP0=0, select bank0
  2406  038B  1303               	bcf	status, 6	;RP1=0, select bank0
  2407  038C  00E7               movwf	((??_main+0)+0+2),f
  2408  038D  305E               movlw	94
  2409  038E  00E6               movwf	((??_main+0)+0+1),f
  2410  038F  3086               	movlw	134
  2411  0390  00E5               movwf	((??_main+0)+0),f
  2412  0391                     u5417:
  2413  0391  0BE5               	decfsz	((??_main+0)+0),f
  2414  0392  2B91               	goto	u5417
  2415  0393  0BE6               	decfsz	((??_main+0)+0+1),f
  2416  0394  2B91               	goto	u5417
  2417  0395  0BE7               	decfsz	((??_main+0)+0+2),f
  2418  0396  2B91               	goto	u5417
  2419  0397  0064               	clrwdt
  2420                           opt asmopt_on
  2421                           
  2422                           	line	248
  2423                           	
  2424  0398                     l11929:	
  2425                           ;Main.c: 248: robotMoveSpeed(-200,-200);
  2426  0398  3038               	movlw	low(-200)
  2427  0399  1283               	bcf	status, 5	;RP0=0, select bank0
  2428  039A  1303               	bcf	status, 6	;RP1=0, select bank0
  2429  039B  00D9               	movwf	(?_robotMoveSpeed)
  2430  039C  30FF               	movlw	high(-200)
  2431  039D  00DA               	movwf	((?_robotMoveSpeed))+1
  2432  039E  3038               	movlw	low(-200)
  2433  039F  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2434  03A0  30FF               	movlw	high(-200)
  2435  03A1  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2436  03A2  120A  158A  2249   	fcall	_robotMoveSpeed
              120A  118A         
  2437                           	line	249
  2438                           	
  2439  03A7                     l11931:	
  2440                           ;Main.c: 249: robotTurnSpeed((-angleTurned),400);
  2441  03A7  1683               	bsf	status, 5	;RP0=1, select bank1
  2442  03A8  1303               	bcf	status, 6	;RP1=0, select bank1
  2443  03A9  093E               	comf	(_angleTurned)^080h,w
  2444  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  2445  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  2446  03AC  00E5               	movwf	(??_main+0)+0
  2447  03AD  1683               	bsf	status, 5	;RP0=1, select bank1
  2448  03AE  1303               	bcf	status, 6	;RP1=0, select bank1
  2449  03AF  093F               	comf	(_angleTurned+1)^080h,w
  2450  03B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2451  03B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2452  03B2  00E6               	movwf	((??_main+0)+0+1)
  2453  03B3  0AE5               	incf	(??_main+0)+0,f
  2454  03B4  1903               	skipnz
  2455  03B5  0AE6               	incf	((??_main+0)+0+1),f
  2456  03B6  0865               	movf	0+(??_main+0)+0,w
  2457  03B7  00D9               	movwf	(?_robotTurnSpeed)
  2458  03B8  0866               	movf	1+(??_main+0)+0,w
  2459  03B9  00DA               	movwf	(?_robotTurnSpeed+1)
  2460  03BA  3090               	movlw	low(0190h)
  2461  03BB  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2462  03BC  3001               	movlw	high(0190h)
  2463  03BD  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2464  03BE  120A  158A  21A1   	fcall	_robotTurnSpeed
              120A  118A         
  2465                           	line	250
  2466                           	
  2467  03C3                     l11933:	
  2468                           ;Main.c: 250: robotMoveSpeed(300,200);
  2469  03C3  302C               	movlw	low(012Ch)
  2470  03C4  1283               	bcf	status, 5	;RP0=0, select bank0
  2471  03C5  1303               	bcf	status, 6	;RP1=0, select bank0
  2472  03C6  00D9               	movwf	(?_robotMoveSpeed)
  2473  03C7  3001               	movlw	high(012Ch)
  2474  03C8  00DA               	movwf	((?_robotMoveSpeed))+1
  2475  03C9  30C8               	movlw	low(0C8h)
  2476  03CA  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2477  03CB  3000               	movlw	high(0C8h)
  2478  03CC  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2479  03CD  120A  158A  2249   	fcall	_robotMoveSpeed
              120A  118A         
  2480                           	line	251
  2481                           	
  2482  03D2                     l11935:	
  2483                           ;Main.c: 251: readAvgDistance();
  2484  03D2  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2485                           	line	252
  2486                           	
  2487  03D7                     l11937:	
  2488                           ;Main.c: 252: robotFollow(200, adcVal - 10, currentFlw);
  2489  03D7  30C8               	movlw	low(0C8h)
  2490  03D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2491  03D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2492  03DA  00D9               	movwf	(?_robotFollow)
  2493  03DB  3000               	movlw	high(0C8h)
  2494  03DC  00DA               	movwf	((?_robotFollow))+1
  2495  03DD  086C               	movf	(_adcVal),w	;volatile
  2496  03DE  3EF6               	addlw	low(-10)
  2497  03DF  00DB               	movwf	0+(?_robotFollow)+02h
  2498  03E0  086D               	movf	(_adcVal+1),w	;volatile
  2499  03E1  1803               	skipnc
  2500  03E2  3E01               	addlw	1
  2501  03E3  3EFF               	addlw	high(-10)
  2502  03E4  00DC               	movwf	1+0+(?_robotFollow)+02h
  2503  03E5  086B               	movf	(main@currentFlw),w
  2504  03E6  00E5               	movwf	(??_main+0)+0
  2505  03E7  0865               	movf	(??_main+0)+0,w
  2506  03E8  00DD               	movwf	0+(?_robotFollow)+04h
  2507  03E9  120A  158A  2439   	fcall	_robotFollow
              120A  118A         
  2508                           	line	253
  2509                           ;Main.c: 253: break;
  2510  03EE  2CA9               	goto	l11967
  2511                           	line	254
  2512                           ;Main.c: 254: case 10:
  2513                           	
  2514  03EF                     l2272:	
  2515                           	line	255
  2516                           	
  2517  03EF                     l11939:	
  2518                           ;Main.c: 255: RobotPos++;
  2519  03EF  3001               	movlw	(01h)
  2520  03F0  1283               	bcf	status, 5	;RP0=0, select bank0
  2521  03F1  1303               	bcf	status, 6	;RP1=0, select bank0
  2522  03F2  00E5               	movwf	(??_main+0)+0
  2523  03F3  0865               	movf	(??_main+0)+0,w
  2524  03F4  1683               	bsf	status, 5	;RP0=1, select bank1
  2525  03F5  1303               	bcf	status, 6	;RP1=0, select bank1
  2526  03F6  07D6               	addwf	(_RobotPos)^080h,f
  2527                           	line	257
  2528                           	
  2529  03F7                     l11941:	
  2530                           ;Main.c: 257: robotTurnSpeed(80,400);
  2531  03F7  3050               	movlw	low(050h)
  2532  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2533  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2534  03FA  00D9               	movwf	(?_robotTurnSpeed)
  2535  03FB  3000               	movlw	high(050h)
  2536  03FC  00DA               	movwf	((?_robotTurnSpeed))+1
  2537  03FD  3090               	movlw	low(0190h)
  2538  03FE  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2539  03FF  3001               	movlw	high(0190h)
  2540  0400  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2541  0401  120A  158A  21A1   	fcall	_robotTurnSpeed
              120A  118A         
  2542                           	line	259
  2543                           	
  2544  0406                     l11943:	
  2545                           ;Main.c: 259: readAvgDistance();
  2546  0406  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2547                           	line	260
  2548                           	
  2549  040B                     l11945:	
  2550                           ;Main.c: 260: robotFollow(200, adcVal - 10, currentFlw);
  2551  040B  30C8               	movlw	low(0C8h)
  2552  040C  1283               	bcf	status, 5	;RP0=0, select bank0
  2553  040D  1303               	bcf	status, 6	;RP1=0, select bank0
  2554  040E  00D9               	movwf	(?_robotFollow)
  2555  040F  3000               	movlw	high(0C8h)
  2556  0410  00DA               	movwf	((?_robotFollow))+1
  2557  0411  086C               	movf	(_adcVal),w	;volatile
  2558  0412  3EF6               	addlw	low(-10)
  2559  0413  00DB               	movwf	0+(?_robotFollow)+02h
  2560  0414  086D               	movf	(_adcVal+1),w	;volatile
  2561  0415  1803               	skipnc
  2562  0416  3E01               	addlw	1
  2563  0417  3EFF               	addlw	high(-10)
  2564  0418  00DC               	movwf	1+0+(?_robotFollow)+02h
  2565  0419  086B               	movf	(main@currentFlw),w
  2566  041A  00E5               	movwf	(??_main+0)+0
  2567  041B  0865               	movf	(??_main+0)+0,w
  2568  041C  00DD               	movwf	0+(?_robotFollow)+04h
  2569  041D  120A  158A  2439   	fcall	_robotFollow
              120A  118A         
  2570                           	line	261
  2571                           ;Main.c: 261: break;
  2572  0422  2CA9               	goto	l11967
  2573                           	line	262
  2574                           ;Main.c: 262: case 11:
  2575                           	
  2576  0423                     l2273:	
  2577                           	line	263
  2578                           	
  2579  0423                     l11947:	
  2580                           ;Main.c: 263: RobotPos++;
  2581  0423  3001               	movlw	(01h)
  2582  0424  1283               	bcf	status, 5	;RP0=0, select bank0
  2583  0425  1303               	bcf	status, 6	;RP1=0, select bank0
  2584  0426  00E5               	movwf	(??_main+0)+0
  2585  0427  0865               	movf	(??_main+0)+0,w
  2586  0428  1683               	bsf	status, 5	;RP0=1, select bank1
  2587  0429  1303               	bcf	status, 6	;RP1=0, select bank1
  2588  042A  07D6               	addwf	(_RobotPos)^080h,f
  2589                           	line	264
  2590                           	
  2591  042B                     l11949:	
  2592                           ;Main.c: 264: rotate(25, 0);
  2593  042B  3019               	movlw	low(019h)
  2594  042C  1283               	bcf	status, 5	;RP0=0, select bank0
  2595  042D  1303               	bcf	status, 6	;RP1=0, select bank0
  2596  042E  00A3               	movwf	(?_rotate)
  2597  042F  3000               	movlw	high(019h)
  2598  0430  00A4               	movwf	((?_rotate))+1
  2599  0431  01A5               	clrf	0+(?_rotate)+02h
  2600  0432  160A  118A  243A   	fcall	_rotate
              120A  118A         
  2601                           	line	265
  2602                           	
  2603  0437                     l11951:	
  2604                           ;Main.c: 265: readAvgDistance();
  2605  0437  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2606                           	line	266
  2607                           	
  2608  043C                     l11953:	
  2609                           ;Main.c: 266: robot_turnRight(200, adcVal);
  2610  043C  30C8               	movlw	low(0C8h)
  2611  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  2612  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  2613  043F  00D9               	movwf	(?_robot_turnRight)
  2614  0440  3000               	movlw	high(0C8h)
  2615  0441  00DA               	movwf	((?_robot_turnRight))+1
  2616  0442  086D               	movf	(_adcVal+1),w	;volatile
  2617  0443  01DC               	clrf	1+(?_robot_turnRight)+02h
  2618  0444  07DC               	addwf	1+(?_robot_turnRight)+02h
  2619  0445  086C               	movf	(_adcVal),w	;volatile
  2620  0446  01DB               	clrf	0+(?_robot_turnRight)+02h
  2621  0447  07DB               	addwf	0+(?_robot_turnRight)+02h
  2622                           
  2623  0448  120A  118A  2015   	fcall	_robot_turnRight
              120A  118A         
  2624                           	line	267
  2625                           	
  2626  044D                     l11955:	
  2627                           ;Main.c: 267: rotate(25, 1);
  2628  044D  3019               	movlw	low(019h)
  2629  044E  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  044F  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  0450  00A3               	movwf	(?_rotate)
  2632  0451  3000               	movlw	high(019h)
  2633  0452  00A4               	movwf	((?_rotate))+1
  2634  0453  01A5               	clrf	0+(?_rotate)+02h
  2635  0454  1403               	bsf	status,0
  2636  0455  0DA5               	rlf	0+(?_rotate)+02h,f
  2637  0456  160A  118A  243A   	fcall	_rotate
              120A  118A         
  2638                           	line	268
  2639                           	
  2640  045B                     l11957:	
  2641                           ;Main.c: 268: readAvgDistance();
  2642  045B  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2643                           	line	269
  2644                           	
  2645  0460                     l11959:	
  2646                           ;Main.c: 269: robotFollow(200, adcVal, currentFlw);
  2647  0460  30C8               	movlw	low(0C8h)
  2648  0461  1283               	bcf	status, 5	;RP0=0, select bank0
  2649  0462  1303               	bcf	status, 6	;RP1=0, select bank0
  2650  0463  00D9               	movwf	(?_robotFollow)
  2651  0464  3000               	movlw	high(0C8h)
  2652  0465  00DA               	movwf	((?_robotFollow))+1
  2653  0466  086D               	movf	(_adcVal+1),w	;volatile
  2654  0467  01DC               	clrf	1+(?_robotFollow)+02h
  2655  0468  07DC               	addwf	1+(?_robotFollow)+02h
  2656  0469  086C               	movf	(_adcVal),w	;volatile
  2657  046A  01DB               	clrf	0+(?_robotFollow)+02h
  2658  046B  07DB               	addwf	0+(?_robotFollow)+02h
  2659                           
  2660  046C  086B               	movf	(main@currentFlw),w
  2661  046D  00E5               	movwf	(??_main+0)+0
  2662  046E  0865               	movf	(??_main+0)+0,w
  2663  046F  00DD               	movwf	0+(?_robotFollow)+04h
  2664  0470  120A  158A  2439   	fcall	_robotFollow
              120A  118A         
  2665                           	line	271
  2666                           ;Main.c: 271: break;
  2667  0475  2CA9               	goto	l11967
  2668                           	line	272
  2669                           ;Main.c: 272: default:
  2670                           	
  2671  0476                     l2274:	
  2672                           	line	273
  2673                           	
  2674  0476                     l11961:	
  2675                           ;Main.c: 273: readAvgDistance();
  2676  0476  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  2677                           	line	274
  2678                           ;Main.c: 274: robotFollow(200, adcVal, currentFlw);
  2679  047B  30C8               	movlw	low(0C8h)
  2680  047C  1283               	bcf	status, 5	;RP0=0, select bank0
  2681  047D  1303               	bcf	status, 6	;RP1=0, select bank0
  2682  047E  00D9               	movwf	(?_robotFollow)
  2683  047F  3000               	movlw	high(0C8h)
  2684  0480  00DA               	movwf	((?_robotFollow))+1
  2685  0481  086D               	movf	(_adcVal+1),w	;volatile
  2686  0482  01DC               	clrf	1+(?_robotFollow)+02h
  2687  0483  07DC               	addwf	1+(?_robotFollow)+02h
  2688  0484  086C               	movf	(_adcVal),w	;volatile
  2689  0485  01DB               	clrf	0+(?_robotFollow)+02h
  2690  0486  07DB               	addwf	0+(?_robotFollow)+02h
  2691                           
  2692  0487  086B               	movf	(main@currentFlw),w
  2693  0488  00E5               	movwf	(??_main+0)+0
  2694  0489  0865               	movf	(??_main+0)+0,w
  2695  048A  00DD               	movwf	0+(?_robotFollow)+04h
  2696  048B  120A  158A  2439   	fcall	_robotFollow
              120A  118A         
  2697                           	line	275
  2698                           ;Main.c: 275: break;
  2699  0490  2CA9               	goto	l11967
  2700                           	line	277
  2701                           	
  2702  0491                     l11963:	
  2703                           ;Main.c: 277: }
  2704  0491  2CA9               	goto	l11967
  2705                           	line	222
  2706                           	
  2707  0492                     l2262:	
  2708                           	
  2709  0492                     l11965:	
  2710  0492  1683               	bsf	status, 5	;RP0=1, select bank1
  2711  0493  1303               	bcf	status, 6	;RP1=0, select bank1
  2712  0494  0854               	movf	(_ROBOTerror)^080h,w
  2713                           	; Switch size 1, requested type "space"
  2714                           ; Number of cases is 6, Range of values is 0 to 11
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte           19    10 (average)
  2718                           ; direct_byte           44     8 (fixed)
  2719                           ; jumptable            260     6 (fixed)
  2720                           ; rangetable            16     6 (fixed)
  2721                           ; spacedrange           30     9 (fixed)
  2722                           ; locatedrange          12     3 (fixed)
  2723                           ;	Chosen strategy is simple_byte
  2724                           
  2725                           	opt asmopt_off
  2726  0495  3A00               	xorlw	0^0	; case 0
  2727  0496  1903               	skipnz
  2728  0497  2AF2               	goto	l11903
  2729  0498  3A01               	xorlw	1^0	; case 1
  2730  0499  1903               	skipnz
  2731  049A  2B0D               	goto	l11905
  2732  049B  3A03               	xorlw	2^1	; case 2
  2733  049C  1903               	skipnz
  2734  049D  2B68               	goto	l11919
  2735  049E  3A01               	xorlw	3^2	; case 3
  2736  049F  1903               	skipnz
  2737  04A0  2B71               	goto	l11921
  2738  04A1  3A09               	xorlw	10^3	; case 10
  2739  04A2  1903               	skipnz
  2740  04A3  2BEF               	goto	l11939
  2741  04A4  3A01               	xorlw	11^10	; case 11
  2742  04A5  1903               	skipnz
  2743  04A6  2C23               	goto	l11947
  2744  04A7  2C76               	goto	l11961
  2745                           	opt asmopt_on
  2746                           
  2747                           	line	277
  2748                           	
  2749  04A8                     l2264:	
  2750  04A8  2CA9               	goto	l11967
  2751                           	line	278
  2752                           	
  2753  04A9                     l2260:	
  2754                           	line	220
  2755                           	
  2756  04A9                     l11967:	
  2757  04A9  1683               	bsf	status, 5	;RP0=1, select bank1
  2758  04AA  1303               	bcf	status, 6	;RP1=0, select bank1
  2759  04AB  0854               	movf	(_ROBOTerror)^080h,w
  2760  04AC  3A09               	xorlw	09h
  2761  04AD  1D03               	skipz
  2762  04AE  2CB0               	goto	u5391
  2763  04AF  2CB1               	goto	u5390
  2764  04B0                     u5391:
  2765  04B0  2C92               	goto	l11965
  2766  04B1                     u5390:
  2767                           	
  2768  04B1                     l2275:	
  2769                           	line	279
  2770                           ;Main.c: 278: }
  2771                           ;Main.c: 279: ROBOTerror = 0;
  2772  04B1  01D4               	clrf	(_ROBOTerror)^080h
  2773                           	line	280
  2774                           ;Main.c: 280: break;
  2775  04B2  2CD1               	goto	l11975
  2776                           	line	282
  2777                           ;Main.c: 282: case 5:
  2778                           	
  2779  04B3                     l2276:	
  2780                           	line	283
  2781                           	
  2782  04B3                     l11969:	
  2783                           ;Main.c: 283: ChargeMode();
  2784  04B3  160A  118A  239F   	fcall	_ChargeMode
              120A  118A         
  2785                           	line	284
  2786                           ;Main.c: 284: break;
  2787  04B8  2CD1               	goto	l11975
  2788                           	line	285
  2789                           ;Main.c: 285: default:
  2790                           	
  2791  04B9                     l2277:	
  2792                           	line	287
  2793                           ;Main.c: 287: break;
  2794  04B9  2CD1               	goto	l11975
  2795                           	line	288
  2796                           	
  2797  04BA                     l11971:	
  2798                           ;Main.c: 288: }
  2799  04BA  2CD1               	goto	l11975
  2800                           	line	196
  2801                           	
  2802  04BB                     l2253:	
  2803                           	
  2804  04BB                     l11973:	
  2805  04BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2806  04BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2807  04BD  086A               	movf	(main@choice),w
  2808                           	; Switch size 1, requested type "space"
  2809                           ; Number of cases is 6, Range of values is 0 to 5
  2810                           ; switch strategies available:
  2811                           ; Name         Instructions Cycles
  2812                           ; simple_byte           19    10 (average)
  2813                           ; direct_byte           26     8 (fixed)
  2814                           ; jumptable            260     6 (fixed)
  2815                           ; rangetable            10     6 (fixed)
  2816                           ; spacedrange           18     9 (fixed)
  2817                           ; locatedrange           6     3 (fixed)
  2818                           ;	Chosen strategy is simple_byte
  2819                           
  2820                           	opt asmopt_off
  2821  04BE  3A00               	xorlw	0^0	; case 0
  2822  04BF  1903               	skipnz
  2823  04C0  2AD7               	goto	l11895
  2824  04C1  3A01               	xorlw	1^0	; case 1
  2825  04C2  1903               	skipnz
  2826  04C3  2CD1               	goto	l11975
  2827  04C4  3A03               	xorlw	2^1	; case 2
  2828  04C5  1903               	skipnz
  2829  04C6  2CD1               	goto	l11975
  2830  04C7  3A01               	xorlw	3^2	; case 3
  2831  04C8  1903               	skipnz
  2832  04C9  2CD1               	goto	l11975
  2833  04CA  3A07               	xorlw	4^3	; case 4
  2834  04CB  1903               	skipnz
  2835  04CC  2AE0               	goto	l11897
  2836  04CD  3A01               	xorlw	5^4	; case 5
  2837  04CE  1903               	skipnz
  2838  04CF  2CB3               	goto	l11969
  2839  04D0  2CD1               	goto	l11975
  2840                           	opt asmopt_on
  2841                           
  2842                           	line	288
  2843                           	
  2844  04D1                     l2255:	
  2845                           	line	289
  2846                           	
  2847  04D1                     l11975:	
  2848                           ;Main.c: 289: choice = 255;
  2849  04D1  30FF               	movlw	(0FFh)
  2850  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2851  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2852  04D4  00E5               	movwf	(??_main+0)+0
  2853  04D5  0865               	movf	(??_main+0)+0,w
  2854  04D6  00EA               	movwf	(main@choice)
  2855  04D7  2AAF               	goto	l11879
  2856                           	line	290
  2857                           	
  2858  04D8                     l2278:	
  2859                           	line	178
  2860  04D8  2AAF               	goto	l11879
  2861                           	
  2862  04D9                     l2279:	
  2863                           	line	291
  2864                           	
  2865  04D9                     l2280:	
  2866                           	global	start
  2867  04D9  120A  118A  2812   	ljmp	start
  2868                           	opt stack 0
  2869                           GLOBAL	__end_of_main
  2870  04DC                     	__end_of_main:
  2871 ;; =============== function _main ends ============
  2872                           
  2873                           	signat	_main,88
  2874                           	global	_Init_Follow_IR
  2875                           psect	text1062,local,class=CODE,delta=2
  2876                           global __ptext1062
  2877  1059                     __ptext1062:
  2878                           
  2879 ;; *************** function _Init_Follow_IR *****************
  2880 ;; Defined at:
  2881 ;;		line 294 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0
  2897 ;;      Temps:          0       3       0       0       0
  2898 ;;      Totals:         0       3       0       0       0
  2899 ;;Total ram usage:        3 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    7
  2902 ;; This function calls:
  2903 ;;		_calibrateIR
  2904 ;;		_rotate
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           psect	text1062
  2910                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2911                           	line	294
  2912                           	global	__size_of_Init_Follow_IR
  2913  0021                     	__size_of_Init_Follow_IR	equ	__end_of_Init_Follow_IR-_Init_Follow_IR
  2914                           	
  2915  1059                     _Init_Follow_IR:	
  2916                           	opt	stack 0
  2917                           ; Regs used in _Init_Follow_IR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2918                           	line	295
  2919                           	
  2920  1059                     l11865:	
  2921                           ;Main.c: 295: calibrateIR();
  2922  1059  160A  118A  2509   	fcall	_calibrateIR
              160A  118A         
  2923                           	line	296
  2924                           	
  2925  105E                     l11867:	
  2926                           ;Main.c: 296: _delay((unsigned long)((500)*(20000000/4000.0)));
  2927                           	opt asmopt_off
  2928  105E  300D               movlw  13
  2929  105F  1283               	bcf	status, 5	;RP0=0, select bank0
  2930  1060  1303               	bcf	status, 6	;RP1=0, select bank0
  2931  1061  00DB               movwf	((??_Init_Follow_IR+0)+0+2),f
  2932  1062  30AF               movlw	175
  2933  1063  00DA               movwf	((??_Init_Follow_IR+0)+0+1),f
  2934  1064  30C1               	movlw	193
  2935  1065  00D9               movwf	((??_Init_Follow_IR+0)+0),f
  2936  1066                     u5427:
  2937  1066  0BD9               	decfsz	((??_Init_Follow_IR+0)+0),f
  2938  1067  2866               	goto	u5427
  2939  1068  0BDA               	decfsz	((??_Init_Follow_IR+0)+0+1),f
  2940  1069  2866               	goto	u5427
  2941  106A  0BDB               	decfsz	((??_Init_Follow_IR+0)+0+2),f
  2942  106B  2866               	goto	u5427
  2943  106C  0064               	clrwdt
  2944                           opt asmopt_on
  2945                           
  2946                           	line	297
  2947                           	
  2948  106D                     l11869:	
  2949                           ;Main.c: 297: rotate(25, 0);
  2950  106D  3019               	movlw	low(019h)
  2951  106E  1283               	bcf	status, 5	;RP0=0, select bank0
  2952  106F  1303               	bcf	status, 6	;RP1=0, select bank0
  2953  1070  00A3               	movwf	(?_rotate)
  2954  1071  3000               	movlw	high(019h)
  2955  1072  00A4               	movwf	((?_rotate))+1
  2956  1073  01A5               	clrf	0+(?_rotate)+02h
  2957  1074  160A  118A  243A   	fcall	_rotate
              160A  118A         
  2958                           	line	298
  2959                           	
  2960  1079                     l2283:	
  2961  1079  0008               	return
  2962                           	opt stack 0
  2963                           GLOBAL	__end_of_Init_Follow_IR
  2964  107A                     	__end_of_Init_Follow_IR:
  2965 ;; =============== function _Init_Follow_IR ends ============
  2966                           
  2967                           	signat	_Init_Follow_IR,88
  2968                           	global	_ChargeMode
  2969                           psect	text1063,local,class=CODE,delta=2
  2970                           global __ptext1063
  2971  139F                     __ptext1063:
  2972                           
  2973 ;; *************** function _ChargeMode *****************
  2974 ;; Defined at:
  2975 ;;		line 353 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          0       1       0       0       0
  2992 ;;      Totals:         0       1       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    6
  2996 ;; This function calls:
  2997 ;;		_ser_putch
  2998 ;;		_RobotBattRead
  2999 ;;		_UpdateDisplay
  3000 ;; This function is called by:
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           psect	text1063
  3005                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3006                           	line	353
  3007                           	global	__size_of_ChargeMode
  3008  004B                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3009                           	
  3010  139F                     _ChargeMode:	
  3011                           	opt	stack 1
  3012                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3013                           	line	355
  3014                           	
  3015  139F                     l11843:	
  3016                           ;Main.c: 355: currentMenu = 2;
  3017  139F  3002               	movlw	(02h)
  3018  13A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3019  13A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3020  13A2  00D9               	movwf	(??_ChargeMode+0)+0
  3021  13A3  0859               	movf	(??_ChargeMode+0)+0,w
  3022  13A4  1683               	bsf	status, 5	;RP0=1, select bank1
  3023  13A5  1303               	bcf	status, 6	;RP1=0, select bank1
  3024  13A6  00D8               	movwf	(_currentMenu)^080h	;volatile
  3025                           	line	356
  3026                           	
  3027  13A7                     l11845:	
  3028                           ;Main.c: 356: ser_putch(128);
  3029  13A7  3080               	movlw	(080h)
  3030  13A8  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  3031  13AD  2BAE               	goto	l11847
  3032                           	line	358
  3033                           ;Main.c: 358: while (1)
  3034                           	
  3035  13AE                     l2304:	
  3036                           	line	360
  3037                           	
  3038  13AE                     l11847:	
  3039                           ;Main.c: 359: {
  3040                           ;Main.c: 360: if (RTC_FLAG_250MS == 1)
  3041  13AE  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3042  13AF  2BB1               	goto	u5341
  3043  13B0  2BB2               	goto	u5340
  3044  13B1                     u5341:
  3045  13B1  2BD6               	goto	l11863
  3046  13B2                     u5340:
  3047                           	line	362
  3048                           	
  3049  13B2                     l11849:	
  3050                           ;Main.c: 361: {
  3051                           ;Main.c: 362: RTC_FLAG_250MS = 0;
  3052  13B2  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3053                           	line	363
  3054                           	
  3055  13B3                     l11851:	
  3056                           ;Main.c: 363: RobotBattRead();
  3057  13B3  160A  118A  26DD   	fcall	_RobotBattRead
              160A  118A         
  3058                           	line	364
  3059                           ;Main.c: 364: UpdateDisplay();
  3060  13B8  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  3061  13BD  2BD6               	goto	l11863
  3062                           	line	365
  3063                           	
  3064  13BE                     l2305:	
  3065                           	line	366
  3066                           ;Main.c: 365: }
  3067                           ;Main.c: 366: switch (buttonPressed)
  3068  13BE  2BD6               	goto	l11863
  3069                           	line	368
  3070                           ;Main.c: 367: {
  3071                           ;Main.c: 368: case 1:
  3072                           	
  3073  13BF                     l2307:	
  3074                           	line	369
  3075                           ;Main.c: 369: buttonPressed = 0;
  3076  13BF  01FD               	clrf	(_buttonPressed)	;volatile
  3077                           	line	370
  3078                           ;Main.c: 370: break;
  3079  13C0  2BAE               	goto	l11847
  3080                           	line	371
  3081                           ;Main.c: 371: case 2:
  3082                           	
  3083  13C1                     l2309:	
  3084                           	line	372
  3085                           ;Main.c: 372: buttonPressed = 0;
  3086  13C1  01FD               	clrf	(_buttonPressed)	;volatile
  3087                           	line	373
  3088                           ;Main.c: 373: break;
  3089  13C2  2BAE               	goto	l11847
  3090                           	line	374
  3091                           ;Main.c: 374: case 3:
  3092                           	
  3093  13C3                     l2310:	
  3094                           	line	375
  3095                           ;Main.c: 375: buttonPressed = 0;
  3096  13C3  01FD               	clrf	(_buttonPressed)	;volatile
  3097                           	line	376
  3098                           ;Main.c: 376: break;
  3099  13C4  2BAE               	goto	l11847
  3100                           	line	377
  3101                           ;Main.c: 377: case 4:
  3102                           	
  3103  13C5                     l2311:	
  3104                           	line	378
  3105                           ;Main.c: 378: buttonPressed = 0;
  3106  13C5  01FD               	clrf	(_buttonPressed)	;volatile
  3107                           	line	379
  3108                           ;Main.c: 379: break;
  3109  13C6  2BAE               	goto	l11847
  3110                           	line	380
  3111                           ;Main.c: 380: case 5:
  3112                           	
  3113  13C7                     l2312:	
  3114                           	line	381
  3115                           	
  3116  13C7                     l11853:	
  3117                           ;Main.c: 381: ser_putch(132);
  3118  13C7  3084               	movlw	(084h)
  3119  13C8  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  3120                           	line	382
  3121                           	
  3122  13CD                     l11855:	
  3123                           ;Main.c: 382: buttonPressed = 0;
  3124  13CD  01FD               	clrf	(_buttonPressed)	;volatile
  3125                           	line	383
  3126                           	
  3127  13CE                     l11857:	
  3128                           ;Main.c: 383: currentMenu = 0;
  3129  13CE  1683               	bsf	status, 5	;RP0=1, select bank1
  3130  13CF  1303               	bcf	status, 6	;RP1=0, select bank1
  3131  13D0  01D8               	clrf	(_currentMenu)^080h	;volatile
  3132  13D1  2BE9               	goto	l2313
  3133                           	line	384
  3134                           	
  3135  13D2                     l11859:	
  3136                           ;Main.c: 384: return;
  3137  13D2  2BE9               	goto	l2313
  3138                           	line	385
  3139                           ;Main.c: 385: default:
  3140                           	
  3141  13D3                     l2314:	
  3142                           	line	386
  3143                           ;Main.c: 386: buttonPressed = 0;
  3144  13D3  01FD               	clrf	(_buttonPressed)	;volatile
  3145                           	line	387
  3146                           ;Main.c: 387: break;
  3147  13D4  2BAE               	goto	l11847
  3148                           	line	388
  3149                           	
  3150  13D5                     l11861:	
  3151                           ;Main.c: 388: }
  3152  13D5  2BAE               	goto	l11847
  3153                           	line	366
  3154                           	
  3155  13D6                     l2306:	
  3156                           	
  3157  13D6                     l11863:	
  3158  13D6  087D               	movf	(_buttonPressed),w	;volatile
  3159                           	; Switch size 1, requested type "space"
  3160                           ; Number of cases is 5, Range of values is 1 to 5
  3161                           ; switch strategies available:
  3162                           ; Name         Instructions Cycles
  3163                           ; simple_byte           16     9 (average)
  3164                           ; direct_byte           26    11 (fixed)
  3165                           ; jumptable            263     9 (fixed)
  3166                           ;	Chosen strategy is simple_byte
  3167                           
  3168                           	opt asmopt_off
  3169  13D7  3A01               	xorlw	1^0	; case 1
  3170  13D8  1903               	skipnz
  3171  13D9  2BBF               	goto	l2307
  3172  13DA  3A03               	xorlw	2^1	; case 2
  3173  13DB  1903               	skipnz
  3174  13DC  2BC1               	goto	l2309
  3175  13DD  3A01               	xorlw	3^2	; case 3
  3176  13DE  1903               	skipnz
  3177  13DF  2BC3               	goto	l2310
  3178  13E0  3A07               	xorlw	4^3	; case 4
  3179  13E1  1903               	skipnz
  3180  13E2  2BC5               	goto	l2311
  3181  13E3  3A01               	xorlw	5^4	; case 5
  3182  13E4  1903               	skipnz
  3183  13E5  2BC7               	goto	l11853
  3184  13E6  2BD3               	goto	l2314
  3185                           	opt asmopt_on
  3186                           
  3187                           	line	388
  3188                           	
  3189  13E7                     l2308:	
  3190  13E7  2BAE               	goto	l11847
  3191                           	line	389
  3192                           	
  3193  13E8                     l2315:	
  3194                           	line	358
  3195  13E8  2BAE               	goto	l11847
  3196                           	
  3197  13E9                     l2316:	
  3198                           	line	390
  3199                           	
  3200  13E9                     l2313:	
  3201  13E9  0008               	return
  3202                           	opt stack 0
  3203                           GLOBAL	__end_of_ChargeMode
  3204  13EA                     	__end_of_ChargeMode:
  3205 ;; =============== function _ChargeMode ends ============
  3206                           
  3207                           	signat	_ChargeMode,88
  3208                           	global	_robot_turnRight
  3209                           psect	text1064,local,class=CODE,delta=2
  3210                           global __ptext1064
  3211  0015                     __ptext1064:
  3212                           
  3213 ;; *************** function _robot_turnRight *****************
  3214 ;; Defined at:
  3215 ;;		line 257 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  speed           2   57[BANK0 ] int 
  3218 ;;  AdcTarget       2   59[BANK0 ] int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  temp1           2   66[BANK0 ] int 
  3221 ;;  turnTarget      2   64[BANK0 ] int 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;		None               void
  3224 ;; Registers used:
  3225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         0       4       0       0       0
  3232 ;;      Locals:         0       4       0       0       0
  3233 ;;      Temps:          0       3       0       0       0
  3234 ;;      Totals:         0      11       0       0       0
  3235 ;;Total ram usage:       11 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    7
  3238 ;; This function calls:
  3239 ;;		_RobotDrive
  3240 ;;		_readAvgDistance
  3241 ;;		_ser_putch
  3242 ;;		_robot_read
  3243 ;;		_UpdateDisplay
  3244 ;;		___wmul
  3245 ;;		___awdiv
  3246 ;;		_abs
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;;		_RightTurn
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           psect	text1064
  3253                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3254                           	line	257
  3255                           	global	__size_of_robot_turnRight
  3256  0287                     	__size_of_robot_turnRight	equ	__end_of_robot_turnRight-_robot_turnRight
  3257                           	
  3258  0015                     _robot_turnRight:	
  3259                           	opt	stack 0
  3260                           ; Regs used in _robot_turnRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3261                           	line	258
  3262                           	
  3263  0015                     l11737:	
  3264                           ;robot.c: 258: angleTurned = 0;
  3265  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  3266  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  3267  0017  01BE               	clrf	(_angleTurned)^080h
  3268  0018  01BF               	clrf	(_angleTurned+1)^080h
  3269                           	line	260
  3270                           ;robot.c: 259: int temp1;
  3271                           ;robot.c: 260: int turnTarget = 0;
  3272  0019  1283               	bcf	status, 5	;RP0=0, select bank0
  3273  001A  1303               	bcf	status, 6	;RP1=0, select bank0
  3274  001B  01E0               	clrf	(robot_turnRight@turnTarget)
  3275  001C  01E1               	clrf	(robot_turnRight@turnTarget+1)
  3276                           	line	261
  3277                           	
  3278  001D                     l11739:	
  3279                           ;robot.c: 261: RobotDrive(speed, 0x7FFF);
  3280  001D  085A               	movf	(robot_turnRight@speed+1),w
  3281  001E  01B0               	clrf	(?_RobotDrive+1)
  3282  001F  07B0               	addwf	(?_RobotDrive+1)
  3283  0020  0859               	movf	(robot_turnRight@speed),w
  3284  0021  01AF               	clrf	(?_RobotDrive)
  3285  0022  07AF               	addwf	(?_RobotDrive)
  3286                           
  3287  0023  30FF               	movlw	low(07FFFh)
  3288  0024  00B1               	movwf	0+(?_RobotDrive)+02h
  3289  0025  307F               	movlw	high(07FFFh)
  3290  0026  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3291  0027  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  3292                           	line	262
  3293                           	
  3294  002C                     l11741:	
  3295                           ;robot.c: 262: ROBOTerror = 0;
  3296  002C  1683               	bsf	status, 5	;RP0=1, select bank1
  3297  002D  1303               	bcf	status, 6	;RP1=0, select bank1
  3298  002E  01D4               	clrf	(_ROBOTerror)^080h
  3299  002F  2830               	goto	l11743
  3300                           	line	265
  3301                           ;robot.c: 265: while (1)
  3302                           	
  3303  0030                     l6136:	
  3304                           	line	267
  3305                           	
  3306  0030                     l11743:	
  3307                           ;robot.c: 266: {
  3308                           ;robot.c: 267: readAvgDistance();
  3309  0030  160A  118A  265F   	fcall	_readAvgDistance
              120A  118A         
  3310                           	line	268
  3311                           	
  3312  0035                     l11745:	
  3313                           ;robot.c: 268: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 15))
  3314  0035  1283               	bcf	status, 5	;RP0=0, select bank0
  3315  0036  1303               	bcf	status, 6	;RP1=0, select bank0
  3316  0037  086D               	movf	(_adcVal+1),w	;volatile
  3317  0038  025C               	subwf	(robot_turnRight@AdcTarget+1),w
  3318  0039  1D03               	skipz
  3319  003A  283D               	goto	u5215
  3320  003B  086C               	movf	(_adcVal),w	;volatile
  3321  003C  025B               	subwf	(robot_turnRight@AdcTarget),w
  3322  003D                     u5215:
  3323  003D  1803               	skipnc
  3324  003E  2840               	goto	u5211
  3325  003F  2841               	goto	u5210
  3326  0040                     u5211:
  3327  0040  2863               	goto	l11751
  3328  0041                     u5210:
  3329                           	
  3330  0041                     l11747:	
  3331  0041  085B               	movf	(robot_turnRight@AdcTarget),w
  3332  0042  3E0F               	addlw	low(0Fh)
  3333  0043  00DD               	movwf	(??_robot_turnRight+0)+0
  3334  0044  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3335  0045  1803               	skipnc
  3336  0046  3E01               	addlw	1
  3337  0047  3E00               	addlw	high(0Fh)
  3338  0048  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3339  0049  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3340  004A  026D               	subwf	(_adcVal+1),w	;volatile
  3341  004B  1D03               	skipz
  3342  004C  284F               	goto	u5225
  3343  004D  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3344  004E  026C               	subwf	(_adcVal),w	;volatile
  3345  004F                     u5225:
  3346  004F  1803               	skipnc
  3347  0050  2852               	goto	u5221
  3348  0051  2853               	goto	u5220
  3349  0052                     u5221:
  3350  0052  2863               	goto	l11751
  3351  0053                     u5220:
  3352                           	line	270
  3353                           	
  3354  0053                     l11749:	
  3355                           ;robot.c: 269: {
  3356                           ;robot.c: 270: RobotDrive(speed, 1700);
  3357  0053  085A               	movf	(robot_turnRight@speed+1),w
  3358  0054  01B0               	clrf	(?_RobotDrive+1)
  3359  0055  07B0               	addwf	(?_RobotDrive+1)
  3360  0056  0859               	movf	(robot_turnRight@speed),w
  3361  0057  01AF               	clrf	(?_RobotDrive)
  3362  0058  07AF               	addwf	(?_RobotDrive)
  3363                           
  3364  0059  30A4               	movlw	low(06A4h)
  3365  005A  00B1               	movwf	0+(?_RobotDrive)+02h
  3366  005B  3006               	movlw	high(06A4h)
  3367  005C  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3368  005D  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  3369                           	line	271
  3370                           ;robot.c: 271: }
  3371  0062  28D9               	goto	l6138
  3372                           	line	272
  3373                           	
  3374  0063                     l6137:	
  3375                           	
  3376  0063                     l11751:	
  3377                           ;robot.c: 272: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - 15))
  3378  0063  1283               	bcf	status, 5	;RP0=0, select bank0
  3379  0064  1303               	bcf	status, 6	;RP1=0, select bank0
  3380  0065  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3381  0066  026D               	subwf	(_adcVal+1),w	;volatile
  3382  0067  1D03               	skipz
  3383  0068  286B               	goto	u5235
  3384  0069  085B               	movf	(robot_turnRight@AdcTarget),w
  3385  006A  026C               	subwf	(_adcVal),w	;volatile
  3386  006B                     u5235:
  3387  006B  1803               	skipnc
  3388  006C  286E               	goto	u5231
  3389  006D  286F               	goto	u5230
  3390  006E                     u5231:
  3391  006E  2891               	goto	l11757
  3392  006F                     u5230:
  3393                           	
  3394  006F                     l11753:	
  3395  006F  085B               	movf	(robot_turnRight@AdcTarget),w
  3396  0070  3EF1               	addlw	low(0FFF1h)
  3397  0071  00DD               	movwf	(??_robot_turnRight+0)+0
  3398  0072  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3399  0073  1803               	skipnc
  3400  0074  3E01               	addlw	1
  3401  0075  3EFF               	addlw	high(0FFF1h)
  3402  0076  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3403  0077  086D               	movf	(_adcVal+1),w	;volatile
  3404  0078  025E               	subwf	1+(??_robot_turnRight+0)+0,w
  3405  0079  1D03               	skipz
  3406  007A  287D               	goto	u5245
  3407  007B  086C               	movf	(_adcVal),w	;volatile
  3408  007C  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3409  007D                     u5245:
  3410  007D  1803               	skipnc
  3411  007E  2880               	goto	u5241
  3412  007F  2881               	goto	u5240
  3413  0080                     u5241:
  3414  0080  2891               	goto	l11757
  3415  0081                     u5240:
  3416                           	line	274
  3417                           	
  3418  0081                     l11755:	
  3419                           ;robot.c: 273: {
  3420                           ;robot.c: 274: RobotDrive(speed, -1700);
  3421  0081  085A               	movf	(robot_turnRight@speed+1),w
  3422  0082  01B0               	clrf	(?_RobotDrive+1)
  3423  0083  07B0               	addwf	(?_RobotDrive+1)
  3424  0084  0859               	movf	(robot_turnRight@speed),w
  3425  0085  01AF               	clrf	(?_RobotDrive)
  3426  0086  07AF               	addwf	(?_RobotDrive)
  3427                           
  3428  0087  305C               	movlw	low(-1700)
  3429  0088  00B1               	movwf	0+(?_RobotDrive)+02h
  3430  0089  30F9               	movlw	high(-1700)
  3431  008A  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3432  008B  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  3433                           	line	275
  3434                           ;robot.c: 275: }
  3435  0090  28D9               	goto	l6138
  3436                           	line	276
  3437                           	
  3438  0091                     l6139:	
  3439                           	
  3440  0091                     l11757:	
  3441                           ;robot.c: 276: else if (adcVal <= (AdcTarget - 50) || adcVal >= (AdcTarget + 15))
  3442  0091  1283               	bcf	status, 5	;RP0=0, select bank0
  3443  0092  1303               	bcf	status, 6	;RP1=0, select bank0
  3444  0093  085B               	movf	(robot_turnRight@AdcTarget),w
  3445  0094  3ECE               	addlw	low(0FFCEh)
  3446  0095  00DD               	movwf	(??_robot_turnRight+0)+0
  3447  0096  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3448  0097  1803               	skipnc
  3449  0098  3E01               	addlw	1
  3450  0099  3EFF               	addlw	high(0FFCEh)
  3451  009A  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3452  009B  086D               	movf	(_adcVal+1),w	;volatile
  3453  009C  025E               	subwf	1+(??_robot_turnRight+0)+0,w
  3454  009D  1D03               	skipz
  3455  009E  28A1               	goto	u5255
  3456  009F  086C               	movf	(_adcVal),w	;volatile
  3457  00A0  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3458  00A1                     u5255:
  3459  00A1  1803               	skipnc
  3460  00A2  28A4               	goto	u5251
  3461  00A3  28A5               	goto	u5250
  3462  00A4                     u5251:
  3463  00A4  28B8               	goto	l11761
  3464  00A5                     u5250:
  3465                           	
  3466  00A5                     l11759:	
  3467  00A5  085B               	movf	(robot_turnRight@AdcTarget),w
  3468  00A6  3E0F               	addlw	low(0Fh)
  3469  00A7  00DD               	movwf	(??_robot_turnRight+0)+0
  3470  00A8  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3471  00A9  1803               	skipnc
  3472  00AA  3E01               	addlw	1
  3473  00AB  3E00               	addlw	high(0Fh)
  3474  00AC  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3475  00AD  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3476  00AE  026D               	subwf	(_adcVal+1),w	;volatile
  3477  00AF  1D03               	skipz
  3478  00B0  28B3               	goto	u5265
  3479  00B1  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3480  00B2  026C               	subwf	(_adcVal),w	;volatile
  3481  00B3                     u5265:
  3482  00B3  1C03               	skipc
  3483  00B4  28B6               	goto	u5261
  3484  00B5  28B7               	goto	u5260
  3485  00B6                     u5261:
  3486  00B6  28C6               	goto	l11765
  3487  00B7                     u5260:
  3488  00B7  28B8               	goto	l11761
  3489                           	
  3490  00B8                     l6143:	
  3491                           	line	283
  3492                           	
  3493  00B8                     l11761:	
  3494                           ;robot.c: 277: {
  3495                           ;robot.c: 283: ser_putch(141);
  3496  00B8  308D               	movlw	(08Dh)
  3497  00B9  160A  118A  21D2   	fcall	_ser_putch
              120A  118A         
  3498                           	line	284
  3499                           ;robot.c: 284: ser_putch(0);
  3500  00BE  3000               	movlw	(0)
  3501  00BF  160A  118A  21D2   	fcall	_ser_putch
              120A  118A         
  3502                           	line	285
  3503                           ;robot.c: 285: break;
  3504  00C4  2984               	goto	l11795
  3505                           	line	287
  3506                           	
  3507  00C5                     l11763:	
  3508                           ;robot.c: 287: }
  3509  00C5  28D9               	goto	l6138
  3510                           	line	289
  3511                           	
  3512  00C6                     l6141:	
  3513                           	line	291
  3514                           	
  3515  00C6                     l11765:	
  3516                           ;robot.c: 289: else
  3517                           ;robot.c: 290: {
  3518                           ;robot.c: 291: RobotDrive(speed, 0x7FFF);
  3519  00C6  1283               	bcf	status, 5	;RP0=0, select bank0
  3520  00C7  1303               	bcf	status, 6	;RP1=0, select bank0
  3521  00C8  085A               	movf	(robot_turnRight@speed+1),w
  3522  00C9  01B0               	clrf	(?_RobotDrive+1)
  3523  00CA  07B0               	addwf	(?_RobotDrive+1)
  3524  00CB  0859               	movf	(robot_turnRight@speed),w
  3525  00CC  01AF               	clrf	(?_RobotDrive)
  3526  00CD  07AF               	addwf	(?_RobotDrive)
  3527                           
  3528  00CE  30FF               	movlw	low(07FFFh)
  3529  00CF  00B1               	movwf	0+(?_RobotDrive)+02h
  3530  00D0  307F               	movlw	high(07FFFh)
  3531  00D1  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3532  00D2  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  3533  00D7  28D9               	goto	l6138
  3534                           	line	292
  3535                           	
  3536  00D8                     l6145:	
  3537  00D8  28D9               	goto	l6138
  3538                           	
  3539  00D9                     l6140:	
  3540                           	
  3541  00D9                     l6138:	
  3542                           	line	293
  3543                           ;robot.c: 292: }
  3544                           ;robot.c: 293: robot_read(2);
  3545  00D9  3002               	movlw	(02h)
  3546  00DA  120A  158A  232E   	fcall	_robot_read
              120A  118A         
  3547                           	line	294
  3548                           	
  3549  00DF                     l11767:	
  3550                           ;robot.c: 294: if (BumpSensors)
  3551  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  3552  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  3553  00E1  086E               	movf	(_BumpSensors),w	;volatile
  3554  00E2  1D03               	skipz
  3555  00E3  28E5               	goto	u5270
  3556  00E4  28EB               	goto	l11771
  3557  00E5                     u5270:
  3558                           	line	296
  3559                           	
  3560  00E5                     l11769:	
  3561                           ;robot.c: 295: {
  3562                           ;robot.c: 296: ROBOTerror = 1;
  3563  00E5  1683               	bsf	status, 5	;RP0=1, select bank1
  3564  00E6  1303               	bcf	status, 6	;RP1=0, select bank1
  3565  00E7  01D4               	clrf	(_ROBOTerror)^080h
  3566  00E8  1403               	bsf	status,0
  3567  00E9  0DD4               	rlf	(_ROBOTerror)^080h,f
  3568                           	line	297
  3569                           ;robot.c: 297: break;
  3570  00EA  2984               	goto	l11795
  3571                           	line	298
  3572                           	
  3573  00EB                     l6146:	
  3574                           	line	299
  3575                           	
  3576  00EB                     l11771:	
  3577                           ;robot.c: 298: }
  3578                           ;robot.c: 299: if (VwallSensor)
  3579  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3580  00EC  086F               	movf	(_VwallSensor),w	;volatile
  3581  00ED  1D03               	skipz
  3582  00EE  28F0               	goto	u5280
  3583  00EF  28F7               	goto	l11775
  3584  00F0                     u5280:
  3585                           	line	301
  3586                           	
  3587  00F0                     l11773:	
  3588                           ;robot.c: 300: {
  3589                           ;robot.c: 301: ROBOTerror = 2;
  3590  00F0  3002               	movlw	(02h)
  3591  00F1  00DD               	movwf	(??_robot_turnRight+0)+0
  3592  00F2  085D               	movf	(??_robot_turnRight+0)+0,w
  3593  00F3  1683               	bsf	status, 5	;RP0=1, select bank1
  3594  00F4  1303               	bcf	status, 6	;RP1=0, select bank1
  3595  00F5  00D4               	movwf	(_ROBOTerror)^080h
  3596                           	line	302
  3597                           ;robot.c: 302: break;
  3598  00F6  2984               	goto	l11795
  3599                           	line	303
  3600                           	
  3601  00F7                     l6147:	
  3602                           	line	304
  3603                           	
  3604  00F7                     l11775:	
  3605                           ;robot.c: 303: }
  3606                           ;robot.c: 304: if (CliffSensors)
  3607  00F7  1683               	bsf	status, 5	;RP0=1, select bank1
  3608  00F8  1303               	bcf	status, 6	;RP1=0, select bank1
  3609  00F9  084F               	movf	(_CliffSensors)^080h,w	;volatile
  3610  00FA  1D03               	skipz
  3611  00FB  28FD               	goto	u5290
  3612  00FC  2906               	goto	l11779
  3613  00FD                     u5290:
  3614                           	line	306
  3615                           	
  3616  00FD                     l11777:	
  3617                           ;robot.c: 305: {
  3618                           ;robot.c: 306: ROBOTerror = 3;
  3619  00FD  3003               	movlw	(03h)
  3620  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3621  00FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3622  0100  00DD               	movwf	(??_robot_turnRight+0)+0
  3623  0101  085D               	movf	(??_robot_turnRight+0)+0,w
  3624  0102  1683               	bsf	status, 5	;RP0=1, select bank1
  3625  0103  1303               	bcf	status, 6	;RP1=0, select bank1
  3626  0104  00D4               	movwf	(_ROBOTerror)^080h
  3627                           	line	307
  3628                           ;robot.c: 307: break;
  3629  0105  2984               	goto	l11795
  3630                           	line	308
  3631                           	
  3632  0106                     l6148:	
  3633                           	line	309
  3634                           	
  3635  0106                     l11779:	
  3636                           ;robot.c: 308: }
  3637                           ;robot.c: 309: temp1 = DistHighByte;
  3638  0106  0850               	movf	(_DistHighByte)^080h,w	;volatile
  3639  0107  1283               	bcf	status, 5	;RP0=0, select bank0
  3640  0108  1303               	bcf	status, 6	;RP1=0, select bank0
  3641  0109  00DD               	movwf	(??_robot_turnRight+0)+0
  3642  010A  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3643  010B  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3644  010C  00E2               	movwf	(robot_turnRight@temp1)
  3645  010D  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3646  010E  00E3               	movwf	(robot_turnRight@temp1+1)
  3647                           	line	310
  3648                           	
  3649  010F                     l11781:	
  3650                           ;robot.c: 310: temp1 = temp1 << 8;
  3651  010F  0863               	movf	(robot_turnRight@temp1+1),w
  3652  0110  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3653  0111  0862               	movf	(robot_turnRight@temp1),w
  3654  0112  00DD               	movwf	(??_robot_turnRight+0)+0
  3655  0113  085D               	movf	(??_robot_turnRight+0)+0,w
  3656  0114  00DE               	movwf	(??_robot_turnRight+0)+1
  3657  0115  01DD               	clrf	(??_robot_turnRight+0)+0
  3658  0116  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3659  0117  00E2               	movwf	(robot_turnRight@temp1)
  3660  0118  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3661  0119  00E3               	movwf	(robot_turnRight@temp1+1)
  3662                           	line	311
  3663                           	
  3664  011A                     l11783:	
  3665                           ;robot.c: 311: temp1 += DistLowByte;
  3666  011A  1683               	bsf	status, 5	;RP0=1, select bank1
  3667  011B  1303               	bcf	status, 6	;RP1=0, select bank1
  3668  011C  0851               	movf	(_DistLowByte)^080h,w	;volatile
  3669  011D  1283               	bcf	status, 5	;RP0=0, select bank0
  3670  011E  1303               	bcf	status, 6	;RP1=0, select bank0
  3671  011F  00DD               	movwf	(??_robot_turnRight+0)+0
  3672  0120  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3673  0121  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3674  0122  07E2               	addwf	(robot_turnRight@temp1),f
  3675  0123  1803               	skipnc
  3676  0124  0AE3               	incf	(robot_turnRight@temp1+1),f
  3677  0125  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3678  0126  07E3               	addwf	(robot_turnRight@temp1+1),f
  3679                           	line	312
  3680                           	
  3681  0127                     l11785:	
  3682                           ;robot.c: 312: distTravelled += temp1;
  3683  0127  0862               	movf	(robot_turnRight@temp1),w
  3684  0128  1683               	bsf	status, 5	;RP0=1, select bank1
  3685  0129  1303               	bcf	status, 6	;RP1=0, select bank1
  3686  012A  07C0               	addwf	(_distTravelled)^080h,f
  3687  012B  1803               	skipnc
  3688  012C  0AC1               	incf	(_distTravelled+1)^080h,f
  3689  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  3690  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  3691  012F  0863               	movf	(robot_turnRight@temp1+1),w
  3692  0130  1683               	bsf	status, 5	;RP0=1, select bank1
  3693  0131  1303               	bcf	status, 6	;RP1=0, select bank1
  3694  0132  07C1               	addwf	(_distTravelled+1)^080h,f
  3695                           	line	313
  3696                           	
  3697  0133                     l11787:	
  3698                           ;robot.c: 313: TotalDistTravelled += temp1;
  3699  0133  1283               	bcf	status, 5	;RP0=0, select bank0
  3700  0134  1303               	bcf	status, 6	;RP1=0, select bank0
  3701  0135  0862               	movf	(robot_turnRight@temp1),w
  3702  0136  1683               	bsf	status, 5	;RP0=1, select bank1
  3703  0137  1303               	bcf	status, 6	;RP1=0, select bank1
  3704  0138  07BC               	addwf	(_TotalDistTravelled)^080h,f
  3705  0139  1803               	skipnc
  3706  013A  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  3707  013B  1283               	bcf	status, 5	;RP0=0, select bank0
  3708  013C  1303               	bcf	status, 6	;RP1=0, select bank0
  3709  013D  0863               	movf	(robot_turnRight@temp1+1),w
  3710  013E  1683               	bsf	status, 5	;RP0=1, select bank1
  3711  013F  1303               	bcf	status, 6	;RP1=0, select bank1
  3712  0140  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  3713                           	line	314
  3714                           	
  3715  0141                     l11789:	
  3716                           ;robot.c: 314: temp1 = AngleHighByte;
  3717  0141  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  3718  0142  1283               	bcf	status, 5	;RP0=0, select bank0
  3719  0143  1303               	bcf	status, 6	;RP1=0, select bank0
  3720  0144  00DD               	movwf	(??_robot_turnRight+0)+0
  3721  0145  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3722  0146  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3723  0147  00E2               	movwf	(robot_turnRight@temp1)
  3724  0148  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3725  0149  00E3               	movwf	(robot_turnRight@temp1+1)
  3726                           	line	315
  3727                           	
  3728  014A                     l11791:	
  3729                           ;robot.c: 315: temp1 = temp1 << 8;
  3730  014A  0863               	movf	(robot_turnRight@temp1+1),w
  3731  014B  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3732  014C  0862               	movf	(robot_turnRight@temp1),w
  3733  014D  00DD               	movwf	(??_robot_turnRight+0)+0
  3734  014E  085D               	movf	(??_robot_turnRight+0)+0,w
  3735  014F  00DE               	movwf	(??_robot_turnRight+0)+1
  3736  0150  01DD               	clrf	(??_robot_turnRight+0)+0
  3737  0151  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3738  0152  00E2               	movwf	(robot_turnRight@temp1)
  3739  0153  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3740  0154  00E3               	movwf	(robot_turnRight@temp1+1)
  3741                           	line	316
  3742                           ;robot.c: 316: temp1 += AngleLowByte;
  3743  0155  1683               	bsf	status, 5	;RP0=1, select bank1
  3744  0156  1303               	bcf	status, 6	;RP1=0, select bank1
  3745  0157  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  3746  0158  1283               	bcf	status, 5	;RP0=0, select bank0
  3747  0159  1303               	bcf	status, 6	;RP1=0, select bank0
  3748  015A  00DD               	movwf	(??_robot_turnRight+0)+0
  3749  015B  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3750  015C  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3751  015D  07E2               	addwf	(robot_turnRight@temp1),f
  3752  015E  1803               	skipnc
  3753  015F  0AE3               	incf	(robot_turnRight@temp1+1),f
  3754  0160  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3755  0161  07E3               	addwf	(robot_turnRight@temp1+1),f
  3756                           	line	317
  3757                           ;robot.c: 317: angleTurned += temp1;
  3758  0162  0862               	movf	(robot_turnRight@temp1),w
  3759  0163  1683               	bsf	status, 5	;RP0=1, select bank1
  3760  0164  1303               	bcf	status, 6	;RP1=0, select bank1
  3761  0165  07BE               	addwf	(_angleTurned)^080h,f
  3762  0166  1803               	skipnc
  3763  0167  0ABF               	incf	(_angleTurned+1)^080h,f
  3764  0168  1283               	bcf	status, 5	;RP0=0, select bank0
  3765  0169  1303               	bcf	status, 6	;RP1=0, select bank0
  3766  016A  0863               	movf	(robot_turnRight@temp1+1),w
  3767  016B  1683               	bsf	status, 5	;RP0=1, select bank1
  3768  016C  1303               	bcf	status, 6	;RP1=0, select bank1
  3769  016D  07BF               	addwf	(_angleTurned+1)^080h,f
  3770                           	line	318
  3771                           ;robot.c: 318: Disp2 = RobotPos;
  3772  016E  0856               	movf	(_RobotPos)^080h,w
  3773  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  3774  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  3775  0171  00DD               	movwf	(??_robot_turnRight+0)+0
  3776  0172  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3777  0173  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3778  0174  1683               	bsf	status, 5	;RP0=1, select bank1
  3779  0175  1303               	bcf	status, 6	;RP1=0, select bank1
  3780  0176  00B6               	movwf	(_Disp2)^080h
  3781  0177  1283               	bcf	status, 5	;RP0=0, select bank0
  3782  0178  1303               	bcf	status, 6	;RP1=0, select bank0
  3783  0179  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3784  017A  1683               	bsf	status, 5	;RP0=1, select bank1
  3785  017B  1303               	bcf	status, 6	;RP1=0, select bank1
  3786  017C  00B7               	movwf	(_Disp2+1)^080h
  3787                           	line	319
  3788                           	
  3789  017D                     l11793:	
  3790                           ;robot.c: 319: UpdateDisplay();
  3791  017D  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3792  0182  2830               	goto	l11743
  3793                           	line	320
  3794                           	
  3795  0183                     l6149:	
  3796                           	line	265
  3797  0183  2830               	goto	l11743
  3798                           	
  3799  0184                     l6144:	
  3800                           	line	321
  3801                           	
  3802  0184                     l11795:	
  3803                           ;robot.c: 320: }
  3804                           ;robot.c: 321: RobotDrive((speed * 3/4), -450);
  3805  0184  3004               	movlw	low(04h)
  3806  0185  1283               	bcf	status, 5	;RP0=0, select bank0
  3807  0186  1303               	bcf	status, 6	;RP1=0, select bank0
  3808  0187  00A6               	movwf	(?___awdiv)
  3809  0188  3000               	movlw	high(04h)
  3810  0189  00A7               	movwf	((?___awdiv))+1
  3811  018A  085A               	movf	(robot_turnRight@speed+1),w
  3812  018B  01A1               	clrf	(?___wmul+1)
  3813  018C  07A1               	addwf	(?___wmul+1)
  3814  018D  0859               	movf	(robot_turnRight@speed),w
  3815  018E  01A0               	clrf	(?___wmul)
  3816  018F  07A0               	addwf	(?___wmul)
  3817                           
  3818  0190  3003               	movlw	low(03h)
  3819  0191  00A2               	movwf	0+(?___wmul)+02h
  3820  0192  3000               	movlw	high(03h)
  3821  0193  00A3               	movwf	(0+(?___wmul)+02h)+1
  3822  0194  160A  118A  214E   	fcall	___wmul
              120A  118A         
  3823  0199  1283               	bcf	status, 5	;RP0=0, select bank0
  3824  019A  1303               	bcf	status, 6	;RP1=0, select bank0
  3825  019B  0821               	movf	(1+(?___wmul)),w
  3826  019C  01A9               	clrf	1+(?___awdiv)+02h
  3827  019D  07A9               	addwf	1+(?___awdiv)+02h
  3828  019E  0820               	movf	(0+(?___wmul)),w
  3829  019F  01A8               	clrf	0+(?___awdiv)+02h
  3830  01A0  07A8               	addwf	0+(?___awdiv)+02h
  3831                           
  3832  01A1  160A  118A  25E9   	fcall	___awdiv
              120A  118A         
  3833  01A6  1283               	bcf	status, 5	;RP0=0, select bank0
  3834  01A7  1303               	bcf	status, 6	;RP1=0, select bank0
  3835  01A8  0827               	movf	(1+(?___awdiv)),w
  3836  01A9  01B0               	clrf	(?_RobotDrive+1)
  3837  01AA  07B0               	addwf	(?_RobotDrive+1)
  3838  01AB  0826               	movf	(0+(?___awdiv)),w
  3839  01AC  01AF               	clrf	(?_RobotDrive)
  3840  01AD  07AF               	addwf	(?_RobotDrive)
  3841                           
  3842  01AE  303E               	movlw	low(-450)
  3843  01AF  00B1               	movwf	0+(?_RobotDrive)+02h
  3844  01B0  30FE               	movlw	high(-450)
  3845  01B1  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3846  01B2  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  3847                           	line	322
  3848                           	
  3849  01B7                     l11797:	
  3850                           ;robot.c: 322: angleTurned = 0;
  3851  01B7  1683               	bsf	status, 5	;RP0=1, select bank1
  3852  01B8  1303               	bcf	status, 6	;RP1=0, select bank1
  3853  01B9  01BE               	clrf	(_angleTurned)^080h
  3854  01BA  01BF               	clrf	(_angleTurned+1)^080h
  3855                           	line	323
  3856                           ;robot.c: 323: switch (RobotPos)
  3857  01BB  29D0               	goto	l11807
  3858                           	line	325
  3859                           ;robot.c: 324: {
  3860                           ;robot.c: 325: case 7:
  3861                           	
  3862  01BC                     l6151:	
  3863                           	line	326
  3864                           	
  3865  01BC                     l11799:	
  3866                           ;robot.c: 326: turnTarget = -175;
  3867  01BC  3051               	movlw	low(-175)
  3868  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3869  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3870  01BF  00E0               	movwf	(robot_turnRight@turnTarget)
  3871  01C0  30FF               	movlw	high(-175)
  3872  01C1  00E1               	movwf	((robot_turnRight@turnTarget))+1
  3873                           	line	327
  3874                           ;robot.c: 327: break;
  3875  01C2  2A41               	goto	l11835
  3876                           	line	328
  3877                           ;robot.c: 328: case 11:
  3878                           	
  3879  01C3                     l6153:	
  3880                           	line	329
  3881                           	
  3882  01C3                     l11801:	
  3883                           ;robot.c: 329: turnTarget = -175;
  3884  01C3  3051               	movlw	low(-175)
  3885  01C4  1283               	bcf	status, 5	;RP0=0, select bank0
  3886  01C5  00E0               	movwf	(robot_turnRight@turnTarget)
  3887  01C6  30FF               	movlw	high(-175)
  3888  01C7  00E1               	movwf	((robot_turnRight@turnTarget))+1
  3889                           	line	330
  3890                           ;robot.c: 330: break;
  3891  01C8  2A41               	goto	l11835
  3892                           	line	331
  3893                           ;robot.c: 331: default:
  3894                           	
  3895  01C9                     l6154:	
  3896                           	line	332
  3897                           	
  3898  01C9                     l11803:	
  3899                           ;robot.c: 332: turnTarget = -75;
  3900  01C9  30B5               	movlw	low(-75)
  3901  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
  3902  01CB  00E0               	movwf	(robot_turnRight@turnTarget)
  3903  01CC  30FF               	movlw	high(-75)
  3904  01CD  00E1               	movwf	((robot_turnRight@turnTarget))+1
  3905                           	line	333
  3906                           ;robot.c: 333: break;
  3907  01CE  2A41               	goto	l11835
  3908                           	line	334
  3909                           	
  3910  01CF                     l11805:	
  3911                           ;robot.c: 334: }
  3912  01CF  2A41               	goto	l11835
  3913                           	line	323
  3914                           	
  3915  01D0                     l6150:	
  3916                           	
  3917  01D0                     l11807:	
  3918  01D0  1683               	bsf	status, 5	;RP0=1, select bank1
  3919  01D1  1303               	bcf	status, 6	;RP1=0, select bank1
  3920  01D2  0856               	movf	(_RobotPos)^080h,w
  3921                           	; Switch size 1, requested type "space"
  3922                           ; Number of cases is 2, Range of values is 7 to 11
  3923                           ; switch strategies available:
  3924                           ; Name         Instructions Cycles
  3925                           ; simple_byte            7     4 (average)
  3926                           ; direct_byte           26    11 (fixed)
  3927                           ; jumptable            263     9 (fixed)
  3928                           ;	Chosen strategy is simple_byte
  3929                           
  3930                           	opt asmopt_off
  3931  01D3  3A07               	xorlw	7^0	; case 7
  3932  01D4  1903               	skipnz
  3933  01D5  29BC               	goto	l11799
  3934  01D6  3A0C               	xorlw	11^7	; case 11
  3935  01D7  1903               	skipnz
  3936  01D8  29C3               	goto	l11801
  3937  01D9  29C9               	goto	l11803
  3938                           	opt asmopt_on
  3939                           
  3940                           	line	334
  3941                           	
  3942  01DA                     l6152:	
  3943                           	line	335
  3944                           ;robot.c: 335: while (abs(angleTurned) < abs(turnTarget))
  3945  01DA  2A41               	goto	l11835
  3946                           	
  3947  01DB                     l6156:	
  3948                           	line	337
  3949                           	
  3950  01DB                     l11809:	
  3951                           ;robot.c: 336: {
  3952                           ;robot.c: 337: robot_read(1);
  3953  01DB  3001               	movlw	(01h)
  3954  01DC  120A  158A  232E   	fcall	_robot_read
              120A  118A         
  3955                           	line	338
  3956                           	
  3957  01E1                     l11811:	
  3958                           ;robot.c: 338: if (BumpSensors)
  3959  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3960  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3961  01E3  086E               	movf	(_BumpSensors),w	;volatile
  3962  01E4  1D03               	skipz
  3963  01E5  29E7               	goto	u5300
  3964  01E6  29ED               	goto	l11815
  3965  01E7                     u5300:
  3966                           	line	340
  3967                           	
  3968  01E7                     l11813:	
  3969                           ;robot.c: 339: {
  3970                           ;robot.c: 340: ROBOTerror = 1;
  3971  01E7  1683               	bsf	status, 5	;RP0=1, select bank1
  3972  01E8  1303               	bcf	status, 6	;RP1=0, select bank1
  3973  01E9  01D4               	clrf	(_ROBOTerror)^080h
  3974  01EA  1403               	bsf	status,0
  3975  01EB  0DD4               	rlf	(_ROBOTerror)^080h,f
  3976                           	line	341
  3977                           ;robot.c: 341: break;
  3978  01EC  2A76               	goto	l11837
  3979                           	line	342
  3980                           	
  3981  01ED                     l6157:	
  3982                           	line	343
  3983                           	
  3984  01ED                     l11815:	
  3985                           ;robot.c: 342: }
  3986                           ;robot.c: 343: if (VwallSensor)
  3987  01ED  1283               	bcf	status, 5	;RP0=0, select bank0
  3988  01EE  086F               	movf	(_VwallSensor),w	;volatile
  3989  01EF  1D03               	skipz
  3990  01F0  29F2               	goto	u5310
  3991  01F1  29F9               	goto	l11819
  3992  01F2                     u5310:
  3993                           	line	345
  3994                           	
  3995  01F2                     l11817:	
  3996                           ;robot.c: 344: {
  3997                           ;robot.c: 345: ROBOTerror = 2;
  3998  01F2  3002               	movlw	(02h)
  3999  01F3  00DD               	movwf	(??_robot_turnRight+0)+0
  4000  01F4  085D               	movf	(??_robot_turnRight+0)+0,w
  4001  01F5  1683               	bsf	status, 5	;RP0=1, select bank1
  4002  01F6  1303               	bcf	status, 6	;RP1=0, select bank1
  4003  01F7  00D4               	movwf	(_ROBOTerror)^080h
  4004                           	line	346
  4005                           ;robot.c: 346: break;
  4006  01F8  2A76               	goto	l11837
  4007                           	line	347
  4008                           	
  4009  01F9                     l6159:	
  4010                           	line	348
  4011                           	
  4012  01F9                     l11819:	
  4013                           ;robot.c: 347: }
  4014                           ;robot.c: 348: if (CliffSensors)
  4015  01F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4016  01FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4017  01FB  084F               	movf	(_CliffSensors)^080h,w	;volatile
  4018  01FC  1D03               	skipz
  4019  01FD  29FF               	goto	u5320
  4020  01FE  2A08               	goto	l11823
  4021  01FF                     u5320:
  4022                           	line	350
  4023                           	
  4024  01FF                     l11821:	
  4025                           ;robot.c: 349: {
  4026                           ;robot.c: 350: ROBOTerror = 3;
  4027  01FF  3003               	movlw	(03h)
  4028  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  4029  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  4030  0202  00DD               	movwf	(??_robot_turnRight+0)+0
  4031  0203  085D               	movf	(??_robot_turnRight+0)+0,w
  4032  0204  1683               	bsf	status, 5	;RP0=1, select bank1
  4033  0205  1303               	bcf	status, 6	;RP1=0, select bank1
  4034  0206  00D4               	movwf	(_ROBOTerror)^080h
  4035                           	line	351
  4036                           ;robot.c: 351: break;
  4037  0207  2A76               	goto	l11837
  4038                           	line	352
  4039                           	
  4040  0208                     l6160:	
  4041                           	line	353
  4042                           	
  4043  0208                     l11823:	
  4044                           ;robot.c: 352: }
  4045                           ;robot.c: 353: temp1 = AngleHighByte;
  4046  0208  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  4047  0209  1283               	bcf	status, 5	;RP0=0, select bank0
  4048  020A  1303               	bcf	status, 6	;RP1=0, select bank0
  4049  020B  00DD               	movwf	(??_robot_turnRight+0)+0
  4050  020C  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4051  020D  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4052  020E  00E2               	movwf	(robot_turnRight@temp1)
  4053  020F  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4054  0210  00E3               	movwf	(robot_turnRight@temp1+1)
  4055                           	line	354
  4056                           	
  4057  0211                     l11825:	
  4058                           ;robot.c: 354: temp1 = temp1 << 8;
  4059  0211  0863               	movf	(robot_turnRight@temp1+1),w
  4060  0212  00DE               	movwf	(??_robot_turnRight+0)+0+1
  4061  0213  0862               	movf	(robot_turnRight@temp1),w
  4062  0214  00DD               	movwf	(??_robot_turnRight+0)+0
  4063  0215  085D               	movf	(??_robot_turnRight+0)+0,w
  4064  0216  00DE               	movwf	(??_robot_turnRight+0)+1
  4065  0217  01DD               	clrf	(??_robot_turnRight+0)+0
  4066  0218  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4067  0219  00E2               	movwf	(robot_turnRight@temp1)
  4068  021A  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4069  021B  00E3               	movwf	(robot_turnRight@temp1+1)
  4070                           	line	355
  4071                           	
  4072  021C                     l11827:	
  4073                           ;robot.c: 355: temp1 += AngleLowByte;
  4074  021C  1683               	bsf	status, 5	;RP0=1, select bank1
  4075  021D  1303               	bcf	status, 6	;RP1=0, select bank1
  4076  021E  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  4077  021F  1283               	bcf	status, 5	;RP0=0, select bank0
  4078  0220  1303               	bcf	status, 6	;RP1=0, select bank0
  4079  0221  00DD               	movwf	(??_robot_turnRight+0)+0
  4080  0222  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4081  0223  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4082  0224  07E2               	addwf	(robot_turnRight@temp1),f
  4083  0225  1803               	skipnc
  4084  0226  0AE3               	incf	(robot_turnRight@temp1+1),f
  4085  0227  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4086  0228  07E3               	addwf	(robot_turnRight@temp1+1),f
  4087                           	line	356
  4088                           	
  4089  0229                     l11829:	
  4090                           ;robot.c: 356: angleTurned += temp1;
  4091  0229  0862               	movf	(robot_turnRight@temp1),w
  4092  022A  1683               	bsf	status, 5	;RP0=1, select bank1
  4093  022B  1303               	bcf	status, 6	;RP1=0, select bank1
  4094  022C  07BE               	addwf	(_angleTurned)^080h,f
  4095  022D  1803               	skipnc
  4096  022E  0ABF               	incf	(_angleTurned+1)^080h,f
  4097  022F  1283               	bcf	status, 5	;RP0=0, select bank0
  4098  0230  1303               	bcf	status, 6	;RP1=0, select bank0
  4099  0231  0863               	movf	(robot_turnRight@temp1+1),w
  4100  0232  1683               	bsf	status, 5	;RP0=1, select bank1
  4101  0233  1303               	bcf	status, 6	;RP1=0, select bank1
  4102  0234  07BF               	addwf	(_angleTurned+1)^080h,f
  4103                           	line	357
  4104                           	
  4105  0235                     l11831:	
  4106                           ;robot.c: 357: Disp2 = angleTurned;
  4107  0235  083F               	movf	(_angleTurned+1)^080h,w
  4108  0236  01B7               	clrf	(_Disp2+1)^080h
  4109  0237  07B7               	addwf	(_Disp2+1)^080h
  4110  0238  083E               	movf	(_angleTurned)^080h,w
  4111  0239  01B6               	clrf	(_Disp2)^080h
  4112  023A  07B6               	addwf	(_Disp2)^080h
  4113                           
  4114                           	line	358
  4115                           	
  4116  023B                     l11833:	
  4117                           ;robot.c: 358: UpdateDisplay();
  4118  023B  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  4119  0240  2A41               	goto	l11835
  4120                           	line	359
  4121                           	
  4122  0241                     l6155:	
  4123                           	line	335
  4124                           	
  4125  0241                     l11835:	
  4126  0241  1683               	bsf	status, 5	;RP0=1, select bank1
  4127  0242  1303               	bcf	status, 6	;RP1=0, select bank1
  4128  0243  083F               	movf	(_angleTurned+1)^080h,w
  4129  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  4130  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  4131  0246  01A7               	clrf	(?_abs+1)
  4132  0247  07A7               	addwf	(?_abs+1)
  4133  0248  1683               	bsf	status, 5	;RP0=1, select bank1
  4134  0249  1303               	bcf	status, 6	;RP1=0, select bank1
  4135  024A  083E               	movf	(_angleTurned)^080h,w
  4136  024B  1283               	bcf	status, 5	;RP0=0, select bank0
  4137  024C  1303               	bcf	status, 6	;RP1=0, select bank0
  4138  024D  01A6               	clrf	(?_abs)
  4139  024E  07A6               	addwf	(?_abs)
  4140                           
  4141  024F  160A  118A  225E   	fcall	_abs
              120A  118A         
  4142  0254  1283               	bcf	status, 5	;RP0=0, select bank0
  4143  0255  1303               	bcf	status, 6	;RP1=0, select bank0
  4144  0256  0826               	movf	(0+?_abs),w
  4145  0257  00DD               	movwf	(??_robot_turnRight+0)+0
  4146  0258  0827               	movf	(1+?_abs),w
  4147  0259  00DE               	movwf	((??_robot_turnRight+0)+0+1)
  4148  025A  0861               	movf	(robot_turnRight@turnTarget+1),w
  4149  025B  01A7               	clrf	(?_abs+1)
  4150  025C  07A7               	addwf	(?_abs+1)
  4151  025D  0860               	movf	(robot_turnRight@turnTarget),w
  4152  025E  01A6               	clrf	(?_abs)
  4153  025F  07A6               	addwf	(?_abs)
  4154                           
  4155  0260  160A  118A  225E   	fcall	_abs
              120A  118A         
  4156  0265  1283               	bcf	status, 5	;RP0=0, select bank0
  4157  0266  1303               	bcf	status, 6	;RP1=0, select bank0
  4158  0267  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4159  0268  3A80               	xorlw	80h
  4160  0269  00DF               	movwf	(??_robot_turnRight+2)+0
  4161  026A  0827               	movf	(1+(?_abs)),w
  4162  026B  3A80               	xorlw	80h
  4163  026C  025F               	subwf	(??_robot_turnRight+2)+0,w
  4164  026D  1D03               	skipz
  4165  026E  2A71               	goto	u5335
  4166  026F  0826               	movf	(0+(?_abs)),w
  4167  0270  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  4168  0271                     u5335:
  4169                           
  4170  0271  1C03               	skipc
  4171  0272  2A74               	goto	u5331
  4172  0273  2A75               	goto	u5330
  4173  0274                     u5331:
  4174  0274  29DB               	goto	l11809
  4175  0275                     u5330:
  4176  0275  2A76               	goto	l11837
  4177                           	
  4178  0276                     l6158:	
  4179                           	line	360
  4180                           	
  4181  0276                     l11837:	
  4182                           ;robot.c: 359: }
  4183                           ;robot.c: 360: RobotDrive(0, 0x7FFF);
  4184  0276  3000               	movlw	low(0)
  4185  0277  1283               	bcf	status, 5	;RP0=0, select bank0
  4186  0278  1303               	bcf	status, 6	;RP1=0, select bank0
  4187  0279  00AF               	movwf	(?_RobotDrive)
  4188  027A  3000               	movlw	high(0)
  4189  027B  00B0               	movwf	((?_RobotDrive))+1
  4190  027C  30FF               	movlw	low(07FFFh)
  4191  027D  00B1               	movwf	0+(?_RobotDrive)+02h
  4192  027E  307F               	movlw	high(07FFFh)
  4193  027F  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4194  0280  120A  158A  20C1   	fcall	_RobotDrive
              120A  118A         
  4195                           	line	361
  4196                           	
  4197  0285                     l11839:	
  4198                           ;robot.c: 361: Disp2 = ROBOTerror;
  4199  0285  1683               	bsf	status, 5	;RP0=1, select bank1
  4200  0286  1303               	bcf	status, 6	;RP1=0, select bank1
  4201  0287  0854               	movf	(_ROBOTerror)^080h,w
  4202  0288  1283               	bcf	status, 5	;RP0=0, select bank0
  4203  0289  1303               	bcf	status, 6	;RP1=0, select bank0
  4204  028A  00DD               	movwf	(??_robot_turnRight+0)+0
  4205  028B  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4206  028C  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4207  028D  1683               	bsf	status, 5	;RP0=1, select bank1
  4208  028E  1303               	bcf	status, 6	;RP1=0, select bank1
  4209  028F  00B6               	movwf	(_Disp2)^080h
  4210  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  4211  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  4212  0292  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4213  0293  1683               	bsf	status, 5	;RP0=1, select bank1
  4214  0294  1303               	bcf	status, 6	;RP1=0, select bank1
  4215  0295  00B7               	movwf	(_Disp2+1)^080h
  4216                           	line	362
  4217                           	
  4218  0296                     l11841:	
  4219                           ;robot.c: 362: UpdateDisplay();
  4220  0296  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  4221                           	line	365
  4222                           	
  4223  029B                     l6161:	
  4224  029B  0008               	return
  4225                           	opt stack 0
  4226                           GLOBAL	__end_of_robot_turnRight
  4227  029C                     	__end_of_robot_turnRight:
  4228 ;; =============== function _robot_turnRight ends ============
  4229                           
  4230                           	signat	_robot_turnRight,8312
  4231                           	global	_robotMoveSpeed
  4232                           psect	text1065,local,class=CODE,delta=2
  4233                           global __ptext1065
  4234  0A49                     __ptext1065:
  4235                           
  4236 ;; *************** function _robotMoveSpeed *****************
  4237 ;; Defined at:
  4238 ;;		line 370 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  distance        2   57[BANK0 ] int 
  4241 ;;  speed           2   59[BANK0 ] int 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  temp1           2   64[BANK0 ] int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;		None               void
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         0       4       0       0       0
  4254 ;;      Locals:         0       2       0       0       0
  4255 ;;      Temps:          0       3       0       0       0
  4256 ;;      Totals:         0       9       0       0       0
  4257 ;;Total ram usage:        9 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    6
  4260 ;; This function calls:
  4261 ;;		_RobotDrive
  4262 ;;		_robot_read
  4263 ;;		_UpdateDisplay
  4264 ;;		_abs
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           psect	text1065
  4270                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4271                           	line	370
  4272                           	global	__size_of_robotMoveSpeed
  4273  00E5                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  4274                           	
  4275  0A49                     _robotMoveSpeed:	
  4276                           	opt	stack 1
  4277                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4278                           	line	371
  4279                           	
  4280  0A49                     l11697:	
  4281                           ;robot.c: 371: distTravelled = 0;
  4282  0A49  1683               	bsf	status, 5	;RP0=1, select bank1
  4283  0A4A  1303               	bcf	status, 6	;RP1=0, select bank1
  4284  0A4B  01C0               	clrf	(_distTravelled)^080h
  4285  0A4C  01C1               	clrf	(_distTravelled+1)^080h
  4286                           	line	373
  4287                           	
  4288  0A4D                     l11699:	
  4289                           ;robot.c: 372: int temp1;
  4290                           ;robot.c: 373: RobotDrive(speed, 0x7FFF);
  4291  0A4D  1283               	bcf	status, 5	;RP0=0, select bank0
  4292  0A4E  1303               	bcf	status, 6	;RP1=0, select bank0
  4293  0A4F  085C               	movf	(robotMoveSpeed@speed+1),w
  4294  0A50  01B0               	clrf	(?_RobotDrive+1)
  4295  0A51  07B0               	addwf	(?_RobotDrive+1)
  4296  0A52  085B               	movf	(robotMoveSpeed@speed),w
  4297  0A53  01AF               	clrf	(?_RobotDrive)
  4298  0A54  07AF               	addwf	(?_RobotDrive)
  4299                           
  4300  0A55  30FF               	movlw	low(07FFFh)
  4301  0A56  00B1               	movwf	0+(?_RobotDrive)+02h
  4302  0A57  307F               	movlw	high(07FFFh)
  4303  0A58  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4304  0A59  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  4305                           	line	376
  4306                           ;robot.c: 376: while (abs(distTravelled) < abs(distance))
  4307  0A5E  2AD3               	goto	l11729
  4308                           	
  4309  0A5F                     l6165:	
  4310                           	line	378
  4311                           	
  4312  0A5F                     l11701:	
  4313                           ;robot.c: 377: {
  4314                           ;robot.c: 378: robot_read(0);
  4315  0A5F  3000               	movlw	(0)
  4316  0A60  120A  158A  232E   	fcall	_robot_read
              120A  158A         
  4317                           	line	379
  4318                           	
  4319  0A65                     l11703:	
  4320                           ;robot.c: 379: if (BumpSensors)
  4321  0A65  1283               	bcf	status, 5	;RP0=0, select bank0
  4322  0A66  1303               	bcf	status, 6	;RP1=0, select bank0
  4323  0A67  086E               	movf	(_BumpSensors),w	;volatile
  4324  0A68  1D03               	skipz
  4325  0A69  2A6B               	goto	u5170
  4326  0A6A  2A71               	goto	l11707
  4327  0A6B                     u5170:
  4328                           	line	381
  4329                           	
  4330  0A6B                     l11705:	
  4331                           ;robot.c: 380: {
  4332                           ;robot.c: 381: ROBOTerror = 1;
  4333  0A6B  1683               	bsf	status, 5	;RP0=1, select bank1
  4334  0A6C  1303               	bcf	status, 6	;RP1=0, select bank1
  4335  0A6D  01D4               	clrf	(_ROBOTerror)^080h
  4336  0A6E  1403               	bsf	status,0
  4337  0A6F  0DD4               	rlf	(_ROBOTerror)^080h,f
  4338                           	line	382
  4339                           ;robot.c: 382: break;
  4340  0A70  2B08               	goto	l11731
  4341                           	line	383
  4342                           	
  4343  0A71                     l6166:	
  4344                           	line	384
  4345                           	
  4346  0A71                     l11707:	
  4347                           ;robot.c: 383: }
  4348                           ;robot.c: 384: if (VwallSensor)
  4349  0A71  1283               	bcf	status, 5	;RP0=0, select bank0
  4350  0A72  086F               	movf	(_VwallSensor),w	;volatile
  4351  0A73  1D03               	skipz
  4352  0A74  2A76               	goto	u5180
  4353  0A75  2A7D               	goto	l11711
  4354  0A76                     u5180:
  4355                           	line	386
  4356                           	
  4357  0A76                     l11709:	
  4358                           ;robot.c: 385: {
  4359                           ;robot.c: 386: ROBOTerror = 2;
  4360  0A76  3002               	movlw	(02h)
  4361  0A77  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4362  0A78  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4363  0A79  1683               	bsf	status, 5	;RP0=1, select bank1
  4364  0A7A  1303               	bcf	status, 6	;RP1=0, select bank1
  4365  0A7B  00D4               	movwf	(_ROBOTerror)^080h
  4366                           	line	387
  4367                           ;robot.c: 387: break;
  4368  0A7C  2B08               	goto	l11731
  4369                           	line	388
  4370                           	
  4371  0A7D                     l6168:	
  4372                           	line	389
  4373                           	
  4374  0A7D                     l11711:	
  4375                           ;robot.c: 388: }
  4376                           ;robot.c: 389: if (CliffSensors)
  4377  0A7D  1683               	bsf	status, 5	;RP0=1, select bank1
  4378  0A7E  1303               	bcf	status, 6	;RP1=0, select bank1
  4379  0A7F  084F               	movf	(_CliffSensors)^080h,w	;volatile
  4380  0A80  1D03               	skipz
  4381  0A81  2A83               	goto	u5190
  4382  0A82  2A8C               	goto	l11715
  4383  0A83                     u5190:
  4384                           	line	391
  4385                           	
  4386  0A83                     l11713:	
  4387                           ;robot.c: 390: {
  4388                           ;robot.c: 391: ROBOTerror = 3;
  4389  0A83  3003               	movlw	(03h)
  4390  0A84  1283               	bcf	status, 5	;RP0=0, select bank0
  4391  0A85  1303               	bcf	status, 6	;RP1=0, select bank0
  4392  0A86  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4393  0A87  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4394  0A88  1683               	bsf	status, 5	;RP0=1, select bank1
  4395  0A89  1303               	bcf	status, 6	;RP1=0, select bank1
  4396  0A8A  00D4               	movwf	(_ROBOTerror)^080h
  4397                           	line	392
  4398                           ;robot.c: 392: break;
  4399  0A8B  2B08               	goto	l11731
  4400                           	line	393
  4401                           	
  4402  0A8C                     l6169:	
  4403                           	line	394
  4404                           	
  4405  0A8C                     l11715:	
  4406                           ;robot.c: 393: }
  4407                           ;robot.c: 394: temp1 = DistHighByte;
  4408  0A8C  0850               	movf	(_DistHighByte)^080h,w	;volatile
  4409  0A8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4410  0A8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4411  0A8F  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4412  0A90  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4413  0A91  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4414  0A92  00E0               	movwf	(robotMoveSpeed@temp1)
  4415  0A93  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4416  0A94  00E1               	movwf	(robotMoveSpeed@temp1+1)
  4417                           	line	395
  4418                           	
  4419  0A95                     l11717:	
  4420                           ;robot.c: 395: temp1 = temp1 << 8;
  4421  0A95  0861               	movf	(robotMoveSpeed@temp1+1),w
  4422  0A96  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  4423  0A97  0860               	movf	(robotMoveSpeed@temp1),w
  4424  0A98  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4425  0A99  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4426  0A9A  00DE               	movwf	(??_robotMoveSpeed+0)+1
  4427  0A9B  01DD               	clrf	(??_robotMoveSpeed+0)+0
  4428  0A9C  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4429  0A9D  00E0               	movwf	(robotMoveSpeed@temp1)
  4430  0A9E  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4431  0A9F  00E1               	movwf	(robotMoveSpeed@temp1+1)
  4432                           	line	396
  4433                           	
  4434  0AA0                     l11719:	
  4435                           ;robot.c: 396: temp1 += DistLowByte;
  4436  0AA0  1683               	bsf	status, 5	;RP0=1, select bank1
  4437  0AA1  1303               	bcf	status, 6	;RP1=0, select bank1
  4438  0AA2  0851               	movf	(_DistLowByte)^080h,w	;volatile
  4439  0AA3  1283               	bcf	status, 5	;RP0=0, select bank0
  4440  0AA4  1303               	bcf	status, 6	;RP1=0, select bank0
  4441  0AA5  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4442  0AA6  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4443  0AA7  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4444  0AA8  07E0               	addwf	(robotMoveSpeed@temp1),f
  4445  0AA9  1803               	skipnc
  4446  0AAA  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  4447  0AAB  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4448  0AAC  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  4449                           	line	397
  4450                           	
  4451  0AAD                     l11721:	
  4452                           ;robot.c: 397: distTravelled += temp1;
  4453  0AAD  0860               	movf	(robotMoveSpeed@temp1),w
  4454  0AAE  1683               	bsf	status, 5	;RP0=1, select bank1
  4455  0AAF  1303               	bcf	status, 6	;RP1=0, select bank1
  4456  0AB0  07C0               	addwf	(_distTravelled)^080h,f
  4457  0AB1  1803               	skipnc
  4458  0AB2  0AC1               	incf	(_distTravelled+1)^080h,f
  4459  0AB3  1283               	bcf	status, 5	;RP0=0, select bank0
  4460  0AB4  1303               	bcf	status, 6	;RP1=0, select bank0
  4461  0AB5  0861               	movf	(robotMoveSpeed@temp1+1),w
  4462  0AB6  1683               	bsf	status, 5	;RP0=1, select bank1
  4463  0AB7  1303               	bcf	status, 6	;RP1=0, select bank1
  4464  0AB8  07C1               	addwf	(_distTravelled+1)^080h,f
  4465                           	line	398
  4466                           	
  4467  0AB9                     l11723:	
  4468                           ;robot.c: 398: TotalDistTravelled += temp1;
  4469  0AB9  1283               	bcf	status, 5	;RP0=0, select bank0
  4470  0ABA  1303               	bcf	status, 6	;RP1=0, select bank0
  4471  0ABB  0860               	movf	(robotMoveSpeed@temp1),w
  4472  0ABC  1683               	bsf	status, 5	;RP0=1, select bank1
  4473  0ABD  1303               	bcf	status, 6	;RP1=0, select bank1
  4474  0ABE  07BC               	addwf	(_TotalDistTravelled)^080h,f
  4475  0ABF  1803               	skipnc
  4476  0AC0  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  4477  0AC1  1283               	bcf	status, 5	;RP0=0, select bank0
  4478  0AC2  1303               	bcf	status, 6	;RP1=0, select bank0
  4479  0AC3  0861               	movf	(robotMoveSpeed@temp1+1),w
  4480  0AC4  1683               	bsf	status, 5	;RP0=1, select bank1
  4481  0AC5  1303               	bcf	status, 6	;RP1=0, select bank1
  4482  0AC6  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  4483                           	line	399
  4484                           	
  4485  0AC7                     l11725:	
  4486                           ;robot.c: 399: Disp2 = distTravelled;
  4487  0AC7  0841               	movf	(_distTravelled+1)^080h,w
  4488  0AC8  01B7               	clrf	(_Disp2+1)^080h
  4489  0AC9  07B7               	addwf	(_Disp2+1)^080h
  4490  0ACA  0840               	movf	(_distTravelled)^080h,w
  4491  0ACB  01B6               	clrf	(_Disp2)^080h
  4492  0ACC  07B6               	addwf	(_Disp2)^080h
  4493                           
  4494                           	line	400
  4495                           	
  4496  0ACD                     l11727:	
  4497                           ;robot.c: 400: UpdateDisplay();
  4498  0ACD  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4499  0AD2  2AD3               	goto	l11729
  4500                           	line	406
  4501                           	
  4502  0AD3                     l6164:	
  4503                           	line	376
  4504                           	
  4505  0AD3                     l11729:	
  4506  0AD3  1683               	bsf	status, 5	;RP0=1, select bank1
  4507  0AD4  1303               	bcf	status, 6	;RP1=0, select bank1
  4508  0AD5  0841               	movf	(_distTravelled+1)^080h,w
  4509  0AD6  1283               	bcf	status, 5	;RP0=0, select bank0
  4510  0AD7  1303               	bcf	status, 6	;RP1=0, select bank0
  4511  0AD8  01A7               	clrf	(?_abs+1)
  4512  0AD9  07A7               	addwf	(?_abs+1)
  4513  0ADA  1683               	bsf	status, 5	;RP0=1, select bank1
  4514  0ADB  1303               	bcf	status, 6	;RP1=0, select bank1
  4515  0ADC  0840               	movf	(_distTravelled)^080h,w
  4516  0ADD  1283               	bcf	status, 5	;RP0=0, select bank0
  4517  0ADE  1303               	bcf	status, 6	;RP1=0, select bank0
  4518  0ADF  01A6               	clrf	(?_abs)
  4519  0AE0  07A6               	addwf	(?_abs)
  4520                           
  4521  0AE1  160A  118A  225E   	fcall	_abs
              120A  158A         
  4522  0AE6  1283               	bcf	status, 5	;RP0=0, select bank0
  4523  0AE7  1303               	bcf	status, 6	;RP1=0, select bank0
  4524  0AE8  0826               	movf	(0+?_abs),w
  4525  0AE9  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4526  0AEA  0827               	movf	(1+?_abs),w
  4527  0AEB  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  4528  0AEC  085A               	movf	(robotMoveSpeed@distance+1),w
  4529  0AED  01A7               	clrf	(?_abs+1)
  4530  0AEE  07A7               	addwf	(?_abs+1)
  4531  0AEF  0859               	movf	(robotMoveSpeed@distance),w
  4532  0AF0  01A6               	clrf	(?_abs)
  4533  0AF1  07A6               	addwf	(?_abs)
  4534                           
  4535  0AF2  160A  118A  225E   	fcall	_abs
              120A  158A         
  4536  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  4537  0AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  4538  0AF9  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4539  0AFA  3A80               	xorlw	80h
  4540  0AFB  00DF               	movwf	(??_robotMoveSpeed+2)+0
  4541  0AFC  0827               	movf	(1+(?_abs)),w
  4542  0AFD  3A80               	xorlw	80h
  4543  0AFE  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  4544  0AFF  1D03               	skipz
  4545  0B00  2B03               	goto	u5205
  4546  0B01  0826               	movf	(0+(?_abs)),w
  4547  0B02  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  4548  0B03                     u5205:
  4549                           
  4550  0B03  1C03               	skipc
  4551  0B04  2B06               	goto	u5201
  4552  0B05  2B07               	goto	u5200
  4553  0B06                     u5201:
  4554  0B06  2A5F               	goto	l11701
  4555  0B07                     u5200:
  4556  0B07  2B08               	goto	l11731
  4557                           	
  4558  0B08                     l6167:	
  4559                           	line	407
  4560                           	
  4561  0B08                     l11731:	
  4562                           ;robot.c: 406: }
  4563                           ;robot.c: 407: Disp2 = ROBOTerror;
  4564  0B08  1683               	bsf	status, 5	;RP0=1, select bank1
  4565  0B09  1303               	bcf	status, 6	;RP1=0, select bank1
  4566  0B0A  0854               	movf	(_ROBOTerror)^080h,w
  4567  0B0B  1283               	bcf	status, 5	;RP0=0, select bank0
  4568  0B0C  1303               	bcf	status, 6	;RP1=0, select bank0
  4569  0B0D  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4570  0B0E  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4571  0B0F  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4572  0B10  1683               	bsf	status, 5	;RP0=1, select bank1
  4573  0B11  1303               	bcf	status, 6	;RP1=0, select bank1
  4574  0B12  00B6               	movwf	(_Disp2)^080h
  4575  0B13  1283               	bcf	status, 5	;RP0=0, select bank0
  4576  0B14  1303               	bcf	status, 6	;RP1=0, select bank0
  4577  0B15  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4578  0B16  1683               	bsf	status, 5	;RP0=1, select bank1
  4579  0B17  1303               	bcf	status, 6	;RP1=0, select bank1
  4580  0B18  00B7               	movwf	(_Disp2+1)^080h
  4581                           	line	408
  4582                           	
  4583  0B19                     l11733:	
  4584                           ;robot.c: 408: UpdateDisplay();
  4585  0B19  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4586                           	line	409
  4587                           	
  4588  0B1E                     l11735:	
  4589                           ;robot.c: 409: RobotDrive(0, 0x7FFF);
  4590  0B1E  3000               	movlw	low(0)
  4591  0B1F  1283               	bcf	status, 5	;RP0=0, select bank0
  4592  0B20  1303               	bcf	status, 6	;RP1=0, select bank0
  4593  0B21  00AF               	movwf	(?_RobotDrive)
  4594  0B22  3000               	movlw	high(0)
  4595  0B23  00B0               	movwf	((?_RobotDrive))+1
  4596  0B24  30FF               	movlw	low(07FFFh)
  4597  0B25  00B1               	movwf	0+(?_RobotDrive)+02h
  4598  0B26  307F               	movlw	high(07FFFh)
  4599  0B27  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4600  0B28  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  4601                           	line	411
  4602                           	
  4603  0B2D                     l6170:	
  4604  0B2D  0008               	return
  4605                           	opt stack 0
  4606                           GLOBAL	__end_of_robotMoveSpeed
  4607  0B2E                     	__end_of_robotMoveSpeed:
  4608 ;; =============== function _robotMoveSpeed ends ============
  4609                           
  4610                           	signat	_robotMoveSpeed,8312
  4611                           	global	_robotTurnSpeed
  4612                           psect	text1066,local,class=CODE,delta=2
  4613                           global __ptext1066
  4614  09A1                     __ptext1066:
  4615                           
  4616 ;; *************** function _robotTurnSpeed *****************
  4617 ;; Defined at:
  4618 ;;		line 418 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  angle           2   57[BANK0 ] int 
  4621 ;;  speed           2   59[BANK0 ] int 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  temp1           2   64[BANK0 ] int 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;		None               void
  4626 ;; Registers used:
  4627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         0       4       0       0       0
  4634 ;;      Locals:         0       2       0       0       0
  4635 ;;      Temps:          0       3       0       0       0
  4636 ;;      Totals:         0       9       0       0       0
  4637 ;;Total ram usage:        9 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    6
  4640 ;; This function calls:
  4641 ;;		_robotTurn
  4642 ;;		_robot_read
  4643 ;;		_UpdateDisplay
  4644 ;;		_abs
  4645 ;; This function is called by:
  4646 ;;		_main
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           psect	text1066
  4650                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4651                           	line	418
  4652                           	global	__size_of_robotTurnSpeed
  4653  00A8                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  4654                           	
  4655  09A1                     _robotTurnSpeed:	
  4656                           	opt	stack 1
  4657                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4658                           	line	419
  4659                           	
  4660  09A1                     l11669:	
  4661                           ;robot.c: 419: angleTurned = 0;
  4662  09A1  1683               	bsf	status, 5	;RP0=1, select bank1
  4663  09A2  1303               	bcf	status, 6	;RP1=0, select bank1
  4664  09A3  01BE               	clrf	(_angleTurned)^080h
  4665  09A4  01BF               	clrf	(_angleTurned+1)^080h
  4666                           	line	420
  4667                           ;robot.c: 420: int temp1 = 0;
  4668  09A5  1283               	bcf	status, 5	;RP0=0, select bank0
  4669  09A6  1303               	bcf	status, 6	;RP1=0, select bank0
  4670  09A7  01E0               	clrf	(robotTurnSpeed@temp1)
  4671  09A8  01E1               	clrf	(robotTurnSpeed@temp1+1)
  4672                           	line	422
  4673                           	
  4674  09A9                     l11671:	
  4675                           ;robot.c: 422: robotTurn(angle);
  4676  09A9  085A               	movf	(robotTurnSpeed@angle+1),w
  4677  09AA  01A3               	clrf	(?_robotTurn+1)
  4678  09AB  07A3               	addwf	(?_robotTurn+1)
  4679  09AC  0859               	movf	(robotTurnSpeed@angle),w
  4680  09AD  01A2               	clrf	(?_robotTurn)
  4681  09AE  07A2               	addwf	(?_robotTurn)
  4682                           
  4683  09AF  160A  118A  2575   	fcall	_robotTurn
              120A  158A         
  4684                           	line	425
  4685                           ;robot.c: 425: while (abs(angleTurned) < abs(angle))
  4686  09B4  2A08               	goto	l11693
  4687                           	
  4688  09B5                     l6174:	
  4689                           	line	427
  4690                           	
  4691  09B5                     l11673:	
  4692                           ;robot.c: 426: {
  4693                           ;robot.c: 427: robot_read(1);
  4694  09B5  3001               	movlw	(01h)
  4695  09B6  120A  158A  232E   	fcall	_robot_read
              120A  158A         
  4696                           	line	428
  4697                           	
  4698  09BB                     l11675:	
  4699                           ;robot.c: 428: if (BumpSensors || VwallSensor)
  4700  09BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4701  09BC  1303               	bcf	status, 6	;RP1=0, select bank0
  4702  09BD  08EE               	movf	(_BumpSensors),f
  4703  09BE  1D03               	skipz	;volatile
  4704  09BF  29C1               	goto	u5141
  4705  09C0  29C2               	goto	u5140
  4706  09C1                     u5141:
  4707  09C1  29C7               	goto	l11679
  4708  09C2                     u5140:
  4709                           	
  4710  09C2                     l11677:	
  4711  09C2  086F               	movf	(_VwallSensor),w	;volatile
  4712  09C3  1D03               	skipz
  4713  09C4  29C6               	goto	u5150
  4714  09C5  29CD               	goto	l11681
  4715  09C6                     u5150:
  4716  09C6  29C7               	goto	l11679
  4717                           	
  4718  09C7                     l6177:	
  4719                           	line	430
  4720                           	
  4721  09C7                     l11679:	
  4722                           ;robot.c: 429: {
  4723                           ;robot.c: 430: ROBOTerror = 1;
  4724  09C7  1683               	bsf	status, 5	;RP0=1, select bank1
  4725  09C8  1303               	bcf	status, 6	;RP1=0, select bank1
  4726  09C9  01D4               	clrf	(_ROBOTerror)^080h
  4727  09CA  1403               	bsf	status,0
  4728  09CB  0DD4               	rlf	(_ROBOTerror)^080h,f
  4729                           	line	431
  4730                           ;robot.c: 431: break;
  4731  09CC  2A3D               	goto	l11695
  4732                           	line	432
  4733                           	
  4734  09CD                     l6175:	
  4735                           	line	433
  4736                           	
  4737  09CD                     l11681:	
  4738                           ;robot.c: 432: }
  4739                           ;robot.c: 433: temp1 = AngleHighByte;
  4740  09CD  1683               	bsf	status, 5	;RP0=1, select bank1
  4741  09CE  1303               	bcf	status, 6	;RP1=0, select bank1
  4742  09CF  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  4743  09D0  1283               	bcf	status, 5	;RP0=0, select bank0
  4744  09D1  1303               	bcf	status, 6	;RP1=0, select bank0
  4745  09D2  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4746  09D3  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4747  09D4  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4748  09D5  00E0               	movwf	(robotTurnSpeed@temp1)
  4749  09D6  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4750  09D7  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4751                           	line	434
  4752                           	
  4753  09D8                     l11683:	
  4754                           ;robot.c: 434: temp1 = temp1 << 8;
  4755  09D8  0861               	movf	(robotTurnSpeed@temp1+1),w
  4756  09D9  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  4757  09DA  0860               	movf	(robotTurnSpeed@temp1),w
  4758  09DB  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4759  09DC  085D               	movf	(??_robotTurnSpeed+0)+0,w
  4760  09DD  00DE               	movwf	(??_robotTurnSpeed+0)+1
  4761  09DE  01DD               	clrf	(??_robotTurnSpeed+0)+0
  4762  09DF  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4763  09E0  00E0               	movwf	(robotTurnSpeed@temp1)
  4764  09E1  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4765  09E2  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4766                           	line	435
  4767                           	
  4768  09E3                     l11685:	
  4769                           ;robot.c: 435: temp1 += AngleLowByte;
  4770  09E3  1683               	bsf	status, 5	;RP0=1, select bank1
  4771  09E4  1303               	bcf	status, 6	;RP1=0, select bank1
  4772  09E5  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  4773  09E6  1283               	bcf	status, 5	;RP0=0, select bank0
  4774  09E7  1303               	bcf	status, 6	;RP1=0, select bank0
  4775  09E8  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4776  09E9  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4777  09EA  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4778  09EB  07E0               	addwf	(robotTurnSpeed@temp1),f
  4779  09EC  1803               	skipnc
  4780  09ED  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  4781  09EE  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4782  09EF  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  4783                           	line	436
  4784                           	
  4785  09F0                     l11687:	
  4786                           ;robot.c: 436: angleTurned += temp1;
  4787  09F0  0860               	movf	(robotTurnSpeed@temp1),w
  4788  09F1  1683               	bsf	status, 5	;RP0=1, select bank1
  4789  09F2  1303               	bcf	status, 6	;RP1=0, select bank1
  4790  09F3  07BE               	addwf	(_angleTurned)^080h,f
  4791  09F4  1803               	skipnc
  4792  09F5  0ABF               	incf	(_angleTurned+1)^080h,f
  4793  09F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4794  09F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4795  09F8  0861               	movf	(robotTurnSpeed@temp1+1),w
  4796  09F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4797  09FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4798  09FB  07BF               	addwf	(_angleTurned+1)^080h,f
  4799                           	line	437
  4800                           	
  4801  09FC                     l11689:	
  4802                           ;robot.c: 437: Disp2 = angleTurned;
  4803  09FC  083F               	movf	(_angleTurned+1)^080h,w
  4804  09FD  01B7               	clrf	(_Disp2+1)^080h
  4805  09FE  07B7               	addwf	(_Disp2+1)^080h
  4806  09FF  083E               	movf	(_angleTurned)^080h,w
  4807  0A00  01B6               	clrf	(_Disp2)^080h
  4808  0A01  07B6               	addwf	(_Disp2)^080h
  4809                           
  4810                           	line	438
  4811                           	
  4812  0A02                     l11691:	
  4813                           ;robot.c: 438: UpdateDisplay();
  4814  0A02  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4815  0A07  2A08               	goto	l11693
  4816                           	line	439
  4817                           	
  4818  0A08                     l6173:	
  4819                           	line	425
  4820                           	
  4821  0A08                     l11693:	
  4822  0A08  1683               	bsf	status, 5	;RP0=1, select bank1
  4823  0A09  1303               	bcf	status, 6	;RP1=0, select bank1
  4824  0A0A  083F               	movf	(_angleTurned+1)^080h,w
  4825  0A0B  1283               	bcf	status, 5	;RP0=0, select bank0
  4826  0A0C  1303               	bcf	status, 6	;RP1=0, select bank0
  4827  0A0D  01A7               	clrf	(?_abs+1)
  4828  0A0E  07A7               	addwf	(?_abs+1)
  4829  0A0F  1683               	bsf	status, 5	;RP0=1, select bank1
  4830  0A10  1303               	bcf	status, 6	;RP1=0, select bank1
  4831  0A11  083E               	movf	(_angleTurned)^080h,w
  4832  0A12  1283               	bcf	status, 5	;RP0=0, select bank0
  4833  0A13  1303               	bcf	status, 6	;RP1=0, select bank0
  4834  0A14  01A6               	clrf	(?_abs)
  4835  0A15  07A6               	addwf	(?_abs)
  4836                           
  4837  0A16  160A  118A  225E   	fcall	_abs
              120A  158A         
  4838  0A1B  1283               	bcf	status, 5	;RP0=0, select bank0
  4839  0A1C  1303               	bcf	status, 6	;RP1=0, select bank0
  4840  0A1D  0826               	movf	(0+?_abs),w
  4841  0A1E  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4842  0A1F  0827               	movf	(1+?_abs),w
  4843  0A20  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  4844  0A21  085A               	movf	(robotTurnSpeed@angle+1),w
  4845  0A22  01A7               	clrf	(?_abs+1)
  4846  0A23  07A7               	addwf	(?_abs+1)
  4847  0A24  0859               	movf	(robotTurnSpeed@angle),w
  4848  0A25  01A6               	clrf	(?_abs)
  4849  0A26  07A6               	addwf	(?_abs)
  4850                           
  4851  0A27  160A  118A  225E   	fcall	_abs
              120A  158A         
  4852  0A2C  1283               	bcf	status, 5	;RP0=0, select bank0
  4853  0A2D  1303               	bcf	status, 6	;RP1=0, select bank0
  4854  0A2E  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4855  0A2F  3A80               	xorlw	80h
  4856  0A30  00DF               	movwf	(??_robotTurnSpeed+2)+0
  4857  0A31  0827               	movf	(1+(?_abs)),w
  4858  0A32  3A80               	xorlw	80h
  4859  0A33  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  4860  0A34  1D03               	skipz
  4861  0A35  2A38               	goto	u5165
  4862  0A36  0826               	movf	(0+(?_abs)),w
  4863  0A37  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  4864  0A38                     u5165:
  4865                           
  4866  0A38  1C03               	skipc
  4867  0A39  2A3B               	goto	u5161
  4868  0A3A  2A3C               	goto	u5160
  4869  0A3B                     u5161:
  4870  0A3B  29B5               	goto	l11673
  4871  0A3C                     u5160:
  4872  0A3C  2A3D               	goto	l11695
  4873                           	
  4874  0A3D                     l6178:	
  4875                           	line	441
  4876                           	
  4877  0A3D                     l11695:	
  4878                           ;robot.c: 439: }
  4879                           ;robot.c: 441: robotTurn(0);
  4880  0A3D  3000               	movlw	low(0)
  4881  0A3E  1283               	bcf	status, 5	;RP0=0, select bank0
  4882  0A3F  1303               	bcf	status, 6	;RP1=0, select bank0
  4883  0A40  00A2               	movwf	(?_robotTurn)
  4884  0A41  3000               	movlw	high(0)
  4885  0A42  00A3               	movwf	((?_robotTurn))+1
  4886  0A43  160A  118A  2575   	fcall	_robotTurn
              120A  158A         
  4887                           	line	442
  4888                           	
  4889  0A48                     l6179:	
  4890  0A48  0008               	return
  4891                           	opt stack 0
  4892                           GLOBAL	__end_of_robotTurnSpeed
  4893  0A49                     	__end_of_robotTurnSpeed:
  4894 ;; =============== function _robotTurnSpeed ends ============
  4895                           
  4896                           	signat	_robotTurnSpeed,8312
  4897                           	global	_robotFollow
  4898                           psect	text1067,local,class=CODE,delta=2
  4899                           global __ptext1067
  4900  0C39                     __ptext1067:
  4901                           
  4902 ;; *************** function _robotFollow *****************
  4903 ;; Defined at:
  4904 ;;		line 181 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  speed           2   57[BANK0 ] int 
  4907 ;;  AdcTarget       2   59[BANK0 ] int 
  4908 ;;  followDir       1   61[BANK0 ] unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  temp1           2   66[BANK0 ] int 
  4911 ;;  hysterysis      1   68[BANK0 ] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;		None               void
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4921 ;;      Params:         0       5       0       0       0
  4922 ;;      Locals:         0       3       0       0       0
  4923 ;;      Temps:          0       4       0       0       0
  4924 ;;      Totals:         0      12       0       0       0
  4925 ;;Total ram usage:       12 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    7
  4928 ;; This function calls:
  4929 ;;		_RobotDrive
  4930 ;;		_readAvgDistance
  4931 ;;		_rotate
  4932 ;;		_robot_read
  4933 ;;		_UpdateDisplay
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           psect	text1067
  4939                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4940                           	line	181
  4941                           	global	__size_of_robotFollow
  4942  01D2                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  4943                           	
  4944  0C39                     _robotFollow:	
  4945                           	opt	stack 0
  4946                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4947                           	line	182
  4948                           	
  4949  0C39                     l11587:	
  4950                           ;robot.c: 182: distTravelled = 0;
  4951  0C39  1683               	bsf	status, 5	;RP0=1, select bank1
  4952  0C3A  1303               	bcf	status, 6	;RP1=0, select bank1
  4953  0C3B  01C0               	clrf	(_distTravelled)^080h
  4954  0C3C  01C1               	clrf	(_distTravelled+1)^080h
  4955                           	line	184
  4956                           	
  4957  0C3D                     l11589:	
  4958                           ;robot.c: 183: int temp1;
  4959                           ;robot.c: 184: unsigned char hysterysis = 20;
  4960  0C3D  3014               	movlw	(014h)
  4961  0C3E  1283               	bcf	status, 5	;RP0=0, select bank0
  4962  0C3F  1303               	bcf	status, 6	;RP1=0, select bank0
  4963  0C40  00DE               	movwf	(??_robotFollow+0)+0
  4964  0C41  085E               	movf	(??_robotFollow+0)+0,w
  4965  0C42  00E4               	movwf	(robotFollow@hysterysis)
  4966                           	line	185
  4967                           	
  4968  0C43                     l11591:	
  4969                           ;robot.c: 185: RobotDrive(speed, 0x7FFF);
  4970  0C43  085A               	movf	(robotFollow@speed+1),w
  4971  0C44  01B0               	clrf	(?_RobotDrive+1)
  4972  0C45  07B0               	addwf	(?_RobotDrive+1)
  4973  0C46  0859               	movf	(robotFollow@speed),w
  4974  0C47  01AF               	clrf	(?_RobotDrive)
  4975  0C48  07AF               	addwf	(?_RobotDrive)
  4976                           
  4977  0C49  30FF               	movlw	low(07FFFh)
  4978  0C4A  00B1               	movwf	0+(?_RobotDrive)+02h
  4979  0C4B  307F               	movlw	high(07FFFh)
  4980  0C4C  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4981  0C4D  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  4982                           	line	186
  4983                           	
  4984  0C52                     l11593:	
  4985                           ;robot.c: 186: ROBOTerror = 0;
  4986  0C52  1683               	bsf	status, 5	;RP0=1, select bank1
  4987  0C53  1303               	bcf	status, 6	;RP1=0, select bank1
  4988  0C54  01D4               	clrf	(_ROBOTerror)^080h
  4989  0C55  2C56               	goto	l11595
  4990                           	line	189
  4991                           ;robot.c: 189: while (1)
  4992                           	
  4993  0C56                     l6115:	
  4994                           	line	193
  4995                           	
  4996  0C56                     l11595:	
  4997                           ;robot.c: 190: {
  4998                           ;robot.c: 193: if (AdcTarget > 100)
  4999  0C56  1283               	bcf	status, 5	;RP0=0, select bank0
  5000  0C57  1303               	bcf	status, 6	;RP1=0, select bank0
  5001  0C58  085C               	movf	(robotFollow@AdcTarget+1),w
  5002  0C59  3A80               	xorlw	80h
  5003  0C5A  00FF               	movwf	btemp+1
  5004  0C5B  3080               	movlw	(high(065h))^80h
  5005  0C5C  027F               	subwf	btemp+1,w
  5006  0C5D  1D03               	skipz
  5007  0C5E  2C61               	goto	u5025
  5008  0C5F  3065               	movlw	low(065h)
  5009  0C60  025B               	subwf	(robotFollow@AdcTarget),w
  5010  0C61                     u5025:
  5011                           
  5012  0C61  1C03               	skipc
  5013  0C62  2C64               	goto	u5021
  5014  0C63  2C65               	goto	u5020
  5015  0C64                     u5021:
  5016  0C64  2C6E               	goto	l11599
  5017  0C65                     u5020:
  5018                           	line	194
  5019                           	
  5020  0C65                     l11597:	
  5021                           ;robot.c: 194: AdcTarget--;
  5022  0C65  30FF               	movlw	low(-1)
  5023  0C66  1283               	bcf	status, 5	;RP0=0, select bank0
  5024  0C67  1303               	bcf	status, 6	;RP1=0, select bank0
  5025  0C68  07DB               	addwf	(robotFollow@AdcTarget),f
  5026  0C69  1803               	skipnc
  5027  0C6A  0ADC               	incf	(robotFollow@AdcTarget+1),f
  5028  0C6B  30FF               	movlw	high(-1)
  5029  0C6C  07DC               	addwf	(robotFollow@AdcTarget+1),f
  5030  0C6D  2C6E               	goto	l11599
  5031                           	
  5032  0C6E                     l6116:	
  5033                           	line	195
  5034                           	
  5035  0C6E                     l11599:	
  5036                           ;robot.c: 195: if (AdcTarget < 100)
  5037  0C6E  1283               	bcf	status, 5	;RP0=0, select bank0
  5038  0C6F  1303               	bcf	status, 6	;RP1=0, select bank0
  5039  0C70  085C               	movf	(robotFollow@AdcTarget+1),w
  5040  0C71  3A80               	xorlw	80h
  5041  0C72  00FF               	movwf	btemp+1
  5042  0C73  3080               	movlw	(high(064h))^80h
  5043  0C74  027F               	subwf	btemp+1,w
  5044  0C75  1D03               	skipz
  5045  0C76  2C79               	goto	u5035
  5046  0C77  3064               	movlw	low(064h)
  5047  0C78  025B               	subwf	(robotFollow@AdcTarget),w
  5048  0C79                     u5035:
  5049                           
  5050  0C79  1803               	skipnc
  5051  0C7A  2C7C               	goto	u5031
  5052  0C7B  2C7D               	goto	u5030
  5053  0C7C                     u5031:
  5054  0C7C  2C86               	goto	l11603
  5055  0C7D                     u5030:
  5056                           	line	196
  5057                           	
  5058  0C7D                     l11601:	
  5059                           ;robot.c: 196: AdcTarget++;
  5060  0C7D  3001               	movlw	low(01h)
  5061  0C7E  1283               	bcf	status, 5	;RP0=0, select bank0
  5062  0C7F  1303               	bcf	status, 6	;RP1=0, select bank0
  5063  0C80  07DB               	addwf	(robotFollow@AdcTarget),f
  5064  0C81  1803               	skipnc
  5065  0C82  0ADC               	incf	(robotFollow@AdcTarget+1),f
  5066  0C83  3000               	movlw	high(01h)
  5067  0C84  07DC               	addwf	(robotFollow@AdcTarget+1),f
  5068  0C85  2C86               	goto	l11603
  5069                           	
  5070  0C86                     l6117:	
  5071                           	line	197
  5072                           	
  5073  0C86                     l11603:	
  5074                           ;robot.c: 197: readAvgDistance();
  5075  0C86  160A  118A  265F   	fcall	_readAvgDistance
              120A  158A         
  5076                           	line	198
  5077                           	
  5078  0C8B                     l11605:	
  5079                           ;robot.c: 198: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + hysterysis))
  5080  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  5081  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  5082  0C8D  086D               	movf	(_adcVal+1),w	;volatile
  5083  0C8E  025C               	subwf	(robotFollow@AdcTarget+1),w
  5084  0C8F  1D03               	skipz
  5085  0C90  2C93               	goto	u5045
  5086  0C91  086C               	movf	(_adcVal),w	;volatile
  5087  0C92  025B               	subwf	(robotFollow@AdcTarget),w
  5088  0C93                     u5045:
  5089  0C93  1803               	skipnc
  5090  0C94  2C96               	goto	u5041
  5091  0C95  2C97               	goto	u5040
  5092  0C96                     u5041:
  5093  0C96  2CB8               	goto	l11611
  5094  0C97                     u5040:
  5095                           	
  5096  0C97                     l11607:	
  5097  0C97  0864               	movf	(robotFollow@hysterysis),w
  5098  0C98  075B               	addwf	(robotFollow@AdcTarget),w
  5099  0C99  00DE               	movwf	(??_robotFollow+0)+0
  5100  0C9A  085C               	movf	(robotFollow@AdcTarget+1),w
  5101  0C9B  1803               	skipnc
  5102  0C9C  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5103  0C9D  00DF               	movwf	((??_robotFollow+0)+0)+1
  5104  0C9E  085F               	movf	1+(??_robotFollow+0)+0,w
  5105  0C9F  026D               	subwf	(_adcVal+1),w	;volatile
  5106  0CA0  1D03               	skipz
  5107  0CA1  2CA4               	goto	u5055
  5108  0CA2  085E               	movf	0+(??_robotFollow+0)+0,w
  5109  0CA3  026C               	subwf	(_adcVal),w	;volatile
  5110  0CA4                     u5055:
  5111  0CA4  1803               	skipnc
  5112  0CA5  2CA7               	goto	u5051
  5113  0CA6  2CA8               	goto	u5050
  5114  0CA7                     u5051:
  5115  0CA7  2CB8               	goto	l11611
  5116  0CA8                     u5050:
  5117                           	line	200
  5118                           	
  5119  0CA8                     l11609:	
  5120                           ;robot.c: 199: {
  5121                           ;robot.c: 200: RobotDrive(speed, 1700);
  5122  0CA8  085A               	movf	(robotFollow@speed+1),w
  5123  0CA9  01B0               	clrf	(?_RobotDrive+1)
  5124  0CAA  07B0               	addwf	(?_RobotDrive+1)
  5125  0CAB  0859               	movf	(robotFollow@speed),w
  5126  0CAC  01AF               	clrf	(?_RobotDrive)
  5127  0CAD  07AF               	addwf	(?_RobotDrive)
  5128                           
  5129  0CAE  30A4               	movlw	low(06A4h)
  5130  0CAF  00B1               	movwf	0+(?_RobotDrive)+02h
  5131  0CB0  3006               	movlw	high(06A4h)
  5132  0CB1  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5133  0CB2  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  5134                           	line	201
  5135                           ;robot.c: 201: }
  5136  0CB7  2D67               	goto	l6119
  5137                           	line	202
  5138                           	
  5139  0CB8                     l6118:	
  5140                           	
  5141  0CB8                     l11611:	
  5142                           ;robot.c: 202: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - hysterysis))
  5143  0CB8  1283               	bcf	status, 5	;RP0=0, select bank0
  5144  0CB9  1303               	bcf	status, 6	;RP1=0, select bank0
  5145  0CBA  085C               	movf	(robotFollow@AdcTarget+1),w
  5146  0CBB  026D               	subwf	(_adcVal+1),w	;volatile
  5147  0CBC  1D03               	skipz
  5148  0CBD  2CC0               	goto	u5065
  5149  0CBE  085B               	movf	(robotFollow@AdcTarget),w
  5150  0CBF  026C               	subwf	(_adcVal),w	;volatile
  5151  0CC0                     u5065:
  5152  0CC0  1803               	skipnc
  5153  0CC1  2CC3               	goto	u5061
  5154  0CC2  2CC4               	goto	u5060
  5155  0CC3                     u5061:
  5156  0CC3  2CEE               	goto	l11617
  5157  0CC4                     u5060:
  5158                           	
  5159  0CC4                     l11613:	
  5160  0CC4  0864               	movf	(robotFollow@hysterysis),w
  5161  0CC5  00DE               	movwf	(??_robotFollow+0)+0
  5162  0CC6  01DF               	clrf	(??_robotFollow+0)+0+1
  5163  0CC7  09DE               	comf	(??_robotFollow+0)+0,f
  5164  0CC8  09DF               	comf	(??_robotFollow+0)+1,f
  5165  0CC9  0ADE               	incf	(??_robotFollow+0)+0,f
  5166  0CCA  1903               	skipnz
  5167  0CCB  0ADF               	incf	(??_robotFollow+0)+1,f
  5168  0CCC  085B               	movf	(robotFollow@AdcTarget),w
  5169  0CCD  075E               	addwf	0+(??_robotFollow+0)+0,w
  5170  0CCE  00E0               	movwf	(??_robotFollow+2)+0
  5171  0CCF  085C               	movf	(robotFollow@AdcTarget+1),w
  5172  0CD0  1803               	skipnc
  5173  0CD1  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5174  0CD2  075F               	addwf	1+(??_robotFollow+0)+0,w
  5175  0CD3  00E1               	movwf	1+(??_robotFollow+2)+0
  5176  0CD4  086D               	movf	(_adcVal+1),w	;volatile
  5177  0CD5  0261               	subwf	1+(??_robotFollow+2)+0,w
  5178  0CD6  1D03               	skipz
  5179  0CD7  2CDA               	goto	u5075
  5180  0CD8  086C               	movf	(_adcVal),w	;volatile
  5181  0CD9  0260               	subwf	0+(??_robotFollow+2)+0,w
  5182  0CDA                     u5075:
  5183  0CDA  1803               	skipnc
  5184  0CDB  2CDD               	goto	u5071
  5185  0CDC  2CDE               	goto	u5070
  5186  0CDD                     u5071:
  5187  0CDD  2CEE               	goto	l11617
  5188  0CDE                     u5070:
  5189                           	line	204
  5190                           	
  5191  0CDE                     l11615:	
  5192                           ;robot.c: 203: {
  5193                           ;robot.c: 204: RobotDrive(speed, -1700);
  5194  0CDE  085A               	movf	(robotFollow@speed+1),w
  5195  0CDF  01B0               	clrf	(?_RobotDrive+1)
  5196  0CE0  07B0               	addwf	(?_RobotDrive+1)
  5197  0CE1  0859               	movf	(robotFollow@speed),w
  5198  0CE2  01AF               	clrf	(?_RobotDrive)
  5199  0CE3  07AF               	addwf	(?_RobotDrive)
  5200                           
  5201  0CE4  305C               	movlw	low(-1700)
  5202  0CE5  00B1               	movwf	0+(?_RobotDrive)+02h
  5203  0CE6  30F9               	movlw	high(-1700)
  5204  0CE7  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5205  0CE8  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  5206                           	line	205
  5207                           ;robot.c: 205: }
  5208  0CED  2D67               	goto	l6119
  5209                           	line	206
  5210                           	
  5211  0CEE                     l6120:	
  5212                           	
  5213  0CEE                     l11617:	
  5214                           ;robot.c: 206: else if (adcVal <= (AdcTarget - hysterysis) || adcVal >= (AdcTarget + hys
                                 terysis))
  5215  0CEE  1283               	bcf	status, 5	;RP0=0, select bank0
  5216  0CEF  1303               	bcf	status, 6	;RP1=0, select bank0
  5217  0CF0  0864               	movf	(robotFollow@hysterysis),w
  5218  0CF1  00DE               	movwf	(??_robotFollow+0)+0
  5219  0CF2  01DF               	clrf	(??_robotFollow+0)+0+1
  5220  0CF3  09DE               	comf	(??_robotFollow+0)+0,f
  5221  0CF4  09DF               	comf	(??_robotFollow+0)+1,f
  5222  0CF5  0ADE               	incf	(??_robotFollow+0)+0,f
  5223  0CF6  1903               	skipnz
  5224  0CF7  0ADF               	incf	(??_robotFollow+0)+1,f
  5225  0CF8  085B               	movf	(robotFollow@AdcTarget),w
  5226  0CF9  075E               	addwf	0+(??_robotFollow+0)+0,w
  5227  0CFA  00E0               	movwf	(??_robotFollow+2)+0
  5228  0CFB  085C               	movf	(robotFollow@AdcTarget+1),w
  5229  0CFC  1803               	skipnc
  5230  0CFD  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5231  0CFE  075F               	addwf	1+(??_robotFollow+0)+0,w
  5232  0CFF  00E1               	movwf	1+(??_robotFollow+2)+0
  5233  0D00  086D               	movf	(_adcVal+1),w	;volatile
  5234  0D01  0261               	subwf	1+(??_robotFollow+2)+0,w
  5235  0D02  1D03               	skipz
  5236  0D03  2D06               	goto	u5085
  5237  0D04  086C               	movf	(_adcVal),w	;volatile
  5238  0D05  0260               	subwf	0+(??_robotFollow+2)+0,w
  5239  0D06                     u5085:
  5240  0D06  1803               	skipnc
  5241  0D07  2D09               	goto	u5081
  5242  0D08  2D0A               	goto	u5080
  5243  0D09                     u5081:
  5244  0D09  2D1C               	goto	l11621
  5245  0D0A                     u5080:
  5246                           	
  5247  0D0A                     l11619:	
  5248  0D0A  0864               	movf	(robotFollow@hysterysis),w
  5249  0D0B  075B               	addwf	(robotFollow@AdcTarget),w
  5250  0D0C  00DE               	movwf	(??_robotFollow+0)+0
  5251  0D0D  085C               	movf	(robotFollow@AdcTarget+1),w
  5252  0D0E  1803               	skipnc
  5253  0D0F  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5254  0D10  00DF               	movwf	((??_robotFollow+0)+0)+1
  5255  0D11  085F               	movf	1+(??_robotFollow+0)+0,w
  5256  0D12  026D               	subwf	(_adcVal+1),w	;volatile
  5257  0D13  1D03               	skipz
  5258  0D14  2D17               	goto	u5095
  5259  0D15  085E               	movf	0+(??_robotFollow+0)+0,w
  5260  0D16  026C               	subwf	(_adcVal),w	;volatile
  5261  0D17                     u5095:
  5262  0D17  1C03               	skipc
  5263  0D18  2D1A               	goto	u5091
  5264  0D19  2D1B               	goto	u5090
  5265  0D1A                     u5091:
  5266  0D1A  2D55               	goto	l11635
  5267  0D1B                     u5090:
  5268  0D1B  2D1C               	goto	l11621
  5269                           	
  5270  0D1C                     l6124:	
  5271                           	line	208
  5272                           	
  5273  0D1C                     l11621:	
  5274                           ;robot.c: 207: {
  5275                           ;robot.c: 208: rotate(10,1);
  5276  0D1C  300A               	movlw	low(0Ah)
  5277  0D1D  00A3               	movwf	(?_rotate)
  5278  0D1E  3000               	movlw	high(0Ah)
  5279  0D1F  00A4               	movwf	((?_rotate))+1
  5280  0D20  01A5               	clrf	0+(?_rotate)+02h
  5281  0D21  1403               	bsf	status,0
  5282  0D22  0DA5               	rlf	0+(?_rotate)+02h,f
  5283  0D23  160A  118A  243A   	fcall	_rotate
              120A  158A         
  5284                           	line	209
  5285                           	
  5286  0D28                     l11623:	
  5287                           ;robot.c: 209: readAvgDistance();
  5288  0D28  160A  118A  265F   	fcall	_readAvgDistance
              120A  158A         
  5289                           	line	210
  5290                           	
  5291  0D2D                     l11625:	
  5292                           ;robot.c: 210: rotate(10,0);
  5293  0D2D  300A               	movlw	low(0Ah)
  5294  0D2E  1283               	bcf	status, 5	;RP0=0, select bank0
  5295  0D2F  1303               	bcf	status, 6	;RP1=0, select bank0
  5296  0D30  00A3               	movwf	(?_rotate)
  5297  0D31  3000               	movlw	high(0Ah)
  5298  0D32  00A4               	movwf	((?_rotate))+1
  5299  0D33  01A5               	clrf	0+(?_rotate)+02h
  5300  0D34  160A  118A  243A   	fcall	_rotate
              120A  158A         
  5301                           	line	211
  5302                           	
  5303  0D39                     l11627:	
  5304                           ;robot.c: 211: if (adcVal < 50)
  5305  0D39  3000               	movlw	high(032h)
  5306  0D3A  1283               	bcf	status, 5	;RP0=0, select bank0
  5307  0D3B  1303               	bcf	status, 6	;RP1=0, select bank0
  5308  0D3C  026D               	subwf	(_adcVal+1),w	;volatile
  5309  0D3D  3032               	movlw	low(032h)
  5310  0D3E  1903               	skipnz
  5311  0D3F  026C               	subwf	(_adcVal),w	;volatile
  5312  0D40  1803               	skipnc
  5313  0D41  2D43               	goto	u5101
  5314  0D42  2D44               	goto	u5100
  5315  0D43                     u5101:
  5316  0D43  2D4B               	goto	l11631
  5317  0D44                     u5100:
  5318                           	line	212
  5319                           	
  5320  0D44                     l11629:	
  5321                           ;robot.c: 212: ROBOTerror = 11;
  5322  0D44  300B               	movlw	(0Bh)
  5323  0D45  00DE               	movwf	(??_robotFollow+0)+0
  5324  0D46  085E               	movf	(??_robotFollow+0)+0,w
  5325  0D47  1683               	bsf	status, 5	;RP0=1, select bank1
  5326  0D48  1303               	bcf	status, 6	;RP1=0, select bank1
  5327  0D49  00D4               	movwf	(_ROBOTerror)^080h
  5328  0D4A  2DE5               	goto	l11663
  5329                           	line	213
  5330                           	
  5331  0D4B                     l6125:	
  5332                           	line	214
  5333                           	
  5334  0D4B                     l11631:	
  5335                           ;robot.c: 213: else
  5336                           ;robot.c: 214: ROBOTerror = 10;
  5337  0D4B  300A               	movlw	(0Ah)
  5338  0D4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5339  0D4D  00DE               	movwf	(??_robotFollow+0)+0
  5340  0D4E  085E               	movf	(??_robotFollow+0)+0,w
  5341  0D4F  1683               	bsf	status, 5	;RP0=1, select bank1
  5342  0D50  1303               	bcf	status, 6	;RP1=0, select bank1
  5343  0D51  00D4               	movwf	(_ROBOTerror)^080h
  5344  0D52  2DE5               	goto	l11663
  5345                           	
  5346  0D53                     l6126:	
  5347                           	line	216
  5348                           ;robot.c: 216: break;
  5349  0D53  2DE5               	goto	l11663
  5350                           	line	217
  5351                           	
  5352  0D54                     l11633:	
  5353                           ;robot.c: 217: }
  5354  0D54  2D67               	goto	l6119
  5355                           	line	218
  5356                           	
  5357  0D55                     l6122:	
  5358                           	line	220
  5359                           	
  5360  0D55                     l11635:	
  5361                           ;robot.c: 218: else
  5362                           ;robot.c: 219: {
  5363                           ;robot.c: 220: RobotDrive(speed, 0x7FFF);
  5364  0D55  1283               	bcf	status, 5	;RP0=0, select bank0
  5365  0D56  085A               	movf	(robotFollow@speed+1),w
  5366  0D57  01B0               	clrf	(?_RobotDrive+1)
  5367  0D58  07B0               	addwf	(?_RobotDrive+1)
  5368  0D59  0859               	movf	(robotFollow@speed),w
  5369  0D5A  01AF               	clrf	(?_RobotDrive)
  5370  0D5B  07AF               	addwf	(?_RobotDrive)
  5371                           
  5372  0D5C  30FF               	movlw	low(07FFFh)
  5373  0D5D  00B1               	movwf	0+(?_RobotDrive)+02h
  5374  0D5E  307F               	movlw	high(07FFFh)
  5375  0D5F  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5376  0D60  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  5377  0D65  2D67               	goto	l6119
  5378                           	line	221
  5379                           	
  5380  0D66                     l6128:	
  5381  0D66  2D67               	goto	l6119
  5382                           	
  5383  0D67                     l6121:	
  5384                           	
  5385  0D67                     l6119:	
  5386                           	line	222
  5387                           ;robot.c: 221: }
  5388                           ;robot.c: 222: robot_read(0);
  5389  0D67  3000               	movlw	(0)
  5390  0D68  120A  158A  232E   	fcall	_robot_read
              120A  158A         
  5391                           	line	223
  5392                           	
  5393  0D6D                     l11637:	
  5394                           ;robot.c: 223: if (BumpSensors)
  5395  0D6D  1283               	bcf	status, 5	;RP0=0, select bank0
  5396  0D6E  1303               	bcf	status, 6	;RP1=0, select bank0
  5397  0D6F  086E               	movf	(_BumpSensors),w	;volatile
  5398  0D70  1D03               	skipz
  5399  0D71  2D73               	goto	u5110
  5400  0D72  2D79               	goto	l11641
  5401  0D73                     u5110:
  5402                           	line	225
  5403                           	
  5404  0D73                     l11639:	
  5405                           ;robot.c: 224: {
  5406                           ;robot.c: 225: ROBOTerror = 1;
  5407  0D73  1683               	bsf	status, 5	;RP0=1, select bank1
  5408  0D74  1303               	bcf	status, 6	;RP1=0, select bank1
  5409  0D75  01D4               	clrf	(_ROBOTerror)^080h
  5410  0D76  1403               	bsf	status,0
  5411  0D77  0DD4               	rlf	(_ROBOTerror)^080h,f
  5412                           	line	226
  5413                           ;robot.c: 226: break;
  5414  0D78  2DE5               	goto	l11663
  5415                           	line	227
  5416                           	
  5417  0D79                     l6129:	
  5418                           	line	228
  5419                           	
  5420  0D79                     l11641:	
  5421                           ;robot.c: 227: }
  5422                           ;robot.c: 228: if (VwallSensor)
  5423  0D79  1283               	bcf	status, 5	;RP0=0, select bank0
  5424  0D7A  086F               	movf	(_VwallSensor),w	;volatile
  5425  0D7B  1D03               	skipz
  5426  0D7C  2D7E               	goto	u5120
  5427  0D7D  2D85               	goto	l11645
  5428  0D7E                     u5120:
  5429                           	line	230
  5430                           	
  5431  0D7E                     l11643:	
  5432                           ;robot.c: 229: {
  5433                           ;robot.c: 230: ROBOTerror = 2;
  5434  0D7E  3002               	movlw	(02h)
  5435  0D7F  00DE               	movwf	(??_robotFollow+0)+0
  5436  0D80  085E               	movf	(??_robotFollow+0)+0,w
  5437  0D81  1683               	bsf	status, 5	;RP0=1, select bank1
  5438  0D82  1303               	bcf	status, 6	;RP1=0, select bank1
  5439  0D83  00D4               	movwf	(_ROBOTerror)^080h
  5440                           	line	231
  5441                           ;robot.c: 231: break;
  5442  0D84  2DE5               	goto	l11663
  5443                           	line	232
  5444                           	
  5445  0D85                     l6130:	
  5446                           	line	233
  5447                           	
  5448  0D85                     l11645:	
  5449                           ;robot.c: 232: }
  5450                           ;robot.c: 233: if (CliffSensors)
  5451  0D85  1683               	bsf	status, 5	;RP0=1, select bank1
  5452  0D86  1303               	bcf	status, 6	;RP1=0, select bank1
  5453  0D87  084F               	movf	(_CliffSensors)^080h,w	;volatile
  5454  0D88  1D03               	skipz
  5455  0D89  2D8B               	goto	u5130
  5456  0D8A  2D94               	goto	l11649
  5457  0D8B                     u5130:
  5458                           	line	235
  5459                           	
  5460  0D8B                     l11647:	
  5461                           ;robot.c: 234: {
  5462                           ;robot.c: 235: ROBOTerror = 3;
  5463  0D8B  3003               	movlw	(03h)
  5464  0D8C  1283               	bcf	status, 5	;RP0=0, select bank0
  5465  0D8D  1303               	bcf	status, 6	;RP1=0, select bank0
  5466  0D8E  00DE               	movwf	(??_robotFollow+0)+0
  5467  0D8F  085E               	movf	(??_robotFollow+0)+0,w
  5468  0D90  1683               	bsf	status, 5	;RP0=1, select bank1
  5469  0D91  1303               	bcf	status, 6	;RP1=0, select bank1
  5470  0D92  00D4               	movwf	(_ROBOTerror)^080h
  5471                           	line	236
  5472                           ;robot.c: 236: break;
  5473  0D93  2DE5               	goto	l11663
  5474                           	line	237
  5475                           	
  5476  0D94                     l6131:	
  5477                           	line	238
  5478                           	
  5479  0D94                     l11649:	
  5480                           ;robot.c: 237: }
  5481                           ;robot.c: 238: temp1 = DistHighByte;
  5482  0D94  0850               	movf	(_DistHighByte)^080h,w	;volatile
  5483  0D95  1283               	bcf	status, 5	;RP0=0, select bank0
  5484  0D96  1303               	bcf	status, 6	;RP1=0, select bank0
  5485  0D97  00DE               	movwf	(??_robotFollow+0)+0
  5486  0D98  01DF               	clrf	(??_robotFollow+0)+0+1
  5487  0D99  085E               	movf	0+(??_robotFollow+0)+0,w
  5488  0D9A  00E2               	movwf	(robotFollow@temp1)
  5489  0D9B  085F               	movf	1+(??_robotFollow+0)+0,w
  5490  0D9C  00E3               	movwf	(robotFollow@temp1+1)
  5491                           	line	239
  5492                           	
  5493  0D9D                     l11651:	
  5494                           ;robot.c: 239: temp1 = temp1 << 8;
  5495  0D9D  0863               	movf	(robotFollow@temp1+1),w
  5496  0D9E  00DF               	movwf	(??_robotFollow+0)+0+1
  5497  0D9F  0862               	movf	(robotFollow@temp1),w
  5498  0DA0  00DE               	movwf	(??_robotFollow+0)+0
  5499  0DA1  085E               	movf	(??_robotFollow+0)+0,w
  5500  0DA2  00DF               	movwf	(??_robotFollow+0)+1
  5501  0DA3  01DE               	clrf	(??_robotFollow+0)+0
  5502  0DA4  085E               	movf	0+(??_robotFollow+0)+0,w
  5503  0DA5  00E2               	movwf	(robotFollow@temp1)
  5504  0DA6  085F               	movf	1+(??_robotFollow+0)+0,w
  5505  0DA7  00E3               	movwf	(robotFollow@temp1+1)
  5506                           	line	240
  5507                           	
  5508  0DA8                     l11653:	
  5509                           ;robot.c: 240: temp1 += DistLowByte;
  5510  0DA8  1683               	bsf	status, 5	;RP0=1, select bank1
  5511  0DA9  1303               	bcf	status, 6	;RP1=0, select bank1
  5512  0DAA  0851               	movf	(_DistLowByte)^080h,w	;volatile
  5513  0DAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5514  0DAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5515  0DAD  00DE               	movwf	(??_robotFollow+0)+0
  5516  0DAE  01DF               	clrf	(??_robotFollow+0)+0+1
  5517  0DAF  085E               	movf	0+(??_robotFollow+0)+0,w
  5518  0DB0  07E2               	addwf	(robotFollow@temp1),f
  5519  0DB1  1803               	skipnc
  5520  0DB2  0AE3               	incf	(robotFollow@temp1+1),f
  5521  0DB3  085F               	movf	1+(??_robotFollow+0)+0,w
  5522  0DB4  07E3               	addwf	(robotFollow@temp1+1),f
  5523                           	line	241
  5524                           	
  5525  0DB5                     l11655:	
  5526                           ;robot.c: 241: distTravelled += temp1;
  5527  0DB5  0862               	movf	(robotFollow@temp1),w
  5528  0DB6  1683               	bsf	status, 5	;RP0=1, select bank1
  5529  0DB7  1303               	bcf	status, 6	;RP1=0, select bank1
  5530  0DB8  07C0               	addwf	(_distTravelled)^080h,f
  5531  0DB9  1803               	skipnc
  5532  0DBA  0AC1               	incf	(_distTravelled+1)^080h,f
  5533  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  5534  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  5535  0DBD  0863               	movf	(robotFollow@temp1+1),w
  5536  0DBE  1683               	bsf	status, 5	;RP0=1, select bank1
  5537  0DBF  1303               	bcf	status, 6	;RP1=0, select bank1
  5538  0DC0  07C1               	addwf	(_distTravelled+1)^080h,f
  5539                           	line	242
  5540                           	
  5541  0DC1                     l11657:	
  5542                           ;robot.c: 242: TotalDistTravelled += temp1;
  5543  0DC1  1283               	bcf	status, 5	;RP0=0, select bank0
  5544  0DC2  1303               	bcf	status, 6	;RP1=0, select bank0
  5545  0DC3  0862               	movf	(robotFollow@temp1),w
  5546  0DC4  1683               	bsf	status, 5	;RP0=1, select bank1
  5547  0DC5  1303               	bcf	status, 6	;RP1=0, select bank1
  5548  0DC6  07BC               	addwf	(_TotalDistTravelled)^080h,f
  5549  0DC7  1803               	skipnc
  5550  0DC8  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  5551  0DC9  1283               	bcf	status, 5	;RP0=0, select bank0
  5552  0DCA  1303               	bcf	status, 6	;RP1=0, select bank0
  5553  0DCB  0863               	movf	(robotFollow@temp1+1),w
  5554  0DCC  1683               	bsf	status, 5	;RP0=1, select bank1
  5555  0DCD  1303               	bcf	status, 6	;RP1=0, select bank1
  5556  0DCE  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  5557                           	line	244
  5558                           	
  5559  0DCF                     l11659:	
  5560                           ;robot.c: 244: Disp2 = RobotPos;
  5561  0DCF  0856               	movf	(_RobotPos)^080h,w
  5562  0DD0  1283               	bcf	status, 5	;RP0=0, select bank0
  5563  0DD1  1303               	bcf	status, 6	;RP1=0, select bank0
  5564  0DD2  00DE               	movwf	(??_robotFollow+0)+0
  5565  0DD3  01DF               	clrf	(??_robotFollow+0)+0+1
  5566  0DD4  085E               	movf	0+(??_robotFollow+0)+0,w
  5567  0DD5  1683               	bsf	status, 5	;RP0=1, select bank1
  5568  0DD6  1303               	bcf	status, 6	;RP1=0, select bank1
  5569  0DD7  00B6               	movwf	(_Disp2)^080h
  5570  0DD8  1283               	bcf	status, 5	;RP0=0, select bank0
  5571  0DD9  1303               	bcf	status, 6	;RP1=0, select bank0
  5572  0DDA  085F               	movf	1+(??_robotFollow+0)+0,w
  5573  0DDB  1683               	bsf	status, 5	;RP0=1, select bank1
  5574  0DDC  1303               	bcf	status, 6	;RP1=0, select bank1
  5575  0DDD  00B7               	movwf	(_Disp2+1)^080h
  5576                           	line	245
  5577                           	
  5578  0DDE                     l11661:	
  5579                           ;robot.c: 245: UpdateDisplay();
  5580  0DDE  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5581  0DE3  2C56               	goto	l11595
  5582                           	line	246
  5583                           	
  5584  0DE4                     l6132:	
  5585                           	line	189
  5586  0DE4  2C56               	goto	l11595
  5587                           	
  5588  0DE5                     l6127:	
  5589                           	line	247
  5590                           	
  5591  0DE5                     l11663:	
  5592                           ;robot.c: 246: }
  5593                           ;robot.c: 247: RobotDrive(0, 0x7FFF);
  5594  0DE5  3000               	movlw	low(0)
  5595  0DE6  1283               	bcf	status, 5	;RP0=0, select bank0
  5596  0DE7  1303               	bcf	status, 6	;RP1=0, select bank0
  5597  0DE8  00AF               	movwf	(?_RobotDrive)
  5598  0DE9  3000               	movlw	high(0)
  5599  0DEA  00B0               	movwf	((?_RobotDrive))+1
  5600  0DEB  30FF               	movlw	low(07FFFh)
  5601  0DEC  00B1               	movwf	0+(?_RobotDrive)+02h
  5602  0DED  307F               	movlw	high(07FFFh)
  5603  0DEE  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5604  0DEF  120A  158A  20C1   	fcall	_RobotDrive
              120A  158A         
  5605                           	line	248
  5606                           	
  5607  0DF4                     l11665:	
  5608                           ;robot.c: 248: Disp2 = RobotPos;
  5609  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  5610  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  5611  0DF6  0856               	movf	(_RobotPos)^080h,w
  5612  0DF7  1283               	bcf	status, 5	;RP0=0, select bank0
  5613  0DF8  1303               	bcf	status, 6	;RP1=0, select bank0
  5614  0DF9  00DE               	movwf	(??_robotFollow+0)+0
  5615  0DFA  01DF               	clrf	(??_robotFollow+0)+0+1
  5616  0DFB  085E               	movf	0+(??_robotFollow+0)+0,w
  5617  0DFC  1683               	bsf	status, 5	;RP0=1, select bank1
  5618  0DFD  1303               	bcf	status, 6	;RP1=0, select bank1
  5619  0DFE  00B6               	movwf	(_Disp2)^080h
  5620  0DFF  1283               	bcf	status, 5	;RP0=0, select bank0
  5621  0E00  1303               	bcf	status, 6	;RP1=0, select bank0
  5622  0E01  085F               	movf	1+(??_robotFollow+0)+0,w
  5623  0E02  1683               	bsf	status, 5	;RP0=1, select bank1
  5624  0E03  1303               	bcf	status, 6	;RP1=0, select bank1
  5625  0E04  00B7               	movwf	(_Disp2+1)^080h
  5626                           	line	249
  5627                           	
  5628  0E05                     l11667:	
  5629                           ;robot.c: 249: UpdateDisplay();
  5630  0E05  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5631                           	line	252
  5632                           	
  5633  0E0A                     l6133:	
  5634  0E0A  0008               	return
  5635                           	opt stack 0
  5636                           GLOBAL	__end_of_robotFollow
  5637  0E0B                     	__end_of_robotFollow:
  5638 ;; =============== function _robotFollow ends ============
  5639                           
  5640                           	signat	_robotFollow,12408
  5641                           	global	_calibrateIR
  5642                           psect	text1068,local,class=CODE,delta=2
  5643                           global __ptext1068
  5644  1509                     __ptext1068:
  5645                           
  5646 ;; *************** function _calibrateIR *****************
  5647 ;; Defined at:
  5648 ;;		line 311 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    6
  5669 ;; This function calls:
  5670 ;;		_rotate
  5671 ;;		_UpdateDisplay
  5672 ;; This function is called by:
  5673 ;;		_main
  5674 ;;		_Init_Follow_IR
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           psect	text1068
  5678                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5679                           	line	311
  5680                           	global	__size_of_calibrateIR
  5681  006C                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  5682                           	
  5683  1509                     _calibrateIR:	
  5684                           	opt	stack 0
  5685                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5686                           	line	312
  5687                           	
  5688  1509                     l11555:	
  5689                           ;Main.c: 312: currentMenu = 1;
  5690  1509  1683               	bsf	status, 5	;RP0=1, select bank1
  5691  150A  1303               	bcf	status, 6	;RP1=0, select bank1
  5692  150B  01D8               	clrf	(_currentMenu)^080h	;volatile
  5693  150C  1403               	bsf	status,0
  5694  150D  0DD8               	rlf	(_currentMenu)^080h,f	;volatile
  5695                           	line	313
  5696                           	
  5697  150E                     l11557:	
  5698                           ;Main.c: 313: rotate(8, 0);
  5699  150E  3008               	movlw	low(08h)
  5700  150F  1283               	bcf	status, 5	;RP0=0, select bank0
  5701  1510  1303               	bcf	status, 6	;RP1=0, select bank0
  5702  1511  00A3               	movwf	(?_rotate)
  5703  1512  3000               	movlw	high(08h)
  5704  1513  00A4               	movwf	((?_rotate))+1
  5705  1514  01A5               	clrf	0+(?_rotate)+02h
  5706  1515  160A  118A  243A   	fcall	_rotate
              160A  118A         
  5707                           	line	314
  5708                           	
  5709  151A                     l11559:	
  5710                           ;Main.c: 314: rotate(8, 1);
  5711  151A  3008               	movlw	low(08h)
  5712  151B  1283               	bcf	status, 5	;RP0=0, select bank0
  5713  151C  1303               	bcf	status, 6	;RP1=0, select bank0
  5714  151D  00A3               	movwf	(?_rotate)
  5715  151E  3000               	movlw	high(08h)
  5716  151F  00A4               	movwf	((?_rotate))+1
  5717  1520  01A5               	clrf	0+(?_rotate)+02h
  5718  1521  1403               	bsf	status,0
  5719  1522  0DA5               	rlf	0+(?_rotate)+02h,f
  5720  1523  160A  118A  243A   	fcall	_rotate
              160A  118A         
  5721  1528  2D29               	goto	l11561
  5722                           	line	315
  5723                           ;Main.c: 315: while (1)
  5724                           	
  5725  1529                     l2289:	
  5726                           	line	317
  5727                           	
  5728  1529                     l11561:	
  5729                           ;Main.c: 316: {
  5730                           ;Main.c: 317: if (RTC_FLAG_250MS == 1)
  5731  1529  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5732  152A  2D2C               	goto	u5011
  5733  152B  2D2D               	goto	u5010
  5734  152C                     u5011:
  5735  152C  2D61               	goto	l11585
  5736  152D                     u5010:
  5737                           	line	319
  5738                           	
  5739  152D                     l11563:	
  5740                           ;Main.c: 318: {
  5741                           ;Main.c: 319: RTC_FLAG_250MS = 0;
  5742  152D  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5743                           	line	320
  5744                           	
  5745  152E                     l11565:	
  5746                           ;Main.c: 320: UpdateDisplay();
  5747  152E  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  5748  1533  2D61               	goto	l11585
  5749                           	line	321
  5750                           	
  5751  1534                     l2290:	
  5752                           	line	322
  5753                           ;Main.c: 321: }
  5754                           ;Main.c: 322: switch (buttonPressed)
  5755  1534  2D61               	goto	l11585
  5756                           	line	324
  5757                           ;Main.c: 323: {
  5758                           ;Main.c: 324: case 1:
  5759                           	
  5760  1535                     l2292:	
  5761                           	line	325
  5762                           ;Main.c: 325: buttonPressed = 0;
  5763  1535  01FD               	clrf	(_buttonPressed)	;volatile
  5764                           	line	326
  5765                           ;Main.c: 326: break;
  5766  1536  2D29               	goto	l11561
  5767                           	line	327
  5768                           ;Main.c: 327: case 2:
  5769                           	
  5770  1537                     l2294:	
  5771                           	line	328
  5772                           ;Main.c: 328: buttonPressed = 0;
  5773  1537  01FD               	clrf	(_buttonPressed)	;volatile
  5774                           	line	329
  5775                           ;Main.c: 329: break;
  5776  1538  2D29               	goto	l11561
  5777                           	line	330
  5778                           ;Main.c: 330: case 3:
  5779                           	
  5780  1539                     l2295:	
  5781                           	line	331
  5782                           	
  5783  1539                     l11567:	
  5784                           ;Main.c: 331: rotate(1, 1);
  5785  1539  3001               	movlw	low(01h)
  5786  153A  1283               	bcf	status, 5	;RP0=0, select bank0
  5787  153B  1303               	bcf	status, 6	;RP1=0, select bank0
  5788  153C  00A3               	movwf	(?_rotate)
  5789  153D  3000               	movlw	high(01h)
  5790  153E  00A4               	movwf	((?_rotate))+1
  5791  153F  01A5               	clrf	0+(?_rotate)+02h
  5792  1540  1403               	bsf	status,0
  5793  1541  0DA5               	rlf	0+(?_rotate)+02h,f
  5794  1542  160A  118A  243A   	fcall	_rotate
              160A  118A         
  5795                           	line	332
  5796                           	
  5797  1547                     l11569:	
  5798                           ;Main.c: 332: buttonPressed = 0;
  5799  1547  01FD               	clrf	(_buttonPressed)	;volatile
  5800                           	line	333
  5801                           ;Main.c: 333: break;
  5802  1548  2D29               	goto	l11561
  5803                           	line	334
  5804                           ;Main.c: 334: case 4:
  5805                           	
  5806  1549                     l2296:	
  5807                           	line	335
  5808                           	
  5809  1549                     l11571:	
  5810                           ;Main.c: 335: rotate(1, 0);
  5811  1549  3001               	movlw	low(01h)
  5812  154A  1283               	bcf	status, 5	;RP0=0, select bank0
  5813  154B  1303               	bcf	status, 6	;RP1=0, select bank0
  5814  154C  00A3               	movwf	(?_rotate)
  5815  154D  3000               	movlw	high(01h)
  5816  154E  00A4               	movwf	((?_rotate))+1
  5817  154F  01A5               	clrf	0+(?_rotate)+02h
  5818  1550  160A  118A  243A   	fcall	_rotate
              160A  118A         
  5819                           	line	336
  5820                           	
  5821  1555                     l11573:	
  5822                           ;Main.c: 336: buttonPressed = 0;
  5823  1555  01FD               	clrf	(_buttonPressed)	;volatile
  5824                           	line	337
  5825                           ;Main.c: 337: break;
  5826  1556  2D29               	goto	l11561
  5827                           	line	338
  5828                           ;Main.c: 338: case 5:
  5829                           	
  5830  1557                     l2297:	
  5831                           	line	340
  5832                           	
  5833  1557                     l11575:	
  5834                           ;Main.c: 340: totalSteps = 0;
  5835  1557  1683               	bsf	status, 5	;RP0=1, select bank1
  5836  1558  1303               	bcf	status, 6	;RP1=0, select bank1
  5837  1559  01CA               	clrf	(_totalSteps)^080h
  5838  155A  01CB               	clrf	(_totalSteps+1)^080h
  5839                           	line	341
  5840                           	
  5841  155B                     l11577:	
  5842                           ;Main.c: 341: buttonPressed = 0;
  5843  155B  01FD               	clrf	(_buttonPressed)	;volatile
  5844                           	line	342
  5845                           	
  5846  155C                     l11579:	
  5847                           ;Main.c: 342: currentMenu = 0;
  5848  155C  01D8               	clrf	(_currentMenu)^080h	;volatile
  5849  155D  2D74               	goto	l2298
  5850                           	line	343
  5851                           	
  5852  155E                     l11581:	
  5853                           ;Main.c: 343: return;
  5854  155E  2D74               	goto	l2298
  5855                           	line	344
  5856                           ;Main.c: 344: default:
  5857                           	
  5858  155F                     l2299:	
  5859                           	line	345
  5860                           ;Main.c: 345: break;
  5861  155F  2D29               	goto	l11561
  5862                           	line	346
  5863                           	
  5864  1560                     l11583:	
  5865                           ;Main.c: 346: }
  5866  1560  2D29               	goto	l11561
  5867                           	line	322
  5868                           	
  5869  1561                     l2291:	
  5870                           	
  5871  1561                     l11585:	
  5872  1561  087D               	movf	(_buttonPressed),w	;volatile
  5873                           	; Switch size 1, requested type "space"
  5874                           ; Number of cases is 5, Range of values is 1 to 5
  5875                           ; switch strategies available:
  5876                           ; Name         Instructions Cycles
  5877                           ; simple_byte           16     9 (average)
  5878                           ; direct_byte           26    11 (fixed)
  5879                           ; jumptable            263     9 (fixed)
  5880                           ;	Chosen strategy is simple_byte
  5881                           
  5882                           	opt asmopt_off
  5883  1562  3A01               	xorlw	1^0	; case 1
  5884  1563  1903               	skipnz
  5885  1564  2D35               	goto	l2292
  5886  1565  3A03               	xorlw	2^1	; case 2
  5887  1566  1903               	skipnz
  5888  1567  2D37               	goto	l2294
  5889  1568  3A01               	xorlw	3^2	; case 3
  5890  1569  1903               	skipnz
  5891  156A  2D39               	goto	l11567
  5892  156B  3A07               	xorlw	4^3	; case 4
  5893  156C  1903               	skipnz
  5894  156D  2D49               	goto	l11571
  5895  156E  3A01               	xorlw	5^4	; case 5
  5896  156F  1903               	skipnz
  5897  1570  2D57               	goto	l11575
  5898  1571  2D29               	goto	l11561
  5899                           	opt asmopt_on
  5900                           
  5901                           	line	346
  5902                           	
  5903  1572                     l2293:	
  5904  1572  2D29               	goto	l11561
  5905                           	line	347
  5906                           	
  5907  1573                     l2300:	
  5908                           	line	315
  5909  1573  2D29               	goto	l11561
  5910                           	
  5911  1574                     l2301:	
  5912                           	line	348
  5913                           	
  5914  1574                     l2298:	
  5915  1574  0008               	return
  5916                           	opt stack 0
  5917                           GLOBAL	__end_of_calibrateIR
  5918  1575                     	__end_of_calibrateIR:
  5919 ;; =============== function _calibrateIR ends ============
  5920                           
  5921                           	signat	_calibrateIR,88
  5922                           	global	_UpdateDisplay
  5923                           psect	text1069,local,class=CODE,delta=2
  5924                           global __ptext1069
  5925  0E0B                     __ptext1069:
  5926                           
  5927 ;; *************** function _UpdateDisplay *****************
  5928 ;; Defined at:
  5929 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;		None
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  5934 ;; Return value:  Size  Location     Type
  5935 ;;		None               void
  5936 ;; Registers used:
  5937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5943 ;;      Params:         0       0       0       0       0
  5944 ;;      Locals:         0      16       0       0       0
  5945 ;;      Temps:          0       4       0       0       0
  5946 ;;      Totals:         0      20       0       0       0
  5947 ;;Total ram usage:       20 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    5
  5950 ;; This function calls:
  5951 ;;		_lcd_write_control
  5952 ;;		_sprintf
  5953 ;;		_lcd_set_cursor
  5954 ;;		_lcd_write_string
  5955 ;;		___awmod
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;;		_calibrateIR
  5959 ;;		_ChargeMode
  5960 ;;		_robotFollow
  5961 ;;		_robot_turnRight
  5962 ;;		_robotMoveSpeed
  5963 ;;		_robotTurnSpeed
  5964 ;;		_scan360
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           psect	text1069
  5968                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  5969                           	line	236
  5970                           	global	__size_of_UpdateDisplay
  5971  01F5                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  5972                           	
  5973  0E0B                     _UpdateDisplay:	
  5974                           	opt	stack 1
  5975                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5976                           	line	237
  5977                           	
  5978  0E0B                     l11485:	
  5979                           ;HMI.c: 237: char LCDOutput[16] = "";
  5980  0E0B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  5981  0E0C  0084               	movwf	fsr0
  5982  0E0D  3090               	movlw	low(UpdateDisplay@F1263)
  5983  0E0E  1283               	bcf	status, 5	;RP0=0, select bank0
  5984  0E0F  1303               	bcf	status, 6	;RP1=0, select bank0
  5985  0E10  00C5               	movwf	(??_UpdateDisplay+0)+0
  5986  0E11  0804               	movf	fsr0,w
  5987  0E12  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  5988  0E13  3010               	movlw	16
  5989  0E14  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  5990  0E15                     u4990:
  5991  0E15  0845               	movf	(??_UpdateDisplay+0)+0,w
  5992  0E16  0084               	movwf	fsr0
  5993  0E17  1783               	bsf	status, 7	;select IRP bank3
  5994                           	
  5995  0E18  0800               	movf	indf,w
  5996  0E19  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  5997  0E1A  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  5998  0E1B  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  5999  0E1C  0084               	movwf	fsr0
  6000  0E1D  1383               	bcf	status, 7	;select IRP bank0
  6001                           	
  6002  0E1E  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  6003  0E1F  0080               	movwf	indf
  6004  0E20  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  6005  0E21  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  6006  0E22  2E15               	goto	u4990
  6007                           	line	238
  6008                           ;HMI.c: 238: switch (currentMenu)
  6009  0E23  2FF2               	goto	l11549
  6010                           	line	240
  6011                           ;HMI.c: 239: {
  6012                           ;HMI.c: 240: case 0:
  6013                           	
  6014  0E24                     l4585:	
  6015                           	line	241
  6016                           	
  6017  0E24                     l11487:	
  6018                           ;HMI.c: 241: lcd_write_control(0b00000001);
  6019  0E24  3001               	movlw	(01h)
  6020  0E25  160A  158A  27D6   	fcall	_lcd_write_control
              120A  158A         
  6021                           	line	242
  6022                           	
  6023  0E2A                     l11489:	
  6024                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  6025  0E2A  302B               	movlw	((STR_13-__stringbase))&0ffh
  6026  0E2B  1283               	bcf	status, 5	;RP0=0, select bank0
  6027  0E2C  1303               	bcf	status, 6	;RP1=0, select bank0
  6028  0E2D  00C5               	movwf	(??_UpdateDisplay+0)+0
  6029  0E2E  0845               	movf	(??_UpdateDisplay+0)+0,w
  6030  0E2F  00B4               	movwf	(?_sprintf)
  6031  0E30  1683               	bsf	status, 5	;RP0=1, select bank1
  6032  0E31  1303               	bcf	status, 6	;RP1=0, select bank1
  6033  0E32  0835               	movf	(_Disp1+1)^080h,w
  6034  0E33  1283               	bcf	status, 5	;RP0=0, select bank0
  6035  0E34  1303               	bcf	status, 6	;RP1=0, select bank0
  6036  0E35  01B6               	clrf	1+(?_sprintf)+01h
  6037  0E36  07B6               	addwf	1+(?_sprintf)+01h
  6038  0E37  1683               	bsf	status, 5	;RP0=1, select bank1
  6039  0E38  1303               	bcf	status, 6	;RP1=0, select bank1
  6040  0E39  0834               	movf	(_Disp1)^080h,w
  6041  0E3A  1283               	bcf	status, 5	;RP0=0, select bank0
  6042  0E3B  1303               	bcf	status, 6	;RP1=0, select bank0
  6043  0E3C  01B5               	clrf	0+(?_sprintf)+01h
  6044  0E3D  07B5               	addwf	0+(?_sprintf)+01h
  6045                           
  6046  0E3E  1683               	bsf	status, 5	;RP0=1, select bank1
  6047  0E3F  1303               	bcf	status, 6	;RP1=0, select bank1
  6048  0E40  0837               	movf	(_Disp2+1)^080h,w
  6049  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  6050  0E42  1303               	bcf	status, 6	;RP1=0, select bank0
  6051  0E43  01B8               	clrf	1+(?_sprintf)+03h
  6052  0E44  07B8               	addwf	1+(?_sprintf)+03h
  6053  0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  6054  0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  6055  0E47  0836               	movf	(_Disp2)^080h,w
  6056  0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  6057  0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  6058  0E4A  01B7               	clrf	0+(?_sprintf)+03h
  6059  0E4B  07B7               	addwf	0+(?_sprintf)+03h
  6060                           
  6061  0E4C  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6062  0E4D  120A  118A  26FF   	fcall	_sprintf
              120A  158A         
  6063                           	line	243
  6064                           	
  6065  0E52                     l11491:	
  6066                           ;HMI.c: 243: lcd_set_cursor(0x00);
  6067  0E52  3000               	movlw	(0)
  6068  0E53  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6069                           	line	244
  6070                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  6071  0E58  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  6072  0E59  1283               	bcf	status, 5	;RP0=0, select bank0
  6073  0E5A  1303               	bcf	status, 6	;RP1=0, select bank0
  6074  0E5B  00A7               	movwf	(?_lcd_write_string)
  6075  0E5C  3000               	movlw	(0x0/2)
  6076  0E5D  00A8               	movwf	(?_lcd_write_string+1)
  6077  0E5E  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6078                           	line	245
  6079                           	
  6080  0E63                     l11493:	
  6081                           ;HMI.c: 245: lcd_set_cursor(0x40);
  6082  0E63  3040               	movlw	(040h)
  6083  0E64  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6084                           	line	246
  6085                           	
  6086  0E69                     l11495:	
  6087                           ;HMI.c: 246: if (pos > 0)
  6088  0E69  1683               	bsf	status, 5	;RP0=1, select bank1
  6089  0E6A  1303               	bcf	status, 6	;RP1=0, select bank1
  6090  0E6B  0847               	movf	(_pos+1)^080h,w
  6091  0E6C  3A80               	xorlw	80h
  6092  0E6D  00FF               	movwf	btemp+1
  6093  0E6E  3080               	movlw	(high(01h))^80h
  6094  0E6F  027F               	subwf	btemp+1,w
  6095  0E70  1D03               	skipz
  6096  0E71  2E74               	goto	u5005
  6097  0E72  3001               	movlw	low(01h)
  6098  0E73  0246               	subwf	(_pos)^080h,w
  6099  0E74                     u5005:
  6100                           
  6101  0E74  1C03               	skipc
  6102  0E75  2E77               	goto	u5001
  6103  0E76  2E78               	goto	u5000
  6104  0E77                     u5001:
  6105  0E77  2E8B               	goto	l11499
  6106  0E78                     u5000:
  6107                           	line	247
  6108                           	
  6109  0E78                     l11497:	
  6110                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  6111  0E78  1683               	bsf	status, 5	;RP0=1, select bank1
  6112  0E79  1303               	bcf	status, 6	;RP1=0, select bank1
  6113  0E7A  0846               	movf	(_pos)^080h,w
  6114  0E7B  3EFF               	addlw	0FFh
  6115  0E7C  3EE8               	addlw	_shortMenuStrings&0ffh
  6116  0E7D  0084               	movwf	fsr0
  6117  0E7E  1383               	bcf	status, 7	;select IRP bank1
  6118  0E7F  0800               	movf	indf,w
  6119  0E80  1283               	bcf	status, 5	;RP0=0, select bank0
  6120  0E81  1303               	bcf	status, 6	;RP1=0, select bank0
  6121  0E82  00A7               	movwf	(?_lcd_write_string)
  6122  0E83  3080               	movlw	80h
  6123  0E84  00A8               	movwf	(?_lcd_write_string+1)
  6124  0E85  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6125  0E8A  2E9E               	goto	l11501
  6126                           	line	248
  6127                           	
  6128  0E8B                     l4586:	
  6129                           	line	249
  6130                           	
  6131  0E8B                     l11499:	
  6132                           ;HMI.c: 248: else
  6133                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  6134  0E8B  1683               	bsf	status, 5	;RP0=1, select bank1
  6135  0E8C  1303               	bcf	status, 6	;RP1=0, select bank1
  6136  0E8D  0846               	movf	(_pos)^080h,w
  6137  0E8E  3E05               	addlw	05h
  6138  0E8F  3EE8               	addlw	_shortMenuStrings&0ffh
  6139  0E90  0084               	movwf	fsr0
  6140  0E91  1383               	bcf	status, 7	;select IRP bank1
  6141  0E92  0800               	movf	indf,w
  6142  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  6143  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  6144  0E95  00A7               	movwf	(?_lcd_write_string)
  6145  0E96  3080               	movlw	80h
  6146  0E97  00A8               	movwf	(?_lcd_write_string+1)
  6147  0E98  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6148  0E9D  2E9E               	goto	l11501
  6149                           	
  6150  0E9E                     l4587:	
  6151                           	line	250
  6152                           	
  6153  0E9E                     l11501:	
  6154                           ;HMI.c: 250: lcd_set_cursor(0x44);
  6155  0E9E  3044               	movlw	(044h)
  6156  0E9F  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6157                           	line	251
  6158                           	
  6159  0EA4                     l11503:	
  6160                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  6161  0EA4  1683               	bsf	status, 5	;RP0=1, select bank1
  6162  0EA5  1303               	bcf	status, 6	;RP1=0, select bank1
  6163  0EA6  0846               	movf	(_pos)^080h,w
  6164  0EA7  3EE2               	addlw	_menuStrings&0ffh
  6165  0EA8  0084               	movwf	fsr0
  6166  0EA9  1383               	bcf	status, 7	;select IRP bank1
  6167  0EAA  0800               	movf	indf,w
  6168  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6169  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6170  0EAD  00A7               	movwf	(?_lcd_write_string)
  6171  0EAE  3080               	movlw	80h
  6172  0EAF  00A8               	movwf	(?_lcd_write_string+1)
  6173  0EB0  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6174                           	line	252
  6175                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  6176  0EB5  304D               	movlw	(04Dh)
  6177  0EB6  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6178                           	line	253
  6179                           	
  6180  0EBB                     l11505:	
  6181                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  6182  0EBB  3006               	movlw	low(06h)
  6183  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  6184  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  6185  0EBE  00A0               	movwf	(?___awmod)
  6186  0EBF  3000               	movlw	high(06h)
  6187  0EC0  00A1               	movwf	((?___awmod))+1
  6188  0EC1  1683               	bsf	status, 5	;RP0=1, select bank1
  6189  0EC2  1303               	bcf	status, 6	;RP1=0, select bank1
  6190  0EC3  0846               	movf	(_pos)^080h,w
  6191  0EC4  3E01               	addlw	low(01h)
  6192  0EC5  1283               	bcf	status, 5	;RP0=0, select bank0
  6193  0EC6  1303               	bcf	status, 6	;RP1=0, select bank0
  6194  0EC7  00A2               	movwf	0+(?___awmod)+02h
  6195  0EC8  1683               	bsf	status, 5	;RP0=1, select bank1
  6196  0EC9  1303               	bcf	status, 6	;RP1=0, select bank1
  6197  0ECA  0847               	movf	(_pos+1)^080h,w
  6198  0ECB  1803               	skipnc
  6199  0ECC  3E01               	addlw	1
  6200  0ECD  3E00               	addlw	high(01h)
  6201  0ECE  1283               	bcf	status, 5	;RP0=0, select bank0
  6202  0ECF  1303               	bcf	status, 6	;RP1=0, select bank0
  6203  0ED0  00A3               	movwf	1+0+(?___awmod)+02h
  6204  0ED1  160A  118A  24A1   	fcall	___awmod
              120A  158A         
  6205  0ED6  1283               	bcf	status, 5	;RP0=0, select bank0
  6206  0ED7  1303               	bcf	status, 6	;RP1=0, select bank0
  6207  0ED8  0820               	movf	(0+(?___awmod)),w
  6208  0ED9  3EE8               	addlw	_shortMenuStrings&0ffh
  6209  0EDA  0084               	movwf	fsr0
  6210  0EDB  1383               	bcf	status, 7	;select IRP bank1
  6211  0EDC  0800               	movf	indf,w
  6212  0EDD  00A7               	movwf	(?_lcd_write_string)
  6213  0EDE  3080               	movlw	80h
  6214  0EDF  00A8               	movwf	(?_lcd_write_string+1)
  6215  0EE0  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6216                           	line	254
  6217                           ;HMI.c: 254: break;
  6218  0EE5  2FFF               	goto	l4600
  6219                           	line	255
  6220                           ;HMI.c: 255: case 1:
  6221                           	
  6222  0EE6                     l4589:	
  6223                           	line	256
  6224                           	
  6225  0EE6                     l11507:	
  6226                           ;HMI.c: 256: lcd_write_control(0b00000001);
  6227  0EE6  3001               	movlw	(01h)
  6228  0EE7  160A  158A  27D6   	fcall	_lcd_write_control
              120A  158A         
  6229                           	line	257
  6230                           ;HMI.c: 257: lcd_set_cursor(0x00);
  6231  0EEC  3000               	movlw	(0)
  6232  0EED  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6233                           	line	258
  6234                           	
  6235  0EF2                     l11509:	
  6236                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  6237  0EF2  301B               	movlw	low((STR_14-__stringbase))
  6238  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  6239  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  6240  0EF5  00A7               	movwf	(?_lcd_write_string)
  6241  0EF6  3080               	movlw	80h
  6242  0EF7  00A8               	movwf	(?_lcd_write_string+1)
  6243  0EF8  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6244                           	line	259
  6245                           	
  6246  0EFD                     l11511:	
  6247                           ;HMI.c: 259: lcd_set_cursor(0x40);
  6248  0EFD  3040               	movlw	(040h)
  6249  0EFE  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6250                           	line	260
  6251                           ;HMI.c: 260: lcd_write_string("<<<");
  6252  0F03  3087               	movlw	low((STR_15-__stringbase))
  6253  0F04  1283               	bcf	status, 5	;RP0=0, select bank0
  6254  0F05  1303               	bcf	status, 6	;RP1=0, select bank0
  6255  0F06  00A7               	movwf	(?_lcd_write_string)
  6256  0F07  3080               	movlw	80h
  6257  0F08  00A8               	movwf	(?_lcd_write_string+1)
  6258  0F09  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6259                           	line	261
  6260                           	
  6261  0F0E                     l11513:	
  6262                           ;HMI.c: 261: lcd_set_cursor(0x44);
  6263  0F0E  3044               	movlw	(044h)
  6264  0F0F  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6265                           	line	262
  6266                           	
  6267  0F14                     l11515:	
  6268                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  6269  0F14  3076               	movlw	low((STR_16-__stringbase))
  6270  0F15  1283               	bcf	status, 5	;RP0=0, select bank0
  6271  0F16  1303               	bcf	status, 6	;RP1=0, select bank0
  6272  0F17  00A7               	movwf	(?_lcd_write_string)
  6273  0F18  3080               	movlw	80h
  6274  0F19  00A8               	movwf	(?_lcd_write_string+1)
  6275  0F1A  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6276                           	line	263
  6277                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  6278  0F1F  304D               	movlw	(04Dh)
  6279  0F20  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6280                           	line	264
  6281                           	
  6282  0F25                     l11517:	
  6283                           ;HMI.c: 264: lcd_write_string(">>>");
  6284  0F25  308B               	movlw	low((STR_17-__stringbase))
  6285  0F26  1283               	bcf	status, 5	;RP0=0, select bank0
  6286  0F27  1303               	bcf	status, 6	;RP1=0, select bank0
  6287  0F28  00A7               	movwf	(?_lcd_write_string)
  6288  0F29  3080               	movlw	80h
  6289  0F2A  00A8               	movwf	(?_lcd_write_string+1)
  6290  0F2B  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6291                           	line	265
  6292                           ;HMI.c: 265: break;
  6293  0F30  2FFF               	goto	l4600
  6294                           	line	266
  6295                           ;HMI.c: 266: case 2:
  6296                           	
  6297  0F31                     l4590:	
  6298                           	line	267
  6299                           	
  6300  0F31                     l11519:	
  6301                           ;HMI.c: 267: lcd_write_control(0b00000001);
  6302  0F31  3001               	movlw	(01h)
  6303  0F32  160A  158A  27D6   	fcall	_lcd_write_control
              120A  158A         
  6304                           	line	268
  6305                           ;HMI.c: 268: lcd_set_cursor(0x00);
  6306  0F37  3000               	movlw	(0)
  6307  0F38  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6308                           	line	269
  6309                           	
  6310  0F3D                     l11521:	
  6311                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  6312  0F3D  300B               	movlw	low((STR_18-__stringbase))
  6313  0F3E  1283               	bcf	status, 5	;RP0=0, select bank0
  6314  0F3F  1303               	bcf	status, 6	;RP1=0, select bank0
  6315  0F40  00A7               	movwf	(?_lcd_write_string)
  6316  0F41  3080               	movlw	80h
  6317  0F42  00A8               	movwf	(?_lcd_write_string+1)
  6318  0F43  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6319                           	line	270
  6320                           	
  6321  0F48                     l11523:	
  6322                           ;HMI.c: 270: lcd_set_cursor(0x40);
  6323  0F48  3040               	movlw	(040h)
  6324  0F49  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6325                           	line	271
  6326                           ;HMI.c: 271: sprintf(LCDOutput,"%dmA", BattCharge);
  6327  0F4E  307E               	movlw	((STR_19-__stringbase))&0ffh
  6328  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  6329  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  6330  0F51  00C5               	movwf	(??_UpdateDisplay+0)+0
  6331  0F52  0845               	movf	(??_UpdateDisplay+0)+0,w
  6332  0F53  00B4               	movwf	(?_sprintf)
  6333  0F54  1683               	bsf	status, 5	;RP0=1, select bank1
  6334  0F55  1303               	bcf	status, 6	;RP1=0, select bank1
  6335  0F56  0831               	movf	(_BattCharge+1)^080h,w
  6336  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  6337  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  6338  0F59  01B6               	clrf	1+(?_sprintf)+01h
  6339  0F5A  07B6               	addwf	1+(?_sprintf)+01h
  6340  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  6341  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  6342  0F5D  0830               	movf	(_BattCharge)^080h,w
  6343  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  6344  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  6345  0F60  01B5               	clrf	0+(?_sprintf)+01h
  6346  0F61  07B5               	addwf	0+(?_sprintf)+01h
  6347                           
  6348  0F62  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6349  0F63  120A  118A  26FF   	fcall	_sprintf
              120A  158A         
  6350                           	line	272
  6351                           ;HMI.c: 272: lcd_write_string(LCDOutput);
  6352  0F68  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  6353  0F69  1283               	bcf	status, 5	;RP0=0, select bank0
  6354  0F6A  1303               	bcf	status, 6	;RP1=0, select bank0
  6355  0F6B  00A7               	movwf	(?_lcd_write_string)
  6356  0F6C  3000               	movlw	(0x0/2)
  6357  0F6D  00A8               	movwf	(?_lcd_write_string+1)
  6358  0F6E  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6359                           	line	273
  6360                           	
  6361  0F73                     l11525:	
  6362                           ;HMI.c: 273: lcd_set_cursor(0x4D);
  6363  0F73  304D               	movlw	(04Dh)
  6364  0F74  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6365                           	line	274
  6366                           ;HMI.c: 274: switch(BattState)
  6367  0F79  2FC3               	goto	l11541
  6368                           	line	276
  6369                           ;HMI.c: 275: {
  6370                           ;HMI.c: 276: case 0:
  6371                           	
  6372  0F7A                     l4592:	
  6373                           	line	277
  6374                           	
  6375  0F7A                     l11527:	
  6376                           ;HMI.c: 277: lcd_write_string("NC");
  6377  0F7A  30A6               	movlw	low((STR_20-__stringbase))
  6378  0F7B  1283               	bcf	status, 5	;RP0=0, select bank0
  6379  0F7C  1303               	bcf	status, 6	;RP1=0, select bank0
  6380  0F7D  00A7               	movwf	(?_lcd_write_string)
  6381  0F7E  3080               	movlw	80h
  6382  0F7F  00A8               	movwf	(?_lcd_write_string+1)
  6383  0F80  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6384                           	line	278
  6385                           ;HMI.c: 278: break;
  6386  0F85  2FDE               	goto	l11543
  6387                           	line	279
  6388                           ;HMI.c: 279: case 1:
  6389                           	
  6390  0F86                     l4594:	
  6391                           	line	280
  6392                           	
  6393  0F86                     l11529:	
  6394                           ;HMI.c: 280: lcd_write_string("RC");
  6395  0F86  30A9               	movlw	low((STR_21-__stringbase))
  6396  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  6397  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  6398  0F89  00A7               	movwf	(?_lcd_write_string)
  6399  0F8A  3080               	movlw	80h
  6400  0F8B  00A8               	movwf	(?_lcd_write_string+1)
  6401  0F8C  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6402                           	line	281
  6403                           ;HMI.c: 281: break;
  6404  0F91  2FDE               	goto	l11543
  6405                           	line	282
  6406                           ;HMI.c: 282: case 2:
  6407                           	
  6408  0F92                     l4595:	
  6409                           	line	283
  6410                           	
  6411  0F92                     l11531:	
  6412                           ;HMI.c: 283: lcd_write_string("FC");
  6413  0F92  30A3               	movlw	low((STR_22-__stringbase))
  6414  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  6415  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  6416  0F95  00A7               	movwf	(?_lcd_write_string)
  6417  0F96  3080               	movlw	80h
  6418  0F97  00A8               	movwf	(?_lcd_write_string+1)
  6419  0F98  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6420                           	line	284
  6421                           ;HMI.c: 284: break;
  6422  0F9D  2FDE               	goto	l11543
  6423                           	line	285
  6424                           ;HMI.c: 285: case 3:
  6425                           	
  6426  0F9E                     l4596:	
  6427                           	line	286
  6428                           	
  6429  0F9E                     l11533:	
  6430                           ;HMI.c: 286: lcd_write_string("TC");
  6431  0F9E  30AC               	movlw	low((STR_23-__stringbase))
  6432  0F9F  1283               	bcf	status, 5	;RP0=0, select bank0
  6433  0FA0  1303               	bcf	status, 6	;RP1=0, select bank0
  6434  0FA1  00A7               	movwf	(?_lcd_write_string)
  6435  0FA2  3080               	movlw	80h
  6436  0FA3  00A8               	movwf	(?_lcd_write_string+1)
  6437  0FA4  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6438                           	line	287
  6439                           ;HMI.c: 287: break;
  6440  0FA9  2FDE               	goto	l11543
  6441                           	line	288
  6442                           ;HMI.c: 288: case 4:
  6443                           	
  6444  0FAA                     l4597:	
  6445                           	line	289
  6446                           	
  6447  0FAA                     l11535:	
  6448                           ;HMI.c: 289: lcd_write_string("Wa");
  6449  0FAA  30AF               	movlw	low((STR_24-__stringbase))
  6450  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6451  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6452  0FAD  00A7               	movwf	(?_lcd_write_string)
  6453  0FAE  3080               	movlw	80h
  6454  0FAF  00A8               	movwf	(?_lcd_write_string+1)
  6455  0FB0  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6456                           	line	290
  6457                           ;HMI.c: 290: break;
  6458  0FB5  2FDE               	goto	l11543
  6459                           	line	291
  6460                           ;HMI.c: 291: case 5:
  6461                           	
  6462  0FB6                     l4598:	
  6463                           	line	292
  6464                           	
  6465  0FB6                     l11537:	
  6466                           ;HMI.c: 292: lcd_write_string("FC");
  6467  0FB6  30A3               	movlw	low((STR_25-__stringbase))
  6468  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  6469  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  6470  0FB9  00A7               	movwf	(?_lcd_write_string)
  6471  0FBA  3080               	movlw	80h
  6472  0FBB  00A8               	movwf	(?_lcd_write_string+1)
  6473  0FBC  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6474                           	line	293
  6475                           ;HMI.c: 293: break;
  6476  0FC1  2FDE               	goto	l11543
  6477                           	line	294
  6478                           	
  6479  0FC2                     l11539:	
  6480                           ;HMI.c: 294: }
  6481  0FC2  2FDE               	goto	l11543
  6482                           	line	274
  6483                           	
  6484  0FC3                     l4591:	
  6485                           	
  6486  0FC3                     l11541:	
  6487                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6488                           ; Switch size 1, requested type "space"
  6489                           ; Number of cases is 1, Range of values is 0 to 0
  6490                           ; switch strategies available:
  6491                           ; Name         Instructions Cycles
  6492                           ; simple_byte            4     3 (average)
  6493                           ; direct_byte           11     8 (fixed)
  6494                           ; jumptable            260     6 (fixed)
  6495                           ; rangetable             5     6 (fixed)
  6496                           ; spacedrange            8     9 (fixed)
  6497                           ; locatedrange           1     3 (fixed)
  6498                           ;	Chosen strategy is simple_byte
  6499                           
  6500  0FC3  1683               	bsf	status, 5	;RP0=1, select bank1
  6501  0FC4  1303               	bcf	status, 6	;RP1=0, select bank1
  6502  0FC5  0833               	movf (_BattState+1)^080h,w
  6503                           	opt asmopt_off
  6504  0FC6  3A00               	xorlw	0^0	; case 0
  6505  0FC7  1903               	skipnz
  6506  0FC8  2FCA               	goto	l11997
  6507  0FC9  2FDE               	goto	l11543
  6508                           	opt asmopt_on
  6509                           	
  6510  0FCA                     l11997:	
  6511                           ; Switch size 1, requested type "space"
  6512                           ; Number of cases is 6, Range of values is 0 to 5
  6513                           ; switch strategies available:
  6514                           ; Name         Instructions Cycles
  6515                           ; simple_byte           19    10 (average)
  6516                           ; direct_byte           26     8 (fixed)
  6517                           ; jumptable            260     6 (fixed)
  6518                           ; rangetable            10     6 (fixed)
  6519                           ; spacedrange           18     9 (fixed)
  6520                           ; locatedrange           6     3 (fixed)
  6521                           ;	Chosen strategy is simple_byte
  6522                           
  6523  0FCA  0832               	movf (_BattState)^080h,w
  6524                           	opt asmopt_off
  6525  0FCB  3A00               	xorlw	0^0	; case 0
  6526  0FCC  1903               	skipnz
  6527  0FCD  2F7A               	goto	l11527
  6528  0FCE  3A01               	xorlw	1^0	; case 1
  6529  0FCF  1903               	skipnz
  6530  0FD0  2F86               	goto	l11529
  6531  0FD1  3A03               	xorlw	2^1	; case 2
  6532  0FD2  1903               	skipnz
  6533  0FD3  2F92               	goto	l11531
  6534  0FD4  3A01               	xorlw	3^2	; case 3
  6535  0FD5  1903               	skipnz
  6536  0FD6  2F9E               	goto	l11533
  6537  0FD7  3A07               	xorlw	4^3	; case 4
  6538  0FD8  1903               	skipnz
  6539  0FD9  2FAA               	goto	l11535
  6540  0FDA  3A01               	xorlw	5^4	; case 5
  6541  0FDB  1903               	skipnz
  6542  0FDC  2FB6               	goto	l11537
  6543  0FDD  2FDE               	goto	l11543
  6544                           	opt asmopt_on
  6545                           
  6546                           	line	294
  6547                           	
  6548  0FDE                     l4593:	
  6549                           	line	296
  6550                           	
  6551  0FDE                     l11543:	
  6552                           ;HMI.c: 296: lcd_set_cursor(0x44);
  6553  0FDE  3044               	movlw	(044h)
  6554  0FDF  160A  158A  2791   	fcall	_lcd_set_cursor
              120A  158A         
  6555                           	line	297
  6556                           	
  6557  0FE4                     l11545:	
  6558                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  6559  0FE4  3038               	movlw	low((STR_26-__stringbase))
  6560  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  6561  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  6562  0FE7  00A7               	movwf	(?_lcd_write_string)
  6563  0FE8  3080               	movlw	80h
  6564  0FE9  00A8               	movwf	(?_lcd_write_string+1)
  6565  0FEA  160A  118A  21A6   	fcall	_lcd_write_string
              120A  158A         
  6566                           	line	298
  6567                           ;HMI.c: 298: break;
  6568  0FEF  2FFF               	goto	l4600
  6569                           	line	299
  6570                           ;HMI.c: 299: default:
  6571                           	
  6572  0FF0                     l4599:	
  6573                           	line	300
  6574                           ;HMI.c: 300: break;
  6575  0FF0  2FFF               	goto	l4600
  6576                           	line	301
  6577                           	
  6578  0FF1                     l11547:	
  6579                           ;HMI.c: 301: }
  6580  0FF1  2FFF               	goto	l4600
  6581                           	line	238
  6582                           	
  6583  0FF2                     l4584:	
  6584                           	
  6585  0FF2                     l11549:	
  6586  0FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  6587  0FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  6588  0FF4  0858               	movf	(_currentMenu)^080h,w	;volatile
  6589                           	; Switch size 1, requested type "space"
  6590                           ; Number of cases is 3, Range of values is 0 to 2
  6591                           ; switch strategies available:
  6592                           ; Name         Instructions Cycles
  6593                           ; simple_byte           10     6 (average)
  6594                           ; direct_byte           17     8 (fixed)
  6595                           ; jumptable            260     6 (fixed)
  6596                           ; rangetable             7     6 (fixed)
  6597                           ; spacedrange           12     9 (fixed)
  6598                           ; locatedrange           3     3 (fixed)
  6599                           ;	Chosen strategy is simple_byte
  6600                           
  6601                           	opt asmopt_off
  6602  0FF5  3A00               	xorlw	0^0	; case 0
  6603  0FF6  1903               	skipnz
  6604  0FF7  2E24               	goto	l11487
  6605  0FF8  3A01               	xorlw	1^0	; case 1
  6606  0FF9  1903               	skipnz
  6607  0FFA  2EE6               	goto	l11507
  6608  0FFB  3A03               	xorlw	2^1	; case 2
  6609  0FFC  1903               	skipnz
  6610  0FFD  2F31               	goto	l11519
  6611  0FFE  2FFF               	goto	l4600
  6612                           	opt asmopt_on
  6613                           
  6614                           	line	301
  6615                           	
  6616  0FFF                     l4588:	
  6617                           	line	302
  6618                           	
  6619  0FFF                     l4600:	
  6620  0FFF  0008               	return
  6621                           	opt stack 0
  6622                           GLOBAL	__end_of_UpdateDisplay
  6623  1000                     	__end_of_UpdateDisplay:
  6624 ;; =============== function _UpdateDisplay ends ============
  6625                           
  6626                           	signat	_UpdateDisplay,88
  6627                           	global	_readAvgDistance
  6628                           psect	text1070,local,class=CODE,delta=2
  6629                           global __ptext1070
  6630  165F                     __ptext1070:
  6631                           
  6632 ;; *************** function _readAvgDistance *****************
  6633 ;; Defined at:
  6634 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  i               2   22[BANK0 ] int 
  6639 ;;  tempIR          2   20[BANK0 ] unsigned int 
  6640 ;;  j               2   18[BANK0 ] int 
  6641 ;;  fullval         2   16[BANK0 ] unsigned int 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;		None               void
  6644 ;; Registers used:
  6645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6651 ;;      Params:         0       0       0       0       0
  6652 ;;      Locals:         0       8       0       0       0
  6653 ;;      Temps:          0       0       0       0       0
  6654 ;;      Totals:         0       8       0       0       0
  6655 ;;Total ram usage:        8 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    6
  6658 ;; This function calls:
  6659 ;;		_readDistance
  6660 ;;		___lwdiv
  6661 ;;		_ADCconvert
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;;		_robotFollow
  6665 ;;		_robot_turnRight
  6666 ;;		_RightTurn
  6667 ;;		_scan360
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           psect	text1070
  6671                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6672                           	line	28
  6673                           	global	__size_of_readAvgDistance
  6674  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  6675                           	
  6676  165F                     _readAvgDistance:	
  6677                           	opt	stack 0
  6678                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6679                           	line	29
  6680                           	
  6681  165F                     l11467:	
  6682                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  6683  165F  1283               	bcf	status, 5	;RP0=0, select bank0
  6684  1660  1303               	bcf	status, 6	;RP1=0, select bank0
  6685  1661  01B0               	clrf	(readAvgDistance@fullval)
  6686  1662  01B1               	clrf	(readAvgDistance@fullval+1)
  6687  1663  01B4               	clrf	(readAvgDistance@tempIR)
  6688  1664  01B5               	clrf	(readAvgDistance@tempIR+1)
  6689                           	line	30
  6690                           ;infrared.c: 30: int j = 0;
  6691  1665  01B2               	clrf	(readAvgDistance@j)
  6692  1666  01B3               	clrf	(readAvgDistance@j+1)
  6693                           	line	32
  6694                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  6695  1667  01B6               	clrf	(readAvgDistance@i)
  6696  1668  01B7               	clrf	(readAvgDistance@i+1)
  6697                           	
  6698  1669                     l11469:	
  6699  1669  0837               	movf	(readAvgDistance@i+1),w
  6700  166A  3A80               	xorlw	80h
  6701  166B  00FF               	movwf	btemp+1
  6702  166C  3080               	movlw	(high(08h))^80h
  6703  166D  027F               	subwf	btemp+1,w
  6704  166E  1D03               	skipz
  6705  166F  2E72               	goto	u4965
  6706  1670  3008               	movlw	low(08h)
  6707  1671  0236               	subwf	(readAvgDistance@i),w
  6708  1672                     u4965:
  6709                           
  6710  1672  1C03               	skipc
  6711  1673  2E75               	goto	u4961
  6712  1674  2E76               	goto	u4960
  6713  1675                     u4961:
  6714  1675  2E78               	goto	l11473
  6715  1676                     u4960:
  6716  1676  2EAE               	goto	l11481
  6717                           	
  6718  1677                     l11471:	
  6719  1677  2EAE               	goto	l11481
  6720                           	line	33
  6721                           	
  6722  1678                     l3030:	
  6723                           	line	34
  6724                           	
  6725  1678                     l11473:	
  6726                           ;infrared.c: 33: {
  6727                           ;infrared.c: 34: tempIR = readDistance();
  6728  1678  160A  118A  2011   	fcall	_readDistance
              160A  118A         
  6729  167D  1283               	bcf	status, 5	;RP0=0, select bank0
  6730  167E  1303               	bcf	status, 6	;RP1=0, select bank0
  6731  167F  0829               	movf	(1+(?_readDistance)),w
  6732  1680  01B5               	clrf	(readAvgDistance@tempIR+1)
  6733  1681  07B5               	addwf	(readAvgDistance@tempIR+1)
  6734  1682  0828               	movf	(0+(?_readDistance)),w
  6735  1683  01B4               	clrf	(readAvgDistance@tempIR)
  6736  1684  07B4               	addwf	(readAvgDistance@tempIR)
  6737                           
  6738                           	line	35
  6739                           	
  6740  1685                     l11475:	
  6741                           ;infrared.c: 35: if (tempIR <= 1000)
  6742  1685  3003               	movlw	high(03E9h)
  6743  1686  0235               	subwf	(readAvgDistance@tempIR+1),w
  6744  1687  30E9               	movlw	low(03E9h)
  6745  1688  1903               	skipnz
  6746  1689  0234               	subwf	(readAvgDistance@tempIR),w
  6747  168A  1803               	skipnc
  6748  168B  2E8D               	goto	u4971
  6749  168C  2E8E               	goto	u4970
  6750  168D                     u4971:
  6751  168D  2E9A               	goto	l3032
  6752  168E                     u4970:
  6753                           	line	37
  6754                           	
  6755  168E                     l11477:	
  6756                           ;infrared.c: 36: {
  6757                           ;infrared.c: 37: fullval += tempIR;
  6758  168E  0834               	movf	(readAvgDistance@tempIR),w
  6759  168F  07B0               	addwf	(readAvgDistance@fullval),f
  6760  1690  1803               	skipnc
  6761  1691  0AB1               	incf	(readAvgDistance@fullval+1),f
  6762  1692  0835               	movf	(readAvgDistance@tempIR+1),w
  6763  1693  07B1               	addwf	(readAvgDistance@fullval+1),f
  6764                           	line	38
  6765                           ;infrared.c: 38: j++;
  6766  1694  3001               	movlw	low(01h)
  6767  1695  07B2               	addwf	(readAvgDistance@j),f
  6768  1696  1803               	skipnc
  6769  1697  0AB3               	incf	(readAvgDistance@j+1),f
  6770  1698  3000               	movlw	high(01h)
  6771  1699  07B3               	addwf	(readAvgDistance@j+1),f
  6772                           	line	39
  6773                           	
  6774  169A                     l3032:	
  6775                           	line	32
  6776  169A  3001               	movlw	low(01h)
  6777  169B  07B6               	addwf	(readAvgDistance@i),f
  6778  169C  1803               	skipnc
  6779  169D  0AB7               	incf	(readAvgDistance@i+1),f
  6780  169E  3000               	movlw	high(01h)
  6781  169F  07B7               	addwf	(readAvgDistance@i+1),f
  6782                           	
  6783  16A0                     l11479:	
  6784  16A0  0837               	movf	(readAvgDistance@i+1),w
  6785  16A1  3A80               	xorlw	80h
  6786  16A2  00FF               	movwf	btemp+1
  6787  16A3  3080               	movlw	(high(08h))^80h
  6788  16A4  027F               	subwf	btemp+1,w
  6789  16A5  1D03               	skipz
  6790  16A6  2EA9               	goto	u4985
  6791  16A7  3008               	movlw	low(08h)
  6792  16A8  0236               	subwf	(readAvgDistance@i),w
  6793  16A9                     u4985:
  6794                           
  6795  16A9  1C03               	skipc
  6796  16AA  2EAC               	goto	u4981
  6797  16AB  2EAD               	goto	u4980
  6798  16AC                     u4981:
  6799  16AC  2E78               	goto	l11473
  6800  16AD                     u4980:
  6801  16AD  2EAE               	goto	l11481
  6802                           	
  6803  16AE                     l3031:	
  6804                           	line	41
  6805                           	
  6806  16AE                     l11481:	
  6807                           ;infrared.c: 39: }
  6808                           ;infrared.c: 40: }
  6809                           ;infrared.c: 41: adcVal = fullval / j;
  6810  16AE  1283               	bcf	status, 5	;RP0=0, select bank0
  6811  16AF  1303               	bcf	status, 6	;RP1=0, select bank0
  6812  16B0  0833               	movf	(readAvgDistance@j+1),w
  6813  16B1  01A7               	clrf	(?___lwdiv+1)
  6814  16B2  07A7               	addwf	(?___lwdiv+1)
  6815  16B3  0832               	movf	(readAvgDistance@j),w
  6816  16B4  01A6               	clrf	(?___lwdiv)
  6817  16B5  07A6               	addwf	(?___lwdiv)
  6818                           
  6819  16B6  0831               	movf	(readAvgDistance@fullval+1),w
  6820  16B7  01A9               	clrf	1+(?___lwdiv)+02h
  6821  16B8  07A9               	addwf	1+(?___lwdiv)+02h
  6822  16B9  0830               	movf	(readAvgDistance@fullval),w
  6823  16BA  01A8               	clrf	0+(?___lwdiv)+02h
  6824  16BB  07A8               	addwf	0+(?___lwdiv)+02h
  6825                           
  6826  16BC  160A  118A  23EA   	fcall	___lwdiv
              160A  118A         
  6827  16C1  1283               	bcf	status, 5	;RP0=0, select bank0
  6828  16C2  1303               	bcf	status, 6	;RP1=0, select bank0
  6829  16C3  0827               	movf	(1+(?___lwdiv)),w
  6830  16C4  01ED               	clrf	(_adcVal+1)	;volatile
  6831  16C5  07ED               	addwf	(_adcVal+1)	;volatile
  6832  16C6  0826               	movf	(0+(?___lwdiv)),w
  6833  16C7  01EC               	clrf	(_adcVal)	;volatile
  6834  16C8  07EC               	addwf	(_adcVal)	;volatile
  6835                           
  6836                           	line	42
  6837                           ;infrared.c: 42: ADCconvert();
  6838  16C9  120A  118A  24DC   	fcall	_ADCconvert
              160A  118A         
  6839                           	line	43
  6840                           	
  6841  16CE                     l11483:	
  6842                           ;infrared.c: 43: Disp1 = adcVal;
  6843  16CE  1283               	bcf	status, 5	;RP0=0, select bank0
  6844  16CF  1303               	bcf	status, 6	;RP1=0, select bank0
  6845  16D0  086D               	movf	(_adcVal+1),w	;volatile
  6846  16D1  1683               	bsf	status, 5	;RP0=1, select bank1
  6847  16D2  1303               	bcf	status, 6	;RP1=0, select bank1
  6848  16D3  01B5               	clrf	(_Disp1+1)^080h	;volatile
  6849  16D4  07B5               	addwf	(_Disp1+1)^080h	;volatile
  6850  16D5  1283               	bcf	status, 5	;RP0=0, select bank0
  6851  16D6  1303               	bcf	status, 6	;RP1=0, select bank0
  6852  16D7  086C               	movf	(_adcVal),w	;volatile
  6853  16D8  1683               	bsf	status, 5	;RP0=1, select bank1
  6854  16D9  1303               	bcf	status, 6	;RP1=0, select bank1
  6855  16DA  01B4               	clrf	(_Disp1)^080h	;volatile
  6856  16DB  07B4               	addwf	(_Disp1)^080h	;volatile
  6857                           
  6858                           	line	44
  6859                           	
  6860  16DC                     l3033:	
  6861  16DC  0008               	return
  6862                           	opt stack 0
  6863                           GLOBAL	__end_of_readAvgDistance
  6864  16DD                     	__end_of_readAvgDistance:
  6865 ;; =============== function _readAvgDistance ends ============
  6866                           
  6867                           	signat	_readAvgDistance,88
  6868                           	global	_init
  6869                           psect	text1071,local,class=CODE,delta=2
  6870                           global __ptext1071
  6871  11FF                     __ptext1071:
  6872                           
  6873 ;; *************** function _init *****************
  6874 ;; Defined at:
  6875 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;		None
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;		None               void
  6882 ;; Registers used:
  6883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6889 ;;      Params:         0       0       0       0       0
  6890 ;;      Locals:         0       0       0       0       0
  6891 ;;      Temps:          0       1       0       0       0
  6892 ;;      Totals:         0       1       0       0       0
  6893 ;;Total ram usage:        1 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:    5
  6896 ;; This function calls:
  6897 ;;		_ser_init
  6898 ;;		_init_adc
  6899 ;;		_lcd_init
  6900 ;;		_robo_init
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           psect	text1071
  6906                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  6907                           	line	137
  6908                           	global	__size_of_init
  6909  002F                     	__size_of_init	equ	__end_of_init-_init
  6910                           	
  6911  11FF                     _init:	
  6912                           	opt	stack 2
  6913                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6914                           	line	138
  6915                           	
  6916  11FF                     l11441:	
  6917                           ;Main.c: 138: buttonPressed = 0;
  6918  11FF  01FD               	clrf	(_buttonPressed)	;volatile
  6919                           	line	140
  6920                           	
  6921  1200                     l11443:	
  6922                           ;Main.c: 140: TRISB = 0b11111100;
  6923  1200  30FC               	movlw	(0FCh)
  6924  1201  1683               	bsf	status, 5	;RP0=1, select bank1
  6925  1202  1303               	bcf	status, 6	;RP1=0, select bank1
  6926  1203  0086               	movwf	(134)^080h	;volatile
  6927                           	line	141
  6928                           	
  6929  1204                     l11445:	
  6930                           ;Main.c: 141: TRISC &= 0b10010000;
  6931  1204  3090               	movlw	(090h)
  6932  1205  1283               	bcf	status, 5	;RP0=0, select bank0
  6933  1206  1303               	bcf	status, 6	;RP1=0, select bank0
  6934  1207  00A3               	movwf	(??_init+0)+0
  6935  1208  0823               	movf	(??_init+0)+0,w
  6936  1209  1683               	bsf	status, 5	;RP0=1, select bank1
  6937  120A  1303               	bcf	status, 6	;RP1=0, select bank1
  6938  120B  0587               	andwf	(135)^080h,f	;volatile
  6939                           	line	144
  6940                           	
  6941  120C                     l11447:	
  6942                           ;Main.c: 144: SSPSTAT = 0b01000000;
  6943  120C  3040               	movlw	(040h)
  6944  120D  0094               	movwf	(148)^080h	;volatile
  6945                           	line	145
  6946                           	
  6947  120E                     l11449:	
  6948                           ;Main.c: 145: SSPCON = 0b10100001;
  6949  120E  30A1               	movlw	(0A1h)
  6950  120F  1283               	bcf	status, 5	;RP0=0, select bank0
  6951  1210  1303               	bcf	status, 6	;RP1=0, select bank0
  6952  1211  0094               	movwf	(20)	;volatile
  6953                           	line	148
  6954                           	
  6955  1212                     l11451:	
  6956                           ;Main.c: 148: OPTION_REG = 0b00000100;
  6957  1212  3004               	movlw	(04h)
  6958  1213  1683               	bsf	status, 5	;RP0=1, select bank1
  6959  1214  1303               	bcf	status, 6	;RP1=0, select bank1
  6960  1215  0081               	movwf	(129)^080h	;volatile
  6961                           	line	151
  6962                           	
  6963  1216                     l11453:	
  6964                           ;Main.c: 151: ser_init();
  6965  1216  160A  118A  20A3   	fcall	_ser_init
              160A  118A         
  6966                           	line	152
  6967                           	
  6968  121B                     l11455:	
  6969                           ;Main.c: 152: init_adc();
  6970  121B  160A  158A  27EA   	fcall	_init_adc
              160A  118A         
  6971                           	line	153
  6972                           	
  6973  1220                     l11457:	
  6974                           ;Main.c: 153: lcd_init();
  6975  1220  160A  118A  20F8   	fcall	_lcd_init
              160A  118A         
  6976                           	line	154
  6977                           	
  6978  1225                     l11459:	
  6979                           ;Main.c: 154: robo_init();
  6980  1225  160A  118A  2040   	fcall	_robo_init
              160A  118A         
  6981                           	line	158
  6982                           	
  6983  122A                     l11461:	
  6984                           ;Main.c: 158: TMR0IE = 1;
  6985  122A  168B               	bsf	(93/8),(93)&7
  6986                           	line	160
  6987                           	
  6988  122B                     l11463:	
  6989                           ;Main.c: 160: PEIE=1;
  6990  122B  170B               	bsf	(94/8),(94)&7
  6991                           	line	162
  6992                           	
  6993  122C                     l11465:	
  6994                           ;Main.c: 162: (GIE = 1);
  6995  122C  178B               	bsf	(95/8),(95)&7
  6996                           	line	163
  6997                           	
  6998  122D                     l2247:	
  6999  122D  0008               	return
  7000                           	opt stack 0
  7001                           GLOBAL	__end_of_init
  7002  122E                     	__end_of_init:
  7003 ;; =============== function _init ends ============
  7004                           
  7005                           	signat	_init,88
  7006                           	global	_readDistance
  7007                           psect	text1072,local,class=CODE,delta=2
  7008                           global __ptext1072
  7009  1011                     __ptext1072:
  7010                           
  7011 ;; *************** function _readDistance *****************
  7012 ;; Defined at:
  7013 ;;		line 78 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  readVal         2   12[BANK0 ] unsigned int 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  2    8[BANK0 ] unsigned int 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7027 ;;      Params:         0       2       0       0       0
  7028 ;;      Locals:         0       2       0       0       0
  7029 ;;      Temps:          0       2       0       0       0
  7030 ;;      Totals:         0       6       0       0       0
  7031 ;;Total ram usage:        6 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    5
  7034 ;; This function calls:
  7035 ;;		_adc_read_channel
  7036 ;; This function is called by:
  7037 ;;		_readAvgDistance
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           psect	text1072
  7041                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  7042                           	line	78
  7043                           	global	__size_of_readDistance
  7044  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  7045                           	
  7046  1011                     _readDistance:	
  7047                           	opt	stack 0
  7048                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7049                           	line	81
  7050                           	
  7051  1011                     l11435:	
  7052                           ;infrared.c: 79: unsigned int readVal;
  7053                           ;infrared.c: 81: readVal = adc_read_channel(0);
  7054  1011  3000               	movlw	(0)
  7055  1012  160A  118A  2293   	fcall	_adc_read_channel
              160A  118A         
  7056  1017  1283               	bcf	status, 5	;RP0=0, select bank0
  7057  1018  1303               	bcf	status, 6	;RP1=0, select bank0
  7058  1019  00AA               	movwf	(??_readDistance+0)+0
  7059  101A  01AB               	clrf	(??_readDistance+0)+0+1
  7060  101B  082A               	movf	0+(??_readDistance+0)+0,w
  7061  101C  00AC               	movwf	(readDistance@readVal)
  7062  101D  082B               	movf	1+(??_readDistance+0)+0,w
  7063  101E  00AD               	movwf	(readDistance@readVal+1)
  7064                           	line	83
  7065                           	
  7066  101F                     l11437:	
  7067                           ;infrared.c: 83: return readVal;
  7068  101F  082D               	movf	(readDistance@readVal+1),w
  7069  1020  01A9               	clrf	(?_readDistance+1)
  7070  1021  07A9               	addwf	(?_readDistance+1)
  7071  1022  082C               	movf	(readDistance@readVal),w
  7072  1023  01A8               	clrf	(?_readDistance)
  7073  1024  07A8               	addwf	(?_readDistance)
  7074                           
  7075  1025  2826               	goto	l3036
  7076                           	
  7077  1026                     l11439:	
  7078                           	line	84
  7079                           	
  7080  1026                     l3036:	
  7081  1026  0008               	return
  7082                           	opt stack 0
  7083                           GLOBAL	__end_of_readDistance
  7084  1027                     	__end_of_readDistance:
  7085 ;; =============== function _readDistance ends ============
  7086                           
  7087                           	signat	_readDistance,90
  7088                           	global	_RobotBattRead
  7089                           psect	text1073,local,class=CODE,delta=2
  7090                           global __ptext1073
  7091  16DD                     __ptext1073:
  7092                           
  7093 ;; *************** function _RobotBattRead *****************
  7094 ;; Defined at:
  7095 ;;		line 445 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  temp1           2    4[BANK0 ] int 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7109 ;;      Params:         0       0       0       0       0
  7110 ;;      Locals:         0       2       0       0       0
  7111 ;;      Temps:          0       2       0       0       0
  7112 ;;      Totals:         0       4       0       0       0
  7113 ;;Total ram usage:        4 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    5
  7116 ;; This function calls:
  7117 ;;		_ser_putch
  7118 ;;		_ser_getch
  7119 ;; This function is called by:
  7120 ;;		_ChargeMode
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           psect	text1073
  7124                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7125                           	line	445
  7126                           	global	__size_of_RobotBattRead
  7127  008B                     	__size_of_RobotBattRead	equ	__end_of_RobotBattRead-_RobotBattRead
  7128                           	
  7129  16DD                     _RobotBattRead:	
  7130                           	opt	stack 1
  7131                           ; Regs used in _RobotBattRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7132                           	line	446
  7133                           	
  7134  16DD                     l11407:	
  7135                           ;robot.c: 446: int temp1 = 0;
  7136  16DD  1283               	bcf	status, 5	;RP0=0, select bank0
  7137  16DE  1303               	bcf	status, 6	;RP1=0, select bank0
  7138  16DF  01A4               	clrf	(RobotBattRead@temp1)
  7139  16E0  01A5               	clrf	(RobotBattRead@temp1+1)
  7140                           	line	447
  7141                           	
  7142  16E1                     l11409:	
  7143                           ;robot.c: 447: ser_putch(142);
  7144  16E1  308E               	movlw	(08Eh)
  7145  16E2  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  7146                           	line	448
  7147                           	
  7148  16E7                     l11411:	
  7149                           ;robot.c: 448: ser_putch(25);
  7150  16E7  3019               	movlw	(019h)
  7151  16E8  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  7152                           	line	449
  7153                           	
  7154  16ED                     l11413:	
  7155                           ;robot.c: 449: _delay((unsigned long)((5)*(20000000/4000.0)));
  7156                           	opt asmopt_off
  7157  16ED  3021               movlw	33
  7158  16EE  1283               	bcf	status, 5	;RP0=0, select bank0
  7159  16EF  1303               	bcf	status, 6	;RP1=0, select bank0
  7160  16F0  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  7161  16F1  3076               	movlw	118
  7162  16F2  00A2               movwf	((??_RobotBattRead+0)+0),f
  7163  16F3                     u5437:
  7164  16F3  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  7165  16F4  2EF3               	goto	u5437
  7166  16F5  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  7167  16F6  2EF3               	goto	u5437
  7168  16F7  0064               	clrwdt
  7169                           opt asmopt_on
  7170                           
  7171                           	line	450
  7172                           	
  7173  16F8                     l11415:	
  7174                           ;robot.c: 450: DistHighByte = ser_getch();
  7175  16F8  160A  118A  217A   	fcall	_ser_getch
              160A  118A         
  7176  16FD  1283               	bcf	status, 5	;RP0=0, select bank0
  7177  16FE  1303               	bcf	status, 6	;RP1=0, select bank0
  7178  16FF  00A2               	movwf	(??_RobotBattRead+0)+0
  7179  1700  0822               	movf	(??_RobotBattRead+0)+0,w
  7180  1701  1683               	bsf	status, 5	;RP0=1, select bank1
  7181  1702  1303               	bcf	status, 6	;RP1=0, select bank1
  7182  1703  00D0               	movwf	(_DistHighByte)^080h	;volatile
  7183                           	line	451
  7184                           	
  7185  1704                     l11417:	
  7186                           ;robot.c: 451: DistLowByte = ser_getch();
  7187  1704  160A  118A  217A   	fcall	_ser_getch
              160A  118A         
  7188  1709  1283               	bcf	status, 5	;RP0=0, select bank0
  7189  170A  1303               	bcf	status, 6	;RP1=0, select bank0
  7190  170B  00A2               	movwf	(??_RobotBattRead+0)+0
  7191  170C  0822               	movf	(??_RobotBattRead+0)+0,w
  7192  170D  1683               	bsf	status, 5	;RP0=1, select bank1
  7193  170E  1303               	bcf	status, 6	;RP1=0, select bank1
  7194  170F  00D1               	movwf	(_DistLowByte)^080h	;volatile
  7195                           	line	452
  7196                           	
  7197  1710                     l11419:	
  7198                           ;robot.c: 452: ser_putch(142);
  7199  1710  308E               	movlw	(08Eh)
  7200  1711  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  7201                           	line	453
  7202                           	
  7203  1716                     l11421:	
  7204                           ;robot.c: 453: ser_putch(21);
  7205  1716  3015               	movlw	(015h)
  7206  1717  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  7207                           	line	454
  7208                           	
  7209  171C                     l11423:	
  7210                           ;robot.c: 454: _delay((unsigned long)((5)*(20000000/4000.0)));
  7211                           	opt asmopt_off
  7212  171C  3021               movlw	33
  7213  171D  1283               	bcf	status, 5	;RP0=0, select bank0
  7214  171E  1303               	bcf	status, 6	;RP1=0, select bank0
  7215  171F  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  7216  1720  3076               	movlw	118
  7217  1721  00A2               movwf	((??_RobotBattRead+0)+0),f
  7218  1722                     u5447:
  7219  1722  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  7220  1723  2F22               	goto	u5447
  7221  1724  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  7222  1725  2F22               	goto	u5447
  7223  1726  0064               	clrwdt
  7224                           opt asmopt_on
  7225                           
  7226                           	line	455
  7227                           	
  7228  1727                     l11425:	
  7229                           ;robot.c: 455: BattState = ser_getch();
  7230  1727  160A  118A  217A   	fcall	_ser_getch
              160A  118A         
  7231  172C  1283               	bcf	status, 5	;RP0=0, select bank0
  7232  172D  1303               	bcf	status, 6	;RP1=0, select bank0
  7233  172E  00A2               	movwf	(??_RobotBattRead+0)+0
  7234  172F  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7235  1730  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7236  1731  1683               	bsf	status, 5	;RP0=1, select bank1
  7237  1732  1303               	bcf	status, 6	;RP1=0, select bank1
  7238  1733  00B2               	movwf	(_BattState)^080h
  7239  1734  1283               	bcf	status, 5	;RP0=0, select bank0
  7240  1735  1303               	bcf	status, 6	;RP1=0, select bank0
  7241  1736  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7242  1737  1683               	bsf	status, 5	;RP0=1, select bank1
  7243  1738  1303               	bcf	status, 6	;RP1=0, select bank1
  7244  1739  00B3               	movwf	(_BattState+1)^080h
  7245                           	line	458
  7246                           	
  7247  173A                     l11427:	
  7248                           ;robot.c: 458: temp1 = DistHighByte;
  7249  173A  0850               	movf	(_DistHighByte)^080h,w	;volatile
  7250  173B  1283               	bcf	status, 5	;RP0=0, select bank0
  7251  173C  1303               	bcf	status, 6	;RP1=0, select bank0
  7252  173D  00A2               	movwf	(??_RobotBattRead+0)+0
  7253  173E  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7254  173F  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7255  1740  00A4               	movwf	(RobotBattRead@temp1)
  7256  1741  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7257  1742  00A5               	movwf	(RobotBattRead@temp1+1)
  7258                           	line	459
  7259                           	
  7260  1743                     l11429:	
  7261                           ;robot.c: 459: temp1 = temp1 << 8;
  7262  1743  0825               	movf	(RobotBattRead@temp1+1),w
  7263  1744  00A3               	movwf	(??_RobotBattRead+0)+0+1
  7264  1745  0824               	movf	(RobotBattRead@temp1),w
  7265  1746  00A2               	movwf	(??_RobotBattRead+0)+0
  7266  1747  0822               	movf	(??_RobotBattRead+0)+0,w
  7267  1748  00A3               	movwf	(??_RobotBattRead+0)+1
  7268  1749  01A2               	clrf	(??_RobotBattRead+0)+0
  7269  174A  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7270  174B  00A4               	movwf	(RobotBattRead@temp1)
  7271  174C  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7272  174D  00A5               	movwf	(RobotBattRead@temp1+1)
  7273                           	line	460
  7274                           	
  7275  174E                     l11431:	
  7276                           ;robot.c: 460: temp1 += DistLowByte;
  7277  174E  1683               	bsf	status, 5	;RP0=1, select bank1
  7278  174F  1303               	bcf	status, 6	;RP1=0, select bank1
  7279  1750  0851               	movf	(_DistLowByte)^080h,w	;volatile
  7280  1751  1283               	bcf	status, 5	;RP0=0, select bank0
  7281  1752  1303               	bcf	status, 6	;RP1=0, select bank0
  7282  1753  00A2               	movwf	(??_RobotBattRead+0)+0
  7283  1754  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7284  1755  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7285  1756  07A4               	addwf	(RobotBattRead@temp1),f
  7286  1757  1803               	skipnc
  7287  1758  0AA5               	incf	(RobotBattRead@temp1+1),f
  7288  1759  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7289  175A  07A5               	addwf	(RobotBattRead@temp1+1),f
  7290                           	line	461
  7291                           	
  7292  175B                     l11433:	
  7293                           ;robot.c: 461: BattCharge = temp1;
  7294  175B  0825               	movf	(RobotBattRead@temp1+1),w
  7295  175C  1683               	bsf	status, 5	;RP0=1, select bank1
  7296  175D  1303               	bcf	status, 6	;RP1=0, select bank1
  7297  175E  01B1               	clrf	(_BattCharge+1)^080h
  7298  175F  07B1               	addwf	(_BattCharge+1)^080h
  7299  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  7300  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  7301  1762  0824               	movf	(RobotBattRead@temp1),w
  7302  1763  1683               	bsf	status, 5	;RP0=1, select bank1
  7303  1764  1303               	bcf	status, 6	;RP1=0, select bank1
  7304  1765  01B0               	clrf	(_BattCharge)^080h
  7305  1766  07B0               	addwf	(_BattCharge)^080h
  7306                           
  7307                           	line	462
  7308                           	
  7309  1767                     l6182:	
  7310  1767  0008               	return
  7311                           	opt stack 0
  7312                           GLOBAL	__end_of_RobotBattRead
  7313  1768                     	__end_of_RobotBattRead:
  7314 ;; =============== function _RobotBattRead ends ============
  7315                           
  7316                           	signat	_RobotBattRead,88
  7317                           	global	_robot_read
  7318                           psect	text1074,local,class=CODE,delta=2
  7319                           global __ptext1074
  7320  0B2E                     __ptext1074:
  7321                           
  7322 ;; *************** function _robot_read *****************
  7323 ;; Defined at:
  7324 ;;		line 52 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  readType        1    wreg     unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  readType        1    3[BANK0 ] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;		None               void
  7331 ;; Registers used:
  7332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         0       0       0       0       0
  7339 ;;      Locals:         0       1       0       0       0
  7340 ;;      Temps:          0       1       0       0       0
  7341 ;;      Totals:         0       2       0       0       0
  7342 ;;Total ram usage:        2 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    5
  7345 ;; This function calls:
  7346 ;;		_ser_putch
  7347 ;;		_ser_getch
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;;		_robotFollow
  7351 ;;		_robot_turnRight
  7352 ;;		_robotMoveSpeed
  7353 ;;		_robotTurnSpeed
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           psect	text1074
  7357                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7358                           	line	52
  7359                           	global	__size_of_robot_read
  7360  010B                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  7361                           	
  7362  0B2E                     _robot_read:	
  7363                           	opt	stack 1
  7364                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7365                           ;robot_read@readType stored from wreg
  7366  0B2E  1283               	bcf	status, 5	;RP0=0, select bank0
  7367  0B2F  1303               	bcf	status, 6	;RP1=0, select bank0
  7368  0B30  00A3               	movwf	(robot_read@readType)
  7369                           	line	53
  7370                           	
  7371  0B31                     l11391:	
  7372                           ;robot.c: 53: ser_putch(142);
  7373  0B31  308E               	movlw	(08Eh)
  7374  0B32  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7375                           	line	54
  7376                           ;robot.c: 54: ser_putch(10);
  7377  0B37  300A               	movlw	(0Ah)
  7378  0B38  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7379                           	line	56
  7380                           ;robot.c: 56: CliffSensors = ser_getch();
  7381  0B3D  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7382  0B42  1283               	bcf	status, 5	;RP0=0, select bank0
  7383  0B43  1303               	bcf	status, 6	;RP1=0, select bank0
  7384  0B44  00A2               	movwf	(??_robot_read+0)+0
  7385  0B45  0822               	movf	(??_robot_read+0)+0,w
  7386  0B46  1683               	bsf	status, 5	;RP0=1, select bank1
  7387  0B47  1303               	bcf	status, 6	;RP1=0, select bank1
  7388  0B48  00CF               	movwf	(_CliffSensors)^080h	;volatile
  7389                           	line	58
  7390                           ;robot.c: 58: ser_putch(142);
  7391  0B49  308E               	movlw	(08Eh)
  7392  0B4A  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7393                           	line	59
  7394                           ;robot.c: 59: ser_putch(11);
  7395  0B4F  300B               	movlw	(0Bh)
  7396  0B50  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7397                           	line	61
  7398                           ;robot.c: 61: CliffSensors += ser_getch();
  7399  0B55  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7400  0B5A  1283               	bcf	status, 5	;RP0=0, select bank0
  7401  0B5B  1303               	bcf	status, 6	;RP1=0, select bank0
  7402  0B5C  00A2               	movwf	(??_robot_read+0)+0
  7403  0B5D  0822               	movf	(??_robot_read+0)+0,w
  7404  0B5E  1683               	bsf	status, 5	;RP0=1, select bank1
  7405  0B5F  1303               	bcf	status, 6	;RP1=0, select bank1
  7406  0B60  07CF               	addwf	(_CliffSensors)^080h,f	;volatile
  7407                           	line	65
  7408                           ;robot.c: 65: ser_putch(142);
  7409  0B61  308E               	movlw	(08Eh)
  7410  0B62  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7411                           	line	66
  7412                           ;robot.c: 66: ser_putch(7);
  7413  0B67  3007               	movlw	(07h)
  7414  0B68  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7415                           	line	68
  7416                           ;robot.c: 68: BumpSensors = ser_getch();
  7417  0B6D  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7418  0B72  1283               	bcf	status, 5	;RP0=0, select bank0
  7419  0B73  1303               	bcf	status, 6	;RP1=0, select bank0
  7420  0B74  00A2               	movwf	(??_robot_read+0)+0
  7421  0B75  0822               	movf	(??_robot_read+0)+0,w
  7422  0B76  00EE               	movwf	(_BumpSensors)	;volatile
  7423                           	line	70
  7424                           ;robot.c: 70: ser_putch(142);
  7425  0B77  308E               	movlw	(08Eh)
  7426  0B78  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7427                           	line	71
  7428                           ;robot.c: 71: ser_putch(13);
  7429  0B7D  300D               	movlw	(0Dh)
  7430  0B7E  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7431                           	line	73
  7432                           ;robot.c: 73: VwallSensor = ser_getch();
  7433  0B83  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7434  0B88  1283               	bcf	status, 5	;RP0=0, select bank0
  7435  0B89  1303               	bcf	status, 6	;RP1=0, select bank0
  7436  0B8A  00A2               	movwf	(??_robot_read+0)+0
  7437  0B8B  0822               	movf	(??_robot_read+0)+0,w
  7438  0B8C  00EF               	movwf	(_VwallSensor)	;volatile
  7439                           	line	77
  7440                           	
  7441  0B8D                     l11393:	
  7442                           ;robot.c: 77: if (readType == 0)
  7443  0B8D  08A3               	movf	(robot_read@readType),f
  7444  0B8E  1D03               	skipz
  7445  0B8F  2B91               	goto	u4931
  7446  0B90  2B92               	goto	u4930
  7447  0B91                     u4931:
  7448  0B91  2BB7               	goto	l11397
  7449  0B92                     u4930:
  7450                           	line	79
  7451                           	
  7452  0B92                     l11395:	
  7453                           ;robot.c: 78: {
  7454                           ;robot.c: 79: ser_putch(142);
  7455  0B92  308E               	movlw	(08Eh)
  7456  0B93  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7457                           	line	80
  7458                           ;robot.c: 80: ser_putch(19);
  7459  0B98  3013               	movlw	(013h)
  7460  0B99  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7461                           	line	82
  7462                           ;robot.c: 82: DistHighByte = ser_getch();
  7463  0B9E  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7464  0BA3  1283               	bcf	status, 5	;RP0=0, select bank0
  7465  0BA4  1303               	bcf	status, 6	;RP1=0, select bank0
  7466  0BA5  00A2               	movwf	(??_robot_read+0)+0
  7467  0BA6  0822               	movf	(??_robot_read+0)+0,w
  7468  0BA7  1683               	bsf	status, 5	;RP0=1, select bank1
  7469  0BA8  1303               	bcf	status, 6	;RP1=0, select bank1
  7470  0BA9  00D0               	movwf	(_DistHighByte)^080h	;volatile
  7471                           	line	83
  7472                           ;robot.c: 83: DistLowByte = ser_getch();
  7473  0BAA  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7474  0BAF  1283               	bcf	status, 5	;RP0=0, select bank0
  7475  0BB0  1303               	bcf	status, 6	;RP1=0, select bank0
  7476  0BB1  00A2               	movwf	(??_robot_read+0)+0
  7477  0BB2  0822               	movf	(??_robot_read+0)+0,w
  7478  0BB3  1683               	bsf	status, 5	;RP0=1, select bank1
  7479  0BB4  1303               	bcf	status, 6	;RP1=0, select bank1
  7480  0BB5  00D1               	movwf	(_DistLowByte)^080h	;volatile
  7481                           	line	84
  7482                           ;robot.c: 84: }
  7483  0BB6  2C38               	goto	l6102
  7484                           	line	85
  7485                           	
  7486  0BB7                     l6095:	
  7487                           	
  7488  0BB7                     l11397:	
  7489                           ;robot.c: 85: else if (readType == 1)
  7490  0BB7  1283               	bcf	status, 5	;RP0=0, select bank0
  7491  0BB8  0823               	movf	(robot_read@readType),w
  7492  0BB9  3A01               	xorlw	01h
  7493  0BBA  1D03               	skipz
  7494  0BBB  2BBD               	goto	u4941
  7495  0BBC  2BBE               	goto	u4940
  7496  0BBD                     u4941:
  7497  0BBD  2BE3               	goto	l11401
  7498  0BBE                     u4940:
  7499                           	line	87
  7500                           	
  7501  0BBE                     l11399:	
  7502                           ;robot.c: 86: {
  7503                           ;robot.c: 87: ser_putch(142);
  7504  0BBE  308E               	movlw	(08Eh)
  7505  0BBF  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7506                           	line	88
  7507                           ;robot.c: 88: ser_putch(20);
  7508  0BC4  3014               	movlw	(014h)
  7509  0BC5  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7510                           	line	90
  7511                           ;robot.c: 90: AngleHighByte = ser_getch();
  7512  0BCA  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7513  0BCF  1283               	bcf	status, 5	;RP0=0, select bank0
  7514  0BD0  1303               	bcf	status, 6	;RP1=0, select bank0
  7515  0BD1  00A2               	movwf	(??_robot_read+0)+0
  7516  0BD2  0822               	movf	(??_robot_read+0)+0,w
  7517  0BD3  1683               	bsf	status, 5	;RP0=1, select bank1
  7518  0BD4  1303               	bcf	status, 6	;RP1=0, select bank1
  7519  0BD5  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7520                           	line	91
  7521                           ;robot.c: 91: AngleLowByte = ser_getch();
  7522  0BD6  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7523  0BDB  1283               	bcf	status, 5	;RP0=0, select bank0
  7524  0BDC  1303               	bcf	status, 6	;RP1=0, select bank0
  7525  0BDD  00A2               	movwf	(??_robot_read+0)+0
  7526  0BDE  0822               	movf	(??_robot_read+0)+0,w
  7527  0BDF  1683               	bsf	status, 5	;RP0=1, select bank1
  7528  0BE0  1303               	bcf	status, 6	;RP1=0, select bank1
  7529  0BE1  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7530                           	line	92
  7531                           ;robot.c: 92: }
  7532  0BE2  2C38               	goto	l6102
  7533                           	line	93
  7534                           	
  7535  0BE3                     l6097:	
  7536                           	
  7537  0BE3                     l11401:	
  7538                           ;robot.c: 93: else if (readType == 2)
  7539  0BE3  1283               	bcf	status, 5	;RP0=0, select bank0
  7540  0BE4  0823               	movf	(robot_read@readType),w
  7541  0BE5  3A02               	xorlw	02h
  7542  0BE6  1D03               	skipz
  7543  0BE7  2BE9               	goto	u4951
  7544  0BE8  2BEA               	goto	u4950
  7545  0BE9                     u4951:
  7546  0BE9  2C38               	goto	l6102
  7547  0BEA                     u4950:
  7548                           	line	96
  7549                           	
  7550  0BEA                     l11403:	
  7551                           ;robot.c: 94: {
  7552                           ;robot.c: 96: ser_putch(142);
  7553  0BEA  308E               	movlw	(08Eh)
  7554  0BEB  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7555                           	line	97
  7556                           ;robot.c: 97: ser_putch(19);
  7557  0BF0  3013               	movlw	(013h)
  7558  0BF1  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7559                           	line	99
  7560                           ;robot.c: 99: DistHighByte = ser_getch();
  7561  0BF6  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7562  0BFB  1283               	bcf	status, 5	;RP0=0, select bank0
  7563  0BFC  1303               	bcf	status, 6	;RP1=0, select bank0
  7564  0BFD  00A2               	movwf	(??_robot_read+0)+0
  7565  0BFE  0822               	movf	(??_robot_read+0)+0,w
  7566  0BFF  1683               	bsf	status, 5	;RP0=1, select bank1
  7567  0C00  1303               	bcf	status, 6	;RP1=0, select bank1
  7568  0C01  00D0               	movwf	(_DistHighByte)^080h	;volatile
  7569                           	line	100
  7570                           ;robot.c: 100: DistLowByte = ser_getch();
  7571  0C02  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7572  0C07  1283               	bcf	status, 5	;RP0=0, select bank0
  7573  0C08  1303               	bcf	status, 6	;RP1=0, select bank0
  7574  0C09  00A2               	movwf	(??_robot_read+0)+0
  7575  0C0A  0822               	movf	(??_robot_read+0)+0,w
  7576  0C0B  1683               	bsf	status, 5	;RP0=1, select bank1
  7577  0C0C  1303               	bcf	status, 6	;RP1=0, select bank1
  7578  0C0D  00D1               	movwf	(_DistLowByte)^080h	;volatile
  7579                           	line	101
  7580                           ;robot.c: 101: ser_putch(142);
  7581  0C0E  308E               	movlw	(08Eh)
  7582  0C0F  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7583                           	line	102
  7584                           ;robot.c: 102: ser_putch(20);
  7585  0C14  3014               	movlw	(014h)
  7586  0C15  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  7587                           	line	104
  7588                           ;robot.c: 104: AngleHighByte = ser_getch();
  7589  0C1A  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7590  0C1F  1283               	bcf	status, 5	;RP0=0, select bank0
  7591  0C20  1303               	bcf	status, 6	;RP1=0, select bank0
  7592  0C21  00A2               	movwf	(??_robot_read+0)+0
  7593  0C22  0822               	movf	(??_robot_read+0)+0,w
  7594  0C23  1683               	bsf	status, 5	;RP0=1, select bank1
  7595  0C24  1303               	bcf	status, 6	;RP1=0, select bank1
  7596  0C25  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7597                           	line	105
  7598                           ;robot.c: 105: AngleLowByte = ser_getch();
  7599  0C26  160A  118A  217A   	fcall	_ser_getch
              120A  158A         
  7600  0C2B  1283               	bcf	status, 5	;RP0=0, select bank0
  7601  0C2C  1303               	bcf	status, 6	;RP1=0, select bank0
  7602  0C2D  00A2               	movwf	(??_robot_read+0)+0
  7603  0C2E  0822               	movf	(??_robot_read+0)+0,w
  7604  0C2F  1683               	bsf	status, 5	;RP0=1, select bank1
  7605  0C30  1303               	bcf	status, 6	;RP1=0, select bank1
  7606  0C31  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7607                           	line	106
  7608                           ;robot.c: 106: }
  7609  0C32  2C38               	goto	l6102
  7610                           	line	107
  7611                           	
  7612  0C33                     l6099:	
  7613  0C33  2C38               	goto	l6102
  7614                           	
  7615  0C34                     l11405:	
  7616  0C34  2C38               	goto	l6102
  7617                           	line	110
  7618                           ;robot.c: 108: {
  7619                           	
  7620  0C35                     l6101:	
  7621  0C35  2C38               	goto	l6102
  7622                           	line	111
  7623                           	
  7624  0C36                     l6100:	
  7625  0C36  2C38               	goto	l6102
  7626                           	
  7627  0C37                     l6098:	
  7628  0C37  2C38               	goto	l6102
  7629                           	
  7630  0C38                     l6096:	
  7631                           	
  7632  0C38                     l6102:	
  7633  0C38  0008               	return
  7634                           	opt stack 0
  7635                           GLOBAL	__end_of_robot_read
  7636  0C39                     	__end_of_robot_read:
  7637 ;; =============== function _robot_read ends ============
  7638                           
  7639                           	signat	_robot_read,4216
  7640                           	global	_lcd_init
  7641                           psect	text1075,local,class=CODE,delta=2
  7642                           global __ptext1075
  7643  10F8                     __ptext1075:
  7644                           
  7645 ;; *************** function _lcd_init *****************
  7646 ;; Defined at:
  7647 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;		None
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;		None
  7652 ;; Return value:  Size  Location     Type
  7653 ;;		None               void
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0, pclath, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7661 ;;      Params:         0       0       0       0       0
  7662 ;;      Locals:         0       0       0       0       0
  7663 ;;      Temps:          0       0       0       0       0
  7664 ;;      Totals:         0       0       0       0       0
  7665 ;;Total ram usage:        0 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    4
  7668 ;; This function calls:
  7669 ;;		_lcd_write_control
  7670 ;; This function is called by:
  7671 ;;		_init
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           psect	text1075
  7675                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7676                           	line	101
  7677                           	global	__size_of_lcd_init
  7678  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7679                           	
  7680  10F8                     _lcd_init:	
  7681                           	opt	stack 2
  7682                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7683                           	line	105
  7684                           	
  7685  10F8                     l11371:	
  7686                           ;lcd.c: 105: ADCON1 = 0b00000010;
  7687  10F8  3002               	movlw	(02h)
  7688  10F9  1683               	bsf	status, 5	;RP0=1, select bank1
  7689  10FA  1303               	bcf	status, 6	;RP1=0, select bank1
  7690  10FB  009F               	movwf	(159)^080h	;volatile
  7691                           	line	108
  7692                           	
  7693  10FC                     l11373:	
  7694                           ;lcd.c: 108: PORTD = 0;
  7695  10FC  1283               	bcf	status, 5	;RP0=0, select bank0
  7696  10FD  1303               	bcf	status, 6	;RP1=0, select bank0
  7697  10FE  0188               	clrf	(8)	;volatile
  7698                           	line	109
  7699                           	
  7700  10FF                     l11375:	
  7701                           ;lcd.c: 109: PORTE = 0;
  7702  10FF  0189               	clrf	(9)	;volatile
  7703                           	line	111
  7704                           	
  7705  1100                     l11377:	
  7706                           ;lcd.c: 111: TRISD = 0b00000000;
  7707  1100  1683               	bsf	status, 5	;RP0=1, select bank1
  7708  1101  1303               	bcf	status, 6	;RP1=0, select bank1
  7709  1102  0188               	clrf	(136)^080h	;volatile
  7710                           	line	112
  7711                           	
  7712  1103                     l11379:	
  7713                           ;lcd.c: 112: TRISE = 0b00000000;
  7714  1103  0189               	clrf	(137)^080h	;volatile
  7715                           	line	115
  7716                           	
  7717  1104                     l11381:	
  7718                           ;lcd.c: 115: lcd_write_control(0b00000001);
  7719  1104  3001               	movlw	(01h)
  7720  1105  160A  158A  27D6   	fcall	_lcd_write_control
              160A  118A         
  7721                           	line	116
  7722                           	
  7723  110A                     l11383:	
  7724                           ;lcd.c: 116: lcd_write_control(0b00111000);
  7725  110A  3038               	movlw	(038h)
  7726  110B  160A  158A  27D6   	fcall	_lcd_write_control
              160A  118A         
  7727                           	line	117
  7728                           	
  7729  1110                     l11385:	
  7730                           ;lcd.c: 117: lcd_write_control(0b00001100);
  7731  1110  300C               	movlw	(0Ch)
  7732  1111  160A  158A  27D6   	fcall	_lcd_write_control
              160A  118A         
  7733                           	line	118
  7734                           	
  7735  1116                     l11387:	
  7736                           ;lcd.c: 118: lcd_write_control(0b00000110);
  7737  1116  3006               	movlw	(06h)
  7738  1117  160A  158A  27D6   	fcall	_lcd_write_control
              160A  118A         
  7739                           	line	119
  7740                           	
  7741  111C                     l11389:	
  7742                           ;lcd.c: 119: lcd_write_control(0b00000010);
  7743  111C  3002               	movlw	(02h)
  7744  111D  160A  158A  27D6   	fcall	_lcd_write_control
              160A  118A         
  7745                           	line	121
  7746                           	
  7747  1122                     l1429:	
  7748  1122  0008               	return
  7749                           	opt stack 0
  7750                           GLOBAL	__end_of_lcd_init
  7751  1123                     	__end_of_lcd_init:
  7752 ;; =============== function _lcd_init ends ============
  7753                           
  7754                           	signat	_lcd_init,88
  7755                           	global	_lcd_write_string
  7756                           psect	text1076,local,class=CODE,delta=2
  7757                           global __ptext1076
  7758  11A6                     __ptext1076:
  7759                           
  7760 ;; *************** function _lcd_write_string *****************
  7761 ;; Defined at:
  7762 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  s               2    7[BANK0 ] PTR unsigned char 
  7765 ;;		 -> STR_26(9), STR_25(3), STR_24(3), STR_23(3), 
  7766 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_18(16), 
  7767 ;;		 -> STR_17(4), STR_16(8), STR_15(4), STR_14(16), 
  7768 ;;		 -> UpdateDisplay@LCDOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  7769 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  7770 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  7771 ;;		 -> STR_1(9), 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;		None               void
  7776 ;; Registers used:
  7777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7783 ;;      Params:         0       2       0       0       0
  7784 ;;      Locals:         0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0
  7786 ;;      Totals:         0       2       0       0       0
  7787 ;;Total ram usage:        2 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    4
  7790 ;; This function calls:
  7791 ;;		_lcd_write_data
  7792 ;; This function is called by:
  7793 ;;		_UpdateDisplay
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           psect	text1076
  7797                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7798                           	line	48
  7799                           	global	__size_of_lcd_write_string
  7800  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  7801                           	
  7802  11A6                     _lcd_write_string:	
  7803                           	opt	stack 1
  7804                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7805                           	line	50
  7806                           	
  7807  11A6                     l11363:	
  7808                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  7809  11A6  29C0               	goto	l11369
  7810                           	
  7811  11A7                     l1409:	
  7812                           	
  7813  11A7                     l11365:	
  7814  11A7  1283               	bcf	status, 5	;RP0=0, select bank0
  7815  11A8  1303               	bcf	status, 6	;RP1=0, select bank0
  7816  11A9  0828               	movf	(lcd_write_string@s+1),w
  7817  11AA  00FF               	movwf	btemp+1
  7818  11AB  0827               	movf	(lcd_write_string@s),w
  7819  11AC  0084               	movwf	fsr0
  7820  11AD  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7821  11B2  160A  158A  279C   	fcall	_lcd_write_data
              160A  118A         
  7822                           	
  7823  11B7                     l11367:	
  7824  11B7  3001               	movlw	low(01h)
  7825  11B8  1283               	bcf	status, 5	;RP0=0, select bank0
  7826  11B9  1303               	bcf	status, 6	;RP1=0, select bank0
  7827  11BA  07A7               	addwf	(lcd_write_string@s),f
  7828  11BB  1803               	skipnc
  7829  11BC  0AA8               	incf	(lcd_write_string@s+1),f
  7830  11BD  3000               	movlw	high(01h)
  7831  11BE  07A8               	addwf	(lcd_write_string@s+1),f
  7832  11BF  29C0               	goto	l11369
  7833                           	
  7834  11C0                     l1408:	
  7835                           	
  7836  11C0                     l11369:	
  7837  11C0  1283               	bcf	status, 5	;RP0=0, select bank0
  7838  11C1  1303               	bcf	status, 6	;RP1=0, select bank0
  7839  11C2  0828               	movf	(lcd_write_string@s+1),w
  7840  11C3  00FF               	movwf	btemp+1
  7841  11C4  0827               	movf	(lcd_write_string@s),w
  7842  11C5  0084               	movwf	fsr0
  7843  11C6  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7844  11CB  3800               	iorlw	0
  7845  11CC  1D03               	skipz
  7846  11CD  29CF               	goto	u4921
  7847  11CE  29D0               	goto	u4920
  7848  11CF                     u4921:
  7849  11CF  29A7               	goto	l11365
  7850  11D0                     u4920:
  7851  11D0  29D1               	goto	l1411
  7852                           	
  7853  11D1                     l1410:	
  7854                           	line	51
  7855                           	
  7856  11D1                     l1411:	
  7857  11D1  0008               	return
  7858                           	opt stack 0
  7859                           GLOBAL	__end_of_lcd_write_string
  7860  11D2                     	__end_of_lcd_write_string:
  7861 ;; =============== function _lcd_write_string ends ============
  7862                           
  7863                           	signat	_lcd_write_string,4216
  7864                           	global	_lcd_set_cursor
  7865                           psect	text1077,local,class=CODE,delta=2
  7866                           global __ptext1077
  7867  1F91                     __ptext1077:
  7868                           
  7869 ;; *************** function _lcd_set_cursor *****************
  7870 ;; Defined at:
  7871 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  address         1    wreg     unsigned char 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  address         1    3[BANK0 ] unsigned char 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;		None               void
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, pclath, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7885 ;;      Params:         0       0       0       0       0
  7886 ;;      Locals:         0       1       0       0       0
  7887 ;;      Temps:          0       0       0       0       0
  7888 ;;      Totals:         0       1       0       0       0
  7889 ;;Total ram usage:        1 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    4
  7892 ;; This function calls:
  7893 ;;		_lcd_write_control
  7894 ;; This function is called by:
  7895 ;;		_UpdateDisplay
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           psect	text1077
  7899                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7900                           	line	42
  7901                           	global	__size_of_lcd_set_cursor
  7902  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  7903                           	
  7904  1F91                     _lcd_set_cursor:	
  7905                           	opt	stack 1
  7906                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  7907                           ;lcd_set_cursor@address stored from wreg
  7908  1F91  1283               	bcf	status, 5	;RP0=0, select bank0
  7909  1F92  1303               	bcf	status, 6	;RP1=0, select bank0
  7910  1F93  00A3               	movwf	(lcd_set_cursor@address)
  7911                           	line	43
  7912                           	
  7913  1F94                     l11359:	
  7914                           ;lcd.c: 43: address |= 0b10000000;
  7915  1F94  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  7916                           	line	44
  7917                           	
  7918  1F95                     l11361:	
  7919                           ;lcd.c: 44: lcd_write_control(address);
  7920  1F95  0823               	movf	(lcd_set_cursor@address),w
  7921  1F96  160A  158A  27D6   	fcall	_lcd_write_control
              160A  158A         
  7922                           	line	45
  7923                           	
  7924  1F9B                     l1405:	
  7925  1F9B  0008               	return
  7926                           	opt stack 0
  7927                           GLOBAL	__end_of_lcd_set_cursor
  7928  1F9C                     	__end_of_lcd_set_cursor:
  7929 ;; =============== function _lcd_set_cursor ends ============
  7930                           
  7931                           	signat	_lcd_set_cursor,4216
  7932                           	global	_abs
  7933                           psect	text1078,local,class=CODE,delta=2
  7934                           global __ptext1078
  7935  125E                     __ptext1078:
  7936                           
  7937 ;; *************** function _abs *****************
  7938 ;; Defined at:
  7939 ;;		line 467 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  v               2    6[BANK0 ] int 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  2    6[BANK0 ] int 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7953 ;;      Params:         0       2       0       0       0
  7954 ;;      Locals:         0       0       0       0       0
  7955 ;;      Temps:          0       2       0       0       0
  7956 ;;      Totals:         0       4       0       0       0
  7957 ;;Total ram usage:        4 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    4
  7960 ;; This function calls:
  7961 ;;		___wmul
  7962 ;; This function is called by:
  7963 ;;		_robot_turnRight
  7964 ;;		_robotMoveSpeed
  7965 ;;		_robotTurnSpeed
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           psect	text1078
  7969                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7970                           	line	467
  7971                           	global	__size_of_abs
  7972  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  7973                           	
  7974  125E                     _abs:	
  7975                           	opt	stack 2
  7976                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7977                           	line	468
  7978                           	
  7979  125E                     l11355:	
  7980                           ;robot.c: 468: return (v * ((v > 0) - (v < 0)));
  7981  125E  3000               	movlw	0
  7982  125F  1283               	bcf	status, 5	;RP0=0, select bank0
  7983  1260  1303               	bcf	status, 6	;RP1=0, select bank0
  7984  1261  1BA7               	btfsc	(abs@v+1),7
  7985  1262  3001               	movlw	1
  7986  1263  00A8               	movwf	(??_abs+0)+0
  7987  1264  01A9               	clrf	(??_abs+0)+0+1
  7988  1265  09A8               	comf	(??_abs+0)+0,f
  7989  1266  09A9               	comf	(??_abs+0)+1,f
  7990  1267  0AA8               	incf	(??_abs+0)+0,f
  7991  1268  1903               	skipnz
  7992  1269  0AA9               	incf	(??_abs+0)+1,f
  7993  126A  0827               	movf	(abs@v+1),w
  7994  126B  3A80               	xorlw	80h
  7995  126C  00FF               	movwf	btemp+1
  7996  126D  3080               	movlw	(high(01h))^80h
  7997  126E  027F               	subwf	btemp+1,w
  7998  126F  1D03               	skipz
  7999  1270  2A73               	goto	u4915
  8000  1271  3001               	movlw	low(01h)
  8001  1272  0226               	subwf	(abs@v),w
  8002  1273                     u4915:
  8003                           
  8004  1273  3000               	movlw	0
  8005  1274  1803               	skipnc
  8006  1275  3001               	movlw	1
  8007  1276  1283               	bcf	status, 5	;RP0=0, select bank0
  8008  1277  1303               	bcf	status, 6	;RP1=0, select bank0
  8009  1278  0728               	addwf	0+(??_abs+0)+0,w
  8010  1279  00A0               	movwf	(?___wmul)
  8011  127A  0829               	movf	1+(??_abs+0)+0,w
  8012  127B  1803               	skipnc
  8013  127C  0A29               	incf	1+(??_abs+0)+0,w
  8014  127D  00A1               	movwf	((?___wmul))+1
  8015  127E  0827               	movf	(abs@v+1),w
  8016  127F  01A3               	clrf	1+(?___wmul)+02h
  8017  1280  07A3               	addwf	1+(?___wmul)+02h
  8018  1281  0826               	movf	(abs@v),w
  8019  1282  01A2               	clrf	0+(?___wmul)+02h
  8020  1283  07A2               	addwf	0+(?___wmul)+02h
  8021                           
  8022  1284  160A  118A  214E   	fcall	___wmul
              160A  118A         
  8023  1289  1283               	bcf	status, 5	;RP0=0, select bank0
  8024  128A  1303               	bcf	status, 6	;RP1=0, select bank0
  8025  128B  0821               	movf	(1+(?___wmul)),w
  8026  128C  01A7               	clrf	(?_abs+1)
  8027  128D  07A7               	addwf	(?_abs+1)
  8028  128E  0820               	movf	(0+(?___wmul)),w
  8029  128F  01A6               	clrf	(?_abs)
  8030  1290  07A6               	addwf	(?_abs)
  8031                           
  8032  1291  2A92               	goto	l6185
  8033                           	
  8034  1292                     l11357:	
  8035                           	line	469
  8036                           	
  8037  1292                     l6185:	
  8038  1292  0008               	return
  8039                           	opt stack 0
  8040                           GLOBAL	__end_of_abs
  8041  1293                     	__end_of_abs:
  8042 ;; =============== function _abs ends ============
  8043                           
  8044                           	signat	_abs,4218
  8045                           	global	_robotTurn
  8046                           psect	text1079,local,class=CODE,delta=2
  8047                           global __ptext1079
  8048  1575                     __ptext1079:
  8049                           
  8050 ;; *************** function _robotTurn *****************
  8051 ;; Defined at:
  8052 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  angle           2    2[BANK0 ] int 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;		None               void
  8059 ;; Registers used:
  8060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8066 ;;      Params:         0       2       0       0       0
  8067 ;;      Locals:         0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0
  8069 ;;      Totals:         0       2       0       0       0
  8070 ;;Total ram usage:        2 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    4
  8073 ;; This function calls:
  8074 ;;		_ser_putch
  8075 ;; This function is called by:
  8076 ;;		_robotTurnSpeed
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           psect	text1079
  8080                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8081                           	line	137
  8082                           	global	__size_of_robotTurn
  8083  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  8084                           	
  8085  1575                     _robotTurn:	
  8086                           	opt	stack 2
  8087                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8088                           	line	139
  8089                           	
  8090  1575                     l11347:	
  8091                           ;robot.c: 139: if (angle > 0)
  8092  1575  1283               	bcf	status, 5	;RP0=0, select bank0
  8093  1576  1303               	bcf	status, 6	;RP1=0, select bank0
  8094  1577  0823               	movf	(robotTurn@angle+1),w
  8095  1578  3A80               	xorlw	80h
  8096  1579  00FF               	movwf	btemp+1
  8097  157A  3080               	movlw	(high(01h))^80h
  8098  157B  027F               	subwf	btemp+1,w
  8099  157C  1D03               	skipz
  8100  157D  2D80               	goto	u4895
  8101  157E  3001               	movlw	low(01h)
  8102  157F  0222               	subwf	(robotTurn@angle),w
  8103  1580                     u4895:
  8104                           
  8105  1580  1C03               	skipc
  8106  1581  2D83               	goto	u4891
  8107  1582  2D84               	goto	u4890
  8108  1583                     u4891:
  8109  1583  2DA3               	goto	l6108
  8110  1584                     u4890:
  8111                           	line	141
  8112                           	
  8113  1584                     l11349:	
  8114                           ;robot.c: 140: {
  8115                           ;robot.c: 141: ser_putch(137);
  8116  1584  3089               	movlw	(089h)
  8117  1585  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8118                           	line	143
  8119                           ;robot.c: 143: ser_putch(0);
  8120  158A  3000               	movlw	(0)
  8121  158B  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8122                           	line	145
  8123                           ;robot.c: 145: ser_putch(200);
  8124  1590  30C8               	movlw	(0C8h)
  8125  1591  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8126                           	line	147
  8127                           ;robot.c: 147: ser_putch(0);
  8128  1596  3000               	movlw	(0)
  8129  1597  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8130                           	line	149
  8131                           ;robot.c: 149: ser_putch(1);
  8132  159C  3001               	movlw	(01h)
  8133  159D  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8134                           	line	150
  8135                           ;robot.c: 150: }
  8136  15A2  2DE8               	goto	l6112
  8137                           	line	151
  8138                           	
  8139  15A3                     l6108:	
  8140                           ;robot.c: 151: else if (angle < 0)
  8141  15A3  1283               	bcf	status, 5	;RP0=0, select bank0
  8142  15A4  1303               	bcf	status, 6	;RP1=0, select bank0
  8143  15A5  1FA3               	btfss	(robotTurn@angle+1),7
  8144  15A6  2DA8               	goto	u4901
  8145  15A7  2DA9               	goto	u4900
  8146  15A8                     u4901:
  8147  15A8  2DC8               	goto	l11353
  8148  15A9                     u4900:
  8149                           	line	153
  8150                           	
  8151  15A9                     l11351:	
  8152                           ;robot.c: 152: {
  8153                           ;robot.c: 153: ser_putch(137);
  8154  15A9  3089               	movlw	(089h)
  8155  15AA  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8156                           	line	155
  8157                           ;robot.c: 155: ser_putch(0);
  8158  15AF  3000               	movlw	(0)
  8159  15B0  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8160                           	line	157
  8161                           ;robot.c: 157: ser_putch(200);
  8162  15B5  30C8               	movlw	(0C8h)
  8163  15B6  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8164                           	line	159
  8165                           ;robot.c: 159: ser_putch(255);
  8166  15BB  30FF               	movlw	(0FFh)
  8167  15BC  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8168                           	line	161
  8169                           ;robot.c: 161: ser_putch(255);
  8170  15C1  30FF               	movlw	(0FFh)
  8171  15C2  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8172                           	line	162
  8173                           ;robot.c: 162: }
  8174  15C7  2DE8               	goto	l6112
  8175                           	line	163
  8176                           	
  8177  15C8                     l6110:	
  8178                           	line	165
  8179                           	
  8180  15C8                     l11353:	
  8181                           ;robot.c: 163: else
  8182                           ;robot.c: 164: {
  8183                           ;robot.c: 165: ser_putch(137);
  8184  15C8  3089               	movlw	(089h)
  8185  15C9  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8186                           	line	167
  8187                           ;robot.c: 167: ser_putch(0);
  8188  15CE  3000               	movlw	(0)
  8189  15CF  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8190                           	line	169
  8191                           ;robot.c: 169: ser_putch(0);
  8192  15D4  3000               	movlw	(0)
  8193  15D5  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8194                           	line	171
  8195                           ;robot.c: 171: ser_putch(0);
  8196  15DA  3000               	movlw	(0)
  8197  15DB  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8198                           	line	173
  8199                           ;robot.c: 173: ser_putch(0);
  8200  15E0  3000               	movlw	(0)
  8201  15E1  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  8202  15E6  2DE8               	goto	l6112
  8203                           	line	174
  8204                           	
  8205  15E7                     l6111:	
  8206  15E7  2DE8               	goto	l6112
  8207                           	
  8208  15E8                     l6109:	
  8209                           	line	175
  8210                           	
  8211  15E8                     l6112:	
  8212  15E8  0008               	return
  8213                           	opt stack 0
  8214                           GLOBAL	__end_of_robotTurn
  8215  15E9                     	__end_of_robotTurn:
  8216 ;; =============== function _robotTurn ends ============
  8217                           
  8218                           	signat	_robotTurn,4216
  8219                           	global	_ser_getch
  8220                           psect	text1080,local,class=CODE,delta=2
  8221                           global __ptext1080
  8222  117A                     __ptext1080:
  8223                           
  8224 ;; *************** function _ser_getch *****************
  8225 ;; Defined at:
  8226 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;		None
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  c               1    1[BANK0 ] unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      unsigned char 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8240 ;;      Params:         0       0       0       0       0
  8241 ;;      Locals:         0       1       0       0       0
  8242 ;;      Temps:          0       1       0       0       0
  8243 ;;      Totals:         0       2       0       0       0
  8244 ;;Total ram usage:        2 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    4
  8247 ;; This function calls:
  8248 ;;		_ser_isrx
  8249 ;; This function is called by:
  8250 ;;		_robot_read
  8251 ;;		_RobotBattRead
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           psect	text1080
  8255                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  8256                           	line	55
  8257                           	global	__size_of_ser_getch
  8258  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  8259                           	
  8260  117A                     _ser_getch:	
  8261                           	opt	stack 1
  8262                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8263                           	line	58
  8264                           	
  8265  117A                     l11331:	
  8266                           ;ser.c: 56: unsigned char c;
  8267                           ;ser.c: 58: while (ser_isrx()==0)
  8268  117A  297C               	goto	l11333
  8269                           	
  8270  117B                     l6892:	
  8271                           	line	59
  8272                           ;ser.c: 59: continue;
  8273  117B  297C               	goto	l11333
  8274                           	
  8275  117C                     l6891:	
  8276                           	line	58
  8277                           	
  8278  117C                     l11333:	
  8279  117C  160A  118A  2027   	fcall	_ser_isrx
              160A  118A         
  8280  1181  1C03               	btfss	status,0
  8281  1182  2984               	goto	u4881
  8282  1183  2985               	goto	u4880
  8283  1184                     u4881:
  8284  1184  297C               	goto	l11333
  8285  1185                     u4880:
  8286                           	
  8287  1185                     l6893:	
  8288                           	line	61
  8289                           ;ser.c: 61: GIE=0;
  8290  1185  138B               	bcf	(95/8),(95)&7
  8291                           	line	62
  8292                           	
  8293  1186                     l11335:	
  8294                           ;ser.c: 62: c=rxfifo[rxoptr];
  8295  1186  1683               	bsf	status, 5	;RP0=1, select bank1
  8296  1187  1303               	bcf	status, 6	;RP1=0, select bank1
  8297  1188  085C               	movf	(_rxoptr)^080h,w
  8298  1189  3EA0               	addlw	_rxfifo&0ffh
  8299  118A  0084               	movwf	fsr0
  8300  118B  1383               	bcf	status, 7	;select IRP bank1
  8301  118C  0800               	movf	indf,w
  8302  118D  1283               	bcf	status, 5	;RP0=0, select bank0
  8303  118E  1303               	bcf	status, 6	;RP1=0, select bank0
  8304  118F  00A0               	movwf	(??_ser_getch+0)+0
  8305  1190  0820               	movf	(??_ser_getch+0)+0,w
  8306  1191  00A1               	movwf	(ser_getch@c)
  8307                           	line	63
  8308                           	
  8309  1192                     l11337:	
  8310                           ;ser.c: 63: ++rxoptr;
  8311  1192  3001               	movlw	(01h)
  8312  1193  00A0               	movwf	(??_ser_getch+0)+0
  8313  1194  0820               	movf	(??_ser_getch+0)+0,w
  8314  1195  1683               	bsf	status, 5	;RP0=1, select bank1
  8315  1196  1303               	bcf	status, 6	;RP1=0, select bank1
  8316  1197  07DC               	addwf	(_rxoptr)^080h,f	;volatile
  8317                           	line	64
  8318                           	
  8319  1198                     l11339:	
  8320                           ;ser.c: 64: rxoptr &= (16-1);
  8321  1198  300F               	movlw	(0Fh)
  8322  1199  1283               	bcf	status, 5	;RP0=0, select bank0
  8323  119A  1303               	bcf	status, 6	;RP1=0, select bank0
  8324  119B  00A0               	movwf	(??_ser_getch+0)+0
  8325  119C  0820               	movf	(??_ser_getch+0)+0,w
  8326  119D  1683               	bsf	status, 5	;RP0=1, select bank1
  8327  119E  1303               	bcf	status, 6	;RP1=0, select bank1
  8328  119F  05DC               	andwf	(_rxoptr)^080h,f	;volatile
  8329                           	line	65
  8330                           	
  8331  11A0                     l11341:	
  8332                           ;ser.c: 65: GIE=1;
  8333  11A0  178B               	bsf	(95/8),(95)&7
  8334                           	line	66
  8335                           	
  8336  11A1                     l11343:	
  8337                           ;ser.c: 66: return c;
  8338  11A1  1283               	bcf	status, 5	;RP0=0, select bank0
  8339  11A2  1303               	bcf	status, 6	;RP1=0, select bank0
  8340  11A3  0821               	movf	(ser_getch@c),w
  8341  11A4  29A5               	goto	l6894
  8342                           	
  8343  11A5                     l11345:	
  8344                           	line	67
  8345                           	
  8346  11A5                     l6894:	
  8347  11A5  0008               	return
  8348                           	opt stack 0
  8349                           GLOBAL	__end_of_ser_getch
  8350  11A6                     	__end_of_ser_getch:
  8351 ;; =============== function _ser_getch ends ============
  8352                           
  8353                           	signat	_ser_getch,89
  8354                           	global	_sprintf
  8355                           psect	text1081,local,class=CODE,delta=2
  8356                           global __ptext1081
  8357  06FF                     __ptext1081:
  8358                           
  8359 ;; *************** function _sprintf *****************
  8360 ;; Defined at:
  8361 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  sp              1    wreg     PTR unsigned char 
  8364 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8365 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  8366 ;;		 -> STR_19(5), STR_13(13), 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  8369 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8370 ;;  _val            4   31[BANK0 ] struct .
  8371 ;;  c               1   36[BANK0 ] char 
  8372 ;;  prec            1   30[BANK0 ] char 
  8373 ;;  flag            1   29[BANK0 ] unsigned char 
  8374 ;;  ap              1   28[BANK0 ] PTR void [1]
  8375 ;;		 -> ?_sprintf(2), 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2   20[BANK0 ] int 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8385 ;;      Params:         0       5       0       0       0
  8386 ;;      Locals:         0       9       0       0       0
  8387 ;;      Temps:          0       3       0       0       0
  8388 ;;      Totals:         0      17       0       0       0
  8389 ;;Total ram usage:       17 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    4
  8392 ;; This function calls:
  8393 ;;		___lwdiv
  8394 ;;		___lwmod
  8395 ;; This function is called by:
  8396 ;;		_UpdateDisplay
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           psect	text1081
  8400                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  8401                           	line	488
  8402                           	global	__size_of_sprintf
  8403  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  8404                           	
  8405  06FF                     _sprintf:	
  8406                           	opt	stack 1
  8407                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8408                           ;sprintf@sp stored from wreg
  8409                           	line	537
  8410  06FF  1283               	bcf	status, 5	;RP0=0, select bank0
  8411  0700  1303               	bcf	status, 6	;RP1=0, select bank0
  8412  0701  00C3               	movwf	(sprintf@sp)
  8413                           	
  8414  0702                     l11273:	
  8415  0702  3035               	movlw	(?_sprintf+01h)&0ffh
  8416  0703  00B9               	movwf	(??_sprintf+0)+0
  8417  0704  0839               	movf	(??_sprintf+0)+0,w
  8418  0705  00BC               	movwf	(sprintf@ap)
  8419                           	line	540
  8420  0706  2FE5               	goto	l11325
  8421                           	
  8422  0707                     l6932:	
  8423                           	line	542
  8424                           	
  8425  0707                     l11275:	
  8426  0707  0844               	movf	(sprintf@c),w
  8427  0708  3A25               	xorlw	025h
  8428  0709  1903               	skipnz
  8429  070A  2F0C               	goto	u4801
  8430  070B  2F0D               	goto	u4800
  8431  070C                     u4801:
  8432  070C  2F19               	goto	l6933
  8433  070D                     u4800:
  8434                           	line	545
  8435                           	
  8436  070D                     l11277:	
  8437  070D  0844               	movf	(sprintf@c),w
  8438  070E  00B9               	movwf	(??_sprintf+0)+0
  8439  070F  0843               	movf	(sprintf@sp),w
  8440  0710  0084               	movwf	fsr0
  8441  0711  0839               	movf	(??_sprintf+0)+0,w
  8442  0712  1383               	bcf	status, 7	;select IRP bank0
  8443  0713  0080               	movwf	indf
  8444                           	
  8445  0714                     l11279:	
  8446  0714  3001               	movlw	(01h)
  8447  0715  00B9               	movwf	(??_sprintf+0)+0
  8448  0716  0839               	movf	(??_sprintf+0)+0,w
  8449  0717  07C3               	addwf	(sprintf@sp),f
  8450                           	line	546
  8451  0718  2FE5               	goto	l11325
  8452                           	line	547
  8453                           	
  8454  0719                     l6933:	
  8455                           	line	552
  8456  0719  01BD               	clrf	(sprintf@flag)
  8457                           	line	638
  8458  071A  2F20               	goto	l11283
  8459                           	line	640
  8460                           	
  8461  071B                     l6935:	
  8462                           	line	641
  8463  071B  2FF9               	goto	l11327
  8464                           	line	700
  8465                           	
  8466  071C                     l6937:	
  8467  071C  2F35               	goto	l11285
  8468                           	line	701
  8469                           	
  8470  071D                     l6938:	
  8471                           	line	702
  8472  071D  2F35               	goto	l11285
  8473                           	line	805
  8474                           	
  8475  071E                     l6940:	
  8476                           	line	816
  8477  071E  2FE5               	goto	l11325
  8478                           	line	825
  8479                           	
  8480  071F                     l11281:	
  8481  071F  2F35               	goto	l11285
  8482                           	line	638
  8483                           	
  8484  0720                     l6934:	
  8485                           	
  8486  0720                     l11283:	
  8487  0720  3001               	movlw	01h
  8488  0721  07B4               	addwf	(sprintf@f),f
  8489  0722  30FF               	movlw	-01h
  8490  0723  0734               	addwf	(sprintf@f),w
  8491  0724  0084               	movwf	fsr0
  8492  0725  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8493  072A  00C4               	movwf	(sprintf@c)
  8494                           	; Switch size 1, requested type "space"
  8495                           ; Number of cases is 3, Range of values is 0 to 105
  8496                           ; switch strategies available:
  8497                           ; Name         Instructions Cycles
  8498                           ; simple_byte           10     6 (average)
  8499                           ; jumptable            260     6 (fixed)
  8500                           ; rangetable           110     6 (fixed)
  8501                           ; spacedrange          218     9 (fixed)
  8502                           ; locatedrange         106     3 (fixed)
  8503                           ;	Chosen strategy is simple_byte
  8504                           
  8505                           	opt asmopt_off
  8506  072B  3A00               	xorlw	0^0	; case 0
  8507  072C  1903               	skipnz
  8508  072D  2FF9               	goto	l11327
  8509  072E  3A64               	xorlw	100^0	; case 100
  8510  072F  1903               	skipnz
  8511  0730  2F35               	goto	l11285
  8512  0731  3A0D               	xorlw	105^100	; case 105
  8513  0732  1903               	skipnz
  8514  0733  2F35               	goto	l11285
  8515  0734  2FE5               	goto	l11325
  8516                           	opt asmopt_on
  8517                           
  8518                           	line	825
  8519                           	
  8520  0735                     l6939:	
  8521                           	line	1254
  8522                           	
  8523  0735                     l11285:	
  8524  0735  083C               	movf	(sprintf@ap),w
  8525  0736  0084               	movwf	fsr0
  8526  0737  1383               	bcf	status, 7	;select IRP bank0
  8527  0738  0800               	movf	indf,w
  8528  0739  00BF               	movwf	(sprintf@_val)
  8529  073A  0A84               	incf	fsr0,f
  8530  073B  0800               	movf	indf,w
  8531  073C  00C0               	movwf	(sprintf@_val+1)
  8532                           	
  8533  073D                     l11287:	
  8534  073D  3002               	movlw	(02h)
  8535  073E  00B9               	movwf	(??_sprintf+0)+0
  8536  073F  0839               	movf	(??_sprintf+0)+0,w
  8537  0740  07BC               	addwf	(sprintf@ap),f
  8538                           	line	1256
  8539                           	
  8540  0741                     l11289:	
  8541  0741  1FC0               	btfss	(sprintf@_val+1),7
  8542  0742  2F44               	goto	u4811
  8543  0743  2F45               	goto	u4810
  8544  0744                     u4811:
  8545  0744  2F4F               	goto	l11295
  8546  0745                     u4810:
  8547                           	line	1257
  8548                           	
  8549  0745                     l11291:	
  8550  0745  3003               	movlw	(03h)
  8551  0746  00B9               	movwf	(??_sprintf+0)+0
  8552  0747  0839               	movf	(??_sprintf+0)+0,w
  8553  0748  04BD               	iorwf	(sprintf@flag),f
  8554                           	line	1258
  8555                           	
  8556  0749                     l11293:	
  8557  0749  09BF               	comf	(sprintf@_val),f
  8558  074A  09C0               	comf	(sprintf@_val+1),f
  8559  074B  0ABF               	incf	(sprintf@_val),f
  8560  074C  1903               	skipnz
  8561  074D  0AC0               	incf	(sprintf@_val+1),f
  8562  074E  2F4F               	goto	l11295
  8563                           	line	1259
  8564                           	
  8565  074F                     l6941:	
  8566                           	line	1300
  8567                           	
  8568  074F                     l11295:	
  8569  074F  01C4               	clrf	(sprintf@c)
  8570  0750  1403               	bsf	status,0
  8571  0751  0DC4               	rlf	(sprintf@c),f
  8572                           	
  8573  0752                     l11297:	
  8574  0752  0844               	movf	(sprintf@c),w
  8575  0753  3A05               	xorlw	05h
  8576  0754  1D03               	skipz
  8577  0755  2F57               	goto	u4821
  8578  0756  2F58               	goto	u4820
  8579  0757                     u4821:
  8580  0757  2F5A               	goto	l11301
  8581  0758                     u4820:
  8582  0758  2F82               	goto	l11309
  8583                           	
  8584  0759                     l11299:	
  8585  0759  2F82               	goto	l11309
  8586                           	line	1301
  8587                           	
  8588  075A                     l6942:	
  8589                           	
  8590  075A                     l11301:	
  8591  075A  0844               	movf	(sprintf@c),w
  8592  075B  00B9               	movwf	(??_sprintf+0)+0
  8593  075C  0739               	addwf	(??_sprintf+0)+0,w
  8594  075D  3E01               	addlw	low((_dpowers-__stringbase))
  8595  075E  0084               	movwf	fsr0
  8596  075F  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8597  0764  00BA               	movwf	(??_sprintf+1)+0
  8598  0765  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8599  076A  00BB               	movwf	(??_sprintf+1)+0+1
  8600  076B  083B               	movf	1+(??_sprintf+1)+0,w
  8601  076C  0240               	subwf	(sprintf@_val+1),w
  8602  076D  1D03               	skipz
  8603  076E  2F71               	goto	u4835
  8604  076F  083A               	movf	0+(??_sprintf+1)+0,w
  8605  0770  023F               	subwf	(sprintf@_val),w
  8606  0771                     u4835:
  8607  0771  1803               	skipnc
  8608  0772  2F74               	goto	u4831
  8609  0773  2F75               	goto	u4830
  8610  0774                     u4831:
  8611  0774  2F77               	goto	l11305
  8612  0775                     u4830:
  8613  0775  2F82               	goto	l11309
  8614                           	line	1302
  8615                           	
  8616  0776                     l11303:	
  8617  0776  2F82               	goto	l11309
  8618                           	
  8619  0777                     l6944:	
  8620                           	line	1300
  8621                           	
  8622  0777                     l11305:	
  8623  0777  3001               	movlw	(01h)
  8624  0778  00B9               	movwf	(??_sprintf+0)+0
  8625  0779  0839               	movf	(??_sprintf+0)+0,w
  8626  077A  07C4               	addwf	(sprintf@c),f
  8627                           	
  8628  077B                     l11307:	
  8629  077B  0844               	movf	(sprintf@c),w
  8630  077C  3A05               	xorlw	05h
  8631  077D  1D03               	skipz
  8632  077E  2F80               	goto	u4841
  8633  077F  2F81               	goto	u4840
  8634  0780                     u4841:
  8635  0780  2F5A               	goto	l11301
  8636  0781                     u4840:
  8637  0781  2F82               	goto	l11309
  8638                           	
  8639  0782                     l6943:	
  8640                           	line	1433
  8641                           	
  8642  0782                     l11309:	
  8643  0782  083D               	movf	(sprintf@flag),w
  8644  0783  3903               	andlw	03h
  8645  0784  1903               	btfsc	status,2
  8646  0785  2F87               	goto	u4851
  8647  0786  2F88               	goto	u4850
  8648  0787                     u4851:
  8649  0787  2F94               	goto	l11315
  8650  0788                     u4850:
  8651                           	line	1434
  8652                           	
  8653  0788                     l11311:	
  8654  0788  302D               	movlw	(02Dh)
  8655  0789  00B9               	movwf	(??_sprintf+0)+0
  8656  078A  0843               	movf	(sprintf@sp),w
  8657  078B  0084               	movwf	fsr0
  8658  078C  0839               	movf	(??_sprintf+0)+0,w
  8659  078D  1383               	bcf	status, 7	;select IRP bank0
  8660  078E  0080               	movwf	indf
  8661                           	
  8662  078F                     l11313:	
  8663  078F  3001               	movlw	(01h)
  8664  0790  00B9               	movwf	(??_sprintf+0)+0
  8665  0791  0839               	movf	(??_sprintf+0)+0,w
  8666  0792  07C3               	addwf	(sprintf@sp),f
  8667  0793  2F94               	goto	l11315
  8668                           	
  8669  0794                     l6945:	
  8670                           	line	1467
  8671                           	
  8672  0794                     l11315:	
  8673  0794  0844               	movf	(sprintf@c),w
  8674  0795  00B9               	movwf	(??_sprintf+0)+0
  8675  0796  0839               	movf	(??_sprintf+0)+0,w
  8676  0797  00BE               	movwf	(sprintf@prec)
  8677                           	line	1469
  8678  0798  2FD9               	goto	l11323
  8679                           	
  8680  0799                     l6947:	
  8681                           	line	1484
  8682                           	
  8683  0799                     l11317:	
  8684  0799  300A               	movlw	low(0Ah)
  8685  079A  00AE               	movwf	(?___lwmod)
  8686  079B  3000               	movlw	high(0Ah)
  8687  079C  00AF               	movwf	((?___lwmod))+1
  8688  079D  083E               	movf	(sprintf@prec),w
  8689  079E  00B9               	movwf	(??_sprintf+0)+0
  8690  079F  0739               	addwf	(??_sprintf+0)+0,w
  8691  07A0  3E01               	addlw	low((_dpowers-__stringbase))
  8692  07A1  0084               	movwf	fsr0
  8693  07A2  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8694  07A7  00A6               	movwf	(?___lwdiv)
  8695  07A8  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8696  07AD  00A7               	movwf	(?___lwdiv+1)
  8697  07AE  0840               	movf	(sprintf@_val+1),w
  8698  07AF  01A9               	clrf	1+(?___lwdiv)+02h
  8699  07B0  07A9               	addwf	1+(?___lwdiv)+02h
  8700  07B1  083F               	movf	(sprintf@_val),w
  8701  07B2  01A8               	clrf	0+(?___lwdiv)+02h
  8702  07B3  07A8               	addwf	0+(?___lwdiv)+02h
  8703                           
  8704  07B4  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  8705  07B9  1283               	bcf	status, 5	;RP0=0, select bank0
  8706  07BA  1303               	bcf	status, 6	;RP1=0, select bank0
  8707  07BB  0827               	movf	(1+(?___lwdiv)),w
  8708  07BC  01B1               	clrf	1+(?___lwmod)+02h
  8709  07BD  07B1               	addwf	1+(?___lwmod)+02h
  8710  07BE  0826               	movf	(0+(?___lwdiv)),w
  8711  07BF  01B0               	clrf	0+(?___lwmod)+02h
  8712  07C0  07B0               	addwf	0+(?___lwmod)+02h
  8713                           
  8714  07C1  160A  118A  2312   	fcall	___lwmod
              120A  118A         
  8715  07C6  1283               	bcf	status, 5	;RP0=0, select bank0
  8716  07C7  1303               	bcf	status, 6	;RP1=0, select bank0
  8717  07C8  082E               	movf	(0+(?___lwmod)),w
  8718  07C9  3E30               	addlw	030h
  8719  07CA  00BA               	movwf	(??_sprintf+1)+0
  8720  07CB  083A               	movf	(??_sprintf+1)+0,w
  8721  07CC  00C4               	movwf	(sprintf@c)
  8722                           	line	1516
  8723                           	
  8724  07CD                     l11319:	
  8725  07CD  0844               	movf	(sprintf@c),w
  8726  07CE  00B9               	movwf	(??_sprintf+0)+0
  8727  07CF  0843               	movf	(sprintf@sp),w
  8728  07D0  0084               	movwf	fsr0
  8729  07D1  0839               	movf	(??_sprintf+0)+0,w
  8730  07D2  1383               	bcf	status, 7	;select IRP bank0
  8731  07D3  0080               	movwf	indf
  8732                           	
  8733  07D4                     l11321:	
  8734  07D4  3001               	movlw	(01h)
  8735  07D5  00B9               	movwf	(??_sprintf+0)+0
  8736  07D6  0839               	movf	(??_sprintf+0)+0,w
  8737  07D7  07C3               	addwf	(sprintf@sp),f
  8738  07D8  2FD9               	goto	l11323
  8739                           	line	1517
  8740                           	
  8741  07D9                     l6946:	
  8742                           	line	1469
  8743                           	
  8744  07D9                     l11323:	
  8745  07D9  30FF               	movlw	(-1)
  8746  07DA  00B9               	movwf	(??_sprintf+0)+0
  8747  07DB  0839               	movf	(??_sprintf+0)+0,w
  8748  07DC  07BE               	addwf	(sprintf@prec),f
  8749  07DD  083E               	movf	((sprintf@prec)),w
  8750  07DE  3AFF               	xorlw	-1
  8751  07DF  1D03               	skipz
  8752  07E0  2FE2               	goto	u4861
  8753  07E1  2FE3               	goto	u4860
  8754  07E2                     u4861:
  8755  07E2  2F99               	goto	l11317
  8756  07E3                     u4860:
  8757  07E3  2FE5               	goto	l11325
  8758                           	
  8759  07E4                     l6948:	
  8760  07E4  2FE5               	goto	l11325
  8761                           	line	1525
  8762                           	
  8763  07E5                     l6931:	
  8764                           	line	540
  8765                           	
  8766  07E5                     l11325:	
  8767  07E5  3001               	movlw	01h
  8768  07E6  07B4               	addwf	(sprintf@f),f
  8769  07E7  30FF               	movlw	-01h
  8770  07E8  0734               	addwf	(sprintf@f),w
  8771  07E9  0084               	movwf	fsr0
  8772  07EA  120A  158A  200A   	fcall	stringdir
              120A  118A         
  8773  07EF  00B9               	movwf	(??_sprintf+0)+0
  8774  07F0  0839               	movf	(??_sprintf+0)+0,w
  8775  07F1  00C4               	movwf	(sprintf@c)
  8776  07F2  08C4               	movf	((sprintf@c)),f
  8777  07F3  1D03               	skipz
  8778  07F4  2FF6               	goto	u4871
  8779  07F5  2FF7               	goto	u4870
  8780  07F6                     u4871:
  8781  07F6  2F07               	goto	l11275
  8782  07F7                     u4870:
  8783  07F7  2FF9               	goto	l11327
  8784                           	
  8785  07F8                     l6949:	
  8786  07F8  2FF9               	goto	l11327
  8787                           	line	1527
  8788                           	
  8789  07F9                     l6936:	
  8790                           	line	1530
  8791                           	
  8792  07F9                     l11327:	
  8793  07F9  0843               	movf	(sprintf@sp),w
  8794  07FA  0084               	movwf	fsr0
  8795  07FB  1383               	bcf	status, 7	;select IRP bank0
  8796  07FC  0180               	clrf	indf
  8797  07FD  2FFE               	goto	l6950
  8798                           	line	1532
  8799                           	
  8800  07FE                     l11329:	
  8801                           	line	1533
  8802                           ;	Return value of _sprintf is never used
  8803                           	
  8804  07FE                     l6950:	
  8805  07FE  0008               	return
  8806                           	opt stack 0
  8807                           GLOBAL	__end_of_sprintf
  8808  07FF                     	__end_of_sprintf:
  8809 ;; =============== function _sprintf ends ============
  8810                           
  8811                           	signat	_sprintf,4698
  8812                           	global	_ADCconvert
  8813                           psect	text1082,local,class=CODE,delta=2
  8814                           global __ptext1082
  8815  04DC                     __ptext1082:
  8816                           
  8817 ;; *************** function _ADCconvert *****************
  8818 ;; Defined at:
  8819 ;;		line 89 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;		None               void
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, pclath, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8833 ;;      Params:         0       0       0       0       0
  8834 ;;      Locals:         0       0       0       0       0
  8835 ;;      Temps:          0       2       0       0       0
  8836 ;;      Totals:         0       2       0       0       0
  8837 ;;Total ram usage:        2 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    4
  8840 ;; This function calls:
  8841 ;;		___wmul
  8842 ;;		___lwdiv
  8843 ;; This function is called by:
  8844 ;;		_readAvgDistance
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           psect	text1082
  8848                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8849                           	line	89
  8850                           	global	__size_of_ADCconvert
  8851  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  8852                           	
  8853  04DC                     _ADCconvert:	
  8854                           	opt	stack 1
  8855                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  8856                           	line	95
  8857                           	
  8858  04DC                     l11231:	
  8859                           ;infrared.c: 95: if (adcVal >= 213 && adcVal < 234)
  8860  04DC  3000               	movlw	high(0D5h)
  8861  04DD  1283               	bcf	status, 5	;RP0=0, select bank0
  8862  04DE  1303               	bcf	status, 6	;RP1=0, select bank0
  8863  04DF  026D               	subwf	(_adcVal+1),w	;volatile
  8864  04E0  30D5               	movlw	low(0D5h)
  8865  04E1  1903               	skipnz
  8866  04E2  026C               	subwf	(_adcVal),w	;volatile
  8867  04E3  1C03               	skipc
  8868  04E4  2CE6               	goto	u4661
  8869  04E5  2CE7               	goto	u4660
  8870  04E6                     u4661:
  8871  04E6  2D2A               	goto	l11237
  8872  04E7                     u4660:
  8873                           	
  8874  04E7                     l11233:	
  8875  04E7  3000               	movlw	high(0EAh)
  8876  04E8  026D               	subwf	(_adcVal+1),w	;volatile
  8877  04E9  30EA               	movlw	low(0EAh)
  8878  04EA  1903               	skipnz
  8879  04EB  026C               	subwf	(_adcVal),w	;volatile
  8880  04EC  1803               	skipnc
  8881  04ED  2CEF               	goto	u4671
  8882  04EE  2CF0               	goto	u4670
  8883  04EF                     u4671:
  8884  04EF  2D2A               	goto	l11237
  8885  04F0                     u4670:
  8886                           	line	97
  8887                           	
  8888  04F0                     l11235:	
  8889                           ;infrared.c: 96: {
  8890                           ;infrared.c: 97: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  8891  04F0  3015               	movlw	low(015h)
  8892  04F1  00A6               	movwf	(?___lwdiv)
  8893  04F2  3000               	movlw	high(015h)
  8894  04F3  00A7               	movwf	((?___lwdiv))+1
  8895  04F4  096C               	comf	(_adcVal),w	;volatile
  8896  04F5  00AE               	movwf	(??_ADCconvert+0)+0
  8897  04F6  096D               	comf	(_adcVal+1),w	;volatile
  8898  04F7  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8899  04F8  0AAE               	incf	(??_ADCconvert+0)+0,f
  8900  04F9  1903               	skipnz
  8901  04FA  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8902  04FB  082E               	movf	0+(??_ADCconvert+0)+0,w
  8903  04FC  3EEA               	addlw	low(0EAh)
  8904  04FD  00A0               	movwf	(?___wmul)
  8905  04FE  082F               	movf	1+(??_ADCconvert+0)+0,w
  8906  04FF  1803               	skipnc
  8907  0500  3E01               	addlw	1
  8908  0501  3E00               	addlw	high(0EAh)
  8909  0502  00A1               	movwf	1+(?___wmul)
  8910  0503  3005               	movlw	low(05h)
  8911  0504  00A2               	movwf	0+(?___wmul)+02h
  8912  0505  3000               	movlw	high(05h)
  8913  0506  00A3               	movwf	(0+(?___wmul)+02h)+1
  8914  0507  160A  118A  214E   	fcall	___wmul
              120A  118A         
  8915  050C  1283               	bcf	status, 5	;RP0=0, select bank0
  8916  050D  1303               	bcf	status, 6	;RP1=0, select bank0
  8917  050E  0821               	movf	(1+(?___wmul)),w
  8918  050F  01A9               	clrf	1+(?___lwdiv)+02h
  8919  0510  07A9               	addwf	1+(?___lwdiv)+02h
  8920  0511  0820               	movf	(0+(?___wmul)),w
  8921  0512  01A8               	clrf	0+(?___lwdiv)+02h
  8922  0513  07A8               	addwf	0+(?___lwdiv)+02h
  8923                           
  8924  0514  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  8925  0519  1283               	bcf	status, 5	;RP0=0, select bank0
  8926  051A  1303               	bcf	status, 6	;RP1=0, select bank0
  8927  051B  0826               	movf	(0+(?___lwdiv)),w
  8928  051C  3E0F               	addlw	low(0Fh)
  8929  051D  1683               	bsf	status, 5	;RP0=1, select bank1
  8930  051E  1303               	bcf	status, 6	;RP1=0, select bank1
  8931  051F  00B8               	movwf	(_IRdistance)^080h	;volatile
  8932  0520  1283               	bcf	status, 5	;RP0=0, select bank0
  8933  0521  1303               	bcf	status, 6	;RP1=0, select bank0
  8934  0522  0827               	movf	(1+(?___lwdiv)),w
  8935  0523  1803               	skipnc
  8936  0524  3E01               	addlw	1
  8937  0525  3E00               	addlw	high(0Fh)
  8938  0526  1683               	bsf	status, 5	;RP0=1, select bank1
  8939  0527  1303               	bcf	status, 6	;RP1=0, select bank1
  8940  0528  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8941                           	line	98
  8942                           ;infrared.c: 98: }
  8943  0529  2EFE               	goto	l3052
  8944                           	line	99
  8945                           	
  8946  052A                     l3039:	
  8947                           	
  8948  052A                     l11237:	
  8949                           ;infrared.c: 99: else if (adcVal >= 170 && adcVal < 213)
  8950  052A  3000               	movlw	high(0AAh)
  8951  052B  1283               	bcf	status, 5	;RP0=0, select bank0
  8952  052C  026D               	subwf	(_adcVal+1),w	;volatile
  8953  052D  30AA               	movlw	low(0AAh)
  8954  052E  1903               	skipnz
  8955  052F  026C               	subwf	(_adcVal),w	;volatile
  8956  0530  1C03               	skipc
  8957  0531  2D33               	goto	u4681
  8958  0532  2D34               	goto	u4680
  8959  0533                     u4681:
  8960  0533  2D77               	goto	l11243
  8961  0534                     u4680:
  8962                           	
  8963  0534                     l11239:	
  8964  0534  3000               	movlw	high(0D5h)
  8965  0535  026D               	subwf	(_adcVal+1),w	;volatile
  8966  0536  30D5               	movlw	low(0D5h)
  8967  0537  1903               	skipnz
  8968  0538  026C               	subwf	(_adcVal),w	;volatile
  8969  0539  1803               	skipnc
  8970  053A  2D3C               	goto	u4691
  8971  053B  2D3D               	goto	u4690
  8972  053C                     u4691:
  8973  053C  2D77               	goto	l11243
  8974  053D                     u4690:
  8975                           	line	101
  8976                           	
  8977  053D                     l11241:	
  8978                           ;infrared.c: 100: {
  8979                           ;infrared.c: 101: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  8980  053D  302B               	movlw	low(02Bh)
  8981  053E  00A6               	movwf	(?___lwdiv)
  8982  053F  3000               	movlw	high(02Bh)
  8983  0540  00A7               	movwf	((?___lwdiv))+1
  8984  0541  096C               	comf	(_adcVal),w	;volatile
  8985  0542  00AE               	movwf	(??_ADCconvert+0)+0
  8986  0543  096D               	comf	(_adcVal+1),w	;volatile
  8987  0544  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8988  0545  0AAE               	incf	(??_ADCconvert+0)+0,f
  8989  0546  1903               	skipnz
  8990  0547  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8991  0548  082E               	movf	0+(??_ADCconvert+0)+0,w
  8992  0549  3ED5               	addlw	low(0D5h)
  8993  054A  00A0               	movwf	(?___wmul)
  8994  054B  082F               	movf	1+(??_ADCconvert+0)+0,w
  8995  054C  1803               	skipnc
  8996  054D  3E01               	addlw	1
  8997  054E  3E00               	addlw	high(0D5h)
  8998  054F  00A1               	movwf	1+(?___wmul)
  8999  0550  300A               	movlw	low(0Ah)
  9000  0551  00A2               	movwf	0+(?___wmul)+02h
  9001  0552  3000               	movlw	high(0Ah)
  9002  0553  00A3               	movwf	(0+(?___wmul)+02h)+1
  9003  0554  160A  118A  214E   	fcall	___wmul
              120A  118A         
  9004  0559  1283               	bcf	status, 5	;RP0=0, select bank0
  9005  055A  1303               	bcf	status, 6	;RP1=0, select bank0
  9006  055B  0821               	movf	(1+(?___wmul)),w
  9007  055C  01A9               	clrf	1+(?___lwdiv)+02h
  9008  055D  07A9               	addwf	1+(?___lwdiv)+02h
  9009  055E  0820               	movf	(0+(?___wmul)),w
  9010  055F  01A8               	clrf	0+(?___lwdiv)+02h
  9011  0560  07A8               	addwf	0+(?___lwdiv)+02h
  9012                           
  9013  0561  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  9014  0566  1283               	bcf	status, 5	;RP0=0, select bank0
  9015  0567  1303               	bcf	status, 6	;RP1=0, select bank0
  9016  0568  0826               	movf	(0+(?___lwdiv)),w
  9017  0569  3E14               	addlw	low(014h)
  9018  056A  1683               	bsf	status, 5	;RP0=1, select bank1
  9019  056B  1303               	bcf	status, 6	;RP1=0, select bank1
  9020  056C  00B8               	movwf	(_IRdistance)^080h	;volatile
  9021  056D  1283               	bcf	status, 5	;RP0=0, select bank0
  9022  056E  1303               	bcf	status, 6	;RP1=0, select bank0
  9023  056F  0827               	movf	(1+(?___lwdiv)),w
  9024  0570  1803               	skipnc
  9025  0571  3E01               	addlw	1
  9026  0572  3E00               	addlw	high(014h)
  9027  0573  1683               	bsf	status, 5	;RP0=1, select bank1
  9028  0574  1303               	bcf	status, 6	;RP1=0, select bank1
  9029  0575  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9030                           	line	102
  9031                           ;infrared.c: 102: }
  9032  0576  2EFE               	goto	l3052
  9033                           	line	103
  9034                           	
  9035  0577                     l3041:	
  9036                           	
  9037  0577                     l11243:	
  9038                           ;infrared.c: 103: else if (adcVal >= 128 && adcVal < 170)
  9039  0577  3000               	movlw	high(080h)
  9040  0578  1283               	bcf	status, 5	;RP0=0, select bank0
  9041  0579  026D               	subwf	(_adcVal+1),w	;volatile
  9042  057A  3080               	movlw	low(080h)
  9043  057B  1903               	skipnz
  9044  057C  026C               	subwf	(_adcVal),w	;volatile
  9045  057D  1C03               	skipc
  9046  057E  2D80               	goto	u4701
  9047  057F  2D81               	goto	u4700
  9048  0580                     u4701:
  9049  0580  2DC4               	goto	l11249
  9050  0581                     u4700:
  9051                           	
  9052  0581                     l11245:	
  9053  0581  3000               	movlw	high(0AAh)
  9054  0582  026D               	subwf	(_adcVal+1),w	;volatile
  9055  0583  30AA               	movlw	low(0AAh)
  9056  0584  1903               	skipnz
  9057  0585  026C               	subwf	(_adcVal),w	;volatile
  9058  0586  1803               	skipnc
  9059  0587  2D89               	goto	u4711
  9060  0588  2D8A               	goto	u4710
  9061  0589                     u4711:
  9062  0589  2DC4               	goto	l11249
  9063  058A                     u4710:
  9064                           	line	105
  9065                           	
  9066  058A                     l11247:	
  9067                           ;infrared.c: 104: {
  9068                           ;infrared.c: 105: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  9069  058A  302A               	movlw	low(02Ah)
  9070  058B  00A6               	movwf	(?___lwdiv)
  9071  058C  3000               	movlw	high(02Ah)
  9072  058D  00A7               	movwf	((?___lwdiv))+1
  9073  058E  096C               	comf	(_adcVal),w	;volatile
  9074  058F  00AE               	movwf	(??_ADCconvert+0)+0
  9075  0590  096D               	comf	(_adcVal+1),w	;volatile
  9076  0591  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9077  0592  0AAE               	incf	(??_ADCconvert+0)+0,f
  9078  0593  1903               	skipnz
  9079  0594  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9080  0595  082E               	movf	0+(??_ADCconvert+0)+0,w
  9081  0596  3EAA               	addlw	low(0AAh)
  9082  0597  00A0               	movwf	(?___wmul)
  9083  0598  082F               	movf	1+(??_ADCconvert+0)+0,w
  9084  0599  1803               	skipnc
  9085  059A  3E01               	addlw	1
  9086  059B  3E00               	addlw	high(0AAh)
  9087  059C  00A1               	movwf	1+(?___wmul)
  9088  059D  300A               	movlw	low(0Ah)
  9089  059E  00A2               	movwf	0+(?___wmul)+02h
  9090  059F  3000               	movlw	high(0Ah)
  9091  05A0  00A3               	movwf	(0+(?___wmul)+02h)+1
  9092  05A1  160A  118A  214E   	fcall	___wmul
              120A  118A         
  9093  05A6  1283               	bcf	status, 5	;RP0=0, select bank0
  9094  05A7  1303               	bcf	status, 6	;RP1=0, select bank0
  9095  05A8  0821               	movf	(1+(?___wmul)),w
  9096  05A9  01A9               	clrf	1+(?___lwdiv)+02h
  9097  05AA  07A9               	addwf	1+(?___lwdiv)+02h
  9098  05AB  0820               	movf	(0+(?___wmul)),w
  9099  05AC  01A8               	clrf	0+(?___lwdiv)+02h
  9100  05AD  07A8               	addwf	0+(?___lwdiv)+02h
  9101                           
  9102  05AE  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  9103  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  9104  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  9105  05B5  0826               	movf	(0+(?___lwdiv)),w
  9106  05B6  3E1E               	addlw	low(01Eh)
  9107  05B7  1683               	bsf	status, 5	;RP0=1, select bank1
  9108  05B8  1303               	bcf	status, 6	;RP1=0, select bank1
  9109  05B9  00B8               	movwf	(_IRdistance)^080h	;volatile
  9110  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  9111  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
  9112  05BC  0827               	movf	(1+(?___lwdiv)),w
  9113  05BD  1803               	skipnc
  9114  05BE  3E01               	addlw	1
  9115  05BF  3E00               	addlw	high(01Eh)
  9116  05C0  1683               	bsf	status, 5	;RP0=1, select bank1
  9117  05C1  1303               	bcf	status, 6	;RP1=0, select bank1
  9118  05C2  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9119                           	line	106
  9120                           ;infrared.c: 106: }
  9121  05C3  2EFE               	goto	l3052
  9122                           	line	107
  9123                           	
  9124  05C4                     l3043:	
  9125                           	
  9126  05C4                     l11249:	
  9127                           ;infrared.c: 107: else if (adcVal >= 107 && adcVal < 128)
  9128  05C4  3000               	movlw	high(06Bh)
  9129  05C5  1283               	bcf	status, 5	;RP0=0, select bank0
  9130  05C6  026D               	subwf	(_adcVal+1),w	;volatile
  9131  05C7  306B               	movlw	low(06Bh)
  9132  05C8  1903               	skipnz
  9133  05C9  026C               	subwf	(_adcVal),w	;volatile
  9134  05CA  1C03               	skipc
  9135  05CB  2DCD               	goto	u4721
  9136  05CC  2DCE               	goto	u4720
  9137  05CD                     u4721:
  9138  05CD  2E11               	goto	l11255
  9139  05CE                     u4720:
  9140                           	
  9141  05CE                     l11251:	
  9142  05CE  3000               	movlw	high(080h)
  9143  05CF  026D               	subwf	(_adcVal+1),w	;volatile
  9144  05D0  3080               	movlw	low(080h)
  9145  05D1  1903               	skipnz
  9146  05D2  026C               	subwf	(_adcVal),w	;volatile
  9147  05D3  1803               	skipnc
  9148  05D4  2DD6               	goto	u4731
  9149  05D5  2DD7               	goto	u4730
  9150  05D6                     u4731:
  9151  05D6  2E11               	goto	l11255
  9152  05D7                     u4730:
  9153                           	line	109
  9154                           	
  9155  05D7                     l11253:	
  9156                           ;infrared.c: 108: {
  9157                           ;infrared.c: 109: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  9158  05D7  3015               	movlw	low(015h)
  9159  05D8  00A6               	movwf	(?___lwdiv)
  9160  05D9  3000               	movlw	high(015h)
  9161  05DA  00A7               	movwf	((?___lwdiv))+1
  9162  05DB  096C               	comf	(_adcVal),w	;volatile
  9163  05DC  00AE               	movwf	(??_ADCconvert+0)+0
  9164  05DD  096D               	comf	(_adcVal+1),w	;volatile
  9165  05DE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9166  05DF  0AAE               	incf	(??_ADCconvert+0)+0,f
  9167  05E0  1903               	skipnz
  9168  05E1  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9169  05E2  082E               	movf	0+(??_ADCconvert+0)+0,w
  9170  05E3  3E80               	addlw	low(080h)
  9171  05E4  00A0               	movwf	(?___wmul)
  9172  05E5  082F               	movf	1+(??_ADCconvert+0)+0,w
  9173  05E6  1803               	skipnc
  9174  05E7  3E01               	addlw	1
  9175  05E8  3E00               	addlw	high(080h)
  9176  05E9  00A1               	movwf	1+(?___wmul)
  9177  05EA  300A               	movlw	low(0Ah)
  9178  05EB  00A2               	movwf	0+(?___wmul)+02h
  9179  05EC  3000               	movlw	high(0Ah)
  9180  05ED  00A3               	movwf	(0+(?___wmul)+02h)+1
  9181  05EE  160A  118A  214E   	fcall	___wmul
              120A  118A         
  9182  05F3  1283               	bcf	status, 5	;RP0=0, select bank0
  9183  05F4  1303               	bcf	status, 6	;RP1=0, select bank0
  9184  05F5  0821               	movf	(1+(?___wmul)),w
  9185  05F6  01A9               	clrf	1+(?___lwdiv)+02h
  9186  05F7  07A9               	addwf	1+(?___lwdiv)+02h
  9187  05F8  0820               	movf	(0+(?___wmul)),w
  9188  05F9  01A8               	clrf	0+(?___lwdiv)+02h
  9189  05FA  07A8               	addwf	0+(?___lwdiv)+02h
  9190                           
  9191  05FB  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  9192  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  9193  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  9194  0602  0826               	movf	(0+(?___lwdiv)),w
  9195  0603  3E28               	addlw	low(028h)
  9196  0604  1683               	bsf	status, 5	;RP0=1, select bank1
  9197  0605  1303               	bcf	status, 6	;RP1=0, select bank1
  9198  0606  00B8               	movwf	(_IRdistance)^080h	;volatile
  9199  0607  1283               	bcf	status, 5	;RP0=0, select bank0
  9200  0608  1303               	bcf	status, 6	;RP1=0, select bank0
  9201  0609  0827               	movf	(1+(?___lwdiv)),w
  9202  060A  1803               	skipnc
  9203  060B  3E01               	addlw	1
  9204  060C  3E00               	addlw	high(028h)
  9205  060D  1683               	bsf	status, 5	;RP0=1, select bank1
  9206  060E  1303               	bcf	status, 6	;RP1=0, select bank1
  9207  060F  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9208                           	line	110
  9209                           ;infrared.c: 110: }
  9210  0610  2EFE               	goto	l3052
  9211                           	line	111
  9212                           	
  9213  0611                     l3045:	
  9214                           	
  9215  0611                     l11255:	
  9216                           ;infrared.c: 111: else if (adcVal >= 77 && adcVal < 107)
  9217  0611  3000               	movlw	high(04Dh)
  9218  0612  1283               	bcf	status, 5	;RP0=0, select bank0
  9219  0613  026D               	subwf	(_adcVal+1),w	;volatile
  9220  0614  304D               	movlw	low(04Dh)
  9221  0615  1903               	skipnz
  9222  0616  026C               	subwf	(_adcVal),w	;volatile
  9223  0617  1C03               	skipc
  9224  0618  2E1A               	goto	u4741
  9225  0619  2E1B               	goto	u4740
  9226  061A                     u4741:
  9227  061A  2E5E               	goto	l11261
  9228  061B                     u4740:
  9229                           	
  9230  061B                     l11257:	
  9231  061B  3000               	movlw	high(06Bh)
  9232  061C  026D               	subwf	(_adcVal+1),w	;volatile
  9233  061D  306B               	movlw	low(06Bh)
  9234  061E  1903               	skipnz
  9235  061F  026C               	subwf	(_adcVal),w	;volatile
  9236  0620  1803               	skipnc
  9237  0621  2E23               	goto	u4751
  9238  0622  2E24               	goto	u4750
  9239  0623                     u4751:
  9240  0623  2E5E               	goto	l11261
  9241  0624                     u4750:
  9242                           	line	113
  9243                           	
  9244  0624                     l11259:	
  9245                           ;infrared.c: 112: {
  9246                           ;infrared.c: 113: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  9247  0624  301E               	movlw	low(01Eh)
  9248  0625  00A6               	movwf	(?___lwdiv)
  9249  0626  3000               	movlw	high(01Eh)
  9250  0627  00A7               	movwf	((?___lwdiv))+1
  9251  0628  096C               	comf	(_adcVal),w	;volatile
  9252  0629  00AE               	movwf	(??_ADCconvert+0)+0
  9253  062A  096D               	comf	(_adcVal+1),w	;volatile
  9254  062B  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9255  062C  0AAE               	incf	(??_ADCconvert+0)+0,f
  9256  062D  1903               	skipnz
  9257  062E  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9258  062F  082E               	movf	0+(??_ADCconvert+0)+0,w
  9259  0630  3E6B               	addlw	low(06Bh)
  9260  0631  00A0               	movwf	(?___wmul)
  9261  0632  082F               	movf	1+(??_ADCconvert+0)+0,w
  9262  0633  1803               	skipnc
  9263  0634  3E01               	addlw	1
  9264  0635  3E00               	addlw	high(06Bh)
  9265  0636  00A1               	movwf	1+(?___wmul)
  9266  0637  300A               	movlw	low(0Ah)
  9267  0638  00A2               	movwf	0+(?___wmul)+02h
  9268  0639  3000               	movlw	high(0Ah)
  9269  063A  00A3               	movwf	(0+(?___wmul)+02h)+1
  9270  063B  160A  118A  214E   	fcall	___wmul
              120A  118A         
  9271  0640  1283               	bcf	status, 5	;RP0=0, select bank0
  9272  0641  1303               	bcf	status, 6	;RP1=0, select bank0
  9273  0642  0821               	movf	(1+(?___wmul)),w
  9274  0643  01A9               	clrf	1+(?___lwdiv)+02h
  9275  0644  07A9               	addwf	1+(?___lwdiv)+02h
  9276  0645  0820               	movf	(0+(?___wmul)),w
  9277  0646  01A8               	clrf	0+(?___lwdiv)+02h
  9278  0647  07A8               	addwf	0+(?___lwdiv)+02h
  9279                           
  9280  0648  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  9281  064D  1283               	bcf	status, 5	;RP0=0, select bank0
  9282  064E  1303               	bcf	status, 6	;RP1=0, select bank0
  9283  064F  0826               	movf	(0+(?___lwdiv)),w
  9284  0650  3E32               	addlw	low(032h)
  9285  0651  1683               	bsf	status, 5	;RP0=1, select bank1
  9286  0652  1303               	bcf	status, 6	;RP1=0, select bank1
  9287  0653  00B8               	movwf	(_IRdistance)^080h	;volatile
  9288  0654  1283               	bcf	status, 5	;RP0=0, select bank0
  9289  0655  1303               	bcf	status, 6	;RP1=0, select bank0
  9290  0656  0827               	movf	(1+(?___lwdiv)),w
  9291  0657  1803               	skipnc
  9292  0658  3E01               	addlw	1
  9293  0659  3E00               	addlw	high(032h)
  9294  065A  1683               	bsf	status, 5	;RP0=1, select bank1
  9295  065B  1303               	bcf	status, 6	;RP1=0, select bank1
  9296  065C  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9297                           	line	114
  9298                           ;infrared.c: 114: }
  9299  065D  2EFE               	goto	l3052
  9300                           	line	115
  9301                           	
  9302  065E                     l3047:	
  9303                           	
  9304  065E                     l11261:	
  9305                           ;infrared.c: 115: else if (adcVal >= 56 && adcVal < 77)
  9306  065E  3000               	movlw	high(038h)
  9307  065F  1283               	bcf	status, 5	;RP0=0, select bank0
  9308  0660  026D               	subwf	(_adcVal+1),w	;volatile
  9309  0661  3038               	movlw	low(038h)
  9310  0662  1903               	skipnz
  9311  0663  026C               	subwf	(_adcVal),w	;volatile
  9312  0664  1C03               	skipc
  9313  0665  2E67               	goto	u4761
  9314  0666  2E68               	goto	u4760
  9315  0667                     u4761:
  9316  0667  2EAB               	goto	l11267
  9317  0668                     u4760:
  9318                           	
  9319  0668                     l11263:	
  9320  0668  3000               	movlw	high(04Dh)
  9321  0669  026D               	subwf	(_adcVal+1),w	;volatile
  9322  066A  304D               	movlw	low(04Dh)
  9323  066B  1903               	skipnz
  9324  066C  026C               	subwf	(_adcVal),w	;volatile
  9325  066D  1803               	skipnc
  9326  066E  2E70               	goto	u4771
  9327  066F  2E71               	goto	u4770
  9328  0670                     u4771:
  9329  0670  2EAB               	goto	l11267
  9330  0671                     u4770:
  9331                           	line	117
  9332                           	
  9333  0671                     l11265:	
  9334                           ;infrared.c: 116: {
  9335                           ;infrared.c: 117: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  9336  0671  3015               	movlw	low(015h)
  9337  0672  00A6               	movwf	(?___lwdiv)
  9338  0673  3000               	movlw	high(015h)
  9339  0674  00A7               	movwf	((?___lwdiv))+1
  9340  0675  096C               	comf	(_adcVal),w	;volatile
  9341  0676  00AE               	movwf	(??_ADCconvert+0)+0
  9342  0677  096D               	comf	(_adcVal+1),w	;volatile
  9343  0678  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9344  0679  0AAE               	incf	(??_ADCconvert+0)+0,f
  9345  067A  1903               	skipnz
  9346  067B  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9347  067C  082E               	movf	0+(??_ADCconvert+0)+0,w
  9348  067D  3E4D               	addlw	low(04Dh)
  9349  067E  00A0               	movwf	(?___wmul)
  9350  067F  082F               	movf	1+(??_ADCconvert+0)+0,w
  9351  0680  1803               	skipnc
  9352  0681  3E01               	addlw	1
  9353  0682  3E00               	addlw	high(04Dh)
  9354  0683  00A1               	movwf	1+(?___wmul)
  9355  0684  300A               	movlw	low(0Ah)
  9356  0685  00A2               	movwf	0+(?___wmul)+02h
  9357  0686  3000               	movlw	high(0Ah)
  9358  0687  00A3               	movwf	(0+(?___wmul)+02h)+1
  9359  0688  160A  118A  214E   	fcall	___wmul
              120A  118A         
  9360  068D  1283               	bcf	status, 5	;RP0=0, select bank0
  9361  068E  1303               	bcf	status, 6	;RP1=0, select bank0
  9362  068F  0821               	movf	(1+(?___wmul)),w
  9363  0690  01A9               	clrf	1+(?___lwdiv)+02h
  9364  0691  07A9               	addwf	1+(?___lwdiv)+02h
  9365  0692  0820               	movf	(0+(?___wmul)),w
  9366  0693  01A8               	clrf	0+(?___lwdiv)+02h
  9367  0694  07A8               	addwf	0+(?___lwdiv)+02h
  9368                           
  9369  0695  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  9370  069A  1283               	bcf	status, 5	;RP0=0, select bank0
  9371  069B  1303               	bcf	status, 6	;RP1=0, select bank0
  9372  069C  0826               	movf	(0+(?___lwdiv)),w
  9373  069D  3E3C               	addlw	low(03Ch)
  9374  069E  1683               	bsf	status, 5	;RP0=1, select bank1
  9375  069F  1303               	bcf	status, 6	;RP1=0, select bank1
  9376  06A0  00B8               	movwf	(_IRdistance)^080h	;volatile
  9377  06A1  1283               	bcf	status, 5	;RP0=0, select bank0
  9378  06A2  1303               	bcf	status, 6	;RP1=0, select bank0
  9379  06A3  0827               	movf	(1+(?___lwdiv)),w
  9380  06A4  1803               	skipnc
  9381  06A5  3E01               	addlw	1
  9382  06A6  3E00               	addlw	high(03Ch)
  9383  06A7  1683               	bsf	status, 5	;RP0=1, select bank1
  9384  06A8  1303               	bcf	status, 6	;RP1=0, select bank1
  9385  06A9  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9386                           	line	118
  9387                           ;infrared.c: 118: }
  9388  06AA  2EFE               	goto	l3052
  9389                           	line	119
  9390                           	
  9391  06AB                     l3049:	
  9392                           	
  9393  06AB                     l11267:	
  9394                           ;infrared.c: 119: else if (adcVal >= 43 && adcVal < 56)
  9395  06AB  3000               	movlw	high(02Bh)
  9396  06AC  1283               	bcf	status, 5	;RP0=0, select bank0
  9397  06AD  026D               	subwf	(_adcVal+1),w	;volatile
  9398  06AE  302B               	movlw	low(02Bh)
  9399  06AF  1903               	skipnz
  9400  06B0  026C               	subwf	(_adcVal),w	;volatile
  9401  06B1  1C03               	skipc
  9402  06B2  2EB4               	goto	u4781
  9403  06B3  2EB5               	goto	u4780
  9404  06B4                     u4781:
  9405  06B4  2EFE               	goto	l3052
  9406  06B5                     u4780:
  9407                           	
  9408  06B5                     l11269:	
  9409  06B5  3000               	movlw	high(038h)
  9410  06B6  026D               	subwf	(_adcVal+1),w	;volatile
  9411  06B7  3038               	movlw	low(038h)
  9412  06B8  1903               	skipnz
  9413  06B9  026C               	subwf	(_adcVal),w	;volatile
  9414  06BA  1803               	skipnc
  9415  06BB  2EBD               	goto	u4791
  9416  06BC  2EBE               	goto	u4790
  9417  06BD                     u4791:
  9418  06BD  2EFE               	goto	l3052
  9419  06BE                     u4790:
  9420                           	line	121
  9421                           	
  9422  06BE                     l11271:	
  9423                           ;infrared.c: 120: {
  9424                           ;infrared.c: 121: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  9425  06BE  300D               	movlw	low(0Dh)
  9426  06BF  00A6               	movwf	(?___lwdiv)
  9427  06C0  3000               	movlw	high(0Dh)
  9428  06C1  00A7               	movwf	((?___lwdiv))+1
  9429  06C2  096C               	comf	(_adcVal),w	;volatile
  9430  06C3  00AE               	movwf	(??_ADCconvert+0)+0
  9431  06C4  096D               	comf	(_adcVal+1),w	;volatile
  9432  06C5  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9433  06C6  0AAE               	incf	(??_ADCconvert+0)+0,f
  9434  06C7  1903               	skipnz
  9435  06C8  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9436  06C9  082E               	movf	0+(??_ADCconvert+0)+0,w
  9437  06CA  3E38               	addlw	low(038h)
  9438  06CB  00A0               	movwf	(?___wmul)
  9439  06CC  082F               	movf	1+(??_ADCconvert+0)+0,w
  9440  06CD  1803               	skipnc
  9441  06CE  3E01               	addlw	1
  9442  06CF  3E00               	addlw	high(038h)
  9443  06D0  00A1               	movwf	1+(?___wmul)
  9444  06D1  300A               	movlw	low(0Ah)
  9445  06D2  00A2               	movwf	0+(?___wmul)+02h
  9446  06D3  3000               	movlw	high(0Ah)
  9447  06D4  00A3               	movwf	(0+(?___wmul)+02h)+1
  9448  06D5  160A  118A  214E   	fcall	___wmul
              120A  118A         
  9449  06DA  1283               	bcf	status, 5	;RP0=0, select bank0
  9450  06DB  1303               	bcf	status, 6	;RP1=0, select bank0
  9451  06DC  0821               	movf	(1+(?___wmul)),w
  9452  06DD  01A9               	clrf	1+(?___lwdiv)+02h
  9453  06DE  07A9               	addwf	1+(?___lwdiv)+02h
  9454  06DF  0820               	movf	(0+(?___wmul)),w
  9455  06E0  01A8               	clrf	0+(?___lwdiv)+02h
  9456  06E1  07A8               	addwf	0+(?___lwdiv)+02h
  9457                           
  9458  06E2  160A  118A  23EA   	fcall	___lwdiv
              120A  118A         
  9459  06E7  1283               	bcf	status, 5	;RP0=0, select bank0
  9460  06E8  1303               	bcf	status, 6	;RP1=0, select bank0
  9461  06E9  0826               	movf	(0+(?___lwdiv)),w
  9462  06EA  3E46               	addlw	low(046h)
  9463  06EB  1683               	bsf	status, 5	;RP0=1, select bank1
  9464  06EC  1303               	bcf	status, 6	;RP1=0, select bank1
  9465  06ED  00B8               	movwf	(_IRdistance)^080h	;volatile
  9466  06EE  1283               	bcf	status, 5	;RP0=0, select bank0
  9467  06EF  1303               	bcf	status, 6	;RP1=0, select bank0
  9468  06F0  0827               	movf	(1+(?___lwdiv)),w
  9469  06F1  1803               	skipnc
  9470  06F2  3E01               	addlw	1
  9471  06F3  3E00               	addlw	high(046h)
  9472  06F4  1683               	bsf	status, 5	;RP0=1, select bank1
  9473  06F5  1303               	bcf	status, 6	;RP1=0, select bank1
  9474  06F6  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9475  06F7  2EFE               	goto	l3052
  9476                           	line	122
  9477                           	
  9478  06F8                     l3051:	
  9479  06F8  2EFE               	goto	l3052
  9480                           	line	123
  9481                           	
  9482  06F9                     l3050:	
  9483  06F9  2EFE               	goto	l3052
  9484                           	
  9485  06FA                     l3048:	
  9486  06FA  2EFE               	goto	l3052
  9487                           	
  9488  06FB                     l3046:	
  9489  06FB  2EFE               	goto	l3052
  9490                           	
  9491  06FC                     l3044:	
  9492  06FC  2EFE               	goto	l3052
  9493                           	
  9494  06FD                     l3042:	
  9495  06FD  2EFE               	goto	l3052
  9496                           	
  9497  06FE                     l3040:	
  9498                           	
  9499  06FE                     l3052:	
  9500  06FE  0008               	return
  9501                           	opt stack 0
  9502                           GLOBAL	__end_of_ADCconvert
  9503  06FF                     	__end_of_ADCconvert:
  9504 ;; =============== function _ADCconvert ends ============
  9505                           
  9506                           	signat	_ADCconvert,88
  9507                           	global	_rotate
  9508                           psect	text1083,local,class=CODE,delta=2
  9509                           global __ptext1083
  9510  143A                     __ptext1083:
  9511                           
  9512 ;; *************** function _rotate *****************
  9513 ;; Defined at:
  9514 ;;		line 67 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  numsteps        2    3[BANK0 ] unsigned int 
  9517 ;;  direction       1    5[BANK0 ] unsigned char 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  i               2    8[BANK0 ] unsigned int 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;		None               void
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, pclath, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9529 ;;      Params:         0       3       0       0       0
  9530 ;;      Locals:         0       2       0       0       0
  9531 ;;      Temps:          0       2       0       0       0
  9532 ;;      Totals:         0       7       0       0       0
  9533 ;;Total ram usage:        7 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    4
  9536 ;; This function calls:
  9537 ;;		_spi_transfer
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;;		_Init_Follow_IR
  9541 ;;		_calibrateIR
  9542 ;;		_robotFollow
  9543 ;;		_RightTurn
  9544 ;;		_scan360
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           psect	text1083
  9548                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9549                           	line	67
  9550                           	global	__size_of_rotate
  9551  0067                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  9552                           	
  9553  143A                     _rotate:	
  9554                           	opt	stack 3
  9555                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  9556                           	line	69
  9557                           	
  9558  143A                     l11199:	
  9559                           ;steppermotor.c: 69: RC0 = 1; RC1 = 1;;
  9560  143A  1283               	bcf	status, 5	;RP0=0, select bank0
  9561  143B  1303               	bcf	status, 6	;RP1=0, select bank0
  9562  143C  1407               	bsf	(56/8),(56)&7
  9563  143D  1487               	bsf	(57/8),(57)&7
  9564                           	line	70
  9565                           	
  9566  143E                     l11201:	
  9567                           ;steppermotor.c: 70: if (direction == 0)
  9568  143E  08A5               	movf	(rotate@direction),f
  9569  143F  1D03               	skipz
  9570  1440  2C42               	goto	u4631
  9571  1441  2C43               	goto	u4630
  9572  1442                     u4631:
  9573  1442  2C4A               	goto	l11205
  9574  1443                     u4630:
  9575                           	line	71
  9576                           	
  9577  1443                     l11203:	
  9578                           ;steppermotor.c: 71: spi_transfer(0b00001011);
  9579  1443  300B               	movlw	(0Bh)
  9580  1444  160A  158A  27C2   	fcall	_spi_transfer
              160A  118A         
  9581  1449  2C51               	goto	l11207
  9582                           	line	72
  9583                           	
  9584  144A                     l3755:	
  9585                           	line	73
  9586                           	
  9587  144A                     l11205:	
  9588                           ;steppermotor.c: 72: else
  9589                           ;steppermotor.c: 73: spi_transfer(0b00001001);
  9590  144A  3009               	movlw	(09h)
  9591  144B  160A  158A  27C2   	fcall	_spi_transfer
              160A  118A         
  9592  1450  2C51               	goto	l11207
  9593                           	
  9594  1451                     l3756:	
  9595                           	line	74
  9596                           	
  9597  1451                     l11207:	
  9598                           ;steppermotor.c: 74: RC0 = 0; RC1 = 0;;
  9599  1451  1283               	bcf	status, 5	;RP0=0, select bank0
  9600  1452  1303               	bcf	status, 6	;RP1=0, select bank0
  9601  1453  1007               	bcf	(56/8),(56)&7
  9602                           	
  9603  1454                     l11209:	
  9604  1454  1087               	bcf	(57/8),(57)&7
  9605                           	line	75
  9606                           	
  9607  1455                     l11211:	
  9608                           ;steppermotor.c: 75: for (unsigned int i = 0; i < numsteps; i++)
  9609  1455  01A8               	clrf	(rotate@i)
  9610  1456  01A9               	clrf	(rotate@i+1)
  9611  1457  2C85               	goto	l3757
  9612                           	line	76
  9613                           	
  9614  1458                     l3758:	
  9615                           	line	77
  9616                           ;steppermotor.c: 76: {
  9617                           ;steppermotor.c: 77: RC2 = 1; _nop(); RC2 = 0;;
  9618  1458  1507               	bsf	(58/8),(58)&7
  9619  1459  0000               	nop
  9620  145A  1283               	bcf	status, 5	;RP0=0, select bank0
  9621  145B  1303               	bcf	status, 6	;RP1=0, select bank0
  9622  145C  1107               	bcf	(58/8),(58)&7
  9623                           	line	78
  9624                           	
  9625  145D                     l11213:	
  9626                           ;steppermotor.c: 78: if (direction)
  9627  145D  0825               	movf	(rotate@direction),w
  9628  145E  1D03               	skipz
  9629  145F  2C61               	goto	u4640
  9630  1460  2C6A               	goto	l11217
  9631  1461                     u4640:
  9632                           	line	79
  9633                           	
  9634  1461                     l11215:	
  9635                           ;steppermotor.c: 79: totalSteps++;
  9636  1461  3001               	movlw	low(01h)
  9637  1462  1683               	bsf	status, 5	;RP0=1, select bank1
  9638  1463  1303               	bcf	status, 6	;RP1=0, select bank1
  9639  1464  07CA               	addwf	(_totalSteps)^080h,f
  9640  1465  1803               	skipnc
  9641  1466  0ACB               	incf	(_totalSteps+1)^080h,f
  9642  1467  3000               	movlw	high(01h)
  9643  1468  07CB               	addwf	(_totalSteps+1)^080h,f
  9644  1469  2C72               	goto	l3760
  9645                           	line	80
  9646                           	
  9647  146A                     l3759:	
  9648                           	line	81
  9649                           	
  9650  146A                     l11217:	
  9651                           ;steppermotor.c: 80: else
  9652                           ;steppermotor.c: 81: totalSteps--;
  9653  146A  30FF               	movlw	low(-1)
  9654  146B  1683               	bsf	status, 5	;RP0=1, select bank1
  9655  146C  1303               	bcf	status, 6	;RP1=0, select bank1
  9656  146D  07CA               	addwf	(_totalSteps)^080h,f
  9657  146E  1803               	skipnc
  9658  146F  0ACB               	incf	(_totalSteps+1)^080h,f
  9659  1470  30FF               	movlw	high(-1)
  9660  1471  07CB               	addwf	(_totalSteps+1)^080h,f
  9661                           	
  9662  1472                     l3760:	
  9663                           	line	82
  9664                           ;steppermotor.c: 82: _delay((unsigned long)((15)*(20000000/4000.0)));
  9665                           	opt asmopt_off
  9666  1472  3062               movlw	98
  9667  1473  1283               	bcf	status, 5	;RP0=0, select bank0
  9668  1474  1303               	bcf	status, 6	;RP1=0, select bank0
  9669  1475  00A7               movwf	((??_rotate+0)+0+1),f
  9670  1476  3065               	movlw	101
  9671  1477  00A6               movwf	((??_rotate+0)+0),f
  9672  1478                     u5457:
  9673  1478  0BA6               	decfsz	((??_rotate+0)+0),f
  9674  1479  2C78               	goto	u5457
  9675  147A  0BA7               	decfsz	((??_rotate+0)+0+1),f
  9676  147B  2C78               	goto	u5457
  9677  147C  2C7D               	nop2
  9678                           opt asmopt_on
  9679                           
  9680                           	line	75
  9681  147D  3001               	movlw	low(01h)
  9682  147E  1283               	bcf	status, 5	;RP0=0, select bank0
  9683  147F  1303               	bcf	status, 6	;RP1=0, select bank0
  9684  1480  07A8               	addwf	(rotate@i),f
  9685  1481  1803               	skipnc
  9686  1482  0AA9               	incf	(rotate@i+1),f
  9687  1483  3000               	movlw	high(01h)
  9688  1484  07A9               	addwf	(rotate@i+1),f
  9689                           	
  9690  1485                     l3757:	
  9691  1485  0824               	movf	(rotate@numsteps+1),w
  9692  1486  0229               	subwf	(rotate@i+1),w
  9693  1487  1D03               	skipz
  9694  1488  2C8B               	goto	u4655
  9695  1489  0823               	movf	(rotate@numsteps),w
  9696  148A  0228               	subwf	(rotate@i),w
  9697  148B                     u4655:
  9698  148B  1C03               	skipc
  9699  148C  2C8E               	goto	u4651
  9700  148D  2C8F               	goto	u4650
  9701  148E                     u4651:
  9702  148E  2C58               	goto	l3758
  9703  148F                     u4650:
  9704                           	
  9705  148F                     l3761:	
  9706                           	line	84
  9707                           ;steppermotor.c: 83: }
  9708                           ;steppermotor.c: 84: RC0 = 1; RC1 = 1;;
  9709  148F  1407               	bsf	(56/8),(56)&7
  9710  1490  1487               	bsf	(57/8),(57)&7
  9711                           	line	85
  9712                           	
  9713  1491                     l11219:	
  9714                           ;steppermotor.c: 85: spi_transfer(0b00000000);
  9715  1491  3000               	movlw	(0)
  9716  1492  160A  158A  27C2   	fcall	_spi_transfer
              160A  118A         
  9717                           	line	86
  9718                           	
  9719  1497                     l11221:	
  9720                           ;steppermotor.c: 86: RC0 = 0; RC1 = 0;;
  9721  1497  1283               	bcf	status, 5	;RP0=0, select bank0
  9722  1498  1303               	bcf	status, 6	;RP1=0, select bank0
  9723  1499  1007               	bcf	(56/8),(56)&7
  9724                           	
  9725  149A                     l11223:	
  9726  149A  1087               	bcf	(57/8),(57)&7
  9727                           	line	87
  9728                           	
  9729  149B                     l11225:	
  9730                           ;steppermotor.c: 87: RC2 = 1; _nop(); RC2 = 0;;
  9731  149B  1507               	bsf	(58/8),(58)&7
  9732                           	
  9733  149C                     l11227:	
  9734  149C  0000               	nop
  9735                           	
  9736  149D                     l11229:	
  9737  149D  1283               	bcf	status, 5	;RP0=0, select bank0
  9738  149E  1303               	bcf	status, 6	;RP1=0, select bank0
  9739  149F  1107               	bcf	(58/8),(58)&7
  9740                           	line	88
  9741                           	
  9742  14A0                     l3762:	
  9743  14A0  0008               	return
  9744                           	opt stack 0
  9745                           GLOBAL	__end_of_rotate
  9746  14A1                     	__end_of_rotate:
  9747 ;; =============== function _rotate ends ============
  9748                           
  9749                           	signat	_rotate,8312
  9750                           	global	_RobotDrive
  9751                           psect	text1084,local,class=CODE,delta=2
  9752                           global __ptext1084
  9753  08C1                     __ptext1084:
  9754                           
  9755 ;; *************** function _RobotDrive *****************
  9756 ;; Defined at:
  9757 ;;		line 116 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  speed           2   15[BANK0 ] int 
  9760 ;;  radius          2   17[BANK0 ] int 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  radiushighBy    1   23[BANK0 ] unsigned char 
  9763 ;;  radiuslowByt    1   22[BANK0 ] unsigned char 
  9764 ;;  speedhighByt    1   21[BANK0 ] unsigned char 
  9765 ;;  speedlowByte    1   20[BANK0 ] unsigned char 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;		None               void
  9768 ;; Registers used:
  9769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9775 ;;      Params:         0       4       0       0       0
  9776 ;;      Locals:         0       4       0       0       0
  9777 ;;      Temps:          0       1       0       0       0
  9778 ;;      Totals:         0       9       0       0       0
  9779 ;;Total ram usage:        9 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    4
  9782 ;; This function calls:
  9783 ;;		_ser_putch
  9784 ;; This function is called by:
  9785 ;;		_main
  9786 ;;		_robotFollow
  9787 ;;		_robot_turnRight
  9788 ;;		_robotMoveSpeed
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           psect	text1084
  9792                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9793                           	line	116
  9794                           	global	__size_of_RobotDrive
  9795  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  9796                           	
  9797  08C1                     _RobotDrive:	
  9798                           	opt	stack 2
  9799                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9800                           	line	118
  9801                           	
  9802  08C1                     l11183:	
  9803                           ;robot.c: 118: unsigned char speedlowByte = (unsigned char)(speed);
  9804  08C1  1283               	bcf	status, 5	;RP0=0, select bank0
  9805  08C2  1303               	bcf	status, 6	;RP1=0, select bank0
  9806  08C3  082F               	movf	(RobotDrive@speed),w
  9807  08C4  00B3               	movwf	(??_RobotDrive+0)+0
  9808  08C5  0833               	movf	(??_RobotDrive+0)+0,w
  9809  08C6  00B4               	movwf	(RobotDrive@speedlowByte)
  9810                           	line	119
  9811                           	
  9812  08C7                     l11185:	
  9813                           ;robot.c: 119: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  9814  08C7  0830               	movf	(RobotDrive@speed+1),w
  9815  08C8  00B3               	movwf	(??_RobotDrive+0)+0
  9816  08C9  0833               	movf	(??_RobotDrive+0)+0,w
  9817  08CA  00B5               	movwf	(RobotDrive@speedhighByte)
  9818                           	line	120
  9819                           	
  9820  08CB                     l11187:	
  9821                           ;robot.c: 120: unsigned char radiuslowByte = (unsigned char)(radius);
  9822  08CB  0831               	movf	(RobotDrive@radius),w
  9823  08CC  00B3               	movwf	(??_RobotDrive+0)+0
  9824  08CD  0833               	movf	(??_RobotDrive+0)+0,w
  9825  08CE  00B6               	movwf	(RobotDrive@radiuslowByte)
  9826                           	line	121
  9827                           ;robot.c: 121: unsigned char radiushighByte = (unsigned char)(radius >> 8);
  9828  08CF  0832               	movf	(RobotDrive@radius+1),w
  9829  08D0  00B3               	movwf	(??_RobotDrive+0)+0
  9830  08D1  0833               	movf	(??_RobotDrive+0)+0,w
  9831  08D2  00B7               	movwf	(RobotDrive@radiushighByte)
  9832                           	line	123
  9833                           	
  9834  08D3                     l11189:	
  9835                           ;robot.c: 123: ser_putch(137);
  9836  08D3  3089               	movlw	(089h)
  9837  08D4  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  9838                           	line	125
  9839                           	
  9840  08D9                     l11191:	
  9841                           ;robot.c: 125: ser_putch(speedhighByte);
  9842  08D9  1283               	bcf	status, 5	;RP0=0, select bank0
  9843  08DA  1303               	bcf	status, 6	;RP1=0, select bank0
  9844  08DB  0835               	movf	(RobotDrive@speedhighByte),w
  9845  08DC  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  9846                           	line	127
  9847                           	
  9848  08E1                     l11193:	
  9849                           ;robot.c: 127: ser_putch(speedlowByte);
  9850  08E1  1283               	bcf	status, 5	;RP0=0, select bank0
  9851  08E2  1303               	bcf	status, 6	;RP1=0, select bank0
  9852  08E3  0834               	movf	(RobotDrive@speedlowByte),w
  9853  08E4  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  9854                           	line	129
  9855                           	
  9856  08E9                     l11195:	
  9857                           ;robot.c: 129: ser_putch(radiushighByte);
  9858  08E9  1283               	bcf	status, 5	;RP0=0, select bank0
  9859  08EA  1303               	bcf	status, 6	;RP1=0, select bank0
  9860  08EB  0837               	movf	(RobotDrive@radiushighByte),w
  9861  08EC  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  9862                           	line	131
  9863                           	
  9864  08F1                     l11197:	
  9865                           ;robot.c: 131: ser_putch(radiuslowByte);
  9866  08F1  1283               	bcf	status, 5	;RP0=0, select bank0
  9867  08F2  1303               	bcf	status, 6	;RP1=0, select bank0
  9868  08F3  0836               	movf	(RobotDrive@radiuslowByte),w
  9869  08F4  160A  118A  21D2   	fcall	_ser_putch
              120A  158A         
  9870                           	line	132
  9871                           	
  9872  08F9                     l6105:	
  9873  08F9  0008               	return
  9874                           	opt stack 0
  9875                           GLOBAL	__end_of_RobotDrive
  9876  08FA                     	__end_of_RobotDrive:
  9877 ;; =============== function _RobotDrive ends ============
  9878                           
  9879                           	signat	_RobotDrive,8312
  9880                           	global	_robotLoadSong
  9881                           psect	text1085,local,class=CODE,delta=2
  9882                           global __ptext1085
  9883  10CD                     __ptext1085:
  9884                           
  9885 ;; *************** function _robotLoadSong *****************
  9886 ;; Defined at:
  9887 ;;		line 473 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;		None
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;		None
  9892 ;; Return value:  Size  Location     Type
  9893 ;;		None               void
  9894 ;; Registers used:
  9895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9901 ;;      Params:         0       0       0       0       0
  9902 ;;      Locals:         0       0       0       0       0
  9903 ;;      Temps:          0       0       0       0       0
  9904 ;;      Totals:         0       0       0       0       0
  9905 ;;Total ram usage:        0 bytes
  9906 ;; Hardware stack levels used:    1
  9907 ;; Hardware stack levels required when called:    4
  9908 ;; This function calls:
  9909 ;;		_ser_putch
  9910 ;; This function is called by:
  9911 ;;		_main
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           psect	text1085
  9915                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9916                           	line	473
  9917                           	global	__size_of_robotLoadSong
  9918  002B                     	__size_of_robotLoadSong	equ	__end_of_robotLoadSong-_robotLoadSong
  9919                           	
  9920  10CD                     _robotLoadSong:	
  9921                           	opt	stack 3
  9922                           ; Regs used in _robotLoadSong: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9923                           	line	474
  9924                           	
  9925  10CD                     l11181:	
  9926                           ;robot.c: 474: ser_putch(140);
  9927  10CD  308C               	movlw	(08Ch)
  9928  10CE  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9929                           	line	475
  9930                           ;robot.c: 475: ser_putch(0);
  9931  10D3  3000               	movlw	(0)
  9932  10D4  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9933                           	line	476
  9934                           ;robot.c: 476: ser_putch(2);
  9935  10D9  3002               	movlw	(02h)
  9936  10DA  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9937                           	line	477
  9938                           ;robot.c: 477: ser_putch(72);
  9939  10DF  3048               	movlw	(048h)
  9940  10E0  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9941                           	line	478
  9942                           ;robot.c: 478: ser_putch(16);
  9943  10E5  3010               	movlw	(010h)
  9944  10E6  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9945                           	line	479
  9946                           ;robot.c: 479: ser_putch(84);
  9947  10EB  3054               	movlw	(054h)
  9948  10EC  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9949                           	line	480
  9950                           ;robot.c: 480: ser_putch(16);
  9951  10F1  3010               	movlw	(010h)
  9952  10F2  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
  9953                           	line	481
  9954                           	
  9955  10F7                     l6188:	
  9956  10F7  0008               	return
  9957                           	opt stack 0
  9958                           GLOBAL	__end_of_robotLoadSong
  9959  10F8                     	__end_of_robotLoadSong:
  9960 ;; =============== function _robotLoadSong ends ============
  9961                           
  9962                           	signat	_robotLoadSong,88
  9963                           	global	_robo_init
  9964                           psect	text1086,local,class=CODE,delta=2
  9965                           global __ptext1086
  9966  1040                     __ptext1086:
  9967                           
  9968 ;; *************** function _robo_init *****************
  9969 ;; Defined at:
  9970 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;		None
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;		None
  9975 ;; Return value:  Size  Location     Type
  9976 ;;		None               void
  9977 ;; Registers used:
  9978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9984 ;;      Params:         0       0       0       0       0
  9985 ;;      Locals:         0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0
  9987 ;;      Totals:         0       0       0       0       0
  9988 ;;Total ram usage:        0 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    4
  9991 ;; This function calls:
  9992 ;;		_ser_putch
  9993 ;; This function is called by:
  9994 ;;		_init
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           psect	text1086
  9998                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9999                           	line	42
 10000                           	global	__size_of_robo_init
 10001  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
 10002                           	
 10003  1040                     _robo_init:	
 10004                           	opt	stack 2
 10005                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10006                           	line	43
 10007                           	
 10008  1040                     l11179:	
 10009                           ;robot.c: 43: ser_putch(128);
 10010  1040  3080               	movlw	(080h)
 10011  1041  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
 10012                           	line	44
 10013                           ;robot.c: 44: ser_putch(132);
 10014  1046  3084               	movlw	(084h)
 10015  1047  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
 10016                           	line	45
 10017                           ;robot.c: 45: ser_putch(150);
 10018  104C  3096               	movlw	(096h)
 10019  104D  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
 10020                           	line	46
 10021                           ;robot.c: 46: ser_putch(0);
 10022  1052  3000               	movlw	(0)
 10023  1053  160A  118A  21D2   	fcall	_ser_putch
              160A  118A         
 10024                           	line	47
 10025                           	
 10026  1058                     l6092:	
 10027  1058  0008               	return
 10028                           	opt stack 0
 10029                           GLOBAL	__end_of_robo_init
 10030  1059                     	__end_of_robo_init:
 10031 ;; =============== function _robo_init ends ============
 10032                           
 10033                           	signat	_robo_init,88
 10034                           	global	_lcd_write_data
 10035                           psect	text1087,local,class=CODE,delta=2
 10036                           global __ptext1087
 10037  1F9C                     __ptext1087:
 10038                           
 10039 ;; *************** function _lcd_write_data *****************
 10040 ;; Defined at:
 10041 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  databyte        1    wreg     unsigned char 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  databyte        1    2[BANK0 ] unsigned char 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;		None               void
 10048 ;; Registers used:
 10049 ;;		wreg
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10055 ;;      Params:         0       0       0       0       0
 10056 ;;      Locals:         0       1       0       0       0
 10057 ;;      Temps:          0       2       0       0       0
 10058 ;;      Totals:         0       3       0       0       0
 10059 ;;Total ram usage:        3 bytes
 10060 ;; Hardware stack levels used:    1
 10061 ;; Hardware stack levels required when called:    3
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_lcd_write_string
 10066 ;;		_lcd_write_2_digit_bcd
 10067 ;;		_lcd_write_3_digit_bcd
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           psect	text1087
 10071                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10072                           	line	30
 10073                           	global	__size_of_lcd_write_data
 10074  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 10075                           	
 10076  1F9C                     _lcd_write_data:	
 10077                           	opt	stack 1
 10078                           ; Regs used in _lcd_write_data: [wreg]
 10079                           ;lcd_write_data@databyte stored from wreg
 10080  1F9C  1283               	bcf	status, 5	;RP0=0, select bank0
 10081  1F9D  1303               	bcf	status, 6	;RP1=0, select bank0
 10082  1F9E  00A2               	movwf	(lcd_write_data@databyte)
 10083                           	line	31
 10084                           	
 10085  1F9F                     l11171:	
 10086                           ;lcd.c: 31: RE2 = 0;
 10087  1F9F  1109               	bcf	(74/8),(74)&7
 10088                           	line	32
 10089                           ;lcd.c: 32: RE1 = 0;
 10090  1FA0  1089               	bcf	(73/8),(73)&7
 10091                           	line	33
 10092                           ;lcd.c: 33: RE0 = 1;
 10093  1FA1  1409               	bsf	(72/8),(72)&7
 10094                           	line	34
 10095                           	
 10096  1FA2                     l11173:	
 10097                           ;lcd.c: 34: PORTD = databyte;
 10098  1FA2  0822               	movf	(lcd_write_data@databyte),w
 10099  1FA3  0088               	movwf	(8)	;volatile
 10100                           	line	35
 10101                           	
 10102  1FA4                     l11175:	
 10103                           ;lcd.c: 35: RE2 = 1;
 10104  1FA4  1509               	bsf	(74/8),(74)&7
 10105                           	line	36
 10106                           	
 10107  1FA5                     l11177:	
 10108                           ;lcd.c: 36: RE2 = 0;
 10109  1FA5  1109               	bcf	(74/8),(74)&7
 10110                           	line	37
 10111                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
 10112                           	opt asmopt_off
 10113  1FA6  3007               movlw	7
 10114  1FA7  00A1               movwf	((??_lcd_write_data+0)+0+1),f
 10115  1FA8  307D               	movlw	125
 10116  1FA9  00A0               movwf	((??_lcd_write_data+0)+0),f
 10117  1FAA                     u5467:
 10118  1FAA  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
 10119  1FAB  2FAA               	goto	u5467
 10120  1FAC  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
 10121  1FAD  2FAA               	goto	u5467
 10122                           opt asmopt_on
 10123                           
 10124                           	line	38
 10125                           	
 10126  1FAE                     l1402:	
 10127  1FAE  0008               	return
 10128                           	opt stack 0
 10129                           GLOBAL	__end_of_lcd_write_data
 10130  1FAF                     	__end_of_lcd_write_data:
 10131 ;; =============== function _lcd_write_data ends ============
 10132                           
 10133                           	signat	_lcd_write_data,4216
 10134                           	global	_lcd_write_control
 10135                           psect	text1088,local,class=CODE,delta=2
 10136                           global __ptext1088
 10137  1FD6                     __ptext1088:
 10138                           
 10139 ;; *************** function _lcd_write_control *****************
 10140 ;; Defined at:
 10141 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  databyte        1    wreg     unsigned char 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  databyte        1    2[BANK0 ] unsigned char 
 10146 ;; Return value:  Size  Location     Type
 10147 ;;		None               void
 10148 ;; Registers used:
 10149 ;;		wreg
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10155 ;;      Params:         0       0       0       0       0
 10156 ;;      Locals:         0       1       0       0       0
 10157 ;;      Temps:          0       2       0       0       0
 10158 ;;      Totals:         0       3       0       0       0
 10159 ;;Total ram usage:        3 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; Hardware stack levels required when called:    3
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		_lcd_set_cursor
 10166 ;;		_lcd_init
 10167 ;;		_UpdateDisplay
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           psect	text1088
 10171                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10172                           	line	18
 10173                           	global	__size_of_lcd_write_control
 10174  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 10175                           	
 10176  1FD6                     _lcd_write_control:	
 10177                           	opt	stack 1
 10178                           ; Regs used in _lcd_write_control: [wreg]
 10179                           ;lcd_write_control@databyte stored from wreg
 10180  1FD6  1283               	bcf	status, 5	;RP0=0, select bank0
 10181  1FD7  1303               	bcf	status, 6	;RP1=0, select bank0
 10182  1FD8  00A2               	movwf	(lcd_write_control@databyte)
 10183                           	line	19
 10184                           	
 10185  1FD9                     l11163:	
 10186                           ;lcd.c: 19: RE2 = 0;
 10187  1FD9  1109               	bcf	(74/8),(74)&7
 10188                           	line	20
 10189                           ;lcd.c: 20: RE1 = 0;
 10190  1FDA  1089               	bcf	(73/8),(73)&7
 10191                           	line	21
 10192                           ;lcd.c: 21: RE0 = 0;
 10193  1FDB  1009               	bcf	(72/8),(72)&7
 10194                           	line	22
 10195                           	
 10196  1FDC                     l11165:	
 10197                           ;lcd.c: 22: PORTD = databyte;
 10198  1FDC  0822               	movf	(lcd_write_control@databyte),w
 10199  1FDD  0088               	movwf	(8)	;volatile
 10200                           	line	23
 10201                           	
 10202  1FDE                     l11167:	
 10203                           ;lcd.c: 23: RE2 = 1;
 10204  1FDE  1509               	bsf	(74/8),(74)&7
 10205                           	line	24
 10206                           	
 10207  1FDF                     l11169:	
 10208                           ;lcd.c: 24: RE2 = 0;
 10209  1FDF  1109               	bcf	(74/8),(74)&7
 10210                           	line	25
 10211                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
 10212                           	opt asmopt_off
 10213  1FE0  300D               movlw	13
 10214  1FE1  00A1               movwf	((??_lcd_write_control+0)+0+1),f
 10215  1FE2  30FB               	movlw	251
 10216  1FE3  00A0               movwf	((??_lcd_write_control+0)+0),f
 10217  1FE4                     u5477:
 10218  1FE4  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
 10219  1FE5  2FE4               	goto	u5477
 10220  1FE6  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
 10221  1FE7  2FE4               	goto	u5477
 10222  1FE8  2FE9               	nop2
 10223                           opt asmopt_on
 10224                           
 10225                           	line	26
 10226                           	
 10227  1FE9                     l1399:	
 10228  1FE9  0008               	return
 10229                           	opt stack 0
 10230                           GLOBAL	__end_of_lcd_write_control
 10231  1FEA                     	__end_of_lcd_write_control:
 10232 ;; =============== function _lcd_write_control ends ============
 10233                           
 10234                           	signat	_lcd_write_control,4216
 10235                           	global	_init_adc
 10236                           psect	text1089,local,class=CODE,delta=2
 10237                           global __ptext1089
 10238  1FEA                     __ptext1089:
 10239                           
 10240 ;; *************** function _init_adc *****************
 10241 ;; Defined at:
 10242 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;		None               void
 10249 ;; Registers used:
 10250 ;;		wreg, status,2
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10256 ;;      Params:         0       0       0       0       0
 10257 ;;      Locals:         0       0       0       0       0
 10258 ;;      Temps:          0       1       0       0       0
 10259 ;;      Totals:         0       1       0       0       0
 10260 ;;Total ram usage:        1 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    3
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_init
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           psect	text1089
 10270                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10271                           	line	61
 10272                           	global	__size_of_init_adc
 10273  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 10274                           	
 10275  1FEA                     _init_adc:	
 10276                           	opt	stack 3
 10277                           ; Regs used in _init_adc: [wreg+status,2]
 10278                           	line	63
 10279                           	
 10280  1FEA                     l11153:	
 10281                           ;adc.c: 63: PORTA = 0;
 10282  1FEA  1283               	bcf	status, 5	;RP0=0, select bank0
 10283  1FEB  1303               	bcf	status, 6	;RP1=0, select bank0
 10284  1FEC  0185               	clrf	(5)	;volatile
 10285                           	line	64
 10286                           	
 10287  1FED                     l11155:	
 10288                           ;adc.c: 64: TRISA = 0b00111111;
 10289  1FED  303F               	movlw	(03Fh)
 10290  1FEE  1683               	bsf	status, 5	;RP0=1, select bank1
 10291  1FEF  1303               	bcf	status, 6	;RP1=0, select bank1
 10292  1FF0  0085               	movwf	(133)^080h	;volatile
 10293                           	line	67
 10294                           	
 10295  1FF1                     l11157:	
 10296                           ;adc.c: 67: ADCON0 = 0b10100001;
 10297  1FF1  30A1               	movlw	(0A1h)
 10298  1FF2  1283               	bcf	status, 5	;RP0=0, select bank0
 10299  1FF3  1303               	bcf	status, 6	;RP1=0, select bank0
 10300  1FF4  009F               	movwf	(31)	;volatile
 10301                           	line	68
 10302                           	
 10303  1FF5                     l11159:	
 10304                           ;adc.c: 68: ADCON1 = 0b0000010;
 10305  1FF5  3002               	movlw	(02h)
 10306  1FF6  1683               	bsf	status, 5	;RP0=1, select bank1
 10307  1FF7  1303               	bcf	status, 6	;RP1=0, select bank1
 10308  1FF8  009F               	movwf	(159)^080h	;volatile
 10309                           	line	70
 10310                           	
 10311  1FF9                     l11161:	
 10312                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10313                           	opt asmopt_off
 10314  1FF9  3053               movlw	83
 10315  1FFA  1283               	bcf	status, 5	;RP0=0, select bank0
 10316  1FFB  1303               	bcf	status, 6	;RP1=0, select bank0
 10317  1FFC  00A0               movwf	(??_init_adc+0)+0,f
 10318  1FFD                     u5487:
 10319  1FFD  0BA0               decfsz	(??_init_adc+0)+0,f
 10320  1FFE  2FFD               	goto	u5487
 10321                           opt asmopt_on
 10322                           
 10323                           	line	72
 10324                           	
 10325  1FFF                     l700:	
 10326  1FFF  0008               	return
 10327                           	opt stack 0
 10328                           GLOBAL	__end_of_init_adc
 10329  2000                     	__end_of_init_adc:
 10330 ;; =============== function _init_adc ends ============
 10331                           
 10332                           	signat	_init_adc,88
 10333                           	global	_adc_read_channel
 10334                           psect	text1090,local,class=CODE,delta=2
 10335                           global __ptext1090
 10336  1293                     __ptext1090:
 10337                           
 10338 ;; *************** function _adc_read_channel *****************
 10339 ;; Defined at:
 10340 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;  channel         1    wreg     unsigned char 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  channel         1    7[BANK0 ] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      unsigned char 
 10347 ;; Registers used:
 10348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10354 ;;      Params:         0       0       0       0       0
 10355 ;;      Locals:         0       1       0       0       0
 10356 ;;      Temps:          0       1       0       0       0
 10357 ;;      Totals:         0       2       0       0       0
 10358 ;;Total ram usage:        2 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    4
 10361 ;; This function calls:
 10362 ;;		_adc_read
 10363 ;; This function is called by:
 10364 ;;		_readDistance
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           psect	text1090
 10368                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10369                           	line	20
 10370                           	global	__size_of_adc_read_channel
 10371  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
 10372                           	
 10373  1293                     _adc_read_channel:	
 10374                           	opt	stack 0
 10375                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10376                           ;adc_read_channel@channel stored from wreg
 10377  1293  1283               	bcf	status, 5	;RP0=0, select bank0
 10378  1294  1303               	bcf	status, 6	;RP1=0, select bank0
 10379  1295  00A7               	movwf	(adc_read_channel@channel)
 10380                           	line	21
 10381                           	
 10382  1296                     l11137:	
 10383                           ;adc.c: 21: switch(channel)
 10384  1296  2AAF               	goto	l11145
 10385                           	line	23
 10386                           ;adc.c: 22: {
 10387                           ;adc.c: 23: case 0:
 10388                           	
 10389  1297                     l690:	
 10390                           	line	24
 10391                           ;adc.c: 24: CHS0 = 0;
 10392  1297  119F               	bcf	(251/8),(251)&7
 10393                           	line	25
 10394                           ;adc.c: 25: CHS1 = 0;
 10395  1298  121F               	bcf	(252/8),(252)&7
 10396                           	line	26
 10397                           ;adc.c: 26: CHS2 = 0;
 10398  1299  129F               	bcf	(253/8),(253)&7
 10399                           	line	27
 10400                           ;adc.c: 27: break;
 10401  129A  2AC0               	goto	l11147
 10402                           	line	28
 10403                           ;adc.c: 28: case 1:
 10404                           	
 10405  129B                     l692:	
 10406                           	line	29
 10407                           ;adc.c: 29: CHS0 = 1;
 10408  129B  159F               	bsf	(251/8),(251)&7
 10409                           	line	30
 10410                           ;adc.c: 30: CHS1 = 0;
 10411  129C  121F               	bcf	(252/8),(252)&7
 10412                           	line	31
 10413                           ;adc.c: 31: CHS2 = 0;
 10414  129D  129F               	bcf	(253/8),(253)&7
 10415                           	line	32
 10416                           ;adc.c: 32: break;
 10417  129E  2AC0               	goto	l11147
 10418                           	line	33
 10419                           ;adc.c: 33: case 2:
 10420                           	
 10421  129F                     l693:	
 10422                           	line	34
 10423                           ;adc.c: 34: CHS0 = 0;
 10424  129F  119F               	bcf	(251/8),(251)&7
 10425                           	line	35
 10426                           ;adc.c: 35: CHS1 = 1;
 10427  12A0  161F               	bsf	(252/8),(252)&7
 10428                           	line	36
 10429                           ;adc.c: 36: CHS2 = 0;
 10430  12A1  129F               	bcf	(253/8),(253)&7
 10431                           	line	37
 10432                           ;adc.c: 37: break;
 10433  12A2  2AC0               	goto	l11147
 10434                           	line	38
 10435                           ;adc.c: 38: case 3:
 10436                           	
 10437  12A3                     l694:	
 10438                           	line	39
 10439                           ;adc.c: 39: CHS0 = 1;
 10440  12A3  159F               	bsf	(251/8),(251)&7
 10441                           	line	40
 10442                           ;adc.c: 40: CHS1 = 1;
 10443  12A4  161F               	bsf	(252/8),(252)&7
 10444                           	line	41
 10445                           ;adc.c: 41: CHS2 = 0;
 10446  12A5  129F               	bcf	(253/8),(253)&7
 10447                           	line	42
 10448                           ;adc.c: 42: break;
 10449  12A6  2AC0               	goto	l11147
 10450                           	line	43
 10451                           ;adc.c: 43: case 4:
 10452                           	
 10453  12A7                     l695:	
 10454                           	line	44
 10455                           ;adc.c: 44: CHS0 = 0;
 10456  12A7  119F               	bcf	(251/8),(251)&7
 10457                           	line	45
 10458                           ;adc.c: 45: CHS1 = 0;
 10459  12A8  121F               	bcf	(252/8),(252)&7
 10460                           	line	46
 10461                           ;adc.c: 46: CHS2 = 1;
 10462  12A9  169F               	bsf	(253/8),(253)&7
 10463                           	line	47
 10464                           ;adc.c: 47: break;
 10465  12AA  2AC0               	goto	l11147
 10466                           	line	50
 10467                           ;adc.c: 50: default:
 10468                           	
 10469  12AB                     l696:	
 10470                           	line	51
 10471                           	
 10472  12AB                     l11139:	
 10473                           ;adc.c: 51: return 0;
 10474  12AB  3000               	movlw	(0)
 10475  12AC  2ACD               	goto	l697
 10476                           	
 10477  12AD                     l11141:	
 10478  12AD  2ACD               	goto	l697
 10479                           	line	52
 10480                           	
 10481  12AE                     l11143:	
 10482                           ;adc.c: 52: }
 10483  12AE  2AC0               	goto	l11147
 10484                           	line	21
 10485                           	
 10486  12AF                     l689:	
 10487                           	
 10488  12AF                     l11145:	
 10489  12AF  0827               	movf	(adc_read_channel@channel),w
 10490                           	; Switch size 1, requested type "space"
 10491                           ; Number of cases is 5, Range of values is 0 to 4
 10492                           ; switch strategies available:
 10493                           ; Name         Instructions Cycles
 10494                           ; simple_byte           16     9 (average)
 10495                           ; direct_byte           23     8 (fixed)
 10496                           ; jumptable            260     6 (fixed)
 10497                           ; rangetable             9     6 (fixed)
 10498                           ; spacedrange           16     9 (fixed)
 10499                           ; locatedrange           5     3 (fixed)
 10500                           ;	Chosen strategy is simple_byte
 10501                           
 10502                           	opt asmopt_off
 10503  12B0  3A00               	xorlw	0^0	; case 0
 10504  12B1  1903               	skipnz
 10505  12B2  2A97               	goto	l690
 10506  12B3  3A01               	xorlw	1^0	; case 1
 10507  12B4  1903               	skipnz
 10508  12B5  2A9B               	goto	l692
 10509  12B6  3A03               	xorlw	2^1	; case 2
 10510  12B7  1903               	skipnz
 10511  12B8  2A9F               	goto	l693
 10512  12B9  3A01               	xorlw	3^2	; case 3
 10513  12BA  1903               	skipnz
 10514  12BB  2AA3               	goto	l694
 10515  12BC  3A07               	xorlw	4^3	; case 4
 10516  12BD  1903               	skipnz
 10517  12BE  2AA7               	goto	l695
 10518  12BF  2AAB               	goto	l11139
 10519                           	opt asmopt_on
 10520                           
 10521                           	line	52
 10522                           	
 10523  12C0                     l691:	
 10524                           	line	54
 10525                           	
 10526  12C0                     l11147:	
 10527                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10528                           	opt asmopt_off
 10529  12C0  3053               movlw	83
 10530  12C1  00A6               movwf	(??_adc_read_channel+0)+0,f
 10531  12C2                     u5497:
 10532  12C2  0BA6               decfsz	(??_adc_read_channel+0)+0,f
 10533  12C3  2AC2               	goto	u5497
 10534                           opt asmopt_on
 10535                           
 10536                           	line	56
 10537                           	
 10538  12C4                     l11149:	
 10539                           ;adc.c: 56: return adc_read();
 10540  12C4  160A  118A  207A   	fcall	_adc_read
              160A  118A         
 10541  12C9  1283               	bcf	status, 5	;RP0=0, select bank0
 10542  12CA  1303               	bcf	status, 6	;RP1=0, select bank0
 10543  12CB  0820               	movf	(0+(?_adc_read)),w
 10544  12CC  2ACD               	goto	l697
 10545                           	
 10546  12CD                     l11151:	
 10547                           	line	58
 10548                           	
 10549  12CD                     l697:	
 10550  12CD  0008               	return
 10551                           	opt stack 0
 10552                           GLOBAL	__end_of_adc_read_channel
 10553  12CE                     	__end_of_adc_read_channel:
 10554 ;; =============== function _adc_read_channel ends ============
 10555                           
 10556                           	signat	_adc_read_channel,4217
 10557                           	global	___awmod
 10558                           psect	text1091,local,class=CODE,delta=2
 10559                           global __ptext1091
 10560  14A1                     __ptext1091:
 10561                           
 10562 ;; *************** function ___awmod *****************
 10563 ;; Defined at:
 10564 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  divisor         2    0[BANK0 ] int 
 10567 ;;  dividend        2    2[BANK0 ] int 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  sign            1    6[BANK0 ] unsigned char 
 10570 ;;  counter         1    5[BANK0 ] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  2    0[BANK0 ] int 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10580 ;;      Params:         0       4       0       0       0
 10581 ;;      Locals:         0       2       0       0       0
 10582 ;;      Temps:          0       1       0       0       0
 10583 ;;      Totals:         0       7       0       0       0
 10584 ;;Total ram usage:        7 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    3
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_UpdateDisplay
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           psect	text1091
 10594                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10595                           	line	5
 10596                           	global	__size_of___awmod
 10597  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 10598                           	
 10599  14A1                     ___awmod:	
 10600                           	opt	stack 2
 10601                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10602                           	line	8
 10603                           	
 10604  14A1                     l11081:	
 10605  14A1  1283               	bcf	status, 5	;RP0=0, select bank0
 10606  14A2  1303               	bcf	status, 6	;RP1=0, select bank0
 10607  14A3  01A6               	clrf	(___awmod@sign)
 10608                           	line	9
 10609  14A4  1FA3               	btfss	(___awmod@dividend+1),7
 10610  14A5  2CA7               	goto	u4481
 10611  14A6  2CA8               	goto	u4480
 10612  14A7                     u4481:
 10613  14A7  2CB1               	goto	l11085
 10614  14A8                     u4480:
 10615                           	line	10
 10616                           	
 10617  14A8                     l11083:	
 10618  14A8  09A2               	comf	(___awmod@dividend),f
 10619  14A9  09A3               	comf	(___awmod@dividend+1),f
 10620  14AA  0AA2               	incf	(___awmod@dividend),f
 10621  14AB  1903               	skipnz
 10622  14AC  0AA3               	incf	(___awmod@dividend+1),f
 10623                           	line	11
 10624  14AD  01A6               	clrf	(___awmod@sign)
 10625  14AE  1403               	bsf	status,0
 10626  14AF  0DA6               	rlf	(___awmod@sign),f
 10627  14B0  2CB1               	goto	l11085
 10628                           	line	12
 10629                           	
 10630  14B1                     l7841:	
 10631                           	line	13
 10632                           	
 10633  14B1                     l11085:	
 10634  14B1  1FA1               	btfss	(___awmod@divisor+1),7
 10635  14B2  2CB4               	goto	u4491
 10636  14B3  2CB5               	goto	u4490
 10637  14B4                     u4491:
 10638  14B4  2CBB               	goto	l11089
 10639  14B5                     u4490:
 10640                           	line	14
 10641                           	
 10642  14B5                     l11087:	
 10643  14B5  09A0               	comf	(___awmod@divisor),f
 10644  14B6  09A1               	comf	(___awmod@divisor+1),f
 10645  14B7  0AA0               	incf	(___awmod@divisor),f
 10646  14B8  1903               	skipnz
 10647  14B9  0AA1               	incf	(___awmod@divisor+1),f
 10648  14BA  2CBB               	goto	l11089
 10649                           	
 10650  14BB                     l7842:	
 10651                           	line	15
 10652                           	
 10653  14BB                     l11089:	
 10654  14BB  0821               	movf	(___awmod@divisor+1),w
 10655  14BC  0420               	iorwf	(___awmod@divisor),w
 10656  14BD  1903               	skipnz
 10657  14BE  2CC0               	goto	u4501
 10658  14BF  2CC1               	goto	u4500
 10659  14C0                     u4501:
 10660  14C0  2CF7               	goto	l11107
 10661  14C1                     u4500:
 10662                           	line	16
 10663                           	
 10664  14C1                     l11091:	
 10665  14C1  01A5               	clrf	(___awmod@counter)
 10666  14C2  1403               	bsf	status,0
 10667  14C3  0DA5               	rlf	(___awmod@counter),f
 10668                           	line	17
 10669  14C4  2CD1               	goto	l11097
 10670                           	
 10671  14C5                     l7845:	
 10672                           	line	18
 10673                           	
 10674  14C5                     l11093:	
 10675  14C5  3001               	movlw	01h
 10676                           	
 10677  14C6                     u4515:
 10678  14C6  1003               	clrc
 10679  14C7  0DA0               	rlf	(___awmod@divisor),f
 10680  14C8  0DA1               	rlf	(___awmod@divisor+1),f
 10681  14C9  3EFF               	addlw	-1
 10682  14CA  1D03               	skipz
 10683  14CB  2CC6               	goto	u4515
 10684                           	line	19
 10685                           	
 10686  14CC                     l11095:	
 10687  14CC  3001               	movlw	(01h)
 10688  14CD  00A4               	movwf	(??___awmod+0)+0
 10689  14CE  0824               	movf	(??___awmod+0)+0,w
 10690  14CF  07A5               	addwf	(___awmod@counter),f
 10691  14D0  2CD1               	goto	l11097
 10692                           	line	20
 10693                           	
 10694  14D1                     l7844:	
 10695                           	line	17
 10696                           	
 10697  14D1                     l11097:	
 10698  14D1  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 10699  14D2  2CD4               	goto	u4521
 10700  14D3  2CD5               	goto	u4520
 10701  14D4                     u4521:
 10702  14D4  2CC5               	goto	l11093
 10703  14D5                     u4520:
 10704  14D5  2CD7               	goto	l11099
 10705                           	
 10706  14D6                     l7846:	
 10707  14D6  2CD7               	goto	l11099
 10708                           	line	21
 10709                           	
 10710  14D7                     l7847:	
 10711                           	line	22
 10712                           	
 10713  14D7                     l11099:	
 10714  14D7  0821               	movf	(___awmod@divisor+1),w
 10715  14D8  0223               	subwf	(___awmod@dividend+1),w
 10716  14D9  1D03               	skipz
 10717  14DA  2CDD               	goto	u4535
 10718  14DB  0820               	movf	(___awmod@divisor),w
 10719  14DC  0222               	subwf	(___awmod@dividend),w
 10720  14DD                     u4535:
 10721  14DD  1C03               	skipc
 10722  14DE  2CE0               	goto	u4531
 10723  14DF  2CE1               	goto	u4530
 10724  14E0                     u4531:
 10725  14E0  2CE8               	goto	l11103
 10726  14E1                     u4530:
 10727                           	line	23
 10728                           	
 10729  14E1                     l11101:	
 10730  14E1  0820               	movf	(___awmod@divisor),w
 10731  14E2  02A2               	subwf	(___awmod@dividend),f
 10732  14E3  0821               	movf	(___awmod@divisor+1),w
 10733  14E4  1C03               	skipc
 10734  14E5  03A3               	decf	(___awmod@dividend+1),f
 10735  14E6  02A3               	subwf	(___awmod@dividend+1),f
 10736  14E7  2CE8               	goto	l11103
 10737                           	
 10738  14E8                     l7848:	
 10739                           	line	24
 10740                           	
 10741  14E8                     l11103:	
 10742  14E8  3001               	movlw	01h
 10743                           	
 10744  14E9                     u4545:
 10745  14E9  1003               	clrc
 10746  14EA  0CA1               	rrf	(___awmod@divisor+1),f
 10747  14EB  0CA0               	rrf	(___awmod@divisor),f
 10748  14EC  3EFF               	addlw	-1
 10749  14ED  1D03               	skipz
 10750  14EE  2CE9               	goto	u4545
 10751                           	line	25
 10752                           	
 10753  14EF                     l11105:	
 10754  14EF  3001               	movlw	low(01h)
 10755  14F0  02A5               	subwf	(___awmod@counter),f
 10756  14F1  1D03               	btfss	status,2
 10757  14F2  2CF4               	goto	u4551
 10758  14F3  2CF5               	goto	u4550
 10759  14F4                     u4551:
 10760  14F4  2CD7               	goto	l11099
 10761  14F5                     u4550:
 10762  14F5  2CF7               	goto	l11107
 10763                           	
 10764  14F6                     l7849:	
 10765  14F6  2CF7               	goto	l11107
 10766                           	line	26
 10767                           	
 10768  14F7                     l7843:	
 10769                           	line	27
 10770                           	
 10771  14F7                     l11107:	
 10772  14F7  0826               	movf	(___awmod@sign),w
 10773  14F8  1D03               	skipz
 10774  14F9  2CFB               	goto	u4560
 10775  14FA  2D01               	goto	l11111
 10776  14FB                     u4560:
 10777                           	line	28
 10778                           	
 10779  14FB                     l11109:	
 10780  14FB  09A2               	comf	(___awmod@dividend),f
 10781  14FC  09A3               	comf	(___awmod@dividend+1),f
 10782  14FD  0AA2               	incf	(___awmod@dividend),f
 10783  14FE  1903               	skipnz
 10784  14FF  0AA3               	incf	(___awmod@dividend+1),f
 10785  1500  2D01               	goto	l11111
 10786                           	
 10787  1501                     l7850:	
 10788                           	line	29
 10789                           	
 10790  1501                     l11111:	
 10791  1501  0823               	movf	(___awmod@dividend+1),w
 10792  1502  01A1               	clrf	(?___awmod+1)
 10793  1503  07A1               	addwf	(?___awmod+1)
 10794  1504  0822               	movf	(___awmod@dividend),w
 10795  1505  01A0               	clrf	(?___awmod)
 10796  1506  07A0               	addwf	(?___awmod)
 10797                           
 10798  1507  2D08               	goto	l7851
 10799                           	
 10800  1508                     l11113:	
 10801                           	line	30
 10802                           	
 10803  1508                     l7851:	
 10804  1508  0008               	return
 10805                           	opt stack 0
 10806                           GLOBAL	__end_of___awmod
 10807  1509                     	__end_of___awmod:
 10808 ;; =============== function ___awmod ends ============
 10809                           
 10810                           	signat	___awmod,8314
 10811                           	global	___awdiv
 10812                           psect	text1092,local,class=CODE,delta=2
 10813                           global __ptext1092
 10814  15E9                     __ptext1092:
 10815                           
 10816 ;; *************** function ___awdiv *****************
 10817 ;; Defined at:
 10818 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  divisor         2    6[BANK0 ] int 
 10821 ;;  dividend        2    8[BANK0 ] int 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;  quotient        2   13[BANK0 ] int 
 10824 ;;  sign            1   12[BANK0 ] unsigned char 
 10825 ;;  counter         1   11[BANK0 ] unsigned char 
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  2    6[BANK0 ] int 
 10828 ;; Registers used:
 10829 ;;		wreg, status,2, status,0
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10835 ;;      Params:         0       4       0       0       0
 10836 ;;      Locals:         0       4       0       0       0
 10837 ;;      Temps:          0       1       0       0       0
 10838 ;;      Totals:         0       9       0       0       0
 10839 ;;Total ram usage:        9 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    3
 10842 ;; This function calls:
 10843 ;;		Nothing
 10844 ;; This function is called by:
 10845 ;;		_robot_turnRight
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           psect	text1092
 10849                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 10850                           	line	5
 10851                           	global	__size_of___awdiv
 10852  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 10853                           	
 10854  15E9                     ___awdiv:	
 10855                           	opt	stack 3
 10856                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10857                           	line	9
 10858                           	
 10859  15E9                     l11041:	
 10860  15E9  1283               	bcf	status, 5	;RP0=0, select bank0
 10861  15EA  1303               	bcf	status, 6	;RP1=0, select bank0
 10862  15EB  01AC               	clrf	(___awdiv@sign)
 10863                           	line	10
 10864  15EC  1FA7               	btfss	(___awdiv@divisor+1),7
 10865  15ED  2DEF               	goto	u4381
 10866  15EE  2DF0               	goto	u4380
 10867  15EF                     u4381:
 10868  15EF  2DF9               	goto	l11045
 10869  15F0                     u4380:
 10870                           	line	11
 10871                           	
 10872  15F0                     l11043:	
 10873  15F0  09A6               	comf	(___awdiv@divisor),f
 10874  15F1  09A7               	comf	(___awdiv@divisor+1),f
 10875  15F2  0AA6               	incf	(___awdiv@divisor),f
 10876  15F3  1903               	skipnz
 10877  15F4  0AA7               	incf	(___awdiv@divisor+1),f
 10878                           	line	12
 10879  15F5  01AC               	clrf	(___awdiv@sign)
 10880  15F6  1403               	bsf	status,0
 10881  15F7  0DAC               	rlf	(___awdiv@sign),f
 10882  15F8  2DF9               	goto	l11045
 10883                           	line	13
 10884                           	
 10885  15F9                     l7773:	
 10886                           	line	14
 10887                           	
 10888  15F9                     l11045:	
 10889  15F9  1FA9               	btfss	(___awdiv@dividend+1),7
 10890  15FA  2DFC               	goto	u4391
 10891  15FB  2DFD               	goto	u4390
 10892  15FC                     u4391:
 10893  15FC  2E07               	goto	l11051
 10894  15FD                     u4390:
 10895                           	line	15
 10896                           	
 10897  15FD                     l11047:	
 10898  15FD  09A8               	comf	(___awdiv@dividend),f
 10899  15FE  09A9               	comf	(___awdiv@dividend+1),f
 10900  15FF  0AA8               	incf	(___awdiv@dividend),f
 10901  1600  1903               	skipnz
 10902  1601  0AA9               	incf	(___awdiv@dividend+1),f
 10903                           	line	16
 10904                           	
 10905  1602                     l11049:	
 10906  1602  3001               	movlw	(01h)
 10907  1603  00AA               	movwf	(??___awdiv+0)+0
 10908  1604  082A               	movf	(??___awdiv+0)+0,w
 10909  1605  06AC               	xorwf	(___awdiv@sign),f
 10910  1606  2E07               	goto	l11051
 10911                           	line	17
 10912                           	
 10913  1607                     l7774:	
 10914                           	line	18
 10915                           	
 10916  1607                     l11051:	
 10917  1607  01AD               	clrf	(___awdiv@quotient)
 10918  1608  01AE               	clrf	(___awdiv@quotient+1)
 10919                           	line	19
 10920                           	
 10921  1609                     l11053:	
 10922  1609  0827               	movf	(___awdiv@divisor+1),w
 10923  160A  0426               	iorwf	(___awdiv@divisor),w
 10924  160B  1903               	skipnz
 10925  160C  2E0E               	goto	u4401
 10926  160D  2E0F               	goto	u4400
 10927  160E                     u4401:
 10928  160E  2E4D               	goto	l11073
 10929  160F                     u4400:
 10930                           	line	20
 10931                           	
 10932  160F                     l11055:	
 10933  160F  01AB               	clrf	(___awdiv@counter)
 10934  1610  1403               	bsf	status,0
 10935  1611  0DAB               	rlf	(___awdiv@counter),f
 10936                           	line	21
 10937  1612  2E1F               	goto	l11061
 10938                           	
 10939  1613                     l7777:	
 10940                           	line	22
 10941                           	
 10942  1613                     l11057:	
 10943  1613  3001               	movlw	01h
 10944                           	
 10945  1614                     u4415:
 10946  1614  1003               	clrc
 10947  1615  0DA6               	rlf	(___awdiv@divisor),f
 10948  1616  0DA7               	rlf	(___awdiv@divisor+1),f
 10949  1617  3EFF               	addlw	-1
 10950  1618  1D03               	skipz
 10951  1619  2E14               	goto	u4415
 10952                           	line	23
 10953                           	
 10954  161A                     l11059:	
 10955  161A  3001               	movlw	(01h)
 10956  161B  00AA               	movwf	(??___awdiv+0)+0
 10957  161C  082A               	movf	(??___awdiv+0)+0,w
 10958  161D  07AB               	addwf	(___awdiv@counter),f
 10959  161E  2E1F               	goto	l11061
 10960                           	line	24
 10961                           	
 10962  161F                     l7776:	
 10963                           	line	21
 10964                           	
 10965  161F                     l11061:	
 10966  161F  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
 10967  1620  2E22               	goto	u4421
 10968  1621  2E23               	goto	u4420
 10969  1622                     u4421:
 10970  1622  2E13               	goto	l11057
 10971  1623                     u4420:
 10972  1623  2E25               	goto	l11063
 10973                           	
 10974  1624                     l7778:	
 10975  1624  2E25               	goto	l11063
 10976                           	line	25
 10977                           	
 10978  1625                     l7779:	
 10979                           	line	26
 10980                           	
 10981  1625                     l11063:	
 10982  1625  3001               	movlw	01h
 10983                           	
 10984  1626                     u4435:
 10985  1626  1003               	clrc
 10986  1627  0DAD               	rlf	(___awdiv@quotient),f
 10987  1628  0DAE               	rlf	(___awdiv@quotient+1),f
 10988  1629  3EFF               	addlw	-1
 10989  162A  1D03               	skipz
 10990  162B  2E26               	goto	u4435
 10991                           	line	27
 10992  162C  0827               	movf	(___awdiv@divisor+1),w
 10993  162D  0229               	subwf	(___awdiv@dividend+1),w
 10994  162E  1D03               	skipz
 10995  162F  2E32               	goto	u4445
 10996  1630  0826               	movf	(___awdiv@divisor),w
 10997  1631  0228               	subwf	(___awdiv@dividend),w
 10998  1632                     u4445:
 10999  1632  1C03               	skipc
 11000  1633  2E35               	goto	u4441
 11001  1634  2E36               	goto	u4440
 11002  1635                     u4441:
 11003  1635  2E3E               	goto	l11069
 11004  1636                     u4440:
 11005                           	line	28
 11006                           	
 11007  1636                     l11065:	
 11008  1636  0826               	movf	(___awdiv@divisor),w
 11009  1637  02A8               	subwf	(___awdiv@dividend),f
 11010  1638  0827               	movf	(___awdiv@divisor+1),w
 11011  1639  1C03               	skipc
 11012  163A  03A9               	decf	(___awdiv@dividend+1),f
 11013  163B  02A9               	subwf	(___awdiv@dividend+1),f
 11014                           	line	29
 11015                           	
 11016  163C                     l11067:	
 11017  163C  142D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11018  163D  2E3E               	goto	l11069
 11019                           	line	30
 11020                           	
 11021  163E                     l7780:	
 11022                           	line	31
 11023                           	
 11024  163E                     l11069:	
 11025  163E  3001               	movlw	01h
 11026                           	
 11027  163F                     u4455:
 11028  163F  1003               	clrc
 11029  1640  0CA7               	rrf	(___awdiv@divisor+1),f
 11030  1641  0CA6               	rrf	(___awdiv@divisor),f
 11031  1642  3EFF               	addlw	-1
 11032  1643  1D03               	skipz
 11033  1644  2E3F               	goto	u4455
 11034                           	line	32
 11035                           	
 11036  1645                     l11071:	
 11037  1645  3001               	movlw	low(01h)
 11038  1646  02AB               	subwf	(___awdiv@counter),f
 11039  1647  1D03               	btfss	status,2
 11040  1648  2E4A               	goto	u4461
 11041  1649  2E4B               	goto	u4460
 11042  164A                     u4461:
 11043  164A  2E25               	goto	l11063
 11044  164B                     u4460:
 11045  164B  2E4D               	goto	l11073
 11046                           	
 11047  164C                     l7781:	
 11048  164C  2E4D               	goto	l11073
 11049                           	line	33
 11050                           	
 11051  164D                     l7775:	
 11052                           	line	34
 11053                           	
 11054  164D                     l11073:	
 11055  164D  082C               	movf	(___awdiv@sign),w
 11056  164E  1D03               	skipz
 11057  164F  2E51               	goto	u4470
 11058  1650  2E57               	goto	l11077
 11059  1651                     u4470:
 11060                           	line	35
 11061                           	
 11062  1651                     l11075:	
 11063  1651  09AD               	comf	(___awdiv@quotient),f
 11064  1652  09AE               	comf	(___awdiv@quotient+1),f
 11065  1653  0AAD               	incf	(___awdiv@quotient),f
 11066  1654  1903               	skipnz
 11067  1655  0AAE               	incf	(___awdiv@quotient+1),f
 11068  1656  2E57               	goto	l11077
 11069                           	
 11070  1657                     l7782:	
 11071                           	line	36
 11072                           	
 11073  1657                     l11077:	
 11074  1657  082E               	movf	(___awdiv@quotient+1),w
 11075  1658  01A7               	clrf	(?___awdiv+1)
 11076  1659  07A7               	addwf	(?___awdiv+1)
 11077  165A  082D               	movf	(___awdiv@quotient),w
 11078  165B  01A6               	clrf	(?___awdiv)
 11079  165C  07A6               	addwf	(?___awdiv)
 11080                           
 11081  165D  2E5E               	goto	l7783
 11082                           	
 11083  165E                     l11079:	
 11084                           	line	37
 11085                           	
 11086  165E                     l7783:	
 11087  165E  0008               	return
 11088                           	opt stack 0
 11089                           GLOBAL	__end_of___awdiv
 11090  165F                     	__end_of___awdiv:
 11091 ;; =============== function ___awdiv ends ============
 11092                           
 11093                           	signat	___awdiv,8314
 11094                           	global	___lwmod
 11095                           psect	text1093,local,class=CODE,delta=2
 11096                           global __ptext1093
 11097  1312                     __ptext1093:
 11098                           
 11099 ;; *************** function ___lwmod *****************
 11100 ;; Defined at:
 11101 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;  divisor         2   14[BANK0 ] unsigned int 
 11104 ;;  dividend        2   16[BANK0 ] unsigned int 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;  counter         1   19[BANK0 ] unsigned char 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  2   14[BANK0 ] unsigned int 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, status,0
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11116 ;;      Params:         0       4       0       0       0
 11117 ;;      Locals:         0       1       0       0       0
 11118 ;;      Temps:          0       1       0       0       0
 11119 ;;      Totals:         0       6       0       0       0
 11120 ;;Total ram usage:        6 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:    3
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_sprintf
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           psect	text1093
 11130                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11131                           	line	5
 11132                           	global	__size_of___lwmod
 11133  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 11134                           	
 11135  1312                     ___lwmod:	
 11136                           	opt	stack 1
 11137                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11138                           	line	8
 11139                           	
 11140  1312                     l11019:	
 11141  1312  1283               	bcf	status, 5	;RP0=0, select bank0
 11142  1313  1303               	bcf	status, 6	;RP1=0, select bank0
 11143  1314  082F               	movf	(___lwmod@divisor+1),w
 11144  1315  042E               	iorwf	(___lwmod@divisor),w
 11145  1316  1903               	skipnz
 11146  1317  2B19               	goto	u4321
 11147  1318  2B1A               	goto	u4320
 11148  1319                     u4321:
 11149  1319  2B50               	goto	l11037
 11150  131A                     u4320:
 11151                           	line	9
 11152                           	
 11153  131A                     l11021:	
 11154  131A  01B3               	clrf	(___lwmod@counter)
 11155  131B  1403               	bsf	status,0
 11156  131C  0DB3               	rlf	(___lwmod@counter),f
 11157                           	line	10
 11158  131D  2B2A               	goto	l11027
 11159                           	
 11160  131E                     l7651:	
 11161                           	line	11
 11162                           	
 11163  131E                     l11023:	
 11164  131E  3001               	movlw	01h
 11165                           	
 11166  131F                     u4335:
 11167  131F  1003               	clrc
 11168  1320  0DAE               	rlf	(___lwmod@divisor),f
 11169  1321  0DAF               	rlf	(___lwmod@divisor+1),f
 11170  1322  3EFF               	addlw	-1
 11171  1323  1D03               	skipz
 11172  1324  2B1F               	goto	u4335
 11173                           	line	12
 11174                           	
 11175  1325                     l11025:	
 11176  1325  3001               	movlw	(01h)
 11177  1326  00B2               	movwf	(??___lwmod+0)+0
 11178  1327  0832               	movf	(??___lwmod+0)+0,w
 11179  1328  07B3               	addwf	(___lwmod@counter),f
 11180  1329  2B2A               	goto	l11027
 11181                           	line	13
 11182                           	
 11183  132A                     l7650:	
 11184                           	line	10
 11185                           	
 11186  132A                     l11027:	
 11187  132A  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 11188  132B  2B2D               	goto	u4341
 11189  132C  2B2E               	goto	u4340
 11190  132D                     u4341:
 11191  132D  2B1E               	goto	l11023
 11192  132E                     u4340:
 11193  132E  2B30               	goto	l11029
 11194                           	
 11195  132F                     l7652:	
 11196  132F  2B30               	goto	l11029
 11197                           	line	14
 11198                           	
 11199  1330                     l7653:	
 11200                           	line	15
 11201                           	
 11202  1330                     l11029:	
 11203  1330  082F               	movf	(___lwmod@divisor+1),w
 11204  1331  0231               	subwf	(___lwmod@dividend+1),w
 11205  1332  1D03               	skipz
 11206  1333  2B36               	goto	u4355
 11207  1334  082E               	movf	(___lwmod@divisor),w
 11208  1335  0230               	subwf	(___lwmod@dividend),w
 11209  1336                     u4355:
 11210  1336  1C03               	skipc
 11211  1337  2B39               	goto	u4351
 11212  1338  2B3A               	goto	u4350
 11213  1339                     u4351:
 11214  1339  2B41               	goto	l11033
 11215  133A                     u4350:
 11216                           	line	16
 11217                           	
 11218  133A                     l11031:	
 11219  133A  082E               	movf	(___lwmod@divisor),w
 11220  133B  02B0               	subwf	(___lwmod@dividend),f
 11221  133C  082F               	movf	(___lwmod@divisor+1),w
 11222  133D  1C03               	skipc
 11223  133E  03B1               	decf	(___lwmod@dividend+1),f
 11224  133F  02B1               	subwf	(___lwmod@dividend+1),f
 11225  1340  2B41               	goto	l11033
 11226                           	
 11227  1341                     l7654:	
 11228                           	line	17
 11229                           	
 11230  1341                     l11033:	
 11231  1341  3001               	movlw	01h
 11232                           	
 11233  1342                     u4365:
 11234  1342  1003               	clrc
 11235  1343  0CAF               	rrf	(___lwmod@divisor+1),f
 11236  1344  0CAE               	rrf	(___lwmod@divisor),f
 11237  1345  3EFF               	addlw	-1
 11238  1346  1D03               	skipz
 11239  1347  2B42               	goto	u4365
 11240                           	line	18
 11241                           	
 11242  1348                     l11035:	
 11243  1348  3001               	movlw	low(01h)
 11244  1349  02B3               	subwf	(___lwmod@counter),f
 11245  134A  1D03               	btfss	status,2
 11246  134B  2B4D               	goto	u4371
 11247  134C  2B4E               	goto	u4370
 11248  134D                     u4371:
 11249  134D  2B30               	goto	l11029
 11250  134E                     u4370:
 11251  134E  2B50               	goto	l11037
 11252                           	
 11253  134F                     l7655:	
 11254  134F  2B50               	goto	l11037
 11255                           	line	19
 11256                           	
 11257  1350                     l7649:	
 11258                           	line	20
 11259                           	
 11260  1350                     l11037:	
 11261  1350  0831               	movf	(___lwmod@dividend+1),w
 11262  1351  01AF               	clrf	(?___lwmod+1)
 11263  1352  07AF               	addwf	(?___lwmod+1)
 11264  1353  0830               	movf	(___lwmod@dividend),w
 11265  1354  01AE               	clrf	(?___lwmod)
 11266  1355  07AE               	addwf	(?___lwmod)
 11267                           
 11268  1356  2B57               	goto	l7656
 11269                           	
 11270  1357                     l11039:	
 11271                           	line	21
 11272                           	
 11273  1357                     l7656:	
 11274  1357  0008               	return
 11275                           	opt stack 0
 11276                           GLOBAL	__end_of___lwmod
 11277  1358                     	__end_of___lwmod:
 11278 ;; =============== function ___lwmod ends ============
 11279                           
 11280                           	signat	___lwmod,8314
 11281                           	global	___lwdiv
 11282                           psect	text1094,local,class=CODE,delta=2
 11283                           global __ptext1094
 11284  13EA                     __ptext1094:
 11285                           
 11286 ;; *************** function ___lwdiv *****************
 11287 ;; Defined at:
 11288 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  divisor         2    6[BANK0 ] unsigned int 
 11291 ;;  dividend        2    8[BANK0 ] unsigned int 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;  quotient        2   11[BANK0 ] unsigned int 
 11294 ;;  counter         1   13[BANK0 ] unsigned char 
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  2    6[BANK0 ] unsigned int 
 11297 ;; Registers used:
 11298 ;;		wreg, status,2, status,0
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/0
 11301 ;;		On exit  : 0/0
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11304 ;;      Params:         0       4       0       0       0
 11305 ;;      Locals:         0       3       0       0       0
 11306 ;;      Temps:          0       1       0       0       0
 11307 ;;      Totals:         0       8       0       0       0
 11308 ;;Total ram usage:        8 bytes
 11309 ;; Hardware stack levels used:    1
 11310 ;; Hardware stack levels required when called:    3
 11311 ;; This function calls:
 11312 ;;		Nothing
 11313 ;; This function is called by:
 11314 ;;		_readAvgDistance
 11315 ;;		_ADCconvert
 11316 ;;		_sprintf
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           psect	text1094
 11320                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11321                           	line	5
 11322                           	global	__size_of___lwdiv
 11323  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 11324                           	
 11325  13EA                     ___lwdiv:	
 11326                           	opt	stack 1
 11327                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11328                           	line	9
 11329                           	
 11330  13EA                     l10993:	
 11331  13EA  1283               	bcf	status, 5	;RP0=0, select bank0
 11332  13EB  1303               	bcf	status, 6	;RP1=0, select bank0
 11333  13EC  01AB               	clrf	(___lwdiv@quotient)
 11334  13ED  01AC               	clrf	(___lwdiv@quotient+1)
 11335                           	line	10
 11336                           	
 11337  13EE                     l10995:	
 11338  13EE  0827               	movf	(___lwdiv@divisor+1),w
 11339  13EF  0426               	iorwf	(___lwdiv@divisor),w
 11340  13F0  1903               	skipnz
 11341  13F1  2BF3               	goto	u4251
 11342  13F2  2BF4               	goto	u4250
 11343  13F3                     u4251:
 11344  13F3  2C32               	goto	l11015
 11345  13F4                     u4250:
 11346                           	line	11
 11347                           	
 11348  13F4                     l10997:	
 11349  13F4  01AD               	clrf	(___lwdiv@counter)
 11350  13F5  1403               	bsf	status,0
 11351  13F6  0DAD               	rlf	(___lwdiv@counter),f
 11352                           	line	12
 11353  13F7  2C04               	goto	l11003
 11354                           	
 11355  13F8                     l7641:	
 11356                           	line	13
 11357                           	
 11358  13F8                     l10999:	
 11359  13F8  3001               	movlw	01h
 11360                           	
 11361  13F9                     u4265:
 11362  13F9  1003               	clrc
 11363  13FA  0DA6               	rlf	(___lwdiv@divisor),f
 11364  13FB  0DA7               	rlf	(___lwdiv@divisor+1),f
 11365  13FC  3EFF               	addlw	-1
 11366  13FD  1D03               	skipz
 11367  13FE  2BF9               	goto	u4265
 11368                           	line	14
 11369                           	
 11370  13FF                     l11001:	
 11371  13FF  3001               	movlw	(01h)
 11372  1400  00AA               	movwf	(??___lwdiv+0)+0
 11373  1401  082A               	movf	(??___lwdiv+0)+0,w
 11374  1402  07AD               	addwf	(___lwdiv@counter),f
 11375  1403  2C04               	goto	l11003
 11376                           	line	15
 11377                           	
 11378  1404                     l7640:	
 11379                           	line	12
 11380                           	
 11381  1404                     l11003:	
 11382  1404  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 11383  1405  2C07               	goto	u4271
 11384  1406  2C08               	goto	u4270
 11385  1407                     u4271:
 11386  1407  2BF8               	goto	l10999
 11387  1408                     u4270:
 11388  1408  2C0A               	goto	l11005
 11389                           	
 11390  1409                     l7642:	
 11391  1409  2C0A               	goto	l11005
 11392                           	line	16
 11393                           	
 11394  140A                     l7643:	
 11395                           	line	17
 11396                           	
 11397  140A                     l11005:	
 11398  140A  3001               	movlw	01h
 11399                           	
 11400  140B                     u4285:
 11401  140B  1003               	clrc
 11402  140C  0DAB               	rlf	(___lwdiv@quotient),f
 11403  140D  0DAC               	rlf	(___lwdiv@quotient+1),f
 11404  140E  3EFF               	addlw	-1
 11405  140F  1D03               	skipz
 11406  1410  2C0B               	goto	u4285
 11407                           	line	18
 11408  1411  0827               	movf	(___lwdiv@divisor+1),w
 11409  1412  0229               	subwf	(___lwdiv@dividend+1),w
 11410  1413  1D03               	skipz
 11411  1414  2C17               	goto	u4295
 11412  1415  0826               	movf	(___lwdiv@divisor),w
 11413  1416  0228               	subwf	(___lwdiv@dividend),w
 11414  1417                     u4295:
 11415  1417  1C03               	skipc
 11416  1418  2C1A               	goto	u4291
 11417  1419  2C1B               	goto	u4290
 11418  141A                     u4291:
 11419  141A  2C23               	goto	l11011
 11420  141B                     u4290:
 11421                           	line	19
 11422                           	
 11423  141B                     l11007:	
 11424  141B  0826               	movf	(___lwdiv@divisor),w
 11425  141C  02A8               	subwf	(___lwdiv@dividend),f
 11426  141D  0827               	movf	(___lwdiv@divisor+1),w
 11427  141E  1C03               	skipc
 11428  141F  03A9               	decf	(___lwdiv@dividend+1),f
 11429  1420  02A9               	subwf	(___lwdiv@dividend+1),f
 11430                           	line	20
 11431                           	
 11432  1421                     l11009:	
 11433  1421  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 11434  1422  2C23               	goto	l11011
 11435                           	line	21
 11436                           	
 11437  1423                     l7644:	
 11438                           	line	22
 11439                           	
 11440  1423                     l11011:	
 11441  1423  3001               	movlw	01h
 11442                           	
 11443  1424                     u4305:
 11444  1424  1003               	clrc
 11445  1425  0CA7               	rrf	(___lwdiv@divisor+1),f
 11446  1426  0CA6               	rrf	(___lwdiv@divisor),f
 11447  1427  3EFF               	addlw	-1
 11448  1428  1D03               	skipz
 11449  1429  2C24               	goto	u4305
 11450                           	line	23
 11451                           	
 11452  142A                     l11013:	
 11453  142A  3001               	movlw	low(01h)
 11454  142B  02AD               	subwf	(___lwdiv@counter),f
 11455  142C  1D03               	btfss	status,2
 11456  142D  2C2F               	goto	u4311
 11457  142E  2C30               	goto	u4310
 11458  142F                     u4311:
 11459  142F  2C0A               	goto	l11005
 11460  1430                     u4310:
 11461  1430  2C32               	goto	l11015
 11462                           	
 11463  1431                     l7645:	
 11464  1431  2C32               	goto	l11015
 11465                           	line	24
 11466                           	
 11467  1432                     l7639:	
 11468                           	line	25
 11469                           	
 11470  1432                     l11015:	
 11471  1432  082C               	movf	(___lwdiv@quotient+1),w
 11472  1433  01A7               	clrf	(?___lwdiv+1)
 11473  1434  07A7               	addwf	(?___lwdiv+1)
 11474  1435  082B               	movf	(___lwdiv@quotient),w
 11475  1436  01A6               	clrf	(?___lwdiv)
 11476  1437  07A6               	addwf	(?___lwdiv)
 11477                           
 11478  1438  2C39               	goto	l7646
 11479                           	
 11480  1439                     l11017:	
 11481                           	line	26
 11482                           	
 11483  1439                     l7646:	
 11484  1439  0008               	return
 11485                           	opt stack 0
 11486                           GLOBAL	__end_of___lwdiv
 11487  143A                     	__end_of___lwdiv:
 11488 ;; =============== function ___lwdiv ends ============
 11489                           
 11490                           	signat	___lwdiv,8314
 11491                           	global	___wmul
 11492                           psect	text1095,local,class=CODE,delta=2
 11493                           global __ptext1095
 11494  114E                     __ptext1095:
 11495                           
 11496 ;; *************** function ___wmul *****************
 11497 ;; Defined at:
 11498 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11501 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;  product         2    4[BANK0 ] unsigned int 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  2    0[BANK0 ] unsigned int 
 11506 ;; Registers used:
 11507 ;;		wreg, status,2, status,0
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11513 ;;      Params:         0       4       0       0       0
 11514 ;;      Locals:         0       2       0       0       0
 11515 ;;      Temps:          0       0       0       0       0
 11516 ;;      Totals:         0       6       0       0       0
 11517 ;;Total ram usage:        6 bytes
 11518 ;; Hardware stack levels used:    1
 11519 ;; Hardware stack levels required when called:    3
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_ADCconvert
 11524 ;;		_robot_turnRight
 11525 ;;		_abs
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           psect	text1095
 11529                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11530                           	line	3
 11531                           	global	__size_of___wmul
 11532  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 11533                           	
 11534  114E                     ___wmul:	
 11535                           	opt	stack 2
 11536                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11537                           	line	4
 11538                           	
 11539  114E                     l10981:	
 11540  114E  1283               	bcf	status, 5	;RP0=0, select bank0
 11541  114F  1303               	bcf	status, 6	;RP1=0, select bank0
 11542  1150  01A4               	clrf	(___wmul@product)
 11543  1151  01A5               	clrf	(___wmul@product+1)
 11544  1152  2953               	goto	l10983
 11545                           	line	6
 11546                           	
 11547  1153                     l7633:	
 11548                           	line	7
 11549                           	
 11550  1153                     l10983:	
 11551  1153  1C20               	btfss	(___wmul@multiplier),(0)&7
 11552  1154  2956               	goto	u4211
 11553  1155  2957               	goto	u4210
 11554  1156                     u4211:
 11555  1156  295D               	goto	l7634
 11556  1157                     u4210:
 11557                           	line	8
 11558                           	
 11559  1157                     l10985:	
 11560  1157  0822               	movf	(___wmul@multiplicand),w
 11561  1158  07A4               	addwf	(___wmul@product),f
 11562  1159  1803               	skipnc
 11563  115A  0AA5               	incf	(___wmul@product+1),f
 11564  115B  0823               	movf	(___wmul@multiplicand+1),w
 11565  115C  07A5               	addwf	(___wmul@product+1),f
 11566                           	
 11567  115D                     l7634:	
 11568                           	line	9
 11569  115D  3001               	movlw	01h
 11570                           	
 11571  115E                     u4225:
 11572  115E  1003               	clrc
 11573  115F  0DA2               	rlf	(___wmul@multiplicand),f
 11574  1160  0DA3               	rlf	(___wmul@multiplicand+1),f
 11575  1161  3EFF               	addlw	-1
 11576  1162  1D03               	skipz
 11577  1163  295E               	goto	u4225
 11578                           	line	10
 11579                           	
 11580  1164                     l10987:	
 11581  1164  3001               	movlw	01h
 11582                           	
 11583  1165                     u4235:
 11584  1165  1003               	clrc
 11585  1166  0CA1               	rrf	(___wmul@multiplier+1),f
 11586  1167  0CA0               	rrf	(___wmul@multiplier),f
 11587  1168  3EFF               	addlw	-1
 11588  1169  1D03               	skipz
 11589  116A  2965               	goto	u4235
 11590                           	line	11
 11591  116B  0821               	movf	((___wmul@multiplier+1)),w
 11592  116C  0420               	iorwf	((___wmul@multiplier)),w
 11593  116D  1D03               	skipz
 11594  116E  2970               	goto	u4241
 11595  116F  2971               	goto	u4240
 11596  1170                     u4241:
 11597  1170  2953               	goto	l10983
 11598  1171                     u4240:
 11599  1171  2972               	goto	l10989
 11600                           	
 11601  1172                     l7635:	
 11602                           	line	12
 11603                           	
 11604  1172                     l10989:	
 11605  1172  0825               	movf	(___wmul@product+1),w
 11606  1173  01A1               	clrf	(?___wmul+1)
 11607  1174  07A1               	addwf	(?___wmul+1)
 11608  1175  0824               	movf	(___wmul@product),w
 11609  1176  01A0               	clrf	(?___wmul)
 11610  1177  07A0               	addwf	(?___wmul)
 11611                           
 11612  1178  2979               	goto	l7636
 11613                           	
 11614  1179                     l10991:	
 11615                           	line	13
 11616                           	
 11617  1179                     l7636:	
 11618  1179  0008               	return
 11619                           	opt stack 0
 11620                           GLOBAL	__end_of___wmul
 11621  117A                     	__end_of___wmul:
 11622 ;; =============== function ___wmul ends ============
 11623                           
 11624                           	signat	___wmul,8314
 11625                           	global	_ser_isrx
 11626                           psect	text1096,local,class=CODE,delta=2
 11627                           global __ptext1096
 11628  1027                     __ptext1096:
 11629                           
 11630 ;; *************** function _ser_isrx *****************
 11631 ;; Defined at:
 11632 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;		None
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;		None
 11637 ;; Return value:  Size  Location     Type
 11638 ;;		None               void
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11646 ;;      Params:         0       0       0       0       0
 11647 ;;      Locals:         0       0       0       0       0
 11648 ;;      Temps:          0       0       0       0       0
 11649 ;;      Totals:         0       0       0       0       0
 11650 ;;Total ram usage:        0 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    3
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_ser_getch
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           psect	text1096
 11660                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11661                           	line	45
 11662                           	global	__size_of_ser_isrx
 11663  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11664                           	
 11665  1027                     _ser_isrx:	
 11666                           	opt	stack 1
 11667                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11668                           	line	46
 11669                           	
 11670  1027                     l10933:	
 11671                           ;ser.c: 46: if(OERR) {
 11672  1027  1283               	bcf	status, 5	;RP0=0, select bank0
 11673  1028  1303               	bcf	status, 6	;RP1=0, select bank0
 11674  1029  1C98               	btfss	(193/8),(193)&7
 11675  102A  282C               	goto	u4141
 11676  102B  282D               	goto	u4140
 11677  102C                     u4141:
 11678  102C  2832               	goto	l10941
 11679  102D                     u4140:
 11680                           	line	47
 11681                           	
 11682  102D                     l10935:	
 11683                           ;ser.c: 47: CREN = 0;
 11684  102D  1218               	bcf	(196/8),(196)&7
 11685                           	line	48
 11686                           ;ser.c: 48: CREN = 1;
 11687  102E  1618               	bsf	(196/8),(196)&7
 11688                           	line	49
 11689                           	
 11690  102F                     l10937:	
 11691                           ;ser.c: 49: return 0;
 11692  102F  1003               	clrc
 11693                           	
 11694  1030  283F               	goto	l6888
 11695                           	
 11696  1031                     l10939:	
 11697  1031  283F               	goto	l6888
 11698                           	line	50
 11699                           	
 11700  1032                     l6887:	
 11701                           	line	51
 11702                           	
 11703  1032                     l10941:	
 11704                           ;ser.c: 50: }
 11705                           ;ser.c: 51: return (rxiptr!=rxoptr);
 11706  1032  1683               	bsf	status, 5	;RP0=1, select bank1
 11707  1033  1303               	bcf	status, 6	;RP1=0, select bank1
 11708  1034  085B               	movf	(_rxiptr)^080h,w	;volatile
 11709  1035  065C               	xorwf	(_rxoptr)^080h,w	;volatile
 11710  1036  1D03               	skipz
 11711  1037  2839               	goto	u4151
 11712  1038  283A               	goto	u4150
 11713  1039                     u4151:
 11714  1039  283C               	goto	l10945
 11715  103A                     u4150:
 11716                           	
 11717  103A                     l10943:	
 11718  103A  1003               	clrc
 11719                           	
 11720  103B  283F               	goto	l6888
 11721                           	
 11722  103C                     l10661:	
 11723                           	
 11724  103C                     l10945:	
 11725  103C  1403               	setc
 11726                           	
 11727  103D  283F               	goto	l6888
 11728                           	
 11729  103E                     l10663:	
 11730  103E  283F               	goto	l6888
 11731                           	
 11732  103F                     l10947:	
 11733                           	line	52
 11734                           	
 11735  103F                     l6888:	
 11736  103F  0008               	return
 11737                           	opt stack 0
 11738                           GLOBAL	__end_of_ser_isrx
 11739  1040                     	__end_of_ser_isrx:
 11740 ;; =============== function _ser_isrx ends ============
 11741                           
 11742                           	signat	_ser_isrx,88
 11743                           	global	_spi_transfer
 11744                           psect	text1097,local,class=CODE,delta=2
 11745                           global __ptext1097
 11746  1FC2                     __ptext1097:
 11747                           
 11748 ;; *************** function _spi_transfer *****************
 11749 ;; Defined at:
 11750 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  data            1    wreg     unsigned char 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  data            1    2[BANK0 ] unsigned char 
 11755 ;;  temp            1    1[BANK0 ] unsigned char 
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  1    wreg      unsigned char 
 11758 ;; Registers used:
 11759 ;;		wreg
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11765 ;;      Params:         0       0       0       0       0
 11766 ;;      Locals:         0       2       0       0       0
 11767 ;;      Temps:          0       1       0       0       0
 11768 ;;      Totals:         0       3       0       0       0
 11769 ;;Total ram usage:        3 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    3
 11772 ;; This function calls:
 11773 ;;		Nothing
 11774 ;; This function is called by:
 11775 ;;		_rotate
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           psect	text1097
 11779                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11780                           	line	50
 11781                           	global	__size_of_spi_transfer
 11782  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 11783                           	
 11784  1FC2                     _spi_transfer:	
 11785                           	opt	stack 3
 11786                           ; Regs used in _spi_transfer: [wreg]
 11787                           ;spi_transfer@data stored from wreg
 11788  1FC2  1283               	bcf	status, 5	;RP0=0, select bank0
 11789  1FC3  1303               	bcf	status, 6	;RP1=0, select bank0
 11790  1FC4  00A2               	movwf	(spi_transfer@data)
 11791                           	line	51
 11792                           	
 11793  1FC5                     l10881:	
 11794                           ;steppermotor.c: 51: unsigned char temp = 0;
 11795  1FC5  01A1               	clrf	(spi_transfer@temp)
 11796                           	line	53
 11797                           ;steppermotor.c: 53: SSPIF = 0;
 11798  1FC6  118C               	bcf	(99/8),(99)&7
 11799                           	line	54
 11800                           	
 11801  1FC7                     l10883:	
 11802                           ;steppermotor.c: 54: SSPBUF = data;
 11803  1FC7  0822               	movf	(spi_transfer@data),w
 11804  1FC8  0093               	movwf	(19)	;volatile
 11805                           	line	56
 11806                           ;steppermotor.c: 56: while (SSPIF == 0);
 11807  1FC9  2FCA               	goto	l3749
 11808                           	
 11809  1FCA                     l3750:	
 11810                           	
 11811  1FCA                     l3749:	
 11812  1FCA  1D8C               	btfss	(99/8),(99)&7
 11813  1FCB  2FCD               	goto	u3981
 11814  1FCC  2FCE               	goto	u3980
 11815  1FCD                     u3981:
 11816  1FCD  2FCA               	goto	l3749
 11817  1FCE                     u3980:
 11818  1FCE  2FCF               	goto	l10885
 11819                           	
 11820  1FCF                     l3751:	
 11821                           	line	57
 11822                           	
 11823  1FCF                     l10885:	
 11824                           ;steppermotor.c: 57: temp = SSPBUF;
 11825  1FCF  0813               	movf	(19),w	;volatile
 11826  1FD0  00A0               	movwf	(??_spi_transfer+0)+0
 11827  1FD1  0820               	movf	(??_spi_transfer+0)+0,w
 11828  1FD2  00A1               	movwf	(spi_transfer@temp)
 11829                           	line	58
 11830                           	
 11831  1FD3                     l10887:	
 11832                           ;steppermotor.c: 58: SSPIF = 0;
 11833  1FD3  118C               	bcf	(99/8),(99)&7
 11834  1FD4  2FD5               	goto	l3752
 11835                           	line	60
 11836                           	
 11837  1FD5                     l10889:	
 11838                           	line	61
 11839                           ;steppermotor.c: 60: return temp;
 11840                           ;	Return value of _spi_transfer is never used
 11841                           	
 11842  1FD5                     l3752:	
 11843  1FD5  0008               	return
 11844                           	opt stack 0
 11845                           GLOBAL	__end_of_spi_transfer
 11846  1FD6                     	__end_of_spi_transfer:
 11847 ;; =============== function _spi_transfer ends ============
 11848                           
 11849                           	signat	_spi_transfer,4217
 11850                           	global	_ser_putch
 11851                           psect	text1098,local,class=CODE,delta=2
 11852                           global __ptext1098
 11853  11D2                     __ptext1098:
 11854                           
 11855 ;; *************** function _ser_putch *****************
 11856 ;; Defined at:
 11857 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  c               1    wreg     unsigned char 
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;  c               1    1[BANK0 ] unsigned char 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;		None               void
 11864 ;; Registers used:
 11865 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11871 ;;      Params:         0       0       0       0       0
 11872 ;;      Locals:         0       1       0       0       0
 11873 ;;      Temps:          0       1       0       0       0
 11874 ;;      Totals:         0       2       0       0       0
 11875 ;;Total ram usage:        2 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; Hardware stack levels required when called:    3
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		_ChargeMode
 11882 ;;		_robo_init
 11883 ;;		_robot_read
 11884 ;;		_RobotDrive
 11885 ;;		_robotTurn
 11886 ;;		_robot_turnRight
 11887 ;;		_RobotBattRead
 11888 ;;		_robotLoadSong
 11889 ;;		_ser_puts
 11890 ;;		_ser_puts2
 11891 ;;		_ser_puthex
 11892 ;; This function uses a non-reentrant model
 11893 ;;
 11894                           psect	text1098
 11895                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11896                           	line	70
 11897                           	global	__size_of_ser_putch
 11898  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 11899                           	
 11900  11D2                     _ser_putch:	
 11901                           	opt	stack 2
 11902                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 11903                           ;ser_putch@c stored from wreg
 11904  11D2  1283               	bcf	status, 5	;RP0=0, select bank0
 11905  11D3  1303               	bcf	status, 6	;RP1=0, select bank0
 11906  11D4  00A1               	movwf	(ser_putch@c)
 11907                           	line	71
 11908                           	
 11909  11D5                     l10845:	
 11910                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 11911  11D5  29D7               	goto	l10847
 11912                           	
 11913  11D6                     l6898:	
 11914                           	line	72
 11915                           ;ser.c: 72: continue;
 11916  11D6  29D7               	goto	l10847
 11917                           	
 11918  11D7                     l6897:	
 11919                           	line	71
 11920                           	
 11921  11D7                     l10847:	
 11922  11D7  1683               	bsf	status, 5	;RP0=1, select bank1
 11923  11D8  1303               	bcf	status, 6	;RP1=0, select bank1
 11924  11D9  0860               	movf	(_txiptr)^080h,w	;volatile
 11925  11DA  3E01               	addlw	01h
 11926  11DB  390F               	andlw	0Fh
 11927  11DC  0661               	xorwf	(_txoptr)^080h,w	;volatile
 11928  11DD  1903               	skipnz
 11929  11DE  29E0               	goto	u3931
 11930  11DF  29E1               	goto	u3930
 11931  11E0                     u3931:
 11932  11E0  29D7               	goto	l10847
 11933  11E1                     u3930:
 11934                           	
 11935  11E1                     l6899:	
 11936                           	line	73
 11937                           ;ser.c: 73: GIE=0;
 11938  11E1  138B               	bcf	(95/8),(95)&7
 11939                           	line	74
 11940                           	
 11941  11E2                     l10849:	
 11942                           ;ser.c: 74: txfifo[txiptr] = c;
 11943  11E2  1283               	bcf	status, 5	;RP0=0, select bank0
 11944  11E3  1303               	bcf	status, 6	;RP1=0, select bank0
 11945  11E4  0821               	movf	(ser_putch@c),w
 11946  11E5  00A0               	movwf	(??_ser_putch+0)+0
 11947  11E6  1683               	bsf	status, 5	;RP0=1, select bank1
 11948  11E7  1303               	bcf	status, 6	;RP1=0, select bank1
 11949  11E8  0860               	movf	(_txiptr)^080h,w
 11950  11E9  3EA0               	addlw	_txfifo&0ffh
 11951  11EA  0084               	movwf	fsr0
 11952  11EB  1283               	bcf	status, 5	;RP0=0, select bank0
 11953  11EC  1303               	bcf	status, 6	;RP1=0, select bank0
 11954  11ED  0820               	movf	(??_ser_putch+0)+0,w
 11955  11EE  1783               	bsf	status, 7	;select IRP bank3
 11956  11EF  0080               	movwf	indf
 11957                           	line	75
 11958                           	
 11959  11F0                     l10851:	
 11960                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 11961  11F0  1683               	bsf	status, 5	;RP0=1, select bank1
 11962  11F1  1303               	bcf	status, 6	;RP1=0, select bank1
 11963  11F2  0860               	movf	(_txiptr)^080h,w	;volatile
 11964  11F3  3E01               	addlw	01h
 11965  11F4  390F               	andlw	0Fh
 11966  11F5  1283               	bcf	status, 5	;RP0=0, select bank0
 11967  11F6  1303               	bcf	status, 6	;RP1=0, select bank0
 11968  11F7  00A0               	movwf	(??_ser_putch+0)+0
 11969  11F8  0820               	movf	(??_ser_putch+0)+0,w
 11970  11F9  1683               	bsf	status, 5	;RP0=1, select bank1
 11971  11FA  1303               	bcf	status, 6	;RP1=0, select bank1
 11972  11FB  00E0               	movwf	(_txiptr)^080h	;volatile
 11973                           	line	76
 11974                           	
 11975  11FC                     l10853:	
 11976                           ;ser.c: 76: TXIE=1;
 11977  11FC  160C               	bsf	(1124/8)^080h,(1124)&7
 11978                           	line	77
 11979                           	
 11980  11FD                     l10855:	
 11981                           ;ser.c: 77: GIE=1;
 11982  11FD  178B               	bsf	(95/8),(95)&7
 11983                           	line	78
 11984                           	
 11985  11FE                     l6900:	
 11986  11FE  0008               	return
 11987                           	opt stack 0
 11988                           GLOBAL	__end_of_ser_putch
 11989  11FF                     	__end_of_ser_putch:
 11990 ;; =============== function _ser_putch ends ============
 11991                           
 11992                           	signat	_ser_putch,4216
 11993                           	global	_Menu
 11994                           psect	text1099,local,class=CODE,delta=2
 11995                           global __ptext1099
 11996  1358                     __ptext1099:
 11997                           
 11998 ;; *************** function _Menu *****************
 11999 ;; Defined at:
 12000 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  BTN_input       1    wreg     unsigned char 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      unsigned char 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12014 ;;      Params:         0       0       0       0       0
 12015 ;;      Locals:         0       1       0       0       0
 12016 ;;      Temps:          0       0       0       0       0
 12017 ;;      Totals:         0       1       0       0       0
 12018 ;;Total ram usage:        1 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    3
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_main
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           psect	text1099
 12028                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12029                           	line	201
 12030                           	global	__size_of_Menu
 12031  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 12032                           	
 12033  1358                     _Menu:	
 12034                           	opt	stack 4
 12035                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 12036                           ;Menu@BTN_input stored from wreg
 12037  1358  1283               	bcf	status, 5	;RP0=0, select bank0
 12038  1359  1303               	bcf	status, 6	;RP1=0, select bank0
 12039  135A  00A0               	movwf	(Menu@BTN_input)
 12040                           	line	202
 12041                           	
 12042  135B                     l10815:	
 12043                           ;HMI.c: 202: switch (BTN_input)
 12044  135B  2B8A               	goto	l10833
 12045                           	line	204
 12046                           ;HMI.c: 203: {
 12047                           ;HMI.c: 204: case 1:
 12048                           	
 12049  135C                     l4570:	
 12050                           	line	206
 12051                           ;HMI.c: 206: break;
 12052  135C  2B9C               	goto	l10835
 12053                           	line	207
 12054                           ;HMI.c: 207: case 2:
 12055                           	
 12056  135D                     l4572:	
 12057                           	line	209
 12058                           ;HMI.c: 209: break;
 12059  135D  2B9C               	goto	l10835
 12060                           	line	210
 12061                           ;HMI.c: 210: case 3:
 12062                           	
 12063  135E                     l4573:	
 12064                           	line	211
 12065                           	
 12066  135E                     l10817:	
 12067                           ;HMI.c: 211: pos--;
 12068  135E  30FF               	movlw	low(-1)
 12069  135F  1683               	bsf	status, 5	;RP0=1, select bank1
 12070  1360  1303               	bcf	status, 6	;RP1=0, select bank1
 12071  1361  07C6               	addwf	(_pos)^080h,f
 12072  1362  1803               	skipnc
 12073  1363  0AC7               	incf	(_pos+1)^080h,f
 12074  1364  30FF               	movlw	high(-1)
 12075  1365  07C7               	addwf	(_pos+1)^080h,f
 12076                           	line	212
 12077                           	
 12078  1366                     l10819:	
 12079                           ;HMI.c: 212: if (pos < 0)
 12080  1366  1FC7               	btfss	(_pos+1)^080h,7
 12081  1367  2B69               	goto	u3911
 12082  1368  2B6A               	goto	u3910
 12083  1369                     u3911:
 12084  1369  2B9C               	goto	l10835
 12085  136A                     u3910:
 12086                           	line	213
 12087                           	
 12088  136A                     l10821:	
 12089                           ;HMI.c: 213: pos = 6 - 1;
 12090  136A  3005               	movlw	low(05h)
 12091  136B  00C6               	movwf	(_pos)^080h
 12092  136C  3000               	movlw	high(05h)
 12093  136D  00C7               	movwf	((_pos)^080h)+1
 12094  136E  2B9C               	goto	l10835
 12095                           	
 12096  136F                     l4574:	
 12097                           	line	215
 12098                           ;HMI.c: 215: break;
 12099  136F  2B9C               	goto	l10835
 12100                           	line	216
 12101                           ;HMI.c: 216: case 4:
 12102                           	
 12103  1370                     l4575:	
 12104                           	line	217
 12105                           	
 12106  1370                     l10823:	
 12107                           ;HMI.c: 217: pos++;
 12108  1370  3001               	movlw	low(01h)
 12109  1371  1683               	bsf	status, 5	;RP0=1, select bank1
 12110  1372  1303               	bcf	status, 6	;RP1=0, select bank1
 12111  1373  07C6               	addwf	(_pos)^080h,f
 12112  1374  1803               	skipnc
 12113  1375  0AC7               	incf	(_pos+1)^080h,f
 12114  1376  3000               	movlw	high(01h)
 12115  1377  07C7               	addwf	(_pos+1)^080h,f
 12116                           	line	218
 12117                           ;HMI.c: 218: if (pos == 6)
 12118  1378  3006               	movlw	06h
 12119  1379  0646               	xorwf	(_pos)^080h,w
 12120  137A  0447               	iorwf	(_pos+1)^080h,w
 12121  137B  1D03               	skipz
 12122  137C  2B7E               	goto	u3921
 12123  137D  2B7F               	goto	u3920
 12124  137E                     u3921:
 12125  137E  2B9C               	goto	l10835
 12126  137F                     u3920:
 12127                           	line	219
 12128                           	
 12129  137F                     l10825:	
 12130                           ;HMI.c: 219: pos = 0;
 12131  137F  01C6               	clrf	(_pos)^080h
 12132  1380  01C7               	clrf	(_pos+1)^080h
 12133  1381  2B9C               	goto	l10835
 12134                           	
 12135  1382                     l4576:	
 12136                           	line	221
 12137                           ;HMI.c: 221: break;
 12138  1382  2B9C               	goto	l10835
 12139                           	line	222
 12140                           ;HMI.c: 222: case 5:
 12141                           	
 12142  1383                     l4577:	
 12143                           	line	223
 12144                           	
 12145  1383                     l10827:	
 12146                           ;HMI.c: 223: return pos;
 12147  1383  1683               	bsf	status, 5	;RP0=1, select bank1
 12148  1384  1303               	bcf	status, 6	;RP1=0, select bank1
 12149  1385  0846               	movf	(_pos)^080h,w
 12150  1386  2B9E               	goto	l4578
 12151                           	
 12152  1387                     l10829:	
 12153  1387  2B9E               	goto	l4578
 12154                           	line	226
 12155                           ;HMI.c: 226: default:
 12156                           	
 12157  1388                     l4579:	
 12158                           	line	228
 12159                           ;HMI.c: 228: break;
 12160  1388  2B9C               	goto	l10835
 12161                           	line	229
 12162                           	
 12163  1389                     l10831:	
 12164                           ;HMI.c: 229: }
 12165  1389  2B9C               	goto	l10835
 12166                           	line	202
 12167                           	
 12168  138A                     l4569:	
 12169                           	
 12170  138A                     l10833:	
 12171  138A  1283               	bcf	status, 5	;RP0=0, select bank0
 12172  138B  0820               	movf	(Menu@BTN_input),w
 12173                           	; Switch size 1, requested type "space"
 12174                           ; Number of cases is 5, Range of values is 1 to 5
 12175                           ; switch strategies available:
 12176                           ; Name         Instructions Cycles
 12177                           ; simple_byte           16     9 (average)
 12178                           ; direct_byte           26    11 (fixed)
 12179                           ; jumptable            263     9 (fixed)
 12180                           ;	Chosen strategy is simple_byte
 12181                           
 12182                           	opt asmopt_off
 12183  138C  3A01               	xorlw	1^0	; case 1
 12184  138D  1903               	skipnz
 12185  138E  2B9C               	goto	l10835
 12186  138F  3A03               	xorlw	2^1	; case 2
 12187  1390  1903               	skipnz
 12188  1391  2B9C               	goto	l10835
 12189  1392  3A01               	xorlw	3^2	; case 3
 12190  1393  1903               	skipnz
 12191  1394  2B5E               	goto	l10817
 12192  1395  3A07               	xorlw	4^3	; case 4
 12193  1396  1903               	skipnz
 12194  1397  2B70               	goto	l10823
 12195  1398  3A01               	xorlw	5^4	; case 5
 12196  1399  1903               	skipnz
 12197  139A  2B83               	goto	l10827
 12198  139B  2B9C               	goto	l10835
 12199                           	opt asmopt_on
 12200                           
 12201                           	line	229
 12202                           	
 12203  139C                     l4571:	
 12204                           	line	230
 12205                           	
 12206  139C                     l10835:	
 12207                           ;HMI.c: 230: return 255;
 12208  139C  30FF               	movlw	(0FFh)
 12209  139D  2B9E               	goto	l4578
 12210                           	
 12211  139E                     l10837:	
 12212                           	line	231
 12213                           	
 12214  139E                     l4578:	
 12215  139E  0008               	return
 12216                           	opt stack 0
 12217                           GLOBAL	__end_of_Menu
 12218  139F                     	__end_of_Menu:
 12219 ;; =============== function _Menu ends ============
 12220                           
 12221                           	signat	_Menu,4217
 12222                           	global	_ser_init
 12223                           psect	text1100,local,class=CODE,delta=2
 12224                           global __ptext1100
 12225  10A3                     __ptext1100:
 12226                           
 12227 ;; *************** function _ser_init *****************
 12228 ;; Defined at:
 12229 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;		None
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;		None               void
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12243 ;;      Params:         0       0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0
 12245 ;;      Temps:          0       1       0       0       0
 12246 ;;      Totals:         0       1       0       0       0
 12247 ;;Total ram usage:        1 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    3
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_init
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           psect	text1100
 12257                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 12258                           	line	113
 12259                           	global	__size_of_ser_init
 12260  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 12261                           	
 12262  10A3                     _ser_init:	
 12263                           	opt	stack 3
 12264                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 12265                           	line	114
 12266                           	
 12267  10A3                     l10789:	
 12268                           ;ser.c: 114: TRISC |= 0b10000000;
 12269  10A3  1683               	bsf	status, 5	;RP0=1, select bank1
 12270  10A4  1303               	bcf	status, 6	;RP1=0, select bank1
 12271  10A5  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 12272                           	line	115
 12273                           	
 12274  10A6                     l10791:	
 12275                           ;ser.c: 115: TRISC &= 0b10111111;
 12276  10A6  30BF               	movlw	(0BFh)
 12277  10A7  1283               	bcf	status, 5	;RP0=0, select bank0
 12278  10A8  1303               	bcf	status, 6	;RP1=0, select bank0
 12279  10A9  00A0               	movwf	(??_ser_init+0)+0
 12280  10AA  0820               	movf	(??_ser_init+0)+0,w
 12281  10AB  1683               	bsf	status, 5	;RP0=1, select bank1
 12282  10AC  1303               	bcf	status, 6	;RP1=0, select bank1
 12283  10AD  0587               	andwf	(135)^080h,f	;volatile
 12284                           	line	116
 12285                           	
 12286  10AE                     l10793:	
 12287                           ;ser.c: 116: BRGH=1;
 12288  10AE  1518               	bsf	(1218/8)^080h,(1218)&7
 12289                           	line	118
 12290                           	
 12291  10AF                     l10795:	
 12292                           ;ser.c: 118: SPBRG=20;
 12293  10AF  3014               	movlw	(014h)
 12294  10B0  0099               	movwf	(153)^080h	;volatile
 12295                           	line	121
 12296                           	
 12297  10B1                     l10797:	
 12298                           ;ser.c: 121: TX9=0;
 12299  10B1  1318               	bcf	(1222/8)^080h,(1222)&7
 12300                           	line	122
 12301                           	
 12302  10B2                     l10799:	
 12303                           ;ser.c: 122: RX9=0;
 12304  10B2  1283               	bcf	status, 5	;RP0=0, select bank0
 12305  10B3  1303               	bcf	status, 6	;RP1=0, select bank0
 12306  10B4  1318               	bcf	(198/8),(198)&7
 12307                           	line	124
 12308                           	
 12309  10B5                     l10801:	
 12310                           ;ser.c: 124: SYNC=0;
 12311  10B5  1683               	bsf	status, 5	;RP0=1, select bank1
 12312  10B6  1303               	bcf	status, 6	;RP1=0, select bank1
 12313  10B7  1218               	bcf	(1220/8)^080h,(1220)&7
 12314                           	line	125
 12315                           	
 12316  10B8                     l10803:	
 12317                           ;ser.c: 125: SPEN=1;
 12318  10B8  1283               	bcf	status, 5	;RP0=0, select bank0
 12319  10B9  1303               	bcf	status, 6	;RP1=0, select bank0
 12320  10BA  1798               	bsf	(199/8),(199)&7
 12321                           	line	126
 12322                           	
 12323  10BB                     l10805:	
 12324                           ;ser.c: 126: CREN=1;
 12325  10BB  1618               	bsf	(196/8),(196)&7
 12326                           	line	127
 12327                           	
 12328  10BC                     l10807:	
 12329                           ;ser.c: 127: TXIE=0;
 12330  10BC  1683               	bsf	status, 5	;RP0=1, select bank1
 12331  10BD  1303               	bcf	status, 6	;RP1=0, select bank1
 12332  10BE  120C               	bcf	(1124/8)^080h,(1124)&7
 12333                           	line	128
 12334                           	
 12335  10BF                     l10809:	
 12336                           ;ser.c: 128: RCIE=1;
 12337  10BF  168C               	bsf	(1125/8)^080h,(1125)&7
 12338                           	line	129
 12339                           	
 12340  10C0                     l10811:	
 12341                           ;ser.c: 129: TXEN=1;
 12342  10C0  1698               	bsf	(1221/8)^080h,(1221)&7
 12343                           	line	132
 12344                           	
 12345  10C1                     l10813:	
 12346                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 12347  10C1  3000               	movlw	(0)
 12348  10C2  00E1               	movwf	(_txoptr)^080h	;volatile
 12349  10C3  00E0               	movwf	(_txiptr)^080h	;volatile
 12350  10C4  00DC               	movwf	(_rxoptr)^080h	;volatile
 12351  10C5  1283               	bcf	status, 5	;RP0=0, select bank0
 12352  10C6  1303               	bcf	status, 6	;RP1=0, select bank0
 12353  10C7  00A0               	movwf	(??_ser_init+0)+0
 12354  10C8  0820               	movf	(??_ser_init+0)+0,w
 12355  10C9  1683               	bsf	status, 5	;RP0=1, select bank1
 12356  10CA  1303               	bcf	status, 6	;RP1=0, select bank1
 12357  10CB  00DB               	movwf	(_rxiptr)^080h	;volatile
 12358                           	line	133
 12359                           	
 12360  10CC                     l6922:	
 12361  10CC  0008               	return
 12362                           	opt stack 0
 12363                           GLOBAL	__end_of_ser_init
 12364  10CD                     	__end_of_ser_init:
 12365 ;; =============== function _ser_init ends ============
 12366                           
 12367                           	signat	_ser_init,88
 12368                           	global	_adc_read
 12369                           psect	text1101,local,class=CODE,delta=2
 12370                           global __ptext1101
 12371  107A                     __ptext1101:
 12372                           
 12373 ;; *************** function _adc_read *****************
 12374 ;; Defined at:
 12375 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;		None
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  2    0[BANK0 ] unsigned int 
 12382 ;; Registers used:
 12383 ;;		wreg, status,2, status,0
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12389 ;;      Params:         0       2       0       0       0
 12390 ;;      Locals:         0       2       0       0       0
 12391 ;;      Temps:          0       2       0       0       0
 12392 ;;      Totals:         0       6       0       0       0
 12393 ;;Total ram usage:        6 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; Hardware stack levels required when called:    3
 12396 ;; This function calls:
 12397 ;;		Nothing
 12398 ;; This function is called by:
 12399 ;;		_adc_read_channel
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           psect	text1101
 12403                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 12404                           	line	76
 12405                           	global	__size_of_adc_read
 12406  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 12407                           	
 12408  107A                     _adc_read:	
 12409                           	opt	stack 0
 12410                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 12411                           	line	79
 12412                           	
 12413  107A                     l10669:	
 12414                           ;adc.c: 77: volatile unsigned int adc_value;
 12415                           ;adc.c: 79: ADRESH = 0;
 12416  107A  1283               	bcf	status, 5	;RP0=0, select bank0
 12417  107B  1303               	bcf	status, 6	;RP1=0, select bank0
 12418  107C  019E               	clrf	(30)	;volatile
 12419                           	line	81
 12420                           	
 12421  107D                     l10671:	
 12422                           ;adc.c: 81: GO = 1;
 12423  107D  151F               	bsf	(250/8),(250)&7
 12424                           	line	82
 12425                           ;adc.c: 82: while(GO) continue;
 12426  107E  287F               	goto	l703
 12427                           	
 12428  107F                     l704:	
 12429                           	
 12430  107F                     l703:	
 12431  107F  191F               	btfsc	(250/8),(250)&7
 12432  1080  2882               	goto	u3721
 12433  1081  2883               	goto	u3720
 12434  1082                     u3721:
 12435  1082  287F               	goto	l703
 12436  1083                     u3720:
 12437                           	
 12438  1083                     l705:	
 12439                           	line	83
 12440                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12441  1083  0000               nop ;#
 12442                           	line	84
 12443                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12444  1084  0000               nop ;#
 12445                           	line	85
 12446                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12447  1085  0000               nop ;#
 12448                           psect	text1101
 12449                           	line	88
 12450                           	
 12451  1086                     l10673:	
 12452                           ;adc.c: 88: adc_value = ADRESH;
 12453  1086  1283               	bcf	status, 5	;RP0=0, select bank0
 12454  1087  1303               	bcf	status, 6	;RP1=0, select bank0
 12455  1088  081E               	movf	(30),w	;volatile
 12456  1089  00A2               	movwf	(??_adc_read+0)+0
 12457  108A  01A3               	clrf	(??_adc_read+0)+0+1
 12458  108B  0822               	movf	0+(??_adc_read+0)+0,w
 12459  108C  00A4               	movwf	(adc_read@adc_value)	;volatile
 12460  108D  0823               	movf	1+(??_adc_read+0)+0,w
 12461  108E  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 12462                           	line	89
 12463                           ;adc.c: 89: adc_value <<= 1;
 12464  108F  3001               	movlw	01h
 12465                           	
 12466  1090                     u3735:
 12467  1090  1003               	clrc
 12468  1091  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 12469  1092  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 12470  1093  3EFF               	addlw	-1
 12471  1094  1D03               	skipz
 12472  1095  2890               	goto	u3735
 12473                           	line	90
 12474                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 12475  1096  1683               	bsf	status, 5	;RP0=1, select bank1
 12476  1097  1303               	bcf	status, 6	;RP1=0, select bank1
 12477  1098  081E               	movf	(158)^080h,w	;volatile
 12478                           	line	93
 12479                           	
 12480  1099                     l10675:	
 12481                           ;adc.c: 93: return (adc_value);
 12482  1099  1283               	bcf	status, 5	;RP0=0, select bank0
 12483  109A  1303               	bcf	status, 6	;RP1=0, select bank0
 12484  109B  0825               	movf	(adc_read@adc_value+1),w	;volatile
 12485  109C  01A1               	clrf	(?_adc_read+1)
 12486  109D  07A1               	addwf	(?_adc_read+1)
 12487  109E  0824               	movf	(adc_read@adc_value),w	;volatile
 12488  109F  01A0               	clrf	(?_adc_read)
 12489  10A0  07A0               	addwf	(?_adc_read)
 12490                           
 12491  10A1  28A2               	goto	l706
 12492                           	
 12493  10A2                     l10677:	
 12494                           	line	94
 12495                           	
 12496  10A2                     l706:	
 12497  10A2  0008               	return
 12498                           	opt stack 0
 12499                           GLOBAL	__end_of_adc_read
 12500  10A3                     	__end_of_adc_read:
 12501 ;; =============== function _adc_read ends ============
 12502                           
 12503                           	signat	_adc_read,90
 12504                           	global	_isr1
 12505                           psect	text1102,local,class=CODE,delta=2
 12506                           global __ptext1102
 12507  08FA                     __ptext1102:
 12508                           
 12509 ;; *************** function _isr1 *****************
 12510 ;; Defined at:
 12511 ;;		line 107 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;		None
 12514 ;; Auto vars:     Size  Location     Type
 12515 ;;		None
 12516 ;; Return value:  Size  Location     Type
 12517 ;;		None               void
 12518 ;; Registers used:
 12519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12520 ;; Tracked objects:
 12521 ;;		On entry : 0/0
 12522 ;;		On exit  : 0/0
 12523 ;;		Unchanged: 0/0
 12524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12525 ;;      Params:         0       0       0       0       0
 12526 ;;      Locals:         0       0       0       0       0
 12527 ;;      Temps:          5       0       0       0       0
 12528 ;;      Totals:         5       0       0       0       0
 12529 ;;Total ram usage:        5 bytes
 12530 ;; Hardware stack levels used:    1
 12531 ;; Hardware stack levels required when called:    2
 12532 ;; This function calls:
 12533 ;;		i1___lwmod
 12534 ;;		_ReadButtons
 12535 ;; This function is called by:
 12536 ;;		Interrupt level 1
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           psect	text1102
 12540                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 12541                           	line	107
 12542                           	global	__size_of_isr1
 12543  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 12544                           	
 12545  08FA                     _isr1:	
 12546                           	opt	stack 0
 12547                           ; Regs used in _isr1: [allreg]
 12548                           psect	intentry,class=CODE,delta=2
 12549                           global __pintentry
 12550  0004                     __pintentry:
 12551                           global interrupt_function
 12552  0004                     interrupt_function:
 12553                           	global saved_w
 12554  007E                     	saved_w	set	btemp+0
 12555  0004  00FE               	movwf	saved_w
 12556  0005  0E03               	swapf	status,w
 12557  0006  00F9               	movwf	(??_isr1+1)
 12558  0007  0804               	movf	fsr0,w
 12559  0008  00FA               	movwf	(??_isr1+2)
 12560  0009  080A               	movf	pclath,w
 12561  000A  00FB               	movwf	(??_isr1+3)
 12562  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 12563  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 12564  000D  087F               	movf	btemp+1,w
 12565  000E  00FC               	movwf	(??_isr1+4)
 12566  000F  120A  158A  28FA   	ljmp	_isr1
 12567                           psect	text1102
 12568                           	line	108
 12569                           	
 12570  08FA                     i1l10705:	
 12571                           ;Main.c: 108: if(TMR0IF)
 12572  08FA  1D0B               	btfss	(90/8),(90)&7
 12573  08FB  28FD               	goto	u377_21
 12574  08FC  28FE               	goto	u377_20
 12575  08FD                     u377_21:
 12576  08FD  294D               	goto	i1l10727
 12577  08FE                     u377_20:
 12578                           	line	110
 12579                           	
 12580  08FE                     i1l10707:	
 12581                           ;Main.c: 109: {
 12582                           ;Main.c: 110: TMR0IF = 0;
 12583  08FE  110B               	bcf	(90/8),(90)&7
 12584                           	line	111
 12585                           	
 12586  08FF                     i1l10709:	
 12587                           ;Main.c: 111: TMR0 = 100;
 12588  08FF  3064               	movlw	(064h)
 12589  0900  0081               	movwf	(1)	;volatile
 12590                           	line	113
 12591                           ;Main.c: 113: RTC_Counter++;
 12592  0901  3001               	movlw	low(01h)
 12593  0902  1683               	bsf	status, 5	;RP0=1, select bank1
 12594  0903  1303               	bcf	status, 6	;RP1=0, select bank1
 12595  0904  07BA               	addwf	(_RTC_Counter)^080h,f	;volatile
 12596  0905  1803               	skipnc
 12597  0906  0ABB               	incf	(_RTC_Counter+1)^080h,f	;volatile
 12598  0907  3000               	movlw	high(01h)
 12599  0908  07BB               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 12600                           	line	116
 12601                           	
 12602  0909                     i1l10711:	
 12603                           ;Main.c: 116: RTC_FLAG_1MS = 1;
 12604  0909  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 12605                           	line	117
 12606                           	
 12607  090A                     i1l10713:	
 12608                           ;Main.c: 117: if(RTC_Counter % 250 == 0)
 12609  090A  30FA               	movlw	low(0FAh)
 12610  090B  00F2               	movwf	(?i1___lwmod)
 12611  090C  3000               	movlw	high(0FAh)
 12612  090D  00F3               	movwf	((?i1___lwmod))+1
 12613  090E  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12614  090F  01F5               	clrf	1+(?i1___lwmod)+02h
 12615  0910  07F5               	addwf	1+(?i1___lwmod)+02h
 12616  0911  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12617  0912  01F4               	clrf	0+(?i1___lwmod)+02h
 12618  0913  07F4               	addwf	0+(?i1___lwmod)+02h
 12619                           
 12620  0914  160A  118A  22CE   	fcall	i1___lwmod
              120A  158A         
 12621  0919  0873               	movf	((1+(?i1___lwmod))),w
 12622  091A  0472               	iorwf	((0+(?i1___lwmod))),w
 12623  091B  1D03               	skipz
 12624  091C  291E               	goto	u378_21
 12625  091D  291F               	goto	u378_20
 12626  091E                     u378_21:
 12627  091E  2921               	goto	i1l10717
 12628  091F                     u378_20:
 12629                           	line	119
 12630                           	
 12631  091F                     i1l10715:	
 12632                           ;Main.c: 118: {
 12633                           ;Main.c: 119: RTC_FLAG_250MS = 1;
 12634  091F  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 12635  0920  2921               	goto	i1l10717
 12636                           	line	120
 12637                           	
 12638  0921                     i1l2237:	
 12639                           	line	121
 12640                           	
 12641  0921                     i1l10717:	
 12642                           ;Main.c: 120: }
 12643                           ;Main.c: 121: if(RTC_Counter % 500 == 0)
 12644  0921  30F4               	movlw	low(01F4h)
 12645  0922  00F2               	movwf	(?i1___lwmod)
 12646  0923  3001               	movlw	high(01F4h)
 12647  0924  00F3               	movwf	((?i1___lwmod))+1
 12648  0925  1683               	bsf	status, 5	;RP0=1, select bank1
 12649  0926  1303               	bcf	status, 6	;RP1=0, select bank1
 12650  0927  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12651  0928  01F5               	clrf	1+(?i1___lwmod)+02h
 12652  0929  07F5               	addwf	1+(?i1___lwmod)+02h
 12653  092A  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12654  092B  01F4               	clrf	0+(?i1___lwmod)+02h
 12655  092C  07F4               	addwf	0+(?i1___lwmod)+02h
 12656                           
 12657  092D  160A  118A  22CE   	fcall	i1___lwmod
              120A  158A         
 12658  0932  0873               	movf	((1+(?i1___lwmod))),w
 12659  0933  0472               	iorwf	((0+(?i1___lwmod))),w
 12660  0934  1D03               	skipz
 12661  0935  2937               	goto	u379_21
 12662  0936  2938               	goto	u379_20
 12663  0937                     u379_21:
 12664  0937  293E               	goto	i1l10723
 12665  0938                     u379_20:
 12666                           	line	123
 12667                           	
 12668  0938                     i1l10719:	
 12669                           ;Main.c: 122: {
 12670                           ;Main.c: 123: RTC_FLAG_500MS = 1;
 12671  0938  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 12672                           	line	124
 12673                           	
 12674  0939                     i1l10721:	
 12675                           ;Main.c: 124: RB0 ^= 0x01;
 12676  0939  1283               	bcf	status, 5	;RP0=0, select bank0
 12677  093A  1303               	bcf	status, 6	;RP1=0, select bank0
 12678  093B  3001               	movlw	1<<((48)&7)
 12679  093C  0686               	xorwf	((48)/8),f
 12680  093D  293E               	goto	i1l10723
 12681                           	line	125
 12682                           	
 12683  093E                     i1l2238:	
 12684                           	line	126
 12685                           	
 12686  093E                     i1l10723:	
 12687                           ;Main.c: 125: }
 12688                           ;Main.c: 126: if (buttonPressed == 0)
 12689  093E  08FD               	movf	(_buttonPressed),f
 12690  093F  1D03               	skipz	;volatile
 12691  0940  2942               	goto	u380_21
 12692  0941  2943               	goto	u380_20
 12693  0942                     u380_21:
 12694  0942  294D               	goto	i1l10727
 12695  0943                     u380_20:
 12696                           	line	128
 12697                           	
 12698  0943                     i1l10725:	
 12699                           ;Main.c: 127: {
 12700                           ;Main.c: 128: buttonPressed = ReadButtons();
 12701  0943  160A  118A  222E   	fcall	_ReadButtons
              120A  158A         
 12702  0948  00F8               	movwf	(??_isr1+0)+0
 12703  0949  0878               	movf	(??_isr1+0)+0,w
 12704  094A  00FD               	movwf	(_buttonPressed)	;volatile
 12705  094B  294D               	goto	i1l10727
 12706                           	line	129
 12707                           	
 12708  094C                     i1l2239:	
 12709  094C  294D               	goto	i1l10727
 12710                           	line	130
 12711                           	
 12712  094D                     i1l2236:	
 12713                           	line	131
 12714                           	
 12715  094D                     i1l10727:	
 12716                           ;Main.c: 129: }
 12717                           ;Main.c: 130: }
 12718                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 12719  094D  1283               	bcf	status, 5	;RP0=0, select bank0
 12720  094E  1303               	bcf	status, 6	;RP1=0, select bank0
 12721  094F  1E8C               	btfss	(101/8),(101)&7
 12722  0950  2952               	goto	u381_21
 12723  0951  2953               	goto	u381_20
 12724  0952                     u381_21:
 12725  0952  296F               	goto	i1l10737
 12726  0953                     u381_20:
 12727                           	
 12728  0953                     i1l10729:	
 12729  0953  081A               	movf	(26),w	;volatile
 12730  0954  00F8               	movwf	(??_isr1+0)+0
 12731  0955  1683               	bsf	status, 5	;RP0=1, select bank1
 12732  0956  1303               	bcf	status, 6	;RP1=0, select bank1
 12733  0957  085B               	movf	(_rxiptr)^080h,w
 12734  0958  3EA0               	addlw	_rxfifo&0ffh
 12735  0959  0084               	movwf	fsr0
 12736  095A  0878               	movf	(??_isr1+0)+0,w
 12737  095B  1383               	bcf	status, 7	;select IRP bank1
 12738  095C  0080               	movwf	indf
 12739                           	
 12740  095D                     i1l10731:	
 12741  095D  085B               	movf	(_rxiptr)^080h,w	;volatile
 12742  095E  3E01               	addlw	01h
 12743  095F  390F               	andlw	0Fh
 12744  0960  00F8               	movwf	(??_isr1+0)+0
 12745  0961  0878               	movf	(??_isr1+0)+0,w
 12746  0962  00DD               	movwf	(_ser_tmp)^080h
 12747                           	
 12748  0963                     i1l10733:	
 12749  0963  085D               	movf	(_ser_tmp)^080h,w
 12750  0964  065C               	xorwf	(_rxoptr)^080h,w	;volatile
 12751  0965  1903               	skipnz
 12752  0966  2968               	goto	u382_21
 12753  0967  2969               	goto	u382_20
 12754  0968                     u382_21:
 12755  0968  296F               	goto	i1l10737
 12756  0969                     u382_20:
 12757                           	
 12758  0969                     i1l10735:	
 12759  0969  085D               	movf	(_ser_tmp)^080h,w
 12760  096A  00F8               	movwf	(??_isr1+0)+0
 12761  096B  0878               	movf	(??_isr1+0)+0,w
 12762  096C  00DB               	movwf	(_rxiptr)^080h	;volatile
 12763  096D  296F               	goto	i1l10737
 12764                           	
 12765  096E                     i1l2241:	
 12766  096E  296F               	goto	i1l10737
 12767                           	
 12768  096F                     i1l2240:	
 12769                           	
 12770  096F                     i1l10737:	
 12771  096F  1283               	bcf	status, 5	;RP0=0, select bank0
 12772  0970  1E0C               	btfss	(100/8),(100)&7
 12773  0971  2973               	goto	u383_21
 12774  0972  2974               	goto	u383_20
 12775  0973                     u383_21:
 12776  0973  2995               	goto	i1l2244
 12777  0974                     u383_20:
 12778                           	
 12779  0974                     i1l10739:	
 12780  0974  1683               	bsf	status, 5	;RP0=1, select bank1
 12781  0975  1303               	bcf	status, 6	;RP1=0, select bank1
 12782  0976  1E0C               	btfss	(1124/8)^080h,(1124)&7
 12783  0977  2979               	goto	u384_21
 12784  0978  297A               	goto	u384_20
 12785  0979                     u384_21:
 12786  0979  2995               	goto	i1l2244
 12787  097A                     u384_20:
 12788                           	
 12789  097A                     i1l10741:	
 12790  097A  0861               	movf	(_txoptr)^080h,w
 12791  097B  3EA0               	addlw	_txfifo&0ffh
 12792  097C  0084               	movwf	fsr0
 12793  097D  1783               	bsf	status, 7	;select IRP bank3
 12794  097E  0800               	movf	indf,w
 12795  097F  1283               	bcf	status, 5	;RP0=0, select bank0
 12796  0980  1303               	bcf	status, 6	;RP1=0, select bank0
 12797  0981  0099               	movwf	(25)	;volatile
 12798                           	
 12799  0982                     i1l10743:	
 12800  0982  3001               	movlw	(01h)
 12801  0983  00F8               	movwf	(??_isr1+0)+0
 12802  0984  0878               	movf	(??_isr1+0)+0,w
 12803  0985  1683               	bsf	status, 5	;RP0=1, select bank1
 12804  0986  1303               	bcf	status, 6	;RP1=0, select bank1
 12805  0987  07E1               	addwf	(_txoptr)^080h,f	;volatile
 12806                           	
 12807  0988                     i1l10745:	
 12808  0988  300F               	movlw	(0Fh)
 12809  0989  00F8               	movwf	(??_isr1+0)+0
 12810  098A  0878               	movf	(??_isr1+0)+0,w
 12811  098B  05E1               	andwf	(_txoptr)^080h,f	;volatile
 12812                           	
 12813  098C                     i1l10747:	
 12814  098C  0861               	movf	(_txoptr)^080h,w	;volatile
 12815  098D  0660               	xorwf	(_txiptr)^080h,w	;volatile
 12816  098E  1D03               	skipz
 12817  098F  2991               	goto	u385_21
 12818  0990  2992               	goto	u385_20
 12819  0991                     u385_21:
 12820  0991  2995               	goto	i1l2244
 12821  0992                     u385_20:
 12822                           	
 12823  0992                     i1l10749:	
 12824  0992  120C               	bcf	(1124/8)^080h,(1124)&7
 12825  0993  2995               	goto	i1l2244
 12826                           	
 12827  0994                     i1l2243:	
 12828  0994  2995               	goto	i1l2244
 12829                           	
 12830  0995                     i1l2242:	
 12831                           	line	132
 12832                           	
 12833  0995                     i1l2244:	
 12834  0995  087C               	movf	(??_isr1+4),w
 12835  0996  1283               	bcf	status, 5	;RP0=0, select bank0
 12836  0997  00FF               	movwf	btemp+1
 12837  0998  087B               	movf	(??_isr1+3),w
 12838  0999  008A               	movwf	pclath
 12839  099A  087A               	movf	(??_isr1+2),w
 12840  099B  0084               	movwf	fsr0
 12841  099C  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 12842  099D  0083               	movwf	status
 12843  099E  0EFE               	swapf	saved_w,f
 12844  099F  0E7E               	swapf	saved_w,w
 12845  09A0  0009               	retfie
 12846                           	opt stack 0
 12847                           GLOBAL	__end_of_isr1
 12848  09A1                     	__end_of_isr1:
 12849 ;; =============== function _isr1 ends ============
 12850                           
 12851                           	signat	_isr1,88
 12852                           	global	_ReadButtons
 12853                           psect	text1103,local,class=CODE,delta=2
 12854                           global __ptext1103
 12855  122E                     __ptext1103:
 12856                           
 12857 ;; *************** function _ReadButtons *****************
 12858 ;; Defined at:
 12859 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;		None
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;		None
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  1    wreg      unsigned char 
 12866 ;; Registers used:
 12867 ;;		wreg, status,2, status,0, pclath, cstack
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/0
 12870 ;;		On exit  : 0/0
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12873 ;;      Params:         0       0       0       0       0
 12874 ;;      Locals:         0       0       0       0       0
 12875 ;;      Temps:          0       0       0       0       0
 12876 ;;      Totals:         0       0       0       0       0
 12877 ;;Total ram usage:        0 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:    1
 12880 ;; This function calls:
 12881 ;;		_Debounce
 12882 ;; This function is called by:
 12883 ;;		_isr1
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           psect	text1103
 12887                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12888                           	line	159
 12889                           	global	__size_of_ReadButtons
 12890  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 12891                           	
 12892  122E                     _ReadButtons:	
 12893                           	opt	stack 0
 12894                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 12895                           	line	161
 12896                           	
 12897  122E                     i1l10751:	
 12898                           ;HMI.c: 161: Debounce();
 12899  122E  160A  118A  2768   	fcall	_Debounce
              160A  118A         
 12900                           	line	163
 12901                           	
 12902  1233                     i1l10753:	
 12903                           ;HMI.c: 163: if(UpPressed)
 12904  1233  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 12905  1234  2A36               	goto	u386_21
 12906  1235  2A37               	goto	u386_20
 12907  1236                     u386_21:
 12908  1236  2A3B               	goto	i1l4561
 12909  1237                     u386_20:
 12910                           	line	165
 12911                           	
 12912  1237                     i1l10755:	
 12913                           ;HMI.c: 164: {
 12914                           ;HMI.c: 165: UpPressed = 0;
 12915  1237  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 12916                           	line	166
 12917                           	
 12918  1238                     i1l10757:	
 12919                           ;HMI.c: 166: return 1;
 12920  1238  3001               	movlw	(01h)
 12921  1239  2A5D               	goto	i1l4562
 12922                           	
 12923  123A                     i1l10759:	
 12924  123A  2A5D               	goto	i1l4562
 12925                           	line	168
 12926                           	
 12927  123B                     i1l4561:	
 12928                           	line	170
 12929                           ;HMI.c: 168: }
 12930                           ;HMI.c: 170: if(DownPressed)
 12931  123B  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 12932  123C  2A3E               	goto	u387_21
 12933  123D  2A3F               	goto	u387_20
 12934  123E                     u387_21:
 12935  123E  2A43               	goto	i1l4563
 12936  123F                     u387_20:
 12937                           	line	172
 12938                           	
 12939  123F                     i1l10761:	
 12940                           ;HMI.c: 171: {
 12941                           ;HMI.c: 172: DownPressed = 0;
 12942  123F  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 12943                           	line	173
 12944                           	
 12945  1240                     i1l10763:	
 12946                           ;HMI.c: 173: return 2;
 12947  1240  3002               	movlw	(02h)
 12948  1241  2A5D               	goto	i1l4562
 12949                           	
 12950  1242                     i1l10765:	
 12951  1242  2A5D               	goto	i1l4562
 12952                           	line	175
 12953                           	
 12954  1243                     i1l4563:	
 12955                           	line	176
 12956                           ;HMI.c: 175: }
 12957                           ;HMI.c: 176: if(LeftPressed)
 12958  1243  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 12959  1244  2A46               	goto	u388_21
 12960  1245  2A47               	goto	u388_20
 12961  1246                     u388_21:
 12962  1246  2A4B               	goto	i1l4564
 12963  1247                     u388_20:
 12964                           	line	178
 12965                           	
 12966  1247                     i1l10767:	
 12967                           ;HMI.c: 177: {
 12968                           ;HMI.c: 178: LeftPressed = 0;
 12969  1247  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 12970                           	line	179
 12971                           	
 12972  1248                     i1l10769:	
 12973                           ;HMI.c: 179: return 3;
 12974  1248  3003               	movlw	(03h)
 12975  1249  2A5D               	goto	i1l4562
 12976                           	
 12977  124A                     i1l10771:	
 12978  124A  2A5D               	goto	i1l4562
 12979                           	line	181
 12980                           	
 12981  124B                     i1l4564:	
 12982                           	line	182
 12983                           ;HMI.c: 181: }
 12984                           ;HMI.c: 182: if(RightPressed)
 12985  124B  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 12986  124C  2A4E               	goto	u389_21
 12987  124D  2A4F               	goto	u389_20
 12988  124E                     u389_21:
 12989  124E  2A53               	goto	i1l4565
 12990  124F                     u389_20:
 12991                           	line	184
 12992                           	
 12993  124F                     i1l10773:	
 12994                           ;HMI.c: 183: {
 12995                           ;HMI.c: 184: RightPressed = 0;
 12996  124F  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 12997                           	line	185
 12998                           	
 12999  1250                     i1l10775:	
 13000                           ;HMI.c: 185: return 4;
 13001  1250  3004               	movlw	(04h)
 13002  1251  2A5D               	goto	i1l4562
 13003                           	
 13004  1252                     i1l10777:	
 13005  1252  2A5D               	goto	i1l4562
 13006                           	line	187
 13007                           	
 13008  1253                     i1l4565:	
 13009                           	line	189
 13010                           ;HMI.c: 187: }
 13011                           ;HMI.c: 189: if(CenterPressed)
 13012  1253  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 13013  1254  2A56               	goto	u390_21
 13014  1255  2A57               	goto	u390_20
 13015  1256                     u390_21:
 13016  1256  2A5B               	goto	i1l10785
 13017  1257                     u390_20:
 13018                           	line	191
 13019                           	
 13020  1257                     i1l10779:	
 13021                           ;HMI.c: 190: {
 13022                           ;HMI.c: 191: CenterPressed = 0;
 13023  1257  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 13024                           	line	192
 13025                           	
 13026  1258                     i1l10781:	
 13027                           ;HMI.c: 192: return 5;
 13028  1258  3005               	movlw	(05h)
 13029  1259  2A5D               	goto	i1l4562
 13030                           	
 13031  125A                     i1l10783:	
 13032  125A  2A5D               	goto	i1l4562
 13033                           	line	194
 13034                           	
 13035  125B                     i1l4566:	
 13036                           	line	195
 13037                           	
 13038  125B                     i1l10785:	
 13039                           ;HMI.c: 194: }
 13040                           ;HMI.c: 195: return 0;
 13041  125B  3000               	movlw	(0)
 13042  125C  2A5D               	goto	i1l4562
 13043                           	
 13044  125D                     i1l10787:	
 13045                           	line	196
 13046                           	
 13047  125D                     i1l4562:	
 13048  125D  0008               	return
 13049                           	opt stack 0
 13050                           GLOBAL	__end_of_ReadButtons
 13051  125E                     	__end_of_ReadButtons:
 13052 ;; =============== function _ReadButtons ends ============
 13053                           
 13054                           	signat	_ReadButtons,89
 13055                           	global	i1___lwmod
 13056                           psect	text1104,local,class=CODE,delta=2
 13057                           global __ptext1104
 13058  12CE                     __ptext1104:
 13059                           
 13060 ;; *************** function i1___lwmod *****************
 13061 ;; Defined at:
 13062 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;  __lwmod         2    0[COMMON] unsigned int 
 13065 ;;  __lwmod         2    2[COMMON] unsigned int 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  __lwmod         1    5[COMMON] unsigned char 
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  2    0[COMMON] unsigned int 
 13070 ;; Registers used:
 13071 ;;		wreg, status,2, status,0
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13077 ;;      Params:         4       0       0       0       0
 13078 ;;      Locals:         1       0       0       0       0
 13079 ;;      Temps:          1       0       0       0       0
 13080 ;;      Totals:         6       0       0       0       0
 13081 ;;Total ram usage:        6 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; This function calls:
 13084 ;;		Nothing
 13085 ;; This function is called by:
 13086 ;;		_isr1
 13087 ;; This function uses a non-reentrant model
 13088 ;;
 13089                           psect	text1104
 13090                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13091                           	line	5
 13092                           	global	__size_ofi1___lwmod
 13093  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 13094                           	
 13095  12CE                     i1___lwmod:	
 13096                           	opt	stack 1
 13097                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 13098                           	line	8
 13099                           	
 13100  12CE                     i1l11115:	
 13101  12CE  0873               	movf	(i1___lwmod@divisor+1),w
 13102  12CF  0472               	iorwf	(i1___lwmod@divisor),w
 13103  12D0  1903               	skipnz
 13104  12D1  2AD3               	goto	u457_21
 13105  12D2  2AD4               	goto	u457_20
 13106  12D3                     u457_21:
 13107  12D3  2B0A               	goto	i1l11133
 13108  12D4                     u457_20:
 13109                           	line	9
 13110                           	
 13111  12D4                     i1l11117:	
 13112  12D4  01F7               	clrf	(i1___lwmod@counter)
 13113  12D5  1403               	bsf	status,0
 13114  12D6  0DF7               	rlf	(i1___lwmod@counter),f
 13115                           	line	10
 13116  12D7  2AE4               	goto	i1l11123
 13117                           	
 13118  12D8                     i1l7651:	
 13119                           	line	11
 13120                           	
 13121  12D8                     i1l11119:	
 13122  12D8  3001               	movlw	01h
 13123                           	
 13124  12D9                     u458_25:
 13125  12D9  1003               	clrc
 13126  12DA  0DF2               	rlf	(i1___lwmod@divisor),f
 13127  12DB  0DF3               	rlf	(i1___lwmod@divisor+1),f
 13128  12DC  3EFF               	addlw	-1
 13129  12DD  1D03               	skipz
 13130  12DE  2AD9               	goto	u458_25
 13131                           	line	12
 13132                           	
 13133  12DF                     i1l11121:	
 13134  12DF  3001               	movlw	(01h)
 13135  12E0  00F6               	movwf	(??i1___lwmod+0)+0
 13136  12E1  0876               	movf	(??i1___lwmod+0)+0,w
 13137  12E2  07F7               	addwf	(i1___lwmod@counter),f
 13138  12E3  2AE4               	goto	i1l11123
 13139                           	line	13
 13140                           	
 13141  12E4                     i1l7650:	
 13142                           	line	10
 13143                           	
 13144  12E4                     i1l11123:	
 13145  12E4  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 13146  12E5  2AE7               	goto	u459_21
 13147  12E6  2AE8               	goto	u459_20
 13148  12E7                     u459_21:
 13149  12E7  2AD8               	goto	i1l11119
 13150  12E8                     u459_20:
 13151  12E8  2AEA               	goto	i1l11125
 13152                           	
 13153  12E9                     i1l7652:	
 13154  12E9  2AEA               	goto	i1l11125
 13155                           	line	14
 13156                           	
 13157  12EA                     i1l7653:	
 13158                           	line	15
 13159                           	
 13160  12EA                     i1l11125:	
 13161  12EA  0873               	movf	(i1___lwmod@divisor+1),w
 13162  12EB  0275               	subwf	(i1___lwmod@dividend+1),w
 13163  12EC  1D03               	skipz
 13164  12ED  2AF0               	goto	u460_25
 13165  12EE  0872               	movf	(i1___lwmod@divisor),w
 13166  12EF  0274               	subwf	(i1___lwmod@dividend),w
 13167  12F0                     u460_25:
 13168  12F0  1C03               	skipc
 13169  12F1  2AF3               	goto	u460_21
 13170  12F2  2AF4               	goto	u460_20
 13171  12F3                     u460_21:
 13172  12F3  2AFB               	goto	i1l11129
 13173  12F4                     u460_20:
 13174                           	line	16
 13175                           	
 13176  12F4                     i1l11127:	
 13177  12F4  0872               	movf	(i1___lwmod@divisor),w
 13178  12F5  02F4               	subwf	(i1___lwmod@dividend),f
 13179  12F6  0873               	movf	(i1___lwmod@divisor+1),w
 13180  12F7  1C03               	skipc
 13181  12F8  03F5               	decf	(i1___lwmod@dividend+1),f
 13182  12F9  02F5               	subwf	(i1___lwmod@dividend+1),f
 13183  12FA  2AFB               	goto	i1l11129
 13184                           	
 13185  12FB                     i1l7654:	
 13186                           	line	17
 13187                           	
 13188  12FB                     i1l11129:	
 13189  12FB  3001               	movlw	01h
 13190                           	
 13191  12FC                     u461_25:
 13192  12FC  1003               	clrc
 13193  12FD  0CF3               	rrf	(i1___lwmod@divisor+1),f
 13194  12FE  0CF2               	rrf	(i1___lwmod@divisor),f
 13195  12FF  3EFF               	addlw	-1
 13196  1300  1D03               	skipz
 13197  1301  2AFC               	goto	u461_25
 13198                           	line	18
 13199                           	
 13200  1302                     i1l11131:	
 13201  1302  3001               	movlw	low(01h)
 13202  1303  02F7               	subwf	(i1___lwmod@counter),f
 13203  1304  1D03               	btfss	status,2
 13204  1305  2B07               	goto	u462_21
 13205  1306  2B08               	goto	u462_20
 13206  1307                     u462_21:
 13207  1307  2AEA               	goto	i1l11125
 13208  1308                     u462_20:
 13209  1308  2B0A               	goto	i1l11133
 13210                           	
 13211  1309                     i1l7655:	
 13212  1309  2B0A               	goto	i1l11133
 13213                           	line	19
 13214                           	
 13215  130A                     i1l7649:	
 13216                           	line	20
 13217                           	
 13218  130A                     i1l11133:	
 13219  130A  0875               	movf	(i1___lwmod@dividend+1),w
 13220  130B  01F3               	clrf	(?i1___lwmod+1)
 13221  130C  07F3               	addwf	(?i1___lwmod+1)
 13222  130D  0874               	movf	(i1___lwmod@dividend),w
 13223  130E  01F2               	clrf	(?i1___lwmod)
 13224  130F  07F2               	addwf	(?i1___lwmod)
 13225                           
 13226  1310  2B11               	goto	i1l7656
 13227                           	
 13228  1311                     i1l11135:	
 13229                           	line	21
 13230                           	
 13231  1311                     i1l7656:	
 13232  1311  0008               	return
 13233                           	opt stack 0
 13234                           GLOBAL	__end_ofi1___lwmod
 13235  1312                     	__end_ofi1___lwmod:
 13236 ;; =============== function i1___lwmod ends ============
 13237                           
 13238                           	signat	i1___lwmod,90
 13239                           	global	_Debounce
 13240                           psect	text1105,local,class=CODE,delta=2
 13241                           global __ptext1105
 13242  1768                     __ptext1105:
 13243                           
 13244 ;; *************** function _Debounce *****************
 13245 ;; Defined at:
 13246 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;		None
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;		None               void
 13253 ;; Registers used:
 13254 ;;		wreg, status,2, status,0
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13260 ;;      Params:         0       0       0       0       0
 13261 ;;      Locals:         0       0       0       0       0
 13262 ;;      Temps:          1       0       0       0       0
 13263 ;;      Totals:         1       0       0       0       0
 13264 ;;Total ram usage:        1 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; This function calls:
 13267 ;;		Nothing
 13268 ;; This function is called by:
 13269 ;;		_ReadButtons
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           psect	text1105
 13273                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 13274                           	line	77
 13275                           	global	__size_of_Debounce
 13276  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 13277                           	
 13278  1768                     _Debounce:	
 13279                           	opt	stack 0
 13280                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 13281                           	line	79
 13282                           	
 13283  1768                     i1l10891:	
 13284                           ;HMI.c: 79: if(!RB2)
 13285  1768  1283               	bcf	status, 5	;RP0=0, select bank0
 13286  1769  1303               	bcf	status, 6	;RP1=0, select bank0
 13287  176A  1906               	btfsc	(50/8),(50)&7
 13288  176B  2F6D               	goto	u399_21
 13289  176C  2F6E               	goto	u399_20
 13290  176D                     u399_21:
 13291  176D  2F82               	goto	i1l4543
 13292  176E                     u399_20:
 13293                           	line	81
 13294                           	
 13295  176E                     i1l10893:	
 13296                           ;HMI.c: 80: {
 13297                           ;HMI.c: 81: UpDebounceCount++;
 13298  176E  3001               	movlw	(01h)
 13299  176F  00F2               	movwf	(??_Debounce+0)+0
 13300  1770  0872               	movf	(??_Debounce+0)+0,w
 13301  1771  1683               	bsf	status, 5	;RP0=1, select bank1
 13302  1772  1303               	bcf	status, 6	;RP1=0, select bank1
 13303  1773  07D7               	addwf	(_UpDebounceCount)^080h,f	;volatile
 13304                           	line	82
 13305                           	
 13306  1774                     i1l10895:	
 13307                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 13308  1774  300A               	movlw	(0Ah)
 13309  1775  0257               	subwf	(_UpDebounceCount)^080h,w	;volatile
 13310  1776  1C03               	skipc
 13311  1777  2F79               	goto	u400_21
 13312  1778  2F7A               	goto	u400_20
 13313  1779                     u400_21:
 13314  1779  2F86               	goto	i1l4545
 13315  177A                     u400_20:
 13316                           	
 13317  177A                     i1l10897:	
 13318  177A  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 13319  177B  2F7D               	goto	u401_21
 13320  177C  2F7E               	goto	u401_20
 13321  177D                     u401_21:
 13322  177D  2F86               	goto	i1l4545
 13323  177E                     u401_20:
 13324                           	line	84
 13325                           	
 13326  177E                     i1l10899:	
 13327                           ;HMI.c: 83: {
 13328                           ;HMI.c: 84: UpPressed = 1;
 13329  177E  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 13330                           	line	85
 13331                           ;HMI.c: 85: UpReleased = 0;
 13332  177F  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 13333  1780  2F86               	goto	i1l4545
 13334                           	line	86
 13335                           	
 13336  1781                     i1l4544:	
 13337                           	line	87
 13338                           ;HMI.c: 86: }
 13339                           ;HMI.c: 87: }
 13340  1781  2F86               	goto	i1l4545
 13341                           	line	88
 13342                           	
 13343  1782                     i1l4543:	
 13344                           	line	90
 13345                           ;HMI.c: 88: else
 13346                           ;HMI.c: 89: {
 13347                           ;HMI.c: 90: UpDebounceCount = 0;
 13348  1782  1683               	bsf	status, 5	;RP0=1, select bank1
 13349  1783  1303               	bcf	status, 6	;RP1=0, select bank1
 13350  1784  01D7               	clrf	(_UpDebounceCount)^080h	;volatile
 13351                           	line	91
 13352                           ;HMI.c: 91: UpReleased = 1;
 13353  1785  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 13354                           	line	92
 13355                           	
 13356  1786                     i1l4545:	
 13357                           	line	95
 13358                           ;HMI.c: 92: }
 13359                           ;HMI.c: 95: if(!RB3)
 13360  1786  1283               	bcf	status, 5	;RP0=0, select bank0
 13361  1787  1303               	bcf	status, 6	;RP1=0, select bank0
 13362  1788  1986               	btfsc	(51/8),(51)&7
 13363  1789  2F8B               	goto	u402_21
 13364  178A  2F8C               	goto	u402_20
 13365  178B                     u402_21:
 13366  178B  2FA0               	goto	i1l4546
 13367  178C                     u402_20:
 13368                           	line	97
 13369                           	
 13370  178C                     i1l10901:	
 13371                           ;HMI.c: 96: {
 13372                           ;HMI.c: 97: DownDebounceCount++;
 13373  178C  3001               	movlw	(01h)
 13374  178D  00F2               	movwf	(??_Debounce+0)+0
 13375  178E  0872               	movf	(??_Debounce+0)+0,w
 13376  178F  1683               	bsf	status, 5	;RP0=1, select bank1
 13377  1790  1303               	bcf	status, 6	;RP1=0, select bank1
 13378  1791  07D2               	addwf	(_DownDebounceCount)^080h,f	;volatile
 13379                           	line	98
 13380                           	
 13381  1792                     i1l10903:	
 13382                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 13383  1792  300A               	movlw	(0Ah)
 13384  1793  0252               	subwf	(_DownDebounceCount)^080h,w	;volatile
 13385  1794  1C03               	skipc
 13386  1795  2F97               	goto	u403_21
 13387  1796  2F98               	goto	u403_20
 13388  1797                     u403_21:
 13389  1797  2FA4               	goto	i1l4548
 13390  1798                     u403_20:
 13391                           	
 13392  1798                     i1l10905:	
 13393  1798  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 13394  1799  2F9B               	goto	u404_21
 13395  179A  2F9C               	goto	u404_20
 13396  179B                     u404_21:
 13397  179B  2FA4               	goto	i1l4548
 13398  179C                     u404_20:
 13399                           	line	100
 13400                           	
 13401  179C                     i1l10907:	
 13402                           ;HMI.c: 99: {
 13403                           ;HMI.c: 100: DownPressed = 1;
 13404  179C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 13405                           	line	101
 13406                           ;HMI.c: 101: DownReleased = 0;
 13407  179D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 13408  179E  2FA4               	goto	i1l4548
 13409                           	line	102
 13410                           	
 13411  179F                     i1l4547:	
 13412                           	line	103
 13413                           ;HMI.c: 102: }
 13414                           ;HMI.c: 103: }
 13415  179F  2FA4               	goto	i1l4548
 13416                           	line	104
 13417                           	
 13418  17A0                     i1l4546:	
 13419                           	line	106
 13420                           ;HMI.c: 104: else
 13421                           ;HMI.c: 105: {
 13422                           ;HMI.c: 106: DownDebounceCount = 0;
 13423  17A0  1683               	bsf	status, 5	;RP0=1, select bank1
 13424  17A1  1303               	bcf	status, 6	;RP1=0, select bank1
 13425  17A2  01D2               	clrf	(_DownDebounceCount)^080h	;volatile
 13426                           	line	107
 13427                           ;HMI.c: 107: DownReleased = 1;
 13428  17A3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 13429                           	line	108
 13430                           	
 13431  17A4                     i1l4548:	
 13432                           	line	110
 13433                           ;HMI.c: 108: }
 13434                           ;HMI.c: 110: if(!RB4)
 13435  17A4  1283               	bcf	status, 5	;RP0=0, select bank0
 13436  17A5  1303               	bcf	status, 6	;RP1=0, select bank0
 13437  17A6  1A06               	btfsc	(52/8),(52)&7
 13438  17A7  2FA9               	goto	u405_21
 13439  17A8  2FAA               	goto	u405_20
 13440  17A9                     u405_21:
 13441  17A9  2FBE               	goto	i1l4549
 13442  17AA                     u405_20:
 13443                           	line	112
 13444                           	
 13445  17AA                     i1l10909:	
 13446                           ;HMI.c: 111: {
 13447                           ;HMI.c: 112: LeftDebounceCount++;
 13448  17AA  3001               	movlw	(01h)
 13449  17AB  00F2               	movwf	(??_Debounce+0)+0
 13450  17AC  0872               	movf	(??_Debounce+0)+0,w
 13451  17AD  1683               	bsf	status, 5	;RP0=1, select bank1
 13452  17AE  1303               	bcf	status, 6	;RP1=0, select bank1
 13453  17AF  07D3               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 13454                           	line	113
 13455                           	
 13456  17B0                     i1l10911:	
 13457                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 13458  17B0  300A               	movlw	(0Ah)
 13459  17B1  0253               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 13460  17B2  1C03               	skipc
 13461  17B3  2FB5               	goto	u406_21
 13462  17B4  2FB6               	goto	u406_20
 13463  17B5                     u406_21:
 13464  17B5  2FC2               	goto	i1l4551
 13465  17B6                     u406_20:
 13466                           	
 13467  17B6                     i1l10913:	
 13468  17B6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 13469  17B7  2FB9               	goto	u407_21
 13470  17B8  2FBA               	goto	u407_20
 13471  17B9                     u407_21:
 13472  17B9  2FC2               	goto	i1l4551
 13473  17BA                     u407_20:
 13474                           	line	115
 13475                           	
 13476  17BA                     i1l10915:	
 13477                           ;HMI.c: 114: {
 13478                           ;HMI.c: 115: LeftPressed = 1;
 13479  17BA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 13480                           	line	116
 13481                           ;HMI.c: 116: LeftReleased = 0;
 13482  17BB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 13483  17BC  2FC2               	goto	i1l4551
 13484                           	line	117
 13485                           	
 13486  17BD                     i1l4550:	
 13487                           	line	118
 13488                           ;HMI.c: 117: }
 13489                           ;HMI.c: 118: }
 13490  17BD  2FC2               	goto	i1l4551
 13491                           	line	119
 13492                           	
 13493  17BE                     i1l4549:	
 13494                           	line	121
 13495                           ;HMI.c: 119: else
 13496                           ;HMI.c: 120: {
 13497                           ;HMI.c: 121: LeftDebounceCount = 0;
 13498  17BE  1683               	bsf	status, 5	;RP0=1, select bank1
 13499  17BF  1303               	bcf	status, 6	;RP1=0, select bank1
 13500  17C0  01D3               	clrf	(_LeftDebounceCount)^080h	;volatile
 13501                           	line	122
 13502                           ;HMI.c: 122: LeftReleased = 1;
 13503  17C1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 13504                           	line	123
 13505                           	
 13506  17C2                     i1l4551:	
 13507                           	line	125
 13508                           ;HMI.c: 123: }
 13509                           ;HMI.c: 125: if(!RB5)
 13510  17C2  1283               	bcf	status, 5	;RP0=0, select bank0
 13511  17C3  1303               	bcf	status, 6	;RP1=0, select bank0
 13512  17C4  1A86               	btfsc	(53/8),(53)&7
 13513  17C5  2FC7               	goto	u408_21
 13514  17C6  2FC8               	goto	u408_20
 13515  17C7                     u408_21:
 13516  17C7  2FDC               	goto	i1l4552
 13517  17C8                     u408_20:
 13518                           	line	127
 13519                           	
 13520  17C8                     i1l10917:	
 13521                           ;HMI.c: 126: {
 13522                           ;HMI.c: 127: RightDebounceCount++;
 13523  17C8  3001               	movlw	(01h)
 13524  17C9  00F2               	movwf	(??_Debounce+0)+0
 13525  17CA  0872               	movf	(??_Debounce+0)+0,w
 13526  17CB  1683               	bsf	status, 5	;RP0=1, select bank1
 13527  17CC  1303               	bcf	status, 6	;RP1=0, select bank1
 13528  17CD  07D5               	addwf	(_RightDebounceCount)^080h,f	;volatile
 13529                           	line	128
 13530                           	
 13531  17CE                     i1l10919:	
 13532                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 13533  17CE  300A               	movlw	(0Ah)
 13534  17CF  0255               	subwf	(_RightDebounceCount)^080h,w	;volatile
 13535  17D0  1C03               	skipc
 13536  17D1  2FD3               	goto	u409_21
 13537  17D2  2FD4               	goto	u409_20
 13538  17D3                     u409_21:
 13539  17D3  2FE0               	goto	i1l4554
 13540  17D4                     u409_20:
 13541                           	
 13542  17D4                     i1l10921:	
 13543  17D4  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 13544  17D5  2FD7               	goto	u410_21
 13545  17D6  2FD8               	goto	u410_20
 13546  17D7                     u410_21:
 13547  17D7  2FE0               	goto	i1l4554
 13548  17D8                     u410_20:
 13549                           	line	130
 13550                           	
 13551  17D8                     i1l10923:	
 13552                           ;HMI.c: 129: {
 13553                           ;HMI.c: 130: RightPressed = 1;
 13554  17D8  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 13555                           	line	131
 13556                           ;HMI.c: 131: RightReleased = 0;
 13557  17D9  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 13558  17DA  2FE0               	goto	i1l4554
 13559                           	line	132
 13560                           	
 13561  17DB                     i1l4553:	
 13562                           	line	133
 13563                           ;HMI.c: 132: }
 13564                           ;HMI.c: 133: }
 13565  17DB  2FE0               	goto	i1l4554
 13566                           	line	134
 13567                           	
 13568  17DC                     i1l4552:	
 13569                           	line	136
 13570                           ;HMI.c: 134: else
 13571                           ;HMI.c: 135: {
 13572                           ;HMI.c: 136: RightDebounceCount = 0;
 13573  17DC  1683               	bsf	status, 5	;RP0=1, select bank1
 13574  17DD  1303               	bcf	status, 6	;RP1=0, select bank1
 13575  17DE  01D5               	clrf	(_RightDebounceCount)^080h	;volatile
 13576                           	line	137
 13577                           ;HMI.c: 137: RightReleased = 1;
 13578  17DF  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 13579                           	line	138
 13580                           	
 13581  17E0                     i1l4554:	
 13582                           	line	140
 13583                           ;HMI.c: 138: }
 13584                           ;HMI.c: 140: if(!RB6)
 13585  17E0  1283               	bcf	status, 5	;RP0=0, select bank0
 13586  17E1  1303               	bcf	status, 6	;RP1=0, select bank0
 13587  17E2  1B06               	btfsc	(54/8),(54)&7
 13588  17E3  2FE5               	goto	u411_21
 13589  17E4  2FE6               	goto	u411_20
 13590  17E5                     u411_21:
 13591  17E5  2FFA               	goto	i1l4555
 13592  17E6                     u411_20:
 13593                           	line	142
 13594                           	
 13595  17E6                     i1l10925:	
 13596                           ;HMI.c: 141: {
 13597                           ;HMI.c: 142: CenterDebounceCount++;
 13598  17E6  3001               	movlw	(01h)
 13599  17E7  00F2               	movwf	(??_Debounce+0)+0
 13600  17E8  0872               	movf	(??_Debounce+0)+0,w
 13601  17E9  1683               	bsf	status, 5	;RP0=1, select bank1
 13602  17EA  1303               	bcf	status, 6	;RP1=0, select bank1
 13603  17EB  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 13604                           	line	143
 13605                           	
 13606  17EC                     i1l10927:	
 13607                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 13608  17EC  300A               	movlw	(0Ah)
 13609  17ED  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 13610  17EE  1C03               	skipc
 13611  17EF  2FF1               	goto	u412_21
 13612  17F0  2FF2               	goto	u412_20
 13613  17F1                     u412_21:
 13614  17F1  2FFF               	goto	i1l4558
 13615  17F2                     u412_20:
 13616                           	
 13617  17F2                     i1l10929:	
 13618  17F2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 13619  17F3  2FF5               	goto	u413_21
 13620  17F4  2FF6               	goto	u413_20
 13621  17F5                     u413_21:
 13622  17F5  2FFF               	goto	i1l4558
 13623  17F6                     u413_20:
 13624                           	line	145
 13625                           	
 13626  17F6                     i1l10931:	
 13627                           ;HMI.c: 144: {
 13628                           ;HMI.c: 145: CenterPressed = 1;
 13629  17F6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 13630                           	line	146
 13631                           ;HMI.c: 146: CenterReleased = 0;
 13632  17F7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 13633  17F8  2FFF               	goto	i1l4558
 13634                           	line	147
 13635                           	
 13636  17F9                     i1l4556:	
 13637                           	line	148
 13638                           ;HMI.c: 147: }
 13639                           ;HMI.c: 148: }
 13640  17F9  2FFF               	goto	i1l4558
 13641                           	line	149
 13642                           	
 13643  17FA                     i1l4555:	
 13644                           	line	151
 13645                           ;HMI.c: 149: else
 13646                           ;HMI.c: 150: {
 13647                           ;HMI.c: 151: CenterDebounceCount = 0;
 13648  17FA  1683               	bsf	status, 5	;RP0=1, select bank1
 13649  17FB  1303               	bcf	status, 6	;RP1=0, select bank1
 13650  17FC  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
 13651                           	line	152
 13652                           ;HMI.c: 152: CenterReleased = 1;
 13653  17FD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 13654  17FE  2FFF               	goto	i1l4558
 13655                           	line	153
 13656                           	
 13657  17FF                     i1l4557:	
 13658                           	line	154
 13659                           	
 13660  17FF                     i1l4558:	
 13661  17FF  0008               	return
 13662                           	opt stack 0
 13663                           GLOBAL	__end_of_Debounce
 13664  1800                     	__end_of_Debounce:
 13665 ;; =============== function _Debounce ends ============
 13666                           
 13667                           	signat	_Debounce,88
 13668                           psect	text1106,local,class=CODE,delta=2
 13669                           global __ptext1106
 13670  0000                     __ptext1106:
 13671                           	global	btemp
 13672  007E                     	btemp set 07Eh
 13673                           
 13674                           	DABS	1,126,2	;btemp
 13675                           	global	wtemp0
 13676  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed May 20 15:10:50 2015

   RobotDrive@radiuslowByte 0036   __end_of_lcd_write_control 1FEA             ??_UpdateDisplay 0045  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 002C                  _IRdistance 00B8  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 1FFF  
                       l703 107F                         l704 107F                         l705 1083  
                       l706 10A2                         l690 1297                         l691 12C0  
                       l692 129B                         l693 129F                         l694 12A3  
                       l695 12A7                         l696 12AB                         l689 12AF  
                       l697 12CD                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _abs 125E                         _pos 00C6  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
          ??_robotMoveSpeed 005D                  _BattCharge 00B0             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l1402 1FAE                        l1410 11D1  
                      l1411 11D1                        l2300 1573                        l1405 1F9B  
                      l2301 1574                        l3030 1678                        l2310 13C3  
                      l3031 16AE                        l2311 13C5                        l3040 06FE  
                      l1408 11C0                        l3032 169A                        l2312 13C7  
                      l2304 13AE                        l3041 0577                        l1409 11A7  
                      l3033 16DC                        l2313 13E9                        l2305 13BE  
                      l3042 06FD                        l3050 06F9                        l2306 13D6  
                      l2314 13D3                        l2250 02AF                        l3051 06F8  
                      l3043 05C4                        l2315 13E8                        l2307 13BF  
                      l2251 02C5                        l3044 06FC                        l3052 06FE  
                      l3036 1026                        l2316 13E9                        l2308 13E7  
                      l2260 04A9                        l2252 02D6                        l3045 0611  
                      l1429 1122                        l2309 13C1                        l2253 04BB  
                      l2261 02F1                        l3046 06FB                        l2262 0492  
                      l2270 0368                        l2254 02D7                        l3047 065E  
                      l3039 052A                        l2247 122D                        l2255 04D1  
                      l2271 0371                        l2263 02F2                        l3048 06FA  
                      l2280 04D9                        l2264 04A8                        l2272 03EF  
                      l2256 02DD                        l3049 06AB                        l2273 0423  
                      l2265 030D                        l2257 02DE                        l2290 1534  
                      l2274 0476                        l2266 035E                        l2258 02DF  
                      l2291 1561                        l2283 1079                        l2275 04B1  
                      l2259 02E0                        l2292 1535                        l2276 04B3  
                      l2268 031C                        l2293 1572                        l2277 04B9  
                      l2269 0367                        l2294 1537                        l2278 04D8  
                      l1399 1FE9                        l2295 1539                        l2279 04D9  
                      l2296 1549                        l2297 1557                        l2289 1529  
                      l2298 1574                        l2299 155F                        l6100 0C36  
                      l6101 0C35                        l6110 15C8                        l6102 0C38  
                      l6111 15E7                        l6112 15E8                        l4600 0FFF  
                      l6120 0CEE                        l6105 08F9                        l6121 0D67  
                      l6130 0D85                        l6122 0D55                        l6131 0D94  
                      l6115 0C56                        l6108 15A3                        l6132 0DE4  
                      l6124 0D1C                        l6116 0C6E                        l6140 00D9  
                      l6109 15E8                        l6133 0E0A                        l6125 0D4B  
                      l6117 0C86                        l6141 00C6                        l3750 1FCA  
                      l6126 0D53                        l6118 0CB8                        l6150 01D0  
                      l3751 1FCF                        l6127 0DE5                        l6119 0D67  
                      l6151 01BC                        l6143 00B8                        l3752 1FD5  
                      l3760 1472                        l6128 0D66                        l6160 0208  
                      l6152 01DA                        l6144 0184                        l6136 0030  
                      l3761 148F                        l6129 0D79                        l6161 029B  
                      l6153 01C3                        l6145 00D8                        l6137 0063  
                      l4570 135C                        l3762 14A0                        l6170 0B2D  
                      l6154 01C9                        l6146 00EB                        l6138 00D9  
                      l4571 139C                        l3755 144A                        l6155 0241  
                      l6147 00F7                        l6139 0091                        l4572 135D  
                      l6092 1058                        l3756 1451                        l6164 0AD3  
                      l6156 01DB                        l6148 0106                        l4573 135E  
                      l3749 1FCA                        l3757 1485                        l6173 0A08  
                      l6165 0A5F                        l6157 01ED                        l6149 0183  
                      l4574 136F                        l3758 1458                        l6182 1767  
                      l4590 0F31                        l6174 09B5                        l6166 0A71  
                      l6158 0276                        l4575 1370                        l3759 146A  
                      l6095 0BB7                        l4591 0FC3                        l6175 09CD  
                      l6167 0B08                        l6159 01F9                        l4576 1382  
                      l6096 0C38                        l4584 0FF2                        l4592 0F7A  
                      l6168 0A7D                        l4569 138A                        l4577 1383  
                      l6185 1292                        l6097 0BE3                        l4593 0FDE  
                      l4585 0E24                        l6177 09C7                        l6169 0A8C  
                      l4578 139E                        l6098 0C37                        l4594 0F86  
                      l4586 0E8B                        l6178 0A3D                        l4579 1388  
                      l6099 0C33                        l4595 0F92                        l4587 0E9E  
                      l6179 0A48                        l6188 10F7                        l4588 0FFF  
                      l4596 0F9E                        l4597 0FAA                        l4589 0EE6  
                      l4598 0FB6                        l4599 0FF0                        l6900 11FE  
                      l7640 1404                        l7633 1153                        l7641 13F8  
                      l6922 10CC                        l7634 115D                        l7642 1409  
                      l7650 132A                        l7635 1172                        l7643 140A  
                      l7651 131E                        l6931 07E5                        l7636 1179  
                      l7644 1423                        l7652 132F                        l6940 071E  
                      l6932 0707                        l7645 1431                        l7653 1330  
                      l6941 074F                        l6933 0719                        l7646 1439  
                      l7654 1341                        l6950 07FE                        l6942 075A  
                      l6934 0720                        l7639 1432                        l7655 134F  
                      l6943 0782                        l6935 071B                        l7656 1357  
                      l6936 07F9                        l6944 0777                        l7649 1350  
                      l7841 14B1                        l6945 0794                        l6937 071C  
                      l7850 1501                        l7842 14BB                        l6946 07D9  
                      l6938 071D                        l7851 1508                        l7843 14F7  
                      l6947 0799                        l6939 0735                        l6891 117C  
                      l7780 163E                        l7844 14D1                        l6948 07E4  
                      l6892 117B                        l7781 164C                        l7773 15F9  
                      l7845 14C5                        l6949 07F8                        l6893 1185  
                      l7782 1657                        l7774 1607                        l7846 14D6  
                      l6894 11A5                        l6887 1032                        l7783 165E  
                      l7775 164D                        l7847 14D7                        l6888 103F  
                      l7776 161F                        l7848 14E8                        l6897 11D7  
                      l7777 1613                        l7849 14F6                        l6898 11D6  
                      l7778 1624                        l6899 11E1                        l7779 1625  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 0862                        STR_2 0859                        STR_3 0874  
                      STR_4 087D                        STR_5 086B                        STR_6 0850  
                      STR_7 08A6                        STR_8 08AA                        STR_9 0892  
                      _BRGH 04C2                        _CREN 00C4                        u5000 0E78  
                      u5001 0E77                        u4210 1157                        u5010 152D  
                      u4211 1156                        u5011 152C                        u4140 102D  
                      u5100 0D44                        u5020 0C65                        u4141 102C  
                      u5005 0E74                        u5101 0D43                        u5021 0C64  
                      u4150 103A                        u4310 1430                        u5110 0D73  
                      u5030 0C7D                        u4151 1039                        u4311 142F  
                      u5031 0C7C                        u4240 1171                        u4320 131A  
                      u4400 160F                        u5120 0D7E                        u5040 0C97  
                      u5200 0B07                        u4241 1170                        u4225 115E  
                      u4305 1424                        u4321 1319                        u4401 160E  
                      u5041 0C96                        u5025 0C61                        u5201 0B06  
                      u4250 13F4                        u5130 0D8B                        u5050 0CA8  
                      u5210 0041                        u4235 1165                        u4251 13F3  
                      u5051 0CA7                        u5035 0C79                        u5211 0040  
                      u4340 132E                        u4420 1623                        u4500 14C1  
                      u5060 0CC4                        u5140 09C2                        u5300 01E7  
                      u5220 0053                        u4341 132D                        u4421 1622  
                      u4501 14C0                        u5061 0CC3                        u5045 0C93  
                      u5141 09C1                        u5205 0B03                        u5221 0052  
                      u4270 1408                        u4350 133A                        u5070 0CDE  
                      u5150 09C6                        u5310 01F2                        u5230 006F  
                      u4271 1407                        u4351 1339                        u4335 131F  
                      u4415 1614                        u5071 0CDD                        u5055 0CA4  
                      u5231 006E                        u5215 003D                        u3720 1083  
                      u4440 1636                        u4520 14D5                        u5080 0D0A  
                      u5160 0A3C                        u5320 01FF                        u5240 0081  
                      u3721 1082                        u4265 13F9                        u4441 1635  
                      u4521 14D4                        u5081 0D09                        u5065 0CC0  
                      u5161 0A3B                        u5241 0080                        u5225 004F  
                      u4290 141B                        u4370 134E                        u4530 14E1  
                      u5090 0D1B                        u5170 0A6B                        u5330 0275  
                      u5250 00A5                        u4291 141A                        u4371 134D  
                      u4355 1336                        u4435 1626                        u4531 14E0  
                      u4515 14C6                        u5091 0D1A                        u5075 0CDA  
                      u5331 0274                        u5251 00A4                        u5235 006B  
                      _PEIE 005E                        u4460 164B                        u4380 15F0  
                      u4700 0581                        u5180 0A76                        u5260 00B7  
                      u5340 13B2                        u4285 140B                        u4365 1342  
                      u4461 164A                        u4445 1632                        u4381 15EF  
                      u4701 0580                        u5085 0D06                        u5165 0A38  
                      u5261 00B6                        u5245 007D                        u5341 13B1  
                      u3910 136A                        u4470 1651                        u4390 15FD  
                      u4550 14F5                        u4630 1443                        u4710 058A  
                      u5190 0A83                        u5270 00E5                        u5350 02B3  
                      u3735 1090                        u3911 1369                        u4295 1417  
                      u4455 163F                        u4391 15FC                        u4551 14F4  
                      u4535 14DD                        u4631 1442                        u4711 0589  
                      u5095 0D17                        u5335 0271                        u5255 00A1  
                      u5407 0333                        u5351 02B2                        u3920 137F  
                      u4560 14FB                        u4480 14A8                        u4640 1461  
                      u4720 05CE                        u4800 070D                        u5280 00F0  
                      u5360 02C9                        u3921 137E                        u4545 14E9  
                      u4481 14A7                        u4721 05CD                        u4801 070C  
                      u5265 00B3                        u5417 0391                        u3930 11E1  
                      u4490 14B5                        u4650 148F                        u4730 05D7  
                      u4810 0745                        u5290 00FD                        u5370 0315  
                      u3931 11E0                        u4491 14B4                        u4651 148E  
                      u4731 05D6                        u4811 0744                        u5427 1066  
                      u5371 0314                        _RCIE 0465                        u4740 061B  
                      u4660 04E7                        u4820 0758                        u4900 15A9  
                      u5380 031B                        _RCIF 0065                        u4741 061A  
                      u4661 04E6                        u4821 0757                        u4901 15A8  
                      u5437 16F3                        u5381 031A                        u4750 0624  
                      u4670 04F0                        u4830 0775                        u5390 04B1  
                      u4655 148B                        u4751 0623                        u4671 04EF  
                      u4831 0774                        u5447 1722                        u5391 04B0  
                      u4760 0668                        u4680 0534                        u4840 0781  
                      u4920 11D0                        u5457 1478                        u4761 0667  
                      u4681 0533                        u4841 0780                        u4921 11CF  
                      u4770 0671                        u4690 053D                        u4850 0788  
                      u4930 0B92                        u5467 1FAA                        u4771 0670  
                      u4691 053C                        u4851 0787                        u4835 0771  
                      u4915 1273                        u4931 0B91                        u3980 1FCE  
                      u4780 06B5                        u4860 07E3                        u4940 0BBE  
                      u3981 1FCD                        u5477 1FE4                        u4781 06B4  
                      u4861 07E2                        u4941 0BBD                        u4790 06BE  
                      u4870 07F7                        u4950 0BEA                        u5487 1FFD  
                      u4791 06BD                        u4871 07F6                        u4951 0BE9  
                      u4880 1185                        u4960 1676                        u5497 12C2  
                      u4881 1184                        u4961 1675                        u4890 1584  
                      u4970 168E                        _OERR 00C1                        u4891 1583  
                      u4971 168D                        u4980 16AD                        u4981 16AC  
                      u4965 1672                        u4990 0E15                        u4895 1580  
                      u4985 16A9                        _TMR0 0001                  _ChargeMode 139F  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0223                        _Menu 1358      __end_of_lcd_write_data 1FAF  
                      abs@v 0026                        _isr1 08FA                        _main 029C  
                      _init 11FF                        btemp 007E              _CenterReleased 0381  
                      start 0012        robotFollow@followDir 005D               ??_ReadButtons 0073  
          ??_robotTurnSpeed 005D                       ??_abs 0028       readAvgDistance@tempIR 0034  
                     ?_Menu 0072                       l11001 13FF                       l11011 1423  
                     l11003 1404                       l11013 142A                       l11005 140A  
                     l11021 131A                       l11101 14E1                       l11007 141B  
                     l11015 1432                       l11031 133A                       l11023 131E  
                     l11111 1501                       l11103 14E8                       l11017 1439  
                     l11009 1421                       l11033 1341                       l11025 1325  
                     l11041 15E9                       l11113 1508                       l11105 14EF  
                     l11201 143E                       l11035 1348                       l11027 132A  
                     l11019 1312                       l11051 1607                       l11043 15F0  
                     l11107 14F7                       l11211 1455                       l11203 1443  
                     l11029 1330                       l11037 1350                       l11061 161F  
                     l11053 1609                       l11045 15F9                       l11109 14FB  
                     l11141 12AD                       l11221 1497                       l11213 145D  
                     l11205 144A                       l11301 075A                       l11039 1357  
                     l11071 1645                       l11063 1625                       l11055 160F  
                     l11047 15FD                       l11151 12CD                       l11143 12AE  
                     l11223 149A                       l11215 1461                       l11207 1451  
                     l11231 04DC                       l11311 0788                       l11303 0776  
                     l11065 1636                       l11057 1613                       l11073 164D  
                     l11049 1602                       l11081 14A1                       l11145 12AF  
                     l11137 1296                       l11161 1FF9                       l11153 1FEA  
                     l11225 149B                       l11217 146A                       l11209 1454  
                     l11241 053D                       l11233 04E7                       l11321 07D4  
                     l11313 078F                       l11305 0777                       l11401 0BE3  
                     l11075 1651                       l11067 163C                       l11059 161A  
                     l11091 14C1                       l11083 14A8                       l11139 12AB  
                     l11147 12C0                       l11155 1FED                       l11163 1FD9  
                     l11171 1F9F                       l11227 149C                       l11219 1491  
                     l11251 05CE                       l11243 0577                       l11235 04F0  
                     l11323 07D9                       l11315 0794                       l11307 077B  
                     l11331 117A                       l11403 0BEA                       l11411 16E7  
                     l11077 1657                       l11069 163E                       l11093 14C5  
                     l11085 14B1                       l11149 12C4                       l11157 1FF1  
                     l11165 1FDC                       l11173 1FA2                       l11181 10CD  
                     l11229 149D                       l11261 065E                       l11253 05D7  
                     l11245 0581                       l11237 052A                       l11317 0799  
                     l11309 0782                       l11325 07E5                       l11341 11A0  
                     l11333 117C                       l11405 0C34                       l11421 1716  
                     l11413 16ED                       l11501 0E9E                       l11079 165E  
                     l11095 14CC                       l11087 14B5                       l11159 1FF5  
                     l11167 1FDE                       l11175 1FA4                       l11191 08D9  
                     l11183 08C1                       l11271 06BE                       l11263 0668  
                     l11255 0611                       l11247 058A                       l11239 0534  
                     l11319 07CD                       l11327 07F9                       l11343 11A1  
                     l11335 1186                       l11351 15A9                       l11431 174E  
                     l11423 171C                       l11415 16F8                       l11407 16DD  
                     l11511 0EFD                       l11503 0EA4                       l10801 10B5  
                     l11097 14D1                       l11089 14BB                       l11169 1FDF  
                     l11177 1FA5                       l11193 08E1                       l11185 08C7  
                     l11265 0671                       l11257 061B                       l11249 05C4  
                     l11329 07FE                       l11281 071F                       l11273 0702  
                     l11345 11A5                       l11337 1192                       l11353 15C8  
                     l11361 1F95                       l11433 175B                       l11425 1727  
                     l11417 1704                       l11409 16E1                       l11441 11FF  
                     l11521 0F3D                       l11513 0F0E                       l11505 0EBB  
                     l11601 0C7D                       l10811 10C0                       l10803 10B8  
                     l11099 14D7                       l11179 1040                       l11195 08E9  
                     l11187 08CB                       l11267 06AB                       l11259 0624  
                     l11291 0745                       l11283 0720                       l11275 0707  
                     l11339 1198                       l11347 1575                       l11355 125E  
                     l11363 11A6                       l11371 10F8                       l11427 173A  
                     l11419 1710                       l11435 1011                       l11451 1212  
                     l11443 1200                       l11531 0F92                       l11523 0F48  
                     l11515 0F14                       l11507 0EE6                       l11611 0CB8  
                     l11603 0C86                       l10813 10C1                       l10805 10BB  
                     l10821 136A                       l10661 103C                       l11197 08F1  
                     l11189 08D3                       l11269 06B5                       l11293 0749  
                     l11285 0735                       l11277 070D                       l11349 1584  
                     l11357 1292                       l11365 11A7                       l11381 1104  
                     l11373 10FC                       l11429 1743                       l11437 101F  
                     l11461 122A                       l11453 1216                       l11445 1204  
                     l11533 0F9E                       l11541 0FC3                       l11525 0F73  
                     l11517 0F25                       l11509 0EF2                       l11621 0D1C  
                     l11613 0CC4                       l11605 0C8B                       l11701 0A5F  
                     l10671 107D                       l10807 10BC                       l10831 1389  
                     l10823 1370                       l10815 135B                       l10663 103E  
                     l11199 143A                       l11295 074F                       l11287 073D  
                     l11279 0714                       l11359 1F94                       l11367 11B7  
                     l11383 110A                       l11375 10FF                       l11391 0B31  
                     l11439 1026                       l11463 122B                       l11455 121B  
                     l11447 120C                       l11471 1677                       l11535 0FAA  
                     l11543 0FDE                       l11527 0F7A                       l11519 0F31  
                     l11631 0D4B                       l11623 0D28                       l11615 0CDE  
                     l11607 0C97                       l11711 0A7D                       l11703 0A65  
                     l10673 1086                       l10809 10BF                       l10825 137F  
                     l10817 135E                       l10833 138A                       l11297 0752  
                     l11289 0741                       l11369 11C0                       l11385 1110  
                     l11377 1100                       l11393 0B8D                       l11465 122C  
                     l11457 1220                       l11449 120E                       l11481 16AE  
                     l11473 1678                       l11545 0FE4                       l11537 0FB6  
                     l11529 0F86                       l11561 1529                       l11641 0D79  
                     l11633 0D54                       l11625 0D2D                       l11617 0CEE  
                     l11609 0CA8                       l11721 0AAD                       l11713 0A83  
                     l11705 0A6B                       l11801 01C3                       l10675 1099  
                     l10827 1383                       l10819 1366                       l10835 139C  
                     l10851 11F0                       l11299 0759                       l11387 1116  
                     l11379 1103                       l11395 0B92                       l11459 1225  
                     l11483 16CE                       l11475 1685                       l11467 165F  
                     l11547 0FF1                       l11539 0FC2                       l11491 0E52  
                     l11571 1549                       l11563 152D                       l11555 1509  
                     l11651 0D9D                       l11643 0D7E                       l11627 0D39  
                     l11635 0D55                       l11619 0D0A                       l11723 0AB9  
                     l11715 0A8C                       l11731 0B08                       l11707 0A71  
                     l11811 01E1                       l11803 01C9                       l10677 10A2  
                     l10669 107A                       l10837 139E                       l10829 1387  
                     l10853 11FC                       l10845 11D5                       l10941 1032  
                     l10933 1027                       l11389 111C                       l11397 0BB7  
                     l11477 168E                       l11469 1669                       l11493 0E63  
                     l11549 0FF2                       l11485 0E0B                       l11581 155E  
                     l11573 1555                       l11565 152E                       l11557 150E  
                     l11661 0DDE                       l11653 0DA8                       l11645 0D85  
                     l11637 0D6D                       l11629 0D44                       l11733 0B19  
                     l11725 0AC7                       l11717 0A95                       l11709 0A76  
                     l11821 01FF                       l11813 01E7                       l11805 01CF  
                     l11741 002C                       l11901 02EB                       l10791 10A6  
                     l10855 11FD                       l10847 11D7                       l10943 103A  
                     l10935 102D                       l11399 0BBE                       l11479 16A0  
                     l11495 0E69                       l11487 0E24                       l11583 1560  
                     l11575 1557                       l11567 1539                       l11559 151A  
                     l11655 0DB5                       l11647 0D8B                       l11639 0D73  
                     l11663 0DE5                       l11591 0C43                       l11671 09A9  
                     l11735 0B1E                       l11727 0ACD                       l11719 0AA0  
                     l11831 0235                       l11823 0208                       l11815 01ED  
                     l11807 01D0                       l11751 0063                       l11743 0030  
                     l11911 032B                       l11903 02F2                       l10793 10AE  
                     l10849 11E2                       l10881 1FC5                       l10945 103C  
                     l10937 102F                       l11497 0E78                       l11489 0E2A  
                     l11577 155B                       l11569 1547                       l11585 1561  
                     l11665 0DF4                       l11657 0DC1                       l11649 0D94  
                     l11593 0C52                       l11681 09CD                       l11673 09B5  
                     l11729 0AD3                       l11841 0296                       l11833 023B  
                     l11825 0211                       l11817 01F2                       l11809 01DB  
                     l11761 00B8                       l11753 006F                       l11745 0035  
                     l11737 0015                       l11921 0371                       l11913 033A  
                     l11905 030D                       l10795 10AF                       l10883 1FC7  
                     l10947 103F                       l10939 1031                       l11499 0E8B  
                     l11579 155C                       l11667 0E05                       l11659 0DCF  
                     l11595 0C56                       l11587 0C39                       l11691 0A02  
                     l11683 09D8                       l11675 09BB                       l11827 021C  
                     l11819 01F9                       l11835 0241                       l11771 00EB  
                     l11763 00C5                       l11755 0081                       l11747 0041  
                     l11739 001D                       l11851 13B3                       l11843 139F  
                     l11931 03A7                       l11923 0379                       l11915 033D  
                     l11907 0315                       l10797 10B1                       l10789 10A3  
                     l10885 1FCF                       l10981 114E                       l11597 0C65  
                     l11589 0C3D                       l11685 09E3                       l11677 09C2  
                     l11693 0A08                       l11669 09A1                       l11829 0229  
                     l11837 0276                       l11781 010F                       l11773 00F0  
                     l11765 00C6                       l11757 0091                       l11749 0053  
                     l11861 13D5                       l11853 13C7                       l11845 13A7  
                     l11941 03F7                       l11933 03C3                       l11925 037A  
                     l11917 035E                       l11909 031C                       l10799 10B2  
                     l10887 1FD3                       l10991 1179                       l10983 1153  
                     l11599 0C6E                       l11687 09F0                       l11695 0A3D  
                     l11679 09C7                       l11839 0285                       l11791 014A  
                     l11783 011A                       l11775 00F7                       l11767 00DF  
                     l11759 00A5                       l11855 13CD                       l11863 13D6  
                     l11847 13AE                       l11951 0437                       l11943 0406  
                     l11935 03D2                       l11927 0389                       l11919 0368  
                     l11871 029C                       l10889 1FD5                       l10985 1157  
                     l10993 13EA                       l11689 09FC                       l11697 0A49  
                     l11793 017D                       l11785 0127                       l11777 00FD  
                     l11769 00E5                       l11857 13CE                       l11849 13B2  
                     l11865 1059                       l11961 0476                       l11953 043C  
                     l11945 040B                       l11937 03D7                       l11929 0398  
                     l11881 02B3                       l11873 02A2                       l10987 1164  
                     l10995 13EE                       l11699 0A4D                       l11787 0133  
                     l11779 0106                       l11795 0184                       l11859 13D2  
                     l11867 105E                       l11971 04BA                       l11963 0491  
                     l11955 044D                       l11947 0423                       l11939 03EF  
                     l11891 02C9                       l11883 02B4                       l11875 02A4  
                     l10989 1172                       l10997 13F4                       l11797 01B7  
                     l11789 0141                       l11869 106D                       l11957 045B  
                     l11949 042B                       l11965 0492                       l11893 02D4  
                     l11973 04BB                       l11885 02BA                       l11877 02A9  
                     l10999 13F8        __size_of_calibrateIR 006C                       l11799 01BC  
                     l11959 0460                       l11967 04A9                       l11975 04D1  
                     l11895 02D7                       l11887 02BF                       l11879 02AF  
                     l11969 04B3                       l11897 02E0                       l11889 02C5  
                     l11899 02E8                       l11997 0FCA                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072             __end_of___awdiv 165F  
                     _EEADR 010D                       STR_10 089E                       STR_11 08AE  
                     STR_20 08B5                       STR_12 08A2                       STR_21 08B8  
                     STR_13 083A                       STR_22 08B2                       STR_14 082A  
                     STR_23 08BB                       STR_15 0896                       STR_24 08BE  
                     STR_16 0885                       STR_25 08B2                       STR_17 089A  
                     STR_26 0847                       STR_18 081A                       STR_19 088D  
           __end_of___awmod 1509                       _CARRY 0018             ___awdiv@divisor 0026  
           __end_of___lwdiv 143A             __end_of___lwmod 1358             ___awdiv@counter 002B  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
                     _Disp1 00B4                       _Disp2 00B6      lcd_write_data@databyte 0022  
  __size_of_robot_turnRight 0287          i1___lwmod@dividend 0074                       _total 00C8  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00DF  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07FF            __end_of_Debounce 1800  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
          robotFollow@temp1 0062            robotFollow@speed 0059                __end_of_Menu 139F  
__size_of_lcd_write_control 0014            _shortMenuStrings 00E8                __end_of_isr1 09A1  
              __end_of_main 04DC                __end_of_init 122E             rotate@direction 0025  
            _Init_Follow_IR 1059                      ??_Menu 0020               ?_readDistance 0028  
    readAvgDistance@fullval 0030       __end_of_RobotBattRead 1768                      ??_isr1 0078  
                    ??_main 0065                      ??_init 0023         __end_of_ReadButtons 125E  
             Menu@BTN_input 0020                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            ___awdiv@dividend 0028  
          __end_of_adc_read 10A3                 ?_ChargeMode 0072                      i1l2240 096F  
                    i1l2241 096E                      i1l2242 0995                      i1l2243 0994  
                    i1l2244 0995                      i1l2236 094D                      i1l2237 0921  
                    i1l2238 093E                      i1l2239 094C                      i1l4550 17BD  
                    i1l4551 17C2                      i1l4543 1782                      i1l4552 17DC  
                    i1l4544 1781                      i1l4553 17DB                      i1l4545 1786  
                    i1l4561 123B                      i1l4554 17E0                      i1l4546 17A0  
                    i1l4562 125D                      i1l4555 17FA                      i1l4547 179F  
                    i1l4563 1243                      i1l4556 17F9                      i1l4548 17A4  
                    i1l4564 124B                      i1l4557 17FF                      i1l4549 17BE  
                    i1l4565 1253                      i1l4558 17FF                      i1l4566 125B  
                    i1l7650 12E4                      i1l7651 12D8                      i1l7652 12E9  
                    i1l7653 12EA                      i1l7654 12FB                      i1l7655 1309  
                    u400_20 177A                      i1l7656 1311                      u400_21 1779  
                    i1l7649 130A                      u401_20 177E                      u401_21 177D  
                    u410_20 17D8                      u402_20 178C                      u410_21 17D7  
                    u402_21 178B                      u411_20 17E6                      u403_20 1798  
                    u411_21 17E5                      u403_21 1797                      u412_20 17F2  
                    u404_20 179C                      u412_21 17F1                      u404_21 179B  
                    u413_20 17F6                      u405_20 17AA                      u413_21 17F5  
                    u405_21 17A9                      u406_20 17B6                      u406_21 17B5  
                    u407_20 17BA                      u407_21 17B9                      u408_20 17C8  
                    u408_21 17C7                      u409_20 17D4                      u409_21 17D3  
                    u460_20 12F4                      u380_20 0943                      u460_21 12F3  
                    u380_21 0942                      u460_25 12F0                      u381_20 0953  
                    u381_21 0952                      u461_25 12FC                      u462_20 1308  
                    u390_20 1257                      u382_20 0969                      u462_21 1307  
                    u390_21 1256                      u382_21 0968                 _DistLowByte 00D1  
                    u383_20 0974                      u383_21 0973                      u384_20 097A  
                    u384_21 0979                      u457_20 12D4                      u385_20 0992  
                    u377_20 08FE                      u457_21 12D3                      u385_21 0991  
                    u377_21 08FD                      u386_20 1237                      u378_20 091F  
                    u386_21 1236                      u378_21 091E                      u458_25 12D9  
                    u459_20 12E8                      u387_20 123F                      u379_20 0938  
                    u459_21 12E7                      u387_21 123E                      u379_21 0937  
                    u388_20 1247                      u388_21 1246                      u389_20 124F  
                    u389_21 124E                      u399_20 176E                      u399_21 176D  
                    _TMR0IE 005D                      _TMR0IF 005A                      _SSPCON 0014  
                    _SSPBUF 0013                  _UpReleased 038C            __end_of_lcd_init 1123  
                    _adcVal 006C             _UpDebounceCount 00D7      __end_of_Init_Follow_IR 107A  
           RobotDrive@speed 002F                  _RobotDrive 08C1                      ___wmul 114E  
                 ??___awdiv 002A                   ??___awmod 0024                _turnhighByte 00DE  
              ??_ADCconvert 002E                   ??___lwdiv 002A                   ??___lwmod 0032  
          __end_of_init_adc 2000              ??_readDistance 002A            ___awdiv@quotient 002D  
           ___awmod@divisor 0020    __end_of_lcd_write_string 11D2             ___awmod@counter 0025  
              ?_robotFollow 0059                      _rotate 143A                      _rxfifo 00A0  
                    clrloop 1F8A                      _txfifo 01A0                      _rxiptr 00DB  
                    _rxoptr 00DC                 _BumpSensors 006E                      _txiptr 00E0  
                    _txoptr 00E1       robotFollow@hysterysis 0064            __end_of_ser_init 10CD  
          __end_of_ser_isrx 1040           __end_ofi1___lwmod 1312                      saved_w 007E  
             main@shortwall 0068                _AngleLowByte 00CD                 _LeftPressed 0384  
    RobotDrive@speedlowByte 0034                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 06FF           ??_robot_turnRight 005D  
      robot_turnRight@temp1 0062        robot_turnRight@speed 0059                _CliffSensors 00CF  
            __pcstackCOMMON 0072             ?_Init_Follow_IR 0072                __pidataBANK1 1004  
               _ReadButtons 122E         __size_of_ChargeMode 004B            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 007D                  __pbssBANK0 006C  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00D2  
        _RightDebounceCount 00D5                  __pmaintext 029C                 ?_RobotDrive 002F  
                   ?___wmul 0020       __end_of_robotLoadSong 10F8                  __pintentry 0004  
              _DistHighByte 00D0                  __ptext1100 10A3                  __ptext1101 107A  
                __ptext1102 08FA                  __ptext1103 122E                  __ptext1104 12CE  
                __ptext1105 1768       __end_of_UpdateDisplay 1000                  __ptext1106 0000  
                __ptext1070 165F                  __ptext1062 1059                  __ptext1071 11FF  
                __ptext1063 139F                  __ptext1080 117A                  __ptext1072 1011  
                __ptext1064 0015                  __ptext1081 06FF                  __ptext1073 16DD  
                __ptext1065 0A49                  __ptext1090 1293                  __ptext1082 04DC  
                __ptext1074 0B2E                  __ptext1066 09A1                  __ptext1091 14A1  
                __ptext1083 143A                  __ptext1075 10F8                  __ptext1067 0C39  
                __ptext1092 15E9                  __ptext1084 08C1                  __ptext1076 11A6  
                __ptext1068 1509                  __ptext1093 1312                  __ptext1085 10CD  
                __ptext1077 1F91                  __ptext1069 0E0B                  __ptext1094 13EA  
                __ptext1086 1040                  __ptext1078 125E                  __ptext1095 114E  
                __ptext1087 1F9C                  __ptext1079 1575                  __ptext1096 1027  
                __ptext1088 1FD6                  __ptext1097 1FC2                  __ptext1089 1FEA  
                __ptext1098 11D2                  __ptext1099 1358          __size_of_ser_getch 002C  
                 ?_adc_read 0020                     ?_rotate 0023          __size_of_ser_putch 002D  
        __size_of_robo_init 0019                     i1l11121 12DF                     i1l11131 1302  
                   i1l11123 12E4                     i1l11115 12CE                     i1l11125 12EA  
                   i1l11117 12D4                     i1l11133 130A                     i1l11135 1311  
                   i1l11127 12F4                     i1l11119 12D8                     i1l11129 12FB  
                   i1l10711 0909                     i1l10721 0939                     i1l10713 090A  
                   i1l10705 08FA                     i1l10731 095D                     i1l10723 093E  
                   i1l10715 091F                     i1l10707 08FE                     i1l10901 178C  
                   i1l10741 097A                     i1l10733 0963                     i1l10725 0943  
                   i1l10717 0921                     i1l10709 08FF                     i1l10911 17B0  
                   i1l10903 1792                     i1l10751 122E                     i1l10743 0982  
                   i1l10735 0969                     i1l10719 0938                     i1l10727 094D  
                   i1l10921 17D4                     i1l10913 17B6                     i1l10905 1798  
                   i1l10761 123F                     i1l10753 1233                     i1l10745 0988  
                   i1l10729 0953                     i1l10737 096F                     i1l10931 17F6  
                   i1l10923 17D8                     i1l10915 17BA                     i1l10907 179C  
                   i1l10771 124A                     i1l10763 1240                     i1l10755 1237  
                   i1l10747 098C                     i1l10739 0974                     i1l10925 17E6  
                   i1l10917 17C8                     i1l10909 17AA                     i1l10781 1258  
                   i1l10773 124F                     i1l10765 1242                     i1l10757 1238  
                   i1l10749 0992                     i1l10927 17EC                     i1l10919 17CE  
                   i1l10783 125A                     i1l10775 1250                     i1l10767 1247  
                   i1l10759 123A                     i1l10929 17F2                     i1l10785 125B  
                   i1l10777 1252                     i1l10769 1248                     i1l10891 1768  
                   i1l10787 125D                     i1l10779 1257                     i1l10893 176E  
                   i1l10895 1774                     i1l10897 177A                     i1l10899 177E  
        __size_of_robotTurn 0074                  ??_Debounce 0072            ??_lcd_write_data 0020  
                 ?_lcd_init 0072                     _SSPSTAT 0094              main@currentFlw 006B  
      __end_of_readDistance 1027                   ?_init_adc 0072                   ?_ser_init 0072  
                 ?_ser_isrx 0072            RobotDrive@radius 0031               ??_calibrateIR 0059  
                   ___awdiv 15E9                     ___awmod 14A1             __size_of___wmul 002C  
                   ___lwdiv 13EA                     ___lwmod 1312   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0067                     _dpowers 0810  
              __size_of_abs 0035        __size_of_robotFollow 01D2            ___awmod@dividend 0022  
                   _lowByte 00DA                     _ser_tmp 00DD                     _sprintf 06FF  
                ??_lcd_init 0023         __size_of_RobotDrive 0039        end_of_initialization 114A  
             _AngleHighByte 00CC                ??_ChargeMode 0059          robot_read@readType 0023  
         __end_of_ser_getch 11A6                     init_ram 1FB3                  ??_init_adc 0020  
   __size_of_robotMoveSpeed 00E5           __end_of_ser_putch 11FF     RobotDrive@speedhighByte 0035  
         __end_of_robo_init 1059                _LeftReleased 0385           __end_of_robotTurn 15E9  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038A    __size_of_readAvgDistance 007E  
                _robot_read 0B2E          RobotBattRead@temp1 0024           ?_lcd_write_string 0027  
        __end_of_ChargeMode 13EA         __end_of_calibrateIR 1575          ??_lcd_write_string 0029  
           _robot_turnRight 0015                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A8                   i1___lwmod 12CE  
                _totalSteps 00CA                  main@choice 006A               ?_spi_transfer 0072  
          ??_Init_Follow_IR 0059                   _BattState 00B2      __size_of_RobotBattRead 008B  
               _VwallSensor 006F               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 117A           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 14A1         start_initialization 1123      UpdateDisplay@LCDOutput 0049  
               __end_of_abs 1293       __size_of_readDistance 0016           __size_of_Debounce 0098  
                ?i1___lwmod 0072          _TotalDistTravelled 00BC              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 0033  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 1509                 __pdataBANK1 00E2  
   __end_of_robot_turnRight 029C            _adc_read_channel 1293                 ?_robot_read 0072  
                  ??_rotate 0026                _readDistance 1011               _RobotBattRead 16DD  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020      robotMoveSpeed@distance 0059          __end_of_RobotDrive 08FA  
         __size_of_lcd_init 002B              _robotMoveSpeed 0A49                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00EE  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                 _angleTurned 00BE                    ?___awdiv 0026  
                  ?___awmod 0020           __size_of_ser_init 002A           __size_of_ser_isrx 0019  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0800  
                 _dist_high 00C2              ?_RobotBattRead 0072         readDistance@readVal 002C  
            _robotTurnSpeed 09A1         robotTurnSpeed@angle 0059         robotTurnSpeed@temp1 0060  
       robotTurnSpeed@speed 005B                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034      __end_of_robotMoveSpeed 0B2E  
    __size_of_robotLoadSong 002B     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 01F5              ___wmul@product 0024         __size_of_robot_read 010B  
                ser_putch@c 0021                   _ser_getch 117A                   _ser_putch 11D2  
                 _robo_init 1040                   _robotTurn 1575                _RightPressed 0389  
          ?_robot_turnRight 0059        __size_of_ReadButtons 0030               ??_robotFollow 005E  
      __end_of_spi_transfer 1FD6      __end_of_robotTurnSpeed 0A49                 __stringbase 080F  
         ___wmul@multiplier 0020            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 1768           _LeftDebounceCount 00D3             ?_robotMoveSpeed 0059  
 __size_of_lcd_write_string 002C     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027                    _RobotPos 00D6  
                ?_robo_init 0072                   init_fetch 1FAF   robot_turnRight@turnTarget 0060  
                ?_robotTurn 0022                  _ADCconvert 04DC            __size_of___awdiv 0076  
           ??_RobotBattRead 0022            __size_of___awmod 0068               _robotLoadSong 10CD  
          __size_of___lwdiv 0050            __size_of___lwmod 0046               _UpdateDisplay 0E0B  
                  _adc_read 107A             ?_robotTurnSpeed 0059                 _currentMenu 00D8  
  robot_turnRight@AdcTarget 005B             ___lwdiv@divisor 0026         __end_of_robotFollow 0E0B  
           ___lwdiv@counter 002D                 _menuStrings 00E2                    _highByte 00D9  
                  _lcd_init 10F8                    _dist_low 00C4            __size_of_sprintf 0100  
  __end_of_adc_read_channel 12CE   lcd_write_control@databyte 0022               __size_of_Menu 0047  
                  _init_adc 1FEA               __size_of_isr1 00A7               __size_of_main 0240  
             __size_of_init 002F                    clear_ram 1F89                    _ser_init 10A3  
      robotFollow@AdcTarget 005B                    _ser_isrx 1027             _readAvgDistance 165F  
              ?_calibrateIR 0072              ?_robotLoadSong 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022         _CenterDebounceCount 00CE                _RTC_FLAG_1MS 0386  
        UpdateDisplay@F1263 0190                    intlevel1 0000              _lcd_set_cursor 1F91  
                 sprintf@ap 003C                   sprintf@sp 0043              robotTurn@angle 0022  
          ___lwmod@dividend 0030          __end_of_robot_read 0C39                   stringcode 080A  
               ??_ser_getch 0020                 ??_ser_putch 0020               _distTravelled 00C0  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 1FD6     __size_of_Init_Follow_IR 0021  
               _robotFollow 0C39          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034         robotMoveSpeed@temp1 0060  
       robotMoveSpeed@speed 005B             ___lwmod@divisor 002E                  _ROBOTerror 00D4  
           ___lwmod@counter 0033                    stringdir 080A                    stringtab 0800  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 1F9C            _lcd_write_string 11A6  
  RobotDrive@radiushighByte 0037                _spi_transfer 1FC2                 _RTC_Counter 00BA  
   __end_of_readAvgDistance 16DD              _lcd_write_data 1F9C             ??_robotLoadSong 0022  
