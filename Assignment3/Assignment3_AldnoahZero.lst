

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 13 15:05:20 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 31 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 31 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_rotate
    48                           	FNCALL	_init,_init_adc
    49                           	FNCALL	_init,_lcd_init
    50                           	FNCALL	_lcd_init,_lcd_write_control
    51                           	FNROOT	_main
    52                           	FNCALL	_isr1,___lwmod
    53                           	FNCALL	_isr1,_readAvgDistance
    54                           	FNCALL	_isr1,_ADCconvert
    55                           	FNCALL	_ADCconvert,___lwmod
    56                           	FNCALL	_ADCconvert,_sprintf
    57                           	FNCALL	_ADCconvert,_lcd_set_cursor
    58                           	FNCALL	_ADCconvert,_lcd_write_string
    59                           	FNCALL	_readAvgDistance,_adc_read_channel
    60                           	FNCALL	_readAvgDistance,___lwdiv
    61                           	FNCALL	_readAvgDistance,_sprintf
    62                           	FNCALL	_readAvgDistance,_lcd_set_cursor
    63                           	FNCALL	_readAvgDistance,i1_lcd_write_control
    64                           	FNCALL	_readAvgDistance,_lcd_write_string
    65                           	FNCALL	_lcd_write_string,_lcd_write_data
    66                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    67                           	FNCALL	_sprintf,___lwdiv
    68                           	FNCALL	_sprintf,___lwmod
    69                           	FNCALL	_adc_read_channel,_adc_read
    70                           	FNCALL	intlevel1,_isr1
    71                           	global	intlevel1
    72                           	FNROOT	intlevel1
    73                           	global	_current_step
    74                           psect	idataBANK1,class=CODE,space=0,delta=2
    75                           global __pidataBANK1
    76  0003                     __pidataBANK1:
    77                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
    78                           	line	21
    79                           
    80                           ;initializer for _current_step
    81  0003  343C               	retlw	03Ch
    82                           	global	_dpowers
    83                           psect	strings,class=STRING,delta=2
    84                           global __pstrings
    85  0750                     __pstrings:
    86                           ;	global	stringdir,stringtab,__stringbase
    87  0750                     stringtab:
    88                           ;	String table - string pointers are 1 byte each
    89  0750                     stringcode:stringdir:
      + 0750                     stringdir:	
    90  0750  3007               movlw high(stringdir)
    91  0751  008A               movwf pclath
    92  0752  0804               movf fsr,w
    93  0753  0A84               incf fsr
    94  0754  0782               	addwf pc
    95  0755                     __stringbase:
    96  0755  3400               	retlw	0
    97                           psect	strings
    98                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
    99                           	line	350
   100  0756                     _dpowers:
   101  0756  3401               	retlw	01h
   102  0757  3400               	retlw	0
   103                           
   104  0758  340A               	retlw	0Ah
   105  0759  3400               	retlw	0
   106                           
   107  075A  3464               	retlw	064h
   108  075B  3400               	retlw	0
   109                           
   110  075C  34E8               	retlw	0E8h
   111  075D  3403               	retlw	03h
   112                           
   113  075E  3410               	retlw	010h
   114  075F  3427               	retlw	027h
   115                           
   116                           	global	_dpowers
   117                           	global	_RTC_Counter
   118                           	global	_pb0DebounceCount
   119                           	global	_pb1DebounceCount
   120                           	global	_pb2DebounceCount
   121                           	global	_pb3DebounceCount
   122                           	global	_RTC_FLAG_10MS
   123                           	global	_RTC_FLAG_1MS
   124                           	global	_RTC_FLAG_250MS
   125                           	global	_RTC_FLAG_500MS
   126                           	global	_RTC_FLAG_50MS
   127                           	global	_pb0Pressed
   128                           	global	_pb0Released
   129                           	global	_pb1Pressed
   130                           	global	_pb1Released
   131                           	global	_pb2Pressed
   132                           	global	_pb2Released
   133                           	global	_pb3Pressed
   134                           	global	_pb3Released
   135                           	global	ADCconvert@F1192
   136                           	global	readAvgDistance@F1184
   137                           	global	readDistance@F1189
   138                           	global	_current_direction
   139                           	global	_ADCON0
   140  001F                     _ADCON0	set	31
   141                           	global	_ADRESH
   142  001E                     _ADRESH	set	30
   143                           	global	_PORTA
   144  0005                     _PORTA	set	5
   145                           	global	_PORTC
   146  0007                     _PORTC	set	7
   147                           	global	_PORTD
   148  0008                     _PORTD	set	8
   149                           	global	_PORTE
   150  0009                     _PORTE	set	9
   151                           	global	_TMR0
   152  0001                     _TMR0	set	1
   153                           	global	_CARRY
   154  0018                     _CARRY	set	24
   155                           	global	_CHS0
   156  00FB                     _CHS0	set	251
   157                           	global	_CHS1
   158  00FC                     _CHS1	set	252
   159                           	global	_CHS2
   160  00FD                     _CHS2	set	253
   161                           	global	_GIE
   162  005F                     _GIE	set	95
   163                           	global	_GO
   164  00FA                     _GO	set	250
   165                           	global	_RB0
   166  0030                     _RB0	set	48
   167                           	global	_RB1
   168  0031                     _RB1	set	49
   169                           	global	_RB2
   170  0032                     _RB2	set	50
   171                           	global	_RB3
   172  0033                     _RB3	set	51
   173                           	global	_RB4
   174  0034                     _RB4	set	52
   175                           	global	_RB5
   176  0035                     _RB5	set	53
   177                           	global	_RE0
   178  0048                     _RE0	set	72
   179                           	global	_RE1
   180  0049                     _RE1	set	73
   181                           	global	_RE2
   182  004A                     _RE2	set	74
   183                           	global	_TMR0IE
   184  005D                     _TMR0IE	set	93
   185                           	global	_TMR0IF
   186  005A                     _TMR0IF	set	90
   187                           	global	_ADCON1
   188  009F                     _ADCON1	set	159
   189                           	global	_ADRESL
   190  009E                     _ADRESL	set	158
   191                           	global	_OPTION_REG
   192  0081                     _OPTION_REG	set	129
   193                           	global	_TRISA
   194  0085                     _TRISA	set	133
   195                           	global	_TRISB
   196  0086                     _TRISB	set	134
   197                           	global	_TRISC
   198  0087                     _TRISC	set	135
   199                           	global	_TRISD
   200  0088                     _TRISD	set	136
   201                           	global	_TRISE
   202  0089                     _TRISE	set	137
   203                           	global	_EEADR
   204  010D                     _EEADR	set	269
   205                           	global	_EEDATA
   206  010C                     _EEDATA	set	268
   207                           	global	_EECON1
   208  018C                     _EECON1	set	396
   209                           	global	_EECON2
   210  018D                     _EECON2	set	397
   211                           	global	_RD
   212  0C60                     _RD	set	3168
   213                           	global	_WR
   214  0C61                     _WR	set	3169
   215                           	global	_WREN
   216  0C62                     _WREN	set	3170
   217                           	
   218  0760                     STR_3:	
   219  0760  3444               	retlw	68	;'D'
   220  0761  3469               	retlw	105	;'i'
   221  0762  3473               	retlw	115	;'s'
   222  0763  3474               	retlw	116	;'t'
   223  0764  3461               	retlw	97	;'a'
   224  0765  346E               	retlw	110	;'n'
   225  0766  3463               	retlw	99	;'c'
   226  0767  3465               	retlw	101	;'e'
   227  0768  343A               	retlw	58	;':'
   228  0769  3420               	retlw	32	;' '
   229  076A  3425               	retlw	37	;'%'
   230  076B  3464               	retlw	100	;'d'
   231  076C  3463               	retlw	99	;'c'
   232  076D  346D               	retlw	109	;'m'
   233  076E  3400               	retlw	0
   234                           psect	strings
   235                           	
   236  076F                     STR_1:	
   237  076F  3441               	retlw	65	;'A'
   238  0770  3464               	retlw	100	;'d'
   239  0771  3463               	retlw	99	;'c'
   240  0772  3420               	retlw	32	;' '
   241  0773  3456               	retlw	86	;'V'
   242  0774  3461               	retlw	97	;'a'
   243  0775  346C               	retlw	108	;'l'
   244  0776  3475               	retlw	117	;'u'
   245  0777  3465               	retlw	101	;'e'
   246  0778  343A               	retlw	58	;':'
   247  0779  3420               	retlw	32	;' '
   248  077A  3425               	retlw	37	;'%'
   249  077B  3464               	retlw	100	;'d'
   250  077C  3400               	retlw	0
   251                           psect	strings
   252  076F                     STR_2	equ	STR_1+0
   253                           	file	"Assignment3_AldnoahZero.as"
   254                           	line	#
   255                           psect cinit,class=CODE,delta=2
   256                           global start_initialization
   257  07CF                     start_initialization:
   258                           
   259                           psect	bitbssBANK0,class=BANK0,bit,space=1
   260                           global __pbitbssBANK0
   261  0340                     __pbitbssBANK0:
   262  0340                     _RTC_FLAG_10MS:
   263  0340                            ds      1
   264                           
   265  0341                     _RTC_FLAG_1MS:
   266  0341                            ds      1
   267                           
   268  0342                     _RTC_FLAG_250MS:
   269  0342                            ds      1
   270                           
   271  0343                     _RTC_FLAG_500MS:
   272  0343                            ds      1
   273                           
   274  0344                     _RTC_FLAG_50MS:
   275  0344                            ds      1
   276                           
   277  0345                     _pb0Pressed:
   278  0345                            ds      1
   279                           
   280  0346                     _pb0Released:
   281  0346                            ds      1
   282                           
   283  0347                     _pb1Pressed:
   284  0347                            ds      1
   285                           
   286  0348                     _pb1Released:
   287  0348                            ds      1
   288                           
   289  0349                     _pb2Pressed:
   290  0349                            ds      1
   291                           
   292  034A                     _pb2Released:
   293  034A                            ds      1
   294                           
   295  034B                     _pb3Pressed:
   296  034B                            ds      1
   297                           
   298  034C                     _pb3Released:
   299  034C                            ds      1
   300                           
   301                           psect	bssBANK0,class=BANK0,space=1
   302                           global __pbssBANK0
   303  006A                     __pbssBANK0:
   304  006A                     _RTC_Counter:
   305  006A                            ds      2
   306                           
   307  006C                     _pb0DebounceCount:
   308  006C                            ds      1
   309                           
   310  006D                     _pb1DebounceCount:
   311  006D                            ds      1
   312                           
   313  006E                     _pb2DebounceCount:
   314  006E                            ds      1
   315                           
   316  006F                     _pb3DebounceCount:
   317  006F                            ds      1
   318                           
   319                           psect	bssBANK1,class=BANK1,space=1
   320                           global __pbssBANK1
   321  00A0                     __pbssBANK1:
   322  00A0                     ADCconvert@F1192:
   323  00A0                            ds      16
   324                           
   325  00B0                     readAvgDistance@F1184:
   326  00B0                            ds      16
   327                           
   328  00C0                     readDistance@F1189:
   329  00C0                            ds      16
   330                           
   331  00D0                     _current_direction:
   332  00D0                            ds      1
   333                           
   334                           psect	dataBANK1,class=BANK1,space=1
   335                           global __pdataBANK1
   336  00D6                     __pdataBANK1:
   337                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   338                           	line	21
   339  00D6                     _current_step:
   340  00D6                            ds      1
   341                           
   342                           psect clrtext,class=CODE,delta=2
   343                           global clear_ram
   344                           ;	Called with FSR containing the base address, and
   345                           ;	W with the last address+1
   346  0F7E                     clear_ram:
   347  0F7E  0064               	clrwdt			;clear the watchdog before getting into this loop
   348  0F7F                     clrloop:
   349  0F7F  0180               	clrf	indf		;clear RAM location pointed to by FSR
   350  0F80  0A84               	incf	fsr,f		;increment pointer
   351  0F81  0604               	xorwf	fsr,w		;XOR with final address
   352  0F82  1903               	btfsc	status,2	;have we reached the end yet?
   353  0F83  3400               	retlw	0		;all done for this memory range, return
   354  0F84  0604               	xorwf	fsr,w		;XOR again to restore value
   355  0F85  2F7F               	goto	clrloop		;do the next byte
   356                           
   357                           ; Clear objects allocated to BITBANK0
   358                           psect cinit,class=CODE,delta=2
   359  07CF  01E8               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   360  07D0  01E9               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   361                           ; Clear objects allocated to BANK0
   362                           psect cinit,class=CODE,delta=2
   363  07D1  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   364  07D2  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   365  07D3  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   366  07D4  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   367  07D5  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   368  07D6  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   369                           ; Clear objects allocated to BANK1
   370                           psect cinit,class=CODE,delta=2
   371  07D7  1383               	bcf	status, 7	;select IRP bank0
   372  07D8  30A0               	movlw	low(__pbssBANK1)
   373  07D9  0084               	movwf	fsr
   374  07DA  30D1               	movlw	low((__pbssBANK1)+031h)
   375  07DB  120A  158A  277E   	fcall	clear_ram
              120A  118A         
   376                           ; Initialize objects allocated to BANK1
   377                           	global __pidataBANK1
   378                           psect cinit,class=CODE,delta=2
   379  07E0  1683               	bsf	status, 5	;RP0=1, select bank1
   380  07E1  1303               	bcf	status, 6	;RP1=0, select bank1
   381  07E2  120A  118A  2003   	fcall	__pidataBANK1+0		;fetch initializer
              120A  118A         
   382  07E7  00D6               	movwf	__pdataBANK1+0&07fh		
   383                           psect cinit,class=CODE,delta=2
   384                           global end_of_initialization
   385                           
   386                           ;End of C runtime variable initialization code
   387                           
   388  07E8                     end_of_initialization:
   389  07E8  0183               clrf status
   390  07E9  120A  118A  2E23   ljmp _main	;jump to C main() function
   391                           psect	cstackBANK1,class=BANK1,space=1
   392                           global __pcstackBANK1
   393  00D1                     __pcstackBANK1:
   394                           	global	?_rotate
   395  00D1                     ?_rotate:	; 0 bytes @ 0x0
   396                           	global	??_init_adc
   397  00D1                     ??_init_adc:	; 0 bytes @ 0x0
   398                           	global	??_lcd_write_control
   399  00D1                     ??_lcd_write_control:	; 0 bytes @ 0x0
   400                           	global	rotate@direction
   401  00D1                     rotate@direction:	; 1 bytes @ 0x0
   402  00D1                     	ds	1
   403                           	global	??_rotate
   404  00D2                     ??_rotate:	; 0 bytes @ 0x1
   405  00D2                     	ds	1
   406                           	global	lcd_write_control@databyte
   407  00D3                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   408  00D3                     	ds	1
   409                           	global	??_lcd_init
   410  00D4                     ??_lcd_init:	; 0 bytes @ 0x3
   411                           	global	??_init
   412  00D4                     ??_init:	; 0 bytes @ 0x3
   413                           	global	rotate@steps
   414  00D4                     rotate@steps:	; 1 bytes @ 0x3
   415  00D4                     	ds	1
   416                           	global	??_main
   417  00D5                     ??_main:	; 0 bytes @ 0x4
   418  00D5                     	ds	1
   419                           psect	cstackCOMMON,class=COMMON,space=1
   420                           global __pcstackCOMMON
   421  0070                     __pcstackCOMMON:
   422                           	global	?_init_adc
   423  0070                     ?_init_adc:	; 0 bytes @ 0x0
   424                           	global	?_lcd_write_control
   425  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   426                           	global	?_lcd_write_data
   427  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   428                           	global	??_lcd_write_data
   429  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   430                           	global	?_lcd_set_cursor
   431  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   432                           	global	?_lcd_write_string
   433  0070                     ?_lcd_write_string:	; 0 bytes @ 0x0
   434                           	global	?_lcd_init
   435  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   436                           	global	?_isr1
   437  0070                     ?_isr1:	; 0 bytes @ 0x0
   438                           	global	?_init
   439  0070                     ?_init:	; 0 bytes @ 0x0
   440                           	global	?_main
   441  0070                     ?_main:	; 0 bytes @ 0x0
   442                           	global	?i1_lcd_write_control
   443  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   444                           	global	??i1_lcd_write_control
   445  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   446                           	global	?_adc_read_channel
   447  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   448                           	global	?_adc_read
   449  0070                     ?_adc_read:	; 2 bytes @ 0x0
   450                           	global	?___lwdiv
   451  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   452                           	global	___lwdiv@divisor
   453  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   454  0070                     	ds	2
   455                           	global	??_adc_read
   456  0072                     ??_adc_read:	; 0 bytes @ 0x2
   457                           	global	lcd_write_data@databyte
   458  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   459                           	global	i1lcd_write_control@databyte
   460  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   461                           	global	___lwdiv@dividend
   462  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   463  0072                     	ds	1
   464                           	global	??_lcd_set_cursor
   465  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   466                           	global	??_lcd_write_string
   467  0073                     ??_lcd_write_string:	; 0 bytes @ 0x3
   468                           	global	lcd_set_cursor@address
   469  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   470  0073                     	ds	1
   471                           	global	??___lwdiv
   472  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   473                           	global	lcd_write_string@s
   474  0074                     lcd_write_string@s:	; 1 bytes @ 0x4
   475                           	global	adc_read@adc_value
   476  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   477  0074                     	ds	1
   478                           	global	___lwdiv@quotient
   479  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   480  0075                     	ds	1
   481                           	global	??_adc_read_channel
   482  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   483  0076                     	ds	1
   484                           	global	adc_read_channel@channel
   485  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   486                           	global	___lwdiv@counter
   487  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   488  0077                     	ds	1
   489                           	global	?___lwmod
   490  0078                     ?___lwmod:	; 2 bytes @ 0x8
   491                           	global	___lwmod@divisor
   492  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   493  0078                     	ds	2
   494                           	global	___lwmod@dividend
   495  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   496  007A                     	ds	2
   497                           	global	??___lwmod
   498  007C                     ??___lwmod:	; 0 bytes @ 0xC
   499  007C                     	ds	1
   500                           	global	___lwmod@counter
   501  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   502  007D                     	ds	1
   503                           psect	cstackBANK0,class=BANK0,space=1
   504                           global __pcstackBANK0
   505  0020                     __pcstackBANK0:
   506                           	global	?_sprintf
   507  0020                     ?_sprintf:	; 2 bytes @ 0x0
   508                           	global	sprintf@f
   509  0020                     sprintf@f:	; 1 bytes @ 0x0
   510  0020                     	ds	3
   511                           	global	??_sprintf
   512  0023                     ??_sprintf:	; 0 bytes @ 0x3
   513  0023                     	ds	3
   514                           	global	sprintf@ap
   515  0026                     sprintf@ap:	; 1 bytes @ 0x6
   516  0026                     	ds	1
   517                           	global	sprintf@flag
   518  0027                     sprintf@flag:	; 1 bytes @ 0x7
   519  0027                     	ds	1
   520                           	global	sprintf@prec
   521  0028                     sprintf@prec:	; 1 bytes @ 0x8
   522  0028                     	ds	1
   523                           	global	sprintf@_val
   524  0029                     sprintf@_val:	; 4 bytes @ 0x9
   525  0029                     	ds	4
   526                           	global	sprintf@sp
   527  002D                     sprintf@sp:	; 1 bytes @ 0xD
   528  002D                     	ds	1
   529                           	global	sprintf@c
   530  002E                     sprintf@c:	; 1 bytes @ 0xE
   531  002E                     	ds	1
   532                           	global	?_readAvgDistance
   533  002F                     ?_readAvgDistance:	; 2 bytes @ 0xF
   534  002F                     	ds	2
   535                           	global	??_readAvgDistance
   536  0031                     ??_readAvgDistance:	; 0 bytes @ 0x11
   537  0031                     	ds	4
   538                           	global	readAvgDistance@adcOutput
   539  0035                     readAvgDistance@adcOutput:	; 16 bytes @ 0x15
   540  0035                     	ds	16
   541                           	global	readAvgDistance@fullval
   542  0045                     readAvgDistance@fullval:	; 2 bytes @ 0x25
   543  0045                     	ds	2
   544                           	global	readAvgDistance@averageval
   545  0047                     readAvgDistance@averageval:	; 2 bytes @ 0x27
   546  0047                     	ds	2
   547                           	global	readAvgDistance@i
   548  0049                     readAvgDistance@i:	; 2 bytes @ 0x29
   549  0049                     	ds	2
   550                           	global	?_ADCconvert
   551  004B                     ?_ADCconvert:	; 0 bytes @ 0x2B
   552                           	global	ADCconvert@adcVal
   553  004B                     ADCconvert@adcVal:	; 2 bytes @ 0x2B
   554  004B                     	ds	2
   555                           	global	??_ADCconvert
   556  004D                     ??_ADCconvert:	; 0 bytes @ 0x2D
   557  004D                     	ds	4
   558                           	global	ADCconvert@adcOutput
   559  0051                     ADCconvert@adcOutput:	; 16 bytes @ 0x31
   560  0051                     	ds	16
   561                           	global	ADCconvert@distance
   562  0061                     ADCconvert@distance:	; 2 bytes @ 0x41
   563  0061                     	ds	2
   564                           	global	??_isr1
   565  0063                     ??_isr1:	; 0 bytes @ 0x43
   566  0063                     	ds	5
   567 ;;Data sizes: Strings 29, constant 10, data 1, bss 55, persistent 0 stack 0
   568 ;;Auto spaces:   Size  Autos    Used
   569 ;; COMMON          14     14      14
   570 ;; BANK0           80     72      80
   571 ;; BANK1           80      5      55
   572 ;; BANK3           96      0       0
   573 ;; BANK2           96      0       0
   574                           
   575 ;;
   576 ;; Pointer list with targets:
   577                           
   578 ;; ?_readAvgDistance	unsigned int  size(1) Largest target is 0
   579 ;;
   580 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   581 ;;
   582 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   583 ;;
   584 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   585 ;;
   586 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   587 ;;		 -> STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[14]), 
   588 ;;
   589 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   590 ;;		 -> ADCconvert@adcOutput(BANK0[16]), readDistance@adcOutput(BANK0[16]), readAvgDistance@adcOutput(BANK0[16]), 
   591 ;;
   592 ;; ?_sprintf	int  size(1) Largest target is 0
   593 ;;
   594 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   595 ;;		 -> ?_sprintf(BANK0[2]), 
   596 ;;
   597 ;; S4646$_cp	PTR const unsigned char  size(1) Largest target is 0
   598 ;;
   599 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   600 ;;
   601 ;; lcd_write_string@s	PTR unsigned char  size(1) Largest target is 16
   602 ;;		 -> ADCconvert@adcOutput(BANK0[16]), readDistance@adcOutput(BANK0[16]), readAvgDistance@adcOutput(BANK0[16]), 
   603 ;;
   604                           
   605                           
   606 ;;
   607 ;; Critical Paths under _main in COMMON
   608 ;;
   609 ;;   None.
   610 ;;
   611 ;; Critical Paths under _isr1 in COMMON
   612 ;;
   613 ;;   _isr1->___lwmod
   614 ;;   _ADCconvert->___lwmod
   615 ;;   _lcd_write_string->_lcd_write_data
   616 ;;   _lcd_set_cursor->i1_lcd_write_control
   617 ;;   _sprintf->___lwmod
   618 ;;   _adc_read_channel->_adc_read
   619 ;;   ___lwmod->___lwdiv
   620 ;;
   621 ;; Critical Paths under _main in BANK0
   622 ;;
   623 ;;   None.
   624 ;;
   625 ;; Critical Paths under _isr1 in BANK0
   626 ;;
   627 ;;   _isr1->_ADCconvert
   628 ;;   _ADCconvert->_readAvgDistance
   629 ;;   _readAvgDistance->_sprintf
   630 ;;
   631 ;; Critical Paths under _main in BANK1
   632 ;;
   633 ;;   _main->_rotate
   634 ;;   _lcd_init->_lcd_write_control
   635 ;;
   636 ;; Critical Paths under _isr1 in BANK1
   637 ;;
   638 ;;   None.
   639 ;;
   640 ;; Critical Paths under _main in BANK3
   641 ;;
   642 ;;   None.
   643 ;;
   644 ;; Critical Paths under _isr1 in BANK3
   645 ;;
   646 ;;   None.
   647 ;;
   648 ;; Critical Paths under _main in BANK2
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _isr1 in BANK2
   653 ;;
   654 ;;   None.
   655                           
   656 ;;
   657 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   658 ;;
   659                           
   660 ;;
   661 ;;Call Graph Tables:
   662 ;;
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (0) _main                                                 1     1      0     111
   667 ;;                                              4 BANK1      1     1      0
   668 ;;                               _init
   669 ;;                             _rotate
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _init                                                 0     0      0      22
   672 ;;                           _init_adc
   673 ;;                           _lcd_init
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (2) _lcd_init                                             0     0      0      22
   676 ;;                  _lcd_write_control
   677 ;; ---------------------------------------------------------------------------------
   678 ;; (1) _rotate                                               4     3      1      89
   679 ;;                                              0 BANK1      4     3      1
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (3) _lcd_write_control                                    3     3      0      22
   682 ;;                                              0 BANK1      3     3      0
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _init_adc                                             1     1      0       0
   685 ;;                                              0 BANK1      1     1      0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; Estimated maximum stack depth 3
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (4) _isr1                                                 5     5      0    3573
   692 ;;                                             67 BANK0      5     5      0
   693 ;;                            ___lwmod
   694 ;;                    _readAvgDistance
   695 ;;                         _ADCconvert
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (5) _ADCconvert                                          24    22      2    2002
   698 ;;                                             43 BANK0     24    22      2
   699 ;;                            ___lwmod
   700 ;;                            _sprintf
   701 ;;                     _lcd_set_cursor
   702 ;;                   _lcd_write_string
   703 ;;                    _readAvgDistance (ARG)
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (5) _readAvgDistance                                     28    26      2    1412
   706 ;;                                             15 BANK0     28    26      2
   707 ;;                   _adc_read_channel
   708 ;;                            ___lwdiv
   709 ;;                            _sprintf
   710 ;;                     _lcd_set_cursor
   711 ;;                i1_lcd_write_control
   712 ;;                   _lcd_write_string
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (6) _lcd_write_string                                     2     2      0      67
   715 ;;                                              3 COMMON     2     2      0
   716 ;;                     _lcd_write_data
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (6) _lcd_set_cursor                                       1     1      0      96
   719 ;;                                              3 COMMON     1     1      0
   720 ;;                i1_lcd_write_control
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (7) i1_lcd_write_control                                  3     3      0      73
   723 ;;                                              0 COMMON     3     3      0
   724 ;; ---------------------------------------------------------------------------------
   725 ;; (6) _sprintf                                             15    12      3     798
   726 ;;                                              0 BANK0     15    12      3
   727 ;;                            ___lwdiv
   728 ;;                            ___lwmod
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (7) _lcd_write_data                                       3     3      0      22
   731 ;;                                              0 COMMON     3     3      0
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (6) _adc_read_channel                                     2     2      0      46
   734 ;;                                              6 COMMON     2     2      0
   735 ;;                           _adc_read
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (7) ___lwmod                                              6     2      4     159
   738 ;;                                              8 COMMON     6     2      4
   739 ;;                            ___lwdiv (ARG)
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (7) ___lwdiv                                              8     4      4     162
   742 ;;                                              0 COMMON     8     4      4
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (7) _adc_read                                             6     4      2      24
   745 ;;                                              0 COMMON     6     4      2
   746 ;; ---------------------------------------------------------------------------------
   747 ;; Estimated maximum stack depth 7
   748 ;; ---------------------------------------------------------------------------------
   749                           
   750 ;; Call Graph Graphs:
   751                           
   752 ;; _main (ROOT)
   753 ;;   _init
   754 ;;     _init_adc
   755 ;;     _lcd_init
   756 ;;       _lcd_write_control
   757 ;;   _rotate
   758 ;;
   759 ;; _isr1 (ROOT)
   760 ;;   ___lwmod
   761 ;;     ___lwdiv (ARG)
   762 ;;   _readAvgDistance
   763 ;;     _adc_read_channel
   764 ;;       _adc_read
   765 ;;     ___lwdiv
   766 ;;     _sprintf
   767 ;;       ___lwdiv
   768 ;;       ___lwmod
   769 ;;         ___lwdiv (ARG)
   770 ;;     _lcd_set_cursor
   771 ;;       i1_lcd_write_control
   772 ;;     i1_lcd_write_control
   773 ;;     _lcd_write_string
   774 ;;       _lcd_write_data
   775 ;;   _ADCconvert
   776 ;;     ___lwmod
   777 ;;       ___lwdiv (ARG)
   778 ;;     _sprintf
   779 ;;       ___lwdiv
   780 ;;       ___lwmod
   781 ;;         ___lwdiv (ARG)
   782 ;;     _lcd_set_cursor
   783 ;;       i1_lcd_write_control
   784 ;;     _lcd_write_string
   785 ;;       _lcd_write_data
   786 ;;     _readAvgDistance (ARG)
   787 ;;       _adc_read_channel
   788 ;;         _adc_read
   789 ;;       ___lwdiv
   790 ;;       _sprintf
   791 ;;         ___lwdiv
   792 ;;         ___lwmod
   793 ;;           ___lwdiv (ARG)
   794 ;;       _lcd_set_cursor
   795 ;;         i1_lcd_write_control
   796 ;;       i1_lcd_write_control
   797 ;;       _lcd_write_string
   798 ;;         _lcd_write_data
   799 ;;
   800                           
   801 ;; Address spaces:
   802                           
   803 ;;Name               Size   Autos  Total    Cost      Usage
   804 ;;BANK3               60      0       0       9        0.0%
   805 ;;BITBANK3            60      0       0       8        0.0%
   806 ;;SFR3                 0      0       0       4        0.0%
   807 ;;BITSFR3              0      0       0       4        0.0%
   808 ;;BANK2               60      0       0      11        0.0%
   809 ;;BITBANK2            60      0       0      10        0.0%
   810 ;;SFR2                 0      0       0       5        0.0%
   811 ;;BITSFR2              0      0       0       5        0.0%
   812 ;;SFR1                 0      0       0       2        0.0%
   813 ;;BITSFR1              0      0       0       2        0.0%
   814 ;;BANK1               50      5      37       7       68.8%
   815 ;;BITBANK1            50      0       0       6        0.0%
   816 ;;CODE                 0      0       0       0        0.0%
   817 ;;DATA                 0      0      A0      12        0.0%
   818 ;;ABS                  0      0      95       3        0.0%
   819 ;;NULL                 0      0       0       0        0.0%
   820 ;;STACK                0      0       B       2        0.0%
   821 ;;BANK0               50     48      50       5      100.0%
   822 ;;BITBANK0            50      0       2       4        2.5%
   823 ;;SFR0                 0      0       0       1        0.0%
   824 ;;BITSFR0              0      0       0       1        0.0%
   825 ;;COMMON               E      E       E       1      100.0%
   826 ;;BITCOMMON            E      0       0       0        0.0%
   827 ;;EEDATA             100      0       0       0        0.0%
   828                           
   829                           	global	_main
   830                           psect	maintext,global,class=CODE,delta=2
   831                           global __pmaintext
   832  0623                     __pmaintext:
   833                           
   834 ;; *************** function _main *****************
   835 ;; Defined at:
   836 ;;		line 219 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;		None               void
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 17F/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          0       0       1       0       0
   853 ;;      Totals:         0       0       1       0       0
   854 ;;Total ram usage:        1 bytes
   855 ;; Hardware stack levels required when called:    7
   856 ;; This function calls:
   857 ;;		_init
   858 ;;		_rotate
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           psect	maintext
   864                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
   865                           	line	219
   866                           	global	__size_of_main
   867  005A                     	__size_of_main	equ	__end_of_main-_main
   868                           	
   869  0623                     _main:	
   870                           	opt	stack 1
   871                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   872                           	line	224
   873                           	
   874  0623                     l6852:	
   875                           ;Main.c: 224: init();
   876  0623  120A  118A  27EC   	fcall	_init
              120A  118A         
   877                           	line	226
   878                           	
   879  0628                     l6854:	
   880                           ;Main.c: 226: rotate(8, 0);
   881  0628  1683               	bsf	status, 5	;RP0=1, select bank1
   882  0629  1303               	bcf	status, 6	;RP1=0, select bank1
   883  062A  01D1               	clrf	(?_rotate)^080h
   884  062B  3008               	movlw	(08h)
   885  062C  120A  118A  226A   	fcall	_rotate
              120A  118A         
   886  0631  2E32               	goto	l6856
   887                           	line	229
   888                           ;Main.c: 229: while(1)
   889                           	
   890  0632                     l2179:	
   891                           	line	231
   892                           	
   893  0632                     l6856:	
   894                           ;Main.c: 230: {
   895                           ;Main.c: 231: if(pb0Pressed)
   896  0632  1283               	bcf	status, 5	;RP0=0, select bank0
   897  0633  1303               	bcf	status, 6	;RP1=0, select bank0
   898  0634  1EE8               	btfss	(_pb0Pressed/8),(_pb0Pressed)&7
   899  0635  2E37               	goto	u3671
   900  0636  2E38               	goto	u3670
   901  0637                     u3671:
   902  0637  2E3C               	goto	l6862
   903  0638                     u3670:
   904                           	line	233
   905                           	
   906  0638                     l6858:	
   907                           ;Main.c: 232: {
   908                           ;Main.c: 233: pb0Pressed = 0;
   909  0638  12E8               	bcf	(_pb0Pressed/8),(_pb0Pressed)&7
   910                           	line	236
   911                           	
   912  0639                     l6860:	
   913                           ;Main.c: 236: RB1 ^= 0x01;
   914  0639  3002               	movlw	1<<((49)&7)
   915  063A  0686               	xorwf	((49)/8),f
   916  063B  2E3C               	goto	l6862
   917                           	line	239
   918                           	
   919  063C                     l2180:	
   920                           	line	241
   921                           	
   922  063C                     l6862:	
   923                           ;Main.c: 239: }
   924                           ;Main.c: 241: if(pb1Pressed)
   925  063C  1FE8               	btfss	(_pb1Pressed/8),(_pb1Pressed)&7
   926  063D  2E3F               	goto	u3681
   927  063E  2E40               	goto	u3680
   928  063F                     u3681:
   929  063F  2E4D               	goto	l6868
   930  0640                     u3680:
   931                           	line	243
   932                           	
   933  0640                     l6864:	
   934                           ;Main.c: 242: {
   935                           ;Main.c: 243: pb1Pressed = 0;
   936  0640  13E8               	bcf	(_pb1Pressed/8),(_pb1Pressed)&7
   937                           	line	245
   938                           	
   939  0641                     l6866:	
   940                           ;Main.c: 245: rotate(2, 1);
   941  0641  1683               	bsf	status, 5	;RP0=1, select bank1
   942  0642  1303               	bcf	status, 6	;RP1=0, select bank1
   943  0643  01D1               	clrf	(?_rotate)^080h
   944  0644  1403               	bsf	status,0
   945  0645  0DD1               	rlf	(?_rotate)^080h,f
   946  0646  3002               	movlw	(02h)
   947  0647  120A  118A  226A   	fcall	_rotate
              120A  118A         
   948  064C  2E4D               	goto	l6868
   949                           	line	246
   950                           	
   951  064D                     l2181:	
   952                           	line	248
   953                           	
   954  064D                     l6868:	
   955                           ;Main.c: 246: }
   956                           ;Main.c: 248: if(pb2Pressed)
   957  064D  1283               	bcf	status, 5	;RP0=0, select bank0
   958  064E  1303               	bcf	status, 6	;RP1=0, select bank0
   959  064F  1CE9               	btfss	(_pb2Pressed/8),(_pb2Pressed)&7
   960  0650  2E52               	goto	u3691
   961  0651  2E53               	goto	u3690
   962  0652                     u3691:
   963  0652  2E5E               	goto	l6874
   964  0653                     u3690:
   965                           	line	250
   966                           	
   967  0653                     l6870:	
   968                           ;Main.c: 249: {
   969                           ;Main.c: 250: pb2Pressed = 0;
   970  0653  10E9               	bcf	(_pb2Pressed/8),(_pb2Pressed)&7
   971                           	line	252
   972                           	
   973  0654                     l6872:	
   974                           ;Main.c: 252: rotate(2, 0);
   975  0654  1683               	bsf	status, 5	;RP0=1, select bank1
   976  0655  1303               	bcf	status, 6	;RP1=0, select bank1
   977  0656  01D1               	clrf	(?_rotate)^080h
   978  0657  3002               	movlw	(02h)
   979  0658  120A  118A  226A   	fcall	_rotate
              120A  118A         
   980  065D  2E5E               	goto	l6874
   981                           	line	253
   982                           	
   983  065E                     l2182:	
   984                           	line	255
   985                           	
   986  065E                     l6874:	
   987                           ;Main.c: 253: }
   988                           ;Main.c: 255: if(pb3Pressed)
   989  065E  1283               	bcf	status, 5	;RP0=0, select bank0
   990  065F  1303               	bcf	status, 6	;RP1=0, select bank0
   991  0660  1DE9               	btfss	(_pb3Pressed/8),(_pb3Pressed)&7
   992  0661  2E63               	goto	u3701
   993  0662  2E64               	goto	u3700
   994  0663                     u3701:
   995  0663  2E32               	goto	l6856
   996  0664                     u3700:
   997                           	line	257
   998                           	
   999  0664                     l6876:	
  1000                           ;Main.c: 256: {
  1001                           ;Main.c: 257: pb3Pressed = 0;
  1002  0664  11E9               	bcf	(_pb3Pressed/8),(_pb3Pressed)&7
  1003                           	line	259
  1004                           	
  1005  0665                     l6878:	
  1006                           ;Main.c: 259: rotate(200, current_direction);
  1007  0665  1683               	bsf	status, 5	;RP0=1, select bank1
  1008  0666  1303               	bcf	status, 6	;RP1=0, select bank1
  1009  0667  0850               	movf	(_current_direction)^080h,w
  1010  0668  00D5               	movwf	(??_main+0)^080h+0
  1011  0669  0855               	movf	(??_main+0)^080h+0,w
  1012  066A  00D1               	movwf	(?_rotate)^080h
  1013  066B  30C8               	movlw	(0C8h)
  1014  066C  120A  118A  226A   	fcall	_rotate
              120A  118A         
  1015                           	line	260
  1016                           	
  1017  0671                     l6880:	
  1018                           ;Main.c: 260: current_direction ^= 0x01;
  1019  0671  3001               	movlw	(01h)
  1020  0672  1683               	bsf	status, 5	;RP0=1, select bank1
  1021  0673  1303               	bcf	status, 6	;RP1=0, select bank1
  1022  0674  00D5               	movwf	(??_main+0)^080h+0
  1023  0675  0855               	movf	(??_main+0)^080h+0,w
  1024  0676  06D0               	xorwf	(_current_direction)^080h,f
  1025  0677  2E32               	goto	l6856
  1026                           	line	261
  1027                           	
  1028  0678                     l2183:	
  1029  0678  2E32               	goto	l6856
  1030                           	line	262
  1031                           	
  1032  0679                     l2184:	
  1033                           	line	229
  1034  0679  2E32               	goto	l6856
  1035                           	
  1036  067A                     l2185:	
  1037                           	line	263
  1038                           	
  1039  067A                     l2186:	
  1040                           	global	start
  1041  067A  120A  118A  2812   	ljmp	start
  1042                           	opt stack 0
  1043                           GLOBAL	__end_of_main
  1044  067D                     	__end_of_main:
  1045 ;; =============== function _main ends ============
  1046                           
  1047                           	signat	_main,88
  1048                           	global	_init
  1049                           psect	text457,local,class=CODE,delta=2
  1050                           global __ptext457
  1051  07EC                     __ptext457:
  1052                           
  1053 ;; *************** function _init *****************
  1054 ;; Defined at:
  1055 ;;		line 191 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;		None               void
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    6
  1076 ;; This function calls:
  1077 ;;		_init_adc
  1078 ;;		_lcd_init
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           psect	text457
  1084                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1085                           	line	191
  1086                           	global	__size_of_init
  1087  0014                     	__size_of_init	equ	__end_of_init-_init
  1088                           	
  1089  07EC                     _init:	
  1090                           	opt	stack 1
  1091                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1092                           	line	192
  1093                           	
  1094  07EC                     l6840:	
  1095                           ;Main.c: 192: init_adc();
  1096  07EC  120A  158A  27B6   	fcall	_init_adc
              120A  118A         
  1097                           	line	193
  1098                           ;Main.c: 193: lcd_init();
  1099  07F1  120A  118A  277D   	fcall	_lcd_init
              120A  118A         
  1100                           	line	195
  1101                           	
  1102  07F6                     l6842:	
  1103                           ;Main.c: 195: TRISB = 0b11111100;
  1104  07F6  30FC               	movlw	(0FCh)
  1105  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
  1106  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
  1107  07F9  0086               	movwf	(134)^080h	;volatile
  1108                           	line	198
  1109                           	
  1110  07FA                     l6844:	
  1111                           ;Main.c: 198: TRISC = 0x00;
  1112  07FA  0187               	clrf	(135)^080h	;volatile
  1113                           	line	201
  1114                           	
  1115  07FB                     l6846:	
  1116                           ;Main.c: 201: OPTION_REG = 0b00000100;
  1117  07FB  3004               	movlw	(04h)
  1118  07FC  0081               	movwf	(129)^080h	;volatile
  1119                           	line	204
  1120                           	
  1121  07FD                     l6848:	
  1122                           ;Main.c: 204: TMR0IE = 1;
  1123  07FD  168B               	bsf	(93/8),(93)&7
  1124                           	line	207
  1125                           	
  1126  07FE                     l6850:	
  1127                           ;Main.c: 207: (GIE = 1);
  1128  07FE  178B               	bsf	(95/8),(95)&7
  1129                           	line	208
  1130                           	
  1131  07FF                     l2176:	
  1132  07FF  0008               	return
  1133                           	opt stack 0
  1134                           GLOBAL	__end_of_init
  1135  0800                     	__end_of_init:
  1136 ;; =============== function _init ends ============
  1137                           
  1138                           	signat	_init,88
  1139                           	global	_lcd_init
  1140                           psect	text458,local,class=CODE,delta=2
  1141                           global __ptext458
  1142  077D                     __ptext458:
  1143                           
  1144 ;; *************** function _lcd_init *****************
  1145 ;; Defined at:
  1146 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    5
  1167 ;; This function calls:
  1168 ;;		_lcd_write_control
  1169 ;; This function is called by:
  1170 ;;		_init
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           psect	text458
  1174                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1175                           	line	101
  1176                           	global	__size_of_lcd_init
  1177  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1178                           	
  1179  077D                     _lcd_init:	
  1180                           	opt	stack 1
  1181                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1182                           	line	105
  1183                           	
  1184  077D                     l6820:	
  1185                           ;lcd.c: 105: ADCON1 = 0b00000010;
  1186  077D  3002               	movlw	(02h)
  1187  077E  1683               	bsf	status, 5	;RP0=1, select bank1
  1188  077F  1303               	bcf	status, 6	;RP1=0, select bank1
  1189  0780  009F               	movwf	(159)^080h	;volatile
  1190                           	line	108
  1191                           	
  1192  0781                     l6822:	
  1193                           ;lcd.c: 108: PORTD = 0;
  1194  0781  1283               	bcf	status, 5	;RP0=0, select bank0
  1195  0782  1303               	bcf	status, 6	;RP1=0, select bank0
  1196  0783  0188               	clrf	(8)	;volatile
  1197                           	line	109
  1198                           	
  1199  0784                     l6824:	
  1200                           ;lcd.c: 109: PORTE = 0;
  1201  0784  0189               	clrf	(9)	;volatile
  1202                           	line	111
  1203                           	
  1204  0785                     l6826:	
  1205                           ;lcd.c: 111: TRISD = 0b00000000;
  1206  0785  1683               	bsf	status, 5	;RP0=1, select bank1
  1207  0786  1303               	bcf	status, 6	;RP1=0, select bank1
  1208  0787  0188               	clrf	(136)^080h	;volatile
  1209                           	line	112
  1210                           	
  1211  0788                     l6828:	
  1212                           ;lcd.c: 112: TRISE = 0b00000000;
  1213  0788  0189               	clrf	(137)^080h	;volatile
  1214                           	line	115
  1215                           	
  1216  0789                     l6830:	
  1217                           ;lcd.c: 115: lcd_write_control(0b00000001);
  1218  0789  3001               	movlw	(01h)
  1219  078A  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1220                           	line	116
  1221                           	
  1222  078F                     l6832:	
  1223                           ;lcd.c: 116: lcd_write_control(0b00111000);
  1224  078F  3038               	movlw	(038h)
  1225  0790  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1226                           	line	117
  1227                           	
  1228  0795                     l6834:	
  1229                           ;lcd.c: 117: lcd_write_control(0b00001100);
  1230  0795  300C               	movlw	(0Ch)
  1231  0796  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1232                           	line	118
  1233                           	
  1234  079B                     l6836:	
  1235                           ;lcd.c: 118: lcd_write_control(0b00000110);
  1236  079B  3006               	movlw	(06h)
  1237  079C  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1238                           	line	119
  1239                           	
  1240  07A1                     l6838:	
  1241                           ;lcd.c: 119: lcd_write_control(0b00000010);
  1242  07A1  3002               	movlw	(02h)
  1243  07A2  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1244                           	line	121
  1245                           	
  1246  07A7                     l1423:	
  1247  07A7  0008               	return
  1248                           	opt stack 0
  1249                           GLOBAL	__end_of_lcd_init
  1250  07A8                     	__end_of_lcd_init:
  1251 ;; =============== function _lcd_init ends ============
  1252                           
  1253                           	signat	_lcd_init,88
  1254                           	global	_rotate
  1255                           psect	text459,local,class=CODE,delta=2
  1256                           global __ptext459
  1257  026A                     __ptext459:
  1258                           
  1259 ;; *************** function _rotate *****************
  1260 ;; Defined at:
  1261 ;;		line 26 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  steps           1    wreg     unsigned char 
  1264 ;;  direction       1    0[BANK1 ] unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  steps           1    3[BANK1 ] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;		None               void
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       1       0       0
  1277 ;;      Locals:         0       0       1       0       0
  1278 ;;      Temps:          0       0       2       0       0
  1279 ;;      Totals:         0       0       4       0       0
  1280 ;;Total ram usage:        4 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    4
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           psect	text459
  1290                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  1291                           	line	26
  1292                           	global	__size_of_rotate
  1293  012B                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  1294                           	
  1295  026A                     _rotate:	
  1296                           	opt	stack 3
  1297                           ; Regs used in _rotate: [wreg-fsr0h+status,2+status,0]
  1298                           ;rotate@steps stored from wreg
  1299                           	line	29
  1300  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  1301  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  1302  026C  00D4               	movwf	(rotate@steps)^080h
  1303                           	
  1304  026D                     l6758:	
  1305                           ;steppermotor.c: 29: for(;steps!=0;--steps)
  1306  026D  08D4               	movf	(rotate@steps)^080h,f
  1307  026E  1D03               	skipz
  1308  026F  2A71               	goto	u3631
  1309  0270  2A72               	goto	u3630
  1310  0271                     u3631:
  1311  0271  2A74               	goto	l6762
  1312  0272                     u3630:
  1313  0272  2B90               	goto	l6818
  1314                           	
  1315  0273                     l6760:	
  1316  0273  2B90               	goto	l6818
  1317                           	line	30
  1318                           	
  1319  0274                     l3611:	
  1320                           	line	31
  1321                           	
  1322  0274                     l6762:	
  1323                           ;steppermotor.c: 30: {
  1324                           ;steppermotor.c: 31: if (direction == 0)
  1325  0274  08D1               	movf	(rotate@direction)^080h,f
  1326  0275  1D03               	skipz
  1327  0276  2A78               	goto	u3641
  1328  0277  2A79               	goto	u3640
  1329  0278                     u3641:
  1330  0278  2AF6               	goto	l6788
  1331  0279                     u3640:
  1332  0279  2AD9               	goto	l6786
  1333                           	line	33
  1334                           	
  1335  027A                     l6764:	
  1336                           ;steppermotor.c: 32: {
  1337                           ;steppermotor.c: 33: switch(current_step)
  1338  027A  2AD9               	goto	l6786
  1339                           	line	35
  1340                           ;steppermotor.c: 34: {
  1341                           ;steppermotor.c: 35: case 0b00111100: PORTC = 0b00101110; current_step = 0b00101110;
  1342                           	
  1343  027B                     l3615:	
  1344                           	
  1345  027B                     l6766:	
  1346  027B  302E               	movlw	(02Eh)
  1347  027C  1283               	bcf	status, 5	;RP0=0, select bank0
  1348  027D  1303               	bcf	status, 6	;RP1=0, select bank0
  1349  027E  0087               	movwf	(7)	;volatile
  1350  027F  302E               	movlw	(02Eh)
  1351  0280  1683               	bsf	status, 5	;RP0=1, select bank1
  1352  0281  1303               	bcf	status, 6	;RP1=0, select bank1
  1353  0282  00D2               	movwf	(??_rotate+0)^080h+0
  1354  0283  0852               	movf	(??_rotate+0)^080h+0,w
  1355  0284  00D6               	movwf	(_current_step)^080h
  1356                           	line	36
  1357                           ;steppermotor.c: 36: break;
  1358  0285  2B7B               	goto	l6814
  1359                           	line	37
  1360                           ;steppermotor.c: 37: case 0b00101110: PORTC = 0b00101011; current_step = 0b00101011;
  1361                           	
  1362  0286                     l3617:	
  1363                           	
  1364  0286                     l6768:	
  1365  0286  302B               	movlw	(02Bh)
  1366  0287  1283               	bcf	status, 5	;RP0=0, select bank0
  1367  0288  1303               	bcf	status, 6	;RP1=0, select bank0
  1368  0289  0087               	movwf	(7)	;volatile
  1369  028A  302B               	movlw	(02Bh)
  1370  028B  1683               	bsf	status, 5	;RP0=1, select bank1
  1371  028C  1303               	bcf	status, 6	;RP1=0, select bank1
  1372  028D  00D2               	movwf	(??_rotate+0)^080h+0
  1373  028E  0852               	movf	(??_rotate+0)^080h+0,w
  1374  028F  00D6               	movwf	(_current_step)^080h
  1375                           	line	38
  1376                           ;steppermotor.c: 38: break;
  1377  0290  2B7B               	goto	l6814
  1378                           	line	39
  1379                           ;steppermotor.c: 39: case 0b00101011: PORTC = 0b00100111; current_step = 0b00100111;
  1380                           	
  1381  0291                     l3618:	
  1382                           	
  1383  0291                     l6770:	
  1384  0291  3027               	movlw	(027h)
  1385  0292  1283               	bcf	status, 5	;RP0=0, select bank0
  1386  0293  1303               	bcf	status, 6	;RP1=0, select bank0
  1387  0294  0087               	movwf	(7)	;volatile
  1388  0295  3027               	movlw	(027h)
  1389  0296  1683               	bsf	status, 5	;RP0=1, select bank1
  1390  0297  1303               	bcf	status, 6	;RP1=0, select bank1
  1391  0298  00D2               	movwf	(??_rotate+0)^080h+0
  1392  0299  0852               	movf	(??_rotate+0)^080h+0,w
  1393  029A  00D6               	movwf	(_current_step)^080h
  1394                           	line	40
  1395                           ;steppermotor.c: 40: break;
  1396  029B  2B7B               	goto	l6814
  1397                           	line	41
  1398                           ;steppermotor.c: 41: case 0b00100111: PORTC = 0b00110101; current_step = 0b00110101;
  1399                           	
  1400  029C                     l3619:	
  1401                           	
  1402  029C                     l6772:	
  1403  029C  3035               	movlw	(035h)
  1404  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  1405  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  1406  029F  0087               	movwf	(7)	;volatile
  1407  02A0  3035               	movlw	(035h)
  1408  02A1  1683               	bsf	status, 5	;RP0=1, select bank1
  1409  02A2  1303               	bcf	status, 6	;RP1=0, select bank1
  1410  02A3  00D2               	movwf	(??_rotate+0)^080h+0
  1411  02A4  0852               	movf	(??_rotate+0)^080h+0,w
  1412  02A5  00D6               	movwf	(_current_step)^080h
  1413                           	line	42
  1414                           ;steppermotor.c: 42: break;
  1415  02A6  2B7B               	goto	l6814
  1416                           	line	43
  1417                           ;steppermotor.c: 43: case 0b00110101: PORTC = 0b00010111; current_step = 0b00010111;
  1418                           	
  1419  02A7                     l3620:	
  1420                           	
  1421  02A7                     l6774:	
  1422  02A7  3017               	movlw	(017h)
  1423  02A8  1283               	bcf	status, 5	;RP0=0, select bank0
  1424  02A9  1303               	bcf	status, 6	;RP1=0, select bank0
  1425  02AA  0087               	movwf	(7)	;volatile
  1426  02AB  3017               	movlw	(017h)
  1427  02AC  1683               	bsf	status, 5	;RP0=1, select bank1
  1428  02AD  1303               	bcf	status, 6	;RP1=0, select bank1
  1429  02AE  00D2               	movwf	(??_rotate+0)^080h+0
  1430  02AF  0852               	movf	(??_rotate+0)^080h+0,w
  1431  02B0  00D6               	movwf	(_current_step)^080h
  1432                           	line	44
  1433                           ;steppermotor.c: 44: break;
  1434  02B1  2B7B               	goto	l6814
  1435                           	line	45
  1436                           ;steppermotor.c: 45: case 0b00010111: PORTC = 0b00011011; current_step = 0b00011011;
  1437                           	
  1438  02B2                     l3621:	
  1439                           	
  1440  02B2                     l6776:	
  1441  02B2  301B               	movlw	(01Bh)
  1442  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1443  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1444  02B5  0087               	movwf	(7)	;volatile
  1445  02B6  301B               	movlw	(01Bh)
  1446  02B7  1683               	bsf	status, 5	;RP0=1, select bank1
  1447  02B8  1303               	bcf	status, 6	;RP1=0, select bank1
  1448  02B9  00D2               	movwf	(??_rotate+0)^080h+0
  1449  02BA  0852               	movf	(??_rotate+0)^080h+0,w
  1450  02BB  00D6               	movwf	(_current_step)^080h
  1451                           	line	46
  1452                           ;steppermotor.c: 46: break;
  1453  02BC  2B7B               	goto	l6814
  1454                           	line	47
  1455                           ;steppermotor.c: 47: case 0b00011011: PORTC = 0b00011110; current_step = 0b00011110;
  1456                           	
  1457  02BD                     l3622:	
  1458                           	
  1459  02BD                     l6778:	
  1460  02BD  301E               	movlw	(01Eh)
  1461  02BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1462  02BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1463  02C0  0087               	movwf	(7)	;volatile
  1464  02C1  301E               	movlw	(01Eh)
  1465  02C2  1683               	bsf	status, 5	;RP0=1, select bank1
  1466  02C3  1303               	bcf	status, 6	;RP1=0, select bank1
  1467  02C4  00D2               	movwf	(??_rotate+0)^080h+0
  1468  02C5  0852               	movf	(??_rotate+0)^080h+0,w
  1469  02C6  00D6               	movwf	(_current_step)^080h
  1470                           	line	48
  1471                           ;steppermotor.c: 48: break;
  1472  02C7  2B7B               	goto	l6814
  1473                           	line	49
  1474                           ;steppermotor.c: 49: case 0b00011110: PORTC = 0b00111100; current_step = 0b00111100;
  1475                           	
  1476  02C8                     l3623:	
  1477                           	
  1478  02C8                     l6780:	
  1479  02C8  303C               	movlw	(03Ch)
  1480  02C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1481  02CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1482  02CB  0087               	movwf	(7)	;volatile
  1483  02CC  303C               	movlw	(03Ch)
  1484  02CD  1683               	bsf	status, 5	;RP0=1, select bank1
  1485  02CE  1303               	bcf	status, 6	;RP1=0, select bank1
  1486  02CF  00D2               	movwf	(??_rotate+0)^080h+0
  1487  02D0  0852               	movf	(??_rotate+0)^080h+0,w
  1488  02D1  00D6               	movwf	(_current_step)^080h
  1489                           	line	50
  1490                           ;steppermotor.c: 50: break;
  1491  02D2  2B7B               	goto	l6814
  1492                           	line	52
  1493                           ;steppermotor.c: 52: default: PORTC = 0b00111001;
  1494                           	
  1495  02D3                     l3624:	
  1496                           	
  1497  02D3                     l6782:	
  1498  02D3  3039               	movlw	(039h)
  1499  02D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1500  02D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1501  02D6  0087               	movwf	(7)	;volatile
  1502                           	line	53
  1503                           ;steppermotor.c: 53: break;
  1504  02D7  2B7B               	goto	l6814
  1505                           	line	54
  1506                           	
  1507  02D8                     l6784:	
  1508                           ;steppermotor.c: 54: }
  1509  02D8  2B7B               	goto	l6814
  1510                           	line	33
  1511                           	
  1512  02D9                     l3614:	
  1513                           	
  1514  02D9                     l6786:	
  1515  02D9  1683               	bsf	status, 5	;RP0=1, select bank1
  1516  02DA  1303               	bcf	status, 6	;RP1=0, select bank1
  1517  02DB  0856               	movf	(_current_step)^080h,w
  1518                           	; Switch size 1, requested type "space"
  1519                           ; Number of cases is 8, Range of values is 23 to 60
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; simple_byte           25    13 (average)
  1523                           ; direct_byte          125    11 (fixed)
  1524                           ; jumptable            263     9 (fixed)
  1525                           ;	Chosen strategy is simple_byte
  1526                           
  1527                           	opt asmopt_off
  1528  02DC  3A17               	xorlw	23^0	; case 23
  1529  02DD  1903               	skipnz
  1530  02DE  2AB2               	goto	l6776
  1531  02DF  3A0C               	xorlw	27^23	; case 27
  1532  02E0  1903               	skipnz
  1533  02E1  2ABD               	goto	l6778
  1534  02E2  3A05               	xorlw	30^27	; case 30
  1535  02E3  1903               	skipnz
  1536  02E4  2AC8               	goto	l6780
  1537  02E5  3A39               	xorlw	39^30	; case 39
  1538  02E6  1903               	skipnz
  1539  02E7  2A9C               	goto	l6772
  1540  02E8  3A0C               	xorlw	43^39	; case 43
  1541  02E9  1903               	skipnz
  1542  02EA  2A91               	goto	l6770
  1543  02EB  3A05               	xorlw	46^43	; case 46
  1544  02EC  1903               	skipnz
  1545  02ED  2A86               	goto	l6768
  1546  02EE  3A1B               	xorlw	53^46	; case 53
  1547  02EF  1903               	skipnz
  1548  02F0  2AA7               	goto	l6774
  1549  02F1  3A09               	xorlw	60^53	; case 60
  1550  02F2  1903               	skipnz
  1551  02F3  2A7B               	goto	l6766
  1552  02F4  2AD3               	goto	l6782
  1553                           	opt asmopt_on
  1554                           
  1555                           	line	54
  1556                           	
  1557  02F5                     l3616:	
  1558                           	line	55
  1559                           ;steppermotor.c: 55: }
  1560  02F5  2B7B               	goto	l6814
  1561                           	line	56
  1562                           	
  1563  02F6                     l3613:	
  1564                           	
  1565  02F6                     l6788:	
  1566                           ;steppermotor.c: 56: else if (direction == 1)
  1567  02F6  0851               	movf	(rotate@direction)^080h,w
  1568  02F7  3A01               	xorlw	01h
  1569  02F8  1D03               	skipz
  1570  02F9  2AFB               	goto	u3651
  1571  02FA  2AFC               	goto	u3650
  1572  02FB                     u3651:
  1573  02FB  2B7B               	goto	l6814
  1574  02FC                     u3650:
  1575  02FC  2B5C               	goto	l6812
  1576                           	line	58
  1577                           	
  1578  02FD                     l6790:	
  1579                           ;steppermotor.c: 57: {
  1580                           ;steppermotor.c: 58: switch(current_step)
  1581  02FD  2B5C               	goto	l6812
  1582                           	line	60
  1583                           ;steppermotor.c: 59: {
  1584                           ;steppermotor.c: 60: case 0b00111100: PORTC = 0b00011110; current_step = 0b00011110;
  1585                           	
  1586  02FE                     l3628:	
  1587                           	
  1588  02FE                     l6792:	
  1589  02FE  301E               	movlw	(01Eh)
  1590  02FF  1283               	bcf	status, 5	;RP0=0, select bank0
  1591  0300  1303               	bcf	status, 6	;RP1=0, select bank0
  1592  0301  0087               	movwf	(7)	;volatile
  1593  0302  301E               	movlw	(01Eh)
  1594  0303  1683               	bsf	status, 5	;RP0=1, select bank1
  1595  0304  1303               	bcf	status, 6	;RP1=0, select bank1
  1596  0305  00D2               	movwf	(??_rotate+0)^080h+0
  1597  0306  0852               	movf	(??_rotate+0)^080h+0,w
  1598  0307  00D6               	movwf	(_current_step)^080h
  1599                           	line	61
  1600                           ;steppermotor.c: 61: break;
  1601  0308  2B7B               	goto	l6814
  1602                           	line	62
  1603                           ;steppermotor.c: 62: case 0b00101110: PORTC = 0b00111100; current_step = 0b00111100;
  1604                           	
  1605  0309                     l3630:	
  1606                           	
  1607  0309                     l6794:	
  1608  0309  303C               	movlw	(03Ch)
  1609  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  1610  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  1611  030C  0087               	movwf	(7)	;volatile
  1612  030D  303C               	movlw	(03Ch)
  1613  030E  1683               	bsf	status, 5	;RP0=1, select bank1
  1614  030F  1303               	bcf	status, 6	;RP1=0, select bank1
  1615  0310  00D2               	movwf	(??_rotate+0)^080h+0
  1616  0311  0852               	movf	(??_rotate+0)^080h+0,w
  1617  0312  00D6               	movwf	(_current_step)^080h
  1618                           	line	63
  1619                           ;steppermotor.c: 63: break;
  1620  0313  2B7B               	goto	l6814
  1621                           	line	64
  1622                           ;steppermotor.c: 64: case 0b00101011: PORTC = 0b00101110; current_step = 0b00101110;
  1623                           	
  1624  0314                     l3631:	
  1625                           	
  1626  0314                     l6796:	
  1627  0314  302E               	movlw	(02Eh)
  1628  0315  1283               	bcf	status, 5	;RP0=0, select bank0
  1629  0316  1303               	bcf	status, 6	;RP1=0, select bank0
  1630  0317  0087               	movwf	(7)	;volatile
  1631  0318  302E               	movlw	(02Eh)
  1632  0319  1683               	bsf	status, 5	;RP0=1, select bank1
  1633  031A  1303               	bcf	status, 6	;RP1=0, select bank1
  1634  031B  00D2               	movwf	(??_rotate+0)^080h+0
  1635  031C  0852               	movf	(??_rotate+0)^080h+0,w
  1636  031D  00D6               	movwf	(_current_step)^080h
  1637                           	line	65
  1638                           ;steppermotor.c: 65: break;
  1639  031E  2B7B               	goto	l6814
  1640                           	line	66
  1641                           ;steppermotor.c: 66: case 0b00100111: PORTC = 0b00101011; current_step = 0b00101011;
  1642                           	
  1643  031F                     l3632:	
  1644                           	
  1645  031F                     l6798:	
  1646  031F  302B               	movlw	(02Bh)
  1647  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  1648  0321  1303               	bcf	status, 6	;RP1=0, select bank0
  1649  0322  0087               	movwf	(7)	;volatile
  1650  0323  302B               	movlw	(02Bh)
  1651  0324  1683               	bsf	status, 5	;RP0=1, select bank1
  1652  0325  1303               	bcf	status, 6	;RP1=0, select bank1
  1653  0326  00D2               	movwf	(??_rotate+0)^080h+0
  1654  0327  0852               	movf	(??_rotate+0)^080h+0,w
  1655  0328  00D6               	movwf	(_current_step)^080h
  1656                           	line	67
  1657                           ;steppermotor.c: 67: break;
  1658  0329  2B7B               	goto	l6814
  1659                           	line	68
  1660                           ;steppermotor.c: 68: case 0b00110101: PORTC = 0b00100111; current_step = 0b00100111;
  1661                           	
  1662  032A                     l3633:	
  1663                           	
  1664  032A                     l6800:	
  1665  032A  3027               	movlw	(027h)
  1666  032B  1283               	bcf	status, 5	;RP0=0, select bank0
  1667  032C  1303               	bcf	status, 6	;RP1=0, select bank0
  1668  032D  0087               	movwf	(7)	;volatile
  1669  032E  3027               	movlw	(027h)
  1670  032F  1683               	bsf	status, 5	;RP0=1, select bank1
  1671  0330  1303               	bcf	status, 6	;RP1=0, select bank1
  1672  0331  00D2               	movwf	(??_rotate+0)^080h+0
  1673  0332  0852               	movf	(??_rotate+0)^080h+0,w
  1674  0333  00D6               	movwf	(_current_step)^080h
  1675                           	line	69
  1676                           ;steppermotor.c: 69: break;
  1677  0334  2B7B               	goto	l6814
  1678                           	line	70
  1679                           ;steppermotor.c: 70: case 0b00010111: PORTC = 0b00110101; current_step = 0b00110101;
  1680                           	
  1681  0335                     l3634:	
  1682                           	
  1683  0335                     l6802:	
  1684  0335  3035               	movlw	(035h)
  1685  0336  1283               	bcf	status, 5	;RP0=0, select bank0
  1686  0337  1303               	bcf	status, 6	;RP1=0, select bank0
  1687  0338  0087               	movwf	(7)	;volatile
  1688  0339  3035               	movlw	(035h)
  1689  033A  1683               	bsf	status, 5	;RP0=1, select bank1
  1690  033B  1303               	bcf	status, 6	;RP1=0, select bank1
  1691  033C  00D2               	movwf	(??_rotate+0)^080h+0
  1692  033D  0852               	movf	(??_rotate+0)^080h+0,w
  1693  033E  00D6               	movwf	(_current_step)^080h
  1694                           	line	71
  1695                           ;steppermotor.c: 71: break;
  1696  033F  2B7B               	goto	l6814
  1697                           	line	72
  1698                           ;steppermotor.c: 72: case 0b00011011: PORTC = 0b00010111; current_step = 0b00010111;
  1699                           	
  1700  0340                     l3635:	
  1701                           	
  1702  0340                     l6804:	
  1703  0340  3017               	movlw	(017h)
  1704  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  1705  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  1706  0343  0087               	movwf	(7)	;volatile
  1707  0344  3017               	movlw	(017h)
  1708  0345  1683               	bsf	status, 5	;RP0=1, select bank1
  1709  0346  1303               	bcf	status, 6	;RP1=0, select bank1
  1710  0347  00D2               	movwf	(??_rotate+0)^080h+0
  1711  0348  0852               	movf	(??_rotate+0)^080h+0,w
  1712  0349  00D6               	movwf	(_current_step)^080h
  1713                           	line	73
  1714                           ;steppermotor.c: 73: break;
  1715  034A  2B7B               	goto	l6814
  1716                           	line	74
  1717                           ;steppermotor.c: 74: case 0b00011110: PORTC = 0b00011011; current_step = 0b00011011;
  1718                           	
  1719  034B                     l3636:	
  1720                           	
  1721  034B                     l6806:	
  1722  034B  301B               	movlw	(01Bh)
  1723  034C  1283               	bcf	status, 5	;RP0=0, select bank0
  1724  034D  1303               	bcf	status, 6	;RP1=0, select bank0
  1725  034E  0087               	movwf	(7)	;volatile
  1726  034F  301B               	movlw	(01Bh)
  1727  0350  1683               	bsf	status, 5	;RP0=1, select bank1
  1728  0351  1303               	bcf	status, 6	;RP1=0, select bank1
  1729  0352  00D2               	movwf	(??_rotate+0)^080h+0
  1730  0353  0852               	movf	(??_rotate+0)^080h+0,w
  1731  0354  00D6               	movwf	(_current_step)^080h
  1732                           	line	75
  1733                           ;steppermotor.c: 75: break;
  1734  0355  2B7B               	goto	l6814
  1735                           	line	77
  1736                           ;steppermotor.c: 77: default: PORTC = 0b00111001;
  1737                           	
  1738  0356                     l3637:	
  1739                           	
  1740  0356                     l6808:	
  1741  0356  3039               	movlw	(039h)
  1742  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  1743  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  1744  0359  0087               	movwf	(7)	;volatile
  1745                           	line	78
  1746                           ;steppermotor.c: 78: break;
  1747  035A  2B7B               	goto	l6814
  1748                           	line	79
  1749                           	
  1750  035B                     l6810:	
  1751                           ;steppermotor.c: 79: }
  1752  035B  2B7B               	goto	l6814
  1753                           	line	58
  1754                           	
  1755  035C                     l3627:	
  1756                           	
  1757  035C                     l6812:	
  1758  035C  1683               	bsf	status, 5	;RP0=1, select bank1
  1759  035D  1303               	bcf	status, 6	;RP1=0, select bank1
  1760  035E  0856               	movf	(_current_step)^080h,w
  1761                           	; Switch size 1, requested type "space"
  1762                           ; Number of cases is 8, Range of values is 23 to 60
  1763                           ; switch strategies available:
  1764                           ; Name         Instructions Cycles
  1765                           ; simple_byte           25    13 (average)
  1766                           ; direct_byte          125    11 (fixed)
  1767                           ; jumptable            263     9 (fixed)
  1768                           ;	Chosen strategy is simple_byte
  1769                           
  1770                           	opt asmopt_off
  1771  035F  3A17               	xorlw	23^0	; case 23
  1772  0360  1903               	skipnz
  1773  0361  2B35               	goto	l6802
  1774  0362  3A0C               	xorlw	27^23	; case 27
  1775  0363  1903               	skipnz
  1776  0364  2B40               	goto	l6804
  1777  0365  3A05               	xorlw	30^27	; case 30
  1778  0366  1903               	skipnz
  1779  0367  2B4B               	goto	l6806
  1780  0368  3A39               	xorlw	39^30	; case 39
  1781  0369  1903               	skipnz
  1782  036A  2B1F               	goto	l6798
  1783  036B  3A0C               	xorlw	43^39	; case 43
  1784  036C  1903               	skipnz
  1785  036D  2B14               	goto	l6796
  1786  036E  3A05               	xorlw	46^43	; case 46
  1787  036F  1903               	skipnz
  1788  0370  2B09               	goto	l6794
  1789  0371  3A1B               	xorlw	53^46	; case 53
  1790  0372  1903               	skipnz
  1791  0373  2B2A               	goto	l6800
  1792  0374  3A09               	xorlw	60^53	; case 60
  1793  0375  1903               	skipnz
  1794  0376  2AFE               	goto	l6792
  1795  0377  2B56               	goto	l6808
  1796                           	opt asmopt_on
  1797                           
  1798                           	line	79
  1799                           	
  1800  0378                     l3629:	
  1801                           	line	80
  1802                           ;steppermotor.c: 80: }
  1803  0378  2B7B               	goto	l6814
  1804                           	line	81
  1805                           	
  1806  0379                     l3626:	
  1807  0379  2B7B               	goto	l6814
  1808                           	line	84
  1809                           ;steppermotor.c: 81: else
  1810                           ;steppermotor.c: 82: {
  1811                           	
  1812  037A                     l3638:	
  1813  037A  2B7B               	goto	l6814
  1814                           	
  1815  037B                     l3625:	
  1816                           	line	86
  1817                           	
  1818  037B                     l6814:	
  1819                           ;steppermotor.c: 84: }
  1820                           ;steppermotor.c: 86: _delay((unsigned long)((15)*(20000000/4000.0)));
  1821                           	opt asmopt_off
  1822  037B  3062               movlw	98
  1823  037C  1683               	bsf	status, 5	;RP0=1, select bank1
  1824  037D  1303               	bcf	status, 6	;RP1=0, select bank1
  1825  037E  00D3               movwf	((??_rotate+0)^080h+0+1),f
  1826  037F  3065               	movlw	101
  1827  0380  00D2               movwf	((??_rotate+0)^080h+0),f
  1828  0381                     u3717:
  1829  0381  0BD2               	decfsz	((??_rotate+0)^080h+0),f
  1830  0382  2B81               	goto	u3717
  1831  0383  0BD3               	decfsz	((??_rotate+0)^080h+0+1),f
  1832  0384  2B81               	goto	u3717
  1833  0385  2B86               	nop2
  1834                           opt asmopt_on
  1835                           
  1836                           	line	29
  1837                           	
  1838  0386                     l6816:	
  1839  0386  3001               	movlw	low(01h)
  1840  0387  1683               	bsf	status, 5	;RP0=1, select bank1
  1841  0388  1303               	bcf	status, 6	;RP1=0, select bank1
  1842  0389  02D4               	subwf	(rotate@steps)^080h,f
  1843  038A  08D4               	movf	(rotate@steps)^080h,f
  1844  038B  1D03               	skipz
  1845  038C  2B8E               	goto	u3661
  1846  038D  2B8F               	goto	u3660
  1847  038E                     u3661:
  1848  038E  2A74               	goto	l6762
  1849  038F                     u3660:
  1850  038F  2B90               	goto	l6818
  1851                           	
  1852  0390                     l3612:	
  1853                           	line	89
  1854                           	
  1855  0390                     l6818:	
  1856                           ;steppermotor.c: 87: }
  1857                           ;steppermotor.c: 89: PORTC = 0b00111001;
  1858  0390  3039               	movlw	(039h)
  1859  0391  1283               	bcf	status, 5	;RP0=0, select bank0
  1860  0392  1303               	bcf	status, 6	;RP1=0, select bank0
  1861  0393  0087               	movwf	(7)	;volatile
  1862                           	line	90
  1863                           	
  1864  0394                     l3639:	
  1865  0394  0008               	return
  1866                           	opt stack 0
  1867                           GLOBAL	__end_of_rotate
  1868  0395                     	__end_of_rotate:
  1869 ;; =============== function _rotate ends ============
  1870                           
  1871                           	signat	_rotate,8312
  1872                           	global	_lcd_write_control
  1873                           psect	text460,local,class=CODE,delta=2
  1874                           global __ptext460
  1875  0FE4                     __ptext460:
  1876                           
  1877 ;; *************** function _lcd_write_control *****************
  1878 ;; Defined at:
  1879 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  databyte        1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  databyte        1    2[BANK1 ] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       1       0       0
  1895 ;;      Temps:          0       0       2       0       0
  1896 ;;      Totals:         0       0       3       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    4
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_lcd_init
  1904 ;;		_readDistance
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           psect	text460
  1908                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1909                           	line	18
  1910                           	global	__size_of_lcd_write_control
  1911  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  1912                           	
  1913  0FE4                     _lcd_write_control:	
  1914                           	opt	stack 1
  1915                           ; Regs used in _lcd_write_control: [wreg]
  1916                           ;lcd_write_control@databyte stored from wreg
  1917  0FE4  1683               	bsf	status, 5	;RP0=1, select bank1
  1918  0FE5  1303               	bcf	status, 6	;RP1=0, select bank1
  1919  0FE6  00D3               	movwf	(lcd_write_control@databyte)^080h
  1920                           	line	19
  1921                           	
  1922  0FE7                     l6750:	
  1923                           ;lcd.c: 19: RE2 = 0;
  1924  0FE7  1283               	bcf	status, 5	;RP0=0, select bank0
  1925  0FE8  1303               	bcf	status, 6	;RP1=0, select bank0
  1926  0FE9  1109               	bcf	(74/8),(74)&7
  1927                           	line	20
  1928                           ;lcd.c: 20: RE1 = 0;
  1929  0FEA  1089               	bcf	(73/8),(73)&7
  1930                           	line	21
  1931                           ;lcd.c: 21: RE0 = 0;
  1932  0FEB  1009               	bcf	(72/8),(72)&7
  1933                           	line	22
  1934                           	
  1935  0FEC                     l6752:	
  1936                           ;lcd.c: 22: PORTD = databyte;
  1937  0FEC  1683               	bsf	status, 5	;RP0=1, select bank1
  1938  0FED  1303               	bcf	status, 6	;RP1=0, select bank1
  1939  0FEE  0853               	movf	(lcd_write_control@databyte)^080h,w
  1940  0FEF  1283               	bcf	status, 5	;RP0=0, select bank0
  1941  0FF0  1303               	bcf	status, 6	;RP1=0, select bank0
  1942  0FF1  0088               	movwf	(8)	;volatile
  1943                           	line	23
  1944                           	
  1945  0FF2                     l6754:	
  1946                           ;lcd.c: 23: RE2 = 1;
  1947  0FF2  1509               	bsf	(74/8),(74)&7
  1948                           	line	24
  1949                           	
  1950  0FF3                     l6756:	
  1951                           ;lcd.c: 24: RE2 = 0;
  1952  0FF3  1109               	bcf	(74/8),(74)&7
  1953                           	line	25
  1954                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  1955                           	opt asmopt_off
  1956  0FF4  300D               movlw	13
  1957  0FF5  1683               	bsf	status, 5	;RP0=1, select bank1
  1958  0FF6  1303               	bcf	status, 6	;RP1=0, select bank1
  1959  0FF7  00D2               movwf	((??_lcd_write_control+0)^080h+0+1),f
  1960  0FF8  30FB               	movlw	251
  1961  0FF9  00D1               movwf	((??_lcd_write_control+0)^080h+0),f
  1962  0FFA                     u3727:
  1963  0FFA  0BD1               	decfsz	((??_lcd_write_control+0)^080h+0),f
  1964  0FFB  2FFA               	goto	u3727
  1965  0FFC  0BD2               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  1966  0FFD  2FFA               	goto	u3727
  1967  0FFE  2FFF               	nop2
  1968                           opt asmopt_on
  1969                           
  1970                           	line	26
  1971                           	
  1972  0FFF                     l1393:	
  1973  0FFF  0008               	return
  1974                           	opt stack 0
  1975                           GLOBAL	__end_of_lcd_write_control
  1976  1000                     	__end_of_lcd_write_control:
  1977 ;; =============== function _lcd_write_control ends ============
  1978                           
  1979                           	signat	_lcd_write_control,4216
  1980                           	global	_init_adc
  1981                           psect	text461,local,class=CODE,delta=2
  1982                           global __ptext461
  1983  0FB6                     __ptext461:
  1984                           
  1985 ;; *************** function _init_adc *****************
  1986 ;; Defined at:
  1987 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;		None               void
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0
  2003 ;;      Temps:          0       0       1       0       0
  2004 ;;      Totals:         0       0       1       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_init
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           psect	text461
  2015                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  2016                           	line	46
  2017                           	global	__size_of_init_adc
  2018  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  2019                           	
  2020  0FB6                     _init_adc:	
  2021                           	opt	stack 2
  2022                           ; Regs used in _init_adc: [wreg+status,2]
  2023                           	line	48
  2024                           	
  2025  0FB6                     l6740:	
  2026                           ;adc.c: 48: PORTA = 0;
  2027  0FB6  1283               	bcf	status, 5	;RP0=0, select bank0
  2028  0FB7  1303               	bcf	status, 6	;RP1=0, select bank0
  2029  0FB8  0185               	clrf	(5)	;volatile
  2030                           	line	49
  2031                           	
  2032  0FB9                     l6742:	
  2033                           ;adc.c: 49: TRISA = 0b00111111;
  2034  0FB9  303F               	movlw	(03Fh)
  2035  0FBA  1683               	bsf	status, 5	;RP0=1, select bank1
  2036  0FBB  1303               	bcf	status, 6	;RP1=0, select bank1
  2037  0FBC  0085               	movwf	(133)^080h	;volatile
  2038                           	line	52
  2039                           	
  2040  0FBD                     l6744:	
  2041                           ;adc.c: 52: ADCON0 = 0b10100001;
  2042  0FBD  30A1               	movlw	(0A1h)
  2043  0FBE  1283               	bcf	status, 5	;RP0=0, select bank0
  2044  0FBF  1303               	bcf	status, 6	;RP1=0, select bank0
  2045  0FC0  009F               	movwf	(31)	;volatile
  2046                           	line	53
  2047                           	
  2048  0FC1                     l6746:	
  2049                           ;adc.c: 53: ADCON1 = 0b0000010;
  2050  0FC1  3002               	movlw	(02h)
  2051  0FC2  1683               	bsf	status, 5	;RP0=1, select bank1
  2052  0FC3  1303               	bcf	status, 6	;RP1=0, select bank1
  2053  0FC4  009F               	movwf	(159)^080h	;volatile
  2054                           	line	55
  2055                           	
  2056  0FC5                     l6748:	
  2057                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2058                           	opt asmopt_off
  2059  0FC5  3053               movlw	83
  2060  0FC6  00D1               movwf	(??_init_adc+0)^080h+0,f
  2061  0FC7                     u3737:
  2062  0FC7  0BD1               decfsz	(??_init_adc+0)^080h+0,f
  2063  0FC8  2FC7               	goto	u3737
  2064                           opt asmopt_on
  2065                           
  2066                           	line	57
  2067                           	
  2068  0FC9                     l700:	
  2069  0FC9  0008               	return
  2070                           	opt stack 0
  2071                           GLOBAL	__end_of_init_adc
  2072  0FCA                     	__end_of_init_adc:
  2073 ;; =============== function _init_adc ends ============
  2074                           
  2075                           	signat	_init_adc,88
  2076                           	global	_isr1
  2077                           psect	text462,local,class=CODE,delta=2
  2078                           global __ptext462
  2079  0493                     __ptext462:
  2080                           
  2081 ;; *************** function _isr1 *****************
  2082 ;; Defined at:
  2083 ;;		line 100 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       5       0       0       0
  2100 ;;      Totals:         0       5       0       0       0
  2101 ;;Total ram usage:        5 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		___lwmod
  2106 ;;		_readAvgDistance
  2107 ;;		_ADCconvert
  2108 ;; This function is called by:
  2109 ;;		Interrupt level 1
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           psect	text462
  2113                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2114                           	line	100
  2115                           	global	__size_of_isr1
  2116  00FD                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  2117                           	
  2118  0493                     _isr1:	
  2119                           	opt	stack 1
  2120                           ; Regs used in _isr1: [allreg]
  2121                           psect	intentry,class=CODE,delta=2
  2122                           global __pintentry
  2123  0004                     __pintentry:
  2124                           global interrupt_function
  2125  0004                     interrupt_function:
  2126                           	global saved_w
  2127  007E                     	saved_w	set	btemp+0
  2128  0004  00FE               	movwf	saved_w
  2129  0005  0E03               	swapf	status,w
  2130  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2131  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2132  0008  00E4               	movwf	(??_isr1+1)
  2133  0009  0804               	movf	fsr0,w
  2134  000A  00E5               	movwf	(??_isr1+2)
  2135  000B  080A               	movf	pclath,w
  2136  000C  00E6               	movwf	(??_isr1+3)
  2137  000D  087F               	movf	btemp+1,w
  2138  000E  00E7               	movwf	(??_isr1+4)
  2139  000F  120A  118A  2C93   	ljmp	_isr1
  2140                           psect	text462
  2141                           	line	102
  2142                           	
  2143  0493                     i1l6432:	
  2144                           ;Main.c: 102: if(TMR0IF)
  2145  0493  1D0B               	btfss	(90/8),(90)&7
  2146  0494  2C96               	goto	u296_21
  2147  0495  2C97               	goto	u296_20
  2148  0496                     u296_21:
  2149  0496  2D85               	goto	i1l2173
  2150  0497                     u296_20:
  2151                           	line	104
  2152                           	
  2153  0497                     i1l6434:	
  2154                           ;Main.c: 103: {
  2155                           ;Main.c: 104: TMR0IF = 0;
  2156  0497  110B               	bcf	(90/8),(90)&7
  2157                           	line	105
  2158                           	
  2159  0498                     i1l6436:	
  2160                           ;Main.c: 105: TMR0 = 100;
  2161  0498  3064               	movlw	(064h)
  2162  0499  0081               	movwf	(1)	;volatile
  2163                           	line	107
  2164                           ;Main.c: 107: RTC_Counter++;
  2165  049A  3001               	movlw	low(01h)
  2166  049B  07EA               	addwf	(_RTC_Counter),f	;volatile
  2167  049C  1803               	skipnc
  2168  049D  0AEB               	incf	(_RTC_Counter+1),f	;volatile
  2169  049E  3000               	movlw	high(01h)
  2170  049F  07EB               	addwf	(_RTC_Counter+1),f	;volatile
  2171                           	line	109
  2172                           	
  2173  04A0                     i1l6438:	
  2174                           ;Main.c: 109: RTC_FLAG_1MS = 1;
  2175  04A0  14E8               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  2176                           	line	110
  2177                           	
  2178  04A1                     i1l6440:	
  2179                           ;Main.c: 110: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  2180  04A1  300A               	movlw	low(0Ah)
  2181  04A2  00F8               	movwf	(?___lwmod)
  2182  04A3  3000               	movlw	high(0Ah)
  2183  04A4  00F9               	movwf	((?___lwmod))+1
  2184  04A5  086B               	movf	(_RTC_Counter+1),w	;volatile
  2185  04A6  01FB               	clrf	1+(?___lwmod)+02h
  2186  04A7  07FB               	addwf	1+(?___lwmod)+02h
  2187  04A8  086A               	movf	(_RTC_Counter),w	;volatile
  2188  04A9  01FA               	clrf	0+(?___lwmod)+02h
  2189  04AA  07FA               	addwf	0+(?___lwmod)+02h
  2190                           
  2191  04AB  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2192  04B0  0879               	movf	((1+(?___lwmod))),w
  2193  04B1  0478               	iorwf	((0+(?___lwmod))),w
  2194  04B2  1D03               	skipz
  2195  04B3  2CB5               	goto	u297_21
  2196  04B4  2CB6               	goto	u297_20
  2197  04B5                     u297_21:
  2198  04B5  2CBA               	goto	i1l6444
  2199  04B6                     u297_20:
  2200                           	
  2201  04B6                     i1l6442:	
  2202  04B6  1283               	bcf	status, 5	;RP0=0, select bank0
  2203  04B7  1303               	bcf	status, 6	;RP1=0, select bank0
  2204  04B8  1468               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  2205  04B9  2CBA               	goto	i1l6444
  2206                           	
  2207  04BA                     i1l2157:	
  2208                           	line	111
  2209                           	
  2210  04BA                     i1l6444:	
  2211                           ;Main.c: 111: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  2212  04BA  3032               	movlw	low(032h)
  2213  04BB  00F8               	movwf	(?___lwmod)
  2214  04BC  3000               	movlw	high(032h)
  2215  04BD  00F9               	movwf	((?___lwmod))+1
  2216  04BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  04BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  04C0  086B               	movf	(_RTC_Counter+1),w	;volatile
  2219  04C1  01FB               	clrf	1+(?___lwmod)+02h
  2220  04C2  07FB               	addwf	1+(?___lwmod)+02h
  2221  04C3  086A               	movf	(_RTC_Counter),w	;volatile
  2222  04C4  01FA               	clrf	0+(?___lwmod)+02h
  2223  04C5  07FA               	addwf	0+(?___lwmod)+02h
  2224                           
  2225  04C6  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2226  04CB  0879               	movf	((1+(?___lwmod))),w
  2227  04CC  0478               	iorwf	((0+(?___lwmod))),w
  2228  04CD  1D03               	skipz
  2229  04CE  2CD0               	goto	u298_21
  2230  04CF  2CD1               	goto	u298_20
  2231  04D0                     u298_21:
  2232  04D0  2CD5               	goto	i1l6448
  2233  04D1                     u298_20:
  2234                           	
  2235  04D1                     i1l6446:	
  2236  04D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2237  04D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2238  04D3  1668               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  2239  04D4  2CD5               	goto	i1l6448
  2240                           	
  2241  04D5                     i1l2158:	
  2242                           	line	112
  2243                           	
  2244  04D5                     i1l6448:	
  2245                           ;Main.c: 112: if(RTC_Counter % 250 == 0)
  2246  04D5  30FA               	movlw	low(0FAh)
  2247  04D6  00F8               	movwf	(?___lwmod)
  2248  04D7  3000               	movlw	high(0FAh)
  2249  04D8  00F9               	movwf	((?___lwmod))+1
  2250  04D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2251  04DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2252  04DB  086B               	movf	(_RTC_Counter+1),w	;volatile
  2253  04DC  01FB               	clrf	1+(?___lwmod)+02h
  2254  04DD  07FB               	addwf	1+(?___lwmod)+02h
  2255  04DE  086A               	movf	(_RTC_Counter),w	;volatile
  2256  04DF  01FA               	clrf	0+(?___lwmod)+02h
  2257  04E0  07FA               	addwf	0+(?___lwmod)+02h
  2258                           
  2259  04E1  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2260  04E6  0879               	movf	((1+(?___lwmod))),w
  2261  04E7  0478               	iorwf	((0+(?___lwmod))),w
  2262  04E8  1D03               	skipz
  2263  04E9  2CEB               	goto	u299_21
  2264  04EA  2CEC               	goto	u299_20
  2265  04EB                     u299_21:
  2266  04EB  2D02               	goto	i1l6454
  2267  04EC                     u299_20:
  2268                           	line	114
  2269                           	
  2270  04EC                     i1l6450:	
  2271                           ;Main.c: 113: {
  2272                           ;Main.c: 114: ADCconvert(readAvgDistance());
  2273  04EC  120A  118A  2590   	fcall	_readAvgDistance
              120A  118A         
  2274  04F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2275  04F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2276  04F3  0830               	movf	(1+(?_readAvgDistance)),w
  2277  04F4  01CC               	clrf	(?_ADCconvert+1)
  2278  04F5  07CC               	addwf	(?_ADCconvert+1)
  2279  04F6  082F               	movf	(0+(?_readAvgDistance)),w
  2280  04F7  01CB               	clrf	(?_ADCconvert)
  2281  04F8  07CB               	addwf	(?_ADCconvert)
  2282                           
  2283  04F9  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  2284                           	line	116
  2285                           	
  2286  04FE                     i1l6452:	
  2287                           ;Main.c: 116: RTC_FLAG_250MS = 1;
  2288  04FE  1283               	bcf	status, 5	;RP0=0, select bank0
  2289  04FF  1303               	bcf	status, 6	;RP1=0, select bank0
  2290  0500  1568               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2291  0501  2D02               	goto	i1l6454
  2292                           	line	118
  2293                           	
  2294  0502                     i1l2159:	
  2295                           	line	119
  2296                           	
  2297  0502                     i1l6454:	
  2298                           ;Main.c: 118: }
  2299                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
  2300  0502  30F4               	movlw	low(01F4h)
  2301  0503  00F8               	movwf	(?___lwmod)
  2302  0504  3001               	movlw	high(01F4h)
  2303  0505  00F9               	movwf	((?___lwmod))+1
  2304  0506  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  0507  1303               	bcf	status, 6	;RP1=0, select bank0
  2306  0508  086B               	movf	(_RTC_Counter+1),w	;volatile
  2307  0509  01FB               	clrf	1+(?___lwmod)+02h
  2308  050A  07FB               	addwf	1+(?___lwmod)+02h
  2309  050B  086A               	movf	(_RTC_Counter),w	;volatile
  2310  050C  01FA               	clrf	0+(?___lwmod)+02h
  2311  050D  07FA               	addwf	0+(?___lwmod)+02h
  2312                           
  2313  050E  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2314  0513  0879               	movf	((1+(?___lwmod))),w
  2315  0514  0478               	iorwf	((0+(?___lwmod))),w
  2316  0515  1D03               	skipz
  2317  0516  2D18               	goto	u300_21
  2318  0517  2D19               	goto	u300_20
  2319  0518                     u300_21:
  2320  0518  2D21               	goto	i1l6462
  2321  0519                     u300_20:
  2322                           	line	121
  2323                           	
  2324  0519                     i1l6456:	
  2325                           ;Main.c: 120: {
  2326                           ;Main.c: 121: RTC_FLAG_500MS = 1;
  2327  0519  1283               	bcf	status, 5	;RP0=0, select bank0
  2328  051A  1303               	bcf	status, 6	;RP1=0, select bank0
  2329  051B  15E8               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  2330                           	line	122
  2331                           	
  2332  051C                     i1l6458:	
  2333                           ;Main.c: 122: RTC_Counter = 0;
  2334  051C  01EA               	clrf	(_RTC_Counter)	;volatile
  2335  051D  01EB               	clrf	(_RTC_Counter+1)	;volatile
  2336                           	line	123
  2337                           	
  2338  051E                     i1l6460:	
  2339                           ;Main.c: 123: RB0 ^= 0x01;
  2340  051E  3001               	movlw	1<<((48)&7)
  2341  051F  0686               	xorwf	((48)/8),f
  2342  0520  2D21               	goto	i1l6462
  2343                           	line	124
  2344                           	
  2345  0521                     i1l2160:	
  2346                           	line	127
  2347                           	
  2348  0521                     i1l6462:	
  2349                           ;Main.c: 124: }
  2350                           ;Main.c: 127: if(!RB2)
  2351  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  2352  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  2353  0523  1906               	btfsc	(50/8),(50)&7
  2354  0524  2D26               	goto	u301_21
  2355  0525  2D27               	goto	u301_20
  2356  0526                     u301_21:
  2357  0526  2D39               	goto	i1l2161
  2358  0527                     u301_20:
  2359                           	line	129
  2360                           	
  2361  0527                     i1l6464:	
  2362                           ;Main.c: 128: {
  2363                           ;Main.c: 129: pb0DebounceCount++;
  2364  0527  3001               	movlw	(01h)
  2365  0528  00E3               	movwf	(??_isr1+0)+0
  2366  0529  0863               	movf	(??_isr1+0)+0,w
  2367  052A  07EC               	addwf	(_pb0DebounceCount),f	;volatile
  2368                           	line	130
  2369                           	
  2370  052B                     i1l6466:	
  2371                           ;Main.c: 130: if(pb0DebounceCount >= 10 & pb0Released)
  2372  052B  300A               	movlw	(0Ah)
  2373  052C  026C               	subwf	(_pb0DebounceCount),w	;volatile
  2374  052D  1C03               	skipc
  2375  052E  2D30               	goto	u302_21
  2376  052F  2D31               	goto	u302_20
  2377  0530                     u302_21:
  2378  0530  2D3B               	goto	i1l2163
  2379  0531                     u302_20:
  2380                           	
  2381  0531                     i1l6468:	
  2382  0531  1F68               	btfss	(_pb0Released/8),(_pb0Released)&7
  2383  0532  2D34               	goto	u303_21
  2384  0533  2D35               	goto	u303_20
  2385  0534                     u303_21:
  2386  0534  2D3B               	goto	i1l2163
  2387  0535                     u303_20:
  2388                           	line	132
  2389                           	
  2390  0535                     i1l6470:	
  2391                           ;Main.c: 131: {
  2392                           ;Main.c: 132: pb0Pressed = 1;
  2393  0535  16E8               	bsf	(_pb0Pressed/8),(_pb0Pressed)&7
  2394                           	line	133
  2395                           ;Main.c: 133: pb0Released = 0;
  2396  0536  1368               	bcf	(_pb0Released/8),(_pb0Released)&7
  2397  0537  2D3B               	goto	i1l2163
  2398                           	line	134
  2399                           	
  2400  0538                     i1l2162:	
  2401                           	line	135
  2402                           ;Main.c: 134: }
  2403                           ;Main.c: 135: }
  2404  0538  2D3B               	goto	i1l2163
  2405                           	line	136
  2406                           	
  2407  0539                     i1l2161:	
  2408                           	line	138
  2409                           ;Main.c: 136: else
  2410                           ;Main.c: 137: {
  2411                           ;Main.c: 138: pb0DebounceCount = 0;
  2412  0539  01EC               	clrf	(_pb0DebounceCount)	;volatile
  2413                           	line	139
  2414                           ;Main.c: 139: pb0Released = 1;
  2415  053A  1768               	bsf	(_pb0Released/8),(_pb0Released)&7
  2416                           	line	140
  2417                           	
  2418  053B                     i1l2163:	
  2419                           	line	143
  2420                           ;Main.c: 140: }
  2421                           ;Main.c: 143: if(!RB3)
  2422  053B  1986               	btfsc	(51/8),(51)&7
  2423  053C  2D3E               	goto	u304_21
  2424  053D  2D3F               	goto	u304_20
  2425  053E                     u304_21:
  2426  053E  2D51               	goto	i1l2164
  2427  053F                     u304_20:
  2428                           	line	145
  2429                           	
  2430  053F                     i1l6472:	
  2431                           ;Main.c: 144: {
  2432                           ;Main.c: 145: pb1DebounceCount++;
  2433  053F  3001               	movlw	(01h)
  2434  0540  00E3               	movwf	(??_isr1+0)+0
  2435  0541  0863               	movf	(??_isr1+0)+0,w
  2436  0542  07ED               	addwf	(_pb1DebounceCount),f	;volatile
  2437                           	line	146
  2438                           	
  2439  0543                     i1l6474:	
  2440                           ;Main.c: 146: if(pb1DebounceCount >= 10 & pb1Released)
  2441  0543  300A               	movlw	(0Ah)
  2442  0544  026D               	subwf	(_pb1DebounceCount),w	;volatile
  2443  0545  1C03               	skipc
  2444  0546  2D48               	goto	u305_21
  2445  0547  2D49               	goto	u305_20
  2446  0548                     u305_21:
  2447  0548  2D53               	goto	i1l2166
  2448  0549                     u305_20:
  2449                           	
  2450  0549                     i1l6476:	
  2451  0549  1C69               	btfss	(_pb1Released/8),(_pb1Released)&7
  2452  054A  2D4C               	goto	u306_21
  2453  054B  2D4D               	goto	u306_20
  2454  054C                     u306_21:
  2455  054C  2D53               	goto	i1l2166
  2456  054D                     u306_20:
  2457                           	line	148
  2458                           	
  2459  054D                     i1l6478:	
  2460                           ;Main.c: 147: {
  2461                           ;Main.c: 148: pb1Pressed = 1;
  2462  054D  17E8               	bsf	(_pb1Pressed/8),(_pb1Pressed)&7
  2463                           	line	149
  2464                           ;Main.c: 149: pb1Released = 0;
  2465  054E  1069               	bcf	(_pb1Released/8),(_pb1Released)&7
  2466  054F  2D53               	goto	i1l2166
  2467                           	line	150
  2468                           	
  2469  0550                     i1l2165:	
  2470                           	line	151
  2471                           ;Main.c: 150: }
  2472                           ;Main.c: 151: }
  2473  0550  2D53               	goto	i1l2166
  2474                           	line	152
  2475                           	
  2476  0551                     i1l2164:	
  2477                           	line	154
  2478                           ;Main.c: 152: else
  2479                           ;Main.c: 153: {
  2480                           ;Main.c: 154: pb1DebounceCount = 0;
  2481  0551  01ED               	clrf	(_pb1DebounceCount)	;volatile
  2482                           	line	155
  2483                           ;Main.c: 155: pb1Released = 1;
  2484  0552  1469               	bsf	(_pb1Released/8),(_pb1Released)&7
  2485                           	line	156
  2486                           	
  2487  0553                     i1l2166:	
  2488                           	line	158
  2489                           ;Main.c: 156: }
  2490                           ;Main.c: 158: if(!RB4)
  2491  0553  1A06               	btfsc	(52/8),(52)&7
  2492  0554  2D56               	goto	u307_21
  2493  0555  2D57               	goto	u307_20
  2494  0556                     u307_21:
  2495  0556  2D69               	goto	i1l2167
  2496  0557                     u307_20:
  2497                           	line	160
  2498                           	
  2499  0557                     i1l6480:	
  2500                           ;Main.c: 159: {
  2501                           ;Main.c: 160: pb2DebounceCount++;
  2502  0557  3001               	movlw	(01h)
  2503  0558  00E3               	movwf	(??_isr1+0)+0
  2504  0559  0863               	movf	(??_isr1+0)+0,w
  2505  055A  07EE               	addwf	(_pb2DebounceCount),f	;volatile
  2506                           	line	161
  2507                           	
  2508  055B                     i1l6482:	
  2509                           ;Main.c: 161: if(pb2DebounceCount >= 10 & pb2Released)
  2510  055B  300A               	movlw	(0Ah)
  2511  055C  026E               	subwf	(_pb2DebounceCount),w	;volatile
  2512  055D  1C03               	skipc
  2513  055E  2D60               	goto	u308_21
  2514  055F  2D61               	goto	u308_20
  2515  0560                     u308_21:
  2516  0560  2D6B               	goto	i1l2169
  2517  0561                     u308_20:
  2518                           	
  2519  0561                     i1l6484:	
  2520  0561  1D69               	btfss	(_pb2Released/8),(_pb2Released)&7
  2521  0562  2D64               	goto	u309_21
  2522  0563  2D65               	goto	u309_20
  2523  0564                     u309_21:
  2524  0564  2D6B               	goto	i1l2169
  2525  0565                     u309_20:
  2526                           	line	163
  2527                           	
  2528  0565                     i1l6486:	
  2529                           ;Main.c: 162: {
  2530                           ;Main.c: 163: pb2Pressed = 1;
  2531  0565  14E9               	bsf	(_pb2Pressed/8),(_pb2Pressed)&7
  2532                           	line	164
  2533                           ;Main.c: 164: pb2Released = 0;
  2534  0566  1169               	bcf	(_pb2Released/8),(_pb2Released)&7
  2535  0567  2D6B               	goto	i1l2169
  2536                           	line	165
  2537                           	
  2538  0568                     i1l2168:	
  2539                           	line	166
  2540                           ;Main.c: 165: }
  2541                           ;Main.c: 166: }
  2542  0568  2D6B               	goto	i1l2169
  2543                           	line	167
  2544                           	
  2545  0569                     i1l2167:	
  2546                           	line	169
  2547                           ;Main.c: 167: else
  2548                           ;Main.c: 168: {
  2549                           ;Main.c: 169: pb2DebounceCount = 0;
  2550  0569  01EE               	clrf	(_pb2DebounceCount)	;volatile
  2551                           	line	170
  2552                           ;Main.c: 170: pb2Released = 1;
  2553  056A  1569               	bsf	(_pb2Released/8),(_pb2Released)&7
  2554                           	line	171
  2555                           	
  2556  056B                     i1l2169:	
  2557                           	line	173
  2558                           ;Main.c: 171: }
  2559                           ;Main.c: 173: if(!RB5)
  2560  056B  1A86               	btfsc	(53/8),(53)&7
  2561  056C  2D6E               	goto	u310_21
  2562  056D  2D6F               	goto	u310_20
  2563  056E                     u310_21:
  2564  056E  2D81               	goto	i1l2170
  2565  056F                     u310_20:
  2566                           	line	175
  2567                           	
  2568  056F                     i1l6488:	
  2569                           ;Main.c: 174: {
  2570                           ;Main.c: 175: pb3DebounceCount++;
  2571  056F  3001               	movlw	(01h)
  2572  0570  00E3               	movwf	(??_isr1+0)+0
  2573  0571  0863               	movf	(??_isr1+0)+0,w
  2574  0572  07EF               	addwf	(_pb3DebounceCount),f	;volatile
  2575                           	line	176
  2576                           	
  2577  0573                     i1l6490:	
  2578                           ;Main.c: 176: if(pb3DebounceCount >= 10 & pb3Released)
  2579  0573  300A               	movlw	(0Ah)
  2580  0574  026F               	subwf	(_pb3DebounceCount),w	;volatile
  2581  0575  1C03               	skipc
  2582  0576  2D78               	goto	u311_21
  2583  0577  2D79               	goto	u311_20
  2584  0578                     u311_21:
  2585  0578  2D85               	goto	i1l2173
  2586  0579                     u311_20:
  2587                           	
  2588  0579                     i1l6492:	
  2589  0579  1E69               	btfss	(_pb3Released/8),(_pb3Released)&7
  2590  057A  2D7C               	goto	u312_21
  2591  057B  2D7D               	goto	u312_20
  2592  057C                     u312_21:
  2593  057C  2D85               	goto	i1l2173
  2594  057D                     u312_20:
  2595                           	line	178
  2596                           	
  2597  057D                     i1l6494:	
  2598                           ;Main.c: 177: {
  2599                           ;Main.c: 178: pb3Pressed = 1;
  2600  057D  15E9               	bsf	(_pb3Pressed/8),(_pb3Pressed)&7
  2601                           	line	179
  2602                           ;Main.c: 179: pb3Released = 0;
  2603  057E  1269               	bcf	(_pb3Released/8),(_pb3Released)&7
  2604  057F  2D85               	goto	i1l2173
  2605                           	line	180
  2606                           	
  2607  0580                     i1l2171:	
  2608                           	line	181
  2609                           ;Main.c: 180: }
  2610                           ;Main.c: 181: }
  2611  0580  2D85               	goto	i1l2173
  2612                           	line	182
  2613                           	
  2614  0581                     i1l2170:	
  2615                           	line	184
  2616                           ;Main.c: 182: else
  2617                           ;Main.c: 183: {
  2618                           ;Main.c: 184: pb3DebounceCount = 0;
  2619  0581  01EF               	clrf	(_pb3DebounceCount)	;volatile
  2620                           	line	185
  2621                           ;Main.c: 185: pb3Released = 1;
  2622  0582  1669               	bsf	(_pb3Released/8),(_pb3Released)&7
  2623  0583  2D85               	goto	i1l2173
  2624                           	line	186
  2625                           	
  2626  0584                     i1l2172:	
  2627  0584  2D85               	goto	i1l2173
  2628                           	line	187
  2629                           	
  2630  0585                     i1l2156:	
  2631                           	line	188
  2632                           	
  2633  0585                     i1l2173:	
  2634  0585  0867               	movf	(??_isr1+4),w
  2635  0586  00FF               	movwf	btemp+1
  2636  0587  0866               	movf	(??_isr1+3),w
  2637  0588  008A               	movwf	pclath
  2638  0589  0865               	movf	(??_isr1+2),w
  2639  058A  0084               	movwf	fsr0
  2640  058B  0E64               	swapf	(??_isr1+1)^00h,w
  2641  058C  0083               	movwf	status
  2642  058D  0EFE               	swapf	saved_w,f
  2643  058E  0E7E               	swapf	saved_w,w
  2644  058F  0009               	retfie
  2645                           	opt stack 0
  2646                           GLOBAL	__end_of_isr1
  2647  0590                     	__end_of_isr1:
  2648 ;; =============== function _isr1 ends ============
  2649                           
  2650                           	signat	_isr1,88
  2651                           	global	_ADCconvert
  2652                           psect	text463,local,class=CODE,delta=2
  2653                           global __ptext463
  2654  0015                     __ptext463:
  2655                           
  2656 ;; *************** function _ADCconvert *****************
  2657 ;; Defined at:
  2658 ;;		line 44 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  adcVal          2   43[BANK0 ] unsigned int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  adcOutput      16   49[BANK0 ] unsigned char [16]
  2663 ;;  distance        2   65[BANK0 ] unsigned int 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       2       0       0       0
  2674 ;;      Locals:         0      18       0       0       0
  2675 ;;      Temps:          0       4       0       0       0
  2676 ;;      Totals:         0      24       0       0       0
  2677 ;;Total ram usage:       24 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    2
  2680 ;; This function calls:
  2681 ;;		___lwmod
  2682 ;;		_sprintf
  2683 ;;		_lcd_set_cursor
  2684 ;;		_lcd_write_string
  2685 ;; This function is called by:
  2686 ;;		_isr1
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           psect	text463
  2690                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2691                           	line	44
  2692                           	global	__size_of_ADCconvert
  2693  0255                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  2694                           	
  2695  0015                     _ADCconvert:	
  2696                           	opt	stack 1
  2697                           ; Regs used in _ADCconvert: [allreg]
  2698                           	line	45
  2699                           	
  2700  0015                     i1l6526:	
  2701                           ;infrared.c: 45: char adcOutput[16] = "";
  2702  0015  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  2703  0016  0084               	movwf	fsr0
  2704  0017  30A0               	movlw	low(ADCconvert@F1192)
  2705  0018  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  0019  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  001A  00CD               	movwf	(??_ADCconvert+0)+0
  2708  001B  0804               	movf	fsr0,w
  2709  001C  00CE               	movwf	((??_ADCconvert+0)+0+1)
  2710  001D  3010               	movlw	16
  2711  001E  00CF               	movwf	((??_ADCconvert+0)+0+2)
  2712  001F                     u316_20:
  2713  001F  084D               	movf	(??_ADCconvert+0)+0,w
  2714  0020  0084               	movwf	fsr0
  2715  0021  1383               	bcf	status, 7	;select IRP bank1
  2716                           	
  2717  0022  0800               	movf	indf,w
  2718  0023  00D0               	movwf	((??_ADCconvert+0)+0+3)
  2719  0024  0ACD               	incf	(??_ADCconvert+0)+0,f
  2720  0025  084E               	movf	((??_ADCconvert+0)+0+1),w
  2721  0026  0084               	movwf	fsr0
  2722                           	
  2723  0027  0850               	movf	((??_ADCconvert+0)+0+3),w
  2724  0028  0080               	movwf	indf
  2725  0029  0ACE               	incf	((??_ADCconvert+0)+0+1),f
  2726  002A  0BCF               	decfsz	((??_ADCconvert+0)+0+2),f
  2727  002B  281F               	goto	u316_20
  2728                           	line	47
  2729                           	
  2730  002C                     i1l6528:	
  2731                           ;infrared.c: 46: unsigned int distance;
  2732                           ;infrared.c: 47: if (adcVal > 250)
  2733  002C  3000               	movlw	high(0FBh)
  2734  002D  024C               	subwf	(ADCconvert@adcVal+1),w
  2735  002E  30FB               	movlw	low(0FBh)
  2736  002F  1903               	skipnz
  2737  0030  024B               	subwf	(ADCconvert@adcVal),w
  2738  0031  1C03               	skipc
  2739  0032  2834               	goto	u317_21
  2740  0033  2835               	goto	u317_20
  2741  0034                     u317_21:
  2742  0034  283A               	goto	i1l6532
  2743  0035                     u317_20:
  2744                           	line	49
  2745                           	
  2746  0035                     i1l6530:	
  2747                           ;infrared.c: 48: {
  2748                           ;infrared.c: 49: distance = 20;
  2749  0035  3014               	movlw	low(014h)
  2750  0036  00E1               	movwf	(ADCconvert@distance)
  2751  0037  3000               	movlw	high(014h)
  2752  0038  00E2               	movwf	((ADCconvert@distance))+1
  2753                           	line	50
  2754                           ;infrared.c: 50: }
  2755  0039  2A4D               	goto	i1l6602
  2756                           	line	51
  2757                           	
  2758  003A                     i1l2897:	
  2759                           	
  2760  003A                     i1l6532:	
  2761                           ;infrared.c: 51: else if (adcVal < 250 && adcVal >= 190)
  2762  003A  3000               	movlw	high(0FAh)
  2763  003B  024C               	subwf	(ADCconvert@adcVal+1),w
  2764  003C  30FA               	movlw	low(0FAh)
  2765  003D  1903               	skipnz
  2766  003E  024B               	subwf	(ADCconvert@adcVal),w
  2767  003F  1803               	skipnc
  2768  0040  2842               	goto	u318_21
  2769  0041  2843               	goto	u318_20
  2770  0042                     u318_21:
  2771  0042  2866               	goto	i1l6538
  2772  0043                     u318_20:
  2773                           	
  2774  0043                     i1l6534:	
  2775  0043  3000               	movlw	high(0BEh)
  2776  0044  024C               	subwf	(ADCconvert@adcVal+1),w
  2777  0045  30BE               	movlw	low(0BEh)
  2778  0046  1903               	skipnz
  2779  0047  024B               	subwf	(ADCconvert@adcVal),w
  2780  0048  1C03               	skipc
  2781  0049  284B               	goto	u319_21
  2782  004A  284C               	goto	u319_20
  2783  004B                     u319_21:
  2784  004B  2866               	goto	i1l6538
  2785  004C                     u319_20:
  2786                           	line	53
  2787                           	
  2788  004C                     i1l6536:	
  2789                           ;infrared.c: 52: {
  2790                           ;infrared.c: 53: distance = 20+ (adcVal%100) ;
  2791  004C  3064               	movlw	low(064h)
  2792  004D  00F8               	movwf	(?___lwmod)
  2793  004E  3000               	movlw	high(064h)
  2794  004F  00F9               	movwf	((?___lwmod))+1
  2795  0050  084C               	movf	(ADCconvert@adcVal+1),w
  2796  0051  01FB               	clrf	1+(?___lwmod)+02h
  2797  0052  07FB               	addwf	1+(?___lwmod)+02h
  2798  0053  084B               	movf	(ADCconvert@adcVal),w
  2799  0054  01FA               	clrf	0+(?___lwmod)+02h
  2800  0055  07FA               	addwf	0+(?___lwmod)+02h
  2801                           
  2802  0056  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2803  005B  0878               	movf	(0+(?___lwmod)),w
  2804  005C  3E14               	addlw	low(014h)
  2805  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2806  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2807  005F  00E1               	movwf	(ADCconvert@distance)
  2808  0060  0879               	movf	(1+(?___lwmod)),w
  2809  0061  1803               	skipnc
  2810  0062  3E01               	addlw	1
  2811  0063  3E00               	addlw	high(014h)
  2812  0064  00E2               	movwf	1+(ADCconvert@distance)
  2813                           	line	54
  2814                           ;infrared.c: 54: }
  2815  0065  2A4D               	goto	i1l6602
  2816                           	line	55
  2817                           	
  2818  0066                     i1l2899:	
  2819                           	
  2820  0066                     i1l6538:	
  2821                           ;infrared.c: 55: else if (adcVal < 190 && adcVal >= 96)
  2822  0066  3000               	movlw	high(0BEh)
  2823  0067  024C               	subwf	(ADCconvert@adcVal+1),w
  2824  0068  30BE               	movlw	low(0BEh)
  2825  0069  1903               	skipnz
  2826  006A  024B               	subwf	(ADCconvert@adcVal),w
  2827  006B  1803               	skipnc
  2828  006C  286E               	goto	u320_21
  2829  006D  286F               	goto	u320_20
  2830  006E                     u320_21:
  2831  006E  2892               	goto	i1l6544
  2832  006F                     u320_20:
  2833                           	
  2834  006F                     i1l6540:	
  2835  006F  3000               	movlw	high(060h)
  2836  0070  024C               	subwf	(ADCconvert@adcVal+1),w
  2837  0071  3060               	movlw	low(060h)
  2838  0072  1903               	skipnz
  2839  0073  024B               	subwf	(ADCconvert@adcVal),w
  2840  0074  1C03               	skipc
  2841  0075  2877               	goto	u321_21
  2842  0076  2878               	goto	u321_20
  2843  0077                     u321_21:
  2844  0077  2892               	goto	i1l6544
  2845  0078                     u321_20:
  2846                           	line	57
  2847                           	
  2848  0078                     i1l6542:	
  2849                           ;infrared.c: 56: {
  2850                           ;infrared.c: 57: distance = 30+ (adcVal%100) ;
  2851  0078  3064               	movlw	low(064h)
  2852  0079  00F8               	movwf	(?___lwmod)
  2853  007A  3000               	movlw	high(064h)
  2854  007B  00F9               	movwf	((?___lwmod))+1
  2855  007C  084C               	movf	(ADCconvert@adcVal+1),w
  2856  007D  01FB               	clrf	1+(?___lwmod)+02h
  2857  007E  07FB               	addwf	1+(?___lwmod)+02h
  2858  007F  084B               	movf	(ADCconvert@adcVal),w
  2859  0080  01FA               	clrf	0+(?___lwmod)+02h
  2860  0081  07FA               	addwf	0+(?___lwmod)+02h
  2861                           
  2862  0082  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2863  0087  0878               	movf	(0+(?___lwmod)),w
  2864  0088  3E1E               	addlw	low(01Eh)
  2865  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  2866  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  2867  008B  00E1               	movwf	(ADCconvert@distance)
  2868  008C  0879               	movf	(1+(?___lwmod)),w
  2869  008D  1803               	skipnc
  2870  008E  3E01               	addlw	1
  2871  008F  3E00               	addlw	high(01Eh)
  2872  0090  00E2               	movwf	1+(ADCconvert@distance)
  2873                           	line	58
  2874                           ;infrared.c: 58: }
  2875  0091  2A4D               	goto	i1l6602
  2876                           	line	59
  2877                           	
  2878  0092                     i1l2901:	
  2879                           	
  2880  0092                     i1l6544:	
  2881                           ;infrared.c: 59: else if (adcVal < 190 && adcVal >= 96)
  2882  0092  3000               	movlw	high(0BEh)
  2883  0093  024C               	subwf	(ADCconvert@adcVal+1),w
  2884  0094  30BE               	movlw	low(0BEh)
  2885  0095  1903               	skipnz
  2886  0096  024B               	subwf	(ADCconvert@adcVal),w
  2887  0097  1803               	skipnc
  2888  0098  289A               	goto	u322_21
  2889  0099  289B               	goto	u322_20
  2890  009A                     u322_21:
  2891  009A  28BE               	goto	i1l6550
  2892  009B                     u322_20:
  2893                           	
  2894  009B                     i1l6546:	
  2895  009B  3000               	movlw	high(060h)
  2896  009C  024C               	subwf	(ADCconvert@adcVal+1),w
  2897  009D  3060               	movlw	low(060h)
  2898  009E  1903               	skipnz
  2899  009F  024B               	subwf	(ADCconvert@adcVal),w
  2900  00A0  1C03               	skipc
  2901  00A1  28A3               	goto	u323_21
  2902  00A2  28A4               	goto	u323_20
  2903  00A3                     u323_21:
  2904  00A3  28BE               	goto	i1l6550
  2905  00A4                     u323_20:
  2906                           	line	61
  2907                           	
  2908  00A4                     i1l6548:	
  2909                           ;infrared.c: 60: {
  2910                           ;infrared.c: 61: distance = 40+ (adcVal%100) ;
  2911  00A4  3064               	movlw	low(064h)
  2912  00A5  00F8               	movwf	(?___lwmod)
  2913  00A6  3000               	movlw	high(064h)
  2914  00A7  00F9               	movwf	((?___lwmod))+1
  2915  00A8  084C               	movf	(ADCconvert@adcVal+1),w
  2916  00A9  01FB               	clrf	1+(?___lwmod)+02h
  2917  00AA  07FB               	addwf	1+(?___lwmod)+02h
  2918  00AB  084B               	movf	(ADCconvert@adcVal),w
  2919  00AC  01FA               	clrf	0+(?___lwmod)+02h
  2920  00AD  07FA               	addwf	0+(?___lwmod)+02h
  2921                           
  2922  00AE  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2923  00B3  0878               	movf	(0+(?___lwmod)),w
  2924  00B4  3E28               	addlw	low(028h)
  2925  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2926  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2927  00B7  00E1               	movwf	(ADCconvert@distance)
  2928  00B8  0879               	movf	(1+(?___lwmod)),w
  2929  00B9  1803               	skipnc
  2930  00BA  3E01               	addlw	1
  2931  00BB  3E00               	addlw	high(028h)
  2932  00BC  00E2               	movwf	1+(ADCconvert@distance)
  2933                           	line	62
  2934                           ;infrared.c: 62: }
  2935  00BD  2A4D               	goto	i1l6602
  2936                           	line	63
  2937                           	
  2938  00BE                     i1l2903:	
  2939                           	
  2940  00BE                     i1l6550:	
  2941                           ;infrared.c: 63: else if (adcVal < 115 && adcVal >= 96)
  2942  00BE  3000               	movlw	high(073h)
  2943  00BF  024C               	subwf	(ADCconvert@adcVal+1),w
  2944  00C0  3073               	movlw	low(073h)
  2945  00C1  1903               	skipnz
  2946  00C2  024B               	subwf	(ADCconvert@adcVal),w
  2947  00C3  1803               	skipnc
  2948  00C4  28C6               	goto	u324_21
  2949  00C5  28C7               	goto	u324_20
  2950  00C6                     u324_21:
  2951  00C6  28EA               	goto	i1l6556
  2952  00C7                     u324_20:
  2953                           	
  2954  00C7                     i1l6552:	
  2955  00C7  3000               	movlw	high(060h)
  2956  00C8  024C               	subwf	(ADCconvert@adcVal+1),w
  2957  00C9  3060               	movlw	low(060h)
  2958  00CA  1903               	skipnz
  2959  00CB  024B               	subwf	(ADCconvert@adcVal),w
  2960  00CC  1C03               	skipc
  2961  00CD  28CF               	goto	u325_21
  2962  00CE  28D0               	goto	u325_20
  2963  00CF                     u325_21:
  2964  00CF  28EA               	goto	i1l6556
  2965  00D0                     u325_20:
  2966                           	line	65
  2967                           	
  2968  00D0                     i1l6554:	
  2969                           ;infrared.c: 64: {
  2970                           ;infrared.c: 65: distance = 50+ (adcVal%100) ;
  2971  00D0  3064               	movlw	low(064h)
  2972  00D1  00F8               	movwf	(?___lwmod)
  2973  00D2  3000               	movlw	high(064h)
  2974  00D3  00F9               	movwf	((?___lwmod))+1
  2975  00D4  084C               	movf	(ADCconvert@adcVal+1),w
  2976  00D5  01FB               	clrf	1+(?___lwmod)+02h
  2977  00D6  07FB               	addwf	1+(?___lwmod)+02h
  2978  00D7  084B               	movf	(ADCconvert@adcVal),w
  2979  00D8  01FA               	clrf	0+(?___lwmod)+02h
  2980  00D9  07FA               	addwf	0+(?___lwmod)+02h
  2981                           
  2982  00DA  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2983  00DF  0878               	movf	(0+(?___lwmod)),w
  2984  00E0  3E32               	addlw	low(032h)
  2985  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2986  00E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2987  00E3  00E1               	movwf	(ADCconvert@distance)
  2988  00E4  0879               	movf	(1+(?___lwmod)),w
  2989  00E5  1803               	skipnc
  2990  00E6  3E01               	addlw	1
  2991  00E7  3E00               	addlw	high(032h)
  2992  00E8  00E2               	movwf	1+(ADCconvert@distance)
  2993                           	line	66
  2994                           ;infrared.c: 66: }
  2995  00E9  2A4D               	goto	i1l6602
  2996                           	line	67
  2997                           	
  2998  00EA                     i1l2905:	
  2999                           	
  3000  00EA                     i1l6556:	
  3001                           ;infrared.c: 67: else if (adcVal < 96 && adcVal >= 82)
  3002  00EA  3000               	movlw	high(060h)
  3003  00EB  024C               	subwf	(ADCconvert@adcVal+1),w
  3004  00EC  3060               	movlw	low(060h)
  3005  00ED  1903               	skipnz
  3006  00EE  024B               	subwf	(ADCconvert@adcVal),w
  3007  00EF  1803               	skipnc
  3008  00F0  28F2               	goto	u326_21
  3009  00F1  28F3               	goto	u326_20
  3010  00F2                     u326_21:
  3011  00F2  2916               	goto	i1l6562
  3012  00F3                     u326_20:
  3013                           	
  3014  00F3                     i1l6558:	
  3015  00F3  3000               	movlw	high(052h)
  3016  00F4  024C               	subwf	(ADCconvert@adcVal+1),w
  3017  00F5  3052               	movlw	low(052h)
  3018  00F6  1903               	skipnz
  3019  00F7  024B               	subwf	(ADCconvert@adcVal),w
  3020  00F8  1C03               	skipc
  3021  00F9  28FB               	goto	u327_21
  3022  00FA  28FC               	goto	u327_20
  3023  00FB                     u327_21:
  3024  00FB  2916               	goto	i1l6562
  3025  00FC                     u327_20:
  3026                           	line	69
  3027                           	
  3028  00FC                     i1l6560:	
  3029                           ;infrared.c: 68: {
  3030                           ;infrared.c: 69: distance = 60+ (adcVal%100) ;
  3031  00FC  3064               	movlw	low(064h)
  3032  00FD  00F8               	movwf	(?___lwmod)
  3033  00FE  3000               	movlw	high(064h)
  3034  00FF  00F9               	movwf	((?___lwmod))+1
  3035  0100  084C               	movf	(ADCconvert@adcVal+1),w
  3036  0101  01FB               	clrf	1+(?___lwmod)+02h
  3037  0102  07FB               	addwf	1+(?___lwmod)+02h
  3038  0103  084B               	movf	(ADCconvert@adcVal),w
  3039  0104  01FA               	clrf	0+(?___lwmod)+02h
  3040  0105  07FA               	addwf	0+(?___lwmod)+02h
  3041                           
  3042  0106  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3043  010B  0878               	movf	(0+(?___lwmod)),w
  3044  010C  3E3C               	addlw	low(03Ch)
  3045  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  3046  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  3047  010F  00E1               	movwf	(ADCconvert@distance)
  3048  0110  0879               	movf	(1+(?___lwmod)),w
  3049  0111  1803               	skipnc
  3050  0112  3E01               	addlw	1
  3051  0113  3E00               	addlw	high(03Ch)
  3052  0114  00E2               	movwf	1+(ADCconvert@distance)
  3053                           	line	70
  3054                           ;infrared.c: 70: }
  3055  0115  2A4D               	goto	i1l6602
  3056                           	line	71
  3057                           	
  3058  0116                     i1l2907:	
  3059                           	
  3060  0116                     i1l6562:	
  3061                           ;infrared.c: 71: else if (adcVal < 82 && adcVal >= 70)
  3062  0116  3000               	movlw	high(052h)
  3063  0117  024C               	subwf	(ADCconvert@adcVal+1),w
  3064  0118  3052               	movlw	low(052h)
  3065  0119  1903               	skipnz
  3066  011A  024B               	subwf	(ADCconvert@adcVal),w
  3067  011B  1803               	skipnc
  3068  011C  291E               	goto	u328_21
  3069  011D  291F               	goto	u328_20
  3070  011E                     u328_21:
  3071  011E  2942               	goto	i1l6568
  3072  011F                     u328_20:
  3073                           	
  3074  011F                     i1l6564:	
  3075  011F  3000               	movlw	high(046h)
  3076  0120  024C               	subwf	(ADCconvert@adcVal+1),w
  3077  0121  3046               	movlw	low(046h)
  3078  0122  1903               	skipnz
  3079  0123  024B               	subwf	(ADCconvert@adcVal),w
  3080  0124  1C03               	skipc
  3081  0125  2927               	goto	u329_21
  3082  0126  2928               	goto	u329_20
  3083  0127                     u329_21:
  3084  0127  2942               	goto	i1l6568
  3085  0128                     u329_20:
  3086                           	line	73
  3087                           	
  3088  0128                     i1l6566:	
  3089                           ;infrared.c: 72: {
  3090                           ;infrared.c: 73: distance = 70+ (adcVal%100) ;
  3091  0128  3064               	movlw	low(064h)
  3092  0129  00F8               	movwf	(?___lwmod)
  3093  012A  3000               	movlw	high(064h)
  3094  012B  00F9               	movwf	((?___lwmod))+1
  3095  012C  084C               	movf	(ADCconvert@adcVal+1),w
  3096  012D  01FB               	clrf	1+(?___lwmod)+02h
  3097  012E  07FB               	addwf	1+(?___lwmod)+02h
  3098  012F  084B               	movf	(ADCconvert@adcVal),w
  3099  0130  01FA               	clrf	0+(?___lwmod)+02h
  3100  0131  07FA               	addwf	0+(?___lwmod)+02h
  3101                           
  3102  0132  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3103  0137  0878               	movf	(0+(?___lwmod)),w
  3104  0138  3E46               	addlw	low(046h)
  3105  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  3106  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  3107  013B  00E1               	movwf	(ADCconvert@distance)
  3108  013C  0879               	movf	(1+(?___lwmod)),w
  3109  013D  1803               	skipnc
  3110  013E  3E01               	addlw	1
  3111  013F  3E00               	addlw	high(046h)
  3112  0140  00E2               	movwf	1+(ADCconvert@distance)
  3113                           	line	74
  3114                           ;infrared.c: 74: }
  3115  0141  2A4D               	goto	i1l6602
  3116                           	line	75
  3117                           	
  3118  0142                     i1l2909:	
  3119                           	
  3120  0142                     i1l6568:	
  3121                           ;infrared.c: 75: else if (adcVal < 70 && adcVal >= 64)
  3122  0142  3000               	movlw	high(046h)
  3123  0143  024C               	subwf	(ADCconvert@adcVal+1),w
  3124  0144  3046               	movlw	low(046h)
  3125  0145  1903               	skipnz
  3126  0146  024B               	subwf	(ADCconvert@adcVal),w
  3127  0147  1803               	skipnc
  3128  0148  294A               	goto	u330_21
  3129  0149  294B               	goto	u330_20
  3130  014A                     u330_21:
  3131  014A  296E               	goto	i1l6574
  3132  014B                     u330_20:
  3133                           	
  3134  014B                     i1l6570:	
  3135  014B  3000               	movlw	high(040h)
  3136  014C  024C               	subwf	(ADCconvert@adcVal+1),w
  3137  014D  3040               	movlw	low(040h)
  3138  014E  1903               	skipnz
  3139  014F  024B               	subwf	(ADCconvert@adcVal),w
  3140  0150  1C03               	skipc
  3141  0151  2953               	goto	u331_21
  3142  0152  2954               	goto	u331_20
  3143  0153                     u331_21:
  3144  0153  296E               	goto	i1l6574
  3145  0154                     u331_20:
  3146                           	line	77
  3147                           	
  3148  0154                     i1l6572:	
  3149                           ;infrared.c: 76: {
  3150                           ;infrared.c: 77: distance = 80+ (adcVal%100) ;
  3151  0154  3064               	movlw	low(064h)
  3152  0155  00F8               	movwf	(?___lwmod)
  3153  0156  3000               	movlw	high(064h)
  3154  0157  00F9               	movwf	((?___lwmod))+1
  3155  0158  084C               	movf	(ADCconvert@adcVal+1),w
  3156  0159  01FB               	clrf	1+(?___lwmod)+02h
  3157  015A  07FB               	addwf	1+(?___lwmod)+02h
  3158  015B  084B               	movf	(ADCconvert@adcVal),w
  3159  015C  01FA               	clrf	0+(?___lwmod)+02h
  3160  015D  07FA               	addwf	0+(?___lwmod)+02h
  3161                           
  3162  015E  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3163  0163  0878               	movf	(0+(?___lwmod)),w
  3164  0164  3E50               	addlw	low(050h)
  3165  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  3166  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  3167  0167  00E1               	movwf	(ADCconvert@distance)
  3168  0168  0879               	movf	(1+(?___lwmod)),w
  3169  0169  1803               	skipnc
  3170  016A  3E01               	addlw	1
  3171  016B  3E00               	addlw	high(050h)
  3172  016C  00E2               	movwf	1+(ADCconvert@distance)
  3173                           	line	78
  3174                           ;infrared.c: 78: }
  3175  016D  2A4D               	goto	i1l6602
  3176                           	line	79
  3177                           	
  3178  016E                     i1l2911:	
  3179                           	
  3180  016E                     i1l6574:	
  3181                           ;infrared.c: 79: else if (adcVal < 64 && adcVal >= 56)
  3182  016E  3000               	movlw	high(040h)
  3183  016F  024C               	subwf	(ADCconvert@adcVal+1),w
  3184  0170  3040               	movlw	low(040h)
  3185  0171  1903               	skipnz
  3186  0172  024B               	subwf	(ADCconvert@adcVal),w
  3187  0173  1803               	skipnc
  3188  0174  2976               	goto	u332_21
  3189  0175  2977               	goto	u332_20
  3190  0176                     u332_21:
  3191  0176  299A               	goto	i1l6580
  3192  0177                     u332_20:
  3193                           	
  3194  0177                     i1l6576:	
  3195  0177  3000               	movlw	high(038h)
  3196  0178  024C               	subwf	(ADCconvert@adcVal+1),w
  3197  0179  3038               	movlw	low(038h)
  3198  017A  1903               	skipnz
  3199  017B  024B               	subwf	(ADCconvert@adcVal),w
  3200  017C  1C03               	skipc
  3201  017D  297F               	goto	u333_21
  3202  017E  2980               	goto	u333_20
  3203  017F                     u333_21:
  3204  017F  299A               	goto	i1l6580
  3205  0180                     u333_20:
  3206                           	line	81
  3207                           	
  3208  0180                     i1l6578:	
  3209                           ;infrared.c: 80: {
  3210                           ;infrared.c: 81: distance = 90+ (adcVal%100) ;
  3211  0180  3064               	movlw	low(064h)
  3212  0181  00F8               	movwf	(?___lwmod)
  3213  0182  3000               	movlw	high(064h)
  3214  0183  00F9               	movwf	((?___lwmod))+1
  3215  0184  084C               	movf	(ADCconvert@adcVal+1),w
  3216  0185  01FB               	clrf	1+(?___lwmod)+02h
  3217  0186  07FB               	addwf	1+(?___lwmod)+02h
  3218  0187  084B               	movf	(ADCconvert@adcVal),w
  3219  0188  01FA               	clrf	0+(?___lwmod)+02h
  3220  0189  07FA               	addwf	0+(?___lwmod)+02h
  3221                           
  3222  018A  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3223  018F  0878               	movf	(0+(?___lwmod)),w
  3224  0190  3E5A               	addlw	low(05Ah)
  3225  0191  1283               	bcf	status, 5	;RP0=0, select bank0
  3226  0192  1303               	bcf	status, 6	;RP1=0, select bank0
  3227  0193  00E1               	movwf	(ADCconvert@distance)
  3228  0194  0879               	movf	(1+(?___lwmod)),w
  3229  0195  1803               	skipnc
  3230  0196  3E01               	addlw	1
  3231  0197  3E00               	addlw	high(05Ah)
  3232  0198  00E2               	movwf	1+(ADCconvert@distance)
  3233                           	line	82
  3234                           ;infrared.c: 82: }
  3235  0199  2A4D               	goto	i1l6602
  3236                           	line	83
  3237                           	
  3238  019A                     i1l2913:	
  3239                           	
  3240  019A                     i1l6580:	
  3241                           ;infrared.c: 83: else if (adcVal < 56 && adcVal >= 45)
  3242  019A  3000               	movlw	high(038h)
  3243  019B  024C               	subwf	(ADCconvert@adcVal+1),w
  3244  019C  3038               	movlw	low(038h)
  3245  019D  1903               	skipnz
  3246  019E  024B               	subwf	(ADCconvert@adcVal),w
  3247  019F  1803               	skipnc
  3248  01A0  29A2               	goto	u334_21
  3249  01A1  29A3               	goto	u334_20
  3250  01A2                     u334_21:
  3251  01A2  29C6               	goto	i1l6586
  3252  01A3                     u334_20:
  3253                           	
  3254  01A3                     i1l6582:	
  3255  01A3  3000               	movlw	high(02Dh)
  3256  01A4  024C               	subwf	(ADCconvert@adcVal+1),w
  3257  01A5  302D               	movlw	low(02Dh)
  3258  01A6  1903               	skipnz
  3259  01A7  024B               	subwf	(ADCconvert@adcVal),w
  3260  01A8  1C03               	skipc
  3261  01A9  29AB               	goto	u335_21
  3262  01AA  29AC               	goto	u335_20
  3263  01AB                     u335_21:
  3264  01AB  29C6               	goto	i1l6586
  3265  01AC                     u335_20:
  3266                           	line	85
  3267                           	
  3268  01AC                     i1l6584:	
  3269                           ;infrared.c: 84: {
  3270                           ;infrared.c: 85: distance = 100+ (adcVal%100) ;
  3271  01AC  3064               	movlw	low(064h)
  3272  01AD  00F8               	movwf	(?___lwmod)
  3273  01AE  3000               	movlw	high(064h)
  3274  01AF  00F9               	movwf	((?___lwmod))+1
  3275  01B0  084C               	movf	(ADCconvert@adcVal+1),w
  3276  01B1  01FB               	clrf	1+(?___lwmod)+02h
  3277  01B2  07FB               	addwf	1+(?___lwmod)+02h
  3278  01B3  084B               	movf	(ADCconvert@adcVal),w
  3279  01B4  01FA               	clrf	0+(?___lwmod)+02h
  3280  01B5  07FA               	addwf	0+(?___lwmod)+02h
  3281                           
  3282  01B6  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3283  01BB  0878               	movf	(0+(?___lwmod)),w
  3284  01BC  3E64               	addlw	low(064h)
  3285  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3286  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3287  01BF  00E1               	movwf	(ADCconvert@distance)
  3288  01C0  0879               	movf	(1+(?___lwmod)),w
  3289  01C1  1803               	skipnc
  3290  01C2  3E01               	addlw	1
  3291  01C3  3E00               	addlw	high(064h)
  3292  01C4  00E2               	movwf	1+(ADCconvert@distance)
  3293                           	line	86
  3294                           ;infrared.c: 86: }
  3295  01C5  2A4D               	goto	i1l6602
  3296                           	line	87
  3297                           	
  3298  01C6                     i1l2915:	
  3299                           	
  3300  01C6                     i1l6586:	
  3301                           ;infrared.c: 87: else if (adcVal < 45 && adcVal >= 40)
  3302  01C6  3000               	movlw	high(02Dh)
  3303  01C7  024C               	subwf	(ADCconvert@adcVal+1),w
  3304  01C8  302D               	movlw	low(02Dh)
  3305  01C9  1903               	skipnz
  3306  01CA  024B               	subwf	(ADCconvert@adcVal),w
  3307  01CB  1803               	skipnc
  3308  01CC  29CE               	goto	u336_21
  3309  01CD  29CF               	goto	u336_20
  3310  01CE                     u336_21:
  3311  01CE  29F2               	goto	i1l6592
  3312  01CF                     u336_20:
  3313                           	
  3314  01CF                     i1l6588:	
  3315  01CF  3000               	movlw	high(028h)
  3316  01D0  024C               	subwf	(ADCconvert@adcVal+1),w
  3317  01D1  3028               	movlw	low(028h)
  3318  01D2  1903               	skipnz
  3319  01D3  024B               	subwf	(ADCconvert@adcVal),w
  3320  01D4  1C03               	skipc
  3321  01D5  29D7               	goto	u337_21
  3322  01D6  29D8               	goto	u337_20
  3323  01D7                     u337_21:
  3324  01D7  29F2               	goto	i1l6592
  3325  01D8                     u337_20:
  3326                           	line	89
  3327                           	
  3328  01D8                     i1l6590:	
  3329                           ;infrared.c: 88: {
  3330                           ;infrared.c: 89: distance = 110+ (adcVal%100) ;
  3331  01D8  3064               	movlw	low(064h)
  3332  01D9  00F8               	movwf	(?___lwmod)
  3333  01DA  3000               	movlw	high(064h)
  3334  01DB  00F9               	movwf	((?___lwmod))+1
  3335  01DC  084C               	movf	(ADCconvert@adcVal+1),w
  3336  01DD  01FB               	clrf	1+(?___lwmod)+02h
  3337  01DE  07FB               	addwf	1+(?___lwmod)+02h
  3338  01DF  084B               	movf	(ADCconvert@adcVal),w
  3339  01E0  01FA               	clrf	0+(?___lwmod)+02h
  3340  01E1  07FA               	addwf	0+(?___lwmod)+02h
  3341                           
  3342  01E2  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3343  01E7  0878               	movf	(0+(?___lwmod)),w
  3344  01E8  3E6E               	addlw	low(06Eh)
  3345  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3346  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3347  01EB  00E1               	movwf	(ADCconvert@distance)
  3348  01EC  0879               	movf	(1+(?___lwmod)),w
  3349  01ED  1803               	skipnc
  3350  01EE  3E01               	addlw	1
  3351  01EF  3E00               	addlw	high(06Eh)
  3352  01F0  00E2               	movwf	1+(ADCconvert@distance)
  3353                           	line	90
  3354                           ;infrared.c: 90: }
  3355  01F1  2A4D               	goto	i1l6602
  3356                           	line	91
  3357                           	
  3358  01F2                     i1l2917:	
  3359                           	
  3360  01F2                     i1l6592:	
  3361                           ;infrared.c: 91: else if (adcVal < 40 && adcVal >= 33)
  3362  01F2  3000               	movlw	high(028h)
  3363  01F3  024C               	subwf	(ADCconvert@adcVal+1),w
  3364  01F4  3028               	movlw	low(028h)
  3365  01F5  1903               	skipnz
  3366  01F6  024B               	subwf	(ADCconvert@adcVal),w
  3367  01F7  1803               	skipnc
  3368  01F8  29FA               	goto	u338_21
  3369  01F9  29FB               	goto	u338_20
  3370  01FA                     u338_21:
  3371  01FA  2A1E               	goto	i1l6598
  3372  01FB                     u338_20:
  3373                           	
  3374  01FB                     i1l6594:	
  3375  01FB  3000               	movlw	high(021h)
  3376  01FC  024C               	subwf	(ADCconvert@adcVal+1),w
  3377  01FD  3021               	movlw	low(021h)
  3378  01FE  1903               	skipnz
  3379  01FF  024B               	subwf	(ADCconvert@adcVal),w
  3380  0200  1C03               	skipc
  3381  0201  2A03               	goto	u339_21
  3382  0202  2A04               	goto	u339_20
  3383  0203                     u339_21:
  3384  0203  2A1E               	goto	i1l6598
  3385  0204                     u339_20:
  3386                           	line	93
  3387                           	
  3388  0204                     i1l6596:	
  3389                           ;infrared.c: 92: {
  3390                           ;infrared.c: 93: distance = 120+ (adcVal%100) ;
  3391  0204  3064               	movlw	low(064h)
  3392  0205  00F8               	movwf	(?___lwmod)
  3393  0206  3000               	movlw	high(064h)
  3394  0207  00F9               	movwf	((?___lwmod))+1
  3395  0208  084C               	movf	(ADCconvert@adcVal+1),w
  3396  0209  01FB               	clrf	1+(?___lwmod)+02h
  3397  020A  07FB               	addwf	1+(?___lwmod)+02h
  3398  020B  084B               	movf	(ADCconvert@adcVal),w
  3399  020C  01FA               	clrf	0+(?___lwmod)+02h
  3400  020D  07FA               	addwf	0+(?___lwmod)+02h
  3401                           
  3402  020E  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3403  0213  0878               	movf	(0+(?___lwmod)),w
  3404  0214  3E78               	addlw	low(078h)
  3405  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  3406  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  3407  0217  00E1               	movwf	(ADCconvert@distance)
  3408  0218  0879               	movf	(1+(?___lwmod)),w
  3409  0219  1803               	skipnc
  3410  021A  3E01               	addlw	1
  3411  021B  3E00               	addlw	high(078h)
  3412  021C  00E2               	movwf	1+(ADCconvert@distance)
  3413                           	line	94
  3414                           ;infrared.c: 94: }
  3415  021D  2A4D               	goto	i1l6602
  3416                           	line	95
  3417                           	
  3418  021E                     i1l2919:	
  3419                           	
  3420  021E                     i1l6598:	
  3421                           ;infrared.c: 95: else if (adcVal < 33 )
  3422  021E  3000               	movlw	high(021h)
  3423  021F  024C               	subwf	(ADCconvert@adcVal+1),w
  3424  0220  3021               	movlw	low(021h)
  3425  0221  1903               	skipnz
  3426  0222  024B               	subwf	(ADCconvert@adcVal),w
  3427  0223  1803               	skipnc
  3428  0224  2A26               	goto	u340_21
  3429  0225  2A27               	goto	u340_20
  3430  0226                     u340_21:
  3431  0226  2A4D               	goto	i1l6602
  3432  0227                     u340_20:
  3433                           	line	97
  3434                           	
  3435  0227                     i1l6600:	
  3436                           ;infrared.c: 96: {
  3437                           ;infrared.c: 97: distance = 130 + (adcVal%100) ;
  3438  0227  3064               	movlw	low(064h)
  3439  0228  00F8               	movwf	(?___lwmod)
  3440  0229  3000               	movlw	high(064h)
  3441  022A  00F9               	movwf	((?___lwmod))+1
  3442  022B  084C               	movf	(ADCconvert@adcVal+1),w
  3443  022C  01FB               	clrf	1+(?___lwmod)+02h
  3444  022D  07FB               	addwf	1+(?___lwmod)+02h
  3445  022E  084B               	movf	(ADCconvert@adcVal),w
  3446  022F  01FA               	clrf	0+(?___lwmod)+02h
  3447  0230  07FA               	addwf	0+(?___lwmod)+02h
  3448                           
  3449  0231  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3450  0236  0878               	movf	(0+(?___lwmod)),w
  3451  0237  3E82               	addlw	low(082h)
  3452  0238  1283               	bcf	status, 5	;RP0=0, select bank0
  3453  0239  1303               	bcf	status, 6	;RP1=0, select bank0
  3454  023A  00E1               	movwf	(ADCconvert@distance)
  3455  023B  0879               	movf	(1+(?___lwmod)),w
  3456  023C  1803               	skipnc
  3457  023D  3E01               	addlw	1
  3458  023E  3E00               	addlw	high(082h)
  3459  023F  00E2               	movwf	1+(ADCconvert@distance)
  3460  0240  2A4D               	goto	i1l6602
  3461                           	line	98
  3462                           	
  3463  0241                     i1l2921:	
  3464  0241  2A4D               	goto	i1l6602
  3465                           	line	103
  3466                           	
  3467  0242                     i1l2920:	
  3468  0242  2A4D               	goto	i1l6602
  3469                           	
  3470  0243                     i1l2918:	
  3471  0243  2A4D               	goto	i1l6602
  3472                           	
  3473  0244                     i1l2916:	
  3474  0244  2A4D               	goto	i1l6602
  3475                           	
  3476  0245                     i1l2914:	
  3477  0245  2A4D               	goto	i1l6602
  3478                           	
  3479  0246                     i1l2912:	
  3480  0246  2A4D               	goto	i1l6602
  3481                           	
  3482  0247                     i1l2910:	
  3483  0247  2A4D               	goto	i1l6602
  3484                           	
  3485  0248                     i1l2908:	
  3486  0248  2A4D               	goto	i1l6602
  3487                           	
  3488  0249                     i1l2906:	
  3489  0249  2A4D               	goto	i1l6602
  3490                           	
  3491  024A                     i1l2904:	
  3492  024A  2A4D               	goto	i1l6602
  3493                           	
  3494  024B                     i1l2902:	
  3495  024B  2A4D               	goto	i1l6602
  3496                           	
  3497  024C                     i1l2900:	
  3498  024C  2A4D               	goto	i1l6602
  3499                           	
  3500  024D                     i1l2898:	
  3501                           	
  3502  024D                     i1l6602:	
  3503                           ;infrared.c: 98: }
  3504                           ;infrared.c: 103: sprintf(adcOutput,"Distance: %dcm", distance);
  3505  024D  300B               	movlw	((STR_3-__stringbase))&0ffh
  3506  024E  00CD               	movwf	(??_ADCconvert+0)+0
  3507  024F  084D               	movf	(??_ADCconvert+0)+0,w
  3508  0250  00A0               	movwf	(?_sprintf)
  3509  0251  0862               	movf	(ADCconvert@distance+1),w
  3510  0252  01A2               	clrf	1+(?_sprintf)+01h
  3511  0253  07A2               	addwf	1+(?_sprintf)+01h
  3512  0254  0861               	movf	(ADCconvert@distance),w
  3513  0255  01A1               	clrf	0+(?_sprintf)+01h
  3514  0256  07A1               	addwf	0+(?_sprintf)+01h
  3515                           
  3516  0257  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  3517  0258  120A  118A  2395   	fcall	_sprintf
              120A  118A         
  3518                           	line	104
  3519                           	
  3520  025D                     i1l6604:	
  3521                           ;infrared.c: 104: lcd_set_cursor(0x40);
  3522  025D  3040               	movlw	(040h)
  3523  025E  120A  158A  2786   	fcall	_lcd_set_cursor
              120A  118A         
  3524                           	line	106
  3525                           	
  3526  0263                     i1l6606:	
  3527                           ;infrared.c: 106: lcd_write_string(adcOutput);
  3528  0263  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  3529  0264  120A  158A  27CA   	fcall	_lcd_write_string
              120A  118A         
  3530                           	line	107
  3531                           	
  3532  0269                     i1l2922:	
  3533  0269  0008               	return
  3534                           	opt stack 0
  3535                           GLOBAL	__end_of_ADCconvert
  3536  026A                     	__end_of_ADCconvert:
  3537 ;; =============== function _ADCconvert ends ============
  3538                           
  3539                           	signat	_ADCconvert,4216
  3540                           	global	_readAvgDistance
  3541                           psect	text464,local,class=CODE,delta=2
  3542                           global __ptext464
  3543  0590                     __ptext464:
  3544                           
  3545 ;; *************** function _readAvgDistance *****************
  3546 ;; Defined at:
  3547 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  i               2   41[BANK0 ] int 
  3552 ;;  adcOutput      16   21[BANK0 ] unsigned char [16]
  3553 ;;  averageval      2   39[BANK0 ] unsigned int 
  3554 ;;  fullval         2   37[BANK0 ] unsigned int 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  2   15[BANK0 ] unsigned int 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       2       0       0       0
  3565 ;;      Locals:         0      22       0       0       0
  3566 ;;      Temps:          0       4       0       0       0
  3567 ;;      Totals:         0      28       0       0       0
  3568 ;;Total ram usage:       28 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    2
  3571 ;; This function calls:
  3572 ;;		_adc_read_channel
  3573 ;;		___lwdiv
  3574 ;;		_sprintf
  3575 ;;		_lcd_set_cursor
  3576 ;;		i1_lcd_write_control
  3577 ;;		_lcd_write_string
  3578 ;; This function is called by:
  3579 ;;		_isr1
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           psect	text464
  3583                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3584                           	line	10
  3585                           	global	__size_of_readAvgDistance
  3586  0093                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3587                           	
  3588  0590                     _readAvgDistance:	
  3589                           	opt	stack 1
  3590                           ; Regs used in _readAvgDistance: [allreg]
  3591                           	line	11
  3592                           	
  3593  0590                     i1l6496:	
  3594                           ;infrared.c: 11: unsigned int fullval = 0, averageval;
  3595  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  3596  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  3597  0592  01C5               	clrf	(readAvgDistance@fullval)
  3598  0593  01C6               	clrf	(readAvgDistance@fullval+1)
  3599                           	line	12
  3600                           	
  3601  0594                     i1l6498:	
  3602                           ;infrared.c: 12: char adcOutput[16] = "";
  3603  0594  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3604  0595  0084               	movwf	fsr0
  3605  0596  30B0               	movlw	low(readAvgDistance@F1184)
  3606  0597  00B1               	movwf	(??_readAvgDistance+0)+0
  3607  0598  0804               	movf	fsr0,w
  3608  0599  00B2               	movwf	((??_readAvgDistance+0)+0+1)
  3609  059A  3010               	movlw	16
  3610  059B  00B3               	movwf	((??_readAvgDistance+0)+0+2)
  3611  059C                     u313_20:
  3612  059C  0831               	movf	(??_readAvgDistance+0)+0,w
  3613  059D  0084               	movwf	fsr0
  3614  059E  1383               	bcf	status, 7	;select IRP bank1
  3615                           	
  3616  059F  0800               	movf	indf,w
  3617  05A0  00B4               	movwf	((??_readAvgDistance+0)+0+3)
  3618  05A1  0AB1               	incf	(??_readAvgDistance+0)+0,f
  3619  05A2  0832               	movf	((??_readAvgDistance+0)+0+1),w
  3620  05A3  0084               	movwf	fsr0
  3621                           	
  3622  05A4  0834               	movf	((??_readAvgDistance+0)+0+3),w
  3623  05A5  0080               	movwf	indf
  3624  05A6  0AB2               	incf	((??_readAvgDistance+0)+0+1),f
  3625  05A7  0BB3               	decfsz	((??_readAvgDistance+0)+0+2),f
  3626  05A8  2D9C               	goto	u313_20
  3627                           	line	14
  3628                           	
  3629  05A9                     i1l6500:	
  3630                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3631  05A9  01C9               	clrf	(readAvgDistance@i)
  3632  05AA  01CA               	clrf	(readAvgDistance@i+1)
  3633                           	
  3634  05AB                     i1l6502:	
  3635  05AB  084A               	movf	(readAvgDistance@i+1),w
  3636  05AC  3A80               	xorlw	80h
  3637  05AD  00FF               	movwf	btemp+1
  3638  05AE  3080               	movlw	(high(0Ah))^80h
  3639  05AF  027F               	subwf	btemp+1,w
  3640  05B0  1D03               	skipz
  3641  05B1  2DB4               	goto	u314_25
  3642  05B2  300A               	movlw	low(0Ah)
  3643  05B3  0249               	subwf	(readAvgDistance@i),w
  3644  05B4                     u314_25:
  3645                           
  3646  05B4  1C03               	skipc
  3647  05B5  2DB7               	goto	u314_21
  3648  05B6  2DB8               	goto	u314_20
  3649  05B7                     u314_21:
  3650  05B7  2DBA               	goto	i1l6506
  3651  05B8                     u314_20:
  3652  05B8  2DDE               	goto	i1l6512
  3653                           	
  3654  05B9                     i1l6504:	
  3655  05B9  2DDE               	goto	i1l6512
  3656                           	line	15
  3657                           	
  3658  05BA                     i1l2885:	
  3659                           	line	16
  3660                           	
  3661  05BA                     i1l6506:	
  3662                           ;infrared.c: 15: {
  3663                           ;infrared.c: 16: fullval += adc_read_channel(0);
  3664  05BA  3000               	movlw	(0)
  3665  05BB  120A  118A  270F   	fcall	_adc_read_channel
              120A  118A         
  3666  05C0  1283               	bcf	status, 5	;RP0=0, select bank0
  3667  05C1  1303               	bcf	status, 6	;RP1=0, select bank0
  3668  05C2  00B1               	movwf	(??_readAvgDistance+0)+0
  3669  05C3  01B2               	clrf	(??_readAvgDistance+0)+0+1
  3670  05C4  0831               	movf	0+(??_readAvgDistance+0)+0,w
  3671  05C5  07C5               	addwf	(readAvgDistance@fullval),f
  3672  05C6  1803               	skipnc
  3673  05C7  0AC6               	incf	(readAvgDistance@fullval+1),f
  3674  05C8  0832               	movf	1+(??_readAvgDistance+0)+0,w
  3675  05C9  07C6               	addwf	(readAvgDistance@fullval+1),f
  3676                           	line	14
  3677                           	
  3678  05CA                     i1l6508:	
  3679  05CA  3001               	movlw	low(01h)
  3680  05CB  07C9               	addwf	(readAvgDistance@i),f
  3681  05CC  1803               	skipnc
  3682  05CD  0ACA               	incf	(readAvgDistance@i+1),f
  3683  05CE  3000               	movlw	high(01h)
  3684  05CF  07CA               	addwf	(readAvgDistance@i+1),f
  3685                           	
  3686  05D0                     i1l6510:	
  3687  05D0  084A               	movf	(readAvgDistance@i+1),w
  3688  05D1  3A80               	xorlw	80h
  3689  05D2  00FF               	movwf	btemp+1
  3690  05D3  3080               	movlw	(high(0Ah))^80h
  3691  05D4  027F               	subwf	btemp+1,w
  3692  05D5  1D03               	skipz
  3693  05D6  2DD9               	goto	u315_25
  3694  05D7  300A               	movlw	low(0Ah)
  3695  05D8  0249               	subwf	(readAvgDistance@i),w
  3696  05D9                     u315_25:
  3697                           
  3698  05D9  1C03               	skipc
  3699  05DA  2DDC               	goto	u315_21
  3700  05DB  2DDD               	goto	u315_20
  3701  05DC                     u315_21:
  3702  05DC  2DBA               	goto	i1l6506
  3703  05DD                     u315_20:
  3704  05DD  2DDE               	goto	i1l6512
  3705                           	
  3706  05DE                     i1l2886:	
  3707                           	line	19
  3708                           	
  3709  05DE                     i1l6512:	
  3710                           ;infrared.c: 18: }
  3711                           ;infrared.c: 19: averageval = fullval / 10;
  3712  05DE  300A               	movlw	low(0Ah)
  3713  05DF  00F0               	movwf	(?___lwdiv)
  3714  05E0  3000               	movlw	high(0Ah)
  3715  05E1  00F1               	movwf	((?___lwdiv))+1
  3716  05E2  1283               	bcf	status, 5	;RP0=0, select bank0
  3717  05E3  1303               	bcf	status, 6	;RP1=0, select bank0
  3718  05E4  0846               	movf	(readAvgDistance@fullval+1),w
  3719  05E5  01F3               	clrf	1+(?___lwdiv)+02h
  3720  05E6  07F3               	addwf	1+(?___lwdiv)+02h
  3721  05E7  0845               	movf	(readAvgDistance@fullval),w
  3722  05E8  01F2               	clrf	0+(?___lwdiv)+02h
  3723  05E9  07F2               	addwf	0+(?___lwdiv)+02h
  3724                           
  3725  05EA  120A  118A  267D   	fcall	___lwdiv
              120A  118A         
  3726  05EF  0871               	movf	(1+(?___lwdiv)),w
  3727  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3728  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3729  05F2  01C8               	clrf	(readAvgDistance@averageval+1)
  3730  05F3  07C8               	addwf	(readAvgDistance@averageval+1)
  3731  05F4  0870               	movf	(0+(?___lwdiv)),w
  3732  05F5  01C7               	clrf	(readAvgDistance@averageval)
  3733  05F6  07C7               	addwf	(readAvgDistance@averageval)
  3734                           
  3735                           	line	20
  3736                           	
  3737  05F7                     i1l6514:	
  3738                           ;infrared.c: 20: sprintf(adcOutput,"Adc Value: %d", averageval);
  3739  05F7  301A               	movlw	((STR_1-__stringbase))&0ffh
  3740  05F8  00B1               	movwf	(??_readAvgDistance+0)+0
  3741  05F9  0831               	movf	(??_readAvgDistance+0)+0,w
  3742  05FA  00A0               	movwf	(?_sprintf)
  3743  05FB  0848               	movf	(readAvgDistance@averageval+1),w
  3744  05FC  01A2               	clrf	1+(?_sprintf)+01h
  3745  05FD  07A2               	addwf	1+(?_sprintf)+01h
  3746  05FE  0847               	movf	(readAvgDistance@averageval),w
  3747  05FF  01A1               	clrf	0+(?_sprintf)+01h
  3748  0600  07A1               	addwf	0+(?_sprintf)+01h
  3749                           
  3750  0601  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3751  0602  120A  118A  2395   	fcall	_sprintf
              120A  118A         
  3752                           	line	21
  3753                           	
  3754  0607                     i1l6516:	
  3755                           ;infrared.c: 21: lcd_set_cursor(0x00);
  3756  0607  3000               	movlw	(0)
  3757  0608  120A  158A  2786   	fcall	_lcd_set_cursor
              120A  118A         
  3758                           	line	22
  3759                           	
  3760  060D                     i1l6518:	
  3761                           ;infrared.c: 22: lcd_write_control(0b00000001);
  3762  060D  3001               	movlw	(01h)
  3763  060E  120A  158A  27A2   	fcall	i1_lcd_write_control
              120A  118A         
  3764                           	line	23
  3765                           	
  3766  0613                     i1l6520:	
  3767                           ;infrared.c: 23: lcd_write_string(adcOutput);
  3768  0613  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3769  0614  120A  158A  27CA   	fcall	_lcd_write_string
              120A  118A         
  3770                           	line	24
  3771                           	
  3772  0619                     i1l6522:	
  3773                           ;infrared.c: 24: return averageval;
  3774  0619  1283               	bcf	status, 5	;RP0=0, select bank0
  3775  061A  1303               	bcf	status, 6	;RP1=0, select bank0
  3776  061B  0848               	movf	(readAvgDistance@averageval+1),w
  3777  061C  01B0               	clrf	(?_readAvgDistance+1)
  3778  061D  07B0               	addwf	(?_readAvgDistance+1)
  3779  061E  0847               	movf	(readAvgDistance@averageval),w
  3780  061F  01AF               	clrf	(?_readAvgDistance)
  3781  0620  07AF               	addwf	(?_readAvgDistance)
  3782                           
  3783  0621  2E22               	goto	i1l2887
  3784                           	
  3785  0622                     i1l6524:	
  3786                           	line	25
  3787                           	
  3788  0622                     i1l2887:	
  3789  0622  0008               	return
  3790                           	opt stack 0
  3791                           GLOBAL	__end_of_readAvgDistance
  3792  0623                     	__end_of_readAvgDistance:
  3793 ;; =============== function _readAvgDistance ends ============
  3794                           
  3795                           	signat	_readAvgDistance,90
  3796                           	global	_lcd_write_string
  3797                           psect	text465,local,class=CODE,delta=2
  3798                           global __ptext465
  3799  0FCA                     __ptext465:
  3800                           
  3801 ;; *************** function _lcd_write_string *****************
  3802 ;; Defined at:
  3803 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  s               1    wreg     PTR unsigned char 
  3806 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), readAvgDistance@adcOutput(16), 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  s               1    4[COMMON] PTR unsigned char 
  3809 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), readAvgDistance@adcOutput(16), 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;		None               void
  3812 ;; Registers used:
  3813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       0       0       0       0
  3820 ;;      Locals:         1       0       0       0       0
  3821 ;;      Temps:          1       0       0       0       0
  3822 ;;      Totals:         2       0       0       0       0
  3823 ;;Total ram usage:        2 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    1
  3826 ;; This function calls:
  3827 ;;		_lcd_write_data
  3828 ;; This function is called by:
  3829 ;;		_readAvgDistance
  3830 ;;		_ADCconvert
  3831 ;;		_readDistance
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           psect	text465
  3835                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3836                           	line	48
  3837                           	global	__size_of_lcd_write_string
  3838  001A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3839                           	
  3840  0FCA                     _lcd_write_string:	
  3841                           	opt	stack 1
  3842                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3843                           ;lcd_write_string@s stored from wreg
  3844  0FCA  00F4               	movwf	(lcd_write_string@s)
  3845                           	line	50
  3846                           	
  3847  0FCB                     i1l6398:	
  3848                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3849  0FCB  2FDA               	goto	i1l6404
  3850                           	
  3851  0FCC                     i1l1403:	
  3852                           	
  3853  0FCC                     i1l6400:	
  3854  0FCC  0874               	movf	(lcd_write_string@s),w
  3855  0FCD  0084               	movwf	fsr0
  3856  0FCE  1383               	bcf	status, 7	;select IRP bank0
  3857  0FCF  0800               	movf	indf,w
  3858  0FD0  120A  158A  278F   	fcall	_lcd_write_data
              120A  158A         
  3859                           	
  3860  0FD5                     i1l6402:	
  3861  0FD5  3001               	movlw	(01h)
  3862  0FD6  00F3               	movwf	(??_lcd_write_string+0)+0
  3863  0FD7  0873               	movf	(??_lcd_write_string+0)+0,w
  3864  0FD8  07F4               	addwf	(lcd_write_string@s),f
  3865  0FD9  2FDA               	goto	i1l6404
  3866                           	
  3867  0FDA                     i1l1402:	
  3868                           	
  3869  0FDA                     i1l6404:	
  3870  0FDA  0874               	movf	(lcd_write_string@s),w
  3871  0FDB  0084               	movwf	fsr0
  3872  0FDC  1383               	bcf	status, 7	;select IRP bank0
  3873  0FDD  0880               	movf	indf,f
  3874  0FDE  1D03               	skipz
  3875  0FDF  2FE1               	goto	u292_21
  3876  0FE0  2FE2               	goto	u292_20
  3877  0FE1                     u292_21:
  3878  0FE1  2FCC               	goto	i1l6400
  3879  0FE2                     u292_20:
  3880  0FE2  2FE3               	goto	i1l1405
  3881                           	
  3882  0FE3                     i1l1404:	
  3883                           	line	51
  3884                           	
  3885  0FE3                     i1l1405:	
  3886  0FE3  0008               	return
  3887                           	opt stack 0
  3888                           GLOBAL	__end_of_lcd_write_string
  3889  0FE4                     	__end_of_lcd_write_string:
  3890 ;; =============== function _lcd_write_string ends ============
  3891                           
  3892                           	signat	_lcd_write_string,4216
  3893                           	global	_lcd_set_cursor
  3894                           psect	text466,local,class=CODE,delta=2
  3895                           global __ptext466
  3896  0F86                     __ptext466:
  3897                           
  3898 ;; *************** function _lcd_set_cursor *****************
  3899 ;; Defined at:
  3900 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  address         1    wreg     unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  address         1    3[COMMON] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         0       0       0       0       0
  3915 ;;      Locals:         1       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0
  3917 ;;      Totals:         1       0       0       0       0
  3918 ;;Total ram usage:        1 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    1
  3921 ;; This function calls:
  3922 ;;		i1_lcd_write_control
  3923 ;; This function is called by:
  3924 ;;		_readAvgDistance
  3925 ;;		_ADCconvert
  3926 ;;		_readDistance
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           psect	text466
  3930                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3931                           	line	42
  3932                           	global	__size_of_lcd_set_cursor
  3933  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3934                           	
  3935  0F86                     _lcd_set_cursor:	
  3936                           	opt	stack 1
  3937                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3938                           ;lcd_set_cursor@address stored from wreg
  3939  0F86  00F3               	movwf	(lcd_set_cursor@address)
  3940                           	line	43
  3941                           	
  3942  0F87                     i1l6394:	
  3943                           ;lcd.c: 43: address |= 0b10000000;
  3944  0F87  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3945                           	line	44
  3946                           	
  3947  0F88                     i1l6396:	
  3948                           ;lcd.c: 44: lcd_write_control(address);
  3949  0F88  0873               	movf	(lcd_set_cursor@address),w
  3950  0F89  120A  158A  27A2   	fcall	i1_lcd_write_control
              120A  158A         
  3951                           	line	45
  3952                           	
  3953  0F8E                     i1l1399:	
  3954  0F8E  0008               	return
  3955                           	opt stack 0
  3956                           GLOBAL	__end_of_lcd_set_cursor
  3957  0F8F                     	__end_of_lcd_set_cursor:
  3958 ;; =============== function _lcd_set_cursor ends ============
  3959                           
  3960                           	signat	_lcd_set_cursor,4216
  3961                           	global	i1_lcd_write_control
  3962                           psect	text467,local,class=CODE,delta=2
  3963                           global __ptext467
  3964  0FA2                     __ptext467:
  3965                           
  3966 ;; *************** function i1_lcd_write_control *****************
  3967 ;; Defined at:
  3968 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  lcd_write_co    1    wreg     unsigned char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         0       0       0       0       0
  3983 ;;      Locals:         1       0       0       0       0
  3984 ;;      Temps:          2       0       0       0       0
  3985 ;;      Totals:         3       0       0       0       0
  3986 ;;Total ram usage:        3 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_lcd_set_cursor
  3992 ;;		_readAvgDistance
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           psect	text467
  3996                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3997                           	line	18
  3998                           	global	__size_ofi1_lcd_write_control
  3999  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  4000                           	
  4001  0FA2                     i1_lcd_write_control:	
  4002                           	opt	stack 1
  4003                           ; Regs used in i1_lcd_write_control: [wreg]
  4004                           ;i1lcd_write_control@databyte stored from wreg
  4005  0FA2  00F2               	movwf	(i1lcd_write_control@databyte)
  4006                           	line	19
  4007                           	
  4008  0FA3                     i1l6732:	
  4009                           ;lcd.c: 19: RE2 = 0;
  4010  0FA3  1283               	bcf	status, 5	;RP0=0, select bank0
  4011  0FA4  1303               	bcf	status, 6	;RP1=0, select bank0
  4012  0FA5  1109               	bcf	(74/8),(74)&7
  4013                           	line	20
  4014                           ;lcd.c: 20: RE1 = 0;
  4015  0FA6  1089               	bcf	(73/8),(73)&7
  4016                           	line	21
  4017                           ;lcd.c: 21: RE0 = 0;
  4018  0FA7  1009               	bcf	(72/8),(72)&7
  4019                           	line	22
  4020                           	
  4021  0FA8                     i1l6734:	
  4022                           ;lcd.c: 22: PORTD = databyte;
  4023  0FA8  0872               	movf	(i1lcd_write_control@databyte),w
  4024  0FA9  0088               	movwf	(8)	;volatile
  4025                           	line	23
  4026                           	
  4027  0FAA                     i1l6736:	
  4028                           ;lcd.c: 23: RE2 = 1;
  4029  0FAA  1509               	bsf	(74/8),(74)&7
  4030                           	line	24
  4031                           	
  4032  0FAB                     i1l6738:	
  4033                           ;lcd.c: 24: RE2 = 0;
  4034  0FAB  1109               	bcf	(74/8),(74)&7
  4035                           	line	25
  4036                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  4037                           	opt asmopt_off
  4038  0FAC  300D               movlw	13
  4039  0FAD  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  4040  0FAE  30FB               	movlw	251
  4041  0FAF  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  4042  0FB0                     u374_27:
  4043  0FB0  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  4044  0FB1  2FB0               	goto	u374_27
  4045  0FB2  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  4046  0FB3  2FB0               	goto	u374_27
  4047  0FB4  2FB5               	nop2
  4048                           opt asmopt_on
  4049                           
  4050                           	line	26
  4051                           	
  4052  0FB5                     i1l1393:	
  4053  0FB5  0008               	return
  4054                           	opt stack 0
  4055                           GLOBAL	__end_ofi1_lcd_write_control
  4056  0FB6                     	__end_ofi1_lcd_write_control:
  4057 ;; =============== function i1_lcd_write_control ends ============
  4058                           
  4059                           	signat	i1_lcd_write_control,88
  4060                           	global	_sprintf
  4061                           psect	text468,local,class=CODE,delta=2
  4062                           global __ptext468
  4063  0395                     __ptext468:
  4064                           
  4065 ;; *************** function _sprintf *****************
  4066 ;; Defined at:
  4067 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  sp              1    wreg     PTR unsigned char 
  4070 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), readAvgDistance@adcOutput(16), 
  4071 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  4072 ;;		 -> STR_3(15), STR_2(14), STR_1(14), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  4075 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), readAvgDistance@adcOutput(16), 
  4076 ;;  _val            4    9[BANK0 ] struct .
  4077 ;;  c               1   14[BANK0 ] char 
  4078 ;;  prec            1    8[BANK0 ] char 
  4079 ;;  flag            1    7[BANK0 ] unsigned char 
  4080 ;;  ap              1    6[BANK0 ] PTR void [1]
  4081 ;;		 -> ?_sprintf(2), 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  2    0[BANK0 ] int 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         0       3       0       0       0
  4092 ;;      Locals:         0       9       0       0       0
  4093 ;;      Temps:          0       3       0       0       0
  4094 ;;      Totals:         0      15       0       0       0
  4095 ;;Total ram usage:       15 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    1
  4098 ;; This function calls:
  4099 ;;		___lwdiv
  4100 ;;		___lwmod
  4101 ;; This function is called by:
  4102 ;;		_readAvgDistance
  4103 ;;		_ADCconvert
  4104 ;;		_readDistance
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           psect	text468
  4108                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4109                           	line	488
  4110                           	global	__size_of_sprintf
  4111  00FE                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4112                           	
  4113  0395                     _sprintf:	
  4114                           	opt	stack 1
  4115                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4116                           ;sprintf@sp stored from wreg
  4117                           	line	537
  4118  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  4119  0396  1303               	bcf	status, 6	;RP1=0, select bank0
  4120  0397  00AD               	movwf	(sprintf@sp)
  4121                           	
  4122  0398                     i1l6608:	
  4123  0398  3021               	movlw	(?_sprintf+01h)&0ffh
  4124  0399  00A3               	movwf	(??_sprintf+0)+0
  4125  039A  0823               	movf	(??_sprintf+0)+0,w
  4126  039B  00A6               	movwf	(sprintf@ap)
  4127                           	line	540
  4128  039C  2C79               	goto	i1l6660
  4129                           	
  4130  039D                     i1l3649:	
  4131                           	line	542
  4132                           	
  4133  039D                     i1l6610:	
  4134  039D  082E               	movf	(sprintf@c),w
  4135  039E  3A25               	xorlw	025h
  4136  039F  1903               	skipnz
  4137  03A0  2BA2               	goto	u341_21
  4138  03A1  2BA3               	goto	u341_20
  4139  03A2                     u341_21:
  4140  03A2  2BAF               	goto	i1l3650
  4141  03A3                     u341_20:
  4142                           	line	545
  4143                           	
  4144  03A3                     i1l6612:	
  4145  03A3  082E               	movf	(sprintf@c),w
  4146  03A4  00A3               	movwf	(??_sprintf+0)+0
  4147  03A5  082D               	movf	(sprintf@sp),w
  4148  03A6  0084               	movwf	fsr0
  4149  03A7  0823               	movf	(??_sprintf+0)+0,w
  4150  03A8  1383               	bcf	status, 7	;select IRP bank0
  4151  03A9  0080               	movwf	indf
  4152                           	
  4153  03AA                     i1l6614:	
  4154  03AA  3001               	movlw	(01h)
  4155  03AB  00A3               	movwf	(??_sprintf+0)+0
  4156  03AC  0823               	movf	(??_sprintf+0)+0,w
  4157  03AD  07AD               	addwf	(sprintf@sp),f
  4158                           	line	546
  4159  03AE  2C79               	goto	i1l6660
  4160                           	line	547
  4161                           	
  4162  03AF                     i1l3650:	
  4163                           	line	552
  4164  03AF  01A7               	clrf	(sprintf@flag)
  4165                           	line	638
  4166  03B0  2BB6               	goto	i1l6618
  4167                           	line	640
  4168                           	
  4169  03B1                     i1l3652:	
  4170                           	line	641
  4171  03B1  2C8D               	goto	i1l6662
  4172                           	line	700
  4173                           	
  4174  03B2                     i1l3654:	
  4175  03B2  2BCB               	goto	i1l6620
  4176                           	line	701
  4177                           	
  4178  03B3                     i1l3655:	
  4179                           	line	702
  4180  03B3  2BCB               	goto	i1l6620
  4181                           	line	805
  4182                           	
  4183  03B4                     i1l3657:	
  4184                           	line	816
  4185  03B4  2C79               	goto	i1l6660
  4186                           	line	825
  4187                           	
  4188  03B5                     i1l6616:	
  4189  03B5  2BCB               	goto	i1l6620
  4190                           	line	638
  4191                           	
  4192  03B6                     i1l3651:	
  4193                           	
  4194  03B6                     i1l6618:	
  4195  03B6  3001               	movlw	01h
  4196  03B7  07A0               	addwf	(sprintf@f),f
  4197  03B8  30FF               	movlw	-01h
  4198  03B9  0720               	addwf	(sprintf@f),w
  4199  03BA  0084               	movwf	fsr0
  4200  03BB  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4201  03C0  00AE               	movwf	(sprintf@c)
  4202                           	; Switch size 1, requested type "space"
  4203                           ; Number of cases is 3, Range of values is 0 to 105
  4204                           ; switch strategies available:
  4205                           ; Name         Instructions Cycles
  4206                           ; simple_byte           10     6 (average)
  4207                           ; jumptable            260     6 (fixed)
  4208                           ; rangetable           110     6 (fixed)
  4209                           ; spacedrange          218     9 (fixed)
  4210                           ; locatedrange         106     3 (fixed)
  4211                           ;	Chosen strategy is simple_byte
  4212                           
  4213                           	opt asmopt_off
  4214  03C1  3A00               	xorlw	0^0	; case 0
  4215  03C2  1903               	skipnz
  4216  03C3  2C8D               	goto	i1l6662
  4217  03C4  3A64               	xorlw	100^0	; case 100
  4218  03C5  1903               	skipnz
  4219  03C6  2BCB               	goto	i1l6620
  4220  03C7  3A0D               	xorlw	105^100	; case 105
  4221  03C8  1903               	skipnz
  4222  03C9  2BCB               	goto	i1l6620
  4223  03CA  2C79               	goto	i1l6660
  4224                           	opt asmopt_on
  4225                           
  4226                           	line	825
  4227                           	
  4228  03CB                     i1l3656:	
  4229                           	line	1254
  4230                           	
  4231  03CB                     i1l6620:	
  4232  03CB  0826               	movf	(sprintf@ap),w
  4233  03CC  0084               	movwf	fsr0
  4234  03CD  1383               	bcf	status, 7	;select IRP bank0
  4235  03CE  0800               	movf	indf,w
  4236  03CF  00A9               	movwf	(sprintf@_val)
  4237  03D0  0A84               	incf	fsr0,f
  4238  03D1  0800               	movf	indf,w
  4239  03D2  00AA               	movwf	(sprintf@_val+1)
  4240                           	
  4241  03D3                     i1l6622:	
  4242  03D3  3002               	movlw	(02h)
  4243  03D4  00A3               	movwf	(??_sprintf+0)+0
  4244  03D5  0823               	movf	(??_sprintf+0)+0,w
  4245  03D6  07A6               	addwf	(sprintf@ap),f
  4246                           	line	1256
  4247                           	
  4248  03D7                     i1l6624:	
  4249  03D7  1FAA               	btfss	(sprintf@_val+1),7
  4250  03D8  2BDA               	goto	u342_21
  4251  03D9  2BDB               	goto	u342_20
  4252  03DA                     u342_21:
  4253  03DA  2BE5               	goto	i1l6630
  4254  03DB                     u342_20:
  4255                           	line	1257
  4256                           	
  4257  03DB                     i1l6626:	
  4258  03DB  3003               	movlw	(03h)
  4259  03DC  00A3               	movwf	(??_sprintf+0)+0
  4260  03DD  0823               	movf	(??_sprintf+0)+0,w
  4261  03DE  04A7               	iorwf	(sprintf@flag),f
  4262                           	line	1258
  4263                           	
  4264  03DF                     i1l6628:	
  4265  03DF  09A9               	comf	(sprintf@_val),f
  4266  03E0  09AA               	comf	(sprintf@_val+1),f
  4267  03E1  0AA9               	incf	(sprintf@_val),f
  4268  03E2  1903               	skipnz
  4269  03E3  0AAA               	incf	(sprintf@_val+1),f
  4270  03E4  2BE5               	goto	i1l6630
  4271                           	line	1259
  4272                           	
  4273  03E5                     i1l3658:	
  4274                           	line	1300
  4275                           	
  4276  03E5                     i1l6630:	
  4277  03E5  01AE               	clrf	(sprintf@c)
  4278  03E6  1403               	bsf	status,0
  4279  03E7  0DAE               	rlf	(sprintf@c),f
  4280                           	
  4281  03E8                     i1l6632:	
  4282  03E8  082E               	movf	(sprintf@c),w
  4283  03E9  3A05               	xorlw	05h
  4284  03EA  1D03               	skipz
  4285  03EB  2BED               	goto	u343_21
  4286  03EC  2BEE               	goto	u343_20
  4287  03ED                     u343_21:
  4288  03ED  2BF0               	goto	i1l6636
  4289  03EE                     u343_20:
  4290  03EE  2C18               	goto	i1l6644
  4291                           	
  4292  03EF                     i1l6634:	
  4293  03EF  2C18               	goto	i1l6644
  4294                           	line	1301
  4295                           	
  4296  03F0                     i1l3659:	
  4297                           	
  4298  03F0                     i1l6636:	
  4299  03F0  082E               	movf	(sprintf@c),w
  4300  03F1  00A3               	movwf	(??_sprintf+0)+0
  4301  03F2  0723               	addwf	(??_sprintf+0)+0,w
  4302  03F3  3E01               	addlw	low((_dpowers-__stringbase))
  4303  03F4  0084               	movwf	fsr0
  4304  03F5  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4305  03FA  00A4               	movwf	(??_sprintf+1)+0
  4306  03FB  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4307  0400  00A5               	movwf	(??_sprintf+1)+0+1
  4308  0401  0825               	movf	1+(??_sprintf+1)+0,w
  4309  0402  022A               	subwf	(sprintf@_val+1),w
  4310  0403  1D03               	skipz
  4311  0404  2C07               	goto	u344_25
  4312  0405  0824               	movf	0+(??_sprintf+1)+0,w
  4313  0406  0229               	subwf	(sprintf@_val),w
  4314  0407                     u344_25:
  4315  0407  1803               	skipnc
  4316  0408  2C0A               	goto	u344_21
  4317  0409  2C0B               	goto	u344_20
  4318  040A                     u344_21:
  4319  040A  2C0D               	goto	i1l6640
  4320  040B                     u344_20:
  4321  040B  2C18               	goto	i1l6644
  4322                           	line	1302
  4323                           	
  4324  040C                     i1l6638:	
  4325  040C  2C18               	goto	i1l6644
  4326                           	
  4327  040D                     i1l3661:	
  4328                           	line	1300
  4329                           	
  4330  040D                     i1l6640:	
  4331  040D  3001               	movlw	(01h)
  4332  040E  00A3               	movwf	(??_sprintf+0)+0
  4333  040F  0823               	movf	(??_sprintf+0)+0,w
  4334  0410  07AE               	addwf	(sprintf@c),f
  4335                           	
  4336  0411                     i1l6642:	
  4337  0411  082E               	movf	(sprintf@c),w
  4338  0412  3A05               	xorlw	05h
  4339  0413  1D03               	skipz
  4340  0414  2C16               	goto	u345_21
  4341  0415  2C17               	goto	u345_20
  4342  0416                     u345_21:
  4343  0416  2BF0               	goto	i1l6636
  4344  0417                     u345_20:
  4345  0417  2C18               	goto	i1l6644
  4346                           	
  4347  0418                     i1l3660:	
  4348                           	line	1433
  4349                           	
  4350  0418                     i1l6644:	
  4351  0418  0827               	movf	(sprintf@flag),w
  4352  0419  3903               	andlw	03h
  4353  041A  1903               	btfsc	status,2
  4354  041B  2C1D               	goto	u346_21
  4355  041C  2C1E               	goto	u346_20
  4356  041D                     u346_21:
  4357  041D  2C2A               	goto	i1l6650
  4358  041E                     u346_20:
  4359                           	line	1434
  4360                           	
  4361  041E                     i1l6646:	
  4362  041E  302D               	movlw	(02Dh)
  4363  041F  00A3               	movwf	(??_sprintf+0)+0
  4364  0420  082D               	movf	(sprintf@sp),w
  4365  0421  0084               	movwf	fsr0
  4366  0422  0823               	movf	(??_sprintf+0)+0,w
  4367  0423  1383               	bcf	status, 7	;select IRP bank0
  4368  0424  0080               	movwf	indf
  4369                           	
  4370  0425                     i1l6648:	
  4371  0425  3001               	movlw	(01h)
  4372  0426  00A3               	movwf	(??_sprintf+0)+0
  4373  0427  0823               	movf	(??_sprintf+0)+0,w
  4374  0428  07AD               	addwf	(sprintf@sp),f
  4375  0429  2C2A               	goto	i1l6650
  4376                           	
  4377  042A                     i1l3662:	
  4378                           	line	1467
  4379                           	
  4380  042A                     i1l6650:	
  4381  042A  082E               	movf	(sprintf@c),w
  4382  042B  00A3               	movwf	(??_sprintf+0)+0
  4383  042C  0823               	movf	(??_sprintf+0)+0,w
  4384  042D  00A8               	movwf	(sprintf@prec)
  4385                           	line	1469
  4386  042E  2C6D               	goto	i1l6658
  4387                           	
  4388  042F                     i1l3664:	
  4389                           	line	1484
  4390                           	
  4391  042F                     i1l6652:	
  4392  042F  300A               	movlw	low(0Ah)
  4393  0430  00F8               	movwf	(?___lwmod)
  4394  0431  3000               	movlw	high(0Ah)
  4395  0432  00F9               	movwf	((?___lwmod))+1
  4396  0433  0828               	movf	(sprintf@prec),w
  4397  0434  00A3               	movwf	(??_sprintf+0)+0
  4398  0435  0723               	addwf	(??_sprintf+0)+0,w
  4399  0436  3E01               	addlw	low((_dpowers-__stringbase))
  4400  0437  0084               	movwf	fsr0
  4401  0438  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4402  043D  00F0               	movwf	(?___lwdiv)
  4403  043E  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4404  0443  00F1               	movwf	(?___lwdiv+1)
  4405  0444  082A               	movf	(sprintf@_val+1),w
  4406  0445  01F3               	clrf	1+(?___lwdiv)+02h
  4407  0446  07F3               	addwf	1+(?___lwdiv)+02h
  4408  0447  0829               	movf	(sprintf@_val),w
  4409  0448  01F2               	clrf	0+(?___lwdiv)+02h
  4410  0449  07F2               	addwf	0+(?___lwdiv)+02h
  4411                           
  4412  044A  120A  118A  267D   	fcall	___lwdiv
              120A  118A         
  4413  044F  0871               	movf	(1+(?___lwdiv)),w
  4414  0450  01FB               	clrf	1+(?___lwmod)+02h
  4415  0451  07FB               	addwf	1+(?___lwmod)+02h
  4416  0452  0870               	movf	(0+(?___lwdiv)),w
  4417  0453  01FA               	clrf	0+(?___lwmod)+02h
  4418  0454  07FA               	addwf	0+(?___lwmod)+02h
  4419                           
  4420  0455  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  4421  045A  0878               	movf	(0+(?___lwmod)),w
  4422  045B  3E30               	addlw	030h
  4423  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  4424  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  4425  045E  00A4               	movwf	(??_sprintf+1)+0
  4426  045F  0824               	movf	(??_sprintf+1)+0,w
  4427  0460  00AE               	movwf	(sprintf@c)
  4428                           	line	1516
  4429                           	
  4430  0461                     i1l6654:	
  4431  0461  082E               	movf	(sprintf@c),w
  4432  0462  00A3               	movwf	(??_sprintf+0)+0
  4433  0463  082D               	movf	(sprintf@sp),w
  4434  0464  0084               	movwf	fsr0
  4435  0465  0823               	movf	(??_sprintf+0)+0,w
  4436  0466  1383               	bcf	status, 7	;select IRP bank0
  4437  0467  0080               	movwf	indf
  4438                           	
  4439  0468                     i1l6656:	
  4440  0468  3001               	movlw	(01h)
  4441  0469  00A3               	movwf	(??_sprintf+0)+0
  4442  046A  0823               	movf	(??_sprintf+0)+0,w
  4443  046B  07AD               	addwf	(sprintf@sp),f
  4444  046C  2C6D               	goto	i1l6658
  4445                           	line	1517
  4446                           	
  4447  046D                     i1l3663:	
  4448                           	line	1469
  4449                           	
  4450  046D                     i1l6658:	
  4451  046D  30FF               	movlw	(-1)
  4452  046E  00A3               	movwf	(??_sprintf+0)+0
  4453  046F  0823               	movf	(??_sprintf+0)+0,w
  4454  0470  07A8               	addwf	(sprintf@prec),f
  4455  0471  0828               	movf	((sprintf@prec)),w
  4456  0472  3AFF               	xorlw	-1
  4457  0473  1D03               	skipz
  4458  0474  2C76               	goto	u347_21
  4459  0475  2C77               	goto	u347_20
  4460  0476                     u347_21:
  4461  0476  2C2F               	goto	i1l6652
  4462  0477                     u347_20:
  4463  0477  2C79               	goto	i1l6660
  4464                           	
  4465  0478                     i1l3665:	
  4466  0478  2C79               	goto	i1l6660
  4467                           	line	1525
  4468                           	
  4469  0479                     i1l3648:	
  4470                           	line	540
  4471                           	
  4472  0479                     i1l6660:	
  4473  0479  3001               	movlw	01h
  4474  047A  07A0               	addwf	(sprintf@f),f
  4475  047B  30FF               	movlw	-01h
  4476  047C  0720               	addwf	(sprintf@f),w
  4477  047D  0084               	movwf	fsr0
  4478  047E  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4479  0483  00A3               	movwf	(??_sprintf+0)+0
  4480  0484  0823               	movf	(??_sprintf+0)+0,w
  4481  0485  00AE               	movwf	(sprintf@c)
  4482  0486  08AE               	movf	((sprintf@c)),f
  4483  0487  1D03               	skipz
  4484  0488  2C8A               	goto	u348_21
  4485  0489  2C8B               	goto	u348_20
  4486  048A                     u348_21:
  4487  048A  2B9D               	goto	i1l6610
  4488  048B                     u348_20:
  4489  048B  2C8D               	goto	i1l6662
  4490                           	
  4491  048C                     i1l3666:	
  4492  048C  2C8D               	goto	i1l6662
  4493                           	line	1527
  4494                           	
  4495  048D                     i1l3653:	
  4496                           	line	1530
  4497                           	
  4498  048D                     i1l6662:	
  4499  048D  082D               	movf	(sprintf@sp),w
  4500  048E  0084               	movwf	fsr0
  4501  048F  1383               	bcf	status, 7	;select IRP bank0
  4502  0490  0180               	clrf	indf
  4503  0491  2C92               	goto	i1l3667
  4504                           	line	1532
  4505                           	
  4506  0492                     i1l6664:	
  4507                           	line	1533
  4508                           ;	Return value of _sprintf is never used
  4509                           	
  4510  0492                     i1l3667:	
  4511  0492  0008               	return
  4512                           	opt stack 0
  4513                           GLOBAL	__end_of_sprintf
  4514  0493                     	__end_of_sprintf:
  4515 ;; =============== function _sprintf ends ============
  4516                           
  4517                           	signat	_sprintf,4698
  4518                           	global	_lcd_write_data
  4519                           psect	text469,local,class=CODE,delta=2
  4520                           global __ptext469
  4521  0F8F                     __ptext469:
  4522                           
  4523 ;; *************** function _lcd_write_data *****************
  4524 ;; Defined at:
  4525 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  databyte        1    wreg     unsigned char 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  databyte        1    2[COMMON] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;		None               void
  4532 ;; Registers used:
  4533 ;;		wreg
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         0       0       0       0       0
  4540 ;;      Locals:         1       0       0       0       0
  4541 ;;      Temps:          2       0       0       0       0
  4542 ;;      Totals:         3       0       0       0       0
  4543 ;;Total ram usage:        3 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_lcd_write_string
  4549 ;;		_lcd_write_2_digit_bcd
  4550 ;;		_lcd_write_3_digit_bcd
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           psect	text469
  4554                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4555                           	line	30
  4556                           	global	__size_of_lcd_write_data
  4557  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  4558                           	
  4559  0F8F                     _lcd_write_data:	
  4560                           	opt	stack 1
  4561                           ; Regs used in _lcd_write_data: [wreg]
  4562                           ;lcd_write_data@databyte stored from wreg
  4563  0F8F  00F2               	movwf	(lcd_write_data@databyte)
  4564                           	line	31
  4565                           	
  4566  0F90                     i1l6386:	
  4567                           ;lcd.c: 31: RE2 = 0;
  4568  0F90  1283               	bcf	status, 5	;RP0=0, select bank0
  4569  0F91  1303               	bcf	status, 6	;RP1=0, select bank0
  4570  0F92  1109               	bcf	(74/8),(74)&7
  4571                           	line	32
  4572                           ;lcd.c: 32: RE1 = 0;
  4573  0F93  1089               	bcf	(73/8),(73)&7
  4574                           	line	33
  4575                           ;lcd.c: 33: RE0 = 1;
  4576  0F94  1409               	bsf	(72/8),(72)&7
  4577                           	line	34
  4578                           	
  4579  0F95                     i1l6388:	
  4580                           ;lcd.c: 34: PORTD = databyte;
  4581  0F95  0872               	movf	(lcd_write_data@databyte),w
  4582  0F96  0088               	movwf	(8)	;volatile
  4583                           	line	35
  4584                           	
  4585  0F97                     i1l6390:	
  4586                           ;lcd.c: 35: RE2 = 1;
  4587  0F97  1509               	bsf	(74/8),(74)&7
  4588                           	line	36
  4589                           	
  4590  0F98                     i1l6392:	
  4591                           ;lcd.c: 36: RE2 = 0;
  4592  0F98  1109               	bcf	(74/8),(74)&7
  4593                           	line	37
  4594                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  4595                           	opt asmopt_off
  4596  0F99  3007               movlw	7
  4597  0F9A  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  4598  0F9B  307D               	movlw	125
  4599  0F9C  00F0               movwf	((??_lcd_write_data+0)+0),f
  4600  0F9D                     u375_27:
  4601  0F9D  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  4602  0F9E  2F9D               	goto	u375_27
  4603  0F9F  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  4604  0FA0  2F9D               	goto	u375_27
  4605                           opt asmopt_on
  4606                           
  4607                           	line	38
  4608                           	
  4609  0FA1                     i1l1396:	
  4610  0FA1  0008               	return
  4611                           	opt stack 0
  4612                           GLOBAL	__end_of_lcd_write_data
  4613  0FA2                     	__end_of_lcd_write_data:
  4614 ;; =============== function _lcd_write_data ends ============
  4615                           
  4616                           	signat	_lcd_write_data,4216
  4617                           	global	_adc_read_channel
  4618                           psect	text470,local,class=CODE,delta=2
  4619                           global __ptext470
  4620  070F                     __ptext470:
  4621                           
  4622 ;; *************** function _adc_read_channel *****************
  4623 ;; Defined at:
  4624 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  channel         1    wreg     unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  channel         1    7[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      unsigned char 
  4631 ;; Registers used:
  4632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4638 ;;      Params:         0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0
  4640 ;;      Temps:          1       0       0       0       0
  4641 ;;      Totals:         2       0       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    1
  4645 ;; This function calls:
  4646 ;;		_adc_read
  4647 ;; This function is called by:
  4648 ;;		_readAvgDistance
  4649 ;;		_readDistance
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           psect	text470
  4653                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  4654                           	line	5
  4655                           	global	__size_of_adc_read_channel
  4656  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  4657                           	
  4658  070F                     _adc_read_channel:	
  4659                           	opt	stack 1
  4660                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4661                           ;adc_read_channel@channel stored from wreg
  4662  070F  00F7               	movwf	(adc_read_channel@channel)
  4663                           	line	6
  4664                           	
  4665  0710                     i1l6360:	
  4666                           ;adc.c: 6: switch(channel)
  4667  0710  2F33               	goto	i1l6368
  4668                           	line	8
  4669                           ;adc.c: 7: {
  4670                           ;adc.c: 8: case 0:
  4671                           	
  4672  0711                     i1l690:	
  4673                           	line	9
  4674                           ;adc.c: 9: CHS0 = 0;
  4675  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  4676  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  4677  0713  119F               	bcf	(251/8),(251)&7
  4678                           	line	10
  4679                           ;adc.c: 10: CHS1 = 0;
  4680  0714  121F               	bcf	(252/8),(252)&7
  4681                           	line	11
  4682                           ;adc.c: 11: CHS2 = 0;
  4683  0715  129F               	bcf	(253/8),(253)&7
  4684                           	line	12
  4685                           ;adc.c: 12: break;
  4686  0716  2F44               	goto	i1l6370
  4687                           	line	13
  4688                           ;adc.c: 13: case 1:
  4689                           	
  4690  0717                     i1l692:	
  4691                           	line	14
  4692                           ;adc.c: 14: CHS0 = 1;
  4693  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  4694  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  4695  0719  159F               	bsf	(251/8),(251)&7
  4696                           	line	15
  4697                           ;adc.c: 15: CHS1 = 0;
  4698  071A  121F               	bcf	(252/8),(252)&7
  4699                           	line	16
  4700                           ;adc.c: 16: CHS2 = 0;
  4701  071B  129F               	bcf	(253/8),(253)&7
  4702                           	line	17
  4703                           ;adc.c: 17: break;
  4704  071C  2F44               	goto	i1l6370
  4705                           	line	18
  4706                           ;adc.c: 18: case 2:
  4707                           	
  4708  071D                     i1l693:	
  4709                           	line	19
  4710                           ;adc.c: 19: CHS0 = 0;
  4711  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  4712  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  4713  071F  119F               	bcf	(251/8),(251)&7
  4714                           	line	20
  4715                           ;adc.c: 20: CHS1 = 1;
  4716  0720  161F               	bsf	(252/8),(252)&7
  4717                           	line	21
  4718                           ;adc.c: 21: CHS2 = 0;
  4719  0721  129F               	bcf	(253/8),(253)&7
  4720                           	line	22
  4721                           ;adc.c: 22: break;
  4722  0722  2F44               	goto	i1l6370
  4723                           	line	23
  4724                           ;adc.c: 23: case 3:
  4725                           	
  4726  0723                     i1l694:	
  4727                           	line	24
  4728                           ;adc.c: 24: CHS0 = 1;
  4729  0723  1283               	bcf	status, 5	;RP0=0, select bank0
  4730  0724  1303               	bcf	status, 6	;RP1=0, select bank0
  4731  0725  159F               	bsf	(251/8),(251)&7
  4732                           	line	25
  4733                           ;adc.c: 25: CHS1 = 1;
  4734  0726  161F               	bsf	(252/8),(252)&7
  4735                           	line	26
  4736                           ;adc.c: 26: CHS2 = 0;
  4737  0727  129F               	bcf	(253/8),(253)&7
  4738                           	line	27
  4739                           ;adc.c: 27: break;
  4740  0728  2F44               	goto	i1l6370
  4741                           	line	28
  4742                           ;adc.c: 28: case 4:
  4743                           	
  4744  0729                     i1l695:	
  4745                           	line	29
  4746                           ;adc.c: 29: CHS0 = 0;
  4747  0729  1283               	bcf	status, 5	;RP0=0, select bank0
  4748  072A  1303               	bcf	status, 6	;RP1=0, select bank0
  4749  072B  119F               	bcf	(251/8),(251)&7
  4750                           	line	30
  4751                           ;adc.c: 30: CHS1 = 0;
  4752  072C  121F               	bcf	(252/8),(252)&7
  4753                           	line	31
  4754                           ;adc.c: 31: CHS2 = 1;
  4755  072D  169F               	bsf	(253/8),(253)&7
  4756                           	line	32
  4757                           ;adc.c: 32: break;
  4758  072E  2F44               	goto	i1l6370
  4759                           	line	35
  4760                           ;adc.c: 35: default:
  4761                           	
  4762  072F                     i1l696:	
  4763                           	line	36
  4764                           	
  4765  072F                     i1l6362:	
  4766                           ;adc.c: 36: return 0;
  4767  072F  3000               	movlw	(0)
  4768  0730  2F4F               	goto	i1l697
  4769                           	
  4770  0731                     i1l6364:	
  4771  0731  2F4F               	goto	i1l697
  4772                           	line	37
  4773                           	
  4774  0732                     i1l6366:	
  4775                           ;adc.c: 37: }
  4776  0732  2F44               	goto	i1l6370
  4777                           	line	6
  4778                           	
  4779  0733                     i1l689:	
  4780                           	
  4781  0733                     i1l6368:	
  4782  0733  0877               	movf	(adc_read_channel@channel),w
  4783                           	; Switch size 1, requested type "space"
  4784                           ; Number of cases is 5, Range of values is 0 to 4
  4785                           ; switch strategies available:
  4786                           ; Name         Instructions Cycles
  4787                           ; simple_byte           16     9 (average)
  4788                           ; direct_byte           23     8 (fixed)
  4789                           ; jumptable            260     6 (fixed)
  4790                           ; rangetable             9     6 (fixed)
  4791                           ; spacedrange           16     9 (fixed)
  4792                           ; locatedrange           5     3 (fixed)
  4793                           ;	Chosen strategy is simple_byte
  4794                           
  4795                           	opt asmopt_off
  4796  0734  3A00               	xorlw	0^0	; case 0
  4797  0735  1903               	skipnz
  4798  0736  2F11               	goto	i1l690
  4799  0737  3A01               	xorlw	1^0	; case 1
  4800  0738  1903               	skipnz
  4801  0739  2F17               	goto	i1l692
  4802  073A  3A03               	xorlw	2^1	; case 2
  4803  073B  1903               	skipnz
  4804  073C  2F1D               	goto	i1l693
  4805  073D  3A01               	xorlw	3^2	; case 3
  4806  073E  1903               	skipnz
  4807  073F  2F23               	goto	i1l694
  4808  0740  3A07               	xorlw	4^3	; case 4
  4809  0741  1903               	skipnz
  4810  0742  2F29               	goto	i1l695
  4811  0743  2F2F               	goto	i1l6362
  4812                           	opt asmopt_on
  4813                           
  4814                           	line	37
  4815                           	
  4816  0744                     i1l691:	
  4817                           	line	39
  4818                           	
  4819  0744                     i1l6370:	
  4820                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  4821                           	opt asmopt_off
  4822  0744  3053               movlw	83
  4823  0745  00F6               movwf	(??_adc_read_channel+0)+0,f
  4824  0746                     u376_27:
  4825  0746  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  4826  0747  2F46               	goto	u376_27
  4827                           opt asmopt_on
  4828                           
  4829                           	line	41
  4830                           	
  4831  0748                     i1l6372:	
  4832                           ;adc.c: 41: return adc_read();
  4833  0748  120A  118A  27A8   	fcall	_adc_read
              120A  118A         
  4834  074D  0870               	movf	(0+(?_adc_read)),w
  4835  074E  2F4F               	goto	i1l697
  4836                           	
  4837  074F                     i1l6374:	
  4838                           	line	43
  4839                           	
  4840  074F                     i1l697:	
  4841  074F  0008               	return
  4842                           	opt stack 0
  4843                           GLOBAL	__end_of_adc_read_channel
  4844  0750                     	__end_of_adc_read_channel:
  4845 ;; =============== function _adc_read_channel ends ============
  4846                           
  4847                           	signat	_adc_read_channel,4217
  4848                           	global	___lwmod
  4849                           psect	text471,local,class=CODE,delta=2
  4850                           global __ptext471
  4851  06CB                     __ptext471:
  4852                           
  4853 ;; *************** function ___lwmod *****************
  4854 ;; Defined at:
  4855 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  divisor         2    8[COMMON] unsigned int 
  4858 ;;  dividend        2   10[COMMON] unsigned int 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  counter         1   13[COMMON] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    8[COMMON] unsigned int 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         4       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0
  4872 ;;      Temps:          1       0       0       0       0
  4873 ;;      Totals:         6       0       0       0       0
  4874 ;;Total ram usage:        6 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_isr1
  4880 ;;		_ADCconvert
  4881 ;;		_sprintf
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           psect	text471
  4885                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4886                           	line	5
  4887                           	global	__size_of___lwmod
  4888  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4889                           	
  4890  06CB                     ___lwmod:	
  4891                           	opt	stack 1
  4892                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4893                           	line	8
  4894                           	
  4895  06CB                     i1l6710:	
  4896  06CB  0879               	movf	(___lwmod@divisor+1),w
  4897  06CC  0478               	iorwf	(___lwmod@divisor),w
  4898  06CD  1903               	skipnz
  4899  06CE  2ED0               	goto	u357_21
  4900  06CF  2ED1               	goto	u357_20
  4901  06D0                     u357_21:
  4902  06D0  2F07               	goto	i1l6728
  4903  06D1                     u357_20:
  4904                           	line	9
  4905                           	
  4906  06D1                     i1l6712:	
  4907  06D1  01FD               	clrf	(___lwmod@counter)
  4908  06D2  1403               	bsf	status,0
  4909  06D3  0DFD               	rlf	(___lwmod@counter),f
  4910                           	line	10
  4911  06D4  2EE1               	goto	i1l6718
  4912                           	
  4913  06D5                     i1l4368:	
  4914                           	line	11
  4915                           	
  4916  06D5                     i1l6714:	
  4917  06D5  3001               	movlw	01h
  4918                           	
  4919  06D6                     u358_25:
  4920  06D6  1003               	clrc
  4921  06D7  0DF8               	rlf	(___lwmod@divisor),f
  4922  06D8  0DF9               	rlf	(___lwmod@divisor+1),f
  4923  06D9  3EFF               	addlw	-1
  4924  06DA  1D03               	skipz
  4925  06DB  2ED6               	goto	u358_25
  4926                           	line	12
  4927                           	
  4928  06DC                     i1l6716:	
  4929  06DC  3001               	movlw	(01h)
  4930  06DD  00FC               	movwf	(??___lwmod+0)+0
  4931  06DE  087C               	movf	(??___lwmod+0)+0,w
  4932  06DF  07FD               	addwf	(___lwmod@counter),f
  4933  06E0  2EE1               	goto	i1l6718
  4934                           	line	13
  4935                           	
  4936  06E1                     i1l4367:	
  4937                           	line	10
  4938                           	
  4939  06E1                     i1l6718:	
  4940  06E1  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  4941  06E2  2EE4               	goto	u359_21
  4942  06E3  2EE5               	goto	u359_20
  4943  06E4                     u359_21:
  4944  06E4  2ED5               	goto	i1l6714
  4945  06E5                     u359_20:
  4946  06E5  2EE7               	goto	i1l6720
  4947                           	
  4948  06E6                     i1l4369:	
  4949  06E6  2EE7               	goto	i1l6720
  4950                           	line	14
  4951                           	
  4952  06E7                     i1l4370:	
  4953                           	line	15
  4954                           	
  4955  06E7                     i1l6720:	
  4956  06E7  0879               	movf	(___lwmod@divisor+1),w
  4957  06E8  027B               	subwf	(___lwmod@dividend+1),w
  4958  06E9  1D03               	skipz
  4959  06EA  2EED               	goto	u360_25
  4960  06EB  0878               	movf	(___lwmod@divisor),w
  4961  06EC  027A               	subwf	(___lwmod@dividend),w
  4962  06ED                     u360_25:
  4963  06ED  1C03               	skipc
  4964  06EE  2EF0               	goto	u360_21
  4965  06EF  2EF1               	goto	u360_20
  4966  06F0                     u360_21:
  4967  06F0  2EF8               	goto	i1l6724
  4968  06F1                     u360_20:
  4969                           	line	16
  4970                           	
  4971  06F1                     i1l6722:	
  4972  06F1  0878               	movf	(___lwmod@divisor),w
  4973  06F2  02FA               	subwf	(___lwmod@dividend),f
  4974  06F3  0879               	movf	(___lwmod@divisor+1),w
  4975  06F4  1C03               	skipc
  4976  06F5  03FB               	decf	(___lwmod@dividend+1),f
  4977  06F6  02FB               	subwf	(___lwmod@dividend+1),f
  4978  06F7  2EF8               	goto	i1l6724
  4979                           	
  4980  06F8                     i1l4371:	
  4981                           	line	17
  4982                           	
  4983  06F8                     i1l6724:	
  4984  06F8  3001               	movlw	01h
  4985                           	
  4986  06F9                     u361_25:
  4987  06F9  1003               	clrc
  4988  06FA  0CF9               	rrf	(___lwmod@divisor+1),f
  4989  06FB  0CF8               	rrf	(___lwmod@divisor),f
  4990  06FC  3EFF               	addlw	-1
  4991  06FD  1D03               	skipz
  4992  06FE  2EF9               	goto	u361_25
  4993                           	line	18
  4994                           	
  4995  06FF                     i1l6726:	
  4996  06FF  3001               	movlw	low(01h)
  4997  0700  02FD               	subwf	(___lwmod@counter),f
  4998  0701  1D03               	btfss	status,2
  4999  0702  2F04               	goto	u362_21
  5000  0703  2F05               	goto	u362_20
  5001  0704                     u362_21:
  5002  0704  2EE7               	goto	i1l6720
  5003  0705                     u362_20:
  5004  0705  2F07               	goto	i1l6728
  5005                           	
  5006  0706                     i1l4372:	
  5007  0706  2F07               	goto	i1l6728
  5008                           	line	19
  5009                           	
  5010  0707                     i1l4366:	
  5011                           	line	20
  5012                           	
  5013  0707                     i1l6728:	
  5014  0707  087B               	movf	(___lwmod@dividend+1),w
  5015  0708  01F9               	clrf	(?___lwmod+1)
  5016  0709  07F9               	addwf	(?___lwmod+1)
  5017  070A  087A               	movf	(___lwmod@dividend),w
  5018  070B  01F8               	clrf	(?___lwmod)
  5019  070C  07F8               	addwf	(?___lwmod)
  5020                           
  5021  070D  2F0E               	goto	i1l4373
  5022                           	
  5023  070E                     i1l6730:	
  5024                           	line	21
  5025                           	
  5026  070E                     i1l4373:	
  5027  070E  0008               	return
  5028                           	opt stack 0
  5029                           GLOBAL	__end_of___lwmod
  5030  070F                     	__end_of___lwmod:
  5031 ;; =============== function ___lwmod ends ============
  5032                           
  5033                           	signat	___lwmod,8314
  5034                           	global	___lwdiv
  5035                           psect	text472,local,class=CODE,delta=2
  5036                           global __ptext472
  5037  067D                     __ptext472:
  5038                           
  5039 ;; *************** function ___lwdiv *****************
  5040 ;; Defined at:
  5041 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  divisor         2    0[COMMON] unsigned int 
  5044 ;;  dividend        2    2[COMMON] unsigned int 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  quotient        2    5[COMMON] unsigned int 
  5047 ;;  counter         1    7[COMMON] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  2    0[COMMON] unsigned int 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         4       0       0       0       0
  5058 ;;      Locals:         3       0       0       0       0
  5059 ;;      Temps:          1       0       0       0       0
  5060 ;;      Totals:         8       0       0       0       0
  5061 ;;Total ram usage:        8 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_readAvgDistance
  5067 ;;		_sprintf
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           psect	text472
  5071                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5072                           	line	5
  5073                           	global	__size_of___lwdiv
  5074  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5075                           	
  5076  067D                     ___lwdiv:	
  5077                           	opt	stack 1
  5078                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5079                           	line	9
  5080                           	
  5081  067D                     i1l6684:	
  5082  067D  01F5               	clrf	(___lwdiv@quotient)
  5083  067E  01F6               	clrf	(___lwdiv@quotient+1)
  5084                           	line	10
  5085                           	
  5086  067F                     i1l6686:	
  5087  067F  0871               	movf	(___lwdiv@divisor+1),w
  5088  0680  0470               	iorwf	(___lwdiv@divisor),w
  5089  0681  1903               	skipnz
  5090  0682  2E84               	goto	u350_21
  5091  0683  2E85               	goto	u350_20
  5092  0684                     u350_21:
  5093  0684  2EC3               	goto	i1l6706
  5094  0685                     u350_20:
  5095                           	line	11
  5096                           	
  5097  0685                     i1l6688:	
  5098  0685  01F7               	clrf	(___lwdiv@counter)
  5099  0686  1403               	bsf	status,0
  5100  0687  0DF7               	rlf	(___lwdiv@counter),f
  5101                           	line	12
  5102  0688  2E95               	goto	i1l6694
  5103                           	
  5104  0689                     i1l4358:	
  5105                           	line	13
  5106                           	
  5107  0689                     i1l6690:	
  5108  0689  3001               	movlw	01h
  5109                           	
  5110  068A                     u351_25:
  5111  068A  1003               	clrc
  5112  068B  0DF0               	rlf	(___lwdiv@divisor),f
  5113  068C  0DF1               	rlf	(___lwdiv@divisor+1),f
  5114  068D  3EFF               	addlw	-1
  5115  068E  1D03               	skipz
  5116  068F  2E8A               	goto	u351_25
  5117                           	line	14
  5118                           	
  5119  0690                     i1l6692:	
  5120  0690  3001               	movlw	(01h)
  5121  0691  00F4               	movwf	(??___lwdiv+0)+0
  5122  0692  0874               	movf	(??___lwdiv+0)+0,w
  5123  0693  07F7               	addwf	(___lwdiv@counter),f
  5124  0694  2E95               	goto	i1l6694
  5125                           	line	15
  5126                           	
  5127  0695                     i1l4357:	
  5128                           	line	12
  5129                           	
  5130  0695                     i1l6694:	
  5131  0695  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  5132  0696  2E98               	goto	u352_21
  5133  0697  2E99               	goto	u352_20
  5134  0698                     u352_21:
  5135  0698  2E89               	goto	i1l6690
  5136  0699                     u352_20:
  5137  0699  2E9B               	goto	i1l6696
  5138                           	
  5139  069A                     i1l4359:	
  5140  069A  2E9B               	goto	i1l6696
  5141                           	line	16
  5142                           	
  5143  069B                     i1l4360:	
  5144                           	line	17
  5145                           	
  5146  069B                     i1l6696:	
  5147  069B  3001               	movlw	01h
  5148                           	
  5149  069C                     u353_25:
  5150  069C  1003               	clrc
  5151  069D  0DF5               	rlf	(___lwdiv@quotient),f
  5152  069E  0DF6               	rlf	(___lwdiv@quotient+1),f
  5153  069F  3EFF               	addlw	-1
  5154  06A0  1D03               	skipz
  5155  06A1  2E9C               	goto	u353_25
  5156                           	line	18
  5157  06A2  0871               	movf	(___lwdiv@divisor+1),w
  5158  06A3  0273               	subwf	(___lwdiv@dividend+1),w
  5159  06A4  1D03               	skipz
  5160  06A5  2EA8               	goto	u354_25
  5161  06A6  0870               	movf	(___lwdiv@divisor),w
  5162  06A7  0272               	subwf	(___lwdiv@dividend),w
  5163  06A8                     u354_25:
  5164  06A8  1C03               	skipc
  5165  06A9  2EAB               	goto	u354_21
  5166  06AA  2EAC               	goto	u354_20
  5167  06AB                     u354_21:
  5168  06AB  2EB4               	goto	i1l6702
  5169  06AC                     u354_20:
  5170                           	line	19
  5171                           	
  5172  06AC                     i1l6698:	
  5173  06AC  0870               	movf	(___lwdiv@divisor),w
  5174  06AD  02F2               	subwf	(___lwdiv@dividend),f
  5175  06AE  0871               	movf	(___lwdiv@divisor+1),w
  5176  06AF  1C03               	skipc
  5177  06B0  03F3               	decf	(___lwdiv@dividend+1),f
  5178  06B1  02F3               	subwf	(___lwdiv@dividend+1),f
  5179                           	line	20
  5180                           	
  5181  06B2                     i1l6700:	
  5182  06B2  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5183  06B3  2EB4               	goto	i1l6702
  5184                           	line	21
  5185                           	
  5186  06B4                     i1l4361:	
  5187                           	line	22
  5188                           	
  5189  06B4                     i1l6702:	
  5190  06B4  3001               	movlw	01h
  5191                           	
  5192  06B5                     u355_25:
  5193  06B5  1003               	clrc
  5194  06B6  0CF1               	rrf	(___lwdiv@divisor+1),f
  5195  06B7  0CF0               	rrf	(___lwdiv@divisor),f
  5196  06B8  3EFF               	addlw	-1
  5197  06B9  1D03               	skipz
  5198  06BA  2EB5               	goto	u355_25
  5199                           	line	23
  5200                           	
  5201  06BB                     i1l6704:	
  5202  06BB  3001               	movlw	low(01h)
  5203  06BC  02F7               	subwf	(___lwdiv@counter),f
  5204  06BD  1D03               	btfss	status,2
  5205  06BE  2EC0               	goto	u356_21
  5206  06BF  2EC1               	goto	u356_20
  5207  06C0                     u356_21:
  5208  06C0  2E9B               	goto	i1l6696
  5209  06C1                     u356_20:
  5210  06C1  2EC3               	goto	i1l6706
  5211                           	
  5212  06C2                     i1l4362:	
  5213  06C2  2EC3               	goto	i1l6706
  5214                           	line	24
  5215                           	
  5216  06C3                     i1l4356:	
  5217                           	line	25
  5218                           	
  5219  06C3                     i1l6706:	
  5220  06C3  0876               	movf	(___lwdiv@quotient+1),w
  5221  06C4  01F1               	clrf	(?___lwdiv+1)
  5222  06C5  07F1               	addwf	(?___lwdiv+1)
  5223  06C6  0875               	movf	(___lwdiv@quotient),w
  5224  06C7  01F0               	clrf	(?___lwdiv)
  5225  06C8  07F0               	addwf	(?___lwdiv)
  5226                           
  5227  06C9  2ECA               	goto	i1l4363
  5228                           	
  5229  06CA                     i1l6708:	
  5230                           	line	26
  5231                           	
  5232  06CA                     i1l4363:	
  5233  06CA  0008               	return
  5234                           	opt stack 0
  5235                           GLOBAL	__end_of___lwdiv
  5236  06CB                     	__end_of___lwdiv:
  5237 ;; =============== function ___lwdiv ends ============
  5238                           
  5239                           	signat	___lwdiv,8314
  5240                           	global	_adc_read
  5241                           psect	text473,local,class=CODE,delta=2
  5242                           global __ptext473
  5243  07A8                     __ptext473:
  5244                           
  5245 ;; *************** function _adc_read *****************
  5246 ;; Defined at:
  5247 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  2    0[COMMON] unsigned int 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5261 ;;      Params:         2       0       0       0       0
  5262 ;;      Locals:         2       0       0       0       0
  5263 ;;      Temps:          2       0       0       0       0
  5264 ;;      Totals:         6       0       0       0       0
  5265 ;;Total ram usage:        6 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_adc_read_channel
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           psect	text473
  5274                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5275                           	line	61
  5276                           	global	__size_of_adc_read
  5277  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  5278                           	
  5279  07A8                     _adc_read:	
  5280                           	opt	stack 1
  5281                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5282                           	line	64
  5283                           	
  5284  07A8                     i1l6376:	
  5285                           ;adc.c: 62: volatile unsigned int adc_value;
  5286                           ;adc.c: 64: ADRESH = 0;
  5287  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
  5288  07A9  1303               	bcf	status, 6	;RP1=0, select bank0
  5289  07AA  019E               	clrf	(30)	;volatile
  5290                           	line	66
  5291                           	
  5292  07AB                     i1l6378:	
  5293                           ;adc.c: 66: GO = 1;
  5294  07AB  151F               	bsf	(250/8),(250)&7
  5295                           	line	67
  5296                           ;adc.c: 67: while(GO) continue;
  5297  07AC  2FAD               	goto	i1l703
  5298                           	
  5299  07AD                     i1l704:	
  5300                           	
  5301  07AD                     i1l703:	
  5302  07AD  191F               	btfsc	(250/8),(250)&7
  5303  07AE  2FB0               	goto	u290_21
  5304  07AF  2FB1               	goto	u290_20
  5305  07B0                     u290_21:
  5306  07B0  2FAD               	goto	i1l703
  5307  07B1                     u290_20:
  5308                           	
  5309  07B1                     i1l705:	
  5310                           	line	68
  5311                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  5312  07B1  0000               nop ;#
  5313                           	line	69
  5314                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  5315  07B2  0000               nop ;#
  5316                           	line	70
  5317                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  5318  07B3  0000               nop ;#
  5319                           psect	text473
  5320                           	line	73
  5321                           	
  5322  07B4                     i1l6380:	
  5323                           ;adc.c: 73: adc_value = ADRESH;
  5324  07B4  1283               	bcf	status, 5	;RP0=0, select bank0
  5325  07B5  1303               	bcf	status, 6	;RP1=0, select bank0
  5326  07B6  081E               	movf	(30),w	;volatile
  5327  07B7  00F2               	movwf	(??_adc_read+0)+0
  5328  07B8  01F3               	clrf	(??_adc_read+0)+0+1
  5329  07B9  0872               	movf	0+(??_adc_read+0)+0,w
  5330  07BA  00F4               	movwf	(adc_read@adc_value)	;volatile
  5331  07BB  0873               	movf	1+(??_adc_read+0)+0,w
  5332  07BC  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  5333                           	line	74
  5334                           ;adc.c: 74: adc_value <<= 1;
  5335  07BD  3001               	movlw	01h
  5336                           	
  5337  07BE                     u291_25:
  5338  07BE  1003               	clrc
  5339  07BF  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  5340  07C0  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  5341  07C1  3EFF               	addlw	-1
  5342  07C2  1D03               	skipz
  5343  07C3  2FBE               	goto	u291_25
  5344                           	line	75
  5345                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  5346  07C4  1683               	bsf	status, 5	;RP0=1, select bank1
  5347  07C5  1303               	bcf	status, 6	;RP1=0, select bank1
  5348  07C6  081E               	movf	(158)^080h,w	;volatile
  5349                           	line	78
  5350                           	
  5351  07C7                     i1l6382:	
  5352                           ;adc.c: 78: return (adc_value);
  5353  07C7  0875               	movf	(adc_read@adc_value+1),w	;volatile
  5354  07C8  01F1               	clrf	(?_adc_read+1)
  5355  07C9  07F1               	addwf	(?_adc_read+1)
  5356  07CA  0874               	movf	(adc_read@adc_value),w	;volatile
  5357  07CB  01F0               	clrf	(?_adc_read)
  5358  07CC  07F0               	addwf	(?_adc_read)
  5359                           
  5360  07CD  2FCE               	goto	i1l706
  5361                           	
  5362  07CE                     i1l6384:	
  5363                           	line	79
  5364                           	
  5365  07CE                     i1l706:	
  5366  07CE  0008               	return
  5367                           	opt stack 0
  5368                           GLOBAL	__end_of_adc_read
  5369  07CF                     	__end_of_adc_read:
  5370 ;; =============== function _adc_read ends ============
  5371                           
  5372                           	signat	_adc_read,90
  5373                           psect	text474,local,class=CODE,delta=2
  5374                           global __ptext474
  5375  0000                     __ptext474:
  5376                           	global	btemp
  5377  007E                     	btemp set 07Eh
  5378                           
  5379                           	DABS	1,126,2	;btemp
  5380                           	global	wtemp0
  5381  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 13 15:05:20 2015

   __end_of_lcd_write_control 1000                             pc 0002                            _GO 00FA  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
                         l700 0FC9                           _GIE 005F                           _RB0 0030  
                         _RB1 0031                           _RB2 0032                           _RB3 0033  
                         _RB4 0034                           _RB5 0035                           _RE0 0048  
                         _RE1 0049                           _RE2 004A                           fsr0 0004  
                         indf 0000               ?_lcd_set_cursor 0070                          l1423 07A7  
                        l2180 063C                          l2181 064D                          l2182 065E  
                        l2183 0678                          l2176 07FF                          l2184 0679  
                        l1393 0FFF                          l2185 067A                          l2186 067A  
                        l2179 0632                          l3611 0274                          l3612 0390  
                        l3620 02A7                          l3613 02F6                          l3621 02B2  
                        l3630 0309                          l3614 02D9                          l3622 02BD  
                        l3631 0314                          l3623 02C8                          l3615 027B  
                        l3632 031F                          l3616 02F5                          l3624 02D3  
                        l3625 037B                          l3633 032A                          l3617 0286  
                        l3626 0379                          l3634 0335                          l3618 0291  
                        l3627 035C                          l3635 0340                          l3619 029C  
                        l3636 034B                          l3628 02FE                          l3629 0378  
                        l3637 0356                          l3638 037A                          l3639 0394  
                        l6800 032A                          l6810 035B                          l6802 0335  
                        l6740 0FB6                          l6804 0340                          l6812 035C  
                        l6820 077D                          l6742 0FB9                          l6750 0FE7  
                        l6806 034B                          l6814 037B                          l6830 0789  
                        l6822 0781                          l6744 0FBD                          l6752 0FEC  
                        l6816 0386                          l6808 0356                          l6760 0273  
                        l6832 078F                          l6824 0784                          l6840 07EC  
                        l6746 0FC1                          l6754 0FF2                          l6770 0291  
                        l6818 0390                          l6762 0274                          l6834 0795  
                        l6826 0785                          l6850 07FE                          l6842 07F6  
                        l6748 0FC5                          l6756 0FF3                          l6780 02C8  
                        l6772 029C                          l6764 027A                          l6836 079B  
                        l6828 0788                          l6844 07FA                          l6860 0639  
                        l6852 0623                          l6790 02FD                          l6782 02D3  
                        l6774 02A7                          l6766 027B                          l6758 026D  
                        l6838 07A1                          l6846 07FB                          l6870 0653  
                        l6862 063C                          l6854 0628                          l6792 02FE  
                        l6784 02D8                          l6776 02B2                          l6768 0286  
                        l6848 07FD                          l6880 0671                          l6872 0654  
                        l6864 0640                          l6856 0632                          l6794 0309  
                        l6778 02BD                          l6786 02D9                          l6874 065E  
                        l6866 0641                          l6858 0638                          l6796 0314  
                        l6788 02F6                          l6876 0664                          l6868 064D  
                        l6798 031F                          l6878 0665                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 076F  
                        STR_3 0760                          u3700 0664                          u3701 0663  
                        u3630 0272                          u3631 0271                          u3640 0279  
                        u3641 0278                          u3650 02FC                          u3651 02FB  
                        u3660 038F                          u3661 038E                          u3717 0381  
                        u3670 0638                          u3727 0FFA                          u3671 0637  
                        u3680 0640                          u3737 0FC7                          u3681 063F  
                        u3690 0653                          u3691 0652                          _TMR0 0001  
                        _WREN 0C62           __size_of_ADCconvert 0255        __end_of_lcd_write_data 0FA2  
                        _isr1 0493                          _main 0623                          _init 07EC  
                        btemp 007E                          start 0012  __size_ofi1_lcd_write_control 0014  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         _CARRY 0018               __end_of___lwdiv 06CB  
             __end_of___lwmod 070F                         i1l703 07AD                         i1l704 07AD  
                       i1l705 07B1                         i1l706 07CE                         i1l690 0711  
                       i1l691 0744                         i1l692 0717                         i1l693 071D  
                       i1l694 0723                         i1l695 0729                         i1l696 072F  
                       i1l689 0733                         i1l697 074F                         _PORTA 0005  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089        lcd_write_data@databyte 0072  
                       pclath 000A               ?_lcd_write_data 0070             ?_adc_read_channel 0070  
                       status 0003                         wtemp0 007E               __end_of_sprintf 0493  
          ??_adc_read_channel 0076              ?_readAvgDistance 002F    __size_of_lcd_write_control 001C  
                __end_of_isr1 0590                  __end_of_main 067D                  __end_of_init 0800  
             rotate@direction 00D1        readAvgDistance@fullval 0045                        ??_isr1 0063  
                      ??_main 00D5                        ??_init 00D4                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
            __end_of_adc_read 07CF                        i1l1402 0FDA                        i1l1403 0FCC  
                      i1l1404 0FE3                        i1l1405 0FE3                        i1l2160 0521  
                      i1l2161 0539                        i1l2170 0581                        i1l2162 0538  
                      i1l2171 0580                        i1l2163 053B                        i1l2156 0585  
                      i1l2172 0584                        i1l2164 0551                        i1l2165 0550  
                      i1l2157 04BA                        i1l2173 0585                        i1l2166 0553  
                      i1l2158 04D5                        i1l2167 0569                        i1l2159 0502  
                      i1l2168 0568                        i1l1393 0FB5                        i1l2169 056B  
                      i1l1396 0FA1                        i1l1399 0F8E                        i1l2900 024C  
                      i1l2901 0092                        i1l2902 024B                        i1l2910 0247  
                      i1l2911 016E                        i1l2903 00BE                        i1l4360 069B  
                      i1l2904 024A                        i1l2912 0246                        i1l2920 0242  
                      i1l4361 06B4                        i1l2921 0241                        i1l2913 019A  
                      i1l2905 00EA                        i1l4362 06C2                        i1l4370 06E7  
                      i1l3650 03AF                        i1l2922 0269                        i1l2906 0249  
                      i1l2914 0245                        i1l4363 06CA                        i1l4371 06F8  
                      i1l3651 03B6                        i1l2915 01C6                        i1l2907 0116  
                      i1l4356 06C3                        i1l4372 0706                        i1l3660 0418  
                      i1l3652 03B1                        i1l2908 0248                        i1l2916 0244  
                      i1l4357 0695                        i1l4373 070E                        i1l3653 048D  
                      i1l3661 040D                        i1l2917 01F2                        i1l2909 0142  
                      i1l4358 0689                        i1l4366 0707                        i1l3662 042A  
                      i1l3654 03B2                        i1l2918 0243                        i1l4359 069A  
                      i1l4367 06E1                        i1l3663 046D                        i1l3655 03B3  
                      i1l2919 021E                        i1l4368 06D5                        i1l3648 0479  
                      i1l3664 042F                        i1l3656 03CB                        i1l6400 0FCC  
                      u300_20 0519                        i1l4369 06E6                        i1l3665 0478  
                      i1l3657 03B4                        i1l3649 039D                        u300_21 0518  
                      i1l3666 048C                        i1l3658 03E5                        i1l6402 0FD5  
                      i1l3667 0492                        i1l3659 03F0                        i1l6404 0FDA  
                      i1l6500 05A9                        i1l2885 05BA                        i1l2886 05DE  
                      i1l6510 05D0                        i1l6502 05AB                        i1l2887 0622  
                      i1l6360 0710                        i1l6520 0613                        i1l6504 05B9  
                      i1l6512 05DE                        i1l6600 0227                        u301_20 0527  
                      i1l6440 04A1                        i1l6432 0493                        i1l2897 003A  
                      u301_21 0526                        i1l6362 072F                        i1l6370 0744  
                      i1l6610 039D                        i1l6522 0619                        i1l6514 05F7  
                      i1l6506 05BA                        i1l2898 024D                        i1l6602 024D  
                      i1l6530 0035                        i1l6450 04EC                        i1l6442 04B6  
                      i1l6434 0497                        i1l2899 0066                        i1l6380 07B4  
                      i1l6700 06B2                        i1l6372 0748                        i1l6364 0731  
                      i1l6620 03CB                        i1l6612 03A3                        i1l6524 0622  
                      i1l6516 0607                        i1l6508 05CA                        i1l6604 025D  
                      i1l6540 006F                        i1l6532 003A                        i1l6460 051E  
                      i1l6452 04FE                        i1l6444 04BA                        i1l6436 0498  
                      i1l6382 07C7                        i1l6702 06B4                        i1l6710 06CB  
                      i1l6374 074F                        i1l6366 0732                        i1l6390 0F97  
                      i1l6630 03E5                        i1l6622 03D3                        i1l6614 03AA  
                      i1l6518 060D                        i1l6606 0263                        i1l6550 00BE  
                      i1l6542 0078                        i1l6534 0043                        i1l6526 0015  
                      i1l6470 0535                        i1l6462 0521                        i1l6454 0502  
                      i1l6446 04D1                        i1l6438 04A0                        i1l6384 07CE  
                      i1l6376 07A8                        i1l6704 06BB                        i1l6720 06E7  
                      i1l6712 06D1                        i1l6368 0733                        i1l6392 0F98  
                      i1l6640 040D                        i1l6632 03E8                        i1l6624 03D7  
                      i1l6616 03B5                        i1l6608 0398                        i1l6560 00FC  
                      i1l6552 00C7                        i1l6544 0092                        i1l6536 004C  
                      i1l6528 002C                        u310_20 056F                        i1l6480 0557  
                      i1l6472 053F                        u302_20 0531                        i1l6464 0527  
                      i1l6456 0519                        i1l6448 04D5                        u310_21 056E  
                      u302_21 0530                        i1l6378 07AB                        i1l6706 06C3  
                      i1l6730 070E                        i1l6722 06F1                        i1l6714 06D5  
                      i1l6386 0F90                        i1l6650 042A                        i1l6642 0411  
                      i1l6634 03EF                        i1l6626 03DB                        i1l6618 03B6  
                      i1l6394 0F87                        i1l6570 014B                        i1l6562 0116  
                      i1l6554 00D0                        i1l6546 009B                        i1l6538 0066  
                      i1l6490 0573                        i1l6482 055B                        i1l6474 0543  
                      i1l6466 052B                        i1l6458 051C                        i1l6708 06CA  
                      i1l6724 06F8                        i1l6716 06DC                        i1l6388 0F95  
                      i1l6652 042F                        i1l6644 0418                        i1l6636 03F0  
                      i1l6628 03DF                        i1l6660 0479                        i1l6732 0FA3  
                      i1l6396 0F88                        i1l6580 019A                        i1l6572 0154  
                      i1l6564 011F                        i1l6556 00EA                        i1l6548 00A4  
                      i1l6492 0579                        i1l6484 0561                        i1l6476 0549  
                      i1l6468 0531                        i1l6726 06FF                        i1l6718 06E1  
                      i1l6654 0461                        i1l6646 041E                        i1l6638 040C  
                      i1l6662 048D                        i1l6734 0FA8                        i1l6398 0FCB  
                      i1l6590 01D8                        i1l6582 01A3                        i1l6574 016E  
                      i1l6566 0128                        i1l6558 00F3                        i1l6494 057D  
                      i1l6486 0565                        i1l6478 054D                        i1l6728 0707  
                      i1l6664 0492                        i1l6656 0468                        i1l6648 0425  
                      i1l6736 0FAA                        i1l6496 0590                        i1l6592 01F2  
                      i1l6584 01AC                        i1l6576 0177                        i1l6568 0142  
                      u311_20 0579                        i1l6488 056F                        u303_20 0535  
                      u311_21 0578                        u303_21 0534                        i1l6690 0689  
                      i1l6658 046D                        i1l6738 0FAB                        i1l6498 0594  
                      i1l6594 01FB                        i1l6586 01C6                        i1l6578 0180  
                      i1l6692 0690                        i1l6684 067D                        i1l6596 0204  
                      i1l6588 01CF                        i1l6694 0695                        i1l6686 067F  
                      i1l6598 021E                        i1l6696 069B                        i1l6688 0685  
                      u320_20 006F                        u312_20 057D                        u304_20 053F  
                      u320_21 006E                        u312_21 057C                        u304_21 053E  
                      i1l6698 06AC                        u313_20 059C                        u321_20 0078  
                      u305_20 0549                        u321_21 0077                        u305_21 0548  
                      u314_20 05B8                        u330_20 014B                        u322_20 009B  
                      u306_20 054D                        u314_21 05B7                        u330_21 014A  
                      u322_21 009A                        u306_21 054C                        u314_25 05B4  
                      u315_20 05DD                        u331_20 0154                        u323_20 00A4  
                      u307_20 0557                        u315_21 05DC                        u331_21 0153  
                      u323_21 00A3                        u307_21 0556                        u315_25 05D9  
                      u340_20 0227                        u332_20 0177                        u324_20 00C7  
                      u316_20 001F                        u308_20 0561                        u340_21 0226  
                      u332_21 0176                        u324_21 00C6                        u308_21 0560  
                      u341_20 03A3                        u333_20 0180                        u325_20 00D0  
                      u317_20 0035                        u309_20 0565                        u341_21 03A2  
                      u333_21 017F                        u325_21 00CF                        u317_21 0034  
                      u309_21 0564                        u350_20 0685                        u342_20 03DB  
                      u334_20 01A3                        u326_20 00F3                        u318_20 0043  
                      u350_21 0684                        u342_21 03DA                        u334_21 01A2  
                      u326_21 00F2                        u318_21 0042                        u343_20 03EE  
                      u335_20 01AC                        u327_20 00FC                        u319_20 004C  
                      u343_21 03ED                        u335_21 01AB                        u327_21 00FB  
                      u319_21 004B                        u351_25 068A                        u352_20 0699  
                      u360_20 06F1                        u344_20 040B                        u336_20 01CF  
                      u328_20 011F                        u352_21 0698                        u360_21 06F0  
                      u344_21 040A                        u336_21 01CE                        u328_21 011E  
                      u360_25 06ED                        u344_25 0407                        u345_20 0417  
                      u337_20 01D8                        u329_20 0128                        u345_21 0416  
                      u337_21 01D7                        u329_21 0127                        u353_25 069C  
                      u361_25 06F9                        u290_20 07B1                        u354_20 06AC  
                      u362_20 0705                        u346_20 041E                        u338_20 01FB  
                      u290_21 07B0                        u354_21 06AB                        u362_21 0704  
                      u346_21 041D                        u338_21 01FA                        u354_25 06A8  
                      u347_20 0477                        u339_20 0204                        u347_21 0476  
                      u339_21 0203                        u291_25 07BE                        u355_25 06B5  
                      u356_20 06C1                        u348_20 048B                        u292_20 0FE2  
                      u356_21 06C0                        u348_21 048A                        u292_21 0FE1  
                      u357_20 06D1                        u357_21 06D0                        u358_25 06D6  
                      u374_27 0FB0                        u359_20 06E5                        u359_21 06E4  
                      u375_27 0F9D                        u296_20 0497                        u296_21 0496  
                      u376_27 0746                        u297_20 04B6                        u297_21 04B5  
                      u298_20 04D1                        u298_21 04D0                        u299_20 04EC  
                      u299_21 04EB                        _TMR0IE 005D                        _TMR0IF 005A  
            _pb0DebounceCount 006C              __end_of_lcd_init 07A8                  ??_ADCconvert 004D  
                   ??___lwdiv 0074                     ??___lwmod 007C              __end_of_init_adc 0FCA  
    __end_of_lcd_write_string 0FE4            ADCconvert@distance 0061                        _rotate 026A  
                      clrloop 0F7F                        saved_w 007E                     ??_sprintf 0023  
           lcd_write_string@s 0074            __end_of_ADCconvert 026A                __pcstackCOMMON 0070  
                __pidataBANK1 0003                    _pb0Pressed 0345                    _pb1Pressed 0347  
                  _pb2Pressed 0349                    _pb3Pressed 034B              ??_lcd_set_cursor 0073  
         i1_lcd_write_control 0FA2                    __pbssBANK0 006A                    __pbssBANK1 00A0  
            _pb1DebounceCount 006D                    __pmaintext 0623                    __pintentry 0004  
        ?i1_lcd_write_control 0070                     ?_adc_read 0070                       ?_rotate 00D1  
            ??_lcd_write_data 0070                     ?_lcd_init 0070           ADCconvert@adcOutput 0051  
                   ?_init_adc 0070         ??i1_lcd_write_control 0070                       ___lwdiv 067D  
                     ___lwmod 06CB     __size_of_adc_read_channel 0041                    ??_adc_read 0072  
             __size_of_rotate 012B                       _dpowers 0756                       _sprintf 0395  
                  ??_lcd_init 00D4          end_of_initialization 07E8                    ??_init_adc 00D1  
            _pb2DebounceCount 006E      __size_of_readAvgDistance 0093             ?_lcd_write_string 0070  
          ??_lcd_write_string 0073             adc_read@adc_value 0074          readAvgDistance@F1184 00B0  
    readAvgDistance@adcOutput 0035                   _pb0Released 0346                   _pb1Released 0348  
                 _pb2Released 034A                   _pb3Released 034C                 __pbitbssBANK0 0340  
              __end_of_rotate 0395           start_initialization 07CF                   rotate@steps 00D4  
            _pb3DebounceCount 006F         lcd_set_cursor@address 0073                _RTC_FLAG_250MS 0342  
              _RTC_FLAG_500MS 0343                   __pdataBANK1 00D6              _adc_read_channel 070F  
                    ??_rotate 00D2             __size_of_adc_read 0027             ??_readAvgDistance 0031  
               __pcstackBANK0 0020                 __pcstackBANK1 00D1             __size_of_lcd_init 002B  
                 sprintf@_val 0029                   sprintf@flag 0027                   sprintf@prec 0028  
                _current_step 00D6              readAvgDistance@i 0049             __size_of_init_adc 0014  
            ___lwdiv@dividend 0072                     __ptext460 0FE4                     __ptext461 0FB6  
                   __ptext470 070F                     __ptext462 0493                     __ptext471 06CB  
                   __ptext463 0015                     __ptext472 067D                     __ptext464 0590  
                   __ptext473 07A8                     __ptext465 0FCA                     __ptext457 07EC  
                   __ptext474 0000                     __ptext466 0F86                     __ptext458 077D  
                   __ptext467 0FA2                     __ptext459 026A                     __ptext468 0395  
                   __ptext469 0F8F                      ?___lwdiv 0070                      ?___lwmod 0078  
                   __pstrings 0750              ___lwdiv@quotient 0075                      ?_sprintf 0020  
     __size_of_lcd_set_cursor 0009             interrupt_function 0004   __end_ofi1_lcd_write_control 0FB6  
   readAvgDistance@averageval 0047                   __stringbase 0755     __size_of_lcd_write_string 001A  
     __size_of_lcd_write_data 0013              ADCconvert@adcVal 004B       adc_read_channel@channel 0077  
               _RTC_FLAG_10MS 0340                 _RTC_FLAG_50MS 0344                    _ADCconvert 0015  
            __size_of___lwdiv 004E              __size_of___lwmod 0044                      _adc_read 07A8  
             ___lwdiv@divisor 0070               ___lwdiv@counter 0077                      _lcd_init 077D  
            __size_of_sprintf 00FE      __end_of_adc_read_channel 0750     lcd_write_control@databyte 00D3  
                    _init_adc 0FB6                 __size_of_isr1 00FD                 __size_of_main 005A  
               __size_of_init 0014                      clear_ram 0F7E               _readAvgDistance 0590  
             ADCconvert@F1192 00A0             readDistance@F1189 00C0                  _RTC_FLAG_1MS 0341  
                    intlevel1 0000                _lcd_set_cursor 0F86                     sprintf@ap 0026  
                   sprintf@sp 002D              ___lwmod@dividend 007A                     stringcode 0750  
                 ?_ADCconvert 004B             _lcd_write_control 0FE4   i1lcd_write_control@databyte 0072  
          ?_lcd_write_control 0070                    _OPTION_REG 0081                      sprintf@c 002E  
                    sprintf@f 0020               ___lwmod@divisor 0078               ___lwmod@counter 007D  
                    stringdir 0750                      stringtab 0750           ??_lcd_write_control 00D1  
      __end_of_lcd_set_cursor 0F8F              _lcd_write_string 0FCA             _current_direction 00D0  
                 _RTC_Counter 006A       __end_of_readAvgDistance 0623                _lcd_write_data 0F8F  
