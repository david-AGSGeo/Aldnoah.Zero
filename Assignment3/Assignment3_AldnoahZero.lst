

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri May 22 16:34:47 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robotLoadSong
    48                           	FNCALL	_main,_robot_read
    49                           	FNCALL	_main,_readAvgDistance
    50                           	FNCALL	_main,_UpdateDisplay
    51                           	FNCALL	_main,_Menu
    52                           	FNCALL	_main,_calibrateIR
    53                           	FNCALL	_main,_Init_Follow_IR
    54                           	FNCALL	_main,_FindVictim
    55                           	FNCALL	_main,_GoHome
    56                           	FNCALL	_main,_ChargeMode
    57                           	FNCALL	_GoHome,_robotTurnSpeed
    58                           	FNCALL	_GoHome,_robot_turnRight
    59                           	FNCALL	_GoHome,_readAvgDistance
    60                           	FNCALL	_GoHome,_robotFollow
    61                           	FNCALL	_GoHome,_robot_turnLeft
    62                           	FNCALL	_GoHome,_rotate
    63                           	FNCALL	_GoHome,_robotMoveSpeed
    64                           	FNCALL	_FindVictim,_readAvgDistance
    65                           	FNCALL	_FindVictim,_robotFollow
    66                           	FNCALL	_FindVictim,_RobotDrive
    67                           	FNCALL	_FindVictim,_robotTurnSpeed
    68                           	FNCALL	_FindVictim,_robotMoveSpeed
    69                           	FNCALL	_FindVictim,_ser_putch
    70                           	FNCALL	_FindVictim,_robot_turnLeft
    71                           	FNCALL	_FindVictim,_robot_turnRight
    72                           	FNCALL	_robot_turnLeft,_robotTurnSpeed
    73                           	FNCALL	_Init_Follow_IR,_calibrateIR
    74                           	FNCALL	_Init_Follow_IR,_rotate
    75                           	FNCALL	_robotMoveSpeed,_RobotDrive
    76                           	FNCALL	_robotMoveSpeed,_robot_read
    77                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    78                           	FNCALL	_robotMoveSpeed,_abs
    79                           	FNCALL	_robotFollow,_RobotDrive
    80                           	FNCALL	_robotFollow,_ser_putch
    81                           	FNCALL	_robotFollow,_readAvgDistance
    82                           	FNCALL	_robotFollow,_rotate
    83                           	FNCALL	_robotFollow,_robot_read
    84                           	FNCALL	_robotFollow,_UpdateDisplay
    85                           	FNCALL	_robot_turnRight,_RobotDrive
    86                           	FNCALL	_robot_turnRight,_rotate
    87                           	FNCALL	_robot_turnRight,_readAvgDistance
    88                           	FNCALL	_robot_turnRight,_robot_read
    89                           	FNCALL	_robot_turnRight,_UpdateDisplay
    90                           	FNCALL	_robot_turnRight,___awdiv
    91                           	FNCALL	_robot_turnRight,_abs
    92                           	FNCALL	_robotTurnSpeed,_robotTurn
    93                           	FNCALL	_robotTurnSpeed,_robot_read
    94                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    95                           	FNCALL	_robotTurnSpeed,_abs
    96                           	FNCALL	_ChargeMode,_ser_putch
    97                           	FNCALL	_ChargeMode,_RobotBattRead
    98                           	FNCALL	_ChargeMode,_UpdateDisplay
    99                           	FNCALL	_calibrateIR,_rotate
   100                           	FNCALL	_calibrateIR,_UpdateDisplay
   101                           	FNCALL	_UpdateDisplay,_lcd_write_control
   102                           	FNCALL	_UpdateDisplay,_sprintf
   103                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
   104                           	FNCALL	_UpdateDisplay,_lcd_write_string
   105                           	FNCALL	_UpdateDisplay,___awmod
   106                           	FNCALL	_UpdateDisplay,___awdiv
   107                           	FNCALL	_readAvgDistance,_readDistance
   108                           	FNCALL	_readAvgDistance,___lwdiv
   109                           	FNCALL	_readAvgDistance,_ADCconvert
   110                           	FNCALL	_init,_ser_init
   111                           	FNCALL	_init,_init_adc
   112                           	FNCALL	_init,_lcd_init
   113                           	FNCALL	_init,_robo_init
   114                           	FNCALL	_readDistance,_adc_read_channel
   115                           	FNCALL	_RobotBattRead,_ser_putch
   116                           	FNCALL	_RobotBattRead,_ser_getch
   117                           	FNCALL	_robot_read,_ser_putch
   118                           	FNCALL	_robot_read,_ser_getch
   119                           	FNCALL	_lcd_init,_lcd_write_control
   120                           	FNCALL	_lcd_write_string,_lcd_write_data
   121                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   122                           	FNCALL	_abs,___wmul
   123                           	FNCALL	_robotTurn,_ser_putch
   124                           	FNCALL	_ser_getch,_ser_isrx
   125                           	FNCALL	_sprintf,_isdigit
   126                           	FNCALL	_sprintf,___wmul
   127                           	FNCALL	_sprintf,___lwdiv
   128                           	FNCALL	_sprintf,___lwmod
   129                           	FNCALL	_ADCconvert,___wmul
   130                           	FNCALL	_ADCconvert,___lwdiv
   131                           	FNCALL	_RobotDrive,_ser_putch
   132                           	FNCALL	_rotate,_spi_transfer
   133                           	FNCALL	_robotLoadSong,_ser_putch
   134                           	FNCALL	_robo_init,_ser_putch
   135                           	FNCALL	_adc_read_channel,_adc_read
   136                           	FNROOT	_main
   137                           	FNCALL	_isr1,i1___lwmod
   138                           	FNCALL	_isr1,_ReadButtons
   139                           	FNCALL	intlevel1,_isr1
   140                           	global	intlevel1
   141                           	FNROOT	intlevel1
   142                           	global	_menuStrings
   143                           	global	_shortMenuStrings
   144                           	global	_current_step
   145                           psect	idataBANK1,class=CODE,space=0,delta=2
   146                           global __pidataBANK1
   147  19FF                     __pidataBANK1:
   148                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   149                           	line	49
   150                           
   151                           ;initializer for _menuStrings
   152  19FF  3474               	retlw	(STR_1-__stringbase)&0ffh
   153  1A00  346B               	retlw	(STR_2-__stringbase)&0ffh
   154  1A01  3486               	retlw	(STR_3-__stringbase)&0ffh
   155  1A02  348F               	retlw	(STR_4-__stringbase)&0ffh
   156  1A03  347D               	retlw	(STR_5-__stringbase)&0ffh
   157  1A04  3462               	retlw	(STR_6-__stringbase)&0ffh
   158                           	line	50
   159                           
   160                           ;initializer for _shortMenuStrings
   161  1A05  34B8               	retlw	(STR_7-__stringbase)&0ffh
   162  1A06  34BC               	retlw	(STR_8-__stringbase)&0ffh
   163  1A07  34A4               	retlw	(STR_9-__stringbase)&0ffh
   164  1A08  34B0               	retlw	(STR_10-__stringbase)&0ffh
   165  1A09  34C0               	retlw	(STR_11-__stringbase)&0ffh
   166  1A0A  34B4               	retlw	(STR_12-__stringbase)&0ffh
   167                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   168                           	line	45
   169                           
   170                           ;initializer for _current_step
   171  1A0B  343C               	retlw	03Ch
   172                           	global	_dpowers
   173                           psect	strings,class=STRING,delta=2
   174                           global __pstrings
   175  1000                     __pstrings:
   176                           ;	global	stringdir,stringtab,__stringbase
   177  1000                     stringtab:
   178                           ;	String table - string pointers are 1 byte each
   179  1000  1BFF               	btfsc	(btemp+1),7
   180  1001  280A               	ljmp	stringcode
   181  1002  1383               	bcf	status,7
   182  1003  187F               	btfsc	(btemp+1),0
   183  1004  1783               	bsf	status,7
   184  1005  0800               	movf	indf,w
   185  1006  0A84               	incf fsr
   186  1007  1903               skipnz
   187  1008  0AFF               incf btemp+1
   188  1009  0008               	return
   189  100A                     stringcode:stringdir:
      + 100A                     stringdir:	
   190  100A  3010               movlw high(stringdir)
   191  100B  008A               movwf pclath
   192  100C  0804               movf fsr,w
   193  100D  0A84               incf fsr
   194  100E  0782               	addwf pc
   195  100F                     __stringbase:
   196  100F  3400               	retlw	0
   197                           psect	strings
   198                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   199                           	line	350
   200  1010                     _dpowers:
   201  1010  3401               	retlw	01h
   202  1011  3400               	retlw	0
   203                           
   204  1012  340A               	retlw	0Ah
   205  1013  3400               	retlw	0
   206                           
   207  1014  3464               	retlw	064h
   208  1015  3400               	retlw	0
   209                           
   210  1016  34E8               	retlw	0E8h
   211  1017  3403               	retlw	03h
   212                           
   213  1018  3410               	retlw	010h
   214  1019  3427               	retlw	027h
   215                           
   216                           	global	_dpowers
   217                           	global	_adcVal
   218                           	global	UpdateDisplay@F1263
   219                           	global	_rxfifo
   220                           	global	_txfifo
   221                           	global	_DistHighByte
   222                           	global	_CenterPressed
   223                           	global	_CenterReleased
   224                           	global	_DownPressed
   225                           	global	_DownReleased
   226                           	global	_LeftPressed
   227                           	global	_LeftReleased
   228                           	global	_RTC_FLAG_1MS
   229                           	global	_RTC_FLAG_250MS
   230                           	global	_RTC_FLAG_500MS
   231                           	global	_RightPressed
   232                           	global	_RightReleased
   233                           	global	_UpPressed
   234                           	global	_UpReleased
   235                           	global	_BattCharge
   236                           	global	_BattState
   237                           	global	_Disp1
   238                           	global	_Disp2
   239                           	global	_IRdistance
   240                           	global	_RTC_Counter
   241                           	global	_TotalDistTravelled
   242                           	global	_angleTurned
   243                           	global	_distTravelled
   244                           	global	_dist_high
   245                           	global	_dist_low
   246                           	global	_pos
   247                           	global	_total
   248                           	global	_totalSteps
   249                           	global	_AngleHighByte
   250                           	global	_AngleLowByte
   251                           	global	_BumpSensors
   252                           	global	_CenterDebounceCount
   253                           	global	_CliffSensors
   254                           	global	_DistLowByte
   255                           	global	_DownDebounceCount
   256                           	global	_FoundVictim
   257                           	global	_LeftDebounceCount
   258                           	global	_ROBOTerror
   259                           	global	_RightDebounceCount
   260                           	global	_RobotPos
   261                           	global	_UpDebounceCount
   262                           	global	_VictimSensor
   263                           	global	_VwallSensor
   264                           	global	_buttonPressed
   265                           	global	_currentFlw
   266                           	global	_currentMenu
   267                           	global	_highByte
   268                           	global	_lowByte
   269                           	global	_rxiptr
   270                           	global	_rxoptr
   271                           	global	_ser_tmp
   272                           	global	_turnhighByte
   273                           	global	_turnlowByte
   274                           	global	_txiptr
   275                           	global	_txoptr
   276                           	global	_ADCON0
   277  001F                     _ADCON0	set	31
   278                           	global	_ADRESH
   279  001E                     _ADRESH	set	30
   280                           	global	_PORTA
   281  0005                     _PORTA	set	5
   282                           	global	_PORTD
   283  0008                     _PORTD	set	8
   284                           	global	_PORTE
   285  0009                     _PORTE	set	9
   286                           	global	_RCREG
   287  001A                     _RCREG	set	26
   288                           	global	_SSPBUF
   289  0013                     _SSPBUF	set	19
   290                           	global	_SSPCON
   291  0014                     _SSPCON	set	20
   292                           	global	_TMR0
   293  0001                     _TMR0	set	1
   294                           	global	_TXREG
   295  0019                     _TXREG	set	25
   296                           	global	AT25256A@CS0
   297  0038                     AT25256A@CS0	set	56
   298                           	global	AT25256A@CS1
   299  0039                     AT25256A@CS1	set	57
   300                           	global	_CARRY
   301  0018                     _CARRY	set	24
   302                           	global	_CHS0
   303  00FB                     _CHS0	set	251
   304                           	global	_CHS1
   305  00FC                     _CHS1	set	252
   306                           	global	_CHS2
   307  00FD                     _CHS2	set	253
   308                           	global	_CREN
   309  00C4                     _CREN	set	196
   310                           	global	_GIE
   311  005F                     _GIE	set	95
   312                           	global	_GO
   313  00FA                     _GO	set	250
   314                           	global	_OERR
   315  00C1                     _OERR	set	193
   316                           	global	_PEIE
   317  005E                     _PEIE	set	94
   318                           	global	_RB0
   319  0030                     _RB0	set	48
   320                           	global	_RB2
   321  0032                     _RB2	set	50
   322                           	global	_RB3
   323  0033                     _RB3	set	51
   324                           	global	_RB4
   325  0034                     _RB4	set	52
   326                           	global	_RB5
   327  0035                     _RB5	set	53
   328                           	global	_RB6
   329  0036                     _RB6	set	54
   330                           	global	_RC0
   331  0038                     _RC0	set	56
   332                           	global	_RC1
   333  0039                     _RC1	set	57
   334                           	global	_RC2
   335  003A                     _RC2	set	58
   336                           	global	_RCIF
   337  0065                     _RCIF	set	101
   338                           	global	_RE0
   339  0048                     _RE0	set	72
   340                           	global	_RE1
   341  0049                     _RE1	set	73
   342                           	global	_RE2
   343  004A                     _RE2	set	74
   344                           	global	_RX9
   345  00C6                     _RX9	set	198
   346                           	global	_SPEN
   347  00C7                     _SPEN	set	199
   348                           	global	_SSPIF
   349  0063                     _SSPIF	set	99
   350                           	global	_TMR0IE
   351  005D                     _TMR0IE	set	93
   352                           	global	_TMR0IF
   353  005A                     _TMR0IF	set	90
   354                           	global	_TXIF
   355  0064                     _TXIF	set	100
   356                           	global	_ADCON1
   357  009F                     _ADCON1	set	159
   358                           	global	_ADRESL
   359  009E                     _ADRESL	set	158
   360                           	global	_OPTION_REG
   361  0081                     _OPTION_REG	set	129
   362                           	global	_SPBRG
   363  0099                     _SPBRG	set	153
   364                           	global	_SSPSTAT
   365  0094                     _SSPSTAT	set	148
   366                           	global	_TRISA
   367  0085                     _TRISA	set	133
   368                           	global	_TRISB
   369  0086                     _TRISB	set	134
   370                           	global	_TRISC
   371  0087                     _TRISC	set	135
   372                           	global	_TRISD
   373  0088                     _TRISD	set	136
   374                           	global	_TRISE
   375  0089                     _TRISE	set	137
   376                           	global	_BRGH
   377  04C2                     _BRGH	set	1218
   378                           	global	_RCIE
   379  0465                     _RCIE	set	1125
   380                           	global	_SYNC
   381  04C4                     _SYNC	set	1220
   382                           	global	_TX9
   383  04C6                     _TX9	set	1222
   384                           	global	_TXEN
   385  04C5                     _TXEN	set	1221
   386                           	global	_TXIE
   387  0464                     _TXIE	set	1124
   388                           	global	_EEADR
   389  010D                     _EEADR	set	269
   390                           	global	_EEDATA
   391  010C                     _EEDATA	set	268
   392                           	global	_EECON1
   393  018C                     _EECON1	set	396
   394                           	global	_EECON2
   395  018D                     _EECON2	set	397
   396                           	global	_RD
   397  0C60                     _RD	set	3168
   398                           	global	_WR
   399  0C61                     _WR	set	3169
   400                           	global	_WREN
   401  0C62                     _WREN	set	3170
   402                           	
   403  101A                     STR_18:	
   404  101A  3420               	retlw	32	;' '
   405  101B  3443               	retlw	67	;'C'
   406  101C  3468               	retlw	104	;'h'
   407  101D  3461               	retlw	97	;'a'
   408  101E  3472               	retlw	114	;'r'
   409  101F  3467               	retlw	103	;'g'
   410  1020  3469               	retlw	105	;'i'
   411  1021  346E               	retlw	110	;'n'
   412  1022  3467               	retlw	103	;'g'
   413  1023  3420               	retlw	32	;' '
   414  1024  344D               	retlw	77	;'M'
   415  1025  346F               	retlw	111	;'o'
   416  1026  3464               	retlw	100	;'d'
   417  1027  3465               	retlw	101	;'e'
   418  1028  3420               	retlw	32	;' '
   419  1029  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  102A                     STR_27:	
   423  102A  3449               	retlw	73	;'I'
   424  102B  3452               	retlw	82	;'R'
   425  102C  343A               	retlw	58	;':'
   426  102D  3425               	retlw	37	;'%'
   427  102E  3433               	retlw	51	;'3'
   428  102F  3464               	retlw	100	;'d'
   429  1030  3463               	retlw	99	;'c'
   430  1031  346D               	retlw	109	;'m'
   431  1032  3420               	retlw	32	;' '
   432  1033  3443               	retlw	67	;'C'
   433  1034  3450               	retlw	80	;'P'
   434  1035  343A               	retlw	58	;':'
   435  1036  3425               	retlw	37	;'%'
   436  1037  3433               	retlw	51	;'3'
   437  1038  3464               	retlw	100	;'d'
   438  1039  3400               	retlw	0
   439                           psect	strings
   440                           	
   441  103A                     STR_14:	
   442  103A  345A               	retlw	90	;'Z'
   443  103B  3465               	retlw	101	;'e'
   444  103C  3472               	retlw	114	;'r'
   445  103D  346F               	retlw	111	;'o'
   446  103E  3420               	retlw	32	;' '
   447  103F  3453               	retlw	83	;'S'
   448  1040  3474               	retlw	116	;'t'
   449  1041  3465               	retlw	101	;'e'
   450  1042  3470               	retlw	112	;'p'
   451  1043  345F               	retlw	95	;'_'
   452  1044  344D               	retlw	77	;'M'
   453  1045  346F               	retlw	111	;'o'
   454  1046  3474               	retlw	116	;'t'
   455  1047  346F               	retlw	111	;'o'
   456  1048  3472               	retlw	114	;'r'
   457  1049  3400               	retlw	0
   458                           psect	strings
   459                           	
   460  104A                     STR_13:	
   461  104A  3449               	retlw	73	;'I'
   462  104B  3452               	retlw	82	;'R'
   463  104C  343A               	retlw	58	;':'
   464  104D  3425               	retlw	37	;'%'
   465  104E  3433               	retlw	51	;'3'
   466  104F  3464               	retlw	100	;'d'
   467  1050  3463               	retlw	99	;'c'
   468  1051  346D               	retlw	109	;'m'
   469  1052  3420               	retlw	32	;' '
   470  1053  3444               	retlw	68	;'D'
   471  1054  343A               	retlw	58	;':'
   472  1055  3425               	retlw	37	;'%'
   473  1056  3433               	retlw	51	;'3'
   474  1057  3464               	retlw	100	;'d'
   475  1058  3400               	retlw	0
   476                           psect	strings
   477                           	
   478  1059                     STR_28:	
   479  1059  3444               	retlw	68	;'D'
   480  105A  343A               	retlw	58	;':'
   481  105B  3425               	retlw	37	;'%'
   482  105C  3434               	retlw	52	;'4'
   483  105D  3464               	retlw	100	;'d'
   484  105E  3463               	retlw	99	;'c'
   485  105F  346D               	retlw	109	;'m'
   486  1060  3420               	retlw	32	;' '
   487  1061  3441               	retlw	65	;'A'
   488  1062  3454               	retlw	84	;'T'
   489  1063  343A               	retlw	58	;':'
   490  1064  3425               	retlw	37	;'%'
   491  1065  3433               	retlw	51	;'3'
   492  1066  3464               	retlw	100	;'d'
   493  1067  3400               	retlw	0
   494                           psect	strings
   495                           	
   496  1068                     STR_26:	
   497  1068  3420               	retlw	32	;' '
   498  1069  3420               	retlw	32	;' '
   499  106A  3445               	retlw	69	;'E'
   500  106B  3458               	retlw	88	;'X'
   501  106C  3449               	retlw	73	;'I'
   502  106D  3454               	retlw	84	;'T'
   503  106E  3420               	retlw	32	;' '
   504  106F  3420               	retlw	32	;' '
   505  1070  3400               	retlw	0
   506                           psect	strings
   507                           	
   508  1071                     STR_6:	
   509  1071  3420               	retlw	32	;' '
   510  1072  3443               	retlw	67	;'C'
   511  1073  3468               	retlw	104	;'h'
   512  1074  3461               	retlw	97	;'a'
   513  1075  3472               	retlw	114	;'r'
   514  1076  3467               	retlw	103	;'g'
   515  1077  3465               	retlw	101	;'e'
   516  1078  3420               	retlw	32	;' '
   517  1079  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  107A                     STR_2:	
   521  107A  3453               	retlw	83	;'S'
   522  107B  3463               	retlw	99	;'c'
   523  107C  3461               	retlw	97	;'a'
   524  107D  346E               	retlw	110	;'n'
   525  107E  345F               	retlw	95	;'_'
   526  107F  3433               	retlw	51	;'3'
   527  1080  3436               	retlw	54	;'6'
   528  1081  3430               	retlw	48	;'0'
   529  1082  3400               	retlw	0
   530                           psect	strings
   531                           	
   532  1083                     STR_1:	
   533  1083  3443               	retlw	67	;'C'
   534  1084  3461               	retlw	97	;'a'
   535  1085  346C               	retlw	108	;'l'
   536  1086  3469               	retlw	105	;'i'
   537  1087  3462               	retlw	98	;'b'
   538  1088  345F               	retlw	95	;'_'
   539  1089  3449               	retlw	73	;'I'
   540  108A  3452               	retlw	82	;'R'
   541  108B  3400               	retlw	0
   542                           psect	strings
   543                           	
   544  108C                     STR_5:	
   545  108C  3446               	retlw	70	;'F'
   546  108D  346C               	retlw	108	;'l'
   547  108E  3477               	retlw	119	;'w'
   548  108F  345F               	retlw	95	;'_'
   549  1090  3457               	retlw	87	;'W'
   550  1091  3461               	retlw	97	;'a'
   551  1092  346C               	retlw	108	;'l'
   552  1093  346C               	retlw	108	;'l'
   553  1094  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  1095                     STR_3:	
   557  1095  3444               	retlw	68	;'D'
   558  1096  3472               	retlw	114	;'r'
   559  1097  3469               	retlw	105	;'i'
   560  1098  3476               	retlw	118	;'v'
   561  1099  3465               	retlw	101	;'e'
   562  109A  345F               	retlw	95	;'_'
   563  109B  3432               	retlw	50	;'2'
   564  109C  346D               	retlw	109	;'m'
   565  109D  3400               	retlw	0
   566                           psect	strings
   567                           	
   568  109E                     STR_4:	
   569  109E  3444               	retlw	68	;'D'
   570  109F  3472               	retlw	114	;'r'
   571  10A0  3469               	retlw	105	;'i'
   572  10A1  3476               	retlw	118	;'v'
   573  10A2  3465               	retlw	101	;'e'
   574  10A3  345F               	retlw	95	;'_'
   575  10A4  344C               	retlw	76	;'L'
   576  10A5  3400               	retlw	0
   577                           psect	strings
   578                           	
   579  10A6                     STR_16:	
   580  10A6  3443               	retlw	67	;'C'
   581  10A7  344F               	retlw	79	;'O'
   582  10A8  344E               	retlw	78	;'N'
   583  10A9  3446               	retlw	70	;'F'
   584  10AA  3449               	retlw	73	;'I'
   585  10AB  3452               	retlw	82	;'R'
   586  10AC  344D               	retlw	77	;'M'
   587  10AD  3400               	retlw	0
   588                           psect	strings
   589                           	
   590  10AE                     STR_19:	
   591  10AE  3425               	retlw	37	;'%'
   592  10AF  3464               	retlw	100	;'d'
   593  10B0  346D               	retlw	109	;'m'
   594  10B1  3441               	retlw	65	;'A'
   595  10B2  3400               	retlw	0
   596                           psect	strings
   597                           	
   598  10B3                     STR_9:	
   599  10B3  3444               	retlw	68	;'D'
   600  10B4  3472               	retlw	114	;'r'
   601  10B5  3432               	retlw	50	;'2'
   602  10B6  3400               	retlw	0
   603                           psect	strings
   604                           	
   605  10B7                     STR_15:	
   606  10B7  343C               	retlw	60	;'<'
   607  10B8  343C               	retlw	60	;'<'
   608  10B9  343C               	retlw	60	;'<'
   609  10BA  3400               	retlw	0
   610                           psect	strings
   611                           	
   612  10BB                     STR_17:	
   613  10BB  343E               	retlw	62	;'>'
   614  10BC  343E               	retlw	62	;'>'
   615  10BD  343E               	retlw	62	;'>'
   616  10BE  3400               	retlw	0
   617                           psect	strings
   618                           	
   619  10BF                     STR_10:	
   620  10BF  3444               	retlw	68	;'D'
   621  10C0  3472               	retlw	114	;'r'
   622  10C1  344C               	retlw	76	;'L'
   623  10C2  3400               	retlw	0
   624                           psect	strings
   625                           	
   626  10C3                     STR_12:	
   627  10C3  3443               	retlw	67	;'C'
   628  10C4  3468               	retlw	104	;'h'
   629  10C5  3467               	retlw	103	;'g'
   630  10C6  3400               	retlw	0
   631                           psect	strings
   632                           	
   633  10C7                     STR_7:	
   634  10C7  3443               	retlw	67	;'C'
   635  10C8  3461               	retlw	97	;'a'
   636  10C9  346C               	retlw	108	;'l'
   637  10CA  3400               	retlw	0
   638                           psect	strings
   639                           	
   640  10CB                     STR_8:	
   641  10CB  3453               	retlw	83	;'S'
   642  10CC  3463               	retlw	99	;'c'
   643  10CD  346E               	retlw	110	;'n'
   644  10CE  3400               	retlw	0
   645                           psect	strings
   646                           	
   647  10CF                     STR_11:	
   648  10CF  3446               	retlw	70	;'F'
   649  10D0  346C               	retlw	108	;'l'
   650  10D1  3477               	retlw	119	;'w'
   651  10D2  3400               	retlw	0
   652                           psect	strings
   653                           	
   654  10D3                     STR_22:	
   655  10D3  3446               	retlw	70	;'F'
   656  10D4  3443               	retlw	67	;'C'
   657  10D5  3400               	retlw	0
   658                           psect	strings
   659                           	
   660  10D6                     STR_20:	
   661  10D6  344E               	retlw	78	;'N'
   662  10D7  3443               	retlw	67	;'C'
   663  10D8  3400               	retlw	0
   664                           psect	strings
   665                           	
   666  10D9                     STR_21:	
   667  10D9  3452               	retlw	82	;'R'
   668  10DA  3443               	retlw	67	;'C'
   669  10DB  3400               	retlw	0
   670                           psect	strings
   671                           	
   672  10DC                     STR_23:	
   673  10DC  3454               	retlw	84	;'T'
   674  10DD  3443               	retlw	67	;'C'
   675  10DE  3400               	retlw	0
   676                           psect	strings
   677                           	
   678  10DF                     STR_24:	
   679  10DF  3457               	retlw	87	;'W'
   680  10E0  3461               	retlw	97	;'a'
   681  10E1  3400               	retlw	0
   682                           psect	strings
   683  10D3                     STR_25	equ	STR_22+0
   684                           	file	"Assignment3_AldnoahZero.as"
   685                           	line	#
   686                           psect cinit,class=CODE,delta=2
   687                           global start_initialization
   688  1B19                     start_initialization:
   689                           
   690                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   691                           global __pbitbssCOMMON
   692  0380                     __pbitbssCOMMON:
   693  0380                     _CenterPressed:
   694  0380                            ds      1
   695                           
   696  0381                     _CenterReleased:
   697  0381                            ds      1
   698                           
   699  0382                     _DownPressed:
   700  0382                            ds      1
   701                           
   702  0383                     _DownReleased:
   703  0383                            ds      1
   704                           
   705  0384                     _LeftPressed:
   706  0384                            ds      1
   707                           
   708  0385                     _LeftReleased:
   709  0385                            ds      1
   710                           
   711  0386                     _RTC_FLAG_1MS:
   712  0386                            ds      1
   713                           
   714  0387                     _RTC_FLAG_250MS:
   715  0387                            ds      1
   716                           
   717  0388                     _RTC_FLAG_500MS:
   718  0388                            ds      1
   719                           
   720  0389                     _RightPressed:
   721  0389                            ds      1
   722                           
   723  038A                     _RightReleased:
   724  038A                            ds      1
   725                           
   726  038B                     _UpPressed:
   727  038B                            ds      1
   728                           
   729  038C                     _UpReleased:
   730  038C                            ds      1
   731                           
   732                           psect	bssCOMMON,class=COMMON,space=1
   733                           global __pbssCOMMON
   734  007D                     __pbssCOMMON:
   735  007D                     _DistHighByte:
   736  007D                            ds      1
   737                           
   738                           psect	bssBANK0,class=BANK0,space=1
   739                           global __pbssBANK0
   740  006E                     __pbssBANK0:
   741  006E                     _adcVal:
   742  006E                            ds      2
   743                           
   744                           psect	bssBANK1,class=BANK1,space=1
   745                           global __pbssBANK1
   746  00A0                     __pbssBANK1:
   747  00A0                     _BattCharge:
   748  00A0                            ds      2
   749                           
   750  00A2                     _BattState:
   751  00A2                            ds      2
   752                           
   753  00A4                     _Disp1:
   754  00A4                            ds      2
   755                           
   756  00A6                     _Disp2:
   757  00A6                            ds      2
   758                           
   759  00A8                     _IRdistance:
   760  00A8                            ds      2
   761                           
   762  00AA                     _RTC_Counter:
   763  00AA                            ds      2
   764                           
   765  00AC                     _TotalDistTravelled:
   766  00AC                            ds      2
   767                           
   768  00AE                     _angleTurned:
   769  00AE                            ds      2
   770                           
   771  00B0                     _distTravelled:
   772  00B0                            ds      2
   773                           
   774  00B2                     _dist_high:
   775  00B2                            ds      2
   776                           
   777  00B4                     _dist_low:
   778  00B4                            ds      2
   779                           
   780  00B6                     _pos:
   781  00B6                            ds      2
   782                           
   783  00B8                     _total:
   784  00B8                            ds      2
   785                           
   786  00BA                     _totalSteps:
   787  00BA                            ds      2
   788                           
   789  00BC                     _AngleHighByte:
   790  00BC                            ds      1
   791                           
   792  00BD                     _AngleLowByte:
   793  00BD                            ds      1
   794                           
   795  00BE                     _BumpSensors:
   796  00BE                            ds      1
   797                           
   798  00BF                     _CenterDebounceCount:
   799  00BF                            ds      1
   800                           
   801  00C0                     _CliffSensors:
   802  00C0                            ds      1
   803                           
   804  00C1                     _DistLowByte:
   805  00C1                            ds      1
   806                           
   807  00C2                     _DownDebounceCount:
   808  00C2                            ds      1
   809                           
   810  00C3                     _FoundVictim:
   811  00C3                            ds      1
   812                           
   813  00C4                     _LeftDebounceCount:
   814  00C4                            ds      1
   815                           
   816  00C5                     _ROBOTerror:
   817  00C5                            ds      1
   818                           
   819  00C6                     _RightDebounceCount:
   820  00C6                            ds      1
   821                           
   822  00C7                     _RobotPos:
   823  00C7                            ds      1
   824                           
   825  00C8                     _UpDebounceCount:
   826  00C8                            ds      1
   827                           
   828  00C9                     _VictimSensor:
   829  00C9                            ds      1
   830                           
   831  00CA                     _VwallSensor:
   832  00CA                            ds      1
   833                           
   834  00CB                     _buttonPressed:
   835  00CB                            ds      1
   836                           
   837  00CC                     _currentFlw:
   838  00CC                            ds      1
   839                           
   840  00CD                     _currentMenu:
   841  00CD                            ds      1
   842                           
   843  00CE                     _highByte:
   844  00CE                            ds      1
   845                           
   846  00CF                     _lowByte:
   847  00CF                            ds      1
   848                           
   849  00D0                     _rxiptr:
   850  00D0                            ds      1
   851                           
   852  00D1                     _rxoptr:
   853  00D1                            ds      1
   854                           
   855  00D2                     _ser_tmp:
   856  00D2                            ds      1
   857                           
   858  00D3                     _turnhighByte:
   859  00D3                            ds      1
   860                           
   861  00D4                     _turnlowByte:
   862  00D4                            ds      1
   863                           
   864  00D5                     _txiptr:
   865  00D5                            ds      1
   866                           
   867  00D6                     _txoptr:
   868  00D6                            ds      1
   869                           
   870                           psect	dataBANK1,class=BANK1,space=1
   871                           global __pdataBANK1
   872  00D7                     __pdataBANK1:
   873                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   874                           	line	49
   875  00D7                     _menuStrings:
   876  00D7                            ds      6
   877                           
   878                           psect	dataBANK1
   879                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   880                           	line	50
   881  00DD                     _shortMenuStrings:
   882  00DD                            ds      6
   883                           
   884                           psect	dataBANK1
   885                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   886                           	line	45
   887  00E3                     _current_step:
   888  00E3                            ds      1
   889                           
   890                           psect	bssBANK3,class=BANK3,space=1
   891                           global __pbssBANK3
   892  0190                     __pbssBANK3:
   893  0190                     UpdateDisplay@F1263:
   894  0190                            ds      16
   895                           
   896  01A0                     _rxfifo:
   897  01A0                            ds      16
   898                           
   899  01B0                     _txfifo:
   900  01B0                            ds      16
   901                           
   902                           psect clrtext,class=CODE,delta=2
   903                           global clear_ram
   904                           ;	Called with FSR containing the base address, and
   905                           ;	W with the last address+1
   906  19EC                     clear_ram:
   907  19EC  0064               	clrwdt			;clear the watchdog before getting into this loop
   908  19ED                     clrloop:
   909  19ED  0180               	clrf	indf		;clear RAM location pointed to by FSR
   910  19EE  0A84               	incf	fsr,f		;increment pointer
   911  19EF  0604               	xorwf	fsr,w		;XOR with final address
   912  19F0  1903               	btfsc	status,2	;have we reached the end yet?
   913  19F1  3400               	retlw	0		;all done for this memory range, return
   914  19F2  0604               	xorwf	fsr,w		;XOR again to restore value
   915  19F3  29ED               	goto	clrloop		;do the next byte
   916                           
   917                           ; Clear objects allocated to BITCOMMON
   918                           psect cinit,class=CODE,delta=2
   919  1B19  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   920  1B1A  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   921                           ; Clear objects allocated to COMMON
   922                           psect cinit,class=CODE,delta=2
   923  1B1B  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   924                           ; Clear objects allocated to BANK0
   925                           psect cinit,class=CODE,delta=2
   926  1B1C  01EE               	clrf	((__pbssBANK0)+0)&07Fh
   927  1B1D  01EF               	clrf	((__pbssBANK0)+1)&07Fh
   928                           ; Clear objects allocated to BANK1
   929                           psect cinit,class=CODE,delta=2
   930  1B1E  1383               	bcf	status, 7	;select IRP bank0
   931  1B1F  30A0               	movlw	low(__pbssBANK1)
   932  1B20  0084               	movwf	fsr
   933  1B21  30D7               	movlw	low((__pbssBANK1)+037h)
   934  1B22  160A  158A  21EC   	fcall	clear_ram
              160A  158A         
   935                           ; Clear objects allocated to BANK3
   936                           psect cinit,class=CODE,delta=2
   937  1B27  1783               	bsf	status, 7	;select IRP bank2
   938  1B28  3090               	movlw	low(__pbssBANK3)
   939  1B29  0084               	movwf	fsr
   940  1B2A  30C0               	movlw	low((__pbssBANK3)+030h)
   941  1B2B  160A  158A  21EC   	fcall	clear_ram
              160A  158A         
   942                           global btemp
   943                           psect inittext,class=CODE,delta=2
   944                           global init_fetch,btemp
   945                           ;	Called with low address in FSR and high address in W
   946  1A1F                     init_fetch:
   947  1A1F  087E               	movf btemp,w
   948  1A20  008A               	movwf pclath
   949  1A21  087F               	movf btemp+1,w
   950  1A22  0082               	movwf pc
   951                           global init_ram
   952                           ;Called with:
   953                           ;	high address of idata address in btemp 
   954                           ;	low address of idata address in btemp+1 
   955                           ;	low address of data in FSR
   956                           ;	high address + 1 of data in btemp-1
   957  1A23                     init_ram:
   958  1A23  160A  158A  221F   	fcall init_fetch
              160A  158A         
   959  1A28  0080               	movwf indf,f
   960  1A29  0A84               	incf fsr,f
   961  1A2A  0804               	movf fsr,w
   962  1A2B  067D               	xorwf btemp-1,w
   963  1A2C  1903               	btfsc status,2
   964  1A2D  3400               	retlw 0
   965  1A2E  0AFF               	incf btemp+1,f
   966  1A2F  1903               	btfsc status,2
   967  1A30  0AFE               	incf btemp,f
   968  1A31  2A23               	goto init_ram
   969                           ; Initialize objects allocated to BANK1
   970                           psect cinit,class=CODE,delta=2
   971                           global init_ram, __pidataBANK1
   972  1B30  1383               	bcf	status, 7	;select IRP bank0
   973  1B31  30E4               	movlw low(__pdataBANK1+13)
   974  1B32  00FD               	movwf btemp-1,f
   975  1B33  3019               	movlw high(__pidataBANK1)
   976  1B34  00FE               	movwf btemp,f
   977  1B35  30FF               	movlw low(__pidataBANK1)
   978  1B36  00FF               	movwf btemp+1,f
   979  1B37  30D7               	movlw low(__pdataBANK1)
   980  1B38  0084               	movwf fsr,f
   981  1B39  160A  158A  2223   	fcall init_ram
              160A  158A         
   982                           psect cinit,class=CODE,delta=2
   983                           global end_of_initialization
   984                           
   985                           ;End of C runtime variable initialization code
   986                           
   987  1B3E                     end_of_initialization:
   988  1B3E  0183               clrf status
   989  1B3F  160A  118A  2C6C   ljmp _main	;jump to C main() function
   990                           psect	cstackBANK1,class=BANK1,space=1
   991                           global __pcstackBANK1
   992  00E4                     __pcstackBANK1:
   993                           	global	main@shortwall
   994  00E4                     main@shortwall:	; 2 bytes @ 0x0
   995  00E4                     	ds	2
   996                           	global	main@choice
   997  00E6                     main@choice:	; 1 bytes @ 0x2
   998  00E6                     	ds	1
   999                           psect	cstackCOMMON,class=COMMON,space=1
  1000                           global __pcstackCOMMON
  1001  0072                     __pcstackCOMMON:
  1002                           	global	??_ReadButtons
  1003  0072                     ??_ReadButtons:	; 0 bytes @ 0x0
  1004                           	global	?_ser_init
  1005  0072                     ?_ser_init:	; 0 bytes @ 0x0
  1006                           	global	?_robo_init
  1007  0072                     ?_robo_init:	; 0 bytes @ 0x0
  1008                           	global	?_robotLoadSong
  1009  0072                     ?_robotLoadSong:	; 0 bytes @ 0x0
  1010                           	global	?_robot_read
  1011  0072                     ?_robot_read:	; 0 bytes @ 0x0
  1012                           	global	?_readAvgDistance
  1013  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
  1014                           	global	?_UpdateDisplay
  1015  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
  1016                           	global	?_calibrateIR
  1017  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
  1018                           	global	?_Init_Follow_IR
  1019  0072                     ?_Init_Follow_IR:	; 0 bytes @ 0x0
  1020                           	global	?_FindVictim
  1021  0072                     ?_FindVictim:	; 0 bytes @ 0x0
  1022                           	global	?_GoHome
  1023  0072                     ?_GoHome:	; 0 bytes @ 0x0
  1024                           	global	?_ChargeMode
  1025  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
  1026                           	global	?_robot_turnLeft
  1027  0072                     ?_robot_turnLeft:	; 0 bytes @ 0x0
  1028                           	global	?_ser_putch
  1029  0072                     ?_ser_putch:	; 0 bytes @ 0x0
  1030                           	global	?_RobotBattRead
  1031  0072                     ?_RobotBattRead:	; 0 bytes @ 0x0
  1032                           	global	?_ADCconvert
  1033  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
  1034                           	global	?_isdigit
  1035  0072                     ?_isdigit:	; 1 bit 
  1036                           	global	?_init_adc
  1037  0072                     ?_init_adc:	; 0 bytes @ 0x0
  1038                           	global	?_lcd_write_control
  1039  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
  1040                           	global	?_lcd_write_data
  1041  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
  1042                           	global	?_lcd_set_cursor
  1043  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
  1044                           	global	?_lcd_init
  1045  0072                     ?_lcd_init:	; 0 bytes @ 0x0
  1046                           	global	?_isr1
  1047  0072                     ?_isr1:	; 0 bytes @ 0x0
  1048                           	global	?_init
  1049  0072                     ?_init:	; 0 bytes @ 0x0
  1050                           	global	?_main
  1051  0072                     ?_main:	; 0 bytes @ 0x0
  1052                           	global	?_ser_isrx
  1053  0072                     ?_ser_isrx:	; 1 bit 
  1054                           	global	?_ReadButtons
  1055  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
  1056                           	global	?_Menu
  1057  0072                     ?_Menu:	; 1 bytes @ 0x0
  1058                           	global	?_ser_getch
  1059  0072                     ?_ser_getch:	; 1 bytes @ 0x0
  1060                           	global	?_adc_read_channel
  1061  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
  1062                           	global	?_spi_transfer
  1063  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
  1064                           	global	?i1___lwmod
  1065  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
  1066                           	global	i1___lwmod@divisor
  1067  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
  1068  0072                     	ds	2
  1069                           	global	i1___lwmod@dividend
  1070  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
  1071  0074                     	ds	2
  1072                           	global	??i1___lwmod
  1073  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
  1074  0076                     	ds	1
  1075                           	global	i1___lwmod@counter
  1076  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
  1077  0077                     	ds	1
  1078                           	global	??_isr1
  1079  0078                     ??_isr1:	; 0 bytes @ 0x6
  1080  0078                     	ds	5
  1081                           psect	cstackBANK0,class=BANK0,space=1
  1082                           global __pcstackBANK0
  1083  0020                     __pcstackBANK0:
  1084                           	global	??_ser_init
  1085  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1086                           	global	??_Menu
  1087  0020                     ??_Menu:	; 0 bytes @ 0x0
  1088                           	global	??_ser_putch
  1089  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1090                           	global	??_ser_getch
  1091  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1092                           	global	??_isdigit
  1093  0020                     ??_isdigit:	; 0 bytes @ 0x0
  1094                           	global	??_init_adc
  1095  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1096                           	global	??_lcd_write_control
  1097  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1098                           	global	??_lcd_write_data
  1099  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1100                           	global	??_spi_transfer
  1101  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1102                           	global	??_ser_isrx
  1103  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1104                           	global	?_adc_read
  1105  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1106                           	global	?___wmul
  1107  0020                     ?___wmul:	; 2 bytes @ 0x0
  1108                           	global	?___awdiv
  1109  0020                     ?___awdiv:	; 2 bytes @ 0x0
  1110                           	global	?___awmod
  1111  0020                     ?___awmod:	; 2 bytes @ 0x0
  1112                           	global	Menu@BTN_input
  1113  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1114                           	global	_isdigit$8699
  1115  0020                     _isdigit$8699:	; 1 bytes @ 0x0
  1116                           	global	___wmul@multiplier
  1117  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1118                           	global	___awdiv@divisor
  1119  0020                     ___awdiv@divisor:	; 2 bytes @ 0x0
  1120                           	global	___awmod@divisor
  1121  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1122  0020                     	ds	1
  1123                           	global	spi_transfer@temp
  1124  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1125                           	global	ser_getch@c
  1126  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1127                           	global	ser_putch@c
  1128  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1129                           	global	isdigit@c
  1130  0021                     isdigit@c:	; 1 bytes @ 0x1
  1131  0021                     	ds	1
  1132                           	global	??_adc_read
  1133  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1134                           	global	??_robo_init
  1135  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1136                           	global	??_robotLoadSong
  1137  0022                     ??_robotLoadSong:	; 0 bytes @ 0x2
  1138                           	global	??_robot_read
  1139  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1140                           	global	??_RobotBattRead
  1141  0022                     ??_RobotBattRead:	; 0 bytes @ 0x2
  1142                           	global	?_robotTurn
  1143  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1144                           	global	lcd_write_control@databyte
  1145  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1146                           	global	lcd_write_data@databyte
  1147  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1148                           	global	spi_transfer@data
  1149  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1150                           	global	robotTurn@angle
  1151  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1152                           	global	___wmul@multiplicand
  1153  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1154                           	global	___awdiv@dividend
  1155  0022                     ___awdiv@dividend:	; 2 bytes @ 0x2
  1156                           	global	___awmod@dividend
  1157  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1158  0022                     	ds	1
  1159                           	global	?_rotate
  1160  0023                     ?_rotate:	; 0 bytes @ 0x3
  1161                           	global	??_lcd_set_cursor
  1162  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1163                           	global	??_lcd_init
  1164  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1165                           	global	??_init
  1166  0023                     ??_init:	; 0 bytes @ 0x3
  1167                           	global	lcd_set_cursor@address
  1168  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1169                           	global	robot_read@readType
  1170  0023                     robot_read@readType:	; 1 bytes @ 0x3
  1171                           	global	rotate@numsteps
  1172  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1173  0023                     	ds	1
  1174                           	global	??_robotTurn
  1175  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1176                           	global	??___wmul
  1177  0024                     ??___wmul:	; 0 bytes @ 0x4
  1178                           	global	??___awdiv
  1179  0024                     ??___awdiv:	; 0 bytes @ 0x4
  1180                           	global	??___awmod
  1181  0024                     ??___awmod:	; 0 bytes @ 0x4
  1182                           	global	adc_read@adc_value
  1183  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1184                           	global	RobotBattRead@temp1
  1185  0024                     RobotBattRead@temp1:	; 2 bytes @ 0x4
  1186                           	global	___wmul@product
  1187  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1188  0024                     	ds	1
  1189                           	global	rotate@direction
  1190  0025                     rotate@direction:	; 1 bytes @ 0x5
  1191                           	global	___awdiv@counter
  1192  0025                     ___awdiv@counter:	; 1 bytes @ 0x5
  1193                           	global	___awmod@counter
  1194  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1195  0025                     	ds	1
  1196                           	global	??_rotate
  1197  0026                     ??_rotate:	; 0 bytes @ 0x6
  1198                           	global	??_adc_read_channel
  1199  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1200                           	global	?_abs
  1201  0026                     ?_abs:	; 2 bytes @ 0x6
  1202                           	global	?___lwdiv
  1203  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1204                           	global	___awdiv@sign
  1205  0026                     ___awdiv@sign:	; 1 bytes @ 0x6
  1206                           	global	___awmod@sign
  1207  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1208                           	global	abs@v
  1209  0026                     abs@v:	; 2 bytes @ 0x6
  1210                           	global	___lwdiv@divisor
  1211  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1212  0026                     	ds	1
  1213                           	global	?_lcd_write_string
  1214  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1215                           	global	adc_read_channel@channel
  1216  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1217                           	global	lcd_write_string@s
  1218  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1219                           	global	___awdiv@quotient
  1220  0027                     ___awdiv@quotient:	; 2 bytes @ 0x7
  1221  0027                     	ds	1
  1222                           	global	??_abs
  1223  0028                     ??_abs:	; 0 bytes @ 0x8
  1224                           	global	?_readDistance
  1225  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1226                           	global	rotate@i
  1227  0028                     rotate@i:	; 2 bytes @ 0x8
  1228                           	global	___lwdiv@dividend
  1229  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1230  0028                     	ds	1
  1231                           	global	?_RobotDrive
  1232  0029                     ?_RobotDrive:	; 0 bytes @ 0x9
  1233                           	global	??_lcd_write_string
  1234  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1235                           	global	RobotDrive@speed
  1236  0029                     RobotDrive@speed:	; 2 bytes @ 0x9
  1237  0029                     	ds	1
  1238                           	global	??_readDistance
  1239  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1240                           	global	??___lwdiv
  1241  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1242  002A                     	ds	1
  1243                           	global	RobotDrive@radius
  1244  002B                     RobotDrive@radius:	; 2 bytes @ 0xB
  1245                           	global	___lwdiv@quotient
  1246  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1247  002B                     	ds	1
  1248                           	global	readDistance@readVal
  1249  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1250  002C                     	ds	1
  1251                           	global	??_RobotDrive
  1252  002D                     ??_RobotDrive:	; 0 bytes @ 0xD
  1253                           	global	___lwdiv@counter
  1254  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1255  002D                     	ds	1
  1256                           	global	??_ADCconvert
  1257  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1258                           	global	?___lwmod
  1259  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1260                           	global	RobotDrive@speedlowByte
  1261  002E                     RobotDrive@speedlowByte:	; 1 bytes @ 0xE
  1262                           	global	___lwmod@divisor
  1263  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1264  002E                     	ds	1
  1265                           	global	RobotDrive@speedhighByte
  1266  002F                     RobotDrive@speedhighByte:	; 1 bytes @ 0xF
  1267  002F                     	ds	1
  1268                           	global	??_readAvgDistance
  1269  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1270                           	global	RobotDrive@radiuslowByte
  1271  0030                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x10
  1272                           	global	readAvgDistance@fullval
  1273  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1274                           	global	___lwmod@dividend
  1275  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1276  0030                     	ds	1
  1277                           	global	RobotDrive@radiushighByte
  1278  0031                     RobotDrive@radiushighByte:	; 1 bytes @ 0x11
  1279  0031                     	ds	1
  1280                           	global	??___lwmod
  1281  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1282                           	global	readAvgDistance@j
  1283  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1284  0032                     	ds	1
  1285                           	global	___lwmod@counter
  1286  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1287  0033                     	ds	1
  1288                           	global	?_sprintf
  1289  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1290                           	global	sprintf@f
  1291  0034                     sprintf@f:	; 1 bytes @ 0x14
  1292                           	global	readAvgDistance@tempIR
  1293  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1294  0034                     	ds	2
  1295                           	global	readAvgDistance@i
  1296  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1297  0036                     	ds	3
  1298                           	global	??_sprintf
  1299  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1300  0039                     	ds	3
  1301                           	global	sprintf@ap
  1302  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1303  003C                     	ds	1
  1304                           	global	sprintf@prec
  1305  003D                     sprintf@prec:	; 1 bytes @ 0x1D
  1306  003D                     	ds	1
  1307                           	global	sprintf@flag
  1308  003E                     sprintf@flag:	; 1 bytes @ 0x1E
  1309  003E                     	ds	1
  1310                           	global	sprintf@_val
  1311  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1312  003F                     	ds	4
  1313                           	global	sprintf@sp
  1314  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1315  0043                     	ds	1
  1316                           	global	sprintf@width
  1317  0044                     sprintf@width:	; 2 bytes @ 0x24
  1318  0044                     	ds	2
  1319                           	global	sprintf@c
  1320  0046                     sprintf@c:	; 1 bytes @ 0x26
  1321  0046                     	ds	1
  1322                           	global	??_UpdateDisplay
  1323  0047                     ??_UpdateDisplay:	; 0 bytes @ 0x27
  1324  0047                     	ds	4
  1325                           	global	UpdateDisplay@LCDOutput
  1326  004B                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x2B
  1327  004B                     	ds	16
  1328                           	global	UpdateDisplay@tempDist
  1329  005B                     UpdateDisplay@tempDist:	; 2 bytes @ 0x3B
  1330  005B                     	ds	2
  1331                           	global	??_calibrateIR
  1332  005D                     ??_calibrateIR:	; 0 bytes @ 0x3D
  1333                           	global	??_Init_Follow_IR
  1334  005D                     ??_Init_Follow_IR:	; 0 bytes @ 0x3D
  1335                           	global	??_ChargeMode
  1336  005D                     ??_ChargeMode:	; 0 bytes @ 0x3D
  1337                           	global	?_robotTurnSpeed
  1338  005D                     ?_robotTurnSpeed:	; 0 bytes @ 0x3D
  1339                           	global	?_robot_turnRight
  1340  005D                     ?_robot_turnRight:	; 0 bytes @ 0x3D
  1341                           	global	?_robotFollow
  1342  005D                     ?_robotFollow:	; 0 bytes @ 0x3D
  1343                           	global	?_robotMoveSpeed
  1344  005D                     ?_robotMoveSpeed:	; 0 bytes @ 0x3D
  1345                           	global	robotFollow@speed
  1346  005D                     robotFollow@speed:	; 2 bytes @ 0x3D
  1347                           	global	robot_turnRight@speed
  1348  005D                     robot_turnRight@speed:	; 2 bytes @ 0x3D
  1349                           	global	robotMoveSpeed@distance
  1350  005D                     robotMoveSpeed@distance:	; 2 bytes @ 0x3D
  1351                           	global	robotTurnSpeed@angle
  1352  005D                     robotTurnSpeed@angle:	; 2 bytes @ 0x3D
  1353  005D                     	ds	2
  1354                           	global	??_robot_turnRight
  1355  005F                     ??_robot_turnRight:	; 0 bytes @ 0x3F
  1356                           	global	robotFollow@AdcTarget
  1357  005F                     robotFollow@AdcTarget:	; 2 bytes @ 0x3F
  1358                           	global	robotMoveSpeed@speed
  1359  005F                     robotMoveSpeed@speed:	; 2 bytes @ 0x3F
  1360                           	global	robotTurnSpeed@speed
  1361  005F                     robotTurnSpeed@speed:	; 2 bytes @ 0x3F
  1362  005F                     	ds	2
  1363                           	global	??_robotTurnSpeed
  1364  0061                     ??_robotTurnSpeed:	; 0 bytes @ 0x41
  1365                           	global	??_robotMoveSpeed
  1366  0061                     ??_robotMoveSpeed:	; 0 bytes @ 0x41
  1367                           	global	robotFollow@followDir
  1368  0061                     robotFollow@followDir:	; 1 bytes @ 0x41
  1369  0061                     	ds	1
  1370                           	global	??_robotFollow
  1371  0062                     ??_robotFollow:	; 0 bytes @ 0x42
  1372                           	global	robot_turnRight@turnTarget
  1373  0062                     robot_turnRight@turnTarget:	; 2 bytes @ 0x42
  1374  0062                     	ds	2
  1375                           	global	robot_turnRight@AdcTarget
  1376  0064                     robot_turnRight@AdcTarget:	; 2 bytes @ 0x44
  1377                           	global	robotMoveSpeed@temp1
  1378  0064                     robotMoveSpeed@temp1:	; 2 bytes @ 0x44
  1379                           	global	robotTurnSpeed@temp1
  1380  0064                     robotTurnSpeed@temp1:	; 2 bytes @ 0x44
  1381  0064                     	ds	2
  1382                           	global	??_robot_turnLeft
  1383  0066                     ??_robot_turnLeft:	; 0 bytes @ 0x46
  1384                           	global	robotFollow@temp1
  1385  0066                     robotFollow@temp1:	; 2 bytes @ 0x46
  1386                           	global	robot_turnRight@temp1
  1387  0066                     robot_turnRight@temp1:	; 2 bytes @ 0x46
  1388  0066                     	ds	2
  1389                           	global	robotFollow@hysterysis
  1390  0068                     robotFollow@hysterysis:	; 1 bytes @ 0x48
  1391  0068                     	ds	1
  1392                           	global	??_FindVictim
  1393  0069                     ??_FindVictim:	; 0 bytes @ 0x49
  1394                           	global	??_GoHome
  1395  0069                     ??_GoHome:	; 0 bytes @ 0x49
  1396  0069                     	ds	3
  1397                           	global	??_main
  1398  006C                     ??_main:	; 0 bytes @ 0x4C
  1399  006C                     	ds	2
  1400 ;;Data sizes: Strings 200, constant 10, data 13, bss 106, persistent 0 stack 0
  1401 ;;Auto spaces:   Size  Autos    Used
  1402 ;; COMMON          14     11      14
  1403 ;; BANK0           80     78      80
  1404 ;; BANK1           80      3      71
  1405 ;; BANK3           96      0      48
  1406 ;; BANK2           96      0       0
  1407                           
  1408 ;;
  1409 ;; Pointer list with targets:
  1410                           
  1411 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1412 ;;
  1413 ;; ?_abs	int  size(1) Largest target is 0
  1414 ;;
  1415 ;; ?___awdiv	int  size(1) Largest target is 0
  1416 ;;
  1417 ;; ?___awmod	int  size(1) Largest target is 0
  1418 ;;
  1419 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1420 ;;
  1421 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1422 ;;
  1423 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1424 ;;
  1425 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1426 ;;
  1427 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1428 ;;
  1429 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 16
  1430 ;;		 -> STR_28(CODE[15]), STR_27(CODE[16]), STR_19(CODE[5]), STR_13(CODE[15]), 
  1431 ;;
  1432 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1433 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1434 ;;
  1435 ;; ?_sprintf	int  size(1) Largest target is 0
  1436 ;;
  1437 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1438 ;;		 -> ?_sprintf(BANK0[2]), 
  1439 ;;
  1440 ;; S8334$_cp	PTR const unsigned char  size(1) Largest target is 0
  1441 ;;
  1442 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1443 ;;
  1444 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1445 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1446 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1447 ;;
  1448 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1449 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1450 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1451 ;;
  1452 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1453 ;;		 -> STR_26(CODE[9]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
  1454 ;;		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_18(CODE[16]), 
  1455 ;;		 -> STR_17(CODE[4]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[16]), 
  1456 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1457 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1458 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1459 ;;		 -> STR_1(CODE[9]), 
  1460 ;;
  1461                           
  1462                           
  1463 ;;
  1464 ;; Critical Paths under _main in COMMON
  1465 ;;
  1466 ;;   None.
  1467 ;;
  1468 ;; Critical Paths under _isr1 in COMMON
  1469 ;;
  1470 ;;   _isr1->i1___lwmod
  1471 ;;
  1472 ;; Critical Paths under _main in BANK0
  1473 ;;
  1474 ;;   _main->_FindVictim
  1475 ;;   _GoHome->_robotFollow
  1476 ;;   _FindVictim->_robotFollow
  1477 ;;   _robot_turnLeft->_robotTurnSpeed
  1478 ;;   _robotMoveSpeed->_UpdateDisplay
  1479 ;;   _robotFollow->_UpdateDisplay
  1480 ;;   _robot_turnRight->_UpdateDisplay
  1481 ;;   _robotTurnSpeed->_UpdateDisplay
  1482 ;;   _ChargeMode->_UpdateDisplay
  1483 ;;   _calibrateIR->_UpdateDisplay
  1484 ;;   _UpdateDisplay->_sprintf
  1485 ;;   _readAvgDistance->_ADCconvert
  1486 ;;   _readDistance->_adc_read_channel
  1487 ;;   _RobotBattRead->_ser_putch
  1488 ;;   _RobotBattRead->_ser_getch
  1489 ;;   _robot_read->_ser_putch
  1490 ;;   _robot_read->_ser_getch
  1491 ;;   _lcd_init->_lcd_write_control
  1492 ;;   _lcd_write_string->___awmod
  1493 ;;   _lcd_set_cursor->_lcd_write_control
  1494 ;;   _abs->___wmul
  1495 ;;   _robotTurn->_ser_putch
  1496 ;;   _sprintf->___lwmod
  1497 ;;   _ADCconvert->___lwdiv
  1498 ;;   _RobotDrive->___awdiv
  1499 ;;   _rotate->_spi_transfer
  1500 ;;   _robotLoadSong->_ser_putch
  1501 ;;   _robo_init->_ser_putch
  1502 ;;   _adc_read_channel->_adc_read
  1503 ;;   ___lwmod->___lwdiv
  1504 ;;   ___lwdiv->___wmul
  1505 ;;
  1506 ;; Critical Paths under _isr1 in BANK0
  1507 ;;
  1508 ;;   None.
  1509 ;;
  1510 ;; Critical Paths under _main in BANK1
  1511 ;;
  1512 ;;   None.
  1513 ;;
  1514 ;; Critical Paths under _isr1 in BANK1
  1515 ;;
  1516 ;;   None.
  1517 ;;
  1518 ;; Critical Paths under _main in BANK3
  1519 ;;
  1520 ;;   None.
  1521 ;;
  1522 ;; Critical Paths under _isr1 in BANK3
  1523 ;;
  1524 ;;   None.
  1525 ;;
  1526 ;; Critical Paths under _main in BANK2
  1527 ;;
  1528 ;;   None.
  1529 ;;
  1530 ;; Critical Paths under _isr1 in BANK2
  1531 ;;
  1532 ;;   None.
  1533                           
  1534 ;;
  1535 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1536 ;;
  1537                           
  1538 ;;
  1539 ;;Call Graph Tables:
  1540 ;;
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1543 ;; ---------------------------------------------------------------------------------
  1544 ;; (0) _main                                                 5     5      0   43937
  1545 ;;                                             76 BANK0      2     2      0
  1546 ;;                                              0 BANK1      3     3      0
  1547 ;;                               _init
  1548 ;;                      _robotLoadSong
  1549 ;;                         _robot_read
  1550 ;;                    _readAvgDistance
  1551 ;;                      _UpdateDisplay
  1552 ;;                               _Menu
  1553 ;;                        _calibrateIR
  1554 ;;                     _Init_Follow_IR
  1555 ;;                         _FindVictim
  1556 ;;                             _GoHome
  1557 ;;                         _ChargeMode
  1558 ;; ---------------------------------------------------------------------------------
  1559 ;; (1) _GoHome                                               1     1      0   16899
  1560 ;;                                             73 BANK0      1     1      0
  1561 ;;                     _robotTurnSpeed
  1562 ;;                    _robot_turnRight
  1563 ;;                    _readAvgDistance
  1564 ;;                        _robotFollow
  1565 ;;                     _robot_turnLeft
  1566 ;;                             _rotate
  1567 ;;                     _robotMoveSpeed
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (1) _FindVictim                                           3     3      0   17003
  1570 ;;                                             73 BANK0      3     3      0
  1571 ;;                    _readAvgDistance
  1572 ;;                        _robotFollow
  1573 ;;                         _RobotDrive
  1574 ;;                     _robotTurnSpeed
  1575 ;;                     _robotMoveSpeed
  1576 ;;                          _ser_putch
  1577 ;;                     _robot_turnLeft
  1578 ;;                    _robot_turnRight
  1579 ;; ---------------------------------------------------------------------------------
  1580 ;; (2) _robot_turnLeft                                       1     1      0    2621
  1581 ;;                                             70 BANK0      1     1      0
  1582 ;;                     _robotTurnSpeed
  1583 ;; ---------------------------------------------------------------------------------
  1584 ;; (1) _Init_Follow_IR                                       3     3      0    2412
  1585 ;;                                             61 BANK0      3     3      0
  1586 ;;                        _calibrateIR
  1587 ;;                             _rotate
  1588 ;; ---------------------------------------------------------------------------------
  1589 ;; (2) _robotMoveSpeed                                       9     5      4    2778
  1590 ;;                                             61 BANK0      9     5      4
  1591 ;;                         _RobotDrive
  1592 ;;                         _robot_read
  1593 ;;                      _UpdateDisplay
  1594 ;;                                _abs
  1595 ;; ---------------------------------------------------------------------------------
  1596 ;; (2) _robotFollow                                         12     7      5    3764
  1597 ;;                                             61 BANK0     12     7      5
  1598 ;;                         _RobotDrive
  1599 ;;                          _ser_putch
  1600 ;;                    _readAvgDistance
  1601 ;;                             _rotate
  1602 ;;                         _robot_read
  1603 ;;                      _UpdateDisplay
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (2) _robot_turnRight                                     11     9      2    4370
  1606 ;;                                             61 BANK0     11     9      2
  1607 ;;                         _RobotDrive
  1608 ;;                             _rotate
  1609 ;;                    _readAvgDistance
  1610 ;;                         _robot_read
  1611 ;;                      _UpdateDisplay
  1612 ;;                            ___awdiv
  1613 ;;                                _abs
  1614 ;; ---------------------------------------------------------------------------------
  1615 ;; (3) _robotTurnSpeed                                       9     5      4    2621
  1616 ;;                                             61 BANK0      9     5      4
  1617 ;;                          _robotTurn
  1618 ;;                         _robot_read
  1619 ;;                      _UpdateDisplay
  1620 ;;                                _abs
  1621 ;; ---------------------------------------------------------------------------------
  1622 ;; (1) _ChargeMode                                           1     1      0    2287
  1623 ;;                                             61 BANK0      1     1      0
  1624 ;;                          _ser_putch
  1625 ;;                      _RobotBattRead
  1626 ;;                      _UpdateDisplay
  1627 ;; ---------------------------------------------------------------------------------
  1628 ;; (2) _calibrateIR                                          0     0      0    2292
  1629 ;;                             _rotate
  1630 ;;                      _UpdateDisplay
  1631 ;; ---------------------------------------------------------------------------------
  1632 ;; (2) _UpdateDisplay                                       22    22      0    2172
  1633 ;;                                             39 BANK0     22    22      0
  1634 ;;                  _lcd_write_control
  1635 ;;                            _sprintf
  1636 ;;                     _lcd_set_cursor
  1637 ;;                   _lcd_write_string
  1638 ;;                            ___awmod
  1639 ;;                            ___awdiv
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (3) _readAvgDistance                                      8     8      0     625
  1642 ;;                                             16 BANK0      8     8      0
  1643 ;;                       _readDistance
  1644 ;;                            ___lwdiv
  1645 ;;                         _ADCconvert
  1646 ;; ---------------------------------------------------------------------------------
  1647 ;; (1) _init                                                 1     1      0      44
  1648 ;;                                              3 BANK0      1     1      0
  1649 ;;                           _ser_init
  1650 ;;                           _init_adc
  1651 ;;                           _lcd_init
  1652 ;;                          _robo_init
  1653 ;; ---------------------------------------------------------------------------------
  1654 ;; (4) _readDistance                                         6     4      2      69
  1655 ;;                                              8 BANK0      6     4      2
  1656 ;;                   _adc_read_channel
  1657 ;; ---------------------------------------------------------------------------------
  1658 ;; (2) _RobotBattRead                                        4     4      0      93
  1659 ;;                                              2 BANK0      4     4      0
  1660 ;;                          _ser_putch
  1661 ;;                          _ser_getch
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (3) _robot_read                                           2     2      0     133
  1664 ;;                                              2 BANK0      2     2      0
  1665 ;;                          _ser_putch
  1666 ;;                          _ser_getch
  1667 ;; ---------------------------------------------------------------------------------
  1668 ;; (2) _lcd_init                                             0     0      0      22
  1669 ;;                  _lcd_write_control
  1670 ;; ---------------------------------------------------------------------------------
  1671 ;; (3) _lcd_write_string                                     2     0      2      67
  1672 ;;                                              7 BANK0      2     0      2
  1673 ;;                     _lcd_write_data
  1674 ;;                            ___awmod (ARG)
  1675 ;; ---------------------------------------------------------------------------------
  1676 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1677 ;;                                              3 BANK0      1     1      0
  1678 ;;                  _lcd_write_control
  1679 ;; ---------------------------------------------------------------------------------
  1680 ;; (3) _abs                                                  4     2      2     158
  1681 ;;                                              6 BANK0      4     2      2
  1682 ;;                             ___wmul
  1683 ;; ---------------------------------------------------------------------------------
  1684 ;; (4) _robotTurn                                            2     0      2      66
  1685 ;;                                              2 BANK0      2     0      2
  1686 ;;                          _ser_putch
  1687 ;; ---------------------------------------------------------------------------------
  1688 ;; (3) _ser_getch                                            2     2      0      23
  1689 ;;                                              0 BANK0      2     2      0
  1690 ;;                           _ser_isrx
  1691 ;; ---------------------------------------------------------------------------------
  1692 ;; (3) _sprintf                                             19    14      5    1230
  1693 ;;                                             20 BANK0     19    14      5
  1694 ;;                            _isdigit
  1695 ;;                             ___wmul
  1696 ;;                            ___lwdiv
  1697 ;;                            ___lwmod
  1698 ;; ---------------------------------------------------------------------------------
  1699 ;; (4) _ADCconvert                                           2     2      0     254
  1700 ;;                                             14 BANK0      2     2      0
  1701 ;;                             ___wmul
  1702 ;;                            ___lwdiv
  1703 ;; ---------------------------------------------------------------------------------
  1704 ;; (3) _RobotDrive                                           9     5      4     202
  1705 ;;                                              9 BANK0      9     5      4
  1706 ;;                          _ser_putch
  1707 ;;                            ___awdiv (ARG)
  1708 ;; ---------------------------------------------------------------------------------
  1709 ;; (2) _rotate                                               7     4      3     120
  1710 ;;                                              3 BANK0      7     4      3
  1711 ;;                       _spi_transfer
  1712 ;; ---------------------------------------------------------------------------------
  1713 ;; (1) _robotLoadSong                                        0     0      0      22
  1714 ;;                          _ser_putch
  1715 ;; ---------------------------------------------------------------------------------
  1716 ;; (2) _robo_init                                            0     0      0      22
  1717 ;;                          _ser_putch
  1718 ;; ---------------------------------------------------------------------------------
  1719 ;; (4) _lcd_write_data                                       3     3      0      22
  1720 ;;                                              0 BANK0      3     3      0
  1721 ;; ---------------------------------------------------------------------------------
  1722 ;; (4) _lcd_write_control                                    3     3      0      22
  1723 ;;                                              0 BANK0      3     3      0
  1724 ;; ---------------------------------------------------------------------------------
  1725 ;; (2) _init_adc                                             1     1      0       0
  1726 ;;                                              0 BANK0      1     1      0
  1727 ;; ---------------------------------------------------------------------------------
  1728 ;; (5) _adc_read_channel                                     2     2      0      46
  1729 ;;                                              6 BANK0      2     2      0
  1730 ;;                           _adc_read
  1731 ;; ---------------------------------------------------------------------------------
  1732 ;; (3) ___awmod                                              7     3      4     296
  1733 ;;                                              0 BANK0      7     3      4
  1734 ;; ---------------------------------------------------------------------------------
  1735 ;; (3) ___awdiv                                              9     5      4     300
  1736 ;;                                              0 BANK0      9     5      4
  1737 ;; ---------------------------------------------------------------------------------
  1738 ;; (4) ___lwmod                                              6     2      4     159
  1739 ;;                                             14 BANK0      6     2      4
  1740 ;;                            ___lwdiv (ARG)
  1741 ;; ---------------------------------------------------------------------------------
  1742 ;; (4) ___lwdiv                                              8     4      4     162
  1743 ;;                                              6 BANK0      8     4      4
  1744 ;;                             ___wmul (ARG)
  1745 ;; ---------------------------------------------------------------------------------
  1746 ;; (4) ___wmul                                               6     2      4      92
  1747 ;;                                              0 BANK0      6     2      4
  1748 ;; ---------------------------------------------------------------------------------
  1749 ;; (4) _isdigit                                              2     2      0      68
  1750 ;;                                              0 BANK0      2     2      0
  1751 ;; ---------------------------------------------------------------------------------
  1752 ;; (4) _ser_isrx                                             0     0      0       0
  1753 ;; ---------------------------------------------------------------------------------
  1754 ;; (3) _spi_transfer                                         3     3      0      30
  1755 ;;                                              0 BANK0      3     3      0
  1756 ;; ---------------------------------------------------------------------------------
  1757 ;; (3) _ser_putch                                            2     2      0      22
  1758 ;;                                              0 BANK0      2     2      0
  1759 ;; ---------------------------------------------------------------------------------
  1760 ;; (1) _Menu                                                 1     1      0      22
  1761 ;;                                              0 BANK0      1     1      0
  1762 ;; ---------------------------------------------------------------------------------
  1763 ;; (2) _ser_init                                             1     1      0       0
  1764 ;;                                              0 BANK0      1     1      0
  1765 ;; ---------------------------------------------------------------------------------
  1766 ;; (6) _adc_read                                             6     4      2      24
  1767 ;;                                              0 BANK0      6     4      2
  1768 ;; ---------------------------------------------------------------------------------
  1769 ;; Estimated maximum stack depth 6
  1770 ;; ---------------------------------------------------------------------------------
  1771 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1772 ;; ---------------------------------------------------------------------------------
  1773 ;; (7) _isr1                                                 5     5      0     521
  1774 ;;                                              6 COMMON     5     5      0
  1775 ;;                          i1___lwmod
  1776 ;;                        _ReadButtons
  1777 ;; ---------------------------------------------------------------------------------
  1778 ;; (8) i1___lwmod                                            6     2      4     521
  1779 ;;                                              0 COMMON     6     2      4
  1780 ;; ---------------------------------------------------------------------------------
  1781 ;; (8) _ReadButtons                                          1     1      0       0
  1782 ;;                                              0 COMMON     1     1      0
  1783 ;; ---------------------------------------------------------------------------------
  1784 ;; Estimated maximum stack depth 8
  1785 ;; ---------------------------------------------------------------------------------
  1786                           
  1787 ;; Call Graph Graphs:
  1788                           
  1789 ;; _main (ROOT)
  1790 ;;   _init
  1791 ;;     _ser_init
  1792 ;;     _init_adc
  1793 ;;     _lcd_init
  1794 ;;       _lcd_write_control
  1795 ;;     _robo_init
  1796 ;;       _ser_putch
  1797 ;;   _robotLoadSong
  1798 ;;     _ser_putch
  1799 ;;   _robot_read
  1800 ;;     _ser_putch
  1801 ;;     _ser_getch
  1802 ;;       _ser_isrx
  1803 ;;   _readAvgDistance
  1804 ;;     _readDistance
  1805 ;;       _adc_read_channel
  1806 ;;         _adc_read
  1807 ;;     ___lwdiv
  1808 ;;       ___wmul (ARG)
  1809 ;;     _ADCconvert
  1810 ;;       ___wmul
  1811 ;;       ___lwdiv
  1812 ;;         ___wmul (ARG)
  1813 ;;   _UpdateDisplay
  1814 ;;     _lcd_write_control
  1815 ;;     _sprintf
  1816 ;;       _isdigit
  1817 ;;       ___wmul
  1818 ;;       ___lwdiv
  1819 ;;         ___wmul (ARG)
  1820 ;;       ___lwmod
  1821 ;;         ___lwdiv (ARG)
  1822 ;;           ___wmul (ARG)
  1823 ;;     _lcd_set_cursor
  1824 ;;       _lcd_write_control
  1825 ;;     _lcd_write_string
  1826 ;;       _lcd_write_data
  1827 ;;       ___awmod (ARG)
  1828 ;;     ___awmod
  1829 ;;     ___awdiv
  1830 ;;   _Menu
  1831 ;;   _calibrateIR
  1832 ;;     _rotate
  1833 ;;       _spi_transfer
  1834 ;;     _UpdateDisplay
  1835 ;;       _lcd_write_control
  1836 ;;       _sprintf
  1837 ;;         _isdigit
  1838 ;;         ___wmul
  1839 ;;         ___lwdiv
  1840 ;;           ___wmul (ARG)
  1841 ;;         ___lwmod
  1842 ;;           ___lwdiv (ARG)
  1843 ;;             ___wmul (ARG)
  1844 ;;       _lcd_set_cursor
  1845 ;;         _lcd_write_control
  1846 ;;       _lcd_write_string
  1847 ;;         _lcd_write_data
  1848 ;;         ___awmod (ARG)
  1849 ;;       ___awmod
  1850 ;;       ___awdiv
  1851 ;;   _Init_Follow_IR
  1852 ;;     _calibrateIR
  1853 ;;       _rotate
  1854 ;;         _spi_transfer
  1855 ;;       _UpdateDisplay
  1856 ;;         _lcd_write_control
  1857 ;;         _sprintf
  1858 ;;           _isdigit
  1859 ;;           ___wmul
  1860 ;;           ___lwdiv
  1861 ;;             ___wmul (ARG)
  1862 ;;           ___lwmod
  1863 ;;             ___lwdiv (ARG)
  1864 ;;               ___wmul (ARG)
  1865 ;;         _lcd_set_cursor
  1866 ;;           _lcd_write_control
  1867 ;;         _lcd_write_string
  1868 ;;           _lcd_write_data
  1869 ;;           ___awmod (ARG)
  1870 ;;         ___awmod
  1871 ;;         ___awdiv
  1872 ;;     _rotate
  1873 ;;       _spi_transfer
  1874 ;;   _FindVictim
  1875 ;;     _readAvgDistance
  1876 ;;       _readDistance
  1877 ;;         _adc_read_channel
  1878 ;;           _adc_read
  1879 ;;       ___lwdiv
  1880 ;;         ___wmul (ARG)
  1881 ;;       _ADCconvert
  1882 ;;         ___wmul
  1883 ;;         ___lwdiv
  1884 ;;           ___wmul (ARG)
  1885 ;;     _robotFollow
  1886 ;;       _RobotDrive
  1887 ;;         _ser_putch
  1888 ;;         ___awdiv (ARG)
  1889 ;;       _ser_putch
  1890 ;;       _readAvgDistance
  1891 ;;         _readDistance
  1892 ;;           _adc_read_channel
  1893 ;;             _adc_read
  1894 ;;         ___lwdiv
  1895 ;;           ___wmul (ARG)
  1896 ;;         _ADCconvert
  1897 ;;           ___wmul
  1898 ;;           ___lwdiv
  1899 ;;             ___wmul (ARG)
  1900 ;;       _rotate
  1901 ;;         _spi_transfer
  1902 ;;       _robot_read
  1903 ;;         _ser_putch
  1904 ;;         _ser_getch
  1905 ;;           _ser_isrx
  1906 ;;       _UpdateDisplay
  1907 ;;         _lcd_write_control
  1908 ;;         _sprintf
  1909 ;;           _isdigit
  1910 ;;           ___wmul
  1911 ;;           ___lwdiv
  1912 ;;             ___wmul (ARG)
  1913 ;;           ___lwmod
  1914 ;;             ___lwdiv (ARG)
  1915 ;;               ___wmul (ARG)
  1916 ;;         _lcd_set_cursor
  1917 ;;           _lcd_write_control
  1918 ;;         _lcd_write_string
  1919 ;;           _lcd_write_data
  1920 ;;           ___awmod (ARG)
  1921 ;;         ___awmod
  1922 ;;         ___awdiv
  1923 ;;     _RobotDrive
  1924 ;;       _ser_putch
  1925 ;;       ___awdiv (ARG)
  1926 ;;     _robotTurnSpeed
  1927 ;;       _robotTurn
  1928 ;;         _ser_putch
  1929 ;;       _robot_read
  1930 ;;         _ser_putch
  1931 ;;         _ser_getch
  1932 ;;           _ser_isrx
  1933 ;;       _UpdateDisplay
  1934 ;;         _lcd_write_control
  1935 ;;         _sprintf
  1936 ;;           _isdigit
  1937 ;;           ___wmul
  1938 ;;           ___lwdiv
  1939 ;;             ___wmul (ARG)
  1940 ;;           ___lwmod
  1941 ;;             ___lwdiv (ARG)
  1942 ;;               ___wmul (ARG)
  1943 ;;         _lcd_set_cursor
  1944 ;;           _lcd_write_control
  1945 ;;         _lcd_write_string
  1946 ;;           _lcd_write_data
  1947 ;;           ___awmod (ARG)
  1948 ;;         ___awmod
  1949 ;;         ___awdiv
  1950 ;;       _abs
  1951 ;;         ___wmul
  1952 ;;     _robotMoveSpeed
  1953 ;;       _RobotDrive
  1954 ;;         _ser_putch
  1955 ;;         ___awdiv (ARG)
  1956 ;;       _robot_read
  1957 ;;         _ser_putch
  1958 ;;         _ser_getch
  1959 ;;           _ser_isrx
  1960 ;;       _UpdateDisplay
  1961 ;;         _lcd_write_control
  1962 ;;         _sprintf
  1963 ;;           _isdigit
  1964 ;;           ___wmul
  1965 ;;           ___lwdiv
  1966 ;;             ___wmul (ARG)
  1967 ;;           ___lwmod
  1968 ;;             ___lwdiv (ARG)
  1969 ;;               ___wmul (ARG)
  1970 ;;         _lcd_set_cursor
  1971 ;;           _lcd_write_control
  1972 ;;         _lcd_write_string
  1973 ;;           _lcd_write_data
  1974 ;;           ___awmod (ARG)
  1975 ;;         ___awmod
  1976 ;;         ___awdiv
  1977 ;;       _abs
  1978 ;;         ___wmul
  1979 ;;     _ser_putch
  1980 ;;     _robot_turnLeft
  1981 ;;       _robotTurnSpeed
  1982 ;;         _robotTurn
  1983 ;;           _ser_putch
  1984 ;;         _robot_read
  1985 ;;           _ser_putch
  1986 ;;           _ser_getch
  1987 ;;             _ser_isrx
  1988 ;;         _UpdateDisplay
  1989 ;;           _lcd_write_control
  1990 ;;           _sprintf
  1991 ;;             _isdigit
  1992 ;;             ___wmul
  1993 ;;             ___lwdiv
  1994 ;;               ___wmul (ARG)
  1995 ;;             ___lwmod
  1996 ;;               ___lwdiv (ARG)
  1997 ;;                 ___wmul (ARG)
  1998 ;;           _lcd_set_cursor
  1999 ;;             _lcd_write_control
  2000 ;;           _lcd_write_string
  2001 ;;             _lcd_write_data
  2002 ;;             ___awmod (ARG)
  2003 ;;           ___awmod
  2004 ;;           ___awdiv
  2005 ;;         _abs
  2006 ;;           ___wmul
  2007 ;;     _robot_turnRight
  2008 ;;       _RobotDrive
  2009 ;;         _ser_putch
  2010 ;;         ___awdiv (ARG)
  2011 ;;       _rotate
  2012 ;;         _spi_transfer
  2013 ;;       _readAvgDistance
  2014 ;;         _readDistance
  2015 ;;           _adc_read_channel
  2016 ;;             _adc_read
  2017 ;;         ___lwdiv
  2018 ;;           ___wmul (ARG)
  2019 ;;         _ADCconvert
  2020 ;;           ___wmul
  2021 ;;           ___lwdiv
  2022 ;;             ___wmul (ARG)
  2023 ;;       _robot_read
  2024 ;;         _ser_putch
  2025 ;;         _ser_getch
  2026 ;;           _ser_isrx
  2027 ;;       _UpdateDisplay
  2028 ;;         _lcd_write_control
  2029 ;;         _sprintf
  2030 ;;           _isdigit
  2031 ;;           ___wmul
  2032 ;;           ___lwdiv
  2033 ;;             ___wmul (ARG)
  2034 ;;           ___lwmod
  2035 ;;             ___lwdiv (ARG)
  2036 ;;               ___wmul (ARG)
  2037 ;;         _lcd_set_cursor
  2038 ;;           _lcd_write_control
  2039 ;;         _lcd_write_string
  2040 ;;           _lcd_write_data
  2041 ;;           ___awmod (ARG)
  2042 ;;         ___awmod
  2043 ;;         ___awdiv
  2044 ;;       ___awdiv
  2045 ;;       _abs
  2046 ;;         ___wmul
  2047 ;;   _GoHome
  2048 ;;     _robotTurnSpeed
  2049 ;;       _robotTurn
  2050 ;;         _ser_putch
  2051 ;;       _robot_read
  2052 ;;         _ser_putch
  2053 ;;         _ser_getch
  2054 ;;           _ser_isrx
  2055 ;;       _UpdateDisplay
  2056 ;;         _lcd_write_control
  2057 ;;         _sprintf
  2058 ;;           _isdigit
  2059 ;;           ___wmul
  2060 ;;           ___lwdiv
  2061 ;;             ___wmul (ARG)
  2062 ;;           ___lwmod
  2063 ;;             ___lwdiv (ARG)
  2064 ;;               ___wmul (ARG)
  2065 ;;         _lcd_set_cursor
  2066 ;;           _lcd_write_control
  2067 ;;         _lcd_write_string
  2068 ;;           _lcd_write_data
  2069 ;;           ___awmod (ARG)
  2070 ;;         ___awmod
  2071 ;;         ___awdiv
  2072 ;;       _abs
  2073 ;;         ___wmul
  2074 ;;     _robot_turnRight
  2075 ;;       _RobotDrive
  2076 ;;         _ser_putch
  2077 ;;         ___awdiv (ARG)
  2078 ;;       _rotate
  2079 ;;         _spi_transfer
  2080 ;;       _readAvgDistance
  2081 ;;         _readDistance
  2082 ;;           _adc_read_channel
  2083 ;;             _adc_read
  2084 ;;         ___lwdiv
  2085 ;;           ___wmul (ARG)
  2086 ;;         _ADCconvert
  2087 ;;           ___wmul
  2088 ;;           ___lwdiv
  2089 ;;             ___wmul (ARG)
  2090 ;;       _robot_read
  2091 ;;         _ser_putch
  2092 ;;         _ser_getch
  2093 ;;           _ser_isrx
  2094 ;;       _UpdateDisplay
  2095 ;;         _lcd_write_control
  2096 ;;         _sprintf
  2097 ;;           _isdigit
  2098 ;;           ___wmul
  2099 ;;           ___lwdiv
  2100 ;;             ___wmul (ARG)
  2101 ;;           ___lwmod
  2102 ;;             ___lwdiv (ARG)
  2103 ;;               ___wmul (ARG)
  2104 ;;         _lcd_set_cursor
  2105 ;;           _lcd_write_control
  2106 ;;         _lcd_write_string
  2107 ;;           _lcd_write_data
  2108 ;;           ___awmod (ARG)
  2109 ;;         ___awmod
  2110 ;;         ___awdiv
  2111 ;;       ___awdiv
  2112 ;;       _abs
  2113 ;;         ___wmul
  2114 ;;     _readAvgDistance
  2115 ;;       _readDistance
  2116 ;;         _adc_read_channel
  2117 ;;           _adc_read
  2118 ;;       ___lwdiv
  2119 ;;         ___wmul (ARG)
  2120 ;;       _ADCconvert
  2121 ;;         ___wmul
  2122 ;;         ___lwdiv
  2123 ;;           ___wmul (ARG)
  2124 ;;     _robotFollow
  2125 ;;       _RobotDrive
  2126 ;;         _ser_putch
  2127 ;;         ___awdiv (ARG)
  2128 ;;       _ser_putch
  2129 ;;       _readAvgDistance
  2130 ;;         _readDistance
  2131 ;;           _adc_read_channel
  2132 ;;             _adc_read
  2133 ;;         ___lwdiv
  2134 ;;           ___wmul (ARG)
  2135 ;;         _ADCconvert
  2136 ;;           ___wmul
  2137 ;;           ___lwdiv
  2138 ;;             ___wmul (ARG)
  2139 ;;       _rotate
  2140 ;;         _spi_transfer
  2141 ;;       _robot_read
  2142 ;;         _ser_putch
  2143 ;;         _ser_getch
  2144 ;;           _ser_isrx
  2145 ;;       _UpdateDisplay
  2146 ;;         _lcd_write_control
  2147 ;;         _sprintf
  2148 ;;           _isdigit
  2149 ;;           ___wmul
  2150 ;;           ___lwdiv
  2151 ;;             ___wmul (ARG)
  2152 ;;           ___lwmod
  2153 ;;             ___lwdiv (ARG)
  2154 ;;               ___wmul (ARG)
  2155 ;;         _lcd_set_cursor
  2156 ;;           _lcd_write_control
  2157 ;;         _lcd_write_string
  2158 ;;           _lcd_write_data
  2159 ;;           ___awmod (ARG)
  2160 ;;         ___awmod
  2161 ;;         ___awdiv
  2162 ;;     _robot_turnLeft
  2163 ;;       _robotTurnSpeed
  2164 ;;         _robotTurn
  2165 ;;           _ser_putch
  2166 ;;         _robot_read
  2167 ;;           _ser_putch
  2168 ;;           _ser_getch
  2169 ;;             _ser_isrx
  2170 ;;         _UpdateDisplay
  2171 ;;           _lcd_write_control
  2172 ;;           _sprintf
  2173 ;;             _isdigit
  2174 ;;             ___wmul
  2175 ;;             ___lwdiv
  2176 ;;               ___wmul (ARG)
  2177 ;;             ___lwmod
  2178 ;;               ___lwdiv (ARG)
  2179 ;;                 ___wmul (ARG)
  2180 ;;           _lcd_set_cursor
  2181 ;;             _lcd_write_control
  2182 ;;           _lcd_write_string
  2183 ;;             _lcd_write_data
  2184 ;;             ___awmod (ARG)
  2185 ;;           ___awmod
  2186 ;;           ___awdiv
  2187 ;;         _abs
  2188 ;;           ___wmul
  2189 ;;     _rotate
  2190 ;;       _spi_transfer
  2191 ;;     _robotMoveSpeed
  2192 ;;       _RobotDrive
  2193 ;;         _ser_putch
  2194 ;;         ___awdiv (ARG)
  2195 ;;       _robot_read
  2196 ;;         _ser_putch
  2197 ;;         _ser_getch
  2198 ;;           _ser_isrx
  2199 ;;       _UpdateDisplay
  2200 ;;         _lcd_write_control
  2201 ;;         _sprintf
  2202 ;;           _isdigit
  2203 ;;           ___wmul
  2204 ;;           ___lwdiv
  2205 ;;             ___wmul (ARG)
  2206 ;;           ___lwmod
  2207 ;;             ___lwdiv (ARG)
  2208 ;;               ___wmul (ARG)
  2209 ;;         _lcd_set_cursor
  2210 ;;           _lcd_write_control
  2211 ;;         _lcd_write_string
  2212 ;;           _lcd_write_data
  2213 ;;           ___awmod (ARG)
  2214 ;;         ___awmod
  2215 ;;         ___awdiv
  2216 ;;       _abs
  2217 ;;         ___wmul
  2218 ;;   _ChargeMode
  2219 ;;     _ser_putch
  2220 ;;     _RobotBattRead
  2221 ;;       _ser_putch
  2222 ;;       _ser_getch
  2223 ;;         _ser_isrx
  2224 ;;     _UpdateDisplay
  2225 ;;       _lcd_write_control
  2226 ;;       _sprintf
  2227 ;;         _isdigit
  2228 ;;         ___wmul
  2229 ;;         ___lwdiv
  2230 ;;           ___wmul (ARG)
  2231 ;;         ___lwmod
  2232 ;;           ___lwdiv (ARG)
  2233 ;;             ___wmul (ARG)
  2234 ;;       _lcd_set_cursor
  2235 ;;         _lcd_write_control
  2236 ;;       _lcd_write_string
  2237 ;;         _lcd_write_data
  2238 ;;         ___awmod (ARG)
  2239 ;;       ___awmod
  2240 ;;       ___awdiv
  2241 ;;
  2242 ;; _isr1 (ROOT)
  2243 ;;   i1___lwmod
  2244 ;;   _ReadButtons
  2245 ;;
  2246                           
  2247 ;; Address spaces:
  2248                           
  2249 ;;Name               Size   Autos  Total    Cost      Usage
  2250 ;;BANK3               60      0      30       9       50.0%
  2251 ;;BITBANK3            60      0       0       8        0.0%
  2252 ;;SFR3                 0      0       0       4        0.0%
  2253 ;;BITSFR3              0      0       0       4        0.0%
  2254 ;;BANK2               60      0       0      11        0.0%
  2255 ;;BITBANK2            60      0       0      10        0.0%
  2256 ;;SFR2                 0      0       0       5        0.0%
  2257 ;;BITSFR2              0      0       0       5        0.0%
  2258 ;;SFR1                 0      0       0       2        0.0%
  2259 ;;BITSFR1              0      0       0       2        0.0%
  2260 ;;BANK1               50      3      47       7       88.8%
  2261 ;;BITBANK1            50      0       0       6        0.0%
  2262 ;;CODE                 0      0       0       0        0.0%
  2263 ;;DATA                 0      0      DF      12        0.0%
  2264 ;;ABS                  0      0      D5       3        0.0%
  2265 ;;NULL                 0      0       0       0        0.0%
  2266 ;;STACK                0      0       A       2        0.0%
  2267 ;;BANK0               50     4E      50       5      100.0%
  2268 ;;BITBANK0            50      0       0       4        0.0%
  2269 ;;SFR0                 0      0       0       1        0.0%
  2270 ;;BITSFR0              0      0       0       1        0.0%
  2271 ;;COMMON               E      B       E       1      100.0%
  2272 ;;BITCOMMON            E      0       2       0       14.3%
  2273 ;;EEDATA             100      0       0       0        0.0%
  2274                           
  2275                           	global	_main
  2276                           psect	maintext,global,class=CODE,delta=2
  2277                           global __pmaintext
  2278  146C                     __pmaintext:
  2279                           
  2280 ;; *************** function _main *****************
  2281 ;; Defined at:
  2282 ;;		line 173 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  shortwall       2    0[BANK1 ] int 
  2287 ;;  choice          1    2[BANK1 ] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;		None               void
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 17F/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         0       0       3       0       0
  2299 ;;      Temps:          0       2       0       0       0
  2300 ;;      Totals:         0       2       3       0       0
  2301 ;;Total ram usage:        5 bytes
  2302 ;; Hardware stack levels required when called:    8
  2303 ;; This function calls:
  2304 ;;		_init
  2305 ;;		_robotLoadSong
  2306 ;;		_robot_read
  2307 ;;		_readAvgDistance
  2308 ;;		_UpdateDisplay
  2309 ;;		_Menu
  2310 ;;		_calibrateIR
  2311 ;;		_Init_Follow_IR
  2312 ;;		_FindVictim
  2313 ;;		_GoHome
  2314 ;;		_ChargeMode
  2315 ;; This function is called by:
  2316 ;;		Startup code after reset
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           psect	maintext
  2320                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2321                           	line	173
  2322                           	global	__size_of_main
  2323  00BD                     	__size_of_main	equ	__end_of_main-_main
  2324                           	
  2325  146C                     _main:	
  2326                           	opt	stack 0
  2327                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2328                           	line	174
  2329                           	
  2330  146C                     l12488:	
  2331                           ;Main.c: 174: unsigned char choice = 255;
  2332  146C  30FF               	movlw	(0FFh)
  2333  146D  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  146E  1303               	bcf	status, 6	;RP1=0, select bank0
  2335  146F  00EC               	movwf	(??_main+0)+0
  2336  1470  086C               	movf	(??_main+0)+0,w
  2337  1471  1683               	bsf	status, 5	;RP0=1, select bank1
  2338  1472  1303               	bcf	status, 6	;RP1=0, select bank1
  2339  1473  00E6               	movwf	(main@choice)^080h
  2340                           	line	175
  2341                           	
  2342  1474                     l12490:	
  2343                           ;Main.c: 175: int shortwall = 0;
  2344  1474  01E4               	clrf	(main@shortwall)^080h
  2345  1475  01E5               	clrf	(main@shortwall+1)^080h
  2346                           	line	176
  2347                           	
  2348  1476                     l12492:	
  2349                           ;Main.c: 176: currentFlw = 0;
  2350  1476  01CC               	clrf	(_currentFlw)^080h
  2351                           	line	177
  2352                           	
  2353  1477                     l12494:	
  2354                           ;Main.c: 177: RobotPos = 0;
  2355  1477  01C7               	clrf	(_RobotPos)^080h
  2356                           	line	178
  2357                           	
  2358  1478                     l12496:	
  2359                           ;Main.c: 178: currentMenu = 0;
  2360  1478  01CD               	clrf	(_currentMenu)^080h	;volatile
  2361                           	line	180
  2362                           	
  2363  1479                     l12498:	
  2364                           ;Main.c: 180: init();
  2365  1479  160A  158A  2448   	fcall	_init
              160A  118A         
  2366                           	line	181
  2367                           	
  2368  147E                     l12500:	
  2369                           ;Main.c: 181: robotLoadSong();
  2370  147E  160A  158A  260C   	fcall	_robotLoadSong
              160A  118A         
  2371  1483  2C84               	goto	l12502
  2372                           	line	183
  2373                           ;Main.c: 183: while(1)
  2374                           	
  2375  1484                     l2292:	
  2376                           	line	185
  2377                           	
  2378  1484                     l12502:	
  2379                           ;Main.c: 184: {
  2380                           ;Main.c: 185: if (RTC_FLAG_250MS == 1)
  2381  1484  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2382  1485  2C87               	goto	u5631
  2383  1486  2C88               	goto	u5630
  2384  1487                     u5631:
  2385  1487  2CAB               	goto	l12514
  2386  1488                     u5630:
  2387                           	line	187
  2388                           	
  2389  1488                     l12504:	
  2390                           ;Main.c: 186: {
  2391                           ;Main.c: 187: RTC_FLAG_250MS = 0;
  2392  1488  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2393                           	line	188
  2394                           	
  2395  1489                     l12506:	
  2396                           ;Main.c: 188: robot_read(2);
  2397  1489  3002               	movlw	(02h)
  2398  148A  160A  118A  26DB   	fcall	_robot_read
              160A  118A         
  2399                           	line	189
  2400                           	
  2401  148F                     l12508:	
  2402                           ;Main.c: 189: readAvgDistance();
  2403  148F  160A  118A  2217   	fcall	_readAvgDistance
              160A  118A         
  2404                           	line	190
  2405                           	
  2406  1494                     l12510:	
  2407                           ;Main.c: 190: Disp2 = RobotPos;
  2408  1494  1683               	bsf	status, 5	;RP0=1, select bank1
  2409  1495  1303               	bcf	status, 6	;RP1=0, select bank1
  2410  1496  0847               	movf	(_RobotPos)^080h,w
  2411  1497  1283               	bcf	status, 5	;RP0=0, select bank0
  2412  1498  1303               	bcf	status, 6	;RP1=0, select bank0
  2413  1499  00EC               	movwf	(??_main+0)+0
  2414  149A  01ED               	clrf	(??_main+0)+0+1
  2415  149B  086C               	movf	0+(??_main+0)+0,w
  2416  149C  1683               	bsf	status, 5	;RP0=1, select bank1
  2417  149D  1303               	bcf	status, 6	;RP1=0, select bank1
  2418  149E  00A6               	movwf	(_Disp2)^080h
  2419  149F  1283               	bcf	status, 5	;RP0=0, select bank0
  2420  14A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2421  14A1  086D               	movf	1+(??_main+0)+0,w
  2422  14A2  1683               	bsf	status, 5	;RP0=1, select bank1
  2423  14A3  1303               	bcf	status, 6	;RP1=0, select bank1
  2424  14A4  00A7               	movwf	(_Disp2+1)^080h
  2425                           	line	191
  2426                           	
  2427  14A5                     l12512:	
  2428                           ;Main.c: 191: UpdateDisplay();
  2429  14A5  120A  118A  2401   	fcall	_UpdateDisplay
              160A  118A         
  2430  14AA  2CAB               	goto	l12514
  2431                           	line	192
  2432                           	
  2433  14AB                     l2293:	
  2434                           	line	193
  2435                           	
  2436  14AB                     l12514:	
  2437                           ;Main.c: 192: }
  2438                           ;Main.c: 193: if (buttonPressed)
  2439  14AB  1683               	bsf	status, 5	;RP0=1, select bank1
  2440  14AC  1303               	bcf	status, 6	;RP1=0, select bank1
  2441  14AD  084B               	movf	(_buttonPressed)^080h,w	;volatile
  2442  14AE  1D03               	skipz
  2443  14AF  2CB1               	goto	u5640
  2444  14B0  2D06               	goto	l12540
  2445  14B1                     u5640:
  2446                           	line	196
  2447                           	
  2448  14B1                     l12516:	
  2449                           ;Main.c: 195: {
  2450                           ;Main.c: 196: choice = Menu(buttonPressed);
  2451  14B1  084B               	movf	(_buttonPressed)^080h,w	;volatile
  2452  14B2  160A  118A  20E6   	fcall	_Menu
              160A  118A         
  2453  14B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2454  14B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2455  14B9  00EC               	movwf	(??_main+0)+0
  2456  14BA  086C               	movf	(??_main+0)+0,w
  2457  14BB  1683               	bsf	status, 5	;RP0=1, select bank1
  2458  14BC  1303               	bcf	status, 6	;RP1=0, select bank1
  2459  14BD  00E6               	movwf	(main@choice)^080h
  2460                           	line	197
  2461                           	
  2462  14BE                     l12518:	
  2463                           ;Main.c: 197: buttonPressed = 0;
  2464  14BE  01CB               	clrf	(_buttonPressed)^080h	;volatile
  2465  14BF  2D06               	goto	l12540
  2466                           	line	198
  2467                           	
  2468  14C0                     l2294:	
  2469                           	line	202
  2470                           ;Main.c: 198: }
  2471                           ;Main.c: 202: switch (choice)
  2472  14C0  2D06               	goto	l12540
  2473                           	line	204
  2474                           ;Main.c: 203: {
  2475                           ;Main.c: 204: case 0:
  2476                           	
  2477  14C1                     l2296:	
  2478                           	line	205
  2479                           	
  2480  14C1                     l12520:	
  2481                           ;Main.c: 205: calibrateIR();
  2482  14C1  160A  158A  2790   	fcall	_calibrateIR
              160A  118A         
  2483                           	line	206
  2484                           ;Main.c: 206: break;
  2485  14C6  2D1C               	goto	l12542
  2486                           	line	207
  2487                           ;Main.c: 207: case 1:
  2488                           	
  2489  14C7                     l2298:	
  2490                           	line	208
  2491                           ;Main.c: 208: RobotPos = 0;
  2492  14C7  01C7               	clrf	(_RobotPos)^080h
  2493                           	line	210
  2494                           ;Main.c: 210: break;
  2495  14C8  2D1C               	goto	l12542
  2496                           	line	211
  2497                           ;Main.c: 211: case 2:
  2498                           	
  2499  14C9                     l2299:	
  2500                           	line	212
  2501                           	
  2502  14C9                     l12522:	
  2503                           ;Main.c: 212: RobotPos = 6;
  2504  14C9  3006               	movlw	(06h)
  2505  14CA  1283               	bcf	status, 5	;RP0=0, select bank0
  2506  14CB  1303               	bcf	status, 6	;RP1=0, select bank0
  2507  14CC  00EC               	movwf	(??_main+0)+0
  2508  14CD  086C               	movf	(??_main+0)+0,w
  2509  14CE  1683               	bsf	status, 5	;RP0=1, select bank1
  2510  14CF  1303               	bcf	status, 6	;RP1=0, select bank1
  2511  14D0  00C7               	movwf	(_RobotPos)^080h
  2512                           	line	214
  2513                           ;Main.c: 214: break;
  2514  14D1  2D1C               	goto	l12542
  2515                           	line	215
  2516                           ;Main.c: 215: case 3:
  2517                           	
  2518  14D2                     l2300:	
  2519                           	line	217
  2520                           	
  2521  14D2                     l12524:	
  2522                           ;Main.c: 217: RobotPos = 12;
  2523  14D2  300C               	movlw	(0Ch)
  2524  14D3  1283               	bcf	status, 5	;RP0=0, select bank0
  2525  14D4  1303               	bcf	status, 6	;RP1=0, select bank0
  2526  14D5  00EC               	movwf	(??_main+0)+0
  2527  14D6  086C               	movf	(??_main+0)+0,w
  2528  14D7  1683               	bsf	status, 5	;RP0=1, select bank1
  2529  14D8  1303               	bcf	status, 6	;RP1=0, select bank1
  2530  14D9  00C7               	movwf	(_RobotPos)^080h
  2531                           	line	218
  2532                           ;Main.c: 218: break;
  2533  14DA  2D1C               	goto	l12542
  2534                           	line	219
  2535                           ;Main.c: 219: case 4:
  2536                           	
  2537  14DB                     l2301:	
  2538                           	line	220
  2539                           ;Main.c: 220: FoundVictim = 0;
  2540  14DB  01C3               	clrf	(_FoundVictim)^080h
  2541                           	line	221
  2542                           	
  2543  14DC                     l12526:	
  2544                           ;Main.c: 221: Init_Follow_IR();
  2545  14DC  160A  158A  22CF   	fcall	_Init_Follow_IR
              160A  118A         
  2546                           	line	222
  2547                           	
  2548  14E1                     l12528:	
  2549                           ;Main.c: 222: currentMenu = 3;
  2550  14E1  3003               	movlw	(03h)
  2551  14E2  1283               	bcf	status, 5	;RP0=0, select bank0
  2552  14E3  1303               	bcf	status, 6	;RP1=0, select bank0
  2553  14E4  00EC               	movwf	(??_main+0)+0
  2554  14E5  086C               	movf	(??_main+0)+0,w
  2555  14E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2556  14E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2557  14E8  00CD               	movwf	(_currentMenu)^080h	;volatile
  2558                           	line	223
  2559                           	
  2560  14E9                     l12530:	
  2561                           ;Main.c: 223: FindVictim();
  2562  14E9  120A  158A  21BB   	fcall	_FindVictim
              160A  118A         
  2563                           	line	224
  2564                           ;Main.c: 224: if (FoundVictim)
  2565  14EE  1683               	bsf	status, 5	;RP0=1, select bank1
  2566  14EF  1303               	bcf	status, 6	;RP1=0, select bank1
  2567  14F0  0843               	movf	(_FoundVictim)^080h,w
  2568  14F1  1D03               	skipz
  2569  14F2  2CF4               	goto	u5650
  2570  14F3  2CFA               	goto	l12534
  2571  14F4                     u5650:
  2572                           	line	225
  2573                           	
  2574  14F4                     l12532:	
  2575                           ;Main.c: 225: GoHome();
  2576  14F4  120A  118A  267E   	fcall	_GoHome
              160A  118A         
  2577  14F9  2CFA               	goto	l12534
  2578                           	
  2579  14FA                     l2302:	
  2580                           	line	226
  2581                           	
  2582  14FA                     l12534:	
  2583                           ;Main.c: 226: ROBOTerror = 0;
  2584  14FA  1683               	bsf	status, 5	;RP0=1, select bank1
  2585  14FB  1303               	bcf	status, 6	;RP1=0, select bank1
  2586  14FC  01C5               	clrf	(_ROBOTerror)^080h
  2587                           	line	227
  2588                           ;Main.c: 227: break;
  2589  14FD  2D1C               	goto	l12542
  2590                           	line	229
  2591                           ;Main.c: 229: case 5:
  2592                           	
  2593  14FE                     l2303:	
  2594                           	line	230
  2595                           	
  2596  14FE                     l12536:	
  2597                           ;Main.c: 230: ChargeMode();
  2598  14FE  160A  158A  256F   	fcall	_ChargeMode
              160A  118A         
  2599                           	line	231
  2600                           ;Main.c: 231: break;
  2601  1503  2D1C               	goto	l12542
  2602                           	line	232
  2603                           ;Main.c: 232: default:
  2604                           	
  2605  1504                     l2304:	
  2606                           	line	234
  2607                           ;Main.c: 234: break;
  2608  1504  2D1C               	goto	l12542
  2609                           	line	235
  2610                           	
  2611  1505                     l12538:	
  2612                           ;Main.c: 235: }
  2613  1505  2D1C               	goto	l12542
  2614                           	line	202
  2615                           	
  2616  1506                     l2295:	
  2617                           	
  2618  1506                     l12540:	
  2619  1506  1683               	bsf	status, 5	;RP0=1, select bank1
  2620  1507  1303               	bcf	status, 6	;RP1=0, select bank1
  2621  1508  0866               	movf	(main@choice)^080h,w
  2622                           	; Switch size 1, requested type "space"
  2623                           ; Number of cases is 6, Range of values is 0 to 5
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; simple_byte           19    10 (average)
  2627                           ; direct_byte           26     8 (fixed)
  2628                           ; jumptable            260     6 (fixed)
  2629                           ; rangetable            10     6 (fixed)
  2630                           ; spacedrange           18     9 (fixed)
  2631                           ; locatedrange           6     3 (fixed)
  2632                           ;	Chosen strategy is simple_byte
  2633                           
  2634                           	opt asmopt_off
  2635  1509  3A00               	xorlw	0^0	; case 0
  2636  150A  1903               	skipnz
  2637  150B  2CC1               	goto	l12520
  2638  150C  3A01               	xorlw	1^0	; case 1
  2639  150D  1903               	skipnz
  2640  150E  2CC7               	goto	l2298
  2641  150F  3A03               	xorlw	2^1	; case 2
  2642  1510  1903               	skipnz
  2643  1511  2CC9               	goto	l12522
  2644  1512  3A01               	xorlw	3^2	; case 3
  2645  1513  1903               	skipnz
  2646  1514  2CD2               	goto	l12524
  2647  1515  3A07               	xorlw	4^3	; case 4
  2648  1516  1903               	skipnz
  2649  1517  2CDB               	goto	l2301
  2650  1518  3A01               	xorlw	5^4	; case 5
  2651  1519  1903               	skipnz
  2652  151A  2CFE               	goto	l12536
  2653  151B  2D1C               	goto	l12542
  2654                           	opt asmopt_on
  2655                           
  2656                           	line	235
  2657                           	
  2658  151C                     l2297:	
  2659                           	line	236
  2660                           	
  2661  151C                     l12542:	
  2662                           ;Main.c: 236: choice = 255;
  2663  151C  30FF               	movlw	(0FFh)
  2664  151D  1283               	bcf	status, 5	;RP0=0, select bank0
  2665  151E  1303               	bcf	status, 6	;RP1=0, select bank0
  2666  151F  00EC               	movwf	(??_main+0)+0
  2667  1520  086C               	movf	(??_main+0)+0,w
  2668  1521  1683               	bsf	status, 5	;RP0=1, select bank1
  2669  1522  1303               	bcf	status, 6	;RP1=0, select bank1
  2670  1523  00E6               	movwf	(main@choice)^080h
  2671  1524  2C84               	goto	l12502
  2672                           	line	237
  2673                           	
  2674  1525                     l2305:	
  2675                           	line	183
  2676  1525  2C84               	goto	l12502
  2677                           	
  2678  1526                     l2306:	
  2679                           	line	238
  2680                           	
  2681  1526                     l2307:	
  2682                           	global	start
  2683  1526  120A  118A  2812   	ljmp	start
  2684                           	opt stack 0
  2685                           GLOBAL	__end_of_main
  2686  1529                     	__end_of_main:
  2687 ;; =============== function _main ends ============
  2688                           
  2689                           	signat	_main,88
  2690                           	global	_GoHome
  2691                           psect	text1111,local,class=CODE,delta=2
  2692                           global __ptext1111
  2693  067E                     __ptext1111:
  2694                           
  2695 ;; *************** function _GoHome *****************
  2696 ;; Defined at:
  2697 ;;		line 248 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;		None               void
  2704 ;; Registers used:
  2705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          0       1       0       0       0
  2714 ;;      Totals:         0       1       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    7
  2718 ;; This function calls:
  2719 ;;		_robotTurnSpeed
  2720 ;;		_robot_turnRight
  2721 ;;		_readAvgDistance
  2722 ;;		_robotFollow
  2723 ;;		_robot_turnLeft
  2724 ;;		_rotate
  2725 ;;		_robotMoveSpeed
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           psect	text1111
  2731                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2732                           	line	248
  2733                           	global	__size_of_GoHome
  2734  0146                     	__size_of_GoHome	equ	__end_of_GoHome-_GoHome
  2735                           	
  2736  067E                     _GoHome:	
  2737                           	opt	stack 0
  2738                           ; Regs used in _GoHome: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2739                           	line	249
  2740                           	
  2741  067E                     l12438:	
  2742                           ;Main.c: 249: switch (RobotPos)
  2743  067E  2EAB               	goto	l12446
  2744                           	line	251
  2745                           ;Main.c: 250: {
  2746                           ;Main.c: 251: case 7:
  2747                           	
  2748  067F                     l2314:	
  2749                           	line	252
  2750                           	
  2751  067F                     l12440:	
  2752                           ;Main.c: 252: robotTurnSpeed(175,400);
  2753  067F  30AF               	movlw	low(0AFh)
  2754  0680  1283               	bcf	status, 5	;RP0=0, select bank0
  2755  0681  1303               	bcf	status, 6	;RP1=0, select bank0
  2756  0682  00DD               	movwf	(?_robotTurnSpeed)
  2757  0683  3000               	movlw	high(0AFh)
  2758  0684  00DE               	movwf	((?_robotTurnSpeed))+1
  2759  0685  3090               	movlw	low(0190h)
  2760  0686  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  2761  0687  3001               	movlw	high(0190h)
  2762  0688  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2763  0689  160A  118A  231E   	fcall	_robotTurnSpeed
              120A  118A         
  2764                           	line	253
  2765                           ;Main.c: 253: break;
  2766  068E  2FBA               	goto	l12486
  2767                           	line	254
  2768                           ;Main.c: 254: case 15:
  2769                           	
  2770  068F                     l2316:	
  2771                           	line	255
  2772                           	
  2773  068F                     l12442:	
  2774                           ;Main.c: 255: robotTurnSpeed(175,400);
  2775  068F  30AF               	movlw	low(0AFh)
  2776  0690  1283               	bcf	status, 5	;RP0=0, select bank0
  2777  0691  1303               	bcf	status, 6	;RP1=0, select bank0
  2778  0692  00DD               	movwf	(?_robotTurnSpeed)
  2779  0693  3000               	movlw	high(0AFh)
  2780  0694  00DE               	movwf	((?_robotTurnSpeed))+1
  2781  0695  3090               	movlw	low(0190h)
  2782  0696  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  2783  0697  3001               	movlw	high(0190h)
  2784  0698  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2785  0699  160A  118A  231E   	fcall	_robotTurnSpeed
              120A  118A         
  2786                           	line	256
  2787                           ;Main.c: 256: robot_turnRight(200);
  2788  069E  30C8               	movlw	low(0C8h)
  2789  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  2790  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2791  06A1  00DD               	movwf	(?_robot_turnRight)
  2792  06A2  3000               	movlw	high(0C8h)
  2793  06A3  00DE               	movwf	((?_robot_turnRight))+1
  2794  06A4  120A  118A  2015   	fcall	_robot_turnRight
              120A  118A         
  2795                           	line	257
  2796                           ;Main.c: 257: break;
  2797  06A9  2FBA               	goto	l12486
  2798                           	line	258
  2799                           	
  2800  06AA                     l12444:	
  2801                           ;Main.c: 258: }
  2802  06AA  2FBA               	goto	l12486
  2803                           	line	249
  2804                           	
  2805  06AB                     l2313:	
  2806                           	
  2807  06AB                     l12446:	
  2808  06AB  1683               	bsf	status, 5	;RP0=1, select bank1
  2809  06AC  1303               	bcf	status, 6	;RP1=0, select bank1
  2810  06AD  0847               	movf	(_RobotPos)^080h,w
  2811                           	; Switch size 1, requested type "space"
  2812                           ; Number of cases is 2, Range of values is 7 to 15
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte            7     4 (average)
  2816                           ; direct_byte           38    11 (fixed)
  2817                           ; jumptable            263     9 (fixed)
  2818                           ;	Chosen strategy is simple_byte
  2819                           
  2820                           	opt asmopt_off
  2821  06AE  3A07               	xorlw	7^0	; case 7
  2822  06AF  1903               	skipnz
  2823  06B0  2E7F               	goto	l12440
  2824  06B1  3A08               	xorlw	15^7	; case 15
  2825  06B2  1903               	skipnz
  2826  06B3  2E8F               	goto	l12442
  2827  06B4  2FBA               	goto	l12486
  2828                           	opt asmopt_on
  2829                           
  2830                           	line	258
  2831                           	
  2832  06B5                     l2315:	
  2833                           	line	259
  2834                           ;Main.c: 259: while (ROBOTerror != 9)
  2835  06B5  2FBA               	goto	l12486
  2836                           	
  2837  06B6                     l2318:	
  2838                           	line	262
  2839                           ;Main.c: 260: {
  2840                           ;Main.c: 262: switch (ROBOTerror)
  2841  06B6  2F9D               	goto	l12484
  2842                           	line	264
  2843                           ;Main.c: 263: {
  2844                           ;Main.c: 264: case 0:
  2845                           	
  2846  06B7                     l2320:	
  2847                           	line	266
  2848                           	
  2849  06B7                     l12448:	
  2850                           ;Main.c: 266: readAvgDistance();
  2851  06B7  160A  118A  2217   	fcall	_readAvgDistance
              120A  118A         
  2852                           	line	267
  2853                           ;Main.c: 267: robotFollow(200, adcVal, currentFlw);
  2854  06BC  30C8               	movlw	low(0C8h)
  2855  06BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2856  06BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2857  06BF  00DD               	movwf	(?_robotFollow)
  2858  06C0  3000               	movlw	high(0C8h)
  2859  06C1  00DE               	movwf	((?_robotFollow))+1
  2860  06C2  086F               	movf	(_adcVal+1),w	;volatile
  2861  06C3  01E0               	clrf	1+(?_robotFollow)+02h
  2862  06C4  07E0               	addwf	1+(?_robotFollow)+02h
  2863  06C5  086E               	movf	(_adcVal),w	;volatile
  2864  06C6  01DF               	clrf	0+(?_robotFollow)+02h
  2865  06C7  07DF               	addwf	0+(?_robotFollow)+02h
  2866                           
  2867  06C8  1683               	bsf	status, 5	;RP0=1, select bank1
  2868  06C9  1303               	bcf	status, 6	;RP1=0, select bank1
  2869  06CA  084C               	movf	(_currentFlw)^080h,w
  2870  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  2871  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  2872  06CD  00E9               	movwf	(??_GoHome+0)+0
  2873  06CE  0869               	movf	(??_GoHome+0)+0,w
  2874  06CF  00E1               	movwf	0+(?_robotFollow)+04h
  2875  06D0  120A  158A  25AB   	fcall	_robotFollow
              120A  118A         
  2876                           	line	268
  2877                           ;Main.c: 268: break;
  2878  06D5  2FBA               	goto	l12486
  2879                           	line	269
  2880                           ;Main.c: 269: case 1:
  2881                           	
  2882  06D6                     l2322:	
  2883                           	line	270
  2884                           	
  2885  06D6                     l12450:	
  2886                           ;Main.c: 270: ROBOTerror = 9;
  2887  06D6  3009               	movlw	(09h)
  2888  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2889  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2890  06D9  00E9               	movwf	(??_GoHome+0)+0
  2891  06DA  0869               	movf	(??_GoHome+0)+0,w
  2892  06DB  1683               	bsf	status, 5	;RP0=1, select bank1
  2893  06DC  1303               	bcf	status, 6	;RP1=0, select bank1
  2894  06DD  00C5               	movwf	(_ROBOTerror)^080h
  2895                           	line	271
  2896                           ;Main.c: 271: break;
  2897  06DE  2FBA               	goto	l12486
  2898                           	line	272
  2899                           ;Main.c: 272: case 2:
  2900                           	
  2901  06DF                     l2323:	
  2902                           	line	273
  2903                           	
  2904  06DF                     l12452:	
  2905                           ;Main.c: 273: ROBOTerror = 9;
  2906  06DF  3009               	movlw	(09h)
  2907  06E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2908  06E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2909  06E2  00E9               	movwf	(??_GoHome+0)+0
  2910  06E3  0869               	movf	(??_GoHome+0)+0,w
  2911  06E4  1683               	bsf	status, 5	;RP0=1, select bank1
  2912  06E5  1303               	bcf	status, 6	;RP1=0, select bank1
  2913  06E6  00C5               	movwf	(_ROBOTerror)^080h
  2914                           	line	274
  2915                           ;Main.c: 274: break;
  2916  06E7  2FBA               	goto	l12486
  2917                           	line	275
  2918                           ;Main.c: 275: case 3:
  2919                           	
  2920  06E8                     l2324:	
  2921                           	line	276
  2922                           	
  2923  06E8                     l12454:	
  2924                           ;Main.c: 276: ROBOTerror = 9;
  2925  06E8  3009               	movlw	(09h)
  2926  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2927  06EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2928  06EB  00E9               	movwf	(??_GoHome+0)+0
  2929  06EC  0869               	movf	(??_GoHome+0)+0,w
  2930  06ED  1683               	bsf	status, 5	;RP0=1, select bank1
  2931  06EE  1303               	bcf	status, 6	;RP1=0, select bank1
  2932  06EF  00C5               	movwf	(_ROBOTerror)^080h
  2933                           	line	277
  2934                           ;Main.c: 277: break;
  2935  06F0  2FBA               	goto	l12486
  2936                           	line	278
  2937                           ;Main.c: 278: case 4:
  2938                           	
  2939  06F1                     l2325:	
  2940                           	line	279
  2941                           ;Main.c: 279: ROBOTerror = 0;
  2942  06F1  01C5               	clrf	(_ROBOTerror)^080h
  2943                           	line	280
  2944                           ;Main.c: 280: break;
  2945  06F2  2FBA               	goto	l12486
  2946                           	line	281
  2947                           ;Main.c: 281: case 9:
  2948                           	
  2949  06F3                     l2326:	
  2950                           	line	283
  2951                           ;Main.c: 283: break;
  2952  06F3  2FBA               	goto	l12486
  2953                           	line	284
  2954                           ;Main.c: 284: case 10:
  2955                           	
  2956  06F4                     l2327:	
  2957                           	line	285
  2958                           	
  2959  06F4                     l12456:	
  2960                           ;Main.c: 285: RobotPos++;
  2961  06F4  3001               	movlw	(01h)
  2962  06F5  1283               	bcf	status, 5	;RP0=0, select bank0
  2963  06F6  1303               	bcf	status, 6	;RP1=0, select bank0
  2964  06F7  00E9               	movwf	(??_GoHome+0)+0
  2965  06F8  0869               	movf	(??_GoHome+0)+0,w
  2966  06F9  1683               	bsf	status, 5	;RP0=1, select bank1
  2967  06FA  1303               	bcf	status, 6	;RP1=0, select bank1
  2968  06FB  07C7               	addwf	(_RobotPos)^080h,f
  2969                           	line	286
  2970                           	
  2971  06FC                     l12458:	
  2972                           ;Main.c: 286: robot_turnLeft();
  2973  06FC  160A  158A  2661   	fcall	_robot_turnLeft
              120A  118A         
  2974                           	line	287
  2975                           	
  2976  0701                     l12460:	
  2977                           ;Main.c: 287: if (RobotPos == 17)
  2978  0701  1683               	bsf	status, 5	;RP0=1, select bank1
  2979  0702  1303               	bcf	status, 6	;RP1=0, select bank1
  2980  0703  0847               	movf	(_RobotPos)^080h,w
  2981  0704  3A11               	xorlw	011h
  2982  0705  1D03               	skipz
  2983  0706  2F08               	goto	u5611
  2984  0707  2F09               	goto	u5610
  2985  0708                     u5611:
  2986  0708  2F2A               	goto	l12468
  2987  0709                     u5610:
  2988                           	line	289
  2989                           	
  2990  0709                     l12462:	
  2991                           ;Main.c: 288: {
  2992                           ;Main.c: 289: currentFlw = 1;
  2993  0709  01CC               	clrf	(_currentFlw)^080h
  2994  070A  1403               	bsf	status,0
  2995  070B  0DCC               	rlf	(_currentFlw)^080h,f
  2996                           	line	290
  2997                           	
  2998  070C                     l12464:	
  2999                           ;Main.c: 290: rotate(50,1);
  3000  070C  3032               	movlw	low(032h)
  3001  070D  1283               	bcf	status, 5	;RP0=0, select bank0
  3002  070E  1303               	bcf	status, 6	;RP1=0, select bank0
  3003  070F  00A3               	movwf	(?_rotate)
  3004  0710  3000               	movlw	high(032h)
  3005  0711  00A4               	movwf	((?_rotate))+1
  3006  0712  01A5               	clrf	0+(?_rotate)+02h
  3007  0713  1403               	bsf	status,0
  3008  0714  0DA5               	rlf	0+(?_rotate)+02h,f
  3009  0715  160A  158A  26C1   	fcall	_rotate
              120A  118A         
  3010                           	line	291
  3011                           	
  3012  071A                     l12466:	
  3013                           ;Main.c: 291: robotMoveSpeed(250,200);
  3014  071A  30FA               	movlw	low(0FAh)
  3015  071B  1283               	bcf	status, 5	;RP0=0, select bank0
  3016  071C  1303               	bcf	status, 6	;RP1=0, select bank0
  3017  071D  00DD               	movwf	(?_robotMoveSpeed)
  3018  071E  3000               	movlw	high(0FAh)
  3019  071F  00DE               	movwf	((?_robotMoveSpeed))+1
  3020  0720  30C8               	movlw	low(0C8h)
  3021  0721  00DF               	movwf	0+(?_robotMoveSpeed)+02h
  3022  0722  3000               	movlw	high(0C8h)
  3023  0723  00E0               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  3024  0724  160A  118A  25EA   	fcall	_robotMoveSpeed
              120A  118A         
  3025  0729  2F2A               	goto	l12468
  3026                           	line	292
  3027                           	
  3028  072A                     l2328:	
  3029                           	line	293
  3030                           	
  3031  072A                     l12468:	
  3032                           ;Main.c: 292: }
  3033                           ;Main.c: 293: readAvgDistance();
  3034  072A  160A  118A  2217   	fcall	_readAvgDistance
              120A  118A         
  3035                           	line	294
  3036                           	
  3037  072F                     l12470:	
  3038                           ;Main.c: 294: robotFollow(200, adcVal - 10, currentFlw);
  3039  072F  30C8               	movlw	low(0C8h)
  3040  0730  1283               	bcf	status, 5	;RP0=0, select bank0
  3041  0731  1303               	bcf	status, 6	;RP1=0, select bank0
  3042  0732  00DD               	movwf	(?_robotFollow)
  3043  0733  3000               	movlw	high(0C8h)
  3044  0734  00DE               	movwf	((?_robotFollow))+1
  3045  0735  086E               	movf	(_adcVal),w	;volatile
  3046  0736  3EF6               	addlw	low(-10)
  3047  0737  00DF               	movwf	0+(?_robotFollow)+02h
  3048  0738  086F               	movf	(_adcVal+1),w	;volatile
  3049  0739  1803               	skipnc
  3050  073A  3E01               	addlw	1
  3051  073B  3EFF               	addlw	high(-10)
  3052  073C  00E0               	movwf	1+0+(?_robotFollow)+02h
  3053  073D  1683               	bsf	status, 5	;RP0=1, select bank1
  3054  073E  1303               	bcf	status, 6	;RP1=0, select bank1
  3055  073F  084C               	movf	(_currentFlw)^080h,w
  3056  0740  1283               	bcf	status, 5	;RP0=0, select bank0
  3057  0741  1303               	bcf	status, 6	;RP1=0, select bank0
  3058  0742  00E9               	movwf	(??_GoHome+0)+0
  3059  0743  0869               	movf	(??_GoHome+0)+0,w
  3060  0744  00E1               	movwf	0+(?_robotFollow)+04h
  3061  0745  120A  158A  25AB   	fcall	_robotFollow
              120A  118A         
  3062                           	line	295
  3063                           ;Main.c: 295: break;
  3064  074A  2FBA               	goto	l12486
  3065                           	line	296
  3066                           ;Main.c: 296: case 11:
  3067                           	
  3068  074B                     l2329:	
  3069                           	line	297
  3070                           	
  3071  074B                     l12472:	
  3072                           ;Main.c: 297: RobotPos++;
  3073  074B  3001               	movlw	(01h)
  3074  074C  1283               	bcf	status, 5	;RP0=0, select bank0
  3075  074D  1303               	bcf	status, 6	;RP1=0, select bank0
  3076  074E  00E9               	movwf	(??_GoHome+0)+0
  3077  074F  0869               	movf	(??_GoHome+0)+0,w
  3078  0750  1683               	bsf	status, 5	;RP0=1, select bank1
  3079  0751  1303               	bcf	status, 6	;RP1=0, select bank1
  3080  0752  07C7               	addwf	(_RobotPos)^080h,f
  3081                           	line	298
  3082                           	
  3083  0753                     l12474:	
  3084                           ;Main.c: 298: robot_turnRight(200);
  3085  0753  30C8               	movlw	low(0C8h)
  3086  0754  1283               	bcf	status, 5	;RP0=0, select bank0
  3087  0755  1303               	bcf	status, 6	;RP1=0, select bank0
  3088  0756  00DD               	movwf	(?_robot_turnRight)
  3089  0757  3000               	movlw	high(0C8h)
  3090  0758  00DE               	movwf	((?_robot_turnRight))+1
  3091  0759  120A  118A  2015   	fcall	_robot_turnRight
              120A  118A         
  3092                           	line	299
  3093                           	
  3094  075E                     l12476:	
  3095                           ;Main.c: 299: readAvgDistance();
  3096  075E  160A  118A  2217   	fcall	_readAvgDistance
              120A  118A         
  3097                           	line	300
  3098                           	
  3099  0763                     l12478:	
  3100                           ;Main.c: 300: robotFollow(200, adcVal, currentFlw);
  3101  0763  30C8               	movlw	low(0C8h)
  3102  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  3103  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  3104  0766  00DD               	movwf	(?_robotFollow)
  3105  0767  3000               	movlw	high(0C8h)
  3106  0768  00DE               	movwf	((?_robotFollow))+1
  3107  0769  086F               	movf	(_adcVal+1),w	;volatile
  3108  076A  01E0               	clrf	1+(?_robotFollow)+02h
  3109  076B  07E0               	addwf	1+(?_robotFollow)+02h
  3110  076C  086E               	movf	(_adcVal),w	;volatile
  3111  076D  01DF               	clrf	0+(?_robotFollow)+02h
  3112  076E  07DF               	addwf	0+(?_robotFollow)+02h
  3113                           
  3114  076F  1683               	bsf	status, 5	;RP0=1, select bank1
  3115  0770  1303               	bcf	status, 6	;RP1=0, select bank1
  3116  0771  084C               	movf	(_currentFlw)^080h,w
  3117  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  3118  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  3119  0774  00E9               	movwf	(??_GoHome+0)+0
  3120  0775  0869               	movf	(??_GoHome+0)+0,w
  3121  0776  00E1               	movwf	0+(?_robotFollow)+04h
  3122  0777  120A  158A  25AB   	fcall	_robotFollow
              120A  118A         
  3123                           	line	302
  3124                           ;Main.c: 302: break;
  3125  077C  2FBA               	goto	l12486
  3126                           	line	303
  3127                           ;Main.c: 303: default:
  3128                           	
  3129  077D                     l2330:	
  3130                           	line	304
  3131                           	
  3132  077D                     l12480:	
  3133                           ;Main.c: 304: readAvgDistance();
  3134  077D  160A  118A  2217   	fcall	_readAvgDistance
              120A  118A         
  3135                           	line	305
  3136                           ;Main.c: 305: robotFollow(200, adcVal, currentFlw);
  3137  0782  30C8               	movlw	low(0C8h)
  3138  0783  1283               	bcf	status, 5	;RP0=0, select bank0
  3139  0784  1303               	bcf	status, 6	;RP1=0, select bank0
  3140  0785  00DD               	movwf	(?_robotFollow)
  3141  0786  3000               	movlw	high(0C8h)
  3142  0787  00DE               	movwf	((?_robotFollow))+1
  3143  0788  086F               	movf	(_adcVal+1),w	;volatile
  3144  0789  01E0               	clrf	1+(?_robotFollow)+02h
  3145  078A  07E0               	addwf	1+(?_robotFollow)+02h
  3146  078B  086E               	movf	(_adcVal),w	;volatile
  3147  078C  01DF               	clrf	0+(?_robotFollow)+02h
  3148  078D  07DF               	addwf	0+(?_robotFollow)+02h
  3149                           
  3150  078E  1683               	bsf	status, 5	;RP0=1, select bank1
  3151  078F  1303               	bcf	status, 6	;RP1=0, select bank1
  3152  0790  084C               	movf	(_currentFlw)^080h,w
  3153  0791  1283               	bcf	status, 5	;RP0=0, select bank0
  3154  0792  1303               	bcf	status, 6	;RP1=0, select bank0
  3155  0793  00E9               	movwf	(??_GoHome+0)+0
  3156  0794  0869               	movf	(??_GoHome+0)+0,w
  3157  0795  00E1               	movwf	0+(?_robotFollow)+04h
  3158  0796  120A  158A  25AB   	fcall	_robotFollow
              120A  118A         
  3159                           	line	306
  3160                           ;Main.c: 306: break;
  3161  079B  2FBA               	goto	l12486
  3162                           	line	308
  3163                           	
  3164  079C                     l12482:	
  3165                           ;Main.c: 308: }
  3166  079C  2FBA               	goto	l12486
  3167                           	line	262
  3168                           	
  3169  079D                     l2319:	
  3170                           	
  3171  079D                     l12484:	
  3172  079D  1683               	bsf	status, 5	;RP0=1, select bank1
  3173  079E  1303               	bcf	status, 6	;RP1=0, select bank1
  3174  079F  0845               	movf	(_ROBOTerror)^080h,w
  3175                           	; Switch size 1, requested type "space"
  3176                           ; Number of cases is 8, Range of values is 0 to 11
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte           25    13 (average)
  3180                           ; direct_byte           44     8 (fixed)
  3181                           ; jumptable            260     6 (fixed)
  3182                           ; rangetable            16     6 (fixed)
  3183                           ; spacedrange           30     9 (fixed)
  3184                           ; locatedrange          12     3 (fixed)
  3185                           ;	Chosen strategy is simple_byte
  3186                           
  3187                           	opt asmopt_off
  3188  07A0  3A00               	xorlw	0^0	; case 0
  3189  07A1  1903               	skipnz
  3190  07A2  2EB7               	goto	l12448
  3191  07A3  3A01               	xorlw	1^0	; case 1
  3192  07A4  1903               	skipnz
  3193  07A5  2ED6               	goto	l12450
  3194  07A6  3A03               	xorlw	2^1	; case 2
  3195  07A7  1903               	skipnz
  3196  07A8  2EDF               	goto	l12452
  3197  07A9  3A01               	xorlw	3^2	; case 3
  3198  07AA  1903               	skipnz
  3199  07AB  2EE8               	goto	l12454
  3200  07AC  3A07               	xorlw	4^3	; case 4
  3201  07AD  1903               	skipnz
  3202  07AE  2EF1               	goto	l2325
  3203  07AF  3A0D               	xorlw	9^4	; case 9
  3204  07B0  1903               	skipnz
  3205  07B1  2FBA               	goto	l12486
  3206  07B2  3A03               	xorlw	10^9	; case 10
  3207  07B3  1903               	skipnz
  3208  07B4  2EF4               	goto	l12456
  3209  07B5  3A01               	xorlw	11^10	; case 11
  3210  07B6  1903               	skipnz
  3211  07B7  2F4B               	goto	l12472
  3212  07B8  2F7D               	goto	l12480
  3213                           	opt asmopt_on
  3214                           
  3215                           	line	308
  3216                           	
  3217  07B9                     l2321:	
  3218  07B9  2FBA               	goto	l12486
  3219                           	line	309
  3220                           	
  3221  07BA                     l2317:	
  3222                           	line	259
  3223                           	
  3224  07BA                     l12486:	
  3225  07BA  1683               	bsf	status, 5	;RP0=1, select bank1
  3226  07BB  1303               	bcf	status, 6	;RP1=0, select bank1
  3227  07BC  0845               	movf	(_ROBOTerror)^080h,w
  3228  07BD  3A09               	xorlw	09h
  3229  07BE  1D03               	skipz
  3230  07BF  2FC1               	goto	u5621
  3231  07C0  2FC2               	goto	u5620
  3232  07C1                     u5621:
  3233  07C1  2F9D               	goto	l12484
  3234  07C2                     u5620:
  3235  07C2  2FC3               	goto	l2332
  3236                           	
  3237  07C3                     l2331:	
  3238                           	line	311
  3239                           	
  3240  07C3                     l2332:	
  3241  07C3  0008               	return
  3242                           	opt stack 0
  3243                           GLOBAL	__end_of_GoHome
  3244  07C4                     	__end_of_GoHome:
  3245 ;; =============== function _GoHome ends ============
  3246                           
  3247                           	signat	_GoHome,88
  3248                           	global	_FindVictim
  3249                           psect	text1112,local,class=CODE,delta=2
  3250                           global __ptext1112
  3251  09BB                     __ptext1112:
  3252                           
  3253 ;; *************** function _FindVictim *****************
  3254 ;; Defined at:
  3255 ;;		line 314 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;		None               void
  3262 ;; Registers used:
  3263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3269 ;;      Params:         0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0
  3271 ;;      Temps:          0       3       0       0       0
  3272 ;;      Totals:         0       3       0       0       0
  3273 ;;Total ram usage:        3 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    7
  3276 ;; This function calls:
  3277 ;;		_readAvgDistance
  3278 ;;		_robotFollow
  3279 ;;		_RobotDrive
  3280 ;;		_robotTurnSpeed
  3281 ;;		_robotMoveSpeed
  3282 ;;		_ser_putch
  3283 ;;		_robot_turnLeft
  3284 ;;		_robot_turnRight
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           psect	text1112
  3290                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3291                           	line	314
  3292                           	global	__size_of_FindVictim
  3293  01CD                     	__size_of_FindVictim	equ	__end_of_FindVictim-_FindVictim
  3294                           	
  3295  09BB                     _FindVictim:	
  3296                           	opt	stack 0
  3297                           ; Regs used in _FindVictim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3298                           	line	315
  3299                           	
  3300  09BB                     l12368:	
  3301                           ;Main.c: 315: while (ROBOTerror != 9)
  3302  09BB  2B7E               	goto	l12436
  3303                           	
  3304  09BC                     l2336:	
  3305                           	line	318
  3306                           ;Main.c: 316: {
  3307                           ;Main.c: 318: switch (ROBOTerror)
  3308  09BC  2B61               	goto	l12434
  3309                           	line	320
  3310                           ;Main.c: 319: {
  3311                           ;Main.c: 320: case 0:
  3312                           	
  3313  09BD                     l2338:	
  3314                           	line	322
  3315                           	
  3316  09BD                     l12370:	
  3317                           ;Main.c: 322: readAvgDistance();
  3318  09BD  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  3319                           	line	323
  3320                           ;Main.c: 323: robotFollow(200, adcVal, currentFlw);
  3321  09C2  30C8               	movlw	low(0C8h)
  3322  09C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3323  09C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3324  09C5  00DD               	movwf	(?_robotFollow)
  3325  09C6  3000               	movlw	high(0C8h)
  3326  09C7  00DE               	movwf	((?_robotFollow))+1
  3327  09C8  086F               	movf	(_adcVal+1),w	;volatile
  3328  09C9  01E0               	clrf	1+(?_robotFollow)+02h
  3329  09CA  07E0               	addwf	1+(?_robotFollow)+02h
  3330  09CB  086E               	movf	(_adcVal),w	;volatile
  3331  09CC  01DF               	clrf	0+(?_robotFollow)+02h
  3332  09CD  07DF               	addwf	0+(?_robotFollow)+02h
  3333                           
  3334  09CE  1683               	bsf	status, 5	;RP0=1, select bank1
  3335  09CF  1303               	bcf	status, 6	;RP1=0, select bank1
  3336  09D0  084C               	movf	(_currentFlw)^080h,w
  3337  09D1  1283               	bcf	status, 5	;RP0=0, select bank0
  3338  09D2  1303               	bcf	status, 6	;RP1=0, select bank0
  3339  09D3  00E9               	movwf	(??_FindVictim+0)+0
  3340  09D4  0869               	movf	(??_FindVictim+0)+0,w
  3341  09D5  00E1               	movwf	0+(?_robotFollow)+04h
  3342  09D6  120A  158A  25AB   	fcall	_robotFollow
              120A  158A         
  3343                           	line	324
  3344                           ;Main.c: 324: break;
  3345  09DB  2B7E               	goto	l12436
  3346                           	line	325
  3347                           ;Main.c: 325: case 1:
  3348                           	
  3349  09DC                     l2340:	
  3350                           	line	326
  3351                           	
  3352  09DC                     l12372:	
  3353                           ;Main.c: 326: if (RobotPos == 10)
  3354  09DC  1683               	bsf	status, 5	;RP0=1, select bank1
  3355  09DD  1303               	bcf	status, 6	;RP1=0, select bank1
  3356  09DE  0847               	movf	(_RobotPos)^080h,w
  3357  09DF  3A0A               	xorlw	0Ah
  3358  09E0  1D03               	skipz
  3359  09E1  29E3               	goto	u5591
  3360  09E2  29E4               	goto	u5590
  3361  09E3                     u5591:
  3362  09E3  2A2C               	goto	l12384
  3363  09E4                     u5590:
  3364                           	line	328
  3365                           	
  3366  09E4                     l12374:	
  3367                           ;Main.c: 327: {
  3368                           ;Main.c: 328: RobotDrive(-200, 0x7FFF);
  3369  09E4  3038               	movlw	low(-200)
  3370  09E5  1283               	bcf	status, 5	;RP0=0, select bank0
  3371  09E6  1303               	bcf	status, 6	;RP1=0, select bank0
  3372  09E7  00A9               	movwf	(?_RobotDrive)
  3373  09E8  30FF               	movlw	high(-200)
  3374  09E9  00AA               	movwf	((?_RobotDrive))+1
  3375  09EA  30FF               	movlw	low(07FFFh)
  3376  09EB  00AB               	movwf	0+(?_RobotDrive)+02h
  3377  09EC  307F               	movlw	high(07FFFh)
  3378  09ED  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  3379  09EE  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  3380                           	line	329
  3381                           	
  3382  09F3                     l12376:	
  3383                           ;Main.c: 329: _delay((unsigned long)((200)*(20000000/4000.0)));
  3384                           	opt asmopt_off
  3385  09F3  3006               movlw  6
  3386  09F4  1283               	bcf	status, 5	;RP0=0, select bank0
  3387  09F5  1303               	bcf	status, 6	;RP1=0, select bank0
  3388  09F6  00EB               movwf	((??_FindVictim+0)+0+2),f
  3389  09F7  3013               movlw	19
  3390  09F8  00EA               movwf	((??_FindVictim+0)+0+1),f
  3391  09F9  30B1               	movlw	177
  3392  09FA  00E9               movwf	((??_FindVictim+0)+0),f
  3393  09FB                     u5667:
  3394  09FB  0BE9               	decfsz	((??_FindVictim+0)+0),f
  3395  09FC  29FB               	goto	u5667
  3396  09FD  0BEA               	decfsz	((??_FindVictim+0)+0+1),f
  3397  09FE  29FB               	goto	u5667
  3398  09FF  0BEB               	decfsz	((??_FindVictim+0)+0+2),f
  3399  0A00  29FB               	goto	u5667
  3400  0A01  2A02               	nop2
  3401                           opt asmopt_on
  3402                           
  3403                           	line	330
  3404                           	
  3405  0A02                     l12378:	
  3406                           ;Main.c: 330: RobotPos++;
  3407  0A02  3001               	movlw	(01h)
  3408  0A03  1283               	bcf	status, 5	;RP0=0, select bank0
  3409  0A04  1303               	bcf	status, 6	;RP1=0, select bank0
  3410  0A05  00E9               	movwf	(??_FindVictim+0)+0
  3411  0A06  0869               	movf	(??_FindVictim+0)+0,w
  3412  0A07  1683               	bsf	status, 5	;RP0=1, select bank1
  3413  0A08  1303               	bcf	status, 6	;RP1=0, select bank1
  3414  0A09  07C7               	addwf	(_RobotPos)^080h,f
  3415                           	line	331
  3416                           	
  3417  0A0A                     l12380:	
  3418                           ;Main.c: 331: ROBOTerror = 0;
  3419  0A0A  01C5               	clrf	(_ROBOTerror)^080h
  3420                           	line	332
  3421                           	
  3422  0A0B                     l12382:	
  3423                           ;Main.c: 332: robotTurnSpeed((-(angleTurned - 75)),400);
  3424  0A0B  082E               	movf	(_angleTurned)^080h,w
  3425  0A0C  3EB5               	addlw	low(-75)
  3426  0A0D  1283               	bcf	status, 5	;RP0=0, select bank0
  3427  0A0E  1303               	bcf	status, 6	;RP1=0, select bank0
  3428  0A0F  00E9               	movwf	(??_FindVictim+0)+0
  3429  0A10  1683               	bsf	status, 5	;RP0=1, select bank1
  3430  0A11  1303               	bcf	status, 6	;RP1=0, select bank1
  3431  0A12  082F               	movf	(_angleTurned+1)^080h,w
  3432  0A13  1803               	skipnc
  3433  0A14  3E01               	addlw	1
  3434  0A15  3EFF               	addlw	high(-75)
  3435  0A16  1283               	bcf	status, 5	;RP0=0, select bank0
  3436  0A17  1303               	bcf	status, 6	;RP1=0, select bank0
  3437  0A18  00EA               	movwf	1+(??_FindVictim+0)+0
  3438  0A19  09E9               	comf	(??_FindVictim+0)+0,f
  3439  0A1A  09EA               	comf	(??_FindVictim+0)+1,f
  3440  0A1B  0AE9               	incf	(??_FindVictim+0)+0,f
  3441  0A1C  1903               	skipnz
  3442  0A1D  0AEA               	incf	(??_FindVictim+0)+1,f
  3443  0A1E  0869               	movf	0+(??_FindVictim+0)+0,w
  3444  0A1F  00DD               	movwf	(?_robotTurnSpeed)
  3445  0A20  086A               	movf	1+(??_FindVictim+0)+0,w
  3446  0A21  00DE               	movwf	(?_robotTurnSpeed+1)
  3447  0A22  3090               	movlw	low(0190h)
  3448  0A23  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  3449  0A24  3001               	movlw	high(0190h)
  3450  0A25  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  3451  0A26  160A  118A  231E   	fcall	_robotTurnSpeed
              120A  158A         
  3452                           	line	333
  3453                           ;Main.c: 333: }
  3454  0A2B  2B7E               	goto	l12436
  3455                           	line	334
  3456                           	
  3457  0A2C                     l2341:	
  3458                           	line	335
  3459                           	
  3460  0A2C                     l12384:	
  3461                           ;Main.c: 334: else
  3462                           ;Main.c: 335: ROBOTerror = 9;
  3463  0A2C  3009               	movlw	(09h)
  3464  0A2D  1283               	bcf	status, 5	;RP0=0, select bank0
  3465  0A2E  1303               	bcf	status, 6	;RP1=0, select bank0
  3466  0A2F  00E9               	movwf	(??_FindVictim+0)+0
  3467  0A30  0869               	movf	(??_FindVictim+0)+0,w
  3468  0A31  1683               	bsf	status, 5	;RP0=1, select bank1
  3469  0A32  1303               	bcf	status, 6	;RP1=0, select bank1
  3470  0A33  00C5               	movwf	(_ROBOTerror)^080h
  3471  0A34  2B7E               	goto	l12436
  3472                           	
  3473  0A35                     l2342:	
  3474                           	line	336
  3475                           ;Main.c: 336: break;
  3476  0A35  2B7E               	goto	l12436
  3477                           	line	337
  3478                           ;Main.c: 337: case 2:
  3479                           	
  3480  0A36                     l2343:	
  3481                           	line	338
  3482                           	
  3483  0A36                     l12386:	
  3484                           ;Main.c: 338: ROBOTerror = 9;
  3485  0A36  3009               	movlw	(09h)
  3486  0A37  1283               	bcf	status, 5	;RP0=0, select bank0
  3487  0A38  1303               	bcf	status, 6	;RP1=0, select bank0
  3488  0A39  00E9               	movwf	(??_FindVictim+0)+0
  3489  0A3A  0869               	movf	(??_FindVictim+0)+0,w
  3490  0A3B  1683               	bsf	status, 5	;RP0=1, select bank1
  3491  0A3C  1303               	bcf	status, 6	;RP1=0, select bank1
  3492  0A3D  00C5               	movwf	(_ROBOTerror)^080h
  3493                           	line	339
  3494                           ;Main.c: 339: break;
  3495  0A3E  2B7E               	goto	l12436
  3496                           	line	340
  3497                           ;Main.c: 340: case 3:
  3498                           	
  3499  0A3F                     l2344:	
  3500                           	line	341
  3501                           	
  3502  0A3F                     l12388:	
  3503                           ;Main.c: 341: RobotPos++;
  3504  0A3F  3001               	movlw	(01h)
  3505  0A40  1283               	bcf	status, 5	;RP0=0, select bank0
  3506  0A41  1303               	bcf	status, 6	;RP1=0, select bank0
  3507  0A42  00E9               	movwf	(??_FindVictim+0)+0
  3508  0A43  0869               	movf	(??_FindVictim+0)+0,w
  3509  0A44  1683               	bsf	status, 5	;RP0=1, select bank1
  3510  0A45  1303               	bcf	status, 6	;RP1=0, select bank1
  3511  0A46  07C7               	addwf	(_RobotPos)^080h,f
  3512                           	line	342
  3513                           	
  3514  0A47                     l12390:	
  3515                           ;Main.c: 342: ROBOTerror = 0;
  3516  0A47  01C5               	clrf	(_ROBOTerror)^080h
  3517                           	line	344
  3518                           	
  3519  0A48                     l12392:	
  3520                           ;Main.c: 344: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3521                           	opt asmopt_off
  3522  0A48  301A               movlw  26
  3523  0A49  1283               	bcf	status, 5	;RP0=0, select bank0
  3524  0A4A  1303               	bcf	status, 6	;RP1=0, select bank0
  3525  0A4B  00EB               movwf	((??_FindVictim+0)+0+2),f
  3526  0A4C  305E               movlw	94
  3527  0A4D  00EA               movwf	((??_FindVictim+0)+0+1),f
  3528  0A4E  3086               	movlw	134
  3529  0A4F  00E9               movwf	((??_FindVictim+0)+0),f
  3530  0A50                     u5677:
  3531  0A50  0BE9               	decfsz	((??_FindVictim+0)+0),f
  3532  0A51  2A50               	goto	u5677
  3533  0A52  0BEA               	decfsz	((??_FindVictim+0)+0+1),f
  3534  0A53  2A50               	goto	u5677
  3535  0A54  0BEB               	decfsz	((??_FindVictim+0)+0+2),f
  3536  0A55  2A50               	goto	u5677
  3537  0A56  0064               	clrwdt
  3538                           opt asmopt_on
  3539                           
  3540                           	line	345
  3541                           	
  3542  0A57                     l12394:	
  3543                           ;Main.c: 345: robotMoveSpeed(-200,-200);
  3544  0A57  3038               	movlw	low(-200)
  3545  0A58  1283               	bcf	status, 5	;RP0=0, select bank0
  3546  0A59  1303               	bcf	status, 6	;RP1=0, select bank0
  3547  0A5A  00DD               	movwf	(?_robotMoveSpeed)
  3548  0A5B  30FF               	movlw	high(-200)
  3549  0A5C  00DE               	movwf	((?_robotMoveSpeed))+1
  3550  0A5D  3038               	movlw	low(-200)
  3551  0A5E  00DF               	movwf	0+(?_robotMoveSpeed)+02h
  3552  0A5F  30FF               	movlw	high(-200)
  3553  0A60  00E0               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  3554  0A61  160A  118A  25EA   	fcall	_robotMoveSpeed
              120A  158A         
  3555                           	line	346
  3556                           	
  3557  0A66                     l12396:	
  3558                           ;Main.c: 346: robotTurnSpeed((-angleTurned-10),400);
  3559  0A66  1683               	bsf	status, 5	;RP0=1, select bank1
  3560  0A67  1303               	bcf	status, 6	;RP1=0, select bank1
  3561  0A68  082E               	movf	(_angleTurned)^080h,w
  3562  0A69  3E0A               	addlw	low(0Ah)
  3563  0A6A  1283               	bcf	status, 5	;RP0=0, select bank0
  3564  0A6B  1303               	bcf	status, 6	;RP1=0, select bank0
  3565  0A6C  00E9               	movwf	(??_FindVictim+0)+0
  3566  0A6D  1683               	bsf	status, 5	;RP0=1, select bank1
  3567  0A6E  1303               	bcf	status, 6	;RP1=0, select bank1
  3568  0A6F  082F               	movf	(_angleTurned+1)^080h,w
  3569  0A70  1803               	skipnc
  3570  0A71  3E01               	addlw	1
  3571  0A72  3E00               	addlw	high(0Ah)
  3572  0A73  1283               	bcf	status, 5	;RP0=0, select bank0
  3573  0A74  1303               	bcf	status, 6	;RP1=0, select bank0
  3574  0A75  00EA               	movwf	1+(??_FindVictim+0)+0
  3575  0A76  09E9               	comf	(??_FindVictim+0)+0,f
  3576  0A77  09EA               	comf	(??_FindVictim+0)+1,f
  3577  0A78  0AE9               	incf	(??_FindVictim+0)+0,f
  3578  0A79  1903               	skipnz
  3579  0A7A  0AEA               	incf	(??_FindVictim+0)+1,f
  3580  0A7B  0869               	movf	0+(??_FindVictim+0)+0,w
  3581  0A7C  00DD               	movwf	(?_robotTurnSpeed)
  3582  0A7D  086A               	movf	1+(??_FindVictim+0)+0,w
  3583  0A7E  00DE               	movwf	(?_robotTurnSpeed+1)
  3584  0A7F  3090               	movlw	low(0190h)
  3585  0A80  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  3586  0A81  3001               	movlw	high(0190h)
  3587  0A82  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  3588  0A83  160A  118A  231E   	fcall	_robotTurnSpeed
              120A  158A         
  3589                           	line	347
  3590                           	
  3591  0A88                     l12398:	
  3592                           ;Main.c: 347: robotMoveSpeed(250,200);
  3593  0A88  30FA               	movlw	low(0FAh)
  3594  0A89  1283               	bcf	status, 5	;RP0=0, select bank0
  3595  0A8A  1303               	bcf	status, 6	;RP1=0, select bank0
  3596  0A8B  00DD               	movwf	(?_robotMoveSpeed)
  3597  0A8C  3000               	movlw	high(0FAh)
  3598  0A8D  00DE               	movwf	((?_robotMoveSpeed))+1
  3599  0A8E  30C8               	movlw	low(0C8h)
  3600  0A8F  00DF               	movwf	0+(?_robotMoveSpeed)+02h
  3601  0A90  3000               	movlw	high(0C8h)
  3602  0A91  00E0               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  3603  0A92  160A  118A  25EA   	fcall	_robotMoveSpeed
              120A  158A         
  3604                           	line	348
  3605                           	
  3606  0A97                     l12400:	
  3607                           ;Main.c: 348: readAvgDistance();
  3608  0A97  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  3609                           	line	349
  3610                           	
  3611  0A9C                     l12402:	
  3612                           ;Main.c: 349: robotFollow(200, adcVal - 10, currentFlw);
  3613  0A9C  30C8               	movlw	low(0C8h)
  3614  0A9D  1283               	bcf	status, 5	;RP0=0, select bank0
  3615  0A9E  1303               	bcf	status, 6	;RP1=0, select bank0
  3616  0A9F  00DD               	movwf	(?_robotFollow)
  3617  0AA0  3000               	movlw	high(0C8h)
  3618  0AA1  00DE               	movwf	((?_robotFollow))+1
  3619  0AA2  086E               	movf	(_adcVal),w	;volatile
  3620  0AA3  3EF6               	addlw	low(-10)
  3621  0AA4  00DF               	movwf	0+(?_robotFollow)+02h
  3622  0AA5  086F               	movf	(_adcVal+1),w	;volatile
  3623  0AA6  1803               	skipnc
  3624  0AA7  3E01               	addlw	1
  3625  0AA8  3EFF               	addlw	high(-10)
  3626  0AA9  00E0               	movwf	1+0+(?_robotFollow)+02h
  3627  0AAA  1683               	bsf	status, 5	;RP0=1, select bank1
  3628  0AAB  1303               	bcf	status, 6	;RP1=0, select bank1
  3629  0AAC  084C               	movf	(_currentFlw)^080h,w
  3630  0AAD  1283               	bcf	status, 5	;RP0=0, select bank0
  3631  0AAE  1303               	bcf	status, 6	;RP1=0, select bank0
  3632  0AAF  00E9               	movwf	(??_FindVictim+0)+0
  3633  0AB0  0869               	movf	(??_FindVictim+0)+0,w
  3634  0AB1  00E1               	movwf	0+(?_robotFollow)+04h
  3635  0AB2  120A  158A  25AB   	fcall	_robotFollow
              120A  158A         
  3636                           	line	350
  3637                           ;Main.c: 350: break;
  3638  0AB7  2B7E               	goto	l12436
  3639                           	line	351
  3640                           ;Main.c: 351: case 4:
  3641                           	
  3642  0AB8                     l2345:	
  3643                           	line	352
  3644                           	
  3645  0AB8                     l12404:	
  3646                           ;Main.c: 352: ser_putch(141);
  3647  0AB8  308D               	movlw	(08Dh)
  3648  0AB9  160A  158A  241B   	fcall	_ser_putch
              120A  158A         
  3649                           	line	353
  3650                           ;Main.c: 353: ser_putch(1);
  3651  0ABE  3001               	movlw	(01h)
  3652  0ABF  160A  158A  241B   	fcall	_ser_putch
              120A  158A         
  3653                           	line	354
  3654                           	
  3655  0AC4                     l12406:	
  3656                           ;Main.c: 354: RobotPos++;
  3657  0AC4  3001               	movlw	(01h)
  3658  0AC5  1283               	bcf	status, 5	;RP0=0, select bank0
  3659  0AC6  1303               	bcf	status, 6	;RP1=0, select bank0
  3660  0AC7  00E9               	movwf	(??_FindVictim+0)+0
  3661  0AC8  0869               	movf	(??_FindVictim+0)+0,w
  3662  0AC9  1683               	bsf	status, 5	;RP0=1, select bank1
  3663  0ACA  1303               	bcf	status, 6	;RP1=0, select bank1
  3664  0ACB  07C7               	addwf	(_RobotPos)^080h,f
  3665                           	line	355
  3666                           	
  3667  0ACC                     l12408:	
  3668                           ;Main.c: 355: FoundVictim = 1;
  3669  0ACC  01C3               	clrf	(_FoundVictim)^080h
  3670  0ACD  1403               	bsf	status,0
  3671  0ACE  0DC3               	rlf	(_FoundVictim)^080h,f
  3672                           	line	356
  3673                           	
  3674  0ACF                     l12410:	
  3675                           ;Main.c: 356: ROBOTerror = 9;
  3676  0ACF  3009               	movlw	(09h)
  3677  0AD0  1283               	bcf	status, 5	;RP0=0, select bank0
  3678  0AD1  1303               	bcf	status, 6	;RP1=0, select bank0
  3679  0AD2  00E9               	movwf	(??_FindVictim+0)+0
  3680  0AD3  0869               	movf	(??_FindVictim+0)+0,w
  3681  0AD4  1683               	bsf	status, 5	;RP0=1, select bank1
  3682  0AD5  1303               	bcf	status, 6	;RP1=0, select bank1
  3683  0AD6  00C5               	movwf	(_ROBOTerror)^080h
  3684                           	line	357
  3685                           ;Main.c: 357: break;
  3686  0AD7  2B7E               	goto	l12436
  3687                           	line	358
  3688                           ;Main.c: 358: case 9:
  3689                           	
  3690  0AD8                     l2346:	
  3691                           	line	359
  3692                           	
  3693  0AD8                     l12412:	
  3694                           ;Main.c: 359: ROBOTerror = 9;
  3695  0AD8  3009               	movlw	(09h)
  3696  0AD9  1283               	bcf	status, 5	;RP0=0, select bank0
  3697  0ADA  1303               	bcf	status, 6	;RP1=0, select bank0
  3698  0ADB  00E9               	movwf	(??_FindVictim+0)+0
  3699  0ADC  0869               	movf	(??_FindVictim+0)+0,w
  3700  0ADD  1683               	bsf	status, 5	;RP0=1, select bank1
  3701  0ADE  1303               	bcf	status, 6	;RP1=0, select bank1
  3702  0ADF  00C5               	movwf	(_ROBOTerror)^080h
  3703                           	line	360
  3704                           ;Main.c: 360: break;
  3705  0AE0  2B7E               	goto	l12436
  3706                           	line	361
  3707                           ;Main.c: 361: case 10:
  3708                           	
  3709  0AE1                     l2347:	
  3710                           	line	362
  3711                           	
  3712  0AE1                     l12414:	
  3713                           ;Main.c: 362: RobotPos++;
  3714  0AE1  3001               	movlw	(01h)
  3715  0AE2  1283               	bcf	status, 5	;RP0=0, select bank0
  3716  0AE3  1303               	bcf	status, 6	;RP1=0, select bank0
  3717  0AE4  00E9               	movwf	(??_FindVictim+0)+0
  3718  0AE5  0869               	movf	(??_FindVictim+0)+0,w
  3719  0AE6  1683               	bsf	status, 5	;RP0=1, select bank1
  3720  0AE7  1303               	bcf	status, 6	;RP1=0, select bank1
  3721  0AE8  07C7               	addwf	(_RobotPos)^080h,f
  3722                           	line	364
  3723                           	
  3724  0AE9                     l12416:	
  3725                           ;Main.c: 364: robot_turnLeft();
  3726  0AE9  160A  158A  2661   	fcall	_robot_turnLeft
              120A  158A         
  3727                           	line	367
  3728                           	
  3729  0AEE                     l12418:	
  3730                           ;Main.c: 367: readAvgDistance();
  3731  0AEE  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  3732                           	line	368
  3733                           	
  3734  0AF3                     l12420:	
  3735                           ;Main.c: 368: robotFollow(200, adcVal - 10, currentFlw);
  3736  0AF3  30C8               	movlw	low(0C8h)
  3737  0AF4  1283               	bcf	status, 5	;RP0=0, select bank0
  3738  0AF5  1303               	bcf	status, 6	;RP1=0, select bank0
  3739  0AF6  00DD               	movwf	(?_robotFollow)
  3740  0AF7  3000               	movlw	high(0C8h)
  3741  0AF8  00DE               	movwf	((?_robotFollow))+1
  3742  0AF9  086E               	movf	(_adcVal),w	;volatile
  3743  0AFA  3EF6               	addlw	low(-10)
  3744  0AFB  00DF               	movwf	0+(?_robotFollow)+02h
  3745  0AFC  086F               	movf	(_adcVal+1),w	;volatile
  3746  0AFD  1803               	skipnc
  3747  0AFE  3E01               	addlw	1
  3748  0AFF  3EFF               	addlw	high(-10)
  3749  0B00  00E0               	movwf	1+0+(?_robotFollow)+02h
  3750  0B01  1683               	bsf	status, 5	;RP0=1, select bank1
  3751  0B02  1303               	bcf	status, 6	;RP1=0, select bank1
  3752  0B03  084C               	movf	(_currentFlw)^080h,w
  3753  0B04  1283               	bcf	status, 5	;RP0=0, select bank0
  3754  0B05  1303               	bcf	status, 6	;RP1=0, select bank0
  3755  0B06  00E9               	movwf	(??_FindVictim+0)+0
  3756  0B07  0869               	movf	(??_FindVictim+0)+0,w
  3757  0B08  00E1               	movwf	0+(?_robotFollow)+04h
  3758  0B09  120A  158A  25AB   	fcall	_robotFollow
              120A  158A         
  3759                           	line	369
  3760                           ;Main.c: 369: break;
  3761  0B0E  2B7E               	goto	l12436
  3762                           	line	370
  3763                           ;Main.c: 370: case 11:
  3764                           	
  3765  0B0F                     l2348:	
  3766                           	line	371
  3767                           	
  3768  0B0F                     l12422:	
  3769                           ;Main.c: 371: RobotPos++;
  3770  0B0F  3001               	movlw	(01h)
  3771  0B10  1283               	bcf	status, 5	;RP0=0, select bank0
  3772  0B11  1303               	bcf	status, 6	;RP1=0, select bank0
  3773  0B12  00E9               	movwf	(??_FindVictim+0)+0
  3774  0B13  0869               	movf	(??_FindVictim+0)+0,w
  3775  0B14  1683               	bsf	status, 5	;RP0=1, select bank1
  3776  0B15  1303               	bcf	status, 6	;RP1=0, select bank1
  3777  0B16  07C7               	addwf	(_RobotPos)^080h,f
  3778                           	line	373
  3779                           	
  3780  0B17                     l12424:	
  3781                           ;Main.c: 373: robot_turnRight(200);
  3782  0B17  30C8               	movlw	low(0C8h)
  3783  0B18  1283               	bcf	status, 5	;RP0=0, select bank0
  3784  0B19  1303               	bcf	status, 6	;RP1=0, select bank0
  3785  0B1A  00DD               	movwf	(?_robot_turnRight)
  3786  0B1B  3000               	movlw	high(0C8h)
  3787  0B1C  00DE               	movwf	((?_robot_turnRight))+1
  3788  0B1D  120A  118A  2015   	fcall	_robot_turnRight
              120A  158A         
  3789                           	line	375
  3790                           	
  3791  0B22                     l12426:	
  3792                           ;Main.c: 375: readAvgDistance();
  3793  0B22  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  3794                           	line	376
  3795                           	
  3796  0B27                     l12428:	
  3797                           ;Main.c: 376: robotFollow(200, adcVal, currentFlw);
  3798  0B27  30C8               	movlw	low(0C8h)
  3799  0B28  1283               	bcf	status, 5	;RP0=0, select bank0
  3800  0B29  1303               	bcf	status, 6	;RP1=0, select bank0
  3801  0B2A  00DD               	movwf	(?_robotFollow)
  3802  0B2B  3000               	movlw	high(0C8h)
  3803  0B2C  00DE               	movwf	((?_robotFollow))+1
  3804  0B2D  086F               	movf	(_adcVal+1),w	;volatile
  3805  0B2E  01E0               	clrf	1+(?_robotFollow)+02h
  3806  0B2F  07E0               	addwf	1+(?_robotFollow)+02h
  3807  0B30  086E               	movf	(_adcVal),w	;volatile
  3808  0B31  01DF               	clrf	0+(?_robotFollow)+02h
  3809  0B32  07DF               	addwf	0+(?_robotFollow)+02h
  3810                           
  3811  0B33  1683               	bsf	status, 5	;RP0=1, select bank1
  3812  0B34  1303               	bcf	status, 6	;RP1=0, select bank1
  3813  0B35  084C               	movf	(_currentFlw)^080h,w
  3814  0B36  1283               	bcf	status, 5	;RP0=0, select bank0
  3815  0B37  1303               	bcf	status, 6	;RP1=0, select bank0
  3816  0B38  00E9               	movwf	(??_FindVictim+0)+0
  3817  0B39  0869               	movf	(??_FindVictim+0)+0,w
  3818  0B3A  00E1               	movwf	0+(?_robotFollow)+04h
  3819  0B3B  120A  158A  25AB   	fcall	_robotFollow
              120A  158A         
  3820                           	line	378
  3821                           ;Main.c: 378: break;
  3822  0B40  2B7E               	goto	l12436
  3823                           	line	379
  3824                           ;Main.c: 379: default:
  3825                           	
  3826  0B41                     l2349:	
  3827                           	line	380
  3828                           	
  3829  0B41                     l12430:	
  3830                           ;Main.c: 380: readAvgDistance();
  3831  0B41  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  3832                           	line	381
  3833                           ;Main.c: 381: robotFollow(200, adcVal, currentFlw);
  3834  0B46  30C8               	movlw	low(0C8h)
  3835  0B47  1283               	bcf	status, 5	;RP0=0, select bank0
  3836  0B48  1303               	bcf	status, 6	;RP1=0, select bank0
  3837  0B49  00DD               	movwf	(?_robotFollow)
  3838  0B4A  3000               	movlw	high(0C8h)
  3839  0B4B  00DE               	movwf	((?_robotFollow))+1
  3840  0B4C  086F               	movf	(_adcVal+1),w	;volatile
  3841  0B4D  01E0               	clrf	1+(?_robotFollow)+02h
  3842  0B4E  07E0               	addwf	1+(?_robotFollow)+02h
  3843  0B4F  086E               	movf	(_adcVal),w	;volatile
  3844  0B50  01DF               	clrf	0+(?_robotFollow)+02h
  3845  0B51  07DF               	addwf	0+(?_robotFollow)+02h
  3846                           
  3847  0B52  1683               	bsf	status, 5	;RP0=1, select bank1
  3848  0B53  1303               	bcf	status, 6	;RP1=0, select bank1
  3849  0B54  084C               	movf	(_currentFlw)^080h,w
  3850  0B55  1283               	bcf	status, 5	;RP0=0, select bank0
  3851  0B56  1303               	bcf	status, 6	;RP1=0, select bank0
  3852  0B57  00E9               	movwf	(??_FindVictim+0)+0
  3853  0B58  0869               	movf	(??_FindVictim+0)+0,w
  3854  0B59  00E1               	movwf	0+(?_robotFollow)+04h
  3855  0B5A  120A  158A  25AB   	fcall	_robotFollow
              120A  158A         
  3856                           	line	382
  3857                           ;Main.c: 382: break;
  3858  0B5F  2B7E               	goto	l12436
  3859                           	line	384
  3860                           	
  3861  0B60                     l12432:	
  3862                           ;Main.c: 384: }
  3863  0B60  2B7E               	goto	l12436
  3864                           	line	318
  3865                           	
  3866  0B61                     l2337:	
  3867                           	
  3868  0B61                     l12434:	
  3869  0B61  1683               	bsf	status, 5	;RP0=1, select bank1
  3870  0B62  1303               	bcf	status, 6	;RP1=0, select bank1
  3871  0B63  0845               	movf	(_ROBOTerror)^080h,w
  3872                           	; Switch size 1, requested type "space"
  3873                           ; Number of cases is 8, Range of values is 0 to 11
  3874                           ; switch strategies available:
  3875                           ; Name         Instructions Cycles
  3876                           ; simple_byte           25    13 (average)
  3877                           ; direct_byte           44     8 (fixed)
  3878                           ; jumptable            260     6 (fixed)
  3879                           ; rangetable            16     6 (fixed)
  3880                           ; spacedrange           30     9 (fixed)
  3881                           ; locatedrange          12     3 (fixed)
  3882                           ;	Chosen strategy is simple_byte
  3883                           
  3884                           	opt asmopt_off
  3885  0B64  3A00               	xorlw	0^0	; case 0
  3886  0B65  1903               	skipnz
  3887  0B66  29BD               	goto	l12370
  3888  0B67  3A01               	xorlw	1^0	; case 1
  3889  0B68  1903               	skipnz
  3890  0B69  29DC               	goto	l12372
  3891  0B6A  3A03               	xorlw	2^1	; case 2
  3892  0B6B  1903               	skipnz
  3893  0B6C  2A36               	goto	l12386
  3894  0B6D  3A01               	xorlw	3^2	; case 3
  3895  0B6E  1903               	skipnz
  3896  0B6F  2A3F               	goto	l12388
  3897  0B70  3A07               	xorlw	4^3	; case 4
  3898  0B71  1903               	skipnz
  3899  0B72  2AB8               	goto	l12404
  3900  0B73  3A0D               	xorlw	9^4	; case 9
  3901  0B74  1903               	skipnz
  3902  0B75  2AD8               	goto	l12412
  3903  0B76  3A03               	xorlw	10^9	; case 10
  3904  0B77  1903               	skipnz
  3905  0B78  2AE1               	goto	l12414
  3906  0B79  3A01               	xorlw	11^10	; case 11
  3907  0B7A  1903               	skipnz
  3908  0B7B  2B0F               	goto	l12422
  3909  0B7C  2B41               	goto	l12430
  3910                           	opt asmopt_on
  3911                           
  3912                           	line	384
  3913                           	
  3914  0B7D                     l2339:	
  3915  0B7D  2B7E               	goto	l12436
  3916                           	line	385
  3917                           	
  3918  0B7E                     l2335:	
  3919                           	line	315
  3920                           	
  3921  0B7E                     l12436:	
  3922  0B7E  1683               	bsf	status, 5	;RP0=1, select bank1
  3923  0B7F  1303               	bcf	status, 6	;RP1=0, select bank1
  3924  0B80  0845               	movf	(_ROBOTerror)^080h,w
  3925  0B81  3A09               	xorlw	09h
  3926  0B82  1D03               	skipz
  3927  0B83  2B85               	goto	u5601
  3928  0B84  2B86               	goto	u5600
  3929  0B85                     u5601:
  3930  0B85  2B61               	goto	l12434
  3931  0B86                     u5600:
  3932  0B86  2B87               	goto	l2351
  3933                           	
  3934  0B87                     l2350:	
  3935                           	line	386
  3936                           	
  3937  0B87                     l2351:	
  3938  0B87  0008               	return
  3939                           	opt stack 0
  3940                           GLOBAL	__end_of_FindVictim
  3941  0B88                     	__end_of_FindVictim:
  3942 ;; =============== function _FindVictim ends ============
  3943                           
  3944                           	signat	_FindVictim,88
  3945                           	global	_robot_turnLeft
  3946                           psect	text1113,local,class=CODE,delta=2
  3947                           global __ptext1113
  3948  1E61                     __ptext1113:
  3949                           
  3950 ;; *************** function _robot_turnLeft *****************
  3951 ;; Defined at:
  3952 ;;		line 280 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0
  3968 ;;      Temps:          0       1       0       0       0
  3969 ;;      Totals:         0       1       0       0       0
  3970 ;;Total ram usage:        1 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    6
  3973 ;; This function calls:
  3974 ;;		_robotTurnSpeed
  3975 ;; This function is called by:
  3976 ;;		_GoHome
  3977 ;;		_FindVictim
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           psect	text1113
  3981                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3982                           	line	280
  3983                           	global	__size_of_robot_turnLeft
  3984  0060                     	__size_of_robot_turnLeft	equ	__end_of_robot_turnLeft-_robot_turnLeft
  3985                           	
  3986  1E61                     _robot_turnLeft:	
  3987                           	opt	stack 0
  3988                           ; Regs used in _robot_turnLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3989                           	line	281
  3990                           	
  3991  1E61                     l12350:	
  3992                           ;robot.c: 281: switch (RobotPos)
  3993  1E61  2EB3               	goto	l12366
  3994                           	line	283
  3995                           ;robot.c: 282: {
  3996                           ;robot.c: 283: case 8:
  3997                           	
  3998  1E62                     l6263:	
  3999                           	line	284
  4000                           	
  4001  1E62                     l12352:	
  4002                           ;robot.c: 284: robotTurnSpeed(160,400);
  4003  1E62  30A0               	movlw	low(0A0h)
  4004  1E63  1283               	bcf	status, 5	;RP0=0, select bank0
  4005  1E64  1303               	bcf	status, 6	;RP1=0, select bank0
  4006  1E65  00DD               	movwf	(?_robotTurnSpeed)
  4007  1E66  3000               	movlw	high(0A0h)
  4008  1E67  00DE               	movwf	((?_robotTurnSpeed))+1
  4009  1E68  3090               	movlw	low(0190h)
  4010  1E69  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  4011  1E6A  3001               	movlw	high(0190h)
  4012  1E6B  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  4013  1E6C  160A  118A  231E   	fcall	_robotTurnSpeed
              160A  158A         
  4014                           	line	285
  4015                           	
  4016  1E71                     l12354:	
  4017                           ;robot.c: 285: RobotPos++;
  4018  1E71  3001               	movlw	(01h)
  4019  1E72  1283               	bcf	status, 5	;RP0=0, select bank0
  4020  1E73  1303               	bcf	status, 6	;RP1=0, select bank0
  4021  1E74  00E6               	movwf	(??_robot_turnLeft+0)+0
  4022  1E75  0866               	movf	(??_robot_turnLeft+0)+0,w
  4023  1E76  1683               	bsf	status, 5	;RP0=1, select bank1
  4024  1E77  1303               	bcf	status, 6	;RP1=0, select bank1
  4025  1E78  07C7               	addwf	(_RobotPos)^080h,f
  4026                           	line	286
  4027                           ;robot.c: 286: break;
  4028  1E79  2EC0               	goto	l6268
  4029                           	line	287
  4030                           ;robot.c: 287: case 12:
  4031                           	
  4032  1E7A                     l6265:	
  4033                           	line	288
  4034                           	
  4035  1E7A                     l12356:	
  4036                           ;robot.c: 288: robotTurnSpeed(70,400);
  4037  1E7A  3046               	movlw	low(046h)
  4038  1E7B  1283               	bcf	status, 5	;RP0=0, select bank0
  4039  1E7C  1303               	bcf	status, 6	;RP1=0, select bank0
  4040  1E7D  00DD               	movwf	(?_robotTurnSpeed)
  4041  1E7E  3000               	movlw	high(046h)
  4042  1E7F  00DE               	movwf	((?_robotTurnSpeed))+1
  4043  1E80  3090               	movlw	low(0190h)
  4044  1E81  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  4045  1E82  3001               	movlw	high(0190h)
  4046  1E83  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  4047  1E84  160A  118A  231E   	fcall	_robotTurnSpeed
              160A  158A         
  4048                           	line	289
  4049                           ;robot.c: 289: break;
  4050  1E89  2EC0               	goto	l6268
  4051                           	line	290
  4052                           ;robot.c: 290: case 15:
  4053                           	
  4054  1E8A                     l6266:	
  4055                           	line	291
  4056                           	
  4057  1E8A                     l12358:	
  4058                           ;robot.c: 291: robotTurnSpeed(160,400);
  4059  1E8A  30A0               	movlw	low(0A0h)
  4060  1E8B  1283               	bcf	status, 5	;RP0=0, select bank0
  4061  1E8C  1303               	bcf	status, 6	;RP1=0, select bank0
  4062  1E8D  00DD               	movwf	(?_robotTurnSpeed)
  4063  1E8E  3000               	movlw	high(0A0h)
  4064  1E8F  00DE               	movwf	((?_robotTurnSpeed))+1
  4065  1E90  3090               	movlw	low(0190h)
  4066  1E91  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  4067  1E92  3001               	movlw	high(0190h)
  4068  1E93  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  4069  1E94  160A  118A  231E   	fcall	_robotTurnSpeed
              160A  158A         
  4070                           	line	292
  4071                           	
  4072  1E99                     l12360:	
  4073                           ;robot.c: 292: RobotPos++;
  4074  1E99  3001               	movlw	(01h)
  4075  1E9A  1283               	bcf	status, 5	;RP0=0, select bank0
  4076  1E9B  1303               	bcf	status, 6	;RP1=0, select bank0
  4077  1E9C  00E6               	movwf	(??_robot_turnLeft+0)+0
  4078  1E9D  0866               	movf	(??_robot_turnLeft+0)+0,w
  4079  1E9E  1683               	bsf	status, 5	;RP0=1, select bank1
  4080  1E9F  1303               	bcf	status, 6	;RP1=0, select bank1
  4081  1EA0  07C7               	addwf	(_RobotPos)^080h,f
  4082                           	line	293
  4083                           ;robot.c: 293: break;
  4084  1EA1  2EC0               	goto	l6268
  4085                           	line	294
  4086                           ;robot.c: 294: default:
  4087                           	
  4088  1EA2                     l6267:	
  4089                           	line	295
  4090                           	
  4091  1EA2                     l12362:	
  4092                           ;robot.c: 295: robotTurnSpeed(80,400);
  4093  1EA2  3050               	movlw	low(050h)
  4094  1EA3  1283               	bcf	status, 5	;RP0=0, select bank0
  4095  1EA4  1303               	bcf	status, 6	;RP1=0, select bank0
  4096  1EA5  00DD               	movwf	(?_robotTurnSpeed)
  4097  1EA6  3000               	movlw	high(050h)
  4098  1EA7  00DE               	movwf	((?_robotTurnSpeed))+1
  4099  1EA8  3090               	movlw	low(0190h)
  4100  1EA9  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  4101  1EAA  3001               	movlw	high(0190h)
  4102  1EAB  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  4103  1EAC  160A  118A  231E   	fcall	_robotTurnSpeed
              160A  158A         
  4104                           	line	296
  4105                           ;robot.c: 296: break;
  4106  1EB1  2EC0               	goto	l6268
  4107                           	line	297
  4108                           	
  4109  1EB2                     l12364:	
  4110                           ;robot.c: 297: }
  4111  1EB2  2EC0               	goto	l6268
  4112                           	line	281
  4113                           	
  4114  1EB3                     l6262:	
  4115                           	
  4116  1EB3                     l12366:	
  4117  1EB3  1683               	bsf	status, 5	;RP0=1, select bank1
  4118  1EB4  1303               	bcf	status, 6	;RP1=0, select bank1
  4119  1EB5  0847               	movf	(_RobotPos)^080h,w
  4120                           	; Switch size 1, requested type "space"
  4121                           ; Number of cases is 3, Range of values is 8 to 15
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte           10     6 (average)
  4125                           ; direct_byte           35    11 (fixed)
  4126                           ; jumptable            263     9 (fixed)
  4127                           ;	Chosen strategy is simple_byte
  4128                           
  4129                           	opt asmopt_off
  4130  1EB6  3A08               	xorlw	8^0	; case 8
  4131  1EB7  1903               	skipnz
  4132  1EB8  2E62               	goto	l12352
  4133  1EB9  3A04               	xorlw	12^8	; case 12
  4134  1EBA  1903               	skipnz
  4135  1EBB  2E7A               	goto	l12356
  4136  1EBC  3A03               	xorlw	15^12	; case 15
  4137  1EBD  1903               	skipnz
  4138  1EBE  2E8A               	goto	l12358
  4139  1EBF  2EA2               	goto	l12362
  4140                           	opt asmopt_on
  4141                           
  4142                           	line	297
  4143                           	
  4144  1EC0                     l6264:	
  4145                           	line	298
  4146                           	
  4147  1EC0                     l6268:	
  4148  1EC0  0008               	return
  4149                           	opt stack 0
  4150                           GLOBAL	__end_of_robot_turnLeft
  4151  1EC1                     	__end_of_robot_turnLeft:
  4152 ;; =============== function _robot_turnLeft ends ============
  4153                           
  4154                           	signat	_robot_turnLeft,88
  4155                           	global	_Init_Follow_IR
  4156                           psect	text1114,local,class=CODE,delta=2
  4157                           global __ptext1114
  4158  1ACF                     __ptext1114:
  4159                           
  4160 ;; *************** function _Init_Follow_IR *****************
  4161 ;; Defined at:
  4162 ;;		line 241 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;		None               void
  4169 ;; Registers used:
  4170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4176 ;;      Params:         0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0
  4178 ;;      Temps:          0       3       0       0       0
  4179 ;;      Totals:         0       3       0       0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    6
  4183 ;; This function calls:
  4184 ;;		_calibrateIR
  4185 ;;		_rotate
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           psect	text1114
  4191                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4192                           	line	241
  4193                           	global	__size_of_Init_Follow_IR
  4194  0021                     	__size_of_Init_Follow_IR	equ	__end_of_Init_Follow_IR-_Init_Follow_IR
  4195                           	
  4196  1ACF                     _Init_Follow_IR:	
  4197                           	opt	stack 1
  4198                           ; Regs used in _Init_Follow_IR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4199                           	line	242
  4200                           	
  4201  1ACF                     l12344:	
  4202                           ;Main.c: 242: calibrateIR();
  4203  1ACF  160A  158A  2790   	fcall	_calibrateIR
              160A  158A         
  4204                           	line	243
  4205                           	
  4206  1AD4                     l12346:	
  4207                           ;Main.c: 243: _delay((unsigned long)((500)*(20000000/4000.0)));
  4208                           	opt asmopt_off
  4209  1AD4  300D               movlw  13
  4210  1AD5  1283               	bcf	status, 5	;RP0=0, select bank0
  4211  1AD6  1303               	bcf	status, 6	;RP1=0, select bank0
  4212  1AD7  00DF               movwf	((??_Init_Follow_IR+0)+0+2),f
  4213  1AD8  30AF               movlw	175
  4214  1AD9  00DE               movwf	((??_Init_Follow_IR+0)+0+1),f
  4215  1ADA  30C1               	movlw	193
  4216  1ADB  00DD               movwf	((??_Init_Follow_IR+0)+0),f
  4217  1ADC                     u5687:
  4218  1ADC  0BDD               	decfsz	((??_Init_Follow_IR+0)+0),f
  4219  1ADD  2ADC               	goto	u5687
  4220  1ADE  0BDE               	decfsz	((??_Init_Follow_IR+0)+0+1),f
  4221  1ADF  2ADC               	goto	u5687
  4222  1AE0  0BDF               	decfsz	((??_Init_Follow_IR+0)+0+2),f
  4223  1AE1  2ADC               	goto	u5687
  4224  1AE2  0064               	clrwdt
  4225                           opt asmopt_on
  4226                           
  4227                           	line	244
  4228                           	
  4229  1AE3                     l12348:	
  4230                           ;Main.c: 244: rotate(25, 0);
  4231  1AE3  3019               	movlw	low(019h)
  4232  1AE4  1283               	bcf	status, 5	;RP0=0, select bank0
  4233  1AE5  1303               	bcf	status, 6	;RP1=0, select bank0
  4234  1AE6  00A3               	movwf	(?_rotate)
  4235  1AE7  3000               	movlw	high(019h)
  4236  1AE8  00A4               	movwf	((?_rotate))+1
  4237  1AE9  01A5               	clrf	0+(?_rotate)+02h
  4238  1AEA  160A  158A  26C1   	fcall	_rotate
              160A  158A         
  4239                           	line	245
  4240                           	
  4241  1AEF                     l2310:	
  4242  1AEF  0008               	return
  4243                           	opt stack 0
  4244                           GLOBAL	__end_of_Init_Follow_IR
  4245  1AF0                     	__end_of_Init_Follow_IR:
  4246 ;; =============== function _Init_Follow_IR ends ============
  4247                           
  4248                           	signat	_Init_Follow_IR,88
  4249                           	global	_robotMoveSpeed
  4250                           psect	text1115,local,class=CODE,delta=2
  4251                           global __ptext1115
  4252  15EA                     __ptext1115:
  4253                           
  4254 ;; *************** function _robotMoveSpeed *****************
  4255 ;; Defined at:
  4256 ;;		line 456 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  distance        2   61[BANK0 ] int 
  4259 ;;  speed           2   63[BANK0 ] int 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  temp1           2   68[BANK0 ] int 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;		None               void
  4264 ;; Registers used:
  4265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         0       4       0       0       0
  4272 ;;      Locals:         0       2       0       0       0
  4273 ;;      Temps:          0       3       0       0       0
  4274 ;;      Totals:         0       9       0       0       0
  4275 ;;Total ram usage:        9 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    5
  4278 ;; This function calls:
  4279 ;;		_RobotDrive
  4280 ;;		_robot_read
  4281 ;;		_UpdateDisplay
  4282 ;;		_abs
  4283 ;; This function is called by:
  4284 ;;		_GoHome
  4285 ;;		_FindVictim
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           psect	text1115
  4289                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4290                           	line	456
  4291                           	global	__size_of_robotMoveSpeed
  4292  00F1                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  4293                           	
  4294  15EA                     _robotMoveSpeed:	
  4295                           	opt	stack 1
  4296                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4297                           	line	457
  4298                           	
  4299  15EA                     l12300:	
  4300                           ;robot.c: 457: distTravelled = 0;
  4301  15EA  1683               	bsf	status, 5	;RP0=1, select bank1
  4302  15EB  1303               	bcf	status, 6	;RP1=0, select bank1
  4303  15EC  01B0               	clrf	(_distTravelled)^080h
  4304  15ED  01B1               	clrf	(_distTravelled+1)^080h
  4305                           	line	459
  4306                           	
  4307  15EE                     l12302:	
  4308                           ;robot.c: 458: int temp1;
  4309                           ;robot.c: 459: RobotDrive(speed, 0x7FFF);
  4310  15EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4311  15EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4312  15F0  0860               	movf	(robotMoveSpeed@speed+1),w
  4313  15F1  01AA               	clrf	(?_RobotDrive+1)
  4314  15F2  07AA               	addwf	(?_RobotDrive+1)
  4315  15F3  085F               	movf	(robotMoveSpeed@speed),w
  4316  15F4  01A9               	clrf	(?_RobotDrive)
  4317  15F5  07A9               	addwf	(?_RobotDrive)
  4318                           
  4319  15F6  30FF               	movlw	low(07FFFh)
  4320  15F7  00AB               	movwf	0+(?_RobotDrive)+02h
  4321  15F8  307F               	movlw	high(07FFFh)
  4322  15F9  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4323  15FA  160A  158A  24AC   	fcall	_RobotDrive
              160A  118A         
  4324                           	line	462
  4325                           ;robot.c: 462: while (abs(distTravelled) < abs(distance))
  4326  15FF  2E80               	goto	l12336
  4327                           	
  4328  1600                     l6307:	
  4329                           	line	464
  4330                           	
  4331  1600                     l12304:	
  4332                           ;robot.c: 463: {
  4333                           ;robot.c: 464: robot_read(0);
  4334  1600  3000               	movlw	(0)
  4335  1601  160A  118A  26DB   	fcall	_robot_read
              160A  118A         
  4336                           	line	465
  4337                           	
  4338  1606                     l12306:	
  4339                           ;robot.c: 465: if (BumpSensors)
  4340  1606  1683               	bsf	status, 5	;RP0=1, select bank1
  4341  1607  1303               	bcf	status, 6	;RP1=0, select bank1
  4342  1608  083E               	movf	(_BumpSensors)^080h,w	;volatile
  4343  1609  1D03               	skipz
  4344  160A  2E0C               	goto	u5540
  4345  160B  2E10               	goto	l12310
  4346  160C                     u5540:
  4347                           	line	467
  4348                           	
  4349  160C                     l12308:	
  4350                           ;robot.c: 466: {
  4351                           ;robot.c: 467: ROBOTerror = 1;
  4352  160C  01C5               	clrf	(_ROBOTerror)^080h
  4353  160D  1403               	bsf	status,0
  4354  160E  0DC5               	rlf	(_ROBOTerror)^080h,f
  4355                           	line	468
  4356                           ;robot.c: 468: break;
  4357  160F  2EB5               	goto	l12338
  4358                           	line	469
  4359                           	
  4360  1610                     l6308:	
  4361                           	line	470
  4362                           	
  4363  1610                     l12310:	
  4364                           ;robot.c: 469: }
  4365                           ;robot.c: 470: if (VwallSensor)
  4366  1610  084A               	movf	(_VwallSensor)^080h,w	;volatile
  4367  1611  1D03               	skipz
  4368  1612  2E14               	goto	u5550
  4369  1613  2E1D               	goto	l12314
  4370  1614                     u5550:
  4371                           	line	472
  4372                           	
  4373  1614                     l12312:	
  4374                           ;robot.c: 471: {
  4375                           ;robot.c: 472: ROBOTerror = 2;
  4376  1614  3002               	movlw	(02h)
  4377  1615  1283               	bcf	status, 5	;RP0=0, select bank0
  4378  1616  1303               	bcf	status, 6	;RP1=0, select bank0
  4379  1617  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4380  1618  0861               	movf	(??_robotMoveSpeed+0)+0,w
  4381  1619  1683               	bsf	status, 5	;RP0=1, select bank1
  4382  161A  1303               	bcf	status, 6	;RP1=0, select bank1
  4383  161B  00C5               	movwf	(_ROBOTerror)^080h
  4384                           	line	473
  4385                           ;robot.c: 473: break;
  4386  161C  2EB5               	goto	l12338
  4387                           	line	474
  4388                           	
  4389  161D                     l6310:	
  4390                           	line	475
  4391                           	
  4392  161D                     l12314:	
  4393                           ;robot.c: 474: }
  4394                           ;robot.c: 475: if (CliffSensors)
  4395  161D  0840               	movf	(_CliffSensors)^080h,w	;volatile
  4396  161E  1D03               	skipz
  4397  161F  2E21               	goto	u5560
  4398  1620  2E2A               	goto	l12318
  4399  1621                     u5560:
  4400                           	line	477
  4401                           	
  4402  1621                     l12316:	
  4403                           ;robot.c: 476: {
  4404                           ;robot.c: 477: ROBOTerror = 3;
  4405  1621  3003               	movlw	(03h)
  4406  1622  1283               	bcf	status, 5	;RP0=0, select bank0
  4407  1623  1303               	bcf	status, 6	;RP1=0, select bank0
  4408  1624  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4409  1625  0861               	movf	(??_robotMoveSpeed+0)+0,w
  4410  1626  1683               	bsf	status, 5	;RP0=1, select bank1
  4411  1627  1303               	bcf	status, 6	;RP1=0, select bank1
  4412  1628  00C5               	movwf	(_ROBOTerror)^080h
  4413                           	line	478
  4414                           ;robot.c: 478: break;
  4415  1629  2EB5               	goto	l12338
  4416                           	line	479
  4417                           	
  4418  162A                     l6311:	
  4419                           	line	480
  4420                           	
  4421  162A                     l12318:	
  4422                           ;robot.c: 479: }
  4423                           ;robot.c: 480: if (VictimSensor != 255)
  4424  162A  0849               	movf	(_VictimSensor)^080h,w	;volatile
  4425  162B  3AFF               	xorlw	0FFh
  4426  162C  1903               	skipnz
  4427  162D  2E2F               	goto	u5571
  4428  162E  2E30               	goto	u5570
  4429  162F                     u5571:
  4430  162F  2E39               	goto	l12322
  4431  1630                     u5570:
  4432                           	line	482
  4433                           	
  4434  1630                     l12320:	
  4435                           ;robot.c: 481: {
  4436                           ;robot.c: 482: ROBOTerror = 4;
  4437  1630  3004               	movlw	(04h)
  4438  1631  1283               	bcf	status, 5	;RP0=0, select bank0
  4439  1632  1303               	bcf	status, 6	;RP1=0, select bank0
  4440  1633  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4441  1634  0861               	movf	(??_robotMoveSpeed+0)+0,w
  4442  1635  1683               	bsf	status, 5	;RP0=1, select bank1
  4443  1636  1303               	bcf	status, 6	;RP1=0, select bank1
  4444  1637  00C5               	movwf	(_ROBOTerror)^080h
  4445                           	line	483
  4446                           ;robot.c: 483: break;
  4447  1638  2EB5               	goto	l12338
  4448                           	line	484
  4449                           	
  4450  1639                     l6312:	
  4451                           	line	485
  4452                           	
  4453  1639                     l12322:	
  4454                           ;robot.c: 484: }
  4455                           ;robot.c: 485: temp1 = DistHighByte;
  4456  1639  087D               	movf	(_DistHighByte),w	;volatile
  4457  163A  1283               	bcf	status, 5	;RP0=0, select bank0
  4458  163B  1303               	bcf	status, 6	;RP1=0, select bank0
  4459  163C  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4460  163D  01E2               	clrf	(??_robotMoveSpeed+0)+0+1
  4461  163E  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  4462  163F  00E4               	movwf	(robotMoveSpeed@temp1)
  4463  1640  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  4464  1641  00E5               	movwf	(robotMoveSpeed@temp1+1)
  4465                           	line	486
  4466                           	
  4467  1642                     l12324:	
  4468                           ;robot.c: 486: temp1 = temp1 << 8;
  4469  1642  0865               	movf	(robotMoveSpeed@temp1+1),w
  4470  1643  00E2               	movwf	(??_robotMoveSpeed+0)+0+1
  4471  1644  0864               	movf	(robotMoveSpeed@temp1),w
  4472  1645  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4473  1646  0861               	movf	(??_robotMoveSpeed+0)+0,w
  4474  1647  00E2               	movwf	(??_robotMoveSpeed+0)+1
  4475  1648  01E1               	clrf	(??_robotMoveSpeed+0)+0
  4476  1649  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  4477  164A  00E4               	movwf	(robotMoveSpeed@temp1)
  4478  164B  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  4479  164C  00E5               	movwf	(robotMoveSpeed@temp1+1)
  4480                           	line	487
  4481                           	
  4482  164D                     l12326:	
  4483                           ;robot.c: 487: temp1 += DistLowByte;
  4484  164D  1683               	bsf	status, 5	;RP0=1, select bank1
  4485  164E  1303               	bcf	status, 6	;RP1=0, select bank1
  4486  164F  0841               	movf	(_DistLowByte)^080h,w	;volatile
  4487  1650  1283               	bcf	status, 5	;RP0=0, select bank0
  4488  1651  1303               	bcf	status, 6	;RP1=0, select bank0
  4489  1652  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4490  1653  01E2               	clrf	(??_robotMoveSpeed+0)+0+1
  4491  1654  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  4492  1655  07E4               	addwf	(robotMoveSpeed@temp1),f
  4493  1656  1803               	skipnc
  4494  1657  0AE5               	incf	(robotMoveSpeed@temp1+1),f
  4495  1658  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  4496  1659  07E5               	addwf	(robotMoveSpeed@temp1+1),f
  4497                           	line	488
  4498                           	
  4499  165A                     l12328:	
  4500                           ;robot.c: 488: distTravelled += temp1;
  4501  165A  0864               	movf	(robotMoveSpeed@temp1),w
  4502  165B  1683               	bsf	status, 5	;RP0=1, select bank1
  4503  165C  1303               	bcf	status, 6	;RP1=0, select bank1
  4504  165D  07B0               	addwf	(_distTravelled)^080h,f
  4505  165E  1803               	skipnc
  4506  165F  0AB1               	incf	(_distTravelled+1)^080h,f
  4507  1660  1283               	bcf	status, 5	;RP0=0, select bank0
  4508  1661  1303               	bcf	status, 6	;RP1=0, select bank0
  4509  1662  0865               	movf	(robotMoveSpeed@temp1+1),w
  4510  1663  1683               	bsf	status, 5	;RP0=1, select bank1
  4511  1664  1303               	bcf	status, 6	;RP1=0, select bank1
  4512  1665  07B1               	addwf	(_distTravelled+1)^080h,f
  4513                           	line	489
  4514                           	
  4515  1666                     l12330:	
  4516                           ;robot.c: 489: TotalDistTravelled += temp1;
  4517  1666  1283               	bcf	status, 5	;RP0=0, select bank0
  4518  1667  1303               	bcf	status, 6	;RP1=0, select bank0
  4519  1668  0864               	movf	(robotMoveSpeed@temp1),w
  4520  1669  1683               	bsf	status, 5	;RP0=1, select bank1
  4521  166A  1303               	bcf	status, 6	;RP1=0, select bank1
  4522  166B  07AC               	addwf	(_TotalDistTravelled)^080h,f
  4523  166C  1803               	skipnc
  4524  166D  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  4525  166E  1283               	bcf	status, 5	;RP0=0, select bank0
  4526  166F  1303               	bcf	status, 6	;RP1=0, select bank0
  4527  1670  0865               	movf	(robotMoveSpeed@temp1+1),w
  4528  1671  1683               	bsf	status, 5	;RP0=1, select bank1
  4529  1672  1303               	bcf	status, 6	;RP1=0, select bank1
  4530  1673  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  4531                           	line	490
  4532                           	
  4533  1674                     l12332:	
  4534                           ;robot.c: 490: Disp2 = distTravelled;
  4535  1674  0831               	movf	(_distTravelled+1)^080h,w
  4536  1675  01A7               	clrf	(_Disp2+1)^080h
  4537  1676  07A7               	addwf	(_Disp2+1)^080h
  4538  1677  0830               	movf	(_distTravelled)^080h,w
  4539  1678  01A6               	clrf	(_Disp2)^080h
  4540  1679  07A6               	addwf	(_Disp2)^080h
  4541                           
  4542                           	line	491
  4543                           	
  4544  167A                     l12334:	
  4545                           ;robot.c: 491: UpdateDisplay();
  4546  167A  120A  118A  2401   	fcall	_UpdateDisplay
              160A  118A         
  4547  167F  2E80               	goto	l12336
  4548                           	line	497
  4549                           	
  4550  1680                     l6306:	
  4551                           	line	462
  4552                           	
  4553  1680                     l12336:	
  4554  1680  1683               	bsf	status, 5	;RP0=1, select bank1
  4555  1681  1303               	bcf	status, 6	;RP1=0, select bank1
  4556  1682  0831               	movf	(_distTravelled+1)^080h,w
  4557  1683  1283               	bcf	status, 5	;RP0=0, select bank0
  4558  1684  1303               	bcf	status, 6	;RP1=0, select bank0
  4559  1685  01A7               	clrf	(?_abs+1)
  4560  1686  07A7               	addwf	(?_abs+1)
  4561  1687  1683               	bsf	status, 5	;RP0=1, select bank1
  4562  1688  1303               	bcf	status, 6	;RP1=0, select bank1
  4563  1689  0830               	movf	(_distTravelled)^080h,w
  4564  168A  1283               	bcf	status, 5	;RP0=0, select bank0
  4565  168B  1303               	bcf	status, 6	;RP1=0, select bank0
  4566  168C  01A6               	clrf	(?_abs)
  4567  168D  07A6               	addwf	(?_abs)
  4568                           
  4569  168E  160A  158A  2477   	fcall	_abs
              160A  118A         
  4570  1693  1283               	bcf	status, 5	;RP0=0, select bank0
  4571  1694  1303               	bcf	status, 6	;RP1=0, select bank0
  4572  1695  0826               	movf	(0+?_abs),w
  4573  1696  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4574  1697  0827               	movf	(1+?_abs),w
  4575  1698  00E2               	movwf	((??_robotMoveSpeed+0)+0+1)
  4576  1699  085E               	movf	(robotMoveSpeed@distance+1),w
  4577  169A  01A7               	clrf	(?_abs+1)
  4578  169B  07A7               	addwf	(?_abs+1)
  4579  169C  085D               	movf	(robotMoveSpeed@distance),w
  4580  169D  01A6               	clrf	(?_abs)
  4581  169E  07A6               	addwf	(?_abs)
  4582                           
  4583  169F  160A  158A  2477   	fcall	_abs
              160A  118A         
  4584  16A4  1283               	bcf	status, 5	;RP0=0, select bank0
  4585  16A5  1303               	bcf	status, 6	;RP1=0, select bank0
  4586  16A6  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  4587  16A7  3A80               	xorlw	80h
  4588  16A8  00E3               	movwf	(??_robotMoveSpeed+2)+0
  4589  16A9  0827               	movf	(1+(?_abs)),w
  4590  16AA  3A80               	xorlw	80h
  4591  16AB  0263               	subwf	(??_robotMoveSpeed+2)+0,w
  4592  16AC  1D03               	skipz
  4593  16AD  2EB0               	goto	u5585
  4594  16AE  0826               	movf	(0+(?_abs)),w
  4595  16AF  0261               	subwf	0+(??_robotMoveSpeed+0)+0,w
  4596  16B0                     u5585:
  4597                           
  4598  16B0  1C03               	skipc
  4599  16B1  2EB3               	goto	u5581
  4600  16B2  2EB4               	goto	u5580
  4601  16B3                     u5581:
  4602  16B3  2E00               	goto	l12304
  4603  16B4                     u5580:
  4604  16B4  2EB5               	goto	l12338
  4605                           	
  4606  16B5                     l6309:	
  4607                           	line	498
  4608                           	
  4609  16B5                     l12338:	
  4610                           ;robot.c: 497: }
  4611                           ;robot.c: 498: Disp2 = ROBOTerror;
  4612  16B5  1683               	bsf	status, 5	;RP0=1, select bank1
  4613  16B6  1303               	bcf	status, 6	;RP1=0, select bank1
  4614  16B7  0845               	movf	(_ROBOTerror)^080h,w
  4615  16B8  1283               	bcf	status, 5	;RP0=0, select bank0
  4616  16B9  1303               	bcf	status, 6	;RP1=0, select bank0
  4617  16BA  00E1               	movwf	(??_robotMoveSpeed+0)+0
  4618  16BB  01E2               	clrf	(??_robotMoveSpeed+0)+0+1
  4619  16BC  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  4620  16BD  1683               	bsf	status, 5	;RP0=1, select bank1
  4621  16BE  1303               	bcf	status, 6	;RP1=0, select bank1
  4622  16BF  00A6               	movwf	(_Disp2)^080h
  4623  16C0  1283               	bcf	status, 5	;RP0=0, select bank0
  4624  16C1  1303               	bcf	status, 6	;RP1=0, select bank0
  4625  16C2  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  4626  16C3  1683               	bsf	status, 5	;RP0=1, select bank1
  4627  16C4  1303               	bcf	status, 6	;RP1=0, select bank1
  4628  16C5  00A7               	movwf	(_Disp2+1)^080h
  4629                           	line	499
  4630                           	
  4631  16C6                     l12340:	
  4632                           ;robot.c: 499: UpdateDisplay();
  4633  16C6  120A  118A  2401   	fcall	_UpdateDisplay
              160A  118A         
  4634                           	line	500
  4635                           	
  4636  16CB                     l12342:	
  4637                           ;robot.c: 500: RobotDrive(0, 0x7FFF);
  4638  16CB  3000               	movlw	low(0)
  4639  16CC  1283               	bcf	status, 5	;RP0=0, select bank0
  4640  16CD  1303               	bcf	status, 6	;RP1=0, select bank0
  4641  16CE  00A9               	movwf	(?_RobotDrive)
  4642  16CF  3000               	movlw	high(0)
  4643  16D0  00AA               	movwf	((?_RobotDrive))+1
  4644  16D1  30FF               	movlw	low(07FFFh)
  4645  16D2  00AB               	movwf	0+(?_RobotDrive)+02h
  4646  16D3  307F               	movlw	high(07FFFh)
  4647  16D4  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4648  16D5  160A  158A  24AC   	fcall	_RobotDrive
              160A  118A         
  4649                           	line	502
  4650                           	
  4651  16DA                     l6313:	
  4652  16DA  0008               	return
  4653                           	opt stack 0
  4654                           GLOBAL	__end_of_robotMoveSpeed
  4655  16DB                     	__end_of_robotMoveSpeed:
  4656 ;; =============== function _robotMoveSpeed ends ============
  4657                           
  4658                           	signat	_robotMoveSpeed,8312
  4659                           	global	_robotFollow
  4660                           psect	text1116,local,class=CODE,delta=2
  4661                           global __ptext1116
  4662  0DAB                     __ptext1116:
  4663                           
  4664 ;; *************** function _robotFollow *****************
  4665 ;; Defined at:
  4666 ;;		line 187 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  speed           2   61[BANK0 ] int 
  4669 ;;  AdcTarget       2   63[BANK0 ] int 
  4670 ;;  followDir       1   65[BANK0 ] unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  temp1           2   70[BANK0 ] int 
  4673 ;;  hysterysis      1   72[BANK0 ] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;		None               void
  4676 ;; Registers used:
  4677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4683 ;;      Params:         0       5       0       0       0
  4684 ;;      Locals:         0       3       0       0       0
  4685 ;;      Temps:          0       4       0       0       0
  4686 ;;      Totals:         0      12       0       0       0
  4687 ;;Total ram usage:       12 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    6
  4690 ;; This function calls:
  4691 ;;		_RobotDrive
  4692 ;;		_ser_putch
  4693 ;;		_readAvgDistance
  4694 ;;		_rotate
  4695 ;;		_robot_read
  4696 ;;		_UpdateDisplay
  4697 ;; This function is called by:
  4698 ;;		_GoHome
  4699 ;;		_FindVictim
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           psect	text1116
  4703                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4704                           	line	187
  4705                           	global	__size_of_robotFollow
  4706  0255                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  4707                           	
  4708  0DAB                     _robotFollow:	
  4709                           	opt	stack 0
  4710                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4711                           	line	188
  4712                           	
  4713  0DAB                     l12196:	
  4714                           ;robot.c: 188: distTravelled = 0;
  4715  0DAB  1683               	bsf	status, 5	;RP0=1, select bank1
  4716  0DAC  1303               	bcf	status, 6	;RP1=0, select bank1
  4717  0DAD  01B0               	clrf	(_distTravelled)^080h
  4718  0DAE  01B1               	clrf	(_distTravelled+1)^080h
  4719                           	line	190
  4720                           	
  4721  0DAF                     l12198:	
  4722                           ;robot.c: 189: int temp1;
  4723                           ;robot.c: 190: unsigned char hysterysis = 20;
  4724  0DAF  3014               	movlw	(014h)
  4725  0DB0  1283               	bcf	status, 5	;RP0=0, select bank0
  4726  0DB1  1303               	bcf	status, 6	;RP1=0, select bank0
  4727  0DB2  00E2               	movwf	(??_robotFollow+0)+0
  4728  0DB3  0862               	movf	(??_robotFollow+0)+0,w
  4729  0DB4  00E8               	movwf	(robotFollow@hysterysis)
  4730                           	line	191
  4731                           	
  4732  0DB5                     l12200:	
  4733                           ;robot.c: 191: RobotDrive(speed, 0x7FFF);
  4734  0DB5  085E               	movf	(robotFollow@speed+1),w
  4735  0DB6  01AA               	clrf	(?_RobotDrive+1)
  4736  0DB7  07AA               	addwf	(?_RobotDrive+1)
  4737  0DB8  085D               	movf	(robotFollow@speed),w
  4738  0DB9  01A9               	clrf	(?_RobotDrive)
  4739  0DBA  07A9               	addwf	(?_RobotDrive)
  4740                           
  4741  0DBB  30FF               	movlw	low(07FFFh)
  4742  0DBC  00AB               	movwf	0+(?_RobotDrive)+02h
  4743  0DBD  307F               	movlw	high(07FFFh)
  4744  0DBE  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4745  0DBF  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  4746                           	line	192
  4747                           	
  4748  0DC4                     l12202:	
  4749                           ;robot.c: 192: ROBOTerror = 0;
  4750  0DC4  1683               	bsf	status, 5	;RP0=1, select bank1
  4751  0DC5  1303               	bcf	status, 6	;RP1=0, select bank1
  4752  0DC6  01C5               	clrf	(_ROBOTerror)^080h
  4753  0DC7  2DC8               	goto	l12204
  4754                           	line	195
  4755                           ;robot.c: 195: while (1)
  4756                           	
  4757  0DC8                     l6237:	
  4758                           	line	197
  4759                           	
  4760  0DC8                     l12204:	
  4761                           ;robot.c: 196: {
  4762                           ;robot.c: 197: if ((AdcTarget + 100) <= hysterysis)
  4763  0DC8  1283               	bcf	status, 5	;RP0=0, select bank0
  4764  0DC9  1303               	bcf	status, 6	;RP1=0, select bank0
  4765  0DCA  085F               	movf	(robotFollow@AdcTarget),w
  4766  0DCB  3E64               	addlw	low(064h)
  4767  0DCC  00E2               	movwf	(??_robotFollow+0)+0
  4768  0DCD  0860               	movf	(robotFollow@AdcTarget+1),w
  4769  0DCE  1803               	skipnc
  4770  0DCF  3E01               	addlw	1
  4771  0DD0  3E00               	addlw	high(064h)
  4772  0DD1  00E3               	movwf	1+(??_robotFollow+0)+0
  4773  0DD2  0863               	movf	1+(??_robotFollow+0)+0,w
  4774  0DD3  3A80               	xorlw	80h
  4775  0DD4  3C80               	sublw	080h
  4776  0DD5  1D03               	skipz
  4777  0DD6  2DD9               	goto	u5395
  4778  0DD7  0862               	movf	0+(??_robotFollow+0)+0,w
  4779  0DD8  0268               	subwf	(robotFollow@hysterysis),w
  4780  0DD9                     u5395:
  4781                           
  4782  0DD9  1C03               	skipc
  4783  0DDA  2DDC               	goto	u5391
  4784  0DDB  2DDD               	goto	u5390
  4785  0DDC                     u5391:
  4786  0DDC  2DEA               	goto	l12208
  4787  0DDD                     u5390:
  4788                           	line	199
  4789                           	
  4790  0DDD                     l12206:	
  4791                           ;robot.c: 198: {
  4792                           ;robot.c: 199: ser_putch(141);
  4793  0DDD  308D               	movlw	(08Dh)
  4794  0DDE  160A  158A  241B   	fcall	_ser_putch
              120A  158A         
  4795                           	line	200
  4796                           ;robot.c: 200: ser_putch(0);
  4797  0DE3  3000               	movlw	(0)
  4798  0DE4  160A  158A  241B   	fcall	_ser_putch
              120A  158A         
  4799  0DE9  2DEA               	goto	l12208
  4800                           	line	201
  4801                           	
  4802  0DEA                     l6238:	
  4803                           	line	202
  4804                           	
  4805  0DEA                     l12208:	
  4806                           ;robot.c: 201: }
  4807                           ;robot.c: 202: if (AdcTarget > 100)
  4808  0DEA  1283               	bcf	status, 5	;RP0=0, select bank0
  4809  0DEB  1303               	bcf	status, 6	;RP1=0, select bank0
  4810  0DEC  0860               	movf	(robotFollow@AdcTarget+1),w
  4811  0DED  3A80               	xorlw	80h
  4812  0DEE  00FF               	movwf	btemp+1
  4813  0DEF  3080               	movlw	(high(065h))^80h
  4814  0DF0  027F               	subwf	btemp+1,w
  4815  0DF1  1D03               	skipz
  4816  0DF2  2DF5               	goto	u5405
  4817  0DF3  3065               	movlw	low(065h)
  4818  0DF4  025F               	subwf	(robotFollow@AdcTarget),w
  4819  0DF5                     u5405:
  4820                           
  4821  0DF5  1C03               	skipc
  4822  0DF6  2DF8               	goto	u5401
  4823  0DF7  2DF9               	goto	u5400
  4824  0DF8                     u5401:
  4825  0DF8  2E02               	goto	l12212
  4826  0DF9                     u5400:
  4827                           	line	203
  4828                           	
  4829  0DF9                     l12210:	
  4830                           ;robot.c: 203: AdcTarget--;
  4831  0DF9  30FF               	movlw	low(-1)
  4832  0DFA  1283               	bcf	status, 5	;RP0=0, select bank0
  4833  0DFB  1303               	bcf	status, 6	;RP1=0, select bank0
  4834  0DFC  07DF               	addwf	(robotFollow@AdcTarget),f
  4835  0DFD  1803               	skipnc
  4836  0DFE  0AE0               	incf	(robotFollow@AdcTarget+1),f
  4837  0DFF  30FF               	movlw	high(-1)
  4838  0E00  07E0               	addwf	(robotFollow@AdcTarget+1),f
  4839  0E01  2E02               	goto	l12212
  4840                           	
  4841  0E02                     l6239:	
  4842                           	line	204
  4843                           	
  4844  0E02                     l12212:	
  4845                           ;robot.c: 204: if (AdcTarget < 100)
  4846  0E02  1283               	bcf	status, 5	;RP0=0, select bank0
  4847  0E03  1303               	bcf	status, 6	;RP1=0, select bank0
  4848  0E04  0860               	movf	(robotFollow@AdcTarget+1),w
  4849  0E05  3A80               	xorlw	80h
  4850  0E06  00FF               	movwf	btemp+1
  4851  0E07  3080               	movlw	(high(064h))^80h
  4852  0E08  027F               	subwf	btemp+1,w
  4853  0E09  1D03               	skipz
  4854  0E0A  2E0D               	goto	u5415
  4855  0E0B  3064               	movlw	low(064h)
  4856  0E0C  025F               	subwf	(robotFollow@AdcTarget),w
  4857  0E0D                     u5415:
  4858                           
  4859  0E0D  1803               	skipnc
  4860  0E0E  2E10               	goto	u5411
  4861  0E0F  2E11               	goto	u5410
  4862  0E10                     u5411:
  4863  0E10  2E1A               	goto	l12216
  4864  0E11                     u5410:
  4865                           	line	205
  4866                           	
  4867  0E11                     l12214:	
  4868                           ;robot.c: 205: AdcTarget++;
  4869  0E11  3001               	movlw	low(01h)
  4870  0E12  1283               	bcf	status, 5	;RP0=0, select bank0
  4871  0E13  1303               	bcf	status, 6	;RP1=0, select bank0
  4872  0E14  07DF               	addwf	(robotFollow@AdcTarget),f
  4873  0E15  1803               	skipnc
  4874  0E16  0AE0               	incf	(robotFollow@AdcTarget+1),f
  4875  0E17  3000               	movlw	high(01h)
  4876  0E18  07E0               	addwf	(robotFollow@AdcTarget+1),f
  4877  0E19  2E1A               	goto	l12216
  4878                           	
  4879  0E1A                     l6240:	
  4880                           	line	206
  4881                           	
  4882  0E1A                     l12216:	
  4883                           ;robot.c: 206: readAvgDistance();
  4884  0E1A  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  4885                           	line	207
  4886                           	
  4887  0E1F                     l12218:	
  4888                           ;robot.c: 207: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + hysterysis))
  4889  0E1F  1283               	bcf	status, 5	;RP0=0, select bank0
  4890  0E20  1303               	bcf	status, 6	;RP1=0, select bank0
  4891  0E21  086F               	movf	(_adcVal+1),w	;volatile
  4892  0E22  0260               	subwf	(robotFollow@AdcTarget+1),w
  4893  0E23  1D03               	skipz
  4894  0E24  2E27               	goto	u5425
  4895  0E25  086E               	movf	(_adcVal),w	;volatile
  4896  0E26  025F               	subwf	(robotFollow@AdcTarget),w
  4897  0E27                     u5425:
  4898  0E27  1803               	skipnc
  4899  0E28  2E2A               	goto	u5421
  4900  0E29  2E2B               	goto	u5420
  4901  0E2A                     u5421:
  4902  0E2A  2E4C               	goto	l12224
  4903  0E2B                     u5420:
  4904                           	
  4905  0E2B                     l12220:	
  4906  0E2B  0868               	movf	(robotFollow@hysterysis),w
  4907  0E2C  075F               	addwf	(robotFollow@AdcTarget),w
  4908  0E2D  00E2               	movwf	(??_robotFollow+0)+0
  4909  0E2E  0860               	movf	(robotFollow@AdcTarget+1),w
  4910  0E2F  1803               	skipnc
  4911  0E30  0A60               	incf	(robotFollow@AdcTarget+1),w
  4912  0E31  00E3               	movwf	((??_robotFollow+0)+0)+1
  4913  0E32  0863               	movf	1+(??_robotFollow+0)+0,w
  4914  0E33  026F               	subwf	(_adcVal+1),w	;volatile
  4915  0E34  1D03               	skipz
  4916  0E35  2E38               	goto	u5435
  4917  0E36  0862               	movf	0+(??_robotFollow+0)+0,w
  4918  0E37  026E               	subwf	(_adcVal),w	;volatile
  4919  0E38                     u5435:
  4920  0E38  1803               	skipnc
  4921  0E39  2E3B               	goto	u5431
  4922  0E3A  2E3C               	goto	u5430
  4923  0E3B                     u5431:
  4924  0E3B  2E4C               	goto	l12224
  4925  0E3C                     u5430:
  4926                           	line	209
  4927                           	
  4928  0E3C                     l12222:	
  4929                           ;robot.c: 208: {
  4930                           ;robot.c: 209: RobotDrive(speed, 1700);
  4931  0E3C  085E               	movf	(robotFollow@speed+1),w
  4932  0E3D  01AA               	clrf	(?_RobotDrive+1)
  4933  0E3E  07AA               	addwf	(?_RobotDrive+1)
  4934  0E3F  085D               	movf	(robotFollow@speed),w
  4935  0E40  01A9               	clrf	(?_RobotDrive)
  4936  0E41  07A9               	addwf	(?_RobotDrive)
  4937                           
  4938  0E42  30A4               	movlw	low(06A4h)
  4939  0E43  00AB               	movwf	0+(?_RobotDrive)+02h
  4940  0E44  3006               	movlw	high(06A4h)
  4941  0E45  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4942  0E46  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  4943                           	line	210
  4944                           ;robot.c: 210: }
  4945  0E4B  2F21               	goto	l6242
  4946                           	line	211
  4947                           	
  4948  0E4C                     l6241:	
  4949                           	
  4950  0E4C                     l12224:	
  4951                           ;robot.c: 211: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - hysterysis))
  4952  0E4C  1283               	bcf	status, 5	;RP0=0, select bank0
  4953  0E4D  1303               	bcf	status, 6	;RP1=0, select bank0
  4954  0E4E  0860               	movf	(robotFollow@AdcTarget+1),w
  4955  0E4F  026F               	subwf	(_adcVal+1),w	;volatile
  4956  0E50  1D03               	skipz
  4957  0E51  2E54               	goto	u5445
  4958  0E52  085F               	movf	(robotFollow@AdcTarget),w
  4959  0E53  026E               	subwf	(_adcVal),w	;volatile
  4960  0E54                     u5445:
  4961  0E54  1803               	skipnc
  4962  0E55  2E57               	goto	u5441
  4963  0E56  2E58               	goto	u5440
  4964  0E57                     u5441:
  4965  0E57  2E82               	goto	l12230
  4966  0E58                     u5440:
  4967                           	
  4968  0E58                     l12226:	
  4969  0E58  0868               	movf	(robotFollow@hysterysis),w
  4970  0E59  00E2               	movwf	(??_robotFollow+0)+0
  4971  0E5A  01E3               	clrf	(??_robotFollow+0)+0+1
  4972  0E5B  09E2               	comf	(??_robotFollow+0)+0,f
  4973  0E5C  09E3               	comf	(??_robotFollow+0)+1,f
  4974  0E5D  0AE2               	incf	(??_robotFollow+0)+0,f
  4975  0E5E  1903               	skipnz
  4976  0E5F  0AE3               	incf	(??_robotFollow+0)+1,f
  4977  0E60  085F               	movf	(robotFollow@AdcTarget),w
  4978  0E61  0762               	addwf	0+(??_robotFollow+0)+0,w
  4979  0E62  00E4               	movwf	(??_robotFollow+2)+0
  4980  0E63  0860               	movf	(robotFollow@AdcTarget+1),w
  4981  0E64  1803               	skipnc
  4982  0E65  0A60               	incf	(robotFollow@AdcTarget+1),w
  4983  0E66  0763               	addwf	1+(??_robotFollow+0)+0,w
  4984  0E67  00E5               	movwf	1+(??_robotFollow+2)+0
  4985  0E68  086F               	movf	(_adcVal+1),w	;volatile
  4986  0E69  0265               	subwf	1+(??_robotFollow+2)+0,w
  4987  0E6A  1D03               	skipz
  4988  0E6B  2E6E               	goto	u5455
  4989  0E6C  086E               	movf	(_adcVal),w	;volatile
  4990  0E6D  0264               	subwf	0+(??_robotFollow+2)+0,w
  4991  0E6E                     u5455:
  4992  0E6E  1803               	skipnc
  4993  0E6F  2E71               	goto	u5451
  4994  0E70  2E72               	goto	u5450
  4995  0E71                     u5451:
  4996  0E71  2E82               	goto	l12230
  4997  0E72                     u5450:
  4998                           	line	213
  4999                           	
  5000  0E72                     l12228:	
  5001                           ;robot.c: 212: {
  5002                           ;robot.c: 213: RobotDrive(speed, -1700);
  5003  0E72  085E               	movf	(robotFollow@speed+1),w
  5004  0E73  01AA               	clrf	(?_RobotDrive+1)
  5005  0E74  07AA               	addwf	(?_RobotDrive+1)
  5006  0E75  085D               	movf	(robotFollow@speed),w
  5007  0E76  01A9               	clrf	(?_RobotDrive)
  5008  0E77  07A9               	addwf	(?_RobotDrive)
  5009                           
  5010  0E78  305C               	movlw	low(-1700)
  5011  0E79  00AB               	movwf	0+(?_RobotDrive)+02h
  5012  0E7A  30F9               	movlw	high(-1700)
  5013  0E7B  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5014  0E7C  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  5015                           	line	214
  5016                           ;robot.c: 214: }
  5017  0E81  2F21               	goto	l6242
  5018                           	line	215
  5019                           	
  5020  0E82                     l6243:	
  5021                           	
  5022  0E82                     l12230:	
  5023                           ;robot.c: 215: else if (adcVal <= (AdcTarget - hysterysis) || adcVal >= (AdcTarget + hys
                                 terysis))
  5024  0E82  1283               	bcf	status, 5	;RP0=0, select bank0
  5025  0E83  1303               	bcf	status, 6	;RP1=0, select bank0
  5026  0E84  0868               	movf	(robotFollow@hysterysis),w
  5027  0E85  00E2               	movwf	(??_robotFollow+0)+0
  5028  0E86  01E3               	clrf	(??_robotFollow+0)+0+1
  5029  0E87  09E2               	comf	(??_robotFollow+0)+0,f
  5030  0E88  09E3               	comf	(??_robotFollow+0)+1,f
  5031  0E89  0AE2               	incf	(??_robotFollow+0)+0,f
  5032  0E8A  1903               	skipnz
  5033  0E8B  0AE3               	incf	(??_robotFollow+0)+1,f
  5034  0E8C  085F               	movf	(robotFollow@AdcTarget),w
  5035  0E8D  0762               	addwf	0+(??_robotFollow+0)+0,w
  5036  0E8E  00E4               	movwf	(??_robotFollow+2)+0
  5037  0E8F  0860               	movf	(robotFollow@AdcTarget+1),w
  5038  0E90  1803               	skipnc
  5039  0E91  0A60               	incf	(robotFollow@AdcTarget+1),w
  5040  0E92  0763               	addwf	1+(??_robotFollow+0)+0,w
  5041  0E93  00E5               	movwf	1+(??_robotFollow+2)+0
  5042  0E94  086F               	movf	(_adcVal+1),w	;volatile
  5043  0E95  0265               	subwf	1+(??_robotFollow+2)+0,w
  5044  0E96  1D03               	skipz
  5045  0E97  2E9A               	goto	u5465
  5046  0E98  086E               	movf	(_adcVal),w	;volatile
  5047  0E99  0264               	subwf	0+(??_robotFollow+2)+0,w
  5048  0E9A                     u5465:
  5049  0E9A  1803               	skipnc
  5050  0E9B  2E9D               	goto	u5461
  5051  0E9C  2E9E               	goto	u5460
  5052  0E9D                     u5461:
  5053  0E9D  2EB0               	goto	l12234
  5054  0E9E                     u5460:
  5055                           	
  5056  0E9E                     l12232:	
  5057  0E9E  0868               	movf	(robotFollow@hysterysis),w
  5058  0E9F  075F               	addwf	(robotFollow@AdcTarget),w
  5059  0EA0  00E2               	movwf	(??_robotFollow+0)+0
  5060  0EA1  0860               	movf	(robotFollow@AdcTarget+1),w
  5061  0EA2  1803               	skipnc
  5062  0EA3  0A60               	incf	(robotFollow@AdcTarget+1),w
  5063  0EA4  00E3               	movwf	((??_robotFollow+0)+0)+1
  5064  0EA5  0863               	movf	1+(??_robotFollow+0)+0,w
  5065  0EA6  026F               	subwf	(_adcVal+1),w	;volatile
  5066  0EA7  1D03               	skipz
  5067  0EA8  2EAB               	goto	u5475
  5068  0EA9  0862               	movf	0+(??_robotFollow+0)+0,w
  5069  0EAA  026E               	subwf	(_adcVal),w	;volatile
  5070  0EAB                     u5475:
  5071  0EAB  1C03               	skipc
  5072  0EAC  2EAE               	goto	u5471
  5073  0EAD  2EAF               	goto	u5470
  5074  0EAE                     u5471:
  5075  0EAE  2F0F               	goto	l12256
  5076  0EAF                     u5470:
  5077  0EAF  2EB0               	goto	l12234
  5078                           	
  5079  0EB0                     l6247:	
  5080                           	line	217
  5081                           	
  5082  0EB0                     l12234:	
  5083                           ;robot.c: 216: {
  5084                           ;robot.c: 217: if (followDir == 0)
  5085  0EB0  08E1               	movf	(robotFollow@followDir),f
  5086  0EB1  1D03               	skipz
  5087  0EB2  2EB4               	goto	u5481
  5088  0EB3  2EB5               	goto	u5480
  5089  0EB4                     u5481:
  5090  0EB4  2ED3               	goto	l12242
  5091  0EB5                     u5480:
  5092                           	line	219
  5093                           	
  5094  0EB5                     l12236:	
  5095                           ;robot.c: 218: {
  5096                           ;robot.c: 219: rotate(10,1);
  5097  0EB5  300A               	movlw	low(0Ah)
  5098  0EB6  00A3               	movwf	(?_rotate)
  5099  0EB7  3000               	movlw	high(0Ah)
  5100  0EB8  00A4               	movwf	((?_rotate))+1
  5101  0EB9  01A5               	clrf	0+(?_rotate)+02h
  5102  0EBA  1403               	bsf	status,0
  5103  0EBB  0DA5               	rlf	0+(?_rotate)+02h,f
  5104  0EBC  160A  158A  26C1   	fcall	_rotate
              120A  158A         
  5105                           	line	220
  5106                           	
  5107  0EC1                     l12238:	
  5108                           ;robot.c: 220: readAvgDistance();
  5109  0EC1  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  5110                           	line	221
  5111                           	
  5112  0EC6                     l12240:	
  5113                           ;robot.c: 221: rotate(10,0);
  5114  0EC6  300A               	movlw	low(0Ah)
  5115  0EC7  1283               	bcf	status, 5	;RP0=0, select bank0
  5116  0EC8  1303               	bcf	status, 6	;RP1=0, select bank0
  5117  0EC9  00A3               	movwf	(?_rotate)
  5118  0ECA  3000               	movlw	high(0Ah)
  5119  0ECB  00A4               	movwf	((?_rotate))+1
  5120  0ECC  01A5               	clrf	0+(?_rotate)+02h
  5121  0ECD  160A  158A  26C1   	fcall	_rotate
              120A  158A         
  5122                           	line	222
  5123                           ;robot.c: 222: }
  5124  0ED2  2EF3               	goto	l12248
  5125                           	line	223
  5126                           	
  5127  0ED3                     l6248:	
  5128                           	line	225
  5129                           	
  5130  0ED3                     l12242:	
  5131                           ;robot.c: 223: else
  5132                           ;robot.c: 224: {
  5133                           ;robot.c: 225: rotate(10,0);
  5134  0ED3  300A               	movlw	low(0Ah)
  5135  0ED4  1283               	bcf	status, 5	;RP0=0, select bank0
  5136  0ED5  1303               	bcf	status, 6	;RP1=0, select bank0
  5137  0ED6  00A3               	movwf	(?_rotate)
  5138  0ED7  3000               	movlw	high(0Ah)
  5139  0ED8  00A4               	movwf	((?_rotate))+1
  5140  0ED9  01A5               	clrf	0+(?_rotate)+02h
  5141  0EDA  160A  158A  26C1   	fcall	_rotate
              120A  158A         
  5142                           	line	226
  5143                           	
  5144  0EDF                     l12244:	
  5145                           ;robot.c: 226: readAvgDistance();
  5146  0EDF  160A  118A  2217   	fcall	_readAvgDistance
              120A  158A         
  5147                           	line	227
  5148                           	
  5149  0EE4                     l12246:	
  5150                           ;robot.c: 227: rotate(10,1);
  5151  0EE4  300A               	movlw	low(0Ah)
  5152  0EE5  1283               	bcf	status, 5	;RP0=0, select bank0
  5153  0EE6  1303               	bcf	status, 6	;RP1=0, select bank0
  5154  0EE7  00A3               	movwf	(?_rotate)
  5155  0EE8  3000               	movlw	high(0Ah)
  5156  0EE9  00A4               	movwf	((?_rotate))+1
  5157  0EEA  01A5               	clrf	0+(?_rotate)+02h
  5158  0EEB  1403               	bsf	status,0
  5159  0EEC  0DA5               	rlf	0+(?_rotate)+02h,f
  5160  0EED  160A  158A  26C1   	fcall	_rotate
              120A  158A         
  5161  0EF2  2EF3               	goto	l12248
  5162                           	line	228
  5163                           	
  5164  0EF3                     l6249:	
  5165                           	line	229
  5166                           	
  5167  0EF3                     l12248:	
  5168                           ;robot.c: 228: }
  5169                           ;robot.c: 229: if (adcVal < 50)
  5170  0EF3  3000               	movlw	high(032h)
  5171  0EF4  1283               	bcf	status, 5	;RP0=0, select bank0
  5172  0EF5  1303               	bcf	status, 6	;RP1=0, select bank0
  5173  0EF6  026F               	subwf	(_adcVal+1),w	;volatile
  5174  0EF7  3032               	movlw	low(032h)
  5175  0EF8  1903               	skipnz
  5176  0EF9  026E               	subwf	(_adcVal),w	;volatile
  5177  0EFA  1803               	skipnc
  5178  0EFB  2EFD               	goto	u5491
  5179  0EFC  2EFE               	goto	u5490
  5180  0EFD                     u5491:
  5181  0EFD  2F05               	goto	l12252
  5182  0EFE                     u5490:
  5183                           	line	230
  5184                           	
  5185  0EFE                     l12250:	
  5186                           ;robot.c: 230: ROBOTerror = 11;
  5187  0EFE  300B               	movlw	(0Bh)
  5188  0EFF  00E2               	movwf	(??_robotFollow+0)+0
  5189  0F00  0862               	movf	(??_robotFollow+0)+0,w
  5190  0F01  1683               	bsf	status, 5	;RP0=1, select bank1
  5191  0F02  1303               	bcf	status, 6	;RP1=0, select bank1
  5192  0F03  00C5               	movwf	(_ROBOTerror)^080h
  5193  0F04  2FE9               	goto	l12296
  5194                           	line	231
  5195                           	
  5196  0F05                     l6250:	
  5197                           	line	232
  5198                           	
  5199  0F05                     l12252:	
  5200                           ;robot.c: 231: else
  5201                           ;robot.c: 232: ROBOTerror = 10;
  5202  0F05  300A               	movlw	(0Ah)
  5203  0F06  1283               	bcf	status, 5	;RP0=0, select bank0
  5204  0F07  00E2               	movwf	(??_robotFollow+0)+0
  5205  0F08  0862               	movf	(??_robotFollow+0)+0,w
  5206  0F09  1683               	bsf	status, 5	;RP0=1, select bank1
  5207  0F0A  1303               	bcf	status, 6	;RP1=0, select bank1
  5208  0F0B  00C5               	movwf	(_ROBOTerror)^080h
  5209  0F0C  2FE9               	goto	l12296
  5210                           	
  5211  0F0D                     l6251:	
  5212                           	line	234
  5213                           ;robot.c: 234: break;
  5214  0F0D  2FE9               	goto	l12296
  5215                           	line	235
  5216                           	
  5217  0F0E                     l12254:	
  5218                           ;robot.c: 235: }
  5219  0F0E  2F21               	goto	l6242
  5220                           	line	236
  5221                           	
  5222  0F0F                     l6245:	
  5223                           	line	238
  5224                           	
  5225  0F0F                     l12256:	
  5226                           ;robot.c: 236: else
  5227                           ;robot.c: 237: {
  5228                           ;robot.c: 238: RobotDrive(speed, 0x7FFF);
  5229  0F0F  1283               	bcf	status, 5	;RP0=0, select bank0
  5230  0F10  085E               	movf	(robotFollow@speed+1),w
  5231  0F11  01AA               	clrf	(?_RobotDrive+1)
  5232  0F12  07AA               	addwf	(?_RobotDrive+1)
  5233  0F13  085D               	movf	(robotFollow@speed),w
  5234  0F14  01A9               	clrf	(?_RobotDrive)
  5235  0F15  07A9               	addwf	(?_RobotDrive)
  5236                           
  5237  0F16  30FF               	movlw	low(07FFFh)
  5238  0F17  00AB               	movwf	0+(?_RobotDrive)+02h
  5239  0F18  307F               	movlw	high(07FFFh)
  5240  0F19  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5241  0F1A  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  5242  0F1F  2F21               	goto	l6242
  5243                           	line	239
  5244                           	
  5245  0F20                     l6253:	
  5246  0F20  2F21               	goto	l6242
  5247                           	
  5248  0F21                     l6244:	
  5249                           	
  5250  0F21                     l6242:	
  5251                           	line	240
  5252                           ;robot.c: 239: }
  5253                           ;robot.c: 240: robot_read(0);
  5254  0F21  3000               	movlw	(0)
  5255  0F22  160A  118A  26DB   	fcall	_robot_read
              120A  158A         
  5256                           	line	241
  5257                           	
  5258  0F27                     l12258:	
  5259                           ;robot.c: 241: if (BumpSensors)
  5260  0F27  1683               	bsf	status, 5	;RP0=1, select bank1
  5261  0F28  1303               	bcf	status, 6	;RP1=0, select bank1
  5262  0F29  083E               	movf	(_BumpSensors)^080h,w	;volatile
  5263  0F2A  1D03               	skipz
  5264  0F2B  2F2D               	goto	u5500
  5265  0F2C  2F42               	goto	l12264
  5266  0F2D                     u5500:
  5267                           	line	243
  5268                           	
  5269  0F2D                     l12260:	
  5270                           ;robot.c: 242: {
  5271                           ;robot.c: 243: RobotDrive(0, 0x7FFF);
  5272  0F2D  3000               	movlw	low(0)
  5273  0F2E  1283               	bcf	status, 5	;RP0=0, select bank0
  5274  0F2F  1303               	bcf	status, 6	;RP1=0, select bank0
  5275  0F30  00A9               	movwf	(?_RobotDrive)
  5276  0F31  3000               	movlw	high(0)
  5277  0F32  00AA               	movwf	((?_RobotDrive))+1
  5278  0F33  30FF               	movlw	low(07FFFh)
  5279  0F34  00AB               	movwf	0+(?_RobotDrive)+02h
  5280  0F35  307F               	movlw	high(07FFFh)
  5281  0F36  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5282  0F37  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  5283                           	line	244
  5284                           	
  5285  0F3C                     l12262:	
  5286                           ;robot.c: 244: ROBOTerror = 1;
  5287  0F3C  1683               	bsf	status, 5	;RP0=1, select bank1
  5288  0F3D  1303               	bcf	status, 6	;RP1=0, select bank1
  5289  0F3E  01C5               	clrf	(_ROBOTerror)^080h
  5290  0F3F  1403               	bsf	status,0
  5291  0F40  0DC5               	rlf	(_ROBOTerror)^080h,f
  5292                           	line	245
  5293                           ;robot.c: 245: break;
  5294  0F41  2FE9               	goto	l12296
  5295                           	line	246
  5296                           	
  5297  0F42                     l6254:	
  5298                           	line	247
  5299                           	
  5300  0F42                     l12264:	
  5301                           ;robot.c: 246: }
  5302                           ;robot.c: 247: if (VwallSensor)
  5303  0F42  084A               	movf	(_VwallSensor)^080h,w	;volatile
  5304  0F43  1D03               	skipz
  5305  0F44  2F46               	goto	u5510
  5306  0F45  2F5E               	goto	l12270
  5307  0F46                     u5510:
  5308                           	line	249
  5309                           	
  5310  0F46                     l12266:	
  5311                           ;robot.c: 248: {
  5312                           ;robot.c: 249: RobotDrive(0, 0x7FFF);
  5313  0F46  3000               	movlw	low(0)
  5314  0F47  1283               	bcf	status, 5	;RP0=0, select bank0
  5315  0F48  1303               	bcf	status, 6	;RP1=0, select bank0
  5316  0F49  00A9               	movwf	(?_RobotDrive)
  5317  0F4A  3000               	movlw	high(0)
  5318  0F4B  00AA               	movwf	((?_RobotDrive))+1
  5319  0F4C  30FF               	movlw	low(07FFFh)
  5320  0F4D  00AB               	movwf	0+(?_RobotDrive)+02h
  5321  0F4E  307F               	movlw	high(07FFFh)
  5322  0F4F  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5323  0F50  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  5324                           	line	250
  5325                           	
  5326  0F55                     l12268:	
  5327                           ;robot.c: 250: ROBOTerror = 2;
  5328  0F55  3002               	movlw	(02h)
  5329  0F56  1283               	bcf	status, 5	;RP0=0, select bank0
  5330  0F57  1303               	bcf	status, 6	;RP1=0, select bank0
  5331  0F58  00E2               	movwf	(??_robotFollow+0)+0
  5332  0F59  0862               	movf	(??_robotFollow+0)+0,w
  5333  0F5A  1683               	bsf	status, 5	;RP0=1, select bank1
  5334  0F5B  1303               	bcf	status, 6	;RP1=0, select bank1
  5335  0F5C  00C5               	movwf	(_ROBOTerror)^080h
  5336                           	line	251
  5337                           ;robot.c: 251: break;
  5338  0F5D  2FE9               	goto	l12296
  5339                           	line	252
  5340                           	
  5341  0F5E                     l6255:	
  5342                           	line	253
  5343                           	
  5344  0F5E                     l12270:	
  5345                           ;robot.c: 252: }
  5346                           ;robot.c: 253: if (CliffSensors)
  5347  0F5E  0840               	movf	(_CliffSensors)^080h,w	;volatile
  5348  0F5F  1D03               	skipz
  5349  0F60  2F62               	goto	u5520
  5350  0F61  2F7A               	goto	l12276
  5351  0F62                     u5520:
  5352                           	line	255
  5353                           	
  5354  0F62                     l12272:	
  5355                           ;robot.c: 254: {
  5356                           ;robot.c: 255: RobotDrive(-200, 0x7FFF);
  5357  0F62  3038               	movlw	low(-200)
  5358  0F63  1283               	bcf	status, 5	;RP0=0, select bank0
  5359  0F64  1303               	bcf	status, 6	;RP1=0, select bank0
  5360  0F65  00A9               	movwf	(?_RobotDrive)
  5361  0F66  30FF               	movlw	high(-200)
  5362  0F67  00AA               	movwf	((?_RobotDrive))+1
  5363  0F68  30FF               	movlw	low(07FFFh)
  5364  0F69  00AB               	movwf	0+(?_RobotDrive)+02h
  5365  0F6A  307F               	movlw	high(07FFFh)
  5366  0F6B  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5367  0F6C  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  5368                           	line	256
  5369                           	
  5370  0F71                     l12274:	
  5371                           ;robot.c: 256: ROBOTerror = 3;
  5372  0F71  3003               	movlw	(03h)
  5373  0F72  1283               	bcf	status, 5	;RP0=0, select bank0
  5374  0F73  1303               	bcf	status, 6	;RP1=0, select bank0
  5375  0F74  00E2               	movwf	(??_robotFollow+0)+0
  5376  0F75  0862               	movf	(??_robotFollow+0)+0,w
  5377  0F76  1683               	bsf	status, 5	;RP0=1, select bank1
  5378  0F77  1303               	bcf	status, 6	;RP1=0, select bank1
  5379  0F78  00C5               	movwf	(_ROBOTerror)^080h
  5380                           	line	257
  5381                           ;robot.c: 257: break;
  5382  0F79  2FE9               	goto	l12296
  5383                           	line	258
  5384                           	
  5385  0F7A                     l6256:	
  5386                           	line	259
  5387                           	
  5388  0F7A                     l12276:	
  5389                           ;robot.c: 258: }
  5390                           ;robot.c: 259: if (VictimSensor != 255)
  5391  0F7A  0849               	movf	(_VictimSensor)^080h,w	;volatile
  5392  0F7B  3AFF               	xorlw	0FFh
  5393  0F7C  1903               	skipnz
  5394  0F7D  2F7F               	goto	u5531
  5395  0F7E  2F80               	goto	u5530
  5396  0F7F                     u5531:
  5397  0F7F  2F98               	goto	l12282
  5398  0F80                     u5530:
  5399                           	line	261
  5400                           	
  5401  0F80                     l12278:	
  5402                           ;robot.c: 260: {
  5403                           ;robot.c: 261: RobotDrive(0, 0x7FFF);
  5404  0F80  3000               	movlw	low(0)
  5405  0F81  1283               	bcf	status, 5	;RP0=0, select bank0
  5406  0F82  1303               	bcf	status, 6	;RP1=0, select bank0
  5407  0F83  00A9               	movwf	(?_RobotDrive)
  5408  0F84  3000               	movlw	high(0)
  5409  0F85  00AA               	movwf	((?_RobotDrive))+1
  5410  0F86  30FF               	movlw	low(07FFFh)
  5411  0F87  00AB               	movwf	0+(?_RobotDrive)+02h
  5412  0F88  307F               	movlw	high(07FFFh)
  5413  0F89  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5414  0F8A  160A  158A  24AC   	fcall	_RobotDrive
              120A  158A         
  5415                           	line	262
  5416                           	
  5417  0F8F                     l12280:	
  5418                           ;robot.c: 262: ROBOTerror = 4;
  5419  0F8F  3004               	movlw	(04h)
  5420  0F90  1283               	bcf	status, 5	;RP0=0, select bank0
  5421  0F91  1303               	bcf	status, 6	;RP1=0, select bank0
  5422  0F92  00E2               	movwf	(??_robotFollow+0)+0
  5423  0F93  0862               	movf	(??_robotFollow+0)+0,w
  5424  0F94  1683               	bsf	status, 5	;RP0=1, select bank1
  5425  0F95  1303               	bcf	status, 6	;RP1=0, select bank1
  5426  0F96  00C5               	movwf	(_ROBOTerror)^080h
  5427                           	line	263
  5428                           ;robot.c: 263: break;
  5429  0F97  2FE9               	goto	l12296
  5430                           	line	264
  5431                           	
  5432  0F98                     l6257:	
  5433                           	line	265
  5434                           	
  5435  0F98                     l12282:	
  5436                           ;robot.c: 264: }
  5437                           ;robot.c: 265: temp1 = DistHighByte;
  5438  0F98  087D               	movf	(_DistHighByte),w	;volatile
  5439  0F99  1283               	bcf	status, 5	;RP0=0, select bank0
  5440  0F9A  1303               	bcf	status, 6	;RP1=0, select bank0
  5441  0F9B  00E2               	movwf	(??_robotFollow+0)+0
  5442  0F9C  01E3               	clrf	(??_robotFollow+0)+0+1
  5443  0F9D  0862               	movf	0+(??_robotFollow+0)+0,w
  5444  0F9E  00E6               	movwf	(robotFollow@temp1)
  5445  0F9F  0863               	movf	1+(??_robotFollow+0)+0,w
  5446  0FA0  00E7               	movwf	(robotFollow@temp1+1)
  5447                           	line	266
  5448                           	
  5449  0FA1                     l12284:	
  5450                           ;robot.c: 266: temp1 = temp1 << 8;
  5451  0FA1  0867               	movf	(robotFollow@temp1+1),w
  5452  0FA2  00E3               	movwf	(??_robotFollow+0)+0+1
  5453  0FA3  0866               	movf	(robotFollow@temp1),w
  5454  0FA4  00E2               	movwf	(??_robotFollow+0)+0
  5455  0FA5  0862               	movf	(??_robotFollow+0)+0,w
  5456  0FA6  00E3               	movwf	(??_robotFollow+0)+1
  5457  0FA7  01E2               	clrf	(??_robotFollow+0)+0
  5458  0FA8  0862               	movf	0+(??_robotFollow+0)+0,w
  5459  0FA9  00E6               	movwf	(robotFollow@temp1)
  5460  0FAA  0863               	movf	1+(??_robotFollow+0)+0,w
  5461  0FAB  00E7               	movwf	(robotFollow@temp1+1)
  5462                           	line	267
  5463                           	
  5464  0FAC                     l12286:	
  5465                           ;robot.c: 267: temp1 += DistLowByte;
  5466  0FAC  1683               	bsf	status, 5	;RP0=1, select bank1
  5467  0FAD  1303               	bcf	status, 6	;RP1=0, select bank1
  5468  0FAE  0841               	movf	(_DistLowByte)^080h,w	;volatile
  5469  0FAF  1283               	bcf	status, 5	;RP0=0, select bank0
  5470  0FB0  1303               	bcf	status, 6	;RP1=0, select bank0
  5471  0FB1  00E2               	movwf	(??_robotFollow+0)+0
  5472  0FB2  01E3               	clrf	(??_robotFollow+0)+0+1
  5473  0FB3  0862               	movf	0+(??_robotFollow+0)+0,w
  5474  0FB4  07E6               	addwf	(robotFollow@temp1),f
  5475  0FB5  1803               	skipnc
  5476  0FB6  0AE7               	incf	(robotFollow@temp1+1),f
  5477  0FB7  0863               	movf	1+(??_robotFollow+0)+0,w
  5478  0FB8  07E7               	addwf	(robotFollow@temp1+1),f
  5479                           	line	268
  5480                           	
  5481  0FB9                     l12288:	
  5482                           ;robot.c: 268: distTravelled += temp1;
  5483  0FB9  0866               	movf	(robotFollow@temp1),w
  5484  0FBA  1683               	bsf	status, 5	;RP0=1, select bank1
  5485  0FBB  1303               	bcf	status, 6	;RP1=0, select bank1
  5486  0FBC  07B0               	addwf	(_distTravelled)^080h,f
  5487  0FBD  1803               	skipnc
  5488  0FBE  0AB1               	incf	(_distTravelled+1)^080h,f
  5489  0FBF  1283               	bcf	status, 5	;RP0=0, select bank0
  5490  0FC0  1303               	bcf	status, 6	;RP1=0, select bank0
  5491  0FC1  0867               	movf	(robotFollow@temp1+1),w
  5492  0FC2  1683               	bsf	status, 5	;RP0=1, select bank1
  5493  0FC3  1303               	bcf	status, 6	;RP1=0, select bank1
  5494  0FC4  07B1               	addwf	(_distTravelled+1)^080h,f
  5495                           	line	269
  5496                           	
  5497  0FC5                     l12290:	
  5498                           ;robot.c: 269: TotalDistTravelled += temp1;
  5499  0FC5  1283               	bcf	status, 5	;RP0=0, select bank0
  5500  0FC6  1303               	bcf	status, 6	;RP1=0, select bank0
  5501  0FC7  0866               	movf	(robotFollow@temp1),w
  5502  0FC8  1683               	bsf	status, 5	;RP0=1, select bank1
  5503  0FC9  1303               	bcf	status, 6	;RP1=0, select bank1
  5504  0FCA  07AC               	addwf	(_TotalDistTravelled)^080h,f
  5505  0FCB  1803               	skipnc
  5506  0FCC  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  5507  0FCD  1283               	bcf	status, 5	;RP0=0, select bank0
  5508  0FCE  1303               	bcf	status, 6	;RP1=0, select bank0
  5509  0FCF  0867               	movf	(robotFollow@temp1+1),w
  5510  0FD0  1683               	bsf	status, 5	;RP0=1, select bank1
  5511  0FD1  1303               	bcf	status, 6	;RP1=0, select bank1
  5512  0FD2  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  5513                           	line	271
  5514                           	
  5515  0FD3                     l12292:	
  5516                           ;robot.c: 271: Disp2 = RobotPos;
  5517  0FD3  0847               	movf	(_RobotPos)^080h,w
  5518  0FD4  1283               	bcf	status, 5	;RP0=0, select bank0
  5519  0FD5  1303               	bcf	status, 6	;RP1=0, select bank0
  5520  0FD6  00E2               	movwf	(??_robotFollow+0)+0
  5521  0FD7  01E3               	clrf	(??_robotFollow+0)+0+1
  5522  0FD8  0862               	movf	0+(??_robotFollow+0)+0,w
  5523  0FD9  1683               	bsf	status, 5	;RP0=1, select bank1
  5524  0FDA  1303               	bcf	status, 6	;RP1=0, select bank1
  5525  0FDB  00A6               	movwf	(_Disp2)^080h
  5526  0FDC  1283               	bcf	status, 5	;RP0=0, select bank0
  5527  0FDD  1303               	bcf	status, 6	;RP1=0, select bank0
  5528  0FDE  0863               	movf	1+(??_robotFollow+0)+0,w
  5529  0FDF  1683               	bsf	status, 5	;RP0=1, select bank1
  5530  0FE0  1303               	bcf	status, 6	;RP1=0, select bank1
  5531  0FE1  00A7               	movwf	(_Disp2+1)^080h
  5532                           	line	272
  5533                           	
  5534  0FE2                     l12294:	
  5535                           ;robot.c: 272: UpdateDisplay();
  5536  0FE2  120A  118A  2401   	fcall	_UpdateDisplay
              120A  158A         
  5537  0FE7  2DC8               	goto	l12204
  5538                           	line	273
  5539                           	
  5540  0FE8                     l6258:	
  5541                           	line	195
  5542  0FE8  2DC8               	goto	l12204
  5543                           	
  5544  0FE9                     l6252:	
  5545                           	line	275
  5546                           	
  5547  0FE9                     l12296:	
  5548                           ;robot.c: 273: }
  5549                           ;robot.c: 275: Disp2 = RobotPos;
  5550  0FE9  1683               	bsf	status, 5	;RP0=1, select bank1
  5551  0FEA  1303               	bcf	status, 6	;RP1=0, select bank1
  5552  0FEB  0847               	movf	(_RobotPos)^080h,w
  5553  0FEC  1283               	bcf	status, 5	;RP0=0, select bank0
  5554  0FED  1303               	bcf	status, 6	;RP1=0, select bank0
  5555  0FEE  00E2               	movwf	(??_robotFollow+0)+0
  5556  0FEF  01E3               	clrf	(??_robotFollow+0)+0+1
  5557  0FF0  0862               	movf	0+(??_robotFollow+0)+0,w
  5558  0FF1  1683               	bsf	status, 5	;RP0=1, select bank1
  5559  0FF2  1303               	bcf	status, 6	;RP1=0, select bank1
  5560  0FF3  00A6               	movwf	(_Disp2)^080h
  5561  0FF4  1283               	bcf	status, 5	;RP0=0, select bank0
  5562  0FF5  1303               	bcf	status, 6	;RP1=0, select bank0
  5563  0FF6  0863               	movf	1+(??_robotFollow+0)+0,w
  5564  0FF7  1683               	bsf	status, 5	;RP0=1, select bank1
  5565  0FF8  1303               	bcf	status, 6	;RP1=0, select bank1
  5566  0FF9  00A7               	movwf	(_Disp2+1)^080h
  5567                           	line	276
  5568                           	
  5569  0FFA                     l12298:	
  5570                           ;robot.c: 276: UpdateDisplay();
  5571  0FFA  120A  118A  2401   	fcall	_UpdateDisplay
              120A  158A         
  5572                           	line	277
  5573                           	
  5574  0FFF                     l6259:	
  5575  0FFF  0008               	return
  5576                           	opt stack 0
  5577                           GLOBAL	__end_of_robotFollow
  5578  1000                     	__end_of_robotFollow:
  5579 ;; =============== function _robotFollow ends ============
  5580                           
  5581                           	signat	_robotFollow,12408
  5582                           	global	_robot_turnRight
  5583                           psect	text1117,local,class=CODE,delta=2
  5584                           global __ptext1117
  5585  0015                     __ptext1117:
  5586                           
  5587 ;; *************** function _robot_turnRight *****************
  5588 ;; Defined at:
  5589 ;;		line 301 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  speed           2   61[BANK0 ] int 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  temp1           2   70[BANK0 ] int 
  5594 ;;  AdcTarget       2   68[BANK0 ] int 
  5595 ;;  turnTarget      2   66[BANK0 ] int 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;		None               void
  5598 ;; Registers used:
  5599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       2       0       0       0
  5606 ;;      Locals:         0       6       0       0       0
  5607 ;;      Temps:          0       3       0       0       0
  5608 ;;      Totals:         0      11       0       0       0
  5609 ;;Total ram usage:       11 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    6
  5612 ;; This function calls:
  5613 ;;		_RobotDrive
  5614 ;;		_rotate
  5615 ;;		_readAvgDistance
  5616 ;;		_robot_read
  5617 ;;		_UpdateDisplay
  5618 ;;		___awdiv
  5619 ;;		_abs
  5620 ;; This function is called by:
  5621 ;;		_GoHome
  5622 ;;		_FindVictim
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           psect	text1117
  5626                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5627                           	line	301
  5628                           	global	__size_of_robot_turnRight
  5629  03EC                     	__size_of_robot_turnRight	equ	__end_of_robot_turnRight-_robot_turnRight
  5630                           	
  5631  0015                     _robot_turnRight:	
  5632                           	opt	stack 0
  5633                           ; Regs used in _robot_turnRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5634                           	line	303
  5635                           	
  5636  0015                     l12032:	
  5637                           ;robot.c: 303: angleTurned = 0;
  5638  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  5639  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  5640  0017  01AE               	clrf	(_angleTurned)^080h
  5641  0018  01AF               	clrf	(_angleTurned+1)^080h
  5642                           	line	305
  5643                           ;robot.c: 304: int temp1;
  5644                           ;robot.c: 305: int turnTarget = 0;
  5645  0019  1283               	bcf	status, 5	;RP0=0, select bank0
  5646  001A  1303               	bcf	status, 6	;RP1=0, select bank0
  5647  001B  01E2               	clrf	(robot_turnRight@turnTarget)
  5648  001C  01E3               	clrf	(robot_turnRight@turnTarget+1)
  5649                           	line	306
  5650                           	
  5651  001D                     l12034:	
  5652                           ;robot.c: 306: RobotDrive(speed, 0x7FFF);
  5653  001D  085E               	movf	(robot_turnRight@speed+1),w
  5654  001E  01AA               	clrf	(?_RobotDrive+1)
  5655  001F  07AA               	addwf	(?_RobotDrive+1)
  5656  0020  085D               	movf	(robot_turnRight@speed),w
  5657  0021  01A9               	clrf	(?_RobotDrive)
  5658  0022  07A9               	addwf	(?_RobotDrive)
  5659                           
  5660  0023  30FF               	movlw	low(07FFFh)
  5661  0024  00AB               	movwf	0+(?_RobotDrive)+02h
  5662  0025  307F               	movlw	high(07FFFh)
  5663  0026  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5664  0027  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  5665                           	line	307
  5666                           	
  5667  002C                     l12036:	
  5668                           ;robot.c: 307: ROBOTerror = 0;
  5669  002C  1683               	bsf	status, 5	;RP0=1, select bank1
  5670  002D  1303               	bcf	status, 6	;RP1=0, select bank1
  5671  002E  01C5               	clrf	(_ROBOTerror)^080h
  5672                           	line	308
  5673                           	
  5674  002F                     l12038:	
  5675                           ;robot.c: 308: rotate(25, 0);
  5676  002F  3019               	movlw	low(019h)
  5677  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  5678  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  5679  0032  00A3               	movwf	(?_rotate)
  5680  0033  3000               	movlw	high(019h)
  5681  0034  00A4               	movwf	((?_rotate))+1
  5682  0035  01A5               	clrf	0+(?_rotate)+02h
  5683  0036  160A  158A  26C1   	fcall	_rotate
              120A  118A         
  5684                           	line	309
  5685                           	
  5686  003B                     l12040:	
  5687                           ;robot.c: 309: readAvgDistance();
  5688  003B  160A  118A  2217   	fcall	_readAvgDistance
              120A  118A         
  5689                           	line	310
  5690                           	
  5691  0040                     l12042:	
  5692                           ;robot.c: 310: int AdcTarget = adcVal;
  5693  0040  1283               	bcf	status, 5	;RP0=0, select bank0
  5694  0041  1303               	bcf	status, 6	;RP1=0, select bank0
  5695  0042  086F               	movf	(_adcVal+1),w	;volatile
  5696  0043  01E5               	clrf	(robot_turnRight@AdcTarget+1)	;volatile
  5697  0044  07E5               	addwf	(robot_turnRight@AdcTarget+1)	;volatile
  5698  0045  086E               	movf	(_adcVal),w	;volatile
  5699  0046  01E4               	clrf	(robot_turnRight@AdcTarget)	;volatile
  5700  0047  07E4               	addwf	(robot_turnRight@AdcTarget)	;volatile
  5701                           
  5702  0048  2849               	goto	l12044
  5703                           	line	312
  5704                           ;robot.c: 312: while (1)
  5705                           	
  5706  0049                     l6271:	
  5707                           	line	314
  5708                           	
  5709  0049                     l12044:	
  5710                           ;robot.c: 313: {
  5711                           ;robot.c: 314: readAvgDistance();
  5712  0049  160A  118A  2217   	fcall	_readAvgDistance
              120A  118A         
  5713                           	line	315
  5714                           	
  5715  004E                     l12046:	
  5716                           ;robot.c: 315: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 15))
  5717  004E  1283               	bcf	status, 5	;RP0=0, select bank0
  5718  004F  1303               	bcf	status, 6	;RP1=0, select bank0
  5719  0050  086F               	movf	(_adcVal+1),w	;volatile
  5720  0051  0265               	subwf	(robot_turnRight@AdcTarget+1),w
  5721  0052  1D03               	skipz
  5722  0053  2856               	goto	u5245
  5723  0054  086E               	movf	(_adcVal),w	;volatile
  5724  0055  0264               	subwf	(robot_turnRight@AdcTarget),w
  5725  0056                     u5245:
  5726  0056  1803               	skipnc
  5727  0057  2859               	goto	u5241
  5728  0058  285A               	goto	u5240
  5729  0059                     u5241:
  5730  0059  287C               	goto	l12052
  5731  005A                     u5240:
  5732                           	
  5733  005A                     l12048:	
  5734  005A  0864               	movf	(robot_turnRight@AdcTarget),w
  5735  005B  3E0F               	addlw	low(0Fh)
  5736  005C  00DF               	movwf	(??_robot_turnRight+0)+0
  5737  005D  0865               	movf	(robot_turnRight@AdcTarget+1),w
  5738  005E  1803               	skipnc
  5739  005F  3E01               	addlw	1
  5740  0060  3E00               	addlw	high(0Fh)
  5741  0061  00E0               	movwf	1+(??_robot_turnRight+0)+0
  5742  0062  0860               	movf	1+(??_robot_turnRight+0)+0,w
  5743  0063  026F               	subwf	(_adcVal+1),w	;volatile
  5744  0064  1D03               	skipz
  5745  0065  2868               	goto	u5255
  5746  0066  085F               	movf	0+(??_robot_turnRight+0)+0,w
  5747  0067  026E               	subwf	(_adcVal),w	;volatile
  5748  0068                     u5255:
  5749  0068  1803               	skipnc
  5750  0069  286B               	goto	u5251
  5751  006A  286C               	goto	u5250
  5752  006B                     u5251:
  5753  006B  287C               	goto	l12052
  5754  006C                     u5250:
  5755                           	line	317
  5756                           	
  5757  006C                     l12050:	
  5758                           ;robot.c: 316: {
  5759                           ;robot.c: 317: RobotDrive(speed, 1700);
  5760  006C  085E               	movf	(robot_turnRight@speed+1),w
  5761  006D  01AA               	clrf	(?_RobotDrive+1)
  5762  006E  07AA               	addwf	(?_RobotDrive+1)
  5763  006F  085D               	movf	(robot_turnRight@speed),w
  5764  0070  01A9               	clrf	(?_RobotDrive)
  5765  0071  07A9               	addwf	(?_RobotDrive)
  5766                           
  5767  0072  30A4               	movlw	low(06A4h)
  5768  0073  00AB               	movwf	0+(?_RobotDrive)+02h
  5769  0074  3006               	movlw	high(06A4h)
  5770  0075  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5771  0076  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  5772                           	line	318
  5773                           ;robot.c: 318: }
  5774  007B  28E4               	goto	l6273
  5775                           	line	319
  5776                           	
  5777  007C                     l6272:	
  5778                           	
  5779  007C                     l12052:	
  5780                           ;robot.c: 319: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - 15))
  5781  007C  1283               	bcf	status, 5	;RP0=0, select bank0
  5782  007D  1303               	bcf	status, 6	;RP1=0, select bank0
  5783  007E  0865               	movf	(robot_turnRight@AdcTarget+1),w
  5784  007F  026F               	subwf	(_adcVal+1),w	;volatile
  5785  0080  1D03               	skipz
  5786  0081  2884               	goto	u5265
  5787  0082  0864               	movf	(robot_turnRight@AdcTarget),w
  5788  0083  026E               	subwf	(_adcVal),w	;volatile
  5789  0084                     u5265:
  5790  0084  1803               	skipnc
  5791  0085  2887               	goto	u5261
  5792  0086  2888               	goto	u5260
  5793  0087                     u5261:
  5794  0087  28AA               	goto	l12058
  5795  0088                     u5260:
  5796                           	
  5797  0088                     l12054:	
  5798  0088  0864               	movf	(robot_turnRight@AdcTarget),w
  5799  0089  3EF1               	addlw	low(0FFF1h)
  5800  008A  00DF               	movwf	(??_robot_turnRight+0)+0
  5801  008B  0865               	movf	(robot_turnRight@AdcTarget+1),w
  5802  008C  1803               	skipnc
  5803  008D  3E01               	addlw	1
  5804  008E  3EFF               	addlw	high(0FFF1h)
  5805  008F  00E0               	movwf	1+(??_robot_turnRight+0)+0
  5806  0090  086F               	movf	(_adcVal+1),w	;volatile
  5807  0091  0260               	subwf	1+(??_robot_turnRight+0)+0,w
  5808  0092  1D03               	skipz
  5809  0093  2896               	goto	u5275
  5810  0094  086E               	movf	(_adcVal),w	;volatile
  5811  0095  025F               	subwf	0+(??_robot_turnRight+0)+0,w
  5812  0096                     u5275:
  5813  0096  1803               	skipnc
  5814  0097  2899               	goto	u5271
  5815  0098  289A               	goto	u5270
  5816  0099                     u5271:
  5817  0099  28AA               	goto	l12058
  5818  009A                     u5270:
  5819                           	line	321
  5820                           	
  5821  009A                     l12056:	
  5822                           ;robot.c: 320: {
  5823                           ;robot.c: 321: RobotDrive(speed, -1700);
  5824  009A  085E               	movf	(robot_turnRight@speed+1),w
  5825  009B  01AA               	clrf	(?_RobotDrive+1)
  5826  009C  07AA               	addwf	(?_RobotDrive+1)
  5827  009D  085D               	movf	(robot_turnRight@speed),w
  5828  009E  01A9               	clrf	(?_RobotDrive)
  5829  009F  07A9               	addwf	(?_RobotDrive)
  5830                           
  5831  00A0  305C               	movlw	low(-1700)
  5832  00A1  00AB               	movwf	0+(?_RobotDrive)+02h
  5833  00A2  30F9               	movlw	high(-1700)
  5834  00A3  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5835  00A4  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  5836                           	line	322
  5837                           ;robot.c: 322: }
  5838  00A9  28E4               	goto	l6273
  5839                           	line	323
  5840                           	
  5841  00AA                     l6274:	
  5842                           	
  5843  00AA                     l12058:	
  5844                           ;robot.c: 323: else if (adcVal <= (AdcTarget - 50) || adcVal >= (AdcTarget + 15))
  5845  00AA  1283               	bcf	status, 5	;RP0=0, select bank0
  5846  00AB  1303               	bcf	status, 6	;RP1=0, select bank0
  5847  00AC  0864               	movf	(robot_turnRight@AdcTarget),w
  5848  00AD  3ECE               	addlw	low(0FFCEh)
  5849  00AE  00DF               	movwf	(??_robot_turnRight+0)+0
  5850  00AF  0865               	movf	(robot_turnRight@AdcTarget+1),w
  5851  00B0  1803               	skipnc
  5852  00B1  3E01               	addlw	1
  5853  00B2  3EFF               	addlw	high(0FFCEh)
  5854  00B3  00E0               	movwf	1+(??_robot_turnRight+0)+0
  5855  00B4  086F               	movf	(_adcVal+1),w	;volatile
  5856  00B5  0260               	subwf	1+(??_robot_turnRight+0)+0,w
  5857  00B6  1D03               	skipz
  5858  00B7  28BA               	goto	u5285
  5859  00B8  086E               	movf	(_adcVal),w	;volatile
  5860  00B9  025F               	subwf	0+(??_robot_turnRight+0)+0,w
  5861  00BA                     u5285:
  5862  00BA  1803               	skipnc
  5863  00BB  28BD               	goto	u5281
  5864  00BC  28BE               	goto	u5280
  5865  00BD                     u5281:
  5866  00BD  29D9               	goto	l12106
  5867  00BE                     u5280:
  5868                           	
  5869  00BE                     l12060:	
  5870  00BE  0864               	movf	(robot_turnRight@AdcTarget),w
  5871  00BF  3E0F               	addlw	low(0Fh)
  5872  00C0  00DF               	movwf	(??_robot_turnRight+0)+0
  5873  00C1  0865               	movf	(robot_turnRight@AdcTarget+1),w
  5874  00C2  1803               	skipnc
  5875  00C3  3E01               	addlw	1
  5876  00C4  3E00               	addlw	high(0Fh)
  5877  00C5  00E0               	movwf	1+(??_robot_turnRight+0)+0
  5878  00C6  0860               	movf	1+(??_robot_turnRight+0)+0,w
  5879  00C7  026F               	subwf	(_adcVal+1),w	;volatile
  5880  00C8  1D03               	skipz
  5881  00C9  28CC               	goto	u5295
  5882  00CA  085F               	movf	0+(??_robot_turnRight+0)+0,w
  5883  00CB  026E               	subwf	(_adcVal),w	;volatile
  5884  00CC                     u5295:
  5885  00CC  1C03               	skipc
  5886  00CD  28CF               	goto	u5291
  5887  00CE  28D0               	goto	u5290
  5888  00CF                     u5291:
  5889  00CF  28D3               	goto	l12064
  5890  00D0                     u5290:
  5891  00D0  29D9               	goto	l12106
  5892                           	
  5893  00D1                     l6278:	
  5894                           	line	325
  5895                           ;robot.c: 324: {
  5896                           ;robot.c: 325: break;
  5897  00D1  29D9               	goto	l12106
  5898                           	line	326
  5899                           	
  5900  00D2                     l12062:	
  5901                           ;robot.c: 326: }
  5902  00D2  28E4               	goto	l6273
  5903                           	line	328
  5904                           	
  5905  00D3                     l6276:	
  5906                           	line	330
  5907                           	
  5908  00D3                     l12064:	
  5909                           ;robot.c: 328: else
  5910                           ;robot.c: 329: {
  5911                           ;robot.c: 330: RobotDrive(speed, 0x7FFF);
  5912  00D3  085E               	movf	(robot_turnRight@speed+1),w
  5913  00D4  01AA               	clrf	(?_RobotDrive+1)
  5914  00D5  07AA               	addwf	(?_RobotDrive+1)
  5915  00D6  085D               	movf	(robot_turnRight@speed),w
  5916  00D7  01A9               	clrf	(?_RobotDrive)
  5917  00D8  07A9               	addwf	(?_RobotDrive)
  5918                           
  5919  00D9  30FF               	movlw	low(07FFFh)
  5920  00DA  00AB               	movwf	0+(?_RobotDrive)+02h
  5921  00DB  307F               	movlw	high(07FFFh)
  5922  00DC  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5923  00DD  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  5924  00E2  28E4               	goto	l6273
  5925                           	line	331
  5926                           	
  5927  00E3                     l6280:	
  5928  00E3  28E4               	goto	l6273
  5929                           	
  5930  00E4                     l6275:	
  5931                           	
  5932  00E4                     l6273:	
  5933                           	line	332
  5934                           ;robot.c: 331: }
  5935                           ;robot.c: 332: robot_read(2);
  5936  00E4  3002               	movlw	(02h)
  5937  00E5  160A  118A  26DB   	fcall	_robot_read
              120A  118A         
  5938                           	line	333
  5939                           	
  5940  00EA                     l12066:	
  5941                           ;robot.c: 333: if (BumpSensors)
  5942  00EA  1683               	bsf	status, 5	;RP0=1, select bank1
  5943  00EB  1303               	bcf	status, 6	;RP1=0, select bank1
  5944  00EC  083E               	movf	(_BumpSensors)^080h,w	;volatile
  5945  00ED  1D03               	skipz
  5946  00EE  28F0               	goto	u5300
  5947  00EF  2905               	goto	l12072
  5948  00F0                     u5300:
  5949                           	line	335
  5950                           	
  5951  00F0                     l12068:	
  5952                           ;robot.c: 334: {
  5953                           ;robot.c: 335: RobotDrive(0, 0x7FFF);
  5954  00F0  3000               	movlw	low(0)
  5955  00F1  1283               	bcf	status, 5	;RP0=0, select bank0
  5956  00F2  1303               	bcf	status, 6	;RP1=0, select bank0
  5957  00F3  00A9               	movwf	(?_RobotDrive)
  5958  00F4  3000               	movlw	high(0)
  5959  00F5  00AA               	movwf	((?_RobotDrive))+1
  5960  00F6  30FF               	movlw	low(07FFFh)
  5961  00F7  00AB               	movwf	0+(?_RobotDrive)+02h
  5962  00F8  307F               	movlw	high(07FFFh)
  5963  00F9  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5964  00FA  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  5965                           	line	336
  5966                           	
  5967  00FF                     l12070:	
  5968                           ;robot.c: 336: ROBOTerror = 1;
  5969  00FF  1683               	bsf	status, 5	;RP0=1, select bank1
  5970  0100  1303               	bcf	status, 6	;RP1=0, select bank1
  5971  0101  01C5               	clrf	(_ROBOTerror)^080h
  5972  0102  1403               	bsf	status,0
  5973  0103  0DC5               	rlf	(_ROBOTerror)^080h,f
  5974                           	line	337
  5975                           ;robot.c: 337: break;
  5976  0104  29D9               	goto	l12106
  5977                           	line	338
  5978                           	
  5979  0105                     l6281:	
  5980                           	line	339
  5981                           	
  5982  0105                     l12072:	
  5983                           ;robot.c: 338: }
  5984                           ;robot.c: 339: if (VwallSensor)
  5985  0105  084A               	movf	(_VwallSensor)^080h,w	;volatile
  5986  0106  1D03               	skipz
  5987  0107  2909               	goto	u5310
  5988  0108  2921               	goto	l12078
  5989  0109                     u5310:
  5990                           	line	341
  5991                           	
  5992  0109                     l12074:	
  5993                           ;robot.c: 340: {
  5994                           ;robot.c: 341: RobotDrive(0, 0x7FFF);
  5995  0109  3000               	movlw	low(0)
  5996  010A  1283               	bcf	status, 5	;RP0=0, select bank0
  5997  010B  1303               	bcf	status, 6	;RP1=0, select bank0
  5998  010C  00A9               	movwf	(?_RobotDrive)
  5999  010D  3000               	movlw	high(0)
  6000  010E  00AA               	movwf	((?_RobotDrive))+1
  6001  010F  30FF               	movlw	low(07FFFh)
  6002  0110  00AB               	movwf	0+(?_RobotDrive)+02h
  6003  0111  307F               	movlw	high(07FFFh)
  6004  0112  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6005  0113  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6006                           	line	342
  6007                           	
  6008  0118                     l12076:	
  6009                           ;robot.c: 342: ROBOTerror = 2;
  6010  0118  3002               	movlw	(02h)
  6011  0119  1283               	bcf	status, 5	;RP0=0, select bank0
  6012  011A  1303               	bcf	status, 6	;RP1=0, select bank0
  6013  011B  00DF               	movwf	(??_robot_turnRight+0)+0
  6014  011C  085F               	movf	(??_robot_turnRight+0)+0,w
  6015  011D  1683               	bsf	status, 5	;RP0=1, select bank1
  6016  011E  1303               	bcf	status, 6	;RP1=0, select bank1
  6017  011F  00C5               	movwf	(_ROBOTerror)^080h
  6018                           	line	343
  6019                           ;robot.c: 343: break;
  6020  0120  29D9               	goto	l12106
  6021                           	line	344
  6022                           	
  6023  0121                     l6282:	
  6024                           	line	345
  6025                           	
  6026  0121                     l12078:	
  6027                           ;robot.c: 344: }
  6028                           ;robot.c: 345: if (CliffSensors)
  6029  0121  0840               	movf	(_CliffSensors)^080h,w	;volatile
  6030  0122  1D03               	skipz
  6031  0123  2925               	goto	u5320
  6032  0124  293D               	goto	l12084
  6033  0125                     u5320:
  6034                           	line	347
  6035                           	
  6036  0125                     l12080:	
  6037                           ;robot.c: 346: {
  6038                           ;robot.c: 347: RobotDrive(-200, 0x7FFF);
  6039  0125  3038               	movlw	low(-200)
  6040  0126  1283               	bcf	status, 5	;RP0=0, select bank0
  6041  0127  1303               	bcf	status, 6	;RP1=0, select bank0
  6042  0128  00A9               	movwf	(?_RobotDrive)
  6043  0129  30FF               	movlw	high(-200)
  6044  012A  00AA               	movwf	((?_RobotDrive))+1
  6045  012B  30FF               	movlw	low(07FFFh)
  6046  012C  00AB               	movwf	0+(?_RobotDrive)+02h
  6047  012D  307F               	movlw	high(07FFFh)
  6048  012E  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6049  012F  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6050                           	line	348
  6051                           	
  6052  0134                     l12082:	
  6053                           ;robot.c: 348: ROBOTerror = 3;
  6054  0134  3003               	movlw	(03h)
  6055  0135  1283               	bcf	status, 5	;RP0=0, select bank0
  6056  0136  1303               	bcf	status, 6	;RP1=0, select bank0
  6057  0137  00DF               	movwf	(??_robot_turnRight+0)+0
  6058  0138  085F               	movf	(??_robot_turnRight+0)+0,w
  6059  0139  1683               	bsf	status, 5	;RP0=1, select bank1
  6060  013A  1303               	bcf	status, 6	;RP1=0, select bank1
  6061  013B  00C5               	movwf	(_ROBOTerror)^080h
  6062                           	line	349
  6063                           ;robot.c: 349: break;
  6064  013C  29D9               	goto	l12106
  6065                           	line	350
  6066                           	
  6067  013D                     l6283:	
  6068                           	line	351
  6069                           	
  6070  013D                     l12084:	
  6071                           ;robot.c: 350: }
  6072                           ;robot.c: 351: if (VictimSensor != 255)
  6073  013D  0849               	movf	(_VictimSensor)^080h,w	;volatile
  6074  013E  3AFF               	xorlw	0FFh
  6075  013F  1903               	skipnz
  6076  0140  2942               	goto	u5331
  6077  0141  2943               	goto	u5330
  6078  0142                     u5331:
  6079  0142  295B               	goto	l12090
  6080  0143                     u5330:
  6081                           	line	353
  6082                           	
  6083  0143                     l12086:	
  6084                           ;robot.c: 352: {
  6085                           ;robot.c: 353: RobotDrive(0, 0x7FFF);
  6086  0143  3000               	movlw	low(0)
  6087  0144  1283               	bcf	status, 5	;RP0=0, select bank0
  6088  0145  1303               	bcf	status, 6	;RP1=0, select bank0
  6089  0146  00A9               	movwf	(?_RobotDrive)
  6090  0147  3000               	movlw	high(0)
  6091  0148  00AA               	movwf	((?_RobotDrive))+1
  6092  0149  30FF               	movlw	low(07FFFh)
  6093  014A  00AB               	movwf	0+(?_RobotDrive)+02h
  6094  014B  307F               	movlw	high(07FFFh)
  6095  014C  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6096  014D  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6097                           	line	354
  6098                           	
  6099  0152                     l12088:	
  6100                           ;robot.c: 354: ROBOTerror = 4;
  6101  0152  3004               	movlw	(04h)
  6102  0153  1283               	bcf	status, 5	;RP0=0, select bank0
  6103  0154  1303               	bcf	status, 6	;RP1=0, select bank0
  6104  0155  00DF               	movwf	(??_robot_turnRight+0)+0
  6105  0156  085F               	movf	(??_robot_turnRight+0)+0,w
  6106  0157  1683               	bsf	status, 5	;RP0=1, select bank1
  6107  0158  1303               	bcf	status, 6	;RP1=0, select bank1
  6108  0159  00C5               	movwf	(_ROBOTerror)^080h
  6109                           	line	355
  6110                           ;robot.c: 355: break;
  6111  015A  29D9               	goto	l12106
  6112                           	line	356
  6113                           	
  6114  015B                     l6284:	
  6115                           	line	357
  6116                           	
  6117  015B                     l12090:	
  6118                           ;robot.c: 356: }
  6119                           ;robot.c: 357: temp1 = DistHighByte;
  6120  015B  087D               	movf	(_DistHighByte),w	;volatile
  6121  015C  1283               	bcf	status, 5	;RP0=0, select bank0
  6122  015D  1303               	bcf	status, 6	;RP1=0, select bank0
  6123  015E  00DF               	movwf	(??_robot_turnRight+0)+0
  6124  015F  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6125  0160  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6126  0161  00E6               	movwf	(robot_turnRight@temp1)
  6127  0162  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6128  0163  00E7               	movwf	(robot_turnRight@temp1+1)
  6129                           	line	358
  6130                           	
  6131  0164                     l12092:	
  6132                           ;robot.c: 358: temp1 = temp1 << 8;
  6133  0164  0867               	movf	(robot_turnRight@temp1+1),w
  6134  0165  00E0               	movwf	(??_robot_turnRight+0)+0+1
  6135  0166  0866               	movf	(robot_turnRight@temp1),w
  6136  0167  00DF               	movwf	(??_robot_turnRight+0)+0
  6137  0168  085F               	movf	(??_robot_turnRight+0)+0,w
  6138  0169  00E0               	movwf	(??_robot_turnRight+0)+1
  6139  016A  01DF               	clrf	(??_robot_turnRight+0)+0
  6140  016B  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6141  016C  00E6               	movwf	(robot_turnRight@temp1)
  6142  016D  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6143  016E  00E7               	movwf	(robot_turnRight@temp1+1)
  6144                           	line	359
  6145                           	
  6146  016F                     l12094:	
  6147                           ;robot.c: 359: temp1 += DistLowByte;
  6148  016F  1683               	bsf	status, 5	;RP0=1, select bank1
  6149  0170  1303               	bcf	status, 6	;RP1=0, select bank1
  6150  0171  0841               	movf	(_DistLowByte)^080h,w	;volatile
  6151  0172  1283               	bcf	status, 5	;RP0=0, select bank0
  6152  0173  1303               	bcf	status, 6	;RP1=0, select bank0
  6153  0174  00DF               	movwf	(??_robot_turnRight+0)+0
  6154  0175  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6155  0176  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6156  0177  07E6               	addwf	(robot_turnRight@temp1),f
  6157  0178  1803               	skipnc
  6158  0179  0AE7               	incf	(robot_turnRight@temp1+1),f
  6159  017A  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6160  017B  07E7               	addwf	(robot_turnRight@temp1+1),f
  6161                           	line	360
  6162                           	
  6163  017C                     l12096:	
  6164                           ;robot.c: 360: distTravelled += temp1;
  6165  017C  0866               	movf	(robot_turnRight@temp1),w
  6166  017D  1683               	bsf	status, 5	;RP0=1, select bank1
  6167  017E  1303               	bcf	status, 6	;RP1=0, select bank1
  6168  017F  07B0               	addwf	(_distTravelled)^080h,f
  6169  0180  1803               	skipnc
  6170  0181  0AB1               	incf	(_distTravelled+1)^080h,f
  6171  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  6172  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  6173  0184  0867               	movf	(robot_turnRight@temp1+1),w
  6174  0185  1683               	bsf	status, 5	;RP0=1, select bank1
  6175  0186  1303               	bcf	status, 6	;RP1=0, select bank1
  6176  0187  07B1               	addwf	(_distTravelled+1)^080h,f
  6177                           	line	361
  6178                           	
  6179  0188                     l12098:	
  6180                           ;robot.c: 361: TotalDistTravelled += temp1;
  6181  0188  1283               	bcf	status, 5	;RP0=0, select bank0
  6182  0189  1303               	bcf	status, 6	;RP1=0, select bank0
  6183  018A  0866               	movf	(robot_turnRight@temp1),w
  6184  018B  1683               	bsf	status, 5	;RP0=1, select bank1
  6185  018C  1303               	bcf	status, 6	;RP1=0, select bank1
  6186  018D  07AC               	addwf	(_TotalDistTravelled)^080h,f
  6187  018E  1803               	skipnc
  6188  018F  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  6189  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  6190  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  6191  0192  0867               	movf	(robot_turnRight@temp1+1),w
  6192  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  6193  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  6194  0195  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  6195                           	line	362
  6196                           	
  6197  0196                     l12100:	
  6198                           ;robot.c: 362: temp1 = AngleHighByte;
  6199  0196  083C               	movf	(_AngleHighByte)^080h,w	;volatile
  6200  0197  1283               	bcf	status, 5	;RP0=0, select bank0
  6201  0198  1303               	bcf	status, 6	;RP1=0, select bank0
  6202  0199  00DF               	movwf	(??_robot_turnRight+0)+0
  6203  019A  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6204  019B  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6205  019C  00E6               	movwf	(robot_turnRight@temp1)
  6206  019D  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6207  019E  00E7               	movwf	(robot_turnRight@temp1+1)
  6208                           	line	363
  6209                           	
  6210  019F                     l12102:	
  6211                           ;robot.c: 363: temp1 = temp1 << 8;
  6212  019F  0867               	movf	(robot_turnRight@temp1+1),w
  6213  01A0  00E0               	movwf	(??_robot_turnRight+0)+0+1
  6214  01A1  0866               	movf	(robot_turnRight@temp1),w
  6215  01A2  00DF               	movwf	(??_robot_turnRight+0)+0
  6216  01A3  085F               	movf	(??_robot_turnRight+0)+0,w
  6217  01A4  00E0               	movwf	(??_robot_turnRight+0)+1
  6218  01A5  01DF               	clrf	(??_robot_turnRight+0)+0
  6219  01A6  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6220  01A7  00E6               	movwf	(robot_turnRight@temp1)
  6221  01A8  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6222  01A9  00E7               	movwf	(robot_turnRight@temp1+1)
  6223                           	line	364
  6224                           ;robot.c: 364: temp1 += AngleLowByte;
  6225  01AA  1683               	bsf	status, 5	;RP0=1, select bank1
  6226  01AB  1303               	bcf	status, 6	;RP1=0, select bank1
  6227  01AC  083D               	movf	(_AngleLowByte)^080h,w	;volatile
  6228  01AD  1283               	bcf	status, 5	;RP0=0, select bank0
  6229  01AE  1303               	bcf	status, 6	;RP1=0, select bank0
  6230  01AF  00DF               	movwf	(??_robot_turnRight+0)+0
  6231  01B0  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6232  01B1  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6233  01B2  07E6               	addwf	(robot_turnRight@temp1),f
  6234  01B3  1803               	skipnc
  6235  01B4  0AE7               	incf	(robot_turnRight@temp1+1),f
  6236  01B5  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6237  01B6  07E7               	addwf	(robot_turnRight@temp1+1),f
  6238                           	line	365
  6239                           ;robot.c: 365: angleTurned += temp1;
  6240  01B7  0866               	movf	(robot_turnRight@temp1),w
  6241  01B8  1683               	bsf	status, 5	;RP0=1, select bank1
  6242  01B9  1303               	bcf	status, 6	;RP1=0, select bank1
  6243  01BA  07AE               	addwf	(_angleTurned)^080h,f
  6244  01BB  1803               	skipnc
  6245  01BC  0AAF               	incf	(_angleTurned+1)^080h,f
  6246  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  6247  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  6248  01BF  0867               	movf	(robot_turnRight@temp1+1),w
  6249  01C0  1683               	bsf	status, 5	;RP0=1, select bank1
  6250  01C1  1303               	bcf	status, 6	;RP1=0, select bank1
  6251  01C2  07AF               	addwf	(_angleTurned+1)^080h,f
  6252                           	line	366
  6253                           ;robot.c: 366: Disp2 = RobotPos;
  6254  01C3  0847               	movf	(_RobotPos)^080h,w
  6255  01C4  1283               	bcf	status, 5	;RP0=0, select bank0
  6256  01C5  1303               	bcf	status, 6	;RP1=0, select bank0
  6257  01C6  00DF               	movwf	(??_robot_turnRight+0)+0
  6258  01C7  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6259  01C8  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6260  01C9  1683               	bsf	status, 5	;RP0=1, select bank1
  6261  01CA  1303               	bcf	status, 6	;RP1=0, select bank1
  6262  01CB  00A6               	movwf	(_Disp2)^080h
  6263  01CC  1283               	bcf	status, 5	;RP0=0, select bank0
  6264  01CD  1303               	bcf	status, 6	;RP1=0, select bank0
  6265  01CE  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6266  01CF  1683               	bsf	status, 5	;RP0=1, select bank1
  6267  01D0  1303               	bcf	status, 6	;RP1=0, select bank1
  6268  01D1  00A7               	movwf	(_Disp2+1)^080h
  6269                           	line	367
  6270                           	
  6271  01D2                     l12104:	
  6272                           ;robot.c: 367: UpdateDisplay();
  6273  01D2  120A  118A  2401   	fcall	_UpdateDisplay
              120A  118A         
  6274  01D7  2849               	goto	l12044
  6275                           	line	368
  6276                           	
  6277  01D8                     l6285:	
  6278                           	line	312
  6279  01D8  2849               	goto	l12044
  6280                           	
  6281  01D9                     l6279:	
  6282                           	line	370
  6283                           	
  6284  01D9                     l12106:	
  6285                           ;robot.c: 368: }
  6286                           ;robot.c: 370: angleTurned = 0;
  6287  01D9  1683               	bsf	status, 5	;RP0=1, select bank1
  6288  01DA  1303               	bcf	status, 6	;RP1=0, select bank1
  6289  01DB  01AE               	clrf	(_angleTurned)^080h
  6290  01DC  01AF               	clrf	(_angleTurned+1)^080h
  6291                           	line	371
  6292                           ;robot.c: 371: switch (RobotPos)
  6293  01DD  2AA9               	goto	l12142
  6294                           	line	373
  6295                           ;robot.c: 372: {
  6296                           ;robot.c: 373: case 3:
  6297                           	
  6298  01DE                     l6287:	
  6299                           	line	374
  6300                           	
  6301  01DE                     l12108:	
  6302                           ;robot.c: 374: RobotDrive((speed /2), -400);
  6303  01DE  3002               	movlw	low(02h)
  6304  01DF  1283               	bcf	status, 5	;RP0=0, select bank0
  6305  01E0  1303               	bcf	status, 6	;RP1=0, select bank0
  6306  01E1  00A0               	movwf	(?___awdiv)
  6307  01E2  3000               	movlw	high(02h)
  6308  01E3  00A1               	movwf	((?___awdiv))+1
  6309  01E4  085E               	movf	(robot_turnRight@speed+1),w
  6310  01E5  01A3               	clrf	1+(?___awdiv)+02h
  6311  01E6  07A3               	addwf	1+(?___awdiv)+02h
  6312  01E7  085D               	movf	(robot_turnRight@speed),w
  6313  01E8  01A2               	clrf	0+(?___awdiv)+02h
  6314  01E9  07A2               	addwf	0+(?___awdiv)+02h
  6315                           
  6316  01EA  160A  118A  21A1   	fcall	___awdiv
              120A  118A         
  6317  01EF  1283               	bcf	status, 5	;RP0=0, select bank0
  6318  01F0  1303               	bcf	status, 6	;RP1=0, select bank0
  6319  01F1  0821               	movf	(1+(?___awdiv)),w
  6320  01F2  01AA               	clrf	(?_RobotDrive+1)
  6321  01F3  07AA               	addwf	(?_RobotDrive+1)
  6322  01F4  0820               	movf	(0+(?___awdiv)),w
  6323  01F5  01A9               	clrf	(?_RobotDrive)
  6324  01F6  07A9               	addwf	(?_RobotDrive)
  6325                           
  6326  01F7  3070               	movlw	low(-400)
  6327  01F8  00AB               	movwf	0+(?_RobotDrive)+02h
  6328  01F9  30FE               	movlw	high(-400)
  6329  01FA  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6330  01FB  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6331                           	line	375
  6332                           	
  6333  0200                     l12110:	
  6334                           ;robot.c: 375: turnTarget = -90;
  6335  0200  30A6               	movlw	low(-90)
  6336  0201  1283               	bcf	status, 5	;RP0=0, select bank0
  6337  0202  1303               	bcf	status, 6	;RP1=0, select bank0
  6338  0203  00E2               	movwf	(robot_turnRight@turnTarget)
  6339  0204  30FF               	movlw	high(-90)
  6340  0205  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6341                           	line	376
  6342                           ;robot.c: 376: break;
  6343  0206  2AC2               	goto	l12144
  6344                           	line	378
  6345                           ;robot.c: 378: case 7:
  6346                           	
  6347  0207                     l6289:	
  6348                           	line	379
  6349                           	
  6350  0207                     l12112:	
  6351                           ;robot.c: 379: RobotDrive((speed), -400-100);
  6352  0207  1283               	bcf	status, 5	;RP0=0, select bank0
  6353  0208  085E               	movf	(robot_turnRight@speed+1),w
  6354  0209  01AA               	clrf	(?_RobotDrive+1)
  6355  020A  07AA               	addwf	(?_RobotDrive+1)
  6356  020B  085D               	movf	(robot_turnRight@speed),w
  6357  020C  01A9               	clrf	(?_RobotDrive)
  6358  020D  07A9               	addwf	(?_RobotDrive)
  6359                           
  6360  020E  300C               	movlw	low(-500)
  6361  020F  00AB               	movwf	0+(?_RobotDrive)+02h
  6362  0210  30FE               	movlw	high(-500)
  6363  0211  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6364  0212  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6365                           	line	380
  6366                           	
  6367  0217                     l12114:	
  6368                           ;robot.c: 380: turnTarget = -185;
  6369  0217  3047               	movlw	low(-185)
  6370  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  6371  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  6372  021A  00E2               	movwf	(robot_turnRight@turnTarget)
  6373  021B  30FF               	movlw	high(-185)
  6374  021C  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6375                           	line	381
  6376                           ;robot.c: 381: break;
  6377  021D  2AC2               	goto	l12144
  6378                           	line	382
  6379                           ;robot.c: 382: case 10:
  6380                           	
  6381  021E                     l6290:	
  6382                           	line	383
  6383                           	
  6384  021E                     l12116:	
  6385                           ;robot.c: 383: RobotDrive((speed), -400 );
  6386  021E  1283               	bcf	status, 5	;RP0=0, select bank0
  6387  021F  085E               	movf	(robot_turnRight@speed+1),w
  6388  0220  01AA               	clrf	(?_RobotDrive+1)
  6389  0221  07AA               	addwf	(?_RobotDrive+1)
  6390  0222  085D               	movf	(robot_turnRight@speed),w
  6391  0223  01A9               	clrf	(?_RobotDrive)
  6392  0224  07A9               	addwf	(?_RobotDrive)
  6393                           
  6394  0225  3070               	movlw	low(-400)
  6395  0226  00AB               	movwf	0+(?_RobotDrive)+02h
  6396  0227  30FE               	movlw	high(-400)
  6397  0228  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6398  0229  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6399                           	line	384
  6400                           	
  6401  022E                     l12118:	
  6402                           ;robot.c: 384: turnTarget = -90;
  6403  022E  30A6               	movlw	low(-90)
  6404  022F  1283               	bcf	status, 5	;RP0=0, select bank0
  6405  0230  1303               	bcf	status, 6	;RP1=0, select bank0
  6406  0231  00E2               	movwf	(robot_turnRight@turnTarget)
  6407  0232  30FF               	movlw	high(-90)
  6408  0233  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6409                           	line	385
  6410                           ;robot.c: 385: break;
  6411  0234  2AC2               	goto	l12144
  6412                           	line	386
  6413                           ;robot.c: 386: case 11:
  6414                           	
  6415  0235                     l6291:	
  6416                           	line	387
  6417                           	
  6418  0235                     l12120:	
  6419                           ;robot.c: 387: RobotDrive((speed), -400 - 100);
  6420  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  6421  0236  085E               	movf	(robot_turnRight@speed+1),w
  6422  0237  01AA               	clrf	(?_RobotDrive+1)
  6423  0238  07AA               	addwf	(?_RobotDrive+1)
  6424  0239  085D               	movf	(robot_turnRight@speed),w
  6425  023A  01A9               	clrf	(?_RobotDrive)
  6426  023B  07A9               	addwf	(?_RobotDrive)
  6427                           
  6428  023C  300C               	movlw	low(-500)
  6429  023D  00AB               	movwf	0+(?_RobotDrive)+02h
  6430  023E  30FE               	movlw	high(-500)
  6431  023F  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6432  0240  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6433                           	line	388
  6434                           	
  6435  0245                     l12122:	
  6436                           ;robot.c: 388: turnTarget = -190;
  6437  0245  3042               	movlw	low(-190)
  6438  0246  1283               	bcf	status, 5	;RP0=0, select bank0
  6439  0247  1303               	bcf	status, 6	;RP1=0, select bank0
  6440  0248  00E2               	movwf	(robot_turnRight@turnTarget)
  6441  0249  30FF               	movlw	high(-190)
  6442  024A  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6443                           	line	389
  6444                           ;robot.c: 389: break;
  6445  024B  2AC2               	goto	l12144
  6446                           	line	390
  6447                           ;robot.c: 390: case 12:
  6448                           	
  6449  024C                     l6292:	
  6450                           	line	391
  6451                           	
  6452  024C                     l12124:	
  6453                           ;robot.c: 391: RobotDrive((speed), -400 - 50);
  6454  024C  1283               	bcf	status, 5	;RP0=0, select bank0
  6455  024D  085E               	movf	(robot_turnRight@speed+1),w
  6456  024E  01AA               	clrf	(?_RobotDrive+1)
  6457  024F  07AA               	addwf	(?_RobotDrive+1)
  6458  0250  085D               	movf	(robot_turnRight@speed),w
  6459  0251  01A9               	clrf	(?_RobotDrive)
  6460  0252  07A9               	addwf	(?_RobotDrive)
  6461                           
  6462  0253  303E               	movlw	low(-450)
  6463  0254  00AB               	movwf	0+(?_RobotDrive)+02h
  6464  0255  30FE               	movlw	high(-450)
  6465  0256  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6466  0257  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6467                           	line	392
  6468                           	
  6469  025C                     l12126:	
  6470                           ;robot.c: 392: turnTarget = -190;
  6471  025C  3042               	movlw	low(-190)
  6472  025D  1283               	bcf	status, 5	;RP0=0, select bank0
  6473  025E  1303               	bcf	status, 6	;RP1=0, select bank0
  6474  025F  00E2               	movwf	(robot_turnRight@turnTarget)
  6475  0260  30FF               	movlw	high(-190)
  6476  0261  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6477                           	line	393
  6478                           ;robot.c: 393: break;
  6479  0262  2AC2               	goto	l12144
  6480                           	line	394
  6481                           ;robot.c: 394: case 15:
  6482                           	
  6483  0263                     l6293:	
  6484                           	line	395
  6485                           	
  6486  0263                     l12128:	
  6487                           ;robot.c: 395: RobotDrive((speed), -400 - 100);
  6488  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  6489  0264  085E               	movf	(robot_turnRight@speed+1),w
  6490  0265  01AA               	clrf	(?_RobotDrive+1)
  6491  0266  07AA               	addwf	(?_RobotDrive+1)
  6492  0267  085D               	movf	(robot_turnRight@speed),w
  6493  0268  01A9               	clrf	(?_RobotDrive)
  6494  0269  07A9               	addwf	(?_RobotDrive)
  6495                           
  6496  026A  300C               	movlw	low(-500)
  6497  026B  00AB               	movwf	0+(?_RobotDrive)+02h
  6498  026C  30FE               	movlw	high(-500)
  6499  026D  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6500  026E  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6501                           	line	396
  6502                           	
  6503  0273                     l12130:	
  6504                           ;robot.c: 396: turnTarget = -190;
  6505  0273  3042               	movlw	low(-190)
  6506  0274  1283               	bcf	status, 5	;RP0=0, select bank0
  6507  0275  1303               	bcf	status, 6	;RP1=0, select bank0
  6508  0276  00E2               	movwf	(robot_turnRight@turnTarget)
  6509  0277  30FF               	movlw	high(-190)
  6510  0278  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6511                           	line	397
  6512                           ;robot.c: 397: break;
  6513  0279  2AC2               	goto	l12144
  6514                           	line	398
  6515                           ;robot.c: 398: case 17:
  6516                           	
  6517  027A                     l6294:	
  6518                           	line	399
  6519                           	
  6520  027A                     l12132:	
  6521                           ;robot.c: 399: RobotDrive((speed), -400 - 100);
  6522  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  6523  027B  085E               	movf	(robot_turnRight@speed+1),w
  6524  027C  01AA               	clrf	(?_RobotDrive+1)
  6525  027D  07AA               	addwf	(?_RobotDrive+1)
  6526  027E  085D               	movf	(robot_turnRight@speed),w
  6527  027F  01A9               	clrf	(?_RobotDrive)
  6528  0280  07A9               	addwf	(?_RobotDrive)
  6529                           
  6530  0281  300C               	movlw	low(-500)
  6531  0282  00AB               	movwf	0+(?_RobotDrive)+02h
  6532  0283  30FE               	movlw	high(-500)
  6533  0284  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6534  0285  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6535                           	line	400
  6536                           	
  6537  028A                     l12134:	
  6538                           ;robot.c: 400: turnTarget = -190;
  6539  028A  3042               	movlw	low(-190)
  6540  028B  1283               	bcf	status, 5	;RP0=0, select bank0
  6541  028C  1303               	bcf	status, 6	;RP1=0, select bank0
  6542  028D  00E2               	movwf	(robot_turnRight@turnTarget)
  6543  028E  30FF               	movlw	high(-190)
  6544  028F  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6545                           	line	401
  6546                           ;robot.c: 401: break;
  6547  0290  2AC2               	goto	l12144
  6548                           	line	402
  6549                           ;robot.c: 402: default:
  6550                           	
  6551  0291                     l6295:	
  6552                           	line	403
  6553                           	
  6554  0291                     l12136:	
  6555                           ;robot.c: 403: RobotDrive((speed), -400);
  6556  0291  1283               	bcf	status, 5	;RP0=0, select bank0
  6557  0292  085E               	movf	(robot_turnRight@speed+1),w
  6558  0293  01AA               	clrf	(?_RobotDrive+1)
  6559  0294  07AA               	addwf	(?_RobotDrive+1)
  6560  0295  085D               	movf	(robot_turnRight@speed),w
  6561  0296  01A9               	clrf	(?_RobotDrive)
  6562  0297  07A9               	addwf	(?_RobotDrive)
  6563                           
  6564  0298  3070               	movlw	low(-400)
  6565  0299  00AB               	movwf	0+(?_RobotDrive)+02h
  6566  029A  30FE               	movlw	high(-400)
  6567  029B  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6568  029C  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6569                           	line	404
  6570                           	
  6571  02A1                     l12138:	
  6572                           ;robot.c: 404: turnTarget = -75;
  6573  02A1  30B5               	movlw	low(-75)
  6574  02A2  1283               	bcf	status, 5	;RP0=0, select bank0
  6575  02A3  1303               	bcf	status, 6	;RP1=0, select bank0
  6576  02A4  00E2               	movwf	(robot_turnRight@turnTarget)
  6577  02A5  30FF               	movlw	high(-75)
  6578  02A6  00E3               	movwf	((robot_turnRight@turnTarget))+1
  6579                           	line	405
  6580                           ;robot.c: 405: break;
  6581  02A7  2AC2               	goto	l12144
  6582                           	line	406
  6583                           	
  6584  02A8                     l12140:	
  6585                           ;robot.c: 406: }
  6586  02A8  2AC2               	goto	l12144
  6587                           	line	371
  6588                           	
  6589  02A9                     l6286:	
  6590                           	
  6591  02A9                     l12142:	
  6592  02A9  1683               	bsf	status, 5	;RP0=1, select bank1
  6593  02AA  1303               	bcf	status, 6	;RP1=0, select bank1
  6594  02AB  0847               	movf	(_RobotPos)^080h,w
  6595                           	; Switch size 1, requested type "space"
  6596                           ; Number of cases is 7, Range of values is 3 to 17
  6597                           ; switch strategies available:
  6598                           ; Name         Instructions Cycles
  6599                           ; simple_byte           22    12 (average)
  6600                           ; direct_byte           56    11 (fixed)
  6601                           ; jumptable            263     9 (fixed)
  6602                           ;	Chosen strategy is simple_byte
  6603                           
  6604                           	opt asmopt_off
  6605  02AC  3A03               	xorlw	3^0	; case 3
  6606  02AD  1903               	skipnz
  6607  02AE  29DE               	goto	l12108
  6608  02AF  3A04               	xorlw	7^3	; case 7
  6609  02B0  1903               	skipnz
  6610  02B1  2A07               	goto	l12112
  6611  02B2  3A0D               	xorlw	10^7	; case 10
  6612  02B3  1903               	skipnz
  6613  02B4  2A1E               	goto	l12116
  6614  02B5  3A01               	xorlw	11^10	; case 11
  6615  02B6  1903               	skipnz
  6616  02B7  2A35               	goto	l12120
  6617  02B8  3A07               	xorlw	12^11	; case 12
  6618  02B9  1903               	skipnz
  6619  02BA  2A4C               	goto	l12124
  6620  02BB  3A03               	xorlw	15^12	; case 15
  6621  02BC  1903               	skipnz
  6622  02BD  2A63               	goto	l12128
  6623  02BE  3A1E               	xorlw	17^15	; case 17
  6624  02BF  1903               	skipnz
  6625  02C0  2A7A               	goto	l12132
  6626  02C1  2A91               	goto	l12136
  6627                           	opt asmopt_on
  6628                           
  6629                           	line	406
  6630                           	
  6631  02C2                     l6288:	
  6632                           	line	407
  6633                           	
  6634  02C2                     l12144:	
  6635                           ;robot.c: 407: rotate(25, 1);
  6636  02C2  3019               	movlw	low(019h)
  6637  02C3  1283               	bcf	status, 5	;RP0=0, select bank0
  6638  02C4  00A3               	movwf	(?_rotate)
  6639  02C5  3000               	movlw	high(019h)
  6640  02C6  00A4               	movwf	((?_rotate))+1
  6641  02C7  01A5               	clrf	0+(?_rotate)+02h
  6642  02C8  1403               	bsf	status,0
  6643  02C9  0DA5               	rlf	0+(?_rotate)+02h,f
  6644  02CA  160A  158A  26C1   	fcall	_rotate
              120A  118A         
  6645                           	line	408
  6646                           ;robot.c: 408: while (abs(angleTurned) < abs(turnTarget))
  6647  02CF  2BB5               	goto	l12190
  6648                           	
  6649  02D0                     l6297:	
  6650                           	line	410
  6651                           	
  6652  02D0                     l12146:	
  6653                           ;robot.c: 409: {
  6654                           ;robot.c: 410: robot_read(2);
  6655  02D0  3002               	movlw	(02h)
  6656  02D1  160A  118A  26DB   	fcall	_robot_read
              120A  118A         
  6657                           	line	411
  6658                           	
  6659  02D6                     l12148:	
  6660                           ;robot.c: 411: if (BumpSensors)
  6661  02D6  1683               	bsf	status, 5	;RP0=1, select bank1
  6662  02D7  1303               	bcf	status, 6	;RP1=0, select bank1
  6663  02D8  083E               	movf	(_BumpSensors)^080h,w	;volatile
  6664  02D9  1D03               	skipz
  6665  02DA  2ADC               	goto	u5340
  6666  02DB  2AF1               	goto	l12154
  6667  02DC                     u5340:
  6668                           	line	413
  6669                           	
  6670  02DC                     l12150:	
  6671                           ;robot.c: 412: {
  6672                           ;robot.c: 413: RobotDrive(0, 0x7FFF);
  6673  02DC  3000               	movlw	low(0)
  6674  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
  6675  02DE  1303               	bcf	status, 6	;RP1=0, select bank0
  6676  02DF  00A9               	movwf	(?_RobotDrive)
  6677  02E0  3000               	movlw	high(0)
  6678  02E1  00AA               	movwf	((?_RobotDrive))+1
  6679  02E2  30FF               	movlw	low(07FFFh)
  6680  02E3  00AB               	movwf	0+(?_RobotDrive)+02h
  6681  02E4  307F               	movlw	high(07FFFh)
  6682  02E5  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6683  02E6  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6684                           	line	414
  6685                           	
  6686  02EB                     l12152:	
  6687                           ;robot.c: 414: ROBOTerror = 1;
  6688  02EB  1683               	bsf	status, 5	;RP0=1, select bank1
  6689  02EC  1303               	bcf	status, 6	;RP1=0, select bank1
  6690  02ED  01C5               	clrf	(_ROBOTerror)^080h
  6691  02EE  1403               	bsf	status,0
  6692  02EF  0DC5               	rlf	(_ROBOTerror)^080h,f
  6693                           	line	415
  6694                           ;robot.c: 415: break;
  6695  02F0  2BEA               	goto	l12192
  6696                           	line	416
  6697                           	
  6698  02F1                     l6298:	
  6699                           	line	417
  6700                           	
  6701  02F1                     l12154:	
  6702                           ;robot.c: 416: }
  6703                           ;robot.c: 417: if (VwallSensor)
  6704  02F1  084A               	movf	(_VwallSensor)^080h,w	;volatile
  6705  02F2  1D03               	skipz
  6706  02F3  2AF5               	goto	u5350
  6707  02F4  2B0D               	goto	l12160
  6708  02F5                     u5350:
  6709                           	line	419
  6710                           	
  6711  02F5                     l12156:	
  6712                           ;robot.c: 418: {
  6713                           ;robot.c: 419: RobotDrive(0, 0x7FFF);
  6714  02F5  3000               	movlw	low(0)
  6715  02F6  1283               	bcf	status, 5	;RP0=0, select bank0
  6716  02F7  1303               	bcf	status, 6	;RP1=0, select bank0
  6717  02F8  00A9               	movwf	(?_RobotDrive)
  6718  02F9  3000               	movlw	high(0)
  6719  02FA  00AA               	movwf	((?_RobotDrive))+1
  6720  02FB  30FF               	movlw	low(07FFFh)
  6721  02FC  00AB               	movwf	0+(?_RobotDrive)+02h
  6722  02FD  307F               	movlw	high(07FFFh)
  6723  02FE  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6724  02FF  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6725                           	line	420
  6726                           	
  6727  0304                     l12158:	
  6728                           ;robot.c: 420: ROBOTerror = 2;
  6729  0304  3002               	movlw	(02h)
  6730  0305  1283               	bcf	status, 5	;RP0=0, select bank0
  6731  0306  1303               	bcf	status, 6	;RP1=0, select bank0
  6732  0307  00DF               	movwf	(??_robot_turnRight+0)+0
  6733  0308  085F               	movf	(??_robot_turnRight+0)+0,w
  6734  0309  1683               	bsf	status, 5	;RP0=1, select bank1
  6735  030A  1303               	bcf	status, 6	;RP1=0, select bank1
  6736  030B  00C5               	movwf	(_ROBOTerror)^080h
  6737                           	line	421
  6738                           ;robot.c: 421: break;
  6739  030C  2BEA               	goto	l12192
  6740                           	line	422
  6741                           	
  6742  030D                     l6300:	
  6743                           	line	423
  6744                           	
  6745  030D                     l12160:	
  6746                           ;robot.c: 422: }
  6747                           ;robot.c: 423: if (CliffSensors)
  6748  030D  0840               	movf	(_CliffSensors)^080h,w	;volatile
  6749  030E  1D03               	skipz
  6750  030F  2B11               	goto	u5360
  6751  0310  2B29               	goto	l12166
  6752  0311                     u5360:
  6753                           	line	425
  6754                           	
  6755  0311                     l12162:	
  6756                           ;robot.c: 424: {
  6757                           ;robot.c: 425: RobotDrive(-200, 0x7FFF);
  6758  0311  3038               	movlw	low(-200)
  6759  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  6760  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  6761  0314  00A9               	movwf	(?_RobotDrive)
  6762  0315  30FF               	movlw	high(-200)
  6763  0316  00AA               	movwf	((?_RobotDrive))+1
  6764  0317  30FF               	movlw	low(07FFFh)
  6765  0318  00AB               	movwf	0+(?_RobotDrive)+02h
  6766  0319  307F               	movlw	high(07FFFh)
  6767  031A  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6768  031B  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6769                           	line	426
  6770                           	
  6771  0320                     l12164:	
  6772                           ;robot.c: 426: ROBOTerror = 3;
  6773  0320  3003               	movlw	(03h)
  6774  0321  1283               	bcf	status, 5	;RP0=0, select bank0
  6775  0322  1303               	bcf	status, 6	;RP1=0, select bank0
  6776  0323  00DF               	movwf	(??_robot_turnRight+0)+0
  6777  0324  085F               	movf	(??_robot_turnRight+0)+0,w
  6778  0325  1683               	bsf	status, 5	;RP0=1, select bank1
  6779  0326  1303               	bcf	status, 6	;RP1=0, select bank1
  6780  0327  00C5               	movwf	(_ROBOTerror)^080h
  6781                           	line	427
  6782                           ;robot.c: 427: break;
  6783  0328  2BEA               	goto	l12192
  6784                           	line	428
  6785                           	
  6786  0329                     l6301:	
  6787                           	line	429
  6788                           	
  6789  0329                     l12166:	
  6790                           ;robot.c: 428: }
  6791                           ;robot.c: 429: if (VictimSensor != 255)
  6792  0329  0849               	movf	(_VictimSensor)^080h,w	;volatile
  6793  032A  3AFF               	xorlw	0FFh
  6794  032B  1903               	skipnz
  6795  032C  2B2E               	goto	u5371
  6796  032D  2B2F               	goto	u5370
  6797  032E                     u5371:
  6798  032E  2B47               	goto	l12172
  6799  032F                     u5370:
  6800                           	line	431
  6801                           	
  6802  032F                     l12168:	
  6803                           ;robot.c: 430: {
  6804                           ;robot.c: 431: RobotDrive(0, 0x7FFF);
  6805  032F  3000               	movlw	low(0)
  6806  0330  1283               	bcf	status, 5	;RP0=0, select bank0
  6807  0331  1303               	bcf	status, 6	;RP1=0, select bank0
  6808  0332  00A9               	movwf	(?_RobotDrive)
  6809  0333  3000               	movlw	high(0)
  6810  0334  00AA               	movwf	((?_RobotDrive))+1
  6811  0335  30FF               	movlw	low(07FFFh)
  6812  0336  00AB               	movwf	0+(?_RobotDrive)+02h
  6813  0337  307F               	movlw	high(07FFFh)
  6814  0338  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6815  0339  160A  158A  24AC   	fcall	_RobotDrive
              120A  118A         
  6816                           	line	432
  6817                           	
  6818  033E                     l12170:	
  6819                           ;robot.c: 432: ROBOTerror = 4;
  6820  033E  3004               	movlw	(04h)
  6821  033F  1283               	bcf	status, 5	;RP0=0, select bank0
  6822  0340  1303               	bcf	status, 6	;RP1=0, select bank0
  6823  0341  00DF               	movwf	(??_robot_turnRight+0)+0
  6824  0342  085F               	movf	(??_robot_turnRight+0)+0,w
  6825  0343  1683               	bsf	status, 5	;RP0=1, select bank1
  6826  0344  1303               	bcf	status, 6	;RP1=0, select bank1
  6827  0345  00C5               	movwf	(_ROBOTerror)^080h
  6828                           	line	433
  6829                           ;robot.c: 433: break;
  6830  0346  2BEA               	goto	l12192
  6831                           	line	434
  6832                           	
  6833  0347                     l6302:	
  6834                           	line	435
  6835                           	
  6836  0347                     l12172:	
  6837                           ;robot.c: 434: }
  6838                           ;robot.c: 435: temp1 = AngleHighByte;
  6839  0347  083C               	movf	(_AngleHighByte)^080h,w	;volatile
  6840  0348  1283               	bcf	status, 5	;RP0=0, select bank0
  6841  0349  1303               	bcf	status, 6	;RP1=0, select bank0
  6842  034A  00DF               	movwf	(??_robot_turnRight+0)+0
  6843  034B  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6844  034C  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6845  034D  00E6               	movwf	(robot_turnRight@temp1)
  6846  034E  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6847  034F  00E7               	movwf	(robot_turnRight@temp1+1)
  6848                           	line	436
  6849                           	
  6850  0350                     l12174:	
  6851                           ;robot.c: 436: temp1 = temp1 << 8;
  6852  0350  0867               	movf	(robot_turnRight@temp1+1),w
  6853  0351  00E0               	movwf	(??_robot_turnRight+0)+0+1
  6854  0352  0866               	movf	(robot_turnRight@temp1),w
  6855  0353  00DF               	movwf	(??_robot_turnRight+0)+0
  6856  0354  085F               	movf	(??_robot_turnRight+0)+0,w
  6857  0355  00E0               	movwf	(??_robot_turnRight+0)+1
  6858  0356  01DF               	clrf	(??_robot_turnRight+0)+0
  6859  0357  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6860  0358  00E6               	movwf	(robot_turnRight@temp1)
  6861  0359  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6862  035A  00E7               	movwf	(robot_turnRight@temp1+1)
  6863                           	line	437
  6864                           	
  6865  035B                     l12176:	
  6866                           ;robot.c: 437: temp1 += AngleLowByte;
  6867  035B  1683               	bsf	status, 5	;RP0=1, select bank1
  6868  035C  1303               	bcf	status, 6	;RP1=0, select bank1
  6869  035D  083D               	movf	(_AngleLowByte)^080h,w	;volatile
  6870  035E  1283               	bcf	status, 5	;RP0=0, select bank0
  6871  035F  1303               	bcf	status, 6	;RP1=0, select bank0
  6872  0360  00DF               	movwf	(??_robot_turnRight+0)+0
  6873  0361  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6874  0362  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6875  0363  07E6               	addwf	(robot_turnRight@temp1),f
  6876  0364  1803               	skipnc
  6877  0365  0AE7               	incf	(robot_turnRight@temp1+1),f
  6878  0366  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6879  0367  07E7               	addwf	(robot_turnRight@temp1+1),f
  6880                           	line	438
  6881                           	
  6882  0368                     l12178:	
  6883                           ;robot.c: 438: angleTurned += temp1;
  6884  0368  0866               	movf	(robot_turnRight@temp1),w
  6885  0369  1683               	bsf	status, 5	;RP0=1, select bank1
  6886  036A  1303               	bcf	status, 6	;RP1=0, select bank1
  6887  036B  07AE               	addwf	(_angleTurned)^080h,f
  6888  036C  1803               	skipnc
  6889  036D  0AAF               	incf	(_angleTurned+1)^080h,f
  6890  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  6891  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  6892  0370  0867               	movf	(robot_turnRight@temp1+1),w
  6893  0371  1683               	bsf	status, 5	;RP0=1, select bank1
  6894  0372  1303               	bcf	status, 6	;RP1=0, select bank1
  6895  0373  07AF               	addwf	(_angleTurned+1)^080h,f
  6896                           	line	439
  6897                           	
  6898  0374                     l12180:	
  6899                           ;robot.c: 439: temp1 = DistHighByte;
  6900  0374  087D               	movf	(_DistHighByte),w	;volatile
  6901  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  6902  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  6903  0377  00DF               	movwf	(??_robot_turnRight+0)+0
  6904  0378  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6905  0379  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6906  037A  00E6               	movwf	(robot_turnRight@temp1)
  6907  037B  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6908  037C  00E7               	movwf	(robot_turnRight@temp1+1)
  6909                           	line	440
  6910                           ;robot.c: 440: temp1 = temp1 << 8;
  6911  037D  0867               	movf	(robot_turnRight@temp1+1),w
  6912  037E  00E0               	movwf	(??_robot_turnRight+0)+0+1
  6913  037F  0866               	movf	(robot_turnRight@temp1),w
  6914  0380  00DF               	movwf	(??_robot_turnRight+0)+0
  6915  0381  085F               	movf	(??_robot_turnRight+0)+0,w
  6916  0382  00E0               	movwf	(??_robot_turnRight+0)+1
  6917  0383  01DF               	clrf	(??_robot_turnRight+0)+0
  6918  0384  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6919  0385  00E6               	movwf	(robot_turnRight@temp1)
  6920  0386  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6921  0387  00E7               	movwf	(robot_turnRight@temp1+1)
  6922                           	line	441
  6923                           	
  6924  0388                     l12182:	
  6925                           ;robot.c: 441: temp1 += DistLowByte;
  6926  0388  1683               	bsf	status, 5	;RP0=1, select bank1
  6927  0389  1303               	bcf	status, 6	;RP1=0, select bank1
  6928  038A  0841               	movf	(_DistLowByte)^080h,w	;volatile
  6929  038B  1283               	bcf	status, 5	;RP0=0, select bank0
  6930  038C  1303               	bcf	status, 6	;RP1=0, select bank0
  6931  038D  00DF               	movwf	(??_robot_turnRight+0)+0
  6932  038E  01E0               	clrf	(??_robot_turnRight+0)+0+1
  6933  038F  085F               	movf	0+(??_robot_turnRight+0)+0,w
  6934  0390  07E6               	addwf	(robot_turnRight@temp1),f
  6935  0391  1803               	skipnc
  6936  0392  0AE7               	incf	(robot_turnRight@temp1+1),f
  6937  0393  0860               	movf	1+(??_robot_turnRight+0)+0,w
  6938  0394  07E7               	addwf	(robot_turnRight@temp1+1),f
  6939                           	line	442
  6940                           	
  6941  0395                     l12184:	
  6942                           ;robot.c: 442: distTravelled += temp1;
  6943  0395  0866               	movf	(robot_turnRight@temp1),w
  6944  0396  1683               	bsf	status, 5	;RP0=1, select bank1
  6945  0397  1303               	bcf	status, 6	;RP1=0, select bank1
  6946  0398  07B0               	addwf	(_distTravelled)^080h,f
  6947  0399  1803               	skipnc
  6948  039A  0AB1               	incf	(_distTravelled+1)^080h,f
  6949  039B  1283               	bcf	status, 5	;RP0=0, select bank0
  6950  039C  1303               	bcf	status, 6	;RP1=0, select bank0
  6951  039D  0867               	movf	(robot_turnRight@temp1+1),w
  6952  039E  1683               	bsf	status, 5	;RP0=1, select bank1
  6953  039F  1303               	bcf	status, 6	;RP1=0, select bank1
  6954  03A0  07B1               	addwf	(_distTravelled+1)^080h,f
  6955                           	line	443
  6956                           	
  6957  03A1                     l12186:	
  6958                           ;robot.c: 443: TotalDistTravelled += temp1;
  6959  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  6960  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
  6961  03A3  0866               	movf	(robot_turnRight@temp1),w
  6962  03A4  1683               	bsf	status, 5	;RP0=1, select bank1
  6963  03A5  1303               	bcf	status, 6	;RP1=0, select bank1
  6964  03A6  07AC               	addwf	(_TotalDistTravelled)^080h,f
  6965  03A7  1803               	skipnc
  6966  03A8  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  6967  03A9  1283               	bcf	status, 5	;RP0=0, select bank0
  6968  03AA  1303               	bcf	status, 6	;RP1=0, select bank0
  6969  03AB  0867               	movf	(robot_turnRight@temp1+1),w
  6970  03AC  1683               	bsf	status, 5	;RP0=1, select bank1
  6971  03AD  1303               	bcf	status, 6	;RP1=0, select bank1
  6972  03AE  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  6973                           	line	445
  6974                           	
  6975  03AF                     l12188:	
  6976                           ;robot.c: 445: UpdateDisplay();
  6977  03AF  120A  118A  2401   	fcall	_UpdateDisplay
              120A  118A         
  6978  03B4  2BB5               	goto	l12190
  6979                           	line	446
  6980                           	
  6981  03B5                     l6296:	
  6982                           	line	408
  6983                           	
  6984  03B5                     l12190:	
  6985  03B5  1683               	bsf	status, 5	;RP0=1, select bank1
  6986  03B6  1303               	bcf	status, 6	;RP1=0, select bank1
  6987  03B7  082F               	movf	(_angleTurned+1)^080h,w
  6988  03B8  1283               	bcf	status, 5	;RP0=0, select bank0
  6989  03B9  1303               	bcf	status, 6	;RP1=0, select bank0
  6990  03BA  01A7               	clrf	(?_abs+1)
  6991  03BB  07A7               	addwf	(?_abs+1)
  6992  03BC  1683               	bsf	status, 5	;RP0=1, select bank1
  6993  03BD  1303               	bcf	status, 6	;RP1=0, select bank1
  6994  03BE  082E               	movf	(_angleTurned)^080h,w
  6995  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  6996  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  6997  03C1  01A6               	clrf	(?_abs)
  6998  03C2  07A6               	addwf	(?_abs)
  6999                           
  7000  03C3  160A  158A  2477   	fcall	_abs
              120A  118A         
  7001  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  7002  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  7003  03CA  0826               	movf	(0+?_abs),w
  7004  03CB  00DF               	movwf	(??_robot_turnRight+0)+0
  7005  03CC  0827               	movf	(1+?_abs),w
  7006  03CD  00E0               	movwf	((??_robot_turnRight+0)+0+1)
  7007  03CE  0863               	movf	(robot_turnRight@turnTarget+1),w
  7008  03CF  01A7               	clrf	(?_abs+1)
  7009  03D0  07A7               	addwf	(?_abs+1)
  7010  03D1  0862               	movf	(robot_turnRight@turnTarget),w
  7011  03D2  01A6               	clrf	(?_abs)
  7012  03D3  07A6               	addwf	(?_abs)
  7013                           
  7014  03D4  160A  158A  2477   	fcall	_abs
              120A  118A         
  7015  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  7016  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  7017  03DB  0860               	movf	1+(??_robot_turnRight+0)+0,w
  7018  03DC  3A80               	xorlw	80h
  7019  03DD  00E1               	movwf	(??_robot_turnRight+2)+0
  7020  03DE  0827               	movf	(1+(?_abs)),w
  7021  03DF  3A80               	xorlw	80h
  7022  03E0  0261               	subwf	(??_robot_turnRight+2)+0,w
  7023  03E1  1D03               	skipz
  7024  03E2  2BE5               	goto	u5385
  7025  03E3  0826               	movf	(0+(?_abs)),w
  7026  03E4  025F               	subwf	0+(??_robot_turnRight+0)+0,w
  7027  03E5                     u5385:
  7028                           
  7029  03E5  1C03               	skipc
  7030  03E6  2BE8               	goto	u5381
  7031  03E7  2BE9               	goto	u5380
  7032  03E8                     u5381:
  7033  03E8  2AD0               	goto	l12146
  7034  03E9                     u5380:
  7035  03E9  2BEA               	goto	l12192
  7036                           	
  7037  03EA                     l6299:	
  7038                           	line	447
  7039                           	
  7040  03EA                     l12192:	
  7041                           ;robot.c: 446: }
  7042                           ;robot.c: 447: Disp2 = ROBOTerror;
  7043  03EA  1683               	bsf	status, 5	;RP0=1, select bank1
  7044  03EB  1303               	bcf	status, 6	;RP1=0, select bank1
  7045  03EC  0845               	movf	(_ROBOTerror)^080h,w
  7046  03ED  1283               	bcf	status, 5	;RP0=0, select bank0
  7047  03EE  1303               	bcf	status, 6	;RP1=0, select bank0
  7048  03EF  00DF               	movwf	(??_robot_turnRight+0)+0
  7049  03F0  01E0               	clrf	(??_robot_turnRight+0)+0+1
  7050  03F1  085F               	movf	0+(??_robot_turnRight+0)+0,w
  7051  03F2  1683               	bsf	status, 5	;RP0=1, select bank1
  7052  03F3  1303               	bcf	status, 6	;RP1=0, select bank1
  7053  03F4  00A6               	movwf	(_Disp2)^080h
  7054  03F5  1283               	bcf	status, 5	;RP0=0, select bank0
  7055  03F6  1303               	bcf	status, 6	;RP1=0, select bank0
  7056  03F7  0860               	movf	1+(??_robot_turnRight+0)+0,w
  7057  03F8  1683               	bsf	status, 5	;RP0=1, select bank1
  7058  03F9  1303               	bcf	status, 6	;RP1=0, select bank1
  7059  03FA  00A7               	movwf	(_Disp2+1)^080h
  7060                           	line	448
  7061                           	
  7062  03FB                     l12194:	
  7063                           ;robot.c: 448: UpdateDisplay();
  7064  03FB  120A  118A  2401   	fcall	_UpdateDisplay
              120A  118A         
  7065                           	line	451
  7066                           	
  7067  0400                     l6303:	
  7068  0400  0008               	return
  7069                           	opt stack 0
  7070                           GLOBAL	__end_of_robot_turnRight
  7071  0401                     	__end_of_robot_turnRight:
  7072 ;; =============== function _robot_turnRight ends ============
  7073                           
  7074                           	signat	_robot_turnRight,4216
  7075                           	global	_robotTurnSpeed
  7076                           psect	text1118,local,class=CODE,delta=2
  7077                           global __ptext1118
  7078  131E                     __ptext1118:
  7079                           
  7080 ;; *************** function _robotTurnSpeed *****************
  7081 ;; Defined at:
  7082 ;;		line 509 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  angle           2   61[BANK0 ] int 
  7085 ;;  speed           2   63[BANK0 ] int 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  temp1           2   68[BANK0 ] int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;		None               void
  7090 ;; Registers used:
  7091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7097 ;;      Params:         0       4       0       0       0
  7098 ;;      Locals:         0       2       0       0       0
  7099 ;;      Temps:          0       3       0       0       0
  7100 ;;      Totals:         0       9       0       0       0
  7101 ;;Total ram usage:        9 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    5
  7104 ;; This function calls:
  7105 ;;		_robotTurn
  7106 ;;		_robot_read
  7107 ;;		_UpdateDisplay
  7108 ;;		_abs
  7109 ;; This function is called by:
  7110 ;;		_GoHome
  7111 ;;		_FindVictim
  7112 ;;		_robot_turnLeft
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           psect	text1118
  7116                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7117                           	line	509
  7118                           	global	__size_of_robotTurnSpeed
  7119  00A4                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  7120                           	
  7121  131E                     _robotTurnSpeed:	
  7122                           	opt	stack 0
  7123                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7124                           	line	510
  7125                           	
  7126  131E                     l12004:	
  7127                           ;robot.c: 510: angleTurned = 0;
  7128  131E  1683               	bsf	status, 5	;RP0=1, select bank1
  7129  131F  1303               	bcf	status, 6	;RP1=0, select bank1
  7130  1320  01AE               	clrf	(_angleTurned)^080h
  7131  1321  01AF               	clrf	(_angleTurned+1)^080h
  7132                           	line	511
  7133                           ;robot.c: 511: int temp1 = 0;
  7134  1322  1283               	bcf	status, 5	;RP0=0, select bank0
  7135  1323  1303               	bcf	status, 6	;RP1=0, select bank0
  7136  1324  01E4               	clrf	(robotTurnSpeed@temp1)
  7137  1325  01E5               	clrf	(robotTurnSpeed@temp1+1)
  7138                           	line	513
  7139                           	
  7140  1326                     l12006:	
  7141                           ;robot.c: 513: robotTurn(angle);
  7142  1326  085E               	movf	(robotTurnSpeed@angle+1),w
  7143  1327  01A3               	clrf	(?_robotTurn+1)
  7144  1328  07A3               	addwf	(?_robotTurn+1)
  7145  1329  085D               	movf	(robotTurnSpeed@angle),w
  7146  132A  01A2               	clrf	(?_robotTurn)
  7147  132B  07A2               	addwf	(?_robotTurn)
  7148                           
  7149  132C  160A  118A  212D   	fcall	_robotTurn
              160A  118A         
  7150                           	line	516
  7151                           ;robot.c: 516: while (abs(angleTurned) < abs(angle))
  7152  1331  2B81               	goto	l12028
  7153                           	
  7154  1332                     l6317:	
  7155                           	line	518
  7156                           	
  7157  1332                     l12008:	
  7158                           ;robot.c: 517: {
  7159                           ;robot.c: 518: robot_read(1);
  7160  1332  3001               	movlw	(01h)
  7161  1333  160A  118A  26DB   	fcall	_robot_read
              160A  118A         
  7162                           	line	519
  7163                           	
  7164  1338                     l12010:	
  7165                           ;robot.c: 519: if (BumpSensors || VwallSensor)
  7166  1338  1683               	bsf	status, 5	;RP0=1, select bank1
  7167  1339  1303               	bcf	status, 6	;RP1=0, select bank1
  7168  133A  08BE               	movf	(_BumpSensors)^080h,f
  7169  133B  1D03               	skipz	;volatile
  7170  133C  2B3E               	goto	u5211
  7171  133D  2B3F               	goto	u5210
  7172  133E                     u5211:
  7173  133E  2B44               	goto	l12014
  7174  133F                     u5210:
  7175                           	
  7176  133F                     l12012:	
  7177  133F  084A               	movf	(_VwallSensor)^080h,w	;volatile
  7178  1340  1D03               	skipz
  7179  1341  2B43               	goto	u5220
  7180  1342  2B48               	goto	l12016
  7181  1343                     u5220:
  7182  1343  2B44               	goto	l12014
  7183                           	
  7184  1344                     l6320:	
  7185                           	line	521
  7186                           	
  7187  1344                     l12014:	
  7188                           ;robot.c: 520: {
  7189                           ;robot.c: 521: ROBOTerror = 1;
  7190  1344  01C5               	clrf	(_ROBOTerror)^080h
  7191  1345  1403               	bsf	status,0
  7192  1346  0DC5               	rlf	(_ROBOTerror)^080h,f
  7193                           	line	522
  7194                           ;robot.c: 522: break;
  7195  1347  2BB6               	goto	l12030
  7196                           	line	523
  7197                           	
  7198  1348                     l6318:	
  7199                           	line	524
  7200                           	
  7201  1348                     l12016:	
  7202                           ;robot.c: 523: }
  7203                           ;robot.c: 524: temp1 = AngleHighByte;
  7204  1348  083C               	movf	(_AngleHighByte)^080h,w	;volatile
  7205  1349  1283               	bcf	status, 5	;RP0=0, select bank0
  7206  134A  1303               	bcf	status, 6	;RP1=0, select bank0
  7207  134B  00E1               	movwf	(??_robotTurnSpeed+0)+0
  7208  134C  01E2               	clrf	(??_robotTurnSpeed+0)+0+1
  7209  134D  0861               	movf	0+(??_robotTurnSpeed+0)+0,w
  7210  134E  00E4               	movwf	(robotTurnSpeed@temp1)
  7211  134F  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  7212  1350  00E5               	movwf	(robotTurnSpeed@temp1+1)
  7213                           	line	525
  7214                           	
  7215  1351                     l12018:	
  7216                           ;robot.c: 525: temp1 = temp1 << 8;
  7217  1351  0865               	movf	(robotTurnSpeed@temp1+1),w
  7218  1352  00E2               	movwf	(??_robotTurnSpeed+0)+0+1
  7219  1353  0864               	movf	(robotTurnSpeed@temp1),w
  7220  1354  00E1               	movwf	(??_robotTurnSpeed+0)+0
  7221  1355  0861               	movf	(??_robotTurnSpeed+0)+0,w
  7222  1356  00E2               	movwf	(??_robotTurnSpeed+0)+1
  7223  1357  01E1               	clrf	(??_robotTurnSpeed+0)+0
  7224  1358  0861               	movf	0+(??_robotTurnSpeed+0)+0,w
  7225  1359  00E4               	movwf	(robotTurnSpeed@temp1)
  7226  135A  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  7227  135B  00E5               	movwf	(robotTurnSpeed@temp1+1)
  7228                           	line	526
  7229                           	
  7230  135C                     l12020:	
  7231                           ;robot.c: 526: temp1 += AngleLowByte;
  7232  135C  1683               	bsf	status, 5	;RP0=1, select bank1
  7233  135D  1303               	bcf	status, 6	;RP1=0, select bank1
  7234  135E  083D               	movf	(_AngleLowByte)^080h,w	;volatile
  7235  135F  1283               	bcf	status, 5	;RP0=0, select bank0
  7236  1360  1303               	bcf	status, 6	;RP1=0, select bank0
  7237  1361  00E1               	movwf	(??_robotTurnSpeed+0)+0
  7238  1362  01E2               	clrf	(??_robotTurnSpeed+0)+0+1
  7239  1363  0861               	movf	0+(??_robotTurnSpeed+0)+0,w
  7240  1364  07E4               	addwf	(robotTurnSpeed@temp1),f
  7241  1365  1803               	skipnc
  7242  1366  0AE5               	incf	(robotTurnSpeed@temp1+1),f
  7243  1367  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  7244  1368  07E5               	addwf	(robotTurnSpeed@temp1+1),f
  7245                           	line	527
  7246                           	
  7247  1369                     l12022:	
  7248                           ;robot.c: 527: angleTurned += temp1;
  7249  1369  0864               	movf	(robotTurnSpeed@temp1),w
  7250  136A  1683               	bsf	status, 5	;RP0=1, select bank1
  7251  136B  1303               	bcf	status, 6	;RP1=0, select bank1
  7252  136C  07AE               	addwf	(_angleTurned)^080h,f
  7253  136D  1803               	skipnc
  7254  136E  0AAF               	incf	(_angleTurned+1)^080h,f
  7255  136F  1283               	bcf	status, 5	;RP0=0, select bank0
  7256  1370  1303               	bcf	status, 6	;RP1=0, select bank0
  7257  1371  0865               	movf	(robotTurnSpeed@temp1+1),w
  7258  1372  1683               	bsf	status, 5	;RP0=1, select bank1
  7259  1373  1303               	bcf	status, 6	;RP1=0, select bank1
  7260  1374  07AF               	addwf	(_angleTurned+1)^080h,f
  7261                           	line	528
  7262                           	
  7263  1375                     l12024:	
  7264                           ;robot.c: 528: Disp2 = angleTurned;
  7265  1375  082F               	movf	(_angleTurned+1)^080h,w
  7266  1376  01A7               	clrf	(_Disp2+1)^080h
  7267  1377  07A7               	addwf	(_Disp2+1)^080h
  7268  1378  082E               	movf	(_angleTurned)^080h,w
  7269  1379  01A6               	clrf	(_Disp2)^080h
  7270  137A  07A6               	addwf	(_Disp2)^080h
  7271                           
  7272                           	line	529
  7273                           	
  7274  137B                     l12026:	
  7275                           ;robot.c: 529: UpdateDisplay();
  7276  137B  120A  118A  2401   	fcall	_UpdateDisplay
              160A  118A         
  7277  1380  2B81               	goto	l12028
  7278                           	line	530
  7279                           	
  7280  1381                     l6316:	
  7281                           	line	516
  7282                           	
  7283  1381                     l12028:	
  7284  1381  1683               	bsf	status, 5	;RP0=1, select bank1
  7285  1382  1303               	bcf	status, 6	;RP1=0, select bank1
  7286  1383  082F               	movf	(_angleTurned+1)^080h,w
  7287  1384  1283               	bcf	status, 5	;RP0=0, select bank0
  7288  1385  1303               	bcf	status, 6	;RP1=0, select bank0
  7289  1386  01A7               	clrf	(?_abs+1)
  7290  1387  07A7               	addwf	(?_abs+1)
  7291  1388  1683               	bsf	status, 5	;RP0=1, select bank1
  7292  1389  1303               	bcf	status, 6	;RP1=0, select bank1
  7293  138A  082E               	movf	(_angleTurned)^080h,w
  7294  138B  1283               	bcf	status, 5	;RP0=0, select bank0
  7295  138C  1303               	bcf	status, 6	;RP1=0, select bank0
  7296  138D  01A6               	clrf	(?_abs)
  7297  138E  07A6               	addwf	(?_abs)
  7298                           
  7299  138F  160A  158A  2477   	fcall	_abs
              160A  118A         
  7300  1394  1283               	bcf	status, 5	;RP0=0, select bank0
  7301  1395  1303               	bcf	status, 6	;RP1=0, select bank0
  7302  1396  0826               	movf	(0+?_abs),w
  7303  1397  00E1               	movwf	(??_robotTurnSpeed+0)+0
  7304  1398  0827               	movf	(1+?_abs),w
  7305  1399  00E2               	movwf	((??_robotTurnSpeed+0)+0+1)
  7306  139A  085E               	movf	(robotTurnSpeed@angle+1),w
  7307  139B  01A7               	clrf	(?_abs+1)
  7308  139C  07A7               	addwf	(?_abs+1)
  7309  139D  085D               	movf	(robotTurnSpeed@angle),w
  7310  139E  01A6               	clrf	(?_abs)
  7311  139F  07A6               	addwf	(?_abs)
  7312                           
  7313  13A0  160A  158A  2477   	fcall	_abs
              160A  118A         
  7314  13A5  1283               	bcf	status, 5	;RP0=0, select bank0
  7315  13A6  1303               	bcf	status, 6	;RP1=0, select bank0
  7316  13A7  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  7317  13A8  3A80               	xorlw	80h
  7318  13A9  00E3               	movwf	(??_robotTurnSpeed+2)+0
  7319  13AA  0827               	movf	(1+(?_abs)),w
  7320  13AB  3A80               	xorlw	80h
  7321  13AC  0263               	subwf	(??_robotTurnSpeed+2)+0,w
  7322  13AD  1D03               	skipz
  7323  13AE  2BB1               	goto	u5235
  7324  13AF  0826               	movf	(0+(?_abs)),w
  7325  13B0  0261               	subwf	0+(??_robotTurnSpeed+0)+0,w
  7326  13B1                     u5235:
  7327                           
  7328  13B1  1C03               	skipc
  7329  13B2  2BB4               	goto	u5231
  7330  13B3  2BB5               	goto	u5230
  7331  13B4                     u5231:
  7332  13B4  2B32               	goto	l12008
  7333  13B5                     u5230:
  7334  13B5  2BB6               	goto	l12030
  7335                           	
  7336  13B6                     l6321:	
  7337                           	line	532
  7338                           	
  7339  13B6                     l12030:	
  7340                           ;robot.c: 530: }
  7341                           ;robot.c: 532: robotTurn(0);
  7342  13B6  3000               	movlw	low(0)
  7343  13B7  1283               	bcf	status, 5	;RP0=0, select bank0
  7344  13B8  1303               	bcf	status, 6	;RP1=0, select bank0
  7345  13B9  00A2               	movwf	(?_robotTurn)
  7346  13BA  3000               	movlw	high(0)
  7347  13BB  00A3               	movwf	((?_robotTurn))+1
  7348  13BC  160A  118A  212D   	fcall	_robotTurn
              160A  118A         
  7349                           	line	533
  7350                           	
  7351  13C1                     l6322:	
  7352  13C1  0008               	return
  7353                           	opt stack 0
  7354                           GLOBAL	__end_of_robotTurnSpeed
  7355  13C2                     	__end_of_robotTurnSpeed:
  7356 ;; =============== function _robotTurnSpeed ends ============
  7357                           
  7358                           	signat	_robotTurnSpeed,8312
  7359                           	global	_ChargeMode
  7360                           psect	text1119,local,class=CODE,delta=2
  7361                           global __ptext1119
  7362  1D6F                     __ptext1119:
  7363                           
  7364 ;; *************** function _ChargeMode *****************
  7365 ;; Defined at:
  7366 ;;		line 434 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;		None               void
  7373 ;; Registers used:
  7374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7380 ;;      Params:         0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0
  7382 ;;      Temps:          0       1       0       0       0
  7383 ;;      Totals:         0       1       0       0       0
  7384 ;;Total ram usage:        1 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:    5
  7387 ;; This function calls:
  7388 ;;		_ser_putch
  7389 ;;		_RobotBattRead
  7390 ;;		_UpdateDisplay
  7391 ;; This function is called by:
  7392 ;;		_main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           psect	text1119
  7396                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  7397                           	line	434
  7398                           	global	__size_of_ChargeMode
  7399  004D                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  7400                           	
  7401  1D6F                     _ChargeMode:	
  7402                           	opt	stack 2
  7403                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7404                           	line	436
  7405                           	
  7406  1D6F                     l11982:	
  7407                           ;Main.c: 436: currentMenu = 2;
  7408  1D6F  3002               	movlw	(02h)
  7409  1D70  1283               	bcf	status, 5	;RP0=0, select bank0
  7410  1D71  1303               	bcf	status, 6	;RP1=0, select bank0
  7411  1D72  00DD               	movwf	(??_ChargeMode+0)+0
  7412  1D73  085D               	movf	(??_ChargeMode+0)+0,w
  7413  1D74  1683               	bsf	status, 5	;RP0=1, select bank1
  7414  1D75  1303               	bcf	status, 6	;RP1=0, select bank1
  7415  1D76  00CD               	movwf	(_currentMenu)^080h	;volatile
  7416                           	line	437
  7417                           	
  7418  1D77                     l11984:	
  7419                           ;Main.c: 437: ser_putch(128);
  7420  1D77  3080               	movlw	(080h)
  7421  1D78  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
  7422  1D7D  2D7E               	goto	l11986
  7423                           	line	439
  7424                           ;Main.c: 439: while (1)
  7425                           	
  7426  1D7E                     l2369:	
  7427                           	line	441
  7428                           	
  7429  1D7E                     l11986:	
  7430                           ;Main.c: 440: {
  7431                           ;Main.c: 441: if (RTC_FLAG_250MS == 1)
  7432  1D7E  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  7433  1D7F  2D81               	goto	u5201
  7434  1D80  2D82               	goto	u5200
  7435  1D81                     u5201:
  7436  1D81  2DA6               	goto	l12002
  7437  1D82                     u5200:
  7438                           	line	443
  7439                           	
  7440  1D82                     l11988:	
  7441                           ;Main.c: 442: {
  7442                           ;Main.c: 443: RTC_FLAG_250MS = 0;
  7443  1D82  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  7444                           	line	444
  7445                           	
  7446  1D83                     l11990:	
  7447                           ;Main.c: 444: RobotBattRead();
  7448  1D83  160A  118A  2295   	fcall	_RobotBattRead
              160A  158A         
  7449                           	line	445
  7450                           ;Main.c: 445: UpdateDisplay();
  7451  1D88  120A  118A  2401   	fcall	_UpdateDisplay
              160A  158A         
  7452  1D8D  2DA6               	goto	l12002
  7453                           	line	446
  7454                           	
  7455  1D8E                     l2370:	
  7456                           	line	447
  7457                           ;Main.c: 446: }
  7458                           ;Main.c: 447: switch (buttonPressed)
  7459  1D8E  2DA6               	goto	l12002
  7460                           	line	449
  7461                           ;Main.c: 448: {
  7462                           ;Main.c: 449: case 1:
  7463                           	
  7464  1D8F                     l2372:	
  7465                           	line	450
  7466                           ;Main.c: 450: buttonPressed = 0;
  7467  1D8F  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7468                           	line	451
  7469                           ;Main.c: 451: break;
  7470  1D90  2D7E               	goto	l11986
  7471                           	line	452
  7472                           ;Main.c: 452: case 2:
  7473                           	
  7474  1D91                     l2374:	
  7475                           	line	453
  7476                           ;Main.c: 453: buttonPressed = 0;
  7477  1D91  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7478                           	line	454
  7479                           ;Main.c: 454: break;
  7480  1D92  2D7E               	goto	l11986
  7481                           	line	455
  7482                           ;Main.c: 455: case 3:
  7483                           	
  7484  1D93                     l2375:	
  7485                           	line	456
  7486                           ;Main.c: 456: buttonPressed = 0;
  7487  1D93  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7488                           	line	457
  7489                           ;Main.c: 457: break;
  7490  1D94  2D7E               	goto	l11986
  7491                           	line	458
  7492                           ;Main.c: 458: case 4:
  7493                           	
  7494  1D95                     l2376:	
  7495                           	line	459
  7496                           ;Main.c: 459: buttonPressed = 0;
  7497  1D95  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7498                           	line	460
  7499                           ;Main.c: 460: break;
  7500  1D96  2D7E               	goto	l11986
  7501                           	line	461
  7502                           ;Main.c: 461: case 5:
  7503                           	
  7504  1D97                     l2377:	
  7505                           	line	462
  7506                           	
  7507  1D97                     l11992:	
  7508                           ;Main.c: 462: ser_putch(132);
  7509  1D97  3084               	movlw	(084h)
  7510  1D98  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
  7511                           	line	463
  7512                           	
  7513  1D9D                     l11994:	
  7514                           ;Main.c: 463: buttonPressed = 0;
  7515  1D9D  1683               	bsf	status, 5	;RP0=1, select bank1
  7516  1D9E  1303               	bcf	status, 6	;RP1=0, select bank1
  7517  1D9F  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7518                           	line	464
  7519                           	
  7520  1DA0                     l11996:	
  7521                           ;Main.c: 464: currentMenu = 0;
  7522  1DA0  01CD               	clrf	(_currentMenu)^080h	;volatile
  7523  1DA1  2DBB               	goto	l2378
  7524                           	line	465
  7525                           	
  7526  1DA2                     l11998:	
  7527                           ;Main.c: 465: return;
  7528  1DA2  2DBB               	goto	l2378
  7529                           	line	466
  7530                           ;Main.c: 466: default:
  7531                           	
  7532  1DA3                     l2379:	
  7533                           	line	467
  7534                           ;Main.c: 467: buttonPressed = 0;
  7535  1DA3  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7536                           	line	468
  7537                           ;Main.c: 468: break;
  7538  1DA4  2D7E               	goto	l11986
  7539                           	line	469
  7540                           	
  7541  1DA5                     l12000:	
  7542                           ;Main.c: 469: }
  7543  1DA5  2D7E               	goto	l11986
  7544                           	line	447
  7545                           	
  7546  1DA6                     l2371:	
  7547                           	
  7548  1DA6                     l12002:	
  7549  1DA6  1683               	bsf	status, 5	;RP0=1, select bank1
  7550  1DA7  1303               	bcf	status, 6	;RP1=0, select bank1
  7551  1DA8  084B               	movf	(_buttonPressed)^080h,w	;volatile
  7552                           	; Switch size 1, requested type "space"
  7553                           ; Number of cases is 5, Range of values is 1 to 5
  7554                           ; switch strategies available:
  7555                           ; Name         Instructions Cycles
  7556                           ; simple_byte           16     9 (average)
  7557                           ; direct_byte           26    11 (fixed)
  7558                           ; jumptable            263     9 (fixed)
  7559                           ;	Chosen strategy is simple_byte
  7560                           
  7561                           	opt asmopt_off
  7562  1DA9  3A01               	xorlw	1^0	; case 1
  7563  1DAA  1903               	skipnz
  7564  1DAB  2D8F               	goto	l2372
  7565  1DAC  3A03               	xorlw	2^1	; case 2
  7566  1DAD  1903               	skipnz
  7567  1DAE  2D91               	goto	l2374
  7568  1DAF  3A01               	xorlw	3^2	; case 3
  7569  1DB0  1903               	skipnz
  7570  1DB1  2D93               	goto	l2375
  7571  1DB2  3A07               	xorlw	4^3	; case 4
  7572  1DB3  1903               	skipnz
  7573  1DB4  2D95               	goto	l2376
  7574  1DB5  3A01               	xorlw	5^4	; case 5
  7575  1DB6  1903               	skipnz
  7576  1DB7  2D97               	goto	l11992
  7577  1DB8  2DA3               	goto	l2379
  7578                           	opt asmopt_on
  7579                           
  7580                           	line	469
  7581                           	
  7582  1DB9                     l2373:	
  7583  1DB9  2D7E               	goto	l11986
  7584                           	line	470
  7585                           	
  7586  1DBA                     l2380:	
  7587                           	line	439
  7588  1DBA  2D7E               	goto	l11986
  7589                           	
  7590  1DBB                     l2381:	
  7591                           	line	471
  7592                           	
  7593  1DBB                     l2378:	
  7594  1DBB  0008               	return
  7595                           	opt stack 0
  7596                           GLOBAL	__end_of_ChargeMode
  7597  1DBC                     	__end_of_ChargeMode:
  7598 ;; =============== function _ChargeMode ends ============
  7599                           
  7600                           	signat	_ChargeMode,88
  7601                           	global	_calibrateIR
  7602                           psect	text1120,local,class=CODE,delta=2
  7603                           global __ptext1120
  7604  1F90                     __ptext1120:
  7605                           
  7606 ;; *************** function _calibrateIR *****************
  7607 ;; Defined at:
  7608 ;;		line 392 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;		None
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;		None               void
  7615 ;; Registers used:
  7616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7622 ;;      Params:         0       0       0       0       0
  7623 ;;      Locals:         0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0
  7625 ;;      Totals:         0       0       0       0       0
  7626 ;;Total ram usage:        0 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    5
  7629 ;; This function calls:
  7630 ;;		_rotate
  7631 ;;		_UpdateDisplay
  7632 ;; This function is called by:
  7633 ;;		_main
  7634 ;;		_Init_Follow_IR
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           psect	text1120
  7638                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  7639                           	line	392
  7640                           	global	__size_of_calibrateIR
  7641  0070                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  7642                           	
  7643  1F90                     _calibrateIR:	
  7644                           	opt	stack 1
  7645                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7646                           	line	393
  7647                           	
  7648  1F90                     l11950:	
  7649                           ;Main.c: 393: currentMenu = 1;
  7650  1F90  1683               	bsf	status, 5	;RP0=1, select bank1
  7651  1F91  1303               	bcf	status, 6	;RP1=0, select bank1
  7652  1F92  01CD               	clrf	(_currentMenu)^080h	;volatile
  7653  1F93  1403               	bsf	status,0
  7654  1F94  0DCD               	rlf	(_currentMenu)^080h,f	;volatile
  7655                           	line	394
  7656                           	
  7657  1F95                     l11952:	
  7658                           ;Main.c: 394: rotate(8, 0);
  7659  1F95  3008               	movlw	low(08h)
  7660  1F96  1283               	bcf	status, 5	;RP0=0, select bank0
  7661  1F97  1303               	bcf	status, 6	;RP1=0, select bank0
  7662  1F98  00A3               	movwf	(?_rotate)
  7663  1F99  3000               	movlw	high(08h)
  7664  1F9A  00A4               	movwf	((?_rotate))+1
  7665  1F9B  01A5               	clrf	0+(?_rotate)+02h
  7666  1F9C  160A  158A  26C1   	fcall	_rotate
              160A  158A         
  7667                           	line	395
  7668                           	
  7669  1FA1                     l11954:	
  7670                           ;Main.c: 395: rotate(8, 1);
  7671  1FA1  3008               	movlw	low(08h)
  7672  1FA2  1283               	bcf	status, 5	;RP0=0, select bank0
  7673  1FA3  1303               	bcf	status, 6	;RP1=0, select bank0
  7674  1FA4  00A3               	movwf	(?_rotate)
  7675  1FA5  3000               	movlw	high(08h)
  7676  1FA6  00A4               	movwf	((?_rotate))+1
  7677  1FA7  01A5               	clrf	0+(?_rotate)+02h
  7678  1FA8  1403               	bsf	status,0
  7679  1FA9  0DA5               	rlf	0+(?_rotate)+02h,f
  7680  1FAA  160A  158A  26C1   	fcall	_rotate
              160A  158A         
  7681  1FAF  2FB0               	goto	l11956
  7682                           	line	396
  7683                           ;Main.c: 396: while (1)
  7684                           	
  7685  1FB0                     l2354:	
  7686                           	line	398
  7687                           	
  7688  1FB0                     l11956:	
  7689                           ;Main.c: 397: {
  7690                           ;Main.c: 398: if (RTC_FLAG_250MS == 1)
  7691  1FB0  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  7692  1FB1  2FB3               	goto	u5191
  7693  1FB2  2FB4               	goto	u5190
  7694  1FB3                     u5191:
  7695  1FB3  2FEA               	goto	l11980
  7696  1FB4                     u5190:
  7697                           	line	400
  7698                           	
  7699  1FB4                     l11958:	
  7700                           ;Main.c: 399: {
  7701                           ;Main.c: 400: RTC_FLAG_250MS = 0;
  7702  1FB4  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  7703                           	line	401
  7704                           	
  7705  1FB5                     l11960:	
  7706                           ;Main.c: 401: UpdateDisplay();
  7707  1FB5  120A  118A  2401   	fcall	_UpdateDisplay
              160A  158A         
  7708  1FBA  2FEA               	goto	l11980
  7709                           	line	402
  7710                           	
  7711  1FBB                     l2355:	
  7712                           	line	403
  7713                           ;Main.c: 402: }
  7714                           ;Main.c: 403: switch (buttonPressed)
  7715  1FBB  2FEA               	goto	l11980
  7716                           	line	405
  7717                           ;Main.c: 404: {
  7718                           ;Main.c: 405: case 1:
  7719                           	
  7720  1FBC                     l2357:	
  7721                           	line	406
  7722                           ;Main.c: 406: buttonPressed = 0;
  7723  1FBC  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7724                           	line	407
  7725                           ;Main.c: 407: break;
  7726  1FBD  2FB0               	goto	l11956
  7727                           	line	408
  7728                           ;Main.c: 408: case 2:
  7729                           	
  7730  1FBE                     l2359:	
  7731                           	line	409
  7732                           ;Main.c: 409: buttonPressed = 0;
  7733  1FBE  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7734                           	line	410
  7735                           ;Main.c: 410: break;
  7736  1FBF  2FB0               	goto	l11956
  7737                           	line	411
  7738                           ;Main.c: 411: case 3:
  7739                           	
  7740  1FC0                     l2360:	
  7741                           	line	412
  7742                           	
  7743  1FC0                     l11962:	
  7744                           ;Main.c: 412: rotate(1, 1);
  7745  1FC0  3001               	movlw	low(01h)
  7746  1FC1  1283               	bcf	status, 5	;RP0=0, select bank0
  7747  1FC2  1303               	bcf	status, 6	;RP1=0, select bank0
  7748  1FC3  00A3               	movwf	(?_rotate)
  7749  1FC4  3000               	movlw	high(01h)
  7750  1FC5  00A4               	movwf	((?_rotate))+1
  7751  1FC6  01A5               	clrf	0+(?_rotate)+02h
  7752  1FC7  1403               	bsf	status,0
  7753  1FC8  0DA5               	rlf	0+(?_rotate)+02h,f
  7754  1FC9  160A  158A  26C1   	fcall	_rotate
              160A  158A         
  7755                           	line	413
  7756                           	
  7757  1FCE                     l11964:	
  7758                           ;Main.c: 413: buttonPressed = 0;
  7759  1FCE  1683               	bsf	status, 5	;RP0=1, select bank1
  7760  1FCF  1303               	bcf	status, 6	;RP1=0, select bank1
  7761  1FD0  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7762                           	line	414
  7763                           ;Main.c: 414: break;
  7764  1FD1  2FB0               	goto	l11956
  7765                           	line	415
  7766                           ;Main.c: 415: case 4:
  7767                           	
  7768  1FD2                     l2361:	
  7769                           	line	416
  7770                           	
  7771  1FD2                     l11966:	
  7772                           ;Main.c: 416: rotate(1, 0);
  7773  1FD2  3001               	movlw	low(01h)
  7774  1FD3  1283               	bcf	status, 5	;RP0=0, select bank0
  7775  1FD4  1303               	bcf	status, 6	;RP1=0, select bank0
  7776  1FD5  00A3               	movwf	(?_rotate)
  7777  1FD6  3000               	movlw	high(01h)
  7778  1FD7  00A4               	movwf	((?_rotate))+1
  7779  1FD8  01A5               	clrf	0+(?_rotate)+02h
  7780  1FD9  160A  158A  26C1   	fcall	_rotate
              160A  158A         
  7781                           	line	417
  7782                           	
  7783  1FDE                     l11968:	
  7784                           ;Main.c: 417: buttonPressed = 0;
  7785  1FDE  1683               	bsf	status, 5	;RP0=1, select bank1
  7786  1FDF  1303               	bcf	status, 6	;RP1=0, select bank1
  7787  1FE0  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7788                           	line	418
  7789                           ;Main.c: 418: break;
  7790  1FE1  2FB0               	goto	l11956
  7791                           	line	419
  7792                           ;Main.c: 419: case 5:
  7793                           	
  7794  1FE2                     l2362:	
  7795                           	line	421
  7796                           	
  7797  1FE2                     l11970:	
  7798                           ;Main.c: 421: totalSteps = 0;
  7799  1FE2  01BA               	clrf	(_totalSteps)^080h
  7800  1FE3  01BB               	clrf	(_totalSteps+1)^080h
  7801                           	line	422
  7802                           	
  7803  1FE4                     l11972:	
  7804                           ;Main.c: 422: buttonPressed = 0;
  7805  1FE4  01CB               	clrf	(_buttonPressed)^080h	;volatile
  7806                           	line	423
  7807                           	
  7808  1FE5                     l11974:	
  7809                           ;Main.c: 423: currentMenu = 0;
  7810  1FE5  01CD               	clrf	(_currentMenu)^080h	;volatile
  7811  1FE6  2FFF               	goto	l2363
  7812                           	line	424
  7813                           	
  7814  1FE7                     l11976:	
  7815                           ;Main.c: 424: return;
  7816  1FE7  2FFF               	goto	l2363
  7817                           	line	425
  7818                           ;Main.c: 425: default:
  7819                           	
  7820  1FE8                     l2364:	
  7821                           	line	426
  7822                           ;Main.c: 426: break;
  7823  1FE8  2FB0               	goto	l11956
  7824                           	line	427
  7825                           	
  7826  1FE9                     l11978:	
  7827                           ;Main.c: 427: }
  7828  1FE9  2FB0               	goto	l11956
  7829                           	line	403
  7830                           	
  7831  1FEA                     l2356:	
  7832                           	
  7833  1FEA                     l11980:	
  7834  1FEA  1683               	bsf	status, 5	;RP0=1, select bank1
  7835  1FEB  1303               	bcf	status, 6	;RP1=0, select bank1
  7836  1FEC  084B               	movf	(_buttonPressed)^080h,w	;volatile
  7837                           	; Switch size 1, requested type "space"
  7838                           ; Number of cases is 5, Range of values is 1 to 5
  7839                           ; switch strategies available:
  7840                           ; Name         Instructions Cycles
  7841                           ; simple_byte           16     9 (average)
  7842                           ; direct_byte           26    11 (fixed)
  7843                           ; jumptable            263     9 (fixed)
  7844                           ;	Chosen strategy is simple_byte
  7845                           
  7846                           	opt asmopt_off
  7847  1FED  3A01               	xorlw	1^0	; case 1
  7848  1FEE  1903               	skipnz
  7849  1FEF  2FBC               	goto	l2357
  7850  1FF0  3A03               	xorlw	2^1	; case 2
  7851  1FF1  1903               	skipnz
  7852  1FF2  2FBE               	goto	l2359
  7853  1FF3  3A01               	xorlw	3^2	; case 3
  7854  1FF4  1903               	skipnz
  7855  1FF5  2FC0               	goto	l11962
  7856  1FF6  3A07               	xorlw	4^3	; case 4
  7857  1FF7  1903               	skipnz
  7858  1FF8  2FD2               	goto	l11966
  7859  1FF9  3A01               	xorlw	5^4	; case 5
  7860  1FFA  1903               	skipnz
  7861  1FFB  2FE2               	goto	l11970
  7862  1FFC  2FB0               	goto	l11956
  7863                           	opt asmopt_on
  7864                           
  7865                           	line	427
  7866                           	
  7867  1FFD                     l2358:	
  7868  1FFD  2FB0               	goto	l11956
  7869                           	line	428
  7870                           	
  7871  1FFE                     l2365:	
  7872                           	line	396
  7873  1FFE  2FB0               	goto	l11956
  7874                           	
  7875  1FFF                     l2366:	
  7876                           	line	429
  7877                           	
  7878  1FFF                     l2363:	
  7879  1FFF  0008               	return
  7880                           	opt stack 0
  7881                           GLOBAL	__end_of_calibrateIR
  7882  2000                     	__end_of_calibrateIR:
  7883 ;; =============== function _calibrateIR ends ============
  7884                           
  7885                           	signat	_calibrateIR,88
  7886                           	global	_UpdateDisplay
  7887                           psect	text1121,local,class=CODE,delta=2
  7888                           global __ptext1121
  7889  0401                     __ptext1121:
  7890                           
  7891 ;; *************** function _UpdateDisplay *****************
  7892 ;; Defined at:
  7893 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;		None
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  tempDist        2   59[BANK0 ] int 
  7898 ;;  LCDOutput      16   43[BANK0 ] unsigned char [16]
  7899 ;; Return value:  Size  Location     Type
  7900 ;;		None               void
  7901 ;; Registers used:
  7902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7908 ;;      Params:         0       0       0       0       0
  7909 ;;      Locals:         0      18       0       0       0
  7910 ;;      Temps:          0       4       0       0       0
  7911 ;;      Totals:         0      22       0       0       0
  7912 ;;Total ram usage:       22 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    4
  7915 ;; This function calls:
  7916 ;;		_lcd_write_control
  7917 ;;		_sprintf
  7918 ;;		_lcd_set_cursor
  7919 ;;		_lcd_write_string
  7920 ;;		___awmod
  7921 ;;		___awdiv
  7922 ;; This function is called by:
  7923 ;;		_main
  7924 ;;		_calibrateIR
  7925 ;;		_ChargeMode
  7926 ;;		_robotFollow
  7927 ;;		_robot_turnRight
  7928 ;;		_robotMoveSpeed
  7929 ;;		_robotTurnSpeed
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           psect	text1121
  7933                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7934                           	line	139
  7935                           	global	__size_of_UpdateDisplay
  7936  027D                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  7937                           	
  7938  0401                     _UpdateDisplay:	
  7939                           	opt	stack 2
  7940                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7941                           	line	140
  7942                           	
  7943  0401                     l11868:	
  7944                           ;HMI.c: 140: char LCDOutput[16] = "";
  7945  0401  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  7946  0402  0084               	movwf	fsr0
  7947  0403  3090               	movlw	low(UpdateDisplay@F1263)
  7948  0404  1283               	bcf	status, 5	;RP0=0, select bank0
  7949  0405  1303               	bcf	status, 6	;RP1=0, select bank0
  7950  0406  00C7               	movwf	(??_UpdateDisplay+0)+0
  7951  0407  0804               	movf	fsr0,w
  7952  0408  00C8               	movwf	((??_UpdateDisplay+0)+0+1)
  7953  0409  3010               	movlw	16
  7954  040A  00C9               	movwf	((??_UpdateDisplay+0)+0+2)
  7955  040B                     u5170:
  7956  040B  0847               	movf	(??_UpdateDisplay+0)+0,w
  7957  040C  0084               	movwf	fsr0
  7958  040D  1783               	bsf	status, 7	;select IRP bank3
  7959                           	
  7960  040E  0800               	movf	indf,w
  7961  040F  00CA               	movwf	((??_UpdateDisplay+0)+0+3)
  7962  0410  0AC7               	incf	(??_UpdateDisplay+0)+0,f
  7963  0411  0848               	movf	((??_UpdateDisplay+0)+0+1),w
  7964  0412  0084               	movwf	fsr0
  7965  0413  1383               	bcf	status, 7	;select IRP bank0
  7966                           	
  7967  0414  084A               	movf	((??_UpdateDisplay+0)+0+3),w
  7968  0415  0080               	movwf	indf
  7969  0416  0AC8               	incf	((??_UpdateDisplay+0)+0+1),f
  7970  0417  0BC9               	decfsz	((??_UpdateDisplay+0)+0+2),f
  7971  0418  2C0B               	goto	u5170
  7972                           	line	141
  7973                           ;HMI.c: 141: switch (currentMenu)
  7974  0419  2E6D               	goto	l11944
  7975                           	line	143
  7976                           ;HMI.c: 142: {
  7977                           ;HMI.c: 143: case 0:
  7978                           	
  7979  041A                     l4672:	
  7980                           	line	144
  7981                           	
  7982  041A                     l11870:	
  7983                           ;HMI.c: 144: lcd_write_control(0b00000001);
  7984  041A  3001               	movlw	(01h)
  7985  041B  160A  158A  2246   	fcall	_lcd_write_control
              120A  118A         
  7986                           	line	145
  7987                           	
  7988  0420                     l11872:	
  7989                           ;HMI.c: 145: sprintf(LCDOutput,"IR:%3dcm D:%3d",Disp1, Disp2);
  7990  0420  303B               	movlw	((STR_13-__stringbase))&0ffh
  7991  0421  1283               	bcf	status, 5	;RP0=0, select bank0
  7992  0422  1303               	bcf	status, 6	;RP1=0, select bank0
  7993  0423  00C7               	movwf	(??_UpdateDisplay+0)+0
  7994  0424  0847               	movf	(??_UpdateDisplay+0)+0,w
  7995  0425  00B4               	movwf	(?_sprintf)
  7996  0426  1683               	bsf	status, 5	;RP0=1, select bank1
  7997  0427  1303               	bcf	status, 6	;RP1=0, select bank1
  7998  0428  0825               	movf	(_Disp1+1)^080h,w
  7999  0429  1283               	bcf	status, 5	;RP0=0, select bank0
  8000  042A  1303               	bcf	status, 6	;RP1=0, select bank0
  8001  042B  01B6               	clrf	1+(?_sprintf)+01h
  8002  042C  07B6               	addwf	1+(?_sprintf)+01h
  8003  042D  1683               	bsf	status, 5	;RP0=1, select bank1
  8004  042E  1303               	bcf	status, 6	;RP1=0, select bank1
  8005  042F  0824               	movf	(_Disp1)^080h,w
  8006  0430  1283               	bcf	status, 5	;RP0=0, select bank0
  8007  0431  1303               	bcf	status, 6	;RP1=0, select bank0
  8008  0432  01B5               	clrf	0+(?_sprintf)+01h
  8009  0433  07B5               	addwf	0+(?_sprintf)+01h
  8010                           
  8011  0434  1683               	bsf	status, 5	;RP0=1, select bank1
  8012  0435  1303               	bcf	status, 6	;RP1=0, select bank1
  8013  0436  0827               	movf	(_Disp2+1)^080h,w
  8014  0437  1283               	bcf	status, 5	;RP0=0, select bank0
  8015  0438  1303               	bcf	status, 6	;RP1=0, select bank0
  8016  0439  01B8               	clrf	1+(?_sprintf)+03h
  8017  043A  07B8               	addwf	1+(?_sprintf)+03h
  8018  043B  1683               	bsf	status, 5	;RP0=1, select bank1
  8019  043C  1303               	bcf	status, 6	;RP1=0, select bank1
  8020  043D  0826               	movf	(_Disp2)^080h,w
  8021  043E  1283               	bcf	status, 5	;RP0=0, select bank0
  8022  043F  1303               	bcf	status, 6	;RP1=0, select bank0
  8023  0440  01B7               	clrf	0+(?_sprintf)+03h
  8024  0441  07B7               	addwf	0+(?_sprintf)+03h
  8025                           
  8026  0442  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  8027  0443  120A  158A  2005   	fcall	_sprintf
              120A  118A         
  8028                           	line	146
  8029                           	
  8030  0448                     l11874:	
  8031                           ;HMI.c: 146: lcd_set_cursor(0x00);
  8032  0448  3000               	movlw	(0)
  8033  0449  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8034                           	line	147
  8035                           ;HMI.c: 147: lcd_write_string(LCDOutput);
  8036  044E  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  8037  044F  1283               	bcf	status, 5	;RP0=0, select bank0
  8038  0450  1303               	bcf	status, 6	;RP1=0, select bank0
  8039  0451  00A7               	movwf	(?_lcd_write_string)
  8040  0452  3000               	movlw	(0x0/2)
  8041  0453  00A8               	movwf	(?_lcd_write_string+1)
  8042  0454  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8043                           	line	148
  8044                           	
  8045  0459                     l11876:	
  8046                           ;HMI.c: 148: lcd_set_cursor(0x40);
  8047  0459  3040               	movlw	(040h)
  8048  045A  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8049                           	line	149
  8050                           	
  8051  045F                     l11878:	
  8052                           ;HMI.c: 149: if (pos > 0)
  8053  045F  1683               	bsf	status, 5	;RP0=1, select bank1
  8054  0460  1303               	bcf	status, 6	;RP1=0, select bank1
  8055  0461  0837               	movf	(_pos+1)^080h,w
  8056  0462  3A80               	xorlw	80h
  8057  0463  00FF               	movwf	btemp+1
  8058  0464  3080               	movlw	(high(01h))^80h
  8059  0465  027F               	subwf	btemp+1,w
  8060  0466  1D03               	skipz
  8061  0467  2C6A               	goto	u5185
  8062  0468  3001               	movlw	low(01h)
  8063  0469  0236               	subwf	(_pos)^080h,w
  8064  046A                     u5185:
  8065                           
  8066  046A  1C03               	skipc
  8067  046B  2C6D               	goto	u5181
  8068  046C  2C6E               	goto	u5180
  8069  046D                     u5181:
  8070  046D  2C81               	goto	l11882
  8071  046E                     u5180:
  8072                           	line	150
  8073                           	
  8074  046E                     l11880:	
  8075                           ;HMI.c: 150: lcd_write_string(shortMenuStrings[pos - 1]);
  8076  046E  1683               	bsf	status, 5	;RP0=1, select bank1
  8077  046F  1303               	bcf	status, 6	;RP1=0, select bank1
  8078  0470  0836               	movf	(_pos)^080h,w
  8079  0471  3EFF               	addlw	0FFh
  8080  0472  3EDD               	addlw	_shortMenuStrings&0ffh
  8081  0473  0084               	movwf	fsr0
  8082  0474  1383               	bcf	status, 7	;select IRP bank1
  8083  0475  0800               	movf	indf,w
  8084  0476  1283               	bcf	status, 5	;RP0=0, select bank0
  8085  0477  1303               	bcf	status, 6	;RP1=0, select bank0
  8086  0478  00A7               	movwf	(?_lcd_write_string)
  8087  0479  3080               	movlw	80h
  8088  047A  00A8               	movwf	(?_lcd_write_string+1)
  8089  047B  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8090  0480  2C94               	goto	l11884
  8091                           	line	151
  8092                           	
  8093  0481                     l4673:	
  8094                           	line	152
  8095                           	
  8096  0481                     l11882:	
  8097                           ;HMI.c: 151: else
  8098                           ;HMI.c: 152: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  8099  0481  1683               	bsf	status, 5	;RP0=1, select bank1
  8100  0482  1303               	bcf	status, 6	;RP1=0, select bank1
  8101  0483  0836               	movf	(_pos)^080h,w
  8102  0484  3E05               	addlw	05h
  8103  0485  3EDD               	addlw	_shortMenuStrings&0ffh
  8104  0486  0084               	movwf	fsr0
  8105  0487  1383               	bcf	status, 7	;select IRP bank1
  8106  0488  0800               	movf	indf,w
  8107  0489  1283               	bcf	status, 5	;RP0=0, select bank0
  8108  048A  1303               	bcf	status, 6	;RP1=0, select bank0
  8109  048B  00A7               	movwf	(?_lcd_write_string)
  8110  048C  3080               	movlw	80h
  8111  048D  00A8               	movwf	(?_lcd_write_string+1)
  8112  048E  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8113  0493  2C94               	goto	l11884
  8114                           	
  8115  0494                     l4674:	
  8116                           	line	153
  8117                           	
  8118  0494                     l11884:	
  8119                           ;HMI.c: 153: lcd_set_cursor(0x44);
  8120  0494  3044               	movlw	(044h)
  8121  0495  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8122                           	line	154
  8123                           	
  8124  049A                     l11886:	
  8125                           ;HMI.c: 154: lcd_write_string(menuStrings[pos]);
  8126  049A  1683               	bsf	status, 5	;RP0=1, select bank1
  8127  049B  1303               	bcf	status, 6	;RP1=0, select bank1
  8128  049C  0836               	movf	(_pos)^080h,w
  8129  049D  3ED7               	addlw	_menuStrings&0ffh
  8130  049E  0084               	movwf	fsr0
  8131  049F  1383               	bcf	status, 7	;select IRP bank1
  8132  04A0  0800               	movf	indf,w
  8133  04A1  1283               	bcf	status, 5	;RP0=0, select bank0
  8134  04A2  1303               	bcf	status, 6	;RP1=0, select bank0
  8135  04A3  00A7               	movwf	(?_lcd_write_string)
  8136  04A4  3080               	movlw	80h
  8137  04A5  00A8               	movwf	(?_lcd_write_string+1)
  8138  04A6  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8139                           	line	155
  8140                           ;HMI.c: 155: lcd_set_cursor(0x4D);
  8141  04AB  304D               	movlw	(04Dh)
  8142  04AC  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8143                           	line	156
  8144                           	
  8145  04B1                     l11888:	
  8146                           ;HMI.c: 156: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  8147  04B1  3006               	movlw	low(06h)
  8148  04B2  1283               	bcf	status, 5	;RP0=0, select bank0
  8149  04B3  1303               	bcf	status, 6	;RP1=0, select bank0
  8150  04B4  00A0               	movwf	(?___awmod)
  8151  04B5  3000               	movlw	high(06h)
  8152  04B6  00A1               	movwf	((?___awmod))+1
  8153  04B7  1683               	bsf	status, 5	;RP0=1, select bank1
  8154  04B8  1303               	bcf	status, 6	;RP1=0, select bank1
  8155  04B9  0836               	movf	(_pos)^080h,w
  8156  04BA  3E01               	addlw	low(01h)
  8157  04BB  1283               	bcf	status, 5	;RP0=0, select bank0
  8158  04BC  1303               	bcf	status, 6	;RP1=0, select bank0
  8159  04BD  00A2               	movwf	0+(?___awmod)+02h
  8160  04BE  1683               	bsf	status, 5	;RP0=1, select bank1
  8161  04BF  1303               	bcf	status, 6	;RP1=0, select bank1
  8162  04C0  0837               	movf	(_pos+1)^080h,w
  8163  04C1  1803               	skipnc
  8164  04C2  3E01               	addlw	1
  8165  04C3  3E00               	addlw	high(01h)
  8166  04C4  1283               	bcf	status, 5	;RP0=0, select bank0
  8167  04C5  1303               	bcf	status, 6	;RP1=0, select bank0
  8168  04C6  00A3               	movwf	1+0+(?___awmod)+02h
  8169  04C7  160A  158A  2728   	fcall	___awmod
              120A  118A         
  8170  04CC  1283               	bcf	status, 5	;RP0=0, select bank0
  8171  04CD  1303               	bcf	status, 6	;RP1=0, select bank0
  8172  04CE  0820               	movf	(0+(?___awmod)),w
  8173  04CF  3EDD               	addlw	_shortMenuStrings&0ffh
  8174  04D0  0084               	movwf	fsr0
  8175  04D1  1383               	bcf	status, 7	;select IRP bank1
  8176  04D2  0800               	movf	indf,w
  8177  04D3  00A7               	movwf	(?_lcd_write_string)
  8178  04D4  3080               	movlw	80h
  8179  04D5  00A8               	movwf	(?_lcd_write_string+1)
  8180  04D6  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8181                           	line	157
  8182                           ;HMI.c: 157: break;
  8183  04DB  2E7D               	goto	l4688
  8184                           	line	158
  8185                           ;HMI.c: 158: case 1:
  8186                           	
  8187  04DC                     l4676:	
  8188                           	line	159
  8189                           	
  8190  04DC                     l11890:	
  8191                           ;HMI.c: 159: lcd_write_control(0b00000001);
  8192  04DC  3001               	movlw	(01h)
  8193  04DD  160A  158A  2246   	fcall	_lcd_write_control
              120A  118A         
  8194                           	line	160
  8195                           ;HMI.c: 160: lcd_set_cursor(0x00);
  8196  04E2  3000               	movlw	(0)
  8197  04E3  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8198                           	line	161
  8199                           	
  8200  04E8                     l11892:	
  8201                           ;HMI.c: 161: lcd_write_string("Zero Step_Motor");
  8202  04E8  302B               	movlw	low((STR_14-__stringbase))
  8203  04E9  1283               	bcf	status, 5	;RP0=0, select bank0
  8204  04EA  1303               	bcf	status, 6	;RP1=0, select bank0
  8205  04EB  00A7               	movwf	(?_lcd_write_string)
  8206  04EC  3080               	movlw	80h
  8207  04ED  00A8               	movwf	(?_lcd_write_string+1)
  8208  04EE  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8209                           	line	162
  8210                           	
  8211  04F3                     l11894:	
  8212                           ;HMI.c: 162: lcd_set_cursor(0x40);
  8213  04F3  3040               	movlw	(040h)
  8214  04F4  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8215                           	line	163
  8216                           ;HMI.c: 163: lcd_write_string("<<<");
  8217  04F9  30A8               	movlw	low((STR_15-__stringbase))
  8218  04FA  1283               	bcf	status, 5	;RP0=0, select bank0
  8219  04FB  1303               	bcf	status, 6	;RP1=0, select bank0
  8220  04FC  00A7               	movwf	(?_lcd_write_string)
  8221  04FD  3080               	movlw	80h
  8222  04FE  00A8               	movwf	(?_lcd_write_string+1)
  8223  04FF  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8224                           	line	164
  8225                           	
  8226  0504                     l11896:	
  8227                           ;HMI.c: 164: lcd_set_cursor(0x44);
  8228  0504  3044               	movlw	(044h)
  8229  0505  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8230                           	line	165
  8231                           	
  8232  050A                     l11898:	
  8233                           ;HMI.c: 165: lcd_write_string("CONFIRM");
  8234  050A  3097               	movlw	low((STR_16-__stringbase))
  8235  050B  1283               	bcf	status, 5	;RP0=0, select bank0
  8236  050C  1303               	bcf	status, 6	;RP1=0, select bank0
  8237  050D  00A7               	movwf	(?_lcd_write_string)
  8238  050E  3080               	movlw	80h
  8239  050F  00A8               	movwf	(?_lcd_write_string+1)
  8240  0510  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8241                           	line	166
  8242                           ;HMI.c: 166: lcd_set_cursor(0x4D);
  8243  0515  304D               	movlw	(04Dh)
  8244  0516  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8245                           	line	167
  8246                           	
  8247  051B                     l11900:	
  8248                           ;HMI.c: 167: lcd_write_string(">>>");
  8249  051B  30AC               	movlw	low((STR_17-__stringbase))
  8250  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  8251  051D  1303               	bcf	status, 6	;RP1=0, select bank0
  8252  051E  00A7               	movwf	(?_lcd_write_string)
  8253  051F  3080               	movlw	80h
  8254  0520  00A8               	movwf	(?_lcd_write_string+1)
  8255  0521  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8256                           	line	168
  8257                           ;HMI.c: 168: break;
  8258  0526  2E7D               	goto	l4688
  8259                           	line	169
  8260                           ;HMI.c: 169: case 2:
  8261                           	
  8262  0527                     l4677:	
  8263                           	line	170
  8264                           	
  8265  0527                     l11902:	
  8266                           ;HMI.c: 170: lcd_write_control(0b00000001);
  8267  0527  3001               	movlw	(01h)
  8268  0528  160A  158A  2246   	fcall	_lcd_write_control
              120A  118A         
  8269                           	line	171
  8270                           ;HMI.c: 171: lcd_set_cursor(0x00);
  8271  052D  3000               	movlw	(0)
  8272  052E  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8273                           	line	172
  8274                           	
  8275  0533                     l11904:	
  8276                           ;HMI.c: 172: lcd_write_string(" Charging Mode ");
  8277  0533  300B               	movlw	low((STR_18-__stringbase))
  8278  0534  1283               	bcf	status, 5	;RP0=0, select bank0
  8279  0535  1303               	bcf	status, 6	;RP1=0, select bank0
  8280  0536  00A7               	movwf	(?_lcd_write_string)
  8281  0537  3080               	movlw	80h
  8282  0538  00A8               	movwf	(?_lcd_write_string+1)
  8283  0539  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8284                           	line	173
  8285                           	
  8286  053E                     l11906:	
  8287                           ;HMI.c: 173: lcd_set_cursor(0x40);
  8288  053E  3040               	movlw	(040h)
  8289  053F  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8290                           	line	174
  8291                           ;HMI.c: 174: sprintf(LCDOutput,"%dmA", BattCharge);
  8292  0544  309F               	movlw	((STR_19-__stringbase))&0ffh
  8293  0545  1283               	bcf	status, 5	;RP0=0, select bank0
  8294  0546  1303               	bcf	status, 6	;RP1=0, select bank0
  8295  0547  00C7               	movwf	(??_UpdateDisplay+0)+0
  8296  0548  0847               	movf	(??_UpdateDisplay+0)+0,w
  8297  0549  00B4               	movwf	(?_sprintf)
  8298  054A  1683               	bsf	status, 5	;RP0=1, select bank1
  8299  054B  1303               	bcf	status, 6	;RP1=0, select bank1
  8300  054C  0821               	movf	(_BattCharge+1)^080h,w
  8301  054D  1283               	bcf	status, 5	;RP0=0, select bank0
  8302  054E  1303               	bcf	status, 6	;RP1=0, select bank0
  8303  054F  01B6               	clrf	1+(?_sprintf)+01h
  8304  0550  07B6               	addwf	1+(?_sprintf)+01h
  8305  0551  1683               	bsf	status, 5	;RP0=1, select bank1
  8306  0552  1303               	bcf	status, 6	;RP1=0, select bank1
  8307  0553  0820               	movf	(_BattCharge)^080h,w
  8308  0554  1283               	bcf	status, 5	;RP0=0, select bank0
  8309  0555  1303               	bcf	status, 6	;RP1=0, select bank0
  8310  0556  01B5               	clrf	0+(?_sprintf)+01h
  8311  0557  07B5               	addwf	0+(?_sprintf)+01h
  8312                           
  8313  0558  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  8314  0559  120A  158A  2005   	fcall	_sprintf
              120A  118A         
  8315                           	line	175
  8316                           ;HMI.c: 175: lcd_write_string(LCDOutput);
  8317  055E  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  8318  055F  1283               	bcf	status, 5	;RP0=0, select bank0
  8319  0560  1303               	bcf	status, 6	;RP1=0, select bank0
  8320  0561  00A7               	movwf	(?_lcd_write_string)
  8321  0562  3000               	movlw	(0x0/2)
  8322  0563  00A8               	movwf	(?_lcd_write_string+1)
  8323  0564  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8324                           	line	176
  8325                           	
  8326  0569                     l11908:	
  8327                           ;HMI.c: 176: lcd_set_cursor(0x4D);
  8328  0569  304D               	movlw	(04Dh)
  8329  056A  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8330                           	line	177
  8331                           ;HMI.c: 177: switch(BattState)
  8332  056F  2DB9               	goto	l11924
  8333                           	line	179
  8334                           ;HMI.c: 178: {
  8335                           ;HMI.c: 179: case 0:
  8336                           	
  8337  0570                     l4679:	
  8338                           	line	180
  8339                           	
  8340  0570                     l11910:	
  8341                           ;HMI.c: 180: lcd_write_string("NC");
  8342  0570  30C7               	movlw	low((STR_20-__stringbase))
  8343  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  8344  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  8345  0573  00A7               	movwf	(?_lcd_write_string)
  8346  0574  3080               	movlw	80h
  8347  0575  00A8               	movwf	(?_lcd_write_string+1)
  8348  0576  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8349                           	line	181
  8350                           ;HMI.c: 181: break;
  8351  057B  2DD4               	goto	l11926
  8352                           	line	182
  8353                           ;HMI.c: 182: case 1:
  8354                           	
  8355  057C                     l4681:	
  8356                           	line	183
  8357                           	
  8358  057C                     l11912:	
  8359                           ;HMI.c: 183: lcd_write_string("RC");
  8360  057C  30CA               	movlw	low((STR_21-__stringbase))
  8361  057D  1283               	bcf	status, 5	;RP0=0, select bank0
  8362  057E  1303               	bcf	status, 6	;RP1=0, select bank0
  8363  057F  00A7               	movwf	(?_lcd_write_string)
  8364  0580  3080               	movlw	80h
  8365  0581  00A8               	movwf	(?_lcd_write_string+1)
  8366  0582  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8367                           	line	184
  8368                           ;HMI.c: 184: break;
  8369  0587  2DD4               	goto	l11926
  8370                           	line	185
  8371                           ;HMI.c: 185: case 2:
  8372                           	
  8373  0588                     l4682:	
  8374                           	line	186
  8375                           	
  8376  0588                     l11914:	
  8377                           ;HMI.c: 186: lcd_write_string("FC");
  8378  0588  30C4               	movlw	low((STR_22-__stringbase))
  8379  0589  1283               	bcf	status, 5	;RP0=0, select bank0
  8380  058A  1303               	bcf	status, 6	;RP1=0, select bank0
  8381  058B  00A7               	movwf	(?_lcd_write_string)
  8382  058C  3080               	movlw	80h
  8383  058D  00A8               	movwf	(?_lcd_write_string+1)
  8384  058E  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8385                           	line	187
  8386                           ;HMI.c: 187: break;
  8387  0593  2DD4               	goto	l11926
  8388                           	line	188
  8389                           ;HMI.c: 188: case 3:
  8390                           	
  8391  0594                     l4683:	
  8392                           	line	189
  8393                           	
  8394  0594                     l11916:	
  8395                           ;HMI.c: 189: lcd_write_string("TC");
  8396  0594  30CD               	movlw	low((STR_23-__stringbase))
  8397  0595  1283               	bcf	status, 5	;RP0=0, select bank0
  8398  0596  1303               	bcf	status, 6	;RP1=0, select bank0
  8399  0597  00A7               	movwf	(?_lcd_write_string)
  8400  0598  3080               	movlw	80h
  8401  0599  00A8               	movwf	(?_lcd_write_string+1)
  8402  059A  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8403                           	line	190
  8404                           ;HMI.c: 190: break;
  8405  059F  2DD4               	goto	l11926
  8406                           	line	191
  8407                           ;HMI.c: 191: case 4:
  8408                           	
  8409  05A0                     l4684:	
  8410                           	line	192
  8411                           	
  8412  05A0                     l11918:	
  8413                           ;HMI.c: 192: lcd_write_string("Wa");
  8414  05A0  30D0               	movlw	low((STR_24-__stringbase))
  8415  05A1  1283               	bcf	status, 5	;RP0=0, select bank0
  8416  05A2  1303               	bcf	status, 6	;RP1=0, select bank0
  8417  05A3  00A7               	movwf	(?_lcd_write_string)
  8418  05A4  3080               	movlw	80h
  8419  05A5  00A8               	movwf	(?_lcd_write_string+1)
  8420  05A6  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8421                           	line	193
  8422                           ;HMI.c: 193: break;
  8423  05AB  2DD4               	goto	l11926
  8424                           	line	194
  8425                           ;HMI.c: 194: case 5:
  8426                           	
  8427  05AC                     l4685:	
  8428                           	line	195
  8429                           	
  8430  05AC                     l11920:	
  8431                           ;HMI.c: 195: lcd_write_string("FC");
  8432  05AC  30C4               	movlw	low((STR_25-__stringbase))
  8433  05AD  1283               	bcf	status, 5	;RP0=0, select bank0
  8434  05AE  1303               	bcf	status, 6	;RP1=0, select bank0
  8435  05AF  00A7               	movwf	(?_lcd_write_string)
  8436  05B0  3080               	movlw	80h
  8437  05B1  00A8               	movwf	(?_lcd_write_string+1)
  8438  05B2  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8439                           	line	196
  8440                           ;HMI.c: 196: break;
  8441  05B7  2DD4               	goto	l11926
  8442                           	line	197
  8443                           	
  8444  05B8                     l11922:	
  8445                           ;HMI.c: 197: }
  8446  05B8  2DD4               	goto	l11926
  8447                           	line	177
  8448                           	
  8449  05B9                     l4678:	
  8450                           	
  8451  05B9                     l11924:	
  8452                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8453                           ; Switch size 1, requested type "space"
  8454                           ; Number of cases is 1, Range of values is 0 to 0
  8455                           ; switch strategies available:
  8456                           ; Name         Instructions Cycles
  8457                           ; simple_byte            4     3 (average)
  8458                           ; direct_byte           11     8 (fixed)
  8459                           ; jumptable            260     6 (fixed)
  8460                           ; rangetable             5     6 (fixed)
  8461                           ; spacedrange            8     9 (fixed)
  8462                           ; locatedrange           1     3 (fixed)
  8463                           ;	Chosen strategy is simple_byte
  8464                           
  8465  05B9  1683               	bsf	status, 5	;RP0=1, select bank1
  8466  05BA  1303               	bcf	status, 6	;RP1=0, select bank1
  8467  05BB  0823               	movf (_BattState+1)^080h,w
  8468                           	opt asmopt_off
  8469  05BC  3A00               	xorlw	0^0	; case 0
  8470  05BD  1903               	skipnz
  8471  05BE  2DC0               	goto	l12564
  8472  05BF  2DD4               	goto	l11926
  8473                           	opt asmopt_on
  8474                           	
  8475  05C0                     l12564:	
  8476                           ; Switch size 1, requested type "space"
  8477                           ; Number of cases is 6, Range of values is 0 to 5
  8478                           ; switch strategies available:
  8479                           ; Name         Instructions Cycles
  8480                           ; simple_byte           19    10 (average)
  8481                           ; direct_byte           26     8 (fixed)
  8482                           ; jumptable            260     6 (fixed)
  8483                           ; rangetable            10     6 (fixed)
  8484                           ; spacedrange           18     9 (fixed)
  8485                           ; locatedrange           6     3 (fixed)
  8486                           ;	Chosen strategy is simple_byte
  8487                           
  8488  05C0  0822               	movf (_BattState)^080h,w
  8489                           	opt asmopt_off
  8490  05C1  3A00               	xorlw	0^0	; case 0
  8491  05C2  1903               	skipnz
  8492  05C3  2D70               	goto	l11910
  8493  05C4  3A01               	xorlw	1^0	; case 1
  8494  05C5  1903               	skipnz
  8495  05C6  2D7C               	goto	l11912
  8496  05C7  3A03               	xorlw	2^1	; case 2
  8497  05C8  1903               	skipnz
  8498  05C9  2D88               	goto	l11914
  8499  05CA  3A01               	xorlw	3^2	; case 3
  8500  05CB  1903               	skipnz
  8501  05CC  2D94               	goto	l11916
  8502  05CD  3A07               	xorlw	4^3	; case 4
  8503  05CE  1903               	skipnz
  8504  05CF  2DA0               	goto	l11918
  8505  05D0  3A01               	xorlw	5^4	; case 5
  8506  05D1  1903               	skipnz
  8507  05D2  2DAC               	goto	l11920
  8508  05D3  2DD4               	goto	l11926
  8509                           	opt asmopt_on
  8510                           
  8511                           	line	197
  8512                           	
  8513  05D4                     l4680:	
  8514                           	line	199
  8515                           	
  8516  05D4                     l11926:	
  8517                           ;HMI.c: 199: lcd_set_cursor(0x44);
  8518  05D4  3044               	movlw	(044h)
  8519  05D5  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8520                           	line	200
  8521                           	
  8522  05DA                     l11928:	
  8523                           ;HMI.c: 200: lcd_write_string("  EXIT  ");
  8524  05DA  3059               	movlw	low((STR_26-__stringbase))
  8525  05DB  1283               	bcf	status, 5	;RP0=0, select bank0
  8526  05DC  1303               	bcf	status, 6	;RP1=0, select bank0
  8527  05DD  00A7               	movwf	(?_lcd_write_string)
  8528  05DE  3080               	movlw	80h
  8529  05DF  00A8               	movwf	(?_lcd_write_string+1)
  8530  05E0  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8531                           	line	201
  8532                           ;HMI.c: 201: break;
  8533  05E5  2E7D               	goto	l4688
  8534                           	line	202
  8535                           ;HMI.c: 202: case 3:
  8536                           	
  8537  05E6                     l4686:	
  8538                           	line	203
  8539                           	
  8540  05E6                     l11930:	
  8541                           ;HMI.c: 203: lcd_write_control(0b00000001);
  8542  05E6  3001               	movlw	(01h)
  8543  05E7  160A  158A  2246   	fcall	_lcd_write_control
              120A  118A         
  8544                           	line	204
  8545                           	
  8546  05EC                     l11932:	
  8547                           ;HMI.c: 204: sprintf(LCDOutput,"IR:%3dcm CP:%3d",adcVal, RobotPos);
  8548  05EC  301B               	movlw	((STR_27-__stringbase))&0ffh
  8549  05ED  1283               	bcf	status, 5	;RP0=0, select bank0
  8550  05EE  1303               	bcf	status, 6	;RP1=0, select bank0
  8551  05EF  00C7               	movwf	(??_UpdateDisplay+0)+0
  8552  05F0  0847               	movf	(??_UpdateDisplay+0)+0,w
  8553  05F1  00B4               	movwf	(?_sprintf)
  8554  05F2  086F               	movf	(_adcVal+1),w	;volatile
  8555  05F3  01B6               	clrf	1+(?_sprintf)+01h
  8556  05F4  07B6               	addwf	1+(?_sprintf)+01h
  8557  05F5  086E               	movf	(_adcVal),w	;volatile
  8558  05F6  01B5               	clrf	0+(?_sprintf)+01h
  8559  05F7  07B5               	addwf	0+(?_sprintf)+01h
  8560                           
  8561  05F8  1683               	bsf	status, 5	;RP0=1, select bank1
  8562  05F9  1303               	bcf	status, 6	;RP1=0, select bank1
  8563  05FA  0847               	movf	(_RobotPos)^080h,w
  8564  05FB  1283               	bcf	status, 5	;RP0=0, select bank0
  8565  05FC  1303               	bcf	status, 6	;RP1=0, select bank0
  8566  05FD  00C8               	movwf	(??_UpdateDisplay+1)+0
  8567  05FE  01C9               	clrf	(??_UpdateDisplay+1)+0+1
  8568  05FF  0848               	movf	0+(??_UpdateDisplay+1)+0,w
  8569  0600  00B7               	movwf	0+(?_sprintf)+03h
  8570  0601  0849               	movf	1+(??_UpdateDisplay+1)+0,w
  8571  0602  00B8               	movwf	1+(?_sprintf)+03h
  8572  0603  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  8573  0604  120A  158A  2005   	fcall	_sprintf
              120A  118A         
  8574                           	line	205
  8575                           	
  8576  0609                     l11934:	
  8577                           ;HMI.c: 205: lcd_set_cursor(0x00);
  8578  0609  3000               	movlw	(0)
  8579  060A  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8580                           	line	206
  8581                           ;HMI.c: 206: lcd_write_string(LCDOutput);
  8582  060F  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  8583  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  8584  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  8585  0612  00A7               	movwf	(?_lcd_write_string)
  8586  0613  3000               	movlw	(0x0/2)
  8587  0614  00A8               	movwf	(?_lcd_write_string+1)
  8588  0615  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8589                           	line	207
  8590                           	
  8591  061A                     l11936:	
  8592                           ;HMI.c: 207: int tempDist = (TotalDistTravelled/ 10);
  8593  061A  300A               	movlw	low(0Ah)
  8594  061B  1283               	bcf	status, 5	;RP0=0, select bank0
  8595  061C  1303               	bcf	status, 6	;RP1=0, select bank0
  8596  061D  00A0               	movwf	(?___awdiv)
  8597  061E  3000               	movlw	high(0Ah)
  8598  061F  00A1               	movwf	((?___awdiv))+1
  8599  0620  1683               	bsf	status, 5	;RP0=1, select bank1
  8600  0621  1303               	bcf	status, 6	;RP1=0, select bank1
  8601  0622  082D               	movf	(_TotalDistTravelled+1)^080h,w
  8602  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  8603  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  8604  0625  01A3               	clrf	1+(?___awdiv)+02h
  8605  0626  07A3               	addwf	1+(?___awdiv)+02h
  8606  0627  1683               	bsf	status, 5	;RP0=1, select bank1
  8607  0628  1303               	bcf	status, 6	;RP1=0, select bank1
  8608  0629  082C               	movf	(_TotalDistTravelled)^080h,w
  8609  062A  1283               	bcf	status, 5	;RP0=0, select bank0
  8610  062B  1303               	bcf	status, 6	;RP1=0, select bank0
  8611  062C  01A2               	clrf	0+(?___awdiv)+02h
  8612  062D  07A2               	addwf	0+(?___awdiv)+02h
  8613                           
  8614  062E  160A  118A  21A1   	fcall	___awdiv
              120A  118A         
  8615  0633  1283               	bcf	status, 5	;RP0=0, select bank0
  8616  0634  1303               	bcf	status, 6	;RP1=0, select bank0
  8617  0635  0821               	movf	(1+(?___awdiv)),w
  8618  0636  01DC               	clrf	(UpdateDisplay@tempDist+1)
  8619  0637  07DC               	addwf	(UpdateDisplay@tempDist+1)
  8620  0638  0820               	movf	(0+(?___awdiv)),w
  8621  0639  01DB               	clrf	(UpdateDisplay@tempDist)
  8622  063A  07DB               	addwf	(UpdateDisplay@tempDist)
  8623                           
  8624                           	line	209
  8625                           	
  8626  063B                     l11938:	
  8627                           ;HMI.c: 209: sprintf(LCDOutput,"D:%4dcm AT:%3d",tempDist, angleTurned);
  8628  063B  304A               	movlw	((STR_28-__stringbase))&0ffh
  8629  063C  00C7               	movwf	(??_UpdateDisplay+0)+0
  8630  063D  0847               	movf	(??_UpdateDisplay+0)+0,w
  8631  063E  00B4               	movwf	(?_sprintf)
  8632  063F  085C               	movf	(UpdateDisplay@tempDist+1),w
  8633  0640  01B6               	clrf	1+(?_sprintf)+01h
  8634  0641  07B6               	addwf	1+(?_sprintf)+01h
  8635  0642  085B               	movf	(UpdateDisplay@tempDist),w
  8636  0643  01B5               	clrf	0+(?_sprintf)+01h
  8637  0644  07B5               	addwf	0+(?_sprintf)+01h
  8638                           
  8639  0645  1683               	bsf	status, 5	;RP0=1, select bank1
  8640  0646  1303               	bcf	status, 6	;RP1=0, select bank1
  8641  0647  082F               	movf	(_angleTurned+1)^080h,w
  8642  0648  1283               	bcf	status, 5	;RP0=0, select bank0
  8643  0649  1303               	bcf	status, 6	;RP1=0, select bank0
  8644  064A  01B8               	clrf	1+(?_sprintf)+03h
  8645  064B  07B8               	addwf	1+(?_sprintf)+03h
  8646  064C  1683               	bsf	status, 5	;RP0=1, select bank1
  8647  064D  1303               	bcf	status, 6	;RP1=0, select bank1
  8648  064E  082E               	movf	(_angleTurned)^080h,w
  8649  064F  1283               	bcf	status, 5	;RP0=0, select bank0
  8650  0650  1303               	bcf	status, 6	;RP1=0, select bank0
  8651  0651  01B7               	clrf	0+(?_sprintf)+03h
  8652  0652  07B7               	addwf	0+(?_sprintf)+03h
  8653                           
  8654  0653  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  8655  0654  120A  158A  2005   	fcall	_sprintf
              120A  118A         
  8656                           	line	210
  8657                           ;HMI.c: 210: lcd_set_cursor(0x40);
  8658  0659  3040               	movlw	(040h)
  8659  065A  160A  158A  21F4   	fcall	_lcd_set_cursor
              120A  118A         
  8660                           	line	211
  8661                           	
  8662  065F                     l11940:	
  8663                           ;HMI.c: 211: lcd_write_string(LCDOutput);
  8664  065F  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  8665  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  8666  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  8667  0662  00A7               	movwf	(?_lcd_write_string)
  8668  0663  3000               	movlw	(0x0/2)
  8669  0664  00A8               	movwf	(?_lcd_write_string+1)
  8670  0665  160A  158A  23EF   	fcall	_lcd_write_string
              120A  118A         
  8671                           	line	212
  8672                           ;HMI.c: 212: break;
  8673  066A  2E7D               	goto	l4688
  8674                           	line	213
  8675                           ;HMI.c: 213: default:
  8676                           	
  8677  066B                     l4687:	
  8678                           	line	214
  8679                           ;HMI.c: 214: break;
  8680  066B  2E7D               	goto	l4688
  8681                           	line	215
  8682                           	
  8683  066C                     l11942:	
  8684                           ;HMI.c: 215: }
  8685  066C  2E7D               	goto	l4688
  8686                           	line	141
  8687                           	
  8688  066D                     l4671:	
  8689                           	
  8690  066D                     l11944:	
  8691  066D  1683               	bsf	status, 5	;RP0=1, select bank1
  8692  066E  1303               	bcf	status, 6	;RP1=0, select bank1
  8693  066F  084D               	movf	(_currentMenu)^080h,w	;volatile
  8694                           	; Switch size 1, requested type "space"
  8695                           ; Number of cases is 4, Range of values is 0 to 3
  8696                           ; switch strategies available:
  8697                           ; Name         Instructions Cycles
  8698                           ; simple_byte           13     7 (average)
  8699                           ; direct_byte           20     8 (fixed)
  8700                           ; jumptable            260     6 (fixed)
  8701                           ; rangetable             8     6 (fixed)
  8702                           ; spacedrange           14     9 (fixed)
  8703                           ; locatedrange           4     3 (fixed)
  8704                           ;	Chosen strategy is simple_byte
  8705                           
  8706                           	opt asmopt_off
  8707  0670  3A00               	xorlw	0^0	; case 0
  8708  0671  1903               	skipnz
  8709  0672  2C1A               	goto	l11870
  8710  0673  3A01               	xorlw	1^0	; case 1
  8711  0674  1903               	skipnz
  8712  0675  2CDC               	goto	l11890
  8713  0676  3A03               	xorlw	2^1	; case 2
  8714  0677  1903               	skipnz
  8715  0678  2D27               	goto	l11902
  8716  0679  3A01               	xorlw	3^2	; case 3
  8717  067A  1903               	skipnz
  8718  067B  2DE6               	goto	l11930
  8719  067C  2E7D               	goto	l4688
  8720                           	opt asmopt_on
  8721                           
  8722                           	line	215
  8723                           	
  8724  067D                     l4675:	
  8725                           	line	216
  8726                           	
  8727  067D                     l4688:	
  8728  067D  0008               	return
  8729                           	opt stack 0
  8730                           GLOBAL	__end_of_UpdateDisplay
  8731  067E                     	__end_of_UpdateDisplay:
  8732 ;; =============== function _UpdateDisplay ends ============
  8733                           
  8734                           	signat	_UpdateDisplay,88
  8735                           	global	_readAvgDistance
  8736                           psect	text1122,local,class=CODE,delta=2
  8737                           global __ptext1122
  8738  1217                     __ptext1122:
  8739                           
  8740 ;; *************** function _readAvgDistance *****************
  8741 ;; Defined at:
  8742 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  i               2   22[BANK0 ] int 
  8747 ;;  tempIR          2   20[BANK0 ] unsigned int 
  8748 ;;  j               2   18[BANK0 ] int 
  8749 ;;  fullval         2   16[BANK0 ] unsigned int 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;		None               void
  8752 ;; Registers used:
  8753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8759 ;;      Params:         0       0       0       0       0
  8760 ;;      Locals:         0       8       0       0       0
  8761 ;;      Temps:          0       0       0       0       0
  8762 ;;      Totals:         0       8       0       0       0
  8763 ;;Total ram usage:        8 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    5
  8766 ;; This function calls:
  8767 ;;		_readDistance
  8768 ;;		___lwdiv
  8769 ;;		_ADCconvert
  8770 ;; This function is called by:
  8771 ;;		_main
  8772 ;;		_GoHome
  8773 ;;		_FindVictim
  8774 ;;		_robotFollow
  8775 ;;		_robot_turnRight
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           psect	text1122
  8779                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8780                           	line	28
  8781                           	global	__size_of_readAvgDistance
  8782  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  8783                           	
  8784  1217                     _readAvgDistance:	
  8785                           	opt	stack 0
  8786                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8787                           	line	29
  8788                           	
  8789  1217                     l11850:	
  8790                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  8791  1217  1283               	bcf	status, 5	;RP0=0, select bank0
  8792  1218  1303               	bcf	status, 6	;RP1=0, select bank0
  8793  1219  01B0               	clrf	(readAvgDistance@fullval)
  8794  121A  01B1               	clrf	(readAvgDistance@fullval+1)
  8795  121B  01B4               	clrf	(readAvgDistance@tempIR)
  8796  121C  01B5               	clrf	(readAvgDistance@tempIR+1)
  8797                           	line	30
  8798                           ;infrared.c: 30: int j = 0;
  8799  121D  01B2               	clrf	(readAvgDistance@j)
  8800  121E  01B3               	clrf	(readAvgDistance@j+1)
  8801                           	line	32
  8802                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  8803  121F  01B6               	clrf	(readAvgDistance@i)
  8804  1220  01B7               	clrf	(readAvgDistance@i+1)
  8805                           	
  8806  1221                     l11852:	
  8807  1221  0837               	movf	(readAvgDistance@i+1),w
  8808  1222  3A80               	xorlw	80h
  8809  1223  00FF               	movwf	btemp+1
  8810  1224  3080               	movlw	(high(08h))^80h
  8811  1225  027F               	subwf	btemp+1,w
  8812  1226  1D03               	skipz
  8813  1227  2A2A               	goto	u5145
  8814  1228  3008               	movlw	low(08h)
  8815  1229  0236               	subwf	(readAvgDistance@i),w
  8816  122A                     u5145:
  8817                           
  8818  122A  1C03               	skipc
  8819  122B  2A2D               	goto	u5141
  8820  122C  2A2E               	goto	u5140
  8821  122D                     u5141:
  8822  122D  2A30               	goto	l11856
  8823  122E                     u5140:
  8824  122E  2A66               	goto	l11864
  8825                           	
  8826  122F                     l11854:	
  8827  122F  2A66               	goto	l11864
  8828                           	line	33
  8829                           	
  8830  1230                     l3118:	
  8831                           	line	34
  8832                           	
  8833  1230                     l11856:	
  8834                           ;infrared.c: 33: {
  8835                           ;infrared.c: 34: tempIR = readDistance();
  8836  1230  160A  158A  2270   	fcall	_readDistance
              160A  118A         
  8837  1235  1283               	bcf	status, 5	;RP0=0, select bank0
  8838  1236  1303               	bcf	status, 6	;RP1=0, select bank0
  8839  1237  0829               	movf	(1+(?_readDistance)),w
  8840  1238  01B5               	clrf	(readAvgDistance@tempIR+1)
  8841  1239  07B5               	addwf	(readAvgDistance@tempIR+1)
  8842  123A  0828               	movf	(0+(?_readDistance)),w
  8843  123B  01B4               	clrf	(readAvgDistance@tempIR)
  8844  123C  07B4               	addwf	(readAvgDistance@tempIR)
  8845                           
  8846                           	line	35
  8847                           	
  8848  123D                     l11858:	
  8849                           ;infrared.c: 35: if (tempIR <= 1000)
  8850  123D  3003               	movlw	high(03E9h)
  8851  123E  0235               	subwf	(readAvgDistance@tempIR+1),w
  8852  123F  30E9               	movlw	low(03E9h)
  8853  1240  1903               	skipnz
  8854  1241  0234               	subwf	(readAvgDistance@tempIR),w
  8855  1242  1803               	skipnc
  8856  1243  2A45               	goto	u5151
  8857  1244  2A46               	goto	u5150
  8858  1245                     u5151:
  8859  1245  2A52               	goto	l3120
  8860  1246                     u5150:
  8861                           	line	37
  8862                           	
  8863  1246                     l11860:	
  8864                           ;infrared.c: 36: {
  8865                           ;infrared.c: 37: fullval += tempIR;
  8866  1246  0834               	movf	(readAvgDistance@tempIR),w
  8867  1247  07B0               	addwf	(readAvgDistance@fullval),f
  8868  1248  1803               	skipnc
  8869  1249  0AB1               	incf	(readAvgDistance@fullval+1),f
  8870  124A  0835               	movf	(readAvgDistance@tempIR+1),w
  8871  124B  07B1               	addwf	(readAvgDistance@fullval+1),f
  8872                           	line	38
  8873                           ;infrared.c: 38: j++;
  8874  124C  3001               	movlw	low(01h)
  8875  124D  07B2               	addwf	(readAvgDistance@j),f
  8876  124E  1803               	skipnc
  8877  124F  0AB3               	incf	(readAvgDistance@j+1),f
  8878  1250  3000               	movlw	high(01h)
  8879  1251  07B3               	addwf	(readAvgDistance@j+1),f
  8880                           	line	39
  8881                           	
  8882  1252                     l3120:	
  8883                           	line	32
  8884  1252  3001               	movlw	low(01h)
  8885  1253  07B6               	addwf	(readAvgDistance@i),f
  8886  1254  1803               	skipnc
  8887  1255  0AB7               	incf	(readAvgDistance@i+1),f
  8888  1256  3000               	movlw	high(01h)
  8889  1257  07B7               	addwf	(readAvgDistance@i+1),f
  8890                           	
  8891  1258                     l11862:	
  8892  1258  0837               	movf	(readAvgDistance@i+1),w
  8893  1259  3A80               	xorlw	80h
  8894  125A  00FF               	movwf	btemp+1
  8895  125B  3080               	movlw	(high(08h))^80h
  8896  125C  027F               	subwf	btemp+1,w
  8897  125D  1D03               	skipz
  8898  125E  2A61               	goto	u5165
  8899  125F  3008               	movlw	low(08h)
  8900  1260  0236               	subwf	(readAvgDistance@i),w
  8901  1261                     u5165:
  8902                           
  8903  1261  1C03               	skipc
  8904  1262  2A64               	goto	u5161
  8905  1263  2A65               	goto	u5160
  8906  1264                     u5161:
  8907  1264  2A30               	goto	l11856
  8908  1265                     u5160:
  8909  1265  2A66               	goto	l11864
  8910                           	
  8911  1266                     l3119:	
  8912                           	line	41
  8913                           	
  8914  1266                     l11864:	
  8915                           ;infrared.c: 39: }
  8916                           ;infrared.c: 40: }
  8917                           ;infrared.c: 41: adcVal = fullval / j;
  8918  1266  1283               	bcf	status, 5	;RP0=0, select bank0
  8919  1267  1303               	bcf	status, 6	;RP1=0, select bank0
  8920  1268  0833               	movf	(readAvgDistance@j+1),w
  8921  1269  01A7               	clrf	(?___lwdiv+1)
  8922  126A  07A7               	addwf	(?___lwdiv+1)
  8923  126B  0832               	movf	(readAvgDistance@j),w
  8924  126C  01A6               	clrf	(?___lwdiv)
  8925  126D  07A6               	addwf	(?___lwdiv)
  8926                           
  8927  126E  0831               	movf	(readAvgDistance@fullval+1),w
  8928  126F  01A9               	clrf	1+(?___lwdiv)+02h
  8929  1270  07A9               	addwf	1+(?___lwdiv)+02h
  8930  1271  0830               	movf	(readAvgDistance@fullval),w
  8931  1272  01A8               	clrf	0+(?___lwdiv)+02h
  8932  1273  07A8               	addwf	0+(?___lwdiv)+02h
  8933                           
  8934  1274  160A  158A  25BC   	fcall	___lwdiv
              160A  118A         
  8935  1279  1283               	bcf	status, 5	;RP0=0, select bank0
  8936  127A  1303               	bcf	status, 6	;RP1=0, select bank0
  8937  127B  0827               	movf	(1+(?___lwdiv)),w
  8938  127C  01EF               	clrf	(_adcVal+1)	;volatile
  8939  127D  07EF               	addwf	(_adcVal+1)	;volatile
  8940  127E  0826               	movf	(0+(?___lwdiv)),w
  8941  127F  01EE               	clrf	(_adcVal)	;volatile
  8942  1280  07EE               	addwf	(_adcVal)	;volatile
  8943                           
  8944                           	line	42
  8945                           ;infrared.c: 42: ADCconvert();
  8946  1281  120A  158A  2388   	fcall	_ADCconvert
              160A  118A         
  8947                           	line	43
  8948                           	
  8949  1286                     l11866:	
  8950                           ;infrared.c: 43: Disp1 = adcVal;
  8951  1286  1283               	bcf	status, 5	;RP0=0, select bank0
  8952  1287  1303               	bcf	status, 6	;RP1=0, select bank0
  8953  1288  086F               	movf	(_adcVal+1),w	;volatile
  8954  1289  1683               	bsf	status, 5	;RP0=1, select bank1
  8955  128A  1303               	bcf	status, 6	;RP1=0, select bank1
  8956  128B  01A5               	clrf	(_Disp1+1)^080h	;volatile
  8957  128C  07A5               	addwf	(_Disp1+1)^080h	;volatile
  8958  128D  1283               	bcf	status, 5	;RP0=0, select bank0
  8959  128E  1303               	bcf	status, 6	;RP1=0, select bank0
  8960  128F  086E               	movf	(_adcVal),w	;volatile
  8961  1290  1683               	bsf	status, 5	;RP0=1, select bank1
  8962  1291  1303               	bcf	status, 6	;RP1=0, select bank1
  8963  1292  01A4               	clrf	(_Disp1)^080h	;volatile
  8964  1293  07A4               	addwf	(_Disp1)^080h	;volatile
  8965                           
  8966                           	line	44
  8967                           	
  8968  1294                     l3121:	
  8969  1294  0008               	return
  8970                           	opt stack 0
  8971                           GLOBAL	__end_of_readAvgDistance
  8972  1295                     	__end_of_readAvgDistance:
  8973 ;; =============== function _readAvgDistance ends ============
  8974                           
  8975                           	signat	_readAvgDistance,88
  8976                           	global	_init
  8977                           psect	text1123,local,class=CODE,delta=2
  8978                           global __ptext1123
  8979  1C48                     __ptext1123:
  8980                           
  8981 ;; *************** function _init *****************
  8982 ;; Defined at:
  8983 ;;		line 140 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;		None
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;		None
  8988 ;; Return value:  Size  Location     Type
  8989 ;;		None               void
  8990 ;; Registers used:
  8991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8997 ;;      Params:         0       0       0       0       0
  8998 ;;      Locals:         0       0       0       0       0
  8999 ;;      Temps:          0       1       0       0       0
  9000 ;;      Totals:         0       1       0       0       0
  9001 ;;Total ram usage:        1 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:    4
  9004 ;; This function calls:
  9005 ;;		_ser_init
  9006 ;;		_init_adc
  9007 ;;		_lcd_init
  9008 ;;		_robo_init
  9009 ;; This function is called by:
  9010 ;;		_main
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           psect	text1123
  9014                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  9015                           	line	140
  9016                           	global	__size_of_init
  9017  002F                     	__size_of_init	equ	__end_of_init-_init
  9018                           	
  9019  1C48                     _init:	
  9020                           	opt	stack 3
  9021                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9022                           	line	141
  9023                           	
  9024  1C48                     l11824:	
  9025                           ;Main.c: 141: buttonPressed = 0;
  9026  1C48  1683               	bsf	status, 5	;RP0=1, select bank1
  9027  1C49  1303               	bcf	status, 6	;RP1=0, select bank1
  9028  1C4A  01CB               	clrf	(_buttonPressed)^080h	;volatile
  9029                           	line	143
  9030                           	
  9031  1C4B                     l11826:	
  9032                           ;Main.c: 143: TRISB = 0b11111100;
  9033  1C4B  30FC               	movlw	(0FCh)
  9034  1C4C  0086               	movwf	(134)^080h	;volatile
  9035                           	line	144
  9036                           	
  9037  1C4D                     l11828:	
  9038                           ;Main.c: 144: TRISC &= 0b10010000;
  9039  1C4D  3090               	movlw	(090h)
  9040  1C4E  1283               	bcf	status, 5	;RP0=0, select bank0
  9041  1C4F  1303               	bcf	status, 6	;RP1=0, select bank0
  9042  1C50  00A3               	movwf	(??_init+0)+0
  9043  1C51  0823               	movf	(??_init+0)+0,w
  9044  1C52  1683               	bsf	status, 5	;RP0=1, select bank1
  9045  1C53  1303               	bcf	status, 6	;RP1=0, select bank1
  9046  1C54  0587               	andwf	(135)^080h,f	;volatile
  9047                           	line	147
  9048                           	
  9049  1C55                     l11830:	
  9050                           ;Main.c: 147: SSPSTAT = 0b01000000;
  9051  1C55  3040               	movlw	(040h)
  9052  1C56  0094               	movwf	(148)^080h	;volatile
  9053                           	line	148
  9054                           	
  9055  1C57                     l11832:	
  9056                           ;Main.c: 148: SSPCON = 0b10100001;
  9057  1C57  30A1               	movlw	(0A1h)
  9058  1C58  1283               	bcf	status, 5	;RP0=0, select bank0
  9059  1C59  1303               	bcf	status, 6	;RP1=0, select bank0
  9060  1C5A  0094               	movwf	(20)	;volatile
  9061                           	line	151
  9062                           	
  9063  1C5B                     l11834:	
  9064                           ;Main.c: 151: OPTION_REG = 0b00000100;
  9065  1C5B  3004               	movlw	(04h)
  9066  1C5C  1683               	bsf	status, 5	;RP0=1, select bank1
  9067  1C5D  1303               	bcf	status, 6	;RP1=0, select bank1
  9068  1C5E  0081               	movwf	(129)^080h	;volatile
  9069                           	line	154
  9070                           	
  9071  1C5F                     l11836:	
  9072                           ;Main.c: 154: ser_init();
  9073  1C5F  160A  158A  2342   	fcall	_ser_init
              160A  158A         
  9074                           	line	155
  9075                           	
  9076  1C64                     l11838:	
  9077                           ;Main.c: 155: init_adc();
  9078  1C64  160A  158A  225A   	fcall	_init_adc
              160A  158A         
  9079                           	line	156
  9080                           	
  9081  1C69                     l11840:	
  9082                           ;Main.c: 156: lcd_init();
  9083  1C69  160A  158A  236C   	fcall	_lcd_init
              160A  158A         
  9084                           	line	157
  9085                           	
  9086  1C6E                     l11842:	
  9087                           ;Main.c: 157: robo_init();
  9088  1C6E  160A  158A  22B6   	fcall	_robo_init
              160A  158A         
  9089                           	line	161
  9090                           	
  9091  1C73                     l11844:	
  9092                           ;Main.c: 161: TMR0IE = 1;
  9093  1C73  168B               	bsf	(93/8),(93)&7
  9094                           	line	163
  9095                           	
  9096  1C74                     l11846:	
  9097                           ;Main.c: 163: PEIE=1;
  9098  1C74  170B               	bsf	(94/8),(94)&7
  9099                           	line	165
  9100                           	
  9101  1C75                     l11848:	
  9102                           ;Main.c: 165: (GIE = 1);
  9103  1C75  178B               	bsf	(95/8),(95)&7
  9104                           	line	166
  9105                           	
  9106  1C76                     l2289:	
  9107  1C76  0008               	return
  9108                           	opt stack 0
  9109                           GLOBAL	__end_of_init
  9110  1C77                     	__end_of_init:
  9111 ;; =============== function _init ends ============
  9112                           
  9113                           	signat	_init,88
  9114                           	global	_readDistance
  9115                           psect	text1124,local,class=CODE,delta=2
  9116                           global __ptext1124
  9117  1A70                     __ptext1124:
  9118                           
  9119 ;; *************** function _readDistance *****************
  9120 ;; Defined at:
  9121 ;;		line 78 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;		None
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  readVal         2   12[BANK0 ] unsigned int 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  2    8[BANK0 ] unsigned int 
  9128 ;; Registers used:
  9129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9135 ;;      Params:         0       2       0       0       0
  9136 ;;      Locals:         0       2       0       0       0
  9137 ;;      Temps:          0       2       0       0       0
  9138 ;;      Totals:         0       6       0       0       0
  9139 ;;Total ram usage:        6 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    4
  9142 ;; This function calls:
  9143 ;;		_adc_read_channel
  9144 ;; This function is called by:
  9145 ;;		_readAvgDistance
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           psect	text1124
  9149                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  9150                           	line	78
  9151                           	global	__size_of_readDistance
  9152  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  9153                           	
  9154  1A70                     _readDistance:	
  9155                           	opt	stack 0
  9156                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9157                           	line	81
  9158                           	
  9159  1A70                     l11818:	
  9160                           ;infrared.c: 79: unsigned int readVal;
  9161                           ;infrared.c: 81: readVal = adc_read_channel(0);
  9162  1A70  3000               	movlw	(0)
  9163  1A71  120A  118A  27C4   	fcall	_adc_read_channel
              160A  158A         
  9164  1A76  1283               	bcf	status, 5	;RP0=0, select bank0
  9165  1A77  1303               	bcf	status, 6	;RP1=0, select bank0
  9166  1A78  00AA               	movwf	(??_readDistance+0)+0
  9167  1A79  01AB               	clrf	(??_readDistance+0)+0+1
  9168  1A7A  082A               	movf	0+(??_readDistance+0)+0,w
  9169  1A7B  00AC               	movwf	(readDistance@readVal)
  9170  1A7C  082B               	movf	1+(??_readDistance+0)+0,w
  9171  1A7D  00AD               	movwf	(readDistance@readVal+1)
  9172                           	line	83
  9173                           	
  9174  1A7E                     l11820:	
  9175                           ;infrared.c: 83: return readVal;
  9176  1A7E  082D               	movf	(readDistance@readVal+1),w
  9177  1A7F  01A9               	clrf	(?_readDistance+1)
  9178  1A80  07A9               	addwf	(?_readDistance+1)
  9179  1A81  082C               	movf	(readDistance@readVal),w
  9180  1A82  01A8               	clrf	(?_readDistance)
  9181  1A83  07A8               	addwf	(?_readDistance)
  9182                           
  9183  1A84  2A85               	goto	l3124
  9184                           	
  9185  1A85                     l11822:	
  9186                           	line	84
  9187                           	
  9188  1A85                     l3124:	
  9189  1A85  0008               	return
  9190                           	opt stack 0
  9191                           GLOBAL	__end_of_readDistance
  9192  1A86                     	__end_of_readDistance:
  9193 ;; =============== function _readDistance ends ============
  9194                           
  9195                           	signat	_readDistance,90
  9196                           	global	_RobotBattRead
  9197                           psect	text1125,local,class=CODE,delta=2
  9198                           global __ptext1125
  9199  1295                     __ptext1125:
  9200                           
  9201 ;; *************** function _RobotBattRead *****************
  9202 ;; Defined at:
  9203 ;;		line 536 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  temp1           2    4[BANK0 ] int 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;		None               void
  9210 ;; Registers used:
  9211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9217 ;;      Params:         0       0       0       0       0
  9218 ;;      Locals:         0       2       0       0       0
  9219 ;;      Temps:          0       2       0       0       0
  9220 ;;      Totals:         0       4       0       0       0
  9221 ;;Total ram usage:        4 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    4
  9224 ;; This function calls:
  9225 ;;		_ser_putch
  9226 ;;		_ser_getch
  9227 ;; This function is called by:
  9228 ;;		_ChargeMode
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           psect	text1125
  9232                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9233                           	line	536
  9234                           	global	__size_of_RobotBattRead
  9235  0089                     	__size_of_RobotBattRead	equ	__end_of_RobotBattRead-_RobotBattRead
  9236                           	
  9237  1295                     _RobotBattRead:	
  9238                           	opt	stack 2
  9239                           ; Regs used in _RobotBattRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9240                           	line	537
  9241                           	
  9242  1295                     l11790:	
  9243                           ;robot.c: 537: int temp1 = 0;
  9244  1295  1283               	bcf	status, 5	;RP0=0, select bank0
  9245  1296  1303               	bcf	status, 6	;RP1=0, select bank0
  9246  1297  01A4               	clrf	(RobotBattRead@temp1)
  9247  1298  01A5               	clrf	(RobotBattRead@temp1+1)
  9248                           	line	538
  9249                           	
  9250  1299                     l11792:	
  9251                           ;robot.c: 538: ser_putch(142);
  9252  1299  308E               	movlw	(08Eh)
  9253  129A  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9254                           	line	539
  9255                           	
  9256  129F                     l11794:	
  9257                           ;robot.c: 539: ser_putch(25);
  9258  129F  3019               	movlw	(019h)
  9259  12A0  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9260                           	line	540
  9261                           	
  9262  12A5                     l11796:	
  9263                           ;robot.c: 540: _delay((unsigned long)((5)*(20000000/4000.0)));
  9264                           	opt asmopt_off
  9265  12A5  3021               movlw	33
  9266  12A6  1283               	bcf	status, 5	;RP0=0, select bank0
  9267  12A7  1303               	bcf	status, 6	;RP1=0, select bank0
  9268  12A8  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  9269  12A9  3076               	movlw	118
  9270  12AA  00A2               movwf	((??_RobotBattRead+0)+0),f
  9271  12AB                     u5697:
  9272  12AB  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  9273  12AC  2AAB               	goto	u5697
  9274  12AD  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  9275  12AE  2AAB               	goto	u5697
  9276  12AF  0064               	clrwdt
  9277                           opt asmopt_on
  9278                           
  9279                           	line	541
  9280                           	
  9281  12B0                     l11798:	
  9282                           ;robot.c: 541: DistHighByte = ser_getch();
  9283  12B0  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9284  12B5  1283               	bcf	status, 5	;RP0=0, select bank0
  9285  12B6  1303               	bcf	status, 6	;RP1=0, select bank0
  9286  12B7  00A2               	movwf	(??_RobotBattRead+0)+0
  9287  12B8  0822               	movf	(??_RobotBattRead+0)+0,w
  9288  12B9  00FD               	movwf	(_DistHighByte)	;volatile
  9289                           	line	542
  9290                           	
  9291  12BA                     l11800:	
  9292                           ;robot.c: 542: DistLowByte = ser_getch();
  9293  12BA  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9294  12BF  1283               	bcf	status, 5	;RP0=0, select bank0
  9295  12C0  1303               	bcf	status, 6	;RP1=0, select bank0
  9296  12C1  00A2               	movwf	(??_RobotBattRead+0)+0
  9297  12C2  0822               	movf	(??_RobotBattRead+0)+0,w
  9298  12C3  1683               	bsf	status, 5	;RP0=1, select bank1
  9299  12C4  1303               	bcf	status, 6	;RP1=0, select bank1
  9300  12C5  00C1               	movwf	(_DistLowByte)^080h	;volatile
  9301                           	line	543
  9302                           	
  9303  12C6                     l11802:	
  9304                           ;robot.c: 543: ser_putch(142);
  9305  12C6  308E               	movlw	(08Eh)
  9306  12C7  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9307                           	line	544
  9308                           	
  9309  12CC                     l11804:	
  9310                           ;robot.c: 544: ser_putch(21);
  9311  12CC  3015               	movlw	(015h)
  9312  12CD  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9313                           	line	545
  9314                           	
  9315  12D2                     l11806:	
  9316                           ;robot.c: 545: _delay((unsigned long)((5)*(20000000/4000.0)));
  9317                           	opt asmopt_off
  9318  12D2  3021               movlw	33
  9319  12D3  1283               	bcf	status, 5	;RP0=0, select bank0
  9320  12D4  1303               	bcf	status, 6	;RP1=0, select bank0
  9321  12D5  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  9322  12D6  3076               	movlw	118
  9323  12D7  00A2               movwf	((??_RobotBattRead+0)+0),f
  9324  12D8                     u5707:
  9325  12D8  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  9326  12D9  2AD8               	goto	u5707
  9327  12DA  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  9328  12DB  2AD8               	goto	u5707
  9329  12DC  0064               	clrwdt
  9330                           opt asmopt_on
  9331                           
  9332                           	line	546
  9333                           	
  9334  12DD                     l11808:	
  9335                           ;robot.c: 546: BattState = ser_getch();
  9336  12DD  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9337  12E2  1283               	bcf	status, 5	;RP0=0, select bank0
  9338  12E3  1303               	bcf	status, 6	;RP1=0, select bank0
  9339  12E4  00A2               	movwf	(??_RobotBattRead+0)+0
  9340  12E5  01A3               	clrf	(??_RobotBattRead+0)+0+1
  9341  12E6  0822               	movf	0+(??_RobotBattRead+0)+0,w
  9342  12E7  1683               	bsf	status, 5	;RP0=1, select bank1
  9343  12E8  1303               	bcf	status, 6	;RP1=0, select bank1
  9344  12E9  00A2               	movwf	(_BattState)^080h
  9345  12EA  1283               	bcf	status, 5	;RP0=0, select bank0
  9346  12EB  1303               	bcf	status, 6	;RP1=0, select bank0
  9347  12EC  0823               	movf	1+(??_RobotBattRead+0)+0,w
  9348  12ED  1683               	bsf	status, 5	;RP0=1, select bank1
  9349  12EE  1303               	bcf	status, 6	;RP1=0, select bank1
  9350  12EF  00A3               	movwf	(_BattState+1)^080h
  9351                           	line	549
  9352                           	
  9353  12F0                     l11810:	
  9354                           ;robot.c: 549: temp1 = DistHighByte;
  9355  12F0  087D               	movf	(_DistHighByte),w	;volatile
  9356  12F1  1283               	bcf	status, 5	;RP0=0, select bank0
  9357  12F2  1303               	bcf	status, 6	;RP1=0, select bank0
  9358  12F3  00A2               	movwf	(??_RobotBattRead+0)+0
  9359  12F4  01A3               	clrf	(??_RobotBattRead+0)+0+1
  9360  12F5  0822               	movf	0+(??_RobotBattRead+0)+0,w
  9361  12F6  00A4               	movwf	(RobotBattRead@temp1)
  9362  12F7  0823               	movf	1+(??_RobotBattRead+0)+0,w
  9363  12F8  00A5               	movwf	(RobotBattRead@temp1+1)
  9364                           	line	550
  9365                           	
  9366  12F9                     l11812:	
  9367                           ;robot.c: 550: temp1 = temp1 << 8;
  9368  12F9  0825               	movf	(RobotBattRead@temp1+1),w
  9369  12FA  00A3               	movwf	(??_RobotBattRead+0)+0+1
  9370  12FB  0824               	movf	(RobotBattRead@temp1),w
  9371  12FC  00A2               	movwf	(??_RobotBattRead+0)+0
  9372  12FD  0822               	movf	(??_RobotBattRead+0)+0,w
  9373  12FE  00A3               	movwf	(??_RobotBattRead+0)+1
  9374  12FF  01A2               	clrf	(??_RobotBattRead+0)+0
  9375  1300  0822               	movf	0+(??_RobotBattRead+0)+0,w
  9376  1301  00A4               	movwf	(RobotBattRead@temp1)
  9377  1302  0823               	movf	1+(??_RobotBattRead+0)+0,w
  9378  1303  00A5               	movwf	(RobotBattRead@temp1+1)
  9379                           	line	551
  9380                           	
  9381  1304                     l11814:	
  9382                           ;robot.c: 551: temp1 += DistLowByte;
  9383  1304  1683               	bsf	status, 5	;RP0=1, select bank1
  9384  1305  1303               	bcf	status, 6	;RP1=0, select bank1
  9385  1306  0841               	movf	(_DistLowByte)^080h,w	;volatile
  9386  1307  1283               	bcf	status, 5	;RP0=0, select bank0
  9387  1308  1303               	bcf	status, 6	;RP1=0, select bank0
  9388  1309  00A2               	movwf	(??_RobotBattRead+0)+0
  9389  130A  01A3               	clrf	(??_RobotBattRead+0)+0+1
  9390  130B  0822               	movf	0+(??_RobotBattRead+0)+0,w
  9391  130C  07A4               	addwf	(RobotBattRead@temp1),f
  9392  130D  1803               	skipnc
  9393  130E  0AA5               	incf	(RobotBattRead@temp1+1),f
  9394  130F  0823               	movf	1+(??_RobotBattRead+0)+0,w
  9395  1310  07A5               	addwf	(RobotBattRead@temp1+1),f
  9396                           	line	552
  9397                           	
  9398  1311                     l11816:	
  9399                           ;robot.c: 552: BattCharge = temp1;
  9400  1311  0825               	movf	(RobotBattRead@temp1+1),w
  9401  1312  1683               	bsf	status, 5	;RP0=1, select bank1
  9402  1313  1303               	bcf	status, 6	;RP1=0, select bank1
  9403  1314  01A1               	clrf	(_BattCharge+1)^080h
  9404  1315  07A1               	addwf	(_BattCharge+1)^080h
  9405  1316  1283               	bcf	status, 5	;RP0=0, select bank0
  9406  1317  1303               	bcf	status, 6	;RP1=0, select bank0
  9407  1318  0824               	movf	(RobotBattRead@temp1),w
  9408  1319  1683               	bsf	status, 5	;RP0=1, select bank1
  9409  131A  1303               	bcf	status, 6	;RP1=0, select bank1
  9410  131B  01A0               	clrf	(_BattCharge)^080h
  9411  131C  07A0               	addwf	(_BattCharge)^080h
  9412                           
  9413                           	line	553
  9414                           	
  9415  131D                     l6325:	
  9416  131D  0008               	return
  9417                           	opt stack 0
  9418                           GLOBAL	__end_of_RobotBattRead
  9419  131E                     	__end_of_RobotBattRead:
  9420 ;; =============== function _RobotBattRead ends ============
  9421                           
  9422                           	signat	_RobotBattRead,88
  9423                           	global	_robot_read
  9424                           psect	text1126,local,class=CODE,delta=2
  9425                           global __ptext1126
  9426  16DB                     __ptext1126:
  9427                           
  9428 ;; *************** function _robot_read *****************
  9429 ;; Defined at:
  9430 ;;		line 52 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  readType        1    wreg     unsigned char 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  readType        1    3[BANK0 ] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;		None               void
  9437 ;; Registers used:
  9438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9444 ;;      Params:         0       0       0       0       0
  9445 ;;      Locals:         0       1       0       0       0
  9446 ;;      Temps:          0       1       0       0       0
  9447 ;;      Totals:         0       2       0       0       0
  9448 ;;Total ram usage:        2 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    4
  9451 ;; This function calls:
  9452 ;;		_ser_putch
  9453 ;;		_ser_getch
  9454 ;; This function is called by:
  9455 ;;		_main
  9456 ;;		_robotFollow
  9457 ;;		_robot_turnRight
  9458 ;;		_robotMoveSpeed
  9459 ;;		_robotTurnSpeed
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           psect	text1126
  9463                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9464                           	line	52
  9465                           	global	__size_of_robot_read
  9466  0125                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  9467                           	
  9468  16DB                     _robot_read:	
  9469                           	opt	stack 1
  9470                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9471                           ;robot_read@readType stored from wreg
  9472  16DB  1283               	bcf	status, 5	;RP0=0, select bank0
  9473  16DC  1303               	bcf	status, 6	;RP1=0, select bank0
  9474  16DD  00A3               	movwf	(robot_read@readType)
  9475                           	line	53
  9476                           	
  9477  16DE                     l11774:	
  9478                           ;robot.c: 53: ser_putch(142);
  9479  16DE  308E               	movlw	(08Eh)
  9480  16DF  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9481                           	line	54
  9482                           ;robot.c: 54: ser_putch(10);
  9483  16E4  300A               	movlw	(0Ah)
  9484  16E5  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9485                           	line	56
  9486                           ;robot.c: 56: CliffSensors = ser_getch();
  9487  16EA  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9488  16EF  1283               	bcf	status, 5	;RP0=0, select bank0
  9489  16F0  1303               	bcf	status, 6	;RP1=0, select bank0
  9490  16F1  00A2               	movwf	(??_robot_read+0)+0
  9491  16F2  0822               	movf	(??_robot_read+0)+0,w
  9492  16F3  1683               	bsf	status, 5	;RP0=1, select bank1
  9493  16F4  1303               	bcf	status, 6	;RP1=0, select bank1
  9494  16F5  00C0               	movwf	(_CliffSensors)^080h	;volatile
  9495                           	line	58
  9496                           ;robot.c: 58: ser_putch(142);
  9497  16F6  308E               	movlw	(08Eh)
  9498  16F7  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9499                           	line	59
  9500                           ;robot.c: 59: ser_putch(11);
  9501  16FC  300B               	movlw	(0Bh)
  9502  16FD  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9503                           	line	61
  9504                           ;robot.c: 61: CliffSensors += ser_getch();
  9505  1702  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9506  1707  1283               	bcf	status, 5	;RP0=0, select bank0
  9507  1708  1303               	bcf	status, 6	;RP1=0, select bank0
  9508  1709  00A2               	movwf	(??_robot_read+0)+0
  9509  170A  0822               	movf	(??_robot_read+0)+0,w
  9510  170B  1683               	bsf	status, 5	;RP0=1, select bank1
  9511  170C  1303               	bcf	status, 6	;RP1=0, select bank1
  9512  170D  07C0               	addwf	(_CliffSensors)^080h,f	;volatile
  9513                           	line	65
  9514                           ;robot.c: 65: ser_putch(142);
  9515  170E  308E               	movlw	(08Eh)
  9516  170F  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9517                           	line	66
  9518                           ;robot.c: 66: ser_putch(7);
  9519  1714  3007               	movlw	(07h)
  9520  1715  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9521                           	line	68
  9522                           ;robot.c: 68: BumpSensors = ser_getch();
  9523  171A  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9524  171F  1283               	bcf	status, 5	;RP0=0, select bank0
  9525  1720  1303               	bcf	status, 6	;RP1=0, select bank0
  9526  1721  00A2               	movwf	(??_robot_read+0)+0
  9527  1722  0822               	movf	(??_robot_read+0)+0,w
  9528  1723  1683               	bsf	status, 5	;RP0=1, select bank1
  9529  1724  1303               	bcf	status, 6	;RP1=0, select bank1
  9530  1725  00BE               	movwf	(_BumpSensors)^080h	;volatile
  9531                           	line	70
  9532                           ;robot.c: 70: ser_putch(142);
  9533  1726  308E               	movlw	(08Eh)
  9534  1727  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9535                           	line	71
  9536                           ;robot.c: 71: ser_putch(13);
  9537  172C  300D               	movlw	(0Dh)
  9538  172D  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9539                           	line	73
  9540                           ;robot.c: 73: VwallSensor = ser_getch();
  9541  1732  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9542  1737  1283               	bcf	status, 5	;RP0=0, select bank0
  9543  1738  1303               	bcf	status, 6	;RP1=0, select bank0
  9544  1739  00A2               	movwf	(??_robot_read+0)+0
  9545  173A  0822               	movf	(??_robot_read+0)+0,w
  9546  173B  1683               	bsf	status, 5	;RP0=1, select bank1
  9547  173C  1303               	bcf	status, 6	;RP1=0, select bank1
  9548  173D  00CA               	movwf	(_VwallSensor)^080h	;volatile
  9549                           	line	75
  9550                           ;robot.c: 75: ser_putch(142);
  9551  173E  308E               	movlw	(08Eh)
  9552  173F  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9553                           	line	76
  9554                           ;robot.c: 76: ser_putch(17);
  9555  1744  3011               	movlw	(011h)
  9556  1745  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9557                           	line	78
  9558                           ;robot.c: 78: VictimSensor = ser_getch();
  9559  174A  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9560  174F  1283               	bcf	status, 5	;RP0=0, select bank0
  9561  1750  1303               	bcf	status, 6	;RP1=0, select bank0
  9562  1751  00A2               	movwf	(??_robot_read+0)+0
  9563  1752  0822               	movf	(??_robot_read+0)+0,w
  9564  1753  1683               	bsf	status, 5	;RP0=1, select bank1
  9565  1754  1303               	bcf	status, 6	;RP1=0, select bank1
  9566  1755  00C9               	movwf	(_VictimSensor)^080h	;volatile
  9567                           	line	82
  9568                           	
  9569  1756                     l11776:	
  9570                           ;robot.c: 82: if (readType == 0)
  9571  1756  1283               	bcf	status, 5	;RP0=0, select bank0
  9572  1757  1303               	bcf	status, 6	;RP1=0, select bank0
  9573  1758  08A3               	movf	(robot_read@readType),f
  9574  1759  1D03               	skipz
  9575  175A  2F5C               	goto	u5111
  9576  175B  2F5D               	goto	u5110
  9577  175C                     u5111:
  9578  175C  2F80               	goto	l11780
  9579  175D                     u5110:
  9580                           	line	84
  9581                           	
  9582  175D                     l11778:	
  9583                           ;robot.c: 83: {
  9584                           ;robot.c: 84: ser_putch(142);
  9585  175D  308E               	movlw	(08Eh)
  9586  175E  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9587                           	line	85
  9588                           ;robot.c: 85: ser_putch(19);
  9589  1763  3013               	movlw	(013h)
  9590  1764  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9591                           	line	87
  9592                           ;robot.c: 87: DistHighByte = ser_getch();
  9593  1769  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9594  176E  1283               	bcf	status, 5	;RP0=0, select bank0
  9595  176F  1303               	bcf	status, 6	;RP1=0, select bank0
  9596  1770  00A2               	movwf	(??_robot_read+0)+0
  9597  1771  0822               	movf	(??_robot_read+0)+0,w
  9598  1772  00FD               	movwf	(_DistHighByte)	;volatile
  9599                           	line	88
  9600                           ;robot.c: 88: DistLowByte = ser_getch();
  9601  1773  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9602  1778  1283               	bcf	status, 5	;RP0=0, select bank0
  9603  1779  1303               	bcf	status, 6	;RP1=0, select bank0
  9604  177A  00A2               	movwf	(??_robot_read+0)+0
  9605  177B  0822               	movf	(??_robot_read+0)+0,w
  9606  177C  1683               	bsf	status, 5	;RP0=1, select bank1
  9607  177D  1303               	bcf	status, 6	;RP1=0, select bank1
  9608  177E  00C1               	movwf	(_DistLowByte)^080h	;volatile
  9609                           	line	89
  9610                           ;robot.c: 89: }
  9611  177F  2FFF               	goto	l6224
  9612                           	line	90
  9613                           	
  9614  1780                     l6217:	
  9615                           	
  9616  1780                     l11780:	
  9617                           ;robot.c: 90: else if (readType == 1)
  9618  1780  1283               	bcf	status, 5	;RP0=0, select bank0
  9619  1781  0823               	movf	(robot_read@readType),w
  9620  1782  3A01               	xorlw	01h
  9621  1783  1D03               	skipz
  9622  1784  2F86               	goto	u5121
  9623  1785  2F87               	goto	u5120
  9624  1786                     u5121:
  9625  1786  2FAC               	goto	l11784
  9626  1787                     u5120:
  9627                           	line	92
  9628                           	
  9629  1787                     l11782:	
  9630                           ;robot.c: 91: {
  9631                           ;robot.c: 92: ser_putch(142);
  9632  1787  308E               	movlw	(08Eh)
  9633  1788  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9634                           	line	93
  9635                           ;robot.c: 93: ser_putch(20);
  9636  178D  3014               	movlw	(014h)
  9637  178E  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9638                           	line	95
  9639                           ;robot.c: 95: AngleHighByte = ser_getch();
  9640  1793  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9641  1798  1283               	bcf	status, 5	;RP0=0, select bank0
  9642  1799  1303               	bcf	status, 6	;RP1=0, select bank0
  9643  179A  00A2               	movwf	(??_robot_read+0)+0
  9644  179B  0822               	movf	(??_robot_read+0)+0,w
  9645  179C  1683               	bsf	status, 5	;RP0=1, select bank1
  9646  179D  1303               	bcf	status, 6	;RP1=0, select bank1
  9647  179E  00BC               	movwf	(_AngleHighByte)^080h	;volatile
  9648                           	line	96
  9649                           ;robot.c: 96: AngleLowByte = ser_getch();
  9650  179F  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9651  17A4  1283               	bcf	status, 5	;RP0=0, select bank0
  9652  17A5  1303               	bcf	status, 6	;RP1=0, select bank0
  9653  17A6  00A2               	movwf	(??_robot_read+0)+0
  9654  17A7  0822               	movf	(??_robot_read+0)+0,w
  9655  17A8  1683               	bsf	status, 5	;RP0=1, select bank1
  9656  17A9  1303               	bcf	status, 6	;RP1=0, select bank1
  9657  17AA  00BD               	movwf	(_AngleLowByte)^080h	;volatile
  9658                           	line	97
  9659                           ;robot.c: 97: }
  9660  17AB  2FFF               	goto	l6224
  9661                           	line	98
  9662                           	
  9663  17AC                     l6219:	
  9664                           	
  9665  17AC                     l11784:	
  9666                           ;robot.c: 98: else if (readType == 2)
  9667  17AC  1283               	bcf	status, 5	;RP0=0, select bank0
  9668  17AD  0823               	movf	(robot_read@readType),w
  9669  17AE  3A02               	xorlw	02h
  9670  17AF  1D03               	skipz
  9671  17B0  2FB2               	goto	u5131
  9672  17B1  2FB3               	goto	u5130
  9673  17B2                     u5131:
  9674  17B2  2FFF               	goto	l6224
  9675  17B3                     u5130:
  9676                           	line	101
  9677                           	
  9678  17B3                     l11786:	
  9679                           ;robot.c: 99: {
  9680                           ;robot.c: 101: ser_putch(142);
  9681  17B3  308E               	movlw	(08Eh)
  9682  17B4  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9683                           	line	102
  9684                           ;robot.c: 102: ser_putch(19);
  9685  17B9  3013               	movlw	(013h)
  9686  17BA  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9687                           	line	104
  9688                           ;robot.c: 104: DistHighByte = ser_getch();
  9689  17BF  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9690  17C4  1283               	bcf	status, 5	;RP0=0, select bank0
  9691  17C5  1303               	bcf	status, 6	;RP1=0, select bank0
  9692  17C6  00A2               	movwf	(??_robot_read+0)+0
  9693  17C7  0822               	movf	(??_robot_read+0)+0,w
  9694  17C8  00FD               	movwf	(_DistHighByte)	;volatile
  9695                           	line	105
  9696                           ;robot.c: 105: DistLowByte = ser_getch();
  9697  17C9  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9698  17CE  1283               	bcf	status, 5	;RP0=0, select bank0
  9699  17CF  1303               	bcf	status, 6	;RP1=0, select bank0
  9700  17D0  00A2               	movwf	(??_robot_read+0)+0
  9701  17D1  0822               	movf	(??_robot_read+0)+0,w
  9702  17D2  1683               	bsf	status, 5	;RP0=1, select bank1
  9703  17D3  1303               	bcf	status, 6	;RP1=0, select bank1
  9704  17D4  00C1               	movwf	(_DistLowByte)^080h	;volatile
  9705                           	line	106
  9706                           ;robot.c: 106: ser_putch(142);
  9707  17D5  308E               	movlw	(08Eh)
  9708  17D6  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9709                           	line	107
  9710                           ;robot.c: 107: ser_putch(20);
  9711  17DB  3014               	movlw	(014h)
  9712  17DC  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
  9713                           	line	109
  9714                           ;robot.c: 109: AngleHighByte = ser_getch();
  9715  17E1  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9716  17E6  1283               	bcf	status, 5	;RP0=0, select bank0
  9717  17E7  1303               	bcf	status, 6	;RP1=0, select bank0
  9718  17E8  00A2               	movwf	(??_robot_read+0)+0
  9719  17E9  0822               	movf	(??_robot_read+0)+0,w
  9720  17EA  1683               	bsf	status, 5	;RP0=1, select bank1
  9721  17EB  1303               	bcf	status, 6	;RP1=0, select bank1
  9722  17EC  00BC               	movwf	(_AngleHighByte)^080h	;volatile
  9723                           	line	110
  9724                           ;robot.c: 110: AngleLowByte = ser_getch();
  9725  17ED  160A  158A  23C3   	fcall	_ser_getch
              160A  118A         
  9726  17F2  1283               	bcf	status, 5	;RP0=0, select bank0
  9727  17F3  1303               	bcf	status, 6	;RP1=0, select bank0
  9728  17F4  00A2               	movwf	(??_robot_read+0)+0
  9729  17F5  0822               	movf	(??_robot_read+0)+0,w
  9730  17F6  1683               	bsf	status, 5	;RP0=1, select bank1
  9731  17F7  1303               	bcf	status, 6	;RP1=0, select bank1
  9732  17F8  00BD               	movwf	(_AngleLowByte)^080h	;volatile
  9733                           	line	111
  9734                           ;robot.c: 111: }
  9735  17F9  2FFF               	goto	l6224
  9736                           	line	113
  9737                           	
  9738  17FA                     l6221:	
  9739  17FA  2FFF               	goto	l6224
  9740                           	
  9741  17FB                     l11788:	
  9742  17FB  2FFF               	goto	l6224
  9743                           	line	116
  9744                           ;robot.c: 114: {
  9745                           	
  9746  17FC                     l6223:	
  9747  17FC  2FFF               	goto	l6224
  9748                           	line	117
  9749                           	
  9750  17FD                     l6222:	
  9751  17FD  2FFF               	goto	l6224
  9752                           	
  9753  17FE                     l6220:	
  9754  17FE  2FFF               	goto	l6224
  9755                           	
  9756  17FF                     l6218:	
  9757                           	
  9758  17FF                     l6224:	
  9759  17FF  0008               	return
  9760                           	opt stack 0
  9761                           GLOBAL	__end_of_robot_read
  9762  1800                     	__end_of_robot_read:
  9763 ;; =============== function _robot_read ends ============
  9764                           
  9765                           	signat	_robot_read,4216
  9766                           	global	_lcd_init
  9767                           psect	text1127,local,class=CODE,delta=2
  9768                           global __ptext1127
  9769  1B6C                     __ptext1127:
  9770                           
  9771 ;; *************** function _lcd_init *****************
  9772 ;; Defined at:
  9773 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;		None               void
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0, pclath, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9787 ;;      Params:         0       0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0
  9790 ;;      Totals:         0       0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    3
  9794 ;; This function calls:
  9795 ;;		_lcd_write_control
  9796 ;; This function is called by:
  9797 ;;		_init
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           psect	text1127
  9801                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9802                           	line	101
  9803                           	global	__size_of_lcd_init
  9804  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  9805                           	
  9806  1B6C                     _lcd_init:	
  9807                           	opt	stack 3
  9808                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  9809                           	line	105
  9810                           	
  9811  1B6C                     l11754:	
  9812                           ;lcd.c: 105: ADCON1 = 0b00000010;
  9813  1B6C  3002               	movlw	(02h)
  9814  1B6D  1683               	bsf	status, 5	;RP0=1, select bank1
  9815  1B6E  1303               	bcf	status, 6	;RP1=0, select bank1
  9816  1B6F  009F               	movwf	(159)^080h	;volatile
  9817                           	line	108
  9818                           	
  9819  1B70                     l11756:	
  9820                           ;lcd.c: 108: PORTD = 0;
  9821  1B70  1283               	bcf	status, 5	;RP0=0, select bank0
  9822  1B71  1303               	bcf	status, 6	;RP1=0, select bank0
  9823  1B72  0188               	clrf	(8)	;volatile
  9824                           	line	109
  9825                           	
  9826  1B73                     l11758:	
  9827                           ;lcd.c: 109: PORTE = 0;
  9828  1B73  0189               	clrf	(9)	;volatile
  9829                           	line	111
  9830                           	
  9831  1B74                     l11760:	
  9832                           ;lcd.c: 111: TRISD = 0b00000000;
  9833  1B74  1683               	bsf	status, 5	;RP0=1, select bank1
  9834  1B75  1303               	bcf	status, 6	;RP1=0, select bank1
  9835  1B76  0188               	clrf	(136)^080h	;volatile
  9836                           	line	112
  9837                           	
  9838  1B77                     l11762:	
  9839                           ;lcd.c: 112: TRISE = 0b00000000;
  9840  1B77  0189               	clrf	(137)^080h	;volatile
  9841                           	line	115
  9842                           	
  9843  1B78                     l11764:	
  9844                           ;lcd.c: 115: lcd_write_control(0b00000001);
  9845  1B78  3001               	movlw	(01h)
  9846  1B79  160A  158A  2246   	fcall	_lcd_write_control
              160A  158A         
  9847                           	line	116
  9848                           	
  9849  1B7E                     l11766:	
  9850                           ;lcd.c: 116: lcd_write_control(0b00111000);
  9851  1B7E  3038               	movlw	(038h)
  9852  1B7F  160A  158A  2246   	fcall	_lcd_write_control
              160A  158A         
  9853                           	line	117
  9854                           	
  9855  1B84                     l11768:	
  9856                           ;lcd.c: 117: lcd_write_control(0b00001100);
  9857  1B84  300C               	movlw	(0Ch)
  9858  1B85  160A  158A  2246   	fcall	_lcd_write_control
              160A  158A         
  9859                           	line	118
  9860                           	
  9861  1B8A                     l11770:	
  9862                           ;lcd.c: 118: lcd_write_control(0b00000110);
  9863  1B8A  3006               	movlw	(06h)
  9864  1B8B  160A  158A  2246   	fcall	_lcd_write_control
              160A  158A         
  9865                           	line	119
  9866                           	
  9867  1B90                     l11772:	
  9868                           ;lcd.c: 119: lcd_write_control(0b00000010);
  9869  1B90  3002               	movlw	(02h)
  9870  1B91  160A  158A  2246   	fcall	_lcd_write_control
              160A  158A         
  9871                           	line	121
  9872                           	
  9873  1B96                     l1429:	
  9874  1B96  0008               	return
  9875                           	opt stack 0
  9876                           GLOBAL	__end_of_lcd_init
  9877  1B97                     	__end_of_lcd_init:
  9878 ;; =============== function _lcd_init ends ============
  9879                           
  9880                           	signat	_lcd_init,88
  9881                           	global	_lcd_write_string
  9882                           psect	text1128,local,class=CODE,delta=2
  9883                           global __ptext1128
  9884  1BEF                     __ptext1128:
  9885                           
  9886 ;; *************** function _lcd_write_string *****************
  9887 ;; Defined at:
  9888 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  s               2    7[BANK0 ] PTR unsigned char 
  9891 ;;		 -> STR_26(9), STR_25(3), STR_24(3), STR_23(3), 
  9892 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_18(16), 
  9893 ;;		 -> STR_17(4), STR_16(8), STR_15(4), STR_14(16), 
  9894 ;;		 -> UpdateDisplay@LCDOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  9895 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  9896 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  9897 ;;		 -> STR_1(9), 
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;		None               void
  9902 ;; Registers used:
  9903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9909 ;;      Params:         0       2       0       0       0
  9910 ;;      Locals:         0       0       0       0       0
  9911 ;;      Temps:          0       0       0       0       0
  9912 ;;      Totals:         0       2       0       0       0
  9913 ;;Total ram usage:        2 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; Hardware stack levels required when called:    3
  9916 ;; This function calls:
  9917 ;;		_lcd_write_data
  9918 ;; This function is called by:
  9919 ;;		_UpdateDisplay
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           psect	text1128
  9923                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9924                           	line	48
  9925                           	global	__size_of_lcd_write_string
  9926  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  9927                           	
  9928  1BEF                     _lcd_write_string:	
  9929                           	opt	stack 2
  9930                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9931                           	line	50
  9932                           	
  9933  1BEF                     l11746:	
  9934                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  9935  1BEF  2C09               	goto	l11752
  9936                           	
  9937  1BF0                     l1409:	
  9938                           	
  9939  1BF0                     l11748:	
  9940  1BF0  1283               	bcf	status, 5	;RP0=0, select bank0
  9941  1BF1  1303               	bcf	status, 6	;RP1=0, select bank0
  9942  1BF2  0828               	movf	(lcd_write_string@s+1),w
  9943  1BF3  00FF               	movwf	btemp+1
  9944  1BF4  0827               	movf	(lcd_write_string@s),w
  9945  1BF5  0084               	movwf	fsr0
  9946  1BF6  160A  118A  2000   	fcall	stringtab
              160A  158A         
  9947  1BFB  160A  158A  220C   	fcall	_lcd_write_data
              160A  158A         
  9948                           	
  9949  1C00                     l11750:	
  9950  1C00  3001               	movlw	low(01h)
  9951  1C01  1283               	bcf	status, 5	;RP0=0, select bank0
  9952  1C02  1303               	bcf	status, 6	;RP1=0, select bank0
  9953  1C03  07A7               	addwf	(lcd_write_string@s),f
  9954  1C04  1803               	skipnc
  9955  1C05  0AA8               	incf	(lcd_write_string@s+1),f
  9956  1C06  3000               	movlw	high(01h)
  9957  1C07  07A8               	addwf	(lcd_write_string@s+1),f
  9958  1C08  2C09               	goto	l11752
  9959                           	
  9960  1C09                     l1408:	
  9961                           	
  9962  1C09                     l11752:	
  9963  1C09  1283               	bcf	status, 5	;RP0=0, select bank0
  9964  1C0A  1303               	bcf	status, 6	;RP1=0, select bank0
  9965  1C0B  0828               	movf	(lcd_write_string@s+1),w
  9966  1C0C  00FF               	movwf	btemp+1
  9967  1C0D  0827               	movf	(lcd_write_string@s),w
  9968  1C0E  0084               	movwf	fsr0
  9969  1C0F  160A  118A  2000   	fcall	stringtab
              160A  158A         
  9970  1C14  3800               	iorlw	0
  9971  1C15  1D03               	skipz
  9972  1C16  2C18               	goto	u5101
  9973  1C17  2C19               	goto	u5100
  9974  1C18                     u5101:
  9975  1C18  2BF0               	goto	l11748
  9976  1C19                     u5100:
  9977  1C19  2C1A               	goto	l1411
  9978                           	
  9979  1C1A                     l1410:	
  9980                           	line	51
  9981                           	
  9982  1C1A                     l1411:	
  9983  1C1A  0008               	return
  9984                           	opt stack 0
  9985                           GLOBAL	__end_of_lcd_write_string
  9986  1C1B                     	__end_of_lcd_write_string:
  9987 ;; =============== function _lcd_write_string ends ============
  9988                           
  9989                           	signat	_lcd_write_string,4216
  9990                           	global	_lcd_set_cursor
  9991                           psect	text1129,local,class=CODE,delta=2
  9992                           global __ptext1129
  9993  19F4                     __ptext1129:
  9994                           
  9995 ;; *************** function _lcd_set_cursor *****************
  9996 ;; Defined at:
  9997 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  address         1    wreg     unsigned char 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  address         1    3[BANK0 ] unsigned char 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;		None               void
 10004 ;; Registers used:
 10005 ;;		wreg, status,2, status,0, pclath, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10011 ;;      Params:         0       0       0       0       0
 10012 ;;      Locals:         0       1       0       0       0
 10013 ;;      Temps:          0       0       0       0       0
 10014 ;;      Totals:         0       1       0       0       0
 10015 ;;Total ram usage:        1 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    3
 10018 ;; This function calls:
 10019 ;;		_lcd_write_control
 10020 ;; This function is called by:
 10021 ;;		_UpdateDisplay
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           psect	text1129
 10025                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10026                           	line	42
 10027                           	global	__size_of_lcd_set_cursor
 10028  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
 10029                           	
 10030  19F4                     _lcd_set_cursor:	
 10031                           	opt	stack 2
 10032                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
 10033                           ;lcd_set_cursor@address stored from wreg
 10034  19F4  1283               	bcf	status, 5	;RP0=0, select bank0
 10035  19F5  1303               	bcf	status, 6	;RP1=0, select bank0
 10036  19F6  00A3               	movwf	(lcd_set_cursor@address)
 10037                           	line	43
 10038                           	
 10039  19F7                     l11742:	
 10040                           ;lcd.c: 43: address |= 0b10000000;
 10041  19F7  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
 10042                           	line	44
 10043                           	
 10044  19F8                     l11744:	
 10045                           ;lcd.c: 44: lcd_write_control(address);
 10046  19F8  0823               	movf	(lcd_set_cursor@address),w
 10047  19F9  160A  158A  2246   	fcall	_lcd_write_control
              160A  158A         
 10048                           	line	45
 10049                           	
 10050  19FE                     l1405:	
 10051  19FE  0008               	return
 10052                           	opt stack 0
 10053                           GLOBAL	__end_of_lcd_set_cursor
 10054  19FF                     	__end_of_lcd_set_cursor:
 10055 ;; =============== function _lcd_set_cursor ends ============
 10056                           
 10057                           	signat	_lcd_set_cursor,4216
 10058                           	global	_abs
 10059                           psect	text1130,local,class=CODE,delta=2
 10060                           global __ptext1130
 10061  1C77                     __ptext1130:
 10062                           
 10063 ;; *************** function _abs *****************
 10064 ;; Defined at:
 10065 ;;		line 558 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  v               2    6[BANK0 ] int 
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  2    6[BANK0 ] int 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10079 ;;      Params:         0       2       0       0       0
 10080 ;;      Locals:         0       0       0       0       0
 10081 ;;      Temps:          0       2       0       0       0
 10082 ;;      Totals:         0       4       0       0       0
 10083 ;;Total ram usage:        4 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    3
 10086 ;; This function calls:
 10087 ;;		___wmul
 10088 ;; This function is called by:
 10089 ;;		_robot_turnRight
 10090 ;;		_robotMoveSpeed
 10091 ;;		_robotTurnSpeed
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           psect	text1130
 10095                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 10096                           	line	558
 10097                           	global	__size_of_abs
 10098  0035                     	__size_of_abs	equ	__end_of_abs-_abs
 10099                           	
 10100  1C77                     _abs:	
 10101                           	opt	stack 2
 10102                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10103                           	line	559
 10104                           	
 10105  1C77                     l11738:	
 10106                           ;robot.c: 559: return (v * ((v > 0) - (v < 0)));
 10107  1C77  3000               	movlw	0
 10108  1C78  1283               	bcf	status, 5	;RP0=0, select bank0
 10109  1C79  1303               	bcf	status, 6	;RP1=0, select bank0
 10110  1C7A  1BA7               	btfsc	(abs@v+1),7
 10111  1C7B  3001               	movlw	1
 10112  1C7C  00A8               	movwf	(??_abs+0)+0
 10113  1C7D  01A9               	clrf	(??_abs+0)+0+1
 10114  1C7E  09A8               	comf	(??_abs+0)+0,f
 10115  1C7F  09A9               	comf	(??_abs+0)+1,f
 10116  1C80  0AA8               	incf	(??_abs+0)+0,f
 10117  1C81  1903               	skipnz
 10118  1C82  0AA9               	incf	(??_abs+0)+1,f
 10119  1C83  0827               	movf	(abs@v+1),w
 10120  1C84  3A80               	xorlw	80h
 10121  1C85  00FF               	movwf	btemp+1
 10122  1C86  3080               	movlw	(high(01h))^80h
 10123  1C87  027F               	subwf	btemp+1,w
 10124  1C88  1D03               	skipz
 10125  1C89  2C8C               	goto	u5095
 10126  1C8A  3001               	movlw	low(01h)
 10127  1C8B  0226               	subwf	(abs@v),w
 10128  1C8C                     u5095:
 10129                           
 10130  1C8C  3000               	movlw	0
 10131  1C8D  1803               	skipnc
 10132  1C8E  3001               	movlw	1
 10133  1C8F  1283               	bcf	status, 5	;RP0=0, select bank0
 10134  1C90  1303               	bcf	status, 6	;RP1=0, select bank0
 10135  1C91  0728               	addwf	0+(??_abs+0)+0,w
 10136  1C92  00A0               	movwf	(?___wmul)
 10137  1C93  0829               	movf	1+(??_abs+0)+0,w
 10138  1C94  1803               	skipnc
 10139  1C95  0A29               	incf	1+(??_abs+0)+0,w
 10140  1C96  00A1               	movwf	((?___wmul))+1
 10141  1C97  0827               	movf	(abs@v+1),w
 10142  1C98  01A3               	clrf	1+(?___wmul)+02h
 10143  1C99  07A3               	addwf	1+(?___wmul)+02h
 10144  1C9A  0826               	movf	(abs@v),w
 10145  1C9B  01A2               	clrf	0+(?___wmul)+02h
 10146  1C9C  07A2               	addwf	0+(?___wmul)+02h
 10147                           
 10148  1C9D  160A  158A  2397   	fcall	___wmul
              160A  158A         
 10149  1CA2  1283               	bcf	status, 5	;RP0=0, select bank0
 10150  1CA3  1303               	bcf	status, 6	;RP1=0, select bank0
 10151  1CA4  0821               	movf	(1+(?___wmul)),w
 10152  1CA5  01A7               	clrf	(?_abs+1)
 10153  1CA6  07A7               	addwf	(?_abs+1)
 10154  1CA7  0820               	movf	(0+(?___wmul)),w
 10155  1CA8  01A6               	clrf	(?_abs)
 10156  1CA9  07A6               	addwf	(?_abs)
 10157                           
 10158  1CAA  2CAB               	goto	l6328
 10159                           	
 10160  1CAB                     l11740:	
 10161                           	line	560
 10162                           	
 10163  1CAB                     l6328:	
 10164  1CAB  0008               	return
 10165                           	opt stack 0
 10166                           GLOBAL	__end_of_abs
 10167  1CAC                     	__end_of_abs:
 10168 ;; =============== function _abs ends ============
 10169                           
 10170                           	signat	_abs,4218
 10171                           	global	_robotTurn
 10172                           psect	text1131,local,class=CODE,delta=2
 10173                           global __ptext1131
 10174  112D                     __ptext1131:
 10175                           
 10176 ;; *************** function _robotTurn *****************
 10177 ;; Defined at:
 10178 ;;		line 143 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  angle           2    2[BANK0 ] int 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;		None               void
 10185 ;; Registers used:
 10186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10192 ;;      Params:         0       2       0       0       0
 10193 ;;      Locals:         0       0       0       0       0
 10194 ;;      Temps:          0       0       0       0       0
 10195 ;;      Totals:         0       2       0       0       0
 10196 ;;Total ram usage:        2 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    3
 10199 ;; This function calls:
 10200 ;;		_ser_putch
 10201 ;; This function is called by:
 10202 ;;		_robotTurnSpeed
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           psect	text1131
 10206                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 10207                           	line	143
 10208                           	global	__size_of_robotTurn
 10209  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
 10210                           	
 10211  112D                     _robotTurn:	
 10212                           	opt	stack 1
 10213                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10214                           	line	145
 10215                           	
 10216  112D                     l11730:	
 10217                           ;robot.c: 145: if (angle > 0)
 10218  112D  1283               	bcf	status, 5	;RP0=0, select bank0
 10219  112E  1303               	bcf	status, 6	;RP1=0, select bank0
 10220  112F  0823               	movf	(robotTurn@angle+1),w
 10221  1130  3A80               	xorlw	80h
 10222  1131  00FF               	movwf	btemp+1
 10223  1132  3080               	movlw	(high(01h))^80h
 10224  1133  027F               	subwf	btemp+1,w
 10225  1134  1D03               	skipz
 10226  1135  2938               	goto	u5075
 10227  1136  3001               	movlw	low(01h)
 10228  1137  0222               	subwf	(robotTurn@angle),w
 10229  1138                     u5075:
 10230                           
 10231  1138  1C03               	skipc
 10232  1139  293B               	goto	u5071
 10233  113A  293C               	goto	u5070
 10234  113B                     u5071:
 10235  113B  295B               	goto	l6230
 10236  113C                     u5070:
 10237                           	line	147
 10238                           	
 10239  113C                     l11732:	
 10240                           ;robot.c: 146: {
 10241                           ;robot.c: 147: ser_putch(137);
 10242  113C  3089               	movlw	(089h)
 10243  113D  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10244                           	line	149
 10245                           ;robot.c: 149: ser_putch(0);
 10246  1142  3000               	movlw	(0)
 10247  1143  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10248                           	line	151
 10249                           ;robot.c: 151: ser_putch(200);
 10250  1148  30C8               	movlw	(0C8h)
 10251  1149  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10252                           	line	153
 10253                           ;robot.c: 153: ser_putch(0);
 10254  114E  3000               	movlw	(0)
 10255  114F  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10256                           	line	155
 10257                           ;robot.c: 155: ser_putch(1);
 10258  1154  3001               	movlw	(01h)
 10259  1155  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10260                           	line	156
 10261                           ;robot.c: 156: }
 10262  115A  29A0               	goto	l6234
 10263                           	line	157
 10264                           	
 10265  115B                     l6230:	
 10266                           ;robot.c: 157: else if (angle < 0)
 10267  115B  1283               	bcf	status, 5	;RP0=0, select bank0
 10268  115C  1303               	bcf	status, 6	;RP1=0, select bank0
 10269  115D  1FA3               	btfss	(robotTurn@angle+1),7
 10270  115E  2960               	goto	u5081
 10271  115F  2961               	goto	u5080
 10272  1160                     u5081:
 10273  1160  2980               	goto	l11736
 10274  1161                     u5080:
 10275                           	line	159
 10276                           	
 10277  1161                     l11734:	
 10278                           ;robot.c: 158: {
 10279                           ;robot.c: 159: ser_putch(137);
 10280  1161  3089               	movlw	(089h)
 10281  1162  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10282                           	line	161
 10283                           ;robot.c: 161: ser_putch(0);
 10284  1167  3000               	movlw	(0)
 10285  1168  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10286                           	line	163
 10287                           ;robot.c: 163: ser_putch(200);
 10288  116D  30C8               	movlw	(0C8h)
 10289  116E  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10290                           	line	165
 10291                           ;robot.c: 165: ser_putch(255);
 10292  1173  30FF               	movlw	(0FFh)
 10293  1174  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10294                           	line	167
 10295                           ;robot.c: 167: ser_putch(255);
 10296  1179  30FF               	movlw	(0FFh)
 10297  117A  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10298                           	line	168
 10299                           ;robot.c: 168: }
 10300  117F  29A0               	goto	l6234
 10301                           	line	169
 10302                           	
 10303  1180                     l6232:	
 10304                           	line	171
 10305                           	
 10306  1180                     l11736:	
 10307                           ;robot.c: 169: else
 10308                           ;robot.c: 170: {
 10309                           ;robot.c: 171: ser_putch(137);
 10310  1180  3089               	movlw	(089h)
 10311  1181  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10312                           	line	173
 10313                           ;robot.c: 173: ser_putch(0);
 10314  1186  3000               	movlw	(0)
 10315  1187  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10316                           	line	175
 10317                           ;robot.c: 175: ser_putch(0);
 10318  118C  3000               	movlw	(0)
 10319  118D  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10320                           	line	177
 10321                           ;robot.c: 177: ser_putch(0);
 10322  1192  3000               	movlw	(0)
 10323  1193  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10324                           	line	179
 10325                           ;robot.c: 179: ser_putch(0);
 10326  1198  3000               	movlw	(0)
 10327  1199  160A  158A  241B   	fcall	_ser_putch
              160A  118A         
 10328  119E  29A0               	goto	l6234
 10329                           	line	180
 10330                           	
 10331  119F                     l6233:	
 10332  119F  29A0               	goto	l6234
 10333                           	
 10334  11A0                     l6231:	
 10335                           	line	181
 10336                           	
 10337  11A0                     l6234:	
 10338  11A0  0008               	return
 10339                           	opt stack 0
 10340                           GLOBAL	__end_of_robotTurn
 10341  11A1                     	__end_of_robotTurn:
 10342 ;; =============== function _robotTurn ends ============
 10343                           
 10344                           	signat	_robotTurn,4216
 10345                           	global	_ser_getch
 10346                           psect	text1132,local,class=CODE,delta=2
 10347                           global __ptext1132
 10348  1BC3                     __ptext1132:
 10349                           
 10350 ;; *************** function _ser_getch *****************
 10351 ;; Defined at:
 10352 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  c               1    1[BANK0 ] unsigned char 
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      unsigned char 
 10359 ;; Registers used:
 10360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10366 ;;      Params:         0       0       0       0       0
 10367 ;;      Locals:         0       1       0       0       0
 10368 ;;      Temps:          0       1       0       0       0
 10369 ;;      Totals:         0       2       0       0       0
 10370 ;;Total ram usage:        2 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    3
 10373 ;; This function calls:
 10374 ;;		_ser_isrx
 10375 ;; This function is called by:
 10376 ;;		_robot_read
 10377 ;;		_RobotBattRead
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           psect	text1132
 10381                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10382                           	line	55
 10383                           	global	__size_of_ser_getch
 10384  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
 10385                           	
 10386  1BC3                     _ser_getch:	
 10387                           	opt	stack 2
 10388                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10389                           	line	58
 10390                           	
 10391  1BC3                     l11714:	
 10392                           ;ser.c: 56: unsigned char c;
 10393                           ;ser.c: 58: while (ser_isrx()==0)
 10394  1BC3  2BC5               	goto	l11716
 10395                           	
 10396  1BC4                     l7035:	
 10397                           	line	59
 10398                           ;ser.c: 59: continue;
 10399  1BC4  2BC5               	goto	l11716
 10400                           	
 10401  1BC5                     l7034:	
 10402                           	line	58
 10403                           	
 10404  1BC5                     l11716:	
 10405  1BC5  160A  158A  229D   	fcall	_ser_isrx
              160A  158A         
 10406  1BCA  1C03               	btfss	status,0
 10407  1BCB  2BCD               	goto	u5061
 10408  1BCC  2BCE               	goto	u5060
 10409  1BCD                     u5061:
 10410  1BCD  2BC5               	goto	l11716
 10411  1BCE                     u5060:
 10412                           	
 10413  1BCE                     l7036:	
 10414                           	line	61
 10415                           ;ser.c: 61: GIE=0;
 10416  1BCE  138B               	bcf	(95/8),(95)&7
 10417                           	line	62
 10418                           	
 10419  1BCF                     l11718:	
 10420                           ;ser.c: 62: c=rxfifo[rxoptr];
 10421  1BCF  1683               	bsf	status, 5	;RP0=1, select bank1
 10422  1BD0  1303               	bcf	status, 6	;RP1=0, select bank1
 10423  1BD1  0851               	movf	(_rxoptr)^080h,w
 10424  1BD2  3EA0               	addlw	_rxfifo&0ffh
 10425  1BD3  0084               	movwf	fsr0
 10426  1BD4  1783               	bsf	status, 7	;select IRP bank3
 10427  1BD5  0800               	movf	indf,w
 10428  1BD6  1283               	bcf	status, 5	;RP0=0, select bank0
 10429  1BD7  1303               	bcf	status, 6	;RP1=0, select bank0
 10430  1BD8  00A0               	movwf	(??_ser_getch+0)+0
 10431  1BD9  0820               	movf	(??_ser_getch+0)+0,w
 10432  1BDA  00A1               	movwf	(ser_getch@c)
 10433                           	line	63
 10434                           	
 10435  1BDB                     l11720:	
 10436                           ;ser.c: 63: ++rxoptr;
 10437  1BDB  3001               	movlw	(01h)
 10438  1BDC  00A0               	movwf	(??_ser_getch+0)+0
 10439  1BDD  0820               	movf	(??_ser_getch+0)+0,w
 10440  1BDE  1683               	bsf	status, 5	;RP0=1, select bank1
 10441  1BDF  1303               	bcf	status, 6	;RP1=0, select bank1
 10442  1BE0  07D1               	addwf	(_rxoptr)^080h,f	;volatile
 10443                           	line	64
 10444                           	
 10445  1BE1                     l11722:	
 10446                           ;ser.c: 64: rxoptr &= (16-1);
 10447  1BE1  300F               	movlw	(0Fh)
 10448  1BE2  1283               	bcf	status, 5	;RP0=0, select bank0
 10449  1BE3  1303               	bcf	status, 6	;RP1=0, select bank0
 10450  1BE4  00A0               	movwf	(??_ser_getch+0)+0
 10451  1BE5  0820               	movf	(??_ser_getch+0)+0,w
 10452  1BE6  1683               	bsf	status, 5	;RP0=1, select bank1
 10453  1BE7  1303               	bcf	status, 6	;RP1=0, select bank1
 10454  1BE8  05D1               	andwf	(_rxoptr)^080h,f	;volatile
 10455                           	line	65
 10456                           	
 10457  1BE9                     l11724:	
 10458                           ;ser.c: 65: GIE=1;
 10459  1BE9  178B               	bsf	(95/8),(95)&7
 10460                           	line	66
 10461                           	
 10462  1BEA                     l11726:	
 10463                           ;ser.c: 66: return c;
 10464  1BEA  1283               	bcf	status, 5	;RP0=0, select bank0
 10465  1BEB  1303               	bcf	status, 6	;RP1=0, select bank0
 10466  1BEC  0821               	movf	(ser_getch@c),w
 10467  1BED  2BEE               	goto	l7037
 10468                           	
 10469  1BEE                     l11728:	
 10470                           	line	67
 10471                           	
 10472  1BEE                     l7037:	
 10473  1BEE  0008               	return
 10474                           	opt stack 0
 10475                           GLOBAL	__end_of_ser_getch
 10476  1BEF                     	__end_of_ser_getch:
 10477 ;; =============== function _ser_getch ends ============
 10478                           
 10479                           	signat	_ser_getch,89
 10480                           	global	_sprintf
 10481                           psect	text1133,local,class=CODE,delta=2
 10482                           global __ptext1133
 10483  0805                     __ptext1133:
 10484                           
 10485 ;; *************** function _sprintf *****************
 10486 ;; Defined at:
 10487 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;  sp              1    wreg     PTR unsigned char 
 10490 ;;		 -> UpdateDisplay@LCDOutput(16), 
 10491 ;;  f               1   20[BANK0 ] PTR const unsigned char 
 10492 ;;		 -> STR_28(15), STR_27(16), STR_19(5), STR_13(15), 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  sp              1   35[BANK0 ] PTR unsigned char 
 10495 ;;		 -> UpdateDisplay@LCDOutput(16), 
 10496 ;;  _val            4   31[BANK0 ] struct .
 10497 ;;  width           2   36[BANK0 ] int 
 10498 ;;  c               1   38[BANK0 ] char 
 10499 ;;  flag            1   30[BANK0 ] unsigned char 
 10500 ;;  prec            1   29[BANK0 ] char 
 10501 ;;  ap              1   28[BANK0 ] PTR void [1]
 10502 ;;		 -> ?_sprintf(2), 
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  2   20[BANK0 ] int 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10512 ;;      Params:         0       5       0       0       0
 10513 ;;      Locals:         0      11       0       0       0
 10514 ;;      Temps:          0       3       0       0       0
 10515 ;;      Totals:         0      19       0       0       0
 10516 ;;Total ram usage:       19 bytes
 10517 ;; Hardware stack levels used:    1
 10518 ;; Hardware stack levels required when called:    3
 10519 ;; This function calls:
 10520 ;;		_isdigit
 10521 ;;		___wmul
 10522 ;;		___lwdiv
 10523 ;;		___lwmod
 10524 ;; This function is called by:
 10525 ;;		_UpdateDisplay
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           psect	text1133
 10529                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
 10530                           	line	488
 10531                           	global	__size_of_sprintf
 10532  01B6                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
 10533                           	
 10534  0805                     _sprintf:	
 10535                           	opt	stack 2
 10536                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10537                           ;sprintf@sp stored from wreg
 10538                           	line	537
 10539  0805  1283               	bcf	status, 5	;RP0=0, select bank0
 10540  0806  1303               	bcf	status, 6	;RP1=0, select bank0
 10541  0807  00C3               	movwf	(sprintf@sp)
 10542                           	
 10543  0808                     l11624:	
 10544  0808  3035               	movlw	(?_sprintf+01h)&0ffh
 10545  0809  00B9               	movwf	(??_sprintf+0)+0
 10546  080A  0839               	movf	(??_sprintf+0)+0,w
 10547  080B  00BC               	movwf	(sprintf@ap)
 10548                           	line	540
 10549  080C  299D               	goto	l11708
 10550                           	
 10551  080D                     l7077:	
 10552                           	line	542
 10553                           	
 10554  080D                     l11626:	
 10555  080D  0846               	movf	(sprintf@c),w
 10556  080E  3A25               	xorlw	025h
 10557  080F  1903               	skipnz
 10558  0810  2812               	goto	u4911
 10559  0811  2813               	goto	u4910
 10560  0812                     u4911:
 10561  0812  281F               	goto	l11632
 10562  0813                     u4910:
 10563                           	line	545
 10564                           	
 10565  0813                     l11628:	
 10566  0813  0846               	movf	(sprintf@c),w
 10567  0814  00B9               	movwf	(??_sprintf+0)+0
 10568  0815  0843               	movf	(sprintf@sp),w
 10569  0816  0084               	movwf	fsr0
 10570  0817  0839               	movf	(??_sprintf+0)+0,w
 10571  0818  1383               	bcf	status, 7	;select IRP bank0
 10572  0819  0080               	movwf	indf
 10573                           	
 10574  081A                     l11630:	
 10575  081A  3001               	movlw	(01h)
 10576  081B  00B9               	movwf	(??_sprintf+0)+0
 10577  081C  0839               	movf	(??_sprintf+0)+0,w
 10578  081D  07C3               	addwf	(sprintf@sp),f
 10579                           	line	546
 10580  081E  299D               	goto	l11708
 10581                           	line	547
 10582                           	
 10583  081F                     l7078:	
 10584                           	line	550
 10585                           	
 10586  081F                     l11632:	
 10587  081F  01C4               	clrf	(sprintf@width)
 10588  0820  01C5               	clrf	(sprintf@width+1)
 10589                           	line	552
 10590                           	
 10591  0821                     l11634:	
 10592  0821  01BE               	clrf	(sprintf@flag)
 10593                           	line	601
 10594                           	
 10595  0822                     l11636:	
 10596  0822  0834               	movf	(sprintf@f),w
 10597  0823  0084               	movwf	fsr0
 10598  0824  160A  118A  200A   	fcall	stringdir
              120A  158A         
 10599  0829  160A  158A  2286   	fcall	_isdigit
              120A  158A         
 10600  082E  1C03               	btfss	status,0
 10601  082F  2831               	goto	u4921
 10602  0830  2832               	goto	u4920
 10603  0831                     u4921:
 10604  0831  287C               	goto	l11648
 10605  0832                     u4920:
 10606                           	line	602
 10607                           	
 10608  0832                     l11638:	
 10609  0832  1283               	bcf	status, 5	;RP0=0, select bank0
 10610  0833  1303               	bcf	status, 6	;RP1=0, select bank0
 10611  0834  01C4               	clrf	(sprintf@width)
 10612  0835  01C5               	clrf	(sprintf@width+1)
 10613  0836  2837               	goto	l11640
 10614                           	line	603
 10615                           	
 10616  0837                     l7080:	
 10617                           	line	604
 10618                           	
 10619  0837                     l11640:	
 10620  0837  1283               	bcf	status, 5	;RP0=0, select bank0
 10621  0838  1303               	bcf	status, 6	;RP1=0, select bank0
 10622  0839  0845               	movf	(sprintf@width+1),w
 10623  083A  01A1               	clrf	(?___wmul+1)
 10624  083B  07A1               	addwf	(?___wmul+1)
 10625  083C  0844               	movf	(sprintf@width),w
 10626  083D  01A0               	clrf	(?___wmul)
 10627  083E  07A0               	addwf	(?___wmul)
 10628                           
 10629  083F  300A               	movlw	low(0Ah)
 10630  0840  00A2               	movwf	0+(?___wmul)+02h
 10631  0841  3000               	movlw	high(0Ah)
 10632  0842  00A3               	movwf	(0+(?___wmul)+02h)+1
 10633  0843  160A  158A  2397   	fcall	___wmul
              120A  158A         
 10634  0848  1283               	bcf	status, 5	;RP0=0, select bank0
 10635  0849  1303               	bcf	status, 6	;RP1=0, select bank0
 10636  084A  0834               	movf	(sprintf@f),w
 10637  084B  0084               	movwf	fsr0
 10638  084C  160A  118A  200A   	fcall	stringdir
              120A  158A         
 10639  0851  0720               	addwf	(0+(?___wmul)),w
 10640  0852  00B9               	movwf	(??_sprintf+0)+0
 10641  0853  3000               	movlw	0
 10642  0854  1803               	skipnc
 10643  0855  3001               	movlw	1
 10644  0856  0721               	addwf	(1+(?___wmul)),w
 10645  0857  00BA               	movwf	1+(??_sprintf+0)+0
 10646  0858  0839               	movf	0+(??_sprintf+0)+0,w
 10647  0859  3ED0               	addlw	low(0FFD0h)
 10648  085A  00C4               	movwf	(sprintf@width)
 10649  085B  083A               	movf	1+(??_sprintf+0)+0,w
 10650  085C  1803               	skipnc
 10651  085D  3E01               	addlw	1
 10652  085E  3EFF               	addlw	high(0FFD0h)
 10653  085F  00C5               	movwf	1+(sprintf@width)
 10654                           	
 10655  0860                     l11642:	
 10656  0860  3001               	movlw	(01h)
 10657  0861  00B9               	movwf	(??_sprintf+0)+0
 10658  0862  0839               	movf	(??_sprintf+0)+0,w
 10659  0863  07B4               	addwf	(sprintf@f),f
 10660                           	line	605
 10661                           	
 10662  0864                     l11644:	
 10663  0864  0834               	movf	(sprintf@f),w
 10664  0865  0084               	movwf	fsr0
 10665  0866  160A  118A  200A   	fcall	stringdir
              120A  158A         
 10666  086B  160A  158A  2286   	fcall	_isdigit
              120A  158A         
 10667  0870  1803               	btfsc	status,0
 10668  0871  2873               	goto	u4931
 10669  0872  2874               	goto	u4930
 10670  0873                     u4931:
 10671  0873  2837               	goto	l11640
 10672  0874                     u4930:
 10673  0874  287C               	goto	l11648
 10674                           	
 10675  0875                     l7081:	
 10676  0875  287C               	goto	l11648
 10677                           	line	611
 10678                           	
 10679  0876                     l7079:	
 10680                           	line	638
 10681  0876  287C               	goto	l11648
 10682                           	line	640
 10683                           	
 10684  0877                     l7083:	
 10685                           	line	641
 10686  0877  29B3               	goto	l11710
 10687                           	line	700
 10688                           	
 10689  0878                     l7085:	
 10690  0878  2893               	goto	l11650
 10691                           	line	701
 10692                           	
 10693  0879                     l7086:	
 10694                           	line	702
 10695  0879  2893               	goto	l11650
 10696                           	line	805
 10697                           	
 10698  087A                     l7088:	
 10699                           	line	816
 10700  087A  299D               	goto	l11708
 10701                           	line	825
 10702                           	
 10703  087B                     l11646:	
 10704  087B  2893               	goto	l11650
 10705                           	line	638
 10706                           	
 10707  087C                     l7082:	
 10708                           	
 10709  087C                     l11648:	
 10710  087C  3001               	movlw	01h
 10711  087D  1283               	bcf	status, 5	;RP0=0, select bank0
 10712  087E  1303               	bcf	status, 6	;RP1=0, select bank0
 10713  087F  07B4               	addwf	(sprintf@f),f
 10714  0880  30FF               	movlw	-01h
 10715  0881  0734               	addwf	(sprintf@f),w
 10716  0882  0084               	movwf	fsr0
 10717  0883  160A  118A  200A   	fcall	stringdir
              120A  158A         
 10718  0888  00C6               	movwf	(sprintf@c)
 10719                           	; Switch size 1, requested type "space"
 10720                           ; Number of cases is 3, Range of values is 0 to 105
 10721                           ; switch strategies available:
 10722                           ; Name         Instructions Cycles
 10723                           ; simple_byte           10     6 (average)
 10724                           ; jumptable            260     6 (fixed)
 10725                           ; rangetable           110     6 (fixed)
 10726                           ; spacedrange          218     9 (fixed)
 10727                           ; locatedrange         106     3 (fixed)
 10728                           ;	Chosen strategy is simple_byte
 10729                           
 10730                           	opt asmopt_off
 10731  0889  3A00               	xorlw	0^0	; case 0
 10732  088A  1903               	skipnz
 10733  088B  29B3               	goto	l11710
 10734  088C  3A64               	xorlw	100^0	; case 100
 10735  088D  1903               	skipnz
 10736  088E  2893               	goto	l11650
 10737  088F  3A0D               	xorlw	105^100	; case 105
 10738  0890  1903               	skipnz
 10739  0891  2893               	goto	l11650
 10740  0892  299D               	goto	l11708
 10741                           	opt asmopt_on
 10742                           
 10743                           	line	825
 10744                           	
 10745  0893                     l7087:	
 10746                           	line	1254
 10747                           	
 10748  0893                     l11650:	
 10749  0893  1283               	bcf	status, 5	;RP0=0, select bank0
 10750  0894  1303               	bcf	status, 6	;RP1=0, select bank0
 10751  0895  083C               	movf	(sprintf@ap),w
 10752  0896  0084               	movwf	fsr0
 10753  0897  1383               	bcf	status, 7	;select IRP bank0
 10754  0898  0800               	movf	indf,w
 10755  0899  00BF               	movwf	(sprintf@_val)
 10756  089A  0A84               	incf	fsr0,f
 10757  089B  0800               	movf	indf,w
 10758  089C  00C0               	movwf	(sprintf@_val+1)
 10759                           	
 10760  089D                     l11652:	
 10761  089D  3002               	movlw	(02h)
 10762  089E  00B9               	movwf	(??_sprintf+0)+0
 10763  089F  0839               	movf	(??_sprintf+0)+0,w
 10764  08A0  07BC               	addwf	(sprintf@ap),f
 10765                           	line	1256
 10766                           	
 10767  08A1                     l11654:	
 10768  08A1  1FC0               	btfss	(sprintf@_val+1),7
 10769  08A2  28A4               	goto	u4941
 10770  08A3  28A5               	goto	u4940
 10771  08A4                     u4941:
 10772  08A4  28AF               	goto	l11660
 10773  08A5                     u4940:
 10774                           	line	1257
 10775                           	
 10776  08A5                     l11656:	
 10777  08A5  3003               	movlw	(03h)
 10778  08A6  00B9               	movwf	(??_sprintf+0)+0
 10779  08A7  0839               	movf	(??_sprintf+0)+0,w
 10780  08A8  04BE               	iorwf	(sprintf@flag),f
 10781                           	line	1258
 10782                           	
 10783  08A9                     l11658:	
 10784  08A9  09BF               	comf	(sprintf@_val),f
 10785  08AA  09C0               	comf	(sprintf@_val+1),f
 10786  08AB  0ABF               	incf	(sprintf@_val),f
 10787  08AC  1903               	skipnz
 10788  08AD  0AC0               	incf	(sprintf@_val+1),f
 10789  08AE  28AF               	goto	l11660
 10790                           	line	1259
 10791                           	
 10792  08AF                     l7089:	
 10793                           	line	1300
 10794                           	
 10795  08AF                     l11660:	
 10796  08AF  01C6               	clrf	(sprintf@c)
 10797  08B0  1403               	bsf	status,0
 10798  08B1  0DC6               	rlf	(sprintf@c),f
 10799                           	
 10800  08B2                     l11662:	
 10801  08B2  0846               	movf	(sprintf@c),w
 10802  08B3  3A05               	xorlw	05h
 10803  08B4  1D03               	skipz
 10804  08B5  28B7               	goto	u4951
 10805  08B6  28B8               	goto	u4950
 10806  08B7                     u4951:
 10807  08B7  28BA               	goto	l11666
 10808  08B8                     u4950:
 10809  08B8  28E2               	goto	l11674
 10810                           	
 10811  08B9                     l11664:	
 10812  08B9  28E2               	goto	l11674
 10813                           	line	1301
 10814                           	
 10815  08BA                     l7090:	
 10816                           	
 10817  08BA                     l11666:	
 10818  08BA  0846               	movf	(sprintf@c),w
 10819  08BB  00B9               	movwf	(??_sprintf+0)+0
 10820  08BC  0739               	addwf	(??_sprintf+0)+0,w
 10821  08BD  3E01               	addlw	low((_dpowers-__stringbase))
 10822  08BE  0084               	movwf	fsr0
 10823  08BF  160A  118A  200A   	fcall	stringdir
              120A  158A         
 10824  08C4  00BA               	movwf	(??_sprintf+1)+0
 10825  08C5  160A  118A  200A   	fcall	stringdir
              120A  158A         
 10826  08CA  00BB               	movwf	(??_sprintf+1)+0+1
 10827  08CB  083B               	movf	1+(??_sprintf+1)+0,w
 10828  08CC  0240               	subwf	(sprintf@_val+1),w
 10829  08CD  1D03               	skipz
 10830  08CE  28D1               	goto	u4965
 10831  08CF  083A               	movf	0+(??_sprintf+1)+0,w
 10832  08D0  023F               	subwf	(sprintf@_val),w
 10833  08D1                     u4965:
 10834  08D1  1803               	skipnc
 10835  08D2  28D4               	goto	u4961
 10836  08D3  28D5               	goto	u4960
 10837  08D4                     u4961:
 10838  08D4  28D7               	goto	l11670
 10839  08D5                     u4960:
 10840  08D5  28E2               	goto	l11674
 10841                           	line	1302
 10842                           	
 10843  08D6                     l11668:	
 10844  08D6  28E2               	goto	l11674
 10845                           	
 10846  08D7                     l7092:	
 10847                           	line	1300
 10848                           	
 10849  08D7                     l11670:	
 10850  08D7  3001               	movlw	(01h)
 10851  08D8  00B9               	movwf	(??_sprintf+0)+0
 10852  08D9  0839               	movf	(??_sprintf+0)+0,w
 10853  08DA  07C6               	addwf	(sprintf@c),f
 10854                           	
 10855  08DB                     l11672:	
 10856  08DB  0846               	movf	(sprintf@c),w
 10857  08DC  3A05               	xorlw	05h
 10858  08DD  1D03               	skipz
 10859  08DE  28E0               	goto	u4971
 10860  08DF  28E1               	goto	u4970
 10861  08E0                     u4971:
 10862  08E0  28BA               	goto	l11666
 10863  08E1                     u4970:
 10864  08E1  28E2               	goto	l11674
 10865                           	
 10866  08E2                     l7091:	
 10867                           	line	1340
 10868                           	
 10869  08E2                     l11674:	
 10870  08E2  0845               	movf	(sprintf@width+1),w
 10871  08E3  0444               	iorwf	(sprintf@width),w
 10872  08E4  1903               	skipnz
 10873  08E5  28E7               	goto	u4981
 10874  08E6  28E8               	goto	u4980
 10875  08E7                     u4981:
 10876  08E7  28F4               	goto	l7093
 10877  08E8                     u4980:
 10878                           	
 10879  08E8                     l11676:	
 10880  08E8  083E               	movf	(sprintf@flag),w
 10881  08E9  3903               	andlw	03h
 10882  08EA  1903               	btfsc	status,2
 10883  08EB  28ED               	goto	u4991
 10884  08EC  28EE               	goto	u4990
 10885  08ED                     u4991:
 10886  08ED  28F4               	goto	l7093
 10887  08EE                     u4990:
 10888                           	line	1341
 10889                           	
 10890  08EE                     l11678:	
 10891  08EE  30FF               	movlw	low(-1)
 10892  08EF  07C4               	addwf	(sprintf@width),f
 10893  08F0  1803               	skipnc
 10894  08F1  0AC5               	incf	(sprintf@width+1),f
 10895  08F2  30FF               	movlw	high(-1)
 10896  08F3  07C5               	addwf	(sprintf@width+1),f
 10897                           	
 10898  08F4                     l7093:	
 10899                           	line	1376
 10900  08F4  0846               	movf	(sprintf@c),w
 10901  08F5  00B9               	movwf	(??_sprintf+0)+0
 10902  08F6  01BA               	clrf	(??_sprintf+0)+0+1
 10903  08F7  1BB9               	btfsc	(??_sprintf+0)+0,7
 10904  08F8  03BA               	decf	(??_sprintf+0)+0+1,f
 10905  08F9  083A               	movf	1+(??_sprintf+0)+0,w
 10906  08FA  3A80               	xorlw	80h
 10907  08FB  00BB               	movwf	(??_sprintf+2)+0
 10908  08FC  0845               	movf	(sprintf@width+1),w
 10909  08FD  3A80               	xorlw	80h
 10910  08FE  023B               	subwf	(??_sprintf+2)+0,w
 10911  08FF  1D03               	skipz
 10912  0900  2903               	goto	u5005
 10913  0901  0844               	movf	(sprintf@width),w
 10914  0902  0239               	subwf	0+(??_sprintf+0)+0,w
 10915  0903                     u5005:
 10916                           
 10917  0903  1803               	skipnc
 10918  0904  2906               	goto	u5001
 10919  0905  2907               	goto	u5000
 10920  0906                     u5001:
 10921  0906  2915               	goto	l11682
 10922  0907                     u5000:
 10923                           	line	1377
 10924                           	
 10925  0907                     l11680:	
 10926  0907  1283               	bcf	status, 5	;RP0=0, select bank0
 10927  0908  1303               	bcf	status, 6	;RP1=0, select bank0
 10928  0909  0846               	movf	(sprintf@c),w
 10929  090A  00B9               	movwf	(??_sprintf+0)+0
 10930  090B  01BA               	clrf	(??_sprintf+0)+0+1
 10931  090C  1BB9               	btfsc	(??_sprintf+0)+0,7
 10932  090D  03BA               	decf	(??_sprintf+0)+0+1,f
 10933  090E  0839               	movf	0+(??_sprintf+0)+0,w
 10934  090F  02C4               	subwf	(sprintf@width),f
 10935  0910  083A               	movf	1+(??_sprintf+0)+0,w
 10936  0911  1C03               	skipc
 10937  0912  03C5               	decf	(sprintf@width+1),f
 10938  0913  02C5               	subwf	(sprintf@width+1),f
 10939  0914  291A               	goto	l11684
 10940                           	line	1378
 10941                           	
 10942  0915                     l7094:	
 10943                           	line	1379
 10944                           	
 10945  0915                     l11682:	
 10946  0915  1283               	bcf	status, 5	;RP0=0, select bank0
 10947  0916  1303               	bcf	status, 6	;RP1=0, select bank0
 10948  0917  01C4               	clrf	(sprintf@width)
 10949  0918  01C5               	clrf	(sprintf@width+1)
 10950  0919  291A               	goto	l11684
 10951                           	
 10952  091A                     l7095:	
 10953                           	line	1423
 10954                           	
 10955  091A                     l11684:	
 10956  091A  0845               	movf	(sprintf@width+1),w
 10957  091B  0444               	iorwf	(sprintf@width),w
 10958  091C  1903               	skipnz
 10959  091D  291F               	goto	u5011
 10960  091E  2920               	goto	u5010
 10961  091F                     u5011:
 10962  091F  293A               	goto	l11692
 10963  0920                     u5010:
 10964  0920  2921               	goto	l11686
 10965                           	line	1424
 10966                           	
 10967  0921                     l7097:	
 10968                           	line	1425
 10969                           	
 10970  0921                     l11686:	
 10971  0921  3020               	movlw	(020h)
 10972  0922  00B9               	movwf	(??_sprintf+0)+0
 10973  0923  0843               	movf	(sprintf@sp),w
 10974  0924  0084               	movwf	fsr0
 10975  0925  0839               	movf	(??_sprintf+0)+0,w
 10976  0926  1383               	bcf	status, 7	;select IRP bank0
 10977  0927  0080               	movwf	indf
 10978                           	
 10979  0928                     l11688:	
 10980  0928  3001               	movlw	(01h)
 10981  0929  00B9               	movwf	(??_sprintf+0)+0
 10982  092A  0839               	movf	(??_sprintf+0)+0,w
 10983  092B  07C3               	addwf	(sprintf@sp),f
 10984                           	line	1426
 10985                           	
 10986  092C                     l11690:	
 10987  092C  30FF               	movlw	low(-1)
 10988  092D  07C4               	addwf	(sprintf@width),f
 10989  092E  1803               	skipnc
 10990  092F  0AC5               	incf	(sprintf@width+1),f
 10991  0930  30FF               	movlw	high(-1)
 10992  0931  07C5               	addwf	(sprintf@width+1),f
 10993  0932  0845               	movf	(((sprintf@width+1))),w
 10994  0933  0444               	iorwf	(((sprintf@width))),w
 10995  0934  1D03               	skipz
 10996  0935  2937               	goto	u5021
 10997  0936  2938               	goto	u5020
 10998  0937                     u5021:
 10999  0937  2921               	goto	l11686
 11000  0938                     u5020:
 11001  0938  293A               	goto	l11692
 11002                           	
 11003  0939                     l7098:	
 11004  0939  293A               	goto	l11692
 11005                           	
 11006  093A                     l7096:	
 11007                           	line	1433
 11008                           	
 11009  093A                     l11692:	
 11010  093A  083E               	movf	(sprintf@flag),w
 11011  093B  3903               	andlw	03h
 11012  093C  1903               	btfsc	status,2
 11013  093D  293F               	goto	u5031
 11014  093E  2940               	goto	u5030
 11015  093F                     u5031:
 11016  093F  294C               	goto	l11698
 11017  0940                     u5030:
 11018                           	line	1434
 11019                           	
 11020  0940                     l11694:	
 11021  0940  302D               	movlw	(02Dh)
 11022  0941  00B9               	movwf	(??_sprintf+0)+0
 11023  0942  0843               	movf	(sprintf@sp),w
 11024  0943  0084               	movwf	fsr0
 11025  0944  0839               	movf	(??_sprintf+0)+0,w
 11026  0945  1383               	bcf	status, 7	;select IRP bank0
 11027  0946  0080               	movwf	indf
 11028                           	
 11029  0947                     l11696:	
 11030  0947  3001               	movlw	(01h)
 11031  0948  00B9               	movwf	(??_sprintf+0)+0
 11032  0949  0839               	movf	(??_sprintf+0)+0,w
 11033  094A  07C3               	addwf	(sprintf@sp),f
 11034  094B  294C               	goto	l11698
 11035                           	
 11036  094C                     l7099:	
 11037                           	line	1467
 11038                           	
 11039  094C                     l11698:	
 11040  094C  0846               	movf	(sprintf@c),w
 11041  094D  00B9               	movwf	(??_sprintf+0)+0
 11042  094E  0839               	movf	(??_sprintf+0)+0,w
 11043  094F  00BD               	movwf	(sprintf@prec)
 11044                           	line	1469
 11045  0950  2991               	goto	l11706
 11046                           	
 11047  0951                     l7101:	
 11048                           	line	1484
 11049                           	
 11050  0951                     l11700:	
 11051  0951  300A               	movlw	low(0Ah)
 11052  0952  00AE               	movwf	(?___lwmod)
 11053  0953  3000               	movlw	high(0Ah)
 11054  0954  00AF               	movwf	((?___lwmod))+1
 11055  0955  083D               	movf	(sprintf@prec),w
 11056  0956  00B9               	movwf	(??_sprintf+0)+0
 11057  0957  0739               	addwf	(??_sprintf+0)+0,w
 11058  0958  3E01               	addlw	low((_dpowers-__stringbase))
 11059  0959  0084               	movwf	fsr0
 11060  095A  160A  118A  200A   	fcall	stringdir
              120A  158A         
 11061  095F  00A6               	movwf	(?___lwdiv)
 11062  0960  160A  118A  200A   	fcall	stringdir
              120A  158A         
 11063  0965  00A7               	movwf	(?___lwdiv+1)
 11064  0966  0840               	movf	(sprintf@_val+1),w
 11065  0967  01A9               	clrf	1+(?___lwdiv)+02h
 11066  0968  07A9               	addwf	1+(?___lwdiv)+02h
 11067  0969  083F               	movf	(sprintf@_val),w
 11068  096A  01A8               	clrf	0+(?___lwdiv)+02h
 11069  096B  07A8               	addwf	0+(?___lwdiv)+02h
 11070                           
 11071  096C  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11072  0971  1283               	bcf	status, 5	;RP0=0, select bank0
 11073  0972  1303               	bcf	status, 6	;RP1=0, select bank0
 11074  0973  0827               	movf	(1+(?___lwdiv)),w
 11075  0974  01B1               	clrf	1+(?___lwmod)+02h
 11076  0975  07B1               	addwf	1+(?___lwmod)+02h
 11077  0976  0826               	movf	(0+(?___lwdiv)),w
 11078  0977  01B0               	clrf	0+(?___lwmod)+02h
 11079  0978  07B0               	addwf	0+(?___lwmod)+02h
 11080                           
 11081  0979  160A  158A  2529   	fcall	___lwmod
              120A  158A         
 11082  097E  1283               	bcf	status, 5	;RP0=0, select bank0
 11083  097F  1303               	bcf	status, 6	;RP1=0, select bank0
 11084  0980  082E               	movf	(0+(?___lwmod)),w
 11085  0981  3E30               	addlw	030h
 11086  0982  00BA               	movwf	(??_sprintf+1)+0
 11087  0983  083A               	movf	(??_sprintf+1)+0,w
 11088  0984  00C6               	movwf	(sprintf@c)
 11089                           	line	1516
 11090                           	
 11091  0985                     l11702:	
 11092  0985  0846               	movf	(sprintf@c),w
 11093  0986  00B9               	movwf	(??_sprintf+0)+0
 11094  0987  0843               	movf	(sprintf@sp),w
 11095  0988  0084               	movwf	fsr0
 11096  0989  0839               	movf	(??_sprintf+0)+0,w
 11097  098A  1383               	bcf	status, 7	;select IRP bank0
 11098  098B  0080               	movwf	indf
 11099                           	
 11100  098C                     l11704:	
 11101  098C  3001               	movlw	(01h)
 11102  098D  00B9               	movwf	(??_sprintf+0)+0
 11103  098E  0839               	movf	(??_sprintf+0)+0,w
 11104  098F  07C3               	addwf	(sprintf@sp),f
 11105  0990  2991               	goto	l11706
 11106                           	line	1517
 11107                           	
 11108  0991                     l7100:	
 11109                           	line	1469
 11110                           	
 11111  0991                     l11706:	
 11112  0991  30FF               	movlw	(-1)
 11113  0992  00B9               	movwf	(??_sprintf+0)+0
 11114  0993  0839               	movf	(??_sprintf+0)+0,w
 11115  0994  07BD               	addwf	(sprintf@prec),f
 11116  0995  083D               	movf	((sprintf@prec)),w
 11117  0996  3AFF               	xorlw	-1
 11118  0997  1D03               	skipz
 11119  0998  299A               	goto	u5041
 11120  0999  299B               	goto	u5040
 11121  099A                     u5041:
 11122  099A  2951               	goto	l11700
 11123  099B                     u5040:
 11124  099B  299D               	goto	l11708
 11125                           	
 11126  099C                     l7102:	
 11127  099C  299D               	goto	l11708
 11128                           	line	1525
 11129                           	
 11130  099D                     l7076:	
 11131                           	line	540
 11132                           	
 11133  099D                     l11708:	
 11134  099D  3001               	movlw	01h
 11135  099E  1283               	bcf	status, 5	;RP0=0, select bank0
 11136  099F  1303               	bcf	status, 6	;RP1=0, select bank0
 11137  09A0  07B4               	addwf	(sprintf@f),f
 11138  09A1  30FF               	movlw	-01h
 11139  09A2  0734               	addwf	(sprintf@f),w
 11140  09A3  0084               	movwf	fsr0
 11141  09A4  160A  118A  200A   	fcall	stringdir
              120A  158A         
 11142  09A9  00B9               	movwf	(??_sprintf+0)+0
 11143  09AA  0839               	movf	(??_sprintf+0)+0,w
 11144  09AB  00C6               	movwf	(sprintf@c)
 11145  09AC  08C6               	movf	((sprintf@c)),f
 11146  09AD  1D03               	skipz
 11147  09AE  29B0               	goto	u5051
 11148  09AF  29B1               	goto	u5050
 11149  09B0                     u5051:
 11150  09B0  280D               	goto	l11626
 11151  09B1                     u5050:
 11152  09B1  29B3               	goto	l11710
 11153                           	
 11154  09B2                     l7103:	
 11155  09B2  29B3               	goto	l11710
 11156                           	line	1527
 11157                           	
 11158  09B3                     l7084:	
 11159                           	line	1530
 11160                           	
 11161  09B3                     l11710:	
 11162  09B3  1283               	bcf	status, 5	;RP0=0, select bank0
 11163  09B4  1303               	bcf	status, 6	;RP1=0, select bank0
 11164  09B5  0843               	movf	(sprintf@sp),w
 11165  09B6  0084               	movwf	fsr0
 11166  09B7  1383               	bcf	status, 7	;select IRP bank0
 11167  09B8  0180               	clrf	indf
 11168  09B9  29BA               	goto	l7104
 11169                           	line	1532
 11170                           	
 11171  09BA                     l11712:	
 11172                           	line	1533
 11173                           ;	Return value of _sprintf is never used
 11174                           	
 11175  09BA                     l7104:	
 11176  09BA  0008               	return
 11177                           	opt stack 0
 11178                           GLOBAL	__end_of_sprintf
 11179  09BB                     	__end_of_sprintf:
 11180 ;; =============== function _sprintf ends ============
 11181                           
 11182                           	signat	_sprintf,4698
 11183                           	global	_ADCconvert
 11184                           psect	text1134,local,class=CODE,delta=2
 11185                           global __ptext1134
 11186  0B88                     __ptext1134:
 11187                           
 11188 ;; *************** function _ADCconvert *****************
 11189 ;; Defined at:
 11190 ;;		line 89 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;		None               void
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0, pclath, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11204 ;;      Params:         0       0       0       0       0
 11205 ;;      Locals:         0       0       0       0       0
 11206 ;;      Temps:          0       2       0       0       0
 11207 ;;      Totals:         0       2       0       0       0
 11208 ;;Total ram usage:        2 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    3
 11211 ;; This function calls:
 11212 ;;		___wmul
 11213 ;;		___lwdiv
 11214 ;; This function is called by:
 11215 ;;		_readAvgDistance
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           psect	text1134
 11219                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
 11220                           	line	89
 11221                           	global	__size_of_ADCconvert
 11222  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
 11223                           	
 11224  0B88                     _ADCconvert:	
 11225                           	opt	stack 1
 11226                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
 11227                           	line	95
 11228                           	
 11229  0B88                     l11582:	
 11230                           ;infrared.c: 95: if (adcVal >= 213 && adcVal < 234)
 11231  0B88  3000               	movlw	high(0D5h)
 11232  0B89  1283               	bcf	status, 5	;RP0=0, select bank0
 11233  0B8A  1303               	bcf	status, 6	;RP1=0, select bank0
 11234  0B8B  026F               	subwf	(_adcVal+1),w	;volatile
 11235  0B8C  30D5               	movlw	low(0D5h)
 11236  0B8D  1903               	skipnz
 11237  0B8E  026E               	subwf	(_adcVal),w	;volatile
 11238  0B8F  1C03               	skipc
 11239  0B90  2B92               	goto	u4771
 11240  0B91  2B93               	goto	u4770
 11241  0B92                     u4771:
 11242  0B92  2BD6               	goto	l11588
 11243  0B93                     u4770:
 11244                           	
 11245  0B93                     l11584:	
 11246  0B93  3000               	movlw	high(0EAh)
 11247  0B94  026F               	subwf	(_adcVal+1),w	;volatile
 11248  0B95  30EA               	movlw	low(0EAh)
 11249  0B96  1903               	skipnz
 11250  0B97  026E               	subwf	(_adcVal),w	;volatile
 11251  0B98  1803               	skipnc
 11252  0B99  2B9B               	goto	u4781
 11253  0B9A  2B9C               	goto	u4780
 11254  0B9B                     u4781:
 11255  0B9B  2BD6               	goto	l11588
 11256  0B9C                     u4780:
 11257                           	line	97
 11258                           	
 11259  0B9C                     l11586:	
 11260                           ;infrared.c: 96: {
 11261                           ;infrared.c: 97: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
 11262  0B9C  3015               	movlw	low(015h)
 11263  0B9D  00A6               	movwf	(?___lwdiv)
 11264  0B9E  3000               	movlw	high(015h)
 11265  0B9F  00A7               	movwf	((?___lwdiv))+1
 11266  0BA0  096E               	comf	(_adcVal),w	;volatile
 11267  0BA1  00AE               	movwf	(??_ADCconvert+0)+0
 11268  0BA2  096F               	comf	(_adcVal+1),w	;volatile
 11269  0BA3  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11270  0BA4  0AAE               	incf	(??_ADCconvert+0)+0,f
 11271  0BA5  1903               	skipnz
 11272  0BA6  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11273  0BA7  082E               	movf	0+(??_ADCconvert+0)+0,w
 11274  0BA8  3EEA               	addlw	low(0EAh)
 11275  0BA9  00A0               	movwf	(?___wmul)
 11276  0BAA  082F               	movf	1+(??_ADCconvert+0)+0,w
 11277  0BAB  1803               	skipnc
 11278  0BAC  3E01               	addlw	1
 11279  0BAD  3E00               	addlw	high(0EAh)
 11280  0BAE  00A1               	movwf	1+(?___wmul)
 11281  0BAF  3005               	movlw	low(05h)
 11282  0BB0  00A2               	movwf	0+(?___wmul)+02h
 11283  0BB1  3000               	movlw	high(05h)
 11284  0BB2  00A3               	movwf	(0+(?___wmul)+02h)+1
 11285  0BB3  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11286  0BB8  1283               	bcf	status, 5	;RP0=0, select bank0
 11287  0BB9  1303               	bcf	status, 6	;RP1=0, select bank0
 11288  0BBA  0821               	movf	(1+(?___wmul)),w
 11289  0BBB  01A9               	clrf	1+(?___lwdiv)+02h
 11290  0BBC  07A9               	addwf	1+(?___lwdiv)+02h
 11291  0BBD  0820               	movf	(0+(?___wmul)),w
 11292  0BBE  01A8               	clrf	0+(?___lwdiv)+02h
 11293  0BBF  07A8               	addwf	0+(?___lwdiv)+02h
 11294                           
 11295  0BC0  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11296  0BC5  1283               	bcf	status, 5	;RP0=0, select bank0
 11297  0BC6  1303               	bcf	status, 6	;RP1=0, select bank0
 11298  0BC7  0826               	movf	(0+(?___lwdiv)),w
 11299  0BC8  3E0F               	addlw	low(0Fh)
 11300  0BC9  1683               	bsf	status, 5	;RP0=1, select bank1
 11301  0BCA  1303               	bcf	status, 6	;RP1=0, select bank1
 11302  0BCB  00A8               	movwf	(_IRdistance)^080h	;volatile
 11303  0BCC  1283               	bcf	status, 5	;RP0=0, select bank0
 11304  0BCD  1303               	bcf	status, 6	;RP1=0, select bank0
 11305  0BCE  0827               	movf	(1+(?___lwdiv)),w
 11306  0BCF  1803               	skipnc
 11307  0BD0  3E01               	addlw	1
 11308  0BD1  3E00               	addlw	high(0Fh)
 11309  0BD2  1683               	bsf	status, 5	;RP0=1, select bank1
 11310  0BD3  1303               	bcf	status, 6	;RP1=0, select bank1
 11311  0BD4  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11312                           	line	98
 11313                           ;infrared.c: 98: }
 11314  0BD5  2DAA               	goto	l3140
 11315                           	line	99
 11316                           	
 11317  0BD6                     l3127:	
 11318                           	
 11319  0BD6                     l11588:	
 11320                           ;infrared.c: 99: else if (adcVal >= 170 && adcVal < 213)
 11321  0BD6  3000               	movlw	high(0AAh)
 11322  0BD7  1283               	bcf	status, 5	;RP0=0, select bank0
 11323  0BD8  026F               	subwf	(_adcVal+1),w	;volatile
 11324  0BD9  30AA               	movlw	low(0AAh)
 11325  0BDA  1903               	skipnz
 11326  0BDB  026E               	subwf	(_adcVal),w	;volatile
 11327  0BDC  1C03               	skipc
 11328  0BDD  2BDF               	goto	u4791
 11329  0BDE  2BE0               	goto	u4790
 11330  0BDF                     u4791:
 11331  0BDF  2C23               	goto	l11594
 11332  0BE0                     u4790:
 11333                           	
 11334  0BE0                     l11590:	
 11335  0BE0  3000               	movlw	high(0D5h)
 11336  0BE1  026F               	subwf	(_adcVal+1),w	;volatile
 11337  0BE2  30D5               	movlw	low(0D5h)
 11338  0BE3  1903               	skipnz
 11339  0BE4  026E               	subwf	(_adcVal),w	;volatile
 11340  0BE5  1803               	skipnc
 11341  0BE6  2BE8               	goto	u4801
 11342  0BE7  2BE9               	goto	u4800
 11343  0BE8                     u4801:
 11344  0BE8  2C23               	goto	l11594
 11345  0BE9                     u4800:
 11346                           	line	101
 11347                           	
 11348  0BE9                     l11592:	
 11349                           ;infrared.c: 100: {
 11350                           ;infrared.c: 101: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
 11351  0BE9  302B               	movlw	low(02Bh)
 11352  0BEA  00A6               	movwf	(?___lwdiv)
 11353  0BEB  3000               	movlw	high(02Bh)
 11354  0BEC  00A7               	movwf	((?___lwdiv))+1
 11355  0BED  096E               	comf	(_adcVal),w	;volatile
 11356  0BEE  00AE               	movwf	(??_ADCconvert+0)+0
 11357  0BEF  096F               	comf	(_adcVal+1),w	;volatile
 11358  0BF0  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11359  0BF1  0AAE               	incf	(??_ADCconvert+0)+0,f
 11360  0BF2  1903               	skipnz
 11361  0BF3  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11362  0BF4  082E               	movf	0+(??_ADCconvert+0)+0,w
 11363  0BF5  3ED5               	addlw	low(0D5h)
 11364  0BF6  00A0               	movwf	(?___wmul)
 11365  0BF7  082F               	movf	1+(??_ADCconvert+0)+0,w
 11366  0BF8  1803               	skipnc
 11367  0BF9  3E01               	addlw	1
 11368  0BFA  3E00               	addlw	high(0D5h)
 11369  0BFB  00A1               	movwf	1+(?___wmul)
 11370  0BFC  300A               	movlw	low(0Ah)
 11371  0BFD  00A2               	movwf	0+(?___wmul)+02h
 11372  0BFE  3000               	movlw	high(0Ah)
 11373  0BFF  00A3               	movwf	(0+(?___wmul)+02h)+1
 11374  0C00  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11375  0C05  1283               	bcf	status, 5	;RP0=0, select bank0
 11376  0C06  1303               	bcf	status, 6	;RP1=0, select bank0
 11377  0C07  0821               	movf	(1+(?___wmul)),w
 11378  0C08  01A9               	clrf	1+(?___lwdiv)+02h
 11379  0C09  07A9               	addwf	1+(?___lwdiv)+02h
 11380  0C0A  0820               	movf	(0+(?___wmul)),w
 11381  0C0B  01A8               	clrf	0+(?___lwdiv)+02h
 11382  0C0C  07A8               	addwf	0+(?___lwdiv)+02h
 11383                           
 11384  0C0D  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11385  0C12  1283               	bcf	status, 5	;RP0=0, select bank0
 11386  0C13  1303               	bcf	status, 6	;RP1=0, select bank0
 11387  0C14  0826               	movf	(0+(?___lwdiv)),w
 11388  0C15  3E14               	addlw	low(014h)
 11389  0C16  1683               	bsf	status, 5	;RP0=1, select bank1
 11390  0C17  1303               	bcf	status, 6	;RP1=0, select bank1
 11391  0C18  00A8               	movwf	(_IRdistance)^080h	;volatile
 11392  0C19  1283               	bcf	status, 5	;RP0=0, select bank0
 11393  0C1A  1303               	bcf	status, 6	;RP1=0, select bank0
 11394  0C1B  0827               	movf	(1+(?___lwdiv)),w
 11395  0C1C  1803               	skipnc
 11396  0C1D  3E01               	addlw	1
 11397  0C1E  3E00               	addlw	high(014h)
 11398  0C1F  1683               	bsf	status, 5	;RP0=1, select bank1
 11399  0C20  1303               	bcf	status, 6	;RP1=0, select bank1
 11400  0C21  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11401                           	line	102
 11402                           ;infrared.c: 102: }
 11403  0C22  2DAA               	goto	l3140
 11404                           	line	103
 11405                           	
 11406  0C23                     l3129:	
 11407                           	
 11408  0C23                     l11594:	
 11409                           ;infrared.c: 103: else if (adcVal >= 128 && adcVal < 170)
 11410  0C23  3000               	movlw	high(080h)
 11411  0C24  1283               	bcf	status, 5	;RP0=0, select bank0
 11412  0C25  026F               	subwf	(_adcVal+1),w	;volatile
 11413  0C26  3080               	movlw	low(080h)
 11414  0C27  1903               	skipnz
 11415  0C28  026E               	subwf	(_adcVal),w	;volatile
 11416  0C29  1C03               	skipc
 11417  0C2A  2C2C               	goto	u4811
 11418  0C2B  2C2D               	goto	u4810
 11419  0C2C                     u4811:
 11420  0C2C  2C70               	goto	l11600
 11421  0C2D                     u4810:
 11422                           	
 11423  0C2D                     l11596:	
 11424  0C2D  3000               	movlw	high(0AAh)
 11425  0C2E  026F               	subwf	(_adcVal+1),w	;volatile
 11426  0C2F  30AA               	movlw	low(0AAh)
 11427  0C30  1903               	skipnz
 11428  0C31  026E               	subwf	(_adcVal),w	;volatile
 11429  0C32  1803               	skipnc
 11430  0C33  2C35               	goto	u4821
 11431  0C34  2C36               	goto	u4820
 11432  0C35                     u4821:
 11433  0C35  2C70               	goto	l11600
 11434  0C36                     u4820:
 11435                           	line	105
 11436                           	
 11437  0C36                     l11598:	
 11438                           ;infrared.c: 104: {
 11439                           ;infrared.c: 105: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
 11440  0C36  302A               	movlw	low(02Ah)
 11441  0C37  00A6               	movwf	(?___lwdiv)
 11442  0C38  3000               	movlw	high(02Ah)
 11443  0C39  00A7               	movwf	((?___lwdiv))+1
 11444  0C3A  096E               	comf	(_adcVal),w	;volatile
 11445  0C3B  00AE               	movwf	(??_ADCconvert+0)+0
 11446  0C3C  096F               	comf	(_adcVal+1),w	;volatile
 11447  0C3D  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11448  0C3E  0AAE               	incf	(??_ADCconvert+0)+0,f
 11449  0C3F  1903               	skipnz
 11450  0C40  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11451  0C41  082E               	movf	0+(??_ADCconvert+0)+0,w
 11452  0C42  3EAA               	addlw	low(0AAh)
 11453  0C43  00A0               	movwf	(?___wmul)
 11454  0C44  082F               	movf	1+(??_ADCconvert+0)+0,w
 11455  0C45  1803               	skipnc
 11456  0C46  3E01               	addlw	1
 11457  0C47  3E00               	addlw	high(0AAh)
 11458  0C48  00A1               	movwf	1+(?___wmul)
 11459  0C49  300A               	movlw	low(0Ah)
 11460  0C4A  00A2               	movwf	0+(?___wmul)+02h
 11461  0C4B  3000               	movlw	high(0Ah)
 11462  0C4C  00A3               	movwf	(0+(?___wmul)+02h)+1
 11463  0C4D  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11464  0C52  1283               	bcf	status, 5	;RP0=0, select bank0
 11465  0C53  1303               	bcf	status, 6	;RP1=0, select bank0
 11466  0C54  0821               	movf	(1+(?___wmul)),w
 11467  0C55  01A9               	clrf	1+(?___lwdiv)+02h
 11468  0C56  07A9               	addwf	1+(?___lwdiv)+02h
 11469  0C57  0820               	movf	(0+(?___wmul)),w
 11470  0C58  01A8               	clrf	0+(?___lwdiv)+02h
 11471  0C59  07A8               	addwf	0+(?___lwdiv)+02h
 11472                           
 11473  0C5A  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11474  0C5F  1283               	bcf	status, 5	;RP0=0, select bank0
 11475  0C60  1303               	bcf	status, 6	;RP1=0, select bank0
 11476  0C61  0826               	movf	(0+(?___lwdiv)),w
 11477  0C62  3E1E               	addlw	low(01Eh)
 11478  0C63  1683               	bsf	status, 5	;RP0=1, select bank1
 11479  0C64  1303               	bcf	status, 6	;RP1=0, select bank1
 11480  0C65  00A8               	movwf	(_IRdistance)^080h	;volatile
 11481  0C66  1283               	bcf	status, 5	;RP0=0, select bank0
 11482  0C67  1303               	bcf	status, 6	;RP1=0, select bank0
 11483  0C68  0827               	movf	(1+(?___lwdiv)),w
 11484  0C69  1803               	skipnc
 11485  0C6A  3E01               	addlw	1
 11486  0C6B  3E00               	addlw	high(01Eh)
 11487  0C6C  1683               	bsf	status, 5	;RP0=1, select bank1
 11488  0C6D  1303               	bcf	status, 6	;RP1=0, select bank1
 11489  0C6E  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11490                           	line	106
 11491                           ;infrared.c: 106: }
 11492  0C6F  2DAA               	goto	l3140
 11493                           	line	107
 11494                           	
 11495  0C70                     l3131:	
 11496                           	
 11497  0C70                     l11600:	
 11498                           ;infrared.c: 107: else if (adcVal >= 107 && adcVal < 128)
 11499  0C70  3000               	movlw	high(06Bh)
 11500  0C71  1283               	bcf	status, 5	;RP0=0, select bank0
 11501  0C72  026F               	subwf	(_adcVal+1),w	;volatile
 11502  0C73  306B               	movlw	low(06Bh)
 11503  0C74  1903               	skipnz
 11504  0C75  026E               	subwf	(_adcVal),w	;volatile
 11505  0C76  1C03               	skipc
 11506  0C77  2C79               	goto	u4831
 11507  0C78  2C7A               	goto	u4830
 11508  0C79                     u4831:
 11509  0C79  2CBD               	goto	l11606
 11510  0C7A                     u4830:
 11511                           	
 11512  0C7A                     l11602:	
 11513  0C7A  3000               	movlw	high(080h)
 11514  0C7B  026F               	subwf	(_adcVal+1),w	;volatile
 11515  0C7C  3080               	movlw	low(080h)
 11516  0C7D  1903               	skipnz
 11517  0C7E  026E               	subwf	(_adcVal),w	;volatile
 11518  0C7F  1803               	skipnc
 11519  0C80  2C82               	goto	u4841
 11520  0C81  2C83               	goto	u4840
 11521  0C82                     u4841:
 11522  0C82  2CBD               	goto	l11606
 11523  0C83                     u4840:
 11524                           	line	109
 11525                           	
 11526  0C83                     l11604:	
 11527                           ;infrared.c: 108: {
 11528                           ;infrared.c: 109: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
 11529  0C83  3015               	movlw	low(015h)
 11530  0C84  00A6               	movwf	(?___lwdiv)
 11531  0C85  3000               	movlw	high(015h)
 11532  0C86  00A7               	movwf	((?___lwdiv))+1
 11533  0C87  096E               	comf	(_adcVal),w	;volatile
 11534  0C88  00AE               	movwf	(??_ADCconvert+0)+0
 11535  0C89  096F               	comf	(_adcVal+1),w	;volatile
 11536  0C8A  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11537  0C8B  0AAE               	incf	(??_ADCconvert+0)+0,f
 11538  0C8C  1903               	skipnz
 11539  0C8D  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11540  0C8E  082E               	movf	0+(??_ADCconvert+0)+0,w
 11541  0C8F  3E80               	addlw	low(080h)
 11542  0C90  00A0               	movwf	(?___wmul)
 11543  0C91  082F               	movf	1+(??_ADCconvert+0)+0,w
 11544  0C92  1803               	skipnc
 11545  0C93  3E01               	addlw	1
 11546  0C94  3E00               	addlw	high(080h)
 11547  0C95  00A1               	movwf	1+(?___wmul)
 11548  0C96  300A               	movlw	low(0Ah)
 11549  0C97  00A2               	movwf	0+(?___wmul)+02h
 11550  0C98  3000               	movlw	high(0Ah)
 11551  0C99  00A3               	movwf	(0+(?___wmul)+02h)+1
 11552  0C9A  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11553  0C9F  1283               	bcf	status, 5	;RP0=0, select bank0
 11554  0CA0  1303               	bcf	status, 6	;RP1=0, select bank0
 11555  0CA1  0821               	movf	(1+(?___wmul)),w
 11556  0CA2  01A9               	clrf	1+(?___lwdiv)+02h
 11557  0CA3  07A9               	addwf	1+(?___lwdiv)+02h
 11558  0CA4  0820               	movf	(0+(?___wmul)),w
 11559  0CA5  01A8               	clrf	0+(?___lwdiv)+02h
 11560  0CA6  07A8               	addwf	0+(?___lwdiv)+02h
 11561                           
 11562  0CA7  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11563  0CAC  1283               	bcf	status, 5	;RP0=0, select bank0
 11564  0CAD  1303               	bcf	status, 6	;RP1=0, select bank0
 11565  0CAE  0826               	movf	(0+(?___lwdiv)),w
 11566  0CAF  3E28               	addlw	low(028h)
 11567  0CB0  1683               	bsf	status, 5	;RP0=1, select bank1
 11568  0CB1  1303               	bcf	status, 6	;RP1=0, select bank1
 11569  0CB2  00A8               	movwf	(_IRdistance)^080h	;volatile
 11570  0CB3  1283               	bcf	status, 5	;RP0=0, select bank0
 11571  0CB4  1303               	bcf	status, 6	;RP1=0, select bank0
 11572  0CB5  0827               	movf	(1+(?___lwdiv)),w
 11573  0CB6  1803               	skipnc
 11574  0CB7  3E01               	addlw	1
 11575  0CB8  3E00               	addlw	high(028h)
 11576  0CB9  1683               	bsf	status, 5	;RP0=1, select bank1
 11577  0CBA  1303               	bcf	status, 6	;RP1=0, select bank1
 11578  0CBB  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11579                           	line	110
 11580                           ;infrared.c: 110: }
 11581  0CBC  2DAA               	goto	l3140
 11582                           	line	111
 11583                           	
 11584  0CBD                     l3133:	
 11585                           	
 11586  0CBD                     l11606:	
 11587                           ;infrared.c: 111: else if (adcVal >= 77 && adcVal < 107)
 11588  0CBD  3000               	movlw	high(04Dh)
 11589  0CBE  1283               	bcf	status, 5	;RP0=0, select bank0
 11590  0CBF  026F               	subwf	(_adcVal+1),w	;volatile
 11591  0CC0  304D               	movlw	low(04Dh)
 11592  0CC1  1903               	skipnz
 11593  0CC2  026E               	subwf	(_adcVal),w	;volatile
 11594  0CC3  1C03               	skipc
 11595  0CC4  2CC6               	goto	u4851
 11596  0CC5  2CC7               	goto	u4850
 11597  0CC6                     u4851:
 11598  0CC6  2D0A               	goto	l11612
 11599  0CC7                     u4850:
 11600                           	
 11601  0CC7                     l11608:	
 11602  0CC7  3000               	movlw	high(06Bh)
 11603  0CC8  026F               	subwf	(_adcVal+1),w	;volatile
 11604  0CC9  306B               	movlw	low(06Bh)
 11605  0CCA  1903               	skipnz
 11606  0CCB  026E               	subwf	(_adcVal),w	;volatile
 11607  0CCC  1803               	skipnc
 11608  0CCD  2CCF               	goto	u4861
 11609  0CCE  2CD0               	goto	u4860
 11610  0CCF                     u4861:
 11611  0CCF  2D0A               	goto	l11612
 11612  0CD0                     u4860:
 11613                           	line	113
 11614                           	
 11615  0CD0                     l11610:	
 11616                           ;infrared.c: 112: {
 11617                           ;infrared.c: 113: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
 11618  0CD0  301E               	movlw	low(01Eh)
 11619  0CD1  00A6               	movwf	(?___lwdiv)
 11620  0CD2  3000               	movlw	high(01Eh)
 11621  0CD3  00A7               	movwf	((?___lwdiv))+1
 11622  0CD4  096E               	comf	(_adcVal),w	;volatile
 11623  0CD5  00AE               	movwf	(??_ADCconvert+0)+0
 11624  0CD6  096F               	comf	(_adcVal+1),w	;volatile
 11625  0CD7  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11626  0CD8  0AAE               	incf	(??_ADCconvert+0)+0,f
 11627  0CD9  1903               	skipnz
 11628  0CDA  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11629  0CDB  082E               	movf	0+(??_ADCconvert+0)+0,w
 11630  0CDC  3E6B               	addlw	low(06Bh)
 11631  0CDD  00A0               	movwf	(?___wmul)
 11632  0CDE  082F               	movf	1+(??_ADCconvert+0)+0,w
 11633  0CDF  1803               	skipnc
 11634  0CE0  3E01               	addlw	1
 11635  0CE1  3E00               	addlw	high(06Bh)
 11636  0CE2  00A1               	movwf	1+(?___wmul)
 11637  0CE3  300A               	movlw	low(0Ah)
 11638  0CE4  00A2               	movwf	0+(?___wmul)+02h
 11639  0CE5  3000               	movlw	high(0Ah)
 11640  0CE6  00A3               	movwf	(0+(?___wmul)+02h)+1
 11641  0CE7  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11642  0CEC  1283               	bcf	status, 5	;RP0=0, select bank0
 11643  0CED  1303               	bcf	status, 6	;RP1=0, select bank0
 11644  0CEE  0821               	movf	(1+(?___wmul)),w
 11645  0CEF  01A9               	clrf	1+(?___lwdiv)+02h
 11646  0CF0  07A9               	addwf	1+(?___lwdiv)+02h
 11647  0CF1  0820               	movf	(0+(?___wmul)),w
 11648  0CF2  01A8               	clrf	0+(?___lwdiv)+02h
 11649  0CF3  07A8               	addwf	0+(?___lwdiv)+02h
 11650                           
 11651  0CF4  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11652  0CF9  1283               	bcf	status, 5	;RP0=0, select bank0
 11653  0CFA  1303               	bcf	status, 6	;RP1=0, select bank0
 11654  0CFB  0826               	movf	(0+(?___lwdiv)),w
 11655  0CFC  3E32               	addlw	low(032h)
 11656  0CFD  1683               	bsf	status, 5	;RP0=1, select bank1
 11657  0CFE  1303               	bcf	status, 6	;RP1=0, select bank1
 11658  0CFF  00A8               	movwf	(_IRdistance)^080h	;volatile
 11659  0D00  1283               	bcf	status, 5	;RP0=0, select bank0
 11660  0D01  1303               	bcf	status, 6	;RP1=0, select bank0
 11661  0D02  0827               	movf	(1+(?___lwdiv)),w
 11662  0D03  1803               	skipnc
 11663  0D04  3E01               	addlw	1
 11664  0D05  3E00               	addlw	high(032h)
 11665  0D06  1683               	bsf	status, 5	;RP0=1, select bank1
 11666  0D07  1303               	bcf	status, 6	;RP1=0, select bank1
 11667  0D08  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11668                           	line	114
 11669                           ;infrared.c: 114: }
 11670  0D09  2DAA               	goto	l3140
 11671                           	line	115
 11672                           	
 11673  0D0A                     l3135:	
 11674                           	
 11675  0D0A                     l11612:	
 11676                           ;infrared.c: 115: else if (adcVal >= 56 && adcVal < 77)
 11677  0D0A  3000               	movlw	high(038h)
 11678  0D0B  1283               	bcf	status, 5	;RP0=0, select bank0
 11679  0D0C  026F               	subwf	(_adcVal+1),w	;volatile
 11680  0D0D  3038               	movlw	low(038h)
 11681  0D0E  1903               	skipnz
 11682  0D0F  026E               	subwf	(_adcVal),w	;volatile
 11683  0D10  1C03               	skipc
 11684  0D11  2D13               	goto	u4871
 11685  0D12  2D14               	goto	u4870
 11686  0D13                     u4871:
 11687  0D13  2D57               	goto	l11618
 11688  0D14                     u4870:
 11689                           	
 11690  0D14                     l11614:	
 11691  0D14  3000               	movlw	high(04Dh)
 11692  0D15  026F               	subwf	(_adcVal+1),w	;volatile
 11693  0D16  304D               	movlw	low(04Dh)
 11694  0D17  1903               	skipnz
 11695  0D18  026E               	subwf	(_adcVal),w	;volatile
 11696  0D19  1803               	skipnc
 11697  0D1A  2D1C               	goto	u4881
 11698  0D1B  2D1D               	goto	u4880
 11699  0D1C                     u4881:
 11700  0D1C  2D57               	goto	l11618
 11701  0D1D                     u4880:
 11702                           	line	117
 11703                           	
 11704  0D1D                     l11616:	
 11705                           ;infrared.c: 116: {
 11706                           ;infrared.c: 117: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
 11707  0D1D  3015               	movlw	low(015h)
 11708  0D1E  00A6               	movwf	(?___lwdiv)
 11709  0D1F  3000               	movlw	high(015h)
 11710  0D20  00A7               	movwf	((?___lwdiv))+1
 11711  0D21  096E               	comf	(_adcVal),w	;volatile
 11712  0D22  00AE               	movwf	(??_ADCconvert+0)+0
 11713  0D23  096F               	comf	(_adcVal+1),w	;volatile
 11714  0D24  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11715  0D25  0AAE               	incf	(??_ADCconvert+0)+0,f
 11716  0D26  1903               	skipnz
 11717  0D27  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11718  0D28  082E               	movf	0+(??_ADCconvert+0)+0,w
 11719  0D29  3E4D               	addlw	low(04Dh)
 11720  0D2A  00A0               	movwf	(?___wmul)
 11721  0D2B  082F               	movf	1+(??_ADCconvert+0)+0,w
 11722  0D2C  1803               	skipnc
 11723  0D2D  3E01               	addlw	1
 11724  0D2E  3E00               	addlw	high(04Dh)
 11725  0D2F  00A1               	movwf	1+(?___wmul)
 11726  0D30  300A               	movlw	low(0Ah)
 11727  0D31  00A2               	movwf	0+(?___wmul)+02h
 11728  0D32  3000               	movlw	high(0Ah)
 11729  0D33  00A3               	movwf	(0+(?___wmul)+02h)+1
 11730  0D34  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11731  0D39  1283               	bcf	status, 5	;RP0=0, select bank0
 11732  0D3A  1303               	bcf	status, 6	;RP1=0, select bank0
 11733  0D3B  0821               	movf	(1+(?___wmul)),w
 11734  0D3C  01A9               	clrf	1+(?___lwdiv)+02h
 11735  0D3D  07A9               	addwf	1+(?___lwdiv)+02h
 11736  0D3E  0820               	movf	(0+(?___wmul)),w
 11737  0D3F  01A8               	clrf	0+(?___lwdiv)+02h
 11738  0D40  07A8               	addwf	0+(?___lwdiv)+02h
 11739                           
 11740  0D41  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11741  0D46  1283               	bcf	status, 5	;RP0=0, select bank0
 11742  0D47  1303               	bcf	status, 6	;RP1=0, select bank0
 11743  0D48  0826               	movf	(0+(?___lwdiv)),w
 11744  0D49  3E3C               	addlw	low(03Ch)
 11745  0D4A  1683               	bsf	status, 5	;RP0=1, select bank1
 11746  0D4B  1303               	bcf	status, 6	;RP1=0, select bank1
 11747  0D4C  00A8               	movwf	(_IRdistance)^080h	;volatile
 11748  0D4D  1283               	bcf	status, 5	;RP0=0, select bank0
 11749  0D4E  1303               	bcf	status, 6	;RP1=0, select bank0
 11750  0D4F  0827               	movf	(1+(?___lwdiv)),w
 11751  0D50  1803               	skipnc
 11752  0D51  3E01               	addlw	1
 11753  0D52  3E00               	addlw	high(03Ch)
 11754  0D53  1683               	bsf	status, 5	;RP0=1, select bank1
 11755  0D54  1303               	bcf	status, 6	;RP1=0, select bank1
 11756  0D55  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11757                           	line	118
 11758                           ;infrared.c: 118: }
 11759  0D56  2DAA               	goto	l3140
 11760                           	line	119
 11761                           	
 11762  0D57                     l3137:	
 11763                           	
 11764  0D57                     l11618:	
 11765                           ;infrared.c: 119: else if (adcVal >= 43 && adcVal < 56)
 11766  0D57  3000               	movlw	high(02Bh)
 11767  0D58  1283               	bcf	status, 5	;RP0=0, select bank0
 11768  0D59  026F               	subwf	(_adcVal+1),w	;volatile
 11769  0D5A  302B               	movlw	low(02Bh)
 11770  0D5B  1903               	skipnz
 11771  0D5C  026E               	subwf	(_adcVal),w	;volatile
 11772  0D5D  1C03               	skipc
 11773  0D5E  2D60               	goto	u4891
 11774  0D5F  2D61               	goto	u4890
 11775  0D60                     u4891:
 11776  0D60  2DAA               	goto	l3140
 11777  0D61                     u4890:
 11778                           	
 11779  0D61                     l11620:	
 11780  0D61  3000               	movlw	high(038h)
 11781  0D62  026F               	subwf	(_adcVal+1),w	;volatile
 11782  0D63  3038               	movlw	low(038h)
 11783  0D64  1903               	skipnz
 11784  0D65  026E               	subwf	(_adcVal),w	;volatile
 11785  0D66  1803               	skipnc
 11786  0D67  2D69               	goto	u4901
 11787  0D68  2D6A               	goto	u4900
 11788  0D69                     u4901:
 11789  0D69  2DAA               	goto	l3140
 11790  0D6A                     u4900:
 11791                           	line	121
 11792                           	
 11793  0D6A                     l11622:	
 11794                           ;infrared.c: 120: {
 11795                           ;infrared.c: 121: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
 11796  0D6A  300D               	movlw	low(0Dh)
 11797  0D6B  00A6               	movwf	(?___lwdiv)
 11798  0D6C  3000               	movlw	high(0Dh)
 11799  0D6D  00A7               	movwf	((?___lwdiv))+1
 11800  0D6E  096E               	comf	(_adcVal),w	;volatile
 11801  0D6F  00AE               	movwf	(??_ADCconvert+0)+0
 11802  0D70  096F               	comf	(_adcVal+1),w	;volatile
 11803  0D71  00AF               	movwf	((??_ADCconvert+0)+0+1)
 11804  0D72  0AAE               	incf	(??_ADCconvert+0)+0,f
 11805  0D73  1903               	skipnz
 11806  0D74  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 11807  0D75  082E               	movf	0+(??_ADCconvert+0)+0,w
 11808  0D76  3E38               	addlw	low(038h)
 11809  0D77  00A0               	movwf	(?___wmul)
 11810  0D78  082F               	movf	1+(??_ADCconvert+0)+0,w
 11811  0D79  1803               	skipnc
 11812  0D7A  3E01               	addlw	1
 11813  0D7B  3E00               	addlw	high(038h)
 11814  0D7C  00A1               	movwf	1+(?___wmul)
 11815  0D7D  300A               	movlw	low(0Ah)
 11816  0D7E  00A2               	movwf	0+(?___wmul)+02h
 11817  0D7F  3000               	movlw	high(0Ah)
 11818  0D80  00A3               	movwf	(0+(?___wmul)+02h)+1
 11819  0D81  160A  158A  2397   	fcall	___wmul
              120A  158A         
 11820  0D86  1283               	bcf	status, 5	;RP0=0, select bank0
 11821  0D87  1303               	bcf	status, 6	;RP1=0, select bank0
 11822  0D88  0821               	movf	(1+(?___wmul)),w
 11823  0D89  01A9               	clrf	1+(?___lwdiv)+02h
 11824  0D8A  07A9               	addwf	1+(?___lwdiv)+02h
 11825  0D8B  0820               	movf	(0+(?___wmul)),w
 11826  0D8C  01A8               	clrf	0+(?___lwdiv)+02h
 11827  0D8D  07A8               	addwf	0+(?___lwdiv)+02h
 11828                           
 11829  0D8E  160A  158A  25BC   	fcall	___lwdiv
              120A  158A         
 11830  0D93  1283               	bcf	status, 5	;RP0=0, select bank0
 11831  0D94  1303               	bcf	status, 6	;RP1=0, select bank0
 11832  0D95  0826               	movf	(0+(?___lwdiv)),w
 11833  0D96  3E46               	addlw	low(046h)
 11834  0D97  1683               	bsf	status, 5	;RP0=1, select bank1
 11835  0D98  1303               	bcf	status, 6	;RP1=0, select bank1
 11836  0D99  00A8               	movwf	(_IRdistance)^080h	;volatile
 11837  0D9A  1283               	bcf	status, 5	;RP0=0, select bank0
 11838  0D9B  1303               	bcf	status, 6	;RP1=0, select bank0
 11839  0D9C  0827               	movf	(1+(?___lwdiv)),w
 11840  0D9D  1803               	skipnc
 11841  0D9E  3E01               	addlw	1
 11842  0D9F  3E00               	addlw	high(046h)
 11843  0DA0  1683               	bsf	status, 5	;RP0=1, select bank1
 11844  0DA1  1303               	bcf	status, 6	;RP1=0, select bank1
 11845  0DA2  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 11846  0DA3  2DAA               	goto	l3140
 11847                           	line	122
 11848                           	
 11849  0DA4                     l3139:	
 11850  0DA4  2DAA               	goto	l3140
 11851                           	line	123
 11852                           	
 11853  0DA5                     l3138:	
 11854  0DA5  2DAA               	goto	l3140
 11855                           	
 11856  0DA6                     l3136:	
 11857  0DA6  2DAA               	goto	l3140
 11858                           	
 11859  0DA7                     l3134:	
 11860  0DA7  2DAA               	goto	l3140
 11861                           	
 11862  0DA8                     l3132:	
 11863  0DA8  2DAA               	goto	l3140
 11864                           	
 11865  0DA9                     l3130:	
 11866  0DA9  2DAA               	goto	l3140
 11867                           	
 11868  0DAA                     l3128:	
 11869                           	
 11870  0DAA                     l3140:	
 11871  0DAA  0008               	return
 11872                           	opt stack 0
 11873                           GLOBAL	__end_of_ADCconvert
 11874  0DAB                     	__end_of_ADCconvert:
 11875 ;; =============== function _ADCconvert ends ============
 11876                           
 11877                           	signat	_ADCconvert,88
 11878                           	global	_RobotDrive
 11879                           psect	text1135,local,class=CODE,delta=2
 11880                           global __ptext1135
 11881  1CAC                     __ptext1135:
 11882                           
 11883 ;; *************** function _RobotDrive *****************
 11884 ;; Defined at:
 11885 ;;		line 122 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;  speed           2    9[BANK0 ] int 
 11888 ;;  radius          2   11[BANK0 ] int 
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;  radiushighBy    1   17[BANK0 ] unsigned char 
 11891 ;;  radiuslowByt    1   16[BANK0 ] unsigned char 
 11892 ;;  speedhighByt    1   15[BANK0 ] unsigned char 
 11893 ;;  speedlowByte    1   14[BANK0 ] unsigned char 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;		None               void
 11896 ;; Registers used:
 11897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11903 ;;      Params:         0       4       0       0       0
 11904 ;;      Locals:         0       4       0       0       0
 11905 ;;      Temps:          0       1       0       0       0
 11906 ;;      Totals:         0       9       0       0       0
 11907 ;;Total ram usage:        9 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:    3
 11910 ;; This function calls:
 11911 ;;		_ser_putch
 11912 ;; This function is called by:
 11913 ;;		_FindVictim
 11914 ;;		_robotFollow
 11915 ;;		_robot_turnRight
 11916 ;;		_robotMoveSpeed
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           psect	text1135
 11920                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 11921                           	line	122
 11922                           	global	__size_of_RobotDrive
 11923  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
 11924                           	
 11925  1CAC                     _RobotDrive:	
 11926                           	opt	stack 2
 11927                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11928                           	line	124
 11929                           	
 11930  1CAC                     l11566:	
 11931                           ;robot.c: 124: unsigned char speedlowByte = (unsigned char)(speed);
 11932  1CAC  1283               	bcf	status, 5	;RP0=0, select bank0
 11933  1CAD  1303               	bcf	status, 6	;RP1=0, select bank0
 11934  1CAE  0829               	movf	(RobotDrive@speed),w
 11935  1CAF  00AD               	movwf	(??_RobotDrive+0)+0
 11936  1CB0  082D               	movf	(??_RobotDrive+0)+0,w
 11937  1CB1  00AE               	movwf	(RobotDrive@speedlowByte)
 11938                           	line	125
 11939                           	
 11940  1CB2                     l11568:	
 11941                           ;robot.c: 125: unsigned char speedhighByte = (unsigned char)(speed >> 8);
 11942  1CB2  082A               	movf	(RobotDrive@speed+1),w
 11943  1CB3  00AD               	movwf	(??_RobotDrive+0)+0
 11944  1CB4  082D               	movf	(??_RobotDrive+0)+0,w
 11945  1CB5  00AF               	movwf	(RobotDrive@speedhighByte)
 11946                           	line	126
 11947                           	
 11948  1CB6                     l11570:	
 11949                           ;robot.c: 126: unsigned char radiuslowByte = (unsigned char)(radius);
 11950  1CB6  082B               	movf	(RobotDrive@radius),w
 11951  1CB7  00AD               	movwf	(??_RobotDrive+0)+0
 11952  1CB8  082D               	movf	(??_RobotDrive+0)+0,w
 11953  1CB9  00B0               	movwf	(RobotDrive@radiuslowByte)
 11954                           	line	127
 11955                           ;robot.c: 127: unsigned char radiushighByte = (unsigned char)(radius >> 8);
 11956  1CBA  082C               	movf	(RobotDrive@radius+1),w
 11957  1CBB  00AD               	movwf	(??_RobotDrive+0)+0
 11958  1CBC  082D               	movf	(??_RobotDrive+0)+0,w
 11959  1CBD  00B1               	movwf	(RobotDrive@radiushighByte)
 11960                           	line	129
 11961                           	
 11962  1CBE                     l11572:	
 11963                           ;robot.c: 129: ser_putch(137);
 11964  1CBE  3089               	movlw	(089h)
 11965  1CBF  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 11966                           	line	131
 11967                           	
 11968  1CC4                     l11574:	
 11969                           ;robot.c: 131: ser_putch(speedhighByte);
 11970  1CC4  1283               	bcf	status, 5	;RP0=0, select bank0
 11971  1CC5  1303               	bcf	status, 6	;RP1=0, select bank0
 11972  1CC6  082F               	movf	(RobotDrive@speedhighByte),w
 11973  1CC7  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 11974                           	line	133
 11975                           	
 11976  1CCC                     l11576:	
 11977                           ;robot.c: 133: ser_putch(speedlowByte);
 11978  1CCC  1283               	bcf	status, 5	;RP0=0, select bank0
 11979  1CCD  1303               	bcf	status, 6	;RP1=0, select bank0
 11980  1CCE  082E               	movf	(RobotDrive@speedlowByte),w
 11981  1CCF  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 11982                           	line	135
 11983                           	
 11984  1CD4                     l11578:	
 11985                           ;robot.c: 135: ser_putch(radiushighByte);
 11986  1CD4  1283               	bcf	status, 5	;RP0=0, select bank0
 11987  1CD5  1303               	bcf	status, 6	;RP1=0, select bank0
 11988  1CD6  0831               	movf	(RobotDrive@radiushighByte),w
 11989  1CD7  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 11990                           	line	137
 11991                           	
 11992  1CDC                     l11580:	
 11993                           ;robot.c: 137: ser_putch(radiuslowByte);
 11994  1CDC  1283               	bcf	status, 5	;RP0=0, select bank0
 11995  1CDD  1303               	bcf	status, 6	;RP1=0, select bank0
 11996  1CDE  0830               	movf	(RobotDrive@radiuslowByte),w
 11997  1CDF  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 11998                           	line	138
 11999                           	
 12000  1CE4                     l6227:	
 12001  1CE4  0008               	return
 12002                           	opt stack 0
 12003                           GLOBAL	__end_of_RobotDrive
 12004  1CE5                     	__end_of_RobotDrive:
 12005 ;; =============== function _RobotDrive ends ============
 12006                           
 12007                           	signat	_RobotDrive,8312
 12008                           	global	_rotate
 12009                           psect	text1136,local,class=CODE,delta=2
 12010                           global __ptext1136
 12011  1EC1                     __ptext1136:
 12012                           
 12013 ;; *************** function _rotate *****************
 12014 ;; Defined at:
 12015 ;;		line 67 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  numsteps        2    3[BANK0 ] unsigned int 
 12018 ;;  direction       1    5[BANK0 ] unsigned char 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  i               2    8[BANK0 ] unsigned int 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;		None               void
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0, pclath, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12030 ;;      Params:         0       3       0       0       0
 12031 ;;      Locals:         0       2       0       0       0
 12032 ;;      Temps:          0       2       0       0       0
 12033 ;;      Totals:         0       7       0       0       0
 12034 ;;Total ram usage:        7 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    3
 12037 ;; This function calls:
 12038 ;;		_spi_transfer
 12039 ;; This function is called by:
 12040 ;;		_Init_Follow_IR
 12041 ;;		_GoHome
 12042 ;;		_calibrateIR
 12043 ;;		_robotFollow
 12044 ;;		_robot_turnRight
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           psect	text1136
 12048                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 12049                           	line	67
 12050                           	global	__size_of_rotate
 12051  0067                     	__size_of_rotate	equ	__end_of_rotate-_rotate
 12052                           	
 12053  1EC1                     _rotate:	
 12054                           	opt	stack 3
 12055                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
 12056                           	line	69
 12057                           	
 12058  1EC1                     l11534:	
 12059                           ;steppermotor.c: 69: RC0 = 1; RC1 = 1;;
 12060  1EC1  1283               	bcf	status, 5	;RP0=0, select bank0
 12061  1EC2  1303               	bcf	status, 6	;RP1=0, select bank0
 12062  1EC3  1407               	bsf	(56/8),(56)&7
 12063  1EC4  1487               	bsf	(57/8),(57)&7
 12064                           	line	70
 12065                           	
 12066  1EC5                     l11536:	
 12067                           ;steppermotor.c: 70: if (direction == 0)
 12068  1EC5  08A5               	movf	(rotate@direction),f
 12069  1EC6  1D03               	skipz
 12070  1EC7  2EC9               	goto	u4741
 12071  1EC8  2ECA               	goto	u4740
 12072  1EC9                     u4741:
 12073  1EC9  2ED1               	goto	l11540
 12074  1ECA                     u4740:
 12075                           	line	71
 12076                           	
 12077  1ECA                     l11538:	
 12078                           ;steppermotor.c: 71: spi_transfer(0b00001011);
 12079  1ECA  300B               	movlw	(0Bh)
 12080  1ECB  160A  158A  2232   	fcall	_spi_transfer
              160A  158A         
 12081  1ED0  2ED8               	goto	l11542
 12082                           	line	72
 12083                           	
 12084  1ED1                     l3843:	
 12085                           	line	73
 12086                           	
 12087  1ED1                     l11540:	
 12088                           ;steppermotor.c: 72: else
 12089                           ;steppermotor.c: 73: spi_transfer(0b00001001);
 12090  1ED1  3009               	movlw	(09h)
 12091  1ED2  160A  158A  2232   	fcall	_spi_transfer
              160A  158A         
 12092  1ED7  2ED8               	goto	l11542
 12093                           	
 12094  1ED8                     l3844:	
 12095                           	line	74
 12096                           	
 12097  1ED8                     l11542:	
 12098                           ;steppermotor.c: 74: RC0 = 0; RC1 = 0;;
 12099  1ED8  1283               	bcf	status, 5	;RP0=0, select bank0
 12100  1ED9  1303               	bcf	status, 6	;RP1=0, select bank0
 12101  1EDA  1007               	bcf	(56/8),(56)&7
 12102                           	
 12103  1EDB                     l11544:	
 12104  1EDB  1087               	bcf	(57/8),(57)&7
 12105                           	line	75
 12106                           	
 12107  1EDC                     l11546:	
 12108                           ;steppermotor.c: 75: for (unsigned int i = 0; i < numsteps; i++)
 12109  1EDC  01A8               	clrf	(rotate@i)
 12110  1EDD  01A9               	clrf	(rotate@i+1)
 12111  1EDE  2F0C               	goto	l3845
 12112                           	line	76
 12113                           	
 12114  1EDF                     l3846:	
 12115                           	line	77
 12116                           ;steppermotor.c: 76: {
 12117                           ;steppermotor.c: 77: RC2 = 1; _nop(); RC2 = 0;;
 12118  1EDF  1507               	bsf	(58/8),(58)&7
 12119  1EE0  0000               	nop
 12120  1EE1  1283               	bcf	status, 5	;RP0=0, select bank0
 12121  1EE2  1303               	bcf	status, 6	;RP1=0, select bank0
 12122  1EE3  1107               	bcf	(58/8),(58)&7
 12123                           	line	78
 12124                           	
 12125  1EE4                     l11548:	
 12126                           ;steppermotor.c: 78: if (direction)
 12127  1EE4  0825               	movf	(rotate@direction),w
 12128  1EE5  1D03               	skipz
 12129  1EE6  2EE8               	goto	u4750
 12130  1EE7  2EF1               	goto	l11552
 12131  1EE8                     u4750:
 12132                           	line	79
 12133                           	
 12134  1EE8                     l11550:	
 12135                           ;steppermotor.c: 79: totalSteps++;
 12136  1EE8  3001               	movlw	low(01h)
 12137  1EE9  1683               	bsf	status, 5	;RP0=1, select bank1
 12138  1EEA  1303               	bcf	status, 6	;RP1=0, select bank1
 12139  1EEB  07BA               	addwf	(_totalSteps)^080h,f
 12140  1EEC  1803               	skipnc
 12141  1EED  0ABB               	incf	(_totalSteps+1)^080h,f
 12142  1EEE  3000               	movlw	high(01h)
 12143  1EEF  07BB               	addwf	(_totalSteps+1)^080h,f
 12144  1EF0  2EF9               	goto	l3848
 12145                           	line	80
 12146                           	
 12147  1EF1                     l3847:	
 12148                           	line	81
 12149                           	
 12150  1EF1                     l11552:	
 12151                           ;steppermotor.c: 80: else
 12152                           ;steppermotor.c: 81: totalSteps--;
 12153  1EF1  30FF               	movlw	low(-1)
 12154  1EF2  1683               	bsf	status, 5	;RP0=1, select bank1
 12155  1EF3  1303               	bcf	status, 6	;RP1=0, select bank1
 12156  1EF4  07BA               	addwf	(_totalSteps)^080h,f
 12157  1EF5  1803               	skipnc
 12158  1EF6  0ABB               	incf	(_totalSteps+1)^080h,f
 12159  1EF7  30FF               	movlw	high(-1)
 12160  1EF8  07BB               	addwf	(_totalSteps+1)^080h,f
 12161                           	
 12162  1EF9                     l3848:	
 12163                           	line	82
 12164                           ;steppermotor.c: 82: _delay((unsigned long)((15)*(20000000/4000.0)));
 12165                           	opt asmopt_off
 12166  1EF9  3062               movlw	98
 12167  1EFA  1283               	bcf	status, 5	;RP0=0, select bank0
 12168  1EFB  1303               	bcf	status, 6	;RP1=0, select bank0
 12169  1EFC  00A7               movwf	((??_rotate+0)+0+1),f
 12170  1EFD  3065               	movlw	101
 12171  1EFE  00A6               movwf	((??_rotate+0)+0),f
 12172  1EFF                     u5717:
 12173  1EFF  0BA6               	decfsz	((??_rotate+0)+0),f
 12174  1F00  2EFF               	goto	u5717
 12175  1F01  0BA7               	decfsz	((??_rotate+0)+0+1),f
 12176  1F02  2EFF               	goto	u5717
 12177  1F03  2F04               	nop2
 12178                           opt asmopt_on
 12179                           
 12180                           	line	75
 12181  1F04  3001               	movlw	low(01h)
 12182  1F05  1283               	bcf	status, 5	;RP0=0, select bank0
 12183  1F06  1303               	bcf	status, 6	;RP1=0, select bank0
 12184  1F07  07A8               	addwf	(rotate@i),f
 12185  1F08  1803               	skipnc
 12186  1F09  0AA9               	incf	(rotate@i+1),f
 12187  1F0A  3000               	movlw	high(01h)
 12188  1F0B  07A9               	addwf	(rotate@i+1),f
 12189                           	
 12190  1F0C                     l3845:	
 12191  1F0C  0824               	movf	(rotate@numsteps+1),w
 12192  1F0D  0229               	subwf	(rotate@i+1),w
 12193  1F0E  1D03               	skipz
 12194  1F0F  2F12               	goto	u4765
 12195  1F10  0823               	movf	(rotate@numsteps),w
 12196  1F11  0228               	subwf	(rotate@i),w
 12197  1F12                     u4765:
 12198  1F12  1C03               	skipc
 12199  1F13  2F15               	goto	u4761
 12200  1F14  2F16               	goto	u4760
 12201  1F15                     u4761:
 12202  1F15  2EDF               	goto	l3846
 12203  1F16                     u4760:
 12204                           	
 12205  1F16                     l3849:	
 12206                           	line	84
 12207                           ;steppermotor.c: 83: }
 12208                           ;steppermotor.c: 84: RC0 = 1; RC1 = 1;;
 12209  1F16  1407               	bsf	(56/8),(56)&7
 12210  1F17  1487               	bsf	(57/8),(57)&7
 12211                           	line	85
 12212                           	
 12213  1F18                     l11554:	
 12214                           ;steppermotor.c: 85: spi_transfer(0b00000000);
 12215  1F18  3000               	movlw	(0)
 12216  1F19  160A  158A  2232   	fcall	_spi_transfer
              160A  158A         
 12217                           	line	86
 12218                           	
 12219  1F1E                     l11556:	
 12220                           ;steppermotor.c: 86: RC0 = 0; RC1 = 0;;
 12221  1F1E  1283               	bcf	status, 5	;RP0=0, select bank0
 12222  1F1F  1303               	bcf	status, 6	;RP1=0, select bank0
 12223  1F20  1007               	bcf	(56/8),(56)&7
 12224                           	
 12225  1F21                     l11558:	
 12226  1F21  1087               	bcf	(57/8),(57)&7
 12227                           	line	87
 12228                           	
 12229  1F22                     l11560:	
 12230                           ;steppermotor.c: 87: RC2 = 1; _nop(); RC2 = 0;;
 12231  1F22  1507               	bsf	(58/8),(58)&7
 12232                           	
 12233  1F23                     l11562:	
 12234  1F23  0000               	nop
 12235                           	
 12236  1F24                     l11564:	
 12237  1F24  1283               	bcf	status, 5	;RP0=0, select bank0
 12238  1F25  1303               	bcf	status, 6	;RP1=0, select bank0
 12239  1F26  1107               	bcf	(58/8),(58)&7
 12240                           	line	88
 12241                           	
 12242  1F27                     l3850:	
 12243  1F27  0008               	return
 12244                           	opt stack 0
 12245                           GLOBAL	__end_of_rotate
 12246  1F28                     	__end_of_rotate:
 12247 ;; =============== function _rotate ends ============
 12248                           
 12249                           	signat	_rotate,8312
 12250                           	global	_robotLoadSong
 12251                           psect	text1137,local,class=CODE,delta=2
 12252                           global __ptext1137
 12253  1E0C                     __ptext1137:
 12254                           
 12255 ;; *************** function _robotLoadSong *****************
 12256 ;; Defined at:
 12257 ;;		line 564 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;		None
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;		None
 12262 ;; Return value:  Size  Location     Type
 12263 ;;		None               void
 12264 ;; Registers used:
 12265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12271 ;;      Params:         0       0       0       0       0
 12272 ;;      Locals:         0       0       0       0       0
 12273 ;;      Temps:          0       0       0       0       0
 12274 ;;      Totals:         0       0       0       0       0
 12275 ;;Total ram usage:        0 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    3
 12278 ;; This function calls:
 12279 ;;		_ser_putch
 12280 ;; This function is called by:
 12281 ;;		_main
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           psect	text1137
 12285                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 12286                           	line	564
 12287                           	global	__size_of_robotLoadSong
 12288  0055                     	__size_of_robotLoadSong	equ	__end_of_robotLoadSong-_robotLoadSong
 12289                           	
 12290  1E0C                     _robotLoadSong:	
 12291                           	opt	stack 4
 12292                           ; Regs used in _robotLoadSong: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12293                           	line	565
 12294                           	
 12295  1E0C                     l11532:	
 12296                           ;robot.c: 565: ser_putch(140);
 12297  1E0C  308C               	movlw	(08Ch)
 12298  1E0D  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12299                           	line	566
 12300                           ;robot.c: 566: ser_putch(0);
 12301  1E12  3000               	movlw	(0)
 12302  1E13  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12303                           	line	567
 12304                           ;robot.c: 567: ser_putch(2);
 12305  1E18  3002               	movlw	(02h)
 12306  1E19  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12307                           	line	568
 12308                           ;robot.c: 568: ser_putch(72);
 12309  1E1E  3048               	movlw	(048h)
 12310  1E1F  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12311                           	line	569
 12312                           ;robot.c: 569: ser_putch(16);
 12313  1E24  3010               	movlw	(010h)
 12314  1E25  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12315                           	line	570
 12316                           ;robot.c: 570: ser_putch(84);
 12317  1E2A  3054               	movlw	(054h)
 12318  1E2B  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12319                           	line	571
 12320                           ;robot.c: 571: ser_putch(16);
 12321  1E30  3010               	movlw	(010h)
 12322  1E31  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12323                           	line	573
 12324                           ;robot.c: 573: ser_putch(140);
 12325  1E36  308C               	movlw	(08Ch)
 12326  1E37  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12327                           	line	574
 12328                           ;robot.c: 574: ser_putch(1);
 12329  1E3C  3001               	movlw	(01h)
 12330  1E3D  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12331                           	line	575
 12332                           ;robot.c: 575: ser_putch(2);
 12333  1E42  3002               	movlw	(02h)
 12334  1E43  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12335                           	line	576
 12336                           ;robot.c: 576: ser_putch(84);
 12337  1E48  3054               	movlw	(054h)
 12338  1E49  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12339                           	line	577
 12340                           ;robot.c: 577: ser_putch(16);
 12341  1E4E  3010               	movlw	(010h)
 12342  1E4F  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12343                           	line	578
 12344                           ;robot.c: 578: ser_putch(72);
 12345  1E54  3048               	movlw	(048h)
 12346  1E55  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12347                           	line	579
 12348                           ;robot.c: 579: ser_putch(16);
 12349  1E5A  3010               	movlw	(010h)
 12350  1E5B  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12351                           	line	580
 12352                           	
 12353  1E60                     l6331:	
 12354  1E60  0008               	return
 12355                           	opt stack 0
 12356                           GLOBAL	__end_of_robotLoadSong
 12357  1E61                     	__end_of_robotLoadSong:
 12358 ;; =============== function _robotLoadSong ends ============
 12359                           
 12360                           	signat	_robotLoadSong,88
 12361                           	global	_robo_init
 12362                           psect	text1138,local,class=CODE,delta=2
 12363                           global __ptext1138
 12364  1AB6                     __ptext1138:
 12365                           
 12366 ;; *************** function _robo_init *****************
 12367 ;; Defined at:
 12368 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;		None               void
 12375 ;; Registers used:
 12376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12382 ;;      Params:         0       0       0       0       0
 12383 ;;      Locals:         0       0       0       0       0
 12384 ;;      Temps:          0       0       0       0       0
 12385 ;;      Totals:         0       0       0       0       0
 12386 ;;Total ram usage:        0 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; Hardware stack levels required when called:    3
 12389 ;; This function calls:
 12390 ;;		_ser_putch
 12391 ;; This function is called by:
 12392 ;;		_init
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           psect	text1138
 12396                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 12397                           	line	42
 12398                           	global	__size_of_robo_init
 12399  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
 12400                           	
 12401  1AB6                     _robo_init:	
 12402                           	opt	stack 3
 12403                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12404                           	line	43
 12405                           	
 12406  1AB6                     l11530:	
 12407                           ;robot.c: 43: ser_putch(128);
 12408  1AB6  3080               	movlw	(080h)
 12409  1AB7  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12410                           	line	44
 12411                           ;robot.c: 44: ser_putch(132);
 12412  1ABC  3084               	movlw	(084h)
 12413  1ABD  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12414                           	line	45
 12415                           ;robot.c: 45: ser_putch(150);
 12416  1AC2  3096               	movlw	(096h)
 12417  1AC3  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12418                           	line	46
 12419                           ;robot.c: 46: ser_putch(0);
 12420  1AC8  3000               	movlw	(0)
 12421  1AC9  160A  158A  241B   	fcall	_ser_putch
              160A  158A         
 12422                           	line	47
 12423                           	
 12424  1ACE                     l6214:	
 12425  1ACE  0008               	return
 12426                           	opt stack 0
 12427                           GLOBAL	__end_of_robo_init
 12428  1ACF                     	__end_of_robo_init:
 12429 ;; =============== function _robo_init ends ============
 12430                           
 12431                           	signat	_robo_init,88
 12432                           	global	_lcd_write_data
 12433                           psect	text1139,local,class=CODE,delta=2
 12434                           global __ptext1139
 12435  1A0C                     __ptext1139:
 12436                           
 12437 ;; *************** function _lcd_write_data *****************
 12438 ;; Defined at:
 12439 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;  databyte        1    wreg     unsigned char 
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  databyte        1    2[BANK0 ] unsigned char 
 12444 ;; Return value:  Size  Location     Type
 12445 ;;		None               void
 12446 ;; Registers used:
 12447 ;;		wreg
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12453 ;;      Params:         0       0       0       0       0
 12454 ;;      Locals:         0       1       0       0       0
 12455 ;;      Temps:          0       2       0       0       0
 12456 ;;      Totals:         0       3       0       0       0
 12457 ;;Total ram usage:        3 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; Hardware stack levels required when called:    2
 12460 ;; This function calls:
 12461 ;;		Nothing
 12462 ;; This function is called by:
 12463 ;;		_lcd_write_string
 12464 ;;		_lcd_write_2_digit_bcd
 12465 ;;		_lcd_write_3_digit_bcd
 12466 ;; This function uses a non-reentrant model
 12467 ;;
 12468                           psect	text1139
 12469                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 12470                           	line	30
 12471                           	global	__size_of_lcd_write_data
 12472  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 12473                           	
 12474  1A0C                     _lcd_write_data:	
 12475                           	opt	stack 2
 12476                           ; Regs used in _lcd_write_data: [wreg]
 12477                           ;lcd_write_data@databyte stored from wreg
 12478  1A0C  1283               	bcf	status, 5	;RP0=0, select bank0
 12479  1A0D  1303               	bcf	status, 6	;RP1=0, select bank0
 12480  1A0E  00A2               	movwf	(lcd_write_data@databyte)
 12481                           	line	31
 12482                           	
 12483  1A0F                     l11522:	
 12484                           ;lcd.c: 31: RE2 = 0;
 12485  1A0F  1109               	bcf	(74/8),(74)&7
 12486                           	line	32
 12487                           ;lcd.c: 32: RE1 = 0;
 12488  1A10  1089               	bcf	(73/8),(73)&7
 12489                           	line	33
 12490                           ;lcd.c: 33: RE0 = 1;
 12491  1A11  1409               	bsf	(72/8),(72)&7
 12492                           	line	34
 12493                           	
 12494  1A12                     l11524:	
 12495                           ;lcd.c: 34: PORTD = databyte;
 12496  1A12  0822               	movf	(lcd_write_data@databyte),w
 12497  1A13  0088               	movwf	(8)	;volatile
 12498                           	line	35
 12499                           	
 12500  1A14                     l11526:	
 12501                           ;lcd.c: 35: RE2 = 1;
 12502  1A14  1509               	bsf	(74/8),(74)&7
 12503                           	line	36
 12504                           	
 12505  1A15                     l11528:	
 12506                           ;lcd.c: 36: RE2 = 0;
 12507  1A15  1109               	bcf	(74/8),(74)&7
 12508                           	line	37
 12509                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
 12510                           	opt asmopt_off
 12511  1A16  3007               movlw	7
 12512  1A17  00A1               movwf	((??_lcd_write_data+0)+0+1),f
 12513  1A18  307D               	movlw	125
 12514  1A19  00A0               movwf	((??_lcd_write_data+0)+0),f
 12515  1A1A                     u5727:
 12516  1A1A  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
 12517  1A1B  2A1A               	goto	u5727
 12518  1A1C  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
 12519  1A1D  2A1A               	goto	u5727
 12520                           opt asmopt_on
 12521                           
 12522                           	line	38
 12523                           	
 12524  1A1E                     l1402:	
 12525  1A1E  0008               	return
 12526                           	opt stack 0
 12527                           GLOBAL	__end_of_lcd_write_data
 12528  1A1F                     	__end_of_lcd_write_data:
 12529 ;; =============== function _lcd_write_data ends ============
 12530                           
 12531                           	signat	_lcd_write_data,4216
 12532                           	global	_lcd_write_control
 12533                           psect	text1140,local,class=CODE,delta=2
 12534                           global __ptext1140
 12535  1A46                     __ptext1140:
 12536                           
 12537 ;; *************** function _lcd_write_control *****************
 12538 ;; Defined at:
 12539 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  databyte        1    wreg     unsigned char 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;  databyte        1    2[BANK0 ] unsigned char 
 12544 ;; Return value:  Size  Location     Type
 12545 ;;		None               void
 12546 ;; Registers used:
 12547 ;;		wreg
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12553 ;;      Params:         0       0       0       0       0
 12554 ;;      Locals:         0       1       0       0       0
 12555 ;;      Temps:          0       2       0       0       0
 12556 ;;      Totals:         0       3       0       0       0
 12557 ;;Total ram usage:        3 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:    2
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_lcd_set_cursor
 12564 ;;		_lcd_init
 12565 ;;		_UpdateDisplay
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           psect	text1140
 12569                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 12570                           	line	18
 12571                           	global	__size_of_lcd_write_control
 12572  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 12573                           	
 12574  1A46                     _lcd_write_control:	
 12575                           	opt	stack 2
 12576                           ; Regs used in _lcd_write_control: [wreg]
 12577                           ;lcd_write_control@databyte stored from wreg
 12578  1A46  1283               	bcf	status, 5	;RP0=0, select bank0
 12579  1A47  1303               	bcf	status, 6	;RP1=0, select bank0
 12580  1A48  00A2               	movwf	(lcd_write_control@databyte)
 12581                           	line	19
 12582                           	
 12583  1A49                     l11514:	
 12584                           ;lcd.c: 19: RE2 = 0;
 12585  1A49  1109               	bcf	(74/8),(74)&7
 12586                           	line	20
 12587                           ;lcd.c: 20: RE1 = 0;
 12588  1A4A  1089               	bcf	(73/8),(73)&7
 12589                           	line	21
 12590                           ;lcd.c: 21: RE0 = 0;
 12591  1A4B  1009               	bcf	(72/8),(72)&7
 12592                           	line	22
 12593                           	
 12594  1A4C                     l11516:	
 12595                           ;lcd.c: 22: PORTD = databyte;
 12596  1A4C  0822               	movf	(lcd_write_control@databyte),w
 12597  1A4D  0088               	movwf	(8)	;volatile
 12598                           	line	23
 12599                           	
 12600  1A4E                     l11518:	
 12601                           ;lcd.c: 23: RE2 = 1;
 12602  1A4E  1509               	bsf	(74/8),(74)&7
 12603                           	line	24
 12604                           	
 12605  1A4F                     l11520:	
 12606                           ;lcd.c: 24: RE2 = 0;
 12607  1A4F  1109               	bcf	(74/8),(74)&7
 12608                           	line	25
 12609                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
 12610                           	opt asmopt_off
 12611  1A50  300D               movlw	13
 12612  1A51  00A1               movwf	((??_lcd_write_control+0)+0+1),f
 12613  1A52  30FB               	movlw	251
 12614  1A53  00A0               movwf	((??_lcd_write_control+0)+0),f
 12615  1A54                     u5737:
 12616  1A54  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
 12617  1A55  2A54               	goto	u5737
 12618  1A56  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
 12619  1A57  2A54               	goto	u5737
 12620  1A58  2A59               	nop2
 12621                           opt asmopt_on
 12622                           
 12623                           	line	26
 12624                           	
 12625  1A59                     l1399:	
 12626  1A59  0008               	return
 12627                           	opt stack 0
 12628                           GLOBAL	__end_of_lcd_write_control
 12629  1A5A                     	__end_of_lcd_write_control:
 12630 ;; =============== function _lcd_write_control ends ============
 12631                           
 12632                           	signat	_lcd_write_control,4216
 12633                           	global	_init_adc
 12634                           psect	text1141,local,class=CODE,delta=2
 12635                           global __ptext1141
 12636  1A5A                     __ptext1141:
 12637                           
 12638 ;; *************** function _init_adc *****************
 12639 ;; Defined at:
 12640 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;		None
 12645 ;; Return value:  Size  Location     Type
 12646 ;;		None               void
 12647 ;; Registers used:
 12648 ;;		wreg, status,2
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12654 ;;      Params:         0       0       0       0       0
 12655 ;;      Locals:         0       0       0       0       0
 12656 ;;      Temps:          0       1       0       0       0
 12657 ;;      Totals:         0       1       0       0       0
 12658 ;;Total ram usage:        1 bytes
 12659 ;; Hardware stack levels used:    1
 12660 ;; Hardware stack levels required when called:    2
 12661 ;; This function calls:
 12662 ;;		Nothing
 12663 ;; This function is called by:
 12664 ;;		_init
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           psect	text1141
 12668                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 12669                           	line	61
 12670                           	global	__size_of_init_adc
 12671  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 12672                           	
 12673  1A5A                     _init_adc:	
 12674                           	opt	stack 4
 12675                           ; Regs used in _init_adc: [wreg+status,2]
 12676                           	line	63
 12677                           	
 12678  1A5A                     l11504:	
 12679                           ;adc.c: 63: PORTA = 0;
 12680  1A5A  1283               	bcf	status, 5	;RP0=0, select bank0
 12681  1A5B  1303               	bcf	status, 6	;RP1=0, select bank0
 12682  1A5C  0185               	clrf	(5)	;volatile
 12683                           	line	64
 12684                           	
 12685  1A5D                     l11506:	
 12686                           ;adc.c: 64: TRISA = 0b00111111;
 12687  1A5D  303F               	movlw	(03Fh)
 12688  1A5E  1683               	bsf	status, 5	;RP0=1, select bank1
 12689  1A5F  1303               	bcf	status, 6	;RP1=0, select bank1
 12690  1A60  0085               	movwf	(133)^080h	;volatile
 12691                           	line	67
 12692                           	
 12693  1A61                     l11508:	
 12694                           ;adc.c: 67: ADCON0 = 0b10100001;
 12695  1A61  30A1               	movlw	(0A1h)
 12696  1A62  1283               	bcf	status, 5	;RP0=0, select bank0
 12697  1A63  1303               	bcf	status, 6	;RP1=0, select bank0
 12698  1A64  009F               	movwf	(31)	;volatile
 12699                           	line	68
 12700                           	
 12701  1A65                     l11510:	
 12702                           ;adc.c: 68: ADCON1 = 0b0000010;
 12703  1A65  3002               	movlw	(02h)
 12704  1A66  1683               	bsf	status, 5	;RP0=1, select bank1
 12705  1A67  1303               	bcf	status, 6	;RP1=0, select bank1
 12706  1A68  009F               	movwf	(159)^080h	;volatile
 12707                           	line	70
 12708                           	
 12709  1A69                     l11512:	
 12710                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
 12711                           	opt asmopt_off
 12712  1A69  3053               movlw	83
 12713  1A6A  1283               	bcf	status, 5	;RP0=0, select bank0
 12714  1A6B  1303               	bcf	status, 6	;RP1=0, select bank0
 12715  1A6C  00A0               movwf	(??_init_adc+0)+0,f
 12716  1A6D                     u5747:
 12717  1A6D  0BA0               decfsz	(??_init_adc+0)+0,f
 12718  1A6E  2A6D               	goto	u5747
 12719                           opt asmopt_on
 12720                           
 12721                           	line	72
 12722                           	
 12723  1A6F                     l700:	
 12724  1A6F  0008               	return
 12725                           	opt stack 0
 12726                           GLOBAL	__end_of_init_adc
 12727  1A70                     	__end_of_init_adc:
 12728 ;; =============== function _init_adc ends ============
 12729                           
 12730                           	signat	_init_adc,88
 12731                           	global	_adc_read_channel
 12732                           psect	text1142,local,class=CODE,delta=2
 12733                           global __ptext1142
 12734  07C4                     __ptext1142:
 12735                           
 12736 ;; *************** function _adc_read_channel *****************
 12737 ;; Defined at:
 12738 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;  channel         1    wreg     unsigned char 
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;  channel         1    7[BANK0 ] unsigned char 
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  1    wreg      unsigned char 
 12745 ;; Registers used:
 12746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12752 ;;      Params:         0       0       0       0       0
 12753 ;;      Locals:         0       1       0       0       0
 12754 ;;      Temps:          0       1       0       0       0
 12755 ;;      Totals:         0       2       0       0       0
 12756 ;;Total ram usage:        2 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    3
 12759 ;; This function calls:
 12760 ;;		_adc_read
 12761 ;; This function is called by:
 12762 ;;		_readDistance
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           psect	text1142
 12766                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 12767                           	line	20
 12768                           	global	__size_of_adc_read_channel
 12769  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
 12770                           	
 12771  07C4                     _adc_read_channel:	
 12772                           	opt	stack 0
 12773                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12774                           ;adc_read_channel@channel stored from wreg
 12775  07C4  1283               	bcf	status, 5	;RP0=0, select bank0
 12776  07C5  1303               	bcf	status, 6	;RP1=0, select bank0
 12777  07C6  00A7               	movwf	(adc_read_channel@channel)
 12778                           	line	21
 12779                           	
 12780  07C7                     l11488:	
 12781                           ;adc.c: 21: switch(channel)
 12782  07C7  2FE0               	goto	l11496
 12783                           	line	23
 12784                           ;adc.c: 22: {
 12785                           ;adc.c: 23: case 0:
 12786                           	
 12787  07C8                     l690:	
 12788                           	line	24
 12789                           ;adc.c: 24: CHS0 = 0;
 12790  07C8  119F               	bcf	(251/8),(251)&7
 12791                           	line	25
 12792                           ;adc.c: 25: CHS1 = 0;
 12793  07C9  121F               	bcf	(252/8),(252)&7
 12794                           	line	26
 12795                           ;adc.c: 26: CHS2 = 0;
 12796  07CA  129F               	bcf	(253/8),(253)&7
 12797                           	line	27
 12798                           ;adc.c: 27: break;
 12799  07CB  2FF1               	goto	l11498
 12800                           	line	28
 12801                           ;adc.c: 28: case 1:
 12802                           	
 12803  07CC                     l692:	
 12804                           	line	29
 12805                           ;adc.c: 29: CHS0 = 1;
 12806  07CC  159F               	bsf	(251/8),(251)&7
 12807                           	line	30
 12808                           ;adc.c: 30: CHS1 = 0;
 12809  07CD  121F               	bcf	(252/8),(252)&7
 12810                           	line	31
 12811                           ;adc.c: 31: CHS2 = 0;
 12812  07CE  129F               	bcf	(253/8),(253)&7
 12813                           	line	32
 12814                           ;adc.c: 32: break;
 12815  07CF  2FF1               	goto	l11498
 12816                           	line	33
 12817                           ;adc.c: 33: case 2:
 12818                           	
 12819  07D0                     l693:	
 12820                           	line	34
 12821                           ;adc.c: 34: CHS0 = 0;
 12822  07D0  119F               	bcf	(251/8),(251)&7
 12823                           	line	35
 12824                           ;adc.c: 35: CHS1 = 1;
 12825  07D1  161F               	bsf	(252/8),(252)&7
 12826                           	line	36
 12827                           ;adc.c: 36: CHS2 = 0;
 12828  07D2  129F               	bcf	(253/8),(253)&7
 12829                           	line	37
 12830                           ;adc.c: 37: break;
 12831  07D3  2FF1               	goto	l11498
 12832                           	line	38
 12833                           ;adc.c: 38: case 3:
 12834                           	
 12835  07D4                     l694:	
 12836                           	line	39
 12837                           ;adc.c: 39: CHS0 = 1;
 12838  07D4  159F               	bsf	(251/8),(251)&7
 12839                           	line	40
 12840                           ;adc.c: 40: CHS1 = 1;
 12841  07D5  161F               	bsf	(252/8),(252)&7
 12842                           	line	41
 12843                           ;adc.c: 41: CHS2 = 0;
 12844  07D6  129F               	bcf	(253/8),(253)&7
 12845                           	line	42
 12846                           ;adc.c: 42: break;
 12847  07D7  2FF1               	goto	l11498
 12848                           	line	43
 12849                           ;adc.c: 43: case 4:
 12850                           	
 12851  07D8                     l695:	
 12852                           	line	44
 12853                           ;adc.c: 44: CHS0 = 0;
 12854  07D8  119F               	bcf	(251/8),(251)&7
 12855                           	line	45
 12856                           ;adc.c: 45: CHS1 = 0;
 12857  07D9  121F               	bcf	(252/8),(252)&7
 12858                           	line	46
 12859                           ;adc.c: 46: CHS2 = 1;
 12860  07DA  169F               	bsf	(253/8),(253)&7
 12861                           	line	47
 12862                           ;adc.c: 47: break;
 12863  07DB  2FF1               	goto	l11498
 12864                           	line	50
 12865                           ;adc.c: 50: default:
 12866                           	
 12867  07DC                     l696:	
 12868                           	line	51
 12869                           	
 12870  07DC                     l11490:	
 12871                           ;adc.c: 51: return 0;
 12872  07DC  3000               	movlw	(0)
 12873  07DD  2FFE               	goto	l697
 12874                           	
 12875  07DE                     l11492:	
 12876  07DE  2FFE               	goto	l697
 12877                           	line	52
 12878                           	
 12879  07DF                     l11494:	
 12880                           ;adc.c: 52: }
 12881  07DF  2FF1               	goto	l11498
 12882                           	line	21
 12883                           	
 12884  07E0                     l689:	
 12885                           	
 12886  07E0                     l11496:	
 12887  07E0  0827               	movf	(adc_read_channel@channel),w
 12888                           	; Switch size 1, requested type "space"
 12889                           ; Number of cases is 5, Range of values is 0 to 4
 12890                           ; switch strategies available:
 12891                           ; Name         Instructions Cycles
 12892                           ; simple_byte           16     9 (average)
 12893                           ; direct_byte           23     8 (fixed)
 12894                           ; jumptable            260     6 (fixed)
 12895                           ; rangetable             9     6 (fixed)
 12896                           ; spacedrange           16     9 (fixed)
 12897                           ; locatedrange           5     3 (fixed)
 12898                           ;	Chosen strategy is simple_byte
 12899                           
 12900                           	opt asmopt_off
 12901  07E1  3A00               	xorlw	0^0	; case 0
 12902  07E2  1903               	skipnz
 12903  07E3  2FC8               	goto	l690
 12904  07E4  3A01               	xorlw	1^0	; case 1
 12905  07E5  1903               	skipnz
 12906  07E6  2FCC               	goto	l692
 12907  07E7  3A03               	xorlw	2^1	; case 2
 12908  07E8  1903               	skipnz
 12909  07E9  2FD0               	goto	l693
 12910  07EA  3A01               	xorlw	3^2	; case 3
 12911  07EB  1903               	skipnz
 12912  07EC  2FD4               	goto	l694
 12913  07ED  3A07               	xorlw	4^3	; case 4
 12914  07EE  1903               	skipnz
 12915  07EF  2FD8               	goto	l695
 12916  07F0  2FDC               	goto	l11490
 12917                           	opt asmopt_on
 12918                           
 12919                           	line	52
 12920                           	
 12921  07F1                     l691:	
 12922                           	line	54
 12923                           	
 12924  07F1                     l11498:	
 12925                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
 12926                           	opt asmopt_off
 12927  07F1  3053               movlw	83
 12928  07F2  00A6               movwf	(??_adc_read_channel+0)+0,f
 12929  07F3                     u5757:
 12930  07F3  0BA6               decfsz	(??_adc_read_channel+0)+0,f
 12931  07F4  2FF3               	goto	u5757
 12932                           opt asmopt_on
 12933                           
 12934                           	line	56
 12935                           	
 12936  07F5                     l11500:	
 12937                           ;adc.c: 56: return adc_read();
 12938  07F5  160A  158A  22F0   	fcall	_adc_read
              120A  118A         
 12939  07FA  1283               	bcf	status, 5	;RP0=0, select bank0
 12940  07FB  1303               	bcf	status, 6	;RP1=0, select bank0
 12941  07FC  0820               	movf	(0+(?_adc_read)),w
 12942  07FD  2FFE               	goto	l697
 12943                           	
 12944  07FE                     l11502:	
 12945                           	line	58
 12946                           	
 12947  07FE                     l697:	
 12948  07FE  0008               	return
 12949                           	opt stack 0
 12950                           GLOBAL	__end_of_adc_read_channel
 12951  07FF                     	__end_of_adc_read_channel:
 12952 ;; =============== function _adc_read_channel ends ============
 12953                           
 12954                           	signat	_adc_read_channel,4217
 12955                           	global	___awmod
 12956                           psect	text1143,local,class=CODE,delta=2
 12957                           global __ptext1143
 12958  1F28                     __ptext1143:
 12959                           
 12960 ;; *************** function ___awmod *****************
 12961 ;; Defined at:
 12962 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;  divisor         2    0[BANK0 ] int 
 12965 ;;  dividend        2    2[BANK0 ] int 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;  sign            1    6[BANK0 ] unsigned char 
 12968 ;;  counter         1    5[BANK0 ] unsigned char 
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  2    0[BANK0 ] int 
 12971 ;; Registers used:
 12972 ;;		wreg, status,2, status,0
 12973 ;; Tracked objects:
 12974 ;;		On entry : 0/0
 12975 ;;		On exit  : 0/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12978 ;;      Params:         0       4       0       0       0
 12979 ;;      Locals:         0       2       0       0       0
 12980 ;;      Temps:          0       1       0       0       0
 12981 ;;      Totals:         0       7       0       0       0
 12982 ;;Total ram usage:        7 bytes
 12983 ;; Hardware stack levels used:    1
 12984 ;; Hardware stack levels required when called:    2
 12985 ;; This function calls:
 12986 ;;		Nothing
 12987 ;; This function is called by:
 12988 ;;		_UpdateDisplay
 12989 ;; This function uses a non-reentrant model
 12990 ;;
 12991                           psect	text1143
 12992                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 12993                           	line	5
 12994                           	global	__size_of___awmod
 12995  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 12996                           	
 12997  1F28                     ___awmod:	
 12998                           	opt	stack 3
 12999                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13000                           	line	8
 13001                           	
 13002  1F28                     l11432:	
 13003  1F28  1283               	bcf	status, 5	;RP0=0, select bank0
 13004  1F29  1303               	bcf	status, 6	;RP1=0, select bank0
 13005  1F2A  01A6               	clrf	(___awmod@sign)
 13006                           	line	9
 13007  1F2B  1FA3               	btfss	(___awmod@dividend+1),7
 13008  1F2C  2F2E               	goto	u4591
 13009  1F2D  2F2F               	goto	u4590
 13010  1F2E                     u4591:
 13011  1F2E  2F38               	goto	l11436
 13012  1F2F                     u4590:
 13013                           	line	10
 13014                           	
 13015  1F2F                     l11434:	
 13016  1F2F  09A2               	comf	(___awmod@dividend),f
 13017  1F30  09A3               	comf	(___awmod@dividend+1),f
 13018  1F31  0AA2               	incf	(___awmod@dividend),f
 13019  1F32  1903               	skipnz
 13020  1F33  0AA3               	incf	(___awmod@dividend+1),f
 13021                           	line	11
 13022  1F34  01A6               	clrf	(___awmod@sign)
 13023  1F35  1403               	bsf	status,0
 13024  1F36  0DA6               	rlf	(___awmod@sign),f
 13025  1F37  2F38               	goto	l11436
 13026                           	line	12
 13027                           	
 13028  1F38                     l8000:	
 13029                           	line	13
 13030                           	
 13031  1F38                     l11436:	
 13032  1F38  1FA1               	btfss	(___awmod@divisor+1),7
 13033  1F39  2F3B               	goto	u4601
 13034  1F3A  2F3C               	goto	u4600
 13035  1F3B                     u4601:
 13036  1F3B  2F42               	goto	l11440
 13037  1F3C                     u4600:
 13038                           	line	14
 13039                           	
 13040  1F3C                     l11438:	
 13041  1F3C  09A0               	comf	(___awmod@divisor),f
 13042  1F3D  09A1               	comf	(___awmod@divisor+1),f
 13043  1F3E  0AA0               	incf	(___awmod@divisor),f
 13044  1F3F  1903               	skipnz
 13045  1F40  0AA1               	incf	(___awmod@divisor+1),f
 13046  1F41  2F42               	goto	l11440
 13047                           	
 13048  1F42                     l8001:	
 13049                           	line	15
 13050                           	
 13051  1F42                     l11440:	
 13052  1F42  0821               	movf	(___awmod@divisor+1),w
 13053  1F43  0420               	iorwf	(___awmod@divisor),w
 13054  1F44  1903               	skipnz
 13055  1F45  2F47               	goto	u4611
 13056  1F46  2F48               	goto	u4610
 13057  1F47                     u4611:
 13058  1F47  2F7E               	goto	l11458
 13059  1F48                     u4610:
 13060                           	line	16
 13061                           	
 13062  1F48                     l11442:	
 13063  1F48  01A5               	clrf	(___awmod@counter)
 13064  1F49  1403               	bsf	status,0
 13065  1F4A  0DA5               	rlf	(___awmod@counter),f
 13066                           	line	17
 13067  1F4B  2F58               	goto	l11448
 13068                           	
 13069  1F4C                     l8004:	
 13070                           	line	18
 13071                           	
 13072  1F4C                     l11444:	
 13073  1F4C  3001               	movlw	01h
 13074                           	
 13075  1F4D                     u4625:
 13076  1F4D  1003               	clrc
 13077  1F4E  0DA0               	rlf	(___awmod@divisor),f
 13078  1F4F  0DA1               	rlf	(___awmod@divisor+1),f
 13079  1F50  3EFF               	addlw	-1
 13080  1F51  1D03               	skipz
 13081  1F52  2F4D               	goto	u4625
 13082                           	line	19
 13083                           	
 13084  1F53                     l11446:	
 13085  1F53  3001               	movlw	(01h)
 13086  1F54  00A4               	movwf	(??___awmod+0)+0
 13087  1F55  0824               	movf	(??___awmod+0)+0,w
 13088  1F56  07A5               	addwf	(___awmod@counter),f
 13089  1F57  2F58               	goto	l11448
 13090                           	line	20
 13091                           	
 13092  1F58                     l8003:	
 13093                           	line	17
 13094                           	
 13095  1F58                     l11448:	
 13096  1F58  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 13097  1F59  2F5B               	goto	u4631
 13098  1F5A  2F5C               	goto	u4630
 13099  1F5B                     u4631:
 13100  1F5B  2F4C               	goto	l11444
 13101  1F5C                     u4630:
 13102  1F5C  2F5E               	goto	l11450
 13103                           	
 13104  1F5D                     l8005:	
 13105  1F5D  2F5E               	goto	l11450
 13106                           	line	21
 13107                           	
 13108  1F5E                     l8006:	
 13109                           	line	22
 13110                           	
 13111  1F5E                     l11450:	
 13112  1F5E  0821               	movf	(___awmod@divisor+1),w
 13113  1F5F  0223               	subwf	(___awmod@dividend+1),w
 13114  1F60  1D03               	skipz
 13115  1F61  2F64               	goto	u4645
 13116  1F62  0820               	movf	(___awmod@divisor),w
 13117  1F63  0222               	subwf	(___awmod@dividend),w
 13118  1F64                     u4645:
 13119  1F64  1C03               	skipc
 13120  1F65  2F67               	goto	u4641
 13121  1F66  2F68               	goto	u4640
 13122  1F67                     u4641:
 13123  1F67  2F6F               	goto	l11454
 13124  1F68                     u4640:
 13125                           	line	23
 13126                           	
 13127  1F68                     l11452:	
 13128  1F68  0820               	movf	(___awmod@divisor),w
 13129  1F69  02A2               	subwf	(___awmod@dividend),f
 13130  1F6A  0821               	movf	(___awmod@divisor+1),w
 13131  1F6B  1C03               	skipc
 13132  1F6C  03A3               	decf	(___awmod@dividend+1),f
 13133  1F6D  02A3               	subwf	(___awmod@dividend+1),f
 13134  1F6E  2F6F               	goto	l11454
 13135                           	
 13136  1F6F                     l8007:	
 13137                           	line	24
 13138                           	
 13139  1F6F                     l11454:	
 13140  1F6F  3001               	movlw	01h
 13141                           	
 13142  1F70                     u4655:
 13143  1F70  1003               	clrc
 13144  1F71  0CA1               	rrf	(___awmod@divisor+1),f
 13145  1F72  0CA0               	rrf	(___awmod@divisor),f
 13146  1F73  3EFF               	addlw	-1
 13147  1F74  1D03               	skipz
 13148  1F75  2F70               	goto	u4655
 13149                           	line	25
 13150                           	
 13151  1F76                     l11456:	
 13152  1F76  3001               	movlw	low(01h)
 13153  1F77  02A5               	subwf	(___awmod@counter),f
 13154  1F78  1D03               	btfss	status,2
 13155  1F79  2F7B               	goto	u4661
 13156  1F7A  2F7C               	goto	u4660
 13157  1F7B                     u4661:
 13158  1F7B  2F5E               	goto	l11450
 13159  1F7C                     u4660:
 13160  1F7C  2F7E               	goto	l11458
 13161                           	
 13162  1F7D                     l8008:	
 13163  1F7D  2F7E               	goto	l11458
 13164                           	line	26
 13165                           	
 13166  1F7E                     l8002:	
 13167                           	line	27
 13168                           	
 13169  1F7E                     l11458:	
 13170  1F7E  0826               	movf	(___awmod@sign),w
 13171  1F7F  1D03               	skipz
 13172  1F80  2F82               	goto	u4670
 13173  1F81  2F88               	goto	l11462
 13174  1F82                     u4670:
 13175                           	line	28
 13176                           	
 13177  1F82                     l11460:	
 13178  1F82  09A2               	comf	(___awmod@dividend),f
 13179  1F83  09A3               	comf	(___awmod@dividend+1),f
 13180  1F84  0AA2               	incf	(___awmod@dividend),f
 13181  1F85  1903               	skipnz
 13182  1F86  0AA3               	incf	(___awmod@dividend+1),f
 13183  1F87  2F88               	goto	l11462
 13184                           	
 13185  1F88                     l8009:	
 13186                           	line	29
 13187                           	
 13188  1F88                     l11462:	
 13189  1F88  0823               	movf	(___awmod@dividend+1),w
 13190  1F89  01A1               	clrf	(?___awmod+1)
 13191  1F8A  07A1               	addwf	(?___awmod+1)
 13192  1F8B  0822               	movf	(___awmod@dividend),w
 13193  1F8C  01A0               	clrf	(?___awmod)
 13194  1F8D  07A0               	addwf	(?___awmod)
 13195                           
 13196  1F8E  2F8F               	goto	l8010
 13197                           	
 13198  1F8F                     l11464:	
 13199                           	line	30
 13200                           	
 13201  1F8F                     l8010:	
 13202  1F8F  0008               	return
 13203                           	opt stack 0
 13204                           GLOBAL	__end_of___awmod
 13205  1F90                     	__end_of___awmod:
 13206 ;; =============== function ___awmod ends ============
 13207                           
 13208                           	signat	___awmod,8314
 13209                           	global	___awdiv
 13210                           psect	text1144,local,class=CODE,delta=2
 13211                           global __ptext1144
 13212  11A1                     __ptext1144:
 13213                           
 13214 ;; *************** function ___awdiv *****************
 13215 ;; Defined at:
 13216 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;  divisor         2    0[BANK0 ] int 
 13219 ;;  dividend        2    2[BANK0 ] int 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;  quotient        2    7[BANK0 ] int 
 13222 ;;  sign            1    6[BANK0 ] unsigned char 
 13223 ;;  counter         1    5[BANK0 ] unsigned char 
 13224 ;; Return value:  Size  Location     Type
 13225 ;;                  2    0[BANK0 ] int 
 13226 ;; Registers used:
 13227 ;;		wreg, status,2, status,0
 13228 ;; Tracked objects:
 13229 ;;		On entry : 0/0
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13233 ;;      Params:         0       4       0       0       0
 13234 ;;      Locals:         0       4       0       0       0
 13235 ;;      Temps:          0       1       0       0       0
 13236 ;;      Totals:         0       9       0       0       0
 13237 ;;Total ram usage:        9 bytes
 13238 ;; Hardware stack levels used:    1
 13239 ;; Hardware stack levels required when called:    2
 13240 ;; This function calls:
 13241 ;;		Nothing
 13242 ;; This function is called by:
 13243 ;;		_UpdateDisplay
 13244 ;;		_robot_turnRight
 13245 ;; This function uses a non-reentrant model
 13246 ;;
 13247                           psect	text1144
 13248                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 13249                           	line	5
 13250                           	global	__size_of___awdiv
 13251  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13252                           	
 13253  11A1                     ___awdiv:	
 13254                           	opt	stack 3
 13255                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13256                           	line	9
 13257                           	
 13258  11A1                     l11392:	
 13259  11A1  1283               	bcf	status, 5	;RP0=0, select bank0
 13260  11A2  1303               	bcf	status, 6	;RP1=0, select bank0
 13261  11A3  01A6               	clrf	(___awdiv@sign)
 13262                           	line	10
 13263  11A4  1FA1               	btfss	(___awdiv@divisor+1),7
 13264  11A5  29A7               	goto	u4491
 13265  11A6  29A8               	goto	u4490
 13266  11A7                     u4491:
 13267  11A7  29B1               	goto	l11396
 13268  11A8                     u4490:
 13269                           	line	11
 13270                           	
 13271  11A8                     l11394:	
 13272  11A8  09A0               	comf	(___awdiv@divisor),f
 13273  11A9  09A1               	comf	(___awdiv@divisor+1),f
 13274  11AA  0AA0               	incf	(___awdiv@divisor),f
 13275  11AB  1903               	skipnz
 13276  11AC  0AA1               	incf	(___awdiv@divisor+1),f
 13277                           	line	12
 13278  11AD  01A6               	clrf	(___awdiv@sign)
 13279  11AE  1403               	bsf	status,0
 13280  11AF  0DA6               	rlf	(___awdiv@sign),f
 13281  11B0  29B1               	goto	l11396
 13282                           	line	13
 13283                           	
 13284  11B1                     l7932:	
 13285                           	line	14
 13286                           	
 13287  11B1                     l11396:	
 13288  11B1  1FA3               	btfss	(___awdiv@dividend+1),7
 13289  11B2  29B4               	goto	u4501
 13290  11B3  29B5               	goto	u4500
 13291  11B4                     u4501:
 13292  11B4  29BF               	goto	l11402
 13293  11B5                     u4500:
 13294                           	line	15
 13295                           	
 13296  11B5                     l11398:	
 13297  11B5  09A2               	comf	(___awdiv@dividend),f
 13298  11B6  09A3               	comf	(___awdiv@dividend+1),f
 13299  11B7  0AA2               	incf	(___awdiv@dividend),f
 13300  11B8  1903               	skipnz
 13301  11B9  0AA3               	incf	(___awdiv@dividend+1),f
 13302                           	line	16
 13303                           	
 13304  11BA                     l11400:	
 13305  11BA  3001               	movlw	(01h)
 13306  11BB  00A4               	movwf	(??___awdiv+0)+0
 13307  11BC  0824               	movf	(??___awdiv+0)+0,w
 13308  11BD  06A6               	xorwf	(___awdiv@sign),f
 13309  11BE  29BF               	goto	l11402
 13310                           	line	17
 13311                           	
 13312  11BF                     l7933:	
 13313                           	line	18
 13314                           	
 13315  11BF                     l11402:	
 13316  11BF  01A7               	clrf	(___awdiv@quotient)
 13317  11C0  01A8               	clrf	(___awdiv@quotient+1)
 13318                           	line	19
 13319                           	
 13320  11C1                     l11404:	
 13321  11C1  0821               	movf	(___awdiv@divisor+1),w
 13322  11C2  0420               	iorwf	(___awdiv@divisor),w
 13323  11C3  1903               	skipnz
 13324  11C4  29C6               	goto	u4511
 13325  11C5  29C7               	goto	u4510
 13326  11C6                     u4511:
 13327  11C6  2A05               	goto	l11424
 13328  11C7                     u4510:
 13329                           	line	20
 13330                           	
 13331  11C7                     l11406:	
 13332  11C7  01A5               	clrf	(___awdiv@counter)
 13333  11C8  1403               	bsf	status,0
 13334  11C9  0DA5               	rlf	(___awdiv@counter),f
 13335                           	line	21
 13336  11CA  29D7               	goto	l11412
 13337                           	
 13338  11CB                     l7936:	
 13339                           	line	22
 13340                           	
 13341  11CB                     l11408:	
 13342  11CB  3001               	movlw	01h
 13343                           	
 13344  11CC                     u4525:
 13345  11CC  1003               	clrc
 13346  11CD  0DA0               	rlf	(___awdiv@divisor),f
 13347  11CE  0DA1               	rlf	(___awdiv@divisor+1),f
 13348  11CF  3EFF               	addlw	-1
 13349  11D0  1D03               	skipz
 13350  11D1  29CC               	goto	u4525
 13351                           	line	23
 13352                           	
 13353  11D2                     l11410:	
 13354  11D2  3001               	movlw	(01h)
 13355  11D3  00A4               	movwf	(??___awdiv+0)+0
 13356  11D4  0824               	movf	(??___awdiv+0)+0,w
 13357  11D5  07A5               	addwf	(___awdiv@counter),f
 13358  11D6  29D7               	goto	l11412
 13359                           	line	24
 13360                           	
 13361  11D7                     l7935:	
 13362                           	line	21
 13363                           	
 13364  11D7                     l11412:	
 13365  11D7  1FA1               	btfss	(___awdiv@divisor+1),(15)&7
 13366  11D8  29DA               	goto	u4531
 13367  11D9  29DB               	goto	u4530
 13368  11DA                     u4531:
 13369  11DA  29CB               	goto	l11408
 13370  11DB                     u4530:
 13371  11DB  29DD               	goto	l11414
 13372                           	
 13373  11DC                     l7937:	
 13374  11DC  29DD               	goto	l11414
 13375                           	line	25
 13376                           	
 13377  11DD                     l7938:	
 13378                           	line	26
 13379                           	
 13380  11DD                     l11414:	
 13381  11DD  3001               	movlw	01h
 13382                           	
 13383  11DE                     u4545:
 13384  11DE  1003               	clrc
 13385  11DF  0DA7               	rlf	(___awdiv@quotient),f
 13386  11E0  0DA8               	rlf	(___awdiv@quotient+1),f
 13387  11E1  3EFF               	addlw	-1
 13388  11E2  1D03               	skipz
 13389  11E3  29DE               	goto	u4545
 13390                           	line	27
 13391  11E4  0821               	movf	(___awdiv@divisor+1),w
 13392  11E5  0223               	subwf	(___awdiv@dividend+1),w
 13393  11E6  1D03               	skipz
 13394  11E7  29EA               	goto	u4555
 13395  11E8  0820               	movf	(___awdiv@divisor),w
 13396  11E9  0222               	subwf	(___awdiv@dividend),w
 13397  11EA                     u4555:
 13398  11EA  1C03               	skipc
 13399  11EB  29ED               	goto	u4551
 13400  11EC  29EE               	goto	u4550
 13401  11ED                     u4551:
 13402  11ED  29F6               	goto	l11420
 13403  11EE                     u4550:
 13404                           	line	28
 13405                           	
 13406  11EE                     l11416:	
 13407  11EE  0820               	movf	(___awdiv@divisor),w
 13408  11EF  02A2               	subwf	(___awdiv@dividend),f
 13409  11F0  0821               	movf	(___awdiv@divisor+1),w
 13410  11F1  1C03               	skipc
 13411  11F2  03A3               	decf	(___awdiv@dividend+1),f
 13412  11F3  02A3               	subwf	(___awdiv@dividend+1),f
 13413                           	line	29
 13414                           	
 13415  11F4                     l11418:	
 13416  11F4  1427               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 13417  11F5  29F6               	goto	l11420
 13418                           	line	30
 13419                           	
 13420  11F6                     l7939:	
 13421                           	line	31
 13422                           	
 13423  11F6                     l11420:	
 13424  11F6  3001               	movlw	01h
 13425                           	
 13426  11F7                     u4565:
 13427  11F7  1003               	clrc
 13428  11F8  0CA1               	rrf	(___awdiv@divisor+1),f
 13429  11F9  0CA0               	rrf	(___awdiv@divisor),f
 13430  11FA  3EFF               	addlw	-1
 13431  11FB  1D03               	skipz
 13432  11FC  29F7               	goto	u4565
 13433                           	line	32
 13434                           	
 13435  11FD                     l11422:	
 13436  11FD  3001               	movlw	low(01h)
 13437  11FE  02A5               	subwf	(___awdiv@counter),f
 13438  11FF  1D03               	btfss	status,2
 13439  1200  2A02               	goto	u4571
 13440  1201  2A03               	goto	u4570
 13441  1202                     u4571:
 13442  1202  29DD               	goto	l11414
 13443  1203                     u4570:
 13444  1203  2A05               	goto	l11424
 13445                           	
 13446  1204                     l7940:	
 13447  1204  2A05               	goto	l11424
 13448                           	line	33
 13449                           	
 13450  1205                     l7934:	
 13451                           	line	34
 13452                           	
 13453  1205                     l11424:	
 13454  1205  0826               	movf	(___awdiv@sign),w
 13455  1206  1D03               	skipz
 13456  1207  2A09               	goto	u4580
 13457  1208  2A0F               	goto	l11428
 13458  1209                     u4580:
 13459                           	line	35
 13460                           	
 13461  1209                     l11426:	
 13462  1209  09A7               	comf	(___awdiv@quotient),f
 13463  120A  09A8               	comf	(___awdiv@quotient+1),f
 13464  120B  0AA7               	incf	(___awdiv@quotient),f
 13465  120C  1903               	skipnz
 13466  120D  0AA8               	incf	(___awdiv@quotient+1),f
 13467  120E  2A0F               	goto	l11428
 13468                           	
 13469  120F                     l7941:	
 13470                           	line	36
 13471                           	
 13472  120F                     l11428:	
 13473  120F  0828               	movf	(___awdiv@quotient+1),w
 13474  1210  01A1               	clrf	(?___awdiv+1)
 13475  1211  07A1               	addwf	(?___awdiv+1)
 13476  1212  0827               	movf	(___awdiv@quotient),w
 13477  1213  01A0               	clrf	(?___awdiv)
 13478  1214  07A0               	addwf	(?___awdiv)
 13479                           
 13480  1215  2A16               	goto	l7942
 13481                           	
 13482  1216                     l11430:	
 13483                           	line	37
 13484                           	
 13485  1216                     l7942:	
 13486  1216  0008               	return
 13487                           	opt stack 0
 13488                           GLOBAL	__end_of___awdiv
 13489  1217                     	__end_of___awdiv:
 13490 ;; =============== function ___awdiv ends ============
 13491                           
 13492                           	signat	___awdiv,8314
 13493                           	global	___lwmod
 13494                           psect	text1145,local,class=CODE,delta=2
 13495                           global __ptext1145
 13496  1D29                     __ptext1145:
 13497                           
 13498 ;; *************** function ___lwmod *****************
 13499 ;; Defined at:
 13500 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  divisor         2   14[BANK0 ] unsigned int 
 13503 ;;  dividend        2   16[BANK0 ] unsigned int 
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;  counter         1   19[BANK0 ] unsigned char 
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  2   14[BANK0 ] unsigned int 
 13508 ;; Registers used:
 13509 ;;		wreg, status,2, status,0
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13515 ;;      Params:         0       4       0       0       0
 13516 ;;      Locals:         0       1       0       0       0
 13517 ;;      Temps:          0       1       0       0       0
 13518 ;;      Totals:         0       6       0       0       0
 13519 ;;Total ram usage:        6 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; Hardware stack levels required when called:    2
 13522 ;; This function calls:
 13523 ;;		Nothing
 13524 ;; This function is called by:
 13525 ;;		_sprintf
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           psect	text1145
 13529                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13530                           	line	5
 13531                           	global	__size_of___lwmod
 13532  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 13533                           	
 13534  1D29                     ___lwmod:	
 13535                           	opt	stack 2
 13536                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13537                           	line	8
 13538                           	
 13539  1D29                     l11370:	
 13540  1D29  1283               	bcf	status, 5	;RP0=0, select bank0
 13541  1D2A  1303               	bcf	status, 6	;RP1=0, select bank0
 13542  1D2B  082F               	movf	(___lwmod@divisor+1),w
 13543  1D2C  042E               	iorwf	(___lwmod@divisor),w
 13544  1D2D  1903               	skipnz
 13545  1D2E  2D30               	goto	u4431
 13546  1D2F  2D31               	goto	u4430
 13547  1D30                     u4431:
 13548  1D30  2D67               	goto	l11388
 13549  1D31                     u4430:
 13550                           	line	9
 13551                           	
 13552  1D31                     l11372:	
 13553  1D31  01B3               	clrf	(___lwmod@counter)
 13554  1D32  1403               	bsf	status,0
 13555  1D33  0DB3               	rlf	(___lwmod@counter),f
 13556                           	line	10
 13557  1D34  2D41               	goto	l11378
 13558                           	
 13559  1D35                     l7810:	
 13560                           	line	11
 13561                           	
 13562  1D35                     l11374:	
 13563  1D35  3001               	movlw	01h
 13564                           	
 13565  1D36                     u4445:
 13566  1D36  1003               	clrc
 13567  1D37  0DAE               	rlf	(___lwmod@divisor),f
 13568  1D38  0DAF               	rlf	(___lwmod@divisor+1),f
 13569  1D39  3EFF               	addlw	-1
 13570  1D3A  1D03               	skipz
 13571  1D3B  2D36               	goto	u4445
 13572                           	line	12
 13573                           	
 13574  1D3C                     l11376:	
 13575  1D3C  3001               	movlw	(01h)
 13576  1D3D  00B2               	movwf	(??___lwmod+0)+0
 13577  1D3E  0832               	movf	(??___lwmod+0)+0,w
 13578  1D3F  07B3               	addwf	(___lwmod@counter),f
 13579  1D40  2D41               	goto	l11378
 13580                           	line	13
 13581                           	
 13582  1D41                     l7809:	
 13583                           	line	10
 13584                           	
 13585  1D41                     l11378:	
 13586  1D41  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 13587  1D42  2D44               	goto	u4451
 13588  1D43  2D45               	goto	u4450
 13589  1D44                     u4451:
 13590  1D44  2D35               	goto	l11374
 13591  1D45                     u4450:
 13592  1D45  2D47               	goto	l11380
 13593                           	
 13594  1D46                     l7811:	
 13595  1D46  2D47               	goto	l11380
 13596                           	line	14
 13597                           	
 13598  1D47                     l7812:	
 13599                           	line	15
 13600                           	
 13601  1D47                     l11380:	
 13602  1D47  082F               	movf	(___lwmod@divisor+1),w
 13603  1D48  0231               	subwf	(___lwmod@dividend+1),w
 13604  1D49  1D03               	skipz
 13605  1D4A  2D4D               	goto	u4465
 13606  1D4B  082E               	movf	(___lwmod@divisor),w
 13607  1D4C  0230               	subwf	(___lwmod@dividend),w
 13608  1D4D                     u4465:
 13609  1D4D  1C03               	skipc
 13610  1D4E  2D50               	goto	u4461
 13611  1D4F  2D51               	goto	u4460
 13612  1D50                     u4461:
 13613  1D50  2D58               	goto	l11384
 13614  1D51                     u4460:
 13615                           	line	16
 13616                           	
 13617  1D51                     l11382:	
 13618  1D51  082E               	movf	(___lwmod@divisor),w
 13619  1D52  02B0               	subwf	(___lwmod@dividend),f
 13620  1D53  082F               	movf	(___lwmod@divisor+1),w
 13621  1D54  1C03               	skipc
 13622  1D55  03B1               	decf	(___lwmod@dividend+1),f
 13623  1D56  02B1               	subwf	(___lwmod@dividend+1),f
 13624  1D57  2D58               	goto	l11384
 13625                           	
 13626  1D58                     l7813:	
 13627                           	line	17
 13628                           	
 13629  1D58                     l11384:	
 13630  1D58  3001               	movlw	01h
 13631                           	
 13632  1D59                     u4475:
 13633  1D59  1003               	clrc
 13634  1D5A  0CAF               	rrf	(___lwmod@divisor+1),f
 13635  1D5B  0CAE               	rrf	(___lwmod@divisor),f
 13636  1D5C  3EFF               	addlw	-1
 13637  1D5D  1D03               	skipz
 13638  1D5E  2D59               	goto	u4475
 13639                           	line	18
 13640                           	
 13641  1D5F                     l11386:	
 13642  1D5F  3001               	movlw	low(01h)
 13643  1D60  02B3               	subwf	(___lwmod@counter),f
 13644  1D61  1D03               	btfss	status,2
 13645  1D62  2D64               	goto	u4481
 13646  1D63  2D65               	goto	u4480
 13647  1D64                     u4481:
 13648  1D64  2D47               	goto	l11380
 13649  1D65                     u4480:
 13650  1D65  2D67               	goto	l11388
 13651                           	
 13652  1D66                     l7814:	
 13653  1D66  2D67               	goto	l11388
 13654                           	line	19
 13655                           	
 13656  1D67                     l7808:	
 13657                           	line	20
 13658                           	
 13659  1D67                     l11388:	
 13660  1D67  0831               	movf	(___lwmod@dividend+1),w
 13661  1D68  01AF               	clrf	(?___lwmod+1)
 13662  1D69  07AF               	addwf	(?___lwmod+1)
 13663  1D6A  0830               	movf	(___lwmod@dividend),w
 13664  1D6B  01AE               	clrf	(?___lwmod)
 13665  1D6C  07AE               	addwf	(?___lwmod)
 13666                           
 13667  1D6D  2D6E               	goto	l7815
 13668                           	
 13669  1D6E                     l11390:	
 13670                           	line	21
 13671                           	
 13672  1D6E                     l7815:	
 13673  1D6E  0008               	return
 13674                           	opt stack 0
 13675                           GLOBAL	__end_of___lwmod
 13676  1D6F                     	__end_of___lwmod:
 13677 ;; =============== function ___lwmod ends ============
 13678                           
 13679                           	signat	___lwmod,8314
 13680                           	global	___lwdiv
 13681                           psect	text1146,local,class=CODE,delta=2
 13682                           global __ptext1146
 13683  1DBC                     __ptext1146:
 13684                           
 13685 ;; *************** function ___lwdiv *****************
 13686 ;; Defined at:
 13687 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  divisor         2    6[BANK0 ] unsigned int 
 13690 ;;  dividend        2    8[BANK0 ] unsigned int 
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  quotient        2   11[BANK0 ] unsigned int 
 13693 ;;  counter         1   13[BANK0 ] unsigned char 
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  2    6[BANK0 ] unsigned int 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2, status,0
 13698 ;; Tracked objects:
 13699 ;;		On entry : 0/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13703 ;;      Params:         0       4       0       0       0
 13704 ;;      Locals:         0       3       0       0       0
 13705 ;;      Temps:          0       1       0       0       0
 13706 ;;      Totals:         0       8       0       0       0
 13707 ;;Total ram usage:        8 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:    2
 13710 ;; This function calls:
 13711 ;;		Nothing
 13712 ;; This function is called by:
 13713 ;;		_readAvgDistance
 13714 ;;		_ADCconvert
 13715 ;;		_sprintf
 13716 ;; This function uses a non-reentrant model
 13717 ;;
 13718                           psect	text1146
 13719                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 13720                           	line	5
 13721                           	global	__size_of___lwdiv
 13722  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 13723                           	
 13724  1DBC                     ___lwdiv:	
 13725                           	opt	stack 2
 13726                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13727                           	line	9
 13728                           	
 13729  1DBC                     l11344:	
 13730  1DBC  1283               	bcf	status, 5	;RP0=0, select bank0
 13731  1DBD  1303               	bcf	status, 6	;RP1=0, select bank0
 13732  1DBE  01AB               	clrf	(___lwdiv@quotient)
 13733  1DBF  01AC               	clrf	(___lwdiv@quotient+1)
 13734                           	line	10
 13735                           	
 13736  1DC0                     l11346:	
 13737  1DC0  0827               	movf	(___lwdiv@divisor+1),w
 13738  1DC1  0426               	iorwf	(___lwdiv@divisor),w
 13739  1DC2  1903               	skipnz
 13740  1DC3  2DC5               	goto	u4361
 13741  1DC4  2DC6               	goto	u4360
 13742  1DC5                     u4361:
 13743  1DC5  2E04               	goto	l11366
 13744  1DC6                     u4360:
 13745                           	line	11
 13746                           	
 13747  1DC6                     l11348:	
 13748  1DC6  01AD               	clrf	(___lwdiv@counter)
 13749  1DC7  1403               	bsf	status,0
 13750  1DC8  0DAD               	rlf	(___lwdiv@counter),f
 13751                           	line	12
 13752  1DC9  2DD6               	goto	l11354
 13753                           	
 13754  1DCA                     l7800:	
 13755                           	line	13
 13756                           	
 13757  1DCA                     l11350:	
 13758  1DCA  3001               	movlw	01h
 13759                           	
 13760  1DCB                     u4375:
 13761  1DCB  1003               	clrc
 13762  1DCC  0DA6               	rlf	(___lwdiv@divisor),f
 13763  1DCD  0DA7               	rlf	(___lwdiv@divisor+1),f
 13764  1DCE  3EFF               	addlw	-1
 13765  1DCF  1D03               	skipz
 13766  1DD0  2DCB               	goto	u4375
 13767                           	line	14
 13768                           	
 13769  1DD1                     l11352:	
 13770  1DD1  3001               	movlw	(01h)
 13771  1DD2  00AA               	movwf	(??___lwdiv+0)+0
 13772  1DD3  082A               	movf	(??___lwdiv+0)+0,w
 13773  1DD4  07AD               	addwf	(___lwdiv@counter),f
 13774  1DD5  2DD6               	goto	l11354
 13775                           	line	15
 13776                           	
 13777  1DD6                     l7799:	
 13778                           	line	12
 13779                           	
 13780  1DD6                     l11354:	
 13781  1DD6  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 13782  1DD7  2DD9               	goto	u4381
 13783  1DD8  2DDA               	goto	u4380
 13784  1DD9                     u4381:
 13785  1DD9  2DCA               	goto	l11350
 13786  1DDA                     u4380:
 13787  1DDA  2DDC               	goto	l11356
 13788                           	
 13789  1DDB                     l7801:	
 13790  1DDB  2DDC               	goto	l11356
 13791                           	line	16
 13792                           	
 13793  1DDC                     l7802:	
 13794                           	line	17
 13795                           	
 13796  1DDC                     l11356:	
 13797  1DDC  3001               	movlw	01h
 13798                           	
 13799  1DDD                     u4395:
 13800  1DDD  1003               	clrc
 13801  1DDE  0DAB               	rlf	(___lwdiv@quotient),f
 13802  1DDF  0DAC               	rlf	(___lwdiv@quotient+1),f
 13803  1DE0  3EFF               	addlw	-1
 13804  1DE1  1D03               	skipz
 13805  1DE2  2DDD               	goto	u4395
 13806                           	line	18
 13807  1DE3  0827               	movf	(___lwdiv@divisor+1),w
 13808  1DE4  0229               	subwf	(___lwdiv@dividend+1),w
 13809  1DE5  1D03               	skipz
 13810  1DE6  2DE9               	goto	u4405
 13811  1DE7  0826               	movf	(___lwdiv@divisor),w
 13812  1DE8  0228               	subwf	(___lwdiv@dividend),w
 13813  1DE9                     u4405:
 13814  1DE9  1C03               	skipc
 13815  1DEA  2DEC               	goto	u4401
 13816  1DEB  2DED               	goto	u4400
 13817  1DEC                     u4401:
 13818  1DEC  2DF5               	goto	l11362
 13819  1DED                     u4400:
 13820                           	line	19
 13821                           	
 13822  1DED                     l11358:	
 13823  1DED  0826               	movf	(___lwdiv@divisor),w
 13824  1DEE  02A8               	subwf	(___lwdiv@dividend),f
 13825  1DEF  0827               	movf	(___lwdiv@divisor+1),w
 13826  1DF0  1C03               	skipc
 13827  1DF1  03A9               	decf	(___lwdiv@dividend+1),f
 13828  1DF2  02A9               	subwf	(___lwdiv@dividend+1),f
 13829                           	line	20
 13830                           	
 13831  1DF3                     l11360:	
 13832  1DF3  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 13833  1DF4  2DF5               	goto	l11362
 13834                           	line	21
 13835                           	
 13836  1DF5                     l7803:	
 13837                           	line	22
 13838                           	
 13839  1DF5                     l11362:	
 13840  1DF5  3001               	movlw	01h
 13841                           	
 13842  1DF6                     u4415:
 13843  1DF6  1003               	clrc
 13844  1DF7  0CA7               	rrf	(___lwdiv@divisor+1),f
 13845  1DF8  0CA6               	rrf	(___lwdiv@divisor),f
 13846  1DF9  3EFF               	addlw	-1
 13847  1DFA  1D03               	skipz
 13848  1DFB  2DF6               	goto	u4415
 13849                           	line	23
 13850                           	
 13851  1DFC                     l11364:	
 13852  1DFC  3001               	movlw	low(01h)
 13853  1DFD  02AD               	subwf	(___lwdiv@counter),f
 13854  1DFE  1D03               	btfss	status,2
 13855  1DFF  2E01               	goto	u4421
 13856  1E00  2E02               	goto	u4420
 13857  1E01                     u4421:
 13858  1E01  2DDC               	goto	l11356
 13859  1E02                     u4420:
 13860  1E02  2E04               	goto	l11366
 13861                           	
 13862  1E03                     l7804:	
 13863  1E03  2E04               	goto	l11366
 13864                           	line	24
 13865                           	
 13866  1E04                     l7798:	
 13867                           	line	25
 13868                           	
 13869  1E04                     l11366:	
 13870  1E04  082C               	movf	(___lwdiv@quotient+1),w
 13871  1E05  01A7               	clrf	(?___lwdiv+1)
 13872  1E06  07A7               	addwf	(?___lwdiv+1)
 13873  1E07  082B               	movf	(___lwdiv@quotient),w
 13874  1E08  01A6               	clrf	(?___lwdiv)
 13875  1E09  07A6               	addwf	(?___lwdiv)
 13876                           
 13877  1E0A  2E0B               	goto	l7805
 13878                           	
 13879  1E0B                     l11368:	
 13880                           	line	26
 13881                           	
 13882  1E0B                     l7805:	
 13883  1E0B  0008               	return
 13884                           	opt stack 0
 13885                           GLOBAL	__end_of___lwdiv
 13886  1E0C                     	__end_of___lwdiv:
 13887 ;; =============== function ___lwdiv ends ============
 13888                           
 13889                           	signat	___lwdiv,8314
 13890                           	global	___wmul
 13891                           psect	text1147,local,class=CODE,delta=2
 13892                           global __ptext1147
 13893  1B97                     __ptext1147:
 13894                           
 13895 ;; *************** function ___wmul *****************
 13896 ;; Defined at:
 13897 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13900 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;  product         2    4[BANK0 ] unsigned int 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  2    0[BANK0 ] unsigned int 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13912 ;;      Params:         0       4       0       0       0
 13913 ;;      Locals:         0       2       0       0       0
 13914 ;;      Temps:          0       0       0       0       0
 13915 ;;      Totals:         0       6       0       0       0
 13916 ;;Total ram usage:        6 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    2
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_ADCconvert
 13923 ;;		_abs
 13924 ;;		_sprintf
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           psect	text1147
 13928                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 13929                           	line	3
 13930                           	global	__size_of___wmul
 13931  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 13932                           	
 13933  1B97                     ___wmul:	
 13934                           	opt	stack 2
 13935                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13936                           	line	4
 13937                           	
 13938  1B97                     l11332:	
 13939  1B97  1283               	bcf	status, 5	;RP0=0, select bank0
 13940  1B98  1303               	bcf	status, 6	;RP1=0, select bank0
 13941  1B99  01A4               	clrf	(___wmul@product)
 13942  1B9A  01A5               	clrf	(___wmul@product+1)
 13943  1B9B  2B9C               	goto	l11334
 13944                           	line	6
 13945                           	
 13946  1B9C                     l7792:	
 13947                           	line	7
 13948                           	
 13949  1B9C                     l11334:	
 13950  1B9C  1C20               	btfss	(___wmul@multiplier),(0)&7
 13951  1B9D  2B9F               	goto	u4321
 13952  1B9E  2BA0               	goto	u4320
 13953  1B9F                     u4321:
 13954  1B9F  2BA6               	goto	l7793
 13955  1BA0                     u4320:
 13956                           	line	8
 13957                           	
 13958  1BA0                     l11336:	
 13959  1BA0  0822               	movf	(___wmul@multiplicand),w
 13960  1BA1  07A4               	addwf	(___wmul@product),f
 13961  1BA2  1803               	skipnc
 13962  1BA3  0AA5               	incf	(___wmul@product+1),f
 13963  1BA4  0823               	movf	(___wmul@multiplicand+1),w
 13964  1BA5  07A5               	addwf	(___wmul@product+1),f
 13965                           	
 13966  1BA6                     l7793:	
 13967                           	line	9
 13968  1BA6  3001               	movlw	01h
 13969                           	
 13970  1BA7                     u4335:
 13971  1BA7  1003               	clrc
 13972  1BA8  0DA2               	rlf	(___wmul@multiplicand),f
 13973  1BA9  0DA3               	rlf	(___wmul@multiplicand+1),f
 13974  1BAA  3EFF               	addlw	-1
 13975  1BAB  1D03               	skipz
 13976  1BAC  2BA7               	goto	u4335
 13977                           	line	10
 13978                           	
 13979  1BAD                     l11338:	
 13980  1BAD  3001               	movlw	01h
 13981                           	
 13982  1BAE                     u4345:
 13983  1BAE  1003               	clrc
 13984  1BAF  0CA1               	rrf	(___wmul@multiplier+1),f
 13985  1BB0  0CA0               	rrf	(___wmul@multiplier),f
 13986  1BB1  3EFF               	addlw	-1
 13987  1BB2  1D03               	skipz
 13988  1BB3  2BAE               	goto	u4345
 13989                           	line	11
 13990  1BB4  0821               	movf	((___wmul@multiplier+1)),w
 13991  1BB5  0420               	iorwf	((___wmul@multiplier)),w
 13992  1BB6  1D03               	skipz
 13993  1BB7  2BB9               	goto	u4351
 13994  1BB8  2BBA               	goto	u4350
 13995  1BB9                     u4351:
 13996  1BB9  2B9C               	goto	l11334
 13997  1BBA                     u4350:
 13998  1BBA  2BBB               	goto	l11340
 13999                           	
 14000  1BBB                     l7794:	
 14001                           	line	12
 14002                           	
 14003  1BBB                     l11340:	
 14004  1BBB  0825               	movf	(___wmul@product+1),w
 14005  1BBC  01A1               	clrf	(?___wmul+1)
 14006  1BBD  07A1               	addwf	(?___wmul+1)
 14007  1BBE  0824               	movf	(___wmul@product),w
 14008  1BBF  01A0               	clrf	(?___wmul)
 14009  1BC0  07A0               	addwf	(?___wmul)
 14010                           
 14011  1BC1  2BC2               	goto	l7795
 14012                           	
 14013  1BC2                     l11342:	
 14014                           	line	13
 14015                           	
 14016  1BC2                     l7795:	
 14017  1BC2  0008               	return
 14018                           	opt stack 0
 14019                           GLOBAL	__end_of___wmul
 14020  1BC3                     	__end_of___wmul:
 14021 ;; =============== function ___wmul ends ============
 14022                           
 14023                           	signat	___wmul,8314
 14024                           	global	_isdigit
 14025                           psect	text1148,local,class=CODE,delta=2
 14026                           global __ptext1148
 14027  1A86                     __ptext1148:
 14028                           
 14029 ;; *************** function _isdigit *****************
 14030 ;; Defined at:
 14031 ;;		line 13 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;  c               1    wreg     unsigned char 
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  c               1    1[BANK0 ] unsigned char 
 14036 ;; Return value:  Size  Location     Type
 14037 ;;		None               void
 14038 ;; Registers used:
 14039 ;;		wreg, status,2, status,0
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14045 ;;      Params:         0       0       0       0       0
 14046 ;;      Locals:         0       2       0       0       0
 14047 ;;      Temps:          0       0       0       0       0
 14048 ;;      Totals:         0       2       0       0       0
 14049 ;;Total ram usage:        2 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    2
 14052 ;; This function calls:
 14053 ;;		Nothing
 14054 ;; This function is called by:
 14055 ;;		_sprintf
 14056 ;; This function uses a non-reentrant model
 14057 ;;
 14058                           psect	text1148
 14059                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 14060                           	global	__size_of_isdigit
 14061  0017                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 14062                           	
 14063  1A86                     _isdigit:	
 14064                           	opt	stack 2
 14065                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14066                           ;isdigit@c stored from wreg
 14067  1A86  1283               	bcf	status, 5	;RP0=0, select bank0
 14068  1A87  1303               	bcf	status, 6	;RP1=0, select bank0
 14069  1A88  00A1               	movwf	(isdigit@c)
 14070                           	line	14
 14071                           	
 14072  1A89                     l11320:	
 14073  1A89  01A0               	clrf	(_isdigit$8699)
 14074                           	
 14075  1A8A                     l11322:	
 14076  1A8A  303A               	movlw	(03Ah)
 14077  1A8B  0221               	subwf	(isdigit@c),w
 14078  1A8C  1803               	skipnc
 14079  1A8D  2A8F               	goto	u4301
 14080  1A8E  2A90               	goto	u4300
 14081  1A8F                     u4301:
 14082  1A8F  2A9A               	goto	l11328
 14083  1A90                     u4300:
 14084                           	
 14085  1A90                     l11324:	
 14086  1A90  3030               	movlw	(030h)
 14087  1A91  0221               	subwf	(isdigit@c),w
 14088  1A92  1C03               	skipc
 14089  1A93  2A95               	goto	u4311
 14090  1A94  2A96               	goto	u4310
 14091  1A95                     u4311:
 14092  1A95  2A9A               	goto	l11328
 14093  1A96                     u4310:
 14094                           	
 14095  1A96                     l11326:	
 14096  1A96  01A0               	clrf	(_isdigit$8699)
 14097  1A97  1403               	bsf	status,0
 14098  1A98  0DA0               	rlf	(_isdigit$8699),f
 14099  1A99  2A9A               	goto	l11328
 14100                           	
 14101  1A9A                     l7782:	
 14102                           	
 14103  1A9A                     l11328:	
 14104  1A9A  0C20               	rrf	(_isdigit$8699),w
 14105                           	
 14106  1A9B  2A9C               	goto	l7783
 14107                           	
 14108  1A9C                     l11330:	
 14109                           	line	15
 14110                           	
 14111  1A9C                     l7783:	
 14112  1A9C  0008               	return
 14113                           	opt stack 0
 14114                           GLOBAL	__end_of_isdigit
 14115  1A9D                     	__end_of_isdigit:
 14116 ;; =============== function _isdigit ends ============
 14117                           
 14118                           	signat	_isdigit,4216
 14119                           	global	_ser_isrx
 14120                           psect	text1149,local,class=CODE,delta=2
 14121                           global __ptext1149
 14122  1A9D                     __ptext1149:
 14123                           
 14124 ;; *************** function _ser_isrx *****************
 14125 ;; Defined at:
 14126 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 14127 ;; Parameters:    Size  Location     Type
 14128 ;;		None
 14129 ;; Auto vars:     Size  Location     Type
 14130 ;;		None
 14131 ;; Return value:  Size  Location     Type
 14132 ;;		None               void
 14133 ;; Registers used:
 14134 ;;		wreg, status,2, status,0
 14135 ;; Tracked objects:
 14136 ;;		On entry : 0/0
 14137 ;;		On exit  : 0/0
 14138 ;;		Unchanged: 0/0
 14139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14140 ;;      Params:         0       0       0       0       0
 14141 ;;      Locals:         0       0       0       0       0
 14142 ;;      Temps:          0       0       0       0       0
 14143 ;;      Totals:         0       0       0       0       0
 14144 ;;Total ram usage:        0 bytes
 14145 ;; Hardware stack levels used:    1
 14146 ;; Hardware stack levels required when called:    2
 14147 ;; This function calls:
 14148 ;;		Nothing
 14149 ;; This function is called by:
 14150 ;;		_ser_getch
 14151 ;; This function uses a non-reentrant model
 14152 ;;
 14153                           psect	text1149
 14154                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 14155                           	line	45
 14156                           	global	__size_of_ser_isrx
 14157  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 14158                           	
 14159  1A9D                     _ser_isrx:	
 14160                           	opt	stack 2
 14161                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 14162                           	line	46
 14163                           	
 14164  1A9D                     l11272:	
 14165                           ;ser.c: 46: if(OERR) {
 14166  1A9D  1283               	bcf	status, 5	;RP0=0, select bank0
 14167  1A9E  1303               	bcf	status, 6	;RP1=0, select bank0
 14168  1A9F  1C98               	btfss	(193/8),(193)&7
 14169  1AA0  2AA2               	goto	u4231
 14170  1AA1  2AA3               	goto	u4230
 14171  1AA2                     u4231:
 14172  1AA2  2AA8               	goto	l11280
 14173  1AA3                     u4230:
 14174                           	line	47
 14175                           	
 14176  1AA3                     l11274:	
 14177                           ;ser.c: 47: CREN = 0;
 14178  1AA3  1218               	bcf	(196/8),(196)&7
 14179                           	line	48
 14180                           ;ser.c: 48: CREN = 1;
 14181  1AA4  1618               	bsf	(196/8),(196)&7
 14182                           	line	49
 14183                           	
 14184  1AA5                     l11276:	
 14185                           ;ser.c: 49: return 0;
 14186  1AA5  1003               	clrc
 14187                           	
 14188  1AA6  2AB5               	goto	l7031
 14189                           	
 14190  1AA7                     l11278:	
 14191  1AA7  2AB5               	goto	l7031
 14192                           	line	50
 14193                           	
 14194  1AA8                     l7030:	
 14195                           	line	51
 14196                           	
 14197  1AA8                     l11280:	
 14198                           ;ser.c: 50: }
 14199                           ;ser.c: 51: return (rxiptr!=rxoptr);
 14200  1AA8  1683               	bsf	status, 5	;RP0=1, select bank1
 14201  1AA9  1303               	bcf	status, 6	;RP1=0, select bank1
 14202  1AAA  0850               	movf	(_rxiptr)^080h,w	;volatile
 14203  1AAB  0651               	xorwf	(_rxoptr)^080h,w	;volatile
 14204  1AAC  1D03               	skipz
 14205  1AAD  2AAF               	goto	u4241
 14206  1AAE  2AB0               	goto	u4240
 14207  1AAF                     u4241:
 14208  1AAF  2AB2               	goto	l11284
 14209  1AB0                     u4240:
 14210                           	
 14211  1AB0                     l11282:	
 14212  1AB0  1003               	clrc
 14213                           	
 14214  1AB1  2AB5               	goto	l7031
 14215                           	
 14216  1AB2                     l11034:	
 14217                           	
 14218  1AB2                     l11284:	
 14219  1AB2  1403               	setc
 14220                           	
 14221  1AB3  2AB5               	goto	l7031
 14222                           	
 14223  1AB4                     l11036:	
 14224  1AB4  2AB5               	goto	l7031
 14225                           	
 14226  1AB5                     l11286:	
 14227                           	line	52
 14228                           	
 14229  1AB5                     l7031:	
 14230  1AB5  0008               	return
 14231                           	opt stack 0
 14232                           GLOBAL	__end_of_ser_isrx
 14233  1AB6                     	__end_of_ser_isrx:
 14234 ;; =============== function _ser_isrx ends ============
 14235                           
 14236                           	signat	_ser_isrx,88
 14237                           	global	_spi_transfer
 14238                           psect	text1150,local,class=CODE,delta=2
 14239                           global __ptext1150
 14240  1A32                     __ptext1150:
 14241                           
 14242 ;; *************** function _spi_transfer *****************
 14243 ;; Defined at:
 14244 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;  data            1    wreg     unsigned char 
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;  data            1    2[BANK0 ] unsigned char 
 14249 ;;  temp            1    1[BANK0 ] unsigned char 
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      unsigned char 
 14252 ;; Registers used:
 14253 ;;		wreg
 14254 ;; Tracked objects:
 14255 ;;		On entry : 0/0
 14256 ;;		On exit  : 0/0
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14259 ;;      Params:         0       0       0       0       0
 14260 ;;      Locals:         0       2       0       0       0
 14261 ;;      Temps:          0       1       0       0       0
 14262 ;;      Totals:         0       3       0       0       0
 14263 ;;Total ram usage:        3 bytes
 14264 ;; Hardware stack levels used:    1
 14265 ;; Hardware stack levels required when called:    2
 14266 ;; This function calls:
 14267 ;;		Nothing
 14268 ;; This function is called by:
 14269 ;;		_rotate
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           psect	text1150
 14273                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 14274                           	line	50
 14275                           	global	__size_of_spi_transfer
 14276  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 14277                           	
 14278  1A32                     _spi_transfer:	
 14279                           	opt	stack 3
 14280                           ; Regs used in _spi_transfer: [wreg]
 14281                           ;spi_transfer@data stored from wreg
 14282  1A32  1283               	bcf	status, 5	;RP0=0, select bank0
 14283  1A33  1303               	bcf	status, 6	;RP1=0, select bank0
 14284  1A34  00A2               	movwf	(spi_transfer@data)
 14285                           	line	51
 14286                           	
 14287  1A35                     l11262:	
 14288                           ;steppermotor.c: 51: unsigned char temp = 0;
 14289  1A35  01A1               	clrf	(spi_transfer@temp)
 14290                           	line	53
 14291                           ;steppermotor.c: 53: SSPIF = 0;
 14292  1A36  118C               	bcf	(99/8),(99)&7
 14293                           	line	54
 14294                           	
 14295  1A37                     l11264:	
 14296                           ;steppermotor.c: 54: SSPBUF = data;
 14297  1A37  0822               	movf	(spi_transfer@data),w
 14298  1A38  0093               	movwf	(19)	;volatile
 14299                           	line	56
 14300                           ;steppermotor.c: 56: while (SSPIF == 0);
 14301  1A39  2A3A               	goto	l3837
 14302                           	
 14303  1A3A                     l3838:	
 14304                           	
 14305  1A3A                     l3837:	
 14306  1A3A  1D8C               	btfss	(99/8),(99)&7
 14307  1A3B  2A3D               	goto	u4221
 14308  1A3C  2A3E               	goto	u4220
 14309  1A3D                     u4221:
 14310  1A3D  2A3A               	goto	l3837
 14311  1A3E                     u4220:
 14312  1A3E  2A3F               	goto	l11266
 14313                           	
 14314  1A3F                     l3839:	
 14315                           	line	57
 14316                           	
 14317  1A3F                     l11266:	
 14318                           ;steppermotor.c: 57: temp = SSPBUF;
 14319  1A3F  0813               	movf	(19),w	;volatile
 14320  1A40  00A0               	movwf	(??_spi_transfer+0)+0
 14321  1A41  0820               	movf	(??_spi_transfer+0)+0,w
 14322  1A42  00A1               	movwf	(spi_transfer@temp)
 14323                           	line	58
 14324                           	
 14325  1A43                     l11268:	
 14326                           ;steppermotor.c: 58: SSPIF = 0;
 14327  1A43  118C               	bcf	(99/8),(99)&7
 14328  1A44  2A45               	goto	l3840
 14329                           	line	60
 14330                           	
 14331  1A45                     l11270:	
 14332                           	line	61
 14333                           ;steppermotor.c: 60: return temp;
 14334                           ;	Return value of _spi_transfer is never used
 14335                           	
 14336  1A45                     l3840:	
 14337  1A45  0008               	return
 14338                           	opt stack 0
 14339                           GLOBAL	__end_of_spi_transfer
 14340  1A46                     	__end_of_spi_transfer:
 14341 ;; =============== function _spi_transfer ends ============
 14342                           
 14343                           	signat	_spi_transfer,4217
 14344                           	global	_ser_putch
 14345                           psect	text1151,local,class=CODE,delta=2
 14346                           global __ptext1151
 14347  1C1B                     __ptext1151:
 14348                           
 14349 ;; *************** function _ser_putch *****************
 14350 ;; Defined at:
 14351 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  c               1    wreg     unsigned char 
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  c               1    1[BANK0 ] unsigned char 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;		None               void
 14358 ;; Registers used:
 14359 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14365 ;;      Params:         0       0       0       0       0
 14366 ;;      Locals:         0       1       0       0       0
 14367 ;;      Temps:          0       1       0       0       0
 14368 ;;      Totals:         0       2       0       0       0
 14369 ;;Total ram usage:        2 bytes
 14370 ;; Hardware stack levels used:    1
 14371 ;; Hardware stack levels required when called:    2
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_FindVictim
 14376 ;;		_ChargeMode
 14377 ;;		_robo_init
 14378 ;;		_robot_read
 14379 ;;		_RobotDrive
 14380 ;;		_robotTurn
 14381 ;;		_robotFollow
 14382 ;;		_RobotBattRead
 14383 ;;		_robotLoadSong
 14384 ;;		_ser_puts
 14385 ;;		_ser_puts2
 14386 ;;		_ser_puthex
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           psect	text1151
 14390                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 14391                           	line	70
 14392                           	global	__size_of_ser_putch
 14393  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 14394                           	
 14395  1C1B                     _ser_putch:	
 14396                           	opt	stack 3
 14397                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 14398                           ;ser_putch@c stored from wreg
 14399  1C1B  1283               	bcf	status, 5	;RP0=0, select bank0
 14400  1C1C  1303               	bcf	status, 6	;RP1=0, select bank0
 14401  1C1D  00A1               	movwf	(ser_putch@c)
 14402                           	line	71
 14403                           	
 14404  1C1E                     l11250:	
 14405                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 14406  1C1E  2C20               	goto	l11252
 14407                           	
 14408  1C1F                     l7041:	
 14409                           	line	72
 14410                           ;ser.c: 72: continue;
 14411  1C1F  2C20               	goto	l11252
 14412                           	
 14413  1C20                     l7040:	
 14414                           	line	71
 14415                           	
 14416  1C20                     l11252:	
 14417  1C20  1683               	bsf	status, 5	;RP0=1, select bank1
 14418  1C21  1303               	bcf	status, 6	;RP1=0, select bank1
 14419  1C22  0855               	movf	(_txiptr)^080h,w	;volatile
 14420  1C23  3E01               	addlw	01h
 14421  1C24  390F               	andlw	0Fh
 14422  1C25  0656               	xorwf	(_txoptr)^080h,w	;volatile
 14423  1C26  1903               	skipnz
 14424  1C27  2C29               	goto	u4211
 14425  1C28  2C2A               	goto	u4210
 14426  1C29                     u4211:
 14427  1C29  2C20               	goto	l11252
 14428  1C2A                     u4210:
 14429                           	
 14430  1C2A                     l7042:	
 14431                           	line	73
 14432                           ;ser.c: 73: GIE=0;
 14433  1C2A  138B               	bcf	(95/8),(95)&7
 14434                           	line	74
 14435                           	
 14436  1C2B                     l11254:	
 14437                           ;ser.c: 74: txfifo[txiptr] = c;
 14438  1C2B  1283               	bcf	status, 5	;RP0=0, select bank0
 14439  1C2C  1303               	bcf	status, 6	;RP1=0, select bank0
 14440  1C2D  0821               	movf	(ser_putch@c),w
 14441  1C2E  00A0               	movwf	(??_ser_putch+0)+0
 14442  1C2F  1683               	bsf	status, 5	;RP0=1, select bank1
 14443  1C30  1303               	bcf	status, 6	;RP1=0, select bank1
 14444  1C31  0855               	movf	(_txiptr)^080h,w
 14445  1C32  3EB0               	addlw	_txfifo&0ffh
 14446  1C33  0084               	movwf	fsr0
 14447  1C34  1283               	bcf	status, 5	;RP0=0, select bank0
 14448  1C35  1303               	bcf	status, 6	;RP1=0, select bank0
 14449  1C36  0820               	movf	(??_ser_putch+0)+0,w
 14450  1C37  1783               	bsf	status, 7	;select IRP bank3
 14451  1C38  0080               	movwf	indf
 14452                           	line	75
 14453                           	
 14454  1C39                     l11256:	
 14455                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 14456  1C39  1683               	bsf	status, 5	;RP0=1, select bank1
 14457  1C3A  1303               	bcf	status, 6	;RP1=0, select bank1
 14458  1C3B  0855               	movf	(_txiptr)^080h,w	;volatile
 14459  1C3C  3E01               	addlw	01h
 14460  1C3D  390F               	andlw	0Fh
 14461  1C3E  1283               	bcf	status, 5	;RP0=0, select bank0
 14462  1C3F  1303               	bcf	status, 6	;RP1=0, select bank0
 14463  1C40  00A0               	movwf	(??_ser_putch+0)+0
 14464  1C41  0820               	movf	(??_ser_putch+0)+0,w
 14465  1C42  1683               	bsf	status, 5	;RP0=1, select bank1
 14466  1C43  1303               	bcf	status, 6	;RP1=0, select bank1
 14467  1C44  00D5               	movwf	(_txiptr)^080h	;volatile
 14468                           	line	76
 14469                           	
 14470  1C45                     l11258:	
 14471                           ;ser.c: 76: TXIE=1;
 14472  1C45  160C               	bsf	(1124/8)^080h,(1124)&7
 14473                           	line	77
 14474                           	
 14475  1C46                     l11260:	
 14476                           ;ser.c: 77: GIE=1;
 14477  1C46  178B               	bsf	(95/8),(95)&7
 14478                           	line	78
 14479                           	
 14480  1C47                     l7043:	
 14481  1C47  0008               	return
 14482                           	opt stack 0
 14483                           GLOBAL	__end_of_ser_putch
 14484  1C48                     	__end_of_ser_putch:
 14485 ;; =============== function _ser_putch ends ============
 14486                           
 14487                           	signat	_ser_putch,4216
 14488                           	global	_Menu
 14489                           psect	text1152,local,class=CODE,delta=2
 14490                           global __ptext1152
 14491  10E6                     __ptext1152:
 14492                           
 14493 ;; *************** function _Menu *****************
 14494 ;; Defined at:
 14495 ;;		line 104 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;  BTN_input       1    wreg     unsigned char 
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 14500 ;; Return value:  Size  Location     Type
 14501 ;;                  1    wreg      unsigned char 
 14502 ;; Registers used:
 14503 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14504 ;; Tracked objects:
 14505 ;;		On entry : 0/0
 14506 ;;		On exit  : 0/0
 14507 ;;		Unchanged: 0/0
 14508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14509 ;;      Params:         0       0       0       0       0
 14510 ;;      Locals:         0       1       0       0       0
 14511 ;;      Temps:          0       0       0       0       0
 14512 ;;      Totals:         0       1       0       0       0
 14513 ;;Total ram usage:        1 bytes
 14514 ;; Hardware stack levels used:    1
 14515 ;; Hardware stack levels required when called:    2
 14516 ;; This function calls:
 14517 ;;		Nothing
 14518 ;; This function is called by:
 14519 ;;		_main
 14520 ;; This function uses a non-reentrant model
 14521 ;;
 14522                           psect	text1152
 14523                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 14524                           	line	104
 14525                           	global	__size_of_Menu
 14526  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 14527                           	
 14528  10E6                     _Menu:	
 14529                           	opt	stack 5
 14530                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 14531                           ;Menu@BTN_input stored from wreg
 14532  10E6  1283               	bcf	status, 5	;RP0=0, select bank0
 14533  10E7  1303               	bcf	status, 6	;RP1=0, select bank0
 14534  10E8  00A0               	movwf	(Menu@BTN_input)
 14535                           	line	105
 14536                           	
 14537  10E9                     l11226:	
 14538                           ;HMI.c: 105: switch (BTN_input)
 14539  10E9  2918               	goto	l11244
 14540                           	line	107
 14541                           ;HMI.c: 106: {
 14542                           ;HMI.c: 107: case 1:
 14543                           	
 14544  10EA                     l4657:	
 14545                           	line	109
 14546                           ;HMI.c: 109: break;
 14547  10EA  292A               	goto	l11246
 14548                           	line	110
 14549                           ;HMI.c: 110: case 2:
 14550                           	
 14551  10EB                     l4659:	
 14552                           	line	112
 14553                           ;HMI.c: 112: break;
 14554  10EB  292A               	goto	l11246
 14555                           	line	113
 14556                           ;HMI.c: 113: case 3:
 14557                           	
 14558  10EC                     l4660:	
 14559                           	line	114
 14560                           	
 14561  10EC                     l11228:	
 14562                           ;HMI.c: 114: pos--;
 14563  10EC  30FF               	movlw	low(-1)
 14564  10ED  1683               	bsf	status, 5	;RP0=1, select bank1
 14565  10EE  1303               	bcf	status, 6	;RP1=0, select bank1
 14566  10EF  07B6               	addwf	(_pos)^080h,f
 14567  10F0  1803               	skipnc
 14568  10F1  0AB7               	incf	(_pos+1)^080h,f
 14569  10F2  30FF               	movlw	high(-1)
 14570  10F3  07B7               	addwf	(_pos+1)^080h,f
 14571                           	line	115
 14572                           	
 14573  10F4                     l11230:	
 14574                           ;HMI.c: 115: if (pos < 0)
 14575  10F4  1FB7               	btfss	(_pos+1)^080h,7
 14576  10F5  28F7               	goto	u4191
 14577  10F6  28F8               	goto	u4190
 14578  10F7                     u4191:
 14579  10F7  292A               	goto	l11246
 14580  10F8                     u4190:
 14581                           	line	116
 14582                           	
 14583  10F8                     l11232:	
 14584                           ;HMI.c: 116: pos = 6 - 1;
 14585  10F8  3005               	movlw	low(05h)
 14586  10F9  00B6               	movwf	(_pos)^080h
 14587  10FA  3000               	movlw	high(05h)
 14588  10FB  00B7               	movwf	((_pos)^080h)+1
 14589  10FC  292A               	goto	l11246
 14590                           	
 14591  10FD                     l4661:	
 14592                           	line	118
 14593                           ;HMI.c: 118: break;
 14594  10FD  292A               	goto	l11246
 14595                           	line	119
 14596                           ;HMI.c: 119: case 4:
 14597                           	
 14598  10FE                     l4662:	
 14599                           	line	120
 14600                           	
 14601  10FE                     l11234:	
 14602                           ;HMI.c: 120: pos++;
 14603  10FE  3001               	movlw	low(01h)
 14604  10FF  1683               	bsf	status, 5	;RP0=1, select bank1
 14605  1100  1303               	bcf	status, 6	;RP1=0, select bank1
 14606  1101  07B6               	addwf	(_pos)^080h,f
 14607  1102  1803               	skipnc
 14608  1103  0AB7               	incf	(_pos+1)^080h,f
 14609  1104  3000               	movlw	high(01h)
 14610  1105  07B7               	addwf	(_pos+1)^080h,f
 14611                           	line	121
 14612                           ;HMI.c: 121: if (pos == 6)
 14613  1106  3006               	movlw	06h
 14614  1107  0636               	xorwf	(_pos)^080h,w
 14615  1108  0437               	iorwf	(_pos+1)^080h,w
 14616  1109  1D03               	skipz
 14617  110A  290C               	goto	u4201
 14618  110B  290D               	goto	u4200
 14619  110C                     u4201:
 14620  110C  292A               	goto	l11246
 14621  110D                     u4200:
 14622                           	line	122
 14623                           	
 14624  110D                     l11236:	
 14625                           ;HMI.c: 122: pos = 0;
 14626  110D  01B6               	clrf	(_pos)^080h
 14627  110E  01B7               	clrf	(_pos+1)^080h
 14628  110F  292A               	goto	l11246
 14629                           	
 14630  1110                     l4663:	
 14631                           	line	124
 14632                           ;HMI.c: 124: break;
 14633  1110  292A               	goto	l11246
 14634                           	line	125
 14635                           ;HMI.c: 125: case 5:
 14636                           	
 14637  1111                     l4664:	
 14638                           	line	126
 14639                           	
 14640  1111                     l11238:	
 14641                           ;HMI.c: 126: return pos;
 14642  1111  1683               	bsf	status, 5	;RP0=1, select bank1
 14643  1112  1303               	bcf	status, 6	;RP1=0, select bank1
 14644  1113  0836               	movf	(_pos)^080h,w
 14645  1114  292C               	goto	l4665
 14646                           	
 14647  1115                     l11240:	
 14648  1115  292C               	goto	l4665
 14649                           	line	129
 14650                           ;HMI.c: 129: default:
 14651                           	
 14652  1116                     l4666:	
 14653                           	line	131
 14654                           ;HMI.c: 131: break;
 14655  1116  292A               	goto	l11246
 14656                           	line	132
 14657                           	
 14658  1117                     l11242:	
 14659                           ;HMI.c: 132: }
 14660  1117  292A               	goto	l11246
 14661                           	line	105
 14662                           	
 14663  1118                     l4656:	
 14664                           	
 14665  1118                     l11244:	
 14666  1118  1283               	bcf	status, 5	;RP0=0, select bank0
 14667  1119  0820               	movf	(Menu@BTN_input),w
 14668                           	; Switch size 1, requested type "space"
 14669                           ; Number of cases is 5, Range of values is 1 to 5
 14670                           ; switch strategies available:
 14671                           ; Name         Instructions Cycles
 14672                           ; simple_byte           16     9 (average)
 14673                           ; direct_byte           26    11 (fixed)
 14674                           ; jumptable            263     9 (fixed)
 14675                           ;	Chosen strategy is simple_byte
 14676                           
 14677                           	opt asmopt_off
 14678  111A  3A01               	xorlw	1^0	; case 1
 14679  111B  1903               	skipnz
 14680  111C  292A               	goto	l11246
 14681  111D  3A03               	xorlw	2^1	; case 2
 14682  111E  1903               	skipnz
 14683  111F  292A               	goto	l11246
 14684  1120  3A01               	xorlw	3^2	; case 3
 14685  1121  1903               	skipnz
 14686  1122  28EC               	goto	l11228
 14687  1123  3A07               	xorlw	4^3	; case 4
 14688  1124  1903               	skipnz
 14689  1125  28FE               	goto	l11234
 14690  1126  3A01               	xorlw	5^4	; case 5
 14691  1127  1903               	skipnz
 14692  1128  2911               	goto	l11238
 14693  1129  292A               	goto	l11246
 14694                           	opt asmopt_on
 14695                           
 14696                           	line	132
 14697                           	
 14698  112A                     l4658:	
 14699                           	line	133
 14700                           	
 14701  112A                     l11246:	
 14702                           ;HMI.c: 133: return 255;
 14703  112A  30FF               	movlw	(0FFh)
 14704  112B  292C               	goto	l4665
 14705                           	
 14706  112C                     l11248:	
 14707                           	line	134
 14708                           	
 14709  112C                     l4665:	
 14710  112C  0008               	return
 14711                           	opt stack 0
 14712                           GLOBAL	__end_of_Menu
 14713  112D                     	__end_of_Menu:
 14714 ;; =============== function _Menu ends ============
 14715                           
 14716                           	signat	_Menu,4217
 14717                           	global	_ser_init
 14718                           psect	text1153,local,class=CODE,delta=2
 14719                           global __ptext1153
 14720  1B42                     __ptext1153:
 14721                           
 14722 ;; *************** function _ser_init *****************
 14723 ;; Defined at:
 14724 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;		None
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;		None
 14729 ;; Return value:  Size  Location     Type
 14730 ;;		None               void
 14731 ;; Registers used:
 14732 ;;		wreg, status,2, status,0
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14738 ;;      Params:         0       0       0       0       0
 14739 ;;      Locals:         0       0       0       0       0
 14740 ;;      Temps:          0       1       0       0       0
 14741 ;;      Totals:         0       1       0       0       0
 14742 ;;Total ram usage:        1 bytes
 14743 ;; Hardware stack levels used:    1
 14744 ;; Hardware stack levels required when called:    2
 14745 ;; This function calls:
 14746 ;;		Nothing
 14747 ;; This function is called by:
 14748 ;;		_init
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           psect	text1153
 14752                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 14753                           	line	113
 14754                           	global	__size_of_ser_init
 14755  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 14756                           	
 14757  1B42                     _ser_init:	
 14758                           	opt	stack 4
 14759                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 14760                           	line	114
 14761                           	
 14762  1B42                     l11200:	
 14763                           ;ser.c: 114: TRISC |= 0b10000000;
 14764  1B42  1683               	bsf	status, 5	;RP0=1, select bank1
 14765  1B43  1303               	bcf	status, 6	;RP1=0, select bank1
 14766  1B44  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 14767                           	line	115
 14768                           	
 14769  1B45                     l11202:	
 14770                           ;ser.c: 115: TRISC &= 0b10111111;
 14771  1B45  30BF               	movlw	(0BFh)
 14772  1B46  1283               	bcf	status, 5	;RP0=0, select bank0
 14773  1B47  1303               	bcf	status, 6	;RP1=0, select bank0
 14774  1B48  00A0               	movwf	(??_ser_init+0)+0
 14775  1B49  0820               	movf	(??_ser_init+0)+0,w
 14776  1B4A  1683               	bsf	status, 5	;RP0=1, select bank1
 14777  1B4B  1303               	bcf	status, 6	;RP1=0, select bank1
 14778  1B4C  0587               	andwf	(135)^080h,f	;volatile
 14779                           	line	116
 14780                           	
 14781  1B4D                     l11204:	
 14782                           ;ser.c: 116: BRGH=1;
 14783  1B4D  1518               	bsf	(1218/8)^080h,(1218)&7
 14784                           	line	118
 14785                           	
 14786  1B4E                     l11206:	
 14787                           ;ser.c: 118: SPBRG=20;
 14788  1B4E  3014               	movlw	(014h)
 14789  1B4F  0099               	movwf	(153)^080h	;volatile
 14790                           	line	121
 14791                           	
 14792  1B50                     l11208:	
 14793                           ;ser.c: 121: TX9=0;
 14794  1B50  1318               	bcf	(1222/8)^080h,(1222)&7
 14795                           	line	122
 14796                           	
 14797  1B51                     l11210:	
 14798                           ;ser.c: 122: RX9=0;
 14799  1B51  1283               	bcf	status, 5	;RP0=0, select bank0
 14800  1B52  1303               	bcf	status, 6	;RP1=0, select bank0
 14801  1B53  1318               	bcf	(198/8),(198)&7
 14802                           	line	124
 14803                           	
 14804  1B54                     l11212:	
 14805                           ;ser.c: 124: SYNC=0;
 14806  1B54  1683               	bsf	status, 5	;RP0=1, select bank1
 14807  1B55  1303               	bcf	status, 6	;RP1=0, select bank1
 14808  1B56  1218               	bcf	(1220/8)^080h,(1220)&7
 14809                           	line	125
 14810                           	
 14811  1B57                     l11214:	
 14812                           ;ser.c: 125: SPEN=1;
 14813  1B57  1283               	bcf	status, 5	;RP0=0, select bank0
 14814  1B58  1303               	bcf	status, 6	;RP1=0, select bank0
 14815  1B59  1798               	bsf	(199/8),(199)&7
 14816                           	line	126
 14817                           	
 14818  1B5A                     l11216:	
 14819                           ;ser.c: 126: CREN=1;
 14820  1B5A  1618               	bsf	(196/8),(196)&7
 14821                           	line	127
 14822                           	
 14823  1B5B                     l11218:	
 14824                           ;ser.c: 127: TXIE=0;
 14825  1B5B  1683               	bsf	status, 5	;RP0=1, select bank1
 14826  1B5C  1303               	bcf	status, 6	;RP1=0, select bank1
 14827  1B5D  120C               	bcf	(1124/8)^080h,(1124)&7
 14828                           	line	128
 14829                           	
 14830  1B5E                     l11220:	
 14831                           ;ser.c: 128: RCIE=1;
 14832  1B5E  168C               	bsf	(1125/8)^080h,(1125)&7
 14833                           	line	129
 14834                           	
 14835  1B5F                     l11222:	
 14836                           ;ser.c: 129: TXEN=1;
 14837  1B5F  1698               	bsf	(1221/8)^080h,(1221)&7
 14838                           	line	132
 14839                           	
 14840  1B60                     l11224:	
 14841                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 14842  1B60  3000               	movlw	(0)
 14843  1B61  00D6               	movwf	(_txoptr)^080h	;volatile
 14844  1B62  00D5               	movwf	(_txiptr)^080h	;volatile
 14845  1B63  00D1               	movwf	(_rxoptr)^080h	;volatile
 14846  1B64  1283               	bcf	status, 5	;RP0=0, select bank0
 14847  1B65  1303               	bcf	status, 6	;RP1=0, select bank0
 14848  1B66  00A0               	movwf	(??_ser_init+0)+0
 14849  1B67  0820               	movf	(??_ser_init+0)+0,w
 14850  1B68  1683               	bsf	status, 5	;RP0=1, select bank1
 14851  1B69  1303               	bcf	status, 6	;RP1=0, select bank1
 14852  1B6A  00D0               	movwf	(_rxiptr)^080h	;volatile
 14853                           	line	133
 14854                           	
 14855  1B6B                     l7065:	
 14856  1B6B  0008               	return
 14857                           	opt stack 0
 14858                           GLOBAL	__end_of_ser_init
 14859  1B6C                     	__end_of_ser_init:
 14860 ;; =============== function _ser_init ends ============
 14861                           
 14862                           	signat	_ser_init,88
 14863                           	global	_adc_read
 14864                           psect	text1154,local,class=CODE,delta=2
 14865                           global __ptext1154
 14866  1AF0                     __ptext1154:
 14867                           
 14868 ;; *************** function _adc_read *****************
 14869 ;; Defined at:
 14870 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 14871 ;; Parameters:    Size  Location     Type
 14872 ;;		None
 14873 ;; Auto vars:     Size  Location     Type
 14874 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 14875 ;; Return value:  Size  Location     Type
 14876 ;;                  2    0[BANK0 ] unsigned int 
 14877 ;; Registers used:
 14878 ;;		wreg, status,2, status,0
 14879 ;; Tracked objects:
 14880 ;;		On entry : 0/0
 14881 ;;		On exit  : 0/0
 14882 ;;		Unchanged: 0/0
 14883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14884 ;;      Params:         0       2       0       0       0
 14885 ;;      Locals:         0       2       0       0       0
 14886 ;;      Temps:          0       2       0       0       0
 14887 ;;      Totals:         0       6       0       0       0
 14888 ;;Total ram usage:        6 bytes
 14889 ;; Hardware stack levels used:    1
 14890 ;; Hardware stack levels required when called:    2
 14891 ;; This function calls:
 14892 ;;		Nothing
 14893 ;; This function is called by:
 14894 ;;		_adc_read_channel
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           psect	text1154
 14898                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 14899                           	line	76
 14900                           	global	__size_of_adc_read
 14901  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 14902                           	
 14903  1AF0                     _adc_read:	
 14904                           	opt	stack 0
 14905                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 14906                           	line	79
 14907                           	
 14908  1AF0                     l11042:	
 14909                           ;adc.c: 77: volatile unsigned int adc_value;
 14910                           ;adc.c: 79: ADRESH = 0;
 14911  1AF0  1283               	bcf	status, 5	;RP0=0, select bank0
 14912  1AF1  1303               	bcf	status, 6	;RP1=0, select bank0
 14913  1AF2  019E               	clrf	(30)	;volatile
 14914                           	line	81
 14915                           	
 14916  1AF3                     l11044:	
 14917                           ;adc.c: 81: GO = 1;
 14918  1AF3  151F               	bsf	(250/8),(250)&7
 14919                           	line	82
 14920                           ;adc.c: 82: while(GO) continue;
 14921  1AF4  2AF5               	goto	l703
 14922                           	
 14923  1AF5                     l704:	
 14924                           	
 14925  1AF5                     l703:	
 14926  1AF5  191F               	btfsc	(250/8),(250)&7
 14927  1AF6  2AF8               	goto	u3851
 14928  1AF7  2AF9               	goto	u3850
 14929  1AF8                     u3851:
 14930  1AF8  2AF5               	goto	l703
 14931  1AF9                     u3850:
 14932                           	
 14933  1AF9                     l705:	
 14934                           	line	83
 14935                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 14936  1AF9  0000               nop ;#
 14937                           	line	84
 14938                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 14939  1AFA  0000               nop ;#
 14940                           	line	85
 14941                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 14942  1AFB  0000               nop ;#
 14943                           psect	text1154
 14944                           	line	88
 14945                           	
 14946  1AFC                     l11046:	
 14947                           ;adc.c: 88: adc_value = ADRESH;
 14948  1AFC  1283               	bcf	status, 5	;RP0=0, select bank0
 14949  1AFD  1303               	bcf	status, 6	;RP1=0, select bank0
 14950  1AFE  081E               	movf	(30),w	;volatile
 14951  1AFF  00A2               	movwf	(??_adc_read+0)+0
 14952  1B00  01A3               	clrf	(??_adc_read+0)+0+1
 14953  1B01  0822               	movf	0+(??_adc_read+0)+0,w
 14954  1B02  00A4               	movwf	(adc_read@adc_value)	;volatile
 14955  1B03  0823               	movf	1+(??_adc_read+0)+0,w
 14956  1B04  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 14957                           	line	89
 14958                           ;adc.c: 89: adc_value <<= 1;
 14959  1B05  3001               	movlw	01h
 14960                           	
 14961  1B06                     u3865:
 14962  1B06  1003               	clrc
 14963  1B07  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 14964  1B08  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 14965  1B09  3EFF               	addlw	-1
 14966  1B0A  1D03               	skipz
 14967  1B0B  2B06               	goto	u3865
 14968                           	line	90
 14969                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 14970  1B0C  1683               	bsf	status, 5	;RP0=1, select bank1
 14971  1B0D  1303               	bcf	status, 6	;RP1=0, select bank1
 14972  1B0E  081E               	movf	(158)^080h,w	;volatile
 14973                           	line	93
 14974                           	
 14975  1B0F                     l11048:	
 14976                           ;adc.c: 93: return (adc_value);
 14977  1B0F  1283               	bcf	status, 5	;RP0=0, select bank0
 14978  1B10  1303               	bcf	status, 6	;RP1=0, select bank0
 14979  1B11  0825               	movf	(adc_read@adc_value+1),w	;volatile
 14980  1B12  01A1               	clrf	(?_adc_read+1)
 14981  1B13  07A1               	addwf	(?_adc_read+1)
 14982  1B14  0824               	movf	(adc_read@adc_value),w	;volatile
 14983  1B15  01A0               	clrf	(?_adc_read)
 14984  1B16  07A0               	addwf	(?_adc_read)
 14985                           
 14986  1B17  2B18               	goto	l706
 14987                           	
 14988  1B18                     l11050:	
 14989                           	line	94
 14990                           	
 14991  1B18                     l706:	
 14992  1B18  0008               	return
 14993                           	opt stack 0
 14994                           GLOBAL	__end_of_adc_read
 14995  1B19                     	__end_of_adc_read:
 14996 ;; =============== function _adc_read ends ============
 14997                           
 14998                           	signat	_adc_read,90
 14999                           	global	_isr1
 15000                           psect	text1155,local,class=CODE,delta=2
 15001                           global __ptext1155
 15002  13C2                     __ptext1155:
 15003                           
 15004 ;; *************** function _isr1 *****************
 15005 ;; Defined at:
 15006 ;;		line 110 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 15007 ;; Parameters:    Size  Location     Type
 15008 ;;		None
 15009 ;; Auto vars:     Size  Location     Type
 15010 ;;		None
 15011 ;; Return value:  Size  Location     Type
 15012 ;;		None               void
 15013 ;; Registers used:
 15014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15015 ;; Tracked objects:
 15016 ;;		On entry : 0/0
 15017 ;;		On exit  : 0/0
 15018 ;;		Unchanged: 0/0
 15019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15020 ;;      Params:         0       0       0       0       0
 15021 ;;      Locals:         0       0       0       0       0
 15022 ;;      Temps:          5       0       0       0       0
 15023 ;;      Totals:         5       0       0       0       0
 15024 ;;Total ram usage:        5 bytes
 15025 ;; Hardware stack levels used:    1
 15026 ;; Hardware stack levels required when called:    1
 15027 ;; This function calls:
 15028 ;;		i1___lwmod
 15029 ;;		_ReadButtons
 15030 ;; This function is called by:
 15031 ;;		Interrupt level 1
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           psect	text1155
 15035                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 15036                           	line	110
 15037                           	global	__size_of_isr1
 15038  00AA                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 15039                           	
 15040  13C2                     _isr1:	
 15041                           	opt	stack 0
 15042                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15043                           psect	intentry,class=CODE,delta=2
 15044                           global __pintentry
 15045  0004                     __pintentry:
 15046                           global interrupt_function
 15047  0004                     interrupt_function:
 15048                           	global saved_w
 15049  007E                     	saved_w	set	btemp+0
 15050  0004  00FE               	movwf	saved_w
 15051  0005  0E03               	swapf	status,w
 15052  0006  00F9               	movwf	(??_isr1+1)
 15053  0007  0804               	movf	fsr0,w
 15054  0008  00FA               	movwf	(??_isr1+2)
 15055  0009  080A               	movf	pclath,w
 15056  000A  00FB               	movwf	(??_isr1+3)
 15057  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 15058  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 15059  000D  087F               	movf	btemp+1,w
 15060  000E  00FC               	movwf	(??_isr1+4)
 15061  000F  160A  118A  2BC2   	ljmp	_isr1
 15062                           psect	text1155
 15063                           	line	111
 15064                           	
 15065  13C2                     i1l11078:	
 15066                           ;Main.c: 111: if(TMR0IF)
 15067  13C2  1D0B               	btfss	(90/8),(90)&7
 15068  13C3  2BC5               	goto	u390_21
 15069  13C4  2BC6               	goto	u390_20
 15070  13C5                     u390_21:
 15071  13C5  2C19               	goto	i1l11100
 15072  13C6                     u390_20:
 15073                           	line	113
 15074                           	
 15075  13C6                     i1l11080:	
 15076                           ;Main.c: 112: {
 15077                           ;Main.c: 113: TMR0IF = 0;
 15078  13C6  110B               	bcf	(90/8),(90)&7
 15079                           	line	114
 15080                           	
 15081  13C7                     i1l11082:	
 15082                           ;Main.c: 114: TMR0 = 100;
 15083  13C7  3064               	movlw	(064h)
 15084  13C8  0081               	movwf	(1)	;volatile
 15085                           	line	116
 15086                           ;Main.c: 116: RTC_Counter++;
 15087  13C9  3001               	movlw	low(01h)
 15088  13CA  1683               	bsf	status, 5	;RP0=1, select bank1
 15089  13CB  1303               	bcf	status, 6	;RP1=0, select bank1
 15090  13CC  07AA               	addwf	(_RTC_Counter)^080h,f	;volatile
 15091  13CD  1803               	skipnc
 15092  13CE  0AAB               	incf	(_RTC_Counter+1)^080h,f	;volatile
 15093  13CF  3000               	movlw	high(01h)
 15094  13D0  07AB               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 15095                           	line	119
 15096                           	
 15097  13D1                     i1l11084:	
 15098                           ;Main.c: 119: RTC_FLAG_1MS = 1;
 15099  13D1  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 15100                           	line	120
 15101                           	
 15102  13D2                     i1l11086:	
 15103                           ;Main.c: 120: if(RTC_Counter % 250 == 0)
 15104  13D2  30FA               	movlw	low(0FAh)
 15105  13D3  00F2               	movwf	(?i1___lwmod)
 15106  13D4  3000               	movlw	high(0FAh)
 15107  13D5  00F3               	movwf	((?i1___lwmod))+1
 15108  13D6  082B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 15109  13D7  01F5               	clrf	1+(?i1___lwmod)+02h
 15110  13D8  07F5               	addwf	1+(?i1___lwmod)+02h
 15111  13D9  082A               	movf	(_RTC_Counter)^080h,w	;volatile
 15112  13DA  01F4               	clrf	0+(?i1___lwmod)+02h
 15113  13DB  07F4               	addwf	0+(?i1___lwmod)+02h
 15114                           
 15115  13DC  160A  158A  24E5   	fcall	i1___lwmod
              160A  118A         
 15116  13E1  0873               	movf	((1+(?i1___lwmod))),w
 15117  13E2  0472               	iorwf	((0+(?i1___lwmod))),w
 15118  13E3  1D03               	skipz
 15119  13E4  2BE6               	goto	u391_21
 15120  13E5  2BE7               	goto	u391_20
 15121  13E6                     u391_21:
 15122  13E6  2BE9               	goto	i1l11090
 15123  13E7                     u391_20:
 15124                           	line	122
 15125                           	
 15126  13E7                     i1l11088:	
 15127                           ;Main.c: 121: {
 15128                           ;Main.c: 122: RTC_FLAG_250MS = 1;
 15129  13E7  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 15130  13E8  2BE9               	goto	i1l11090
 15131                           	line	123
 15132                           	
 15133  13E9                     i1l2279:	
 15134                           	line	124
 15135                           	
 15136  13E9                     i1l11090:	
 15137                           ;Main.c: 123: }
 15138                           ;Main.c: 124: if(RTC_Counter % 500 == 0)
 15139  13E9  30F4               	movlw	low(01F4h)
 15140  13EA  00F2               	movwf	(?i1___lwmod)
 15141  13EB  3001               	movlw	high(01F4h)
 15142  13EC  00F3               	movwf	((?i1___lwmod))+1
 15143  13ED  1683               	bsf	status, 5	;RP0=1, select bank1
 15144  13EE  1303               	bcf	status, 6	;RP1=0, select bank1
 15145  13EF  082B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 15146  13F0  01F5               	clrf	1+(?i1___lwmod)+02h
 15147  13F1  07F5               	addwf	1+(?i1___lwmod)+02h
 15148  13F2  082A               	movf	(_RTC_Counter)^080h,w	;volatile
 15149  13F3  01F4               	clrf	0+(?i1___lwmod)+02h
 15150  13F4  07F4               	addwf	0+(?i1___lwmod)+02h
 15151                           
 15152  13F5  160A  158A  24E5   	fcall	i1___lwmod
              160A  118A         
 15153  13FA  0873               	movf	((1+(?i1___lwmod))),w
 15154  13FB  0472               	iorwf	((0+(?i1___lwmod))),w
 15155  13FC  1D03               	skipz
 15156  13FD  2BFF               	goto	u392_21
 15157  13FE  2C00               	goto	u392_20
 15158  13FF                     u392_21:
 15159  13FF  2C06               	goto	i1l11096
 15160  1400                     u392_20:
 15161                           	line	126
 15162                           	
 15163  1400                     i1l11092:	
 15164                           ;Main.c: 125: {
 15165                           ;Main.c: 126: RTC_FLAG_500MS = 1;
 15166  1400  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 15167                           	line	127
 15168                           	
 15169  1401                     i1l11094:	
 15170                           ;Main.c: 127: RB0 ^= 0x01;
 15171  1401  1283               	bcf	status, 5	;RP0=0, select bank0
 15172  1402  1303               	bcf	status, 6	;RP1=0, select bank0
 15173  1403  3001               	movlw	1<<((48)&7)
 15174  1404  0686               	xorwf	((48)/8),f
 15175  1405  2C06               	goto	i1l11096
 15176                           	line	128
 15177                           	
 15178  1406                     i1l2280:	
 15179                           	line	129
 15180                           	
 15181  1406                     i1l11096:	
 15182                           ;Main.c: 128: }
 15183                           ;Main.c: 129: if (buttonPressed == 0)
 15184  1406  1683               	bsf	status, 5	;RP0=1, select bank1
 15185  1407  1303               	bcf	status, 6	;RP1=0, select bank1
 15186  1408  08CB               	movf	(_buttonPressed)^080h,f
 15187  1409  1D03               	skipz	;volatile
 15188  140A  2C0C               	goto	u393_21
 15189  140B  2C0D               	goto	u393_20
 15190  140C                     u393_21:
 15191  140C  2C19               	goto	i1l11100
 15192  140D                     u393_20:
 15193                           	line	131
 15194                           	
 15195  140D                     i1l11098:	
 15196                           ;Main.c: 130: {
 15197                           ;Main.c: 131: buttonPressed = ReadButtons();
 15198  140D  160A  118A  2529   	fcall	_ReadButtons
              160A  118A         
 15199  1412  00F8               	movwf	(??_isr1+0)+0
 15200  1413  0878               	movf	(??_isr1+0)+0,w
 15201  1414  1683               	bsf	status, 5	;RP0=1, select bank1
 15202  1415  1303               	bcf	status, 6	;RP1=0, select bank1
 15203  1416  00CB               	movwf	(_buttonPressed)^080h	;volatile
 15204  1417  2C19               	goto	i1l11100
 15205                           	line	132
 15206                           	
 15207  1418                     i1l2281:	
 15208  1418  2C19               	goto	i1l11100
 15209                           	line	133
 15210                           	
 15211  1419                     i1l2278:	
 15212                           	line	134
 15213                           	
 15214  1419                     i1l11100:	
 15215                           ;Main.c: 132: }
 15216                           ;Main.c: 133: }
 15217                           ;Main.c: 134: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 15218  1419  1283               	bcf	status, 5	;RP0=0, select bank0
 15219  141A  1E8C               	btfss	(101/8),(101)&7
 15220  141B  2C1D               	goto	u394_21
 15221  141C  2C1E               	goto	u394_20
 15222  141D                     u394_21:
 15223  141D  2C3A               	goto	i1l11110
 15224  141E                     u394_20:
 15225                           	
 15226  141E                     i1l11102:	
 15227  141E  081A               	movf	(26),w	;volatile
 15228  141F  00F8               	movwf	(??_isr1+0)+0
 15229  1420  1683               	bsf	status, 5	;RP0=1, select bank1
 15230  1421  1303               	bcf	status, 6	;RP1=0, select bank1
 15231  1422  0850               	movf	(_rxiptr)^080h,w
 15232  1423  3EA0               	addlw	_rxfifo&0ffh
 15233  1424  0084               	movwf	fsr0
 15234  1425  0878               	movf	(??_isr1+0)+0,w
 15235  1426  1783               	bsf	status, 7	;select IRP bank3
 15236  1427  0080               	movwf	indf
 15237                           	
 15238  1428                     i1l11104:	
 15239  1428  0850               	movf	(_rxiptr)^080h,w	;volatile
 15240  1429  3E01               	addlw	01h
 15241  142A  390F               	andlw	0Fh
 15242  142B  00F8               	movwf	(??_isr1+0)+0
 15243  142C  0878               	movf	(??_isr1+0)+0,w
 15244  142D  00D2               	movwf	(_ser_tmp)^080h
 15245                           	
 15246  142E                     i1l11106:	
 15247  142E  0852               	movf	(_ser_tmp)^080h,w
 15248  142F  0651               	xorwf	(_rxoptr)^080h,w	;volatile
 15249  1430  1903               	skipnz
 15250  1431  2C33               	goto	u395_21
 15251  1432  2C34               	goto	u395_20
 15252  1433                     u395_21:
 15253  1433  2C3A               	goto	i1l11110
 15254  1434                     u395_20:
 15255                           	
 15256  1434                     i1l11108:	
 15257  1434  0852               	movf	(_ser_tmp)^080h,w
 15258  1435  00F8               	movwf	(??_isr1+0)+0
 15259  1436  0878               	movf	(??_isr1+0)+0,w
 15260  1437  00D0               	movwf	(_rxiptr)^080h	;volatile
 15261  1438  2C3A               	goto	i1l11110
 15262                           	
 15263  1439                     i1l2283:	
 15264  1439  2C3A               	goto	i1l11110
 15265                           	
 15266  143A                     i1l2282:	
 15267                           	
 15268  143A                     i1l11110:	
 15269  143A  1283               	bcf	status, 5	;RP0=0, select bank0
 15270  143B  1E0C               	btfss	(100/8),(100)&7
 15271  143C  2C3E               	goto	u396_21
 15272  143D  2C3F               	goto	u396_20
 15273  143E                     u396_21:
 15274  143E  2C60               	goto	i1l2286
 15275  143F                     u396_20:
 15276                           	
 15277  143F                     i1l11112:	
 15278  143F  1683               	bsf	status, 5	;RP0=1, select bank1
 15279  1440  1303               	bcf	status, 6	;RP1=0, select bank1
 15280  1441  1E0C               	btfss	(1124/8)^080h,(1124)&7
 15281  1442  2C44               	goto	u397_21
 15282  1443  2C45               	goto	u397_20
 15283  1444                     u397_21:
 15284  1444  2C60               	goto	i1l2286
 15285  1445                     u397_20:
 15286                           	
 15287  1445                     i1l11114:	
 15288  1445  0856               	movf	(_txoptr)^080h,w
 15289  1446  3EB0               	addlw	_txfifo&0ffh
 15290  1447  0084               	movwf	fsr0
 15291  1448  1783               	bsf	status, 7	;select IRP bank3
 15292  1449  0800               	movf	indf,w
 15293  144A  1283               	bcf	status, 5	;RP0=0, select bank0
 15294  144B  1303               	bcf	status, 6	;RP1=0, select bank0
 15295  144C  0099               	movwf	(25)	;volatile
 15296                           	
 15297  144D                     i1l11116:	
 15298  144D  3001               	movlw	(01h)
 15299  144E  00F8               	movwf	(??_isr1+0)+0
 15300  144F  0878               	movf	(??_isr1+0)+0,w
 15301  1450  1683               	bsf	status, 5	;RP0=1, select bank1
 15302  1451  1303               	bcf	status, 6	;RP1=0, select bank1
 15303  1452  07D6               	addwf	(_txoptr)^080h,f	;volatile
 15304                           	
 15305  1453                     i1l11118:	
 15306  1453  300F               	movlw	(0Fh)
 15307  1454  00F8               	movwf	(??_isr1+0)+0
 15308  1455  0878               	movf	(??_isr1+0)+0,w
 15309  1456  05D6               	andwf	(_txoptr)^080h,f	;volatile
 15310                           	
 15311  1457                     i1l11120:	
 15312  1457  0856               	movf	(_txoptr)^080h,w	;volatile
 15313  1458  0655               	xorwf	(_txiptr)^080h,w	;volatile
 15314  1459  1D03               	skipz
 15315  145A  2C5C               	goto	u398_21
 15316  145B  2C5D               	goto	u398_20
 15317  145C                     u398_21:
 15318  145C  2C60               	goto	i1l2286
 15319  145D                     u398_20:
 15320                           	
 15321  145D                     i1l11122:	
 15322  145D  120C               	bcf	(1124/8)^080h,(1124)&7
 15323  145E  2C60               	goto	i1l2286
 15324                           	
 15325  145F                     i1l2285:	
 15326  145F  2C60               	goto	i1l2286
 15327                           	
 15328  1460                     i1l2284:	
 15329                           	line	135
 15330                           	
 15331  1460                     i1l2286:	
 15332  1460  087C               	movf	(??_isr1+4),w
 15333  1461  1283               	bcf	status, 5	;RP0=0, select bank0
 15334  1462  00FF               	movwf	btemp+1
 15335  1463  087B               	movf	(??_isr1+3),w
 15336  1464  008A               	movwf	pclath
 15337  1465  087A               	movf	(??_isr1+2),w
 15338  1466  0084               	movwf	fsr0
 15339  1467  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 15340  1468  0083               	movwf	status
 15341  1469  0EFE               	swapf	saved_w,f
 15342  146A  0E7E               	swapf	saved_w,w
 15343  146B  0009               	retfie
 15344                           	opt stack 0
 15345                           GLOBAL	__end_of_isr1
 15346  146C                     	__end_of_isr1:
 15347 ;; =============== function _isr1 ends ============
 15348                           
 15349                           	signat	_isr1,88
 15350                           	global	i1___lwmod
 15351                           psect	text1156,local,class=CODE,delta=2
 15352                           global __ptext1156
 15353  1CE5                     __ptext1156:
 15354                           
 15355 ;; *************** function i1___lwmod *****************
 15356 ;; Defined at:
 15357 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;  __lwmod         2    0[COMMON] unsigned int 
 15360 ;;  __lwmod         2    2[COMMON] unsigned int 
 15361 ;; Auto vars:     Size  Location     Type
 15362 ;;  __lwmod         1    5[COMMON] unsigned char 
 15363 ;; Return value:  Size  Location     Type
 15364 ;;                  2    0[COMMON] unsigned int 
 15365 ;; Registers used:
 15366 ;;		wreg, status,2, status,0
 15367 ;; Tracked objects:
 15368 ;;		On entry : 0/0
 15369 ;;		On exit  : 0/0
 15370 ;;		Unchanged: 0/0
 15371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15372 ;;      Params:         4       0       0       0       0
 15373 ;;      Locals:         1       0       0       0       0
 15374 ;;      Temps:          1       0       0       0       0
 15375 ;;      Totals:         6       0       0       0       0
 15376 ;;Total ram usage:        6 bytes
 15377 ;; Hardware stack levels used:    1
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_isr1
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           psect	text1156
 15385                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 15386                           	line	5
 15387                           	global	__size_ofi1___lwmod
 15388  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 15389                           	
 15390  1CE5                     i1___lwmod:	
 15391                           	opt	stack 0
 15392                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 15393                           	line	8
 15394                           	
 15395  1CE5                     i1l11466:	
 15396  1CE5  0873               	movf	(i1___lwmod@divisor+1),w
 15397  1CE6  0472               	iorwf	(i1___lwmod@divisor),w
 15398  1CE7  1903               	skipnz
 15399  1CE8  2CEA               	goto	u468_21
 15400  1CE9  2CEB               	goto	u468_20
 15401  1CEA                     u468_21:
 15402  1CEA  2D21               	goto	i1l11484
 15403  1CEB                     u468_20:
 15404                           	line	9
 15405                           	
 15406  1CEB                     i1l11468:	
 15407  1CEB  01F7               	clrf	(i1___lwmod@counter)
 15408  1CEC  1403               	bsf	status,0
 15409  1CED  0DF7               	rlf	(i1___lwmod@counter),f
 15410                           	line	10
 15411  1CEE  2CFB               	goto	i1l11474
 15412                           	
 15413  1CEF                     i1l7810:	
 15414                           	line	11
 15415                           	
 15416  1CEF                     i1l11470:	
 15417  1CEF  3001               	movlw	01h
 15418                           	
 15419  1CF0                     u469_25:
 15420  1CF0  1003               	clrc
 15421  1CF1  0DF2               	rlf	(i1___lwmod@divisor),f
 15422  1CF2  0DF3               	rlf	(i1___lwmod@divisor+1),f
 15423  1CF3  3EFF               	addlw	-1
 15424  1CF4  1D03               	skipz
 15425  1CF5  2CF0               	goto	u469_25
 15426                           	line	12
 15427                           	
 15428  1CF6                     i1l11472:	
 15429  1CF6  3001               	movlw	(01h)
 15430  1CF7  00F6               	movwf	(??i1___lwmod+0)+0
 15431  1CF8  0876               	movf	(??i1___lwmod+0)+0,w
 15432  1CF9  07F7               	addwf	(i1___lwmod@counter),f
 15433  1CFA  2CFB               	goto	i1l11474
 15434                           	line	13
 15435                           	
 15436  1CFB                     i1l7809:	
 15437                           	line	10
 15438                           	
 15439  1CFB                     i1l11474:	
 15440  1CFB  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 15441  1CFC  2CFE               	goto	u470_21
 15442  1CFD  2CFF               	goto	u470_20
 15443  1CFE                     u470_21:
 15444  1CFE  2CEF               	goto	i1l11470
 15445  1CFF                     u470_20:
 15446  1CFF  2D01               	goto	i1l11476
 15447                           	
 15448  1D00                     i1l7811:	
 15449  1D00  2D01               	goto	i1l11476
 15450                           	line	14
 15451                           	
 15452  1D01                     i1l7812:	
 15453                           	line	15
 15454                           	
 15455  1D01                     i1l11476:	
 15456  1D01  0873               	movf	(i1___lwmod@divisor+1),w
 15457  1D02  0275               	subwf	(i1___lwmod@dividend+1),w
 15458  1D03  1D03               	skipz
 15459  1D04  2D07               	goto	u471_25
 15460  1D05  0872               	movf	(i1___lwmod@divisor),w
 15461  1D06  0274               	subwf	(i1___lwmod@dividend),w
 15462  1D07                     u471_25:
 15463  1D07  1C03               	skipc
 15464  1D08  2D0A               	goto	u471_21
 15465  1D09  2D0B               	goto	u471_20
 15466  1D0A                     u471_21:
 15467  1D0A  2D12               	goto	i1l11480
 15468  1D0B                     u471_20:
 15469                           	line	16
 15470                           	
 15471  1D0B                     i1l11478:	
 15472  1D0B  0872               	movf	(i1___lwmod@divisor),w
 15473  1D0C  02F4               	subwf	(i1___lwmod@dividend),f
 15474  1D0D  0873               	movf	(i1___lwmod@divisor+1),w
 15475  1D0E  1C03               	skipc
 15476  1D0F  03F5               	decf	(i1___lwmod@dividend+1),f
 15477  1D10  02F5               	subwf	(i1___lwmod@dividend+1),f
 15478  1D11  2D12               	goto	i1l11480
 15479                           	
 15480  1D12                     i1l7813:	
 15481                           	line	17
 15482                           	
 15483  1D12                     i1l11480:	
 15484  1D12  3001               	movlw	01h
 15485                           	
 15486  1D13                     u472_25:
 15487  1D13  1003               	clrc
 15488  1D14  0CF3               	rrf	(i1___lwmod@divisor+1),f
 15489  1D15  0CF2               	rrf	(i1___lwmod@divisor),f
 15490  1D16  3EFF               	addlw	-1
 15491  1D17  1D03               	skipz
 15492  1D18  2D13               	goto	u472_25
 15493                           	line	18
 15494                           	
 15495  1D19                     i1l11482:	
 15496  1D19  3001               	movlw	low(01h)
 15497  1D1A  02F7               	subwf	(i1___lwmod@counter),f
 15498  1D1B  1D03               	btfss	status,2
 15499  1D1C  2D1E               	goto	u473_21
 15500  1D1D  2D1F               	goto	u473_20
 15501  1D1E                     u473_21:
 15502  1D1E  2D01               	goto	i1l11476
 15503  1D1F                     u473_20:
 15504  1D1F  2D21               	goto	i1l11484
 15505                           	
 15506  1D20                     i1l7814:	
 15507  1D20  2D21               	goto	i1l11484
 15508                           	line	19
 15509                           	
 15510  1D21                     i1l7808:	
 15511                           	line	20
 15512                           	
 15513  1D21                     i1l11484:	
 15514  1D21  0875               	movf	(i1___lwmod@dividend+1),w
 15515  1D22  01F3               	clrf	(?i1___lwmod+1)
 15516  1D23  07F3               	addwf	(?i1___lwmod+1)
 15517  1D24  0874               	movf	(i1___lwmod@dividend),w
 15518  1D25  01F2               	clrf	(?i1___lwmod)
 15519  1D26  07F2               	addwf	(?i1___lwmod)
 15520                           
 15521  1D27  2D28               	goto	i1l7815
 15522                           	
 15523  1D28                     i1l11486:	
 15524                           	line	21
 15525                           	
 15526  1D28                     i1l7815:	
 15527  1D28  0008               	return
 15528                           	opt stack 0
 15529                           GLOBAL	__end_ofi1___lwmod
 15530  1D29                     	__end_ofi1___lwmod:
 15531 ;; =============== function i1___lwmod ends ============
 15532                           
 15533                           	signat	i1___lwmod,90
 15534                           	global	_ReadButtons
 15535                           psect	text1157,local,class=CODE,delta=2
 15536                           global __ptext1157
 15537  1529                     __ptext1157:
 15538                           
 15539 ;; *************** function _ReadButtons *****************
 15540 ;; Defined at:
 15541 ;;		line 62 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;		None
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;		None
 15546 ;; Return value:  Size  Location     Type
 15547 ;;                  1    wreg      unsigned char 
 15548 ;; Registers used:
 15549 ;;		wreg, status,2, status,0
 15550 ;; Tracked objects:
 15551 ;;		On entry : 0/0
 15552 ;;		On exit  : 0/0
 15553 ;;		Unchanged: 0/0
 15554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15555 ;;      Params:         0       0       0       0       0
 15556 ;;      Locals:         0       0       0       0       0
 15557 ;;      Temps:          1       0       0       0       0
 15558 ;;      Totals:         1       0       0       0       0
 15559 ;;Total ram usage:        1 bytes
 15560 ;; Hardware stack levels used:    1
 15561 ;; This function calls:
 15562 ;;		Nothing
 15563 ;; This function is called by:
 15564 ;;		_isr1
 15565 ;; This function uses a non-reentrant model
 15566 ;;
 15567                           psect	text1157
 15568                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 15569                           	line	62
 15570                           	global	__size_of_ReadButtons
 15571  00C1                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 15572                           	
 15573  1529                     _ReadButtons:	
 15574                           	opt	stack 0
 15575                           ; Regs used in _ReadButtons: [wreg+status,2+status,0]
 15576                           	line	64
 15577                           	
 15578  1529                     i1l11124:	
 15579                           ;HMI.c: 64: if(!RB2) { UpDebounceCount++; if(UpDebounceCount >= 10 & UpReleased) { UpPre
                                 ssed = 1; UpReleased = 0; } } else { UpDebounceCount = 0; UpReleased = 1; } if(!RB3) { D
                                 ownDebounceCount++; if(DownDebounceCount >= 10 & DownReleased) { DownPressed = 1; Down
 15580  1529  1283               	bcf	status, 5	;RP0=0, select bank0
 15581  152A  1303               	bcf	status, 6	;RP1=0, select bank0
 15582  152B  1906               	btfsc	(50/8),(50)&7
 15583  152C  2D2E               	goto	u399_21
 15584  152D  2D2F               	goto	u399_20
 15585  152E                     u399_21:
 15586  152E  2D43               	goto	i1l4633
 15587  152F                     u399_20:
 15588                           	
 15589  152F                     i1l11126:	
 15590  152F  3001               	movlw	(01h)
 15591  1530  00F2               	movwf	(??_ReadButtons+0)+0
 15592  1531  0872               	movf	(??_ReadButtons+0)+0,w
 15593  1532  1683               	bsf	status, 5	;RP0=1, select bank1
 15594  1533  1303               	bcf	status, 6	;RP1=0, select bank1
 15595  1534  07C8               	addwf	(_UpDebounceCount)^080h,f	;volatile
 15596                           	
 15597  1535                     i1l11128:	
 15598  1535  300A               	movlw	(0Ah)
 15599  1536  0248               	subwf	(_UpDebounceCount)^080h,w	;volatile
 15600  1537  1C03               	skipc
 15601  1538  2D3A               	goto	u400_21
 15602  1539  2D3B               	goto	u400_20
 15603  153A                     u400_21:
 15604  153A  2D47               	goto	i1l4635
 15605  153B                     u400_20:
 15606                           	
 15607  153B                     i1l11130:	
 15608  153B  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 15609  153C  2D3E               	goto	u401_21
 15610  153D  2D3F               	goto	u401_20
 15611  153E                     u401_21:
 15612  153E  2D47               	goto	i1l4635
 15613  153F                     u401_20:
 15614                           	
 15615  153F                     i1l11132:	
 15616  153F  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 15617  1540  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 15618  1541  2D47               	goto	i1l4635
 15619                           	
 15620  1542                     i1l4634:	
 15621  1542  2D47               	goto	i1l4635
 15622                           	
 15623  1543                     i1l4633:	
 15624  1543  1683               	bsf	status, 5	;RP0=1, select bank1
 15625  1544  1303               	bcf	status, 6	;RP1=0, select bank1
 15626  1545  01C8               	clrf	(_UpDebounceCount)^080h	;volatile
 15627  1546  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 15628                           	
 15629  1547                     i1l4635:	
 15630  1547  1283               	bcf	status, 5	;RP0=0, select bank0
 15631  1548  1303               	bcf	status, 6	;RP1=0, select bank0
 15632  1549  1986               	btfsc	(51/8),(51)&7
 15633  154A  2D4C               	goto	u402_21
 15634  154B  2D4D               	goto	u402_20
 15635  154C                     u402_21:
 15636  154C  2D61               	goto	i1l4636
 15637  154D                     u402_20:
 15638                           	
 15639  154D                     i1l11134:	
 15640  154D  3001               	movlw	(01h)
 15641  154E  00F2               	movwf	(??_ReadButtons+0)+0
 15642  154F  0872               	movf	(??_ReadButtons+0)+0,w
 15643  1550  1683               	bsf	status, 5	;RP0=1, select bank1
 15644  1551  1303               	bcf	status, 6	;RP1=0, select bank1
 15645  1552  07C2               	addwf	(_DownDebounceCount)^080h,f	;volatile
 15646                           	
 15647  1553                     i1l11136:	
 15648  1553  300A               	movlw	(0Ah)
 15649  1554  0242               	subwf	(_DownDebounceCount)^080h,w	;volatile
 15650  1555  1C03               	skipc
 15651  1556  2D58               	goto	u403_21
 15652  1557  2D59               	goto	u403_20
 15653  1558                     u403_21:
 15654  1558  2D65               	goto	i1l4638
 15655  1559                     u403_20:
 15656                           	
 15657  1559                     i1l11138:	
 15658  1559  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 15659  155A  2D5C               	goto	u404_21
 15660  155B  2D5D               	goto	u404_20
 15661  155C                     u404_21:
 15662  155C  2D65               	goto	i1l4638
 15663  155D                     u404_20:
 15664                           	
 15665  155D                     i1l11140:	
 15666  155D  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 15667  155E  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 15668  155F  2D65               	goto	i1l4638
 15669                           	
 15670  1560                     i1l4637:	
 15671  1560  2D65               	goto	i1l4638
 15672                           	
 15673  1561                     i1l4636:	
 15674  1561  1683               	bsf	status, 5	;RP0=1, select bank1
 15675  1562  1303               	bcf	status, 6	;RP1=0, select bank1
 15676  1563  01C2               	clrf	(_DownDebounceCount)^080h	;volatile
 15677  1564  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 15678                           	
 15679  1565                     i1l4638:	
 15680  1565  1283               	bcf	status, 5	;RP0=0, select bank0
 15681  1566  1303               	bcf	status, 6	;RP1=0, select bank0
 15682  1567  1A06               	btfsc	(52/8),(52)&7
 15683  1568  2D6A               	goto	u405_21
 15684  1569  2D6B               	goto	u405_20
 15685  156A                     u405_21:
 15686  156A  2D7F               	goto	i1l4639
 15687  156B                     u405_20:
 15688                           	
 15689  156B                     i1l11142:	
 15690  156B  3001               	movlw	(01h)
 15691  156C  00F2               	movwf	(??_ReadButtons+0)+0
 15692  156D  0872               	movf	(??_ReadButtons+0)+0,w
 15693  156E  1683               	bsf	status, 5	;RP0=1, select bank1
 15694  156F  1303               	bcf	status, 6	;RP1=0, select bank1
 15695  1570  07C4               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 15696                           	
 15697  1571                     i1l11144:	
 15698  1571  300A               	movlw	(0Ah)
 15699  1572  0244               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 15700  1573  1C03               	skipc
 15701  1574  2D76               	goto	u406_21
 15702  1575  2D77               	goto	u406_20
 15703  1576                     u406_21:
 15704  1576  2D83               	goto	i1l4641
 15705  1577                     u406_20:
 15706                           	
 15707  1577                     i1l11146:	
 15708  1577  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 15709  1578  2D7A               	goto	u407_21
 15710  1579  2D7B               	goto	u407_20
 15711  157A                     u407_21:
 15712  157A  2D83               	goto	i1l4641
 15713  157B                     u407_20:
 15714                           	
 15715  157B                     i1l11148:	
 15716  157B  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 15717  157C  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 15718  157D  2D83               	goto	i1l4641
 15719                           	
 15720  157E                     i1l4640:	
 15721  157E  2D83               	goto	i1l4641
 15722                           	
 15723  157F                     i1l4639:	
 15724  157F  1683               	bsf	status, 5	;RP0=1, select bank1
 15725  1580  1303               	bcf	status, 6	;RP1=0, select bank1
 15726  1581  01C4               	clrf	(_LeftDebounceCount)^080h	;volatile
 15727  1582  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 15728                           	
 15729  1583                     i1l4641:	
 15730  1583  1283               	bcf	status, 5	;RP0=0, select bank0
 15731  1584  1303               	bcf	status, 6	;RP1=0, select bank0
 15732  1585  1A86               	btfsc	(53/8),(53)&7
 15733  1586  2D88               	goto	u408_21
 15734  1587  2D89               	goto	u408_20
 15735  1588                     u408_21:
 15736  1588  2D9D               	goto	i1l4642
 15737  1589                     u408_20:
 15738                           	
 15739  1589                     i1l11150:	
 15740  1589  3001               	movlw	(01h)
 15741  158A  00F2               	movwf	(??_ReadButtons+0)+0
 15742  158B  0872               	movf	(??_ReadButtons+0)+0,w
 15743  158C  1683               	bsf	status, 5	;RP0=1, select bank1
 15744  158D  1303               	bcf	status, 6	;RP1=0, select bank1
 15745  158E  07C6               	addwf	(_RightDebounceCount)^080h,f	;volatile
 15746                           	
 15747  158F                     i1l11152:	
 15748  158F  300A               	movlw	(0Ah)
 15749  1590  0246               	subwf	(_RightDebounceCount)^080h,w	;volatile
 15750  1591  1C03               	skipc
 15751  1592  2D94               	goto	u409_21
 15752  1593  2D95               	goto	u409_20
 15753  1594                     u409_21:
 15754  1594  2DA1               	goto	i1l4644
 15755  1595                     u409_20:
 15756                           	
 15757  1595                     i1l11154:	
 15758  1595  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 15759  1596  2D98               	goto	u410_21
 15760  1597  2D99               	goto	u410_20
 15761  1598                     u410_21:
 15762  1598  2DA1               	goto	i1l4644
 15763  1599                     u410_20:
 15764                           	
 15765  1599                     i1l11156:	
 15766  1599  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 15767  159A  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 15768  159B  2DA1               	goto	i1l4644
 15769                           	
 15770  159C                     i1l4643:	
 15771  159C  2DA1               	goto	i1l4644
 15772                           	
 15773  159D                     i1l4642:	
 15774  159D  1683               	bsf	status, 5	;RP0=1, select bank1
 15775  159E  1303               	bcf	status, 6	;RP1=0, select bank1
 15776  159F  01C6               	clrf	(_RightDebounceCount)^080h	;volatile
 15777  15A0  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 15778                           	
 15779  15A1                     i1l4644:	
 15780  15A1  1283               	bcf	status, 5	;RP0=0, select bank0
 15781  15A2  1303               	bcf	status, 6	;RP1=0, select bank0
 15782  15A3  1B06               	btfsc	(54/8),(54)&7
 15783  15A4  2DA6               	goto	u411_21
 15784  15A5  2DA7               	goto	u411_20
 15785  15A6                     u411_21:
 15786  15A6  2DBB               	goto	i1l4645
 15787  15A7                     u411_20:
 15788                           	
 15789  15A7                     i1l11158:	
 15790  15A7  3001               	movlw	(01h)
 15791  15A8  00F2               	movwf	(??_ReadButtons+0)+0
 15792  15A9  0872               	movf	(??_ReadButtons+0)+0,w
 15793  15AA  1683               	bsf	status, 5	;RP0=1, select bank1
 15794  15AB  1303               	bcf	status, 6	;RP1=0, select bank1
 15795  15AC  07BF               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 15796                           	
 15797  15AD                     i1l11160:	
 15798  15AD  300A               	movlw	(0Ah)
 15799  15AE  023F               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 15800  15AF  1C03               	skipc
 15801  15B0  2DB2               	goto	u412_21
 15802  15B1  2DB3               	goto	u412_20
 15803  15B2                     u412_21:
 15804  15B2  2DBF               	goto	i1l4647
 15805  15B3                     u412_20:
 15806                           	
 15807  15B3                     i1l11162:	
 15808  15B3  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 15809  15B4  2DB6               	goto	u413_21
 15810  15B5  2DB7               	goto	u413_20
 15811  15B6                     u413_21:
 15812  15B6  2DBF               	goto	i1l4647
 15813  15B7                     u413_20:
 15814                           	
 15815  15B7                     i1l11164:	
 15816  15B7  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 15817  15B8  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 15818  15B9  2DBF               	goto	i1l4647
 15819                           	
 15820  15BA                     i1l4646:	
 15821  15BA  2DBF               	goto	i1l4647
 15822                           	
 15823  15BB                     i1l4645:	
 15824  15BB  1683               	bsf	status, 5	;RP0=1, select bank1
 15825  15BC  1303               	bcf	status, 6	;RP1=0, select bank1
 15826  15BD  01BF               	clrf	(_CenterDebounceCount)^080h	;volatile
 15827  15BE  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 15828                           	
 15829  15BF                     i1l4647:	
 15830                           	line	66
 15831                           ;HMI.c: 66: if(UpPressed)
 15832  15BF  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 15833  15C0  2DC2               	goto	u414_21
 15834  15C1  2DC3               	goto	u414_20
 15835  15C2                     u414_21:
 15836  15C2  2DC7               	goto	i1l4648
 15837  15C3                     u414_20:
 15838                           	line	68
 15839                           	
 15840  15C3                     i1l11166:	
 15841                           ;HMI.c: 67: {
 15842                           ;HMI.c: 68: UpPressed = 0;
 15843  15C3  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 15844                           	line	69
 15845                           	
 15846  15C4                     i1l11168:	
 15847                           ;HMI.c: 69: return 1;
 15848  15C4  3001               	movlw	(01h)
 15849  15C5  2DE9               	goto	i1l4649
 15850                           	
 15851  15C6                     i1l11170:	
 15852  15C6  2DE9               	goto	i1l4649
 15853                           	line	71
 15854                           	
 15855  15C7                     i1l4648:	
 15856                           	line	73
 15857                           ;HMI.c: 71: }
 15858                           ;HMI.c: 73: if(DownPressed)
 15859  15C7  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 15860  15C8  2DCA               	goto	u415_21
 15861  15C9  2DCB               	goto	u415_20
 15862  15CA                     u415_21:
 15863  15CA  2DCF               	goto	i1l4650
 15864  15CB                     u415_20:
 15865                           	line	75
 15866                           	
 15867  15CB                     i1l11172:	
 15868                           ;HMI.c: 74: {
 15869                           ;HMI.c: 75: DownPressed = 0;
 15870  15CB  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 15871                           	line	76
 15872                           	
 15873  15CC                     i1l11174:	
 15874                           ;HMI.c: 76: return 2;
 15875  15CC  3002               	movlw	(02h)
 15876  15CD  2DE9               	goto	i1l4649
 15877                           	
 15878  15CE                     i1l11176:	
 15879  15CE  2DE9               	goto	i1l4649
 15880                           	line	78
 15881                           	
 15882  15CF                     i1l4650:	
 15883                           	line	79
 15884                           ;HMI.c: 78: }
 15885                           ;HMI.c: 79: if(LeftPressed)
 15886  15CF  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 15887  15D0  2DD2               	goto	u416_21
 15888  15D1  2DD3               	goto	u416_20
 15889  15D2                     u416_21:
 15890  15D2  2DD7               	goto	i1l4651
 15891  15D3                     u416_20:
 15892                           	line	81
 15893                           	
 15894  15D3                     i1l11178:	
 15895                           ;HMI.c: 80: {
 15896                           ;HMI.c: 81: LeftPressed = 0;
 15897  15D3  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 15898                           	line	82
 15899                           	
 15900  15D4                     i1l11180:	
 15901                           ;HMI.c: 82: return 3;
 15902  15D4  3003               	movlw	(03h)
 15903  15D5  2DE9               	goto	i1l4649
 15904                           	
 15905  15D6                     i1l11182:	
 15906  15D6  2DE9               	goto	i1l4649
 15907                           	line	84
 15908                           	
 15909  15D7                     i1l4651:	
 15910                           	line	85
 15911                           ;HMI.c: 84: }
 15912                           ;HMI.c: 85: if(RightPressed)
 15913  15D7  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 15914  15D8  2DDA               	goto	u417_21
 15915  15D9  2DDB               	goto	u417_20
 15916  15DA                     u417_21:
 15917  15DA  2DDF               	goto	i1l4652
 15918  15DB                     u417_20:
 15919                           	line	87
 15920                           	
 15921  15DB                     i1l11184:	
 15922                           ;HMI.c: 86: {
 15923                           ;HMI.c: 87: RightPressed = 0;
 15924  15DB  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 15925                           	line	88
 15926                           	
 15927  15DC                     i1l11186:	
 15928                           ;HMI.c: 88: return 4;
 15929  15DC  3004               	movlw	(04h)
 15930  15DD  2DE9               	goto	i1l4649
 15931                           	
 15932  15DE                     i1l11188:	
 15933  15DE  2DE9               	goto	i1l4649
 15934                           	line	90
 15935                           	
 15936  15DF                     i1l4652:	
 15937                           	line	92
 15938                           ;HMI.c: 90: }
 15939                           ;HMI.c: 92: if(CenterPressed)
 15940  15DF  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 15941  15E0  2DE2               	goto	u418_21
 15942  15E1  2DE3               	goto	u418_20
 15943  15E2                     u418_21:
 15944  15E2  2DE7               	goto	i1l11196
 15945  15E3                     u418_20:
 15946                           	line	94
 15947                           	
 15948  15E3                     i1l11190:	
 15949                           ;HMI.c: 93: {
 15950                           ;HMI.c: 94: CenterPressed = 0;
 15951  15E3  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 15952                           	line	95
 15953                           	
 15954  15E4                     i1l11192:	
 15955                           ;HMI.c: 95: return 5;
 15956  15E4  3005               	movlw	(05h)
 15957  15E5  2DE9               	goto	i1l4649
 15958                           	
 15959  15E6                     i1l11194:	
 15960  15E6  2DE9               	goto	i1l4649
 15961                           	line	97
 15962                           	
 15963  15E7                     i1l4653:	
 15964                           	line	98
 15965                           	
 15966  15E7                     i1l11196:	
 15967                           ;HMI.c: 97: }
 15968                           ;HMI.c: 98: return 0;
 15969  15E7  3000               	movlw	(0)
 15970  15E8  2DE9               	goto	i1l4649
 15971                           	
 15972  15E9                     i1l11198:	
 15973                           	line	99
 15974                           	
 15975  15E9                     i1l4649:	
 15976  15E9  0008               	return
 15977                           	opt stack 0
 15978                           GLOBAL	__end_of_ReadButtons
 15979  15EA                     	__end_of_ReadButtons:
 15980 ;; =============== function _ReadButtons ends ============
 15981                           
 15982                           	signat	_ReadButtons,89
 15983                           psect	text1158,local,class=CODE,delta=2
 15984                           global __ptext1158
 15985  0000                     __ptext1158:
 15986                           	global	btemp
 15987  007E                     	btemp set 07Eh
 15988                           
 15989                           	DABS	1,126,2	;btemp
 15990                           	global	wtemp0
 15991  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri May 22 16:34:47 2015

   RobotDrive@radiuslowByte 0030   __end_of_lcd_write_control 1A5A             ??_UpdateDisplay 0047  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 0026                  _IRdistance 00A8  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 1A6F  
                       l703 1AF5                         l704 1AF5                         l705 1AF9  
                       l706 1B18                         l690 07C8                         l691 07F1  
                       l692 07CC                         l693 07D0                         l694 07D4  
                       l695 07D8                         l696 07DC                         l689 07E0  
                       l697 07FE                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _abs 1C77                         _pos 00B6  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
          ??_robotMoveSpeed 0061                  _BattCharge 00A0             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l1402 1A1E                        l1410 1C1A  
                      l1411 1C1A                        l2300 14D2                        l1405 19FE  
                      l2301 14DB                        l2310 1AEF                        l2302 14FA  
                      l2303 14FE                        l1408 1C09                        l3120 1252  
                      l2320 06B7                        l2304 1504                        l1409 1BF0  
                      l3121 1294                        l2321 07B9                        l2313 06AB  
                      l2305 1525                        l3130 0DA9                        l2330 077D  
                      l2322 06D6                        l2314 067F                        l2306 1526  
                      l3131 0C70                        l2331 07C3                        l2323 06DF  
                      l2315 06B5                        l2307 1526                        l3132 0DA8  
                      l3140 0DAA                        l3124 1A85                        l2340 09DC  
                      l2332 07C3                        l2324 06E8                        l2316 068F  
                      l3133 0CBD                        l1429 1B96                        l2341 0A2C  
                      l2317 07BA                        l2325 06F1                        l3134 0DA7  
                      l3118 1230                        l2350 0B87                        l2342 0A35  
                      l2326 06F3                        l2318 06B6                        l3135 0D0A  
                      l3127 0BD6                        l3119 1266                        l2351 0B87  
                      l2335 0B7E                        l2343 0A36                        l2319 079D  
                      l2327 06F4                        l3128 0DAA                        l3136 0DA6  
                      l2360 1FC0                        l2344 0A3F                        l2336 09BC  
                      l2328 072A                        l3137 0D57                        l3129 0C23  
                      l2361 1FD2                        l2337 0B61                        l2345 0AB8  
                      l2329 074B                        l3138 0DA5                        l2362 1FE2  
                      l2354 1FB0                        l2370 1D8E                        l2346 0AD8  
                      l2338 09BD                        l3139 0DA4                        l2363 1FFF  
                      l2355 1FBB                        l2371 1DA6                        l2339 0B7D  
                      l2347 0AE1                        l2356 1FEA                        l2364 1FE8  
                      l2380 1DBA                        l2372 1D8F                        l2348 0B0F  
                      l2292 1484                        l2365 1FFE                        l2357 1FBC  
                      l2381 1DBB                        l2373 1DB9                        l2349 0B41  
                      l2293 14AB                        l2366 1FFF                        l2358 1FFD  
                      l2374 1D91                        l2294 14C0                        l1399 1A59  
                      l2359 1FBE                        l2375 1D93                        l2295 1506  
                      l2376 1D95                        l2296 14C1                        l2289 1C76  
                      l2377 1D97                        l2369 1D7E                        l2297 151C  
                      l2378 1DBB                        l2298 14C7                        l2379 1DA3  
                      l2299 14C9                        l7100 0991                        l6220 17FE  
                      l6300 030D                        l7101 0951                        l6221 17FA  
                      l6301 0329                        l7030 1AA8                        l6214 1ACE  
                      l7102 099C                        l6230 115B                        l6222 17FD  
                      l6302 0347                        l6310 161D                        l7031 1AB5  
                      l7103 09B2                        l6231 11A0                        l6223 17FC  
                      l6303 0400                        l6311 162A                        l7040 1C20  
                      l3840 1A45                        l8000 1F38                        l7104 09BA  
                      l6232 1180                        l6224 17FF                        l6320 1344  
                      l6240 0E1A                        l6312 1639                        l7041 1C1F  
                      l8001 1F42                        l6233 119F                        l6217 1780  
                      l6321 13B6                        l6241 0E4C                        l6313 16DA  
                      l7042 1C2A                        l8010 1F8F                        l8002 1F7E  
                      l3850 1F27                        l7034 1BC5                        l6234 11A0  
                      l6218 17FF                        l6322 13C1                        l6250 0F05  
                      l6242 0F21                        l6306 1680                        l7043 1C47  
                      l8003 1F58                        l6331 1E60                        l3843 1ED1  
                      l6227 1CE4                        l7035 1BC4                        l6219 17AC  
                      l6251 0F0D                        l6243 0E82                        l6307 1600  
                      l4660 10EC                        l8004 1F4C                        l3844 1ED8  
                      l7036 1BCE                        l6316 1381                        l6252 0FE9  
                      l6244 0F21                        l6308 1610                        l4661 10FD  
                      l3837 1A3A                        l8005 1F5D                        l3845 1F0C  
                      l7037 1BEE                        l6325 131D                        l6317 1332  
                      l6253 0F20                        l6245 0F0F                        l6237 0DC8  
                      l6309 16B5                        l4662 10FE                        l3838 1A3A  
                      l8006 1F5E                        l3846 1EDF                        l6318 1348  
                      l6254 0F42                        l6238 0DEA                        l6262 1EB3  
                      l4663 1110                        l3839 1A3F                        l8007 1F6F  
                      l3847 1EF1                        l4671 066D                        l6271 0049  
                      l6255 0F5E                        l6247 0EB0                        l6239 0E02  
                      l6263 1E62                        l4656 1118                        l4664 1111  
                      l8008 1F7D                        l3848 1EF9                        l7080 0837  
                      l6328 1CAB                        l4680 05D4                        l4672 041A  
                      l6280 00E3                        l6272 007C                        l6256 0F7A  
                      l6248 0ED3                        l6264 1EC0                        l7065 1B6B  
                      l4665 112C                        l4657 10EA                        l8009 1F88  
                      l3849 1F16                        l7081 0875                        l4681 057C  
                      l4673 0481                        l6281 0105                        l6273 00E4  
                      l6257 0F98                        l6249 0EF3                        l6265 1E7A  
                      l4658 112A                        l4666 1116                        l7090 08BA  
                      l7082 087C                        l4682 0588                        l4674 0494  
                      l6290 021E                        l6282 0121                        l6274 00AA  
                      l6258 0FE8                        l6266 1E8A                        l4659 10EB  
                      l7091 08E2                        l7083 0877                        l4675 067D  
                      l4683 0594                        l6291 0235                        l6283 013D  
                      l6275 00E4                        l6259 0FFF                        l6267 1EA2  
                      l7084 09B3                        l7076 099D                        l7092 08D7  
                      l4684 05A0                        l4676 04DC                        l6292 024C  
                      l6284 015B                        l6276 00D3                        l6268 1EC0  
                      l7093 08F4                        l7085 0878                        l7077 080D  
                      l4685 05AC                        l4677 0527                        l6293 0263  
                      l6285 01D8                        l7094 0915                        l7086 0879  
                      l7078 081F                        l4686 05E6                        l4678 05B9  
                      l6286 02A9                        l6294 027A                        l6278 00D1  
                      l7095 091A                        l7087 0893                        l7079 0876  
                      l4687 066B                        l4679 0570                        l6295 0291  
                      l6287 01DE                        l6279 01D9                        l7096 093A  
                      l7088 087A                        l4688 067D                        l6296 03B5  
                      l6288 02C2                        l7097 0921                        l7089 08AF  
                      l6297 02D0                        l6289 0207                        l7098 0939  
                      l6298 02F1                        l7099 094C                        l6299 03EA  
                      l7800 1DCA                        l7801 1DDB                        l7802 1DDC  
                      l7810 1D35                        l7803 1DF5                        l7811 1D46  
                      l7804 1E03                        l7812 1D47                        l7805 1E0B  
                      l7813 1D58                        l7814 1D66                        l7815 1D6E  
                      l7808 1D67                        l7809 1D41                        l7940 1204  
                      l7932 11B1                        l7941 120F                        l7933 11BF  
                      l7782 1A9A                        l7942 1216                        l7934 1205  
                      l7783 1A9C                        l7935 11D7                        l7792 1B9C  
                      l7936 11CB                        l7793 1BA6                        l7937 11DC  
                      l7794 1BBB                        l7938 11DD                        l7795 1BC2  
                      l7939 11F6                        l7798 1E04                        _CHS0 00FB  
                      l7799 1DD6                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 1083                        STR_2 107A                        STR_3 1095  
                      STR_4 109E                        STR_5 108C                        STR_6 1071  
                      STR_7 10C7                        STR_8 10CB                        STR_9 10B3  
                      _BRGH 04C2                        _CREN 00C4                        u4200 110D  
                      u5000 0907                        u4201 110C                        u5001 0906  
                      u4210 1C2A                        u5010 0920                        u4211 1C29  
                      u5011 091F                        u4220 1A3E                        u4300 1A90  
                      u5020 0938                        u5100 1C19                        u4221 1A3D  
                      u4301 1A8F                        u5021 0937                        u5005 0903  
                      u5101 1C18                        u4230 1AA3                        u4310 1A96  
                      u5030 0940                        u5110 175D                        u4231 1AA2  
                      u4311 1A95                        u5031 093F                        u5111 175C  
                      u4240 1AB0                        u4320 1BA0                        u4400 1DED  
                      u5040 099B                        u5120 1787                        u5200 1D82  
                      u4241 1AAF                        u4321 1B9F                        u4401 1DEC  
                      u5041 099A                        u5121 1786                        u5201 1D81  
                      u5050 09B1                        u5130 17B3                        u5210 133F  
                      u5051 09B0                        u5131 17B2                        u5211 133E  
                      u4420 1E02                        u4500 11B5                        u5060 1BCE  
                      u5140 122E                        u5220 1343                        u5300 00F0  
                      u4421 1E01                        u4405 1DE9                        u4501 11B4  
                      u5061 1BCD                        u5141 122D                        u4190 10F8  
                      u4350 1BBA                        u4430 1D31                        u4510 11C7  
                      u5070 113C                        u5150 1246                        u5230 13B5  
                      u5310 0109                        u4191 10F7                        u4351 1BB9  
                      u4335 1BA7                        u4415 1DF6                        u4431 1D30  
                      u4511 11C6                        u5071 113B                        u5151 1245  
                      u5231 13B4                        u4360 1DC6                        u4600 1F3C  
                      u5080 1161                        u5160 1265                        u5320 0125  
                      u5240 005A                        u5400 0DF9                        u4345 1BAE  
                      u4361 1DC5                        u4601 1F3B                        u5081 1160  
                      u5161 1264                        u5145 122A                        u5241 0059  
                      u5401 0DF8                        u4450 1D45                        u4530 11DB  
                      u4610 1F48                        u5170 040B                        u5330 0143  
                      u5250 006C                        u5410 0E11                        u4451 1D44  
                      u4531 11DA                        u4611 1F47                        u5075 1138  
                      u5235 13B1                        u5331 0142                        u5251 006B  
                      u5411 0E10                        _PEIE 005E                        u4380 1DDA  
                      u4460 1D51                        u5180 046E                        u5340 02DC  
                      u5260 0088                        u5500 0F2D                        u5420 0E2B  
                      u4381 1DD9                        u4461 1D50                        u4445 1D36  
                      u4525 11CC                        u5165 1261                        u5181 046D  
                      u5261 0087                        u5245 0056                        u5421 0E2A  
                      u5405 0DF5                        u4550 11EE                        u4630 1F5C  
                      u5190 1FB4                        u5350 02F5                        u5270 009A  
                      u5510 0F46                        u5430 0E3C                        u4375 1DCB  
                      u4551 11ED                        u4631 1F5B                        u5095 1C8C  
                      u5191 1FB3                        u5271 0099                        u5255 0068  
                      u5431 0E3B                        u5415 0E0D                        u4480 1D65  
                      u4640 1F68                        u4800 0BE9                        u5360 0311  
                      u5280 00BE                        u5520 0F62                        u5440 0E58  
                      u5600 0B86                        u4481 1D64                        u4465 1D4D  
                      u4545 11DE                        u4641 1F67                        u4625 1F4D  
                      u4801 0BE8                        u5185 046A                        u5281 00BD  
                      u5265 0084                        u5441 0E57                        u5425 0E27  
                      u5601 0B85                        u3850 1AF9                        u4570 1203  
                      u4490 11A8                        u4810 0C2D                        u5370 032F  
                      u5290 00D0                        u5530 0F80                        u5450 0E72  
                      u5610 0709                        u3851 1AF8                        u4395 1DDD  
                      u4475 1D59                        u4571 1202                        u4555 11EA  
                      u4491 11A7                        u4811 0C2C                        u5371 032E  
                      u5291 00CF                        u5275 0096                        u5531 0F7F  
                      u5451 0E71                        u5435 0E38                        u5611 0708  
                      _RCIE 0465                        u4580 1209                        u4660 1F7C  
                      u4740 1ECA                        u4900 0D6A                        u4820 0C36  
                      u5380 03E9                        u5460 0E9E                        u5540 160C  
                      u5620 07C2                        _RCIF 0065                        u4565 11F7  
                      u4661 1F7B                        u4645 1F64                        u4741 1EC9  
                      u4901 0D69                        u4821 0C35                        u5381 03E8  
                      u5285 00BA                        u5461 0E9D                        u5445 0E54  
                      u5621 07C1                        u4670 1F82                        u4590 1F2F  
                      u4750 1EE8                        u4830 0C7A                        u4910 0813  
                      u5470 0EAF                        u5390 0DDD                        u5550 1614  
                      u5630 1488                        u4655 1F70                        u4591 1F2E  
                      u4831 0C79                        u4911 0812                        u5295 00CC  
                      u5471 0EAE                        u5455 0E6E                        u5391 0DDC  
                      u5631 1487                        u4760 1F16                        u4840 0C83  
                      u4920 0832                        u5480 0EB5                        u5560 1621  
                      u5640 14B1                        u3865 1B06                        u4761 1F15  
                      u4841 0C82                        u4921 0831                        u5385 03E5  
                      u5481 0EB4                        u5465 0E9A                        u4850 0CC7  
                      u4770 0B93                        u4930 0874                        u5490 0EFE  
                      u5570 1630                        u5650 14F4                        u4851 0CC6  
                      u4771 0B92                        u4931 0873                        u5707 12D8  
                      u5491 0EFD                        u5475 0EAB                        u5395 0DD9  
                      u5571 162F                        u4860 0CD0                        u4780 0B9C  
                      u4940 08A5                        u5580 16B4                        u4765 1F12  
                      u5717 1EFF                        u4861 0CCF                        u4781 0B9B  
                      u4941 08A4                        u5581 16B3                        u4870 0D14  
                      u4790 0BE0                        u4950 08B8                        u5590 09E4  
                      u5727 1A1A                        u4871 0D13                        u4791 0BDF  
                      u4951 08B7                        u5591 09E3                        u4880 0D1D  
                      u4960 08D5                        u5737 1A54                        u4881 0D1C  
                      u4961 08D4                        u5585 16B0                        u4890 0D61  
                      u4970 08E1                        _OERR 00C1                        u5747 1A6D  
                      u4891 0D60                        u4971 08E0                        u5667 09FB  
                      u4980 08E8                        u5757 07F3                        u4981 08E7  
                      u4965 08D1                        u5677 0A50                        u4990 08EE  
                      u4991 08ED                        u5687 1ADC                        u5697 12AB  
                      _TMR0 0001                  _ChargeMode 1D6F                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 10E6      __end_of_lcd_write_data 1A1F                        abs@v 0026  
                      _isr1 13C2                        _main 146C                        _init 1C48  
                      btemp 007E              _CenterReleased 0381                        start 0012  
      robotFollow@followDir 0061               ??_ReadButtons 0072            ??_robotTurnSpeed 0061  
                     ??_abs 0028       readAvgDistance@tempIR 0034                       ?_Menu 0072  
                     l11200 1B42                       l12000 1DA5                       l11050 1B18  
                     l11042 1AF0                       l11210 1B51                       l11202 1B45  
                     l11034 1AB2                       l12002 1DA6                       l12010 1338  
                     l11044 1AF3                       l11220 1B5E                       l11212 1B54  
                     l11204 1B4D                       l11036 1AB4                       l12020 135C  
                     l12012 133F                       l12004 131E                       l12100 0196  
                     l11046 1AFC                       l11222 1B5F                       l11214 1B57  
                     l11206 1B4E                       l11230 10F4                       l12022 1369  
                     l12030 13B6                       l12014 1344                       l12006 1326  
                     l12110 0200                       l12102 019F                       l11048 1B0F  
                     l11224 1B60                       l11216 1B5A                       l11208 1B50  
                     l11240 1115                       l11232 10F8                       l11320 1A89  
                     l11400 11BA                       l12024 1375                       l12016 1348  
                     l12008 1332                       l12120 0235                       l12112 0207  
                     l12104 01D2                       l12040 003B                       l12032 0015  
                     l12200 0DB5                       l11218 1B5B                       l11242 1117  
                     l11234 10FE                       l11226 10E9                       l11250 1C1E  
                     l11330 1A9C                       l11322 1A8A                       l11410 11D2  
                     l11402 11BF                       l12026 137B                       l12018 1351  
                     l12130 0273                       l12122 0245                       l12114 0217  
                     l12106 01D9                       l12050 006C                       l12042 0040  
                     l12034 001D                       l12210 0DF9                       l12202 0DC4  
                     l11236 110D                       l11228 10EC                       l11244 1118  
                     l11260 1C46                       l11252 1C20                       l11324 1A90  
                     l11340 1BBB                       l11332 1B97                       l11420 11F6  
                     l11412 11D7                       l11404 11C1                       l11500 07F5  
                     l12028 1381                       l12140 02A8                       l12132 027A  
                     l12124 024C                       l12116 021E                       l12108 01DE  
                     l12060 00BE                       l12052 007C                       l12044 0049  
                     l12036 002C                       l12220 0E2B                       l12212 0E02  
                     l12204 0DC8                       l12300 15EA                       l11238 1111  
                     l11246 112A                       l11254 1C2B                       l11270 1A45  
                     l11262 1A35                       l11326 1A96                       l11342 1BC2  
                     l11334 1B9C                       l11350 1DCA                       l11430 1216  
                     l11422 11FD                       l11414 11DD                       l11406 11C7  
                     l11502 07FE                       l11510 1A65                       l12150 02DC  
                     l12134 028A                       l12126 025C                       l12118 022E  
                     l12142 02A9                       l12070 00FF                       l12062 00D2  
                     l12054 0088                       l12046 004E                       l12038 002F  
                     l12230 0E82                       l12222 0E3C                       l12214 0E11  
                     l12206 0DDD                       l12310 1610                       l12302 15EE  
                     l11248 112C                       l11256 1C39                       l11264 1A37  
                     l11280 1AA8                       l11272 1A9D                       l11328 1A9A  
                     l11336 1BA0                       l11360 1DF3                       l11352 1DD1  
                     l11344 1DBC                       l11416 11EE                       l11408 11CB  
                     l11424 1205                       l11440 1F42                       l11432 1F28  
                     l11512 1A69                       l11504 1A5A                       l11520 1A4F  
                     l11600 0C70                       l12160 030D                       l12152 02EB  
                     l12136 0291                       l12128 0263                       l12144 02C2  
                     l12080 0125                       l12072 0105                       l12064 00D3  
                     l12056 009A                       l12048 005A                       l12240 0EC6  
                     l12232 0E9E                       l12224 0E4C                       l12216 0E1A  
                     l12208 0DEA                       l12320 1630                       l12312 1614  
                     l12304 1600                       l12400 0A97                       l11258 1C45  
                     l11266 1A3F                       l11282 1AB0                       l11274 1AA3  
                     l11338 1BAD                       l11362 1DF5                       l11354 1DD6  
                     l11346 1DC0                       l11370 1D29                       l11426 1209  
                     l11418 11F4                       l11450 1F5E                       l11442 1F48  
                     l11434 1F2F                       l11506 1A5D                       l11514 1A49  
                     l11522 1A0F                       l11530 1AB6                       l11610 0CD0  
                     l11602 0C7A                       l12170 033E                       l12162 0311  
                     l12154 02F1                       l12146 02D0                       l12138 02A1  
                     l12090 015B                       l12082 0134                       l12074 0109  
                     l12066 00EA                       l12058 00AA                       l12250 0EFE  
                     l12242 0ED3                       l12234 0EB0                       l12226 0E58  
                     l12218 0E1F                       l12330 1666                       l12322 1639  
                     l12314 161D                       l12306 1606                       l12410 0ACF  
                     l12402 0A9C                       l11268 1A43                       l11284 1AB2  
                     l11276 1AA5                       l11364 1DFC                       l11356 1DDC  
                     l11348 1DC6                       l11380 1D47                       l11372 1D31  
                     l11428 120F                       l11460 1F82                       l11452 1F68  
                     l11444 1F4C                       l11436 1F38                       l11508 1A61  
                     l11516 1A4C                       l11524 1A12                       l11532 1E0C  
                     l11540 1ED1                       l11620 0D61                       l11612 0D0A  
                     l11604 0C83                       l11700 0951                       l12180 0374  
                     l12172 0347                       l12164 0320                       l12156 02F5  
                     l12148 02D6                       l12092 0164                       l12084 013D  
                     l12076 0118                       l12068 00F0                       l12260 0F2D  
                     l12252 0F05                       l12244 0EDF                       l12236 0EB5  
                     l12228 0E72                       l12340 16C6                       l12332 1674  
                     l12324 1642                       l12316 1621                       l12308 160C  
                     l12420 0AF3                       l12412 0AD8                       l12404 0AB8  
                     l12500 147E                       l11286 1AB5                       l11278 1AA7  
                     l11358 1DED                       l11366 1E04                       l11390 1D6E  
                     l11382 1D51                       l11374 1D35                       l11462 1F88  
                     l11454 1F6F                       l11446 1F53                       l11438 1F3C  
                     l11518 1A4E                       l11526 1A14                       l11550 1EE8  
                     l11542 1ED8                       l11534 1EC1                       l11622 0D6A  
                     l11614 0D14                       l11606 0CBD                       l11702 0985  
                     l11710 09B3                       l11630 081A                       l12182 0388  
                     l12174 0350                       l12166 0329                       l12158 0304  
                     l12190 03B5                       l12094 016F                       l12086 0143  
                     l12078 0121                       l12270 0F5E                       l12262 0F3C  
                     l12254 0F0E                       l12246 0EE4                       l12238 0EC1  
                     l12342 16CB                       l12334 167A                       l12326 164D  
                     l12318 162A                       l12350 1E61                       l12430 0B41  
                     l12422 0B0F                       l12414 0AE1                       l12406 0AC4  
                     l12510 1494                       l12502 1484                       l11368 1E0B  
                     l11384 1D58                       l11376 1D3C                       l11392 11A1  
                     l11464 1F8F                       l11456 1F76                       l11448 1F58  
                     l11528 1A15                       l11560 1F22                       l11552 1EF1  
                     l11544 1EDB                       l11536 1EC5                       l11616 0D1D  
                     l11608 0CC7                       l11712 09BA                       l11704 098C  
                     l11640 0837                       l11632 081F                       l11624 0808  
                     l11720 1BDB                       l11800 12BA                       l12184 0395  
                     l12176 035B                       l12168 032F                       l12192 03EA  
                     l12096 017C                       l12088 0152                       l12280 0F8F  
                     l12272 0F62                       l12264 0F42                       l12248 0EF3  
                     l12256 0F0F                       l12328 165A                       l12336 1680  
                     l12344 1ACF                       l12360 1E99                       l12352 1E62  
                     l12432 0B60                       l12424 0B17                       l12416 0AE9  
                     l12408 0ACC                       l12440 067F                       l12520 14C1  
                     l12512 14A5                       l12504 1488                       l11386 1D5F  
                     l11378 1D41                       l11394 11A8                       l11458 1F7E  
                     l11490 07DC                       l11562 1F23                       l11554 1F18  
                     l11546 1EDC                       l11538 1ECA                       l11570 1CB6  
                     l11618 0D57                       l11706 0991                       l11650 0893  
                     l11642 0860                       l11634 0821                       l11626 080D  
                     l11722 1BE1                       l11714 1BC3                       l11730 112D  
                     l11810 12F0                       l11802 12C6                       l12194 03FB  
                     l12186 03A1                       l12178 0368                       l12098 0188  
                     l12290 0FC5                       l12282 0F98                       l12274 0F71  
                     l12266 0F46                       l12258 0F27                       l12338 16B5  
                     l12346 1AD4                       l12362 1EA2                       l12354 1E71  
                     l12426 0B22                       l12418 0AEE                       l12370 09BD  
                     l12434 0B61                       l12450 06D6                       l12442 068F  
                     l12530 14E9                       l12522 14C9                       l12506 1489  
                     l12514 14AB                       l11388 1D67                       l11396 11B1  
                     l11492 07DE                       l11564 1F24                       l11556 1F1E  
                     l11548 1EE4                       l11580 1CDC                       l11572 1CBE  
                     l11660 08AF                       l11652 089D                       l11644 0864  
                     l11636 0822                       l11628 0813                       l11708 099D  
                     l11724 1BE9                       l11716 1BC5                       l11732 113C  
                     l11740 1CAB                       l11812 12F9                       l11804 12CC  
                     l11820 1A7E                       l11900 051B                       l12188 03AF  
                     l12292 0FD3                       l12284 0FA1                       l12276 0F7A  
                     l12268 0F55                       l12196 0DAB                       l12348 1AE3  
                     l12364 1EB2                       l12356 1E7A                       l12428 0B27  
                     l12380 0A0A                       l12372 09DC                       l12436 0B7E  
                     l12460 0701                       l12452 06DF                       l12444 06AA  
                     l12532 14F4                       l12524 14D2                       l12516 14B1  
                     l12540 1506                       l12508 148F                       l11398 11B5  
                     l11494 07DF                       l11558 1F21                       l11574 1CC4  
                     l11566 1CAC                       l11590 0BE0                       l11582 0B88  
                     l11670 08D7                       l11662 08B2                       l11654 08A1  
                     l11646 087B                       l11638 0832                       l11726 1BEA  
                     l11718 1BCF                       l11734 1161                       l11742 19F7  
                     l11750 1C00                       l11814 1304                       l11806 12D2  
                     l11822 1A85                       l11830 1C55                       l11910 0570  
                     l11902 0527                       l12294 0FE2                       l12286 0FAC  
                     l12278 0F80                       l12198 0DAF                       l12358 1E8A  
                     l12366 1EB3                       l12390 0A47                       l12382 0A0B  
                     l12374 09E4                       l12470 072F                       l12462 0709  
                     l12454 06E8                       l12446 06AB                       l12438 067E  
                     l12534 14FA                       l12526 14DC                       l12542 151C  
                     l12518 14BE                       l11496 07E0                       l11488 07C7  
                     l11576 1CCC                       l11568 1CB2                       l11592 0BE9  
                     l11584 0B93                       l11680 0907                       l11672 08DB  
                     l11664 08B9                       l11656 08A5                       l11648 087C  
                     l11728 1BEE                       l11736 1180                       l11744 19F8  
                     l11752 1C09                       l11760 1B74                       l11816 1311  
                     l11808 12DD                       l11840 1C69                       l11832 1C57  
                     l11824 1C48                       l11920 05AC                       l11912 057C  
                     l11904 0533                       l12288 0FB9                       l12296 0FE9  
                     l12392 0A48                       l12376 09F3                       l12384 0A2C  
                     l12368 09BB                       l12480 077D                       l12472 074B  
                     l12464 070C                       l12456 06F4                       l12448 06B7  
                     l12536 14FE                       l12528 14E1                  _FindVictim 09BB  
                     l11498 07F1                       l11578 1CD4                       l11594 0C23  
                     l11586 0B9C                       l11690 092C                       l11682 0915  
                     l11674 08E2                       l11666 08BA                       l11658 08A9  
                     l11738 1C77                       l11746 1BEF                       l11770 1B8A  
                     l11762 1B77                       l11754 1B6C                       l11818 1A70  
                     l11842 1C6E                       l11834 1C5B                       l11826 1C4B  
                     l11850 1217                       l11930 05E6                       l11922 05B8  
                     l11914 0588                       l11906 053E                       l12298 0FFA  
                     l12394 0A57                       l12386 0A36                       l12378 0A02  
                     l12482 079C                       l12474 0753                       l12466 071A  
                     l12458 06FC                       l12538 1505                       l12490 1474  
                     l11596 0C2D                       l11588 0BD6                       l11692 093A  
                     l11684 091A                       l11676 08E8                       l11668 08D6  
                     l11748 1BF0                       l11772 1B90                       l11764 1B78  
                     l11756 1B70                       l11780 1780                       l11844 1C73  
                     l11836 1C5F                       l11828 1C4D                       l11860 1246  
                     l11852 1221                       l11940 065F                       l11932 05EC  
                     l12564 05C0                       l11916 0594                       l11924 05B9  
                     l11908 0569                       l12396 0A66                       l12388 0A3F  
                     l12476 075E                       l12468 072A                       l12484 079D  
                     l12492 1476                       l11598 0C36                       l11694 0940  
                     l11686 0921                       l11678 08EE                       l11766 1B7E  
                     l11758 1B73                       l11782 1787                       l11774 16DE  
                     l11790 1295                       l11846 1C74                       l11838 1C64  
                     l11862 1258                       l11854 122F                       l11942 066C  
                     l11934 0609                       l11918 05A0                       l11926 05D4  
                     l11870 041A                       l11950 1F90                       l12398 0A88  
                     l12478 0763                       l12486 07BA                       l12494 1477  
                     l11696 0947                       l11688 0928                       l11768 1B84  
                     l11784 17AC                       l11776 1756                       l11792 1299  
                     l11848 1C75                       l11864 1266                       l11856 1230  
                     l11936 061A                       l11928 05DA                       l11880 046E  
                     l11872 0420                       l11944 066D                       l11960 1FB5  
                     l11952 1F95                       l12496 1478                       l12488 146C  
                     l11698 094C                       l11786 17B3                       l11778 175D  
                     l11794 129F                       l11866 1286                       l11858 123D  
                     l11938 063B                       l11890 04DC                       l11882 0481  
                     l11874 0448                       l11970 1FE2                       l11962 1FC0  
                     l11954 1FA1                       l12498 1479                       l11788 17FB  
                     l11796 12A5                       l11892 04E8                       l11884 0494  
                     l11876 0459                       l11868 0401                       l11972 1FE4  
                     l11964 1FCE                       l11980 1FEA                       l11956 1FB0  
                     l11798 12B0                       l11894 04F3                       l11886 049A  
                     l11878 045F                       l11974 1FE5                       l11966 1FD2  
                     l11958 1FB4                       l11990 1D83                       l11982 1D6F  
      __size_of_calibrateIR 0070                       l11896 0504                       l11888 04B1  
                     l11976 1FE7                       l11968 1FDE                       l11992 1D97  
                     l11984 1D77                       l11898 050A                       l11978 1FE9  
                     l11994 1D9D                       l11986 1D7E                       l11996 1DA0  
                     l11988 1D82                       l11998 1DA2                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072             __end_of___awdiv 1217  
                     _EEADR 010D                       STR_10 10BF                       STR_11 10CF  
                     STR_20 10D6                       STR_12 10C3                       STR_21 10D9  
                     STR_13 104A                       STR_22 10D3                       STR_14 103A  
                     STR_23 10DC                       STR_15 10B7                       STR_24 10DF  
                     STR_16 10A6                       STR_25 10D3                       STR_17 10BB  
                     STR_26 1068                       STR_18 101A                       STR_19 10AE  
                     STR_27 102A                       STR_28 1059             __end_of___awmod 1F90  
                     _CARRY 0018             ___awdiv@divisor 0020             __end_of___lwdiv 1E0C  
           __end_of___lwmod 1D6F             ___awdiv@counter 0025                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019                       _Disp1 00A4  
                     _Disp2 00A6      lcd_write_data@databyte 0022    __size_of_robot_turnRight 03EC  
        i1___lwmod@dividend 0074             __end_of_isdigit 1A9D                       _total 00B8  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00D4  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 09BB            ??_robot_turnLeft 0066  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
          robotFollow@temp1 0066            robotFollow@speed 005D                __end_of_Menu 112D  
__size_of_lcd_write_control 0014            _shortMenuStrings 00DD                __end_of_isr1 146C  
              __end_of_main 1529                __end_of_init 1C77             rotate@direction 0025  
            _Init_Follow_IR 1ACF                      ??_Menu 0020               ?_readDistance 0028  
    readAvgDistance@fullval 0030       __end_of_RobotBattRead 131E                      ??_isr1 0078  
                    ??_main 006C                      ??_init 0023         __end_of_ReadButtons 15EA  
             Menu@BTN_input 0020                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            ___awdiv@dividend 0022  
          __end_of_adc_read 1B19                 ?_ChargeMode 0072                      i1l2280 1406  
                    i1l2281 1418                      i1l2282 143A                      i1l2283 1439  
                    i1l2284 1460                      i1l2285 145F                      i1l2286 1460  
                    i1l2278 1419                      i1l2279 13E9                      i1l4640 157E  
                    i1l4641 1583                      i1l4633 1543                      i1l4650 15CF  
                    i1l4642 159D                      i1l4634 1542                      i1l4651 15D7  
                    i1l4643 159C                      i1l4635 1547                      i1l4652 15DF  
                    i1l4644 15A1                      i1l4636 1561                      i1l4653 15E7  
                    i1l4645 15BB                      i1l4637 1560                      i1l4646 15BA  
                    i1l4638 1565                      i1l4647 15BF                      i1l4639 157F  
                    i1l4648 15C7                      i1l4649 15E9                      i1l7810 1CEF  
                    i1l7811 1D00                      i1l7812 1D01                      i1l7813 1D12  
                    i1l7814 1D20                      i1l7815 1D28                      u400_20 153B  
                    i1l7808 1D21                      u400_21 153A                      i1l7809 1CFB  
                    u401_20 153F                      u401_21 153E                      u410_20 1599  
                    u402_20 154D                      u410_21 1598                      u402_21 154C  
                    u411_20 15A7                      u403_20 1559                      u411_21 15A6  
                    u403_21 1558                      u412_20 15B3                      u404_20 155D  
                    u412_21 15B2                      u404_21 155C                      u413_20 15B7  
                    u405_20 156B                      u413_21 15B6                      u405_21 156A  
                    u414_20 15C3                      u406_20 1577                      u414_21 15C2  
                    u406_21 1576                      u415_20 15CB                      u407_20 157B  
                    u415_21 15CA                      u407_21 157A                      u416_20 15D3  
                    u408_20 1589                      u416_21 15D2                      u408_21 1588  
                    u417_20 15DB                      u409_20 1595                      u417_21 15DA  
                    u409_21 1594                      u418_20 15E3                      u418_21 15E2  
                    u470_20 1CFF                      u390_20 13C6                      u470_21 1CFE  
                    u390_21 13C5                 _DistLowByte 00C1                      u471_20 1D0B  
                    u391_20 13E7                      u471_21 1D0A                      u391_21 13E6  
                    u471_25 1D07                      u392_20 1400                      u392_21 13FF  
                    u472_25 1D13                      u473_20 1D1F                      u393_20 140D  
                    u473_21 1D1E                      u393_21 140C                      u394_20 141E  
                    u394_21 141D                      u395_20 1434                      u395_21 1433  
                    u468_20 1CEB                      u396_20 143F                      u468_21 1CEA  
                    u396_21 143E                      u397_20 1445                      u397_21 1444  
                    u469_25 1CF0                      u398_20 145D                      u398_21 145C  
                    u399_20 152F                      u399_21 152E                      _TMR0IE 005D  
                    _TMR0IF 005A                      _SSPCON 0014                      _SSPBUF 0013  
                    _GoHome 067E                  _UpReleased 038C            __end_of_lcd_init 1B97  
                    _adcVal 006E             _UpDebounceCount 00C8      __end_of_Init_Follow_IR 1AF0  
           RobotDrive@speed 0029                  _RobotDrive 1CAC                      ___wmul 1B97  
                 ??___awdiv 0024                   ??___awmod 0024                _turnhighByte 00D3  
              ??_ADCconvert 002E                   ??___lwdiv 002A                   ??___lwmod 0032  
          __end_of_init_adc 1A70              ??_readDistance 002A            ___awdiv@quotient 0027  
           ___awmod@divisor 0020    __end_of_lcd_write_string 1C1B                 ?_FindVictim 0072  
           ___awmod@counter 0025                ?_robotFollow 005D                      _rotate 1EC1  
                    _rxfifo 01A0                      clrloop 19ED                      _txfifo 01B0  
                    _rxiptr 00D0                      _rxoptr 00D1                 _BumpSensors 00BE  
                    _txiptr 00D5                      _txoptr 00D6       robotFollow@hysterysis 0068  
          __end_of_ser_init 1B6C            __end_of_ser_isrx 1AB6           __end_ofi1___lwmod 1D29  
                 ??_isdigit 0020                      saved_w 007E               main@shortwall 00E4  
              _AngleLowByte 00BD                 _LeftPressed 0384      RobotDrive@speedlowByte 002E  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 0DAB           ??_robot_turnRight 005F        robot_turnRight@temp1 0066  
      robot_turnRight@speed 005D                _CliffSensors 00C0              __pcstackCOMMON 0072  
           ?_Init_Follow_IR 0072                __pidataBANK1 19FF                 _ReadButtons 1529  
               _FoundVictim 00C3         __size_of_ChargeMode 004D            ??_lcd_set_cursor 0023  
              sprintf@width 0044               _buttonPressed 00CB                  __pbssBANK0 006E  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00C2  
       __size_of_FindVictim 01CD                     ?_GoHome 0072          _RightDebounceCount 00C6  
                __pmaintext 146C                 ?_RobotDrive 0029                     ?___wmul 0020  
     __end_of_robotLoadSong 1E61                  __pintentry 0004                _DistHighByte 007D  
                __ptext1111 067E                  __ptext1120 1F90                  __ptext1112 09BB  
     __end_of_UpdateDisplay 067E                  __ptext1121 0401                  __ptext1113 1E61  
                __ptext1130 1C77                  __ptext1122 1217                  __ptext1114 1ACF  
                __ptext1131 112D                  __ptext1123 1C48                  __ptext1115 15EA  
                __ptext1140 1A46                  __ptext1132 1BC3                  __ptext1124 1A70  
                __ptext1116 0DAB                  __ptext1141 1A5A                  __ptext1133 0805  
                __ptext1125 1295                  __ptext1117 0015                  __ptext1150 1A32  
                __ptext1142 07C4                  __ptext1134 0B88                  __ptext1126 16DB  
                __ptext1118 131E                  __ptext1151 1C1B                  __ptext1143 1F28  
                __ptext1135 1CAC                  __ptext1127 1B6C                  __ptext1119 1D6F  
                __ptext1152 10E6                  __ptext1144 11A1                  __ptext1136 1EC1  
                __ptext1128 1BEF                  __ptext1153 1B42                  __ptext1145 1D29  
                __ptext1137 1E0C                  __ptext1129 19F4                  __ptext1154 1AF0  
                __ptext1146 1DBC                  __ptext1138 1AB6                  __ptext1155 13C2  
                __ptext1147 1B97                  __ptext1139 1A0C                  __ptext1156 1CE5  
                __ptext1148 1A86                  __ptext1157 1529                  __ptext1149 1A9D  
                __ptext1158 0000          __size_of_ser_getch 002C                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 002D          __size_of_robo_init 0019  
                   i1l11100 1419                     i1l11102 141E                     i1l11110 143A  
                   i1l11120 1457                     i1l11112 143F                     i1l11104 1428  
                   i1l11130 153B                     i1l11122 145D                     i1l11114 1445  
                   i1l11106 142E                     i1l11140 155D                     i1l11132 153F  
                   i1l11124 1529                     i1l11116 144D                     i1l11108 1434  
                   i1l11150 1589                     i1l11142 156B                     i1l11134 154D  
                   i1l11126 152F                     i1l11118 1453                     i1l11160 15AD  
                   i1l11152 158F                     i1l11144 1571                     i1l11136 1553  
                   i1l11128 1535                     i1l11080 13C6                     i1l11170 15C6  
                   i1l11162 15B3                     i1l11154 1595                     i1l11146 1577  
                   i1l11138 1559                     i1l11090 13E9                     i1l11082 13C7  
                   i1l11180 15D4                     i1l11172 15CB                     i1l11164 15B7  
                   i1l11156 1599                     i1l11148 157B                     i1l11092 1400  
                   i1l11084 13D1                     i1l11190 15E3                     i1l11182 15D6  
                   i1l11174 15CC                     i1l11166 15C3                     i1l11158 15A7  
                   i1l11094 1401                     i1l11086 13D2                     i1l11078 13C2  
                   i1l11192 15E4                     i1l11184 15DB                     i1l11176 15CE  
                   i1l11168 15C4                     i1l11096 1406                     i1l11088 13E7  
                   i1l11194 15E6                     i1l11186 15DC                     i1l11178 15D3  
                   i1l11098 140D                     i1l11196 15E7                     i1l11188 15DE  
                   i1l11198 15E9                     i1l11470 1CEF                     i1l11480 1D12  
                   i1l11472 1CF6                     i1l11482 1D19                     i1l11474 1CFB  
                   i1l11466 1CE5                     i1l11476 1D01                     i1l11468 1CEB  
                   i1l11484 1D21                     i1l11486 1D28                     i1l11478 1D0B  
        __size_of_robotTurn 0074            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 1A86                   ?_init_adc 0072  
           __size_of_GoHome 0146                   ?_ser_init 0072                   ?_ser_isrx 0072  
          RobotDrive@radius 002B               ??_calibrateIR 005D                     ___awdiv 11A1  
                   ___awmod 1F28             __size_of___wmul 002C                     ___lwdiv 1DBC  
                   ___lwmod 1D29                  _currentFlw 00CC   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0067                     _dpowers 1010  
              __size_of_abs 0035       UpdateDisplay@tempDist 005B                     _isdigit 1A86  
      __size_of_robotFollow 0255            ___awmod@dividend 0022                     _lowByte 00CF  
                   _ser_tmp 00D2                     _sprintf 0805                  ??_lcd_init 0023  
       __size_of_RobotDrive 0039        end_of_initialization 1B3E               _AngleHighByte 00BC  
              ??_ChargeMode 005D          robot_read@readType 0023           __end_of_ser_getch 1BEF  
                   init_ram 1A23                  ??_init_adc 0020     __size_of_robotMoveSpeed 00F1  
         __end_of_ser_putch 1C48     RobotDrive@speedhighByte 002F           __end_of_robo_init 1ACF  
              _LeftReleased 0385           __end_of_robotTurn 11A1                  ??_ser_init 0020  
                ??_ser_isrx 0020                     rotate@i 0028                _DownReleased 0383  
             _RightReleased 038A    __size_of_readAvgDistance 007E                  _robot_read 16DB  
              ??_FindVictim 0069          RobotBattRead@temp1 0024           ?_lcd_write_string 0027  
        __end_of_ChargeMode 1DBC         __end_of_calibrateIR 2000          ??_lcd_write_string 0029  
           _robot_turnRight 0015                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A4                   i1___lwmod 1CE5  
                _totalSteps 00BA                  main@choice 00E6               ?_spi_transfer 0072  
          ??_Init_Follow_IR 005D                   _BattState 00A2      __size_of_RobotBattRead 0089  
        __end_of_FindVictim 0B88              __end_of_GoHome 07C4                 _VwallSensor 00CA  
             _CenterPressed 0380                ?_ReadButtons 0072              __end_of___wmul 1BC3  
   __size_of_robot_turnLeft 0060           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 1F28         start_initialization 1B19      UpdateDisplay@LCDOutput 004B  
               __end_of_abs 1CAC       __size_of_readDistance 0016                  ?i1___lwmod 0072  
        _TotalDistTravelled 00AC              ??_spi_transfer 0020                    ??_GoHome 0069  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 002D  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 1F90                 __pdataBANK1 00D7  
   __end_of_robot_turnRight 0401            _adc_read_channel 07C4                 ?_robot_read 0072  
                  ??_rotate 0026                _readDistance 1A70               _RobotBattRead 1295  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020               __pcstackBANK1 00E4                _isdigit$8699 0020  
    robotMoveSpeed@distance 005D          __end_of_RobotDrive 1CE5           __size_of_lcd_init 002B  
            _robotMoveSpeed 15EA                 sprintf@_val 003F                 sprintf@flag 003E  
               sprintf@prec 003D                _current_step 00E3            readAvgDistance@i 0036  
          readAvgDistance@j 0032           __size_of_init_adc 0016            ___lwdiv@dividend 0028  
               _angleTurned 00AE                    ?___awdiv 0020                    ?___awmod 0020  
         __size_of_ser_init 002A           __size_of_ser_isrx 0019                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 1000                   _dist_high 00B2  
            ?_RobotBattRead 0072         readDistance@readVal 002C                    ?_isdigit 0072  
            _robotTurnSpeed 131E         robotTurnSpeed@angle 005D         robotTurnSpeed@temp1 0064  
       robotTurnSpeed@speed 005F                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034      __end_of_robotMoveSpeed 16DB  
    __size_of_robotLoadSong 0055     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 027D              ___wmul@product 0024         __size_of_robot_read 0125  
                ser_putch@c 0021                   _ser_getch 1BC3                   _ser_putch 1C1B  
                 _robo_init 1AB6                   _robotTurn 112D                _RightPressed 0389  
            _robot_turnLeft 1E61            ?_robot_turnRight 005D        __size_of_ReadButtons 00C1  
             ??_robotFollow 0062        __end_of_spi_transfer 1A46      __end_of_robotTurnSpeed 13C2  
               __stringbase 100F           ___wmul@multiplier 0020            spi_transfer@data 0022  
          spi_transfer@temp 0021           _LeftDebounceCount 00C4             ?_robotMoveSpeed 005D  
 __size_of_lcd_write_string 002C     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027                    _RobotPos 00C7  
                ?_robo_init 0072                   init_fetch 1A1F      __end_of_robot_turnLeft 1EC1  
 robot_turnRight@turnTarget 0062                  ?_robotTurn 0022                  _ADCconvert 0B88  
          __size_of___awdiv 0076             ??_RobotBattRead 0022            __size_of___awmod 0068  
             _robotLoadSong 1E0C            __size_of___lwdiv 0050            __size_of___lwmod 0046  
             _UpdateDisplay 0401                    _adc_read 1AF0             ?_robotTurnSpeed 005D  
               _currentMenu 00CD            __size_of_isdigit 0017    robot_turnRight@AdcTarget 0064  
           ___lwdiv@divisor 0026         __end_of_robotFollow 1000             ___lwdiv@counter 002D  
               _menuStrings 00D7                    _highByte 00CE                    _lcd_init 1B6C  
                  _dist_low 00B4            __size_of_sprintf 01B6    __end_of_adc_read_channel 07FF  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 1A5A  
             __size_of_isr1 00AA               __size_of_main 00BD               __size_of_init 002F  
                  clear_ram 19EC                    _ser_init 1B42        robotFollow@AdcTarget 005F  
                  _ser_isrx 1A9D             ?_robot_turnLeft 0072             _readAvgDistance 1217  
              ?_calibrateIR 0072              ?_robotLoadSong 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022                _VictimSensor 00C9         _CenterDebounceCount 00BF  
              _RTC_FLAG_1MS 0386          UpdateDisplay@F1263 0190                    isdigit@c 0021  
                  intlevel1 0000              _lcd_set_cursor 19F4                   sprintf@ap 003C  
                 sprintf@sp 0043              robotTurn@angle 0022            ___lwmod@dividend 0030  
        __end_of_robot_read 1800                   stringcode 100A                 ??_ser_getch 0020  
               ??_ser_putch 0020               _distTravelled 00B0                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 1A46     __size_of_Init_Follow_IR 0021                 _robotFollow 0DAB  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0046  
                  sprintf@f 0034         robotMoveSpeed@temp1 0064         robotMoveSpeed@speed 005F  
           ___lwmod@divisor 002E                  _ROBOTerror 00C5             ___lwmod@counter 0033  
                  stringdir 100A                    stringtab 1000         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 19FF            _lcd_write_string 1BEF    RobotDrive@radiushighByte 0031  
              _spi_transfer 1A32                 _RTC_Counter 00AA     __end_of_readAvgDistance 1295  
            _lcd_write_data 1A0C             ??_robotLoadSong 0022  
