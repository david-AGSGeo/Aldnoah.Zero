

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri May 22 14:16:08 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robotLoadSong
    48                           	FNCALL	_main,_robot_read
    49                           	FNCALL	_main,_readAvgDistance
    50                           	FNCALL	_main,_UpdateDisplay
    51                           	FNCALL	_main,_Menu
    52                           	FNCALL	_main,_calibrateIR
    53                           	FNCALL	_main,_Init_Follow_IR
    54                           	FNCALL	_main,_robotFollow
    55                           	FNCALL	_main,_RobotDrive
    56                           	FNCALL	_main,_robotTurnSpeed
    57                           	FNCALL	_main,_robotMoveSpeed
    58                           	FNCALL	_main,_ser_putch
    59                           	FNCALL	_main,_robot_turnLeft
    60                           	FNCALL	_main,_robot_turnRight
    61                           	FNCALL	_main,_ChargeMode
    62                           	FNCALL	_robot_turnLeft,_robotTurnSpeed
    63                           	FNCALL	_Init_Follow_IR,_calibrateIR
    64                           	FNCALL	_Init_Follow_IR,_rotate
    65                           	FNCALL	_ChargeMode,_ser_putch
    66                           	FNCALL	_ChargeMode,_RobotBattRead
    67                           	FNCALL	_ChargeMode,_UpdateDisplay
    68                           	FNCALL	_robot_turnRight,_RobotDrive
    69                           	FNCALL	_robot_turnRight,_rotate
    70                           	FNCALL	_robot_turnRight,_readAvgDistance
    71                           	FNCALL	_robot_turnRight,_robot_read
    72                           	FNCALL	_robot_turnRight,_UpdateDisplay
    73                           	FNCALL	_robot_turnRight,___awdiv
    74                           	FNCALL	_robot_turnRight,_abs
    75                           	FNCALL	_robotMoveSpeed,_RobotDrive
    76                           	FNCALL	_robotMoveSpeed,_robot_read
    77                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    78                           	FNCALL	_robotMoveSpeed,_abs
    79                           	FNCALL	_robotTurnSpeed,_robotTurn
    80                           	FNCALL	_robotTurnSpeed,_robot_read
    81                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    82                           	FNCALL	_robotTurnSpeed,_abs
    83                           	FNCALL	_robotFollow,_RobotDrive
    84                           	FNCALL	_robotFollow,_readAvgDistance
    85                           	FNCALL	_robotFollow,_rotate
    86                           	FNCALL	_robotFollow,_robot_read
    87                           	FNCALL	_robotFollow,_UpdateDisplay
    88                           	FNCALL	_calibrateIR,_rotate
    89                           	FNCALL	_calibrateIR,_UpdateDisplay
    90                           	FNCALL	_UpdateDisplay,_lcd_write_control
    91                           	FNCALL	_UpdateDisplay,_sprintf
    92                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    93                           	FNCALL	_UpdateDisplay,_lcd_write_string
    94                           	FNCALL	_UpdateDisplay,___awmod
    95                           	FNCALL	_UpdateDisplay,___awdiv
    96                           	FNCALL	_readAvgDistance,_readDistance
    97                           	FNCALL	_readAvgDistance,___lwdiv
    98                           	FNCALL	_readAvgDistance,_ADCconvert
    99                           	FNCALL	_init,_ser_init
   100                           	FNCALL	_init,_init_adc
   101                           	FNCALL	_init,_lcd_init
   102                           	FNCALL	_init,_robo_init
   103                           	FNCALL	_readDistance,_adc_read_channel
   104                           	FNCALL	_RobotBattRead,_ser_putch
   105                           	FNCALL	_RobotBattRead,_ser_getch
   106                           	FNCALL	_robot_read,_ser_putch
   107                           	FNCALL	_robot_read,_ser_getch
   108                           	FNCALL	_lcd_init,_lcd_write_control
   109                           	FNCALL	_lcd_write_string,_lcd_write_data
   110                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   111                           	FNCALL	_abs,___wmul
   112                           	FNCALL	_robotTurn,_ser_putch
   113                           	FNCALL	_ser_getch,_ser_isrx
   114                           	FNCALL	_sprintf,_isdigit
   115                           	FNCALL	_sprintf,___wmul
   116                           	FNCALL	_sprintf,___lwdiv
   117                           	FNCALL	_sprintf,___lwmod
   118                           	FNCALL	_ADCconvert,___wmul
   119                           	FNCALL	_ADCconvert,___lwdiv
   120                           	FNCALL	_rotate,_spi_transfer
   121                           	FNCALL	_RobotDrive,_ser_putch
   122                           	FNCALL	_robotLoadSong,_ser_putch
   123                           	FNCALL	_robo_init,_ser_putch
   124                           	FNCALL	_adc_read_channel,_adc_read
   125                           	FNROOT	_main
   126                           	FNCALL	_isr1,i1___lwmod
   127                           	FNCALL	_isr1,_ReadButtons
   128                           	FNCALL	_ReadButtons,_Debounce
   129                           	FNCALL	intlevel1,_isr1
   130                           	global	intlevel1
   131                           	FNROOT	intlevel1
   132                           	global	_menuStrings
   133                           	global	_shortMenuStrings
   134                           	global	_current_step
   135                           psect	idataBANK1,class=CODE,space=0,delta=2
   136                           global __pidataBANK1
   137  1B02                     __pidataBANK1:
   138                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   139                           	line	49
   140                           
   141                           ;initializer for _menuStrings
   142  1B02  3474               	retlw	(STR_1-__stringbase)&0ffh
   143  1B03  346B               	retlw	(STR_2-__stringbase)&0ffh
   144  1B04  3486               	retlw	(STR_3-__stringbase)&0ffh
   145  1B05  348F               	retlw	(STR_4-__stringbase)&0ffh
   146  1B06  347D               	retlw	(STR_5-__stringbase)&0ffh
   147  1B07  3462               	retlw	(STR_6-__stringbase)&0ffh
   148                           	line	50
   149                           
   150                           ;initializer for _shortMenuStrings
   151  1B08  34B8               	retlw	(STR_7-__stringbase)&0ffh
   152  1B09  34BC               	retlw	(STR_8-__stringbase)&0ffh
   153  1B0A  34A4               	retlw	(STR_9-__stringbase)&0ffh
   154  1B0B  34B0               	retlw	(STR_10-__stringbase)&0ffh
   155  1B0C  34C0               	retlw	(STR_11-__stringbase)&0ffh
   156  1B0D  34B4               	retlw	(STR_12-__stringbase)&0ffh
   157                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   158                           	line	45
   159                           
   160                           ;initializer for _current_step
   161  1B0E  343C               	retlw	03Ch
   162                           	global	_dpowers
   163                           psect	strings,class=STRING,delta=2
   164                           global __pstrings
   165  0800                     __pstrings:
   166                           ;	global	stringdir,stringtab,__stringbase
   167  0800                     stringtab:
   168                           ;	String table - string pointers are 1 byte each
   169  0800  1BFF               	btfsc	(btemp+1),7
   170  0801  280A               	ljmp	stringcode
   171  0802  1383               	bcf	status,7
   172  0803  187F               	btfsc	(btemp+1),0
   173  0804  1783               	bsf	status,7
   174  0805  0800               	movf	indf,w
   175  0806  0A84               	incf fsr
   176  0807  1903               skipnz
   177  0808  0AFF               incf btemp+1
   178  0809  0008               	return
   179  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   180  080A  3008               movlw high(stringdir)
   181  080B  008A               movwf pclath
   182  080C  0804               movf fsr,w
   183  080D  0A84               incf fsr
   184  080E  0782               	addwf pc
   185  080F                     __stringbase:
   186  080F  3400               	retlw	0
   187                           psect	strings
   188                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   189                           	line	350
   190  0810                     _dpowers:
   191  0810  3401               	retlw	01h
   192  0811  3400               	retlw	0
   193                           
   194  0812  340A               	retlw	0Ah
   195  0813  3400               	retlw	0
   196                           
   197  0814  3464               	retlw	064h
   198  0815  3400               	retlw	0
   199                           
   200  0816  34E8               	retlw	0E8h
   201  0817  3403               	retlw	03h
   202                           
   203  0818  3410               	retlw	010h
   204  0819  3427               	retlw	027h
   205                           
   206                           	global	_dpowers
   207                           	global	UpdateDisplay@F1265
   208                           	global	_rxfifo
   209                           	global	_txfifo
   210                           	global	_DistHighByte
   211                           	global	_CenterPressed
   212                           	global	_CenterReleased
   213                           	global	_DownPressed
   214                           	global	_DownReleased
   215                           	global	_LeftPressed
   216                           	global	_LeftReleased
   217                           	global	_RTC_FLAG_1MS
   218                           	global	_RTC_FLAG_250MS
   219                           	global	_RTC_FLAG_500MS
   220                           	global	_RightPressed
   221                           	global	_RightReleased
   222                           	global	_UpPressed
   223                           	global	_UpReleased
   224                           	global	_BattCharge
   225                           	global	_BattState
   226                           	global	_Disp1
   227                           	global	_Disp2
   228                           	global	_IRdistance
   229                           	global	_RTC_Counter
   230                           	global	_TotalDistTravelled
   231                           	global	_adcVal
   232                           	global	_angleTurned
   233                           	global	_distTravelled
   234                           	global	_dist_high
   235                           	global	_dist_low
   236                           	global	_pos
   237                           	global	_total
   238                           	global	_totalSteps
   239                           	global	_AngleHighByte
   240                           	global	_AngleLowByte
   241                           	global	_BumpSensors
   242                           	global	_CenterDebounceCount
   243                           	global	_CliffSensors
   244                           	global	_DistLowByte
   245                           	global	_DownDebounceCount
   246                           	global	_LeftDebounceCount
   247                           	global	_ROBOTerror
   248                           	global	_RightDebounceCount
   249                           	global	_RobotPos
   250                           	global	_UpDebounceCount
   251                           	global	_VictimSensor
   252                           	global	_VwallSensor
   253                           	global	_buttonPressed
   254                           	global	_currentMenu
   255                           	global	_highByte
   256                           	global	_lowByte
   257                           	global	_rxiptr
   258                           	global	_rxoptr
   259                           	global	_ser_tmp
   260                           	global	_turnhighByte
   261                           	global	_turnlowByte
   262                           	global	_txiptr
   263                           	global	_txoptr
   264                           	global	_ADCON0
   265  001F                     _ADCON0	set	31
   266                           	global	_ADRESH
   267  001E                     _ADRESH	set	30
   268                           	global	_PORTA
   269  0005                     _PORTA	set	5
   270                           	global	_PORTD
   271  0008                     _PORTD	set	8
   272                           	global	_PORTE
   273  0009                     _PORTE	set	9
   274                           	global	_RCREG
   275  001A                     _RCREG	set	26
   276                           	global	_SSPBUF
   277  0013                     _SSPBUF	set	19
   278                           	global	_SSPCON
   279  0014                     _SSPCON	set	20
   280                           	global	_TMR0
   281  0001                     _TMR0	set	1
   282                           	global	_TXREG
   283  0019                     _TXREG	set	25
   284                           	global	AT25256A@CS0
   285  0038                     AT25256A@CS0	set	56
   286                           	global	AT25256A@CS1
   287  0039                     AT25256A@CS1	set	57
   288                           	global	_CARRY
   289  0018                     _CARRY	set	24
   290                           	global	_CHS0
   291  00FB                     _CHS0	set	251
   292                           	global	_CHS1
   293  00FC                     _CHS1	set	252
   294                           	global	_CHS2
   295  00FD                     _CHS2	set	253
   296                           	global	_CREN
   297  00C4                     _CREN	set	196
   298                           	global	_GIE
   299  005F                     _GIE	set	95
   300                           	global	_GO
   301  00FA                     _GO	set	250
   302                           	global	_OERR
   303  00C1                     _OERR	set	193
   304                           	global	_PEIE
   305  005E                     _PEIE	set	94
   306                           	global	_RB0
   307  0030                     _RB0	set	48
   308                           	global	_RB2
   309  0032                     _RB2	set	50
   310                           	global	_RB3
   311  0033                     _RB3	set	51
   312                           	global	_RB4
   313  0034                     _RB4	set	52
   314                           	global	_RB5
   315  0035                     _RB5	set	53
   316                           	global	_RB6
   317  0036                     _RB6	set	54
   318                           	global	_RC0
   319  0038                     _RC0	set	56
   320                           	global	_RC1
   321  0039                     _RC1	set	57
   322                           	global	_RC2
   323  003A                     _RC2	set	58
   324                           	global	_RCIF
   325  0065                     _RCIF	set	101
   326                           	global	_RE0
   327  0048                     _RE0	set	72
   328                           	global	_RE1
   329  0049                     _RE1	set	73
   330                           	global	_RE2
   331  004A                     _RE2	set	74
   332                           	global	_RX9
   333  00C6                     _RX9	set	198
   334                           	global	_SPEN
   335  00C7                     _SPEN	set	199
   336                           	global	_SSPIF
   337  0063                     _SSPIF	set	99
   338                           	global	_TMR0IE
   339  005D                     _TMR0IE	set	93
   340                           	global	_TMR0IF
   341  005A                     _TMR0IF	set	90
   342                           	global	_TXIF
   343  0064                     _TXIF	set	100
   344                           	global	_ADCON1
   345  009F                     _ADCON1	set	159
   346                           	global	_ADRESL
   347  009E                     _ADRESL	set	158
   348                           	global	_OPTION_REG
   349  0081                     _OPTION_REG	set	129
   350                           	global	_SPBRG
   351  0099                     _SPBRG	set	153
   352                           	global	_SSPSTAT
   353  0094                     _SSPSTAT	set	148
   354                           	global	_TRISA
   355  0085                     _TRISA	set	133
   356                           	global	_TRISB
   357  0086                     _TRISB	set	134
   358                           	global	_TRISC
   359  0087                     _TRISC	set	135
   360                           	global	_TRISD
   361  0088                     _TRISD	set	136
   362                           	global	_TRISE
   363  0089                     _TRISE	set	137
   364                           	global	_BRGH
   365  04C2                     _BRGH	set	1218
   366                           	global	_RCIE
   367  0465                     _RCIE	set	1125
   368                           	global	_SYNC
   369  04C4                     _SYNC	set	1220
   370                           	global	_TX9
   371  04C6                     _TX9	set	1222
   372                           	global	_TXEN
   373  04C5                     _TXEN	set	1221
   374                           	global	_TXIE
   375  0464                     _TXIE	set	1124
   376                           	global	_EEADR
   377  010D                     _EEADR	set	269
   378                           	global	_EEDATA
   379  010C                     _EEDATA	set	268
   380                           	global	_EECON1
   381  018C                     _EECON1	set	396
   382                           	global	_EECON2
   383  018D                     _EECON2	set	397
   384                           	global	_RD
   385  0C60                     _RD	set	3168
   386                           	global	_WR
   387  0C61                     _WR	set	3169
   388                           	global	_WREN
   389  0C62                     _WREN	set	3170
   390                           	
   391  081A                     STR_18:	
   392  081A  3420               	retlw	32	;' '
   393  081B  3443               	retlw	67	;'C'
   394  081C  3468               	retlw	104	;'h'
   395  081D  3461               	retlw	97	;'a'
   396  081E  3472               	retlw	114	;'r'
   397  081F  3467               	retlw	103	;'g'
   398  0820  3469               	retlw	105	;'i'
   399  0821  346E               	retlw	110	;'n'
   400  0822  3467               	retlw	103	;'g'
   401  0823  3420               	retlw	32	;' '
   402  0824  344D               	retlw	77	;'M'
   403  0825  346F               	retlw	111	;'o'
   404  0826  3464               	retlw	100	;'d'
   405  0827  3465               	retlw	101	;'e'
   406  0828  3420               	retlw	32	;' '
   407  0829  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  082A                     STR_27:	
   411  082A  3449               	retlw	73	;'I'
   412  082B  3452               	retlw	82	;'R'
   413  082C  343A               	retlw	58	;':'
   414  082D  3425               	retlw	37	;'%'
   415  082E  3433               	retlw	51	;'3'
   416  082F  3464               	retlw	100	;'d'
   417  0830  3463               	retlw	99	;'c'
   418  0831  346D               	retlw	109	;'m'
   419  0832  3420               	retlw	32	;' '
   420  0833  3443               	retlw	67	;'C'
   421  0834  3450               	retlw	80	;'P'
   422  0835  343A               	retlw	58	;':'
   423  0836  3425               	retlw	37	;'%'
   424  0837  3433               	retlw	51	;'3'
   425  0838  3464               	retlw	100	;'d'
   426  0839  3400               	retlw	0
   427                           psect	strings
   428                           	
   429  083A                     STR_14:	
   430  083A  345A               	retlw	90	;'Z'
   431  083B  3465               	retlw	101	;'e'
   432  083C  3472               	retlw	114	;'r'
   433  083D  346F               	retlw	111	;'o'
   434  083E  3420               	retlw	32	;' '
   435  083F  3453               	retlw	83	;'S'
   436  0840  3474               	retlw	116	;'t'
   437  0841  3465               	retlw	101	;'e'
   438  0842  3470               	retlw	112	;'p'
   439  0843  345F               	retlw	95	;'_'
   440  0844  344D               	retlw	77	;'M'
   441  0845  346F               	retlw	111	;'o'
   442  0846  3474               	retlw	116	;'t'
   443  0847  346F               	retlw	111	;'o'
   444  0848  3472               	retlw	114	;'r'
   445  0849  3400               	retlw	0
   446                           psect	strings
   447                           	
   448  084A                     STR_13:	
   449  084A  3449               	retlw	73	;'I'
   450  084B  3452               	retlw	82	;'R'
   451  084C  343A               	retlw	58	;':'
   452  084D  3425               	retlw	37	;'%'
   453  084E  3433               	retlw	51	;'3'
   454  084F  3464               	retlw	100	;'d'
   455  0850  3463               	retlw	99	;'c'
   456  0851  346D               	retlw	109	;'m'
   457  0852  3420               	retlw	32	;' '
   458  0853  3444               	retlw	68	;'D'
   459  0854  343A               	retlw	58	;':'
   460  0855  3425               	retlw	37	;'%'
   461  0856  3433               	retlw	51	;'3'
   462  0857  3464               	retlw	100	;'d'
   463  0858  3400               	retlw	0
   464                           psect	strings
   465                           	
   466  0859                     STR_28:	
   467  0859  3444               	retlw	68	;'D'
   468  085A  343A               	retlw	58	;':'
   469  085B  3425               	retlw	37	;'%'
   470  085C  3434               	retlw	52	;'4'
   471  085D  3464               	retlw	100	;'d'
   472  085E  3463               	retlw	99	;'c'
   473  085F  346D               	retlw	109	;'m'
   474  0860  3420               	retlw	32	;' '
   475  0861  3441               	retlw	65	;'A'
   476  0862  3454               	retlw	84	;'T'
   477  0863  343A               	retlw	58	;':'
   478  0864  3425               	retlw	37	;'%'
   479  0865  3433               	retlw	51	;'3'
   480  0866  3464               	retlw	100	;'d'
   481  0867  3400               	retlw	0
   482                           psect	strings
   483                           	
   484  0868                     STR_26:	
   485  0868  3420               	retlw	32	;' '
   486  0869  3420               	retlw	32	;' '
   487  086A  3445               	retlw	69	;'E'
   488  086B  3458               	retlw	88	;'X'
   489  086C  3449               	retlw	73	;'I'
   490  086D  3454               	retlw	84	;'T'
   491  086E  3420               	retlw	32	;' '
   492  086F  3420               	retlw	32	;' '
   493  0870  3400               	retlw	0
   494                           psect	strings
   495                           	
   496  0871                     STR_6:	
   497  0871  3420               	retlw	32	;' '
   498  0872  3443               	retlw	67	;'C'
   499  0873  3468               	retlw	104	;'h'
   500  0874  3461               	retlw	97	;'a'
   501  0875  3472               	retlw	114	;'r'
   502  0876  3467               	retlw	103	;'g'
   503  0877  3465               	retlw	101	;'e'
   504  0878  3420               	retlw	32	;' '
   505  0879  3400               	retlw	0
   506                           psect	strings
   507                           	
   508  087A                     STR_2:	
   509  087A  3453               	retlw	83	;'S'
   510  087B  3463               	retlw	99	;'c'
   511  087C  3461               	retlw	97	;'a'
   512  087D  346E               	retlw	110	;'n'
   513  087E  345F               	retlw	95	;'_'
   514  087F  3433               	retlw	51	;'3'
   515  0880  3436               	retlw	54	;'6'
   516  0881  3430               	retlw	48	;'0'
   517  0882  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  0883                     STR_1:	
   521  0883  3443               	retlw	67	;'C'
   522  0884  3461               	retlw	97	;'a'
   523  0885  346C               	retlw	108	;'l'
   524  0886  3469               	retlw	105	;'i'
   525  0887  3462               	retlw	98	;'b'
   526  0888  345F               	retlw	95	;'_'
   527  0889  3449               	retlw	73	;'I'
   528  088A  3452               	retlw	82	;'R'
   529  088B  3400               	retlw	0
   530                           psect	strings
   531                           	
   532  088C                     STR_5:	
   533  088C  3446               	retlw	70	;'F'
   534  088D  346C               	retlw	108	;'l'
   535  088E  3477               	retlw	119	;'w'
   536  088F  345F               	retlw	95	;'_'
   537  0890  3457               	retlw	87	;'W'
   538  0891  3461               	retlw	97	;'a'
   539  0892  346C               	retlw	108	;'l'
   540  0893  346C               	retlw	108	;'l'
   541  0894  3400               	retlw	0
   542                           psect	strings
   543                           	
   544  0895                     STR_3:	
   545  0895  3444               	retlw	68	;'D'
   546  0896  3472               	retlw	114	;'r'
   547  0897  3469               	retlw	105	;'i'
   548  0898  3476               	retlw	118	;'v'
   549  0899  3465               	retlw	101	;'e'
   550  089A  345F               	retlw	95	;'_'
   551  089B  3432               	retlw	50	;'2'
   552  089C  346D               	retlw	109	;'m'
   553  089D  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  089E                     STR_4:	
   557  089E  3444               	retlw	68	;'D'
   558  089F  3472               	retlw	114	;'r'
   559  08A0  3469               	retlw	105	;'i'
   560  08A1  3476               	retlw	118	;'v'
   561  08A2  3465               	retlw	101	;'e'
   562  08A3  345F               	retlw	95	;'_'
   563  08A4  344C               	retlw	76	;'L'
   564  08A5  3400               	retlw	0
   565                           psect	strings
   566                           	
   567  08A6                     STR_16:	
   568  08A6  3443               	retlw	67	;'C'
   569  08A7  344F               	retlw	79	;'O'
   570  08A8  344E               	retlw	78	;'N'
   571  08A9  3446               	retlw	70	;'F'
   572  08AA  3449               	retlw	73	;'I'
   573  08AB  3452               	retlw	82	;'R'
   574  08AC  344D               	retlw	77	;'M'
   575  08AD  3400               	retlw	0
   576                           psect	strings
   577                           	
   578  08AE                     STR_19:	
   579  08AE  3425               	retlw	37	;'%'
   580  08AF  3464               	retlw	100	;'d'
   581  08B0  346D               	retlw	109	;'m'
   582  08B1  3441               	retlw	65	;'A'
   583  08B2  3400               	retlw	0
   584                           psect	strings
   585                           	
   586  08B3                     STR_9:	
   587  08B3  3444               	retlw	68	;'D'
   588  08B4  3472               	retlw	114	;'r'
   589  08B5  3432               	retlw	50	;'2'
   590  08B6  3400               	retlw	0
   591                           psect	strings
   592                           	
   593  08B7                     STR_15:	
   594  08B7  343C               	retlw	60	;'<'
   595  08B8  343C               	retlw	60	;'<'
   596  08B9  343C               	retlw	60	;'<'
   597  08BA  3400               	retlw	0
   598                           psect	strings
   599                           	
   600  08BB                     STR_17:	
   601  08BB  343E               	retlw	62	;'>'
   602  08BC  343E               	retlw	62	;'>'
   603  08BD  343E               	retlw	62	;'>'
   604  08BE  3400               	retlw	0
   605                           psect	strings
   606                           	
   607  08BF                     STR_10:	
   608  08BF  3444               	retlw	68	;'D'
   609  08C0  3472               	retlw	114	;'r'
   610  08C1  344C               	retlw	76	;'L'
   611  08C2  3400               	retlw	0
   612                           psect	strings
   613                           	
   614  08C3                     STR_12:	
   615  08C3  3443               	retlw	67	;'C'
   616  08C4  3468               	retlw	104	;'h'
   617  08C5  3467               	retlw	103	;'g'
   618  08C6  3400               	retlw	0
   619                           psect	strings
   620                           	
   621  08C7                     STR_7:	
   622  08C7  3443               	retlw	67	;'C'
   623  08C8  3461               	retlw	97	;'a'
   624  08C9  346C               	retlw	108	;'l'
   625  08CA  3400               	retlw	0
   626                           psect	strings
   627                           	
   628  08CB                     STR_8:	
   629  08CB  3453               	retlw	83	;'S'
   630  08CC  3463               	retlw	99	;'c'
   631  08CD  346E               	retlw	110	;'n'
   632  08CE  3400               	retlw	0
   633                           psect	strings
   634                           	
   635  08CF                     STR_11:	
   636  08CF  3446               	retlw	70	;'F'
   637  08D0  346C               	retlw	108	;'l'
   638  08D1  3477               	retlw	119	;'w'
   639  08D2  3400               	retlw	0
   640                           psect	strings
   641                           	
   642  08D3                     STR_22:	
   643  08D3  3446               	retlw	70	;'F'
   644  08D4  3443               	retlw	67	;'C'
   645  08D5  3400               	retlw	0
   646                           psect	strings
   647                           	
   648  08D6                     STR_20:	
   649  08D6  344E               	retlw	78	;'N'
   650  08D7  3443               	retlw	67	;'C'
   651  08D8  3400               	retlw	0
   652                           psect	strings
   653                           	
   654  08D9                     STR_21:	
   655  08D9  3452               	retlw	82	;'R'
   656  08DA  3443               	retlw	67	;'C'
   657  08DB  3400               	retlw	0
   658                           psect	strings
   659                           	
   660  08DC                     STR_23:	
   661  08DC  3454               	retlw	84	;'T'
   662  08DD  3443               	retlw	67	;'C'
   663  08DE  3400               	retlw	0
   664                           psect	strings
   665                           	
   666  08DF                     STR_24:	
   667  08DF  3457               	retlw	87	;'W'
   668  08E0  3461               	retlw	97	;'a'
   669  08E1  3400               	retlw	0
   670                           psect	strings
   671  08D3                     STR_25	equ	STR_22+0
   672                           	file	"Assignment3_AldnoahZero.as"
   673                           	line	#
   674                           psect cinit,class=CODE,delta=2
   675                           global start_initialization
   676  1BF3                     start_initialization:
   677                           
   678                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   679                           global __pbitbssCOMMON
   680  0380                     __pbitbssCOMMON:
   681  0380                     _CenterPressed:
   682  0380                            ds      1
   683                           
   684  0381                     _CenterReleased:
   685  0381                            ds      1
   686                           
   687  0382                     _DownPressed:
   688  0382                            ds      1
   689                           
   690  0383                     _DownReleased:
   691  0383                            ds      1
   692                           
   693  0384                     _LeftPressed:
   694  0384                            ds      1
   695                           
   696  0385                     _LeftReleased:
   697  0385                            ds      1
   698                           
   699  0386                     _RTC_FLAG_1MS:
   700  0386                            ds      1
   701                           
   702  0387                     _RTC_FLAG_250MS:
   703  0387                            ds      1
   704                           
   705  0388                     _RTC_FLAG_500MS:
   706  0388                            ds      1
   707                           
   708  0389                     _RightPressed:
   709  0389                            ds      1
   710                           
   711  038A                     _RightReleased:
   712  038A                            ds      1
   713                           
   714  038B                     _UpPressed:
   715  038B                            ds      1
   716                           
   717  038C                     _UpReleased:
   718  038C                            ds      1
   719                           
   720                           psect	bssCOMMON,class=COMMON,space=1
   721                           global __pbssCOMMON
   722  007D                     __pbssCOMMON:
   723  007D                     _DistHighByte:
   724  007D                            ds      1
   725                           
   726                           psect	bssBANK1,class=BANK1,space=1
   727                           global __pbssBANK1
   728  00A0                     __pbssBANK1:
   729  00A0                     _BattCharge:
   730  00A0                            ds      2
   731                           
   732  00A2                     _BattState:
   733  00A2                            ds      2
   734                           
   735  00A4                     _Disp1:
   736  00A4                            ds      2
   737                           
   738  00A6                     _Disp2:
   739  00A6                            ds      2
   740                           
   741  00A8                     _IRdistance:
   742  00A8                            ds      2
   743                           
   744  00AA                     _RTC_Counter:
   745  00AA                            ds      2
   746                           
   747  00AC                     _TotalDistTravelled:
   748  00AC                            ds      2
   749                           
   750  00AE                     _adcVal:
   751  00AE                            ds      2
   752                           
   753  00B0                     _angleTurned:
   754  00B0                            ds      2
   755                           
   756  00B2                     _distTravelled:
   757  00B2                            ds      2
   758                           
   759  00B4                     _dist_high:
   760  00B4                            ds      2
   761                           
   762  00B6                     _dist_low:
   763  00B6                            ds      2
   764                           
   765  00B8                     _pos:
   766  00B8                            ds      2
   767                           
   768  00BA                     _total:
   769  00BA                            ds      2
   770                           
   771  00BC                     _totalSteps:
   772  00BC                            ds      2
   773                           
   774  00BE                     _AngleHighByte:
   775  00BE                            ds      1
   776                           
   777  00BF                     _AngleLowByte:
   778  00BF                            ds      1
   779                           
   780  00C0                     _BumpSensors:
   781  00C0                            ds      1
   782                           
   783  00C1                     _CenterDebounceCount:
   784  00C1                            ds      1
   785                           
   786  00C2                     _CliffSensors:
   787  00C2                            ds      1
   788                           
   789  00C3                     _DistLowByte:
   790  00C3                            ds      1
   791                           
   792  00C4                     _DownDebounceCount:
   793  00C4                            ds      1
   794                           
   795  00C5                     _LeftDebounceCount:
   796  00C5                            ds      1
   797                           
   798  00C6                     _ROBOTerror:
   799  00C6                            ds      1
   800                           
   801  00C7                     _RightDebounceCount:
   802  00C7                            ds      1
   803                           
   804  00C8                     _RobotPos:
   805  00C8                            ds      1
   806                           
   807  00C9                     _UpDebounceCount:
   808  00C9                            ds      1
   809                           
   810  00CA                     _VictimSensor:
   811  00CA                            ds      1
   812                           
   813  00CB                     _VwallSensor:
   814  00CB                            ds      1
   815                           
   816  00CC                     _buttonPressed:
   817  00CC                            ds      1
   818                           
   819  00CD                     _currentMenu:
   820  00CD                            ds      1
   821                           
   822  00CE                     _highByte:
   823  00CE                            ds      1
   824                           
   825  00CF                     _lowByte:
   826  00CF                            ds      1
   827                           
   828  00D0                     _rxiptr:
   829  00D0                            ds      1
   830                           
   831  00D1                     _rxoptr:
   832  00D1                            ds      1
   833                           
   834  00D2                     _ser_tmp:
   835  00D2                            ds      1
   836                           
   837  00D3                     _turnhighByte:
   838  00D3                            ds      1
   839                           
   840  00D4                     _turnlowByte:
   841  00D4                            ds      1
   842                           
   843  00D5                     _txiptr:
   844  00D5                            ds      1
   845                           
   846  00D6                     _txoptr:
   847  00D6                            ds      1
   848                           
   849                           psect	dataBANK1,class=BANK1,space=1
   850                           global __pdataBANK1
   851  00D7                     __pdataBANK1:
   852                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   853                           	line	49
   854  00D7                     _menuStrings:
   855  00D7                            ds      6
   856                           
   857                           psect	dataBANK1
   858                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   859                           	line	50
   860  00DD                     _shortMenuStrings:
   861  00DD                            ds      6
   862                           
   863                           psect	dataBANK1
   864                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   865                           	line	45
   866  00E3                     _current_step:
   867  00E3                            ds      1
   868                           
   869                           psect	bssBANK3,class=BANK3,space=1
   870                           global __pbssBANK3
   871  0190                     __pbssBANK3:
   872  0190                     UpdateDisplay@F1265:
   873  0190                            ds      16
   874                           
   875  01A0                     _rxfifo:
   876  01A0                            ds      16
   877                           
   878  01B0                     _txfifo:
   879  01B0                            ds      16
   880                           
   881                           psect clrtext,class=CODE,delta=2
   882                           global clear_ram
   883                           ;	Called with FSR containing the base address, and
   884                           ;	W with the last address+1
   885  08E4                     clear_ram:
   886  08E4  0064               	clrwdt			;clear the watchdog before getting into this loop
   887  08E5                     clrloop:
   888  08E5  0180               	clrf	indf		;clear RAM location pointed to by FSR
   889  08E6  0A84               	incf	fsr,f		;increment pointer
   890  08E7  0604               	xorwf	fsr,w		;XOR with final address
   891  08E8  1903               	btfsc	status,2	;have we reached the end yet?
   892  08E9  3400               	retlw	0		;all done for this memory range, return
   893  08EA  0604               	xorwf	fsr,w		;XOR again to restore value
   894  08EB  28E5               	goto	clrloop		;do the next byte
   895                           
   896                           ; Clear objects allocated to BITCOMMON
   897                           psect cinit,class=CODE,delta=2
   898  1BF3  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   899  1BF4  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   900                           ; Clear objects allocated to COMMON
   901                           psect cinit,class=CODE,delta=2
   902  1BF5  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   903                           ; Clear objects allocated to BANK1
   904                           psect cinit,class=CODE,delta=2
   905  1BF6  1383               	bcf	status, 7	;select IRP bank0
   906  1BF7  30A0               	movlw	low(__pbssBANK1)
   907  1BF8  0084               	movwf	fsr
   908  1BF9  30D7               	movlw	low((__pbssBANK1)+037h)
   909  1BFA  120A  158A  20E4   	fcall	clear_ram
              160A  158A         
   910                           ; Clear objects allocated to BANK3
   911                           psect cinit,class=CODE,delta=2
   912  1BFF  1783               	bsf	status, 7	;select IRP bank2
   913  1C00  3090               	movlw	low(__pbssBANK3)
   914  1C01  0084               	movwf	fsr
   915  1C02  30C0               	movlw	low((__pbssBANK3)+030h)
   916  1C03  120A  158A  20E4   	fcall	clear_ram
              160A  158A         
   917                           global btemp
   918                           psect inittext,class=CODE,delta=2
   919                           global init_fetch,btemp
   920                           ;	Called with low address in FSR and high address in W
   921  1B22                     init_fetch:
   922  1B22  087E               	movf btemp,w
   923  1B23  008A               	movwf pclath
   924  1B24  087F               	movf btemp+1,w
   925  1B25  0082               	movwf pc
   926                           global init_ram
   927                           ;Called with:
   928                           ;	high address of idata address in btemp 
   929                           ;	low address of idata address in btemp+1 
   930                           ;	low address of data in FSR
   931                           ;	high address + 1 of data in btemp-1
   932  1B26                     init_ram:
   933  1B26  160A  158A  2322   	fcall init_fetch
              160A  158A         
   934  1B2B  0080               	movwf indf,f
   935  1B2C  0A84               	incf fsr,f
   936  1B2D  0804               	movf fsr,w
   937  1B2E  067D               	xorwf btemp-1,w
   938  1B2F  1903               	btfsc status,2
   939  1B30  3400               	retlw 0
   940  1B31  0AFF               	incf btemp+1,f
   941  1B32  1903               	btfsc status,2
   942  1B33  0AFE               	incf btemp,f
   943  1B34  2B26               	goto init_ram
   944                           ; Initialize objects allocated to BANK1
   945                           psect cinit,class=CODE,delta=2
   946                           global init_ram, __pidataBANK1
   947  1C08  1383               	bcf	status, 7	;select IRP bank0
   948  1C09  30E4               	movlw low(__pdataBANK1+13)
   949  1C0A  00FD               	movwf btemp-1,f
   950  1C0B  301B               	movlw high(__pidataBANK1)
   951  1C0C  00FE               	movwf btemp,f
   952  1C0D  3002               	movlw low(__pidataBANK1)
   953  1C0E  00FF               	movwf btemp+1,f
   954  1C0F  30D7               	movlw low(__pdataBANK1)
   955  1C10  0084               	movwf fsr,f
   956  1C11  160A  158A  2326   	fcall init_ram
              160A  158A         
   957                           psect cinit,class=CODE,delta=2
   958                           global end_of_initialization
   959                           
   960                           ;End of C runtime variable initialization code
   961                           
   962  1C16                     end_of_initialization:
   963  1C16  0183               clrf status
   964  1C17  120A  158A  2D8D   ljmp _main	;jump to C main() function
   965                           psect	cstackCOMMON,class=COMMON,space=1
   966                           global __pcstackCOMMON
   967  0072                     __pcstackCOMMON:
   968                           	global	?_ser_init
   969  0072                     ?_ser_init:	; 0 bytes @ 0x0
   970                           	global	?_robo_init
   971  0072                     ?_robo_init:	; 0 bytes @ 0x0
   972                           	global	?_robotLoadSong
   973  0072                     ?_robotLoadSong:	; 0 bytes @ 0x0
   974                           	global	?_robot_read
   975  0072                     ?_robot_read:	; 0 bytes @ 0x0
   976                           	global	?_readAvgDistance
   977  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   978                           	global	?_UpdateDisplay
   979  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   980                           	global	?_calibrateIR
   981  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   982                           	global	?_Init_Follow_IR
   983  0072                     ?_Init_Follow_IR:	; 0 bytes @ 0x0
   984                           	global	?_ser_putch
   985  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   986                           	global	?_robot_turnLeft
   987  0072                     ?_robot_turnLeft:	; 0 bytes @ 0x0
   988                           	global	?_ChargeMode
   989  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   990                           	global	?_RobotBattRead
   991  0072                     ?_RobotBattRead:	; 0 bytes @ 0x0
   992                           	global	?_ADCconvert
   993  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   994                           	global	?_isdigit
   995  0072                     ?_isdigit:	; 1 bit 
   996                           	global	?_init_adc
   997  0072                     ?_init_adc:	; 0 bytes @ 0x0
   998                           	global	?_lcd_write_control
   999  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
  1000                           	global	?_lcd_write_data
  1001  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
  1002                           	global	?_lcd_set_cursor
  1003  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
  1004                           	global	?_lcd_init
  1005  0072                     ?_lcd_init:	; 0 bytes @ 0x0
  1006                           	global	?_isr1
  1007  0072                     ?_isr1:	; 0 bytes @ 0x0
  1008                           	global	?_init
  1009  0072                     ?_init:	; 0 bytes @ 0x0
  1010                           	global	?_main
  1011  0072                     ?_main:	; 0 bytes @ 0x0
  1012                           	global	?_Debounce
  1013  0072                     ?_Debounce:	; 0 bytes @ 0x0
  1014                           	global	??_Debounce
  1015  0072                     ??_Debounce:	; 0 bytes @ 0x0
  1016                           	global	?_ser_isrx
  1017  0072                     ?_ser_isrx:	; 1 bit 
  1018                           	global	?_ReadButtons
  1019  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
  1020                           	global	?_Menu
  1021  0072                     ?_Menu:	; 1 bytes @ 0x0
  1022                           	global	?_ser_getch
  1023  0072                     ?_ser_getch:	; 1 bytes @ 0x0
  1024                           	global	?_adc_read_channel
  1025  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
  1026                           	global	?_spi_transfer
  1027  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
  1028                           	global	?i1___lwmod
  1029  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
  1030                           	global	i1___lwmod@divisor
  1031  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
  1032  0072                     	ds	1
  1033                           	global	??_ReadButtons
  1034  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
  1035  0073                     	ds	1
  1036                           	global	i1___lwmod@dividend
  1037  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
  1038  0074                     	ds	2
  1039                           	global	??i1___lwmod
  1040  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
  1041  0076                     	ds	1
  1042                           	global	i1___lwmod@counter
  1043  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
  1044  0077                     	ds	1
  1045                           	global	??_isr1
  1046  0078                     ??_isr1:	; 0 bytes @ 0x6
  1047  0078                     	ds	5
  1048                           psect	cstackBANK0,class=BANK0,space=1
  1049                           global __pcstackBANK0
  1050  0020                     __pcstackBANK0:
  1051                           	global	??_ser_init
  1052  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1053                           	global	??_Menu
  1054  0020                     ??_Menu:	; 0 bytes @ 0x0
  1055                           	global	??_ser_putch
  1056  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1057                           	global	??_ser_getch
  1058  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1059                           	global	??_isdigit
  1060  0020                     ??_isdigit:	; 0 bytes @ 0x0
  1061                           	global	??_init_adc
  1062  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1063                           	global	??_lcd_write_control
  1064  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1065                           	global	??_lcd_write_data
  1066  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1067                           	global	??_spi_transfer
  1068  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1069                           	global	??_ser_isrx
  1070  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1071                           	global	?_adc_read
  1072  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1073                           	global	?___wmul
  1074  0020                     ?___wmul:	; 2 bytes @ 0x0
  1075                           	global	?___awdiv
  1076  0020                     ?___awdiv:	; 2 bytes @ 0x0
  1077                           	global	?___awmod
  1078  0020                     ?___awmod:	; 2 bytes @ 0x0
  1079                           	global	Menu@BTN_input
  1080  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1081                           	global	_isdigit$8644
  1082  0020                     _isdigit$8644:	; 1 bytes @ 0x0
  1083                           	global	___wmul@multiplier
  1084  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1085                           	global	___awdiv@divisor
  1086  0020                     ___awdiv@divisor:	; 2 bytes @ 0x0
  1087                           	global	___awmod@divisor
  1088  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1089  0020                     	ds	1
  1090                           	global	spi_transfer@temp
  1091  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1092                           	global	ser_getch@c
  1093  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1094                           	global	ser_putch@c
  1095  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1096                           	global	isdigit@c
  1097  0021                     isdigit@c:	; 1 bytes @ 0x1
  1098  0021                     	ds	1
  1099                           	global	??_adc_read
  1100  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1101                           	global	??_robo_init
  1102  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1103                           	global	??_robotLoadSong
  1104  0022                     ??_robotLoadSong:	; 0 bytes @ 0x2
  1105                           	global	??_robot_read
  1106  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1107                           	global	??_RobotBattRead
  1108  0022                     ??_RobotBattRead:	; 0 bytes @ 0x2
  1109                           	global	?_robotTurn
  1110  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1111                           	global	lcd_write_control@databyte
  1112  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1113                           	global	lcd_write_data@databyte
  1114  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1115                           	global	spi_transfer@data
  1116  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1117                           	global	robotTurn@angle
  1118  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1119                           	global	___wmul@multiplicand
  1120  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1121                           	global	___awdiv@dividend
  1122  0022                     ___awdiv@dividend:	; 2 bytes @ 0x2
  1123                           	global	___awmod@dividend
  1124  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1125  0022                     	ds	1
  1126                           	global	?_rotate
  1127  0023                     ?_rotate:	; 0 bytes @ 0x3
  1128                           	global	??_lcd_set_cursor
  1129  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1130                           	global	??_lcd_init
  1131  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1132                           	global	??_init
  1133  0023                     ??_init:	; 0 bytes @ 0x3
  1134                           	global	lcd_set_cursor@address
  1135  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1136                           	global	robot_read@readType
  1137  0023                     robot_read@readType:	; 1 bytes @ 0x3
  1138                           	global	rotate@numsteps
  1139  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1140  0023                     	ds	1
  1141                           	global	??_robotTurn
  1142  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1143                           	global	??___wmul
  1144  0024                     ??___wmul:	; 0 bytes @ 0x4
  1145                           	global	??___awdiv
  1146  0024                     ??___awdiv:	; 0 bytes @ 0x4
  1147                           	global	??___awmod
  1148  0024                     ??___awmod:	; 0 bytes @ 0x4
  1149                           	global	adc_read@adc_value
  1150  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1151                           	global	RobotBattRead@temp1
  1152  0024                     RobotBattRead@temp1:	; 2 bytes @ 0x4
  1153                           	global	___wmul@product
  1154  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1155  0024                     	ds	1
  1156                           	global	rotate@direction
  1157  0025                     rotate@direction:	; 1 bytes @ 0x5
  1158                           	global	___awdiv@counter
  1159  0025                     ___awdiv@counter:	; 1 bytes @ 0x5
  1160                           	global	___awmod@counter
  1161  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1162  0025                     	ds	1
  1163                           	global	??_rotate
  1164  0026                     ??_rotate:	; 0 bytes @ 0x6
  1165                           	global	??_adc_read_channel
  1166  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1167                           	global	?_abs
  1168  0026                     ?_abs:	; 2 bytes @ 0x6
  1169                           	global	?___lwdiv
  1170  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1171                           	global	___awdiv@sign
  1172  0026                     ___awdiv@sign:	; 1 bytes @ 0x6
  1173                           	global	___awmod@sign
  1174  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1175                           	global	abs@v
  1176  0026                     abs@v:	; 2 bytes @ 0x6
  1177                           	global	___lwdiv@divisor
  1178  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1179  0026                     	ds	1
  1180                           	global	?_lcd_write_string
  1181  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1182                           	global	adc_read_channel@channel
  1183  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1184                           	global	lcd_write_string@s
  1185  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1186                           	global	___awdiv@quotient
  1187  0027                     ___awdiv@quotient:	; 2 bytes @ 0x7
  1188  0027                     	ds	1
  1189                           	global	??_abs
  1190  0028                     ??_abs:	; 0 bytes @ 0x8
  1191                           	global	?_readDistance
  1192  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1193                           	global	rotate@i
  1194  0028                     rotate@i:	; 2 bytes @ 0x8
  1195                           	global	___lwdiv@dividend
  1196  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1197  0028                     	ds	1
  1198                           	global	?_RobotDrive
  1199  0029                     ?_RobotDrive:	; 0 bytes @ 0x9
  1200                           	global	??_lcd_write_string
  1201  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1202                           	global	RobotDrive@speed
  1203  0029                     RobotDrive@speed:	; 2 bytes @ 0x9
  1204  0029                     	ds	1
  1205                           	global	??_readDistance
  1206  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1207                           	global	??___lwdiv
  1208  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1209  002A                     	ds	1
  1210                           	global	RobotDrive@radius
  1211  002B                     RobotDrive@radius:	; 2 bytes @ 0xB
  1212                           	global	___lwdiv@quotient
  1213  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1214  002B                     	ds	1
  1215                           	global	readDistance@readVal
  1216  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1217  002C                     	ds	1
  1218                           	global	??_RobotDrive
  1219  002D                     ??_RobotDrive:	; 0 bytes @ 0xD
  1220                           	global	___lwdiv@counter
  1221  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1222  002D                     	ds	1
  1223                           	global	??_ADCconvert
  1224  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1225                           	global	?___lwmod
  1226  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1227                           	global	RobotDrive@speedlowByte
  1228  002E                     RobotDrive@speedlowByte:	; 1 bytes @ 0xE
  1229                           	global	___lwmod@divisor
  1230  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1231  002E                     	ds	1
  1232                           	global	RobotDrive@speedhighByte
  1233  002F                     RobotDrive@speedhighByte:	; 1 bytes @ 0xF
  1234  002F                     	ds	1
  1235                           	global	??_readAvgDistance
  1236  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1237                           	global	RobotDrive@radiuslowByte
  1238  0030                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x10
  1239                           	global	readAvgDistance@fullval
  1240  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1241                           	global	___lwmod@dividend
  1242  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1243  0030                     	ds	1
  1244                           	global	RobotDrive@radiushighByte
  1245  0031                     RobotDrive@radiushighByte:	; 1 bytes @ 0x11
  1246  0031                     	ds	1
  1247                           	global	??___lwmod
  1248  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1249                           	global	readAvgDistance@j
  1250  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1251  0032                     	ds	1
  1252                           	global	___lwmod@counter
  1253  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1254  0033                     	ds	1
  1255                           	global	?_sprintf
  1256  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1257                           	global	sprintf@f
  1258  0034                     sprintf@f:	; 1 bytes @ 0x14
  1259                           	global	readAvgDistance@tempIR
  1260  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1261  0034                     	ds	2
  1262                           	global	readAvgDistance@i
  1263  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1264  0036                     	ds	3
  1265                           	global	??_sprintf
  1266  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1267  0039                     	ds	3
  1268                           	global	sprintf@ap
  1269  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1270  003C                     	ds	1
  1271                           	global	sprintf@prec
  1272  003D                     sprintf@prec:	; 1 bytes @ 0x1D
  1273  003D                     	ds	1
  1274                           	global	sprintf@flag
  1275  003E                     sprintf@flag:	; 1 bytes @ 0x1E
  1276  003E                     	ds	1
  1277                           	global	sprintf@_val
  1278  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1279  003F                     	ds	4
  1280                           	global	sprintf@sp
  1281  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1282  0043                     	ds	1
  1283                           	global	sprintf@width
  1284  0044                     sprintf@width:	; 2 bytes @ 0x24
  1285  0044                     	ds	2
  1286                           	global	sprintf@c
  1287  0046                     sprintf@c:	; 1 bytes @ 0x26
  1288  0046                     	ds	1
  1289                           	global	??_UpdateDisplay
  1290  0047                     ??_UpdateDisplay:	; 0 bytes @ 0x27
  1291  0047                     	ds	4
  1292                           	global	UpdateDisplay@LCDOutput
  1293  004B                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x2B
  1294  004B                     	ds	16
  1295                           	global	UpdateDisplay@tempDist
  1296  005B                     UpdateDisplay@tempDist:	; 2 bytes @ 0x3B
  1297  005B                     	ds	2
  1298                           	global	??_calibrateIR
  1299  005D                     ??_calibrateIR:	; 0 bytes @ 0x3D
  1300                           	global	??_Init_Follow_IR
  1301  005D                     ??_Init_Follow_IR:	; 0 bytes @ 0x3D
  1302                           	global	?_robotFollow
  1303  005D                     ?_robotFollow:	; 0 bytes @ 0x3D
  1304                           	global	?_robotTurnSpeed
  1305  005D                     ?_robotTurnSpeed:	; 0 bytes @ 0x3D
  1306                           	global	?_robotMoveSpeed
  1307  005D                     ?_robotMoveSpeed:	; 0 bytes @ 0x3D
  1308                           	global	?_robot_turnRight
  1309  005D                     ?_robot_turnRight:	; 0 bytes @ 0x3D
  1310                           	global	??_ChargeMode
  1311  005D                     ??_ChargeMode:	; 0 bytes @ 0x3D
  1312                           	global	robotFollow@speed
  1313  005D                     robotFollow@speed:	; 2 bytes @ 0x3D
  1314                           	global	robot_turnRight@speed
  1315  005D                     robot_turnRight@speed:	; 2 bytes @ 0x3D
  1316                           	global	robotMoveSpeed@distance
  1317  005D                     robotMoveSpeed@distance:	; 2 bytes @ 0x3D
  1318                           	global	robotTurnSpeed@angle
  1319  005D                     robotTurnSpeed@angle:	; 2 bytes @ 0x3D
  1320  005D                     	ds	2
  1321                           	global	??_robot_turnRight
  1322  005F                     ??_robot_turnRight:	; 0 bytes @ 0x3F
  1323                           	global	robotFollow@AdcTarget
  1324  005F                     robotFollow@AdcTarget:	; 2 bytes @ 0x3F
  1325                           	global	robotMoveSpeed@speed
  1326  005F                     robotMoveSpeed@speed:	; 2 bytes @ 0x3F
  1327                           	global	robotTurnSpeed@speed
  1328  005F                     robotTurnSpeed@speed:	; 2 bytes @ 0x3F
  1329  005F                     	ds	2
  1330                           	global	??_robotTurnSpeed
  1331  0061                     ??_robotTurnSpeed:	; 0 bytes @ 0x41
  1332                           	global	??_robotMoveSpeed
  1333  0061                     ??_robotMoveSpeed:	; 0 bytes @ 0x41
  1334                           	global	robotFollow@followDir
  1335  0061                     robotFollow@followDir:	; 1 bytes @ 0x41
  1336  0061                     	ds	1
  1337                           	global	??_robotFollow
  1338  0062                     ??_robotFollow:	; 0 bytes @ 0x42
  1339                           	global	robot_turnRight@turnTarget
  1340  0062                     robot_turnRight@turnTarget:	; 2 bytes @ 0x42
  1341  0062                     	ds	2
  1342                           	global	robot_turnRight@AdcTarget
  1343  0064                     robot_turnRight@AdcTarget:	; 2 bytes @ 0x44
  1344                           	global	robotMoveSpeed@temp1
  1345  0064                     robotMoveSpeed@temp1:	; 2 bytes @ 0x44
  1346                           	global	robotTurnSpeed@temp1
  1347  0064                     robotTurnSpeed@temp1:	; 2 bytes @ 0x44
  1348  0064                     	ds	2
  1349                           	global	??_robot_turnLeft
  1350  0066                     ??_robot_turnLeft:	; 0 bytes @ 0x46
  1351                           	global	robotFollow@temp1
  1352  0066                     robotFollow@temp1:	; 2 bytes @ 0x46
  1353                           	global	robot_turnRight@temp1
  1354  0066                     robot_turnRight@temp1:	; 2 bytes @ 0x46
  1355  0066                     	ds	2
  1356                           	global	robotFollow@hysterysis
  1357  0068                     robotFollow@hysterysis:	; 1 bytes @ 0x48
  1358  0068                     	ds	1
  1359                           	global	??_main
  1360  0069                     ??_main:	; 0 bytes @ 0x49
  1361  0069                     	ds	3
  1362                           	global	main@shortwall
  1363  006C                     main@shortwall:	; 2 bytes @ 0x4C
  1364  006C                     	ds	2
  1365                           	global	main@choice
  1366  006E                     main@choice:	; 1 bytes @ 0x4E
  1367  006E                     	ds	1
  1368                           	global	main@currentFlw
  1369  006F                     main@currentFlw:	; 1 bytes @ 0x4F
  1370  006F                     	ds	1
  1371 ;;Data sizes: Strings 200, constant 10, data 13, bss 104, persistent 0 stack 0
  1372 ;;Auto spaces:   Size  Autos    Used
  1373 ;; COMMON          14     11      14
  1374 ;; BANK0           80     80      80
  1375 ;; BANK1           80      0      68
  1376 ;; BANK3           96      0      48
  1377 ;; BANK2           96      0       0
  1378                           
  1379 ;;
  1380 ;; Pointer list with targets:
  1381                           
  1382 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1383 ;;
  1384 ;; ?_abs	int  size(1) Largest target is 0
  1385 ;;
  1386 ;; ?___awdiv	int  size(1) Largest target is 0
  1387 ;;
  1388 ;; ?___awmod	int  size(1) Largest target is 0
  1389 ;;
  1390 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1391 ;;
  1392 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1393 ;;
  1394 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1395 ;;
  1396 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1397 ;;
  1398 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1399 ;;
  1400 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 16
  1401 ;;		 -> STR_28(CODE[15]), STR_27(CODE[16]), STR_19(CODE[5]), STR_13(CODE[15]), 
  1402 ;;
  1403 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1404 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1405 ;;
  1406 ;; ?_sprintf	int  size(1) Largest target is 0
  1407 ;;
  1408 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1409 ;;		 -> ?_sprintf(BANK0[2]), 
  1410 ;;
  1411 ;; S8279$_cp	PTR const unsigned char  size(1) Largest target is 0
  1412 ;;
  1413 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1414 ;;
  1415 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1416 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1417 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1418 ;;
  1419 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1420 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1421 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1422 ;;
  1423 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1424 ;;		 -> STR_26(CODE[9]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
  1425 ;;		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_18(CODE[16]), 
  1426 ;;		 -> STR_17(CODE[4]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[16]), 
  1427 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1428 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1429 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1430 ;;		 -> STR_1(CODE[9]), 
  1431 ;;
  1432                           
  1433                           
  1434 ;;
  1435 ;; Critical Paths under _main in COMMON
  1436 ;;
  1437 ;;   None.
  1438 ;;
  1439 ;; Critical Paths under _isr1 in COMMON
  1440 ;;
  1441 ;;   _isr1->i1___lwmod
  1442 ;;   _ReadButtons->_Debounce
  1443 ;;
  1444 ;; Critical Paths under _main in BANK0
  1445 ;;
  1446 ;;   _main->_robotFollow
  1447 ;;   _robot_turnLeft->_robotTurnSpeed
  1448 ;;   _ChargeMode->_UpdateDisplay
  1449 ;;   _robot_turnRight->_UpdateDisplay
  1450 ;;   _robotMoveSpeed->_UpdateDisplay
  1451 ;;   _robotTurnSpeed->_UpdateDisplay
  1452 ;;   _robotFollow->_UpdateDisplay
  1453 ;;   _calibrateIR->_UpdateDisplay
  1454 ;;   _UpdateDisplay->_sprintf
  1455 ;;   _readAvgDistance->_ADCconvert
  1456 ;;   _readDistance->_adc_read_channel
  1457 ;;   _RobotBattRead->_ser_putch
  1458 ;;   _RobotBattRead->_ser_getch
  1459 ;;   _robot_read->_ser_putch
  1460 ;;   _robot_read->_ser_getch
  1461 ;;   _lcd_init->_lcd_write_control
  1462 ;;   _lcd_write_string->___awmod
  1463 ;;   _lcd_set_cursor->_lcd_write_control
  1464 ;;   _abs->___wmul
  1465 ;;   _robotTurn->_ser_putch
  1466 ;;   _sprintf->___lwmod
  1467 ;;   _ADCconvert->___lwdiv
  1468 ;;   _rotate->_spi_transfer
  1469 ;;   _RobotDrive->___awdiv
  1470 ;;   _robotLoadSong->_ser_putch
  1471 ;;   _robo_init->_ser_putch
  1472 ;;   _adc_read_channel->_adc_read
  1473 ;;   ___lwmod->___lwdiv
  1474 ;;   ___lwdiv->___wmul
  1475 ;;
  1476 ;; Critical Paths under _isr1 in BANK0
  1477 ;;
  1478 ;;   None.
  1479 ;;
  1480 ;; Critical Paths under _main in BANK1
  1481 ;;
  1482 ;;   None.
  1483 ;;
  1484 ;; Critical Paths under _isr1 in BANK1
  1485 ;;
  1486 ;;   None.
  1487 ;;
  1488 ;; Critical Paths under _main in BANK3
  1489 ;;
  1490 ;;   None.
  1491 ;;
  1492 ;; Critical Paths under _isr1 in BANK3
  1493 ;;
  1494 ;;   None.
  1495 ;;
  1496 ;; Critical Paths under _main in BANK2
  1497 ;;
  1498 ;;   None.
  1499 ;;
  1500 ;; Critical Paths under _isr1 in BANK2
  1501 ;;
  1502 ;;   None.
  1503                           
  1504 ;;
  1505 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1506 ;;
  1507                           
  1508 ;;
  1509 ;;Call Graph Tables:
  1510 ;;
  1511 ;; ---------------------------------------------------------------------------------
  1512 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1513 ;; ---------------------------------------------------------------------------------
  1514 ;; (0) _main                                                 7     7      0   26413
  1515 ;;                                             73 BANK0      7     7      0
  1516 ;;                               _init
  1517 ;;                      _robotLoadSong
  1518 ;;                         _robot_read
  1519 ;;                    _readAvgDistance
  1520 ;;                      _UpdateDisplay
  1521 ;;                               _Menu
  1522 ;;                        _calibrateIR
  1523 ;;                     _Init_Follow_IR
  1524 ;;                        _robotFollow
  1525 ;;                         _RobotDrive
  1526 ;;                     _robotTurnSpeed
  1527 ;;                     _robotMoveSpeed
  1528 ;;                          _ser_putch
  1529 ;;                     _robot_turnLeft
  1530 ;;                    _robot_turnRight
  1531 ;;                         _ChargeMode
  1532 ;; ---------------------------------------------------------------------------------
  1533 ;; (1) _robot_turnLeft                                       1     1      0    2621
  1534 ;;                                             70 BANK0      1     1      0
  1535 ;;                     _robotTurnSpeed
  1536 ;; ---------------------------------------------------------------------------------
  1537 ;; (1) _Init_Follow_IR                                       3     3      0    2412
  1538 ;;                                             61 BANK0      3     3      0
  1539 ;;                        _calibrateIR
  1540 ;;                             _rotate
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (1) _ChargeMode                                           1     1      0    2287
  1543 ;;                                             61 BANK0      1     1      0
  1544 ;;                          _ser_putch
  1545 ;;                      _RobotBattRead
  1546 ;;                      _UpdateDisplay
  1547 ;; ---------------------------------------------------------------------------------
  1548 ;; (1) _robot_turnRight                                     11     9      2    4347
  1549 ;;                                             61 BANK0     11     9      2
  1550 ;;                         _RobotDrive
  1551 ;;                             _rotate
  1552 ;;                    _readAvgDistance
  1553 ;;                         _robot_read
  1554 ;;                      _UpdateDisplay
  1555 ;;                            ___awdiv
  1556 ;;                                _abs
  1557 ;; ---------------------------------------------------------------------------------
  1558 ;; (1) _robotMoveSpeed                                       9     5      4    2778
  1559 ;;                                             61 BANK0      9     5      4
  1560 ;;                         _RobotDrive
  1561 ;;                         _robot_read
  1562 ;;                      _UpdateDisplay
  1563 ;;                                _abs
  1564 ;; ---------------------------------------------------------------------------------
  1565 ;; (2) _robotTurnSpeed                                       9     5      4    2621
  1566 ;;                                             61 BANK0      9     5      4
  1567 ;;                          _robotTurn
  1568 ;;                         _robot_read
  1569 ;;                      _UpdateDisplay
  1570 ;;                                _abs
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (1) _robotFollow                                         12     7      5    3676
  1573 ;;                                             61 BANK0     12     7      5
  1574 ;;                         _RobotDrive
  1575 ;;                    _readAvgDistance
  1576 ;;                             _rotate
  1577 ;;                         _robot_read
  1578 ;;                      _UpdateDisplay
  1579 ;; ---------------------------------------------------------------------------------
  1580 ;; (2) _calibrateIR                                          0     0      0    2292
  1581 ;;                             _rotate
  1582 ;;                      _UpdateDisplay
  1583 ;; ---------------------------------------------------------------------------------
  1584 ;; (2) _UpdateDisplay                                       22    22      0    2172
  1585 ;;                                             39 BANK0     22    22      0
  1586 ;;                  _lcd_write_control
  1587 ;;                            _sprintf
  1588 ;;                     _lcd_set_cursor
  1589 ;;                   _lcd_write_string
  1590 ;;                            ___awmod
  1591 ;;                            ___awdiv
  1592 ;; ---------------------------------------------------------------------------------
  1593 ;; (2) _readAvgDistance                                      8     8      0     625
  1594 ;;                                             16 BANK0      8     8      0
  1595 ;;                       _readDistance
  1596 ;;                            ___lwdiv
  1597 ;;                         _ADCconvert
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (1) _init                                                 1     1      0      44
  1600 ;;                                              3 BANK0      1     1      0
  1601 ;;                           _ser_init
  1602 ;;                           _init_adc
  1603 ;;                           _lcd_init
  1604 ;;                          _robo_init
  1605 ;; ---------------------------------------------------------------------------------
  1606 ;; (3) _readDistance                                         6     4      2      69
  1607 ;;                                              8 BANK0      6     4      2
  1608 ;;                   _adc_read_channel
  1609 ;; ---------------------------------------------------------------------------------
  1610 ;; (2) _RobotBattRead                                        4     4      0      93
  1611 ;;                                              2 BANK0      4     4      0
  1612 ;;                          _ser_putch
  1613 ;;                          _ser_getch
  1614 ;; ---------------------------------------------------------------------------------
  1615 ;; (2) _robot_read                                           2     2      0     133
  1616 ;;                                              2 BANK0      2     2      0
  1617 ;;                          _ser_putch
  1618 ;;                          _ser_getch
  1619 ;; ---------------------------------------------------------------------------------
  1620 ;; (2) _lcd_init                                             0     0      0      22
  1621 ;;                  _lcd_write_control
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (3) _lcd_write_string                                     2     0      2      67
  1624 ;;                                              7 BANK0      2     0      2
  1625 ;;                     _lcd_write_data
  1626 ;;                            ___awmod (ARG)
  1627 ;; ---------------------------------------------------------------------------------
  1628 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1629 ;;                                              3 BANK0      1     1      0
  1630 ;;                  _lcd_write_control
  1631 ;; ---------------------------------------------------------------------------------
  1632 ;; (2) _abs                                                  4     2      2     158
  1633 ;;                                              6 BANK0      4     2      2
  1634 ;;                             ___wmul
  1635 ;; ---------------------------------------------------------------------------------
  1636 ;; (3) _robotTurn                                            2     0      2      66
  1637 ;;                                              2 BANK0      2     0      2
  1638 ;;                          _ser_putch
  1639 ;; ---------------------------------------------------------------------------------
  1640 ;; (3) _ser_getch                                            2     2      0      23
  1641 ;;                                              0 BANK0      2     2      0
  1642 ;;                           _ser_isrx
  1643 ;; ---------------------------------------------------------------------------------
  1644 ;; (3) _sprintf                                             19    14      5    1230
  1645 ;;                                             20 BANK0     19    14      5
  1646 ;;                            _isdigit
  1647 ;;                             ___wmul
  1648 ;;                            ___lwdiv
  1649 ;;                            ___lwmod
  1650 ;; ---------------------------------------------------------------------------------
  1651 ;; (3) _ADCconvert                                           2     2      0     254
  1652 ;;                                             14 BANK0      2     2      0
  1653 ;;                             ___wmul
  1654 ;;                            ___lwdiv
  1655 ;; ---------------------------------------------------------------------------------
  1656 ;; (2) _rotate                                               7     4      3     120
  1657 ;;                                              3 BANK0      7     4      3
  1658 ;;                       _spi_transfer
  1659 ;; ---------------------------------------------------------------------------------
  1660 ;; (2) _RobotDrive                                           9     5      4     202
  1661 ;;                                              9 BANK0      9     5      4
  1662 ;;                          _ser_putch
  1663 ;;                            ___awdiv (ARG)
  1664 ;; ---------------------------------------------------------------------------------
  1665 ;; (1) _robotLoadSong                                        0     0      0      22
  1666 ;;                          _ser_putch
  1667 ;; ---------------------------------------------------------------------------------
  1668 ;; (2) _robo_init                                            0     0      0      22
  1669 ;;                          _ser_putch
  1670 ;; ---------------------------------------------------------------------------------
  1671 ;; (4) _lcd_write_data                                       3     3      0      22
  1672 ;;                                              0 BANK0      3     3      0
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (4) _lcd_write_control                                    3     3      0      22
  1675 ;;                                              0 BANK0      3     3      0
  1676 ;; ---------------------------------------------------------------------------------
  1677 ;; (2) _init_adc                                             1     1      0       0
  1678 ;;                                              0 BANK0      1     1      0
  1679 ;; ---------------------------------------------------------------------------------
  1680 ;; (4) _adc_read_channel                                     2     2      0      46
  1681 ;;                                              6 BANK0      2     2      0
  1682 ;;                           _adc_read
  1683 ;; ---------------------------------------------------------------------------------
  1684 ;; (3) ___awmod                                              7     3      4     296
  1685 ;;                                              0 BANK0      7     3      4
  1686 ;; ---------------------------------------------------------------------------------
  1687 ;; (3) ___awdiv                                              9     5      4     300
  1688 ;;                                              0 BANK0      9     5      4
  1689 ;; ---------------------------------------------------------------------------------
  1690 ;; (4) ___lwmod                                              6     2      4     159
  1691 ;;                                             14 BANK0      6     2      4
  1692 ;;                            ___lwdiv (ARG)
  1693 ;; ---------------------------------------------------------------------------------
  1694 ;; (4) ___lwdiv                                              8     4      4     162
  1695 ;;                                              6 BANK0      8     4      4
  1696 ;;                             ___wmul (ARG)
  1697 ;; ---------------------------------------------------------------------------------
  1698 ;; (4) ___wmul                                               6     2      4      92
  1699 ;;                                              0 BANK0      6     2      4
  1700 ;; ---------------------------------------------------------------------------------
  1701 ;; (4) _isdigit                                              2     2      0      68
  1702 ;;                                              0 BANK0      2     2      0
  1703 ;; ---------------------------------------------------------------------------------
  1704 ;; (4) _ser_isrx                                             0     0      0       0
  1705 ;; ---------------------------------------------------------------------------------
  1706 ;; (3) _spi_transfer                                         3     3      0      30
  1707 ;;                                              0 BANK0      3     3      0
  1708 ;; ---------------------------------------------------------------------------------
  1709 ;; (3) _ser_putch                                            2     2      0      22
  1710 ;;                                              0 BANK0      2     2      0
  1711 ;; ---------------------------------------------------------------------------------
  1712 ;; (1) _Menu                                                 1     1      0      22
  1713 ;;                                              0 BANK0      1     1      0
  1714 ;; ---------------------------------------------------------------------------------
  1715 ;; (2) _ser_init                                             1     1      0       0
  1716 ;;                                              0 BANK0      1     1      0
  1717 ;; ---------------------------------------------------------------------------------
  1718 ;; (5) _adc_read                                             6     4      2      24
  1719 ;;                                              0 BANK0      6     4      2
  1720 ;; ---------------------------------------------------------------------------------
  1721 ;; Estimated maximum stack depth 5
  1722 ;; ---------------------------------------------------------------------------------
  1723 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1724 ;; ---------------------------------------------------------------------------------
  1725 ;; (6) _isr1                                                 5     5      0     521
  1726 ;;                                              6 COMMON     5     5      0
  1727 ;;                          i1___lwmod
  1728 ;;                        _ReadButtons
  1729 ;; ---------------------------------------------------------------------------------
  1730 ;; (7) _ReadButtons                                          0     0      0       0
  1731 ;;                           _Debounce
  1732 ;; ---------------------------------------------------------------------------------
  1733 ;; (7) i1___lwmod                                            6     2      4     521
  1734 ;;                                              0 COMMON     6     2      4
  1735 ;; ---------------------------------------------------------------------------------
  1736 ;; (8) _Debounce                                             1     1      0       0
  1737 ;;                                              0 COMMON     1     1      0
  1738 ;; ---------------------------------------------------------------------------------
  1739 ;; Estimated maximum stack depth 8
  1740 ;; ---------------------------------------------------------------------------------
  1741                           
  1742 ;; Call Graph Graphs:
  1743                           
  1744 ;; _main (ROOT)
  1745 ;;   _init
  1746 ;;     _ser_init
  1747 ;;     _init_adc
  1748 ;;     _lcd_init
  1749 ;;       _lcd_write_control
  1750 ;;     _robo_init
  1751 ;;       _ser_putch
  1752 ;;   _robotLoadSong
  1753 ;;     _ser_putch
  1754 ;;   _robot_read
  1755 ;;     _ser_putch
  1756 ;;     _ser_getch
  1757 ;;       _ser_isrx
  1758 ;;   _readAvgDistance
  1759 ;;     _readDistance
  1760 ;;       _adc_read_channel
  1761 ;;         _adc_read
  1762 ;;     ___lwdiv
  1763 ;;       ___wmul (ARG)
  1764 ;;     _ADCconvert
  1765 ;;       ___wmul
  1766 ;;       ___lwdiv
  1767 ;;         ___wmul (ARG)
  1768 ;;   _UpdateDisplay
  1769 ;;     _lcd_write_control
  1770 ;;     _sprintf
  1771 ;;       _isdigit
  1772 ;;       ___wmul
  1773 ;;       ___lwdiv
  1774 ;;         ___wmul (ARG)
  1775 ;;       ___lwmod
  1776 ;;         ___lwdiv (ARG)
  1777 ;;           ___wmul (ARG)
  1778 ;;     _lcd_set_cursor
  1779 ;;       _lcd_write_control
  1780 ;;     _lcd_write_string
  1781 ;;       _lcd_write_data
  1782 ;;       ___awmod (ARG)
  1783 ;;     ___awmod
  1784 ;;     ___awdiv
  1785 ;;   _Menu
  1786 ;;   _calibrateIR
  1787 ;;     _rotate
  1788 ;;       _spi_transfer
  1789 ;;     _UpdateDisplay
  1790 ;;       _lcd_write_control
  1791 ;;       _sprintf
  1792 ;;         _isdigit
  1793 ;;         ___wmul
  1794 ;;         ___lwdiv
  1795 ;;           ___wmul (ARG)
  1796 ;;         ___lwmod
  1797 ;;           ___lwdiv (ARG)
  1798 ;;             ___wmul (ARG)
  1799 ;;       _lcd_set_cursor
  1800 ;;         _lcd_write_control
  1801 ;;       _lcd_write_string
  1802 ;;         _lcd_write_data
  1803 ;;         ___awmod (ARG)
  1804 ;;       ___awmod
  1805 ;;       ___awdiv
  1806 ;;   _Init_Follow_IR
  1807 ;;     _calibrateIR
  1808 ;;       _rotate
  1809 ;;         _spi_transfer
  1810 ;;       _UpdateDisplay
  1811 ;;         _lcd_write_control
  1812 ;;         _sprintf
  1813 ;;           _isdigit
  1814 ;;           ___wmul
  1815 ;;           ___lwdiv
  1816 ;;             ___wmul (ARG)
  1817 ;;           ___lwmod
  1818 ;;             ___lwdiv (ARG)
  1819 ;;               ___wmul (ARG)
  1820 ;;         _lcd_set_cursor
  1821 ;;           _lcd_write_control
  1822 ;;         _lcd_write_string
  1823 ;;           _lcd_write_data
  1824 ;;           ___awmod (ARG)
  1825 ;;         ___awmod
  1826 ;;         ___awdiv
  1827 ;;     _rotate
  1828 ;;       _spi_transfer
  1829 ;;   _robotFollow
  1830 ;;     _RobotDrive
  1831 ;;       _ser_putch
  1832 ;;       ___awdiv (ARG)
  1833 ;;     _readAvgDistance
  1834 ;;       _readDistance
  1835 ;;         _adc_read_channel
  1836 ;;           _adc_read
  1837 ;;       ___lwdiv
  1838 ;;         ___wmul (ARG)
  1839 ;;       _ADCconvert
  1840 ;;         ___wmul
  1841 ;;         ___lwdiv
  1842 ;;           ___wmul (ARG)
  1843 ;;     _rotate
  1844 ;;       _spi_transfer
  1845 ;;     _robot_read
  1846 ;;       _ser_putch
  1847 ;;       _ser_getch
  1848 ;;         _ser_isrx
  1849 ;;     _UpdateDisplay
  1850 ;;       _lcd_write_control
  1851 ;;       _sprintf
  1852 ;;         _isdigit
  1853 ;;         ___wmul
  1854 ;;         ___lwdiv
  1855 ;;           ___wmul (ARG)
  1856 ;;         ___lwmod
  1857 ;;           ___lwdiv (ARG)
  1858 ;;             ___wmul (ARG)
  1859 ;;       _lcd_set_cursor
  1860 ;;         _lcd_write_control
  1861 ;;       _lcd_write_string
  1862 ;;         _lcd_write_data
  1863 ;;         ___awmod (ARG)
  1864 ;;       ___awmod
  1865 ;;       ___awdiv
  1866 ;;   _RobotDrive
  1867 ;;     _ser_putch
  1868 ;;     ___awdiv (ARG)
  1869 ;;   _robotTurnSpeed
  1870 ;;     _robotTurn
  1871 ;;       _ser_putch
  1872 ;;     _robot_read
  1873 ;;       _ser_putch
  1874 ;;       _ser_getch
  1875 ;;         _ser_isrx
  1876 ;;     _UpdateDisplay
  1877 ;;       _lcd_write_control
  1878 ;;       _sprintf
  1879 ;;         _isdigit
  1880 ;;         ___wmul
  1881 ;;         ___lwdiv
  1882 ;;           ___wmul (ARG)
  1883 ;;         ___lwmod
  1884 ;;           ___lwdiv (ARG)
  1885 ;;             ___wmul (ARG)
  1886 ;;       _lcd_set_cursor
  1887 ;;         _lcd_write_control
  1888 ;;       _lcd_write_string
  1889 ;;         _lcd_write_data
  1890 ;;         ___awmod (ARG)
  1891 ;;       ___awmod
  1892 ;;       ___awdiv
  1893 ;;     _abs
  1894 ;;       ___wmul
  1895 ;;   _robotMoveSpeed
  1896 ;;     _RobotDrive
  1897 ;;       _ser_putch
  1898 ;;       ___awdiv (ARG)
  1899 ;;     _robot_read
  1900 ;;       _ser_putch
  1901 ;;       _ser_getch
  1902 ;;         _ser_isrx
  1903 ;;     _UpdateDisplay
  1904 ;;       _lcd_write_control
  1905 ;;       _sprintf
  1906 ;;         _isdigit
  1907 ;;         ___wmul
  1908 ;;         ___lwdiv
  1909 ;;           ___wmul (ARG)
  1910 ;;         ___lwmod
  1911 ;;           ___lwdiv (ARG)
  1912 ;;             ___wmul (ARG)
  1913 ;;       _lcd_set_cursor
  1914 ;;         _lcd_write_control
  1915 ;;       _lcd_write_string
  1916 ;;         _lcd_write_data
  1917 ;;         ___awmod (ARG)
  1918 ;;       ___awmod
  1919 ;;       ___awdiv
  1920 ;;     _abs
  1921 ;;       ___wmul
  1922 ;;   _ser_putch
  1923 ;;   _robot_turnLeft
  1924 ;;     _robotTurnSpeed
  1925 ;;       _robotTurn
  1926 ;;         _ser_putch
  1927 ;;       _robot_read
  1928 ;;         _ser_putch
  1929 ;;         _ser_getch
  1930 ;;           _ser_isrx
  1931 ;;       _UpdateDisplay
  1932 ;;         _lcd_write_control
  1933 ;;         _sprintf
  1934 ;;           _isdigit
  1935 ;;           ___wmul
  1936 ;;           ___lwdiv
  1937 ;;             ___wmul (ARG)
  1938 ;;           ___lwmod
  1939 ;;             ___lwdiv (ARG)
  1940 ;;               ___wmul (ARG)
  1941 ;;         _lcd_set_cursor
  1942 ;;           _lcd_write_control
  1943 ;;         _lcd_write_string
  1944 ;;           _lcd_write_data
  1945 ;;           ___awmod (ARG)
  1946 ;;         ___awmod
  1947 ;;         ___awdiv
  1948 ;;       _abs
  1949 ;;         ___wmul
  1950 ;;   _robot_turnRight
  1951 ;;     _RobotDrive
  1952 ;;       _ser_putch
  1953 ;;       ___awdiv (ARG)
  1954 ;;     _rotate
  1955 ;;       _spi_transfer
  1956 ;;     _readAvgDistance
  1957 ;;       _readDistance
  1958 ;;         _adc_read_channel
  1959 ;;           _adc_read
  1960 ;;       ___lwdiv
  1961 ;;         ___wmul (ARG)
  1962 ;;       _ADCconvert
  1963 ;;         ___wmul
  1964 ;;         ___lwdiv
  1965 ;;           ___wmul (ARG)
  1966 ;;     _robot_read
  1967 ;;       _ser_putch
  1968 ;;       _ser_getch
  1969 ;;         _ser_isrx
  1970 ;;     _UpdateDisplay
  1971 ;;       _lcd_write_control
  1972 ;;       _sprintf
  1973 ;;         _isdigit
  1974 ;;         ___wmul
  1975 ;;         ___lwdiv
  1976 ;;           ___wmul (ARG)
  1977 ;;         ___lwmod
  1978 ;;           ___lwdiv (ARG)
  1979 ;;             ___wmul (ARG)
  1980 ;;       _lcd_set_cursor
  1981 ;;         _lcd_write_control
  1982 ;;       _lcd_write_string
  1983 ;;         _lcd_write_data
  1984 ;;         ___awmod (ARG)
  1985 ;;       ___awmod
  1986 ;;       ___awdiv
  1987 ;;     ___awdiv
  1988 ;;     _abs
  1989 ;;       ___wmul
  1990 ;;   _ChargeMode
  1991 ;;     _ser_putch
  1992 ;;     _RobotBattRead
  1993 ;;       _ser_putch
  1994 ;;       _ser_getch
  1995 ;;         _ser_isrx
  1996 ;;     _UpdateDisplay
  1997 ;;       _lcd_write_control
  1998 ;;       _sprintf
  1999 ;;         _isdigit
  2000 ;;         ___wmul
  2001 ;;         ___lwdiv
  2002 ;;           ___wmul (ARG)
  2003 ;;         ___lwmod
  2004 ;;           ___lwdiv (ARG)
  2005 ;;             ___wmul (ARG)
  2006 ;;       _lcd_set_cursor
  2007 ;;         _lcd_write_control
  2008 ;;       _lcd_write_string
  2009 ;;         _lcd_write_data
  2010 ;;         ___awmod (ARG)
  2011 ;;       ___awmod
  2012 ;;       ___awdiv
  2013 ;;
  2014 ;; _isr1 (ROOT)
  2015 ;;   i1___lwmod
  2016 ;;   _ReadButtons
  2017 ;;     _Debounce
  2018 ;;
  2019                           
  2020 ;; Address spaces:
  2021                           
  2022 ;;Name               Size   Autos  Total    Cost      Usage
  2023 ;;BANK3               60      0      30       9       50.0%
  2024 ;;BITBANK3            60      0       0       8        0.0%
  2025 ;;SFR3                 0      0       0       4        0.0%
  2026 ;;BITSFR3              0      0       0       4        0.0%
  2027 ;;BANK2               60      0       0      11        0.0%
  2028 ;;BITBANK2            60      0       0      10        0.0%
  2029 ;;SFR2                 0      0       0       5        0.0%
  2030 ;;BITSFR2              0      0       0       5        0.0%
  2031 ;;SFR1                 0      0       0       2        0.0%
  2032 ;;BITSFR1              0      0       0       2        0.0%
  2033 ;;BANK1               50      0      44       7       85.0%
  2034 ;;BITBANK1            50      0       0       6        0.0%
  2035 ;;CODE                 0      0       0       0        0.0%
  2036 ;;DATA                 0      0      DD      12        0.0%
  2037 ;;ABS                  0      0      D2       3        0.0%
  2038 ;;NULL                 0      0       0       0        0.0%
  2039 ;;STACK                0      0       B       2        0.0%
  2040 ;;BANK0               50     50      50       5      100.0%
  2041 ;;BITBANK0            50      0       0       4        0.0%
  2042 ;;SFR0                 0      0       0       1        0.0%
  2043 ;;BITSFR0              0      0       0       1        0.0%
  2044 ;;COMMON               E      B       E       1      100.0%
  2045 ;;BITCOMMON            E      0       2       0       14.3%
  2046 ;;EEDATA             100      0       0       0        0.0%
  2047                           
  2048                           	global	_main
  2049                           psect	maintext,global,class=CODE,delta=2
  2050                           global __pmaintext
  2051  0D8D                     __pmaintext:
  2052                           
  2053 ;; *************** function _main *****************
  2054 ;; Defined at:
  2055 ;;		line 170 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  shortwall       2   76[BANK0 ] int 
  2060 ;;  currentFlw      1   79[BANK0 ] unsigned char 
  2061 ;;  choice          1   78[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 17F/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0       4       0       0       0
  2073 ;;      Temps:          0       3       0       0       0
  2074 ;;      Totals:         0       7       0       0       0
  2075 ;;Total ram usage:        7 bytes
  2076 ;; Hardware stack levels required when called:    8
  2077 ;; This function calls:
  2078 ;;		_init
  2079 ;;		_robotLoadSong
  2080 ;;		_robot_read
  2081 ;;		_readAvgDistance
  2082 ;;		_UpdateDisplay
  2083 ;;		_Menu
  2084 ;;		_calibrateIR
  2085 ;;		_Init_Follow_IR
  2086 ;;		_robotFollow
  2087 ;;		_RobotDrive
  2088 ;;		_robotTurnSpeed
  2089 ;;		_robotMoveSpeed
  2090 ;;		_ser_putch
  2091 ;;		_robot_turnLeft
  2092 ;;		_robot_turnRight
  2093 ;;		_ChargeMode
  2094 ;; This function is called by:
  2095 ;;		Startup code after reset
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           psect	maintext
  2099                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2100                           	line	170
  2101                           	global	__size_of_main
  2102  0273                     	__size_of_main	equ	__end_of_main-_main
  2103                           	
  2104  0D8D                     _main:	
  2105                           	opt	stack 0
  2106                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2107                           	line	171
  2108                           	
  2109  0D8D                     l12155:	
  2110                           ;Main.c: 171: unsigned char choice = 255;
  2111  0D8D  30FF               	movlw	(0FFh)
  2112  0D8E  1283               	bcf	status, 5	;RP0=0, select bank0
  2113  0D8F  1303               	bcf	status, 6	;RP1=0, select bank0
  2114  0D90  00E9               	movwf	(??_main+0)+0
  2115  0D91  0869               	movf	(??_main+0)+0,w
  2116  0D92  00EE               	movwf	(main@choice)
  2117                           	line	172
  2118                           	
  2119  0D93                     l12157:	
  2120                           ;Main.c: 172: int shortwall = 0;
  2121  0D93  01EC               	clrf	(main@shortwall)
  2122  0D94  01ED               	clrf	(main@shortwall+1)
  2123                           	line	173
  2124                           	
  2125  0D95                     l12159:	
  2126                           ;Main.c: 173: unsigned char currentFlw = 0;
  2127  0D95  01EF               	clrf	(main@currentFlw)
  2128                           	line	174
  2129                           	
  2130  0D96                     l12161:	
  2131                           ;Main.c: 174: RobotPos = 0;
  2132  0D96  1683               	bsf	status, 5	;RP0=1, select bank1
  2133  0D97  1303               	bcf	status, 6	;RP1=0, select bank1
  2134  0D98  01C8               	clrf	(_RobotPos)^080h
  2135                           	line	175
  2136                           	
  2137  0D99                     l12163:	
  2138                           ;Main.c: 175: currentMenu = 0;
  2139  0D99  01CD               	clrf	(_currentMenu)^080h	;volatile
  2140                           	line	177
  2141                           	
  2142  0D9A                     l12165:	
  2143                           ;Main.c: 177: init();
  2144  0D9A  160A  158A  2549   	fcall	_init
              120A  158A         
  2145                           	line	178
  2146                           	
  2147  0D9F                     l12167:	
  2148                           ;Main.c: 178: robotLoadSong();
  2149  0D9F  160A  158A  274B   	fcall	_robotLoadSong
              120A  158A         
  2150  0DA4  2DA5               	goto	l12169
  2151                           	line	180
  2152                           ;Main.c: 180: while(1)
  2153                           	
  2154  0DA5                     l2254:	
  2155                           	line	182
  2156                           	
  2157  0DA5                     l12169:	
  2158                           ;Main.c: 181: {
  2159                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  2160  0DA5  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2161  0DA6  2DA8               	goto	u5521
  2162  0DA7  2DA9               	goto	u5520
  2163  0DA8                     u5521:
  2164  0DA8  2DCC               	goto	l12181
  2165  0DA9                     u5520:
  2166                           	line	184
  2167                           	
  2168  0DA9                     l12171:	
  2169                           ;Main.c: 183: {
  2170                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  2171  0DA9  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2172                           	line	185
  2173                           	
  2174  0DAA                     l12173:	
  2175                           ;Main.c: 185: robot_read(2);
  2176  0DAA  3002               	movlw	(02h)
  2177  0DAB  120A  118A  26A0   	fcall	_robot_read
              120A  158A         
  2178                           	line	186
  2179                           	
  2180  0DB0                     l12175:	
  2181                           ;Main.c: 186: readAvgDistance();
  2182  0DB0  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  2183                           	line	187
  2184                           	
  2185  0DB5                     l12177:	
  2186                           ;Main.c: 187: Disp2 = RobotPos;
  2187  0DB5  1683               	bsf	status, 5	;RP0=1, select bank1
  2188  0DB6  1303               	bcf	status, 6	;RP1=0, select bank1
  2189  0DB7  0848               	movf	(_RobotPos)^080h,w
  2190  0DB8  1283               	bcf	status, 5	;RP0=0, select bank0
  2191  0DB9  1303               	bcf	status, 6	;RP1=0, select bank0
  2192  0DBA  00E9               	movwf	(??_main+0)+0
  2193  0DBB  01EA               	clrf	(??_main+0)+0+1
  2194  0DBC  0869               	movf	0+(??_main+0)+0,w
  2195  0DBD  1683               	bsf	status, 5	;RP0=1, select bank1
  2196  0DBE  1303               	bcf	status, 6	;RP1=0, select bank1
  2197  0DBF  00A6               	movwf	(_Disp2)^080h
  2198  0DC0  1283               	bcf	status, 5	;RP0=0, select bank0
  2199  0DC1  1303               	bcf	status, 6	;RP1=0, select bank0
  2200  0DC2  086A               	movf	1+(??_main+0)+0,w
  2201  0DC3  1683               	bsf	status, 5	;RP0=1, select bank1
  2202  0DC4  1303               	bcf	status, 6	;RP1=0, select bank1
  2203  0DC5  00A7               	movwf	(_Disp2+1)^080h
  2204                           	line	188
  2205                           	
  2206  0DC6                     l12179:	
  2207                           ;Main.c: 188: UpdateDisplay();
  2208  0DC6  120A  118A  241B   	fcall	_UpdateDisplay
              120A  158A         
  2209  0DCB  2DCC               	goto	l12181
  2210                           	line	189
  2211                           	
  2212  0DCC                     l2255:	
  2213                           	line	190
  2214                           	
  2215  0DCC                     l12181:	
  2216                           ;Main.c: 189: }
  2217                           ;Main.c: 190: if (buttonPressed)
  2218  0DCC  1683               	bsf	status, 5	;RP0=1, select bank1
  2219  0DCD  1303               	bcf	status, 6	;RP1=0, select bank1
  2220  0DCE  084C               	movf	(_buttonPressed)^080h,w	;volatile
  2221  0DCF  1D03               	skipz
  2222  0DD0  2DD2               	goto	u5530
  2223  0DD1  2FDF               	goto	l12263
  2224  0DD2                     u5530:
  2225                           	line	193
  2226                           	
  2227  0DD2                     l12183:	
  2228                           ;Main.c: 192: {
  2229                           ;Main.c: 193: choice = Menu(buttonPressed);
  2230  0DD2  084C               	movf	(_buttonPressed)^080h,w	;volatile
  2231  0DD3  160A  158A  2667   	fcall	_Menu
              120A  158A         
  2232  0DD8  1283               	bcf	status, 5	;RP0=0, select bank0
  2233  0DD9  1303               	bcf	status, 6	;RP1=0, select bank0
  2234  0DDA  00E9               	movwf	(??_main+0)+0
  2235  0DDB  0869               	movf	(??_main+0)+0,w
  2236  0DDC  00EE               	movwf	(main@choice)
  2237                           	line	194
  2238                           	
  2239  0DDD                     l12185:	
  2240                           ;Main.c: 194: buttonPressed = 0;
  2241  0DDD  1683               	bsf	status, 5	;RP0=1, select bank1
  2242  0DDE  1303               	bcf	status, 6	;RP1=0, select bank1
  2243  0DDF  01CC               	clrf	(_buttonPressed)^080h	;volatile
  2244  0DE0  2FDF               	goto	l12263
  2245                           	line	195
  2246                           	
  2247  0DE1                     l2256:	
  2248                           	line	199
  2249                           ;Main.c: 195: }
  2250                           ;Main.c: 199: switch (choice)
  2251  0DE1  2FDF               	goto	l12263
  2252                           	line	201
  2253                           ;Main.c: 200: {
  2254                           ;Main.c: 201: case 0:
  2255                           	
  2256  0DE2                     l2258:	
  2257                           	line	202
  2258                           	
  2259  0DE2                     l12187:	
  2260                           ;Main.c: 202: calibrateIR();
  2261  0DE2  160A  118A  2112   	fcall	_calibrateIR
              120A  158A         
  2262                           	line	203
  2263                           ;Main.c: 203: break;
  2264  0DE7  2FF5               	goto	l12265
  2265                           	line	204
  2266                           ;Main.c: 204: case 1:
  2267                           	
  2268  0DE8                     l2260:	
  2269                           	line	205
  2270                           ;Main.c: 205: RobotPos = 0;
  2271  0DE8  1683               	bsf	status, 5	;RP0=1, select bank1
  2272  0DE9  1303               	bcf	status, 6	;RP1=0, select bank1
  2273  0DEA  01C8               	clrf	(_RobotPos)^080h
  2274                           	line	207
  2275                           ;Main.c: 207: break;
  2276  0DEB  2FF5               	goto	l12265
  2277                           	line	208
  2278                           ;Main.c: 208: case 2:
  2279                           	
  2280  0DEC                     l2261:	
  2281                           	line	209
  2282                           	
  2283  0DEC                     l12189:	
  2284                           ;Main.c: 209: RobotPos = 6;
  2285  0DEC  3006               	movlw	(06h)
  2286  0DED  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  0DEE  00E9               	movwf	(??_main+0)+0
  2288  0DEF  0869               	movf	(??_main+0)+0,w
  2289  0DF0  1683               	bsf	status, 5	;RP0=1, select bank1
  2290  0DF1  1303               	bcf	status, 6	;RP1=0, select bank1
  2291  0DF2  00C8               	movwf	(_RobotPos)^080h
  2292                           	line	211
  2293                           ;Main.c: 211: break;
  2294  0DF3  2FF5               	goto	l12265
  2295                           	line	212
  2296                           ;Main.c: 212: case 3:
  2297                           	
  2298  0DF4                     l2262:	
  2299                           	line	214
  2300                           	
  2301  0DF4                     l12191:	
  2302                           ;Main.c: 214: RobotPos = 9;
  2303  0DF4  3009               	movlw	(09h)
  2304  0DF5  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  0DF6  00E9               	movwf	(??_main+0)+0
  2306  0DF7  0869               	movf	(??_main+0)+0,w
  2307  0DF8  1683               	bsf	status, 5	;RP0=1, select bank1
  2308  0DF9  1303               	bcf	status, 6	;RP1=0, select bank1
  2309  0DFA  00C8               	movwf	(_RobotPos)^080h
  2310                           	line	215
  2311                           ;Main.c: 215: break;
  2312  0DFB  2FF5               	goto	l12265
  2313                           	line	216
  2314                           ;Main.c: 216: case 4:
  2315                           	
  2316  0DFC                     l2263:	
  2317                           	line	220
  2318                           	
  2319  0DFC                     l12193:	
  2320                           ;Main.c: 220: Init_Follow_IR();
  2321  0DFC  160A  158A  23D2   	fcall	_Init_Follow_IR
              120A  158A         
  2322                           	line	221
  2323                           	
  2324  0E01                     l12195:	
  2325                           ;Main.c: 221: currentMenu = 3;
  2326  0E01  3003               	movlw	(03h)
  2327  0E02  1283               	bcf	status, 5	;RP0=0, select bank0
  2328  0E03  1303               	bcf	status, 6	;RP1=0, select bank0
  2329  0E04  00E9               	movwf	(??_main+0)+0
  2330  0E05  0869               	movf	(??_main+0)+0,w
  2331  0E06  1683               	bsf	status, 5	;RP0=1, select bank1
  2332  0E07  1303               	bcf	status, 6	;RP1=0, select bank1
  2333  0E08  00CD               	movwf	(_currentMenu)^080h	;volatile
  2334                           	line	222
  2335                           ;Main.c: 222: while (ROBOTerror != 9)
  2336  0E09  2FCD               	goto	l12257
  2337                           	
  2338  0E0A                     l2265:	
  2339                           	line	225
  2340                           ;Main.c: 223: {
  2341                           ;Main.c: 225: switch (ROBOTerror)
  2342  0E0A  2FB0               	goto	l12255
  2343                           	line	227
  2344                           ;Main.c: 226: {
  2345                           ;Main.c: 227: case 0:
  2346                           	
  2347  0E0B                     l2267:	
  2348                           	line	229
  2349                           	
  2350  0E0B                     l12197:	
  2351                           ;Main.c: 229: readAvgDistance();
  2352  0E0B  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  2353                           	line	230
  2354                           ;Main.c: 230: robotFollow(200, adcVal, currentFlw);
  2355  0E10  30C8               	movlw	low(0C8h)
  2356  0E11  1283               	bcf	status, 5	;RP0=0, select bank0
  2357  0E12  1303               	bcf	status, 6	;RP1=0, select bank0
  2358  0E13  00DD               	movwf	(?_robotFollow)
  2359  0E14  3000               	movlw	high(0C8h)
  2360  0E15  00DE               	movwf	((?_robotFollow))+1
  2361  0E16  1683               	bsf	status, 5	;RP0=1, select bank1
  2362  0E17  1303               	bcf	status, 6	;RP1=0, select bank1
  2363  0E18  082F               	movf	(_adcVal+1)^080h,w	;volatile
  2364  0E19  1283               	bcf	status, 5	;RP0=0, select bank0
  2365  0E1A  1303               	bcf	status, 6	;RP1=0, select bank0
  2366  0E1B  01E0               	clrf	1+(?_robotFollow)+02h
  2367  0E1C  07E0               	addwf	1+(?_robotFollow)+02h
  2368  0E1D  1683               	bsf	status, 5	;RP0=1, select bank1
  2369  0E1E  1303               	bcf	status, 6	;RP1=0, select bank1
  2370  0E1F  082E               	movf	(_adcVal)^080h,w	;volatile
  2371  0E20  1283               	bcf	status, 5	;RP0=0, select bank0
  2372  0E21  1303               	bcf	status, 6	;RP1=0, select bank0
  2373  0E22  01DF               	clrf	0+(?_robotFollow)+02h
  2374  0E23  07DF               	addwf	0+(?_robotFollow)+02h
  2375                           
  2376  0E24  086F               	movf	(main@currentFlw),w
  2377  0E25  00E9               	movwf	(??_main+0)+0
  2378  0E26  0869               	movf	(??_main+0)+0,w
  2379  0E27  00E1               	movwf	0+(?_robotFollow)+04h
  2380  0E28  120A  158A  20EC   	fcall	_robotFollow
              120A  158A         
  2381                           	line	231
  2382                           ;Main.c: 231: break;
  2383  0E2D  2FCD               	goto	l12257
  2384                           	line	232
  2385                           ;Main.c: 232: case 1:
  2386                           	
  2387  0E2E                     l2269:	
  2388                           	line	233
  2389                           	
  2390  0E2E                     l12199:	
  2391                           ;Main.c: 233: if (RobotPos == 10)
  2392  0E2E  1683               	bsf	status, 5	;RP0=1, select bank1
  2393  0E2F  1303               	bcf	status, 6	;RP1=0, select bank1
  2394  0E30  0848               	movf	(_RobotPos)^080h,w
  2395  0E31  3A0A               	xorlw	0Ah
  2396  0E32  1D03               	skipz
  2397  0E33  2E35               	goto	u5541
  2398  0E34  2E36               	goto	u5540
  2399  0E35                     u5541:
  2400  0E35  2E7E               	goto	l12211
  2401  0E36                     u5540:
  2402                           	line	235
  2403                           	
  2404  0E36                     l12201:	
  2405                           ;Main.c: 234: {
  2406                           ;Main.c: 235: RobotDrive(-200, 0x7FFF);
  2407  0E36  3038               	movlw	low(-200)
  2408  0E37  1283               	bcf	status, 5	;RP0=0, select bank0
  2409  0E38  1303               	bcf	status, 6	;RP1=0, select bank0
  2410  0E39  00A9               	movwf	(?_RobotDrive)
  2411  0E3A  30FF               	movlw	high(-200)
  2412  0E3B  00AA               	movwf	((?_RobotDrive))+1
  2413  0E3C  30FF               	movlw	low(07FFFh)
  2414  0E3D  00AB               	movwf	0+(?_RobotDrive)+02h
  2415  0E3E  307F               	movlw	high(07FFFh)
  2416  0E3F  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  2417  0E40  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  2418                           	line	236
  2419                           	
  2420  0E45                     l12203:	
  2421                           ;Main.c: 236: _delay((unsigned long)((200)*(20000000/4000.0)));
  2422                           	opt asmopt_off
  2423  0E45  3006               movlw  6
  2424  0E46  1283               	bcf	status, 5	;RP0=0, select bank0
  2425  0E47  1303               	bcf	status, 6	;RP1=0, select bank0
  2426  0E48  00EB               movwf	((??_main+0)+0+2),f
  2427  0E49  3013               movlw	19
  2428  0E4A  00EA               movwf	((??_main+0)+0+1),f
  2429  0E4B  30B1               	movlw	177
  2430  0E4C  00E9               movwf	((??_main+0)+0),f
  2431  0E4D                     u5567:
  2432  0E4D  0BE9               	decfsz	((??_main+0)+0),f
  2433  0E4E  2E4D               	goto	u5567
  2434  0E4F  0BEA               	decfsz	((??_main+0)+0+1),f
  2435  0E50  2E4D               	goto	u5567
  2436  0E51  0BEB               	decfsz	((??_main+0)+0+2),f
  2437  0E52  2E4D               	goto	u5567
  2438  0E53  2E54               	nop2
  2439                           opt asmopt_on
  2440                           
  2441                           	line	237
  2442                           	
  2443  0E54                     l12205:	
  2444                           ;Main.c: 237: RobotPos++;
  2445  0E54  3001               	movlw	(01h)
  2446  0E55  1283               	bcf	status, 5	;RP0=0, select bank0
  2447  0E56  1303               	bcf	status, 6	;RP1=0, select bank0
  2448  0E57  00E9               	movwf	(??_main+0)+0
  2449  0E58  0869               	movf	(??_main+0)+0,w
  2450  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  2451  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  2452  0E5B  07C8               	addwf	(_RobotPos)^080h,f
  2453                           	line	238
  2454                           	
  2455  0E5C                     l12207:	
  2456                           ;Main.c: 238: ROBOTerror = 0;
  2457  0E5C  01C6               	clrf	(_ROBOTerror)^080h
  2458                           	line	239
  2459                           	
  2460  0E5D                     l12209:	
  2461                           ;Main.c: 239: robotTurnSpeed((-(angleTurned - 75)),400);
  2462  0E5D  0830               	movf	(_angleTurned)^080h,w
  2463  0E5E  3EB5               	addlw	low(-75)
  2464  0E5F  1283               	bcf	status, 5	;RP0=0, select bank0
  2465  0E60  1303               	bcf	status, 6	;RP1=0, select bank0
  2466  0E61  00E9               	movwf	(??_main+0)+0
  2467  0E62  1683               	bsf	status, 5	;RP0=1, select bank1
  2468  0E63  1303               	bcf	status, 6	;RP1=0, select bank1
  2469  0E64  0831               	movf	(_angleTurned+1)^080h,w
  2470  0E65  1803               	skipnc
  2471  0E66  3E01               	addlw	1
  2472  0E67  3EFF               	addlw	high(-75)
  2473  0E68  1283               	bcf	status, 5	;RP0=0, select bank0
  2474  0E69  1303               	bcf	status, 6	;RP1=0, select bank0
  2475  0E6A  00EA               	movwf	1+(??_main+0)+0
  2476  0E6B  09E9               	comf	(??_main+0)+0,f
  2477  0E6C  09EA               	comf	(??_main+0)+1,f
  2478  0E6D  0AE9               	incf	(??_main+0)+0,f
  2479  0E6E  1903               	skipnz
  2480  0E6F  0AEA               	incf	(??_main+0)+1,f
  2481  0E70  0869               	movf	0+(??_main+0)+0,w
  2482  0E71  00DD               	movwf	(?_robotTurnSpeed)
  2483  0E72  086A               	movf	1+(??_main+0)+0,w
  2484  0E73  00DE               	movwf	(?_robotTurnSpeed+1)
  2485  0E74  3090               	movlw	low(0190h)
  2486  0E75  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  2487  0E76  3001               	movlw	high(0190h)
  2488  0E77  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2489  0E78  160A  118A  240B   	fcall	_robotTurnSpeed
              120A  158A         
  2490                           	line	240
  2491                           ;Main.c: 240: }
  2492  0E7D  2FCD               	goto	l12257
  2493                           	line	241
  2494                           	
  2495  0E7E                     l2270:	
  2496                           	line	242
  2497                           	
  2498  0E7E                     l12211:	
  2499                           ;Main.c: 241: else
  2500                           ;Main.c: 242: ROBOTerror = 9;
  2501  0E7E  3009               	movlw	(09h)
  2502  0E7F  1283               	bcf	status, 5	;RP0=0, select bank0
  2503  0E80  1303               	bcf	status, 6	;RP1=0, select bank0
  2504  0E81  00E9               	movwf	(??_main+0)+0
  2505  0E82  0869               	movf	(??_main+0)+0,w
  2506  0E83  1683               	bsf	status, 5	;RP0=1, select bank1
  2507  0E84  1303               	bcf	status, 6	;RP1=0, select bank1
  2508  0E85  00C6               	movwf	(_ROBOTerror)^080h
  2509  0E86  2FCD               	goto	l12257
  2510                           	
  2511  0E87                     l2271:	
  2512                           	line	243
  2513                           ;Main.c: 243: break;
  2514  0E87  2FCD               	goto	l12257
  2515                           	line	244
  2516                           ;Main.c: 244: case 2:
  2517                           	
  2518  0E88                     l2272:	
  2519                           	line	245
  2520                           	
  2521  0E88                     l12213:	
  2522                           ;Main.c: 245: ROBOTerror = 9;
  2523  0E88  3009               	movlw	(09h)
  2524  0E89  1283               	bcf	status, 5	;RP0=0, select bank0
  2525  0E8A  1303               	bcf	status, 6	;RP1=0, select bank0
  2526  0E8B  00E9               	movwf	(??_main+0)+0
  2527  0E8C  0869               	movf	(??_main+0)+0,w
  2528  0E8D  1683               	bsf	status, 5	;RP0=1, select bank1
  2529  0E8E  1303               	bcf	status, 6	;RP1=0, select bank1
  2530  0E8F  00C6               	movwf	(_ROBOTerror)^080h
  2531                           	line	246
  2532                           ;Main.c: 246: break;
  2533  0E90  2FCD               	goto	l12257
  2534                           	line	247
  2535                           ;Main.c: 247: case 3:
  2536                           	
  2537  0E91                     l2273:	
  2538                           	line	248
  2539                           	
  2540  0E91                     l12215:	
  2541                           ;Main.c: 248: RobotPos++;
  2542  0E91  3001               	movlw	(01h)
  2543  0E92  1283               	bcf	status, 5	;RP0=0, select bank0
  2544  0E93  1303               	bcf	status, 6	;RP1=0, select bank0
  2545  0E94  00E9               	movwf	(??_main+0)+0
  2546  0E95  0869               	movf	(??_main+0)+0,w
  2547  0E96  1683               	bsf	status, 5	;RP0=1, select bank1
  2548  0E97  1303               	bcf	status, 6	;RP1=0, select bank1
  2549  0E98  07C8               	addwf	(_RobotPos)^080h,f
  2550                           	line	249
  2551                           	
  2552  0E99                     l12217:	
  2553                           ;Main.c: 249: ROBOTerror = 0;
  2554  0E99  01C6               	clrf	(_ROBOTerror)^080h
  2555                           	line	251
  2556                           	
  2557  0E9A                     l12219:	
  2558                           ;Main.c: 251: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2559                           	opt asmopt_off
  2560  0E9A  301A               movlw  26
  2561  0E9B  1283               	bcf	status, 5	;RP0=0, select bank0
  2562  0E9C  1303               	bcf	status, 6	;RP1=0, select bank0
  2563  0E9D  00EB               movwf	((??_main+0)+0+2),f
  2564  0E9E  305E               movlw	94
  2565  0E9F  00EA               movwf	((??_main+0)+0+1),f
  2566  0EA0  3086               	movlw	134
  2567  0EA1  00E9               movwf	((??_main+0)+0),f
  2568  0EA2                     u5577:
  2569  0EA2  0BE9               	decfsz	((??_main+0)+0),f
  2570  0EA3  2EA2               	goto	u5577
  2571  0EA4  0BEA               	decfsz	((??_main+0)+0+1),f
  2572  0EA5  2EA2               	goto	u5577
  2573  0EA6  0BEB               	decfsz	((??_main+0)+0+2),f
  2574  0EA7  2EA2               	goto	u5577
  2575  0EA8  0064               	clrwdt
  2576                           opt asmopt_on
  2577                           
  2578                           	line	252
  2579                           	
  2580  0EA9                     l12221:	
  2581                           ;Main.c: 252: robotMoveSpeed(-200,-200);
  2582  0EA9  3038               	movlw	low(-200)
  2583  0EAA  1283               	bcf	status, 5	;RP0=0, select bank0
  2584  0EAB  1303               	bcf	status, 6	;RP1=0, select bank0
  2585  0EAC  00DD               	movwf	(?_robotMoveSpeed)
  2586  0EAD  30FF               	movlw	high(-200)
  2587  0EAE  00DE               	movwf	((?_robotMoveSpeed))+1
  2588  0EAF  3038               	movlw	low(-200)
  2589  0EB0  00DF               	movwf	0+(?_robotMoveSpeed)+02h
  2590  0EB1  30FF               	movlw	high(-200)
  2591  0EB2  00E0               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2592  0EB3  160A  118A  2559   	fcall	_robotMoveSpeed
              120A  158A         
  2593                           	line	253
  2594                           	
  2595  0EB8                     l12223:	
  2596                           ;Main.c: 253: robotTurnSpeed((-angleTurned-10),400);
  2597  0EB8  1683               	bsf	status, 5	;RP0=1, select bank1
  2598  0EB9  1303               	bcf	status, 6	;RP1=0, select bank1
  2599  0EBA  0830               	movf	(_angleTurned)^080h,w
  2600  0EBB  3E0A               	addlw	low(0Ah)
  2601  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  0EBE  00E9               	movwf	(??_main+0)+0
  2604  0EBF  1683               	bsf	status, 5	;RP0=1, select bank1
  2605  0EC0  1303               	bcf	status, 6	;RP1=0, select bank1
  2606  0EC1  0831               	movf	(_angleTurned+1)^080h,w
  2607  0EC2  1803               	skipnc
  2608  0EC3  3E01               	addlw	1
  2609  0EC4  3E00               	addlw	high(0Ah)
  2610  0EC5  1283               	bcf	status, 5	;RP0=0, select bank0
  2611  0EC6  1303               	bcf	status, 6	;RP1=0, select bank0
  2612  0EC7  00EA               	movwf	1+(??_main+0)+0
  2613  0EC8  09E9               	comf	(??_main+0)+0,f
  2614  0EC9  09EA               	comf	(??_main+0)+1,f
  2615  0ECA  0AE9               	incf	(??_main+0)+0,f
  2616  0ECB  1903               	skipnz
  2617  0ECC  0AEA               	incf	(??_main+0)+1,f
  2618  0ECD  0869               	movf	0+(??_main+0)+0,w
  2619  0ECE  00DD               	movwf	(?_robotTurnSpeed)
  2620  0ECF  086A               	movf	1+(??_main+0)+0,w
  2621  0ED0  00DE               	movwf	(?_robotTurnSpeed+1)
  2622  0ED1  3090               	movlw	low(0190h)
  2623  0ED2  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  2624  0ED3  3001               	movlw	high(0190h)
  2625  0ED4  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2626  0ED5  160A  118A  240B   	fcall	_robotTurnSpeed
              120A  158A         
  2627                           	line	254
  2628                           	
  2629  0EDA                     l12225:	
  2630                           ;Main.c: 254: robotMoveSpeed(250,200);
  2631  0EDA  30FA               	movlw	low(0FAh)
  2632  0EDB  1283               	bcf	status, 5	;RP0=0, select bank0
  2633  0EDC  1303               	bcf	status, 6	;RP1=0, select bank0
  2634  0EDD  00DD               	movwf	(?_robotMoveSpeed)
  2635  0EDE  3000               	movlw	high(0FAh)
  2636  0EDF  00DE               	movwf	((?_robotMoveSpeed))+1
  2637  0EE0  30C8               	movlw	low(0C8h)
  2638  0EE1  00DF               	movwf	0+(?_robotMoveSpeed)+02h
  2639  0EE2  3000               	movlw	high(0C8h)
  2640  0EE3  00E0               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2641  0EE4  160A  118A  2559   	fcall	_robotMoveSpeed
              120A  158A         
  2642                           	line	255
  2643                           	
  2644  0EE9                     l12227:	
  2645                           ;Main.c: 255: readAvgDistance();
  2646  0EE9  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  2647                           	line	256
  2648                           	
  2649  0EEE                     l12229:	
  2650                           ;Main.c: 256: robotFollow(200, adcVal - 10, currentFlw);
  2651  0EEE  30C8               	movlw	low(0C8h)
  2652  0EEF  1283               	bcf	status, 5	;RP0=0, select bank0
  2653  0EF0  1303               	bcf	status, 6	;RP1=0, select bank0
  2654  0EF1  00DD               	movwf	(?_robotFollow)
  2655  0EF2  3000               	movlw	high(0C8h)
  2656  0EF3  00DE               	movwf	((?_robotFollow))+1
  2657  0EF4  1683               	bsf	status, 5	;RP0=1, select bank1
  2658  0EF5  1303               	bcf	status, 6	;RP1=0, select bank1
  2659  0EF6  082E               	movf	(_adcVal)^080h,w	;volatile
  2660  0EF7  3EF6               	addlw	low(-10)
  2661  0EF8  1283               	bcf	status, 5	;RP0=0, select bank0
  2662  0EF9  1303               	bcf	status, 6	;RP1=0, select bank0
  2663  0EFA  00DF               	movwf	0+(?_robotFollow)+02h
  2664  0EFB  1683               	bsf	status, 5	;RP0=1, select bank1
  2665  0EFC  1303               	bcf	status, 6	;RP1=0, select bank1
  2666  0EFD  082F               	movf	(_adcVal+1)^080h,w	;volatile
  2667  0EFE  1803               	skipnc
  2668  0EFF  3E01               	addlw	1
  2669  0F00  3EFF               	addlw	high(-10)
  2670  0F01  1283               	bcf	status, 5	;RP0=0, select bank0
  2671  0F02  1303               	bcf	status, 6	;RP1=0, select bank0
  2672  0F03  00E0               	movwf	1+0+(?_robotFollow)+02h
  2673  0F04  086F               	movf	(main@currentFlw),w
  2674  0F05  00E9               	movwf	(??_main+0)+0
  2675  0F06  0869               	movf	(??_main+0)+0,w
  2676  0F07  00E1               	movwf	0+(?_robotFollow)+04h
  2677  0F08  120A  158A  20EC   	fcall	_robotFollow
              120A  158A         
  2678                           	line	257
  2679                           ;Main.c: 257: break;
  2680  0F0D  2FCD               	goto	l12257
  2681                           	line	258
  2682                           ;Main.c: 258: case 4:
  2683                           	
  2684  0F0E                     l2274:	
  2685                           	line	259
  2686                           	
  2687  0F0E                     l12231:	
  2688                           ;Main.c: 259: ser_putch(141);
  2689  0F0E  308D               	movlw	(08Dh)
  2690  0F0F  160A  158A  251C   	fcall	_ser_putch
              120A  158A         
  2691                           	line	260
  2692                           ;Main.c: 260: ser_putch(1);
  2693  0F14  3001               	movlw	(01h)
  2694  0F15  160A  158A  251C   	fcall	_ser_putch
              120A  158A         
  2695                           	line	262
  2696                           ;Main.c: 262: break;
  2697  0F1A  2FCD               	goto	l12257
  2698                           	line	263
  2699                           ;Main.c: 263: case 9:
  2700                           	
  2701  0F1B                     l2275:	
  2702                           	line	264
  2703                           	
  2704  0F1B                     l12233:	
  2705                           ;Main.c: 264: ROBOTerror = 9;
  2706  0F1B  3009               	movlw	(09h)
  2707  0F1C  1283               	bcf	status, 5	;RP0=0, select bank0
  2708  0F1D  1303               	bcf	status, 6	;RP1=0, select bank0
  2709  0F1E  00E9               	movwf	(??_main+0)+0
  2710  0F1F  0869               	movf	(??_main+0)+0,w
  2711  0F20  1683               	bsf	status, 5	;RP0=1, select bank1
  2712  0F21  1303               	bcf	status, 6	;RP1=0, select bank1
  2713  0F22  00C6               	movwf	(_ROBOTerror)^080h
  2714                           	line	265
  2715                           ;Main.c: 265: break;
  2716  0F23  2FCD               	goto	l12257
  2717                           	line	266
  2718                           ;Main.c: 266: case 10:
  2719                           	
  2720  0F24                     l2276:	
  2721                           	line	267
  2722                           	
  2723  0F24                     l12235:	
  2724                           ;Main.c: 267: RobotPos++;
  2725  0F24  3001               	movlw	(01h)
  2726  0F25  1283               	bcf	status, 5	;RP0=0, select bank0
  2727  0F26  1303               	bcf	status, 6	;RP1=0, select bank0
  2728  0F27  00E9               	movwf	(??_main+0)+0
  2729  0F28  0869               	movf	(??_main+0)+0,w
  2730  0F29  1683               	bsf	status, 5	;RP0=1, select bank1
  2731  0F2A  1303               	bcf	status, 6	;RP1=0, select bank1
  2732  0F2B  07C8               	addwf	(_RobotPos)^080h,f
  2733                           	line	269
  2734                           	
  2735  0F2C                     l12237:	
  2736                           ;Main.c: 269: robot_turnLeft();
  2737  0F2C  160A  158A  27A0   	fcall	_robot_turnLeft
              120A  158A         
  2738                           	line	272
  2739                           	
  2740  0F31                     l12239:	
  2741                           ;Main.c: 272: readAvgDistance();
  2742  0F31  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  2743                           	line	273
  2744                           	
  2745  0F36                     l12241:	
  2746                           ;Main.c: 273: robotFollow(200, adcVal - 10, currentFlw);
  2747  0F36  30C8               	movlw	low(0C8h)
  2748  0F37  1283               	bcf	status, 5	;RP0=0, select bank0
  2749  0F38  1303               	bcf	status, 6	;RP1=0, select bank0
  2750  0F39  00DD               	movwf	(?_robotFollow)
  2751  0F3A  3000               	movlw	high(0C8h)
  2752  0F3B  00DE               	movwf	((?_robotFollow))+1
  2753  0F3C  1683               	bsf	status, 5	;RP0=1, select bank1
  2754  0F3D  1303               	bcf	status, 6	;RP1=0, select bank1
  2755  0F3E  082E               	movf	(_adcVal)^080h,w	;volatile
  2756  0F3F  3EF6               	addlw	low(-10)
  2757  0F40  1283               	bcf	status, 5	;RP0=0, select bank0
  2758  0F41  1303               	bcf	status, 6	;RP1=0, select bank0
  2759  0F42  00DF               	movwf	0+(?_robotFollow)+02h
  2760  0F43  1683               	bsf	status, 5	;RP0=1, select bank1
  2761  0F44  1303               	bcf	status, 6	;RP1=0, select bank1
  2762  0F45  082F               	movf	(_adcVal+1)^080h,w	;volatile
  2763  0F46  1803               	skipnc
  2764  0F47  3E01               	addlw	1
  2765  0F48  3EFF               	addlw	high(-10)
  2766  0F49  1283               	bcf	status, 5	;RP0=0, select bank0
  2767  0F4A  1303               	bcf	status, 6	;RP1=0, select bank0
  2768  0F4B  00E0               	movwf	1+0+(?_robotFollow)+02h
  2769  0F4C  086F               	movf	(main@currentFlw),w
  2770  0F4D  00E9               	movwf	(??_main+0)+0
  2771  0F4E  0869               	movf	(??_main+0)+0,w
  2772  0F4F  00E1               	movwf	0+(?_robotFollow)+04h
  2773  0F50  120A  158A  20EC   	fcall	_robotFollow
              120A  158A         
  2774                           	line	274
  2775                           ;Main.c: 274: break;
  2776  0F55  2FCD               	goto	l12257
  2777                           	line	275
  2778                           ;Main.c: 275: case 11:
  2779                           	
  2780  0F56                     l2277:	
  2781                           	line	276
  2782                           	
  2783  0F56                     l12243:	
  2784                           ;Main.c: 276: RobotPos++;
  2785  0F56  3001               	movlw	(01h)
  2786  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  2787  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  2788  0F59  00E9               	movwf	(??_main+0)+0
  2789  0F5A  0869               	movf	(??_main+0)+0,w
  2790  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  2791  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  2792  0F5D  07C8               	addwf	(_RobotPos)^080h,f
  2793                           	line	278
  2794                           	
  2795  0F5E                     l12245:	
  2796                           ;Main.c: 278: robot_turnRight(200);
  2797  0F5E  30C8               	movlw	low(0C8h)
  2798  0F5F  1283               	bcf	status, 5	;RP0=0, select bank0
  2799  0F60  1303               	bcf	status, 6	;RP1=0, select bank0
  2800  0F61  00DD               	movwf	(?_robot_turnRight)
  2801  0F62  3000               	movlw	high(0C8h)
  2802  0F63  00DE               	movwf	((?_robot_turnRight))+1
  2803  0F64  120A  118A  2015   	fcall	_robot_turnRight
              120A  158A         
  2804                           	line	280
  2805                           	
  2806  0F69                     l12247:	
  2807                           ;Main.c: 280: readAvgDistance();
  2808  0F69  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  2809                           	line	281
  2810                           	
  2811  0F6E                     l12249:	
  2812                           ;Main.c: 281: robotFollow(200, adcVal, currentFlw);
  2813  0F6E  30C8               	movlw	low(0C8h)
  2814  0F6F  1283               	bcf	status, 5	;RP0=0, select bank0
  2815  0F70  1303               	bcf	status, 6	;RP1=0, select bank0
  2816  0F71  00DD               	movwf	(?_robotFollow)
  2817  0F72  3000               	movlw	high(0C8h)
  2818  0F73  00DE               	movwf	((?_robotFollow))+1
  2819  0F74  1683               	bsf	status, 5	;RP0=1, select bank1
  2820  0F75  1303               	bcf	status, 6	;RP1=0, select bank1
  2821  0F76  082F               	movf	(_adcVal+1)^080h,w	;volatile
  2822  0F77  1283               	bcf	status, 5	;RP0=0, select bank0
  2823  0F78  1303               	bcf	status, 6	;RP1=0, select bank0
  2824  0F79  01E0               	clrf	1+(?_robotFollow)+02h
  2825  0F7A  07E0               	addwf	1+(?_robotFollow)+02h
  2826  0F7B  1683               	bsf	status, 5	;RP0=1, select bank1
  2827  0F7C  1303               	bcf	status, 6	;RP1=0, select bank1
  2828  0F7D  082E               	movf	(_adcVal)^080h,w	;volatile
  2829  0F7E  1283               	bcf	status, 5	;RP0=0, select bank0
  2830  0F7F  1303               	bcf	status, 6	;RP1=0, select bank0
  2831  0F80  01DF               	clrf	0+(?_robotFollow)+02h
  2832  0F81  07DF               	addwf	0+(?_robotFollow)+02h
  2833                           
  2834  0F82  086F               	movf	(main@currentFlw),w
  2835  0F83  00E9               	movwf	(??_main+0)+0
  2836  0F84  0869               	movf	(??_main+0)+0,w
  2837  0F85  00E1               	movwf	0+(?_robotFollow)+04h
  2838  0F86  120A  158A  20EC   	fcall	_robotFollow
              120A  158A         
  2839                           	line	283
  2840                           ;Main.c: 283: break;
  2841  0F8B  2FCD               	goto	l12257
  2842                           	line	284
  2843                           ;Main.c: 284: default:
  2844                           	
  2845  0F8C                     l2278:	
  2846                           	line	285
  2847                           	
  2848  0F8C                     l12251:	
  2849                           ;Main.c: 285: readAvgDistance();
  2850  0F8C  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  2851                           	line	286
  2852                           ;Main.c: 286: robotFollow(200, adcVal, currentFlw);
  2853  0F91  30C8               	movlw	low(0C8h)
  2854  0F92  1283               	bcf	status, 5	;RP0=0, select bank0
  2855  0F93  1303               	bcf	status, 6	;RP1=0, select bank0
  2856  0F94  00DD               	movwf	(?_robotFollow)
  2857  0F95  3000               	movlw	high(0C8h)
  2858  0F96  00DE               	movwf	((?_robotFollow))+1
  2859  0F97  1683               	bsf	status, 5	;RP0=1, select bank1
  2860  0F98  1303               	bcf	status, 6	;RP1=0, select bank1
  2861  0F99  082F               	movf	(_adcVal+1)^080h,w	;volatile
  2862  0F9A  1283               	bcf	status, 5	;RP0=0, select bank0
  2863  0F9B  1303               	bcf	status, 6	;RP1=0, select bank0
  2864  0F9C  01E0               	clrf	1+(?_robotFollow)+02h
  2865  0F9D  07E0               	addwf	1+(?_robotFollow)+02h
  2866  0F9E  1683               	bsf	status, 5	;RP0=1, select bank1
  2867  0F9F  1303               	bcf	status, 6	;RP1=0, select bank1
  2868  0FA0  082E               	movf	(_adcVal)^080h,w	;volatile
  2869  0FA1  1283               	bcf	status, 5	;RP0=0, select bank0
  2870  0FA2  1303               	bcf	status, 6	;RP1=0, select bank0
  2871  0FA3  01DF               	clrf	0+(?_robotFollow)+02h
  2872  0FA4  07DF               	addwf	0+(?_robotFollow)+02h
  2873                           
  2874  0FA5  086F               	movf	(main@currentFlw),w
  2875  0FA6  00E9               	movwf	(??_main+0)+0
  2876  0FA7  0869               	movf	(??_main+0)+0,w
  2877  0FA8  00E1               	movwf	0+(?_robotFollow)+04h
  2878  0FA9  120A  158A  20EC   	fcall	_robotFollow
              120A  158A         
  2879                           	line	287
  2880                           ;Main.c: 287: break;
  2881  0FAE  2FCD               	goto	l12257
  2882                           	line	289
  2883                           	
  2884  0FAF                     l12253:	
  2885                           ;Main.c: 289: }
  2886  0FAF  2FCD               	goto	l12257
  2887                           	line	225
  2888                           	
  2889  0FB0                     l2266:	
  2890                           	
  2891  0FB0                     l12255:	
  2892  0FB0  1683               	bsf	status, 5	;RP0=1, select bank1
  2893  0FB1  1303               	bcf	status, 6	;RP1=0, select bank1
  2894  0FB2  0846               	movf	(_ROBOTerror)^080h,w
  2895                           	; Switch size 1, requested type "space"
  2896                           ; Number of cases is 8, Range of values is 0 to 11
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte           25    13 (average)
  2900                           ; direct_byte           44     8 (fixed)
  2901                           ; jumptable            260     6 (fixed)
  2902                           ; rangetable            16     6 (fixed)
  2903                           ; spacedrange           30     9 (fixed)
  2904                           ; locatedrange          12     3 (fixed)
  2905                           ;	Chosen strategy is simple_byte
  2906                           
  2907                           	opt asmopt_off
  2908  0FB3  3A00               	xorlw	0^0	; case 0
  2909  0FB4  1903               	skipnz
  2910  0FB5  2E0B               	goto	l12197
  2911  0FB6  3A01               	xorlw	1^0	; case 1
  2912  0FB7  1903               	skipnz
  2913  0FB8  2E2E               	goto	l12199
  2914  0FB9  3A03               	xorlw	2^1	; case 2
  2915  0FBA  1903               	skipnz
  2916  0FBB  2E88               	goto	l12213
  2917  0FBC  3A01               	xorlw	3^2	; case 3
  2918  0FBD  1903               	skipnz
  2919  0FBE  2E91               	goto	l12215
  2920  0FBF  3A07               	xorlw	4^3	; case 4
  2921  0FC0  1903               	skipnz
  2922  0FC1  2F0E               	goto	l12231
  2923  0FC2  3A0D               	xorlw	9^4	; case 9
  2924  0FC3  1903               	skipnz
  2925  0FC4  2F1B               	goto	l12233
  2926  0FC5  3A03               	xorlw	10^9	; case 10
  2927  0FC6  1903               	skipnz
  2928  0FC7  2F24               	goto	l12235
  2929  0FC8  3A01               	xorlw	11^10	; case 11
  2930  0FC9  1903               	skipnz
  2931  0FCA  2F56               	goto	l12243
  2932  0FCB  2F8C               	goto	l12251
  2933                           	opt asmopt_on
  2934                           
  2935                           	line	289
  2936                           	
  2937  0FCC                     l2268:	
  2938  0FCC  2FCD               	goto	l12257
  2939                           	line	290
  2940                           	
  2941  0FCD                     l2264:	
  2942                           	line	222
  2943                           	
  2944  0FCD                     l12257:	
  2945  0FCD  1683               	bsf	status, 5	;RP0=1, select bank1
  2946  0FCE  1303               	bcf	status, 6	;RP1=0, select bank1
  2947  0FCF  0846               	movf	(_ROBOTerror)^080h,w
  2948  0FD0  3A09               	xorlw	09h
  2949  0FD1  1D03               	skipz
  2950  0FD2  2FD4               	goto	u5551
  2951  0FD3  2FD5               	goto	u5550
  2952  0FD4                     u5551:
  2953  0FD4  2FB0               	goto	l12255
  2954  0FD5                     u5550:
  2955                           	
  2956  0FD5                     l2279:	
  2957                           	line	291
  2958                           ;Main.c: 290: }
  2959                           ;Main.c: 291: ROBOTerror = 0;
  2960  0FD5  01C6               	clrf	(_ROBOTerror)^080h
  2961                           	line	292
  2962                           ;Main.c: 292: break;
  2963  0FD6  2FF5               	goto	l12265
  2964                           	line	294
  2965                           ;Main.c: 294: case 5:
  2966                           	
  2967  0FD7                     l2280:	
  2968                           	line	295
  2969                           	
  2970  0FD7                     l12259:	
  2971                           ;Main.c: 295: ChargeMode();
  2972  0FD7  160A  158A  26AE   	fcall	_ChargeMode
              120A  158A         
  2973                           	line	296
  2974                           ;Main.c: 296: break;
  2975  0FDC  2FF5               	goto	l12265
  2976                           	line	297
  2977                           ;Main.c: 297: default:
  2978                           	
  2979  0FDD                     l2281:	
  2980                           	line	299
  2981                           ;Main.c: 299: break;
  2982  0FDD  2FF5               	goto	l12265
  2983                           	line	300
  2984                           	
  2985  0FDE                     l12261:	
  2986                           ;Main.c: 300: }
  2987  0FDE  2FF5               	goto	l12265
  2988                           	line	199
  2989                           	
  2990  0FDF                     l2257:	
  2991                           	
  2992  0FDF                     l12263:	
  2993  0FDF  1283               	bcf	status, 5	;RP0=0, select bank0
  2994  0FE0  1303               	bcf	status, 6	;RP1=0, select bank0
  2995  0FE1  086E               	movf	(main@choice),w
  2996                           	; Switch size 1, requested type "space"
  2997                           ; Number of cases is 6, Range of values is 0 to 5
  2998                           ; switch strategies available:
  2999                           ; Name         Instructions Cycles
  3000                           ; simple_byte           19    10 (average)
  3001                           ; direct_byte           26     8 (fixed)
  3002                           ; jumptable            260     6 (fixed)
  3003                           ; rangetable            10     6 (fixed)
  3004                           ; spacedrange           18     9 (fixed)
  3005                           ; locatedrange           6     3 (fixed)
  3006                           ;	Chosen strategy is simple_byte
  3007                           
  3008                           	opt asmopt_off
  3009  0FE2  3A00               	xorlw	0^0	; case 0
  3010  0FE3  1903               	skipnz
  3011  0FE4  2DE2               	goto	l12187
  3012  0FE5  3A01               	xorlw	1^0	; case 1
  3013  0FE6  1903               	skipnz
  3014  0FE7  2DE8               	goto	l2260
  3015  0FE8  3A03               	xorlw	2^1	; case 2
  3016  0FE9  1903               	skipnz
  3017  0FEA  2DEC               	goto	l12189
  3018  0FEB  3A01               	xorlw	3^2	; case 3
  3019  0FEC  1903               	skipnz
  3020  0FED  2DF4               	goto	l12191
  3021  0FEE  3A07               	xorlw	4^3	; case 4
  3022  0FEF  1903               	skipnz
  3023  0FF0  2DFC               	goto	l12193
  3024  0FF1  3A01               	xorlw	5^4	; case 5
  3025  0FF2  1903               	skipnz
  3026  0FF3  2FD7               	goto	l12259
  3027  0FF4  2FF5               	goto	l12265
  3028                           	opt asmopt_on
  3029                           
  3030                           	line	300
  3031                           	
  3032  0FF5                     l2259:	
  3033                           	line	301
  3034                           	
  3035  0FF5                     l12265:	
  3036                           ;Main.c: 301: choice = 255;
  3037  0FF5  30FF               	movlw	(0FFh)
  3038  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  3039  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  3040  0FF8  00E9               	movwf	(??_main+0)+0
  3041  0FF9  0869               	movf	(??_main+0)+0,w
  3042  0FFA  00EE               	movwf	(main@choice)
  3043  0FFB  2DA5               	goto	l12169
  3044                           	line	302
  3045                           	
  3046  0FFC                     l2282:	
  3047                           	line	180
  3048  0FFC  2DA5               	goto	l12169
  3049                           	
  3050  0FFD                     l2283:	
  3051                           	line	303
  3052                           	
  3053  0FFD                     l2284:	
  3054                           	global	start
  3055  0FFD  120A  118A  2812   	ljmp	start
  3056                           	opt stack 0
  3057                           GLOBAL	__end_of_main
  3058  1000                     	__end_of_main:
  3059 ;; =============== function _main ends ============
  3060                           
  3061                           	signat	_main,88
  3062                           	global	_robot_turnLeft
  3063                           psect	text1087,local,class=CODE,delta=2
  3064                           global __ptext1087
  3065  1FA0                     __ptext1087:
  3066                           
  3067 ;; *************** function _robot_turnLeft *****************
  3068 ;; Defined at:
  3069 ;;		line 268 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;		None               void
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       0       0       0       0
  3084 ;;      Locals:         0       0       0       0       0
  3085 ;;      Temps:          0       1       0       0       0
  3086 ;;      Totals:         0       1       0       0       0
  3087 ;;Total ram usage:        1 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    7
  3090 ;; This function calls:
  3091 ;;		_robotTurnSpeed
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           psect	text1087
  3097                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3098                           	line	268
  3099                           	global	__size_of_robot_turnLeft
  3100  0060                     	__size_of_robot_turnLeft	equ	__end_of_robot_turnLeft-_robot_turnLeft
  3101                           	
  3102  1FA0                     _robot_turnLeft:	
  3103                           	opt	stack 0
  3104                           ; Regs used in _robot_turnLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3105                           	line	269
  3106                           	
  3107  1FA0                     l12137:	
  3108                           ;robot.c: 269: switch (RobotPos)
  3109  1FA0  2FF2               	goto	l12153
  3110                           	line	271
  3111                           ;robot.c: 270: {
  3112                           ;robot.c: 271: case 8:
  3113                           	
  3114  1FA1                     l6139:	
  3115                           	line	272
  3116                           	
  3117  1FA1                     l12139:	
  3118                           ;robot.c: 272: robotTurnSpeed(160,400);
  3119  1FA1  30A0               	movlw	low(0A0h)
  3120  1FA2  1283               	bcf	status, 5	;RP0=0, select bank0
  3121  1FA3  1303               	bcf	status, 6	;RP1=0, select bank0
  3122  1FA4  00DD               	movwf	(?_robotTurnSpeed)
  3123  1FA5  3000               	movlw	high(0A0h)
  3124  1FA6  00DE               	movwf	((?_robotTurnSpeed))+1
  3125  1FA7  3090               	movlw	low(0190h)
  3126  1FA8  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  3127  1FA9  3001               	movlw	high(0190h)
  3128  1FAA  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  3129  1FAB  160A  118A  240B   	fcall	_robotTurnSpeed
              160A  158A         
  3130                           	line	273
  3131                           	
  3132  1FB0                     l12141:	
  3133                           ;robot.c: 273: RobotPos++;
  3134  1FB0  3001               	movlw	(01h)
  3135  1FB1  1283               	bcf	status, 5	;RP0=0, select bank0
  3136  1FB2  1303               	bcf	status, 6	;RP1=0, select bank0
  3137  1FB3  00E6               	movwf	(??_robot_turnLeft+0)+0
  3138  1FB4  0866               	movf	(??_robot_turnLeft+0)+0,w
  3139  1FB5  1683               	bsf	status, 5	;RP0=1, select bank1
  3140  1FB6  1303               	bcf	status, 6	;RP1=0, select bank1
  3141  1FB7  07C8               	addwf	(_RobotPos)^080h,f
  3142                           	line	274
  3143                           ;robot.c: 274: break;
  3144  1FB8  2FFF               	goto	l6144
  3145                           	line	275
  3146                           ;robot.c: 275: case 12:
  3147                           	
  3148  1FB9                     l6141:	
  3149                           	line	276
  3150                           	
  3151  1FB9                     l12143:	
  3152                           ;robot.c: 276: robotTurnSpeed(75,400);
  3153  1FB9  304B               	movlw	low(04Bh)
  3154  1FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  3155  1FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  3156  1FBC  00DD               	movwf	(?_robotTurnSpeed)
  3157  1FBD  3000               	movlw	high(04Bh)
  3158  1FBE  00DE               	movwf	((?_robotTurnSpeed))+1
  3159  1FBF  3090               	movlw	low(0190h)
  3160  1FC0  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  3161  1FC1  3001               	movlw	high(0190h)
  3162  1FC2  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  3163  1FC3  160A  118A  240B   	fcall	_robotTurnSpeed
              160A  158A         
  3164                           	line	277
  3165                           ;robot.c: 277: break;
  3166  1FC8  2FFF               	goto	l6144
  3167                           	line	278
  3168                           ;robot.c: 278: case 15:
  3169                           	
  3170  1FC9                     l6142:	
  3171                           	line	279
  3172                           	
  3173  1FC9                     l12145:	
  3174                           ;robot.c: 279: robotTurnSpeed(160,400);
  3175  1FC9  30A0               	movlw	low(0A0h)
  3176  1FCA  1283               	bcf	status, 5	;RP0=0, select bank0
  3177  1FCB  1303               	bcf	status, 6	;RP1=0, select bank0
  3178  1FCC  00DD               	movwf	(?_robotTurnSpeed)
  3179  1FCD  3000               	movlw	high(0A0h)
  3180  1FCE  00DE               	movwf	((?_robotTurnSpeed))+1
  3181  1FCF  3090               	movlw	low(0190h)
  3182  1FD0  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  3183  1FD1  3001               	movlw	high(0190h)
  3184  1FD2  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  3185  1FD3  160A  118A  240B   	fcall	_robotTurnSpeed
              160A  158A         
  3186                           	line	280
  3187                           	
  3188  1FD8                     l12147:	
  3189                           ;robot.c: 280: RobotPos++;
  3190  1FD8  3001               	movlw	(01h)
  3191  1FD9  1283               	bcf	status, 5	;RP0=0, select bank0
  3192  1FDA  1303               	bcf	status, 6	;RP1=0, select bank0
  3193  1FDB  00E6               	movwf	(??_robot_turnLeft+0)+0
  3194  1FDC  0866               	movf	(??_robot_turnLeft+0)+0,w
  3195  1FDD  1683               	bsf	status, 5	;RP0=1, select bank1
  3196  1FDE  1303               	bcf	status, 6	;RP1=0, select bank1
  3197  1FDF  07C8               	addwf	(_RobotPos)^080h,f
  3198                           	line	281
  3199                           ;robot.c: 281: break;
  3200  1FE0  2FFF               	goto	l6144
  3201                           	line	282
  3202                           ;robot.c: 282: default:
  3203                           	
  3204  1FE1                     l6143:	
  3205                           	line	283
  3206                           	
  3207  1FE1                     l12149:	
  3208                           ;robot.c: 283: robotTurnSpeed(80,400);
  3209  1FE1  3050               	movlw	low(050h)
  3210  1FE2  1283               	bcf	status, 5	;RP0=0, select bank0
  3211  1FE3  1303               	bcf	status, 6	;RP1=0, select bank0
  3212  1FE4  00DD               	movwf	(?_robotTurnSpeed)
  3213  1FE5  3000               	movlw	high(050h)
  3214  1FE6  00DE               	movwf	((?_robotTurnSpeed))+1
  3215  1FE7  3090               	movlw	low(0190h)
  3216  1FE8  00DF               	movwf	0+(?_robotTurnSpeed)+02h
  3217  1FE9  3001               	movlw	high(0190h)
  3218  1FEA  00E0               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  3219  1FEB  160A  118A  240B   	fcall	_robotTurnSpeed
              160A  158A         
  3220                           	line	284
  3221                           ;robot.c: 284: break;
  3222  1FF0  2FFF               	goto	l6144
  3223                           	line	285
  3224                           	
  3225  1FF1                     l12151:	
  3226                           ;robot.c: 285: }
  3227  1FF1  2FFF               	goto	l6144
  3228                           	line	269
  3229                           	
  3230  1FF2                     l6138:	
  3231                           	
  3232  1FF2                     l12153:	
  3233  1FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  3234  1FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  3235  1FF4  0848               	movf	(_RobotPos)^080h,w
  3236                           	; Switch size 1, requested type "space"
  3237                           ; Number of cases is 3, Range of values is 8 to 15
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte           10     6 (average)
  3241                           ; direct_byte           35    11 (fixed)
  3242                           ; jumptable            263     9 (fixed)
  3243                           ;	Chosen strategy is simple_byte
  3244                           
  3245                           	opt asmopt_off
  3246  1FF5  3A08               	xorlw	8^0	; case 8
  3247  1FF6  1903               	skipnz
  3248  1FF7  2FA1               	goto	l12139
  3249  1FF8  3A04               	xorlw	12^8	; case 12
  3250  1FF9  1903               	skipnz
  3251  1FFA  2FB9               	goto	l12143
  3252  1FFB  3A03               	xorlw	15^12	; case 15
  3253  1FFC  1903               	skipnz
  3254  1FFD  2FC9               	goto	l12145
  3255  1FFE  2FE1               	goto	l12149
  3256                           	opt asmopt_on
  3257                           
  3258                           	line	285
  3259                           	
  3260  1FFF                     l6140:	
  3261                           	line	286
  3262                           	
  3263  1FFF                     l6144:	
  3264  1FFF  0008               	return
  3265                           	opt stack 0
  3266                           GLOBAL	__end_of_robot_turnLeft
  3267  2000                     	__end_of_robot_turnLeft:
  3268 ;; =============== function _robot_turnLeft ends ============
  3269                           
  3270                           	signat	_robot_turnLeft,88
  3271                           	global	_Init_Follow_IR
  3272                           psect	text1088,local,class=CODE,delta=2
  3273                           global __ptext1088
  3274  1BD2                     __ptext1088:
  3275                           
  3276 ;; *************** function _Init_Follow_IR *****************
  3277 ;; Defined at:
  3278 ;;		line 306 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;		None               void
  3285 ;; Registers used:
  3286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         0       0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0
  3294 ;;      Temps:          0       3       0       0       0
  3295 ;;      Totals:         0       3       0       0       0
  3296 ;;Total ram usage:        3 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    7
  3299 ;; This function calls:
  3300 ;;		_calibrateIR
  3301 ;;		_rotate
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           psect	text1088
  3307                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3308                           	line	306
  3309                           	global	__size_of_Init_Follow_IR
  3310  0021                     	__size_of_Init_Follow_IR	equ	__end_of_Init_Follow_IR-_Init_Follow_IR
  3311                           	
  3312  1BD2                     _Init_Follow_IR:	
  3313                           	opt	stack 0
  3314                           ; Regs used in _Init_Follow_IR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3315                           	line	307
  3316                           	
  3317  1BD2                     l12131:	
  3318                           ;Main.c: 307: calibrateIR();
  3319  1BD2  160A  118A  2112   	fcall	_calibrateIR
              160A  158A         
  3320                           	line	308
  3321                           	
  3322  1BD7                     l12133:	
  3323                           ;Main.c: 308: _delay((unsigned long)((500)*(20000000/4000.0)));
  3324                           	opt asmopt_off
  3325  1BD7  300D               movlw  13
  3326  1BD8  1283               	bcf	status, 5	;RP0=0, select bank0
  3327  1BD9  1303               	bcf	status, 6	;RP1=0, select bank0
  3328  1BDA  00DF               movwf	((??_Init_Follow_IR+0)+0+2),f
  3329  1BDB  30AF               movlw	175
  3330  1BDC  00DE               movwf	((??_Init_Follow_IR+0)+0+1),f
  3331  1BDD  30C1               	movlw	193
  3332  1BDE  00DD               movwf	((??_Init_Follow_IR+0)+0),f
  3333  1BDF                     u5587:
  3334  1BDF  0BDD               	decfsz	((??_Init_Follow_IR+0)+0),f
  3335  1BE0  2BDF               	goto	u5587
  3336  1BE1  0BDE               	decfsz	((??_Init_Follow_IR+0)+0+1),f
  3337  1BE2  2BDF               	goto	u5587
  3338  1BE3  0BDF               	decfsz	((??_Init_Follow_IR+0)+0+2),f
  3339  1BE4  2BDF               	goto	u5587
  3340  1BE5  0064               	clrwdt
  3341                           opt asmopt_on
  3342                           
  3343                           	line	309
  3344                           	
  3345  1BE6                     l12135:	
  3346                           ;Main.c: 309: rotate(25, 0);
  3347  1BE6  3019               	movlw	low(019h)
  3348  1BE7  1283               	bcf	status, 5	;RP0=0, select bank0
  3349  1BE8  1303               	bcf	status, 6	;RP1=0, select bank0
  3350  1BE9  00A3               	movwf	(?_rotate)
  3351  1BEA  3000               	movlw	high(019h)
  3352  1BEB  00A4               	movwf	((?_rotate))+1
  3353  1BEC  01A5               	clrf	0+(?_rotate)+02h
  3354  1BED  160A  118A  2043   	fcall	_rotate
              160A  158A         
  3355                           	line	310
  3356                           	
  3357  1BF2                     l2287:	
  3358  1BF2  0008               	return
  3359                           	opt stack 0
  3360                           GLOBAL	__end_of_Init_Follow_IR
  3361  1BF3                     	__end_of_Init_Follow_IR:
  3362 ;; =============== function _Init_Follow_IR ends ============
  3363                           
  3364                           	signat	_Init_Follow_IR,88
  3365                           	global	_ChargeMode
  3366                           psect	text1089,local,class=CODE,delta=2
  3367                           global __ptext1089
  3368  1EAE                     __ptext1089:
  3369                           
  3370 ;; *************** function _ChargeMode *****************
  3371 ;; Defined at:
  3372 ;;		line 360 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          0       1       0       0       0
  3389 ;;      Totals:         0       1       0       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    6
  3393 ;; This function calls:
  3394 ;;		_ser_putch
  3395 ;;		_RobotBattRead
  3396 ;;		_UpdateDisplay
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           psect	text1089
  3402                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3403                           	line	360
  3404                           	global	__size_of_ChargeMode
  3405  004D                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3406                           	
  3407  1EAE                     _ChargeMode:	
  3408                           	opt	stack 1
  3409                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3410                           	line	362
  3411                           	
  3412  1EAE                     l12109:	
  3413                           ;Main.c: 362: currentMenu = 2;
  3414  1EAE  3002               	movlw	(02h)
  3415  1EAF  1283               	bcf	status, 5	;RP0=0, select bank0
  3416  1EB0  1303               	bcf	status, 6	;RP1=0, select bank0
  3417  1EB1  00DD               	movwf	(??_ChargeMode+0)+0
  3418  1EB2  085D               	movf	(??_ChargeMode+0)+0,w
  3419  1EB3  1683               	bsf	status, 5	;RP0=1, select bank1
  3420  1EB4  1303               	bcf	status, 6	;RP1=0, select bank1
  3421  1EB5  00CD               	movwf	(_currentMenu)^080h	;volatile
  3422                           	line	363
  3423                           	
  3424  1EB6                     l12111:	
  3425                           ;Main.c: 363: ser_putch(128);
  3426  1EB6  3080               	movlw	(080h)
  3427  1EB7  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
  3428  1EBC  2EBD               	goto	l12113
  3429                           	line	365
  3430                           ;Main.c: 365: while (1)
  3431                           	
  3432  1EBD                     l2305:	
  3433                           	line	367
  3434                           	
  3435  1EBD                     l12113:	
  3436                           ;Main.c: 366: {
  3437                           ;Main.c: 367: if (RTC_FLAG_250MS == 1)
  3438  1EBD  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3439  1EBE  2EC0               	goto	u5511
  3440  1EBF  2EC1               	goto	u5510
  3441  1EC0                     u5511:
  3442  1EC0  2EE5               	goto	l12129
  3443  1EC1                     u5510:
  3444                           	line	369
  3445                           	
  3446  1EC1                     l12115:	
  3447                           ;Main.c: 368: {
  3448                           ;Main.c: 369: RTC_FLAG_250MS = 0;
  3449  1EC1  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3450                           	line	370
  3451                           	
  3452  1EC2                     l12117:	
  3453                           ;Main.c: 370: RobotBattRead();
  3454  1EC2  160A  118A  22EA   	fcall	_RobotBattRead
              160A  158A         
  3455                           	line	371
  3456                           ;Main.c: 371: UpdateDisplay();
  3457  1EC7  120A  118A  241B   	fcall	_UpdateDisplay
              160A  158A         
  3458  1ECC  2EE5               	goto	l12129
  3459                           	line	372
  3460                           	
  3461  1ECD                     l2306:	
  3462                           	line	373
  3463                           ;Main.c: 372: }
  3464                           ;Main.c: 373: switch (buttonPressed)
  3465  1ECD  2EE5               	goto	l12129
  3466                           	line	375
  3467                           ;Main.c: 374: {
  3468                           ;Main.c: 375: case 1:
  3469                           	
  3470  1ECE                     l2308:	
  3471                           	line	376
  3472                           ;Main.c: 376: buttonPressed = 0;
  3473  1ECE  01CC               	clrf	(_buttonPressed)^080h	;volatile
  3474                           	line	377
  3475                           ;Main.c: 377: break;
  3476  1ECF  2EBD               	goto	l12113
  3477                           	line	378
  3478                           ;Main.c: 378: case 2:
  3479                           	
  3480  1ED0                     l2310:	
  3481                           	line	379
  3482                           ;Main.c: 379: buttonPressed = 0;
  3483  1ED0  01CC               	clrf	(_buttonPressed)^080h	;volatile
  3484                           	line	380
  3485                           ;Main.c: 380: break;
  3486  1ED1  2EBD               	goto	l12113
  3487                           	line	381
  3488                           ;Main.c: 381: case 3:
  3489                           	
  3490  1ED2                     l2311:	
  3491                           	line	382
  3492                           ;Main.c: 382: buttonPressed = 0;
  3493  1ED2  01CC               	clrf	(_buttonPressed)^080h	;volatile
  3494                           	line	383
  3495                           ;Main.c: 383: break;
  3496  1ED3  2EBD               	goto	l12113
  3497                           	line	384
  3498                           ;Main.c: 384: case 4:
  3499                           	
  3500  1ED4                     l2312:	
  3501                           	line	385
  3502                           ;Main.c: 385: buttonPressed = 0;
  3503  1ED4  01CC               	clrf	(_buttonPressed)^080h	;volatile
  3504                           	line	386
  3505                           ;Main.c: 386: break;
  3506  1ED5  2EBD               	goto	l12113
  3507                           	line	387
  3508                           ;Main.c: 387: case 5:
  3509                           	
  3510  1ED6                     l2313:	
  3511                           	line	388
  3512                           	
  3513  1ED6                     l12119:	
  3514                           ;Main.c: 388: ser_putch(132);
  3515  1ED6  3084               	movlw	(084h)
  3516  1ED7  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
  3517                           	line	389
  3518                           	
  3519  1EDC                     l12121:	
  3520                           ;Main.c: 389: buttonPressed = 0;
  3521  1EDC  1683               	bsf	status, 5	;RP0=1, select bank1
  3522  1EDD  1303               	bcf	status, 6	;RP1=0, select bank1
  3523  1EDE  01CC               	clrf	(_buttonPressed)^080h	;volatile
  3524                           	line	390
  3525                           	
  3526  1EDF                     l12123:	
  3527                           ;Main.c: 390: currentMenu = 0;
  3528  1EDF  01CD               	clrf	(_currentMenu)^080h	;volatile
  3529  1EE0  2EFA               	goto	l2314
  3530                           	line	391
  3531                           	
  3532  1EE1                     l12125:	
  3533                           ;Main.c: 391: return;
  3534  1EE1  2EFA               	goto	l2314
  3535                           	line	392
  3536                           ;Main.c: 392: default:
  3537                           	
  3538  1EE2                     l2315:	
  3539                           	line	393
  3540                           ;Main.c: 393: buttonPressed = 0;
  3541  1EE2  01CC               	clrf	(_buttonPressed)^080h	;volatile
  3542                           	line	394
  3543                           ;Main.c: 394: break;
  3544  1EE3  2EBD               	goto	l12113
  3545                           	line	395
  3546                           	
  3547  1EE4                     l12127:	
  3548                           ;Main.c: 395: }
  3549  1EE4  2EBD               	goto	l12113
  3550                           	line	373
  3551                           	
  3552  1EE5                     l2307:	
  3553                           	
  3554  1EE5                     l12129:	
  3555  1EE5  1683               	bsf	status, 5	;RP0=1, select bank1
  3556  1EE6  1303               	bcf	status, 6	;RP1=0, select bank1
  3557  1EE7  084C               	movf	(_buttonPressed)^080h,w	;volatile
  3558                           	; Switch size 1, requested type "space"
  3559                           ; Number of cases is 5, Range of values is 1 to 5
  3560                           ; switch strategies available:
  3561                           ; Name         Instructions Cycles
  3562                           ; simple_byte           16     9 (average)
  3563                           ; direct_byte           26    11 (fixed)
  3564                           ; jumptable            263     9 (fixed)
  3565                           ;	Chosen strategy is simple_byte
  3566                           
  3567                           	opt asmopt_off
  3568  1EE8  3A01               	xorlw	1^0	; case 1
  3569  1EE9  1903               	skipnz
  3570  1EEA  2ECE               	goto	l2308
  3571  1EEB  3A03               	xorlw	2^1	; case 2
  3572  1EEC  1903               	skipnz
  3573  1EED  2ED0               	goto	l2310
  3574  1EEE  3A01               	xorlw	3^2	; case 3
  3575  1EEF  1903               	skipnz
  3576  1EF0  2ED2               	goto	l2311
  3577  1EF1  3A07               	xorlw	4^3	; case 4
  3578  1EF2  1903               	skipnz
  3579  1EF3  2ED4               	goto	l2312
  3580  1EF4  3A01               	xorlw	5^4	; case 5
  3581  1EF5  1903               	skipnz
  3582  1EF6  2ED6               	goto	l12119
  3583  1EF7  2EE2               	goto	l2315
  3584                           	opt asmopt_on
  3585                           
  3586                           	line	395
  3587                           	
  3588  1EF8                     l2309:	
  3589  1EF8  2EBD               	goto	l12113
  3590                           	line	396
  3591                           	
  3592  1EF9                     l2316:	
  3593                           	line	365
  3594  1EF9  2EBD               	goto	l12113
  3595                           	
  3596  1EFA                     l2317:	
  3597                           	line	397
  3598                           	
  3599  1EFA                     l2314:	
  3600  1EFA  0008               	return
  3601                           	opt stack 0
  3602                           GLOBAL	__end_of_ChargeMode
  3603  1EFB                     	__end_of_ChargeMode:
  3604 ;; =============== function _ChargeMode ends ============
  3605                           
  3606                           	signat	_ChargeMode,88
  3607                           	global	_robot_turnRight
  3608                           psect	text1090,local,class=CODE,delta=2
  3609                           global __ptext1090
  3610  0015                     __ptext1090:
  3611                           
  3612 ;; *************** function _robot_turnRight *****************
  3613 ;; Defined at:
  3614 ;;		line 289 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  speed           2   61[BANK0 ] int 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  temp1           2   70[BANK0 ] int 
  3619 ;;  AdcTarget       2   68[BANK0 ] int 
  3620 ;;  turnTarget      2   66[BANK0 ] int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;		None               void
  3623 ;; Registers used:
  3624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       2       0       0       0
  3631 ;;      Locals:         0       6       0       0       0
  3632 ;;      Temps:          0       3       0       0       0
  3633 ;;      Totals:         0      11       0       0       0
  3634 ;;Total ram usage:       11 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    7
  3637 ;; This function calls:
  3638 ;;		_RobotDrive
  3639 ;;		_rotate
  3640 ;;		_readAvgDistance
  3641 ;;		_robot_read
  3642 ;;		_UpdateDisplay
  3643 ;;		___awdiv
  3644 ;;		_abs
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           psect	text1090
  3650                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3651                           	line	289
  3652                           	global	__size_of_robot_turnRight
  3653  0406                     	__size_of_robot_turnRight	equ	__end_of_robot_turnRight-_robot_turnRight
  3654                           	
  3655  0015                     _robot_turnRight:	
  3656                           	opt	stack 0
  3657                           ; Regs used in _robot_turnRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3658                           	line	291
  3659                           	
  3660  0015                     l11949:	
  3661                           ;robot.c: 291: angleTurned = 0;
  3662  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  3663  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  3664  0017  01B0               	clrf	(_angleTurned)^080h
  3665  0018  01B1               	clrf	(_angleTurned+1)^080h
  3666                           	line	293
  3667                           ;robot.c: 292: int temp1;
  3668                           ;robot.c: 293: int turnTarget = 0;
  3669  0019  1283               	bcf	status, 5	;RP0=0, select bank0
  3670  001A  1303               	bcf	status, 6	;RP1=0, select bank0
  3671  001B  01E2               	clrf	(robot_turnRight@turnTarget)
  3672  001C  01E3               	clrf	(robot_turnRight@turnTarget+1)
  3673                           	line	294
  3674                           	
  3675  001D                     l11951:	
  3676                           ;robot.c: 294: RobotDrive(speed, 0x7FFF);
  3677  001D  085E               	movf	(robot_turnRight@speed+1),w
  3678  001E  01AA               	clrf	(?_RobotDrive+1)
  3679  001F  07AA               	addwf	(?_RobotDrive+1)
  3680  0020  085D               	movf	(robot_turnRight@speed),w
  3681  0021  01A9               	clrf	(?_RobotDrive)
  3682  0022  07A9               	addwf	(?_RobotDrive)
  3683                           
  3684  0023  30FF               	movlw	low(07FFFh)
  3685  0024  00AB               	movwf	0+(?_RobotDrive)+02h
  3686  0025  307F               	movlw	high(07FFFh)
  3687  0026  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  3688  0027  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  3689                           	line	295
  3690                           	
  3691  002C                     l11953:	
  3692                           ;robot.c: 295: ROBOTerror = 0;
  3693  002C  1683               	bsf	status, 5	;RP0=1, select bank1
  3694  002D  1303               	bcf	status, 6	;RP1=0, select bank1
  3695  002E  01C6               	clrf	(_ROBOTerror)^080h
  3696                           	line	296
  3697                           	
  3698  002F                     l11955:	
  3699                           ;robot.c: 296: rotate(25, 0);
  3700  002F  3019               	movlw	low(019h)
  3701  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  3702  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  3703  0032  00A3               	movwf	(?_rotate)
  3704  0033  3000               	movlw	high(019h)
  3705  0034  00A4               	movwf	((?_rotate))+1
  3706  0035  01A5               	clrf	0+(?_rotate)+02h
  3707  0036  160A  118A  2043   	fcall	_rotate
              120A  118A         
  3708                           	line	297
  3709                           	
  3710  003B                     l11957:	
  3711                           ;robot.c: 297: readAvgDistance();
  3712  003B  160A  118A  226C   	fcall	_readAvgDistance
              120A  118A         
  3713                           	line	298
  3714                           	
  3715  0040                     l11959:	
  3716                           ;robot.c: 298: int AdcTarget = adcVal;
  3717  0040  1683               	bsf	status, 5	;RP0=1, select bank1
  3718  0041  1303               	bcf	status, 6	;RP1=0, select bank1
  3719  0042  082F               	movf	(_adcVal+1)^080h,w	;volatile
  3720  0043  1283               	bcf	status, 5	;RP0=0, select bank0
  3721  0044  1303               	bcf	status, 6	;RP1=0, select bank0
  3722  0045  01E5               	clrf	(robot_turnRight@AdcTarget+1)	;volatile
  3723  0046  07E5               	addwf	(robot_turnRight@AdcTarget+1)	;volatile
  3724  0047  1683               	bsf	status, 5	;RP0=1, select bank1
  3725  0048  1303               	bcf	status, 6	;RP1=0, select bank1
  3726  0049  082E               	movf	(_adcVal)^080h,w	;volatile
  3727  004A  1283               	bcf	status, 5	;RP0=0, select bank0
  3728  004B  1303               	bcf	status, 6	;RP1=0, select bank0
  3729  004C  01E4               	clrf	(robot_turnRight@AdcTarget)	;volatile
  3730  004D  07E4               	addwf	(robot_turnRight@AdcTarget)	;volatile
  3731                           
  3732  004E  284F               	goto	l11961
  3733                           	line	300
  3734                           ;robot.c: 300: while (1)
  3735                           	
  3736  004F                     l6147:	
  3737                           	line	302
  3738                           	
  3739  004F                     l11961:	
  3740                           ;robot.c: 301: {
  3741                           ;robot.c: 302: readAvgDistance();
  3742  004F  160A  118A  226C   	fcall	_readAvgDistance
              120A  118A         
  3743                           	line	303
  3744                           	
  3745  0054                     l11963:	
  3746                           ;robot.c: 303: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 15))
  3747  0054  1683               	bsf	status, 5	;RP0=1, select bank1
  3748  0055  1303               	bcf	status, 6	;RP1=0, select bank1
  3749  0056  082F               	movf	(_adcVal+1)^080h,w	;volatile
  3750  0057  1283               	bcf	status, 5	;RP0=0, select bank0
  3751  0058  1303               	bcf	status, 6	;RP1=0, select bank0
  3752  0059  0265               	subwf	(robot_turnRight@AdcTarget+1),w
  3753  005A  1D03               	skipz
  3754  005B  2862               	goto	u5365
  3755  005C  1683               	bsf	status, 5	;RP0=1, select bank1
  3756  005D  1303               	bcf	status, 6	;RP1=0, select bank1
  3757  005E  082E               	movf	(_adcVal)^080h,w	;volatile
  3758  005F  1283               	bcf	status, 5	;RP0=0, select bank0
  3759  0060  1303               	bcf	status, 6	;RP1=0, select bank0
  3760  0061  0264               	subwf	(robot_turnRight@AdcTarget),w
  3761  0062                     u5365:
  3762  0062  1803               	skipnc
  3763  0063  2865               	goto	u5361
  3764  0064  2866               	goto	u5360
  3765  0065                     u5361:
  3766  0065  2890               	goto	l11969
  3767  0066                     u5360:
  3768                           	
  3769  0066                     l11965:	
  3770  0066  0864               	movf	(robot_turnRight@AdcTarget),w
  3771  0067  3E0F               	addlw	low(0Fh)
  3772  0068  00DF               	movwf	(??_robot_turnRight+0)+0
  3773  0069  0865               	movf	(robot_turnRight@AdcTarget+1),w
  3774  006A  1803               	skipnc
  3775  006B  3E01               	addlw	1
  3776  006C  3E00               	addlw	high(0Fh)
  3777  006D  00E0               	movwf	1+(??_robot_turnRight+0)+0
  3778  006E  0860               	movf	1+(??_robot_turnRight+0)+0,w
  3779  006F  1683               	bsf	status, 5	;RP0=1, select bank1
  3780  0070  1303               	bcf	status, 6	;RP1=0, select bank1
  3781  0071  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  3782  0072  1D03               	skipz
  3783  0073  287A               	goto	u5375
  3784  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  3785  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  3786  0076  085F               	movf	0+(??_robot_turnRight+0)+0,w
  3787  0077  1683               	bsf	status, 5	;RP0=1, select bank1
  3788  0078  1303               	bcf	status, 6	;RP1=0, select bank1
  3789  0079  022E               	subwf	(_adcVal)^080h,w	;volatile
  3790  007A                     u5375:
  3791  007A  1803               	skipnc
  3792  007B  287D               	goto	u5371
  3793  007C  287E               	goto	u5370
  3794  007D                     u5371:
  3795  007D  2890               	goto	l11969
  3796  007E                     u5370:
  3797                           	line	305
  3798                           	
  3799  007E                     l11967:	
  3800                           ;robot.c: 304: {
  3801                           ;robot.c: 305: RobotDrive(speed, 1700);
  3802  007E  1283               	bcf	status, 5	;RP0=0, select bank0
  3803  007F  1303               	bcf	status, 6	;RP1=0, select bank0
  3804  0080  085E               	movf	(robot_turnRight@speed+1),w
  3805  0081  01AA               	clrf	(?_RobotDrive+1)
  3806  0082  07AA               	addwf	(?_RobotDrive+1)
  3807  0083  085D               	movf	(robot_turnRight@speed),w
  3808  0084  01A9               	clrf	(?_RobotDrive)
  3809  0085  07A9               	addwf	(?_RobotDrive)
  3810                           
  3811  0086  30A4               	movlw	low(06A4h)
  3812  0087  00AB               	movwf	0+(?_RobotDrive)+02h
  3813  0088  3006               	movlw	high(06A4h)
  3814  0089  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  3815  008A  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  3816                           	line	306
  3817                           ;robot.c: 306: }
  3818  008F  2918               	goto	l6149
  3819                           	line	307
  3820                           	
  3821  0090                     l6148:	
  3822                           	
  3823  0090                     l11969:	
  3824                           ;robot.c: 307: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - 15))
  3825  0090  1283               	bcf	status, 5	;RP0=0, select bank0
  3826  0091  1303               	bcf	status, 6	;RP1=0, select bank0
  3827  0092  0865               	movf	(robot_turnRight@AdcTarget+1),w
  3828  0093  1683               	bsf	status, 5	;RP0=1, select bank1
  3829  0094  1303               	bcf	status, 6	;RP1=0, select bank1
  3830  0095  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  3831  0096  1D03               	skipz
  3832  0097  289E               	goto	u5385
  3833  0098  1283               	bcf	status, 5	;RP0=0, select bank0
  3834  0099  1303               	bcf	status, 6	;RP1=0, select bank0
  3835  009A  0864               	movf	(robot_turnRight@AdcTarget),w
  3836  009B  1683               	bsf	status, 5	;RP0=1, select bank1
  3837  009C  1303               	bcf	status, 6	;RP1=0, select bank1
  3838  009D  022E               	subwf	(_adcVal)^080h,w	;volatile
  3839  009E                     u5385:
  3840  009E  1803               	skipnc
  3841  009F  28A1               	goto	u5381
  3842  00A0  28A2               	goto	u5380
  3843  00A1                     u5381:
  3844  00A1  28CE               	goto	l11975
  3845  00A2                     u5380:
  3846                           	
  3847  00A2                     l11971:	
  3848  00A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3849  00A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3850  00A4  0864               	movf	(robot_turnRight@AdcTarget),w
  3851  00A5  3EF1               	addlw	low(0FFF1h)
  3852  00A6  00DF               	movwf	(??_robot_turnRight+0)+0
  3853  00A7  0865               	movf	(robot_turnRight@AdcTarget+1),w
  3854  00A8  1803               	skipnc
  3855  00A9  3E01               	addlw	1
  3856  00AA  3EFF               	addlw	high(0FFF1h)
  3857  00AB  00E0               	movwf	1+(??_robot_turnRight+0)+0
  3858  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  3859  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  3860  00AE  082F               	movf	(_adcVal+1)^080h,w	;volatile
  3861  00AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3862  00B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3863  00B1  0260               	subwf	1+(??_robot_turnRight+0)+0,w
  3864  00B2  1D03               	skipz
  3865  00B3  28BA               	goto	u5395
  3866  00B4  1683               	bsf	status, 5	;RP0=1, select bank1
  3867  00B5  1303               	bcf	status, 6	;RP1=0, select bank1
  3868  00B6  082E               	movf	(_adcVal)^080h,w	;volatile
  3869  00B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3870  00B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3871  00B9  025F               	subwf	0+(??_robot_turnRight+0)+0,w
  3872  00BA                     u5395:
  3873  00BA  1803               	skipnc
  3874  00BB  28BD               	goto	u5391
  3875  00BC  28BE               	goto	u5390
  3876  00BD                     u5391:
  3877  00BD  28CE               	goto	l11975
  3878  00BE                     u5390:
  3879                           	line	309
  3880                           	
  3881  00BE                     l11973:	
  3882                           ;robot.c: 308: {
  3883                           ;robot.c: 309: RobotDrive(speed, -1700);
  3884  00BE  085E               	movf	(robot_turnRight@speed+1),w
  3885  00BF  01AA               	clrf	(?_RobotDrive+1)
  3886  00C0  07AA               	addwf	(?_RobotDrive+1)
  3887  00C1  085D               	movf	(robot_turnRight@speed),w
  3888  00C2  01A9               	clrf	(?_RobotDrive)
  3889  00C3  07A9               	addwf	(?_RobotDrive)
  3890                           
  3891  00C4  305C               	movlw	low(-1700)
  3892  00C5  00AB               	movwf	0+(?_RobotDrive)+02h
  3893  00C6  30F9               	movlw	high(-1700)
  3894  00C7  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  3895  00C8  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  3896                           	line	310
  3897                           ;robot.c: 310: }
  3898  00CD  2918               	goto	l6149
  3899                           	line	311
  3900                           	
  3901  00CE                     l6150:	
  3902                           	
  3903  00CE                     l11975:	
  3904                           ;robot.c: 311: else if (adcVal <= (AdcTarget - 50) || adcVal >= (AdcTarget + 15))
  3905  00CE  1283               	bcf	status, 5	;RP0=0, select bank0
  3906  00CF  1303               	bcf	status, 6	;RP1=0, select bank0
  3907  00D0  0864               	movf	(robot_turnRight@AdcTarget),w
  3908  00D1  3ECE               	addlw	low(0FFCEh)
  3909  00D2  00DF               	movwf	(??_robot_turnRight+0)+0
  3910  00D3  0865               	movf	(robot_turnRight@AdcTarget+1),w
  3911  00D4  1803               	skipnc
  3912  00D5  3E01               	addlw	1
  3913  00D6  3EFF               	addlw	high(0FFCEh)
  3914  00D7  00E0               	movwf	1+(??_robot_turnRight+0)+0
  3915  00D8  1683               	bsf	status, 5	;RP0=1, select bank1
  3916  00D9  1303               	bcf	status, 6	;RP1=0, select bank1
  3917  00DA  082F               	movf	(_adcVal+1)^080h,w	;volatile
  3918  00DB  1283               	bcf	status, 5	;RP0=0, select bank0
  3919  00DC  1303               	bcf	status, 6	;RP1=0, select bank0
  3920  00DD  0260               	subwf	1+(??_robot_turnRight+0)+0,w
  3921  00DE  1D03               	skipz
  3922  00DF  28E6               	goto	u5405
  3923  00E0  1683               	bsf	status, 5	;RP0=1, select bank1
  3924  00E1  1303               	bcf	status, 6	;RP1=0, select bank1
  3925  00E2  082E               	movf	(_adcVal)^080h,w	;volatile
  3926  00E3  1283               	bcf	status, 5	;RP0=0, select bank0
  3927  00E4  1303               	bcf	status, 6	;RP1=0, select bank0
  3928  00E5  025F               	subwf	0+(??_robot_turnRight+0)+0,w
  3929  00E6                     u5405:
  3930  00E6  1803               	skipnc
  3931  00E7  28E9               	goto	u5401
  3932  00E8  28EA               	goto	u5400
  3933  00E9                     u5401:
  3934  00E9  2A0D               	goto	l12023
  3935  00EA                     u5400:
  3936                           	
  3937  00EA                     l11977:	
  3938  00EA  0864               	movf	(robot_turnRight@AdcTarget),w
  3939  00EB  3E0F               	addlw	low(0Fh)
  3940  00EC  00DF               	movwf	(??_robot_turnRight+0)+0
  3941  00ED  0865               	movf	(robot_turnRight@AdcTarget+1),w
  3942  00EE  1803               	skipnc
  3943  00EF  3E01               	addlw	1
  3944  00F0  3E00               	addlw	high(0Fh)
  3945  00F1  00E0               	movwf	1+(??_robot_turnRight+0)+0
  3946  00F2  0860               	movf	1+(??_robot_turnRight+0)+0,w
  3947  00F3  1683               	bsf	status, 5	;RP0=1, select bank1
  3948  00F4  1303               	bcf	status, 6	;RP1=0, select bank1
  3949  00F5  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  3950  00F6  1D03               	skipz
  3951  00F7  28FE               	goto	u5415
  3952  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3953  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3954  00FA  085F               	movf	0+(??_robot_turnRight+0)+0,w
  3955  00FB  1683               	bsf	status, 5	;RP0=1, select bank1
  3956  00FC  1303               	bcf	status, 6	;RP1=0, select bank1
  3957  00FD  022E               	subwf	(_adcVal)^080h,w	;volatile
  3958  00FE                     u5415:
  3959  00FE  1C03               	skipc
  3960  00FF  2901               	goto	u5411
  3961  0100  2902               	goto	u5410
  3962  0101                     u5411:
  3963  0101  2905               	goto	l11981
  3964  0102                     u5410:
  3965  0102  2A0D               	goto	l12023
  3966                           	
  3967  0103                     l6154:	
  3968                           	line	313
  3969                           ;robot.c: 312: {
  3970                           ;robot.c: 313: break;
  3971  0103  2A0D               	goto	l12023
  3972                           	line	314
  3973                           	
  3974  0104                     l11979:	
  3975                           ;robot.c: 314: }
  3976  0104  2918               	goto	l6149
  3977                           	line	316
  3978                           	
  3979  0105                     l6152:	
  3980                           	line	318
  3981                           	
  3982  0105                     l11981:	
  3983                           ;robot.c: 316: else
  3984                           ;robot.c: 317: {
  3985                           ;robot.c: 318: RobotDrive(speed, 0x7FFF);
  3986  0105  1283               	bcf	status, 5	;RP0=0, select bank0
  3987  0106  1303               	bcf	status, 6	;RP1=0, select bank0
  3988  0107  085E               	movf	(robot_turnRight@speed+1),w
  3989  0108  01AA               	clrf	(?_RobotDrive+1)
  3990  0109  07AA               	addwf	(?_RobotDrive+1)
  3991  010A  085D               	movf	(robot_turnRight@speed),w
  3992  010B  01A9               	clrf	(?_RobotDrive)
  3993  010C  07A9               	addwf	(?_RobotDrive)
  3994                           
  3995  010D  30FF               	movlw	low(07FFFh)
  3996  010E  00AB               	movwf	0+(?_RobotDrive)+02h
  3997  010F  307F               	movlw	high(07FFFh)
  3998  0110  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  3999  0111  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4000  0116  2918               	goto	l6149
  4001                           	line	319
  4002                           	
  4003  0117                     l6156:	
  4004  0117  2918               	goto	l6149
  4005                           	
  4006  0118                     l6151:	
  4007                           	
  4008  0118                     l6149:	
  4009                           	line	320
  4010                           ;robot.c: 319: }
  4011                           ;robot.c: 320: robot_read(2);
  4012  0118  3002               	movlw	(02h)
  4013  0119  120A  118A  26A0   	fcall	_robot_read
              120A  118A         
  4014                           	line	321
  4015                           	
  4016  011E                     l11983:	
  4017                           ;robot.c: 321: if (BumpSensors)
  4018  011E  1683               	bsf	status, 5	;RP0=1, select bank1
  4019  011F  1303               	bcf	status, 6	;RP1=0, select bank1
  4020  0120  0840               	movf	(_BumpSensors)^080h,w	;volatile
  4021  0121  1D03               	skipz
  4022  0122  2924               	goto	u5420
  4023  0123  2939               	goto	l11989
  4024  0124                     u5420:
  4025                           	line	323
  4026                           	
  4027  0124                     l11985:	
  4028                           ;robot.c: 322: {
  4029                           ;robot.c: 323: RobotDrive(0, 0x7FFF);
  4030  0124  3000               	movlw	low(0)
  4031  0125  1283               	bcf	status, 5	;RP0=0, select bank0
  4032  0126  1303               	bcf	status, 6	;RP1=0, select bank0
  4033  0127  00A9               	movwf	(?_RobotDrive)
  4034  0128  3000               	movlw	high(0)
  4035  0129  00AA               	movwf	((?_RobotDrive))+1
  4036  012A  30FF               	movlw	low(07FFFh)
  4037  012B  00AB               	movwf	0+(?_RobotDrive)+02h
  4038  012C  307F               	movlw	high(07FFFh)
  4039  012D  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4040  012E  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4041                           	line	324
  4042                           	
  4043  0133                     l11987:	
  4044                           ;robot.c: 324: ROBOTerror = 1;
  4045  0133  1683               	bsf	status, 5	;RP0=1, select bank1
  4046  0134  1303               	bcf	status, 6	;RP1=0, select bank1
  4047  0135  01C6               	clrf	(_ROBOTerror)^080h
  4048  0136  1403               	bsf	status,0
  4049  0137  0DC6               	rlf	(_ROBOTerror)^080h,f
  4050                           	line	325
  4051                           ;robot.c: 325: break;
  4052  0138  2A0D               	goto	l12023
  4053                           	line	326
  4054                           	
  4055  0139                     l6157:	
  4056                           	line	327
  4057                           	
  4058  0139                     l11989:	
  4059                           ;robot.c: 326: }
  4060                           ;robot.c: 327: if (VwallSensor)
  4061  0139  084B               	movf	(_VwallSensor)^080h,w	;volatile
  4062  013A  1D03               	skipz
  4063  013B  293D               	goto	u5430
  4064  013C  2955               	goto	l11995
  4065  013D                     u5430:
  4066                           	line	329
  4067                           	
  4068  013D                     l11991:	
  4069                           ;robot.c: 328: {
  4070                           ;robot.c: 329: RobotDrive(0, 0x7FFF);
  4071  013D  3000               	movlw	low(0)
  4072  013E  1283               	bcf	status, 5	;RP0=0, select bank0
  4073  013F  1303               	bcf	status, 6	;RP1=0, select bank0
  4074  0140  00A9               	movwf	(?_RobotDrive)
  4075  0141  3000               	movlw	high(0)
  4076  0142  00AA               	movwf	((?_RobotDrive))+1
  4077  0143  30FF               	movlw	low(07FFFh)
  4078  0144  00AB               	movwf	0+(?_RobotDrive)+02h
  4079  0145  307F               	movlw	high(07FFFh)
  4080  0146  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4081  0147  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4082                           	line	330
  4083                           	
  4084  014C                     l11993:	
  4085                           ;robot.c: 330: ROBOTerror = 2;
  4086  014C  3002               	movlw	(02h)
  4087  014D  1283               	bcf	status, 5	;RP0=0, select bank0
  4088  014E  1303               	bcf	status, 6	;RP1=0, select bank0
  4089  014F  00DF               	movwf	(??_robot_turnRight+0)+0
  4090  0150  085F               	movf	(??_robot_turnRight+0)+0,w
  4091  0151  1683               	bsf	status, 5	;RP0=1, select bank1
  4092  0152  1303               	bcf	status, 6	;RP1=0, select bank1
  4093  0153  00C6               	movwf	(_ROBOTerror)^080h
  4094                           	line	331
  4095                           ;robot.c: 331: break;
  4096  0154  2A0D               	goto	l12023
  4097                           	line	332
  4098                           	
  4099  0155                     l6158:	
  4100                           	line	333
  4101                           	
  4102  0155                     l11995:	
  4103                           ;robot.c: 332: }
  4104                           ;robot.c: 333: if (CliffSensors)
  4105  0155  0842               	movf	(_CliffSensors)^080h,w	;volatile
  4106  0156  1D03               	skipz
  4107  0157  2959               	goto	u5440
  4108  0158  2971               	goto	l12001
  4109  0159                     u5440:
  4110                           	line	335
  4111                           	
  4112  0159                     l11997:	
  4113                           ;robot.c: 334: {
  4114                           ;robot.c: 335: RobotDrive(-200, 0x7FFF);
  4115  0159  3038               	movlw	low(-200)
  4116  015A  1283               	bcf	status, 5	;RP0=0, select bank0
  4117  015B  1303               	bcf	status, 6	;RP1=0, select bank0
  4118  015C  00A9               	movwf	(?_RobotDrive)
  4119  015D  30FF               	movlw	high(-200)
  4120  015E  00AA               	movwf	((?_RobotDrive))+1
  4121  015F  30FF               	movlw	low(07FFFh)
  4122  0160  00AB               	movwf	0+(?_RobotDrive)+02h
  4123  0161  307F               	movlw	high(07FFFh)
  4124  0162  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4125  0163  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4126                           	line	336
  4127                           	
  4128  0168                     l11999:	
  4129                           ;robot.c: 336: ROBOTerror = 3;
  4130  0168  3003               	movlw	(03h)
  4131  0169  1283               	bcf	status, 5	;RP0=0, select bank0
  4132  016A  1303               	bcf	status, 6	;RP1=0, select bank0
  4133  016B  00DF               	movwf	(??_robot_turnRight+0)+0
  4134  016C  085F               	movf	(??_robot_turnRight+0)+0,w
  4135  016D  1683               	bsf	status, 5	;RP0=1, select bank1
  4136  016E  1303               	bcf	status, 6	;RP1=0, select bank1
  4137  016F  00C6               	movwf	(_ROBOTerror)^080h
  4138                           	line	337
  4139                           ;robot.c: 337: break;
  4140  0170  2A0D               	goto	l12023
  4141                           	line	338
  4142                           	
  4143  0171                     l6159:	
  4144                           	line	339
  4145                           	
  4146  0171                     l12001:	
  4147                           ;robot.c: 338: }
  4148                           ;robot.c: 339: if (VictimSensor != 255)
  4149  0171  084A               	movf	(_VictimSensor)^080h,w	;volatile
  4150  0172  3AFF               	xorlw	0FFh
  4151  0173  1903               	skipnz
  4152  0174  2976               	goto	u5451
  4153  0175  2977               	goto	u5450
  4154  0176                     u5451:
  4155  0176  298F               	goto	l12007
  4156  0177                     u5450:
  4157                           	line	341
  4158                           	
  4159  0177                     l12003:	
  4160                           ;robot.c: 340: {
  4161                           ;robot.c: 341: RobotDrive(0, 0x7FFF);
  4162  0177  3000               	movlw	low(0)
  4163  0178  1283               	bcf	status, 5	;RP0=0, select bank0
  4164  0179  1303               	bcf	status, 6	;RP1=0, select bank0
  4165  017A  00A9               	movwf	(?_RobotDrive)
  4166  017B  3000               	movlw	high(0)
  4167  017C  00AA               	movwf	((?_RobotDrive))+1
  4168  017D  30FF               	movlw	low(07FFFh)
  4169  017E  00AB               	movwf	0+(?_RobotDrive)+02h
  4170  017F  307F               	movlw	high(07FFFh)
  4171  0180  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4172  0181  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4173                           	line	342
  4174                           	
  4175  0186                     l12005:	
  4176                           ;robot.c: 342: ROBOTerror = 4;
  4177  0186  3004               	movlw	(04h)
  4178  0187  1283               	bcf	status, 5	;RP0=0, select bank0
  4179  0188  1303               	bcf	status, 6	;RP1=0, select bank0
  4180  0189  00DF               	movwf	(??_robot_turnRight+0)+0
  4181  018A  085F               	movf	(??_robot_turnRight+0)+0,w
  4182  018B  1683               	bsf	status, 5	;RP0=1, select bank1
  4183  018C  1303               	bcf	status, 6	;RP1=0, select bank1
  4184  018D  00C6               	movwf	(_ROBOTerror)^080h
  4185                           	line	343
  4186                           ;robot.c: 343: break;
  4187  018E  2A0D               	goto	l12023
  4188                           	line	344
  4189                           	
  4190  018F                     l6160:	
  4191                           	line	345
  4192                           	
  4193  018F                     l12007:	
  4194                           ;robot.c: 344: }
  4195                           ;robot.c: 345: temp1 = DistHighByte;
  4196  018F  087D               	movf	(_DistHighByte),w	;volatile
  4197  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  4198  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  4199  0192  00DF               	movwf	(??_robot_turnRight+0)+0
  4200  0193  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4201  0194  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4202  0195  00E6               	movwf	(robot_turnRight@temp1)
  4203  0196  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4204  0197  00E7               	movwf	(robot_turnRight@temp1+1)
  4205                           	line	346
  4206                           	
  4207  0198                     l12009:	
  4208                           ;robot.c: 346: temp1 = temp1 << 8;
  4209  0198  0867               	movf	(robot_turnRight@temp1+1),w
  4210  0199  00E0               	movwf	(??_robot_turnRight+0)+0+1
  4211  019A  0866               	movf	(robot_turnRight@temp1),w
  4212  019B  00DF               	movwf	(??_robot_turnRight+0)+0
  4213  019C  085F               	movf	(??_robot_turnRight+0)+0,w
  4214  019D  00E0               	movwf	(??_robot_turnRight+0)+1
  4215  019E  01DF               	clrf	(??_robot_turnRight+0)+0
  4216  019F  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4217  01A0  00E6               	movwf	(robot_turnRight@temp1)
  4218  01A1  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4219  01A2  00E7               	movwf	(robot_turnRight@temp1+1)
  4220                           	line	347
  4221                           	
  4222  01A3                     l12011:	
  4223                           ;robot.c: 347: temp1 += DistLowByte;
  4224  01A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4225  01A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4226  01A5  0843               	movf	(_DistLowByte)^080h,w	;volatile
  4227  01A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4228  01A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4229  01A8  00DF               	movwf	(??_robot_turnRight+0)+0
  4230  01A9  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4231  01AA  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4232  01AB  07E6               	addwf	(robot_turnRight@temp1),f
  4233  01AC  1803               	skipnc
  4234  01AD  0AE7               	incf	(robot_turnRight@temp1+1),f
  4235  01AE  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4236  01AF  07E7               	addwf	(robot_turnRight@temp1+1),f
  4237                           	line	348
  4238                           	
  4239  01B0                     l12013:	
  4240                           ;robot.c: 348: distTravelled += temp1;
  4241  01B0  0866               	movf	(robot_turnRight@temp1),w
  4242  01B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4243  01B2  1303               	bcf	status, 6	;RP1=0, select bank1
  4244  01B3  07B2               	addwf	(_distTravelled)^080h,f
  4245  01B4  1803               	skipnc
  4246  01B5  0AB3               	incf	(_distTravelled+1)^080h,f
  4247  01B6  1283               	bcf	status, 5	;RP0=0, select bank0
  4248  01B7  1303               	bcf	status, 6	;RP1=0, select bank0
  4249  01B8  0867               	movf	(robot_turnRight@temp1+1),w
  4250  01B9  1683               	bsf	status, 5	;RP0=1, select bank1
  4251  01BA  1303               	bcf	status, 6	;RP1=0, select bank1
  4252  01BB  07B3               	addwf	(_distTravelled+1)^080h,f
  4253                           	line	349
  4254                           	
  4255  01BC                     l12015:	
  4256                           ;robot.c: 349: TotalDistTravelled += temp1;
  4257  01BC  1283               	bcf	status, 5	;RP0=0, select bank0
  4258  01BD  1303               	bcf	status, 6	;RP1=0, select bank0
  4259  01BE  0866               	movf	(robot_turnRight@temp1),w
  4260  01BF  1683               	bsf	status, 5	;RP0=1, select bank1
  4261  01C0  1303               	bcf	status, 6	;RP1=0, select bank1
  4262  01C1  07AC               	addwf	(_TotalDistTravelled)^080h,f
  4263  01C2  1803               	skipnc
  4264  01C3  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  4265  01C4  1283               	bcf	status, 5	;RP0=0, select bank0
  4266  01C5  1303               	bcf	status, 6	;RP1=0, select bank0
  4267  01C6  0867               	movf	(robot_turnRight@temp1+1),w
  4268  01C7  1683               	bsf	status, 5	;RP0=1, select bank1
  4269  01C8  1303               	bcf	status, 6	;RP1=0, select bank1
  4270  01C9  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  4271                           	line	350
  4272                           	
  4273  01CA                     l12017:	
  4274                           ;robot.c: 350: temp1 = AngleHighByte;
  4275  01CA  083E               	movf	(_AngleHighByte)^080h,w	;volatile
  4276  01CB  1283               	bcf	status, 5	;RP0=0, select bank0
  4277  01CC  1303               	bcf	status, 6	;RP1=0, select bank0
  4278  01CD  00DF               	movwf	(??_robot_turnRight+0)+0
  4279  01CE  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4280  01CF  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4281  01D0  00E6               	movwf	(robot_turnRight@temp1)
  4282  01D1  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4283  01D2  00E7               	movwf	(robot_turnRight@temp1+1)
  4284                           	line	351
  4285                           	
  4286  01D3                     l12019:	
  4287                           ;robot.c: 351: temp1 = temp1 << 8;
  4288  01D3  0867               	movf	(robot_turnRight@temp1+1),w
  4289  01D4  00E0               	movwf	(??_robot_turnRight+0)+0+1
  4290  01D5  0866               	movf	(robot_turnRight@temp1),w
  4291  01D6  00DF               	movwf	(??_robot_turnRight+0)+0
  4292  01D7  085F               	movf	(??_robot_turnRight+0)+0,w
  4293  01D8  00E0               	movwf	(??_robot_turnRight+0)+1
  4294  01D9  01DF               	clrf	(??_robot_turnRight+0)+0
  4295  01DA  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4296  01DB  00E6               	movwf	(robot_turnRight@temp1)
  4297  01DC  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4298  01DD  00E7               	movwf	(robot_turnRight@temp1+1)
  4299                           	line	352
  4300                           ;robot.c: 352: temp1 += AngleLowByte;
  4301  01DE  1683               	bsf	status, 5	;RP0=1, select bank1
  4302  01DF  1303               	bcf	status, 6	;RP1=0, select bank1
  4303  01E0  083F               	movf	(_AngleLowByte)^080h,w	;volatile
  4304  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  4305  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  4306  01E3  00DF               	movwf	(??_robot_turnRight+0)+0
  4307  01E4  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4308  01E5  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4309  01E6  07E6               	addwf	(robot_turnRight@temp1),f
  4310  01E7  1803               	skipnc
  4311  01E8  0AE7               	incf	(robot_turnRight@temp1+1),f
  4312  01E9  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4313  01EA  07E7               	addwf	(robot_turnRight@temp1+1),f
  4314                           	line	353
  4315                           ;robot.c: 353: angleTurned += temp1;
  4316  01EB  0866               	movf	(robot_turnRight@temp1),w
  4317  01EC  1683               	bsf	status, 5	;RP0=1, select bank1
  4318  01ED  1303               	bcf	status, 6	;RP1=0, select bank1
  4319  01EE  07B0               	addwf	(_angleTurned)^080h,f
  4320  01EF  1803               	skipnc
  4321  01F0  0AB1               	incf	(_angleTurned+1)^080h,f
  4322  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  4323  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  4324  01F3  0867               	movf	(robot_turnRight@temp1+1),w
  4325  01F4  1683               	bsf	status, 5	;RP0=1, select bank1
  4326  01F5  1303               	bcf	status, 6	;RP1=0, select bank1
  4327  01F6  07B1               	addwf	(_angleTurned+1)^080h,f
  4328                           	line	354
  4329                           ;robot.c: 354: Disp2 = RobotPos;
  4330  01F7  0848               	movf	(_RobotPos)^080h,w
  4331  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4332  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4333  01FA  00DF               	movwf	(??_robot_turnRight+0)+0
  4334  01FB  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4335  01FC  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4336  01FD  1683               	bsf	status, 5	;RP0=1, select bank1
  4337  01FE  1303               	bcf	status, 6	;RP1=0, select bank1
  4338  01FF  00A6               	movwf	(_Disp2)^080h
  4339  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  4340  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  4341  0202  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4342  0203  1683               	bsf	status, 5	;RP0=1, select bank1
  4343  0204  1303               	bcf	status, 6	;RP1=0, select bank1
  4344  0205  00A7               	movwf	(_Disp2+1)^080h
  4345                           	line	355
  4346                           	
  4347  0206                     l12021:	
  4348                           ;robot.c: 355: UpdateDisplay();
  4349  0206  120A  118A  241B   	fcall	_UpdateDisplay
              120A  118A         
  4350  020B  284F               	goto	l11961
  4351                           	line	356
  4352                           	
  4353  020C                     l6161:	
  4354                           	line	300
  4355  020C  284F               	goto	l11961
  4356                           	
  4357  020D                     l6155:	
  4358                           	line	358
  4359                           	
  4360  020D                     l12023:	
  4361                           ;robot.c: 356: }
  4362                           ;robot.c: 358: angleTurned = 0;
  4363  020D  1683               	bsf	status, 5	;RP0=1, select bank1
  4364  020E  1303               	bcf	status, 6	;RP1=0, select bank1
  4365  020F  01B0               	clrf	(_angleTurned)^080h
  4366  0210  01B1               	clrf	(_angleTurned+1)^080h
  4367                           	line	359
  4368                           ;robot.c: 359: switch (RobotPos)
  4369  0211  2AC6               	goto	l12055
  4370                           	line	361
  4371                           ;robot.c: 360: {
  4372                           ;robot.c: 361: case 3:
  4373                           	
  4374  0212                     l6163:	
  4375                           	line	362
  4376                           	
  4377  0212                     l12025:	
  4378                           ;robot.c: 362: RobotDrive((speed /2), -400);
  4379  0212  3002               	movlw	low(02h)
  4380  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  4381  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  4382  0215  00A0               	movwf	(?___awdiv)
  4383  0216  3000               	movlw	high(02h)
  4384  0217  00A1               	movwf	((?___awdiv))+1
  4385  0218  085E               	movf	(robot_turnRight@speed+1),w
  4386  0219  01A3               	clrf	1+(?___awdiv)+02h
  4387  021A  07A3               	addwf	1+(?___awdiv)+02h
  4388  021B  085D               	movf	(robot_turnRight@speed),w
  4389  021C  01A2               	clrf	0+(?___awdiv)+02h
  4390  021D  07A2               	addwf	0+(?___awdiv)+02h
  4391                           
  4392  021E  160A  118A  21F6   	fcall	___awdiv
              120A  118A         
  4393  0223  1283               	bcf	status, 5	;RP0=0, select bank0
  4394  0224  1303               	bcf	status, 6	;RP1=0, select bank0
  4395  0225  0821               	movf	(1+(?___awdiv)),w
  4396  0226  01AA               	clrf	(?_RobotDrive+1)
  4397  0227  07AA               	addwf	(?_RobotDrive+1)
  4398  0228  0820               	movf	(0+(?___awdiv)),w
  4399  0229  01A9               	clrf	(?_RobotDrive)
  4400  022A  07A9               	addwf	(?_RobotDrive)
  4401                           
  4402  022B  3070               	movlw	low(-400)
  4403  022C  00AB               	movwf	0+(?_RobotDrive)+02h
  4404  022D  30FE               	movlw	high(-400)
  4405  022E  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4406  022F  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4407                           	line	363
  4408                           	
  4409  0234                     l12027:	
  4410                           ;robot.c: 363: turnTarget = -90;
  4411  0234  30A6               	movlw	low(-90)
  4412  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  4413  0236  1303               	bcf	status, 6	;RP1=0, select bank0
  4414  0237  00E2               	movwf	(robot_turnRight@turnTarget)
  4415  0238  30FF               	movlw	high(-90)
  4416  0239  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4417                           	line	364
  4418                           ;robot.c: 364: break;
  4419  023A  2ADC               	goto	l12057
  4420                           	line	366
  4421                           ;robot.c: 366: case 7:
  4422                           	
  4423  023B                     l6165:	
  4424                           	line	367
  4425                           	
  4426  023B                     l12029:	
  4427                           ;robot.c: 367: RobotDrive((speed), -400-100);
  4428  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  4429  023C  085E               	movf	(robot_turnRight@speed+1),w
  4430  023D  01AA               	clrf	(?_RobotDrive+1)
  4431  023E  07AA               	addwf	(?_RobotDrive+1)
  4432  023F  085D               	movf	(robot_turnRight@speed),w
  4433  0240  01A9               	clrf	(?_RobotDrive)
  4434  0241  07A9               	addwf	(?_RobotDrive)
  4435                           
  4436  0242  300C               	movlw	low(-500)
  4437  0243  00AB               	movwf	0+(?_RobotDrive)+02h
  4438  0244  30FE               	movlw	high(-500)
  4439  0245  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4440  0246  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4441                           	line	368
  4442                           	
  4443  024B                     l12031:	
  4444                           ;robot.c: 368: turnTarget = -185;
  4445  024B  3047               	movlw	low(-185)
  4446  024C  1283               	bcf	status, 5	;RP0=0, select bank0
  4447  024D  1303               	bcf	status, 6	;RP1=0, select bank0
  4448  024E  00E2               	movwf	(robot_turnRight@turnTarget)
  4449  024F  30FF               	movlw	high(-185)
  4450  0250  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4451                           	line	369
  4452                           ;robot.c: 369: break;
  4453  0251  2ADC               	goto	l12057
  4454                           	line	370
  4455                           ;robot.c: 370: case 10:
  4456                           	
  4457  0252                     l6166:	
  4458                           	line	371
  4459                           	
  4460  0252                     l12033:	
  4461                           ;robot.c: 371: RobotDrive((speed), -400-100);
  4462  0252  1283               	bcf	status, 5	;RP0=0, select bank0
  4463  0253  085E               	movf	(robot_turnRight@speed+1),w
  4464  0254  01AA               	clrf	(?_RobotDrive+1)
  4465  0255  07AA               	addwf	(?_RobotDrive+1)
  4466  0256  085D               	movf	(robot_turnRight@speed),w
  4467  0257  01A9               	clrf	(?_RobotDrive)
  4468  0258  07A9               	addwf	(?_RobotDrive)
  4469                           
  4470  0259  300C               	movlw	low(-500)
  4471  025A  00AB               	movwf	0+(?_RobotDrive)+02h
  4472  025B  30FE               	movlw	high(-500)
  4473  025C  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4474  025D  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4475                           	line	372
  4476                           	
  4477  0262                     l12035:	
  4478                           ;robot.c: 372: turnTarget = -90;
  4479  0262  30A6               	movlw	low(-90)
  4480  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  4481  0264  1303               	bcf	status, 6	;RP1=0, select bank0
  4482  0265  00E2               	movwf	(robot_turnRight@turnTarget)
  4483  0266  30FF               	movlw	high(-90)
  4484  0267  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4485                           	line	373
  4486                           ;robot.c: 373: break;
  4487  0268  2ADC               	goto	l12057
  4488                           	line	374
  4489                           ;robot.c: 374: case 11:
  4490                           	
  4491  0269                     l6167:	
  4492                           	line	375
  4493                           	
  4494  0269                     l12037:	
  4495                           ;robot.c: 375: RobotDrive((speed), -400 - 100);
  4496  0269  1283               	bcf	status, 5	;RP0=0, select bank0
  4497  026A  085E               	movf	(robot_turnRight@speed+1),w
  4498  026B  01AA               	clrf	(?_RobotDrive+1)
  4499  026C  07AA               	addwf	(?_RobotDrive+1)
  4500  026D  085D               	movf	(robot_turnRight@speed),w
  4501  026E  01A9               	clrf	(?_RobotDrive)
  4502  026F  07A9               	addwf	(?_RobotDrive)
  4503                           
  4504  0270  300C               	movlw	low(-500)
  4505  0271  00AB               	movwf	0+(?_RobotDrive)+02h
  4506  0272  30FE               	movlw	high(-500)
  4507  0273  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4508  0274  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4509                           	line	376
  4510                           	
  4511  0279                     l12039:	
  4512                           ;robot.c: 376: turnTarget = -190;
  4513  0279  3042               	movlw	low(-190)
  4514  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  4515  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  4516  027C  00E2               	movwf	(robot_turnRight@turnTarget)
  4517  027D  30FF               	movlw	high(-190)
  4518  027E  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4519                           	line	377
  4520                           ;robot.c: 377: break;
  4521  027F  2ADC               	goto	l12057
  4522                           	line	378
  4523                           ;robot.c: 378: case 12:
  4524                           	
  4525  0280                     l6168:	
  4526                           	line	379
  4527                           	
  4528  0280                     l12041:	
  4529                           ;robot.c: 379: RobotDrive((speed), -400 - 50);
  4530  0280  1283               	bcf	status, 5	;RP0=0, select bank0
  4531  0281  085E               	movf	(robot_turnRight@speed+1),w
  4532  0282  01AA               	clrf	(?_RobotDrive+1)
  4533  0283  07AA               	addwf	(?_RobotDrive+1)
  4534  0284  085D               	movf	(robot_turnRight@speed),w
  4535  0285  01A9               	clrf	(?_RobotDrive)
  4536  0286  07A9               	addwf	(?_RobotDrive)
  4537                           
  4538  0287  303E               	movlw	low(-450)
  4539  0288  00AB               	movwf	0+(?_RobotDrive)+02h
  4540  0289  30FE               	movlw	high(-450)
  4541  028A  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4542  028B  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4543                           	line	380
  4544                           	
  4545  0290                     l12043:	
  4546                           ;robot.c: 380: turnTarget = -190;
  4547  0290  3042               	movlw	low(-190)
  4548  0291  1283               	bcf	status, 5	;RP0=0, select bank0
  4549  0292  1303               	bcf	status, 6	;RP1=0, select bank0
  4550  0293  00E2               	movwf	(robot_turnRight@turnTarget)
  4551  0294  30FF               	movlw	high(-190)
  4552  0295  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4553                           	line	381
  4554                           ;robot.c: 381: break;
  4555  0296  2ADC               	goto	l12057
  4556                           	line	382
  4557                           ;robot.c: 382: case 17:
  4558                           	
  4559  0297                     l6169:	
  4560                           	line	383
  4561                           	
  4562  0297                     l12045:	
  4563                           ;robot.c: 383: RobotDrive((speed), -400 - 100);
  4564  0297  1283               	bcf	status, 5	;RP0=0, select bank0
  4565  0298  085E               	movf	(robot_turnRight@speed+1),w
  4566  0299  01AA               	clrf	(?_RobotDrive+1)
  4567  029A  07AA               	addwf	(?_RobotDrive+1)
  4568  029B  085D               	movf	(robot_turnRight@speed),w
  4569  029C  01A9               	clrf	(?_RobotDrive)
  4570  029D  07A9               	addwf	(?_RobotDrive)
  4571                           
  4572  029E  300C               	movlw	low(-500)
  4573  029F  00AB               	movwf	0+(?_RobotDrive)+02h
  4574  02A0  30FE               	movlw	high(-500)
  4575  02A1  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4576  02A2  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4577                           	line	384
  4578                           	
  4579  02A7                     l12047:	
  4580                           ;robot.c: 384: turnTarget = -190;
  4581  02A7  3042               	movlw	low(-190)
  4582  02A8  1283               	bcf	status, 5	;RP0=0, select bank0
  4583  02A9  1303               	bcf	status, 6	;RP1=0, select bank0
  4584  02AA  00E2               	movwf	(robot_turnRight@turnTarget)
  4585  02AB  30FF               	movlw	high(-190)
  4586  02AC  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4587                           	line	385
  4588                           ;robot.c: 385: break;
  4589  02AD  2ADC               	goto	l12057
  4590                           	line	386
  4591                           ;robot.c: 386: default:
  4592                           	
  4593  02AE                     l6170:	
  4594                           	line	387
  4595                           	
  4596  02AE                     l12049:	
  4597                           ;robot.c: 387: RobotDrive((speed), -400);
  4598  02AE  1283               	bcf	status, 5	;RP0=0, select bank0
  4599  02AF  085E               	movf	(robot_turnRight@speed+1),w
  4600  02B0  01AA               	clrf	(?_RobotDrive+1)
  4601  02B1  07AA               	addwf	(?_RobotDrive+1)
  4602  02B2  085D               	movf	(robot_turnRight@speed),w
  4603  02B3  01A9               	clrf	(?_RobotDrive)
  4604  02B4  07A9               	addwf	(?_RobotDrive)
  4605                           
  4606  02B5  3070               	movlw	low(-400)
  4607  02B6  00AB               	movwf	0+(?_RobotDrive)+02h
  4608  02B7  30FE               	movlw	high(-400)
  4609  02B8  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4610  02B9  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4611                           	line	388
  4612                           	
  4613  02BE                     l12051:	
  4614                           ;robot.c: 388: turnTarget = -75;
  4615  02BE  30B5               	movlw	low(-75)
  4616  02BF  1283               	bcf	status, 5	;RP0=0, select bank0
  4617  02C0  1303               	bcf	status, 6	;RP1=0, select bank0
  4618  02C1  00E2               	movwf	(robot_turnRight@turnTarget)
  4619  02C2  30FF               	movlw	high(-75)
  4620  02C3  00E3               	movwf	((robot_turnRight@turnTarget))+1
  4621                           	line	389
  4622                           ;robot.c: 389: break;
  4623  02C4  2ADC               	goto	l12057
  4624                           	line	390
  4625                           	
  4626  02C5                     l12053:	
  4627                           ;robot.c: 390: }
  4628  02C5  2ADC               	goto	l12057
  4629                           	line	359
  4630                           	
  4631  02C6                     l6162:	
  4632                           	
  4633  02C6                     l12055:	
  4634  02C6  1683               	bsf	status, 5	;RP0=1, select bank1
  4635  02C7  1303               	bcf	status, 6	;RP1=0, select bank1
  4636  02C8  0848               	movf	(_RobotPos)^080h,w
  4637                           	; Switch size 1, requested type "space"
  4638                           ; Number of cases is 6, Range of values is 3 to 17
  4639                           ; switch strategies available:
  4640                           ; Name         Instructions Cycles
  4641                           ; simple_byte           19    10 (average)
  4642                           ; direct_byte           56    11 (fixed)
  4643                           ; jumptable            263     9 (fixed)
  4644                           ;	Chosen strategy is simple_byte
  4645                           
  4646                           	opt asmopt_off
  4647  02C9  3A03               	xorlw	3^0	; case 3
  4648  02CA  1903               	skipnz
  4649  02CB  2A12               	goto	l12025
  4650  02CC  3A04               	xorlw	7^3	; case 7
  4651  02CD  1903               	skipnz
  4652  02CE  2A3B               	goto	l12029
  4653  02CF  3A0D               	xorlw	10^7	; case 10
  4654  02D0  1903               	skipnz
  4655  02D1  2A52               	goto	l12033
  4656  02D2  3A01               	xorlw	11^10	; case 11
  4657  02D3  1903               	skipnz
  4658  02D4  2A69               	goto	l12037
  4659  02D5  3A07               	xorlw	12^11	; case 12
  4660  02D6  1903               	skipnz
  4661  02D7  2A80               	goto	l12041
  4662  02D8  3A1D               	xorlw	17^12	; case 17
  4663  02D9  1903               	skipnz
  4664  02DA  2A97               	goto	l12045
  4665  02DB  2AAE               	goto	l12049
  4666                           	opt asmopt_on
  4667                           
  4668                           	line	390
  4669                           	
  4670  02DC                     l6164:	
  4671                           	line	391
  4672                           	
  4673  02DC                     l12057:	
  4674                           ;robot.c: 391: rotate(25, 1);
  4675  02DC  3019               	movlw	low(019h)
  4676  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
  4677  02DE  00A3               	movwf	(?_rotate)
  4678  02DF  3000               	movlw	high(019h)
  4679  02E0  00A4               	movwf	((?_rotate))+1
  4680  02E1  01A5               	clrf	0+(?_rotate)+02h
  4681  02E2  1403               	bsf	status,0
  4682  02E3  0DA5               	rlf	0+(?_rotate)+02h,f
  4683  02E4  160A  118A  2043   	fcall	_rotate
              120A  118A         
  4684                           	line	392
  4685                           ;robot.c: 392: while (abs(angleTurned) < abs(turnTarget))
  4686  02E9  2BCF               	goto	l12103
  4687                           	
  4688  02EA                     l6172:	
  4689                           	line	394
  4690                           	
  4691  02EA                     l12059:	
  4692                           ;robot.c: 393: {
  4693                           ;robot.c: 394: robot_read(2);
  4694  02EA  3002               	movlw	(02h)
  4695  02EB  120A  118A  26A0   	fcall	_robot_read
              120A  118A         
  4696                           	line	395
  4697                           	
  4698  02F0                     l12061:	
  4699                           ;robot.c: 395: if (BumpSensors)
  4700  02F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4701  02F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4702  02F2  0840               	movf	(_BumpSensors)^080h,w	;volatile
  4703  02F3  1D03               	skipz
  4704  02F4  2AF6               	goto	u5460
  4705  02F5  2B0B               	goto	l12067
  4706  02F6                     u5460:
  4707                           	line	397
  4708                           	
  4709  02F6                     l12063:	
  4710                           ;robot.c: 396: {
  4711                           ;robot.c: 397: RobotDrive(0, 0x7FFF);
  4712  02F6  3000               	movlw	low(0)
  4713  02F7  1283               	bcf	status, 5	;RP0=0, select bank0
  4714  02F8  1303               	bcf	status, 6	;RP1=0, select bank0
  4715  02F9  00A9               	movwf	(?_RobotDrive)
  4716  02FA  3000               	movlw	high(0)
  4717  02FB  00AA               	movwf	((?_RobotDrive))+1
  4718  02FC  30FF               	movlw	low(07FFFh)
  4719  02FD  00AB               	movwf	0+(?_RobotDrive)+02h
  4720  02FE  307F               	movlw	high(07FFFh)
  4721  02FF  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4722  0300  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4723                           	line	398
  4724                           	
  4725  0305                     l12065:	
  4726                           ;robot.c: 398: ROBOTerror = 1;
  4727  0305  1683               	bsf	status, 5	;RP0=1, select bank1
  4728  0306  1303               	bcf	status, 6	;RP1=0, select bank1
  4729  0307  01C6               	clrf	(_ROBOTerror)^080h
  4730  0308  1403               	bsf	status,0
  4731  0309  0DC6               	rlf	(_ROBOTerror)^080h,f
  4732                           	line	399
  4733                           ;robot.c: 399: break;
  4734  030A  2C04               	goto	l12105
  4735                           	line	400
  4736                           	
  4737  030B                     l6173:	
  4738                           	line	401
  4739                           	
  4740  030B                     l12067:	
  4741                           ;robot.c: 400: }
  4742                           ;robot.c: 401: if (VwallSensor)
  4743  030B  084B               	movf	(_VwallSensor)^080h,w	;volatile
  4744  030C  1D03               	skipz
  4745  030D  2B0F               	goto	u5470
  4746  030E  2B27               	goto	l12073
  4747  030F                     u5470:
  4748                           	line	403
  4749                           	
  4750  030F                     l12069:	
  4751                           ;robot.c: 402: {
  4752                           ;robot.c: 403: RobotDrive(0, 0x7FFF);
  4753  030F  3000               	movlw	low(0)
  4754  0310  1283               	bcf	status, 5	;RP0=0, select bank0
  4755  0311  1303               	bcf	status, 6	;RP1=0, select bank0
  4756  0312  00A9               	movwf	(?_RobotDrive)
  4757  0313  3000               	movlw	high(0)
  4758  0314  00AA               	movwf	((?_RobotDrive))+1
  4759  0315  30FF               	movlw	low(07FFFh)
  4760  0316  00AB               	movwf	0+(?_RobotDrive)+02h
  4761  0317  307F               	movlw	high(07FFFh)
  4762  0318  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4763  0319  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4764                           	line	404
  4765                           	
  4766  031E                     l12071:	
  4767                           ;robot.c: 404: ROBOTerror = 2;
  4768  031E  3002               	movlw	(02h)
  4769  031F  1283               	bcf	status, 5	;RP0=0, select bank0
  4770  0320  1303               	bcf	status, 6	;RP1=0, select bank0
  4771  0321  00DF               	movwf	(??_robot_turnRight+0)+0
  4772  0322  085F               	movf	(??_robot_turnRight+0)+0,w
  4773  0323  1683               	bsf	status, 5	;RP0=1, select bank1
  4774  0324  1303               	bcf	status, 6	;RP1=0, select bank1
  4775  0325  00C6               	movwf	(_ROBOTerror)^080h
  4776                           	line	405
  4777                           ;robot.c: 405: break;
  4778  0326  2C04               	goto	l12105
  4779                           	line	406
  4780                           	
  4781  0327                     l6175:	
  4782                           	line	407
  4783                           	
  4784  0327                     l12073:	
  4785                           ;robot.c: 406: }
  4786                           ;robot.c: 407: if (CliffSensors)
  4787  0327  0842               	movf	(_CliffSensors)^080h,w	;volatile
  4788  0328  1D03               	skipz
  4789  0329  2B2B               	goto	u5480
  4790  032A  2B43               	goto	l12079
  4791  032B                     u5480:
  4792                           	line	409
  4793                           	
  4794  032B                     l12075:	
  4795                           ;robot.c: 408: {
  4796                           ;robot.c: 409: RobotDrive(-200, 0x7FFF);
  4797  032B  3038               	movlw	low(-200)
  4798  032C  1283               	bcf	status, 5	;RP0=0, select bank0
  4799  032D  1303               	bcf	status, 6	;RP1=0, select bank0
  4800  032E  00A9               	movwf	(?_RobotDrive)
  4801  032F  30FF               	movlw	high(-200)
  4802  0330  00AA               	movwf	((?_RobotDrive))+1
  4803  0331  30FF               	movlw	low(07FFFh)
  4804  0332  00AB               	movwf	0+(?_RobotDrive)+02h
  4805  0333  307F               	movlw	high(07FFFh)
  4806  0334  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4807  0335  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4808                           	line	410
  4809                           	
  4810  033A                     l12077:	
  4811                           ;robot.c: 410: ROBOTerror = 3;
  4812  033A  3003               	movlw	(03h)
  4813  033B  1283               	bcf	status, 5	;RP0=0, select bank0
  4814  033C  1303               	bcf	status, 6	;RP1=0, select bank0
  4815  033D  00DF               	movwf	(??_robot_turnRight+0)+0
  4816  033E  085F               	movf	(??_robot_turnRight+0)+0,w
  4817  033F  1683               	bsf	status, 5	;RP0=1, select bank1
  4818  0340  1303               	bcf	status, 6	;RP1=0, select bank1
  4819  0341  00C6               	movwf	(_ROBOTerror)^080h
  4820                           	line	411
  4821                           ;robot.c: 411: break;
  4822  0342  2C04               	goto	l12105
  4823                           	line	412
  4824                           	
  4825  0343                     l6176:	
  4826                           	line	413
  4827                           	
  4828  0343                     l12079:	
  4829                           ;robot.c: 412: }
  4830                           ;robot.c: 413: if (VictimSensor != 255)
  4831  0343  084A               	movf	(_VictimSensor)^080h,w	;volatile
  4832  0344  3AFF               	xorlw	0FFh
  4833  0345  1903               	skipnz
  4834  0346  2B48               	goto	u5491
  4835  0347  2B49               	goto	u5490
  4836  0348                     u5491:
  4837  0348  2B61               	goto	l12085
  4838  0349                     u5490:
  4839                           	line	415
  4840                           	
  4841  0349                     l12081:	
  4842                           ;robot.c: 414: {
  4843                           ;robot.c: 415: RobotDrive(0, 0x7FFF);
  4844  0349  3000               	movlw	low(0)
  4845  034A  1283               	bcf	status, 5	;RP0=0, select bank0
  4846  034B  1303               	bcf	status, 6	;RP1=0, select bank0
  4847  034C  00A9               	movwf	(?_RobotDrive)
  4848  034D  3000               	movlw	high(0)
  4849  034E  00AA               	movwf	((?_RobotDrive))+1
  4850  034F  30FF               	movlw	low(07FFFh)
  4851  0350  00AB               	movwf	0+(?_RobotDrive)+02h
  4852  0351  307F               	movlw	high(07FFFh)
  4853  0352  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  4854  0353  160A  118A  200A   	fcall	_RobotDrive
              120A  118A         
  4855                           	line	416
  4856                           	
  4857  0358                     l12083:	
  4858                           ;robot.c: 416: ROBOTerror = 4;
  4859  0358  3004               	movlw	(04h)
  4860  0359  1283               	bcf	status, 5	;RP0=0, select bank0
  4861  035A  1303               	bcf	status, 6	;RP1=0, select bank0
  4862  035B  00DF               	movwf	(??_robot_turnRight+0)+0
  4863  035C  085F               	movf	(??_robot_turnRight+0)+0,w
  4864  035D  1683               	bsf	status, 5	;RP0=1, select bank1
  4865  035E  1303               	bcf	status, 6	;RP1=0, select bank1
  4866  035F  00C6               	movwf	(_ROBOTerror)^080h
  4867                           	line	417
  4868                           ;robot.c: 417: break;
  4869  0360  2C04               	goto	l12105
  4870                           	line	418
  4871                           	
  4872  0361                     l6177:	
  4873                           	line	419
  4874                           	
  4875  0361                     l12085:	
  4876                           ;robot.c: 418: }
  4877                           ;robot.c: 419: temp1 = AngleHighByte;
  4878  0361  083E               	movf	(_AngleHighByte)^080h,w	;volatile
  4879  0362  1283               	bcf	status, 5	;RP0=0, select bank0
  4880  0363  1303               	bcf	status, 6	;RP1=0, select bank0
  4881  0364  00DF               	movwf	(??_robot_turnRight+0)+0
  4882  0365  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4883  0366  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4884  0367  00E6               	movwf	(robot_turnRight@temp1)
  4885  0368  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4886  0369  00E7               	movwf	(robot_turnRight@temp1+1)
  4887                           	line	420
  4888                           	
  4889  036A                     l12087:	
  4890                           ;robot.c: 420: temp1 = temp1 << 8;
  4891  036A  0867               	movf	(robot_turnRight@temp1+1),w
  4892  036B  00E0               	movwf	(??_robot_turnRight+0)+0+1
  4893  036C  0866               	movf	(robot_turnRight@temp1),w
  4894  036D  00DF               	movwf	(??_robot_turnRight+0)+0
  4895  036E  085F               	movf	(??_robot_turnRight+0)+0,w
  4896  036F  00E0               	movwf	(??_robot_turnRight+0)+1
  4897  0370  01DF               	clrf	(??_robot_turnRight+0)+0
  4898  0371  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4899  0372  00E6               	movwf	(robot_turnRight@temp1)
  4900  0373  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4901  0374  00E7               	movwf	(robot_turnRight@temp1+1)
  4902                           	line	421
  4903                           	
  4904  0375                     l12089:	
  4905                           ;robot.c: 421: temp1 += AngleLowByte;
  4906  0375  1683               	bsf	status, 5	;RP0=1, select bank1
  4907  0376  1303               	bcf	status, 6	;RP1=0, select bank1
  4908  0377  083F               	movf	(_AngleLowByte)^080h,w	;volatile
  4909  0378  1283               	bcf	status, 5	;RP0=0, select bank0
  4910  0379  1303               	bcf	status, 6	;RP1=0, select bank0
  4911  037A  00DF               	movwf	(??_robot_turnRight+0)+0
  4912  037B  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4913  037C  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4914  037D  07E6               	addwf	(robot_turnRight@temp1),f
  4915  037E  1803               	skipnc
  4916  037F  0AE7               	incf	(robot_turnRight@temp1+1),f
  4917  0380  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4918  0381  07E7               	addwf	(robot_turnRight@temp1+1),f
  4919                           	line	422
  4920                           	
  4921  0382                     l12091:	
  4922                           ;robot.c: 422: angleTurned += temp1;
  4923  0382  0866               	movf	(robot_turnRight@temp1),w
  4924  0383  1683               	bsf	status, 5	;RP0=1, select bank1
  4925  0384  1303               	bcf	status, 6	;RP1=0, select bank1
  4926  0385  07B0               	addwf	(_angleTurned)^080h,f
  4927  0386  1803               	skipnc
  4928  0387  0AB1               	incf	(_angleTurned+1)^080h,f
  4929  0388  1283               	bcf	status, 5	;RP0=0, select bank0
  4930  0389  1303               	bcf	status, 6	;RP1=0, select bank0
  4931  038A  0867               	movf	(robot_turnRight@temp1+1),w
  4932  038B  1683               	bsf	status, 5	;RP0=1, select bank1
  4933  038C  1303               	bcf	status, 6	;RP1=0, select bank1
  4934  038D  07B1               	addwf	(_angleTurned+1)^080h,f
  4935                           	line	423
  4936                           	
  4937  038E                     l12093:	
  4938                           ;robot.c: 423: temp1 = DistHighByte;
  4939  038E  087D               	movf	(_DistHighByte),w	;volatile
  4940  038F  1283               	bcf	status, 5	;RP0=0, select bank0
  4941  0390  1303               	bcf	status, 6	;RP1=0, select bank0
  4942  0391  00DF               	movwf	(??_robot_turnRight+0)+0
  4943  0392  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4944  0393  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4945  0394  00E6               	movwf	(robot_turnRight@temp1)
  4946  0395  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4947  0396  00E7               	movwf	(robot_turnRight@temp1+1)
  4948                           	line	424
  4949                           ;robot.c: 424: temp1 = temp1 << 8;
  4950  0397  0867               	movf	(robot_turnRight@temp1+1),w
  4951  0398  00E0               	movwf	(??_robot_turnRight+0)+0+1
  4952  0399  0866               	movf	(robot_turnRight@temp1),w
  4953  039A  00DF               	movwf	(??_robot_turnRight+0)+0
  4954  039B  085F               	movf	(??_robot_turnRight+0)+0,w
  4955  039C  00E0               	movwf	(??_robot_turnRight+0)+1
  4956  039D  01DF               	clrf	(??_robot_turnRight+0)+0
  4957  039E  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4958  039F  00E6               	movwf	(robot_turnRight@temp1)
  4959  03A0  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4960  03A1  00E7               	movwf	(robot_turnRight@temp1+1)
  4961                           	line	425
  4962                           	
  4963  03A2                     l12095:	
  4964                           ;robot.c: 425: temp1 += DistLowByte;
  4965  03A2  1683               	bsf	status, 5	;RP0=1, select bank1
  4966  03A3  1303               	bcf	status, 6	;RP1=0, select bank1
  4967  03A4  0843               	movf	(_DistLowByte)^080h,w	;volatile
  4968  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  4969  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  4970  03A7  00DF               	movwf	(??_robot_turnRight+0)+0
  4971  03A8  01E0               	clrf	(??_robot_turnRight+0)+0+1
  4972  03A9  085F               	movf	0+(??_robot_turnRight+0)+0,w
  4973  03AA  07E6               	addwf	(robot_turnRight@temp1),f
  4974  03AB  1803               	skipnc
  4975  03AC  0AE7               	incf	(robot_turnRight@temp1+1),f
  4976  03AD  0860               	movf	1+(??_robot_turnRight+0)+0,w
  4977  03AE  07E7               	addwf	(robot_turnRight@temp1+1),f
  4978                           	line	426
  4979                           	
  4980  03AF                     l12097:	
  4981                           ;robot.c: 426: distTravelled += temp1;
  4982  03AF  0866               	movf	(robot_turnRight@temp1),w
  4983  03B0  1683               	bsf	status, 5	;RP0=1, select bank1
  4984  03B1  1303               	bcf	status, 6	;RP1=0, select bank1
  4985  03B2  07B2               	addwf	(_distTravelled)^080h,f
  4986  03B3  1803               	skipnc
  4987  03B4  0AB3               	incf	(_distTravelled+1)^080h,f
  4988  03B5  1283               	bcf	status, 5	;RP0=0, select bank0
  4989  03B6  1303               	bcf	status, 6	;RP1=0, select bank0
  4990  03B7  0867               	movf	(robot_turnRight@temp1+1),w
  4991  03B8  1683               	bsf	status, 5	;RP0=1, select bank1
  4992  03B9  1303               	bcf	status, 6	;RP1=0, select bank1
  4993  03BA  07B3               	addwf	(_distTravelled+1)^080h,f
  4994                           	line	427
  4995                           	
  4996  03BB                     l12099:	
  4997                           ;robot.c: 427: TotalDistTravelled += temp1;
  4998  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4999  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  5000  03BD  0866               	movf	(robot_turnRight@temp1),w
  5001  03BE  1683               	bsf	status, 5	;RP0=1, select bank1
  5002  03BF  1303               	bcf	status, 6	;RP1=0, select bank1
  5003  03C0  07AC               	addwf	(_TotalDistTravelled)^080h,f
  5004  03C1  1803               	skipnc
  5005  03C2  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  5006  03C3  1283               	bcf	status, 5	;RP0=0, select bank0
  5007  03C4  1303               	bcf	status, 6	;RP1=0, select bank0
  5008  03C5  0867               	movf	(robot_turnRight@temp1+1),w
  5009  03C6  1683               	bsf	status, 5	;RP0=1, select bank1
  5010  03C7  1303               	bcf	status, 6	;RP1=0, select bank1
  5011  03C8  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  5012                           	line	429
  5013                           	
  5014  03C9                     l12101:	
  5015                           ;robot.c: 429: UpdateDisplay();
  5016  03C9  120A  118A  241B   	fcall	_UpdateDisplay
              120A  118A         
  5017  03CE  2BCF               	goto	l12103
  5018                           	line	430
  5019                           	
  5020  03CF                     l6171:	
  5021                           	line	392
  5022                           	
  5023  03CF                     l12103:	
  5024  03CF  1683               	bsf	status, 5	;RP0=1, select bank1
  5025  03D0  1303               	bcf	status, 6	;RP1=0, select bank1
  5026  03D1  0831               	movf	(_angleTurned+1)^080h,w
  5027  03D2  1283               	bcf	status, 5	;RP0=0, select bank0
  5028  03D3  1303               	bcf	status, 6	;RP1=0, select bank0
  5029  03D4  01A7               	clrf	(?_abs+1)
  5030  03D5  07A7               	addwf	(?_abs+1)
  5031  03D6  1683               	bsf	status, 5	;RP0=1, select bank1
  5032  03D7  1303               	bcf	status, 6	;RP1=0, select bank1
  5033  03D8  0830               	movf	(_angleTurned)^080h,w
  5034  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  5035  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  5036  03DB  01A6               	clrf	(?_abs)
  5037  03DC  07A6               	addwf	(?_abs)
  5038                           
  5039  03DD  160A  158A  25A8   	fcall	_abs
              120A  118A         
  5040  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  5041  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  5042  03E4  0826               	movf	(0+?_abs),w
  5043  03E5  00DF               	movwf	(??_robot_turnRight+0)+0
  5044  03E6  0827               	movf	(1+?_abs),w
  5045  03E7  00E0               	movwf	((??_robot_turnRight+0)+0+1)
  5046  03E8  0863               	movf	(robot_turnRight@turnTarget+1),w
  5047  03E9  01A7               	clrf	(?_abs+1)
  5048  03EA  07A7               	addwf	(?_abs+1)
  5049  03EB  0862               	movf	(robot_turnRight@turnTarget),w
  5050  03EC  01A6               	clrf	(?_abs)
  5051  03ED  07A6               	addwf	(?_abs)
  5052                           
  5053  03EE  160A  158A  25A8   	fcall	_abs
              120A  118A         
  5054  03F3  1283               	bcf	status, 5	;RP0=0, select bank0
  5055  03F4  1303               	bcf	status, 6	;RP1=0, select bank0
  5056  03F5  0860               	movf	1+(??_robot_turnRight+0)+0,w
  5057  03F6  3A80               	xorlw	80h
  5058  03F7  00E1               	movwf	(??_robot_turnRight+2)+0
  5059  03F8  0827               	movf	(1+(?_abs)),w
  5060  03F9  3A80               	xorlw	80h
  5061  03FA  0261               	subwf	(??_robot_turnRight+2)+0,w
  5062  03FB  1D03               	skipz
  5063  03FC  2BFF               	goto	u5505
  5064  03FD  0826               	movf	(0+(?_abs)),w
  5065  03FE  025F               	subwf	0+(??_robot_turnRight+0)+0,w
  5066  03FF                     u5505:
  5067                           
  5068  03FF  1C03               	skipc
  5069  0400  2C02               	goto	u5501
  5070  0401  2C03               	goto	u5500
  5071  0402                     u5501:
  5072  0402  2AEA               	goto	l12059
  5073  0403                     u5500:
  5074  0403  2C04               	goto	l12105
  5075                           	
  5076  0404                     l6174:	
  5077                           	line	431
  5078                           	
  5079  0404                     l12105:	
  5080                           ;robot.c: 430: }
  5081                           ;robot.c: 431: Disp2 = ROBOTerror;
  5082  0404  1683               	bsf	status, 5	;RP0=1, select bank1
  5083  0405  1303               	bcf	status, 6	;RP1=0, select bank1
  5084  0406  0846               	movf	(_ROBOTerror)^080h,w
  5085  0407  1283               	bcf	status, 5	;RP0=0, select bank0
  5086  0408  1303               	bcf	status, 6	;RP1=0, select bank0
  5087  0409  00DF               	movwf	(??_robot_turnRight+0)+0
  5088  040A  01E0               	clrf	(??_robot_turnRight+0)+0+1
  5089  040B  085F               	movf	0+(??_robot_turnRight+0)+0,w
  5090  040C  1683               	bsf	status, 5	;RP0=1, select bank1
  5091  040D  1303               	bcf	status, 6	;RP1=0, select bank1
  5092  040E  00A6               	movwf	(_Disp2)^080h
  5093  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  5094  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  5095  0411  0860               	movf	1+(??_robot_turnRight+0)+0,w
  5096  0412  1683               	bsf	status, 5	;RP0=1, select bank1
  5097  0413  1303               	bcf	status, 6	;RP1=0, select bank1
  5098  0414  00A7               	movwf	(_Disp2+1)^080h
  5099                           	line	432
  5100                           	
  5101  0415                     l12107:	
  5102                           ;robot.c: 432: UpdateDisplay();
  5103  0415  120A  118A  241B   	fcall	_UpdateDisplay
              120A  118A         
  5104                           	line	435
  5105                           	
  5106  041A                     l6178:	
  5107  041A  0008               	return
  5108                           	opt stack 0
  5109                           GLOBAL	__end_of_robot_turnRight
  5110  041B                     	__end_of_robot_turnRight:
  5111 ;; =============== function _robot_turnRight ends ============
  5112                           
  5113                           	signat	_robot_turnRight,4216
  5114                           	global	_robotMoveSpeed
  5115                           psect	text1091,local,class=CODE,delta=2
  5116                           global __ptext1091
  5117  1559                     __ptext1091:
  5118                           
  5119 ;; *************** function _robotMoveSpeed *****************
  5120 ;; Defined at:
  5121 ;;		line 440 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  distance        2   61[BANK0 ] int 
  5124 ;;  speed           2   63[BANK0 ] int 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  temp1           2   68[BANK0 ] int 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5136 ;;      Params:         0       4       0       0       0
  5137 ;;      Locals:         0       2       0       0       0
  5138 ;;      Temps:          0       3       0       0       0
  5139 ;;      Totals:         0       9       0       0       0
  5140 ;;Total ram usage:        9 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    6
  5143 ;; This function calls:
  5144 ;;		_RobotDrive
  5145 ;;		_robot_read
  5146 ;;		_UpdateDisplay
  5147 ;;		_abs
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           psect	text1091
  5153                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5154                           	line	440
  5155                           	global	__size_of_robotMoveSpeed
  5156  00F1                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  5157                           	
  5158  1559                     _robotMoveSpeed:	
  5159                           	opt	stack 1
  5160                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5161                           	line	441
  5162                           	
  5163  1559                     l11905:	
  5164                           ;robot.c: 441: distTravelled = 0;
  5165  1559  1683               	bsf	status, 5	;RP0=1, select bank1
  5166  155A  1303               	bcf	status, 6	;RP1=0, select bank1
  5167  155B  01B2               	clrf	(_distTravelled)^080h
  5168  155C  01B3               	clrf	(_distTravelled+1)^080h
  5169                           	line	443
  5170                           	
  5171  155D                     l11907:	
  5172                           ;robot.c: 442: int temp1;
  5173                           ;robot.c: 443: RobotDrive(speed, 0x7FFF);
  5174  155D  1283               	bcf	status, 5	;RP0=0, select bank0
  5175  155E  1303               	bcf	status, 6	;RP1=0, select bank0
  5176  155F  0860               	movf	(robotMoveSpeed@speed+1),w
  5177  1560  01AA               	clrf	(?_RobotDrive+1)
  5178  1561  07AA               	addwf	(?_RobotDrive+1)
  5179  1562  085F               	movf	(robotMoveSpeed@speed),w
  5180  1563  01A9               	clrf	(?_RobotDrive)
  5181  1564  07A9               	addwf	(?_RobotDrive)
  5182                           
  5183  1565  30FF               	movlw	low(07FFFh)
  5184  1566  00AB               	movwf	0+(?_RobotDrive)+02h
  5185  1567  307F               	movlw	high(07FFFh)
  5186  1568  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5187  1569  160A  118A  200A   	fcall	_RobotDrive
              160A  118A         
  5188                           	line	446
  5189                           ;robot.c: 446: while (abs(distTravelled) < abs(distance))
  5190  156E  2DEF               	goto	l11941
  5191                           	
  5192  156F                     l6182:	
  5193                           	line	448
  5194                           	
  5195  156F                     l11909:	
  5196                           ;robot.c: 447: {
  5197                           ;robot.c: 448: robot_read(0);
  5198  156F  3000               	movlw	(0)
  5199  1570  120A  118A  26A0   	fcall	_robot_read
              160A  118A         
  5200                           	line	449
  5201                           	
  5202  1575                     l11911:	
  5203                           ;robot.c: 449: if (BumpSensors)
  5204  1575  1683               	bsf	status, 5	;RP0=1, select bank1
  5205  1576  1303               	bcf	status, 6	;RP1=0, select bank1
  5206  1577  0840               	movf	(_BumpSensors)^080h,w	;volatile
  5207  1578  1D03               	skipz
  5208  1579  2D7B               	goto	u5310
  5209  157A  2D7F               	goto	l11915
  5210  157B                     u5310:
  5211                           	line	451
  5212                           	
  5213  157B                     l11913:	
  5214                           ;robot.c: 450: {
  5215                           ;robot.c: 451: ROBOTerror = 1;
  5216  157B  01C6               	clrf	(_ROBOTerror)^080h
  5217  157C  1403               	bsf	status,0
  5218  157D  0DC6               	rlf	(_ROBOTerror)^080h,f
  5219                           	line	452
  5220                           ;robot.c: 452: break;
  5221  157E  2E24               	goto	l11943
  5222                           	line	453
  5223                           	
  5224  157F                     l6183:	
  5225                           	line	454
  5226                           	
  5227  157F                     l11915:	
  5228                           ;robot.c: 453: }
  5229                           ;robot.c: 454: if (VwallSensor)
  5230  157F  084B               	movf	(_VwallSensor)^080h,w	;volatile
  5231  1580  1D03               	skipz
  5232  1581  2D83               	goto	u5320
  5233  1582  2D8C               	goto	l11919
  5234  1583                     u5320:
  5235                           	line	456
  5236                           	
  5237  1583                     l11917:	
  5238                           ;robot.c: 455: {
  5239                           ;robot.c: 456: ROBOTerror = 2;
  5240  1583  3002               	movlw	(02h)
  5241  1584  1283               	bcf	status, 5	;RP0=0, select bank0
  5242  1585  1303               	bcf	status, 6	;RP1=0, select bank0
  5243  1586  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5244  1587  0861               	movf	(??_robotMoveSpeed+0)+0,w
  5245  1588  1683               	bsf	status, 5	;RP0=1, select bank1
  5246  1589  1303               	bcf	status, 6	;RP1=0, select bank1
  5247  158A  00C6               	movwf	(_ROBOTerror)^080h
  5248                           	line	457
  5249                           ;robot.c: 457: break;
  5250  158B  2E24               	goto	l11943
  5251                           	line	458
  5252                           	
  5253  158C                     l6185:	
  5254                           	line	459
  5255                           	
  5256  158C                     l11919:	
  5257                           ;robot.c: 458: }
  5258                           ;robot.c: 459: if (CliffSensors)
  5259  158C  0842               	movf	(_CliffSensors)^080h,w	;volatile
  5260  158D  1D03               	skipz
  5261  158E  2D90               	goto	u5330
  5262  158F  2D99               	goto	l11923
  5263  1590                     u5330:
  5264                           	line	461
  5265                           	
  5266  1590                     l11921:	
  5267                           ;robot.c: 460: {
  5268                           ;robot.c: 461: ROBOTerror = 3;
  5269  1590  3003               	movlw	(03h)
  5270  1591  1283               	bcf	status, 5	;RP0=0, select bank0
  5271  1592  1303               	bcf	status, 6	;RP1=0, select bank0
  5272  1593  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5273  1594  0861               	movf	(??_robotMoveSpeed+0)+0,w
  5274  1595  1683               	bsf	status, 5	;RP0=1, select bank1
  5275  1596  1303               	bcf	status, 6	;RP1=0, select bank1
  5276  1597  00C6               	movwf	(_ROBOTerror)^080h
  5277                           	line	462
  5278                           ;robot.c: 462: break;
  5279  1598  2E24               	goto	l11943
  5280                           	line	463
  5281                           	
  5282  1599                     l6186:	
  5283                           	line	464
  5284                           	
  5285  1599                     l11923:	
  5286                           ;robot.c: 463: }
  5287                           ;robot.c: 464: if (VictimSensor != 255)
  5288  1599  084A               	movf	(_VictimSensor)^080h,w	;volatile
  5289  159A  3AFF               	xorlw	0FFh
  5290  159B  1903               	skipnz
  5291  159C  2D9E               	goto	u5341
  5292  159D  2D9F               	goto	u5340
  5293  159E                     u5341:
  5294  159E  2DA8               	goto	l11927
  5295  159F                     u5340:
  5296                           	line	466
  5297                           	
  5298  159F                     l11925:	
  5299                           ;robot.c: 465: {
  5300                           ;robot.c: 466: ROBOTerror = 4;
  5301  159F  3004               	movlw	(04h)
  5302  15A0  1283               	bcf	status, 5	;RP0=0, select bank0
  5303  15A1  1303               	bcf	status, 6	;RP1=0, select bank0
  5304  15A2  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5305  15A3  0861               	movf	(??_robotMoveSpeed+0)+0,w
  5306  15A4  1683               	bsf	status, 5	;RP0=1, select bank1
  5307  15A5  1303               	bcf	status, 6	;RP1=0, select bank1
  5308  15A6  00C6               	movwf	(_ROBOTerror)^080h
  5309                           	line	467
  5310                           ;robot.c: 467: break;
  5311  15A7  2E24               	goto	l11943
  5312                           	line	468
  5313                           	
  5314  15A8                     l6187:	
  5315                           	line	469
  5316                           	
  5317  15A8                     l11927:	
  5318                           ;robot.c: 468: }
  5319                           ;robot.c: 469: temp1 = DistHighByte;
  5320  15A8  087D               	movf	(_DistHighByte),w	;volatile
  5321  15A9  1283               	bcf	status, 5	;RP0=0, select bank0
  5322  15AA  1303               	bcf	status, 6	;RP1=0, select bank0
  5323  15AB  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5324  15AC  01E2               	clrf	(??_robotMoveSpeed+0)+0+1
  5325  15AD  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  5326  15AE  00E4               	movwf	(robotMoveSpeed@temp1)
  5327  15AF  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  5328  15B0  00E5               	movwf	(robotMoveSpeed@temp1+1)
  5329                           	line	470
  5330                           	
  5331  15B1                     l11929:	
  5332                           ;robot.c: 470: temp1 = temp1 << 8;
  5333  15B1  0865               	movf	(robotMoveSpeed@temp1+1),w
  5334  15B2  00E2               	movwf	(??_robotMoveSpeed+0)+0+1
  5335  15B3  0864               	movf	(robotMoveSpeed@temp1),w
  5336  15B4  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5337  15B5  0861               	movf	(??_robotMoveSpeed+0)+0,w
  5338  15B6  00E2               	movwf	(??_robotMoveSpeed+0)+1
  5339  15B7  01E1               	clrf	(??_robotMoveSpeed+0)+0
  5340  15B8  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  5341  15B9  00E4               	movwf	(robotMoveSpeed@temp1)
  5342  15BA  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  5343  15BB  00E5               	movwf	(robotMoveSpeed@temp1+1)
  5344                           	line	471
  5345                           	
  5346  15BC                     l11931:	
  5347                           ;robot.c: 471: temp1 += DistLowByte;
  5348  15BC  1683               	bsf	status, 5	;RP0=1, select bank1
  5349  15BD  1303               	bcf	status, 6	;RP1=0, select bank1
  5350  15BE  0843               	movf	(_DistLowByte)^080h,w	;volatile
  5351  15BF  1283               	bcf	status, 5	;RP0=0, select bank0
  5352  15C0  1303               	bcf	status, 6	;RP1=0, select bank0
  5353  15C1  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5354  15C2  01E2               	clrf	(??_robotMoveSpeed+0)+0+1
  5355  15C3  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  5356  15C4  07E4               	addwf	(robotMoveSpeed@temp1),f
  5357  15C5  1803               	skipnc
  5358  15C6  0AE5               	incf	(robotMoveSpeed@temp1+1),f
  5359  15C7  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  5360  15C8  07E5               	addwf	(robotMoveSpeed@temp1+1),f
  5361                           	line	472
  5362                           	
  5363  15C9                     l11933:	
  5364                           ;robot.c: 472: distTravelled += temp1;
  5365  15C9  0864               	movf	(robotMoveSpeed@temp1),w
  5366  15CA  1683               	bsf	status, 5	;RP0=1, select bank1
  5367  15CB  1303               	bcf	status, 6	;RP1=0, select bank1
  5368  15CC  07B2               	addwf	(_distTravelled)^080h,f
  5369  15CD  1803               	skipnc
  5370  15CE  0AB3               	incf	(_distTravelled+1)^080h,f
  5371  15CF  1283               	bcf	status, 5	;RP0=0, select bank0
  5372  15D0  1303               	bcf	status, 6	;RP1=0, select bank0
  5373  15D1  0865               	movf	(robotMoveSpeed@temp1+1),w
  5374  15D2  1683               	bsf	status, 5	;RP0=1, select bank1
  5375  15D3  1303               	bcf	status, 6	;RP1=0, select bank1
  5376  15D4  07B3               	addwf	(_distTravelled+1)^080h,f
  5377                           	line	473
  5378                           	
  5379  15D5                     l11935:	
  5380                           ;robot.c: 473: TotalDistTravelled += temp1;
  5381  15D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5382  15D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5383  15D7  0864               	movf	(robotMoveSpeed@temp1),w
  5384  15D8  1683               	bsf	status, 5	;RP0=1, select bank1
  5385  15D9  1303               	bcf	status, 6	;RP1=0, select bank1
  5386  15DA  07AC               	addwf	(_TotalDistTravelled)^080h,f
  5387  15DB  1803               	skipnc
  5388  15DC  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  5389  15DD  1283               	bcf	status, 5	;RP0=0, select bank0
  5390  15DE  1303               	bcf	status, 6	;RP1=0, select bank0
  5391  15DF  0865               	movf	(robotMoveSpeed@temp1+1),w
  5392  15E0  1683               	bsf	status, 5	;RP0=1, select bank1
  5393  15E1  1303               	bcf	status, 6	;RP1=0, select bank1
  5394  15E2  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  5395                           	line	474
  5396                           	
  5397  15E3                     l11937:	
  5398                           ;robot.c: 474: Disp2 = distTravelled;
  5399  15E3  0833               	movf	(_distTravelled+1)^080h,w
  5400  15E4  01A7               	clrf	(_Disp2+1)^080h
  5401  15E5  07A7               	addwf	(_Disp2+1)^080h
  5402  15E6  0832               	movf	(_distTravelled)^080h,w
  5403  15E7  01A6               	clrf	(_Disp2)^080h
  5404  15E8  07A6               	addwf	(_Disp2)^080h
  5405                           
  5406                           	line	475
  5407                           	
  5408  15E9                     l11939:	
  5409                           ;robot.c: 475: UpdateDisplay();
  5410  15E9  120A  118A  241B   	fcall	_UpdateDisplay
              160A  118A         
  5411  15EE  2DEF               	goto	l11941
  5412                           	line	481
  5413                           	
  5414  15EF                     l6181:	
  5415                           	line	446
  5416                           	
  5417  15EF                     l11941:	
  5418  15EF  1683               	bsf	status, 5	;RP0=1, select bank1
  5419  15F0  1303               	bcf	status, 6	;RP1=0, select bank1
  5420  15F1  0833               	movf	(_distTravelled+1)^080h,w
  5421  15F2  1283               	bcf	status, 5	;RP0=0, select bank0
  5422  15F3  1303               	bcf	status, 6	;RP1=0, select bank0
  5423  15F4  01A7               	clrf	(?_abs+1)
  5424  15F5  07A7               	addwf	(?_abs+1)
  5425  15F6  1683               	bsf	status, 5	;RP0=1, select bank1
  5426  15F7  1303               	bcf	status, 6	;RP1=0, select bank1
  5427  15F8  0832               	movf	(_distTravelled)^080h,w
  5428  15F9  1283               	bcf	status, 5	;RP0=0, select bank0
  5429  15FA  1303               	bcf	status, 6	;RP1=0, select bank0
  5430  15FB  01A6               	clrf	(?_abs)
  5431  15FC  07A6               	addwf	(?_abs)
  5432                           
  5433  15FD  160A  158A  25A8   	fcall	_abs
              160A  118A         
  5434  1602  1283               	bcf	status, 5	;RP0=0, select bank0
  5435  1603  1303               	bcf	status, 6	;RP1=0, select bank0
  5436  1604  0826               	movf	(0+?_abs),w
  5437  1605  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5438  1606  0827               	movf	(1+?_abs),w
  5439  1607  00E2               	movwf	((??_robotMoveSpeed+0)+0+1)
  5440  1608  085E               	movf	(robotMoveSpeed@distance+1),w
  5441  1609  01A7               	clrf	(?_abs+1)
  5442  160A  07A7               	addwf	(?_abs+1)
  5443  160B  085D               	movf	(robotMoveSpeed@distance),w
  5444  160C  01A6               	clrf	(?_abs)
  5445  160D  07A6               	addwf	(?_abs)
  5446                           
  5447  160E  160A  158A  25A8   	fcall	_abs
              160A  118A         
  5448  1613  1283               	bcf	status, 5	;RP0=0, select bank0
  5449  1614  1303               	bcf	status, 6	;RP1=0, select bank0
  5450  1615  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  5451  1616  3A80               	xorlw	80h
  5452  1617  00E3               	movwf	(??_robotMoveSpeed+2)+0
  5453  1618  0827               	movf	(1+(?_abs)),w
  5454  1619  3A80               	xorlw	80h
  5455  161A  0263               	subwf	(??_robotMoveSpeed+2)+0,w
  5456  161B  1D03               	skipz
  5457  161C  2E1F               	goto	u5355
  5458  161D  0826               	movf	(0+(?_abs)),w
  5459  161E  0261               	subwf	0+(??_robotMoveSpeed+0)+0,w
  5460  161F                     u5355:
  5461                           
  5462  161F  1C03               	skipc
  5463  1620  2E22               	goto	u5351
  5464  1621  2E23               	goto	u5350
  5465  1622                     u5351:
  5466  1622  2D6F               	goto	l11909
  5467  1623                     u5350:
  5468  1623  2E24               	goto	l11943
  5469                           	
  5470  1624                     l6184:	
  5471                           	line	482
  5472                           	
  5473  1624                     l11943:	
  5474                           ;robot.c: 481: }
  5475                           ;robot.c: 482: Disp2 = ROBOTerror;
  5476  1624  1683               	bsf	status, 5	;RP0=1, select bank1
  5477  1625  1303               	bcf	status, 6	;RP1=0, select bank1
  5478  1626  0846               	movf	(_ROBOTerror)^080h,w
  5479  1627  1283               	bcf	status, 5	;RP0=0, select bank0
  5480  1628  1303               	bcf	status, 6	;RP1=0, select bank0
  5481  1629  00E1               	movwf	(??_robotMoveSpeed+0)+0
  5482  162A  01E2               	clrf	(??_robotMoveSpeed+0)+0+1
  5483  162B  0861               	movf	0+(??_robotMoveSpeed+0)+0,w
  5484  162C  1683               	bsf	status, 5	;RP0=1, select bank1
  5485  162D  1303               	bcf	status, 6	;RP1=0, select bank1
  5486  162E  00A6               	movwf	(_Disp2)^080h
  5487  162F  1283               	bcf	status, 5	;RP0=0, select bank0
  5488  1630  1303               	bcf	status, 6	;RP1=0, select bank0
  5489  1631  0862               	movf	1+(??_robotMoveSpeed+0)+0,w
  5490  1632  1683               	bsf	status, 5	;RP0=1, select bank1
  5491  1633  1303               	bcf	status, 6	;RP1=0, select bank1
  5492  1634  00A7               	movwf	(_Disp2+1)^080h
  5493                           	line	483
  5494                           	
  5495  1635                     l11945:	
  5496                           ;robot.c: 483: UpdateDisplay();
  5497  1635  120A  118A  241B   	fcall	_UpdateDisplay
              160A  118A         
  5498                           	line	484
  5499                           	
  5500  163A                     l11947:	
  5501                           ;robot.c: 484: RobotDrive(0, 0x7FFF);
  5502  163A  3000               	movlw	low(0)
  5503  163B  1283               	bcf	status, 5	;RP0=0, select bank0
  5504  163C  1303               	bcf	status, 6	;RP1=0, select bank0
  5505  163D  00A9               	movwf	(?_RobotDrive)
  5506  163E  3000               	movlw	high(0)
  5507  163F  00AA               	movwf	((?_RobotDrive))+1
  5508  1640  30FF               	movlw	low(07FFFh)
  5509  1641  00AB               	movwf	0+(?_RobotDrive)+02h
  5510  1642  307F               	movlw	high(07FFFh)
  5511  1643  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5512  1644  160A  118A  200A   	fcall	_RobotDrive
              160A  118A         
  5513                           	line	486
  5514                           	
  5515  1649                     l6188:	
  5516  1649  0008               	return
  5517                           	opt stack 0
  5518                           GLOBAL	__end_of_robotMoveSpeed
  5519  164A                     	__end_of_robotMoveSpeed:
  5520 ;; =============== function _robotMoveSpeed ends ============
  5521                           
  5522                           	signat	_robotMoveSpeed,8312
  5523                           	global	_robotTurnSpeed
  5524                           psect	text1092,local,class=CODE,delta=2
  5525                           global __ptext1092
  5526  140B                     __ptext1092:
  5527                           
  5528 ;; *************** function _robotTurnSpeed *****************
  5529 ;; Defined at:
  5530 ;;		line 493 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  angle           2   61[BANK0 ] int 
  5533 ;;  speed           2   63[BANK0 ] int 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  temp1           2   68[BANK0 ] int 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;		None               void
  5538 ;; Registers used:
  5539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5545 ;;      Params:         0       4       0       0       0
  5546 ;;      Locals:         0       2       0       0       0
  5547 ;;      Temps:          0       3       0       0       0
  5548 ;;      Totals:         0       9       0       0       0
  5549 ;;Total ram usage:        9 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    6
  5552 ;; This function calls:
  5553 ;;		_robotTurn
  5554 ;;		_robot_read
  5555 ;;		_UpdateDisplay
  5556 ;;		_abs
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;;		_robot_turnLeft
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           psect	text1092
  5563                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5564                           	line	493
  5565                           	global	__size_of_robotTurnSpeed
  5566  00A4                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  5567                           	
  5568  140B                     _robotTurnSpeed:	
  5569                           	opt	stack 0
  5570                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5571                           	line	494
  5572                           	
  5573  140B                     l11877:	
  5574                           ;robot.c: 494: angleTurned = 0;
  5575  140B  1683               	bsf	status, 5	;RP0=1, select bank1
  5576  140C  1303               	bcf	status, 6	;RP1=0, select bank1
  5577  140D  01B0               	clrf	(_angleTurned)^080h
  5578  140E  01B1               	clrf	(_angleTurned+1)^080h
  5579                           	line	495
  5580                           ;robot.c: 495: int temp1 = 0;
  5581  140F  1283               	bcf	status, 5	;RP0=0, select bank0
  5582  1410  1303               	bcf	status, 6	;RP1=0, select bank0
  5583  1411  01E4               	clrf	(robotTurnSpeed@temp1)
  5584  1412  01E5               	clrf	(robotTurnSpeed@temp1+1)
  5585                           	line	497
  5586                           	
  5587  1413                     l11879:	
  5588                           ;robot.c: 497: robotTurn(angle);
  5589  1413  085E               	movf	(robotTurnSpeed@angle+1),w
  5590  1414  01A3               	clrf	(?_robotTurn+1)
  5591  1415  07A3               	addwf	(?_robotTurn+1)
  5592  1416  085D               	movf	(robotTurnSpeed@angle),w
  5593  1417  01A2               	clrf	(?_robotTurn)
  5594  1418  07A2               	addwf	(?_robotTurn)
  5595                           
  5596  1419  160A  118A  2182   	fcall	_robotTurn
              160A  118A         
  5597                           	line	500
  5598                           ;robot.c: 500: while (abs(angleTurned) < abs(angle))
  5599  141E  2C6E               	goto	l11901
  5600                           	
  5601  141F                     l6192:	
  5602                           	line	502
  5603                           	
  5604  141F                     l11881:	
  5605                           ;robot.c: 501: {
  5606                           ;robot.c: 502: robot_read(1);
  5607  141F  3001               	movlw	(01h)
  5608  1420  120A  118A  26A0   	fcall	_robot_read
              160A  118A         
  5609                           	line	503
  5610                           	
  5611  1425                     l11883:	
  5612                           ;robot.c: 503: if (BumpSensors || VwallSensor)
  5613  1425  1683               	bsf	status, 5	;RP0=1, select bank1
  5614  1426  1303               	bcf	status, 6	;RP1=0, select bank1
  5615  1427  08C0               	movf	(_BumpSensors)^080h,f
  5616  1428  1D03               	skipz	;volatile
  5617  1429  2C2B               	goto	u5281
  5618  142A  2C2C               	goto	u5280
  5619  142B                     u5281:
  5620  142B  2C31               	goto	l11887
  5621  142C                     u5280:
  5622                           	
  5623  142C                     l11885:	
  5624  142C  084B               	movf	(_VwallSensor)^080h,w	;volatile
  5625  142D  1D03               	skipz
  5626  142E  2C30               	goto	u5290
  5627  142F  2C35               	goto	l11889
  5628  1430                     u5290:
  5629  1430  2C31               	goto	l11887
  5630                           	
  5631  1431                     l6195:	
  5632                           	line	505
  5633                           	
  5634  1431                     l11887:	
  5635                           ;robot.c: 504: {
  5636                           ;robot.c: 505: ROBOTerror = 1;
  5637  1431  01C6               	clrf	(_ROBOTerror)^080h
  5638  1432  1403               	bsf	status,0
  5639  1433  0DC6               	rlf	(_ROBOTerror)^080h,f
  5640                           	line	506
  5641                           ;robot.c: 506: break;
  5642  1434  2CA3               	goto	l11903
  5643                           	line	507
  5644                           	
  5645  1435                     l6193:	
  5646                           	line	508
  5647                           	
  5648  1435                     l11889:	
  5649                           ;robot.c: 507: }
  5650                           ;robot.c: 508: temp1 = AngleHighByte;
  5651  1435  083E               	movf	(_AngleHighByte)^080h,w	;volatile
  5652  1436  1283               	bcf	status, 5	;RP0=0, select bank0
  5653  1437  1303               	bcf	status, 6	;RP1=0, select bank0
  5654  1438  00E1               	movwf	(??_robotTurnSpeed+0)+0
  5655  1439  01E2               	clrf	(??_robotTurnSpeed+0)+0+1
  5656  143A  0861               	movf	0+(??_robotTurnSpeed+0)+0,w
  5657  143B  00E4               	movwf	(robotTurnSpeed@temp1)
  5658  143C  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  5659  143D  00E5               	movwf	(robotTurnSpeed@temp1+1)
  5660                           	line	509
  5661                           	
  5662  143E                     l11891:	
  5663                           ;robot.c: 509: temp1 = temp1 << 8;
  5664  143E  0865               	movf	(robotTurnSpeed@temp1+1),w
  5665  143F  00E2               	movwf	(??_robotTurnSpeed+0)+0+1
  5666  1440  0864               	movf	(robotTurnSpeed@temp1),w
  5667  1441  00E1               	movwf	(??_robotTurnSpeed+0)+0
  5668  1442  0861               	movf	(??_robotTurnSpeed+0)+0,w
  5669  1443  00E2               	movwf	(??_robotTurnSpeed+0)+1
  5670  1444  01E1               	clrf	(??_robotTurnSpeed+0)+0
  5671  1445  0861               	movf	0+(??_robotTurnSpeed+0)+0,w
  5672  1446  00E4               	movwf	(robotTurnSpeed@temp1)
  5673  1447  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  5674  1448  00E5               	movwf	(robotTurnSpeed@temp1+1)
  5675                           	line	510
  5676                           	
  5677  1449                     l11893:	
  5678                           ;robot.c: 510: temp1 += AngleLowByte;
  5679  1449  1683               	bsf	status, 5	;RP0=1, select bank1
  5680  144A  1303               	bcf	status, 6	;RP1=0, select bank1
  5681  144B  083F               	movf	(_AngleLowByte)^080h,w	;volatile
  5682  144C  1283               	bcf	status, 5	;RP0=0, select bank0
  5683  144D  1303               	bcf	status, 6	;RP1=0, select bank0
  5684  144E  00E1               	movwf	(??_robotTurnSpeed+0)+0
  5685  144F  01E2               	clrf	(??_robotTurnSpeed+0)+0+1
  5686  1450  0861               	movf	0+(??_robotTurnSpeed+0)+0,w
  5687  1451  07E4               	addwf	(robotTurnSpeed@temp1),f
  5688  1452  1803               	skipnc
  5689  1453  0AE5               	incf	(robotTurnSpeed@temp1+1),f
  5690  1454  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  5691  1455  07E5               	addwf	(robotTurnSpeed@temp1+1),f
  5692                           	line	511
  5693                           	
  5694  1456                     l11895:	
  5695                           ;robot.c: 511: angleTurned += temp1;
  5696  1456  0864               	movf	(robotTurnSpeed@temp1),w
  5697  1457  1683               	bsf	status, 5	;RP0=1, select bank1
  5698  1458  1303               	bcf	status, 6	;RP1=0, select bank1
  5699  1459  07B0               	addwf	(_angleTurned)^080h,f
  5700  145A  1803               	skipnc
  5701  145B  0AB1               	incf	(_angleTurned+1)^080h,f
  5702  145C  1283               	bcf	status, 5	;RP0=0, select bank0
  5703  145D  1303               	bcf	status, 6	;RP1=0, select bank0
  5704  145E  0865               	movf	(robotTurnSpeed@temp1+1),w
  5705  145F  1683               	bsf	status, 5	;RP0=1, select bank1
  5706  1460  1303               	bcf	status, 6	;RP1=0, select bank1
  5707  1461  07B1               	addwf	(_angleTurned+1)^080h,f
  5708                           	line	512
  5709                           	
  5710  1462                     l11897:	
  5711                           ;robot.c: 512: Disp2 = angleTurned;
  5712  1462  0831               	movf	(_angleTurned+1)^080h,w
  5713  1463  01A7               	clrf	(_Disp2+1)^080h
  5714  1464  07A7               	addwf	(_Disp2+1)^080h
  5715  1465  0830               	movf	(_angleTurned)^080h,w
  5716  1466  01A6               	clrf	(_Disp2)^080h
  5717  1467  07A6               	addwf	(_Disp2)^080h
  5718                           
  5719                           	line	513
  5720                           	
  5721  1468                     l11899:	
  5722                           ;robot.c: 513: UpdateDisplay();
  5723  1468  120A  118A  241B   	fcall	_UpdateDisplay
              160A  118A         
  5724  146D  2C6E               	goto	l11901
  5725                           	line	514
  5726                           	
  5727  146E                     l6191:	
  5728                           	line	500
  5729                           	
  5730  146E                     l11901:	
  5731  146E  1683               	bsf	status, 5	;RP0=1, select bank1
  5732  146F  1303               	bcf	status, 6	;RP1=0, select bank1
  5733  1470  0831               	movf	(_angleTurned+1)^080h,w
  5734  1471  1283               	bcf	status, 5	;RP0=0, select bank0
  5735  1472  1303               	bcf	status, 6	;RP1=0, select bank0
  5736  1473  01A7               	clrf	(?_abs+1)
  5737  1474  07A7               	addwf	(?_abs+1)
  5738  1475  1683               	bsf	status, 5	;RP0=1, select bank1
  5739  1476  1303               	bcf	status, 6	;RP1=0, select bank1
  5740  1477  0830               	movf	(_angleTurned)^080h,w
  5741  1478  1283               	bcf	status, 5	;RP0=0, select bank0
  5742  1479  1303               	bcf	status, 6	;RP1=0, select bank0
  5743  147A  01A6               	clrf	(?_abs)
  5744  147B  07A6               	addwf	(?_abs)
  5745                           
  5746  147C  160A  158A  25A8   	fcall	_abs
              160A  118A         
  5747  1481  1283               	bcf	status, 5	;RP0=0, select bank0
  5748  1482  1303               	bcf	status, 6	;RP1=0, select bank0
  5749  1483  0826               	movf	(0+?_abs),w
  5750  1484  00E1               	movwf	(??_robotTurnSpeed+0)+0
  5751  1485  0827               	movf	(1+?_abs),w
  5752  1486  00E2               	movwf	((??_robotTurnSpeed+0)+0+1)
  5753  1487  085E               	movf	(robotTurnSpeed@angle+1),w
  5754  1488  01A7               	clrf	(?_abs+1)
  5755  1489  07A7               	addwf	(?_abs+1)
  5756  148A  085D               	movf	(robotTurnSpeed@angle),w
  5757  148B  01A6               	clrf	(?_abs)
  5758  148C  07A6               	addwf	(?_abs)
  5759                           
  5760  148D  160A  158A  25A8   	fcall	_abs
              160A  118A         
  5761  1492  1283               	bcf	status, 5	;RP0=0, select bank0
  5762  1493  1303               	bcf	status, 6	;RP1=0, select bank0
  5763  1494  0862               	movf	1+(??_robotTurnSpeed+0)+0,w
  5764  1495  3A80               	xorlw	80h
  5765  1496  00E3               	movwf	(??_robotTurnSpeed+2)+0
  5766  1497  0827               	movf	(1+(?_abs)),w
  5767  1498  3A80               	xorlw	80h
  5768  1499  0263               	subwf	(??_robotTurnSpeed+2)+0,w
  5769  149A  1D03               	skipz
  5770  149B  2C9E               	goto	u5305
  5771  149C  0826               	movf	(0+(?_abs)),w
  5772  149D  0261               	subwf	0+(??_robotTurnSpeed+0)+0,w
  5773  149E                     u5305:
  5774                           
  5775  149E  1C03               	skipc
  5776  149F  2CA1               	goto	u5301
  5777  14A0  2CA2               	goto	u5300
  5778  14A1                     u5301:
  5779  14A1  2C1F               	goto	l11881
  5780  14A2                     u5300:
  5781  14A2  2CA3               	goto	l11903
  5782                           	
  5783  14A3                     l6196:	
  5784                           	line	516
  5785                           	
  5786  14A3                     l11903:	
  5787                           ;robot.c: 514: }
  5788                           ;robot.c: 516: robotTurn(0);
  5789  14A3  3000               	movlw	low(0)
  5790  14A4  1283               	bcf	status, 5	;RP0=0, select bank0
  5791  14A5  1303               	bcf	status, 6	;RP1=0, select bank0
  5792  14A6  00A2               	movwf	(?_robotTurn)
  5793  14A7  3000               	movlw	high(0)
  5794  14A8  00A3               	movwf	((?_robotTurn))+1
  5795  14A9  160A  118A  2182   	fcall	_robotTurn
              160A  118A         
  5796                           	line	517
  5797                           	
  5798  14AE                     l6197:	
  5799  14AE  0008               	return
  5800                           	opt stack 0
  5801                           GLOBAL	__end_of_robotTurnSpeed
  5802  14AF                     	__end_of_robotTurnSpeed:
  5803 ;; =============== function _robotTurnSpeed ends ============
  5804                           
  5805                           	signat	_robotTurnSpeed,8312
  5806                           	global	_robotFollow
  5807                           psect	text1093,local,class=CODE,delta=2
  5808                           global __ptext1093
  5809  08EC                     __ptext1093:
  5810                           
  5811 ;; *************** function _robotFollow *****************
  5812 ;; Defined at:
  5813 ;;		line 187 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  speed           2   61[BANK0 ] int 
  5816 ;;  AdcTarget       2   63[BANK0 ] int 
  5817 ;;  followDir       1   65[BANK0 ] unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  temp1           2   70[BANK0 ] int 
  5820 ;;  hysterysis      1   72[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;		None               void
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5830 ;;      Params:         0       5       0       0       0
  5831 ;;      Locals:         0       3       0       0       0
  5832 ;;      Temps:          0       4       0       0       0
  5833 ;;      Totals:         0      12       0       0       0
  5834 ;;Total ram usage:       12 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    7
  5837 ;; This function calls:
  5838 ;;		_RobotDrive
  5839 ;;		_readAvgDistance
  5840 ;;		_rotate
  5841 ;;		_robot_read
  5842 ;;		_UpdateDisplay
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           psect	text1093
  5848                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5849                           	line	187
  5850                           	global	__size_of_robotFollow
  5851  023E                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  5852                           	
  5853  08EC                     _robotFollow:	
  5854                           	opt	stack 0
  5855                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5856                           	line	188
  5857                           	
  5858  08EC                     l11785:	
  5859                           ;robot.c: 188: distTravelled = 0;
  5860  08EC  1683               	bsf	status, 5	;RP0=1, select bank1
  5861  08ED  1303               	bcf	status, 6	;RP1=0, select bank1
  5862  08EE  01B2               	clrf	(_distTravelled)^080h
  5863  08EF  01B3               	clrf	(_distTravelled+1)^080h
  5864                           	line	190
  5865                           	
  5866  08F0                     l11787:	
  5867                           ;robot.c: 189: int temp1;
  5868                           ;robot.c: 190: unsigned char hysterysis = 20;
  5869  08F0  3014               	movlw	(014h)
  5870  08F1  1283               	bcf	status, 5	;RP0=0, select bank0
  5871  08F2  1303               	bcf	status, 6	;RP1=0, select bank0
  5872  08F3  00E2               	movwf	(??_robotFollow+0)+0
  5873  08F4  0862               	movf	(??_robotFollow+0)+0,w
  5874  08F5  00E8               	movwf	(robotFollow@hysterysis)
  5875                           	line	191
  5876                           	
  5877  08F6                     l11789:	
  5878                           ;robot.c: 191: RobotDrive(speed, 0x7FFF);
  5879  08F6  085E               	movf	(robotFollow@speed+1),w
  5880  08F7  01AA               	clrf	(?_RobotDrive+1)
  5881  08F8  07AA               	addwf	(?_RobotDrive+1)
  5882  08F9  085D               	movf	(robotFollow@speed),w
  5883  08FA  01A9               	clrf	(?_RobotDrive)
  5884  08FB  07A9               	addwf	(?_RobotDrive)
  5885                           
  5886  08FC  30FF               	movlw	low(07FFFh)
  5887  08FD  00AB               	movwf	0+(?_RobotDrive)+02h
  5888  08FE  307F               	movlw	high(07FFFh)
  5889  08FF  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  5890  0900  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  5891                           	line	192
  5892                           	
  5893  0905                     l11791:	
  5894                           ;robot.c: 192: ROBOTerror = 0;
  5895  0905  1683               	bsf	status, 5	;RP0=1, select bank1
  5896  0906  1303               	bcf	status, 6	;RP1=0, select bank1
  5897  0907  01C6               	clrf	(_ROBOTerror)^080h
  5898  0908  2909               	goto	l11793
  5899                           	line	195
  5900                           ;robot.c: 195: while (1)
  5901                           	
  5902  0909                     l6116:	
  5903                           	line	199
  5904                           	
  5905  0909                     l11793:	
  5906                           ;robot.c: 196: {
  5907                           ;robot.c: 199: if (AdcTarget > 100)
  5908  0909  1283               	bcf	status, 5	;RP0=0, select bank0
  5909  090A  1303               	bcf	status, 6	;RP1=0, select bank0
  5910  090B  0860               	movf	(robotFollow@AdcTarget+1),w
  5911  090C  3A80               	xorlw	80h
  5912  090D  00FF               	movwf	btemp+1
  5913  090E  3080               	movlw	(high(065h))^80h
  5914  090F  027F               	subwf	btemp+1,w
  5915  0910  1D03               	skipz
  5916  0911  2914               	goto	u5155
  5917  0912  3065               	movlw	low(065h)
  5918  0913  025F               	subwf	(robotFollow@AdcTarget),w
  5919  0914                     u5155:
  5920                           
  5921  0914  1C03               	skipc
  5922  0915  2917               	goto	u5151
  5923  0916  2918               	goto	u5150
  5924  0917                     u5151:
  5925  0917  2921               	goto	l11797
  5926  0918                     u5150:
  5927                           	line	200
  5928                           	
  5929  0918                     l11795:	
  5930                           ;robot.c: 200: AdcTarget--;
  5931  0918  30FF               	movlw	low(-1)
  5932  0919  1283               	bcf	status, 5	;RP0=0, select bank0
  5933  091A  1303               	bcf	status, 6	;RP1=0, select bank0
  5934  091B  07DF               	addwf	(robotFollow@AdcTarget),f
  5935  091C  1803               	skipnc
  5936  091D  0AE0               	incf	(robotFollow@AdcTarget+1),f
  5937  091E  30FF               	movlw	high(-1)
  5938  091F  07E0               	addwf	(robotFollow@AdcTarget+1),f
  5939  0920  2921               	goto	l11797
  5940                           	
  5941  0921                     l6117:	
  5942                           	line	201
  5943                           	
  5944  0921                     l11797:	
  5945                           ;robot.c: 201: if (AdcTarget < 100)
  5946  0921  1283               	bcf	status, 5	;RP0=0, select bank0
  5947  0922  1303               	bcf	status, 6	;RP1=0, select bank0
  5948  0923  0860               	movf	(robotFollow@AdcTarget+1),w
  5949  0924  3A80               	xorlw	80h
  5950  0925  00FF               	movwf	btemp+1
  5951  0926  3080               	movlw	(high(064h))^80h
  5952  0927  027F               	subwf	btemp+1,w
  5953  0928  1D03               	skipz
  5954  0929  292C               	goto	u5165
  5955  092A  3064               	movlw	low(064h)
  5956  092B  025F               	subwf	(robotFollow@AdcTarget),w
  5957  092C                     u5165:
  5958                           
  5959  092C  1803               	skipnc
  5960  092D  292F               	goto	u5161
  5961  092E  2930               	goto	u5160
  5962  092F                     u5161:
  5963  092F  2939               	goto	l11801
  5964  0930                     u5160:
  5965                           	line	202
  5966                           	
  5967  0930                     l11799:	
  5968                           ;robot.c: 202: AdcTarget++;
  5969  0930  3001               	movlw	low(01h)
  5970  0931  1283               	bcf	status, 5	;RP0=0, select bank0
  5971  0932  1303               	bcf	status, 6	;RP1=0, select bank0
  5972  0933  07DF               	addwf	(robotFollow@AdcTarget),f
  5973  0934  1803               	skipnc
  5974  0935  0AE0               	incf	(robotFollow@AdcTarget+1),f
  5975  0936  3000               	movlw	high(01h)
  5976  0937  07E0               	addwf	(robotFollow@AdcTarget+1),f
  5977  0938  2939               	goto	l11801
  5978                           	
  5979  0939                     l6118:	
  5980                           	line	203
  5981                           	
  5982  0939                     l11801:	
  5983                           ;robot.c: 203: readAvgDistance();
  5984  0939  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  5985                           	line	204
  5986                           	
  5987  093E                     l11803:	
  5988                           ;robot.c: 204: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + hysterysis))
  5989  093E  1683               	bsf	status, 5	;RP0=1, select bank1
  5990  093F  1303               	bcf	status, 6	;RP1=0, select bank1
  5991  0940  082F               	movf	(_adcVal+1)^080h,w	;volatile
  5992  0941  1283               	bcf	status, 5	;RP0=0, select bank0
  5993  0942  1303               	bcf	status, 6	;RP1=0, select bank0
  5994  0943  0260               	subwf	(robotFollow@AdcTarget+1),w
  5995  0944  1D03               	skipz
  5996  0945  294C               	goto	u5175
  5997  0946  1683               	bsf	status, 5	;RP0=1, select bank1
  5998  0947  1303               	bcf	status, 6	;RP1=0, select bank1
  5999  0948  082E               	movf	(_adcVal)^080h,w	;volatile
  6000  0949  1283               	bcf	status, 5	;RP0=0, select bank0
  6001  094A  1303               	bcf	status, 6	;RP1=0, select bank0
  6002  094B  025F               	subwf	(robotFollow@AdcTarget),w
  6003  094C                     u5175:
  6004  094C  1803               	skipnc
  6005  094D  294F               	goto	u5171
  6006  094E  2950               	goto	u5170
  6007  094F                     u5171:
  6008  094F  2979               	goto	l11809
  6009  0950                     u5170:
  6010                           	
  6011  0950                     l11805:	
  6012  0950  0868               	movf	(robotFollow@hysterysis),w
  6013  0951  075F               	addwf	(robotFollow@AdcTarget),w
  6014  0952  00E2               	movwf	(??_robotFollow+0)+0
  6015  0953  0860               	movf	(robotFollow@AdcTarget+1),w
  6016  0954  1803               	skipnc
  6017  0955  0A60               	incf	(robotFollow@AdcTarget+1),w
  6018  0956  00E3               	movwf	((??_robotFollow+0)+0)+1
  6019  0957  0863               	movf	1+(??_robotFollow+0)+0,w
  6020  0958  1683               	bsf	status, 5	;RP0=1, select bank1
  6021  0959  1303               	bcf	status, 6	;RP1=0, select bank1
  6022  095A  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  6023  095B  1D03               	skipz
  6024  095C  2963               	goto	u5185
  6025  095D  1283               	bcf	status, 5	;RP0=0, select bank0
  6026  095E  1303               	bcf	status, 6	;RP1=0, select bank0
  6027  095F  0862               	movf	0+(??_robotFollow+0)+0,w
  6028  0960  1683               	bsf	status, 5	;RP0=1, select bank1
  6029  0961  1303               	bcf	status, 6	;RP1=0, select bank1
  6030  0962  022E               	subwf	(_adcVal)^080h,w	;volatile
  6031  0963                     u5185:
  6032  0963  1803               	skipnc
  6033  0964  2966               	goto	u5181
  6034  0965  2967               	goto	u5180
  6035  0966                     u5181:
  6036  0966  2979               	goto	l11809
  6037  0967                     u5180:
  6038                           	line	206
  6039                           	
  6040  0967                     l11807:	
  6041                           ;robot.c: 205: {
  6042                           ;robot.c: 206: RobotDrive(speed, 1700);
  6043  0967  1283               	bcf	status, 5	;RP0=0, select bank0
  6044  0968  1303               	bcf	status, 6	;RP1=0, select bank0
  6045  0969  085E               	movf	(robotFollow@speed+1),w
  6046  096A  01AA               	clrf	(?_RobotDrive+1)
  6047  096B  07AA               	addwf	(?_RobotDrive+1)
  6048  096C  085D               	movf	(robotFollow@speed),w
  6049  096D  01A9               	clrf	(?_RobotDrive)
  6050  096E  07A9               	addwf	(?_RobotDrive)
  6051                           
  6052  096F  30A4               	movlw	low(06A4h)
  6053  0970  00AB               	movwf	0+(?_RobotDrive)+02h
  6054  0971  3006               	movlw	high(06A4h)
  6055  0972  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6056  0973  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6057                           	line	207
  6058                           ;robot.c: 207: }
  6059  0978  2A4B               	goto	l6120
  6060                           	line	208
  6061                           	
  6062  0979                     l6119:	
  6063                           	
  6064  0979                     l11809:	
  6065                           ;robot.c: 208: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - hysterysis))
  6066  0979  1283               	bcf	status, 5	;RP0=0, select bank0
  6067  097A  1303               	bcf	status, 6	;RP1=0, select bank0
  6068  097B  0860               	movf	(robotFollow@AdcTarget+1),w
  6069  097C  1683               	bsf	status, 5	;RP0=1, select bank1
  6070  097D  1303               	bcf	status, 6	;RP1=0, select bank1
  6071  097E  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  6072  097F  1D03               	skipz
  6073  0980  2987               	goto	u5195
  6074  0981  1283               	bcf	status, 5	;RP0=0, select bank0
  6075  0982  1303               	bcf	status, 6	;RP1=0, select bank0
  6076  0983  085F               	movf	(robotFollow@AdcTarget),w
  6077  0984  1683               	bsf	status, 5	;RP0=1, select bank1
  6078  0985  1303               	bcf	status, 6	;RP1=0, select bank1
  6079  0986  022E               	subwf	(_adcVal)^080h,w	;volatile
  6080  0987                     u5195:
  6081  0987  1803               	skipnc
  6082  0988  298A               	goto	u5191
  6083  0989  298B               	goto	u5190
  6084  098A                     u5191:
  6085  098A  29BF               	goto	l11815
  6086  098B                     u5190:
  6087                           	
  6088  098B                     l11811:	
  6089  098B  1283               	bcf	status, 5	;RP0=0, select bank0
  6090  098C  1303               	bcf	status, 6	;RP1=0, select bank0
  6091  098D  0868               	movf	(robotFollow@hysterysis),w
  6092  098E  00E2               	movwf	(??_robotFollow+0)+0
  6093  098F  01E3               	clrf	(??_robotFollow+0)+0+1
  6094  0990  09E2               	comf	(??_robotFollow+0)+0,f
  6095  0991  09E3               	comf	(??_robotFollow+0)+1,f
  6096  0992  0AE2               	incf	(??_robotFollow+0)+0,f
  6097  0993  1903               	skipnz
  6098  0994  0AE3               	incf	(??_robotFollow+0)+1,f
  6099  0995  085F               	movf	(robotFollow@AdcTarget),w
  6100  0996  0762               	addwf	0+(??_robotFollow+0)+0,w
  6101  0997  00E4               	movwf	(??_robotFollow+2)+0
  6102  0998  0860               	movf	(robotFollow@AdcTarget+1),w
  6103  0999  1803               	skipnc
  6104  099A  0A60               	incf	(robotFollow@AdcTarget+1),w
  6105  099B  0763               	addwf	1+(??_robotFollow+0)+0,w
  6106  099C  00E5               	movwf	1+(??_robotFollow+2)+0
  6107  099D  1683               	bsf	status, 5	;RP0=1, select bank1
  6108  099E  1303               	bcf	status, 6	;RP1=0, select bank1
  6109  099F  082F               	movf	(_adcVal+1)^080h,w	;volatile
  6110  09A0  1283               	bcf	status, 5	;RP0=0, select bank0
  6111  09A1  1303               	bcf	status, 6	;RP1=0, select bank0
  6112  09A2  0265               	subwf	1+(??_robotFollow+2)+0,w
  6113  09A3  1D03               	skipz
  6114  09A4  29AB               	goto	u5205
  6115  09A5  1683               	bsf	status, 5	;RP0=1, select bank1
  6116  09A6  1303               	bcf	status, 6	;RP1=0, select bank1
  6117  09A7  082E               	movf	(_adcVal)^080h,w	;volatile
  6118  09A8  1283               	bcf	status, 5	;RP0=0, select bank0
  6119  09A9  1303               	bcf	status, 6	;RP1=0, select bank0
  6120  09AA  0264               	subwf	0+(??_robotFollow+2)+0,w
  6121  09AB                     u5205:
  6122  09AB  1803               	skipnc
  6123  09AC  29AE               	goto	u5201
  6124  09AD  29AF               	goto	u5200
  6125  09AE                     u5201:
  6126  09AE  29BF               	goto	l11815
  6127  09AF                     u5200:
  6128                           	line	210
  6129                           	
  6130  09AF                     l11813:	
  6131                           ;robot.c: 209: {
  6132                           ;robot.c: 210: RobotDrive(speed, -1700);
  6133  09AF  085E               	movf	(robotFollow@speed+1),w
  6134  09B0  01AA               	clrf	(?_RobotDrive+1)
  6135  09B1  07AA               	addwf	(?_RobotDrive+1)
  6136  09B2  085D               	movf	(robotFollow@speed),w
  6137  09B3  01A9               	clrf	(?_RobotDrive)
  6138  09B4  07A9               	addwf	(?_RobotDrive)
  6139                           
  6140  09B5  305C               	movlw	low(-1700)
  6141  09B6  00AB               	movwf	0+(?_RobotDrive)+02h
  6142  09B7  30F9               	movlw	high(-1700)
  6143  09B8  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6144  09B9  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6145                           	line	211
  6146                           ;robot.c: 211: }
  6147  09BE  2A4B               	goto	l6120
  6148                           	line	212
  6149                           	
  6150  09BF                     l6121:	
  6151                           	
  6152  09BF                     l11815:	
  6153                           ;robot.c: 212: else if (adcVal <= (AdcTarget - hysterysis) || adcVal >= (AdcTarget + hys
                                 terysis))
  6154  09BF  1283               	bcf	status, 5	;RP0=0, select bank0
  6155  09C0  1303               	bcf	status, 6	;RP1=0, select bank0
  6156  09C1  0868               	movf	(robotFollow@hysterysis),w
  6157  09C2  00E2               	movwf	(??_robotFollow+0)+0
  6158  09C3  01E3               	clrf	(??_robotFollow+0)+0+1
  6159  09C4  09E2               	comf	(??_robotFollow+0)+0,f
  6160  09C5  09E3               	comf	(??_robotFollow+0)+1,f
  6161  09C6  0AE2               	incf	(??_robotFollow+0)+0,f
  6162  09C7  1903               	skipnz
  6163  09C8  0AE3               	incf	(??_robotFollow+0)+1,f
  6164  09C9  085F               	movf	(robotFollow@AdcTarget),w
  6165  09CA  0762               	addwf	0+(??_robotFollow+0)+0,w
  6166  09CB  00E4               	movwf	(??_robotFollow+2)+0
  6167  09CC  0860               	movf	(robotFollow@AdcTarget+1),w
  6168  09CD  1803               	skipnc
  6169  09CE  0A60               	incf	(robotFollow@AdcTarget+1),w
  6170  09CF  0763               	addwf	1+(??_robotFollow+0)+0,w
  6171  09D0  00E5               	movwf	1+(??_robotFollow+2)+0
  6172  09D1  1683               	bsf	status, 5	;RP0=1, select bank1
  6173  09D2  1303               	bcf	status, 6	;RP1=0, select bank1
  6174  09D3  082F               	movf	(_adcVal+1)^080h,w	;volatile
  6175  09D4  1283               	bcf	status, 5	;RP0=0, select bank0
  6176  09D5  1303               	bcf	status, 6	;RP1=0, select bank0
  6177  09D6  0265               	subwf	1+(??_robotFollow+2)+0,w
  6178  09D7  1D03               	skipz
  6179  09D8  29DF               	goto	u5215
  6180  09D9  1683               	bsf	status, 5	;RP0=1, select bank1
  6181  09DA  1303               	bcf	status, 6	;RP1=0, select bank1
  6182  09DB  082E               	movf	(_adcVal)^080h,w	;volatile
  6183  09DC  1283               	bcf	status, 5	;RP0=0, select bank0
  6184  09DD  1303               	bcf	status, 6	;RP1=0, select bank0
  6185  09DE  0264               	subwf	0+(??_robotFollow+2)+0,w
  6186  09DF                     u5215:
  6187  09DF  1803               	skipnc
  6188  09E0  29E2               	goto	u5211
  6189  09E1  29E3               	goto	u5210
  6190  09E2                     u5211:
  6191  09E2  29FB               	goto	l11819
  6192  09E3                     u5210:
  6193                           	
  6194  09E3                     l11817:	
  6195  09E3  0868               	movf	(robotFollow@hysterysis),w
  6196  09E4  075F               	addwf	(robotFollow@AdcTarget),w
  6197  09E5  00E2               	movwf	(??_robotFollow+0)+0
  6198  09E6  0860               	movf	(robotFollow@AdcTarget+1),w
  6199  09E7  1803               	skipnc
  6200  09E8  0A60               	incf	(robotFollow@AdcTarget+1),w
  6201  09E9  00E3               	movwf	((??_robotFollow+0)+0)+1
  6202  09EA  0863               	movf	1+(??_robotFollow+0)+0,w
  6203  09EB  1683               	bsf	status, 5	;RP0=1, select bank1
  6204  09EC  1303               	bcf	status, 6	;RP1=0, select bank1
  6205  09ED  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  6206  09EE  1D03               	skipz
  6207  09EF  29F6               	goto	u5225
  6208  09F0  1283               	bcf	status, 5	;RP0=0, select bank0
  6209  09F1  1303               	bcf	status, 6	;RP1=0, select bank0
  6210  09F2  0862               	movf	0+(??_robotFollow+0)+0,w
  6211  09F3  1683               	bsf	status, 5	;RP0=1, select bank1
  6212  09F4  1303               	bcf	status, 6	;RP1=0, select bank1
  6213  09F5  022E               	subwf	(_adcVal)^080h,w	;volatile
  6214  09F6                     u5225:
  6215  09F6  1C03               	skipc
  6216  09F7  29F9               	goto	u5221
  6217  09F8  29FA               	goto	u5220
  6218  09F9                     u5221:
  6219  09F9  2A38               	goto	l11833
  6220  09FA                     u5220:
  6221  09FA  29FB               	goto	l11819
  6222                           	
  6223  09FB                     l6125:	
  6224                           	line	214
  6225                           	
  6226  09FB                     l11819:	
  6227                           ;robot.c: 213: {
  6228                           ;robot.c: 214: rotate(10,1);
  6229  09FB  300A               	movlw	low(0Ah)
  6230  09FC  1283               	bcf	status, 5	;RP0=0, select bank0
  6231  09FD  00A3               	movwf	(?_rotate)
  6232  09FE  3000               	movlw	high(0Ah)
  6233  09FF  00A4               	movwf	((?_rotate))+1
  6234  0A00  01A5               	clrf	0+(?_rotate)+02h
  6235  0A01  1403               	bsf	status,0
  6236  0A02  0DA5               	rlf	0+(?_rotate)+02h,f
  6237  0A03  160A  118A  2043   	fcall	_rotate
              120A  158A         
  6238                           	line	215
  6239                           	
  6240  0A08                     l11821:	
  6241                           ;robot.c: 215: readAvgDistance();
  6242  0A08  160A  118A  226C   	fcall	_readAvgDistance
              120A  158A         
  6243                           	line	216
  6244                           	
  6245  0A0D                     l11823:	
  6246                           ;robot.c: 216: rotate(10,0);
  6247  0A0D  300A               	movlw	low(0Ah)
  6248  0A0E  1283               	bcf	status, 5	;RP0=0, select bank0
  6249  0A0F  1303               	bcf	status, 6	;RP1=0, select bank0
  6250  0A10  00A3               	movwf	(?_rotate)
  6251  0A11  3000               	movlw	high(0Ah)
  6252  0A12  00A4               	movwf	((?_rotate))+1
  6253  0A13  01A5               	clrf	0+(?_rotate)+02h
  6254  0A14  160A  118A  2043   	fcall	_rotate
              120A  158A         
  6255                           	line	217
  6256                           	
  6257  0A19                     l11825:	
  6258                           ;robot.c: 217: if (adcVal < 50)
  6259  0A19  3000               	movlw	high(032h)
  6260  0A1A  1683               	bsf	status, 5	;RP0=1, select bank1
  6261  0A1B  1303               	bcf	status, 6	;RP1=0, select bank1
  6262  0A1C  022F               	subwf	(_adcVal+1)^080h,w	;volatile
  6263  0A1D  3032               	movlw	low(032h)
  6264  0A1E  1903               	skipnz
  6265  0A1F  022E               	subwf	(_adcVal)^080h,w	;volatile
  6266  0A20  1803               	skipnc
  6267  0A21  2A23               	goto	u5231
  6268  0A22  2A24               	goto	u5230
  6269  0A23                     u5231:
  6270  0A23  2A2D               	goto	l11829
  6271  0A24                     u5230:
  6272                           	line	218
  6273                           	
  6274  0A24                     l11827:	
  6275                           ;robot.c: 218: ROBOTerror = 11;
  6276  0A24  300B               	movlw	(0Bh)
  6277  0A25  1283               	bcf	status, 5	;RP0=0, select bank0
  6278  0A26  1303               	bcf	status, 6	;RP1=0, select bank0
  6279  0A27  00E2               	movwf	(??_robotFollow+0)+0
  6280  0A28  0862               	movf	(??_robotFollow+0)+0,w
  6281  0A29  1683               	bsf	status, 5	;RP0=1, select bank1
  6282  0A2A  1303               	bcf	status, 6	;RP1=0, select bank1
  6283  0A2B  00C6               	movwf	(_ROBOTerror)^080h
  6284  0A2C  2B13               	goto	l11873
  6285                           	line	219
  6286                           	
  6287  0A2D                     l6126:	
  6288                           	line	220
  6289                           	
  6290  0A2D                     l11829:	
  6291                           ;robot.c: 219: else
  6292                           ;robot.c: 220: ROBOTerror = 10;
  6293  0A2D  300A               	movlw	(0Ah)
  6294  0A2E  1283               	bcf	status, 5	;RP0=0, select bank0
  6295  0A2F  1303               	bcf	status, 6	;RP1=0, select bank0
  6296  0A30  00E2               	movwf	(??_robotFollow+0)+0
  6297  0A31  0862               	movf	(??_robotFollow+0)+0,w
  6298  0A32  1683               	bsf	status, 5	;RP0=1, select bank1
  6299  0A33  1303               	bcf	status, 6	;RP1=0, select bank1
  6300  0A34  00C6               	movwf	(_ROBOTerror)^080h
  6301  0A35  2B13               	goto	l11873
  6302                           	
  6303  0A36                     l6127:	
  6304                           	line	222
  6305                           ;robot.c: 222: break;
  6306  0A36  2B13               	goto	l11873
  6307                           	line	223
  6308                           	
  6309  0A37                     l11831:	
  6310                           ;robot.c: 223: }
  6311  0A37  2A4B               	goto	l6120
  6312                           	line	224
  6313                           	
  6314  0A38                     l6123:	
  6315                           	line	226
  6316                           	
  6317  0A38                     l11833:	
  6318                           ;robot.c: 224: else
  6319                           ;robot.c: 225: {
  6320                           ;robot.c: 226: RobotDrive(speed, 0x7FFF);
  6321  0A38  1283               	bcf	status, 5	;RP0=0, select bank0
  6322  0A39  1303               	bcf	status, 6	;RP1=0, select bank0
  6323  0A3A  085E               	movf	(robotFollow@speed+1),w
  6324  0A3B  01AA               	clrf	(?_RobotDrive+1)
  6325  0A3C  07AA               	addwf	(?_RobotDrive+1)
  6326  0A3D  085D               	movf	(robotFollow@speed),w
  6327  0A3E  01A9               	clrf	(?_RobotDrive)
  6328  0A3F  07A9               	addwf	(?_RobotDrive)
  6329                           
  6330  0A40  30FF               	movlw	low(07FFFh)
  6331  0A41  00AB               	movwf	0+(?_RobotDrive)+02h
  6332  0A42  307F               	movlw	high(07FFFh)
  6333  0A43  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6334  0A44  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6335  0A49  2A4B               	goto	l6120
  6336                           	line	227
  6337                           	
  6338  0A4A                     l6129:	
  6339  0A4A  2A4B               	goto	l6120
  6340                           	
  6341  0A4B                     l6122:	
  6342                           	
  6343  0A4B                     l6120:	
  6344                           	line	228
  6345                           ;robot.c: 227: }
  6346                           ;robot.c: 228: robot_read(0);
  6347  0A4B  3000               	movlw	(0)
  6348  0A4C  120A  118A  26A0   	fcall	_robot_read
              120A  158A         
  6349                           	line	229
  6350                           	
  6351  0A51                     l11835:	
  6352                           ;robot.c: 229: if (BumpSensors)
  6353  0A51  1683               	bsf	status, 5	;RP0=1, select bank1
  6354  0A52  1303               	bcf	status, 6	;RP1=0, select bank1
  6355  0A53  0840               	movf	(_BumpSensors)^080h,w	;volatile
  6356  0A54  1D03               	skipz
  6357  0A55  2A57               	goto	u5240
  6358  0A56  2A6C               	goto	l11841
  6359  0A57                     u5240:
  6360                           	line	231
  6361                           	
  6362  0A57                     l11837:	
  6363                           ;robot.c: 230: {
  6364                           ;robot.c: 231: RobotDrive(0, 0x7FFF);
  6365  0A57  3000               	movlw	low(0)
  6366  0A58  1283               	bcf	status, 5	;RP0=0, select bank0
  6367  0A59  1303               	bcf	status, 6	;RP1=0, select bank0
  6368  0A5A  00A9               	movwf	(?_RobotDrive)
  6369  0A5B  3000               	movlw	high(0)
  6370  0A5C  00AA               	movwf	((?_RobotDrive))+1
  6371  0A5D  30FF               	movlw	low(07FFFh)
  6372  0A5E  00AB               	movwf	0+(?_RobotDrive)+02h
  6373  0A5F  307F               	movlw	high(07FFFh)
  6374  0A60  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6375  0A61  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6376                           	line	232
  6377                           	
  6378  0A66                     l11839:	
  6379                           ;robot.c: 232: ROBOTerror = 1;
  6380  0A66  1683               	bsf	status, 5	;RP0=1, select bank1
  6381  0A67  1303               	bcf	status, 6	;RP1=0, select bank1
  6382  0A68  01C6               	clrf	(_ROBOTerror)^080h
  6383  0A69  1403               	bsf	status,0
  6384  0A6A  0DC6               	rlf	(_ROBOTerror)^080h,f
  6385                           	line	233
  6386                           ;robot.c: 233: break;
  6387  0A6B  2B13               	goto	l11873
  6388                           	line	234
  6389                           	
  6390  0A6C                     l6130:	
  6391                           	line	235
  6392                           	
  6393  0A6C                     l11841:	
  6394                           ;robot.c: 234: }
  6395                           ;robot.c: 235: if (VwallSensor)
  6396  0A6C  084B               	movf	(_VwallSensor)^080h,w	;volatile
  6397  0A6D  1D03               	skipz
  6398  0A6E  2A70               	goto	u5250
  6399  0A6F  2A88               	goto	l11847
  6400  0A70                     u5250:
  6401                           	line	237
  6402                           	
  6403  0A70                     l11843:	
  6404                           ;robot.c: 236: {
  6405                           ;robot.c: 237: RobotDrive(0, 0x7FFF);
  6406  0A70  3000               	movlw	low(0)
  6407  0A71  1283               	bcf	status, 5	;RP0=0, select bank0
  6408  0A72  1303               	bcf	status, 6	;RP1=0, select bank0
  6409  0A73  00A9               	movwf	(?_RobotDrive)
  6410  0A74  3000               	movlw	high(0)
  6411  0A75  00AA               	movwf	((?_RobotDrive))+1
  6412  0A76  30FF               	movlw	low(07FFFh)
  6413  0A77  00AB               	movwf	0+(?_RobotDrive)+02h
  6414  0A78  307F               	movlw	high(07FFFh)
  6415  0A79  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6416  0A7A  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6417                           	line	238
  6418                           	
  6419  0A7F                     l11845:	
  6420                           ;robot.c: 238: ROBOTerror = 2;
  6421  0A7F  3002               	movlw	(02h)
  6422  0A80  1283               	bcf	status, 5	;RP0=0, select bank0
  6423  0A81  1303               	bcf	status, 6	;RP1=0, select bank0
  6424  0A82  00E2               	movwf	(??_robotFollow+0)+0
  6425  0A83  0862               	movf	(??_robotFollow+0)+0,w
  6426  0A84  1683               	bsf	status, 5	;RP0=1, select bank1
  6427  0A85  1303               	bcf	status, 6	;RP1=0, select bank1
  6428  0A86  00C6               	movwf	(_ROBOTerror)^080h
  6429                           	line	239
  6430                           ;robot.c: 239: break;
  6431  0A87  2B13               	goto	l11873
  6432                           	line	240
  6433                           	
  6434  0A88                     l6131:	
  6435                           	line	241
  6436                           	
  6437  0A88                     l11847:	
  6438                           ;robot.c: 240: }
  6439                           ;robot.c: 241: if (CliffSensors)
  6440  0A88  0842               	movf	(_CliffSensors)^080h,w	;volatile
  6441  0A89  1D03               	skipz
  6442  0A8A  2A8C               	goto	u5260
  6443  0A8B  2AA4               	goto	l11853
  6444  0A8C                     u5260:
  6445                           	line	243
  6446                           	
  6447  0A8C                     l11849:	
  6448                           ;robot.c: 242: {
  6449                           ;robot.c: 243: RobotDrive(-200, 0x7FFF);
  6450  0A8C  3038               	movlw	low(-200)
  6451  0A8D  1283               	bcf	status, 5	;RP0=0, select bank0
  6452  0A8E  1303               	bcf	status, 6	;RP1=0, select bank0
  6453  0A8F  00A9               	movwf	(?_RobotDrive)
  6454  0A90  30FF               	movlw	high(-200)
  6455  0A91  00AA               	movwf	((?_RobotDrive))+1
  6456  0A92  30FF               	movlw	low(07FFFh)
  6457  0A93  00AB               	movwf	0+(?_RobotDrive)+02h
  6458  0A94  307F               	movlw	high(07FFFh)
  6459  0A95  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6460  0A96  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6461                           	line	244
  6462                           	
  6463  0A9B                     l11851:	
  6464                           ;robot.c: 244: ROBOTerror = 3;
  6465  0A9B  3003               	movlw	(03h)
  6466  0A9C  1283               	bcf	status, 5	;RP0=0, select bank0
  6467  0A9D  1303               	bcf	status, 6	;RP1=0, select bank0
  6468  0A9E  00E2               	movwf	(??_robotFollow+0)+0
  6469  0A9F  0862               	movf	(??_robotFollow+0)+0,w
  6470  0AA0  1683               	bsf	status, 5	;RP0=1, select bank1
  6471  0AA1  1303               	bcf	status, 6	;RP1=0, select bank1
  6472  0AA2  00C6               	movwf	(_ROBOTerror)^080h
  6473                           	line	245
  6474                           ;robot.c: 245: break;
  6475  0AA3  2B13               	goto	l11873
  6476                           	line	246
  6477                           	
  6478  0AA4                     l6132:	
  6479                           	line	247
  6480                           	
  6481  0AA4                     l11853:	
  6482                           ;robot.c: 246: }
  6483                           ;robot.c: 247: if (VictimSensor != 255)
  6484  0AA4  084A               	movf	(_VictimSensor)^080h,w	;volatile
  6485  0AA5  3AFF               	xorlw	0FFh
  6486  0AA6  1903               	skipnz
  6487  0AA7  2AA9               	goto	u5271
  6488  0AA8  2AAA               	goto	u5270
  6489  0AA9                     u5271:
  6490  0AA9  2AC2               	goto	l11859
  6491  0AAA                     u5270:
  6492                           	line	249
  6493                           	
  6494  0AAA                     l11855:	
  6495                           ;robot.c: 248: {
  6496                           ;robot.c: 249: RobotDrive(0, 0x7FFF);
  6497  0AAA  3000               	movlw	low(0)
  6498  0AAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6499  0AAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6500  0AAD  00A9               	movwf	(?_RobotDrive)
  6501  0AAE  3000               	movlw	high(0)
  6502  0AAF  00AA               	movwf	((?_RobotDrive))+1
  6503  0AB0  30FF               	movlw	low(07FFFh)
  6504  0AB1  00AB               	movwf	0+(?_RobotDrive)+02h
  6505  0AB2  307F               	movlw	high(07FFFh)
  6506  0AB3  00AC               	movwf	(0+(?_RobotDrive)+02h)+1
  6507  0AB4  160A  118A  200A   	fcall	_RobotDrive
              120A  158A         
  6508                           	line	250
  6509                           	
  6510  0AB9                     l11857:	
  6511                           ;robot.c: 250: ROBOTerror = 4;
  6512  0AB9  3004               	movlw	(04h)
  6513  0ABA  1283               	bcf	status, 5	;RP0=0, select bank0
  6514  0ABB  1303               	bcf	status, 6	;RP1=0, select bank0
  6515  0ABC  00E2               	movwf	(??_robotFollow+0)+0
  6516  0ABD  0862               	movf	(??_robotFollow+0)+0,w
  6517  0ABE  1683               	bsf	status, 5	;RP0=1, select bank1
  6518  0ABF  1303               	bcf	status, 6	;RP1=0, select bank1
  6519  0AC0  00C6               	movwf	(_ROBOTerror)^080h
  6520                           	line	251
  6521                           ;robot.c: 251: break;
  6522  0AC1  2B13               	goto	l11873
  6523                           	line	252
  6524                           	
  6525  0AC2                     l6133:	
  6526                           	line	253
  6527                           	
  6528  0AC2                     l11859:	
  6529                           ;robot.c: 252: }
  6530                           ;robot.c: 253: temp1 = DistHighByte;
  6531  0AC2  087D               	movf	(_DistHighByte),w	;volatile
  6532  0AC3  1283               	bcf	status, 5	;RP0=0, select bank0
  6533  0AC4  1303               	bcf	status, 6	;RP1=0, select bank0
  6534  0AC5  00E2               	movwf	(??_robotFollow+0)+0
  6535  0AC6  01E3               	clrf	(??_robotFollow+0)+0+1
  6536  0AC7  0862               	movf	0+(??_robotFollow+0)+0,w
  6537  0AC8  00E6               	movwf	(robotFollow@temp1)
  6538  0AC9  0863               	movf	1+(??_robotFollow+0)+0,w
  6539  0ACA  00E7               	movwf	(robotFollow@temp1+1)
  6540                           	line	254
  6541                           	
  6542  0ACB                     l11861:	
  6543                           ;robot.c: 254: temp1 = temp1 << 8;
  6544  0ACB  0867               	movf	(robotFollow@temp1+1),w
  6545  0ACC  00E3               	movwf	(??_robotFollow+0)+0+1
  6546  0ACD  0866               	movf	(robotFollow@temp1),w
  6547  0ACE  00E2               	movwf	(??_robotFollow+0)+0
  6548  0ACF  0862               	movf	(??_robotFollow+0)+0,w
  6549  0AD0  00E3               	movwf	(??_robotFollow+0)+1
  6550  0AD1  01E2               	clrf	(??_robotFollow+0)+0
  6551  0AD2  0862               	movf	0+(??_robotFollow+0)+0,w
  6552  0AD3  00E6               	movwf	(robotFollow@temp1)
  6553  0AD4  0863               	movf	1+(??_robotFollow+0)+0,w
  6554  0AD5  00E7               	movwf	(robotFollow@temp1+1)
  6555                           	line	255
  6556                           	
  6557  0AD6                     l11863:	
  6558                           ;robot.c: 255: temp1 += DistLowByte;
  6559  0AD6  1683               	bsf	status, 5	;RP0=1, select bank1
  6560  0AD7  1303               	bcf	status, 6	;RP1=0, select bank1
  6561  0AD8  0843               	movf	(_DistLowByte)^080h,w	;volatile
  6562  0AD9  1283               	bcf	status, 5	;RP0=0, select bank0
  6563  0ADA  1303               	bcf	status, 6	;RP1=0, select bank0
  6564  0ADB  00E2               	movwf	(??_robotFollow+0)+0
  6565  0ADC  01E3               	clrf	(??_robotFollow+0)+0+1
  6566  0ADD  0862               	movf	0+(??_robotFollow+0)+0,w
  6567  0ADE  07E6               	addwf	(robotFollow@temp1),f
  6568  0ADF  1803               	skipnc
  6569  0AE0  0AE7               	incf	(robotFollow@temp1+1),f
  6570  0AE1  0863               	movf	1+(??_robotFollow+0)+0,w
  6571  0AE2  07E7               	addwf	(robotFollow@temp1+1),f
  6572                           	line	256
  6573                           	
  6574  0AE3                     l11865:	
  6575                           ;robot.c: 256: distTravelled += temp1;
  6576  0AE3  0866               	movf	(robotFollow@temp1),w
  6577  0AE4  1683               	bsf	status, 5	;RP0=1, select bank1
  6578  0AE5  1303               	bcf	status, 6	;RP1=0, select bank1
  6579  0AE6  07B2               	addwf	(_distTravelled)^080h,f
  6580  0AE7  1803               	skipnc
  6581  0AE8  0AB3               	incf	(_distTravelled+1)^080h,f
  6582  0AE9  1283               	bcf	status, 5	;RP0=0, select bank0
  6583  0AEA  1303               	bcf	status, 6	;RP1=0, select bank0
  6584  0AEB  0867               	movf	(robotFollow@temp1+1),w
  6585  0AEC  1683               	bsf	status, 5	;RP0=1, select bank1
  6586  0AED  1303               	bcf	status, 6	;RP1=0, select bank1
  6587  0AEE  07B3               	addwf	(_distTravelled+1)^080h,f
  6588                           	line	257
  6589                           	
  6590  0AEF                     l11867:	
  6591                           ;robot.c: 257: TotalDistTravelled += temp1;
  6592  0AEF  1283               	bcf	status, 5	;RP0=0, select bank0
  6593  0AF0  1303               	bcf	status, 6	;RP1=0, select bank0
  6594  0AF1  0866               	movf	(robotFollow@temp1),w
  6595  0AF2  1683               	bsf	status, 5	;RP0=1, select bank1
  6596  0AF3  1303               	bcf	status, 6	;RP1=0, select bank1
  6597  0AF4  07AC               	addwf	(_TotalDistTravelled)^080h,f
  6598  0AF5  1803               	skipnc
  6599  0AF6  0AAD               	incf	(_TotalDistTravelled+1)^080h,f
  6600  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  6601  0AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  6602  0AF9  0867               	movf	(robotFollow@temp1+1),w
  6603  0AFA  1683               	bsf	status, 5	;RP0=1, select bank1
  6604  0AFB  1303               	bcf	status, 6	;RP1=0, select bank1
  6605  0AFC  07AD               	addwf	(_TotalDistTravelled+1)^080h,f
  6606                           	line	259
  6607                           	
  6608  0AFD                     l11869:	
  6609                           ;robot.c: 259: Disp2 = RobotPos;
  6610  0AFD  0848               	movf	(_RobotPos)^080h,w
  6611  0AFE  1283               	bcf	status, 5	;RP0=0, select bank0
  6612  0AFF  1303               	bcf	status, 6	;RP1=0, select bank0
  6613  0B00  00E2               	movwf	(??_robotFollow+0)+0
  6614  0B01  01E3               	clrf	(??_robotFollow+0)+0+1
  6615  0B02  0862               	movf	0+(??_robotFollow+0)+0,w
  6616  0B03  1683               	bsf	status, 5	;RP0=1, select bank1
  6617  0B04  1303               	bcf	status, 6	;RP1=0, select bank1
  6618  0B05  00A6               	movwf	(_Disp2)^080h
  6619  0B06  1283               	bcf	status, 5	;RP0=0, select bank0
  6620  0B07  1303               	bcf	status, 6	;RP1=0, select bank0
  6621  0B08  0863               	movf	1+(??_robotFollow+0)+0,w
  6622  0B09  1683               	bsf	status, 5	;RP0=1, select bank1
  6623  0B0A  1303               	bcf	status, 6	;RP1=0, select bank1
  6624  0B0B  00A7               	movwf	(_Disp2+1)^080h
  6625                           	line	260
  6626                           	
  6627  0B0C                     l11871:	
  6628                           ;robot.c: 260: UpdateDisplay();
  6629  0B0C  120A  118A  241B   	fcall	_UpdateDisplay
              120A  158A         
  6630  0B11  2909               	goto	l11793
  6631                           	line	261
  6632                           	
  6633  0B12                     l6134:	
  6634                           	line	195
  6635  0B12  2909               	goto	l11793
  6636                           	
  6637  0B13                     l6128:	
  6638                           	line	263
  6639                           	
  6640  0B13                     l11873:	
  6641                           ;robot.c: 261: }
  6642                           ;robot.c: 263: Disp2 = RobotPos;
  6643  0B13  1683               	bsf	status, 5	;RP0=1, select bank1
  6644  0B14  1303               	bcf	status, 6	;RP1=0, select bank1
  6645  0B15  0848               	movf	(_RobotPos)^080h,w
  6646  0B16  1283               	bcf	status, 5	;RP0=0, select bank0
  6647  0B17  1303               	bcf	status, 6	;RP1=0, select bank0
  6648  0B18  00E2               	movwf	(??_robotFollow+0)+0
  6649  0B19  01E3               	clrf	(??_robotFollow+0)+0+1
  6650  0B1A  0862               	movf	0+(??_robotFollow+0)+0,w
  6651  0B1B  1683               	bsf	status, 5	;RP0=1, select bank1
  6652  0B1C  1303               	bcf	status, 6	;RP1=0, select bank1
  6653  0B1D  00A6               	movwf	(_Disp2)^080h
  6654  0B1E  1283               	bcf	status, 5	;RP0=0, select bank0
  6655  0B1F  1303               	bcf	status, 6	;RP1=0, select bank0
  6656  0B20  0863               	movf	1+(??_robotFollow+0)+0,w
  6657  0B21  1683               	bsf	status, 5	;RP0=1, select bank1
  6658  0B22  1303               	bcf	status, 6	;RP1=0, select bank1
  6659  0B23  00A7               	movwf	(_Disp2+1)^080h
  6660                           	line	264
  6661                           	
  6662  0B24                     l11875:	
  6663                           ;robot.c: 264: UpdateDisplay();
  6664  0B24  120A  118A  241B   	fcall	_UpdateDisplay
              120A  158A         
  6665                           	line	265
  6666                           	
  6667  0B29                     l6135:	
  6668  0B29  0008               	return
  6669                           	opt stack 0
  6670                           GLOBAL	__end_of_robotFollow
  6671  0B2A                     	__end_of_robotFollow:
  6672 ;; =============== function _robotFollow ends ============
  6673                           
  6674                           	signat	_robotFollow,12408
  6675                           	global	_calibrateIR
  6676                           psect	text1094,local,class=CODE,delta=2
  6677                           global __ptext1094
  6678  1112                     __ptext1094:
  6679                           
  6680 ;; *************** function _calibrateIR *****************
  6681 ;; Defined at:
  6682 ;;		line 318 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;		None               void
  6689 ;; Registers used:
  6690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6696 ;;      Params:         0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    6
  6703 ;; This function calls:
  6704 ;;		_rotate
  6705 ;;		_UpdateDisplay
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;;		_Init_Follow_IR
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           psect	text1094
  6712                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  6713                           	line	318
  6714                           	global	__size_of_calibrateIR
  6715  0070                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  6716                           	
  6717  1112                     _calibrateIR:	
  6718                           	opt	stack 0
  6719                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6720                           	line	319
  6721                           	
  6722  1112                     l11753:	
  6723                           ;Main.c: 319: currentMenu = 1;
  6724  1112  1683               	bsf	status, 5	;RP0=1, select bank1
  6725  1113  1303               	bcf	status, 6	;RP1=0, select bank1
  6726  1114  01CD               	clrf	(_currentMenu)^080h	;volatile
  6727  1115  1403               	bsf	status,0
  6728  1116  0DCD               	rlf	(_currentMenu)^080h,f	;volatile
  6729                           	line	320
  6730                           	
  6731  1117                     l11755:	
  6732                           ;Main.c: 320: rotate(8, 0);
  6733  1117  3008               	movlw	low(08h)
  6734  1118  1283               	bcf	status, 5	;RP0=0, select bank0
  6735  1119  1303               	bcf	status, 6	;RP1=0, select bank0
  6736  111A  00A3               	movwf	(?_rotate)
  6737  111B  3000               	movlw	high(08h)
  6738  111C  00A4               	movwf	((?_rotate))+1
  6739  111D  01A5               	clrf	0+(?_rotate)+02h
  6740  111E  160A  118A  2043   	fcall	_rotate
              160A  118A         
  6741                           	line	321
  6742                           	
  6743  1123                     l11757:	
  6744                           ;Main.c: 321: rotate(8, 1);
  6745  1123  3008               	movlw	low(08h)
  6746  1124  1283               	bcf	status, 5	;RP0=0, select bank0
  6747  1125  1303               	bcf	status, 6	;RP1=0, select bank0
  6748  1126  00A3               	movwf	(?_rotate)
  6749  1127  3000               	movlw	high(08h)
  6750  1128  00A4               	movwf	((?_rotate))+1
  6751  1129  01A5               	clrf	0+(?_rotate)+02h
  6752  112A  1403               	bsf	status,0
  6753  112B  0DA5               	rlf	0+(?_rotate)+02h,f
  6754  112C  160A  118A  2043   	fcall	_rotate
              160A  118A         
  6755  1131  2932               	goto	l11759
  6756                           	line	322
  6757                           ;Main.c: 322: while (1)
  6758                           	
  6759  1132                     l2290:	
  6760                           	line	324
  6761                           	
  6762  1132                     l11759:	
  6763                           ;Main.c: 323: {
  6764                           ;Main.c: 324: if (RTC_FLAG_250MS == 1)
  6765  1132  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  6766  1133  2935               	goto	u5141
  6767  1134  2936               	goto	u5140
  6768  1135                     u5141:
  6769  1135  296C               	goto	l11783
  6770  1136                     u5140:
  6771                           	line	326
  6772                           	
  6773  1136                     l11761:	
  6774                           ;Main.c: 325: {
  6775                           ;Main.c: 326: RTC_FLAG_250MS = 0;
  6776  1136  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  6777                           	line	327
  6778                           	
  6779  1137                     l11763:	
  6780                           ;Main.c: 327: UpdateDisplay();
  6781  1137  120A  118A  241B   	fcall	_UpdateDisplay
              160A  118A         
  6782  113C  296C               	goto	l11783
  6783                           	line	328
  6784                           	
  6785  113D                     l2291:	
  6786                           	line	329
  6787                           ;Main.c: 328: }
  6788                           ;Main.c: 329: switch (buttonPressed)
  6789  113D  296C               	goto	l11783
  6790                           	line	331
  6791                           ;Main.c: 330: {
  6792                           ;Main.c: 331: case 1:
  6793                           	
  6794  113E                     l2293:	
  6795                           	line	332
  6796                           ;Main.c: 332: buttonPressed = 0;
  6797  113E  01CC               	clrf	(_buttonPressed)^080h	;volatile
  6798                           	line	333
  6799                           ;Main.c: 333: break;
  6800  113F  2932               	goto	l11759
  6801                           	line	334
  6802                           ;Main.c: 334: case 2:
  6803                           	
  6804  1140                     l2295:	
  6805                           	line	335
  6806                           ;Main.c: 335: buttonPressed = 0;
  6807  1140  01CC               	clrf	(_buttonPressed)^080h	;volatile
  6808                           	line	336
  6809                           ;Main.c: 336: break;
  6810  1141  2932               	goto	l11759
  6811                           	line	337
  6812                           ;Main.c: 337: case 3:
  6813                           	
  6814  1142                     l2296:	
  6815                           	line	338
  6816                           	
  6817  1142                     l11765:	
  6818                           ;Main.c: 338: rotate(1, 1);
  6819  1142  3001               	movlw	low(01h)
  6820  1143  1283               	bcf	status, 5	;RP0=0, select bank0
  6821  1144  1303               	bcf	status, 6	;RP1=0, select bank0
  6822  1145  00A3               	movwf	(?_rotate)
  6823  1146  3000               	movlw	high(01h)
  6824  1147  00A4               	movwf	((?_rotate))+1
  6825  1148  01A5               	clrf	0+(?_rotate)+02h
  6826  1149  1403               	bsf	status,0
  6827  114A  0DA5               	rlf	0+(?_rotate)+02h,f
  6828  114B  160A  118A  2043   	fcall	_rotate
              160A  118A         
  6829                           	line	339
  6830                           	
  6831  1150                     l11767:	
  6832                           ;Main.c: 339: buttonPressed = 0;
  6833  1150  1683               	bsf	status, 5	;RP0=1, select bank1
  6834  1151  1303               	bcf	status, 6	;RP1=0, select bank1
  6835  1152  01CC               	clrf	(_buttonPressed)^080h	;volatile
  6836                           	line	340
  6837                           ;Main.c: 340: break;
  6838  1153  2932               	goto	l11759
  6839                           	line	341
  6840                           ;Main.c: 341: case 4:
  6841                           	
  6842  1154                     l2297:	
  6843                           	line	342
  6844                           	
  6845  1154                     l11769:	
  6846                           ;Main.c: 342: rotate(1, 0);
  6847  1154  3001               	movlw	low(01h)
  6848  1155  1283               	bcf	status, 5	;RP0=0, select bank0
  6849  1156  1303               	bcf	status, 6	;RP1=0, select bank0
  6850  1157  00A3               	movwf	(?_rotate)
  6851  1158  3000               	movlw	high(01h)
  6852  1159  00A4               	movwf	((?_rotate))+1
  6853  115A  01A5               	clrf	0+(?_rotate)+02h
  6854  115B  160A  118A  2043   	fcall	_rotate
              160A  118A         
  6855                           	line	343
  6856                           	
  6857  1160                     l11771:	
  6858                           ;Main.c: 343: buttonPressed = 0;
  6859  1160  1683               	bsf	status, 5	;RP0=1, select bank1
  6860  1161  1303               	bcf	status, 6	;RP1=0, select bank1
  6861  1162  01CC               	clrf	(_buttonPressed)^080h	;volatile
  6862                           	line	344
  6863                           ;Main.c: 344: break;
  6864  1163  2932               	goto	l11759
  6865                           	line	345
  6866                           ;Main.c: 345: case 5:
  6867                           	
  6868  1164                     l2298:	
  6869                           	line	347
  6870                           	
  6871  1164                     l11773:	
  6872                           ;Main.c: 347: totalSteps = 0;
  6873  1164  01BC               	clrf	(_totalSteps)^080h
  6874  1165  01BD               	clrf	(_totalSteps+1)^080h
  6875                           	line	348
  6876                           	
  6877  1166                     l11775:	
  6878                           ;Main.c: 348: buttonPressed = 0;
  6879  1166  01CC               	clrf	(_buttonPressed)^080h	;volatile
  6880                           	line	349
  6881                           	
  6882  1167                     l11777:	
  6883                           ;Main.c: 349: currentMenu = 0;
  6884  1167  01CD               	clrf	(_currentMenu)^080h	;volatile
  6885  1168  2981               	goto	l2299
  6886                           	line	350
  6887                           	
  6888  1169                     l11779:	
  6889                           ;Main.c: 350: return;
  6890  1169  2981               	goto	l2299
  6891                           	line	351
  6892                           ;Main.c: 351: default:
  6893                           	
  6894  116A                     l2300:	
  6895                           	line	352
  6896                           ;Main.c: 352: break;
  6897  116A  2932               	goto	l11759
  6898                           	line	353
  6899                           	
  6900  116B                     l11781:	
  6901                           ;Main.c: 353: }
  6902  116B  2932               	goto	l11759
  6903                           	line	329
  6904                           	
  6905  116C                     l2292:	
  6906                           	
  6907  116C                     l11783:	
  6908  116C  1683               	bsf	status, 5	;RP0=1, select bank1
  6909  116D  1303               	bcf	status, 6	;RP1=0, select bank1
  6910  116E  084C               	movf	(_buttonPressed)^080h,w	;volatile
  6911                           	; Switch size 1, requested type "space"
  6912                           ; Number of cases is 5, Range of values is 1 to 5
  6913                           ; switch strategies available:
  6914                           ; Name         Instructions Cycles
  6915                           ; simple_byte           16     9 (average)
  6916                           ; direct_byte           26    11 (fixed)
  6917                           ; jumptable            263     9 (fixed)
  6918                           ;	Chosen strategy is simple_byte
  6919                           
  6920                           	opt asmopt_off
  6921  116F  3A01               	xorlw	1^0	; case 1
  6922  1170  1903               	skipnz
  6923  1171  293E               	goto	l2293
  6924  1172  3A03               	xorlw	2^1	; case 2
  6925  1173  1903               	skipnz
  6926  1174  2940               	goto	l2295
  6927  1175  3A01               	xorlw	3^2	; case 3
  6928  1176  1903               	skipnz
  6929  1177  2942               	goto	l11765
  6930  1178  3A07               	xorlw	4^3	; case 4
  6931  1179  1903               	skipnz
  6932  117A  2954               	goto	l11769
  6933  117B  3A01               	xorlw	5^4	; case 5
  6934  117C  1903               	skipnz
  6935  117D  2964               	goto	l11773
  6936  117E  2932               	goto	l11759
  6937                           	opt asmopt_on
  6938                           
  6939                           	line	353
  6940                           	
  6941  117F                     l2294:	
  6942  117F  2932               	goto	l11759
  6943                           	line	354
  6944                           	
  6945  1180                     l2301:	
  6946                           	line	322
  6947  1180  2932               	goto	l11759
  6948                           	
  6949  1181                     l2302:	
  6950                           	line	355
  6951                           	
  6952  1181                     l2299:	
  6953  1181  0008               	return
  6954                           	opt stack 0
  6955                           GLOBAL	__end_of_calibrateIR
  6956  1182                     	__end_of_calibrateIR:
  6957 ;; =============== function _calibrateIR ends ============
  6958                           
  6959                           	signat	_calibrateIR,88
  6960                           	global	_UpdateDisplay
  6961                           psect	text1095,local,class=CODE,delta=2
  6962                           global __ptext1095
  6963  041B                     __ptext1095:
  6964                           
  6965 ;; *************** function _UpdateDisplay *****************
  6966 ;; Defined at:
  6967 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  tempDist        2   59[BANK0 ] int 
  6972 ;;  LCDOutput      16   43[BANK0 ] unsigned char [16]
  6973 ;; Return value:  Size  Location     Type
  6974 ;;		None               void
  6975 ;; Registers used:
  6976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6982 ;;      Params:         0       0       0       0       0
  6983 ;;      Locals:         0      18       0       0       0
  6984 ;;      Temps:          0       4       0       0       0
  6985 ;;      Totals:         0      22       0       0       0
  6986 ;;Total ram usage:       22 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    5
  6989 ;; This function calls:
  6990 ;;		_lcd_write_control
  6991 ;;		_sprintf
  6992 ;;		_lcd_set_cursor
  6993 ;;		_lcd_write_string
  6994 ;;		___awmod
  6995 ;;		___awdiv
  6996 ;; This function is called by:
  6997 ;;		_main
  6998 ;;		_calibrateIR
  6999 ;;		_ChargeMode
  7000 ;;		_robotFollow
  7001 ;;		_robot_turnRight
  7002 ;;		_robotMoveSpeed
  7003 ;;		_robotTurnSpeed
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           psect	text1095
  7007                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7008                           	line	236
  7009                           	global	__size_of_UpdateDisplay
  7010  0285                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  7011                           	
  7012  041B                     _UpdateDisplay:	
  7013                           	opt	stack 1
  7014                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7015                           	line	237
  7016                           	
  7017  041B                     l11671:	
  7018                           ;HMI.c: 237: char LCDOutput[16] = "";
  7019  041B  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  7020  041C  0084               	movwf	fsr0
  7021  041D  3090               	movlw	low(UpdateDisplay@F1265)
  7022  041E  1283               	bcf	status, 5	;RP0=0, select bank0
  7023  041F  1303               	bcf	status, 6	;RP1=0, select bank0
  7024  0420  00C7               	movwf	(??_UpdateDisplay+0)+0
  7025  0421  0804               	movf	fsr0,w
  7026  0422  00C8               	movwf	((??_UpdateDisplay+0)+0+1)
  7027  0423  3010               	movlw	16
  7028  0424  00C9               	movwf	((??_UpdateDisplay+0)+0+2)
  7029  0425                     u5120:
  7030  0425  0847               	movf	(??_UpdateDisplay+0)+0,w
  7031  0426  0084               	movwf	fsr0
  7032  0427  1783               	bsf	status, 7	;select IRP bank3
  7033                           	
  7034  0428  0800               	movf	indf,w
  7035  0429  00CA               	movwf	((??_UpdateDisplay+0)+0+3)
  7036  042A  0AC7               	incf	(??_UpdateDisplay+0)+0,f
  7037  042B  0848               	movf	((??_UpdateDisplay+0)+0+1),w
  7038  042C  0084               	movwf	fsr0
  7039  042D  1383               	bcf	status, 7	;select IRP bank0
  7040                           	
  7041  042E  084A               	movf	((??_UpdateDisplay+0)+0+3),w
  7042  042F  0080               	movwf	indf
  7043  0430  0AC8               	incf	((??_UpdateDisplay+0)+0+1),f
  7044  0431  0BC9               	decfsz	((??_UpdateDisplay+0)+0+2),f
  7045  0432  2C25               	goto	u5120
  7046                           	line	238
  7047                           ;HMI.c: 238: switch (currentMenu)
  7048  0433  2E8F               	goto	l11747
  7049                           	line	240
  7050                           ;HMI.c: 239: {
  7051                           ;HMI.c: 240: case 0:
  7052                           	
  7053  0434                     l4581:	
  7054                           	line	241
  7055                           	
  7056  0434                     l11673:	
  7057                           ;HMI.c: 241: lcd_write_control(0b00000001);
  7058  0434  3001               	movlw	(01h)
  7059  0435  160A  158A  2349   	fcall	_lcd_write_control
              120A  118A         
  7060                           	line	242
  7061                           	
  7062  043A                     l11675:	
  7063                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%3dcm D:%3d",Disp1, Disp2);
  7064  043A  303B               	movlw	((STR_13-__stringbase))&0ffh
  7065  043B  1283               	bcf	status, 5	;RP0=0, select bank0
  7066  043C  1303               	bcf	status, 6	;RP1=0, select bank0
  7067  043D  00C7               	movwf	(??_UpdateDisplay+0)+0
  7068  043E  0847               	movf	(??_UpdateDisplay+0)+0,w
  7069  043F  00B4               	movwf	(?_sprintf)
  7070  0440  1683               	bsf	status, 5	;RP0=1, select bank1
  7071  0441  1303               	bcf	status, 6	;RP1=0, select bank1
  7072  0442  0825               	movf	(_Disp1+1)^080h,w
  7073  0443  1283               	bcf	status, 5	;RP0=0, select bank0
  7074  0444  1303               	bcf	status, 6	;RP1=0, select bank0
  7075  0445  01B6               	clrf	1+(?_sprintf)+01h
  7076  0446  07B6               	addwf	1+(?_sprintf)+01h
  7077  0447  1683               	bsf	status, 5	;RP0=1, select bank1
  7078  0448  1303               	bcf	status, 6	;RP1=0, select bank1
  7079  0449  0824               	movf	(_Disp1)^080h,w
  7080  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  7081  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  7082  044C  01B5               	clrf	0+(?_sprintf)+01h
  7083  044D  07B5               	addwf	0+(?_sprintf)+01h
  7084                           
  7085  044E  1683               	bsf	status, 5	;RP0=1, select bank1
  7086  044F  1303               	bcf	status, 6	;RP1=0, select bank1
  7087  0450  0827               	movf	(_Disp2+1)^080h,w
  7088  0451  1283               	bcf	status, 5	;RP0=0, select bank0
  7089  0452  1303               	bcf	status, 6	;RP1=0, select bank0
  7090  0453  01B8               	clrf	1+(?_sprintf)+03h
  7091  0454  07B8               	addwf	1+(?_sprintf)+03h
  7092  0455  1683               	bsf	status, 5	;RP0=1, select bank1
  7093  0456  1303               	bcf	status, 6	;RP1=0, select bank1
  7094  0457  0826               	movf	(_Disp2)^080h,w
  7095  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  7096  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  7097  045A  01B7               	clrf	0+(?_sprintf)+03h
  7098  045B  07B7               	addwf	0+(?_sprintf)+03h
  7099                           
  7100  045C  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  7101  045D  160A  118A  264A   	fcall	_sprintf
              120A  118A         
  7102                           	line	243
  7103                           	
  7104  0462                     l11677:	
  7105                           ;HMI.c: 243: lcd_set_cursor(0x00);
  7106  0462  3000               	movlw	(0)
  7107  0463  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7108                           	line	244
  7109                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  7110  0468  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  7111  0469  1283               	bcf	status, 5	;RP0=0, select bank0
  7112  046A  1303               	bcf	status, 6	;RP1=0, select bank0
  7113  046B  00A7               	movwf	(?_lcd_write_string)
  7114  046C  3000               	movlw	(0x0/2)
  7115  046D  00A8               	movwf	(?_lcd_write_string+1)
  7116  046E  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7117                           	line	245
  7118                           	
  7119  0473                     l11679:	
  7120                           ;HMI.c: 245: lcd_set_cursor(0x40);
  7121  0473  3040               	movlw	(040h)
  7122  0474  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7123                           	line	246
  7124                           	
  7125  0479                     l11681:	
  7126                           ;HMI.c: 246: if (pos > 0)
  7127  0479  1683               	bsf	status, 5	;RP0=1, select bank1
  7128  047A  1303               	bcf	status, 6	;RP1=0, select bank1
  7129  047B  0839               	movf	(_pos+1)^080h,w
  7130  047C  3A80               	xorlw	80h
  7131  047D  00FF               	movwf	btemp+1
  7132  047E  3080               	movlw	(high(01h))^80h
  7133  047F  027F               	subwf	btemp+1,w
  7134  0480  1D03               	skipz
  7135  0481  2C84               	goto	u5135
  7136  0482  3001               	movlw	low(01h)
  7137  0483  0238               	subwf	(_pos)^080h,w
  7138  0484                     u5135:
  7139                           
  7140  0484  1C03               	skipc
  7141  0485  2C87               	goto	u5131
  7142  0486  2C88               	goto	u5130
  7143  0487                     u5131:
  7144  0487  2C9B               	goto	l11685
  7145  0488                     u5130:
  7146                           	line	247
  7147                           	
  7148  0488                     l11683:	
  7149                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  7150  0488  1683               	bsf	status, 5	;RP0=1, select bank1
  7151  0489  1303               	bcf	status, 6	;RP1=0, select bank1
  7152  048A  0838               	movf	(_pos)^080h,w
  7153  048B  3EFF               	addlw	0FFh
  7154  048C  3EDD               	addlw	_shortMenuStrings&0ffh
  7155  048D  0084               	movwf	fsr0
  7156  048E  1383               	bcf	status, 7	;select IRP bank1
  7157  048F  0800               	movf	indf,w
  7158  0490  1283               	bcf	status, 5	;RP0=0, select bank0
  7159  0491  1303               	bcf	status, 6	;RP1=0, select bank0
  7160  0492  00A7               	movwf	(?_lcd_write_string)
  7161  0493  3080               	movlw	80h
  7162  0494  00A8               	movwf	(?_lcd_write_string+1)
  7163  0495  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7164  049A  2CAE               	goto	l11687
  7165                           	line	248
  7166                           	
  7167  049B                     l4582:	
  7168                           	line	249
  7169                           	
  7170  049B                     l11685:	
  7171                           ;HMI.c: 248: else
  7172                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  7173  049B  1683               	bsf	status, 5	;RP0=1, select bank1
  7174  049C  1303               	bcf	status, 6	;RP1=0, select bank1
  7175  049D  0838               	movf	(_pos)^080h,w
  7176  049E  3E05               	addlw	05h
  7177  049F  3EDD               	addlw	_shortMenuStrings&0ffh
  7178  04A0  0084               	movwf	fsr0
  7179  04A1  1383               	bcf	status, 7	;select IRP bank1
  7180  04A2  0800               	movf	indf,w
  7181  04A3  1283               	bcf	status, 5	;RP0=0, select bank0
  7182  04A4  1303               	bcf	status, 6	;RP1=0, select bank0
  7183  04A5  00A7               	movwf	(?_lcd_write_string)
  7184  04A6  3080               	movlw	80h
  7185  04A7  00A8               	movwf	(?_lcd_write_string+1)
  7186  04A8  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7187  04AD  2CAE               	goto	l11687
  7188                           	
  7189  04AE                     l4583:	
  7190                           	line	250
  7191                           	
  7192  04AE                     l11687:	
  7193                           ;HMI.c: 250: lcd_set_cursor(0x44);
  7194  04AE  3044               	movlw	(044h)
  7195  04AF  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7196                           	line	251
  7197                           	
  7198  04B4                     l11689:	
  7199                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  7200  04B4  1683               	bsf	status, 5	;RP0=1, select bank1
  7201  04B5  1303               	bcf	status, 6	;RP1=0, select bank1
  7202  04B6  0838               	movf	(_pos)^080h,w
  7203  04B7  3ED7               	addlw	_menuStrings&0ffh
  7204  04B8  0084               	movwf	fsr0
  7205  04B9  1383               	bcf	status, 7	;select IRP bank1
  7206  04BA  0800               	movf	indf,w
  7207  04BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7208  04BC  1303               	bcf	status, 6	;RP1=0, select bank0
  7209  04BD  00A7               	movwf	(?_lcd_write_string)
  7210  04BE  3080               	movlw	80h
  7211  04BF  00A8               	movwf	(?_lcd_write_string+1)
  7212  04C0  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7213                           	line	252
  7214                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  7215  04C5  304D               	movlw	(04Dh)
  7216  04C6  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7217                           	line	253
  7218                           	
  7219  04CB                     l11691:	
  7220                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  7221  04CB  3006               	movlw	low(06h)
  7222  04CC  1283               	bcf	status, 5	;RP0=0, select bank0
  7223  04CD  1303               	bcf	status, 6	;RP1=0, select bank0
  7224  04CE  00A0               	movwf	(?___awmod)
  7225  04CF  3000               	movlw	high(06h)
  7226  04D0  00A1               	movwf	((?___awmod))+1
  7227  04D1  1683               	bsf	status, 5	;RP0=1, select bank1
  7228  04D2  1303               	bcf	status, 6	;RP1=0, select bank1
  7229  04D3  0838               	movf	(_pos)^080h,w
  7230  04D4  3E01               	addlw	low(01h)
  7231  04D5  1283               	bcf	status, 5	;RP0=0, select bank0
  7232  04D6  1303               	bcf	status, 6	;RP1=0, select bank0
  7233  04D7  00A2               	movwf	0+(?___awmod)+02h
  7234  04D8  1683               	bsf	status, 5	;RP0=1, select bank1
  7235  04D9  1303               	bcf	status, 6	;RP1=0, select bank1
  7236  04DA  0839               	movf	(_pos+1)^080h,w
  7237  04DB  1803               	skipnc
  7238  04DC  3E01               	addlw	1
  7239  04DD  3E00               	addlw	high(01h)
  7240  04DE  1283               	bcf	status, 5	;RP0=0, select bank0
  7241  04DF  1303               	bcf	status, 6	;RP1=0, select bank0
  7242  04E0  00A3               	movwf	1+0+(?___awmod)+02h
  7243  04E1  160A  118A  20AA   	fcall	___awmod
              120A  118A         
  7244  04E6  1283               	bcf	status, 5	;RP0=0, select bank0
  7245  04E7  1303               	bcf	status, 6	;RP1=0, select bank0
  7246  04E8  0820               	movf	(0+(?___awmod)),w
  7247  04E9  3EDD               	addlw	_shortMenuStrings&0ffh
  7248  04EA  0084               	movwf	fsr0
  7249  04EB  1383               	bcf	status, 7	;select IRP bank1
  7250  04EC  0800               	movf	indf,w
  7251  04ED  00A7               	movwf	(?_lcd_write_string)
  7252  04EE  3080               	movlw	80h
  7253  04EF  00A8               	movwf	(?_lcd_write_string+1)
  7254  04F0  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7255                           	line	254
  7256                           ;HMI.c: 254: break;
  7257  04F5  2E9F               	goto	l4597
  7258                           	line	255
  7259                           ;HMI.c: 255: case 1:
  7260                           	
  7261  04F6                     l4585:	
  7262                           	line	256
  7263                           	
  7264  04F6                     l11693:	
  7265                           ;HMI.c: 256: lcd_write_control(0b00000001);
  7266  04F6  3001               	movlw	(01h)
  7267  04F7  160A  158A  2349   	fcall	_lcd_write_control
              120A  118A         
  7268                           	line	257
  7269                           ;HMI.c: 257: lcd_set_cursor(0x00);
  7270  04FC  3000               	movlw	(0)
  7271  04FD  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7272                           	line	258
  7273                           	
  7274  0502                     l11695:	
  7275                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  7276  0502  302B               	movlw	low((STR_14-__stringbase))
  7277  0503  1283               	bcf	status, 5	;RP0=0, select bank0
  7278  0504  1303               	bcf	status, 6	;RP1=0, select bank0
  7279  0505  00A7               	movwf	(?_lcd_write_string)
  7280  0506  3080               	movlw	80h
  7281  0507  00A8               	movwf	(?_lcd_write_string+1)
  7282  0508  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7283                           	line	259
  7284                           	
  7285  050D                     l11697:	
  7286                           ;HMI.c: 259: lcd_set_cursor(0x40);
  7287  050D  3040               	movlw	(040h)
  7288  050E  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7289                           	line	260
  7290                           ;HMI.c: 260: lcd_write_string("<<<");
  7291  0513  30A8               	movlw	low((STR_15-__stringbase))
  7292  0514  1283               	bcf	status, 5	;RP0=0, select bank0
  7293  0515  1303               	bcf	status, 6	;RP1=0, select bank0
  7294  0516  00A7               	movwf	(?_lcd_write_string)
  7295  0517  3080               	movlw	80h
  7296  0518  00A8               	movwf	(?_lcd_write_string+1)
  7297  0519  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7298                           	line	261
  7299                           	
  7300  051E                     l11699:	
  7301                           ;HMI.c: 261: lcd_set_cursor(0x44);
  7302  051E  3044               	movlw	(044h)
  7303  051F  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7304                           	line	262
  7305                           	
  7306  0524                     l11701:	
  7307                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  7308  0524  3097               	movlw	low((STR_16-__stringbase))
  7309  0525  1283               	bcf	status, 5	;RP0=0, select bank0
  7310  0526  1303               	bcf	status, 6	;RP1=0, select bank0
  7311  0527  00A7               	movwf	(?_lcd_write_string)
  7312  0528  3080               	movlw	80h
  7313  0529  00A8               	movwf	(?_lcd_write_string+1)
  7314  052A  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7315                           	line	263
  7316                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  7317  052F  304D               	movlw	(04Dh)
  7318  0530  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7319                           	line	264
  7320                           	
  7321  0535                     l11703:	
  7322                           ;HMI.c: 264: lcd_write_string(">>>");
  7323  0535  30AC               	movlw	low((STR_17-__stringbase))
  7324  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  7325  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  7326  0538  00A7               	movwf	(?_lcd_write_string)
  7327  0539  3080               	movlw	80h
  7328  053A  00A8               	movwf	(?_lcd_write_string+1)
  7329  053B  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7330                           	line	265
  7331                           ;HMI.c: 265: break;
  7332  0540  2E9F               	goto	l4597
  7333                           	line	266
  7334                           ;HMI.c: 266: case 2:
  7335                           	
  7336  0541                     l4586:	
  7337                           	line	267
  7338                           	
  7339  0541                     l11705:	
  7340                           ;HMI.c: 267: lcd_write_control(0b00000001);
  7341  0541  3001               	movlw	(01h)
  7342  0542  160A  158A  2349   	fcall	_lcd_write_control
              120A  118A         
  7343                           	line	268
  7344                           ;HMI.c: 268: lcd_set_cursor(0x00);
  7345  0547  3000               	movlw	(0)
  7346  0548  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7347                           	line	269
  7348                           	
  7349  054D                     l11707:	
  7350                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  7351  054D  300B               	movlw	low((STR_18-__stringbase))
  7352  054E  1283               	bcf	status, 5	;RP0=0, select bank0
  7353  054F  1303               	bcf	status, 6	;RP1=0, select bank0
  7354  0550  00A7               	movwf	(?_lcd_write_string)
  7355  0551  3080               	movlw	80h
  7356  0552  00A8               	movwf	(?_lcd_write_string+1)
  7357  0553  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7358                           	line	270
  7359                           	
  7360  0558                     l11709:	
  7361                           ;HMI.c: 270: lcd_set_cursor(0x40);
  7362  0558  3040               	movlw	(040h)
  7363  0559  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7364                           	line	271
  7365                           ;HMI.c: 271: sprintf(LCDOutput,"%dmA", BattCharge);
  7366  055E  309F               	movlw	((STR_19-__stringbase))&0ffh
  7367  055F  1283               	bcf	status, 5	;RP0=0, select bank0
  7368  0560  1303               	bcf	status, 6	;RP1=0, select bank0
  7369  0561  00C7               	movwf	(??_UpdateDisplay+0)+0
  7370  0562  0847               	movf	(??_UpdateDisplay+0)+0,w
  7371  0563  00B4               	movwf	(?_sprintf)
  7372  0564  1683               	bsf	status, 5	;RP0=1, select bank1
  7373  0565  1303               	bcf	status, 6	;RP1=0, select bank1
  7374  0566  0821               	movf	(_BattCharge+1)^080h,w
  7375  0567  1283               	bcf	status, 5	;RP0=0, select bank0
  7376  0568  1303               	bcf	status, 6	;RP1=0, select bank0
  7377  0569  01B6               	clrf	1+(?_sprintf)+01h
  7378  056A  07B6               	addwf	1+(?_sprintf)+01h
  7379  056B  1683               	bsf	status, 5	;RP0=1, select bank1
  7380  056C  1303               	bcf	status, 6	;RP1=0, select bank1
  7381  056D  0820               	movf	(_BattCharge)^080h,w
  7382  056E  1283               	bcf	status, 5	;RP0=0, select bank0
  7383  056F  1303               	bcf	status, 6	;RP1=0, select bank0
  7384  0570  01B5               	clrf	0+(?_sprintf)+01h
  7385  0571  07B5               	addwf	0+(?_sprintf)+01h
  7386                           
  7387  0572  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  7388  0573  160A  118A  264A   	fcall	_sprintf
              120A  118A         
  7389                           	line	272
  7390                           ;HMI.c: 272: lcd_write_string(LCDOutput);
  7391  0578  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  7392  0579  1283               	bcf	status, 5	;RP0=0, select bank0
  7393  057A  1303               	bcf	status, 6	;RP1=0, select bank0
  7394  057B  00A7               	movwf	(?_lcd_write_string)
  7395  057C  3000               	movlw	(0x0/2)
  7396  057D  00A8               	movwf	(?_lcd_write_string+1)
  7397  057E  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7398                           	line	273
  7399                           	
  7400  0583                     l11711:	
  7401                           ;HMI.c: 273: lcd_set_cursor(0x4D);
  7402  0583  304D               	movlw	(04Dh)
  7403  0584  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7404                           	line	274
  7405                           ;HMI.c: 274: switch(BattState)
  7406  0589  2DD3               	goto	l11727
  7407                           	line	276
  7408                           ;HMI.c: 275: {
  7409                           ;HMI.c: 276: case 0:
  7410                           	
  7411  058A                     l4588:	
  7412                           	line	277
  7413                           	
  7414  058A                     l11713:	
  7415                           ;HMI.c: 277: lcd_write_string("NC");
  7416  058A  30C7               	movlw	low((STR_20-__stringbase))
  7417  058B  1283               	bcf	status, 5	;RP0=0, select bank0
  7418  058C  1303               	bcf	status, 6	;RP1=0, select bank0
  7419  058D  00A7               	movwf	(?_lcd_write_string)
  7420  058E  3080               	movlw	80h
  7421  058F  00A8               	movwf	(?_lcd_write_string+1)
  7422  0590  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7423                           	line	278
  7424                           ;HMI.c: 278: break;
  7425  0595  2DEE               	goto	l11729
  7426                           	line	279
  7427                           ;HMI.c: 279: case 1:
  7428                           	
  7429  0596                     l4590:	
  7430                           	line	280
  7431                           	
  7432  0596                     l11715:	
  7433                           ;HMI.c: 280: lcd_write_string("RC");
  7434  0596  30CA               	movlw	low((STR_21-__stringbase))
  7435  0597  1283               	bcf	status, 5	;RP0=0, select bank0
  7436  0598  1303               	bcf	status, 6	;RP1=0, select bank0
  7437  0599  00A7               	movwf	(?_lcd_write_string)
  7438  059A  3080               	movlw	80h
  7439  059B  00A8               	movwf	(?_lcd_write_string+1)
  7440  059C  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7441                           	line	281
  7442                           ;HMI.c: 281: break;
  7443  05A1  2DEE               	goto	l11729
  7444                           	line	282
  7445                           ;HMI.c: 282: case 2:
  7446                           	
  7447  05A2                     l4591:	
  7448                           	line	283
  7449                           	
  7450  05A2                     l11717:	
  7451                           ;HMI.c: 283: lcd_write_string("FC");
  7452  05A2  30C4               	movlw	low((STR_22-__stringbase))
  7453  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  7454  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  7455  05A5  00A7               	movwf	(?_lcd_write_string)
  7456  05A6  3080               	movlw	80h
  7457  05A7  00A8               	movwf	(?_lcd_write_string+1)
  7458  05A8  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7459                           	line	284
  7460                           ;HMI.c: 284: break;
  7461  05AD  2DEE               	goto	l11729
  7462                           	line	285
  7463                           ;HMI.c: 285: case 3:
  7464                           	
  7465  05AE                     l4592:	
  7466                           	line	286
  7467                           	
  7468  05AE                     l11719:	
  7469                           ;HMI.c: 286: lcd_write_string("TC");
  7470  05AE  30CD               	movlw	low((STR_23-__stringbase))
  7471  05AF  1283               	bcf	status, 5	;RP0=0, select bank0
  7472  05B0  1303               	bcf	status, 6	;RP1=0, select bank0
  7473  05B1  00A7               	movwf	(?_lcd_write_string)
  7474  05B2  3080               	movlw	80h
  7475  05B3  00A8               	movwf	(?_lcd_write_string+1)
  7476  05B4  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7477                           	line	287
  7478                           ;HMI.c: 287: break;
  7479  05B9  2DEE               	goto	l11729
  7480                           	line	288
  7481                           ;HMI.c: 288: case 4:
  7482                           	
  7483  05BA                     l4593:	
  7484                           	line	289
  7485                           	
  7486  05BA                     l11721:	
  7487                           ;HMI.c: 289: lcd_write_string("Wa");
  7488  05BA  30D0               	movlw	low((STR_24-__stringbase))
  7489  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7490  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  7491  05BD  00A7               	movwf	(?_lcd_write_string)
  7492  05BE  3080               	movlw	80h
  7493  05BF  00A8               	movwf	(?_lcd_write_string+1)
  7494  05C0  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7495                           	line	290
  7496                           ;HMI.c: 290: break;
  7497  05C5  2DEE               	goto	l11729
  7498                           	line	291
  7499                           ;HMI.c: 291: case 5:
  7500                           	
  7501  05C6                     l4594:	
  7502                           	line	292
  7503                           	
  7504  05C6                     l11723:	
  7505                           ;HMI.c: 292: lcd_write_string("FC");
  7506  05C6  30C4               	movlw	low((STR_25-__stringbase))
  7507  05C7  1283               	bcf	status, 5	;RP0=0, select bank0
  7508  05C8  1303               	bcf	status, 6	;RP1=0, select bank0
  7509  05C9  00A7               	movwf	(?_lcd_write_string)
  7510  05CA  3080               	movlw	80h
  7511  05CB  00A8               	movwf	(?_lcd_write_string+1)
  7512  05CC  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7513                           	line	293
  7514                           ;HMI.c: 293: break;
  7515  05D1  2DEE               	goto	l11729
  7516                           	line	294
  7517                           	
  7518  05D2                     l11725:	
  7519                           ;HMI.c: 294: }
  7520  05D2  2DEE               	goto	l11729
  7521                           	line	274
  7522                           	
  7523  05D3                     l4587:	
  7524                           	
  7525  05D3                     l11727:	
  7526                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7527                           ; Switch size 1, requested type "space"
  7528                           ; Number of cases is 1, Range of values is 0 to 0
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte            4     3 (average)
  7532                           ; direct_byte           11     8 (fixed)
  7533                           ; jumptable            260     6 (fixed)
  7534                           ; rangetable             5     6 (fixed)
  7535                           ; spacedrange            8     9 (fixed)
  7536                           ; locatedrange           1     3 (fixed)
  7537                           ;	Chosen strategy is simple_byte
  7538                           
  7539  05D3  1683               	bsf	status, 5	;RP0=1, select bank1
  7540  05D4  1303               	bcf	status, 6	;RP1=0, select bank1
  7541  05D5  0823               	movf (_BattState+1)^080h,w
  7542                           	opt asmopt_off
  7543  05D6  3A00               	xorlw	0^0	; case 0
  7544  05D7  1903               	skipnz
  7545  05D8  2DDA               	goto	l12287
  7546  05D9  2DEE               	goto	l11729
  7547                           	opt asmopt_on
  7548                           	
  7549  05DA                     l12287:	
  7550                           ; Switch size 1, requested type "space"
  7551                           ; Number of cases is 6, Range of values is 0 to 5
  7552                           ; switch strategies available:
  7553                           ; Name         Instructions Cycles
  7554                           ; simple_byte           19    10 (average)
  7555                           ; direct_byte           26     8 (fixed)
  7556                           ; jumptable            260     6 (fixed)
  7557                           ; rangetable            10     6 (fixed)
  7558                           ; spacedrange           18     9 (fixed)
  7559                           ; locatedrange           6     3 (fixed)
  7560                           ;	Chosen strategy is simple_byte
  7561                           
  7562  05DA  0822               	movf (_BattState)^080h,w
  7563                           	opt asmopt_off
  7564  05DB  3A00               	xorlw	0^0	; case 0
  7565  05DC  1903               	skipnz
  7566  05DD  2D8A               	goto	l11713
  7567  05DE  3A01               	xorlw	1^0	; case 1
  7568  05DF  1903               	skipnz
  7569  05E0  2D96               	goto	l11715
  7570  05E1  3A03               	xorlw	2^1	; case 2
  7571  05E2  1903               	skipnz
  7572  05E3  2DA2               	goto	l11717
  7573  05E4  3A01               	xorlw	3^2	; case 3
  7574  05E5  1903               	skipnz
  7575  05E6  2DAE               	goto	l11719
  7576  05E7  3A07               	xorlw	4^3	; case 4
  7577  05E8  1903               	skipnz
  7578  05E9  2DBA               	goto	l11721
  7579  05EA  3A01               	xorlw	5^4	; case 5
  7580  05EB  1903               	skipnz
  7581  05EC  2DC6               	goto	l11723
  7582  05ED  2DEE               	goto	l11729
  7583                           	opt asmopt_on
  7584                           
  7585                           	line	294
  7586                           	
  7587  05EE                     l4589:	
  7588                           	line	296
  7589                           	
  7590  05EE                     l11729:	
  7591                           ;HMI.c: 296: lcd_set_cursor(0x44);
  7592  05EE  3044               	movlw	(044h)
  7593  05EF  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7594                           	line	297
  7595                           	
  7596  05F4                     l11731:	
  7597                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  7598  05F4  3059               	movlw	low((STR_26-__stringbase))
  7599  05F5  1283               	bcf	status, 5	;RP0=0, select bank0
  7600  05F6  1303               	bcf	status, 6	;RP1=0, select bank0
  7601  05F7  00A7               	movwf	(?_lcd_write_string)
  7602  05F8  3080               	movlw	80h
  7603  05F9  00A8               	movwf	(?_lcd_write_string+1)
  7604  05FA  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7605                           	line	298
  7606                           ;HMI.c: 298: break;
  7607  05FF  2E9F               	goto	l4597
  7608                           	line	299
  7609                           ;HMI.c: 299: case 3:
  7610                           	
  7611  0600                     l4595:	
  7612                           	line	300
  7613                           	
  7614  0600                     l11733:	
  7615                           ;HMI.c: 300: lcd_write_control(0b00000001);
  7616  0600  3001               	movlw	(01h)
  7617  0601  160A  158A  2349   	fcall	_lcd_write_control
              120A  118A         
  7618                           	line	301
  7619                           	
  7620  0606                     l11735:	
  7621                           ;HMI.c: 301: sprintf(LCDOutput,"IR:%3dcm CP:%3d",adcVal, RobotPos);
  7622  0606  301B               	movlw	((STR_27-__stringbase))&0ffh
  7623  0607  1283               	bcf	status, 5	;RP0=0, select bank0
  7624  0608  1303               	bcf	status, 6	;RP1=0, select bank0
  7625  0609  00C7               	movwf	(??_UpdateDisplay+0)+0
  7626  060A  0847               	movf	(??_UpdateDisplay+0)+0,w
  7627  060B  00B4               	movwf	(?_sprintf)
  7628  060C  1683               	bsf	status, 5	;RP0=1, select bank1
  7629  060D  1303               	bcf	status, 6	;RP1=0, select bank1
  7630  060E  082F               	movf	(_adcVal+1)^080h,w	;volatile
  7631  060F  1283               	bcf	status, 5	;RP0=0, select bank0
  7632  0610  1303               	bcf	status, 6	;RP1=0, select bank0
  7633  0611  01B6               	clrf	1+(?_sprintf)+01h
  7634  0612  07B6               	addwf	1+(?_sprintf)+01h
  7635  0613  1683               	bsf	status, 5	;RP0=1, select bank1
  7636  0614  1303               	bcf	status, 6	;RP1=0, select bank1
  7637  0615  082E               	movf	(_adcVal)^080h,w	;volatile
  7638  0616  1283               	bcf	status, 5	;RP0=0, select bank0
  7639  0617  1303               	bcf	status, 6	;RP1=0, select bank0
  7640  0618  01B5               	clrf	0+(?_sprintf)+01h
  7641  0619  07B5               	addwf	0+(?_sprintf)+01h
  7642                           
  7643  061A  1683               	bsf	status, 5	;RP0=1, select bank1
  7644  061B  1303               	bcf	status, 6	;RP1=0, select bank1
  7645  061C  0848               	movf	(_RobotPos)^080h,w
  7646  061D  1283               	bcf	status, 5	;RP0=0, select bank0
  7647  061E  1303               	bcf	status, 6	;RP1=0, select bank0
  7648  061F  00C8               	movwf	(??_UpdateDisplay+1)+0
  7649  0620  01C9               	clrf	(??_UpdateDisplay+1)+0+1
  7650  0621  0848               	movf	0+(??_UpdateDisplay+1)+0,w
  7651  0622  00B7               	movwf	0+(?_sprintf)+03h
  7652  0623  0849               	movf	1+(??_UpdateDisplay+1)+0,w
  7653  0624  00B8               	movwf	1+(?_sprintf)+03h
  7654  0625  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  7655  0626  160A  118A  264A   	fcall	_sprintf
              120A  118A         
  7656                           	line	302
  7657                           	
  7658  062B                     l11737:	
  7659                           ;HMI.c: 302: lcd_set_cursor(0x00);
  7660  062B  3000               	movlw	(0)
  7661  062C  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7662                           	line	303
  7663                           ;HMI.c: 303: lcd_write_string(LCDOutput);
  7664  0631  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  7665  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  7666  0633  1303               	bcf	status, 6	;RP1=0, select bank0
  7667  0634  00A7               	movwf	(?_lcd_write_string)
  7668  0635  3000               	movlw	(0x0/2)
  7669  0636  00A8               	movwf	(?_lcd_write_string+1)
  7670  0637  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7671                           	line	304
  7672                           	
  7673  063C                     l11739:	
  7674                           ;HMI.c: 304: int tempDist = (TotalDistTravelled/ 10);
  7675  063C  300A               	movlw	low(0Ah)
  7676  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  7677  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  7678  063F  00A0               	movwf	(?___awdiv)
  7679  0640  3000               	movlw	high(0Ah)
  7680  0641  00A1               	movwf	((?___awdiv))+1
  7681  0642  1683               	bsf	status, 5	;RP0=1, select bank1
  7682  0643  1303               	bcf	status, 6	;RP1=0, select bank1
  7683  0644  082D               	movf	(_TotalDistTravelled+1)^080h,w
  7684  0645  1283               	bcf	status, 5	;RP0=0, select bank0
  7685  0646  1303               	bcf	status, 6	;RP1=0, select bank0
  7686  0647  01A3               	clrf	1+(?___awdiv)+02h
  7687  0648  07A3               	addwf	1+(?___awdiv)+02h
  7688  0649  1683               	bsf	status, 5	;RP0=1, select bank1
  7689  064A  1303               	bcf	status, 6	;RP1=0, select bank1
  7690  064B  082C               	movf	(_TotalDistTravelled)^080h,w
  7691  064C  1283               	bcf	status, 5	;RP0=0, select bank0
  7692  064D  1303               	bcf	status, 6	;RP1=0, select bank0
  7693  064E  01A2               	clrf	0+(?___awdiv)+02h
  7694  064F  07A2               	addwf	0+(?___awdiv)+02h
  7695                           
  7696  0650  160A  118A  21F6   	fcall	___awdiv
              120A  118A         
  7697  0655  1283               	bcf	status, 5	;RP0=0, select bank0
  7698  0656  1303               	bcf	status, 6	;RP1=0, select bank0
  7699  0657  0821               	movf	(1+(?___awdiv)),w
  7700  0658  01DC               	clrf	(UpdateDisplay@tempDist+1)
  7701  0659  07DC               	addwf	(UpdateDisplay@tempDist+1)
  7702  065A  0820               	movf	(0+(?___awdiv)),w
  7703  065B  01DB               	clrf	(UpdateDisplay@tempDist)
  7704  065C  07DB               	addwf	(UpdateDisplay@tempDist)
  7705                           
  7706                           	line	306
  7707                           	
  7708  065D                     l11741:	
  7709                           ;HMI.c: 306: sprintf(LCDOutput,"D:%4dcm AT:%3d",tempDist, angleTurned);
  7710  065D  304A               	movlw	((STR_28-__stringbase))&0ffh
  7711  065E  00C7               	movwf	(??_UpdateDisplay+0)+0
  7712  065F  0847               	movf	(??_UpdateDisplay+0)+0,w
  7713  0660  00B4               	movwf	(?_sprintf)
  7714  0661  085C               	movf	(UpdateDisplay@tempDist+1),w
  7715  0662  01B6               	clrf	1+(?_sprintf)+01h
  7716  0663  07B6               	addwf	1+(?_sprintf)+01h
  7717  0664  085B               	movf	(UpdateDisplay@tempDist),w
  7718  0665  01B5               	clrf	0+(?_sprintf)+01h
  7719  0666  07B5               	addwf	0+(?_sprintf)+01h
  7720                           
  7721  0667  1683               	bsf	status, 5	;RP0=1, select bank1
  7722  0668  1303               	bcf	status, 6	;RP1=0, select bank1
  7723  0669  0831               	movf	(_angleTurned+1)^080h,w
  7724  066A  1283               	bcf	status, 5	;RP0=0, select bank0
  7725  066B  1303               	bcf	status, 6	;RP1=0, select bank0
  7726  066C  01B8               	clrf	1+(?_sprintf)+03h
  7727  066D  07B8               	addwf	1+(?_sprintf)+03h
  7728  066E  1683               	bsf	status, 5	;RP0=1, select bank1
  7729  066F  1303               	bcf	status, 6	;RP1=0, select bank1
  7730  0670  0830               	movf	(_angleTurned)^080h,w
  7731  0671  1283               	bcf	status, 5	;RP0=0, select bank0
  7732  0672  1303               	bcf	status, 6	;RP1=0, select bank0
  7733  0673  01B7               	clrf	0+(?_sprintf)+03h
  7734  0674  07B7               	addwf	0+(?_sprintf)+03h
  7735                           
  7736  0675  304B               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  7737  0676  160A  118A  264A   	fcall	_sprintf
              120A  118A         
  7738                           	line	307
  7739                           ;HMI.c: 307: lcd_set_cursor(0x40);
  7740  067B  3040               	movlw	(040h)
  7741  067C  160A  158A  22F7   	fcall	_lcd_set_cursor
              120A  118A         
  7742                           	line	308
  7743                           	
  7744  0681                     l11743:	
  7745                           ;HMI.c: 308: lcd_write_string(LCDOutput);
  7746  0681  304B               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  7747  0682  1283               	bcf	status, 5	;RP0=0, select bank0
  7748  0683  1303               	bcf	status, 6	;RP1=0, select bank0
  7749  0684  00A7               	movwf	(?_lcd_write_string)
  7750  0685  3000               	movlw	(0x0/2)
  7751  0686  00A8               	movwf	(?_lcd_write_string+1)
  7752  0687  160A  158A  24F0   	fcall	_lcd_write_string
              120A  118A         
  7753                           	line	309
  7754                           ;HMI.c: 309: break;
  7755  068C  2E9F               	goto	l4597
  7756                           	line	310
  7757                           ;HMI.c: 310: default:
  7758                           	
  7759  068D                     l4596:	
  7760                           	line	311
  7761                           ;HMI.c: 311: break;
  7762  068D  2E9F               	goto	l4597
  7763                           	line	312
  7764                           	
  7765  068E                     l11745:	
  7766                           ;HMI.c: 312: }
  7767  068E  2E9F               	goto	l4597
  7768                           	line	238
  7769                           	
  7770  068F                     l4580:	
  7771                           	
  7772  068F                     l11747:	
  7773  068F  1683               	bsf	status, 5	;RP0=1, select bank1
  7774  0690  1303               	bcf	status, 6	;RP1=0, select bank1
  7775  0691  084D               	movf	(_currentMenu)^080h,w	;volatile
  7776                           	; Switch size 1, requested type "space"
  7777                           ; Number of cases is 4, Range of values is 0 to 3
  7778                           ; switch strategies available:
  7779                           ; Name         Instructions Cycles
  7780                           ; simple_byte           13     7 (average)
  7781                           ; direct_byte           20     8 (fixed)
  7782                           ; jumptable            260     6 (fixed)
  7783                           ; rangetable             8     6 (fixed)
  7784                           ; spacedrange           14     9 (fixed)
  7785                           ; locatedrange           4     3 (fixed)
  7786                           ;	Chosen strategy is simple_byte
  7787                           
  7788                           	opt asmopt_off
  7789  0692  3A00               	xorlw	0^0	; case 0
  7790  0693  1903               	skipnz
  7791  0694  2C34               	goto	l11673
  7792  0695  3A01               	xorlw	1^0	; case 1
  7793  0696  1903               	skipnz
  7794  0697  2CF6               	goto	l11693
  7795  0698  3A03               	xorlw	2^1	; case 2
  7796  0699  1903               	skipnz
  7797  069A  2D41               	goto	l11705
  7798  069B  3A01               	xorlw	3^2	; case 3
  7799  069C  1903               	skipnz
  7800  069D  2E00               	goto	l11733
  7801  069E  2E9F               	goto	l4597
  7802                           	opt asmopt_on
  7803                           
  7804                           	line	312
  7805                           	
  7806  069F                     l4584:	
  7807                           	line	313
  7808                           	
  7809  069F                     l4597:	
  7810  069F  0008               	return
  7811                           	opt stack 0
  7812                           GLOBAL	__end_of_UpdateDisplay
  7813  06A0                     	__end_of_UpdateDisplay:
  7814 ;; =============== function _UpdateDisplay ends ============
  7815                           
  7816                           	signat	_UpdateDisplay,88
  7817                           	global	_readAvgDistance
  7818                           psect	text1096,local,class=CODE,delta=2
  7819                           global __ptext1096
  7820  126C                     __ptext1096:
  7821                           
  7822 ;; *************** function _readAvgDistance *****************
  7823 ;; Defined at:
  7824 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  i               2   22[BANK0 ] int 
  7829 ;;  tempIR          2   20[BANK0 ] unsigned int 
  7830 ;;  j               2   18[BANK0 ] int 
  7831 ;;  fullval         2   16[BANK0 ] unsigned int 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;		None               void
  7834 ;; Registers used:
  7835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         0       0       0       0       0
  7842 ;;      Locals:         0       8       0       0       0
  7843 ;;      Temps:          0       0       0       0       0
  7844 ;;      Totals:         0       8       0       0       0
  7845 ;;Total ram usage:        8 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:    6
  7848 ;; This function calls:
  7849 ;;		_readDistance
  7850 ;;		___lwdiv
  7851 ;;		_ADCconvert
  7852 ;; This function is called by:
  7853 ;;		_main
  7854 ;;		_robotFollow
  7855 ;;		_robot_turnRight
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           psect	text1096
  7859                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  7860                           	line	28
  7861                           	global	__size_of_readAvgDistance
  7862  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  7863                           	
  7864  126C                     _readAvgDistance:	
  7865                           	opt	stack 0
  7866                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7867                           	line	29
  7868                           	
  7869  126C                     l11653:	
  7870                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  7871  126C  1283               	bcf	status, 5	;RP0=0, select bank0
  7872  126D  1303               	bcf	status, 6	;RP1=0, select bank0
  7873  126E  01B0               	clrf	(readAvgDistance@fullval)
  7874  126F  01B1               	clrf	(readAvgDistance@fullval+1)
  7875  1270  01B4               	clrf	(readAvgDistance@tempIR)
  7876  1271  01B5               	clrf	(readAvgDistance@tempIR+1)
  7877                           	line	30
  7878                           ;infrared.c: 30: int j = 0;
  7879  1272  01B2               	clrf	(readAvgDistance@j)
  7880  1273  01B3               	clrf	(readAvgDistance@j+1)
  7881                           	line	32
  7882                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  7883  1274  01B6               	clrf	(readAvgDistance@i)
  7884  1275  01B7               	clrf	(readAvgDistance@i+1)
  7885                           	
  7886  1276                     l11655:	
  7887  1276  0837               	movf	(readAvgDistance@i+1),w
  7888  1277  3A80               	xorlw	80h
  7889  1278  00FF               	movwf	btemp+1
  7890  1279  3080               	movlw	(high(08h))^80h
  7891  127A  027F               	subwf	btemp+1,w
  7892  127B  1D03               	skipz
  7893  127C  2A7F               	goto	u5095
  7894  127D  3008               	movlw	low(08h)
  7895  127E  0236               	subwf	(readAvgDistance@i),w
  7896  127F                     u5095:
  7897                           
  7898  127F  1C03               	skipc
  7899  1280  2A82               	goto	u5091
  7900  1281  2A83               	goto	u5090
  7901  1282                     u5091:
  7902  1282  2A85               	goto	l11659
  7903  1283                     u5090:
  7904  1283  2ABB               	goto	l11667
  7905                           	
  7906  1284                     l11657:	
  7907  1284  2ABB               	goto	l11667
  7908                           	line	33
  7909                           	
  7910  1285                     l3024:	
  7911                           	line	34
  7912                           	
  7913  1285                     l11659:	
  7914                           ;infrared.c: 33: {
  7915                           ;infrared.c: 34: tempIR = readDistance();
  7916  1285  160A  158A  2373   	fcall	_readDistance
              160A  118A         
  7917  128A  1283               	bcf	status, 5	;RP0=0, select bank0
  7918  128B  1303               	bcf	status, 6	;RP1=0, select bank0
  7919  128C  0829               	movf	(1+(?_readDistance)),w
  7920  128D  01B5               	clrf	(readAvgDistance@tempIR+1)
  7921  128E  07B5               	addwf	(readAvgDistance@tempIR+1)
  7922  128F  0828               	movf	(0+(?_readDistance)),w
  7923  1290  01B4               	clrf	(readAvgDistance@tempIR)
  7924  1291  07B4               	addwf	(readAvgDistance@tempIR)
  7925                           
  7926                           	line	35
  7927                           	
  7928  1292                     l11661:	
  7929                           ;infrared.c: 35: if (tempIR <= 1000)
  7930  1292  3003               	movlw	high(03E9h)
  7931  1293  0235               	subwf	(readAvgDistance@tempIR+1),w
  7932  1294  30E9               	movlw	low(03E9h)
  7933  1295  1903               	skipnz
  7934  1296  0234               	subwf	(readAvgDistance@tempIR),w
  7935  1297  1803               	skipnc
  7936  1298  2A9A               	goto	u5101
  7937  1299  2A9B               	goto	u5100
  7938  129A                     u5101:
  7939  129A  2AA7               	goto	l3026
  7940  129B                     u5100:
  7941                           	line	37
  7942                           	
  7943  129B                     l11663:	
  7944                           ;infrared.c: 36: {
  7945                           ;infrared.c: 37: fullval += tempIR;
  7946  129B  0834               	movf	(readAvgDistance@tempIR),w
  7947  129C  07B0               	addwf	(readAvgDistance@fullval),f
  7948  129D  1803               	skipnc
  7949  129E  0AB1               	incf	(readAvgDistance@fullval+1),f
  7950  129F  0835               	movf	(readAvgDistance@tempIR+1),w
  7951  12A0  07B1               	addwf	(readAvgDistance@fullval+1),f
  7952                           	line	38
  7953                           ;infrared.c: 38: j++;
  7954  12A1  3001               	movlw	low(01h)
  7955  12A2  07B2               	addwf	(readAvgDistance@j),f
  7956  12A3  1803               	skipnc
  7957  12A4  0AB3               	incf	(readAvgDistance@j+1),f
  7958  12A5  3000               	movlw	high(01h)
  7959  12A6  07B3               	addwf	(readAvgDistance@j+1),f
  7960                           	line	39
  7961                           	
  7962  12A7                     l3026:	
  7963                           	line	32
  7964  12A7  3001               	movlw	low(01h)
  7965  12A8  07B6               	addwf	(readAvgDistance@i),f
  7966  12A9  1803               	skipnc
  7967  12AA  0AB7               	incf	(readAvgDistance@i+1),f
  7968  12AB  3000               	movlw	high(01h)
  7969  12AC  07B7               	addwf	(readAvgDistance@i+1),f
  7970                           	
  7971  12AD                     l11665:	
  7972  12AD  0837               	movf	(readAvgDistance@i+1),w
  7973  12AE  3A80               	xorlw	80h
  7974  12AF  00FF               	movwf	btemp+1
  7975  12B0  3080               	movlw	(high(08h))^80h
  7976  12B1  027F               	subwf	btemp+1,w
  7977  12B2  1D03               	skipz
  7978  12B3  2AB6               	goto	u5115
  7979  12B4  3008               	movlw	low(08h)
  7980  12B5  0236               	subwf	(readAvgDistance@i),w
  7981  12B6                     u5115:
  7982                           
  7983  12B6  1C03               	skipc
  7984  12B7  2AB9               	goto	u5111
  7985  12B8  2ABA               	goto	u5110
  7986  12B9                     u5111:
  7987  12B9  2A85               	goto	l11659
  7988  12BA                     u5110:
  7989  12BA  2ABB               	goto	l11667
  7990                           	
  7991  12BB                     l3025:	
  7992                           	line	41
  7993                           	
  7994  12BB                     l11667:	
  7995                           ;infrared.c: 39: }
  7996                           ;infrared.c: 40: }
  7997                           ;infrared.c: 41: adcVal = fullval / j;
  7998  12BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7999  12BC  1303               	bcf	status, 6	;RP1=0, select bank0
  8000  12BD  0833               	movf	(readAvgDistance@j+1),w
  8001  12BE  01A7               	clrf	(?___lwdiv+1)
  8002  12BF  07A7               	addwf	(?___lwdiv+1)
  8003  12C0  0832               	movf	(readAvgDistance@j),w
  8004  12C1  01A6               	clrf	(?___lwdiv)
  8005  12C2  07A6               	addwf	(?___lwdiv)
  8006                           
  8007  12C3  0831               	movf	(readAvgDistance@fullval+1),w
  8008  12C4  01A9               	clrf	1+(?___lwdiv)+02h
  8009  12C5  07A9               	addwf	1+(?___lwdiv)+02h
  8010  12C6  0830               	movf	(readAvgDistance@fullval),w
  8011  12C7  01A8               	clrf	0+(?___lwdiv)+02h
  8012  12C8  07A8               	addwf	0+(?___lwdiv)+02h
  8013                           
  8014  12C9  160A  158A  26FB   	fcall	___lwdiv
              160A  118A         
  8015  12CE  1283               	bcf	status, 5	;RP0=0, select bank0
  8016  12CF  1303               	bcf	status, 6	;RP1=0, select bank0
  8017  12D0  0827               	movf	(1+(?___lwdiv)),w
  8018  12D1  1683               	bsf	status, 5	;RP0=1, select bank1
  8019  12D2  1303               	bcf	status, 6	;RP1=0, select bank1
  8020  12D3  01AF               	clrf	(_adcVal+1)^080h	;volatile
  8021  12D4  07AF               	addwf	(_adcVal+1)^080h	;volatile
  8022  12D5  1283               	bcf	status, 5	;RP0=0, select bank0
  8023  12D6  1303               	bcf	status, 6	;RP1=0, select bank0
  8024  12D7  0826               	movf	(0+(?___lwdiv)),w
  8025  12D8  1683               	bsf	status, 5	;RP0=1, select bank1
  8026  12D9  1303               	bcf	status, 6	;RP1=0, select bank1
  8027  12DA  01AE               	clrf	(_adcVal)^080h	;volatile
  8028  12DB  07AE               	addwf	(_adcVal)^080h	;volatile
  8029                           
  8030                           	line	42
  8031                           ;infrared.c: 42: ADCconvert();
  8032  12DC  120A  158A  232A   	fcall	_ADCconvert
              160A  118A         
  8033                           	line	43
  8034                           	
  8035  12E1                     l11669:	
  8036                           ;infrared.c: 43: Disp1 = adcVal;
  8037  12E1  1683               	bsf	status, 5	;RP0=1, select bank1
  8038  12E2  1303               	bcf	status, 6	;RP1=0, select bank1
  8039  12E3  082F               	movf	(_adcVal+1)^080h,w	;volatile
  8040  12E4  01A5               	clrf	(_Disp1+1)^080h	;volatile
  8041  12E5  07A5               	addwf	(_Disp1+1)^080h	;volatile
  8042  12E6  082E               	movf	(_adcVal)^080h,w	;volatile
  8043  12E7  01A4               	clrf	(_Disp1)^080h	;volatile
  8044  12E8  07A4               	addwf	(_Disp1)^080h	;volatile
  8045                           
  8046                           	line	44
  8047                           	
  8048  12E9                     l3027:	
  8049  12E9  0008               	return
  8050                           	opt stack 0
  8051                           GLOBAL	__end_of_readAvgDistance
  8052  12EA                     	__end_of_readAvgDistance:
  8053 ;; =============== function _readAvgDistance ends ============
  8054                           
  8055                           	signat	_readAvgDistance,88
  8056                           	global	_init
  8057                           psect	text1097,local,class=CODE,delta=2
  8058                           global __ptext1097
  8059  1D49                     __ptext1097:
  8060                           
  8061 ;; *************** function _init *****************
  8062 ;; Defined at:
  8063 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;		None               void
  8070 ;; Registers used:
  8071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8077 ;;      Params:         0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0
  8079 ;;      Temps:          0       1       0       0       0
  8080 ;;      Totals:         0       1       0       0       0
  8081 ;;Total ram usage:        1 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    5
  8084 ;; This function calls:
  8085 ;;		_ser_init
  8086 ;;		_init_adc
  8087 ;;		_lcd_init
  8088 ;;		_robo_init
  8089 ;; This function is called by:
  8090 ;;		_main
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           psect	text1097
  8094                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  8095                           	line	137
  8096                           	global	__size_of_init
  8097  002F                     	__size_of_init	equ	__end_of_init-_init
  8098                           	
  8099  1D49                     _init:	
  8100                           	opt	stack 2
  8101                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8102                           	line	138
  8103                           	
  8104  1D49                     l11627:	
  8105                           ;Main.c: 138: buttonPressed = 0;
  8106  1D49  1683               	bsf	status, 5	;RP0=1, select bank1
  8107  1D4A  1303               	bcf	status, 6	;RP1=0, select bank1
  8108  1D4B  01CC               	clrf	(_buttonPressed)^080h	;volatile
  8109                           	line	140
  8110                           	
  8111  1D4C                     l11629:	
  8112                           ;Main.c: 140: TRISB = 0b11111100;
  8113  1D4C  30FC               	movlw	(0FCh)
  8114  1D4D  0086               	movwf	(134)^080h	;volatile
  8115                           	line	141
  8116                           	
  8117  1D4E                     l11631:	
  8118                           ;Main.c: 141: TRISC &= 0b10010000;
  8119  1D4E  3090               	movlw	(090h)
  8120  1D4F  1283               	bcf	status, 5	;RP0=0, select bank0
  8121  1D50  1303               	bcf	status, 6	;RP1=0, select bank0
  8122  1D51  00A3               	movwf	(??_init+0)+0
  8123  1D52  0823               	movf	(??_init+0)+0,w
  8124  1D53  1683               	bsf	status, 5	;RP0=1, select bank1
  8125  1D54  1303               	bcf	status, 6	;RP1=0, select bank1
  8126  1D55  0587               	andwf	(135)^080h,f	;volatile
  8127                           	line	144
  8128                           	
  8129  1D56                     l11633:	
  8130                           ;Main.c: 144: SSPSTAT = 0b01000000;
  8131  1D56  3040               	movlw	(040h)
  8132  1D57  0094               	movwf	(148)^080h	;volatile
  8133                           	line	145
  8134                           	
  8135  1D58                     l11635:	
  8136                           ;Main.c: 145: SSPCON = 0b10100001;
  8137  1D58  30A1               	movlw	(0A1h)
  8138  1D59  1283               	bcf	status, 5	;RP0=0, select bank0
  8139  1D5A  1303               	bcf	status, 6	;RP1=0, select bank0
  8140  1D5B  0094               	movwf	(20)	;volatile
  8141                           	line	148
  8142                           	
  8143  1D5C                     l11637:	
  8144                           ;Main.c: 148: OPTION_REG = 0b00000100;
  8145  1D5C  3004               	movlw	(04h)
  8146  1D5D  1683               	bsf	status, 5	;RP0=1, select bank1
  8147  1D5E  1303               	bcf	status, 6	;RP1=0, select bank1
  8148  1D5F  0081               	movwf	(129)^080h	;volatile
  8149                           	line	151
  8150                           	
  8151  1D60                     l11639:	
  8152                           ;Main.c: 151: ser_init();
  8153  1D60  160A  158A  2443   	fcall	_ser_init
              160A  158A         
  8154                           	line	152
  8155                           	
  8156  1D65                     l11641:	
  8157                           ;Main.c: 152: init_adc();
  8158  1D65  160A  158A  235D   	fcall	_init_adc
              160A  158A         
  8159                           	line	153
  8160                           	
  8161  1D6A                     l11643:	
  8162                           ;Main.c: 153: lcd_init();
  8163  1D6A  160A  158A  246D   	fcall	_lcd_init
              160A  158A         
  8164                           	line	154
  8165                           	
  8166  1D6F                     l11645:	
  8167                           ;Main.c: 154: robo_init();
  8168  1D6F  160A  158A  23B9   	fcall	_robo_init
              160A  158A         
  8169                           	line	158
  8170                           	
  8171  1D74                     l11647:	
  8172                           ;Main.c: 158: TMR0IE = 1;
  8173  1D74  168B               	bsf	(93/8),(93)&7
  8174                           	line	160
  8175                           	
  8176  1D75                     l11649:	
  8177                           ;Main.c: 160: PEIE=1;
  8178  1D75  170B               	bsf	(94/8),(94)&7
  8179                           	line	162
  8180                           	
  8181  1D76                     l11651:	
  8182                           ;Main.c: 162: (GIE = 1);
  8183  1D76  178B               	bsf	(95/8),(95)&7
  8184                           	line	163
  8185                           	
  8186  1D77                     l2251:	
  8187  1D77  0008               	return
  8188                           	opt stack 0
  8189                           GLOBAL	__end_of_init
  8190  1D78                     	__end_of_init:
  8191 ;; =============== function _init ends ============
  8192                           
  8193                           	signat	_init,88
  8194                           	global	_readDistance
  8195                           psect	text1098,local,class=CODE,delta=2
  8196                           global __ptext1098
  8197  1B73                     __ptext1098:
  8198                           
  8199 ;; *************** function _readDistance *****************
  8200 ;; Defined at:
  8201 ;;		line 78 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  readVal         2   12[BANK0 ] unsigned int 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  2    8[BANK0 ] unsigned int 
  8208 ;; Registers used:
  8209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8215 ;;      Params:         0       2       0       0       0
  8216 ;;      Locals:         0       2       0       0       0
  8217 ;;      Temps:          0       2       0       0       0
  8218 ;;      Totals:         0       6       0       0       0
  8219 ;;Total ram usage:        6 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    5
  8222 ;; This function calls:
  8223 ;;		_adc_read_channel
  8224 ;; This function is called by:
  8225 ;;		_readAvgDistance
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           psect	text1098
  8229                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8230                           	line	78
  8231                           	global	__size_of_readDistance
  8232  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  8233                           	
  8234  1B73                     _readDistance:	
  8235                           	opt	stack 0
  8236                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8237                           	line	81
  8238                           	
  8239  1B73                     l11621:	
  8240                           ;infrared.c: 79: unsigned int readVal;
  8241                           ;infrared.c: 81: readVal = adc_read_channel(0);
  8242  1B73  3000               	movlw	(0)
  8243  1B74  120A  118A  27C5   	fcall	_adc_read_channel
              160A  158A         
  8244  1B79  1283               	bcf	status, 5	;RP0=0, select bank0
  8245  1B7A  1303               	bcf	status, 6	;RP1=0, select bank0
  8246  1B7B  00AA               	movwf	(??_readDistance+0)+0
  8247  1B7C  01AB               	clrf	(??_readDistance+0)+0+1
  8248  1B7D  082A               	movf	0+(??_readDistance+0)+0,w
  8249  1B7E  00AC               	movwf	(readDistance@readVal)
  8250  1B7F  082B               	movf	1+(??_readDistance+0)+0,w
  8251  1B80  00AD               	movwf	(readDistance@readVal+1)
  8252                           	line	83
  8253                           	
  8254  1B81                     l11623:	
  8255                           ;infrared.c: 83: return readVal;
  8256  1B81  082D               	movf	(readDistance@readVal+1),w
  8257  1B82  01A9               	clrf	(?_readDistance+1)
  8258  1B83  07A9               	addwf	(?_readDistance+1)
  8259  1B84  082C               	movf	(readDistance@readVal),w
  8260  1B85  01A8               	clrf	(?_readDistance)
  8261  1B86  07A8               	addwf	(?_readDistance)
  8262                           
  8263  1B87  2B88               	goto	l3030
  8264                           	
  8265  1B88                     l11625:	
  8266                           	line	84
  8267                           	
  8268  1B88                     l3030:	
  8269  1B88  0008               	return
  8270                           	opt stack 0
  8271                           GLOBAL	__end_of_readDistance
  8272  1B89                     	__end_of_readDistance:
  8273 ;; =============== function _readDistance ends ============
  8274                           
  8275                           	signat	_readDistance,90
  8276                           	global	_RobotBattRead
  8277                           psect	text1099,local,class=CODE,delta=2
  8278                           global __ptext1099
  8279  12EA                     __ptext1099:
  8280                           
  8281 ;; *************** function _RobotBattRead *****************
  8282 ;; Defined at:
  8283 ;;		line 520 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  temp1           2    4[BANK0 ] int 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;		None               void
  8290 ;; Registers used:
  8291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8297 ;;      Params:         0       0       0       0       0
  8298 ;;      Locals:         0       2       0       0       0
  8299 ;;      Temps:          0       2       0       0       0
  8300 ;;      Totals:         0       4       0       0       0
  8301 ;;Total ram usage:        4 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    5
  8304 ;; This function calls:
  8305 ;;		_ser_putch
  8306 ;;		_ser_getch
  8307 ;; This function is called by:
  8308 ;;		_ChargeMode
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           psect	text1099
  8312                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8313                           	line	520
  8314                           	global	__size_of_RobotBattRead
  8315  0089                     	__size_of_RobotBattRead	equ	__end_of_RobotBattRead-_RobotBattRead
  8316                           	
  8317  12EA                     _RobotBattRead:	
  8318                           	opt	stack 1
  8319                           ; Regs used in _RobotBattRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8320                           	line	521
  8321                           	
  8322  12EA                     l11593:	
  8323                           ;robot.c: 521: int temp1 = 0;
  8324  12EA  1283               	bcf	status, 5	;RP0=0, select bank0
  8325  12EB  1303               	bcf	status, 6	;RP1=0, select bank0
  8326  12EC  01A4               	clrf	(RobotBattRead@temp1)
  8327  12ED  01A5               	clrf	(RobotBattRead@temp1+1)
  8328                           	line	522
  8329                           	
  8330  12EE                     l11595:	
  8331                           ;robot.c: 522: ser_putch(142);
  8332  12EE  308E               	movlw	(08Eh)
  8333  12EF  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  8334                           	line	523
  8335                           	
  8336  12F4                     l11597:	
  8337                           ;robot.c: 523: ser_putch(25);
  8338  12F4  3019               	movlw	(019h)
  8339  12F5  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  8340                           	line	524
  8341                           	
  8342  12FA                     l11599:	
  8343                           ;robot.c: 524: _delay((unsigned long)((5)*(20000000/4000.0)));
  8344                           	opt asmopt_off
  8345  12FA  3021               movlw	33
  8346  12FB  1283               	bcf	status, 5	;RP0=0, select bank0
  8347  12FC  1303               	bcf	status, 6	;RP1=0, select bank0
  8348  12FD  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  8349  12FE  3076               	movlw	118
  8350  12FF  00A2               movwf	((??_RobotBattRead+0)+0),f
  8351  1300                     u5597:
  8352  1300  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  8353  1301  2B00               	goto	u5597
  8354  1302  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  8355  1303  2B00               	goto	u5597
  8356  1304  0064               	clrwdt
  8357                           opt asmopt_on
  8358                           
  8359                           	line	525
  8360                           	
  8361  1305                     l11601:	
  8362                           ;robot.c: 525: DistHighByte = ser_getch();
  8363  1305  160A  158A  24C4   	fcall	_ser_getch
              160A  118A         
  8364  130A  1283               	bcf	status, 5	;RP0=0, select bank0
  8365  130B  1303               	bcf	status, 6	;RP1=0, select bank0
  8366  130C  00A2               	movwf	(??_RobotBattRead+0)+0
  8367  130D  0822               	movf	(??_RobotBattRead+0)+0,w
  8368  130E  00FD               	movwf	(_DistHighByte)	;volatile
  8369                           	line	526
  8370                           	
  8371  130F                     l11603:	
  8372                           ;robot.c: 526: DistLowByte = ser_getch();
  8373  130F  160A  158A  24C4   	fcall	_ser_getch
              160A  118A         
  8374  1314  1283               	bcf	status, 5	;RP0=0, select bank0
  8375  1315  1303               	bcf	status, 6	;RP1=0, select bank0
  8376  1316  00A2               	movwf	(??_RobotBattRead+0)+0
  8377  1317  0822               	movf	(??_RobotBattRead+0)+0,w
  8378  1318  1683               	bsf	status, 5	;RP0=1, select bank1
  8379  1319  1303               	bcf	status, 6	;RP1=0, select bank1
  8380  131A  00C3               	movwf	(_DistLowByte)^080h	;volatile
  8381                           	line	527
  8382                           	
  8383  131B                     l11605:	
  8384                           ;robot.c: 527: ser_putch(142);
  8385  131B  308E               	movlw	(08Eh)
  8386  131C  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  8387                           	line	528
  8388                           	
  8389  1321                     l11607:	
  8390                           ;robot.c: 528: ser_putch(21);
  8391  1321  3015               	movlw	(015h)
  8392  1322  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  8393                           	line	529
  8394                           	
  8395  1327                     l11609:	
  8396                           ;robot.c: 529: _delay((unsigned long)((5)*(20000000/4000.0)));
  8397                           	opt asmopt_off
  8398  1327  3021               movlw	33
  8399  1328  1283               	bcf	status, 5	;RP0=0, select bank0
  8400  1329  1303               	bcf	status, 6	;RP1=0, select bank0
  8401  132A  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  8402  132B  3076               	movlw	118
  8403  132C  00A2               movwf	((??_RobotBattRead+0)+0),f
  8404  132D                     u5607:
  8405  132D  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  8406  132E  2B2D               	goto	u5607
  8407  132F  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  8408  1330  2B2D               	goto	u5607
  8409  1331  0064               	clrwdt
  8410                           opt asmopt_on
  8411                           
  8412                           	line	530
  8413                           	
  8414  1332                     l11611:	
  8415                           ;robot.c: 530: BattState = ser_getch();
  8416  1332  160A  158A  24C4   	fcall	_ser_getch
              160A  118A         
  8417  1337  1283               	bcf	status, 5	;RP0=0, select bank0
  8418  1338  1303               	bcf	status, 6	;RP1=0, select bank0
  8419  1339  00A2               	movwf	(??_RobotBattRead+0)+0
  8420  133A  01A3               	clrf	(??_RobotBattRead+0)+0+1
  8421  133B  0822               	movf	0+(??_RobotBattRead+0)+0,w
  8422  133C  1683               	bsf	status, 5	;RP0=1, select bank1
  8423  133D  1303               	bcf	status, 6	;RP1=0, select bank1
  8424  133E  00A2               	movwf	(_BattState)^080h
  8425  133F  1283               	bcf	status, 5	;RP0=0, select bank0
  8426  1340  1303               	bcf	status, 6	;RP1=0, select bank0
  8427  1341  0823               	movf	1+(??_RobotBattRead+0)+0,w
  8428  1342  1683               	bsf	status, 5	;RP0=1, select bank1
  8429  1343  1303               	bcf	status, 6	;RP1=0, select bank1
  8430  1344  00A3               	movwf	(_BattState+1)^080h
  8431                           	line	533
  8432                           	
  8433  1345                     l11613:	
  8434                           ;robot.c: 533: temp1 = DistHighByte;
  8435  1345  087D               	movf	(_DistHighByte),w	;volatile
  8436  1346  1283               	bcf	status, 5	;RP0=0, select bank0
  8437  1347  1303               	bcf	status, 6	;RP1=0, select bank0
  8438  1348  00A2               	movwf	(??_RobotBattRead+0)+0
  8439  1349  01A3               	clrf	(??_RobotBattRead+0)+0+1
  8440  134A  0822               	movf	0+(??_RobotBattRead+0)+0,w
  8441  134B  00A4               	movwf	(RobotBattRead@temp1)
  8442  134C  0823               	movf	1+(??_RobotBattRead+0)+0,w
  8443  134D  00A5               	movwf	(RobotBattRead@temp1+1)
  8444                           	line	534
  8445                           	
  8446  134E                     l11615:	
  8447                           ;robot.c: 534: temp1 = temp1 << 8;
  8448  134E  0825               	movf	(RobotBattRead@temp1+1),w
  8449  134F  00A3               	movwf	(??_RobotBattRead+0)+0+1
  8450  1350  0824               	movf	(RobotBattRead@temp1),w
  8451  1351  00A2               	movwf	(??_RobotBattRead+0)+0
  8452  1352  0822               	movf	(??_RobotBattRead+0)+0,w
  8453  1353  00A3               	movwf	(??_RobotBattRead+0)+1
  8454  1354  01A2               	clrf	(??_RobotBattRead+0)+0
  8455  1355  0822               	movf	0+(??_RobotBattRead+0)+0,w
  8456  1356  00A4               	movwf	(RobotBattRead@temp1)
  8457  1357  0823               	movf	1+(??_RobotBattRead+0)+0,w
  8458  1358  00A5               	movwf	(RobotBattRead@temp1+1)
  8459                           	line	535
  8460                           	
  8461  1359                     l11617:	
  8462                           ;robot.c: 535: temp1 += DistLowByte;
  8463  1359  1683               	bsf	status, 5	;RP0=1, select bank1
  8464  135A  1303               	bcf	status, 6	;RP1=0, select bank1
  8465  135B  0843               	movf	(_DistLowByte)^080h,w	;volatile
  8466  135C  1283               	bcf	status, 5	;RP0=0, select bank0
  8467  135D  1303               	bcf	status, 6	;RP1=0, select bank0
  8468  135E  00A2               	movwf	(??_RobotBattRead+0)+0
  8469  135F  01A3               	clrf	(??_RobotBattRead+0)+0+1
  8470  1360  0822               	movf	0+(??_RobotBattRead+0)+0,w
  8471  1361  07A4               	addwf	(RobotBattRead@temp1),f
  8472  1362  1803               	skipnc
  8473  1363  0AA5               	incf	(RobotBattRead@temp1+1),f
  8474  1364  0823               	movf	1+(??_RobotBattRead+0)+0,w
  8475  1365  07A5               	addwf	(RobotBattRead@temp1+1),f
  8476                           	line	536
  8477                           	
  8478  1366                     l11619:	
  8479                           ;robot.c: 536: BattCharge = temp1;
  8480  1366  0825               	movf	(RobotBattRead@temp1+1),w
  8481  1367  1683               	bsf	status, 5	;RP0=1, select bank1
  8482  1368  1303               	bcf	status, 6	;RP1=0, select bank1
  8483  1369  01A1               	clrf	(_BattCharge+1)^080h
  8484  136A  07A1               	addwf	(_BattCharge+1)^080h
  8485  136B  1283               	bcf	status, 5	;RP0=0, select bank0
  8486  136C  1303               	bcf	status, 6	;RP1=0, select bank0
  8487  136D  0824               	movf	(RobotBattRead@temp1),w
  8488  136E  1683               	bsf	status, 5	;RP0=1, select bank1
  8489  136F  1303               	bcf	status, 6	;RP1=0, select bank1
  8490  1370  01A0               	clrf	(_BattCharge)^080h
  8491  1371  07A0               	addwf	(_BattCharge)^080h
  8492                           
  8493                           	line	537
  8494                           	
  8495  1372                     l6200:	
  8496  1372  0008               	return
  8497                           	opt stack 0
  8498                           GLOBAL	__end_of_RobotBattRead
  8499  1373                     	__end_of_RobotBattRead:
  8500 ;; =============== function _RobotBattRead ends ============
  8501                           
  8502                           	signat	_RobotBattRead,88
  8503                           	global	_robot_read
  8504                           psect	text1100,local,class=CODE,delta=2
  8505                           global __ptext1100
  8506  06A0                     __ptext1100:
  8507                           
  8508 ;; *************** function _robot_read *****************
  8509 ;; Defined at:
  8510 ;;		line 52 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  readType        1    wreg     unsigned char 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  readType        1    3[BANK0 ] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;		None               void
  8517 ;; Registers used:
  8518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8524 ;;      Params:         0       0       0       0       0
  8525 ;;      Locals:         0       1       0       0       0
  8526 ;;      Temps:          0       1       0       0       0
  8527 ;;      Totals:         0       2       0       0       0
  8528 ;;Total ram usage:        2 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    5
  8531 ;; This function calls:
  8532 ;;		_ser_putch
  8533 ;;		_ser_getch
  8534 ;; This function is called by:
  8535 ;;		_main
  8536 ;;		_robotFollow
  8537 ;;		_robot_turnRight
  8538 ;;		_robotMoveSpeed
  8539 ;;		_robotTurnSpeed
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           psect	text1100
  8543                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8544                           	line	52
  8545                           	global	__size_of_robot_read
  8546  0125                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  8547                           	
  8548  06A0                     _robot_read:	
  8549                           	opt	stack 1
  8550                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8551                           ;robot_read@readType stored from wreg
  8552  06A0  1283               	bcf	status, 5	;RP0=0, select bank0
  8553  06A1  1303               	bcf	status, 6	;RP1=0, select bank0
  8554  06A2  00A3               	movwf	(robot_read@readType)
  8555                           	line	53
  8556                           	
  8557  06A3                     l11577:	
  8558                           ;robot.c: 53: ser_putch(142);
  8559  06A3  308E               	movlw	(08Eh)
  8560  06A4  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8561                           	line	54
  8562                           ;robot.c: 54: ser_putch(10);
  8563  06A9  300A               	movlw	(0Ah)
  8564  06AA  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8565                           	line	56
  8566                           ;robot.c: 56: CliffSensors = ser_getch();
  8567  06AF  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8568  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
  8569  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
  8570  06B6  00A2               	movwf	(??_robot_read+0)+0
  8571  06B7  0822               	movf	(??_robot_read+0)+0,w
  8572  06B8  1683               	bsf	status, 5	;RP0=1, select bank1
  8573  06B9  1303               	bcf	status, 6	;RP1=0, select bank1
  8574  06BA  00C2               	movwf	(_CliffSensors)^080h	;volatile
  8575                           	line	58
  8576                           ;robot.c: 58: ser_putch(142);
  8577  06BB  308E               	movlw	(08Eh)
  8578  06BC  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8579                           	line	59
  8580                           ;robot.c: 59: ser_putch(11);
  8581  06C1  300B               	movlw	(0Bh)
  8582  06C2  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8583                           	line	61
  8584                           ;robot.c: 61: CliffSensors += ser_getch();
  8585  06C7  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8586  06CC  1283               	bcf	status, 5	;RP0=0, select bank0
  8587  06CD  1303               	bcf	status, 6	;RP1=0, select bank0
  8588  06CE  00A2               	movwf	(??_robot_read+0)+0
  8589  06CF  0822               	movf	(??_robot_read+0)+0,w
  8590  06D0  1683               	bsf	status, 5	;RP0=1, select bank1
  8591  06D1  1303               	bcf	status, 6	;RP1=0, select bank1
  8592  06D2  07C2               	addwf	(_CliffSensors)^080h,f	;volatile
  8593                           	line	65
  8594                           ;robot.c: 65: ser_putch(142);
  8595  06D3  308E               	movlw	(08Eh)
  8596  06D4  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8597                           	line	66
  8598                           ;robot.c: 66: ser_putch(7);
  8599  06D9  3007               	movlw	(07h)
  8600  06DA  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8601                           	line	68
  8602                           ;robot.c: 68: BumpSensors = ser_getch();
  8603  06DF  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8604  06E4  1283               	bcf	status, 5	;RP0=0, select bank0
  8605  06E5  1303               	bcf	status, 6	;RP1=0, select bank0
  8606  06E6  00A2               	movwf	(??_robot_read+0)+0
  8607  06E7  0822               	movf	(??_robot_read+0)+0,w
  8608  06E8  1683               	bsf	status, 5	;RP0=1, select bank1
  8609  06E9  1303               	bcf	status, 6	;RP1=0, select bank1
  8610  06EA  00C0               	movwf	(_BumpSensors)^080h	;volatile
  8611                           	line	70
  8612                           ;robot.c: 70: ser_putch(142);
  8613  06EB  308E               	movlw	(08Eh)
  8614  06EC  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8615                           	line	71
  8616                           ;robot.c: 71: ser_putch(13);
  8617  06F1  300D               	movlw	(0Dh)
  8618  06F2  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8619                           	line	73
  8620                           ;robot.c: 73: VwallSensor = ser_getch();
  8621  06F7  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8622  06FC  1283               	bcf	status, 5	;RP0=0, select bank0
  8623  06FD  1303               	bcf	status, 6	;RP1=0, select bank0
  8624  06FE  00A2               	movwf	(??_robot_read+0)+0
  8625  06FF  0822               	movf	(??_robot_read+0)+0,w
  8626  0700  1683               	bsf	status, 5	;RP0=1, select bank1
  8627  0701  1303               	bcf	status, 6	;RP1=0, select bank1
  8628  0702  00CB               	movwf	(_VwallSensor)^080h	;volatile
  8629                           	line	75
  8630                           ;robot.c: 75: ser_putch(142);
  8631  0703  308E               	movlw	(08Eh)
  8632  0704  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8633                           	line	76
  8634                           ;robot.c: 76: ser_putch(17);
  8635  0709  3011               	movlw	(011h)
  8636  070A  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8637                           	line	78
  8638                           ;robot.c: 78: VictimSensor = ser_getch();
  8639  070F  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8640  0714  1283               	bcf	status, 5	;RP0=0, select bank0
  8641  0715  1303               	bcf	status, 6	;RP1=0, select bank0
  8642  0716  00A2               	movwf	(??_robot_read+0)+0
  8643  0717  0822               	movf	(??_robot_read+0)+0,w
  8644  0718  1683               	bsf	status, 5	;RP0=1, select bank1
  8645  0719  1303               	bcf	status, 6	;RP1=0, select bank1
  8646  071A  00CA               	movwf	(_VictimSensor)^080h	;volatile
  8647                           	line	82
  8648                           	
  8649  071B                     l11579:	
  8650                           ;robot.c: 82: if (readType == 0)
  8651  071B  1283               	bcf	status, 5	;RP0=0, select bank0
  8652  071C  1303               	bcf	status, 6	;RP1=0, select bank0
  8653  071D  08A3               	movf	(robot_read@readType),f
  8654  071E  1D03               	skipz
  8655  071F  2F21               	goto	u5061
  8656  0720  2F22               	goto	u5060
  8657  0721                     u5061:
  8658  0721  2F45               	goto	l11583
  8659  0722                     u5060:
  8660                           	line	84
  8661                           	
  8662  0722                     l11581:	
  8663                           ;robot.c: 83: {
  8664                           ;robot.c: 84: ser_putch(142);
  8665  0722  308E               	movlw	(08Eh)
  8666  0723  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8667                           	line	85
  8668                           ;robot.c: 85: ser_putch(19);
  8669  0728  3013               	movlw	(013h)
  8670  0729  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8671                           	line	87
  8672                           ;robot.c: 87: DistHighByte = ser_getch();
  8673  072E  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8674  0733  1283               	bcf	status, 5	;RP0=0, select bank0
  8675  0734  1303               	bcf	status, 6	;RP1=0, select bank0
  8676  0735  00A2               	movwf	(??_robot_read+0)+0
  8677  0736  0822               	movf	(??_robot_read+0)+0,w
  8678  0737  00FD               	movwf	(_DistHighByte)	;volatile
  8679                           	line	88
  8680                           ;robot.c: 88: DistLowByte = ser_getch();
  8681  0738  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8682  073D  1283               	bcf	status, 5	;RP0=0, select bank0
  8683  073E  1303               	bcf	status, 6	;RP1=0, select bank0
  8684  073F  00A2               	movwf	(??_robot_read+0)+0
  8685  0740  0822               	movf	(??_robot_read+0)+0,w
  8686  0741  1683               	bsf	status, 5	;RP0=1, select bank1
  8687  0742  1303               	bcf	status, 6	;RP1=0, select bank1
  8688  0743  00C3               	movwf	(_DistLowByte)^080h	;volatile
  8689                           	line	89
  8690                           ;robot.c: 89: }
  8691  0744  2FC4               	goto	l6103
  8692                           	line	90
  8693                           	
  8694  0745                     l6096:	
  8695                           	
  8696  0745                     l11583:	
  8697                           ;robot.c: 90: else if (readType == 1)
  8698  0745  1283               	bcf	status, 5	;RP0=0, select bank0
  8699  0746  0823               	movf	(robot_read@readType),w
  8700  0747  3A01               	xorlw	01h
  8701  0748  1D03               	skipz
  8702  0749  2F4B               	goto	u5071
  8703  074A  2F4C               	goto	u5070
  8704  074B                     u5071:
  8705  074B  2F71               	goto	l11587
  8706  074C                     u5070:
  8707                           	line	92
  8708                           	
  8709  074C                     l11585:	
  8710                           ;robot.c: 91: {
  8711                           ;robot.c: 92: ser_putch(142);
  8712  074C  308E               	movlw	(08Eh)
  8713  074D  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8714                           	line	93
  8715                           ;robot.c: 93: ser_putch(20);
  8716  0752  3014               	movlw	(014h)
  8717  0753  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8718                           	line	95
  8719                           ;robot.c: 95: AngleHighByte = ser_getch();
  8720  0758  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8721  075D  1283               	bcf	status, 5	;RP0=0, select bank0
  8722  075E  1303               	bcf	status, 6	;RP1=0, select bank0
  8723  075F  00A2               	movwf	(??_robot_read+0)+0
  8724  0760  0822               	movf	(??_robot_read+0)+0,w
  8725  0761  1683               	bsf	status, 5	;RP0=1, select bank1
  8726  0762  1303               	bcf	status, 6	;RP1=0, select bank1
  8727  0763  00BE               	movwf	(_AngleHighByte)^080h	;volatile
  8728                           	line	96
  8729                           ;robot.c: 96: AngleLowByte = ser_getch();
  8730  0764  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8731  0769  1283               	bcf	status, 5	;RP0=0, select bank0
  8732  076A  1303               	bcf	status, 6	;RP1=0, select bank0
  8733  076B  00A2               	movwf	(??_robot_read+0)+0
  8734  076C  0822               	movf	(??_robot_read+0)+0,w
  8735  076D  1683               	bsf	status, 5	;RP0=1, select bank1
  8736  076E  1303               	bcf	status, 6	;RP1=0, select bank1
  8737  076F  00BF               	movwf	(_AngleLowByte)^080h	;volatile
  8738                           	line	97
  8739                           ;robot.c: 97: }
  8740  0770  2FC4               	goto	l6103
  8741                           	line	98
  8742                           	
  8743  0771                     l6098:	
  8744                           	
  8745  0771                     l11587:	
  8746                           ;robot.c: 98: else if (readType == 2)
  8747  0771  1283               	bcf	status, 5	;RP0=0, select bank0
  8748  0772  0823               	movf	(robot_read@readType),w
  8749  0773  3A02               	xorlw	02h
  8750  0774  1D03               	skipz
  8751  0775  2F77               	goto	u5081
  8752  0776  2F78               	goto	u5080
  8753  0777                     u5081:
  8754  0777  2FC4               	goto	l6103
  8755  0778                     u5080:
  8756                           	line	101
  8757                           	
  8758  0778                     l11589:	
  8759                           ;robot.c: 99: {
  8760                           ;robot.c: 101: ser_putch(142);
  8761  0778  308E               	movlw	(08Eh)
  8762  0779  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8763                           	line	102
  8764                           ;robot.c: 102: ser_putch(19);
  8765  077E  3013               	movlw	(013h)
  8766  077F  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8767                           	line	104
  8768                           ;robot.c: 104: DistHighByte = ser_getch();
  8769  0784  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8770  0789  1283               	bcf	status, 5	;RP0=0, select bank0
  8771  078A  1303               	bcf	status, 6	;RP1=0, select bank0
  8772  078B  00A2               	movwf	(??_robot_read+0)+0
  8773  078C  0822               	movf	(??_robot_read+0)+0,w
  8774  078D  00FD               	movwf	(_DistHighByte)	;volatile
  8775                           	line	105
  8776                           ;robot.c: 105: DistLowByte = ser_getch();
  8777  078E  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8778  0793  1283               	bcf	status, 5	;RP0=0, select bank0
  8779  0794  1303               	bcf	status, 6	;RP1=0, select bank0
  8780  0795  00A2               	movwf	(??_robot_read+0)+0
  8781  0796  0822               	movf	(??_robot_read+0)+0,w
  8782  0797  1683               	bsf	status, 5	;RP0=1, select bank1
  8783  0798  1303               	bcf	status, 6	;RP1=0, select bank1
  8784  0799  00C3               	movwf	(_DistLowByte)^080h	;volatile
  8785                           	line	106
  8786                           ;robot.c: 106: ser_putch(142);
  8787  079A  308E               	movlw	(08Eh)
  8788  079B  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8789                           	line	107
  8790                           ;robot.c: 107: ser_putch(20);
  8791  07A0  3014               	movlw	(014h)
  8792  07A1  160A  158A  251C   	fcall	_ser_putch
              120A  118A         
  8793                           	line	109
  8794                           ;robot.c: 109: AngleHighByte = ser_getch();
  8795  07A6  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8796  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
  8797  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
  8798  07AD  00A2               	movwf	(??_robot_read+0)+0
  8799  07AE  0822               	movf	(??_robot_read+0)+0,w
  8800  07AF  1683               	bsf	status, 5	;RP0=1, select bank1
  8801  07B0  1303               	bcf	status, 6	;RP1=0, select bank1
  8802  07B1  00BE               	movwf	(_AngleHighByte)^080h	;volatile
  8803                           	line	110
  8804                           ;robot.c: 110: AngleLowByte = ser_getch();
  8805  07B2  160A  158A  24C4   	fcall	_ser_getch
              120A  118A         
  8806  07B7  1283               	bcf	status, 5	;RP0=0, select bank0
  8807  07B8  1303               	bcf	status, 6	;RP1=0, select bank0
  8808  07B9  00A2               	movwf	(??_robot_read+0)+0
  8809  07BA  0822               	movf	(??_robot_read+0)+0,w
  8810  07BB  1683               	bsf	status, 5	;RP0=1, select bank1
  8811  07BC  1303               	bcf	status, 6	;RP1=0, select bank1
  8812  07BD  00BF               	movwf	(_AngleLowByte)^080h	;volatile
  8813                           	line	111
  8814                           ;robot.c: 111: }
  8815  07BE  2FC4               	goto	l6103
  8816                           	line	113
  8817                           	
  8818  07BF                     l6100:	
  8819  07BF  2FC4               	goto	l6103
  8820                           	
  8821  07C0                     l11591:	
  8822  07C0  2FC4               	goto	l6103
  8823                           	line	116
  8824                           ;robot.c: 114: {
  8825                           	
  8826  07C1                     l6102:	
  8827  07C1  2FC4               	goto	l6103
  8828                           	line	117
  8829                           	
  8830  07C2                     l6101:	
  8831  07C2  2FC4               	goto	l6103
  8832                           	
  8833  07C3                     l6099:	
  8834  07C3  2FC4               	goto	l6103
  8835                           	
  8836  07C4                     l6097:	
  8837                           	
  8838  07C4                     l6103:	
  8839  07C4  0008               	return
  8840                           	opt stack 0
  8841                           GLOBAL	__end_of_robot_read
  8842  07C5                     	__end_of_robot_read:
  8843 ;; =============== function _robot_read ends ============
  8844                           
  8845                           	signat	_robot_read,4216
  8846                           	global	_lcd_init
  8847                           psect	text1101,local,class=CODE,delta=2
  8848                           global __ptext1101
  8849  1C6D                     __ptext1101:
  8850                           
  8851 ;; *************** function _lcd_init *****************
  8852 ;; Defined at:
  8853 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;		None
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;		None               void
  8860 ;; Registers used:
  8861 ;;		wreg, status,2, status,0, pclath, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8867 ;;      Params:         0       0       0       0       0
  8868 ;;      Locals:         0       0       0       0       0
  8869 ;;      Temps:          0       0       0       0       0
  8870 ;;      Totals:         0       0       0       0       0
  8871 ;;Total ram usage:        0 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:    4
  8874 ;; This function calls:
  8875 ;;		_lcd_write_control
  8876 ;; This function is called by:
  8877 ;;		_init
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           psect	text1101
  8881                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8882                           	line	101
  8883                           	global	__size_of_lcd_init
  8884  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  8885                           	
  8886  1C6D                     _lcd_init:	
  8887                           	opt	stack 2
  8888                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  8889                           	line	105
  8890                           	
  8891  1C6D                     l11557:	
  8892                           ;lcd.c: 105: ADCON1 = 0b00000010;
  8893  1C6D  3002               	movlw	(02h)
  8894  1C6E  1683               	bsf	status, 5	;RP0=1, select bank1
  8895  1C6F  1303               	bcf	status, 6	;RP1=0, select bank1
  8896  1C70  009F               	movwf	(159)^080h	;volatile
  8897                           	line	108
  8898                           	
  8899  1C71                     l11559:	
  8900                           ;lcd.c: 108: PORTD = 0;
  8901  1C71  1283               	bcf	status, 5	;RP0=0, select bank0
  8902  1C72  1303               	bcf	status, 6	;RP1=0, select bank0
  8903  1C73  0188               	clrf	(8)	;volatile
  8904                           	line	109
  8905                           	
  8906  1C74                     l11561:	
  8907                           ;lcd.c: 109: PORTE = 0;
  8908  1C74  0189               	clrf	(9)	;volatile
  8909                           	line	111
  8910                           	
  8911  1C75                     l11563:	
  8912                           ;lcd.c: 111: TRISD = 0b00000000;
  8913  1C75  1683               	bsf	status, 5	;RP0=1, select bank1
  8914  1C76  1303               	bcf	status, 6	;RP1=0, select bank1
  8915  1C77  0188               	clrf	(136)^080h	;volatile
  8916                           	line	112
  8917                           	
  8918  1C78                     l11565:	
  8919                           ;lcd.c: 112: TRISE = 0b00000000;
  8920  1C78  0189               	clrf	(137)^080h	;volatile
  8921                           	line	115
  8922                           	
  8923  1C79                     l11567:	
  8924                           ;lcd.c: 115: lcd_write_control(0b00000001);
  8925  1C79  3001               	movlw	(01h)
  8926  1C7A  160A  158A  2349   	fcall	_lcd_write_control
              160A  158A         
  8927                           	line	116
  8928                           	
  8929  1C7F                     l11569:	
  8930                           ;lcd.c: 116: lcd_write_control(0b00111000);
  8931  1C7F  3038               	movlw	(038h)
  8932  1C80  160A  158A  2349   	fcall	_lcd_write_control
              160A  158A         
  8933                           	line	117
  8934                           	
  8935  1C85                     l11571:	
  8936                           ;lcd.c: 117: lcd_write_control(0b00001100);
  8937  1C85  300C               	movlw	(0Ch)
  8938  1C86  160A  158A  2349   	fcall	_lcd_write_control
              160A  158A         
  8939                           	line	118
  8940                           	
  8941  1C8B                     l11573:	
  8942                           ;lcd.c: 118: lcd_write_control(0b00000110);
  8943  1C8B  3006               	movlw	(06h)
  8944  1C8C  160A  158A  2349   	fcall	_lcd_write_control
              160A  158A         
  8945                           	line	119
  8946                           	
  8947  1C91                     l11575:	
  8948                           ;lcd.c: 119: lcd_write_control(0b00000010);
  8949  1C91  3002               	movlw	(02h)
  8950  1C92  160A  158A  2349   	fcall	_lcd_write_control
              160A  158A         
  8951                           	line	121
  8952                           	
  8953  1C97                     l1429:	
  8954  1C97  0008               	return
  8955                           	opt stack 0
  8956                           GLOBAL	__end_of_lcd_init
  8957  1C98                     	__end_of_lcd_init:
  8958 ;; =============== function _lcd_init ends ============
  8959                           
  8960                           	signat	_lcd_init,88
  8961                           	global	_lcd_write_string
  8962                           psect	text1102,local,class=CODE,delta=2
  8963                           global __ptext1102
  8964  1CF0                     __ptext1102:
  8965                           
  8966 ;; *************** function _lcd_write_string *****************
  8967 ;; Defined at:
  8968 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  s               2    7[BANK0 ] PTR unsigned char 
  8971 ;;		 -> STR_26(9), STR_25(3), STR_24(3), STR_23(3), 
  8972 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_18(16), 
  8973 ;;		 -> STR_17(4), STR_16(8), STR_15(4), STR_14(16), 
  8974 ;;		 -> UpdateDisplay@LCDOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  8975 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  8976 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  8977 ;;		 -> STR_1(9), 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;		None               void
  8982 ;; Registers used:
  8983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8989 ;;      Params:         0       2       0       0       0
  8990 ;;      Locals:         0       0       0       0       0
  8991 ;;      Temps:          0       0       0       0       0
  8992 ;;      Totals:         0       2       0       0       0
  8993 ;;Total ram usage:        2 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    4
  8996 ;; This function calls:
  8997 ;;		_lcd_write_data
  8998 ;; This function is called by:
  8999 ;;		_UpdateDisplay
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           psect	text1102
  9003                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9004                           	line	48
  9005                           	global	__size_of_lcd_write_string
  9006  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  9007                           	
  9008  1CF0                     _lcd_write_string:	
  9009                           	opt	stack 1
  9010                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9011                           	line	50
  9012                           	
  9013  1CF0                     l11549:	
  9014                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  9015  1CF0  2D0A               	goto	l11555
  9016                           	
  9017  1CF1                     l1409:	
  9018                           	
  9019  1CF1                     l11551:	
  9020  1CF1  1283               	bcf	status, 5	;RP0=0, select bank0
  9021  1CF2  1303               	bcf	status, 6	;RP1=0, select bank0
  9022  1CF3  0828               	movf	(lcd_write_string@s+1),w
  9023  1CF4  00FF               	movwf	btemp+1
  9024  1CF5  0827               	movf	(lcd_write_string@s),w
  9025  1CF6  0084               	movwf	fsr0
  9026  1CF7  120A  158A  2000   	fcall	stringtab
              160A  158A         
  9027  1CFC  160A  158A  230F   	fcall	_lcd_write_data
              160A  158A         
  9028                           	
  9029  1D01                     l11553:	
  9030  1D01  3001               	movlw	low(01h)
  9031  1D02  1283               	bcf	status, 5	;RP0=0, select bank0
  9032  1D03  1303               	bcf	status, 6	;RP1=0, select bank0
  9033  1D04  07A7               	addwf	(lcd_write_string@s),f
  9034  1D05  1803               	skipnc
  9035  1D06  0AA8               	incf	(lcd_write_string@s+1),f
  9036  1D07  3000               	movlw	high(01h)
  9037  1D08  07A8               	addwf	(lcd_write_string@s+1),f
  9038  1D09  2D0A               	goto	l11555
  9039                           	
  9040  1D0A                     l1408:	
  9041                           	
  9042  1D0A                     l11555:	
  9043  1D0A  1283               	bcf	status, 5	;RP0=0, select bank0
  9044  1D0B  1303               	bcf	status, 6	;RP1=0, select bank0
  9045  1D0C  0828               	movf	(lcd_write_string@s+1),w
  9046  1D0D  00FF               	movwf	btemp+1
  9047  1D0E  0827               	movf	(lcd_write_string@s),w
  9048  1D0F  0084               	movwf	fsr0
  9049  1D10  120A  158A  2000   	fcall	stringtab
              160A  158A         
  9050  1D15  3800               	iorlw	0
  9051  1D16  1D03               	skipz
  9052  1D17  2D19               	goto	u5051
  9053  1D18  2D1A               	goto	u5050
  9054  1D19                     u5051:
  9055  1D19  2CF1               	goto	l11551
  9056  1D1A                     u5050:
  9057  1D1A  2D1B               	goto	l1411
  9058                           	
  9059  1D1B                     l1410:	
  9060                           	line	51
  9061                           	
  9062  1D1B                     l1411:	
  9063  1D1B  0008               	return
  9064                           	opt stack 0
  9065                           GLOBAL	__end_of_lcd_write_string
  9066  1D1C                     	__end_of_lcd_write_string:
  9067 ;; =============== function _lcd_write_string ends ============
  9068                           
  9069                           	signat	_lcd_write_string,4216
  9070                           	global	_lcd_set_cursor
  9071                           psect	text1103,local,class=CODE,delta=2
  9072                           global __ptext1103
  9073  1AF7                     __ptext1103:
  9074                           
  9075 ;; *************** function _lcd_set_cursor *****************
  9076 ;; Defined at:
  9077 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  address         1    wreg     unsigned char 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  address         1    3[BANK0 ] unsigned char 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;		None               void
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0, pclath, cstack
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9091 ;;      Params:         0       0       0       0       0
  9092 ;;      Locals:         0       1       0       0       0
  9093 ;;      Temps:          0       0       0       0       0
  9094 ;;      Totals:         0       1       0       0       0
  9095 ;;Total ram usage:        1 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:    4
  9098 ;; This function calls:
  9099 ;;		_lcd_write_control
  9100 ;; This function is called by:
  9101 ;;		_UpdateDisplay
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           psect	text1103
  9105                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9106                           	line	42
  9107                           	global	__size_of_lcd_set_cursor
  9108  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  9109                           	
  9110  1AF7                     _lcd_set_cursor:	
  9111                           	opt	stack 1
  9112                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  9113                           ;lcd_set_cursor@address stored from wreg
  9114  1AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  9115  1AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  9116  1AF9  00A3               	movwf	(lcd_set_cursor@address)
  9117                           	line	43
  9118                           	
  9119  1AFA                     l11545:	
  9120                           ;lcd.c: 43: address |= 0b10000000;
  9121  1AFA  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  9122                           	line	44
  9123                           	
  9124  1AFB                     l11547:	
  9125                           ;lcd.c: 44: lcd_write_control(address);
  9126  1AFB  0823               	movf	(lcd_set_cursor@address),w
  9127  1AFC  160A  158A  2349   	fcall	_lcd_write_control
              160A  158A         
  9128                           	line	45
  9129                           	
  9130  1B01                     l1405:	
  9131  1B01  0008               	return
  9132                           	opt stack 0
  9133                           GLOBAL	__end_of_lcd_set_cursor
  9134  1B02                     	__end_of_lcd_set_cursor:
  9135 ;; =============== function _lcd_set_cursor ends ============
  9136                           
  9137                           	signat	_lcd_set_cursor,4216
  9138                           	global	_abs
  9139                           psect	text1104,local,class=CODE,delta=2
  9140                           global __ptext1104
  9141  1DA8                     __ptext1104:
  9142                           
  9143 ;; *************** function _abs *****************
  9144 ;; Defined at:
  9145 ;;		line 542 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  v               2    6[BANK0 ] int 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  2    6[BANK0 ] int 
  9152 ;; Registers used:
  9153 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9159 ;;      Params:         0       2       0       0       0
  9160 ;;      Locals:         0       0       0       0       0
  9161 ;;      Temps:          0       2       0       0       0
  9162 ;;      Totals:         0       4       0       0       0
  9163 ;;Total ram usage:        4 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    4
  9166 ;; This function calls:
  9167 ;;		___wmul
  9168 ;; This function is called by:
  9169 ;;		_robot_turnRight
  9170 ;;		_robotMoveSpeed
  9171 ;;		_robotTurnSpeed
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           psect	text1104
  9175                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9176                           	line	542
  9177                           	global	__size_of_abs
  9178  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  9179                           	
  9180  1DA8                     _abs:	
  9181                           	opt	stack 2
  9182                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9183                           	line	543
  9184                           	
  9185  1DA8                     l11541:	
  9186                           ;robot.c: 543: return (v * ((v > 0) - (v < 0)));
  9187  1DA8  3000               	movlw	0
  9188  1DA9  1283               	bcf	status, 5	;RP0=0, select bank0
  9189  1DAA  1303               	bcf	status, 6	;RP1=0, select bank0
  9190  1DAB  1BA7               	btfsc	(abs@v+1),7
  9191  1DAC  3001               	movlw	1
  9192  1DAD  00A8               	movwf	(??_abs+0)+0
  9193  1DAE  01A9               	clrf	(??_abs+0)+0+1
  9194  1DAF  09A8               	comf	(??_abs+0)+0,f
  9195  1DB0  09A9               	comf	(??_abs+0)+1,f
  9196  1DB1  0AA8               	incf	(??_abs+0)+0,f
  9197  1DB2  1903               	skipnz
  9198  1DB3  0AA9               	incf	(??_abs+0)+1,f
  9199  1DB4  0827               	movf	(abs@v+1),w
  9200  1DB5  3A80               	xorlw	80h
  9201  1DB6  00FF               	movwf	btemp+1
  9202  1DB7  3080               	movlw	(high(01h))^80h
  9203  1DB8  027F               	subwf	btemp+1,w
  9204  1DB9  1D03               	skipz
  9205  1DBA  2DBD               	goto	u5045
  9206  1DBB  3001               	movlw	low(01h)
  9207  1DBC  0226               	subwf	(abs@v),w
  9208  1DBD                     u5045:
  9209                           
  9210  1DBD  3000               	movlw	0
  9211  1DBE  1803               	skipnc
  9212  1DBF  3001               	movlw	1
  9213  1DC0  1283               	bcf	status, 5	;RP0=0, select bank0
  9214  1DC1  1303               	bcf	status, 6	;RP1=0, select bank0
  9215  1DC2  0728               	addwf	0+(??_abs+0)+0,w
  9216  1DC3  00A0               	movwf	(?___wmul)
  9217  1DC4  0829               	movf	1+(??_abs+0)+0,w
  9218  1DC5  1803               	skipnc
  9219  1DC6  0A29               	incf	1+(??_abs+0)+0,w
  9220  1DC7  00A1               	movwf	((?___wmul))+1
  9221  1DC8  0827               	movf	(abs@v+1),w
  9222  1DC9  01A3               	clrf	1+(?___wmul)+02h
  9223  1DCA  07A3               	addwf	1+(?___wmul)+02h
  9224  1DCB  0826               	movf	(abs@v),w
  9225  1DCC  01A2               	clrf	0+(?___wmul)+02h
  9226  1DCD  07A2               	addwf	0+(?___wmul)+02h
  9227                           
  9228  1DCE  160A  158A  2498   	fcall	___wmul
              160A  158A         
  9229  1DD3  1283               	bcf	status, 5	;RP0=0, select bank0
  9230  1DD4  1303               	bcf	status, 6	;RP1=0, select bank0
  9231  1DD5  0821               	movf	(1+(?___wmul)),w
  9232  1DD6  01A7               	clrf	(?_abs+1)
  9233  1DD7  07A7               	addwf	(?_abs+1)
  9234  1DD8  0820               	movf	(0+(?___wmul)),w
  9235  1DD9  01A6               	clrf	(?_abs)
  9236  1DDA  07A6               	addwf	(?_abs)
  9237                           
  9238  1DDB  2DDC               	goto	l6203
  9239                           	
  9240  1DDC                     l11543:	
  9241                           	line	544
  9242                           	
  9243  1DDC                     l6203:	
  9244  1DDC  0008               	return
  9245                           	opt stack 0
  9246                           GLOBAL	__end_of_abs
  9247  1DDD                     	__end_of_abs:
  9248 ;; =============== function _abs ends ============
  9249                           
  9250                           	signat	_abs,4218
  9251                           	global	_robotTurn
  9252                           psect	text1105,local,class=CODE,delta=2
  9253                           global __ptext1105
  9254  1182                     __ptext1105:
  9255                           
  9256 ;; *************** function _robotTurn *****************
  9257 ;; Defined at:
  9258 ;;		line 143 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  angle           2    2[BANK0 ] int 
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;		None
  9263 ;; Return value:  Size  Location     Type
  9264 ;;		None               void
  9265 ;; Registers used:
  9266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9272 ;;      Params:         0       2       0       0       0
  9273 ;;      Locals:         0       0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0
  9275 ;;      Totals:         0       2       0       0       0
  9276 ;;Total ram usage:        2 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; Hardware stack levels required when called:    4
  9279 ;; This function calls:
  9280 ;;		_ser_putch
  9281 ;; This function is called by:
  9282 ;;		_robotTurnSpeed
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           psect	text1105
  9286                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9287                           	line	143
  9288                           	global	__size_of_robotTurn
  9289  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  9290                           	
  9291  1182                     _robotTurn:	
  9292                           	opt	stack 1
  9293                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9294                           	line	145
  9295                           	
  9296  1182                     l11533:	
  9297                           ;robot.c: 145: if (angle > 0)
  9298  1182  1283               	bcf	status, 5	;RP0=0, select bank0
  9299  1183  1303               	bcf	status, 6	;RP1=0, select bank0
  9300  1184  0823               	movf	(robotTurn@angle+1),w
  9301  1185  3A80               	xorlw	80h
  9302  1186  00FF               	movwf	btemp+1
  9303  1187  3080               	movlw	(high(01h))^80h
  9304  1188  027F               	subwf	btemp+1,w
  9305  1189  1D03               	skipz
  9306  118A  298D               	goto	u5025
  9307  118B  3001               	movlw	low(01h)
  9308  118C  0222               	subwf	(robotTurn@angle),w
  9309  118D                     u5025:
  9310                           
  9311  118D  1C03               	skipc
  9312  118E  2990               	goto	u5021
  9313  118F  2991               	goto	u5020
  9314  1190                     u5021:
  9315  1190  29B0               	goto	l6109
  9316  1191                     u5020:
  9317                           	line	147
  9318                           	
  9319  1191                     l11535:	
  9320                           ;robot.c: 146: {
  9321                           ;robot.c: 147: ser_putch(137);
  9322  1191  3089               	movlw	(089h)
  9323  1192  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9324                           	line	149
  9325                           ;robot.c: 149: ser_putch(0);
  9326  1197  3000               	movlw	(0)
  9327  1198  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9328                           	line	151
  9329                           ;robot.c: 151: ser_putch(200);
  9330  119D  30C8               	movlw	(0C8h)
  9331  119E  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9332                           	line	153
  9333                           ;robot.c: 153: ser_putch(0);
  9334  11A3  3000               	movlw	(0)
  9335  11A4  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9336                           	line	155
  9337                           ;robot.c: 155: ser_putch(1);
  9338  11A9  3001               	movlw	(01h)
  9339  11AA  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9340                           	line	156
  9341                           ;robot.c: 156: }
  9342  11AF  29F5               	goto	l6113
  9343                           	line	157
  9344                           	
  9345  11B0                     l6109:	
  9346                           ;robot.c: 157: else if (angle < 0)
  9347  11B0  1283               	bcf	status, 5	;RP0=0, select bank0
  9348  11B1  1303               	bcf	status, 6	;RP1=0, select bank0
  9349  11B2  1FA3               	btfss	(robotTurn@angle+1),7
  9350  11B3  29B5               	goto	u5031
  9351  11B4  29B6               	goto	u5030
  9352  11B5                     u5031:
  9353  11B5  29D5               	goto	l11539
  9354  11B6                     u5030:
  9355                           	line	159
  9356                           	
  9357  11B6                     l11537:	
  9358                           ;robot.c: 158: {
  9359                           ;robot.c: 159: ser_putch(137);
  9360  11B6  3089               	movlw	(089h)
  9361  11B7  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9362                           	line	161
  9363                           ;robot.c: 161: ser_putch(0);
  9364  11BC  3000               	movlw	(0)
  9365  11BD  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9366                           	line	163
  9367                           ;robot.c: 163: ser_putch(200);
  9368  11C2  30C8               	movlw	(0C8h)
  9369  11C3  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9370                           	line	165
  9371                           ;robot.c: 165: ser_putch(255);
  9372  11C8  30FF               	movlw	(0FFh)
  9373  11C9  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9374                           	line	167
  9375                           ;robot.c: 167: ser_putch(255);
  9376  11CE  30FF               	movlw	(0FFh)
  9377  11CF  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9378                           	line	168
  9379                           ;robot.c: 168: }
  9380  11D4  29F5               	goto	l6113
  9381                           	line	169
  9382                           	
  9383  11D5                     l6111:	
  9384                           	line	171
  9385                           	
  9386  11D5                     l11539:	
  9387                           ;robot.c: 169: else
  9388                           ;robot.c: 170: {
  9389                           ;robot.c: 171: ser_putch(137);
  9390  11D5  3089               	movlw	(089h)
  9391  11D6  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9392                           	line	173
  9393                           ;robot.c: 173: ser_putch(0);
  9394  11DB  3000               	movlw	(0)
  9395  11DC  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9396                           	line	175
  9397                           ;robot.c: 175: ser_putch(0);
  9398  11E1  3000               	movlw	(0)
  9399  11E2  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9400                           	line	177
  9401                           ;robot.c: 177: ser_putch(0);
  9402  11E7  3000               	movlw	(0)
  9403  11E8  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9404                           	line	179
  9405                           ;robot.c: 179: ser_putch(0);
  9406  11ED  3000               	movlw	(0)
  9407  11EE  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
  9408  11F3  29F5               	goto	l6113
  9409                           	line	180
  9410                           	
  9411  11F4                     l6112:	
  9412  11F4  29F5               	goto	l6113
  9413                           	
  9414  11F5                     l6110:	
  9415                           	line	181
  9416                           	
  9417  11F5                     l6113:	
  9418  11F5  0008               	return
  9419                           	opt stack 0
  9420                           GLOBAL	__end_of_robotTurn
  9421  11F6                     	__end_of_robotTurn:
  9422 ;; =============== function _robotTurn ends ============
  9423                           
  9424                           	signat	_robotTurn,4216
  9425                           	global	_ser_getch
  9426                           psect	text1106,local,class=CODE,delta=2
  9427                           global __ptext1106
  9428  1CC4                     __ptext1106:
  9429                           
  9430 ;; *************** function _ser_getch *****************
  9431 ;; Defined at:
  9432 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;		None
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  c               1    1[BANK0 ] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  1    wreg      unsigned char 
  9439 ;; Registers used:
  9440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9446 ;;      Params:         0       0       0       0       0
  9447 ;;      Locals:         0       1       0       0       0
  9448 ;;      Temps:          0       1       0       0       0
  9449 ;;      Totals:         0       2       0       0       0
  9450 ;;Total ram usage:        2 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:    4
  9453 ;; This function calls:
  9454 ;;		_ser_isrx
  9455 ;; This function is called by:
  9456 ;;		_robot_read
  9457 ;;		_RobotBattRead
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           psect	text1106
  9461                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9462                           	line	55
  9463                           	global	__size_of_ser_getch
  9464  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  9465                           	
  9466  1CC4                     _ser_getch:	
  9467                           	opt	stack 1
  9468                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9469                           	line	58
  9470                           	
  9471  1CC4                     l11517:	
  9472                           ;ser.c: 56: unsigned char c;
  9473                           ;ser.c: 58: while (ser_isrx()==0)
  9474  1CC4  2CC6               	goto	l11519
  9475                           	
  9476  1CC5                     l6910:	
  9477                           	line	59
  9478                           ;ser.c: 59: continue;
  9479  1CC5  2CC6               	goto	l11519
  9480                           	
  9481  1CC6                     l6909:	
  9482                           	line	58
  9483                           	
  9484  1CC6                     l11519:	
  9485  1CC6  160A  158A  23A0   	fcall	_ser_isrx
              160A  158A         
  9486  1CCB  1C03               	btfss	status,0
  9487  1CCC  2CCE               	goto	u5011
  9488  1CCD  2CCF               	goto	u5010
  9489  1CCE                     u5011:
  9490  1CCE  2CC6               	goto	l11519
  9491  1CCF                     u5010:
  9492                           	
  9493  1CCF                     l6911:	
  9494                           	line	61
  9495                           ;ser.c: 61: GIE=0;
  9496  1CCF  138B               	bcf	(95/8),(95)&7
  9497                           	line	62
  9498                           	
  9499  1CD0                     l11521:	
  9500                           ;ser.c: 62: c=rxfifo[rxoptr];
  9501  1CD0  1683               	bsf	status, 5	;RP0=1, select bank1
  9502  1CD1  1303               	bcf	status, 6	;RP1=0, select bank1
  9503  1CD2  0851               	movf	(_rxoptr)^080h,w
  9504  1CD3  3EA0               	addlw	_rxfifo&0ffh
  9505  1CD4  0084               	movwf	fsr0
  9506  1CD5  1783               	bsf	status, 7	;select IRP bank3
  9507  1CD6  0800               	movf	indf,w
  9508  1CD7  1283               	bcf	status, 5	;RP0=0, select bank0
  9509  1CD8  1303               	bcf	status, 6	;RP1=0, select bank0
  9510  1CD9  00A0               	movwf	(??_ser_getch+0)+0
  9511  1CDA  0820               	movf	(??_ser_getch+0)+0,w
  9512  1CDB  00A1               	movwf	(ser_getch@c)
  9513                           	line	63
  9514                           	
  9515  1CDC                     l11523:	
  9516                           ;ser.c: 63: ++rxoptr;
  9517  1CDC  3001               	movlw	(01h)
  9518  1CDD  00A0               	movwf	(??_ser_getch+0)+0
  9519  1CDE  0820               	movf	(??_ser_getch+0)+0,w
  9520  1CDF  1683               	bsf	status, 5	;RP0=1, select bank1
  9521  1CE0  1303               	bcf	status, 6	;RP1=0, select bank1
  9522  1CE1  07D1               	addwf	(_rxoptr)^080h,f	;volatile
  9523                           	line	64
  9524                           	
  9525  1CE2                     l11525:	
  9526                           ;ser.c: 64: rxoptr &= (16-1);
  9527  1CE2  300F               	movlw	(0Fh)
  9528  1CE3  1283               	bcf	status, 5	;RP0=0, select bank0
  9529  1CE4  1303               	bcf	status, 6	;RP1=0, select bank0
  9530  1CE5  00A0               	movwf	(??_ser_getch+0)+0
  9531  1CE6  0820               	movf	(??_ser_getch+0)+0,w
  9532  1CE7  1683               	bsf	status, 5	;RP0=1, select bank1
  9533  1CE8  1303               	bcf	status, 6	;RP1=0, select bank1
  9534  1CE9  05D1               	andwf	(_rxoptr)^080h,f	;volatile
  9535                           	line	65
  9536                           	
  9537  1CEA                     l11527:	
  9538                           ;ser.c: 65: GIE=1;
  9539  1CEA  178B               	bsf	(95/8),(95)&7
  9540                           	line	66
  9541                           	
  9542  1CEB                     l11529:	
  9543                           ;ser.c: 66: return c;
  9544  1CEB  1283               	bcf	status, 5	;RP0=0, select bank0
  9545  1CEC  1303               	bcf	status, 6	;RP1=0, select bank0
  9546  1CED  0821               	movf	(ser_getch@c),w
  9547  1CEE  2CEF               	goto	l6912
  9548                           	
  9549  1CEF                     l11531:	
  9550                           	line	67
  9551                           	
  9552  1CEF                     l6912:	
  9553  1CEF  0008               	return
  9554                           	opt stack 0
  9555                           GLOBAL	__end_of_ser_getch
  9556  1CF0                     	__end_of_ser_getch:
  9557 ;; =============== function _ser_getch ends ============
  9558                           
  9559                           	signat	_ser_getch,89
  9560                           	global	_sprintf
  9561                           psect	text1107,local,class=CODE,delta=2
  9562                           global __ptext1107
  9563  164A                     __ptext1107:
  9564                           
  9565 ;; *************** function _sprintf *****************
  9566 ;; Defined at:
  9567 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;  sp              1    wreg     PTR unsigned char 
  9570 ;;		 -> UpdateDisplay@LCDOutput(16), 
  9571 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  9572 ;;		 -> STR_28(15), STR_27(16), STR_19(5), STR_13(15), 
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  9575 ;;		 -> UpdateDisplay@LCDOutput(16), 
  9576 ;;  _val            4   31[BANK0 ] struct .
  9577 ;;  width           2   36[BANK0 ] int 
  9578 ;;  c               1   38[BANK0 ] char 
  9579 ;;  flag            1   30[BANK0 ] unsigned char 
  9580 ;;  prec            1   29[BANK0 ] char 
  9581 ;;  ap              1   28[BANK0 ] PTR void [1]
  9582 ;;		 -> ?_sprintf(2), 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  2   20[BANK0 ] int 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9592 ;;      Params:         0       5       0       0       0
  9593 ;;      Locals:         0      11       0       0       0
  9594 ;;      Temps:          0       3       0       0       0
  9595 ;;      Totals:         0      19       0       0       0
  9596 ;;Total ram usage:       19 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    4
  9599 ;; This function calls:
  9600 ;;		_isdigit
  9601 ;;		___wmul
  9602 ;;		___lwdiv
  9603 ;;		___lwmod
  9604 ;; This function is called by:
  9605 ;;		_UpdateDisplay
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           psect	text1107
  9609                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  9610                           	line	488
  9611                           	global	__size_of_sprintf
  9612  01B6                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  9613                           	
  9614  164A                     _sprintf:	
  9615                           	opt	stack 1
  9616                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9617                           ;sprintf@sp stored from wreg
  9618                           	line	537
  9619  164A  1283               	bcf	status, 5	;RP0=0, select bank0
  9620  164B  1303               	bcf	status, 6	;RP1=0, select bank0
  9621  164C  00C3               	movwf	(sprintf@sp)
  9622                           	
  9623  164D                     l11427:	
  9624  164D  3035               	movlw	(?_sprintf+01h)&0ffh
  9625  164E  00B9               	movwf	(??_sprintf+0)+0
  9626  164F  0839               	movf	(??_sprintf+0)+0,w
  9627  1650  00BC               	movwf	(sprintf@ap)
  9628                           	line	540
  9629  1651  2FE2               	goto	l11511
  9630                           	
  9631  1652                     l6952:	
  9632                           	line	542
  9633                           	
  9634  1652                     l11429:	
  9635  1652  0846               	movf	(sprintf@c),w
  9636  1653  3A25               	xorlw	025h
  9637  1654  1903               	skipnz
  9638  1655  2E57               	goto	u4861
  9639  1656  2E58               	goto	u4860
  9640  1657                     u4861:
  9641  1657  2E64               	goto	l11435
  9642  1658                     u4860:
  9643                           	line	545
  9644                           	
  9645  1658                     l11431:	
  9646  1658  0846               	movf	(sprintf@c),w
  9647  1659  00B9               	movwf	(??_sprintf+0)+0
  9648  165A  0843               	movf	(sprintf@sp),w
  9649  165B  0084               	movwf	fsr0
  9650  165C  0839               	movf	(??_sprintf+0)+0,w
  9651  165D  1383               	bcf	status, 7	;select IRP bank0
  9652  165E  0080               	movwf	indf
  9653                           	
  9654  165F                     l11433:	
  9655  165F  3001               	movlw	(01h)
  9656  1660  00B9               	movwf	(??_sprintf+0)+0
  9657  1661  0839               	movf	(??_sprintf+0)+0,w
  9658  1662  07C3               	addwf	(sprintf@sp),f
  9659                           	line	546
  9660  1663  2FE2               	goto	l11511
  9661                           	line	547
  9662                           	
  9663  1664                     l6953:	
  9664                           	line	550
  9665                           	
  9666  1664                     l11435:	
  9667  1664  01C4               	clrf	(sprintf@width)
  9668  1665  01C5               	clrf	(sprintf@width+1)
  9669                           	line	552
  9670                           	
  9671  1666                     l11437:	
  9672  1666  01BE               	clrf	(sprintf@flag)
  9673                           	line	601
  9674                           	
  9675  1667                     l11439:	
  9676  1667  0834               	movf	(sprintf@f),w
  9677  1668  0084               	movwf	fsr0
  9678  1669  120A  158A  200A   	fcall	stringdir
              160A  118A         
  9679  166E  160A  158A  2389   	fcall	_isdigit
              160A  118A         
  9680  1673  1C03               	btfss	status,0
  9681  1674  2E76               	goto	u4871
  9682  1675  2E77               	goto	u4870
  9683  1676                     u4871:
  9684  1676  2EC1               	goto	l11451
  9685  1677                     u4870:
  9686                           	line	602
  9687                           	
  9688  1677                     l11441:	
  9689  1677  1283               	bcf	status, 5	;RP0=0, select bank0
  9690  1678  1303               	bcf	status, 6	;RP1=0, select bank0
  9691  1679  01C4               	clrf	(sprintf@width)
  9692  167A  01C5               	clrf	(sprintf@width+1)
  9693  167B  2E7C               	goto	l11443
  9694                           	line	603
  9695                           	
  9696  167C                     l6955:	
  9697                           	line	604
  9698                           	
  9699  167C                     l11443:	
  9700  167C  1283               	bcf	status, 5	;RP0=0, select bank0
  9701  167D  1303               	bcf	status, 6	;RP1=0, select bank0
  9702  167E  0845               	movf	(sprintf@width+1),w
  9703  167F  01A1               	clrf	(?___wmul+1)
  9704  1680  07A1               	addwf	(?___wmul+1)
  9705  1681  0844               	movf	(sprintf@width),w
  9706  1682  01A0               	clrf	(?___wmul)
  9707  1683  07A0               	addwf	(?___wmul)
  9708                           
  9709  1684  300A               	movlw	low(0Ah)
  9710  1685  00A2               	movwf	0+(?___wmul)+02h
  9711  1686  3000               	movlw	high(0Ah)
  9712  1687  00A3               	movwf	(0+(?___wmul)+02h)+1
  9713  1688  160A  158A  2498   	fcall	___wmul
              160A  118A         
  9714  168D  1283               	bcf	status, 5	;RP0=0, select bank0
  9715  168E  1303               	bcf	status, 6	;RP1=0, select bank0
  9716  168F  0834               	movf	(sprintf@f),w
  9717  1690  0084               	movwf	fsr0
  9718  1691  120A  158A  200A   	fcall	stringdir
              160A  118A         
  9719  1696  0720               	addwf	(0+(?___wmul)),w
  9720  1697  00B9               	movwf	(??_sprintf+0)+0
  9721  1698  3000               	movlw	0
  9722  1699  1803               	skipnc
  9723  169A  3001               	movlw	1
  9724  169B  0721               	addwf	(1+(?___wmul)),w
  9725  169C  00BA               	movwf	1+(??_sprintf+0)+0
  9726  169D  0839               	movf	0+(??_sprintf+0)+0,w
  9727  169E  3ED0               	addlw	low(0FFD0h)
  9728  169F  00C4               	movwf	(sprintf@width)
  9729  16A0  083A               	movf	1+(??_sprintf+0)+0,w
  9730  16A1  1803               	skipnc
  9731  16A2  3E01               	addlw	1
  9732  16A3  3EFF               	addlw	high(0FFD0h)
  9733  16A4  00C5               	movwf	1+(sprintf@width)
  9734                           	
  9735  16A5                     l11445:	
  9736  16A5  3001               	movlw	(01h)
  9737  16A6  00B9               	movwf	(??_sprintf+0)+0
  9738  16A7  0839               	movf	(??_sprintf+0)+0,w
  9739  16A8  07B4               	addwf	(sprintf@f),f
  9740                           	line	605
  9741                           	
  9742  16A9                     l11447:	
  9743  16A9  0834               	movf	(sprintf@f),w
  9744  16AA  0084               	movwf	fsr0
  9745  16AB  120A  158A  200A   	fcall	stringdir
              160A  118A         
  9746  16B0  160A  158A  2389   	fcall	_isdigit
              160A  118A         
  9747  16B5  1803               	btfsc	status,0
  9748  16B6  2EB8               	goto	u4881
  9749  16B7  2EB9               	goto	u4880
  9750  16B8                     u4881:
  9751  16B8  2E7C               	goto	l11443
  9752  16B9                     u4880:
  9753  16B9  2EC1               	goto	l11451
  9754                           	
  9755  16BA                     l6956:	
  9756  16BA  2EC1               	goto	l11451
  9757                           	line	611
  9758                           	
  9759  16BB                     l6954:	
  9760                           	line	638
  9761  16BB  2EC1               	goto	l11451
  9762                           	line	640
  9763                           	
  9764  16BC                     l6958:	
  9765                           	line	641
  9766  16BC  2FF8               	goto	l11513
  9767                           	line	700
  9768                           	
  9769  16BD                     l6960:	
  9770  16BD  2ED8               	goto	l11453
  9771                           	line	701
  9772                           	
  9773  16BE                     l6961:	
  9774                           	line	702
  9775  16BE  2ED8               	goto	l11453
  9776                           	line	805
  9777                           	
  9778  16BF                     l6963:	
  9779                           	line	816
  9780  16BF  2FE2               	goto	l11511
  9781                           	line	825
  9782                           	
  9783  16C0                     l11449:	
  9784  16C0  2ED8               	goto	l11453
  9785                           	line	638
  9786                           	
  9787  16C1                     l6957:	
  9788                           	
  9789  16C1                     l11451:	
  9790  16C1  3001               	movlw	01h
  9791  16C2  1283               	bcf	status, 5	;RP0=0, select bank0
  9792  16C3  1303               	bcf	status, 6	;RP1=0, select bank0
  9793  16C4  07B4               	addwf	(sprintf@f),f
  9794  16C5  30FF               	movlw	-01h
  9795  16C6  0734               	addwf	(sprintf@f),w
  9796  16C7  0084               	movwf	fsr0
  9797  16C8  120A  158A  200A   	fcall	stringdir
              160A  118A         
  9798  16CD  00C6               	movwf	(sprintf@c)
  9799                           	; Switch size 1, requested type "space"
  9800                           ; Number of cases is 3, Range of values is 0 to 105
  9801                           ; switch strategies available:
  9802                           ; Name         Instructions Cycles
  9803                           ; simple_byte           10     6 (average)
  9804                           ; jumptable            260     6 (fixed)
  9805                           ; rangetable           110     6 (fixed)
  9806                           ; spacedrange          218     9 (fixed)
  9807                           ; locatedrange         106     3 (fixed)
  9808                           ;	Chosen strategy is simple_byte
  9809                           
  9810                           	opt asmopt_off
  9811  16CE  3A00               	xorlw	0^0	; case 0
  9812  16CF  1903               	skipnz
  9813  16D0  2FF8               	goto	l11513
  9814  16D1  3A64               	xorlw	100^0	; case 100
  9815  16D2  1903               	skipnz
  9816  16D3  2ED8               	goto	l11453
  9817  16D4  3A0D               	xorlw	105^100	; case 105
  9818  16D5  1903               	skipnz
  9819  16D6  2ED8               	goto	l11453
  9820  16D7  2FE2               	goto	l11511
  9821                           	opt asmopt_on
  9822                           
  9823                           	line	825
  9824                           	
  9825  16D8                     l6962:	
  9826                           	line	1254
  9827                           	
  9828  16D8                     l11453:	
  9829  16D8  1283               	bcf	status, 5	;RP0=0, select bank0
  9830  16D9  1303               	bcf	status, 6	;RP1=0, select bank0
  9831  16DA  083C               	movf	(sprintf@ap),w
  9832  16DB  0084               	movwf	fsr0
  9833  16DC  1383               	bcf	status, 7	;select IRP bank0
  9834  16DD  0800               	movf	indf,w
  9835  16DE  00BF               	movwf	(sprintf@_val)
  9836  16DF  0A84               	incf	fsr0,f
  9837  16E0  0800               	movf	indf,w
  9838  16E1  00C0               	movwf	(sprintf@_val+1)
  9839                           	
  9840  16E2                     l11455:	
  9841  16E2  3002               	movlw	(02h)
  9842  16E3  00B9               	movwf	(??_sprintf+0)+0
  9843  16E4  0839               	movf	(??_sprintf+0)+0,w
  9844  16E5  07BC               	addwf	(sprintf@ap),f
  9845                           	line	1256
  9846                           	
  9847  16E6                     l11457:	
  9848  16E6  1FC0               	btfss	(sprintf@_val+1),7
  9849  16E7  2EE9               	goto	u4891
  9850  16E8  2EEA               	goto	u4890
  9851  16E9                     u4891:
  9852  16E9  2EF4               	goto	l11463
  9853  16EA                     u4890:
  9854                           	line	1257
  9855                           	
  9856  16EA                     l11459:	
  9857  16EA  3003               	movlw	(03h)
  9858  16EB  00B9               	movwf	(??_sprintf+0)+0
  9859  16EC  0839               	movf	(??_sprintf+0)+0,w
  9860  16ED  04BE               	iorwf	(sprintf@flag),f
  9861                           	line	1258
  9862                           	
  9863  16EE                     l11461:	
  9864  16EE  09BF               	comf	(sprintf@_val),f
  9865  16EF  09C0               	comf	(sprintf@_val+1),f
  9866  16F0  0ABF               	incf	(sprintf@_val),f
  9867  16F1  1903               	skipnz
  9868  16F2  0AC0               	incf	(sprintf@_val+1),f
  9869  16F3  2EF4               	goto	l11463
  9870                           	line	1259
  9871                           	
  9872  16F4                     l6964:	
  9873                           	line	1300
  9874                           	
  9875  16F4                     l11463:	
  9876  16F4  01C6               	clrf	(sprintf@c)
  9877  16F5  1403               	bsf	status,0
  9878  16F6  0DC6               	rlf	(sprintf@c),f
  9879                           	
  9880  16F7                     l11465:	
  9881  16F7  0846               	movf	(sprintf@c),w
  9882  16F8  3A05               	xorlw	05h
  9883  16F9  1D03               	skipz
  9884  16FA  2EFC               	goto	u4901
  9885  16FB  2EFD               	goto	u4900
  9886  16FC                     u4901:
  9887  16FC  2EFF               	goto	l11469
  9888  16FD                     u4900:
  9889  16FD  2F27               	goto	l11477
  9890                           	
  9891  16FE                     l11467:	
  9892  16FE  2F27               	goto	l11477
  9893                           	line	1301
  9894                           	
  9895  16FF                     l6965:	
  9896                           	
  9897  16FF                     l11469:	
  9898  16FF  0846               	movf	(sprintf@c),w
  9899  1700  00B9               	movwf	(??_sprintf+0)+0
  9900  1701  0739               	addwf	(??_sprintf+0)+0,w
  9901  1702  3E01               	addlw	low((_dpowers-__stringbase))
  9902  1703  0084               	movwf	fsr0
  9903  1704  120A  158A  200A   	fcall	stringdir
              160A  118A         
  9904  1709  00BA               	movwf	(??_sprintf+1)+0
  9905  170A  120A  158A  200A   	fcall	stringdir
              160A  118A         
  9906  170F  00BB               	movwf	(??_sprintf+1)+0+1
  9907  1710  083B               	movf	1+(??_sprintf+1)+0,w
  9908  1711  0240               	subwf	(sprintf@_val+1),w
  9909  1712  1D03               	skipz
  9910  1713  2F16               	goto	u4915
  9911  1714  083A               	movf	0+(??_sprintf+1)+0,w
  9912  1715  023F               	subwf	(sprintf@_val),w
  9913  1716                     u4915:
  9914  1716  1803               	skipnc
  9915  1717  2F19               	goto	u4911
  9916  1718  2F1A               	goto	u4910
  9917  1719                     u4911:
  9918  1719  2F1C               	goto	l11473
  9919  171A                     u4910:
  9920  171A  2F27               	goto	l11477
  9921                           	line	1302
  9922                           	
  9923  171B                     l11471:	
  9924  171B  2F27               	goto	l11477
  9925                           	
  9926  171C                     l6967:	
  9927                           	line	1300
  9928                           	
  9929  171C                     l11473:	
  9930  171C  3001               	movlw	(01h)
  9931  171D  00B9               	movwf	(??_sprintf+0)+0
  9932  171E  0839               	movf	(??_sprintf+0)+0,w
  9933  171F  07C6               	addwf	(sprintf@c),f
  9934                           	
  9935  1720                     l11475:	
  9936  1720  0846               	movf	(sprintf@c),w
  9937  1721  3A05               	xorlw	05h
  9938  1722  1D03               	skipz
  9939  1723  2F25               	goto	u4921
  9940  1724  2F26               	goto	u4920
  9941  1725                     u4921:
  9942  1725  2EFF               	goto	l11469
  9943  1726                     u4920:
  9944  1726  2F27               	goto	l11477
  9945                           	
  9946  1727                     l6966:	
  9947                           	line	1340
  9948                           	
  9949  1727                     l11477:	
  9950  1727  0845               	movf	(sprintf@width+1),w
  9951  1728  0444               	iorwf	(sprintf@width),w
  9952  1729  1903               	skipnz
  9953  172A  2F2C               	goto	u4931
  9954  172B  2F2D               	goto	u4930
  9955  172C                     u4931:
  9956  172C  2F39               	goto	l6968
  9957  172D                     u4930:
  9958                           	
  9959  172D                     l11479:	
  9960  172D  083E               	movf	(sprintf@flag),w
  9961  172E  3903               	andlw	03h
  9962  172F  1903               	btfsc	status,2
  9963  1730  2F32               	goto	u4941
  9964  1731  2F33               	goto	u4940
  9965  1732                     u4941:
  9966  1732  2F39               	goto	l6968
  9967  1733                     u4940:
  9968                           	line	1341
  9969                           	
  9970  1733                     l11481:	
  9971  1733  30FF               	movlw	low(-1)
  9972  1734  07C4               	addwf	(sprintf@width),f
  9973  1735  1803               	skipnc
  9974  1736  0AC5               	incf	(sprintf@width+1),f
  9975  1737  30FF               	movlw	high(-1)
  9976  1738  07C5               	addwf	(sprintf@width+1),f
  9977                           	
  9978  1739                     l6968:	
  9979                           	line	1376
  9980  1739  0846               	movf	(sprintf@c),w
  9981  173A  00B9               	movwf	(??_sprintf+0)+0
  9982  173B  01BA               	clrf	(??_sprintf+0)+0+1
  9983  173C  1BB9               	btfsc	(??_sprintf+0)+0,7
  9984  173D  03BA               	decf	(??_sprintf+0)+0+1,f
  9985  173E  083A               	movf	1+(??_sprintf+0)+0,w
  9986  173F  3A80               	xorlw	80h
  9987  1740  00BB               	movwf	(??_sprintf+2)+0
  9988  1741  0845               	movf	(sprintf@width+1),w
  9989  1742  3A80               	xorlw	80h
  9990  1743  023B               	subwf	(??_sprintf+2)+0,w
  9991  1744  1D03               	skipz
  9992  1745  2F48               	goto	u4955
  9993  1746  0844               	movf	(sprintf@width),w
  9994  1747  0239               	subwf	0+(??_sprintf+0)+0,w
  9995  1748                     u4955:
  9996                           
  9997  1748  1803               	skipnc
  9998  1749  2F4B               	goto	u4951
  9999  174A  2F4C               	goto	u4950
 10000  174B                     u4951:
 10001  174B  2F5A               	goto	l11485
 10002  174C                     u4950:
 10003                           	line	1377
 10004                           	
 10005  174C                     l11483:	
 10006  174C  1283               	bcf	status, 5	;RP0=0, select bank0
 10007  174D  1303               	bcf	status, 6	;RP1=0, select bank0
 10008  174E  0846               	movf	(sprintf@c),w
 10009  174F  00B9               	movwf	(??_sprintf+0)+0
 10010  1750  01BA               	clrf	(??_sprintf+0)+0+1
 10011  1751  1BB9               	btfsc	(??_sprintf+0)+0,7
 10012  1752  03BA               	decf	(??_sprintf+0)+0+1,f
 10013  1753  0839               	movf	0+(??_sprintf+0)+0,w
 10014  1754  02C4               	subwf	(sprintf@width),f
 10015  1755  083A               	movf	1+(??_sprintf+0)+0,w
 10016  1756  1C03               	skipc
 10017  1757  03C5               	decf	(sprintf@width+1),f
 10018  1758  02C5               	subwf	(sprintf@width+1),f
 10019  1759  2F5F               	goto	l11487
 10020                           	line	1378
 10021                           	
 10022  175A                     l6969:	
 10023                           	line	1379
 10024                           	
 10025  175A                     l11485:	
 10026  175A  1283               	bcf	status, 5	;RP0=0, select bank0
 10027  175B  1303               	bcf	status, 6	;RP1=0, select bank0
 10028  175C  01C4               	clrf	(sprintf@width)
 10029  175D  01C5               	clrf	(sprintf@width+1)
 10030  175E  2F5F               	goto	l11487
 10031                           	
 10032  175F                     l6970:	
 10033                           	line	1423
 10034                           	
 10035  175F                     l11487:	
 10036  175F  0845               	movf	(sprintf@width+1),w
 10037  1760  0444               	iorwf	(sprintf@width),w
 10038  1761  1903               	skipnz
 10039  1762  2F64               	goto	u4961
 10040  1763  2F65               	goto	u4960
 10041  1764                     u4961:
 10042  1764  2F7F               	goto	l11495
 10043  1765                     u4960:
 10044  1765  2F66               	goto	l11489
 10045                           	line	1424
 10046                           	
 10047  1766                     l6972:	
 10048                           	line	1425
 10049                           	
 10050  1766                     l11489:	
 10051  1766  3020               	movlw	(020h)
 10052  1767  00B9               	movwf	(??_sprintf+0)+0
 10053  1768  0843               	movf	(sprintf@sp),w
 10054  1769  0084               	movwf	fsr0
 10055  176A  0839               	movf	(??_sprintf+0)+0,w
 10056  176B  1383               	bcf	status, 7	;select IRP bank0
 10057  176C  0080               	movwf	indf
 10058                           	
 10059  176D                     l11491:	
 10060  176D  3001               	movlw	(01h)
 10061  176E  00B9               	movwf	(??_sprintf+0)+0
 10062  176F  0839               	movf	(??_sprintf+0)+0,w
 10063  1770  07C3               	addwf	(sprintf@sp),f
 10064                           	line	1426
 10065                           	
 10066  1771                     l11493:	
 10067  1771  30FF               	movlw	low(-1)
 10068  1772  07C4               	addwf	(sprintf@width),f
 10069  1773  1803               	skipnc
 10070  1774  0AC5               	incf	(sprintf@width+1),f
 10071  1775  30FF               	movlw	high(-1)
 10072  1776  07C5               	addwf	(sprintf@width+1),f
 10073  1777  0845               	movf	(((sprintf@width+1))),w
 10074  1778  0444               	iorwf	(((sprintf@width))),w
 10075  1779  1D03               	skipz
 10076  177A  2F7C               	goto	u4971
 10077  177B  2F7D               	goto	u4970
 10078  177C                     u4971:
 10079  177C  2F66               	goto	l11489
 10080  177D                     u4970:
 10081  177D  2F7F               	goto	l11495
 10082                           	
 10083  177E                     l6973:	
 10084  177E  2F7F               	goto	l11495
 10085                           	
 10086  177F                     l6971:	
 10087                           	line	1433
 10088                           	
 10089  177F                     l11495:	
 10090  177F  083E               	movf	(sprintf@flag),w
 10091  1780  3903               	andlw	03h
 10092  1781  1903               	btfsc	status,2
 10093  1782  2F84               	goto	u4981
 10094  1783  2F85               	goto	u4980
 10095  1784                     u4981:
 10096  1784  2F91               	goto	l11501
 10097  1785                     u4980:
 10098                           	line	1434
 10099                           	
 10100  1785                     l11497:	
 10101  1785  302D               	movlw	(02Dh)
 10102  1786  00B9               	movwf	(??_sprintf+0)+0
 10103  1787  0843               	movf	(sprintf@sp),w
 10104  1788  0084               	movwf	fsr0
 10105  1789  0839               	movf	(??_sprintf+0)+0,w
 10106  178A  1383               	bcf	status, 7	;select IRP bank0
 10107  178B  0080               	movwf	indf
 10108                           	
 10109  178C                     l11499:	
 10110  178C  3001               	movlw	(01h)
 10111  178D  00B9               	movwf	(??_sprintf+0)+0
 10112  178E  0839               	movf	(??_sprintf+0)+0,w
 10113  178F  07C3               	addwf	(sprintf@sp),f
 10114  1790  2F91               	goto	l11501
 10115                           	
 10116  1791                     l6974:	
 10117                           	line	1467
 10118                           	
 10119  1791                     l11501:	
 10120  1791  0846               	movf	(sprintf@c),w
 10121  1792  00B9               	movwf	(??_sprintf+0)+0
 10122  1793  0839               	movf	(??_sprintf+0)+0,w
 10123  1794  00BD               	movwf	(sprintf@prec)
 10124                           	line	1469
 10125  1795  2FD6               	goto	l11509
 10126                           	
 10127  1796                     l6976:	
 10128                           	line	1484
 10129                           	
 10130  1796                     l11503:	
 10131  1796  300A               	movlw	low(0Ah)
 10132  1797  00AE               	movwf	(?___lwmod)
 10133  1798  3000               	movlw	high(0Ah)
 10134  1799  00AF               	movwf	((?___lwmod))+1
 10135  179A  083D               	movf	(sprintf@prec),w
 10136  179B  00B9               	movwf	(??_sprintf+0)+0
 10137  179C  0739               	addwf	(??_sprintf+0)+0,w
 10138  179D  3E01               	addlw	low((_dpowers-__stringbase))
 10139  179E  0084               	movwf	fsr0
 10140  179F  120A  158A  200A   	fcall	stringdir
              160A  118A         
 10141  17A4  00A6               	movwf	(?___lwdiv)
 10142  17A5  120A  158A  200A   	fcall	stringdir
              160A  118A         
 10143  17AA  00A7               	movwf	(?___lwdiv+1)
 10144  17AB  0840               	movf	(sprintf@_val+1),w
 10145  17AC  01A9               	clrf	1+(?___lwdiv)+02h
 10146  17AD  07A9               	addwf	1+(?___lwdiv)+02h
 10147  17AE  083F               	movf	(sprintf@_val),w
 10148  17AF  01A8               	clrf	0+(?___lwdiv)+02h
 10149  17B0  07A8               	addwf	0+(?___lwdiv)+02h
 10150                           
 10151  17B1  160A  158A  26FB   	fcall	___lwdiv
              160A  118A         
 10152  17B6  1283               	bcf	status, 5	;RP0=0, select bank0
 10153  17B7  1303               	bcf	status, 6	;RP1=0, select bank0
 10154  17B8  0827               	movf	(1+(?___lwdiv)),w
 10155  17B9  01B1               	clrf	1+(?___lwmod)+02h
 10156  17BA  07B1               	addwf	1+(?___lwmod)+02h
 10157  17BB  0826               	movf	(0+(?___lwdiv)),w
 10158  17BC  01B0               	clrf	0+(?___lwmod)+02h
 10159  17BD  07B0               	addwf	0+(?___lwmod)+02h
 10160                           
 10161  17BE  160A  158A  2621   	fcall	___lwmod
              160A  118A         
 10162  17C3  1283               	bcf	status, 5	;RP0=0, select bank0
 10163  17C4  1303               	bcf	status, 6	;RP1=0, select bank0
 10164  17C5  082E               	movf	(0+(?___lwmod)),w
 10165  17C6  3E30               	addlw	030h
 10166  17C7  00BA               	movwf	(??_sprintf+1)+0
 10167  17C8  083A               	movf	(??_sprintf+1)+0,w
 10168  17C9  00C6               	movwf	(sprintf@c)
 10169                           	line	1516
 10170                           	
 10171  17CA                     l11505:	
 10172  17CA  0846               	movf	(sprintf@c),w
 10173  17CB  00B9               	movwf	(??_sprintf+0)+0
 10174  17CC  0843               	movf	(sprintf@sp),w
 10175  17CD  0084               	movwf	fsr0
 10176  17CE  0839               	movf	(??_sprintf+0)+0,w
 10177  17CF  1383               	bcf	status, 7	;select IRP bank0
 10178  17D0  0080               	movwf	indf
 10179                           	
 10180  17D1                     l11507:	
 10181  17D1  3001               	movlw	(01h)
 10182  17D2  00B9               	movwf	(??_sprintf+0)+0
 10183  17D3  0839               	movf	(??_sprintf+0)+0,w
 10184  17D4  07C3               	addwf	(sprintf@sp),f
 10185  17D5  2FD6               	goto	l11509
 10186                           	line	1517
 10187                           	
 10188  17D6                     l6975:	
 10189                           	line	1469
 10190                           	
 10191  17D6                     l11509:	
 10192  17D6  30FF               	movlw	(-1)
 10193  17D7  00B9               	movwf	(??_sprintf+0)+0
 10194  17D8  0839               	movf	(??_sprintf+0)+0,w
 10195  17D9  07BD               	addwf	(sprintf@prec),f
 10196  17DA  083D               	movf	((sprintf@prec)),w
 10197  17DB  3AFF               	xorlw	-1
 10198  17DC  1D03               	skipz
 10199  17DD  2FDF               	goto	u4991
 10200  17DE  2FE0               	goto	u4990
 10201  17DF                     u4991:
 10202  17DF  2F96               	goto	l11503
 10203  17E0                     u4990:
 10204  17E0  2FE2               	goto	l11511
 10205                           	
 10206  17E1                     l6977:	
 10207  17E1  2FE2               	goto	l11511
 10208                           	line	1525
 10209                           	
 10210  17E2                     l6951:	
 10211                           	line	540
 10212                           	
 10213  17E2                     l11511:	
 10214  17E2  3001               	movlw	01h
 10215  17E3  1283               	bcf	status, 5	;RP0=0, select bank0
 10216  17E4  1303               	bcf	status, 6	;RP1=0, select bank0
 10217  17E5  07B4               	addwf	(sprintf@f),f
 10218  17E6  30FF               	movlw	-01h
 10219  17E7  0734               	addwf	(sprintf@f),w
 10220  17E8  0084               	movwf	fsr0
 10221  17E9  120A  158A  200A   	fcall	stringdir
              160A  118A         
 10222  17EE  00B9               	movwf	(??_sprintf+0)+0
 10223  17EF  0839               	movf	(??_sprintf+0)+0,w
 10224  17F0  00C6               	movwf	(sprintf@c)
 10225  17F1  08C6               	movf	((sprintf@c)),f
 10226  17F2  1D03               	skipz
 10227  17F3  2FF5               	goto	u5001
 10228  17F4  2FF6               	goto	u5000
 10229  17F5                     u5001:
 10230  17F5  2E52               	goto	l11429
 10231  17F6                     u5000:
 10232  17F6  2FF8               	goto	l11513
 10233                           	
 10234  17F7                     l6978:	
 10235  17F7  2FF8               	goto	l11513
 10236                           	line	1527
 10237                           	
 10238  17F8                     l6959:	
 10239                           	line	1530
 10240                           	
 10241  17F8                     l11513:	
 10242  17F8  1283               	bcf	status, 5	;RP0=0, select bank0
 10243  17F9  1303               	bcf	status, 6	;RP1=0, select bank0
 10244  17FA  0843               	movf	(sprintf@sp),w
 10245  17FB  0084               	movwf	fsr0
 10246  17FC  1383               	bcf	status, 7	;select IRP bank0
 10247  17FD  0180               	clrf	indf
 10248  17FE  2FFF               	goto	l6979
 10249                           	line	1532
 10250                           	
 10251  17FF                     l11515:	
 10252                           	line	1533
 10253                           ;	Return value of _sprintf is never used
 10254                           	
 10255  17FF                     l6979:	
 10256  17FF  0008               	return
 10257                           	opt stack 0
 10258                           GLOBAL	__end_of_sprintf
 10259  1800                     	__end_of_sprintf:
 10260 ;; =============== function _sprintf ends ============
 10261                           
 10262                           	signat	_sprintf,4698
 10263                           	global	_ADCconvert
 10264                           psect	text1108,local,class=CODE,delta=2
 10265                           global __ptext1108
 10266  0B2A                     __ptext1108:
 10267                           
 10268 ;; *************** function _ADCconvert *****************
 10269 ;; Defined at:
 10270 ;;		line 89 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;		None               void
 10277 ;; Registers used:
 10278 ;;		wreg, status,2, status,0, pclath, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10284 ;;      Params:         0       0       0       0       0
 10285 ;;      Locals:         0       0       0       0       0
 10286 ;;      Temps:          0       2       0       0       0
 10287 ;;      Totals:         0       2       0       0       0
 10288 ;;Total ram usage:        2 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:    4
 10291 ;; This function calls:
 10292 ;;		___wmul
 10293 ;;		___lwdiv
 10294 ;; This function is called by:
 10295 ;;		_readAvgDistance
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           psect	text1108
 10299                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
 10300                           	line	89
 10301                           	global	__size_of_ADCconvert
 10302  0263                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
 10303                           	
 10304  0B2A                     _ADCconvert:	
 10305                           	opt	stack 1
 10306                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
 10307                           	line	95
 10308                           	
 10309  0B2A                     l11385:	
 10310                           ;infrared.c: 95: if (adcVal >= 213 && adcVal < 234)
 10311  0B2A  3000               	movlw	high(0D5h)
 10312  0B2B  1683               	bsf	status, 5	;RP0=1, select bank1
 10313  0B2C  1303               	bcf	status, 6	;RP1=0, select bank1
 10314  0B2D  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10315  0B2E  30D5               	movlw	low(0D5h)
 10316  0B2F  1903               	skipnz
 10317  0B30  022E               	subwf	(_adcVal)^080h,w	;volatile
 10318  0B31  1C03               	skipc
 10319  0B32  2B34               	goto	u4721
 10320  0B33  2B35               	goto	u4720
 10321  0B34                     u4721:
 10322  0B34  2B82               	goto	l11391
 10323  0B35                     u4720:
 10324                           	
 10325  0B35                     l11387:	
 10326  0B35  3000               	movlw	high(0EAh)
 10327  0B36  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10328  0B37  30EA               	movlw	low(0EAh)
 10329  0B38  1903               	skipnz
 10330  0B39  022E               	subwf	(_adcVal)^080h,w	;volatile
 10331  0B3A  1803               	skipnc
 10332  0B3B  2B3D               	goto	u4731
 10333  0B3C  2B3E               	goto	u4730
 10334  0B3D                     u4731:
 10335  0B3D  2B82               	goto	l11391
 10336  0B3E                     u4730:
 10337                           	line	97
 10338                           	
 10339  0B3E                     l11389:	
 10340                           ;infrared.c: 96: {
 10341                           ;infrared.c: 97: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
 10342  0B3E  3015               	movlw	low(015h)
 10343  0B3F  1283               	bcf	status, 5	;RP0=0, select bank0
 10344  0B40  1303               	bcf	status, 6	;RP1=0, select bank0
 10345  0B41  00A6               	movwf	(?___lwdiv)
 10346  0B42  3000               	movlw	high(015h)
 10347  0B43  00A7               	movwf	((?___lwdiv))+1
 10348  0B44  1683               	bsf	status, 5	;RP0=1, select bank1
 10349  0B45  1303               	bcf	status, 6	;RP1=0, select bank1
 10350  0B46  092E               	comf	(_adcVal)^080h,w	;volatile
 10351  0B47  1283               	bcf	status, 5	;RP0=0, select bank0
 10352  0B48  1303               	bcf	status, 6	;RP1=0, select bank0
 10353  0B49  00AE               	movwf	(??_ADCconvert+0)+0
 10354  0B4A  1683               	bsf	status, 5	;RP0=1, select bank1
 10355  0B4B  1303               	bcf	status, 6	;RP1=0, select bank1
 10356  0B4C  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10357  0B4D  1283               	bcf	status, 5	;RP0=0, select bank0
 10358  0B4E  1303               	bcf	status, 6	;RP1=0, select bank0
 10359  0B4F  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10360  0B50  0AAE               	incf	(??_ADCconvert+0)+0,f
 10361  0B51  1903               	skipnz
 10362  0B52  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10363  0B53  082E               	movf	0+(??_ADCconvert+0)+0,w
 10364  0B54  3EEA               	addlw	low(0EAh)
 10365  0B55  00A0               	movwf	(?___wmul)
 10366  0B56  082F               	movf	1+(??_ADCconvert+0)+0,w
 10367  0B57  1803               	skipnc
 10368  0B58  3E01               	addlw	1
 10369  0B59  3E00               	addlw	high(0EAh)
 10370  0B5A  00A1               	movwf	1+(?___wmul)
 10371  0B5B  3005               	movlw	low(05h)
 10372  0B5C  00A2               	movwf	0+(?___wmul)+02h
 10373  0B5D  3000               	movlw	high(05h)
 10374  0B5E  00A3               	movwf	(0+(?___wmul)+02h)+1
 10375  0B5F  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10376  0B64  1283               	bcf	status, 5	;RP0=0, select bank0
 10377  0B65  1303               	bcf	status, 6	;RP1=0, select bank0
 10378  0B66  0821               	movf	(1+(?___wmul)),w
 10379  0B67  01A9               	clrf	1+(?___lwdiv)+02h
 10380  0B68  07A9               	addwf	1+(?___lwdiv)+02h
 10381  0B69  0820               	movf	(0+(?___wmul)),w
 10382  0B6A  01A8               	clrf	0+(?___lwdiv)+02h
 10383  0B6B  07A8               	addwf	0+(?___lwdiv)+02h
 10384                           
 10385  0B6C  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10386  0B71  1283               	bcf	status, 5	;RP0=0, select bank0
 10387  0B72  1303               	bcf	status, 6	;RP1=0, select bank0
 10388  0B73  0826               	movf	(0+(?___lwdiv)),w
 10389  0B74  3E0F               	addlw	low(0Fh)
 10390  0B75  1683               	bsf	status, 5	;RP0=1, select bank1
 10391  0B76  1303               	bcf	status, 6	;RP1=0, select bank1
 10392  0B77  00A8               	movwf	(_IRdistance)^080h	;volatile
 10393  0B78  1283               	bcf	status, 5	;RP0=0, select bank0
 10394  0B79  1303               	bcf	status, 6	;RP1=0, select bank0
 10395  0B7A  0827               	movf	(1+(?___lwdiv)),w
 10396  0B7B  1803               	skipnc
 10397  0B7C  3E01               	addlw	1
 10398  0B7D  3E00               	addlw	high(0Fh)
 10399  0B7E  1683               	bsf	status, 5	;RP0=1, select bank1
 10400  0B7F  1303               	bcf	status, 6	;RP1=0, select bank1
 10401  0B80  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10402                           	line	98
 10403                           ;infrared.c: 98: }
 10404  0B81  2D8C               	goto	l3046
 10405                           	line	99
 10406                           	
 10407  0B82                     l3033:	
 10408                           	
 10409  0B82                     l11391:	
 10410                           ;infrared.c: 99: else if (adcVal >= 170 && adcVal < 213)
 10411  0B82  3000               	movlw	high(0AAh)
 10412  0B83  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10413  0B84  30AA               	movlw	low(0AAh)
 10414  0B85  1903               	skipnz
 10415  0B86  022E               	subwf	(_adcVal)^080h,w	;volatile
 10416  0B87  1C03               	skipc
 10417  0B88  2B8A               	goto	u4741
 10418  0B89  2B8B               	goto	u4740
 10419  0B8A                     u4741:
 10420  0B8A  2BD8               	goto	l11397
 10421  0B8B                     u4740:
 10422                           	
 10423  0B8B                     l11393:	
 10424  0B8B  3000               	movlw	high(0D5h)
 10425  0B8C  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10426  0B8D  30D5               	movlw	low(0D5h)
 10427  0B8E  1903               	skipnz
 10428  0B8F  022E               	subwf	(_adcVal)^080h,w	;volatile
 10429  0B90  1803               	skipnc
 10430  0B91  2B93               	goto	u4751
 10431  0B92  2B94               	goto	u4750
 10432  0B93                     u4751:
 10433  0B93  2BD8               	goto	l11397
 10434  0B94                     u4750:
 10435                           	line	101
 10436                           	
 10437  0B94                     l11395:	
 10438                           ;infrared.c: 100: {
 10439                           ;infrared.c: 101: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
 10440  0B94  302B               	movlw	low(02Bh)
 10441  0B95  1283               	bcf	status, 5	;RP0=0, select bank0
 10442  0B96  1303               	bcf	status, 6	;RP1=0, select bank0
 10443  0B97  00A6               	movwf	(?___lwdiv)
 10444  0B98  3000               	movlw	high(02Bh)
 10445  0B99  00A7               	movwf	((?___lwdiv))+1
 10446  0B9A  1683               	bsf	status, 5	;RP0=1, select bank1
 10447  0B9B  1303               	bcf	status, 6	;RP1=0, select bank1
 10448  0B9C  092E               	comf	(_adcVal)^080h,w	;volatile
 10449  0B9D  1283               	bcf	status, 5	;RP0=0, select bank0
 10450  0B9E  1303               	bcf	status, 6	;RP1=0, select bank0
 10451  0B9F  00AE               	movwf	(??_ADCconvert+0)+0
 10452  0BA0  1683               	bsf	status, 5	;RP0=1, select bank1
 10453  0BA1  1303               	bcf	status, 6	;RP1=0, select bank1
 10454  0BA2  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10455  0BA3  1283               	bcf	status, 5	;RP0=0, select bank0
 10456  0BA4  1303               	bcf	status, 6	;RP1=0, select bank0
 10457  0BA5  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10458  0BA6  0AAE               	incf	(??_ADCconvert+0)+0,f
 10459  0BA7  1903               	skipnz
 10460  0BA8  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10461  0BA9  082E               	movf	0+(??_ADCconvert+0)+0,w
 10462  0BAA  3ED5               	addlw	low(0D5h)
 10463  0BAB  00A0               	movwf	(?___wmul)
 10464  0BAC  082F               	movf	1+(??_ADCconvert+0)+0,w
 10465  0BAD  1803               	skipnc
 10466  0BAE  3E01               	addlw	1
 10467  0BAF  3E00               	addlw	high(0D5h)
 10468  0BB0  00A1               	movwf	1+(?___wmul)
 10469  0BB1  300A               	movlw	low(0Ah)
 10470  0BB2  00A2               	movwf	0+(?___wmul)+02h
 10471  0BB3  3000               	movlw	high(0Ah)
 10472  0BB4  00A3               	movwf	(0+(?___wmul)+02h)+1
 10473  0BB5  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10474  0BBA  1283               	bcf	status, 5	;RP0=0, select bank0
 10475  0BBB  1303               	bcf	status, 6	;RP1=0, select bank0
 10476  0BBC  0821               	movf	(1+(?___wmul)),w
 10477  0BBD  01A9               	clrf	1+(?___lwdiv)+02h
 10478  0BBE  07A9               	addwf	1+(?___lwdiv)+02h
 10479  0BBF  0820               	movf	(0+(?___wmul)),w
 10480  0BC0  01A8               	clrf	0+(?___lwdiv)+02h
 10481  0BC1  07A8               	addwf	0+(?___lwdiv)+02h
 10482                           
 10483  0BC2  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10484  0BC7  1283               	bcf	status, 5	;RP0=0, select bank0
 10485  0BC8  1303               	bcf	status, 6	;RP1=0, select bank0
 10486  0BC9  0826               	movf	(0+(?___lwdiv)),w
 10487  0BCA  3E14               	addlw	low(014h)
 10488  0BCB  1683               	bsf	status, 5	;RP0=1, select bank1
 10489  0BCC  1303               	bcf	status, 6	;RP1=0, select bank1
 10490  0BCD  00A8               	movwf	(_IRdistance)^080h	;volatile
 10491  0BCE  1283               	bcf	status, 5	;RP0=0, select bank0
 10492  0BCF  1303               	bcf	status, 6	;RP1=0, select bank0
 10493  0BD0  0827               	movf	(1+(?___lwdiv)),w
 10494  0BD1  1803               	skipnc
 10495  0BD2  3E01               	addlw	1
 10496  0BD3  3E00               	addlw	high(014h)
 10497  0BD4  1683               	bsf	status, 5	;RP0=1, select bank1
 10498  0BD5  1303               	bcf	status, 6	;RP1=0, select bank1
 10499  0BD6  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10500                           	line	102
 10501                           ;infrared.c: 102: }
 10502  0BD7  2D8C               	goto	l3046
 10503                           	line	103
 10504                           	
 10505  0BD8                     l3035:	
 10506                           	
 10507  0BD8                     l11397:	
 10508                           ;infrared.c: 103: else if (adcVal >= 128 && adcVal < 170)
 10509  0BD8  3000               	movlw	high(080h)
 10510  0BD9  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10511  0BDA  3080               	movlw	low(080h)
 10512  0BDB  1903               	skipnz
 10513  0BDC  022E               	subwf	(_adcVal)^080h,w	;volatile
 10514  0BDD  1C03               	skipc
 10515  0BDE  2BE0               	goto	u4761
 10516  0BDF  2BE1               	goto	u4760
 10517  0BE0                     u4761:
 10518  0BE0  2C2E               	goto	l11403
 10519  0BE1                     u4760:
 10520                           	
 10521  0BE1                     l11399:	
 10522  0BE1  3000               	movlw	high(0AAh)
 10523  0BE2  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10524  0BE3  30AA               	movlw	low(0AAh)
 10525  0BE4  1903               	skipnz
 10526  0BE5  022E               	subwf	(_adcVal)^080h,w	;volatile
 10527  0BE6  1803               	skipnc
 10528  0BE7  2BE9               	goto	u4771
 10529  0BE8  2BEA               	goto	u4770
 10530  0BE9                     u4771:
 10531  0BE9  2C2E               	goto	l11403
 10532  0BEA                     u4770:
 10533                           	line	105
 10534                           	
 10535  0BEA                     l11401:	
 10536                           ;infrared.c: 104: {
 10537                           ;infrared.c: 105: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
 10538  0BEA  302A               	movlw	low(02Ah)
 10539  0BEB  1283               	bcf	status, 5	;RP0=0, select bank0
 10540  0BEC  1303               	bcf	status, 6	;RP1=0, select bank0
 10541  0BED  00A6               	movwf	(?___lwdiv)
 10542  0BEE  3000               	movlw	high(02Ah)
 10543  0BEF  00A7               	movwf	((?___lwdiv))+1
 10544  0BF0  1683               	bsf	status, 5	;RP0=1, select bank1
 10545  0BF1  1303               	bcf	status, 6	;RP1=0, select bank1
 10546  0BF2  092E               	comf	(_adcVal)^080h,w	;volatile
 10547  0BF3  1283               	bcf	status, 5	;RP0=0, select bank0
 10548  0BF4  1303               	bcf	status, 6	;RP1=0, select bank0
 10549  0BF5  00AE               	movwf	(??_ADCconvert+0)+0
 10550  0BF6  1683               	bsf	status, 5	;RP0=1, select bank1
 10551  0BF7  1303               	bcf	status, 6	;RP1=0, select bank1
 10552  0BF8  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10553  0BF9  1283               	bcf	status, 5	;RP0=0, select bank0
 10554  0BFA  1303               	bcf	status, 6	;RP1=0, select bank0
 10555  0BFB  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10556  0BFC  0AAE               	incf	(??_ADCconvert+0)+0,f
 10557  0BFD  1903               	skipnz
 10558  0BFE  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10559  0BFF  082E               	movf	0+(??_ADCconvert+0)+0,w
 10560  0C00  3EAA               	addlw	low(0AAh)
 10561  0C01  00A0               	movwf	(?___wmul)
 10562  0C02  082F               	movf	1+(??_ADCconvert+0)+0,w
 10563  0C03  1803               	skipnc
 10564  0C04  3E01               	addlw	1
 10565  0C05  3E00               	addlw	high(0AAh)
 10566  0C06  00A1               	movwf	1+(?___wmul)
 10567  0C07  300A               	movlw	low(0Ah)
 10568  0C08  00A2               	movwf	0+(?___wmul)+02h
 10569  0C09  3000               	movlw	high(0Ah)
 10570  0C0A  00A3               	movwf	(0+(?___wmul)+02h)+1
 10571  0C0B  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10572  0C10  1283               	bcf	status, 5	;RP0=0, select bank0
 10573  0C11  1303               	bcf	status, 6	;RP1=0, select bank0
 10574  0C12  0821               	movf	(1+(?___wmul)),w
 10575  0C13  01A9               	clrf	1+(?___lwdiv)+02h
 10576  0C14  07A9               	addwf	1+(?___lwdiv)+02h
 10577  0C15  0820               	movf	(0+(?___wmul)),w
 10578  0C16  01A8               	clrf	0+(?___lwdiv)+02h
 10579  0C17  07A8               	addwf	0+(?___lwdiv)+02h
 10580                           
 10581  0C18  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10582  0C1D  1283               	bcf	status, 5	;RP0=0, select bank0
 10583  0C1E  1303               	bcf	status, 6	;RP1=0, select bank0
 10584  0C1F  0826               	movf	(0+(?___lwdiv)),w
 10585  0C20  3E1E               	addlw	low(01Eh)
 10586  0C21  1683               	bsf	status, 5	;RP0=1, select bank1
 10587  0C22  1303               	bcf	status, 6	;RP1=0, select bank1
 10588  0C23  00A8               	movwf	(_IRdistance)^080h	;volatile
 10589  0C24  1283               	bcf	status, 5	;RP0=0, select bank0
 10590  0C25  1303               	bcf	status, 6	;RP1=0, select bank0
 10591  0C26  0827               	movf	(1+(?___lwdiv)),w
 10592  0C27  1803               	skipnc
 10593  0C28  3E01               	addlw	1
 10594  0C29  3E00               	addlw	high(01Eh)
 10595  0C2A  1683               	bsf	status, 5	;RP0=1, select bank1
 10596  0C2B  1303               	bcf	status, 6	;RP1=0, select bank1
 10597  0C2C  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10598                           	line	106
 10599                           ;infrared.c: 106: }
 10600  0C2D  2D8C               	goto	l3046
 10601                           	line	107
 10602                           	
 10603  0C2E                     l3037:	
 10604                           	
 10605  0C2E                     l11403:	
 10606                           ;infrared.c: 107: else if (adcVal >= 107 && adcVal < 128)
 10607  0C2E  3000               	movlw	high(06Bh)
 10608  0C2F  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10609  0C30  306B               	movlw	low(06Bh)
 10610  0C31  1903               	skipnz
 10611  0C32  022E               	subwf	(_adcVal)^080h,w	;volatile
 10612  0C33  1C03               	skipc
 10613  0C34  2C36               	goto	u4781
 10614  0C35  2C37               	goto	u4780
 10615  0C36                     u4781:
 10616  0C36  2C84               	goto	l11409
 10617  0C37                     u4780:
 10618                           	
 10619  0C37                     l11405:	
 10620  0C37  3000               	movlw	high(080h)
 10621  0C38  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10622  0C39  3080               	movlw	low(080h)
 10623  0C3A  1903               	skipnz
 10624  0C3B  022E               	subwf	(_adcVal)^080h,w	;volatile
 10625  0C3C  1803               	skipnc
 10626  0C3D  2C3F               	goto	u4791
 10627  0C3E  2C40               	goto	u4790
 10628  0C3F                     u4791:
 10629  0C3F  2C84               	goto	l11409
 10630  0C40                     u4790:
 10631                           	line	109
 10632                           	
 10633  0C40                     l11407:	
 10634                           ;infrared.c: 108: {
 10635                           ;infrared.c: 109: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
 10636  0C40  3015               	movlw	low(015h)
 10637  0C41  1283               	bcf	status, 5	;RP0=0, select bank0
 10638  0C42  1303               	bcf	status, 6	;RP1=0, select bank0
 10639  0C43  00A6               	movwf	(?___lwdiv)
 10640  0C44  3000               	movlw	high(015h)
 10641  0C45  00A7               	movwf	((?___lwdiv))+1
 10642  0C46  1683               	bsf	status, 5	;RP0=1, select bank1
 10643  0C47  1303               	bcf	status, 6	;RP1=0, select bank1
 10644  0C48  092E               	comf	(_adcVal)^080h,w	;volatile
 10645  0C49  1283               	bcf	status, 5	;RP0=0, select bank0
 10646  0C4A  1303               	bcf	status, 6	;RP1=0, select bank0
 10647  0C4B  00AE               	movwf	(??_ADCconvert+0)+0
 10648  0C4C  1683               	bsf	status, 5	;RP0=1, select bank1
 10649  0C4D  1303               	bcf	status, 6	;RP1=0, select bank1
 10650  0C4E  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10651  0C4F  1283               	bcf	status, 5	;RP0=0, select bank0
 10652  0C50  1303               	bcf	status, 6	;RP1=0, select bank0
 10653  0C51  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10654  0C52  0AAE               	incf	(??_ADCconvert+0)+0,f
 10655  0C53  1903               	skipnz
 10656  0C54  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10657  0C55  082E               	movf	0+(??_ADCconvert+0)+0,w
 10658  0C56  3E80               	addlw	low(080h)
 10659  0C57  00A0               	movwf	(?___wmul)
 10660  0C58  082F               	movf	1+(??_ADCconvert+0)+0,w
 10661  0C59  1803               	skipnc
 10662  0C5A  3E01               	addlw	1
 10663  0C5B  3E00               	addlw	high(080h)
 10664  0C5C  00A1               	movwf	1+(?___wmul)
 10665  0C5D  300A               	movlw	low(0Ah)
 10666  0C5E  00A2               	movwf	0+(?___wmul)+02h
 10667  0C5F  3000               	movlw	high(0Ah)
 10668  0C60  00A3               	movwf	(0+(?___wmul)+02h)+1
 10669  0C61  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10670  0C66  1283               	bcf	status, 5	;RP0=0, select bank0
 10671  0C67  1303               	bcf	status, 6	;RP1=0, select bank0
 10672  0C68  0821               	movf	(1+(?___wmul)),w
 10673  0C69  01A9               	clrf	1+(?___lwdiv)+02h
 10674  0C6A  07A9               	addwf	1+(?___lwdiv)+02h
 10675  0C6B  0820               	movf	(0+(?___wmul)),w
 10676  0C6C  01A8               	clrf	0+(?___lwdiv)+02h
 10677  0C6D  07A8               	addwf	0+(?___lwdiv)+02h
 10678                           
 10679  0C6E  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10680  0C73  1283               	bcf	status, 5	;RP0=0, select bank0
 10681  0C74  1303               	bcf	status, 6	;RP1=0, select bank0
 10682  0C75  0826               	movf	(0+(?___lwdiv)),w
 10683  0C76  3E28               	addlw	low(028h)
 10684  0C77  1683               	bsf	status, 5	;RP0=1, select bank1
 10685  0C78  1303               	bcf	status, 6	;RP1=0, select bank1
 10686  0C79  00A8               	movwf	(_IRdistance)^080h	;volatile
 10687  0C7A  1283               	bcf	status, 5	;RP0=0, select bank0
 10688  0C7B  1303               	bcf	status, 6	;RP1=0, select bank0
 10689  0C7C  0827               	movf	(1+(?___lwdiv)),w
 10690  0C7D  1803               	skipnc
 10691  0C7E  3E01               	addlw	1
 10692  0C7F  3E00               	addlw	high(028h)
 10693  0C80  1683               	bsf	status, 5	;RP0=1, select bank1
 10694  0C81  1303               	bcf	status, 6	;RP1=0, select bank1
 10695  0C82  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10696                           	line	110
 10697                           ;infrared.c: 110: }
 10698  0C83  2D8C               	goto	l3046
 10699                           	line	111
 10700                           	
 10701  0C84                     l3039:	
 10702                           	
 10703  0C84                     l11409:	
 10704                           ;infrared.c: 111: else if (adcVal >= 77 && adcVal < 107)
 10705  0C84  3000               	movlw	high(04Dh)
 10706  0C85  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10707  0C86  304D               	movlw	low(04Dh)
 10708  0C87  1903               	skipnz
 10709  0C88  022E               	subwf	(_adcVal)^080h,w	;volatile
 10710  0C89  1C03               	skipc
 10711  0C8A  2C8C               	goto	u4801
 10712  0C8B  2C8D               	goto	u4800
 10713  0C8C                     u4801:
 10714  0C8C  2CDA               	goto	l11415
 10715  0C8D                     u4800:
 10716                           	
 10717  0C8D                     l11411:	
 10718  0C8D  3000               	movlw	high(06Bh)
 10719  0C8E  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10720  0C8F  306B               	movlw	low(06Bh)
 10721  0C90  1903               	skipnz
 10722  0C91  022E               	subwf	(_adcVal)^080h,w	;volatile
 10723  0C92  1803               	skipnc
 10724  0C93  2C95               	goto	u4811
 10725  0C94  2C96               	goto	u4810
 10726  0C95                     u4811:
 10727  0C95  2CDA               	goto	l11415
 10728  0C96                     u4810:
 10729                           	line	113
 10730                           	
 10731  0C96                     l11413:	
 10732                           ;infrared.c: 112: {
 10733                           ;infrared.c: 113: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
 10734  0C96  301E               	movlw	low(01Eh)
 10735  0C97  1283               	bcf	status, 5	;RP0=0, select bank0
 10736  0C98  1303               	bcf	status, 6	;RP1=0, select bank0
 10737  0C99  00A6               	movwf	(?___lwdiv)
 10738  0C9A  3000               	movlw	high(01Eh)
 10739  0C9B  00A7               	movwf	((?___lwdiv))+1
 10740  0C9C  1683               	bsf	status, 5	;RP0=1, select bank1
 10741  0C9D  1303               	bcf	status, 6	;RP1=0, select bank1
 10742  0C9E  092E               	comf	(_adcVal)^080h,w	;volatile
 10743  0C9F  1283               	bcf	status, 5	;RP0=0, select bank0
 10744  0CA0  1303               	bcf	status, 6	;RP1=0, select bank0
 10745  0CA1  00AE               	movwf	(??_ADCconvert+0)+0
 10746  0CA2  1683               	bsf	status, 5	;RP0=1, select bank1
 10747  0CA3  1303               	bcf	status, 6	;RP1=0, select bank1
 10748  0CA4  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10749  0CA5  1283               	bcf	status, 5	;RP0=0, select bank0
 10750  0CA6  1303               	bcf	status, 6	;RP1=0, select bank0
 10751  0CA7  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10752  0CA8  0AAE               	incf	(??_ADCconvert+0)+0,f
 10753  0CA9  1903               	skipnz
 10754  0CAA  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10755  0CAB  082E               	movf	0+(??_ADCconvert+0)+0,w
 10756  0CAC  3E6B               	addlw	low(06Bh)
 10757  0CAD  00A0               	movwf	(?___wmul)
 10758  0CAE  082F               	movf	1+(??_ADCconvert+0)+0,w
 10759  0CAF  1803               	skipnc
 10760  0CB0  3E01               	addlw	1
 10761  0CB1  3E00               	addlw	high(06Bh)
 10762  0CB2  00A1               	movwf	1+(?___wmul)
 10763  0CB3  300A               	movlw	low(0Ah)
 10764  0CB4  00A2               	movwf	0+(?___wmul)+02h
 10765  0CB5  3000               	movlw	high(0Ah)
 10766  0CB6  00A3               	movwf	(0+(?___wmul)+02h)+1
 10767  0CB7  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10768  0CBC  1283               	bcf	status, 5	;RP0=0, select bank0
 10769  0CBD  1303               	bcf	status, 6	;RP1=0, select bank0
 10770  0CBE  0821               	movf	(1+(?___wmul)),w
 10771  0CBF  01A9               	clrf	1+(?___lwdiv)+02h
 10772  0CC0  07A9               	addwf	1+(?___lwdiv)+02h
 10773  0CC1  0820               	movf	(0+(?___wmul)),w
 10774  0CC2  01A8               	clrf	0+(?___lwdiv)+02h
 10775  0CC3  07A8               	addwf	0+(?___lwdiv)+02h
 10776                           
 10777  0CC4  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10778  0CC9  1283               	bcf	status, 5	;RP0=0, select bank0
 10779  0CCA  1303               	bcf	status, 6	;RP1=0, select bank0
 10780  0CCB  0826               	movf	(0+(?___lwdiv)),w
 10781  0CCC  3E32               	addlw	low(032h)
 10782  0CCD  1683               	bsf	status, 5	;RP0=1, select bank1
 10783  0CCE  1303               	bcf	status, 6	;RP1=0, select bank1
 10784  0CCF  00A8               	movwf	(_IRdistance)^080h	;volatile
 10785  0CD0  1283               	bcf	status, 5	;RP0=0, select bank0
 10786  0CD1  1303               	bcf	status, 6	;RP1=0, select bank0
 10787  0CD2  0827               	movf	(1+(?___lwdiv)),w
 10788  0CD3  1803               	skipnc
 10789  0CD4  3E01               	addlw	1
 10790  0CD5  3E00               	addlw	high(032h)
 10791  0CD6  1683               	bsf	status, 5	;RP0=1, select bank1
 10792  0CD7  1303               	bcf	status, 6	;RP1=0, select bank1
 10793  0CD8  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10794                           	line	114
 10795                           ;infrared.c: 114: }
 10796  0CD9  2D8C               	goto	l3046
 10797                           	line	115
 10798                           	
 10799  0CDA                     l3041:	
 10800                           	
 10801  0CDA                     l11415:	
 10802                           ;infrared.c: 115: else if (adcVal >= 56 && adcVal < 77)
 10803  0CDA  3000               	movlw	high(038h)
 10804  0CDB  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10805  0CDC  3038               	movlw	low(038h)
 10806  0CDD  1903               	skipnz
 10807  0CDE  022E               	subwf	(_adcVal)^080h,w	;volatile
 10808  0CDF  1C03               	skipc
 10809  0CE0  2CE2               	goto	u4821
 10810  0CE1  2CE3               	goto	u4820
 10811  0CE2                     u4821:
 10812  0CE2  2D30               	goto	l11421
 10813  0CE3                     u4820:
 10814                           	
 10815  0CE3                     l11417:	
 10816  0CE3  3000               	movlw	high(04Dh)
 10817  0CE4  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10818  0CE5  304D               	movlw	low(04Dh)
 10819  0CE6  1903               	skipnz
 10820  0CE7  022E               	subwf	(_adcVal)^080h,w	;volatile
 10821  0CE8  1803               	skipnc
 10822  0CE9  2CEB               	goto	u4831
 10823  0CEA  2CEC               	goto	u4830
 10824  0CEB                     u4831:
 10825  0CEB  2D30               	goto	l11421
 10826  0CEC                     u4830:
 10827                           	line	117
 10828                           	
 10829  0CEC                     l11419:	
 10830                           ;infrared.c: 116: {
 10831                           ;infrared.c: 117: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
 10832  0CEC  3015               	movlw	low(015h)
 10833  0CED  1283               	bcf	status, 5	;RP0=0, select bank0
 10834  0CEE  1303               	bcf	status, 6	;RP1=0, select bank0
 10835  0CEF  00A6               	movwf	(?___lwdiv)
 10836  0CF0  3000               	movlw	high(015h)
 10837  0CF1  00A7               	movwf	((?___lwdiv))+1
 10838  0CF2  1683               	bsf	status, 5	;RP0=1, select bank1
 10839  0CF3  1303               	bcf	status, 6	;RP1=0, select bank1
 10840  0CF4  092E               	comf	(_adcVal)^080h,w	;volatile
 10841  0CF5  1283               	bcf	status, 5	;RP0=0, select bank0
 10842  0CF6  1303               	bcf	status, 6	;RP1=0, select bank0
 10843  0CF7  00AE               	movwf	(??_ADCconvert+0)+0
 10844  0CF8  1683               	bsf	status, 5	;RP0=1, select bank1
 10845  0CF9  1303               	bcf	status, 6	;RP1=0, select bank1
 10846  0CFA  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10847  0CFB  1283               	bcf	status, 5	;RP0=0, select bank0
 10848  0CFC  1303               	bcf	status, 6	;RP1=0, select bank0
 10849  0CFD  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10850  0CFE  0AAE               	incf	(??_ADCconvert+0)+0,f
 10851  0CFF  1903               	skipnz
 10852  0D00  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10853  0D01  082E               	movf	0+(??_ADCconvert+0)+0,w
 10854  0D02  3E4D               	addlw	low(04Dh)
 10855  0D03  00A0               	movwf	(?___wmul)
 10856  0D04  082F               	movf	1+(??_ADCconvert+0)+0,w
 10857  0D05  1803               	skipnc
 10858  0D06  3E01               	addlw	1
 10859  0D07  3E00               	addlw	high(04Dh)
 10860  0D08  00A1               	movwf	1+(?___wmul)
 10861  0D09  300A               	movlw	low(0Ah)
 10862  0D0A  00A2               	movwf	0+(?___wmul)+02h
 10863  0D0B  3000               	movlw	high(0Ah)
 10864  0D0C  00A3               	movwf	(0+(?___wmul)+02h)+1
 10865  0D0D  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10866  0D12  1283               	bcf	status, 5	;RP0=0, select bank0
 10867  0D13  1303               	bcf	status, 6	;RP1=0, select bank0
 10868  0D14  0821               	movf	(1+(?___wmul)),w
 10869  0D15  01A9               	clrf	1+(?___lwdiv)+02h
 10870  0D16  07A9               	addwf	1+(?___lwdiv)+02h
 10871  0D17  0820               	movf	(0+(?___wmul)),w
 10872  0D18  01A8               	clrf	0+(?___lwdiv)+02h
 10873  0D19  07A8               	addwf	0+(?___lwdiv)+02h
 10874                           
 10875  0D1A  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10876  0D1F  1283               	bcf	status, 5	;RP0=0, select bank0
 10877  0D20  1303               	bcf	status, 6	;RP1=0, select bank0
 10878  0D21  0826               	movf	(0+(?___lwdiv)),w
 10879  0D22  3E3C               	addlw	low(03Ch)
 10880  0D23  1683               	bsf	status, 5	;RP0=1, select bank1
 10881  0D24  1303               	bcf	status, 6	;RP1=0, select bank1
 10882  0D25  00A8               	movwf	(_IRdistance)^080h	;volatile
 10883  0D26  1283               	bcf	status, 5	;RP0=0, select bank0
 10884  0D27  1303               	bcf	status, 6	;RP1=0, select bank0
 10885  0D28  0827               	movf	(1+(?___lwdiv)),w
 10886  0D29  1803               	skipnc
 10887  0D2A  3E01               	addlw	1
 10888  0D2B  3E00               	addlw	high(03Ch)
 10889  0D2C  1683               	bsf	status, 5	;RP0=1, select bank1
 10890  0D2D  1303               	bcf	status, 6	;RP1=0, select bank1
 10891  0D2E  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10892                           	line	118
 10893                           ;infrared.c: 118: }
 10894  0D2F  2D8C               	goto	l3046
 10895                           	line	119
 10896                           	
 10897  0D30                     l3043:	
 10898                           	
 10899  0D30                     l11421:	
 10900                           ;infrared.c: 119: else if (adcVal >= 43 && adcVal < 56)
 10901  0D30  3000               	movlw	high(02Bh)
 10902  0D31  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10903  0D32  302B               	movlw	low(02Bh)
 10904  0D33  1903               	skipnz
 10905  0D34  022E               	subwf	(_adcVal)^080h,w	;volatile
 10906  0D35  1C03               	skipc
 10907  0D36  2D38               	goto	u4841
 10908  0D37  2D39               	goto	u4840
 10909  0D38                     u4841:
 10910  0D38  2D8C               	goto	l3046
 10911  0D39                     u4840:
 10912                           	
 10913  0D39                     l11423:	
 10914  0D39  3000               	movlw	high(038h)
 10915  0D3A  022F               	subwf	(_adcVal+1)^080h,w	;volatile
 10916  0D3B  3038               	movlw	low(038h)
 10917  0D3C  1903               	skipnz
 10918  0D3D  022E               	subwf	(_adcVal)^080h,w	;volatile
 10919  0D3E  1803               	skipnc
 10920  0D3F  2D41               	goto	u4851
 10921  0D40  2D42               	goto	u4850
 10922  0D41                     u4851:
 10923  0D41  2D8C               	goto	l3046
 10924  0D42                     u4850:
 10925                           	line	121
 10926                           	
 10927  0D42                     l11425:	
 10928                           ;infrared.c: 120: {
 10929                           ;infrared.c: 121: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
 10930  0D42  300D               	movlw	low(0Dh)
 10931  0D43  1283               	bcf	status, 5	;RP0=0, select bank0
 10932  0D44  1303               	bcf	status, 6	;RP1=0, select bank0
 10933  0D45  00A6               	movwf	(?___lwdiv)
 10934  0D46  3000               	movlw	high(0Dh)
 10935  0D47  00A7               	movwf	((?___lwdiv))+1
 10936  0D48  1683               	bsf	status, 5	;RP0=1, select bank1
 10937  0D49  1303               	bcf	status, 6	;RP1=0, select bank1
 10938  0D4A  092E               	comf	(_adcVal)^080h,w	;volatile
 10939  0D4B  1283               	bcf	status, 5	;RP0=0, select bank0
 10940  0D4C  1303               	bcf	status, 6	;RP1=0, select bank0
 10941  0D4D  00AE               	movwf	(??_ADCconvert+0)+0
 10942  0D4E  1683               	bsf	status, 5	;RP0=1, select bank1
 10943  0D4F  1303               	bcf	status, 6	;RP1=0, select bank1
 10944  0D50  092F               	comf	(_adcVal+1)^080h,w	;volatile
 10945  0D51  1283               	bcf	status, 5	;RP0=0, select bank0
 10946  0D52  1303               	bcf	status, 6	;RP1=0, select bank0
 10947  0D53  00AF               	movwf	((??_ADCconvert+0)+0+1)
 10948  0D54  0AAE               	incf	(??_ADCconvert+0)+0,f
 10949  0D55  1903               	skipnz
 10950  0D56  0AAF               	incf	((??_ADCconvert+0)+0+1),f
 10951  0D57  082E               	movf	0+(??_ADCconvert+0)+0,w
 10952  0D58  3E38               	addlw	low(038h)
 10953  0D59  00A0               	movwf	(?___wmul)
 10954  0D5A  082F               	movf	1+(??_ADCconvert+0)+0,w
 10955  0D5B  1803               	skipnc
 10956  0D5C  3E01               	addlw	1
 10957  0D5D  3E00               	addlw	high(038h)
 10958  0D5E  00A1               	movwf	1+(?___wmul)
 10959  0D5F  300A               	movlw	low(0Ah)
 10960  0D60  00A2               	movwf	0+(?___wmul)+02h
 10961  0D61  3000               	movlw	high(0Ah)
 10962  0D62  00A3               	movwf	(0+(?___wmul)+02h)+1
 10963  0D63  160A  158A  2498   	fcall	___wmul
              120A  158A         
 10964  0D68  1283               	bcf	status, 5	;RP0=0, select bank0
 10965  0D69  1303               	bcf	status, 6	;RP1=0, select bank0
 10966  0D6A  0821               	movf	(1+(?___wmul)),w
 10967  0D6B  01A9               	clrf	1+(?___lwdiv)+02h
 10968  0D6C  07A9               	addwf	1+(?___lwdiv)+02h
 10969  0D6D  0820               	movf	(0+(?___wmul)),w
 10970  0D6E  01A8               	clrf	0+(?___lwdiv)+02h
 10971  0D6F  07A8               	addwf	0+(?___lwdiv)+02h
 10972                           
 10973  0D70  160A  158A  26FB   	fcall	___lwdiv
              120A  158A         
 10974  0D75  1283               	bcf	status, 5	;RP0=0, select bank0
 10975  0D76  1303               	bcf	status, 6	;RP1=0, select bank0
 10976  0D77  0826               	movf	(0+(?___lwdiv)),w
 10977  0D78  3E46               	addlw	low(046h)
 10978  0D79  1683               	bsf	status, 5	;RP0=1, select bank1
 10979  0D7A  1303               	bcf	status, 6	;RP1=0, select bank1
 10980  0D7B  00A8               	movwf	(_IRdistance)^080h	;volatile
 10981  0D7C  1283               	bcf	status, 5	;RP0=0, select bank0
 10982  0D7D  1303               	bcf	status, 6	;RP1=0, select bank0
 10983  0D7E  0827               	movf	(1+(?___lwdiv)),w
 10984  0D7F  1803               	skipnc
 10985  0D80  3E01               	addlw	1
 10986  0D81  3E00               	addlw	high(046h)
 10987  0D82  1683               	bsf	status, 5	;RP0=1, select bank1
 10988  0D83  1303               	bcf	status, 6	;RP1=0, select bank1
 10989  0D84  00A9               	movwf	1+(_IRdistance)^080h	;volatile
 10990  0D85  2D8C               	goto	l3046
 10991                           	line	122
 10992                           	
 10993  0D86                     l3045:	
 10994  0D86  2D8C               	goto	l3046
 10995                           	line	123
 10996                           	
 10997  0D87                     l3044:	
 10998  0D87  2D8C               	goto	l3046
 10999                           	
 11000  0D88                     l3042:	
 11001  0D88  2D8C               	goto	l3046
 11002                           	
 11003  0D89                     l3040:	
 11004  0D89  2D8C               	goto	l3046
 11005                           	
 11006  0D8A                     l3038:	
 11007  0D8A  2D8C               	goto	l3046
 11008                           	
 11009  0D8B                     l3036:	
 11010  0D8B  2D8C               	goto	l3046
 11011                           	
 11012  0D8C                     l3034:	
 11013                           	
 11014  0D8C                     l3046:	
 11015  0D8C  0008               	return
 11016                           	opt stack 0
 11017                           GLOBAL	__end_of_ADCconvert
 11018  0D8D                     	__end_of_ADCconvert:
 11019 ;; =============== function _ADCconvert ends ============
 11020                           
 11021                           	signat	_ADCconvert,88
 11022                           	global	_rotate
 11023                           psect	text1109,local,class=CODE,delta=2
 11024                           global __ptext1109
 11025  1043                     __ptext1109:
 11026                           
 11027 ;; *************** function _rotate *****************
 11028 ;; Defined at:
 11029 ;;		line 67 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  numsteps        2    3[BANK0 ] unsigned int 
 11032 ;;  direction       1    5[BANK0 ] unsigned char 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  i               2    8[BANK0 ] unsigned int 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;		None               void
 11037 ;; Registers used:
 11038 ;;		wreg, status,2, status,0, pclath, cstack
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11044 ;;      Params:         0       3       0       0       0
 11045 ;;      Locals:         0       2       0       0       0
 11046 ;;      Temps:          0       2       0       0       0
 11047 ;;      Totals:         0       7       0       0       0
 11048 ;;Total ram usage:        7 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:    4
 11051 ;; This function calls:
 11052 ;;		_spi_transfer
 11053 ;; This function is called by:
 11054 ;;		_Init_Follow_IR
 11055 ;;		_calibrateIR
 11056 ;;		_robotFollow
 11057 ;;		_robot_turnRight
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           psect	text1109
 11061                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11062                           	line	67
 11063                           	global	__size_of_rotate
 11064  0067                     	__size_of_rotate	equ	__end_of_rotate-_rotate
 11065                           	
 11066  1043                     _rotate:	
 11067                           	opt	stack 2
 11068                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
 11069                           	line	69
 11070                           	
 11071  1043                     l11353:	
 11072                           ;steppermotor.c: 69: RC0 = 1; RC1 = 1;;
 11073  1043  1283               	bcf	status, 5	;RP0=0, select bank0
 11074  1044  1303               	bcf	status, 6	;RP1=0, select bank0
 11075  1045  1407               	bsf	(56/8),(56)&7
 11076  1046  1487               	bsf	(57/8),(57)&7
 11077                           	line	70
 11078                           	
 11079  1047                     l11355:	
 11080                           ;steppermotor.c: 70: if (direction == 0)
 11081  1047  08A5               	movf	(rotate@direction),f
 11082  1048  1D03               	skipz
 11083  1049  284B               	goto	u4691
 11084  104A  284C               	goto	u4690
 11085  104B                     u4691:
 11086  104B  2853               	goto	l11359
 11087  104C                     u4690:
 11088                           	line	71
 11089                           	
 11090  104C                     l11357:	
 11091                           ;steppermotor.c: 71: spi_transfer(0b00001011);
 11092  104C  300B               	movlw	(0Bh)
 11093  104D  160A  158A  2335   	fcall	_spi_transfer
              160A  118A         
 11094  1052  285A               	goto	l11361
 11095                           	line	72
 11096                           	
 11097  1053                     l3749:	
 11098                           	line	73
 11099                           	
 11100  1053                     l11359:	
 11101                           ;steppermotor.c: 72: else
 11102                           ;steppermotor.c: 73: spi_transfer(0b00001001);
 11103  1053  3009               	movlw	(09h)
 11104  1054  160A  158A  2335   	fcall	_spi_transfer
              160A  118A         
 11105  1059  285A               	goto	l11361
 11106                           	
 11107  105A                     l3750:	
 11108                           	line	74
 11109                           	
 11110  105A                     l11361:	
 11111                           ;steppermotor.c: 74: RC0 = 0; RC1 = 0;;
 11112  105A  1283               	bcf	status, 5	;RP0=0, select bank0
 11113  105B  1303               	bcf	status, 6	;RP1=0, select bank0
 11114  105C  1007               	bcf	(56/8),(56)&7
 11115                           	
 11116  105D                     l11363:	
 11117  105D  1087               	bcf	(57/8),(57)&7
 11118                           	line	75
 11119                           	
 11120  105E                     l11365:	
 11121                           ;steppermotor.c: 75: for (unsigned int i = 0; i < numsteps; i++)
 11122  105E  01A8               	clrf	(rotate@i)
 11123  105F  01A9               	clrf	(rotate@i+1)
 11124  1060  288E               	goto	l3751
 11125                           	line	76
 11126                           	
 11127  1061                     l3752:	
 11128                           	line	77
 11129                           ;steppermotor.c: 76: {
 11130                           ;steppermotor.c: 77: RC2 = 1; _nop(); RC2 = 0;;
 11131  1061  1507               	bsf	(58/8),(58)&7
 11132  1062  0000               	nop
 11133  1063  1283               	bcf	status, 5	;RP0=0, select bank0
 11134  1064  1303               	bcf	status, 6	;RP1=0, select bank0
 11135  1065  1107               	bcf	(58/8),(58)&7
 11136                           	line	78
 11137                           	
 11138  1066                     l11367:	
 11139                           ;steppermotor.c: 78: if (direction)
 11140  1066  0825               	movf	(rotate@direction),w
 11141  1067  1D03               	skipz
 11142  1068  286A               	goto	u4700
 11143  1069  2873               	goto	l11371
 11144  106A                     u4700:
 11145                           	line	79
 11146                           	
 11147  106A                     l11369:	
 11148                           ;steppermotor.c: 79: totalSteps++;
 11149  106A  3001               	movlw	low(01h)
 11150  106B  1683               	bsf	status, 5	;RP0=1, select bank1
 11151  106C  1303               	bcf	status, 6	;RP1=0, select bank1
 11152  106D  07BC               	addwf	(_totalSteps)^080h,f
 11153  106E  1803               	skipnc
 11154  106F  0ABD               	incf	(_totalSteps+1)^080h,f
 11155  1070  3000               	movlw	high(01h)
 11156  1071  07BD               	addwf	(_totalSteps+1)^080h,f
 11157  1072  287B               	goto	l3754
 11158                           	line	80
 11159                           	
 11160  1073                     l3753:	
 11161                           	line	81
 11162                           	
 11163  1073                     l11371:	
 11164                           ;steppermotor.c: 80: else
 11165                           ;steppermotor.c: 81: totalSteps--;
 11166  1073  30FF               	movlw	low(-1)
 11167  1074  1683               	bsf	status, 5	;RP0=1, select bank1
 11168  1075  1303               	bcf	status, 6	;RP1=0, select bank1
 11169  1076  07BC               	addwf	(_totalSteps)^080h,f
 11170  1077  1803               	skipnc
 11171  1078  0ABD               	incf	(_totalSteps+1)^080h,f
 11172  1079  30FF               	movlw	high(-1)
 11173  107A  07BD               	addwf	(_totalSteps+1)^080h,f
 11174                           	
 11175  107B                     l3754:	
 11176                           	line	82
 11177                           ;steppermotor.c: 82: _delay((unsigned long)((15)*(20000000/4000.0)));
 11178                           	opt asmopt_off
 11179  107B  3062               movlw	98
 11180  107C  1283               	bcf	status, 5	;RP0=0, select bank0
 11181  107D  1303               	bcf	status, 6	;RP1=0, select bank0
 11182  107E  00A7               movwf	((??_rotate+0)+0+1),f
 11183  107F  3065               	movlw	101
 11184  1080  00A6               movwf	((??_rotate+0)+0),f
 11185  1081                     u5617:
 11186  1081  0BA6               	decfsz	((??_rotate+0)+0),f
 11187  1082  2881               	goto	u5617
 11188  1083  0BA7               	decfsz	((??_rotate+0)+0+1),f
 11189  1084  2881               	goto	u5617
 11190  1085  2886               	nop2
 11191                           opt asmopt_on
 11192                           
 11193                           	line	75
 11194  1086  3001               	movlw	low(01h)
 11195  1087  1283               	bcf	status, 5	;RP0=0, select bank0
 11196  1088  1303               	bcf	status, 6	;RP1=0, select bank0
 11197  1089  07A8               	addwf	(rotate@i),f
 11198  108A  1803               	skipnc
 11199  108B  0AA9               	incf	(rotate@i+1),f
 11200  108C  3000               	movlw	high(01h)
 11201  108D  07A9               	addwf	(rotate@i+1),f
 11202                           	
 11203  108E                     l3751:	
 11204  108E  0824               	movf	(rotate@numsteps+1),w
 11205  108F  0229               	subwf	(rotate@i+1),w
 11206  1090  1D03               	skipz
 11207  1091  2894               	goto	u4715
 11208  1092  0823               	movf	(rotate@numsteps),w
 11209  1093  0228               	subwf	(rotate@i),w
 11210  1094                     u4715:
 11211  1094  1C03               	skipc
 11212  1095  2897               	goto	u4711
 11213  1096  2898               	goto	u4710
 11214  1097                     u4711:
 11215  1097  2861               	goto	l3752
 11216  1098                     u4710:
 11217                           	
 11218  1098                     l3755:	
 11219                           	line	84
 11220                           ;steppermotor.c: 83: }
 11221                           ;steppermotor.c: 84: RC0 = 1; RC1 = 1;;
 11222  1098  1407               	bsf	(56/8),(56)&7
 11223  1099  1487               	bsf	(57/8),(57)&7
 11224                           	line	85
 11225                           	
 11226  109A                     l11373:	
 11227                           ;steppermotor.c: 85: spi_transfer(0b00000000);
 11228  109A  3000               	movlw	(0)
 11229  109B  160A  158A  2335   	fcall	_spi_transfer
              160A  118A         
 11230                           	line	86
 11231                           	
 11232  10A0                     l11375:	
 11233                           ;steppermotor.c: 86: RC0 = 0; RC1 = 0;;
 11234  10A0  1283               	bcf	status, 5	;RP0=0, select bank0
 11235  10A1  1303               	bcf	status, 6	;RP1=0, select bank0
 11236  10A2  1007               	bcf	(56/8),(56)&7
 11237                           	
 11238  10A3                     l11377:	
 11239  10A3  1087               	bcf	(57/8),(57)&7
 11240                           	line	87
 11241                           	
 11242  10A4                     l11379:	
 11243                           ;steppermotor.c: 87: RC2 = 1; _nop(); RC2 = 0;;
 11244  10A4  1507               	bsf	(58/8),(58)&7
 11245                           	
 11246  10A5                     l11381:	
 11247  10A5  0000               	nop
 11248                           	
 11249  10A6                     l11383:	
 11250  10A6  1283               	bcf	status, 5	;RP0=0, select bank0
 11251  10A7  1303               	bcf	status, 6	;RP1=0, select bank0
 11252  10A8  1107               	bcf	(58/8),(58)&7
 11253                           	line	88
 11254                           	
 11255  10A9                     l3756:	
 11256  10A9  0008               	return
 11257                           	opt stack 0
 11258                           GLOBAL	__end_of_rotate
 11259  10AA                     	__end_of_rotate:
 11260 ;; =============== function _rotate ends ============
 11261                           
 11262                           	signat	_rotate,8312
 11263                           	global	_RobotDrive
 11264                           psect	text1110,local,class=CODE,delta=2
 11265                           global __ptext1110
 11266  100A                     __ptext1110:
 11267                           
 11268 ;; *************** function _RobotDrive *****************
 11269 ;; Defined at:
 11270 ;;		line 122 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  speed           2    9[BANK0 ] int 
 11273 ;;  radius          2   11[BANK0 ] int 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;  radiushighBy    1   17[BANK0 ] unsigned char 
 11276 ;;  radiuslowByt    1   16[BANK0 ] unsigned char 
 11277 ;;  speedhighByt    1   15[BANK0 ] unsigned char 
 11278 ;;  speedlowByte    1   14[BANK0 ] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;		None               void
 11281 ;; Registers used:
 11282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11288 ;;      Params:         0       4       0       0       0
 11289 ;;      Locals:         0       4       0       0       0
 11290 ;;      Temps:          0       1       0       0       0
 11291 ;;      Totals:         0       9       0       0       0
 11292 ;;Total ram usage:        9 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    4
 11295 ;; This function calls:
 11296 ;;		_ser_putch
 11297 ;; This function is called by:
 11298 ;;		_main
 11299 ;;		_robotFollow
 11300 ;;		_robot_turnRight
 11301 ;;		_robotMoveSpeed
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           psect	text1110
 11305                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 11306                           	line	122
 11307                           	global	__size_of_RobotDrive
 11308  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
 11309                           	
 11310  100A                     _RobotDrive:	
 11311                           	opt	stack 2
 11312                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11313                           	line	124
 11314                           	
 11315  100A                     l11337:	
 11316                           ;robot.c: 124: unsigned char speedlowByte = (unsigned char)(speed);
 11317  100A  1283               	bcf	status, 5	;RP0=0, select bank0
 11318  100B  1303               	bcf	status, 6	;RP1=0, select bank0
 11319  100C  0829               	movf	(RobotDrive@speed),w
 11320  100D  00AD               	movwf	(??_RobotDrive+0)+0
 11321  100E  082D               	movf	(??_RobotDrive+0)+0,w
 11322  100F  00AE               	movwf	(RobotDrive@speedlowByte)
 11323                           	line	125
 11324                           	
 11325  1010                     l11339:	
 11326                           ;robot.c: 125: unsigned char speedhighByte = (unsigned char)(speed >> 8);
 11327  1010  082A               	movf	(RobotDrive@speed+1),w
 11328  1011  00AD               	movwf	(??_RobotDrive+0)+0
 11329  1012  082D               	movf	(??_RobotDrive+0)+0,w
 11330  1013  00AF               	movwf	(RobotDrive@speedhighByte)
 11331                           	line	126
 11332                           	
 11333  1014                     l11341:	
 11334                           ;robot.c: 126: unsigned char radiuslowByte = (unsigned char)(radius);
 11335  1014  082B               	movf	(RobotDrive@radius),w
 11336  1015  00AD               	movwf	(??_RobotDrive+0)+0
 11337  1016  082D               	movf	(??_RobotDrive+0)+0,w
 11338  1017  00B0               	movwf	(RobotDrive@radiuslowByte)
 11339                           	line	127
 11340                           ;robot.c: 127: unsigned char radiushighByte = (unsigned char)(radius >> 8);
 11341  1018  082C               	movf	(RobotDrive@radius+1),w
 11342  1019  00AD               	movwf	(??_RobotDrive+0)+0
 11343  101A  082D               	movf	(??_RobotDrive+0)+0,w
 11344  101B  00B1               	movwf	(RobotDrive@radiushighByte)
 11345                           	line	129
 11346                           	
 11347  101C                     l11343:	
 11348                           ;robot.c: 129: ser_putch(137);
 11349  101C  3089               	movlw	(089h)
 11350  101D  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
 11351                           	line	131
 11352                           	
 11353  1022                     l11345:	
 11354                           ;robot.c: 131: ser_putch(speedhighByte);
 11355  1022  1283               	bcf	status, 5	;RP0=0, select bank0
 11356  1023  1303               	bcf	status, 6	;RP1=0, select bank0
 11357  1024  082F               	movf	(RobotDrive@speedhighByte),w
 11358  1025  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
 11359                           	line	133
 11360                           	
 11361  102A                     l11347:	
 11362                           ;robot.c: 133: ser_putch(speedlowByte);
 11363  102A  1283               	bcf	status, 5	;RP0=0, select bank0
 11364  102B  1303               	bcf	status, 6	;RP1=0, select bank0
 11365  102C  082E               	movf	(RobotDrive@speedlowByte),w
 11366  102D  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
 11367                           	line	135
 11368                           	
 11369  1032                     l11349:	
 11370                           ;robot.c: 135: ser_putch(radiushighByte);
 11371  1032  1283               	bcf	status, 5	;RP0=0, select bank0
 11372  1033  1303               	bcf	status, 6	;RP1=0, select bank0
 11373  1034  0831               	movf	(RobotDrive@radiushighByte),w
 11374  1035  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
 11375                           	line	137
 11376                           	
 11377  103A                     l11351:	
 11378                           ;robot.c: 137: ser_putch(radiuslowByte);
 11379  103A  1283               	bcf	status, 5	;RP0=0, select bank0
 11380  103B  1303               	bcf	status, 6	;RP1=0, select bank0
 11381  103C  0830               	movf	(RobotDrive@radiuslowByte),w
 11382  103D  160A  158A  251C   	fcall	_ser_putch
              160A  118A         
 11383                           	line	138
 11384                           	
 11385  1042                     l6106:	
 11386  1042  0008               	return
 11387                           	opt stack 0
 11388                           GLOBAL	__end_of_RobotDrive
 11389  1043                     	__end_of_RobotDrive:
 11390 ;; =============== function _RobotDrive ends ============
 11391                           
 11392                           	signat	_RobotDrive,8312
 11393                           	global	_robotLoadSong
 11394                           psect	text1111,local,class=CODE,delta=2
 11395                           global __ptext1111
 11396  1F4B                     __ptext1111:
 11397                           
 11398 ;; *************** function _robotLoadSong *****************
 11399 ;; Defined at:
 11400 ;;		line 548 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;		None
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;		None
 11405 ;; Return value:  Size  Location     Type
 11406 ;;		None               void
 11407 ;; Registers used:
 11408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11414 ;;      Params:         0       0       0       0       0
 11415 ;;      Locals:         0       0       0       0       0
 11416 ;;      Temps:          0       0       0       0       0
 11417 ;;      Totals:         0       0       0       0       0
 11418 ;;Total ram usage:        0 bytes
 11419 ;; Hardware stack levels used:    1
 11420 ;; Hardware stack levels required when called:    4
 11421 ;; This function calls:
 11422 ;;		_ser_putch
 11423 ;; This function is called by:
 11424 ;;		_main
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           psect	text1111
 11428                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 11429                           	line	548
 11430                           	global	__size_of_robotLoadSong
 11431  0055                     	__size_of_robotLoadSong	equ	__end_of_robotLoadSong-_robotLoadSong
 11432                           	
 11433  1F4B                     _robotLoadSong:	
 11434                           	opt	stack 3
 11435                           ; Regs used in _robotLoadSong: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11436                           	line	549
 11437                           	
 11438  1F4B                     l11335:	
 11439                           ;robot.c: 549: ser_putch(140);
 11440  1F4B  308C               	movlw	(08Ch)
 11441  1F4C  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11442                           	line	550
 11443                           ;robot.c: 550: ser_putch(0);
 11444  1F51  3000               	movlw	(0)
 11445  1F52  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11446                           	line	551
 11447                           ;robot.c: 551: ser_putch(2);
 11448  1F57  3002               	movlw	(02h)
 11449  1F58  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11450                           	line	552
 11451                           ;robot.c: 552: ser_putch(72);
 11452  1F5D  3048               	movlw	(048h)
 11453  1F5E  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11454                           	line	553
 11455                           ;robot.c: 553: ser_putch(16);
 11456  1F63  3010               	movlw	(010h)
 11457  1F64  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11458                           	line	554
 11459                           ;robot.c: 554: ser_putch(84);
 11460  1F69  3054               	movlw	(054h)
 11461  1F6A  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11462                           	line	555
 11463                           ;robot.c: 555: ser_putch(16);
 11464  1F6F  3010               	movlw	(010h)
 11465  1F70  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11466                           	line	557
 11467                           ;robot.c: 557: ser_putch(140);
 11468  1F75  308C               	movlw	(08Ch)
 11469  1F76  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11470                           	line	558
 11471                           ;robot.c: 558: ser_putch(1);
 11472  1F7B  3001               	movlw	(01h)
 11473  1F7C  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11474                           	line	559
 11475                           ;robot.c: 559: ser_putch(2);
 11476  1F81  3002               	movlw	(02h)
 11477  1F82  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11478                           	line	560
 11479                           ;robot.c: 560: ser_putch(84);
 11480  1F87  3054               	movlw	(054h)
 11481  1F88  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11482                           	line	561
 11483                           ;robot.c: 561: ser_putch(16);
 11484  1F8D  3010               	movlw	(010h)
 11485  1F8E  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11486                           	line	562
 11487                           ;robot.c: 562: ser_putch(72);
 11488  1F93  3048               	movlw	(048h)
 11489  1F94  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11490                           	line	563
 11491                           ;robot.c: 563: ser_putch(16);
 11492  1F99  3010               	movlw	(010h)
 11493  1F9A  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11494                           	line	564
 11495                           	
 11496  1F9F                     l6206:	
 11497  1F9F  0008               	return
 11498                           	opt stack 0
 11499                           GLOBAL	__end_of_robotLoadSong
 11500  1FA0                     	__end_of_robotLoadSong:
 11501 ;; =============== function _robotLoadSong ends ============
 11502                           
 11503                           	signat	_robotLoadSong,88
 11504                           	global	_robo_init
 11505                           psect	text1112,local,class=CODE,delta=2
 11506                           global __ptext1112
 11507  1BB9                     __ptext1112:
 11508                           
 11509 ;; *************** function _robo_init *****************
 11510 ;; Defined at:
 11511 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;		None
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11525 ;;      Params:         0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0
 11528 ;;      Totals:         0       0       0       0       0
 11529 ;;Total ram usage:        0 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    4
 11532 ;; This function calls:
 11533 ;;		_ser_putch
 11534 ;; This function is called by:
 11535 ;;		_init
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           psect	text1112
 11539                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 11540                           	line	42
 11541                           	global	__size_of_robo_init
 11542  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
 11543                           	
 11544  1BB9                     _robo_init:	
 11545                           	opt	stack 2
 11546                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11547                           	line	43
 11548                           	
 11549  1BB9                     l11333:	
 11550                           ;robot.c: 43: ser_putch(128);
 11551  1BB9  3080               	movlw	(080h)
 11552  1BBA  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11553                           	line	44
 11554                           ;robot.c: 44: ser_putch(132);
 11555  1BBF  3084               	movlw	(084h)
 11556  1BC0  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11557                           	line	45
 11558                           ;robot.c: 45: ser_putch(150);
 11559  1BC5  3096               	movlw	(096h)
 11560  1BC6  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11561                           	line	46
 11562                           ;robot.c: 46: ser_putch(0);
 11563  1BCB  3000               	movlw	(0)
 11564  1BCC  160A  158A  251C   	fcall	_ser_putch
              160A  158A         
 11565                           	line	47
 11566                           	
 11567  1BD1                     l6093:	
 11568  1BD1  0008               	return
 11569                           	opt stack 0
 11570                           GLOBAL	__end_of_robo_init
 11571  1BD2                     	__end_of_robo_init:
 11572 ;; =============== function _robo_init ends ============
 11573                           
 11574                           	signat	_robo_init,88
 11575                           	global	_lcd_write_data
 11576                           psect	text1113,local,class=CODE,delta=2
 11577                           global __ptext1113
 11578  1B0F                     __ptext1113:
 11579                           
 11580 ;; *************** function _lcd_write_data *****************
 11581 ;; Defined at:
 11582 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 11583 ;; Parameters:    Size  Location     Type
 11584 ;;  databyte        1    wreg     unsigned char 
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;  databyte        1    2[BANK0 ] unsigned char 
 11587 ;; Return value:  Size  Location     Type
 11588 ;;		None               void
 11589 ;; Registers used:
 11590 ;;		wreg
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11596 ;;      Params:         0       0       0       0       0
 11597 ;;      Locals:         0       1       0       0       0
 11598 ;;      Temps:          0       2       0       0       0
 11599 ;;      Totals:         0       3       0       0       0
 11600 ;;Total ram usage:        3 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:    3
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_lcd_write_string
 11607 ;;		_lcd_write_2_digit_bcd
 11608 ;;		_lcd_write_3_digit_bcd
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           psect	text1113
 11612                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 11613                           	line	30
 11614                           	global	__size_of_lcd_write_data
 11615  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 11616                           	
 11617  1B0F                     _lcd_write_data:	
 11618                           	opt	stack 1
 11619                           ; Regs used in _lcd_write_data: [wreg]
 11620                           ;lcd_write_data@databyte stored from wreg
 11621  1B0F  1283               	bcf	status, 5	;RP0=0, select bank0
 11622  1B10  1303               	bcf	status, 6	;RP1=0, select bank0
 11623  1B11  00A2               	movwf	(lcd_write_data@databyte)
 11624                           	line	31
 11625                           	
 11626  1B12                     l11325:	
 11627                           ;lcd.c: 31: RE2 = 0;
 11628  1B12  1109               	bcf	(74/8),(74)&7
 11629                           	line	32
 11630                           ;lcd.c: 32: RE1 = 0;
 11631  1B13  1089               	bcf	(73/8),(73)&7
 11632                           	line	33
 11633                           ;lcd.c: 33: RE0 = 1;
 11634  1B14  1409               	bsf	(72/8),(72)&7
 11635                           	line	34
 11636                           	
 11637  1B15                     l11327:	
 11638                           ;lcd.c: 34: PORTD = databyte;
 11639  1B15  0822               	movf	(lcd_write_data@databyte),w
 11640  1B16  0088               	movwf	(8)	;volatile
 11641                           	line	35
 11642                           	
 11643  1B17                     l11329:	
 11644                           ;lcd.c: 35: RE2 = 1;
 11645  1B17  1509               	bsf	(74/8),(74)&7
 11646                           	line	36
 11647                           	
 11648  1B18                     l11331:	
 11649                           ;lcd.c: 36: RE2 = 0;
 11650  1B18  1109               	bcf	(74/8),(74)&7
 11651                           	line	37
 11652                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
 11653                           	opt asmopt_off
 11654  1B19  3007               movlw	7
 11655  1B1A  00A1               movwf	((??_lcd_write_data+0)+0+1),f
 11656  1B1B  307D               	movlw	125
 11657  1B1C  00A0               movwf	((??_lcd_write_data+0)+0),f
 11658  1B1D                     u5627:
 11659  1B1D  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
 11660  1B1E  2B1D               	goto	u5627
 11661  1B1F  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
 11662  1B20  2B1D               	goto	u5627
 11663                           opt asmopt_on
 11664                           
 11665                           	line	38
 11666                           	
 11667  1B21                     l1402:	
 11668  1B21  0008               	return
 11669                           	opt stack 0
 11670                           GLOBAL	__end_of_lcd_write_data
 11671  1B22                     	__end_of_lcd_write_data:
 11672 ;; =============== function _lcd_write_data ends ============
 11673                           
 11674                           	signat	_lcd_write_data,4216
 11675                           	global	_lcd_write_control
 11676                           psect	text1114,local,class=CODE,delta=2
 11677                           global __ptext1114
 11678  1B49                     __ptext1114:
 11679                           
 11680 ;; *************** function _lcd_write_control *****************
 11681 ;; Defined at:
 11682 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  databyte        1    wreg     unsigned char 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;  databyte        1    2[BANK0 ] unsigned char 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;		None               void
 11689 ;; Registers used:
 11690 ;;		wreg
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11696 ;;      Params:         0       0       0       0       0
 11697 ;;      Locals:         0       1       0       0       0
 11698 ;;      Temps:          0       2       0       0       0
 11699 ;;      Totals:         0       3       0       0       0
 11700 ;;Total ram usage:        3 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    3
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_lcd_set_cursor
 11707 ;;		_lcd_init
 11708 ;;		_UpdateDisplay
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           psect	text1114
 11712                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 11713                           	line	18
 11714                           	global	__size_of_lcd_write_control
 11715  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 11716                           	
 11717  1B49                     _lcd_write_control:	
 11718                           	opt	stack 1
 11719                           ; Regs used in _lcd_write_control: [wreg]
 11720                           ;lcd_write_control@databyte stored from wreg
 11721  1B49  1283               	bcf	status, 5	;RP0=0, select bank0
 11722  1B4A  1303               	bcf	status, 6	;RP1=0, select bank0
 11723  1B4B  00A2               	movwf	(lcd_write_control@databyte)
 11724                           	line	19
 11725                           	
 11726  1B4C                     l11317:	
 11727                           ;lcd.c: 19: RE2 = 0;
 11728  1B4C  1109               	bcf	(74/8),(74)&7
 11729                           	line	20
 11730                           ;lcd.c: 20: RE1 = 0;
 11731  1B4D  1089               	bcf	(73/8),(73)&7
 11732                           	line	21
 11733                           ;lcd.c: 21: RE0 = 0;
 11734  1B4E  1009               	bcf	(72/8),(72)&7
 11735                           	line	22
 11736                           	
 11737  1B4F                     l11319:	
 11738                           ;lcd.c: 22: PORTD = databyte;
 11739  1B4F  0822               	movf	(lcd_write_control@databyte),w
 11740  1B50  0088               	movwf	(8)	;volatile
 11741                           	line	23
 11742                           	
 11743  1B51                     l11321:	
 11744                           ;lcd.c: 23: RE2 = 1;
 11745  1B51  1509               	bsf	(74/8),(74)&7
 11746                           	line	24
 11747                           	
 11748  1B52                     l11323:	
 11749                           ;lcd.c: 24: RE2 = 0;
 11750  1B52  1109               	bcf	(74/8),(74)&7
 11751                           	line	25
 11752                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
 11753                           	opt asmopt_off
 11754  1B53  300D               movlw	13
 11755  1B54  00A1               movwf	((??_lcd_write_control+0)+0+1),f
 11756  1B55  30FB               	movlw	251
 11757  1B56  00A0               movwf	((??_lcd_write_control+0)+0),f
 11758  1B57                     u5637:
 11759  1B57  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
 11760  1B58  2B57               	goto	u5637
 11761  1B59  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
 11762  1B5A  2B57               	goto	u5637
 11763  1B5B  2B5C               	nop2
 11764                           opt asmopt_on
 11765                           
 11766                           	line	26
 11767                           	
 11768  1B5C                     l1399:	
 11769  1B5C  0008               	return
 11770                           	opt stack 0
 11771                           GLOBAL	__end_of_lcd_write_control
 11772  1B5D                     	__end_of_lcd_write_control:
 11773 ;; =============== function _lcd_write_control ends ============
 11774                           
 11775                           	signat	_lcd_write_control,4216
 11776                           	global	_init_adc
 11777                           psect	text1115,local,class=CODE,delta=2
 11778                           global __ptext1115
 11779  1B5D                     __ptext1115:
 11780                           
 11781 ;; *************** function _init_adc *****************
 11782 ;; Defined at:
 11783 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;		None
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;		None
 11788 ;; Return value:  Size  Location     Type
 11789 ;;		None               void
 11790 ;; Registers used:
 11791 ;;		wreg, status,2
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11797 ;;      Params:         0       0       0       0       0
 11798 ;;      Locals:         0       0       0       0       0
 11799 ;;      Temps:          0       1       0       0       0
 11800 ;;      Totals:         0       1       0       0       0
 11801 ;;Total ram usage:        1 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    3
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_init
 11808 ;; This function uses a non-reentrant model
 11809 ;;
 11810                           psect	text1115
 11811                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 11812                           	line	61
 11813                           	global	__size_of_init_adc
 11814  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 11815                           	
 11816  1B5D                     _init_adc:	
 11817                           	opt	stack 3
 11818                           ; Regs used in _init_adc: [wreg+status,2]
 11819                           	line	63
 11820                           	
 11821  1B5D                     l11307:	
 11822                           ;adc.c: 63: PORTA = 0;
 11823  1B5D  1283               	bcf	status, 5	;RP0=0, select bank0
 11824  1B5E  1303               	bcf	status, 6	;RP1=0, select bank0
 11825  1B5F  0185               	clrf	(5)	;volatile
 11826                           	line	64
 11827                           	
 11828  1B60                     l11309:	
 11829                           ;adc.c: 64: TRISA = 0b00111111;
 11830  1B60  303F               	movlw	(03Fh)
 11831  1B61  1683               	bsf	status, 5	;RP0=1, select bank1
 11832  1B62  1303               	bcf	status, 6	;RP1=0, select bank1
 11833  1B63  0085               	movwf	(133)^080h	;volatile
 11834                           	line	67
 11835                           	
 11836  1B64                     l11311:	
 11837                           ;adc.c: 67: ADCON0 = 0b10100001;
 11838  1B64  30A1               	movlw	(0A1h)
 11839  1B65  1283               	bcf	status, 5	;RP0=0, select bank0
 11840  1B66  1303               	bcf	status, 6	;RP1=0, select bank0
 11841  1B67  009F               	movwf	(31)	;volatile
 11842                           	line	68
 11843                           	
 11844  1B68                     l11313:	
 11845                           ;adc.c: 68: ADCON1 = 0b0000010;
 11846  1B68  3002               	movlw	(02h)
 11847  1B69  1683               	bsf	status, 5	;RP0=1, select bank1
 11848  1B6A  1303               	bcf	status, 6	;RP1=0, select bank1
 11849  1B6B  009F               	movwf	(159)^080h	;volatile
 11850                           	line	70
 11851                           	
 11852  1B6C                     l11315:	
 11853                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
 11854                           	opt asmopt_off
 11855  1B6C  3053               movlw	83
 11856  1B6D  1283               	bcf	status, 5	;RP0=0, select bank0
 11857  1B6E  1303               	bcf	status, 6	;RP1=0, select bank0
 11858  1B6F  00A0               movwf	(??_init_adc+0)+0,f
 11859  1B70                     u5647:
 11860  1B70  0BA0               decfsz	(??_init_adc+0)+0,f
 11861  1B71  2B70               	goto	u5647
 11862                           opt asmopt_on
 11863                           
 11864                           	line	72
 11865                           	
 11866  1B72                     l700:	
 11867  1B72  0008               	return
 11868                           	opt stack 0
 11869                           GLOBAL	__end_of_init_adc
 11870  1B73                     	__end_of_init_adc:
 11871 ;; =============== function _init_adc ends ============
 11872                           
 11873                           	signat	_init_adc,88
 11874                           	global	_adc_read_channel
 11875                           psect	text1116,local,class=CODE,delta=2
 11876                           global __ptext1116
 11877  07C5                     __ptext1116:
 11878                           
 11879 ;; *************** function _adc_read_channel *****************
 11880 ;; Defined at:
 11881 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  channel         1    wreg     unsigned char 
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;  channel         1    7[BANK0 ] unsigned char 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      unsigned char 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11895 ;;      Params:         0       0       0       0       0
 11896 ;;      Locals:         0       1       0       0       0
 11897 ;;      Temps:          0       1       0       0       0
 11898 ;;      Totals:         0       2       0       0       0
 11899 ;;Total ram usage:        2 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:    4
 11902 ;; This function calls:
 11903 ;;		_adc_read
 11904 ;; This function is called by:
 11905 ;;		_readDistance
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           psect	text1116
 11909                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 11910                           	line	20
 11911                           	global	__size_of_adc_read_channel
 11912  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
 11913                           	
 11914  07C5                     _adc_read_channel:	
 11915                           	opt	stack 0
 11916                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11917                           ;adc_read_channel@channel stored from wreg
 11918  07C5  1283               	bcf	status, 5	;RP0=0, select bank0
 11919  07C6  1303               	bcf	status, 6	;RP1=0, select bank0
 11920  07C7  00A7               	movwf	(adc_read_channel@channel)
 11921                           	line	21
 11922                           	
 11923  07C8                     l11291:	
 11924                           ;adc.c: 21: switch(channel)
 11925  07C8  2FE1               	goto	l11299
 11926                           	line	23
 11927                           ;adc.c: 22: {
 11928                           ;adc.c: 23: case 0:
 11929                           	
 11930  07C9                     l690:	
 11931                           	line	24
 11932                           ;adc.c: 24: CHS0 = 0;
 11933  07C9  119F               	bcf	(251/8),(251)&7
 11934                           	line	25
 11935                           ;adc.c: 25: CHS1 = 0;
 11936  07CA  121F               	bcf	(252/8),(252)&7
 11937                           	line	26
 11938                           ;adc.c: 26: CHS2 = 0;
 11939  07CB  129F               	bcf	(253/8),(253)&7
 11940                           	line	27
 11941                           ;adc.c: 27: break;
 11942  07CC  2FF2               	goto	l11301
 11943                           	line	28
 11944                           ;adc.c: 28: case 1:
 11945                           	
 11946  07CD                     l692:	
 11947                           	line	29
 11948                           ;adc.c: 29: CHS0 = 1;
 11949  07CD  159F               	bsf	(251/8),(251)&7
 11950                           	line	30
 11951                           ;adc.c: 30: CHS1 = 0;
 11952  07CE  121F               	bcf	(252/8),(252)&7
 11953                           	line	31
 11954                           ;adc.c: 31: CHS2 = 0;
 11955  07CF  129F               	bcf	(253/8),(253)&7
 11956                           	line	32
 11957                           ;adc.c: 32: break;
 11958  07D0  2FF2               	goto	l11301
 11959                           	line	33
 11960                           ;adc.c: 33: case 2:
 11961                           	
 11962  07D1                     l693:	
 11963                           	line	34
 11964                           ;adc.c: 34: CHS0 = 0;
 11965  07D1  119F               	bcf	(251/8),(251)&7
 11966                           	line	35
 11967                           ;adc.c: 35: CHS1 = 1;
 11968  07D2  161F               	bsf	(252/8),(252)&7
 11969                           	line	36
 11970                           ;adc.c: 36: CHS2 = 0;
 11971  07D3  129F               	bcf	(253/8),(253)&7
 11972                           	line	37
 11973                           ;adc.c: 37: break;
 11974  07D4  2FF2               	goto	l11301
 11975                           	line	38
 11976                           ;adc.c: 38: case 3:
 11977                           	
 11978  07D5                     l694:	
 11979                           	line	39
 11980                           ;adc.c: 39: CHS0 = 1;
 11981  07D5  159F               	bsf	(251/8),(251)&7
 11982                           	line	40
 11983                           ;adc.c: 40: CHS1 = 1;
 11984  07D6  161F               	bsf	(252/8),(252)&7
 11985                           	line	41
 11986                           ;adc.c: 41: CHS2 = 0;
 11987  07D7  129F               	bcf	(253/8),(253)&7
 11988                           	line	42
 11989                           ;adc.c: 42: break;
 11990  07D8  2FF2               	goto	l11301
 11991                           	line	43
 11992                           ;adc.c: 43: case 4:
 11993                           	
 11994  07D9                     l695:	
 11995                           	line	44
 11996                           ;adc.c: 44: CHS0 = 0;
 11997  07D9  119F               	bcf	(251/8),(251)&7
 11998                           	line	45
 11999                           ;adc.c: 45: CHS1 = 0;
 12000  07DA  121F               	bcf	(252/8),(252)&7
 12001                           	line	46
 12002                           ;adc.c: 46: CHS2 = 1;
 12003  07DB  169F               	bsf	(253/8),(253)&7
 12004                           	line	47
 12005                           ;adc.c: 47: break;
 12006  07DC  2FF2               	goto	l11301
 12007                           	line	50
 12008                           ;adc.c: 50: default:
 12009                           	
 12010  07DD                     l696:	
 12011                           	line	51
 12012                           	
 12013  07DD                     l11293:	
 12014                           ;adc.c: 51: return 0;
 12015  07DD  3000               	movlw	(0)
 12016  07DE  2FFF               	goto	l697
 12017                           	
 12018  07DF                     l11295:	
 12019  07DF  2FFF               	goto	l697
 12020                           	line	52
 12021                           	
 12022  07E0                     l11297:	
 12023                           ;adc.c: 52: }
 12024  07E0  2FF2               	goto	l11301
 12025                           	line	21
 12026                           	
 12027  07E1                     l689:	
 12028                           	
 12029  07E1                     l11299:	
 12030  07E1  0827               	movf	(adc_read_channel@channel),w
 12031                           	; Switch size 1, requested type "space"
 12032                           ; Number of cases is 5, Range of values is 0 to 4
 12033                           ; switch strategies available:
 12034                           ; Name         Instructions Cycles
 12035                           ; simple_byte           16     9 (average)
 12036                           ; direct_byte           23     8 (fixed)
 12037                           ; jumptable            260     6 (fixed)
 12038                           ; rangetable             9     6 (fixed)
 12039                           ; spacedrange           16     9 (fixed)
 12040                           ; locatedrange           5     3 (fixed)
 12041                           ;	Chosen strategy is simple_byte
 12042                           
 12043                           	opt asmopt_off
 12044  07E2  3A00               	xorlw	0^0	; case 0
 12045  07E3  1903               	skipnz
 12046  07E4  2FC9               	goto	l690
 12047  07E5  3A01               	xorlw	1^0	; case 1
 12048  07E6  1903               	skipnz
 12049  07E7  2FCD               	goto	l692
 12050  07E8  3A03               	xorlw	2^1	; case 2
 12051  07E9  1903               	skipnz
 12052  07EA  2FD1               	goto	l693
 12053  07EB  3A01               	xorlw	3^2	; case 3
 12054  07EC  1903               	skipnz
 12055  07ED  2FD5               	goto	l694
 12056  07EE  3A07               	xorlw	4^3	; case 4
 12057  07EF  1903               	skipnz
 12058  07F0  2FD9               	goto	l695
 12059  07F1  2FDD               	goto	l11293
 12060                           	opt asmopt_on
 12061                           
 12062                           	line	52
 12063                           	
 12064  07F2                     l691:	
 12065                           	line	54
 12066                           	
 12067  07F2                     l11301:	
 12068                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
 12069                           	opt asmopt_off
 12070  07F2  3053               movlw	83
 12071  07F3  00A6               movwf	(??_adc_read_channel+0)+0,f
 12072  07F4                     u5657:
 12073  07F4  0BA6               decfsz	(??_adc_read_channel+0)+0,f
 12074  07F5  2FF4               	goto	u5657
 12075                           opt asmopt_on
 12076                           
 12077                           	line	56
 12078                           	
 12079  07F6                     l11303:	
 12080                           ;adc.c: 56: return adc_read();
 12081  07F6  160A  158A  241A   	fcall	_adc_read
              120A  118A         
 12082  07FB  1283               	bcf	status, 5	;RP0=0, select bank0
 12083  07FC  1303               	bcf	status, 6	;RP1=0, select bank0
 12084  07FD  0820               	movf	(0+(?_adc_read)),w
 12085  07FE  2FFF               	goto	l697
 12086                           	
 12087  07FF                     l11305:	
 12088                           	line	58
 12089                           	
 12090  07FF                     l697:	
 12091  07FF  0008               	return
 12092                           	opt stack 0
 12093                           GLOBAL	__end_of_adc_read_channel
 12094  0800                     	__end_of_adc_read_channel:
 12095 ;; =============== function _adc_read_channel ends ============
 12096                           
 12097                           	signat	_adc_read_channel,4217
 12098                           	global	___awmod
 12099                           psect	text1117,local,class=CODE,delta=2
 12100                           global __ptext1117
 12101  10AA                     __ptext1117:
 12102                           
 12103 ;; *************** function ___awmod *****************
 12104 ;; Defined at:
 12105 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;  divisor         2    0[BANK0 ] int 
 12108 ;;  dividend        2    2[BANK0 ] int 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;  sign            1    6[BANK0 ] unsigned char 
 12111 ;;  counter         1    5[BANK0 ] unsigned char 
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  2    0[BANK0 ] int 
 12114 ;; Registers used:
 12115 ;;		wreg, status,2, status,0
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12121 ;;      Params:         0       4       0       0       0
 12122 ;;      Locals:         0       2       0       0       0
 12123 ;;      Temps:          0       1       0       0       0
 12124 ;;      Totals:         0       7       0       0       0
 12125 ;;Total ram usage:        7 bytes
 12126 ;; Hardware stack levels used:    1
 12127 ;; Hardware stack levels required when called:    3
 12128 ;; This function calls:
 12129 ;;		Nothing
 12130 ;; This function is called by:
 12131 ;;		_UpdateDisplay
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           psect	text1117
 12135                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 12136                           	line	5
 12137                           	global	__size_of___awmod
 12138  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 12139                           	
 12140  10AA                     ___awmod:	
 12141                           	opt	stack 2
 12142                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12143                           	line	8
 12144                           	
 12145  10AA                     l11235:	
 12146  10AA  1283               	bcf	status, 5	;RP0=0, select bank0
 12147  10AB  1303               	bcf	status, 6	;RP1=0, select bank0
 12148  10AC  01A6               	clrf	(___awmod@sign)
 12149                           	line	9
 12150  10AD  1FA3               	btfss	(___awmod@dividend+1),7
 12151  10AE  28B0               	goto	u4541
 12152  10AF  28B1               	goto	u4540
 12153  10B0                     u4541:
 12154  10B0  28BA               	goto	l11239
 12155  10B1                     u4540:
 12156                           	line	10
 12157                           	
 12158  10B1                     l11237:	
 12159  10B1  09A2               	comf	(___awmod@dividend),f
 12160  10B2  09A3               	comf	(___awmod@dividend+1),f
 12161  10B3  0AA2               	incf	(___awmod@dividend),f
 12162  10B4  1903               	skipnz
 12163  10B5  0AA3               	incf	(___awmod@dividend+1),f
 12164                           	line	11
 12165  10B6  01A6               	clrf	(___awmod@sign)
 12166  10B7  1403               	bsf	status,0
 12167  10B8  0DA6               	rlf	(___awmod@sign),f
 12168  10B9  28BA               	goto	l11239
 12169                           	line	12
 12170                           	
 12171  10BA                     l7875:	
 12172                           	line	13
 12173                           	
 12174  10BA                     l11239:	
 12175  10BA  1FA1               	btfss	(___awmod@divisor+1),7
 12176  10BB  28BD               	goto	u4551
 12177  10BC  28BE               	goto	u4550
 12178  10BD                     u4551:
 12179  10BD  28C4               	goto	l11243
 12180  10BE                     u4550:
 12181                           	line	14
 12182                           	
 12183  10BE                     l11241:	
 12184  10BE  09A0               	comf	(___awmod@divisor),f
 12185  10BF  09A1               	comf	(___awmod@divisor+1),f
 12186  10C0  0AA0               	incf	(___awmod@divisor),f
 12187  10C1  1903               	skipnz
 12188  10C2  0AA1               	incf	(___awmod@divisor+1),f
 12189  10C3  28C4               	goto	l11243
 12190                           	
 12191  10C4                     l7876:	
 12192                           	line	15
 12193                           	
 12194  10C4                     l11243:	
 12195  10C4  0821               	movf	(___awmod@divisor+1),w
 12196  10C5  0420               	iorwf	(___awmod@divisor),w
 12197  10C6  1903               	skipnz
 12198  10C7  28C9               	goto	u4561
 12199  10C8  28CA               	goto	u4560
 12200  10C9                     u4561:
 12201  10C9  2900               	goto	l11261
 12202  10CA                     u4560:
 12203                           	line	16
 12204                           	
 12205  10CA                     l11245:	
 12206  10CA  01A5               	clrf	(___awmod@counter)
 12207  10CB  1403               	bsf	status,0
 12208  10CC  0DA5               	rlf	(___awmod@counter),f
 12209                           	line	17
 12210  10CD  28DA               	goto	l11251
 12211                           	
 12212  10CE                     l7879:	
 12213                           	line	18
 12214                           	
 12215  10CE                     l11247:	
 12216  10CE  3001               	movlw	01h
 12217                           	
 12218  10CF                     u4575:
 12219  10CF  1003               	clrc
 12220  10D0  0DA0               	rlf	(___awmod@divisor),f
 12221  10D1  0DA1               	rlf	(___awmod@divisor+1),f
 12222  10D2  3EFF               	addlw	-1
 12223  10D3  1D03               	skipz
 12224  10D4  28CF               	goto	u4575
 12225                           	line	19
 12226                           	
 12227  10D5                     l11249:	
 12228  10D5  3001               	movlw	(01h)
 12229  10D6  00A4               	movwf	(??___awmod+0)+0
 12230  10D7  0824               	movf	(??___awmod+0)+0,w
 12231  10D8  07A5               	addwf	(___awmod@counter),f
 12232  10D9  28DA               	goto	l11251
 12233                           	line	20
 12234                           	
 12235  10DA                     l7878:	
 12236                           	line	17
 12237                           	
 12238  10DA                     l11251:	
 12239  10DA  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 12240  10DB  28DD               	goto	u4581
 12241  10DC  28DE               	goto	u4580
 12242  10DD                     u4581:
 12243  10DD  28CE               	goto	l11247
 12244  10DE                     u4580:
 12245  10DE  28E0               	goto	l11253
 12246                           	
 12247  10DF                     l7880:	
 12248  10DF  28E0               	goto	l11253
 12249                           	line	21
 12250                           	
 12251  10E0                     l7881:	
 12252                           	line	22
 12253                           	
 12254  10E0                     l11253:	
 12255  10E0  0821               	movf	(___awmod@divisor+1),w
 12256  10E1  0223               	subwf	(___awmod@dividend+1),w
 12257  10E2  1D03               	skipz
 12258  10E3  28E6               	goto	u4595
 12259  10E4  0820               	movf	(___awmod@divisor),w
 12260  10E5  0222               	subwf	(___awmod@dividend),w
 12261  10E6                     u4595:
 12262  10E6  1C03               	skipc
 12263  10E7  28E9               	goto	u4591
 12264  10E8  28EA               	goto	u4590
 12265  10E9                     u4591:
 12266  10E9  28F1               	goto	l11257
 12267  10EA                     u4590:
 12268                           	line	23
 12269                           	
 12270  10EA                     l11255:	
 12271  10EA  0820               	movf	(___awmod@divisor),w
 12272  10EB  02A2               	subwf	(___awmod@dividend),f
 12273  10EC  0821               	movf	(___awmod@divisor+1),w
 12274  10ED  1C03               	skipc
 12275  10EE  03A3               	decf	(___awmod@dividend+1),f
 12276  10EF  02A3               	subwf	(___awmod@dividend+1),f
 12277  10F0  28F1               	goto	l11257
 12278                           	
 12279  10F1                     l7882:	
 12280                           	line	24
 12281                           	
 12282  10F1                     l11257:	
 12283  10F1  3001               	movlw	01h
 12284                           	
 12285  10F2                     u4605:
 12286  10F2  1003               	clrc
 12287  10F3  0CA1               	rrf	(___awmod@divisor+1),f
 12288  10F4  0CA0               	rrf	(___awmod@divisor),f
 12289  10F5  3EFF               	addlw	-1
 12290  10F6  1D03               	skipz
 12291  10F7  28F2               	goto	u4605
 12292                           	line	25
 12293                           	
 12294  10F8                     l11259:	
 12295  10F8  3001               	movlw	low(01h)
 12296  10F9  02A5               	subwf	(___awmod@counter),f
 12297  10FA  1D03               	btfss	status,2
 12298  10FB  28FD               	goto	u4611
 12299  10FC  28FE               	goto	u4610
 12300  10FD                     u4611:
 12301  10FD  28E0               	goto	l11253
 12302  10FE                     u4610:
 12303  10FE  2900               	goto	l11261
 12304                           	
 12305  10FF                     l7883:	
 12306  10FF  2900               	goto	l11261
 12307                           	line	26
 12308                           	
 12309  1100                     l7877:	
 12310                           	line	27
 12311                           	
 12312  1100                     l11261:	
 12313  1100  0826               	movf	(___awmod@sign),w
 12314  1101  1D03               	skipz
 12315  1102  2904               	goto	u4620
 12316  1103  290A               	goto	l11265
 12317  1104                     u4620:
 12318                           	line	28
 12319                           	
 12320  1104                     l11263:	
 12321  1104  09A2               	comf	(___awmod@dividend),f
 12322  1105  09A3               	comf	(___awmod@dividend+1),f
 12323  1106  0AA2               	incf	(___awmod@dividend),f
 12324  1107  1903               	skipnz
 12325  1108  0AA3               	incf	(___awmod@dividend+1),f
 12326  1109  290A               	goto	l11265
 12327                           	
 12328  110A                     l7884:	
 12329                           	line	29
 12330                           	
 12331  110A                     l11265:	
 12332  110A  0823               	movf	(___awmod@dividend+1),w
 12333  110B  01A1               	clrf	(?___awmod+1)
 12334  110C  07A1               	addwf	(?___awmod+1)
 12335  110D  0822               	movf	(___awmod@dividend),w
 12336  110E  01A0               	clrf	(?___awmod)
 12337  110F  07A0               	addwf	(?___awmod)
 12338                           
 12339  1110  2911               	goto	l7885
 12340                           	
 12341  1111                     l11267:	
 12342                           	line	30
 12343                           	
 12344  1111                     l7885:	
 12345  1111  0008               	return
 12346                           	opt stack 0
 12347                           GLOBAL	__end_of___awmod
 12348  1112                     	__end_of___awmod:
 12349 ;; =============== function ___awmod ends ============
 12350                           
 12351                           	signat	___awmod,8314
 12352                           	global	___awdiv
 12353                           psect	text1118,local,class=CODE,delta=2
 12354                           global __ptext1118
 12355  11F6                     __ptext1118:
 12356                           
 12357 ;; *************** function ___awdiv *****************
 12358 ;; Defined at:
 12359 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  divisor         2    0[BANK0 ] int 
 12362 ;;  dividend        2    2[BANK0 ] int 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  quotient        2    7[BANK0 ] int 
 12365 ;;  sign            1    6[BANK0 ] unsigned char 
 12366 ;;  counter         1    5[BANK0 ] unsigned char 
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  2    0[BANK0 ] int 
 12369 ;; Registers used:
 12370 ;;		wreg, status,2, status,0
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12376 ;;      Params:         0       4       0       0       0
 12377 ;;      Locals:         0       4       0       0       0
 12378 ;;      Temps:          0       1       0       0       0
 12379 ;;      Totals:         0       9       0       0       0
 12380 ;;Total ram usage:        9 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    3
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_UpdateDisplay
 12387 ;;		_robot_turnRight
 12388 ;; This function uses a non-reentrant model
 12389 ;;
 12390                           psect	text1118
 12391                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 12392                           	line	5
 12393                           	global	__size_of___awdiv
 12394  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 12395                           	
 12396  11F6                     ___awdiv:	
 12397                           	opt	stack 2
 12398                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12399                           	line	9
 12400                           	
 12401  11F6                     l11195:	
 12402  11F6  1283               	bcf	status, 5	;RP0=0, select bank0
 12403  11F7  1303               	bcf	status, 6	;RP1=0, select bank0
 12404  11F8  01A6               	clrf	(___awdiv@sign)
 12405                           	line	10
 12406  11F9  1FA1               	btfss	(___awdiv@divisor+1),7
 12407  11FA  29FC               	goto	u4441
 12408  11FB  29FD               	goto	u4440
 12409  11FC                     u4441:
 12410  11FC  2A06               	goto	l11199
 12411  11FD                     u4440:
 12412                           	line	11
 12413                           	
 12414  11FD                     l11197:	
 12415  11FD  09A0               	comf	(___awdiv@divisor),f
 12416  11FE  09A1               	comf	(___awdiv@divisor+1),f
 12417  11FF  0AA0               	incf	(___awdiv@divisor),f
 12418  1200  1903               	skipnz
 12419  1201  0AA1               	incf	(___awdiv@divisor+1),f
 12420                           	line	12
 12421  1202  01A6               	clrf	(___awdiv@sign)
 12422  1203  1403               	bsf	status,0
 12423  1204  0DA6               	rlf	(___awdiv@sign),f
 12424  1205  2A06               	goto	l11199
 12425                           	line	13
 12426                           	
 12427  1206                     l7807:	
 12428                           	line	14
 12429                           	
 12430  1206                     l11199:	
 12431  1206  1FA3               	btfss	(___awdiv@dividend+1),7
 12432  1207  2A09               	goto	u4451
 12433  1208  2A0A               	goto	u4450
 12434  1209                     u4451:
 12435  1209  2A14               	goto	l11205
 12436  120A                     u4450:
 12437                           	line	15
 12438                           	
 12439  120A                     l11201:	
 12440  120A  09A2               	comf	(___awdiv@dividend),f
 12441  120B  09A3               	comf	(___awdiv@dividend+1),f
 12442  120C  0AA2               	incf	(___awdiv@dividend),f
 12443  120D  1903               	skipnz
 12444  120E  0AA3               	incf	(___awdiv@dividend+1),f
 12445                           	line	16
 12446                           	
 12447  120F                     l11203:	
 12448  120F  3001               	movlw	(01h)
 12449  1210  00A4               	movwf	(??___awdiv+0)+0
 12450  1211  0824               	movf	(??___awdiv+0)+0,w
 12451  1212  06A6               	xorwf	(___awdiv@sign),f
 12452  1213  2A14               	goto	l11205
 12453                           	line	17
 12454                           	
 12455  1214                     l7808:	
 12456                           	line	18
 12457                           	
 12458  1214                     l11205:	
 12459  1214  01A7               	clrf	(___awdiv@quotient)
 12460  1215  01A8               	clrf	(___awdiv@quotient+1)
 12461                           	line	19
 12462                           	
 12463  1216                     l11207:	
 12464  1216  0821               	movf	(___awdiv@divisor+1),w
 12465  1217  0420               	iorwf	(___awdiv@divisor),w
 12466  1218  1903               	skipnz
 12467  1219  2A1B               	goto	u4461
 12468  121A  2A1C               	goto	u4460
 12469  121B                     u4461:
 12470  121B  2A5A               	goto	l11227
 12471  121C                     u4460:
 12472                           	line	20
 12473                           	
 12474  121C                     l11209:	
 12475  121C  01A5               	clrf	(___awdiv@counter)
 12476  121D  1403               	bsf	status,0
 12477  121E  0DA5               	rlf	(___awdiv@counter),f
 12478                           	line	21
 12479  121F  2A2C               	goto	l11215
 12480                           	
 12481  1220                     l7811:	
 12482                           	line	22
 12483                           	
 12484  1220                     l11211:	
 12485  1220  3001               	movlw	01h
 12486                           	
 12487  1221                     u4475:
 12488  1221  1003               	clrc
 12489  1222  0DA0               	rlf	(___awdiv@divisor),f
 12490  1223  0DA1               	rlf	(___awdiv@divisor+1),f
 12491  1224  3EFF               	addlw	-1
 12492  1225  1D03               	skipz
 12493  1226  2A21               	goto	u4475
 12494                           	line	23
 12495                           	
 12496  1227                     l11213:	
 12497  1227  3001               	movlw	(01h)
 12498  1228  00A4               	movwf	(??___awdiv+0)+0
 12499  1229  0824               	movf	(??___awdiv+0)+0,w
 12500  122A  07A5               	addwf	(___awdiv@counter),f
 12501  122B  2A2C               	goto	l11215
 12502                           	line	24
 12503                           	
 12504  122C                     l7810:	
 12505                           	line	21
 12506                           	
 12507  122C                     l11215:	
 12508  122C  1FA1               	btfss	(___awdiv@divisor+1),(15)&7
 12509  122D  2A2F               	goto	u4481
 12510  122E  2A30               	goto	u4480
 12511  122F                     u4481:
 12512  122F  2A20               	goto	l11211
 12513  1230                     u4480:
 12514  1230  2A32               	goto	l11217
 12515                           	
 12516  1231                     l7812:	
 12517  1231  2A32               	goto	l11217
 12518                           	line	25
 12519                           	
 12520  1232                     l7813:	
 12521                           	line	26
 12522                           	
 12523  1232                     l11217:	
 12524  1232  3001               	movlw	01h
 12525                           	
 12526  1233                     u4495:
 12527  1233  1003               	clrc
 12528  1234  0DA7               	rlf	(___awdiv@quotient),f
 12529  1235  0DA8               	rlf	(___awdiv@quotient+1),f
 12530  1236  3EFF               	addlw	-1
 12531  1237  1D03               	skipz
 12532  1238  2A33               	goto	u4495
 12533                           	line	27
 12534  1239  0821               	movf	(___awdiv@divisor+1),w
 12535  123A  0223               	subwf	(___awdiv@dividend+1),w
 12536  123B  1D03               	skipz
 12537  123C  2A3F               	goto	u4505
 12538  123D  0820               	movf	(___awdiv@divisor),w
 12539  123E  0222               	subwf	(___awdiv@dividend),w
 12540  123F                     u4505:
 12541  123F  1C03               	skipc
 12542  1240  2A42               	goto	u4501
 12543  1241  2A43               	goto	u4500
 12544  1242                     u4501:
 12545  1242  2A4B               	goto	l11223
 12546  1243                     u4500:
 12547                           	line	28
 12548                           	
 12549  1243                     l11219:	
 12550  1243  0820               	movf	(___awdiv@divisor),w
 12551  1244  02A2               	subwf	(___awdiv@dividend),f
 12552  1245  0821               	movf	(___awdiv@divisor+1),w
 12553  1246  1C03               	skipc
 12554  1247  03A3               	decf	(___awdiv@dividend+1),f
 12555  1248  02A3               	subwf	(___awdiv@dividend+1),f
 12556                           	line	29
 12557                           	
 12558  1249                     l11221:	
 12559  1249  1427               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 12560  124A  2A4B               	goto	l11223
 12561                           	line	30
 12562                           	
 12563  124B                     l7814:	
 12564                           	line	31
 12565                           	
 12566  124B                     l11223:	
 12567  124B  3001               	movlw	01h
 12568                           	
 12569  124C                     u4515:
 12570  124C  1003               	clrc
 12571  124D  0CA1               	rrf	(___awdiv@divisor+1),f
 12572  124E  0CA0               	rrf	(___awdiv@divisor),f
 12573  124F  3EFF               	addlw	-1
 12574  1250  1D03               	skipz
 12575  1251  2A4C               	goto	u4515
 12576                           	line	32
 12577                           	
 12578  1252                     l11225:	
 12579  1252  3001               	movlw	low(01h)
 12580  1253  02A5               	subwf	(___awdiv@counter),f
 12581  1254  1D03               	btfss	status,2
 12582  1255  2A57               	goto	u4521
 12583  1256  2A58               	goto	u4520
 12584  1257                     u4521:
 12585  1257  2A32               	goto	l11217
 12586  1258                     u4520:
 12587  1258  2A5A               	goto	l11227
 12588                           	
 12589  1259                     l7815:	
 12590  1259  2A5A               	goto	l11227
 12591                           	line	33
 12592                           	
 12593  125A                     l7809:	
 12594                           	line	34
 12595                           	
 12596  125A                     l11227:	
 12597  125A  0826               	movf	(___awdiv@sign),w
 12598  125B  1D03               	skipz
 12599  125C  2A5E               	goto	u4530
 12600  125D  2A64               	goto	l11231
 12601  125E                     u4530:
 12602                           	line	35
 12603                           	
 12604  125E                     l11229:	
 12605  125E  09A7               	comf	(___awdiv@quotient),f
 12606  125F  09A8               	comf	(___awdiv@quotient+1),f
 12607  1260  0AA7               	incf	(___awdiv@quotient),f
 12608  1261  1903               	skipnz
 12609  1262  0AA8               	incf	(___awdiv@quotient+1),f
 12610  1263  2A64               	goto	l11231
 12611                           	
 12612  1264                     l7816:	
 12613                           	line	36
 12614                           	
 12615  1264                     l11231:	
 12616  1264  0828               	movf	(___awdiv@quotient+1),w
 12617  1265  01A1               	clrf	(?___awdiv+1)
 12618  1266  07A1               	addwf	(?___awdiv+1)
 12619  1267  0827               	movf	(___awdiv@quotient),w
 12620  1268  01A0               	clrf	(?___awdiv)
 12621  1269  07A0               	addwf	(?___awdiv)
 12622                           
 12623  126A  2A6B               	goto	l7817
 12624                           	
 12625  126B                     l11233:	
 12626                           	line	37
 12627                           	
 12628  126B                     l7817:	
 12629  126B  0008               	return
 12630                           	opt stack 0
 12631                           GLOBAL	__end_of___awdiv
 12632  126C                     	__end_of___awdiv:
 12633 ;; =============== function ___awdiv ends ============
 12634                           
 12635                           	signat	___awdiv,8314
 12636                           	global	___lwmod
 12637                           psect	text1119,local,class=CODE,delta=2
 12638                           global __ptext1119
 12639  1E21                     __ptext1119:
 12640                           
 12641 ;; *************** function ___lwmod *****************
 12642 ;; Defined at:
 12643 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  divisor         2   14[BANK0 ] unsigned int 
 12646 ;;  dividend        2   16[BANK0 ] unsigned int 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  counter         1   19[BANK0 ] unsigned char 
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  2   14[BANK0 ] unsigned int 
 12651 ;; Registers used:
 12652 ;;		wreg, status,2, status,0
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12658 ;;      Params:         0       4       0       0       0
 12659 ;;      Locals:         0       1       0       0       0
 12660 ;;      Temps:          0       1       0       0       0
 12661 ;;      Totals:         0       6       0       0       0
 12662 ;;Total ram usage:        6 bytes
 12663 ;; Hardware stack levels used:    1
 12664 ;; Hardware stack levels required when called:    3
 12665 ;; This function calls:
 12666 ;;		Nothing
 12667 ;; This function is called by:
 12668 ;;		_sprintf
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           psect	text1119
 12672                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12673                           	line	5
 12674                           	global	__size_of___lwmod
 12675  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 12676                           	
 12677  1E21                     ___lwmod:	
 12678                           	opt	stack 1
 12679                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12680                           	line	8
 12681                           	
 12682  1E21                     l11173:	
 12683  1E21  1283               	bcf	status, 5	;RP0=0, select bank0
 12684  1E22  1303               	bcf	status, 6	;RP1=0, select bank0
 12685  1E23  082F               	movf	(___lwmod@divisor+1),w
 12686  1E24  042E               	iorwf	(___lwmod@divisor),w
 12687  1E25  1903               	skipnz
 12688  1E26  2E28               	goto	u4381
 12689  1E27  2E29               	goto	u4380
 12690  1E28                     u4381:
 12691  1E28  2E5F               	goto	l11191
 12692  1E29                     u4380:
 12693                           	line	9
 12694                           	
 12695  1E29                     l11175:	
 12696  1E29  01B3               	clrf	(___lwmod@counter)
 12697  1E2A  1403               	bsf	status,0
 12698  1E2B  0DB3               	rlf	(___lwmod@counter),f
 12699                           	line	10
 12700  1E2C  2E39               	goto	l11181
 12701                           	
 12702  1E2D                     l7685:	
 12703                           	line	11
 12704                           	
 12705  1E2D                     l11177:	
 12706  1E2D  3001               	movlw	01h
 12707                           	
 12708  1E2E                     u4395:
 12709  1E2E  1003               	clrc
 12710  1E2F  0DAE               	rlf	(___lwmod@divisor),f
 12711  1E30  0DAF               	rlf	(___lwmod@divisor+1),f
 12712  1E31  3EFF               	addlw	-1
 12713  1E32  1D03               	skipz
 12714  1E33  2E2E               	goto	u4395
 12715                           	line	12
 12716                           	
 12717  1E34                     l11179:	
 12718  1E34  3001               	movlw	(01h)
 12719  1E35  00B2               	movwf	(??___lwmod+0)+0
 12720  1E36  0832               	movf	(??___lwmod+0)+0,w
 12721  1E37  07B3               	addwf	(___lwmod@counter),f
 12722  1E38  2E39               	goto	l11181
 12723                           	line	13
 12724                           	
 12725  1E39                     l7684:	
 12726                           	line	10
 12727                           	
 12728  1E39                     l11181:	
 12729  1E39  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 12730  1E3A  2E3C               	goto	u4401
 12731  1E3B  2E3D               	goto	u4400
 12732  1E3C                     u4401:
 12733  1E3C  2E2D               	goto	l11177
 12734  1E3D                     u4400:
 12735  1E3D  2E3F               	goto	l11183
 12736                           	
 12737  1E3E                     l7686:	
 12738  1E3E  2E3F               	goto	l11183
 12739                           	line	14
 12740                           	
 12741  1E3F                     l7687:	
 12742                           	line	15
 12743                           	
 12744  1E3F                     l11183:	
 12745  1E3F  082F               	movf	(___lwmod@divisor+1),w
 12746  1E40  0231               	subwf	(___lwmod@dividend+1),w
 12747  1E41  1D03               	skipz
 12748  1E42  2E45               	goto	u4415
 12749  1E43  082E               	movf	(___lwmod@divisor),w
 12750  1E44  0230               	subwf	(___lwmod@dividend),w
 12751  1E45                     u4415:
 12752  1E45  1C03               	skipc
 12753  1E46  2E48               	goto	u4411
 12754  1E47  2E49               	goto	u4410
 12755  1E48                     u4411:
 12756  1E48  2E50               	goto	l11187
 12757  1E49                     u4410:
 12758                           	line	16
 12759                           	
 12760  1E49                     l11185:	
 12761  1E49  082E               	movf	(___lwmod@divisor),w
 12762  1E4A  02B0               	subwf	(___lwmod@dividend),f
 12763  1E4B  082F               	movf	(___lwmod@divisor+1),w
 12764  1E4C  1C03               	skipc
 12765  1E4D  03B1               	decf	(___lwmod@dividend+1),f
 12766  1E4E  02B1               	subwf	(___lwmod@dividend+1),f
 12767  1E4F  2E50               	goto	l11187
 12768                           	
 12769  1E50                     l7688:	
 12770                           	line	17
 12771                           	
 12772  1E50                     l11187:	
 12773  1E50  3001               	movlw	01h
 12774                           	
 12775  1E51                     u4425:
 12776  1E51  1003               	clrc
 12777  1E52  0CAF               	rrf	(___lwmod@divisor+1),f
 12778  1E53  0CAE               	rrf	(___lwmod@divisor),f
 12779  1E54  3EFF               	addlw	-1
 12780  1E55  1D03               	skipz
 12781  1E56  2E51               	goto	u4425
 12782                           	line	18
 12783                           	
 12784  1E57                     l11189:	
 12785  1E57  3001               	movlw	low(01h)
 12786  1E58  02B3               	subwf	(___lwmod@counter),f
 12787  1E59  1D03               	btfss	status,2
 12788  1E5A  2E5C               	goto	u4431
 12789  1E5B  2E5D               	goto	u4430
 12790  1E5C                     u4431:
 12791  1E5C  2E3F               	goto	l11183
 12792  1E5D                     u4430:
 12793  1E5D  2E5F               	goto	l11191
 12794                           	
 12795  1E5E                     l7689:	
 12796  1E5E  2E5F               	goto	l11191
 12797                           	line	19
 12798                           	
 12799  1E5F                     l7683:	
 12800                           	line	20
 12801                           	
 12802  1E5F                     l11191:	
 12803  1E5F  0831               	movf	(___lwmod@dividend+1),w
 12804  1E60  01AF               	clrf	(?___lwmod+1)
 12805  1E61  07AF               	addwf	(?___lwmod+1)
 12806  1E62  0830               	movf	(___lwmod@dividend),w
 12807  1E63  01AE               	clrf	(?___lwmod)
 12808  1E64  07AE               	addwf	(?___lwmod)
 12809                           
 12810  1E65  2E66               	goto	l7690
 12811                           	
 12812  1E66                     l11193:	
 12813                           	line	21
 12814                           	
 12815  1E66                     l7690:	
 12816  1E66  0008               	return
 12817                           	opt stack 0
 12818                           GLOBAL	__end_of___lwmod
 12819  1E67                     	__end_of___lwmod:
 12820 ;; =============== function ___lwmod ends ============
 12821                           
 12822                           	signat	___lwmod,8314
 12823                           	global	___lwdiv
 12824                           psect	text1120,local,class=CODE,delta=2
 12825                           global __ptext1120
 12826  1EFB                     __ptext1120:
 12827                           
 12828 ;; *************** function ___lwdiv *****************
 12829 ;; Defined at:
 12830 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;  divisor         2    6[BANK0 ] unsigned int 
 12833 ;;  dividend        2    8[BANK0 ] unsigned int 
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;  quotient        2   11[BANK0 ] unsigned int 
 12836 ;;  counter         1   13[BANK0 ] unsigned char 
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  2    6[BANK0 ] unsigned int 
 12839 ;; Registers used:
 12840 ;;		wreg, status,2, status,0
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12846 ;;      Params:         0       4       0       0       0
 12847 ;;      Locals:         0       3       0       0       0
 12848 ;;      Temps:          0       1       0       0       0
 12849 ;;      Totals:         0       8       0       0       0
 12850 ;;Total ram usage:        8 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    3
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_readAvgDistance
 12857 ;;		_ADCconvert
 12858 ;;		_sprintf
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           psect	text1120
 12862                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 12863                           	line	5
 12864                           	global	__size_of___lwdiv
 12865  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 12866                           	
 12867  1EFB                     ___lwdiv:	
 12868                           	opt	stack 1
 12869                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12870                           	line	9
 12871                           	
 12872  1EFB                     l11147:	
 12873  1EFB  1283               	bcf	status, 5	;RP0=0, select bank0
 12874  1EFC  1303               	bcf	status, 6	;RP1=0, select bank0
 12875  1EFD  01AB               	clrf	(___lwdiv@quotient)
 12876  1EFE  01AC               	clrf	(___lwdiv@quotient+1)
 12877                           	line	10
 12878                           	
 12879  1EFF                     l11149:	
 12880  1EFF  0827               	movf	(___lwdiv@divisor+1),w
 12881  1F00  0426               	iorwf	(___lwdiv@divisor),w
 12882  1F01  1903               	skipnz
 12883  1F02  2F04               	goto	u4311
 12884  1F03  2F05               	goto	u4310
 12885  1F04                     u4311:
 12886  1F04  2F43               	goto	l11169
 12887  1F05                     u4310:
 12888                           	line	11
 12889                           	
 12890  1F05                     l11151:	
 12891  1F05  01AD               	clrf	(___lwdiv@counter)
 12892  1F06  1403               	bsf	status,0
 12893  1F07  0DAD               	rlf	(___lwdiv@counter),f
 12894                           	line	12
 12895  1F08  2F15               	goto	l11157
 12896                           	
 12897  1F09                     l7675:	
 12898                           	line	13
 12899                           	
 12900  1F09                     l11153:	
 12901  1F09  3001               	movlw	01h
 12902                           	
 12903  1F0A                     u4325:
 12904  1F0A  1003               	clrc
 12905  1F0B  0DA6               	rlf	(___lwdiv@divisor),f
 12906  1F0C  0DA7               	rlf	(___lwdiv@divisor+1),f
 12907  1F0D  3EFF               	addlw	-1
 12908  1F0E  1D03               	skipz
 12909  1F0F  2F0A               	goto	u4325
 12910                           	line	14
 12911                           	
 12912  1F10                     l11155:	
 12913  1F10  3001               	movlw	(01h)
 12914  1F11  00AA               	movwf	(??___lwdiv+0)+0
 12915  1F12  082A               	movf	(??___lwdiv+0)+0,w
 12916  1F13  07AD               	addwf	(___lwdiv@counter),f
 12917  1F14  2F15               	goto	l11157
 12918                           	line	15
 12919                           	
 12920  1F15                     l7674:	
 12921                           	line	12
 12922                           	
 12923  1F15                     l11157:	
 12924  1F15  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 12925  1F16  2F18               	goto	u4331
 12926  1F17  2F19               	goto	u4330
 12927  1F18                     u4331:
 12928  1F18  2F09               	goto	l11153
 12929  1F19                     u4330:
 12930  1F19  2F1B               	goto	l11159
 12931                           	
 12932  1F1A                     l7676:	
 12933  1F1A  2F1B               	goto	l11159
 12934                           	line	16
 12935                           	
 12936  1F1B                     l7677:	
 12937                           	line	17
 12938                           	
 12939  1F1B                     l11159:	
 12940  1F1B  3001               	movlw	01h
 12941                           	
 12942  1F1C                     u4345:
 12943  1F1C  1003               	clrc
 12944  1F1D  0DAB               	rlf	(___lwdiv@quotient),f
 12945  1F1E  0DAC               	rlf	(___lwdiv@quotient+1),f
 12946  1F1F  3EFF               	addlw	-1
 12947  1F20  1D03               	skipz
 12948  1F21  2F1C               	goto	u4345
 12949                           	line	18
 12950  1F22  0827               	movf	(___lwdiv@divisor+1),w
 12951  1F23  0229               	subwf	(___lwdiv@dividend+1),w
 12952  1F24  1D03               	skipz
 12953  1F25  2F28               	goto	u4355
 12954  1F26  0826               	movf	(___lwdiv@divisor),w
 12955  1F27  0228               	subwf	(___lwdiv@dividend),w
 12956  1F28                     u4355:
 12957  1F28  1C03               	skipc
 12958  1F29  2F2B               	goto	u4351
 12959  1F2A  2F2C               	goto	u4350
 12960  1F2B                     u4351:
 12961  1F2B  2F34               	goto	l11165
 12962  1F2C                     u4350:
 12963                           	line	19
 12964                           	
 12965  1F2C                     l11161:	
 12966  1F2C  0826               	movf	(___lwdiv@divisor),w
 12967  1F2D  02A8               	subwf	(___lwdiv@dividend),f
 12968  1F2E  0827               	movf	(___lwdiv@divisor+1),w
 12969  1F2F  1C03               	skipc
 12970  1F30  03A9               	decf	(___lwdiv@dividend+1),f
 12971  1F31  02A9               	subwf	(___lwdiv@dividend+1),f
 12972                           	line	20
 12973                           	
 12974  1F32                     l11163:	
 12975  1F32  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 12976  1F33  2F34               	goto	l11165
 12977                           	line	21
 12978                           	
 12979  1F34                     l7678:	
 12980                           	line	22
 12981                           	
 12982  1F34                     l11165:	
 12983  1F34  3001               	movlw	01h
 12984                           	
 12985  1F35                     u4365:
 12986  1F35  1003               	clrc
 12987  1F36  0CA7               	rrf	(___lwdiv@divisor+1),f
 12988  1F37  0CA6               	rrf	(___lwdiv@divisor),f
 12989  1F38  3EFF               	addlw	-1
 12990  1F39  1D03               	skipz
 12991  1F3A  2F35               	goto	u4365
 12992                           	line	23
 12993                           	
 12994  1F3B                     l11167:	
 12995  1F3B  3001               	movlw	low(01h)
 12996  1F3C  02AD               	subwf	(___lwdiv@counter),f
 12997  1F3D  1D03               	btfss	status,2
 12998  1F3E  2F40               	goto	u4371
 12999  1F3F  2F41               	goto	u4370
 13000  1F40                     u4371:
 13001  1F40  2F1B               	goto	l11159
 13002  1F41                     u4370:
 13003  1F41  2F43               	goto	l11169
 13004                           	
 13005  1F42                     l7679:	
 13006  1F42  2F43               	goto	l11169
 13007                           	line	24
 13008                           	
 13009  1F43                     l7673:	
 13010                           	line	25
 13011                           	
 13012  1F43                     l11169:	
 13013  1F43  082C               	movf	(___lwdiv@quotient+1),w
 13014  1F44  01A7               	clrf	(?___lwdiv+1)
 13015  1F45  07A7               	addwf	(?___lwdiv+1)
 13016  1F46  082B               	movf	(___lwdiv@quotient),w
 13017  1F47  01A6               	clrf	(?___lwdiv)
 13018  1F48  07A6               	addwf	(?___lwdiv)
 13019                           
 13020  1F49  2F4A               	goto	l7680
 13021                           	
 13022  1F4A                     l11171:	
 13023                           	line	26
 13024                           	
 13025  1F4A                     l7680:	
 13026  1F4A  0008               	return
 13027                           	opt stack 0
 13028                           GLOBAL	__end_of___lwdiv
 13029  1F4B                     	__end_of___lwdiv:
 13030 ;; =============== function ___lwdiv ends ============
 13031                           
 13032                           	signat	___lwdiv,8314
 13033                           	global	___wmul
 13034                           psect	text1121,local,class=CODE,delta=2
 13035                           global __ptext1121
 13036  1C98                     __ptext1121:
 13037                           
 13038 ;; *************** function ___wmul *****************
 13039 ;; Defined at:
 13040 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13043 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  product         2    4[BANK0 ] unsigned int 
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  2    0[BANK0 ] unsigned int 
 13048 ;; Registers used:
 13049 ;;		wreg, status,2, status,0
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13055 ;;      Params:         0       4       0       0       0
 13056 ;;      Locals:         0       2       0       0       0
 13057 ;;      Temps:          0       0       0       0       0
 13058 ;;      Totals:         0       6       0       0       0
 13059 ;;Total ram usage:        6 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    3
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		_ADCconvert
 13066 ;;		_abs
 13067 ;;		_sprintf
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           psect	text1121
 13071                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 13072                           	line	3
 13073                           	global	__size_of___wmul
 13074  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 13075                           	
 13076  1C98                     ___wmul:	
 13077                           	opt	stack 1
 13078                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13079                           	line	4
 13080                           	
 13081  1C98                     l11135:	
 13082  1C98  1283               	bcf	status, 5	;RP0=0, select bank0
 13083  1C99  1303               	bcf	status, 6	;RP1=0, select bank0
 13084  1C9A  01A4               	clrf	(___wmul@product)
 13085  1C9B  01A5               	clrf	(___wmul@product+1)
 13086  1C9C  2C9D               	goto	l11137
 13087                           	line	6
 13088                           	
 13089  1C9D                     l7667:	
 13090                           	line	7
 13091                           	
 13092  1C9D                     l11137:	
 13093  1C9D  1C20               	btfss	(___wmul@multiplier),(0)&7
 13094  1C9E  2CA0               	goto	u4271
 13095  1C9F  2CA1               	goto	u4270
 13096  1CA0                     u4271:
 13097  1CA0  2CA7               	goto	l7668
 13098  1CA1                     u4270:
 13099                           	line	8
 13100                           	
 13101  1CA1                     l11139:	
 13102  1CA1  0822               	movf	(___wmul@multiplicand),w
 13103  1CA2  07A4               	addwf	(___wmul@product),f
 13104  1CA3  1803               	skipnc
 13105  1CA4  0AA5               	incf	(___wmul@product+1),f
 13106  1CA5  0823               	movf	(___wmul@multiplicand+1),w
 13107  1CA6  07A5               	addwf	(___wmul@product+1),f
 13108                           	
 13109  1CA7                     l7668:	
 13110                           	line	9
 13111  1CA7  3001               	movlw	01h
 13112                           	
 13113  1CA8                     u4285:
 13114  1CA8  1003               	clrc
 13115  1CA9  0DA2               	rlf	(___wmul@multiplicand),f
 13116  1CAA  0DA3               	rlf	(___wmul@multiplicand+1),f
 13117  1CAB  3EFF               	addlw	-1
 13118  1CAC  1D03               	skipz
 13119  1CAD  2CA8               	goto	u4285
 13120                           	line	10
 13121                           	
 13122  1CAE                     l11141:	
 13123  1CAE  3001               	movlw	01h
 13124                           	
 13125  1CAF                     u4295:
 13126  1CAF  1003               	clrc
 13127  1CB0  0CA1               	rrf	(___wmul@multiplier+1),f
 13128  1CB1  0CA0               	rrf	(___wmul@multiplier),f
 13129  1CB2  3EFF               	addlw	-1
 13130  1CB3  1D03               	skipz
 13131  1CB4  2CAF               	goto	u4295
 13132                           	line	11
 13133  1CB5  0821               	movf	((___wmul@multiplier+1)),w
 13134  1CB6  0420               	iorwf	((___wmul@multiplier)),w
 13135  1CB7  1D03               	skipz
 13136  1CB8  2CBA               	goto	u4301
 13137  1CB9  2CBB               	goto	u4300
 13138  1CBA                     u4301:
 13139  1CBA  2C9D               	goto	l11137
 13140  1CBB                     u4300:
 13141  1CBB  2CBC               	goto	l11143
 13142                           	
 13143  1CBC                     l7669:	
 13144                           	line	12
 13145                           	
 13146  1CBC                     l11143:	
 13147  1CBC  0825               	movf	(___wmul@product+1),w
 13148  1CBD  01A1               	clrf	(?___wmul+1)
 13149  1CBE  07A1               	addwf	(?___wmul+1)
 13150  1CBF  0824               	movf	(___wmul@product),w
 13151  1CC0  01A0               	clrf	(?___wmul)
 13152  1CC1  07A0               	addwf	(?___wmul)
 13153                           
 13154  1CC2  2CC3               	goto	l7670
 13155                           	
 13156  1CC3                     l11145:	
 13157                           	line	13
 13158                           	
 13159  1CC3                     l7670:	
 13160  1CC3  0008               	return
 13161                           	opt stack 0
 13162                           GLOBAL	__end_of___wmul
 13163  1CC4                     	__end_of___wmul:
 13164 ;; =============== function ___wmul ends ============
 13165                           
 13166                           	signat	___wmul,8314
 13167                           	global	_isdigit
 13168                           psect	text1122,local,class=CODE,delta=2
 13169                           global __ptext1122
 13170  1B89                     __ptext1122:
 13171                           
 13172 ;; *************** function _isdigit *****************
 13173 ;; Defined at:
 13174 ;;		line 13 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  c               1    wreg     unsigned char 
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;  c               1    1[BANK0 ] unsigned char 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;		None               void
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13188 ;;      Params:         0       0       0       0       0
 13189 ;;      Locals:         0       2       0       0       0
 13190 ;;      Temps:          0       0       0       0       0
 13191 ;;      Totals:         0       2       0       0       0
 13192 ;;Total ram usage:        2 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    3
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_sprintf
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           psect	text1122
 13202                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 13203                           	global	__size_of_isdigit
 13204  0017                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 13205                           	
 13206  1B89                     _isdigit:	
 13207                           	opt	stack 1
 13208                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13209                           ;isdigit@c stored from wreg
 13210  1B89  1283               	bcf	status, 5	;RP0=0, select bank0
 13211  1B8A  1303               	bcf	status, 6	;RP1=0, select bank0
 13212  1B8B  00A1               	movwf	(isdigit@c)
 13213                           	line	14
 13214                           	
 13215  1B8C                     l11123:	
 13216  1B8C  01A0               	clrf	(_isdigit$8644)
 13217                           	
 13218  1B8D                     l11125:	
 13219  1B8D  303A               	movlw	(03Ah)
 13220  1B8E  0221               	subwf	(isdigit@c),w
 13221  1B8F  1803               	skipnc
 13222  1B90  2B92               	goto	u4251
 13223  1B91  2B93               	goto	u4250
 13224  1B92                     u4251:
 13225  1B92  2B9D               	goto	l11131
 13226  1B93                     u4250:
 13227                           	
 13228  1B93                     l11127:	
 13229  1B93  3030               	movlw	(030h)
 13230  1B94  0221               	subwf	(isdigit@c),w
 13231  1B95  1C03               	skipc
 13232  1B96  2B98               	goto	u4261
 13233  1B97  2B99               	goto	u4260
 13234  1B98                     u4261:
 13235  1B98  2B9D               	goto	l11131
 13236  1B99                     u4260:
 13237                           	
 13238  1B99                     l11129:	
 13239  1B99  01A0               	clrf	(_isdigit$8644)
 13240  1B9A  1403               	bsf	status,0
 13241  1B9B  0DA0               	rlf	(_isdigit$8644),f
 13242  1B9C  2B9D               	goto	l11131
 13243                           	
 13244  1B9D                     l7657:	
 13245                           	
 13246  1B9D                     l11131:	
 13247  1B9D  0C20               	rrf	(_isdigit$8644),w
 13248                           	
 13249  1B9E  2B9F               	goto	l7658
 13250                           	
 13251  1B9F                     l11133:	
 13252                           	line	15
 13253                           	
 13254  1B9F                     l7658:	
 13255  1B9F  0008               	return
 13256                           	opt stack 0
 13257                           GLOBAL	__end_of_isdigit
 13258  1BA0                     	__end_of_isdigit:
 13259 ;; =============== function _isdigit ends ============
 13260                           
 13261                           	signat	_isdigit,4216
 13262                           	global	_ser_isrx
 13263                           psect	text1123,local,class=CODE,delta=2
 13264                           global __ptext1123
 13265  1BA0                     __ptext1123:
 13266                           
 13267 ;; *************** function _ser_isrx *****************
 13268 ;; Defined at:
 13269 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;		None
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;		None
 13274 ;; Return value:  Size  Location     Type
 13275 ;;		None               void
 13276 ;; Registers used:
 13277 ;;		wreg, status,2, status,0
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13283 ;;      Params:         0       0       0       0       0
 13284 ;;      Locals:         0       0       0       0       0
 13285 ;;      Temps:          0       0       0       0       0
 13286 ;;      Totals:         0       0       0       0       0
 13287 ;;Total ram usage:        0 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; Hardware stack levels required when called:    3
 13290 ;; This function calls:
 13291 ;;		Nothing
 13292 ;; This function is called by:
 13293 ;;		_ser_getch
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           psect	text1123
 13297                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 13298                           	line	45
 13299                           	global	__size_of_ser_isrx
 13300  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 13301                           	
 13302  1BA0                     _ser_isrx:	
 13303                           	opt	stack 1
 13304                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 13305                           	line	46
 13306                           	
 13307  1BA0                     l11075:	
 13308                           ;ser.c: 46: if(OERR) {
 13309  1BA0  1283               	bcf	status, 5	;RP0=0, select bank0
 13310  1BA1  1303               	bcf	status, 6	;RP1=0, select bank0
 13311  1BA2  1C98               	btfss	(193/8),(193)&7
 13312  1BA3  2BA5               	goto	u4181
 13313  1BA4  2BA6               	goto	u4180
 13314  1BA5                     u4181:
 13315  1BA5  2BAB               	goto	l11083
 13316  1BA6                     u4180:
 13317                           	line	47
 13318                           	
 13319  1BA6                     l11077:	
 13320                           ;ser.c: 47: CREN = 0;
 13321  1BA6  1218               	bcf	(196/8),(196)&7
 13322                           	line	48
 13323                           ;ser.c: 48: CREN = 1;
 13324  1BA7  1618               	bsf	(196/8),(196)&7
 13325                           	line	49
 13326                           	
 13327  1BA8                     l11079:	
 13328                           ;ser.c: 49: return 0;
 13329  1BA8  1003               	clrc
 13330                           	
 13331  1BA9  2BB8               	goto	l6906
 13332                           	
 13333  1BAA                     l11081:	
 13334  1BAA  2BB8               	goto	l6906
 13335                           	line	50
 13336                           	
 13337  1BAB                     l6905:	
 13338                           	line	51
 13339                           	
 13340  1BAB                     l11083:	
 13341                           ;ser.c: 50: }
 13342                           ;ser.c: 51: return (rxiptr!=rxoptr);
 13343  1BAB  1683               	bsf	status, 5	;RP0=1, select bank1
 13344  1BAC  1303               	bcf	status, 6	;RP1=0, select bank1
 13345  1BAD  0850               	movf	(_rxiptr)^080h,w	;volatile
 13346  1BAE  0651               	xorwf	(_rxoptr)^080h,w	;volatile
 13347  1BAF  1D03               	skipz
 13348  1BB0  2BB2               	goto	u4191
 13349  1BB1  2BB3               	goto	u4190
 13350  1BB2                     u4191:
 13351  1BB2  2BB5               	goto	l11087
 13352  1BB3                     u4190:
 13353                           	
 13354  1BB3                     l11085:	
 13355  1BB3  1003               	clrc
 13356                           	
 13357  1BB4  2BB8               	goto	l6906
 13358                           	
 13359  1BB5                     l10833:	
 13360                           	
 13361  1BB5                     l11087:	
 13362  1BB5  1403               	setc
 13363                           	
 13364  1BB6  2BB8               	goto	l6906
 13365                           	
 13366  1BB7                     l10835:	
 13367  1BB7  2BB8               	goto	l6906
 13368                           	
 13369  1BB8                     l11089:	
 13370                           	line	52
 13371                           	
 13372  1BB8                     l6906:	
 13373  1BB8  0008               	return
 13374                           	opt stack 0
 13375                           GLOBAL	__end_of_ser_isrx
 13376  1BB9                     	__end_of_ser_isrx:
 13377 ;; =============== function _ser_isrx ends ============
 13378                           
 13379                           	signat	_ser_isrx,88
 13380                           	global	_spi_transfer
 13381                           psect	text1124,local,class=CODE,delta=2
 13382                           global __ptext1124
 13383  1B35                     __ptext1124:
 13384                           
 13385 ;; *************** function _spi_transfer *****************
 13386 ;; Defined at:
 13387 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 13388 ;; Parameters:    Size  Location     Type
 13389 ;;  data            1    wreg     unsigned char 
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;  data            1    2[BANK0 ] unsigned char 
 13392 ;;  temp            1    1[BANK0 ] unsigned char 
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1    wreg      unsigned char 
 13395 ;; Registers used:
 13396 ;;		wreg
 13397 ;; Tracked objects:
 13398 ;;		On entry : 0/0
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13402 ;;      Params:         0       0       0       0       0
 13403 ;;      Locals:         0       2       0       0       0
 13404 ;;      Temps:          0       1       0       0       0
 13405 ;;      Totals:         0       3       0       0       0
 13406 ;;Total ram usage:        3 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:    3
 13409 ;; This function calls:
 13410 ;;		Nothing
 13411 ;; This function is called by:
 13412 ;;		_rotate
 13413 ;; This function uses a non-reentrant model
 13414 ;;
 13415                           psect	text1124
 13416                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 13417                           	line	50
 13418                           	global	__size_of_spi_transfer
 13419  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 13420                           	
 13421  1B35                     _spi_transfer:	
 13422                           	opt	stack 2
 13423                           ; Regs used in _spi_transfer: [wreg]
 13424                           ;spi_transfer@data stored from wreg
 13425  1B35  1283               	bcf	status, 5	;RP0=0, select bank0
 13426  1B36  1303               	bcf	status, 6	;RP1=0, select bank0
 13427  1B37  00A2               	movwf	(spi_transfer@data)
 13428                           	line	51
 13429                           	
 13430  1B38                     l11023:	
 13431                           ;steppermotor.c: 51: unsigned char temp = 0;
 13432  1B38  01A1               	clrf	(spi_transfer@temp)
 13433                           	line	53
 13434                           ;steppermotor.c: 53: SSPIF = 0;
 13435  1B39  118C               	bcf	(99/8),(99)&7
 13436                           	line	54
 13437                           	
 13438  1B3A                     l11025:	
 13439                           ;steppermotor.c: 54: SSPBUF = data;
 13440  1B3A  0822               	movf	(spi_transfer@data),w
 13441  1B3B  0093               	movwf	(19)	;volatile
 13442                           	line	56
 13443                           ;steppermotor.c: 56: while (SSPIF == 0);
 13444  1B3C  2B3D               	goto	l3743
 13445                           	
 13446  1B3D                     l3744:	
 13447                           	
 13448  1B3D                     l3743:	
 13449  1B3D  1D8C               	btfss	(99/8),(99)&7
 13450  1B3E  2B40               	goto	u4021
 13451  1B3F  2B41               	goto	u4020
 13452  1B40                     u4021:
 13453  1B40  2B3D               	goto	l3743
 13454  1B41                     u4020:
 13455  1B41  2B42               	goto	l11027
 13456                           	
 13457  1B42                     l3745:	
 13458                           	line	57
 13459                           	
 13460  1B42                     l11027:	
 13461                           ;steppermotor.c: 57: temp = SSPBUF;
 13462  1B42  0813               	movf	(19),w	;volatile
 13463  1B43  00A0               	movwf	(??_spi_transfer+0)+0
 13464  1B44  0820               	movf	(??_spi_transfer+0)+0,w
 13465  1B45  00A1               	movwf	(spi_transfer@temp)
 13466                           	line	58
 13467                           	
 13468  1B46                     l11029:	
 13469                           ;steppermotor.c: 58: SSPIF = 0;
 13470  1B46  118C               	bcf	(99/8),(99)&7
 13471  1B47  2B48               	goto	l3746
 13472                           	line	60
 13473                           	
 13474  1B48                     l11031:	
 13475                           	line	61
 13476                           ;steppermotor.c: 60: return temp;
 13477                           ;	Return value of _spi_transfer is never used
 13478                           	
 13479  1B48                     l3746:	
 13480  1B48  0008               	return
 13481                           	opt stack 0
 13482                           GLOBAL	__end_of_spi_transfer
 13483  1B49                     	__end_of_spi_transfer:
 13484 ;; =============== function _spi_transfer ends ============
 13485                           
 13486                           	signat	_spi_transfer,4217
 13487                           	global	_ser_putch
 13488                           psect	text1125,local,class=CODE,delta=2
 13489                           global __ptext1125
 13490  1D1C                     __ptext1125:
 13491                           
 13492 ;; *************** function _ser_putch *****************
 13493 ;; Defined at:
 13494 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  c               1    wreg     unsigned char 
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;  c               1    1[BANK0 ] unsigned char 
 13499 ;; Return value:  Size  Location     Type
 13500 ;;		None               void
 13501 ;; Registers used:
 13502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13508 ;;      Params:         0       0       0       0       0
 13509 ;;      Locals:         0       1       0       0       0
 13510 ;;      Temps:          0       1       0       0       0
 13511 ;;      Totals:         0       2       0       0       0
 13512 ;;Total ram usage:        2 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:    3
 13515 ;; This function calls:
 13516 ;;		Nothing
 13517 ;; This function is called by:
 13518 ;;		_main
 13519 ;;		_ChargeMode
 13520 ;;		_robo_init
 13521 ;;		_robot_read
 13522 ;;		_RobotDrive
 13523 ;;		_robotTurn
 13524 ;;		_RobotBattRead
 13525 ;;		_robotLoadSong
 13526 ;;		_ser_puts
 13527 ;;		_ser_puts2
 13528 ;;		_ser_puthex
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           psect	text1125
 13532                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 13533                           	line	70
 13534                           	global	__size_of_ser_putch
 13535  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 13536                           	
 13537  1D1C                     _ser_putch:	
 13538                           	opt	stack 2
 13539                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 13540                           ;ser_putch@c stored from wreg
 13541  1D1C  1283               	bcf	status, 5	;RP0=0, select bank0
 13542  1D1D  1303               	bcf	status, 6	;RP1=0, select bank0
 13543  1D1E  00A1               	movwf	(ser_putch@c)
 13544                           	line	71
 13545                           	
 13546  1D1F                     l11011:	
 13547                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 13548  1D1F  2D21               	goto	l11013
 13549                           	
 13550  1D20                     l6916:	
 13551                           	line	72
 13552                           ;ser.c: 72: continue;
 13553  1D20  2D21               	goto	l11013
 13554                           	
 13555  1D21                     l6915:	
 13556                           	line	71
 13557                           	
 13558  1D21                     l11013:	
 13559  1D21  1683               	bsf	status, 5	;RP0=1, select bank1
 13560  1D22  1303               	bcf	status, 6	;RP1=0, select bank1
 13561  1D23  0855               	movf	(_txiptr)^080h,w	;volatile
 13562  1D24  3E01               	addlw	01h
 13563  1D25  390F               	andlw	0Fh
 13564  1D26  0656               	xorwf	(_txoptr)^080h,w	;volatile
 13565  1D27  1903               	skipnz
 13566  1D28  2D2A               	goto	u4011
 13567  1D29  2D2B               	goto	u4010
 13568  1D2A                     u4011:
 13569  1D2A  2D21               	goto	l11013
 13570  1D2B                     u4010:
 13571                           	
 13572  1D2B                     l6917:	
 13573                           	line	73
 13574                           ;ser.c: 73: GIE=0;
 13575  1D2B  138B               	bcf	(95/8),(95)&7
 13576                           	line	74
 13577                           	
 13578  1D2C                     l11015:	
 13579                           ;ser.c: 74: txfifo[txiptr] = c;
 13580  1D2C  1283               	bcf	status, 5	;RP0=0, select bank0
 13581  1D2D  1303               	bcf	status, 6	;RP1=0, select bank0
 13582  1D2E  0821               	movf	(ser_putch@c),w
 13583  1D2F  00A0               	movwf	(??_ser_putch+0)+0
 13584  1D30  1683               	bsf	status, 5	;RP0=1, select bank1
 13585  1D31  1303               	bcf	status, 6	;RP1=0, select bank1
 13586  1D32  0855               	movf	(_txiptr)^080h,w
 13587  1D33  3EB0               	addlw	_txfifo&0ffh
 13588  1D34  0084               	movwf	fsr0
 13589  1D35  1283               	bcf	status, 5	;RP0=0, select bank0
 13590  1D36  1303               	bcf	status, 6	;RP1=0, select bank0
 13591  1D37  0820               	movf	(??_ser_putch+0)+0,w
 13592  1D38  1783               	bsf	status, 7	;select IRP bank3
 13593  1D39  0080               	movwf	indf
 13594                           	line	75
 13595                           	
 13596  1D3A                     l11017:	
 13597                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 13598  1D3A  1683               	bsf	status, 5	;RP0=1, select bank1
 13599  1D3B  1303               	bcf	status, 6	;RP1=0, select bank1
 13600  1D3C  0855               	movf	(_txiptr)^080h,w	;volatile
 13601  1D3D  3E01               	addlw	01h
 13602  1D3E  390F               	andlw	0Fh
 13603  1D3F  1283               	bcf	status, 5	;RP0=0, select bank0
 13604  1D40  1303               	bcf	status, 6	;RP1=0, select bank0
 13605  1D41  00A0               	movwf	(??_ser_putch+0)+0
 13606  1D42  0820               	movf	(??_ser_putch+0)+0,w
 13607  1D43  1683               	bsf	status, 5	;RP0=1, select bank1
 13608  1D44  1303               	bcf	status, 6	;RP1=0, select bank1
 13609  1D45  00D5               	movwf	(_txiptr)^080h	;volatile
 13610                           	line	76
 13611                           	
 13612  1D46                     l11019:	
 13613                           ;ser.c: 76: TXIE=1;
 13614  1D46  160C               	bsf	(1124/8)^080h,(1124)&7
 13615                           	line	77
 13616                           	
 13617  1D47                     l11021:	
 13618                           ;ser.c: 77: GIE=1;
 13619  1D47  178B               	bsf	(95/8),(95)&7
 13620                           	line	78
 13621                           	
 13622  1D48                     l6918:	
 13623  1D48  0008               	return
 13624                           	opt stack 0
 13625                           GLOBAL	__end_of_ser_putch
 13626  1D49                     	__end_of_ser_putch:
 13627 ;; =============== function _ser_putch ends ============
 13628                           
 13629                           	signat	_ser_putch,4216
 13630                           	global	_Menu
 13631                           psect	text1126,local,class=CODE,delta=2
 13632                           global __ptext1126
 13633  1E67                     __ptext1126:
 13634                           
 13635 ;; *************** function _Menu *****************
 13636 ;; Defined at:
 13637 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  BTN_input       1    wreg     unsigned char 
 13640 ;; Auto vars:     Size  Location     Type
 13641 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  1    wreg      unsigned char 
 13644 ;; Registers used:
 13645 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13646 ;; Tracked objects:
 13647 ;;		On entry : 0/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13651 ;;      Params:         0       0       0       0       0
 13652 ;;      Locals:         0       1       0       0       0
 13653 ;;      Temps:          0       0       0       0       0
 13654 ;;      Totals:         0       1       0       0       0
 13655 ;;Total ram usage:        1 bytes
 13656 ;; Hardware stack levels used:    1
 13657 ;; Hardware stack levels required when called:    3
 13658 ;; This function calls:
 13659 ;;		Nothing
 13660 ;; This function is called by:
 13661 ;;		_main
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           psect	text1126
 13665                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 13666                           	line	201
 13667                           	global	__size_of_Menu
 13668  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 13669                           	
 13670  1E67                     _Menu:	
 13671                           	opt	stack 4
 13672                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 13673                           ;Menu@BTN_input stored from wreg
 13674  1E67  1283               	bcf	status, 5	;RP0=0, select bank0
 13675  1E68  1303               	bcf	status, 6	;RP1=0, select bank0
 13676  1E69  00A0               	movwf	(Menu@BTN_input)
 13677                           	line	202
 13678                           	
 13679  1E6A                     l10987:	
 13680                           ;HMI.c: 202: switch (BTN_input)
 13681  1E6A  2E99               	goto	l11005
 13682                           	line	204
 13683                           ;HMI.c: 203: {
 13684                           ;HMI.c: 204: case 1:
 13685                           	
 13686  1E6B                     l4566:	
 13687                           	line	206
 13688                           ;HMI.c: 206: break;
 13689  1E6B  2EAB               	goto	l11007
 13690                           	line	207
 13691                           ;HMI.c: 207: case 2:
 13692                           	
 13693  1E6C                     l4568:	
 13694                           	line	209
 13695                           ;HMI.c: 209: break;
 13696  1E6C  2EAB               	goto	l11007
 13697                           	line	210
 13698                           ;HMI.c: 210: case 3:
 13699                           	
 13700  1E6D                     l4569:	
 13701                           	line	211
 13702                           	
 13703  1E6D                     l10989:	
 13704                           ;HMI.c: 211: pos--;
 13705  1E6D  30FF               	movlw	low(-1)
 13706  1E6E  1683               	bsf	status, 5	;RP0=1, select bank1
 13707  1E6F  1303               	bcf	status, 6	;RP1=0, select bank1
 13708  1E70  07B8               	addwf	(_pos)^080h,f
 13709  1E71  1803               	skipnc
 13710  1E72  0AB9               	incf	(_pos+1)^080h,f
 13711  1E73  30FF               	movlw	high(-1)
 13712  1E74  07B9               	addwf	(_pos+1)^080h,f
 13713                           	line	212
 13714                           	
 13715  1E75                     l10991:	
 13716                           ;HMI.c: 212: if (pos < 0)
 13717  1E75  1FB9               	btfss	(_pos+1)^080h,7
 13718  1E76  2E78               	goto	u3991
 13719  1E77  2E79               	goto	u3990
 13720  1E78                     u3991:
 13721  1E78  2EAB               	goto	l11007
 13722  1E79                     u3990:
 13723                           	line	213
 13724                           	
 13725  1E79                     l10993:	
 13726                           ;HMI.c: 213: pos = 6 - 1;
 13727  1E79  3005               	movlw	low(05h)
 13728  1E7A  00B8               	movwf	(_pos)^080h
 13729  1E7B  3000               	movlw	high(05h)
 13730  1E7C  00B9               	movwf	((_pos)^080h)+1
 13731  1E7D  2EAB               	goto	l11007
 13732                           	
 13733  1E7E                     l4570:	
 13734                           	line	215
 13735                           ;HMI.c: 215: break;
 13736  1E7E  2EAB               	goto	l11007
 13737                           	line	216
 13738                           ;HMI.c: 216: case 4:
 13739                           	
 13740  1E7F                     l4571:	
 13741                           	line	217
 13742                           	
 13743  1E7F                     l10995:	
 13744                           ;HMI.c: 217: pos++;
 13745  1E7F  3001               	movlw	low(01h)
 13746  1E80  1683               	bsf	status, 5	;RP0=1, select bank1
 13747  1E81  1303               	bcf	status, 6	;RP1=0, select bank1
 13748  1E82  07B8               	addwf	(_pos)^080h,f
 13749  1E83  1803               	skipnc
 13750  1E84  0AB9               	incf	(_pos+1)^080h,f
 13751  1E85  3000               	movlw	high(01h)
 13752  1E86  07B9               	addwf	(_pos+1)^080h,f
 13753                           	line	218
 13754                           ;HMI.c: 218: if (pos == 6)
 13755  1E87  3006               	movlw	06h
 13756  1E88  0638               	xorwf	(_pos)^080h,w
 13757  1E89  0439               	iorwf	(_pos+1)^080h,w
 13758  1E8A  1D03               	skipz
 13759  1E8B  2E8D               	goto	u4001
 13760  1E8C  2E8E               	goto	u4000
 13761  1E8D                     u4001:
 13762  1E8D  2EAB               	goto	l11007
 13763  1E8E                     u4000:
 13764                           	line	219
 13765                           	
 13766  1E8E                     l10997:	
 13767                           ;HMI.c: 219: pos = 0;
 13768  1E8E  01B8               	clrf	(_pos)^080h
 13769  1E8F  01B9               	clrf	(_pos+1)^080h
 13770  1E90  2EAB               	goto	l11007
 13771                           	
 13772  1E91                     l4572:	
 13773                           	line	221
 13774                           ;HMI.c: 221: break;
 13775  1E91  2EAB               	goto	l11007
 13776                           	line	222
 13777                           ;HMI.c: 222: case 5:
 13778                           	
 13779  1E92                     l4573:	
 13780                           	line	223
 13781                           	
 13782  1E92                     l10999:	
 13783                           ;HMI.c: 223: return pos;
 13784  1E92  1683               	bsf	status, 5	;RP0=1, select bank1
 13785  1E93  1303               	bcf	status, 6	;RP1=0, select bank1
 13786  1E94  0838               	movf	(_pos)^080h,w
 13787  1E95  2EAD               	goto	l4574
 13788                           	
 13789  1E96                     l11001:	
 13790  1E96  2EAD               	goto	l4574
 13791                           	line	226
 13792                           ;HMI.c: 226: default:
 13793                           	
 13794  1E97                     l4575:	
 13795                           	line	228
 13796                           ;HMI.c: 228: break;
 13797  1E97  2EAB               	goto	l11007
 13798                           	line	229
 13799                           	
 13800  1E98                     l11003:	
 13801                           ;HMI.c: 229: }
 13802  1E98  2EAB               	goto	l11007
 13803                           	line	202
 13804                           	
 13805  1E99                     l4565:	
 13806                           	
 13807  1E99                     l11005:	
 13808  1E99  1283               	bcf	status, 5	;RP0=0, select bank0
 13809  1E9A  0820               	movf	(Menu@BTN_input),w
 13810                           	; Switch size 1, requested type "space"
 13811                           ; Number of cases is 5, Range of values is 1 to 5
 13812                           ; switch strategies available:
 13813                           ; Name         Instructions Cycles
 13814                           ; simple_byte           16     9 (average)
 13815                           ; direct_byte           26    11 (fixed)
 13816                           ; jumptable            263     9 (fixed)
 13817                           ;	Chosen strategy is simple_byte
 13818                           
 13819                           	opt asmopt_off
 13820  1E9B  3A01               	xorlw	1^0	; case 1
 13821  1E9C  1903               	skipnz
 13822  1E9D  2EAB               	goto	l11007
 13823  1E9E  3A03               	xorlw	2^1	; case 2
 13824  1E9F  1903               	skipnz
 13825  1EA0  2EAB               	goto	l11007
 13826  1EA1  3A01               	xorlw	3^2	; case 3
 13827  1EA2  1903               	skipnz
 13828  1EA3  2E6D               	goto	l10989
 13829  1EA4  3A07               	xorlw	4^3	; case 4
 13830  1EA5  1903               	skipnz
 13831  1EA6  2E7F               	goto	l10995
 13832  1EA7  3A01               	xorlw	5^4	; case 5
 13833  1EA8  1903               	skipnz
 13834  1EA9  2E92               	goto	l10999
 13835  1EAA  2EAB               	goto	l11007
 13836                           	opt asmopt_on
 13837                           
 13838                           	line	229
 13839                           	
 13840  1EAB                     l4567:	
 13841                           	line	230
 13842                           	
 13843  1EAB                     l11007:	
 13844                           ;HMI.c: 230: return 255;
 13845  1EAB  30FF               	movlw	(0FFh)
 13846  1EAC  2EAD               	goto	l4574
 13847                           	
 13848  1EAD                     l11009:	
 13849                           	line	231
 13850                           	
 13851  1EAD                     l4574:	
 13852  1EAD  0008               	return
 13853                           	opt stack 0
 13854                           GLOBAL	__end_of_Menu
 13855  1EAE                     	__end_of_Menu:
 13856 ;; =============== function _Menu ends ============
 13857                           
 13858                           	signat	_Menu,4217
 13859                           	global	_ser_init
 13860                           psect	text1127,local,class=CODE,delta=2
 13861                           global __ptext1127
 13862  1C43                     __ptext1127:
 13863                           
 13864 ;; *************** function _ser_init *****************
 13865 ;; Defined at:
 13866 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 13867 ;; Parameters:    Size  Location     Type
 13868 ;;		None
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;		None
 13871 ;; Return value:  Size  Location     Type
 13872 ;;		None               void
 13873 ;; Registers used:
 13874 ;;		wreg, status,2, status,0
 13875 ;; Tracked objects:
 13876 ;;		On entry : 0/0
 13877 ;;		On exit  : 0/0
 13878 ;;		Unchanged: 0/0
 13879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13880 ;;      Params:         0       0       0       0       0
 13881 ;;      Locals:         0       0       0       0       0
 13882 ;;      Temps:          0       1       0       0       0
 13883 ;;      Totals:         0       1       0       0       0
 13884 ;;Total ram usage:        1 bytes
 13885 ;; Hardware stack levels used:    1
 13886 ;; Hardware stack levels required when called:    3
 13887 ;; This function calls:
 13888 ;;		Nothing
 13889 ;; This function is called by:
 13890 ;;		_init
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           psect	text1127
 13894                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 13895                           	line	113
 13896                           	global	__size_of_ser_init
 13897  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 13898                           	
 13899  1C43                     _ser_init:	
 13900                           	opt	stack 3
 13901                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 13902                           	line	114
 13903                           	
 13904  1C43                     l10961:	
 13905                           ;ser.c: 114: TRISC |= 0b10000000;
 13906  1C43  1683               	bsf	status, 5	;RP0=1, select bank1
 13907  1C44  1303               	bcf	status, 6	;RP1=0, select bank1
 13908  1C45  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 13909                           	line	115
 13910                           	
 13911  1C46                     l10963:	
 13912                           ;ser.c: 115: TRISC &= 0b10111111;
 13913  1C46  30BF               	movlw	(0BFh)
 13914  1C47  1283               	bcf	status, 5	;RP0=0, select bank0
 13915  1C48  1303               	bcf	status, 6	;RP1=0, select bank0
 13916  1C49  00A0               	movwf	(??_ser_init+0)+0
 13917  1C4A  0820               	movf	(??_ser_init+0)+0,w
 13918  1C4B  1683               	bsf	status, 5	;RP0=1, select bank1
 13919  1C4C  1303               	bcf	status, 6	;RP1=0, select bank1
 13920  1C4D  0587               	andwf	(135)^080h,f	;volatile
 13921                           	line	116
 13922                           	
 13923  1C4E                     l10965:	
 13924                           ;ser.c: 116: BRGH=1;
 13925  1C4E  1518               	bsf	(1218/8)^080h,(1218)&7
 13926                           	line	118
 13927                           	
 13928  1C4F                     l10967:	
 13929                           ;ser.c: 118: SPBRG=20;
 13930  1C4F  3014               	movlw	(014h)
 13931  1C50  0099               	movwf	(153)^080h	;volatile
 13932                           	line	121
 13933                           	
 13934  1C51                     l10969:	
 13935                           ;ser.c: 121: TX9=0;
 13936  1C51  1318               	bcf	(1222/8)^080h,(1222)&7
 13937                           	line	122
 13938                           	
 13939  1C52                     l10971:	
 13940                           ;ser.c: 122: RX9=0;
 13941  1C52  1283               	bcf	status, 5	;RP0=0, select bank0
 13942  1C53  1303               	bcf	status, 6	;RP1=0, select bank0
 13943  1C54  1318               	bcf	(198/8),(198)&7
 13944                           	line	124
 13945                           	
 13946  1C55                     l10973:	
 13947                           ;ser.c: 124: SYNC=0;
 13948  1C55  1683               	bsf	status, 5	;RP0=1, select bank1
 13949  1C56  1303               	bcf	status, 6	;RP1=0, select bank1
 13950  1C57  1218               	bcf	(1220/8)^080h,(1220)&7
 13951                           	line	125
 13952                           	
 13953  1C58                     l10975:	
 13954                           ;ser.c: 125: SPEN=1;
 13955  1C58  1283               	bcf	status, 5	;RP0=0, select bank0
 13956  1C59  1303               	bcf	status, 6	;RP1=0, select bank0
 13957  1C5A  1798               	bsf	(199/8),(199)&7
 13958                           	line	126
 13959                           	
 13960  1C5B                     l10977:	
 13961                           ;ser.c: 126: CREN=1;
 13962  1C5B  1618               	bsf	(196/8),(196)&7
 13963                           	line	127
 13964                           	
 13965  1C5C                     l10979:	
 13966                           ;ser.c: 127: TXIE=0;
 13967  1C5C  1683               	bsf	status, 5	;RP0=1, select bank1
 13968  1C5D  1303               	bcf	status, 6	;RP1=0, select bank1
 13969  1C5E  120C               	bcf	(1124/8)^080h,(1124)&7
 13970                           	line	128
 13971                           	
 13972  1C5F                     l10981:	
 13973                           ;ser.c: 128: RCIE=1;
 13974  1C5F  168C               	bsf	(1125/8)^080h,(1125)&7
 13975                           	line	129
 13976                           	
 13977  1C60                     l10983:	
 13978                           ;ser.c: 129: TXEN=1;
 13979  1C60  1698               	bsf	(1221/8)^080h,(1221)&7
 13980                           	line	132
 13981                           	
 13982  1C61                     l10985:	
 13983                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 13984  1C61  3000               	movlw	(0)
 13985  1C62  00D6               	movwf	(_txoptr)^080h	;volatile
 13986  1C63  00D5               	movwf	(_txiptr)^080h	;volatile
 13987  1C64  00D1               	movwf	(_rxoptr)^080h	;volatile
 13988  1C65  1283               	bcf	status, 5	;RP0=0, select bank0
 13989  1C66  1303               	bcf	status, 6	;RP1=0, select bank0
 13990  1C67  00A0               	movwf	(??_ser_init+0)+0
 13991  1C68  0820               	movf	(??_ser_init+0)+0,w
 13992  1C69  1683               	bsf	status, 5	;RP0=1, select bank1
 13993  1C6A  1303               	bcf	status, 6	;RP1=0, select bank1
 13994  1C6B  00D0               	movwf	(_rxiptr)^080h	;volatile
 13995                           	line	133
 13996                           	
 13997  1C6C                     l6940:	
 13998  1C6C  0008               	return
 13999                           	opt stack 0
 14000                           GLOBAL	__end_of_ser_init
 14001  1C6D                     	__end_of_ser_init:
 14002 ;; =============== function _ser_init ends ============
 14003                           
 14004                           	signat	_ser_init,88
 14005                           	global	_adc_read
 14006                           psect	text1128,local,class=CODE,delta=2
 14007                           global __ptext1128
 14008  1C1A                     __ptext1128:
 14009                           
 14010 ;; *************** function _adc_read *****************
 14011 ;; Defined at:
 14012 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;		None
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  2    0[BANK0 ] unsigned int 
 14019 ;; Registers used:
 14020 ;;		wreg, status,2, status,0
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/0
 14023 ;;		On exit  : 0/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14026 ;;      Params:         0       2       0       0       0
 14027 ;;      Locals:         0       2       0       0       0
 14028 ;;      Temps:          0       2       0       0       0
 14029 ;;      Totals:         0       6       0       0       0
 14030 ;;Total ram usage:        6 bytes
 14031 ;; Hardware stack levels used:    1
 14032 ;; Hardware stack levels required when called:    3
 14033 ;; This function calls:
 14034 ;;		Nothing
 14035 ;; This function is called by:
 14036 ;;		_adc_read_channel
 14037 ;; This function uses a non-reentrant model
 14038 ;;
 14039                           psect	text1128
 14040                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 14041                           	line	76
 14042                           	global	__size_of_adc_read
 14043  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 14044                           	
 14045  1C1A                     _adc_read:	
 14046                           	opt	stack 0
 14047                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 14048                           	line	79
 14049                           	
 14050  1C1A                     l10841:	
 14051                           ;adc.c: 77: volatile unsigned int adc_value;
 14052                           ;adc.c: 79: ADRESH = 0;
 14053  1C1A  1283               	bcf	status, 5	;RP0=0, select bank0
 14054  1C1B  1303               	bcf	status, 6	;RP1=0, select bank0
 14055  1C1C  019E               	clrf	(30)	;volatile
 14056                           	line	81
 14057                           	
 14058  1C1D                     l10843:	
 14059                           ;adc.c: 81: GO = 1;
 14060  1C1D  151F               	bsf	(250/8),(250)&7
 14061                           	line	82
 14062                           ;adc.c: 82: while(GO) continue;
 14063  1C1E  2C1F               	goto	l703
 14064                           	
 14065  1C1F                     l704:	
 14066                           	
 14067  1C1F                     l703:	
 14068  1C1F  191F               	btfsc	(250/8),(250)&7
 14069  1C20  2C22               	goto	u3801
 14070  1C21  2C23               	goto	u3800
 14071  1C22                     u3801:
 14072  1C22  2C1F               	goto	l703
 14073  1C23                     u3800:
 14074                           	
 14075  1C23                     l705:	
 14076                           	line	83
 14077                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 14078  1C23  0000               nop ;#
 14079                           	line	84
 14080                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 14081  1C24  0000               nop ;#
 14082                           	line	85
 14083                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 14084  1C25  0000               nop ;#
 14085                           psect	text1128
 14086                           	line	88
 14087                           	
 14088  1C26                     l10845:	
 14089                           ;adc.c: 88: adc_value = ADRESH;
 14090  1C26  1283               	bcf	status, 5	;RP0=0, select bank0
 14091  1C27  1303               	bcf	status, 6	;RP1=0, select bank0
 14092  1C28  081E               	movf	(30),w	;volatile
 14093  1C29  00A2               	movwf	(??_adc_read+0)+0
 14094  1C2A  01A3               	clrf	(??_adc_read+0)+0+1
 14095  1C2B  0822               	movf	0+(??_adc_read+0)+0,w
 14096  1C2C  00A4               	movwf	(adc_read@adc_value)	;volatile
 14097  1C2D  0823               	movf	1+(??_adc_read+0)+0,w
 14098  1C2E  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 14099                           	line	89
 14100                           ;adc.c: 89: adc_value <<= 1;
 14101  1C2F  3001               	movlw	01h
 14102                           	
 14103  1C30                     u3815:
 14104  1C30  1003               	clrc
 14105  1C31  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 14106  1C32  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 14107  1C33  3EFF               	addlw	-1
 14108  1C34  1D03               	skipz
 14109  1C35  2C30               	goto	u3815
 14110                           	line	90
 14111                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 14112  1C36  1683               	bsf	status, 5	;RP0=1, select bank1
 14113  1C37  1303               	bcf	status, 6	;RP1=0, select bank1
 14114  1C38  081E               	movf	(158)^080h,w	;volatile
 14115                           	line	93
 14116                           	
 14117  1C39                     l10847:	
 14118                           ;adc.c: 93: return (adc_value);
 14119  1C39  1283               	bcf	status, 5	;RP0=0, select bank0
 14120  1C3A  1303               	bcf	status, 6	;RP1=0, select bank0
 14121  1C3B  0825               	movf	(adc_read@adc_value+1),w	;volatile
 14122  1C3C  01A1               	clrf	(?_adc_read+1)
 14123  1C3D  07A1               	addwf	(?_adc_read+1)
 14124  1C3E  0824               	movf	(adc_read@adc_value),w	;volatile
 14125  1C3F  01A0               	clrf	(?_adc_read)
 14126  1C40  07A0               	addwf	(?_adc_read)
 14127                           
 14128  1C41  2C42               	goto	l706
 14129                           	
 14130  1C42                     l10849:	
 14131                           	line	94
 14132                           	
 14133  1C42                     l706:	
 14134  1C42  0008               	return
 14135                           	opt stack 0
 14136                           GLOBAL	__end_of_adc_read
 14137  1C43                     	__end_of_adc_read:
 14138 ;; =============== function _adc_read ends ============
 14139                           
 14140                           	signat	_adc_read,90
 14141                           	global	_isr1
 14142                           psect	text1129,local,class=CODE,delta=2
 14143                           global __ptext1129
 14144  14AF                     __ptext1129:
 14145                           
 14146 ;; *************** function _isr1 *****************
 14147 ;; Defined at:
 14148 ;;		line 107 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;		None
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;		None
 14153 ;; Return value:  Size  Location     Type
 14154 ;;		None               void
 14155 ;; Registers used:
 14156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14162 ;;      Params:         0       0       0       0       0
 14163 ;;      Locals:         0       0       0       0       0
 14164 ;;      Temps:          5       0       0       0       0
 14165 ;;      Totals:         5       0       0       0       0
 14166 ;;Total ram usage:        5 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:    2
 14169 ;; This function calls:
 14170 ;;		i1___lwmod
 14171 ;;		_ReadButtons
 14172 ;; This function is called by:
 14173 ;;		Interrupt level 1
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           psect	text1129
 14177                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 14178                           	line	107
 14179                           	global	__size_of_isr1
 14180  00AA                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 14181                           	
 14182  14AF                     _isr1:	
 14183                           	opt	stack 0
 14184                           ; Regs used in _isr1: [allreg]
 14185                           psect	intentry,class=CODE,delta=2
 14186                           global __pintentry
 14187  0004                     __pintentry:
 14188                           global interrupt_function
 14189  0004                     interrupt_function:
 14190                           	global saved_w
 14191  007E                     	saved_w	set	btemp+0
 14192  0004  00FE               	movwf	saved_w
 14193  0005  0E03               	swapf	status,w
 14194  0006  00F9               	movwf	(??_isr1+1)
 14195  0007  0804               	movf	fsr0,w
 14196  0008  00FA               	movwf	(??_isr1+2)
 14197  0009  080A               	movf	pclath,w
 14198  000A  00FB               	movwf	(??_isr1+3)
 14199  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 14200  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 14201  000D  087F               	movf	btemp+1,w
 14202  000E  00FC               	movwf	(??_isr1+4)
 14203  000F  160A  118A  2CAF   	ljmp	_isr1
 14204                           psect	text1129
 14205                           	line	108
 14206                           	
 14207  14AF                     i1l10877:	
 14208                           ;Main.c: 108: if(TMR0IF)
 14209  14AF  1D0B               	btfss	(90/8),(90)&7
 14210  14B0  2CB2               	goto	u385_21
 14211  14B1  2CB3               	goto	u385_20
 14212  14B2                     u385_21:
 14213  14B2  2D06               	goto	i1l10899
 14214  14B3                     u385_20:
 14215                           	line	110
 14216                           	
 14217  14B3                     i1l10879:	
 14218                           ;Main.c: 109: {
 14219                           ;Main.c: 110: TMR0IF = 0;
 14220  14B3  110B               	bcf	(90/8),(90)&7
 14221                           	line	111
 14222                           	
 14223  14B4                     i1l10881:	
 14224                           ;Main.c: 111: TMR0 = 100;
 14225  14B4  3064               	movlw	(064h)
 14226  14B5  0081               	movwf	(1)	;volatile
 14227                           	line	113
 14228                           ;Main.c: 113: RTC_Counter++;
 14229  14B6  3001               	movlw	low(01h)
 14230  14B7  1683               	bsf	status, 5	;RP0=1, select bank1
 14231  14B8  1303               	bcf	status, 6	;RP1=0, select bank1
 14232  14B9  07AA               	addwf	(_RTC_Counter)^080h,f	;volatile
 14233  14BA  1803               	skipnc
 14234  14BB  0AAB               	incf	(_RTC_Counter+1)^080h,f	;volatile
 14235  14BC  3000               	movlw	high(01h)
 14236  14BD  07AB               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 14237                           	line	116
 14238                           	
 14239  14BE                     i1l10883:	
 14240                           ;Main.c: 116: RTC_FLAG_1MS = 1;
 14241  14BE  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 14242                           	line	117
 14243                           	
 14244  14BF                     i1l10885:	
 14245                           ;Main.c: 117: if(RTC_Counter % 250 == 0)
 14246  14BF  30FA               	movlw	low(0FAh)
 14247  14C0  00F2               	movwf	(?i1___lwmod)
 14248  14C1  3000               	movlw	high(0FAh)
 14249  14C2  00F3               	movwf	((?i1___lwmod))+1
 14250  14C3  082B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 14251  14C4  01F5               	clrf	1+(?i1___lwmod)+02h
 14252  14C5  07F5               	addwf	1+(?i1___lwmod)+02h
 14253  14C6  082A               	movf	(_RTC_Counter)^080h,w	;volatile
 14254  14C7  01F4               	clrf	0+(?i1___lwmod)+02h
 14255  14C8  07F4               	addwf	0+(?i1___lwmod)+02h
 14256                           
 14257  14C9  160A  158A  25DD   	fcall	i1___lwmod
              160A  118A         
 14258  14CE  0873               	movf	((1+(?i1___lwmod))),w
 14259  14CF  0472               	iorwf	((0+(?i1___lwmod))),w
 14260  14D0  1D03               	skipz
 14261  14D1  2CD3               	goto	u386_21
 14262  14D2  2CD4               	goto	u386_20
 14263  14D3                     u386_21:
 14264  14D3  2CD6               	goto	i1l10889
 14265  14D4                     u386_20:
 14266                           	line	119
 14267                           	
 14268  14D4                     i1l10887:	
 14269                           ;Main.c: 118: {
 14270                           ;Main.c: 119: RTC_FLAG_250MS = 1;
 14271  14D4  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 14272  14D5  2CD6               	goto	i1l10889
 14273                           	line	120
 14274                           	
 14275  14D6                     i1l2241:	
 14276                           	line	121
 14277                           	
 14278  14D6                     i1l10889:	
 14279                           ;Main.c: 120: }
 14280                           ;Main.c: 121: if(RTC_Counter % 500 == 0)
 14281  14D6  30F4               	movlw	low(01F4h)
 14282  14D7  00F2               	movwf	(?i1___lwmod)
 14283  14D8  3001               	movlw	high(01F4h)
 14284  14D9  00F3               	movwf	((?i1___lwmod))+1
 14285  14DA  1683               	bsf	status, 5	;RP0=1, select bank1
 14286  14DB  1303               	bcf	status, 6	;RP1=0, select bank1
 14287  14DC  082B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 14288  14DD  01F5               	clrf	1+(?i1___lwmod)+02h
 14289  14DE  07F5               	addwf	1+(?i1___lwmod)+02h
 14290  14DF  082A               	movf	(_RTC_Counter)^080h,w	;volatile
 14291  14E0  01F4               	clrf	0+(?i1___lwmod)+02h
 14292  14E1  07F4               	addwf	0+(?i1___lwmod)+02h
 14293                           
 14294  14E2  160A  158A  25DD   	fcall	i1___lwmod
              160A  118A         
 14295  14E7  0873               	movf	((1+(?i1___lwmod))),w
 14296  14E8  0472               	iorwf	((0+(?i1___lwmod))),w
 14297  14E9  1D03               	skipz
 14298  14EA  2CEC               	goto	u387_21
 14299  14EB  2CED               	goto	u387_20
 14300  14EC                     u387_21:
 14301  14EC  2CF3               	goto	i1l10895
 14302  14ED                     u387_20:
 14303                           	line	123
 14304                           	
 14305  14ED                     i1l10891:	
 14306                           ;Main.c: 122: {
 14307                           ;Main.c: 123: RTC_FLAG_500MS = 1;
 14308  14ED  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 14309                           	line	124
 14310                           	
 14311  14EE                     i1l10893:	
 14312                           ;Main.c: 124: RB0 ^= 0x01;
 14313  14EE  1283               	bcf	status, 5	;RP0=0, select bank0
 14314  14EF  1303               	bcf	status, 6	;RP1=0, select bank0
 14315  14F0  3001               	movlw	1<<((48)&7)
 14316  14F1  0686               	xorwf	((48)/8),f
 14317  14F2  2CF3               	goto	i1l10895
 14318                           	line	125
 14319                           	
 14320  14F3                     i1l2242:	
 14321                           	line	126
 14322                           	
 14323  14F3                     i1l10895:	
 14324                           ;Main.c: 125: }
 14325                           ;Main.c: 126: if (buttonPressed == 0)
 14326  14F3  1683               	bsf	status, 5	;RP0=1, select bank1
 14327  14F4  1303               	bcf	status, 6	;RP1=0, select bank1
 14328  14F5  08CC               	movf	(_buttonPressed)^080h,f
 14329  14F6  1D03               	skipz	;volatile
 14330  14F7  2CF9               	goto	u388_21
 14331  14F8  2CFA               	goto	u388_20
 14332  14F9                     u388_21:
 14333  14F9  2D06               	goto	i1l10899
 14334  14FA                     u388_20:
 14335                           	line	128
 14336                           	
 14337  14FA                     i1l10897:	
 14338                           ;Main.c: 127: {
 14339                           ;Main.c: 128: buttonPressed = ReadButtons();
 14340  14FA  160A  158A  2578   	fcall	_ReadButtons
              160A  118A         
 14341  14FF  00F8               	movwf	(??_isr1+0)+0
 14342  1500  0878               	movf	(??_isr1+0)+0,w
 14343  1501  1683               	bsf	status, 5	;RP0=1, select bank1
 14344  1502  1303               	bcf	status, 6	;RP1=0, select bank1
 14345  1503  00CC               	movwf	(_buttonPressed)^080h	;volatile
 14346  1504  2D06               	goto	i1l10899
 14347                           	line	129
 14348                           	
 14349  1505                     i1l2243:	
 14350  1505  2D06               	goto	i1l10899
 14351                           	line	130
 14352                           	
 14353  1506                     i1l2240:	
 14354                           	line	131
 14355                           	
 14356  1506                     i1l10899:	
 14357                           ;Main.c: 129: }
 14358                           ;Main.c: 130: }
 14359                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 14360  1506  1283               	bcf	status, 5	;RP0=0, select bank0
 14361  1507  1E8C               	btfss	(101/8),(101)&7
 14362  1508  2D0A               	goto	u389_21
 14363  1509  2D0B               	goto	u389_20
 14364  150A                     u389_21:
 14365  150A  2D27               	goto	i1l10909
 14366  150B                     u389_20:
 14367                           	
 14368  150B                     i1l10901:	
 14369  150B  081A               	movf	(26),w	;volatile
 14370  150C  00F8               	movwf	(??_isr1+0)+0
 14371  150D  1683               	bsf	status, 5	;RP0=1, select bank1
 14372  150E  1303               	bcf	status, 6	;RP1=0, select bank1
 14373  150F  0850               	movf	(_rxiptr)^080h,w
 14374  1510  3EA0               	addlw	_rxfifo&0ffh
 14375  1511  0084               	movwf	fsr0
 14376  1512  0878               	movf	(??_isr1+0)+0,w
 14377  1513  1783               	bsf	status, 7	;select IRP bank3
 14378  1514  0080               	movwf	indf
 14379                           	
 14380  1515                     i1l10903:	
 14381  1515  0850               	movf	(_rxiptr)^080h,w	;volatile
 14382  1516  3E01               	addlw	01h
 14383  1517  390F               	andlw	0Fh
 14384  1518  00F8               	movwf	(??_isr1+0)+0
 14385  1519  0878               	movf	(??_isr1+0)+0,w
 14386  151A  00D2               	movwf	(_ser_tmp)^080h
 14387                           	
 14388  151B                     i1l10905:	
 14389  151B  0852               	movf	(_ser_tmp)^080h,w
 14390  151C  0651               	xorwf	(_rxoptr)^080h,w	;volatile
 14391  151D  1903               	skipnz
 14392  151E  2D20               	goto	u390_21
 14393  151F  2D21               	goto	u390_20
 14394  1520                     u390_21:
 14395  1520  2D27               	goto	i1l10909
 14396  1521                     u390_20:
 14397                           	
 14398  1521                     i1l10907:	
 14399  1521  0852               	movf	(_ser_tmp)^080h,w
 14400  1522  00F8               	movwf	(??_isr1+0)+0
 14401  1523  0878               	movf	(??_isr1+0)+0,w
 14402  1524  00D0               	movwf	(_rxiptr)^080h	;volatile
 14403  1525  2D27               	goto	i1l10909
 14404                           	
 14405  1526                     i1l2245:	
 14406  1526  2D27               	goto	i1l10909
 14407                           	
 14408  1527                     i1l2244:	
 14409                           	
 14410  1527                     i1l10909:	
 14411  1527  1283               	bcf	status, 5	;RP0=0, select bank0
 14412  1528  1E0C               	btfss	(100/8),(100)&7
 14413  1529  2D2B               	goto	u391_21
 14414  152A  2D2C               	goto	u391_20
 14415  152B                     u391_21:
 14416  152B  2D4D               	goto	i1l2248
 14417  152C                     u391_20:
 14418                           	
 14419  152C                     i1l10911:	
 14420  152C  1683               	bsf	status, 5	;RP0=1, select bank1
 14421  152D  1303               	bcf	status, 6	;RP1=0, select bank1
 14422  152E  1E0C               	btfss	(1124/8)^080h,(1124)&7
 14423  152F  2D31               	goto	u392_21
 14424  1530  2D32               	goto	u392_20
 14425  1531                     u392_21:
 14426  1531  2D4D               	goto	i1l2248
 14427  1532                     u392_20:
 14428                           	
 14429  1532                     i1l10913:	
 14430  1532  0856               	movf	(_txoptr)^080h,w
 14431  1533  3EB0               	addlw	_txfifo&0ffh
 14432  1534  0084               	movwf	fsr0
 14433  1535  1783               	bsf	status, 7	;select IRP bank3
 14434  1536  0800               	movf	indf,w
 14435  1537  1283               	bcf	status, 5	;RP0=0, select bank0
 14436  1538  1303               	bcf	status, 6	;RP1=0, select bank0
 14437  1539  0099               	movwf	(25)	;volatile
 14438                           	
 14439  153A                     i1l10915:	
 14440  153A  3001               	movlw	(01h)
 14441  153B  00F8               	movwf	(??_isr1+0)+0
 14442  153C  0878               	movf	(??_isr1+0)+0,w
 14443  153D  1683               	bsf	status, 5	;RP0=1, select bank1
 14444  153E  1303               	bcf	status, 6	;RP1=0, select bank1
 14445  153F  07D6               	addwf	(_txoptr)^080h,f	;volatile
 14446                           	
 14447  1540                     i1l10917:	
 14448  1540  300F               	movlw	(0Fh)
 14449  1541  00F8               	movwf	(??_isr1+0)+0
 14450  1542  0878               	movf	(??_isr1+0)+0,w
 14451  1543  05D6               	andwf	(_txoptr)^080h,f	;volatile
 14452                           	
 14453  1544                     i1l10919:	
 14454  1544  0856               	movf	(_txoptr)^080h,w	;volatile
 14455  1545  0655               	xorwf	(_txiptr)^080h,w	;volatile
 14456  1546  1D03               	skipz
 14457  1547  2D49               	goto	u393_21
 14458  1548  2D4A               	goto	u393_20
 14459  1549                     u393_21:
 14460  1549  2D4D               	goto	i1l2248
 14461  154A                     u393_20:
 14462                           	
 14463  154A                     i1l10921:	
 14464  154A  120C               	bcf	(1124/8)^080h,(1124)&7
 14465  154B  2D4D               	goto	i1l2248
 14466                           	
 14467  154C                     i1l2247:	
 14468  154C  2D4D               	goto	i1l2248
 14469                           	
 14470  154D                     i1l2246:	
 14471                           	line	132
 14472                           	
 14473  154D                     i1l2248:	
 14474  154D  087C               	movf	(??_isr1+4),w
 14475  154E  1283               	bcf	status, 5	;RP0=0, select bank0
 14476  154F  00FF               	movwf	btemp+1
 14477  1550  087B               	movf	(??_isr1+3),w
 14478  1551  008A               	movwf	pclath
 14479  1552  087A               	movf	(??_isr1+2),w
 14480  1553  0084               	movwf	fsr0
 14481  1554  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 14482  1555  0083               	movwf	status
 14483  1556  0EFE               	swapf	saved_w,f
 14484  1557  0E7E               	swapf	saved_w,w
 14485  1558  0009               	retfie
 14486                           	opt stack 0
 14487                           GLOBAL	__end_of_isr1
 14488  1559                     	__end_of_isr1:
 14489 ;; =============== function _isr1 ends ============
 14490                           
 14491                           	signat	_isr1,88
 14492                           	global	_ReadButtons
 14493                           psect	text1130,local,class=CODE,delta=2
 14494                           global __ptext1130
 14495  1D78                     __ptext1130:
 14496                           
 14497 ;; *************** function _ReadButtons *****************
 14498 ;; Defined at:
 14499 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;		None
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1    wreg      unsigned char 
 14506 ;; Registers used:
 14507 ;;		wreg, status,2, status,0, pclath, cstack
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14513 ;;      Params:         0       0       0       0       0
 14514 ;;      Locals:         0       0       0       0       0
 14515 ;;      Temps:          0       0       0       0       0
 14516 ;;      Totals:         0       0       0       0       0
 14517 ;;Total ram usage:        0 bytes
 14518 ;; Hardware stack levels used:    1
 14519 ;; Hardware stack levels required when called:    1
 14520 ;; This function calls:
 14521 ;;		_Debounce
 14522 ;; This function is called by:
 14523 ;;		_isr1
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           psect	text1130
 14527                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 14528                           	line	159
 14529                           	global	__size_of_ReadButtons
 14530  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 14531                           	
 14532  1D78                     _ReadButtons:	
 14533                           	opt	stack 0
 14534                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 14535                           	line	161
 14536                           	
 14537  1D78                     i1l10923:	
 14538                           ;HMI.c: 161: Debounce();
 14539  1D78  160A  118A  2373   	fcall	_Debounce
              160A  158A         
 14540                           	line	163
 14541                           	
 14542  1D7D                     i1l10925:	
 14543                           ;HMI.c: 163: if(UpPressed)
 14544  1D7D  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 14545  1D7E  2D80               	goto	u394_21
 14546  1D7F  2D81               	goto	u394_20
 14547  1D80                     u394_21:
 14548  1D80  2D85               	goto	i1l4557
 14549  1D81                     u394_20:
 14550                           	line	165
 14551                           	
 14552  1D81                     i1l10927:	
 14553                           ;HMI.c: 164: {
 14554                           ;HMI.c: 165: UpPressed = 0;
 14555  1D81  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 14556                           	line	166
 14557                           	
 14558  1D82                     i1l10929:	
 14559                           ;HMI.c: 166: return 1;
 14560  1D82  3001               	movlw	(01h)
 14561  1D83  2DA7               	goto	i1l4558
 14562                           	
 14563  1D84                     i1l10931:	
 14564  1D84  2DA7               	goto	i1l4558
 14565                           	line	168
 14566                           	
 14567  1D85                     i1l4557:	
 14568                           	line	170
 14569                           ;HMI.c: 168: }
 14570                           ;HMI.c: 170: if(DownPressed)
 14571  1D85  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 14572  1D86  2D88               	goto	u395_21
 14573  1D87  2D89               	goto	u395_20
 14574  1D88                     u395_21:
 14575  1D88  2D8D               	goto	i1l4559
 14576  1D89                     u395_20:
 14577                           	line	172
 14578                           	
 14579  1D89                     i1l10933:	
 14580                           ;HMI.c: 171: {
 14581                           ;HMI.c: 172: DownPressed = 0;
 14582  1D89  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 14583                           	line	173
 14584                           	
 14585  1D8A                     i1l10935:	
 14586                           ;HMI.c: 173: return 2;
 14587  1D8A  3002               	movlw	(02h)
 14588  1D8B  2DA7               	goto	i1l4558
 14589                           	
 14590  1D8C                     i1l10937:	
 14591  1D8C  2DA7               	goto	i1l4558
 14592                           	line	175
 14593                           	
 14594  1D8D                     i1l4559:	
 14595                           	line	176
 14596                           ;HMI.c: 175: }
 14597                           ;HMI.c: 176: if(LeftPressed)
 14598  1D8D  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 14599  1D8E  2D90               	goto	u396_21
 14600  1D8F  2D91               	goto	u396_20
 14601  1D90                     u396_21:
 14602  1D90  2D95               	goto	i1l4560
 14603  1D91                     u396_20:
 14604                           	line	178
 14605                           	
 14606  1D91                     i1l10939:	
 14607                           ;HMI.c: 177: {
 14608                           ;HMI.c: 178: LeftPressed = 0;
 14609  1D91  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 14610                           	line	179
 14611                           	
 14612  1D92                     i1l10941:	
 14613                           ;HMI.c: 179: return 3;
 14614  1D92  3003               	movlw	(03h)
 14615  1D93  2DA7               	goto	i1l4558
 14616                           	
 14617  1D94                     i1l10943:	
 14618  1D94  2DA7               	goto	i1l4558
 14619                           	line	181
 14620                           	
 14621  1D95                     i1l4560:	
 14622                           	line	182
 14623                           ;HMI.c: 181: }
 14624                           ;HMI.c: 182: if(RightPressed)
 14625  1D95  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 14626  1D96  2D98               	goto	u397_21
 14627  1D97  2D99               	goto	u397_20
 14628  1D98                     u397_21:
 14629  1D98  2D9D               	goto	i1l4561
 14630  1D99                     u397_20:
 14631                           	line	184
 14632                           	
 14633  1D99                     i1l10945:	
 14634                           ;HMI.c: 183: {
 14635                           ;HMI.c: 184: RightPressed = 0;
 14636  1D99  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 14637                           	line	185
 14638                           	
 14639  1D9A                     i1l10947:	
 14640                           ;HMI.c: 185: return 4;
 14641  1D9A  3004               	movlw	(04h)
 14642  1D9B  2DA7               	goto	i1l4558
 14643                           	
 14644  1D9C                     i1l10949:	
 14645  1D9C  2DA7               	goto	i1l4558
 14646                           	line	187
 14647                           	
 14648  1D9D                     i1l4561:	
 14649                           	line	189
 14650                           ;HMI.c: 187: }
 14651                           ;HMI.c: 189: if(CenterPressed)
 14652  1D9D  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 14653  1D9E  2DA0               	goto	u398_21
 14654  1D9F  2DA1               	goto	u398_20
 14655  1DA0                     u398_21:
 14656  1DA0  2DA5               	goto	i1l10957
 14657  1DA1                     u398_20:
 14658                           	line	191
 14659                           	
 14660  1DA1                     i1l10951:	
 14661                           ;HMI.c: 190: {
 14662                           ;HMI.c: 191: CenterPressed = 0;
 14663  1DA1  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 14664                           	line	192
 14665                           	
 14666  1DA2                     i1l10953:	
 14667                           ;HMI.c: 192: return 5;
 14668  1DA2  3005               	movlw	(05h)
 14669  1DA3  2DA7               	goto	i1l4558
 14670                           	
 14671  1DA4                     i1l10955:	
 14672  1DA4  2DA7               	goto	i1l4558
 14673                           	line	194
 14674                           	
 14675  1DA5                     i1l4562:	
 14676                           	line	195
 14677                           	
 14678  1DA5                     i1l10957:	
 14679                           ;HMI.c: 194: }
 14680                           ;HMI.c: 195: return 0;
 14681  1DA5  3000               	movlw	(0)
 14682  1DA6  2DA7               	goto	i1l4558
 14683                           	
 14684  1DA7                     i1l10959:	
 14685                           	line	196
 14686                           	
 14687  1DA7                     i1l4558:	
 14688  1DA7  0008               	return
 14689                           	opt stack 0
 14690                           GLOBAL	__end_of_ReadButtons
 14691  1DA8                     	__end_of_ReadButtons:
 14692 ;; =============== function _ReadButtons ends ============
 14693                           
 14694                           	signat	_ReadButtons,89
 14695                           	global	i1___lwmod
 14696                           psect	text1131,local,class=CODE,delta=2
 14697                           global __ptext1131
 14698  1DDD                     __ptext1131:
 14699                           
 14700 ;; *************** function i1___lwmod *****************
 14701 ;; Defined at:
 14702 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;  __lwmod         2    0[COMMON] unsigned int 
 14705 ;;  __lwmod         2    2[COMMON] unsigned int 
 14706 ;; Auto vars:     Size  Location     Type
 14707 ;;  __lwmod         1    5[COMMON] unsigned char 
 14708 ;; Return value:  Size  Location     Type
 14709 ;;                  2    0[COMMON] unsigned int 
 14710 ;; Registers used:
 14711 ;;		wreg, status,2, status,0
 14712 ;; Tracked objects:
 14713 ;;		On entry : 0/0
 14714 ;;		On exit  : 0/0
 14715 ;;		Unchanged: 0/0
 14716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14717 ;;      Params:         4       0       0       0       0
 14718 ;;      Locals:         1       0       0       0       0
 14719 ;;      Temps:          1       0       0       0       0
 14720 ;;      Totals:         6       0       0       0       0
 14721 ;;Total ram usage:        6 bytes
 14722 ;; Hardware stack levels used:    1
 14723 ;; This function calls:
 14724 ;;		Nothing
 14725 ;; This function is called by:
 14726 ;;		_isr1
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           psect	text1131
 14730                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 14731                           	line	5
 14732                           	global	__size_ofi1___lwmod
 14733  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 14734                           	
 14735  1DDD                     i1___lwmod:	
 14736                           	opt	stack 1
 14737                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 14738                           	line	8
 14739                           	
 14740  1DDD                     i1l11269:	
 14741  1DDD  0873               	movf	(i1___lwmod@divisor+1),w
 14742  1DDE  0472               	iorwf	(i1___lwmod@divisor),w
 14743  1DDF  1903               	skipnz
 14744  1DE0  2DE2               	goto	u463_21
 14745  1DE1  2DE3               	goto	u463_20
 14746  1DE2                     u463_21:
 14747  1DE2  2E19               	goto	i1l11287
 14748  1DE3                     u463_20:
 14749                           	line	9
 14750                           	
 14751  1DE3                     i1l11271:	
 14752  1DE3  01F7               	clrf	(i1___lwmod@counter)
 14753  1DE4  1403               	bsf	status,0
 14754  1DE5  0DF7               	rlf	(i1___lwmod@counter),f
 14755                           	line	10
 14756  1DE6  2DF3               	goto	i1l11277
 14757                           	
 14758  1DE7                     i1l7685:	
 14759                           	line	11
 14760                           	
 14761  1DE7                     i1l11273:	
 14762  1DE7  3001               	movlw	01h
 14763                           	
 14764  1DE8                     u464_25:
 14765  1DE8  1003               	clrc
 14766  1DE9  0DF2               	rlf	(i1___lwmod@divisor),f
 14767  1DEA  0DF3               	rlf	(i1___lwmod@divisor+1),f
 14768  1DEB  3EFF               	addlw	-1
 14769  1DEC  1D03               	skipz
 14770  1DED  2DE8               	goto	u464_25
 14771                           	line	12
 14772                           	
 14773  1DEE                     i1l11275:	
 14774  1DEE  3001               	movlw	(01h)
 14775  1DEF  00F6               	movwf	(??i1___lwmod+0)+0
 14776  1DF0  0876               	movf	(??i1___lwmod+0)+0,w
 14777  1DF1  07F7               	addwf	(i1___lwmod@counter),f
 14778  1DF2  2DF3               	goto	i1l11277
 14779                           	line	13
 14780                           	
 14781  1DF3                     i1l7684:	
 14782                           	line	10
 14783                           	
 14784  1DF3                     i1l11277:	
 14785  1DF3  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 14786  1DF4  2DF6               	goto	u465_21
 14787  1DF5  2DF7               	goto	u465_20
 14788  1DF6                     u465_21:
 14789  1DF6  2DE7               	goto	i1l11273
 14790  1DF7                     u465_20:
 14791  1DF7  2DF9               	goto	i1l11279
 14792                           	
 14793  1DF8                     i1l7686:	
 14794  1DF8  2DF9               	goto	i1l11279
 14795                           	line	14
 14796                           	
 14797  1DF9                     i1l7687:	
 14798                           	line	15
 14799                           	
 14800  1DF9                     i1l11279:	
 14801  1DF9  0873               	movf	(i1___lwmod@divisor+1),w
 14802  1DFA  0275               	subwf	(i1___lwmod@dividend+1),w
 14803  1DFB  1D03               	skipz
 14804  1DFC  2DFF               	goto	u466_25
 14805  1DFD  0872               	movf	(i1___lwmod@divisor),w
 14806  1DFE  0274               	subwf	(i1___lwmod@dividend),w
 14807  1DFF                     u466_25:
 14808  1DFF  1C03               	skipc
 14809  1E00  2E02               	goto	u466_21
 14810  1E01  2E03               	goto	u466_20
 14811  1E02                     u466_21:
 14812  1E02  2E0A               	goto	i1l11283
 14813  1E03                     u466_20:
 14814                           	line	16
 14815                           	
 14816  1E03                     i1l11281:	
 14817  1E03  0872               	movf	(i1___lwmod@divisor),w
 14818  1E04  02F4               	subwf	(i1___lwmod@dividend),f
 14819  1E05  0873               	movf	(i1___lwmod@divisor+1),w
 14820  1E06  1C03               	skipc
 14821  1E07  03F5               	decf	(i1___lwmod@dividend+1),f
 14822  1E08  02F5               	subwf	(i1___lwmod@dividend+1),f
 14823  1E09  2E0A               	goto	i1l11283
 14824                           	
 14825  1E0A                     i1l7688:	
 14826                           	line	17
 14827                           	
 14828  1E0A                     i1l11283:	
 14829  1E0A  3001               	movlw	01h
 14830                           	
 14831  1E0B                     u467_25:
 14832  1E0B  1003               	clrc
 14833  1E0C  0CF3               	rrf	(i1___lwmod@divisor+1),f
 14834  1E0D  0CF2               	rrf	(i1___lwmod@divisor),f
 14835  1E0E  3EFF               	addlw	-1
 14836  1E0F  1D03               	skipz
 14837  1E10  2E0B               	goto	u467_25
 14838                           	line	18
 14839                           	
 14840  1E11                     i1l11285:	
 14841  1E11  3001               	movlw	low(01h)
 14842  1E12  02F7               	subwf	(i1___lwmod@counter),f
 14843  1E13  1D03               	btfss	status,2
 14844  1E14  2E16               	goto	u468_21
 14845  1E15  2E17               	goto	u468_20
 14846  1E16                     u468_21:
 14847  1E16  2DF9               	goto	i1l11279
 14848  1E17                     u468_20:
 14849  1E17  2E19               	goto	i1l11287
 14850                           	
 14851  1E18                     i1l7689:	
 14852  1E18  2E19               	goto	i1l11287
 14853                           	line	19
 14854                           	
 14855  1E19                     i1l7683:	
 14856                           	line	20
 14857                           	
 14858  1E19                     i1l11287:	
 14859  1E19  0875               	movf	(i1___lwmod@dividend+1),w
 14860  1E1A  01F3               	clrf	(?i1___lwmod+1)
 14861  1E1B  07F3               	addwf	(?i1___lwmod+1)
 14862  1E1C  0874               	movf	(i1___lwmod@dividend),w
 14863  1E1D  01F2               	clrf	(?i1___lwmod)
 14864  1E1E  07F2               	addwf	(?i1___lwmod)
 14865                           
 14866  1E1F  2E20               	goto	i1l7690
 14867                           	
 14868  1E20                     i1l11289:	
 14869                           	line	21
 14870                           	
 14871  1E20                     i1l7690:	
 14872  1E20  0008               	return
 14873                           	opt stack 0
 14874                           GLOBAL	__end_ofi1___lwmod
 14875  1E21                     	__end_ofi1___lwmod:
 14876 ;; =============== function i1___lwmod ends ============
 14877                           
 14878                           	signat	i1___lwmod,90
 14879                           	global	_Debounce
 14880                           psect	text1132,local,class=CODE,delta=2
 14881                           global __ptext1132
 14882  1373                     __ptext1132:
 14883                           
 14884 ;; *************** function _Debounce *****************
 14885 ;; Defined at:
 14886 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;		None
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;		None               void
 14893 ;; Registers used:
 14894 ;;		wreg, status,2, status,0
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14900 ;;      Params:         0       0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0
 14902 ;;      Temps:          1       0       0       0       0
 14903 ;;      Totals:         1       0       0       0       0
 14904 ;;Total ram usage:        1 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; This function calls:
 14907 ;;		Nothing
 14908 ;; This function is called by:
 14909 ;;		_ReadButtons
 14910 ;; This function uses a non-reentrant model
 14911 ;;
 14912                           psect	text1132
 14913                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 14914                           	line	77
 14915                           	global	__size_of_Debounce
 14916  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 14917                           	
 14918  1373                     _Debounce:	
 14919                           	opt	stack 0
 14920                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 14921                           	line	79
 14922                           	
 14923  1373                     i1l11033:	
 14924                           ;HMI.c: 79: if(!RB2)
 14925  1373  1283               	bcf	status, 5	;RP0=0, select bank0
 14926  1374  1303               	bcf	status, 6	;RP1=0, select bank0
 14927  1375  1906               	btfsc	(50/8),(50)&7
 14928  1376  2B78               	goto	u403_21
 14929  1377  2B79               	goto	u403_20
 14930  1378                     u403_21:
 14931  1378  2B8D               	goto	i1l4539
 14932  1379                     u403_20:
 14933                           	line	81
 14934                           	
 14935  1379                     i1l11035:	
 14936                           ;HMI.c: 80: {
 14937                           ;HMI.c: 81: UpDebounceCount++;
 14938  1379  3001               	movlw	(01h)
 14939  137A  00F2               	movwf	(??_Debounce+0)+0
 14940  137B  0872               	movf	(??_Debounce+0)+0,w
 14941  137C  1683               	bsf	status, 5	;RP0=1, select bank1
 14942  137D  1303               	bcf	status, 6	;RP1=0, select bank1
 14943  137E  07C9               	addwf	(_UpDebounceCount)^080h,f	;volatile
 14944                           	line	82
 14945                           	
 14946  137F                     i1l11037:	
 14947                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 14948  137F  300A               	movlw	(0Ah)
 14949  1380  0249               	subwf	(_UpDebounceCount)^080h,w	;volatile
 14950  1381  1C03               	skipc
 14951  1382  2B84               	goto	u404_21
 14952  1383  2B85               	goto	u404_20
 14953  1384                     u404_21:
 14954  1384  2B91               	goto	i1l4541
 14955  1385                     u404_20:
 14956                           	
 14957  1385                     i1l11039:	
 14958  1385  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 14959  1386  2B88               	goto	u405_21
 14960  1387  2B89               	goto	u405_20
 14961  1388                     u405_21:
 14962  1388  2B91               	goto	i1l4541
 14963  1389                     u405_20:
 14964                           	line	84
 14965                           	
 14966  1389                     i1l11041:	
 14967                           ;HMI.c: 83: {
 14968                           ;HMI.c: 84: UpPressed = 1;
 14969  1389  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 14970                           	line	85
 14971                           ;HMI.c: 85: UpReleased = 0;
 14972  138A  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 14973  138B  2B91               	goto	i1l4541
 14974                           	line	86
 14975                           	
 14976  138C                     i1l4540:	
 14977                           	line	87
 14978                           ;HMI.c: 86: }
 14979                           ;HMI.c: 87: }
 14980  138C  2B91               	goto	i1l4541
 14981                           	line	88
 14982                           	
 14983  138D                     i1l4539:	
 14984                           	line	90
 14985                           ;HMI.c: 88: else
 14986                           ;HMI.c: 89: {
 14987                           ;HMI.c: 90: UpDebounceCount = 0;
 14988  138D  1683               	bsf	status, 5	;RP0=1, select bank1
 14989  138E  1303               	bcf	status, 6	;RP1=0, select bank1
 14990  138F  01C9               	clrf	(_UpDebounceCount)^080h	;volatile
 14991                           	line	91
 14992                           ;HMI.c: 91: UpReleased = 1;
 14993  1390  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 14994                           	line	92
 14995                           	
 14996  1391                     i1l4541:	
 14997                           	line	95
 14998                           ;HMI.c: 92: }
 14999                           ;HMI.c: 95: if(!RB3)
 15000  1391  1283               	bcf	status, 5	;RP0=0, select bank0
 15001  1392  1303               	bcf	status, 6	;RP1=0, select bank0
 15002  1393  1986               	btfsc	(51/8),(51)&7
 15003  1394  2B96               	goto	u406_21
 15004  1395  2B97               	goto	u406_20
 15005  1396                     u406_21:
 15006  1396  2BAB               	goto	i1l4542
 15007  1397                     u406_20:
 15008                           	line	97
 15009                           	
 15010  1397                     i1l11043:	
 15011                           ;HMI.c: 96: {
 15012                           ;HMI.c: 97: DownDebounceCount++;
 15013  1397  3001               	movlw	(01h)
 15014  1398  00F2               	movwf	(??_Debounce+0)+0
 15015  1399  0872               	movf	(??_Debounce+0)+0,w
 15016  139A  1683               	bsf	status, 5	;RP0=1, select bank1
 15017  139B  1303               	bcf	status, 6	;RP1=0, select bank1
 15018  139C  07C4               	addwf	(_DownDebounceCount)^080h,f	;volatile
 15019                           	line	98
 15020                           	
 15021  139D                     i1l11045:	
 15022                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 15023  139D  300A               	movlw	(0Ah)
 15024  139E  0244               	subwf	(_DownDebounceCount)^080h,w	;volatile
 15025  139F  1C03               	skipc
 15026  13A0  2BA2               	goto	u407_21
 15027  13A1  2BA3               	goto	u407_20
 15028  13A2                     u407_21:
 15029  13A2  2BAF               	goto	i1l4544
 15030  13A3                     u407_20:
 15031                           	
 15032  13A3                     i1l11047:	
 15033  13A3  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 15034  13A4  2BA6               	goto	u408_21
 15035  13A5  2BA7               	goto	u408_20
 15036  13A6                     u408_21:
 15037  13A6  2BAF               	goto	i1l4544
 15038  13A7                     u408_20:
 15039                           	line	100
 15040                           	
 15041  13A7                     i1l11049:	
 15042                           ;HMI.c: 99: {
 15043                           ;HMI.c: 100: DownPressed = 1;
 15044  13A7  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 15045                           	line	101
 15046                           ;HMI.c: 101: DownReleased = 0;
 15047  13A8  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 15048  13A9  2BAF               	goto	i1l4544
 15049                           	line	102
 15050                           	
 15051  13AA                     i1l4543:	
 15052                           	line	103
 15053                           ;HMI.c: 102: }
 15054                           ;HMI.c: 103: }
 15055  13AA  2BAF               	goto	i1l4544
 15056                           	line	104
 15057                           	
 15058  13AB                     i1l4542:	
 15059                           	line	106
 15060                           ;HMI.c: 104: else
 15061                           ;HMI.c: 105: {
 15062                           ;HMI.c: 106: DownDebounceCount = 0;
 15063  13AB  1683               	bsf	status, 5	;RP0=1, select bank1
 15064  13AC  1303               	bcf	status, 6	;RP1=0, select bank1
 15065  13AD  01C4               	clrf	(_DownDebounceCount)^080h	;volatile
 15066                           	line	107
 15067                           ;HMI.c: 107: DownReleased = 1;
 15068  13AE  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 15069                           	line	108
 15070                           	
 15071  13AF                     i1l4544:	
 15072                           	line	110
 15073                           ;HMI.c: 108: }
 15074                           ;HMI.c: 110: if(!RB4)
 15075  13AF  1283               	bcf	status, 5	;RP0=0, select bank0
 15076  13B0  1303               	bcf	status, 6	;RP1=0, select bank0
 15077  13B1  1A06               	btfsc	(52/8),(52)&7
 15078  13B2  2BB4               	goto	u409_21
 15079  13B3  2BB5               	goto	u409_20
 15080  13B4                     u409_21:
 15081  13B4  2BC9               	goto	i1l4545
 15082  13B5                     u409_20:
 15083                           	line	112
 15084                           	
 15085  13B5                     i1l11051:	
 15086                           ;HMI.c: 111: {
 15087                           ;HMI.c: 112: LeftDebounceCount++;
 15088  13B5  3001               	movlw	(01h)
 15089  13B6  00F2               	movwf	(??_Debounce+0)+0
 15090  13B7  0872               	movf	(??_Debounce+0)+0,w
 15091  13B8  1683               	bsf	status, 5	;RP0=1, select bank1
 15092  13B9  1303               	bcf	status, 6	;RP1=0, select bank1
 15093  13BA  07C5               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 15094                           	line	113
 15095                           	
 15096  13BB                     i1l11053:	
 15097                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 15098  13BB  300A               	movlw	(0Ah)
 15099  13BC  0245               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 15100  13BD  1C03               	skipc
 15101  13BE  2BC0               	goto	u410_21
 15102  13BF  2BC1               	goto	u410_20
 15103  13C0                     u410_21:
 15104  13C0  2BCD               	goto	i1l4547
 15105  13C1                     u410_20:
 15106                           	
 15107  13C1                     i1l11055:	
 15108  13C1  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 15109  13C2  2BC4               	goto	u411_21
 15110  13C3  2BC5               	goto	u411_20
 15111  13C4                     u411_21:
 15112  13C4  2BCD               	goto	i1l4547
 15113  13C5                     u411_20:
 15114                           	line	115
 15115                           	
 15116  13C5                     i1l11057:	
 15117                           ;HMI.c: 114: {
 15118                           ;HMI.c: 115: LeftPressed = 1;
 15119  13C5  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 15120                           	line	116
 15121                           ;HMI.c: 116: LeftReleased = 0;
 15122  13C6  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 15123  13C7  2BCD               	goto	i1l4547
 15124                           	line	117
 15125                           	
 15126  13C8                     i1l4546:	
 15127                           	line	118
 15128                           ;HMI.c: 117: }
 15129                           ;HMI.c: 118: }
 15130  13C8  2BCD               	goto	i1l4547
 15131                           	line	119
 15132                           	
 15133  13C9                     i1l4545:	
 15134                           	line	121
 15135                           ;HMI.c: 119: else
 15136                           ;HMI.c: 120: {
 15137                           ;HMI.c: 121: LeftDebounceCount = 0;
 15138  13C9  1683               	bsf	status, 5	;RP0=1, select bank1
 15139  13CA  1303               	bcf	status, 6	;RP1=0, select bank1
 15140  13CB  01C5               	clrf	(_LeftDebounceCount)^080h	;volatile
 15141                           	line	122
 15142                           ;HMI.c: 122: LeftReleased = 1;
 15143  13CC  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 15144                           	line	123
 15145                           	
 15146  13CD                     i1l4547:	
 15147                           	line	125
 15148                           ;HMI.c: 123: }
 15149                           ;HMI.c: 125: if(!RB5)
 15150  13CD  1283               	bcf	status, 5	;RP0=0, select bank0
 15151  13CE  1303               	bcf	status, 6	;RP1=0, select bank0
 15152  13CF  1A86               	btfsc	(53/8),(53)&7
 15153  13D0  2BD2               	goto	u412_21
 15154  13D1  2BD3               	goto	u412_20
 15155  13D2                     u412_21:
 15156  13D2  2BE7               	goto	i1l4548
 15157  13D3                     u412_20:
 15158                           	line	127
 15159                           	
 15160  13D3                     i1l11059:	
 15161                           ;HMI.c: 126: {
 15162                           ;HMI.c: 127: RightDebounceCount++;
 15163  13D3  3001               	movlw	(01h)
 15164  13D4  00F2               	movwf	(??_Debounce+0)+0
 15165  13D5  0872               	movf	(??_Debounce+0)+0,w
 15166  13D6  1683               	bsf	status, 5	;RP0=1, select bank1
 15167  13D7  1303               	bcf	status, 6	;RP1=0, select bank1
 15168  13D8  07C7               	addwf	(_RightDebounceCount)^080h,f	;volatile
 15169                           	line	128
 15170                           	
 15171  13D9                     i1l11061:	
 15172                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 15173  13D9  300A               	movlw	(0Ah)
 15174  13DA  0247               	subwf	(_RightDebounceCount)^080h,w	;volatile
 15175  13DB  1C03               	skipc
 15176  13DC  2BDE               	goto	u413_21
 15177  13DD  2BDF               	goto	u413_20
 15178  13DE                     u413_21:
 15179  13DE  2BEB               	goto	i1l4550
 15180  13DF                     u413_20:
 15181                           	
 15182  13DF                     i1l11063:	
 15183  13DF  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 15184  13E0  2BE2               	goto	u414_21
 15185  13E1  2BE3               	goto	u414_20
 15186  13E2                     u414_21:
 15187  13E2  2BEB               	goto	i1l4550
 15188  13E3                     u414_20:
 15189                           	line	130
 15190                           	
 15191  13E3                     i1l11065:	
 15192                           ;HMI.c: 129: {
 15193                           ;HMI.c: 130: RightPressed = 1;
 15194  13E3  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 15195                           	line	131
 15196                           ;HMI.c: 131: RightReleased = 0;
 15197  13E4  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 15198  13E5  2BEB               	goto	i1l4550
 15199                           	line	132
 15200                           	
 15201  13E6                     i1l4549:	
 15202                           	line	133
 15203                           ;HMI.c: 132: }
 15204                           ;HMI.c: 133: }
 15205  13E6  2BEB               	goto	i1l4550
 15206                           	line	134
 15207                           	
 15208  13E7                     i1l4548:	
 15209                           	line	136
 15210                           ;HMI.c: 134: else
 15211                           ;HMI.c: 135: {
 15212                           ;HMI.c: 136: RightDebounceCount = 0;
 15213  13E7  1683               	bsf	status, 5	;RP0=1, select bank1
 15214  13E8  1303               	bcf	status, 6	;RP1=0, select bank1
 15215  13E9  01C7               	clrf	(_RightDebounceCount)^080h	;volatile
 15216                           	line	137
 15217                           ;HMI.c: 137: RightReleased = 1;
 15218  13EA  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 15219                           	line	138
 15220                           	
 15221  13EB                     i1l4550:	
 15222                           	line	140
 15223                           ;HMI.c: 138: }
 15224                           ;HMI.c: 140: if(!RB6)
 15225  13EB  1283               	bcf	status, 5	;RP0=0, select bank0
 15226  13EC  1303               	bcf	status, 6	;RP1=0, select bank0
 15227  13ED  1B06               	btfsc	(54/8),(54)&7
 15228  13EE  2BF0               	goto	u415_21
 15229  13EF  2BF1               	goto	u415_20
 15230  13F0                     u415_21:
 15231  13F0  2C05               	goto	i1l4551
 15232  13F1                     u415_20:
 15233                           	line	142
 15234                           	
 15235  13F1                     i1l11067:	
 15236                           ;HMI.c: 141: {
 15237                           ;HMI.c: 142: CenterDebounceCount++;
 15238  13F1  3001               	movlw	(01h)
 15239  13F2  00F2               	movwf	(??_Debounce+0)+0
 15240  13F3  0872               	movf	(??_Debounce+0)+0,w
 15241  13F4  1683               	bsf	status, 5	;RP0=1, select bank1
 15242  13F5  1303               	bcf	status, 6	;RP1=0, select bank1
 15243  13F6  07C1               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 15244                           	line	143
 15245                           	
 15246  13F7                     i1l11069:	
 15247                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 15248  13F7  300A               	movlw	(0Ah)
 15249  13F8  0241               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 15250  13F9  1C03               	skipc
 15251  13FA  2BFC               	goto	u416_21
 15252  13FB  2BFD               	goto	u416_20
 15253  13FC                     u416_21:
 15254  13FC  2C0A               	goto	i1l4554
 15255  13FD                     u416_20:
 15256                           	
 15257  13FD                     i1l11071:	
 15258  13FD  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 15259  13FE  2C00               	goto	u417_21
 15260  13FF  2C01               	goto	u417_20
 15261  1400                     u417_21:
 15262  1400  2C0A               	goto	i1l4554
 15263  1401                     u417_20:
 15264                           	line	145
 15265                           	
 15266  1401                     i1l11073:	
 15267                           ;HMI.c: 144: {
 15268                           ;HMI.c: 145: CenterPressed = 1;
 15269  1401  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 15270                           	line	146
 15271                           ;HMI.c: 146: CenterReleased = 0;
 15272  1402  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 15273  1403  2C0A               	goto	i1l4554
 15274                           	line	147
 15275                           	
 15276  1404                     i1l4552:	
 15277                           	line	148
 15278                           ;HMI.c: 147: }
 15279                           ;HMI.c: 148: }
 15280  1404  2C0A               	goto	i1l4554
 15281                           	line	149
 15282                           	
 15283  1405                     i1l4551:	
 15284                           	line	151
 15285                           ;HMI.c: 149: else
 15286                           ;HMI.c: 150: {
 15287                           ;HMI.c: 151: CenterDebounceCount = 0;
 15288  1405  1683               	bsf	status, 5	;RP0=1, select bank1
 15289  1406  1303               	bcf	status, 6	;RP1=0, select bank1
 15290  1407  01C1               	clrf	(_CenterDebounceCount)^080h	;volatile
 15291                           	line	152
 15292                           ;HMI.c: 152: CenterReleased = 1;
 15293  1408  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 15294  1409  2C0A               	goto	i1l4554
 15295                           	line	153
 15296                           	
 15297  140A                     i1l4553:	
 15298                           	line	154
 15299                           	
 15300  140A                     i1l4554:	
 15301  140A  0008               	return
 15302                           	opt stack 0
 15303                           GLOBAL	__end_of_Debounce
 15304  140B                     	__end_of_Debounce:
 15305 ;; =============== function _Debounce ends ============
 15306                           
 15307                           	signat	_Debounce,88
 15308                           psect	text1133,local,class=CODE,delta=2
 15309                           global __ptext1133
 15310  0000                     __ptext1133:
 15311                           	global	btemp
 15312  007E                     	btemp set 07Eh
 15313                           
 15314                           	DABS	1,126,2	;btemp
 15315                           	global	wtemp0
 15316  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri May 22 14:16:08 2015

   RobotDrive@radiuslowByte 0030   __end_of_lcd_write_control 1B5D             ??_UpdateDisplay 0047  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 0026                  _IRdistance 00A8  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 1B72  
                       l703 1C1F                         l704 1C1F                         l705 1C23  
                       l706 1C42                         l690 07C9                         l691 07F2  
                       l692 07CD                         l693 07D1                         l694 07D5  
                       l695 07D9                         l696 07DD                         l689 07E1  
                       l697 07FF                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _abs 1DA8                         _pos 00B8  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
          ??_robotMoveSpeed 0061                  _BattCharge 00A0             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l1402 1B21                        l1410 1D1B  
                      l1411 1D1B                        l2300 116A                        l1405 1B01  
                      l2301 1180                        l3030 1B88                        l2302 1181  
                      l2310 1ED0                        l2311 1ED2                        l3040 0D89  
                      l1408 1D0A                        l3024 1285                        l2312 1ED4  
                      l3041 0CDA                        l3033 0B82                        l1409 1CF1  
                      l3025 12BB                        l2313 1ED6                        l2305 1EBD  
                      l3034 0D8C                        l3042 0D88                        l3026 12A7  
                      l2314 1EFA                        l2306 1ECD                        l3043 0D30  
                      l3035 0BD8                        l2251 1D77                        l3027 12E9  
                      l2307 1EE5                        l2315 1EE2                        l3036 0D8B  
                      l3044 0D87                        l2316 1EF9                        l2308 1ECE  
                      l2260 0DE8                        l3045 0D86                        l3037 0C2E  
                      l1429 1C97                        l2317 1EFA                        l2309 1EF8  
                      l2261 0DEC                        l3038 0D8A                        l3046 0D8C  
                      l2270 0E7E                        l2262 0DF4                        l2254 0DA5  
                      l3039 0C84                        l2271 0E87                        l2263 0DFC  
                      l2255 0DCC                        l2280 0FD7                        l2264 0FCD  
                      l2272 0E88                        l2256 0DE1                        l2257 0FDF  
                      l2281 0FDD                        l2273 0E91                        l2265 0E0A  
                      l2290 1132                        l2282 0FFC                        l2266 0FB0  
                      l2274 0F0E                        l2258 0DE2                        l2291 113D  
                      l2283 0FFD                        l2259 0FF5                        l2275 0F1B  
                      l2267 0E0B                        l2292 116C                        l2284 0FFD  
                      l2268 0FCC                        l2276 0F24                        l2293 113E  
                      l2277 0F56                        l2269 0E2E                        l2294 117F  
                      l2278 0F8C                        l1399 1B5C                        l2295 1140  
                      l2287 1BF2                        l2279 0FD5                        l2296 1142  
                      l2297 1154                        l2298 1164                        l2299 1181  
                      l6100 07BF                        l6101 07C2                        l6110 11F5  
                      l6102 07C1                        l6111 11D5                        l6103 07C4  
                      l6112 11F4                        l6200 1372                        l6120 0A4B  
                      l6113 11F5                        l6121 09BF                        l6106 1042  
                      l6130 0A6C                        l6122 0A4B                        l6203 1DDC  
                      l6131 0A88                        l6123 0A38                        l6132 0AA4  
                      l6116 0909                        l6140 1FFF                        l6109 11B0  
                      l6133 0AC2                        l6125 09FB                        l6117 0921  
                      l6141 1FB9                        l6206 1F9F                        l3750 105A  
                      l6134 0B12                        l6126 0A2D                        l6118 0939  
                      l6150 00CE                        l6142 1FC9                        l3743 1B3D  
                      l3751 108E                        l6135 0B29                        l6127 0A36  
                      l6119 0979                        l6151 0118                        l6143 1FE1  
                      l3744 1B3D                        l3752 1061                        l6128 0B13  
                      l6160 018F                        l6152 0105                        l6144 1FFF  
                      l3745 1B42                        l3753 1073                        l6129 0A4A  
                      l6161 020C                        l4570 1E7E                        l3746 1B48  
                      l3754 107B                        l6162 02C6                        l6170 02AE  
                      l6154 0103                        l6138 1FF2                        l4571 1E7F  
                      l3755 1098                        l6171 03CF                        l6163 0212  
                      l6155 020D                        l6147 004F                        l6139 1FA1  
                      l4572 1E91                        l3756 10A9                        l4580 068F  
                      l6172 02EA                        l6164 02DC                        l6156 0117  
                      l6148 0090                        l4565 1E99                        l4573 1E92  
                      l6093 1BD1                        l3749 1053                        l4581 0434  
                      l6181 15EF                        l6173 030B                        l6165 023B  
                      l6157 0139                        l6149 0118                        l4574 1EAD  
                      l4566 1E6B                        l4590 0596                        l4582 049B  
                      l6182 156F                        l6174 0404                        l6166 0252  
                      l6158 0155                        l4567 1EAB                        l4575 1E97  
                      l4591 05A2                        l4583 04AE                        l6191 146E  
                      l6183 157F                        l6175 0327                        l6167 0269  
                      l6159 0171                        l4568 1E6C                        l6096 0745  
                      l4584 069F                        l4592 05AE                        l6192 141F  
                      l6184 1624                        l6176 0343                        l6168 0280  
                      l4569 1E6D                        l6097 07C4                        l4593 05BA  
                      l4585 04F6                        l6193 1435                        l6185 158C  
                      l6177 0361                        l6169 0297                        l6098 0771  
                      l4594 05C6                        l4586 0541                        l6186 1599  
                      l6178 041A                        l6099 07C3                        l4595 0600  
                      l4587 05D3                        l6195 1431                        l6187 15A8  
                      l4596 068D                        l4588 058A                        l6196 14A3  
                      l6188 1649                        l4589 05EE                        l4597 069F  
                      l6197 14AE                        l6910 1CC5                        l6911 1CCF  
                      l6912 1CEF                        l6905 1BAB                        l6906 1BB8  
                      l7810 122C                        l6915 1D21                        l7811 1220  
                      l6940 1C6C                        l6916 1D20                        l7812 1231  
                      l6917 1D2B                        l7813 1232                        l6909 1CC6  
                      l6918 1D48                        l7670 1CC3                        l7814 124B  
                      l7815 1259                        l7807 1206                        l6951 17E2  
                      l7680 1F4A                        l7816 1264                        l7808 1214  
                      l6960 16BD                        l6952 1652                        l7657 1B9D  
                      l7673 1F43                        l7817 126B                        l7809 125A  
                      l6961 16BE                        l6953 1664                        l7658 1B9F  
                      l7674 1F15                        l7690 1E66                        l6970 175F  
                      l6962 16D8                        l6954 16BB                        l7667 1C9D  
                      l7675 1F09                        l7683 1E5F                        l6971 177F  
                      l6963 16BF                        l6955 167C                        l7668 1CA7  
                      l7676 1F1A                        l7684 1E39                        l6972 1766  
                      l6964 16F4                        l6956 16BA                        l7669 1CBC  
                      l7677 1F1B                        l7685 1E2D                        l6973 177E  
                      l6965 16FF                        l6957 16C1                        l7678 1F34  
                      l7686 1E3E                        l6974 1791                        l6966 1727  
                      l6958 16BC                        l7679 1F42                        l7687 1E3F  
                      l6959 17F8                        l6975 17D6                        l6967 171C  
                      l7688 1E50                        l7880 10DF                        l6976 1796  
                      l6968 1739                        l7689 1E5E                        l7881 10E0  
                      l6977 17E1                        l6969 175A                        l7882 10F1  
                      l6978 17F7                        l7883 10FF                        l7875 10BA  
                      l6979 17FF                        l7884 110A                        l7876 10C4  
                      l7885 1111                        l7877 1100                        l7878 10DA  
                      _CHS0 00FB                        l7879 10CE                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0883                        STR_2 087A  
                      STR_3 0895                        STR_4 089E                        STR_5 088C  
                      STR_6 0871                        STR_7 08C7                        STR_8 08CB  
                      STR_9 08B3                        _BRGH 04C2                        _CREN 00C4  
                      u4000 1E8E                        u4001 1E8D                        u4010 1D2B  
                      u4011 1D2A                        u4020 1B41                        u4021 1B40  
                      u5000 17F6                        u5001 17F5                        u5010 1CCF  
                      u5011 1CCE                        u4300 1CBB                        u5020 1191  
                      u5100 129B                        u4301 1CBA                        u5021 1190  
                      u5101 129A                        u4310 1F05                        u5030 11B6  
                      u5110 12BA                        u4311 1F04                        u5031 11B5  
                      u5111 12B9                        u4400 1E3D                        u5120 0425  
                      u5200 09AF                        u4401 1E3C                        u5025 118D  
                      u5201 09AE                        u4250 1B93                        u4330 1F19  
                      u4410 1E49                        u5050 1D1A                        u5130 0488  
                      u5210 09E3                        u4251 1B92                        u4331 1F18  
                      u4411 1E48                        u5051 1D19                        u5115 12B6  
                      u5131 0487                        u5211 09E2                        u4180 1BA6  
                      u4260 1B99                        u4500 1243                        u5060 0722  
                      u5140 1136                        u5220 09FA                        u5300 14A2  
                      u4181 1BA5                        u4261 1B98                        u4325 1F0A  
                      u4501 1242                        u5045 1DBD                        u5061 0721  
                      u5141 1135                        u5221 09F9                        u5205 09AB  
                      u5301 14A1                        u4190 1BB3                        u4270 1CA1  
                      u4350 1F2C                        u4430 1E5D                        u5070 074C  
                      u5230 0A24                        u5150 0918                        u5310 157B  
                      u4191 1BB2                        u4271 1CA0                        u4351 1F2B  
                      u4431 1E5C                        u4415 1E45                        u5071 074B  
                      u5135 0484                        u5231 0A23                        u5215 09DF  
                      u5151 0917                        u3800 1C23                        u4520 1258  
                      u4440 11FD                        u5080 0778                        u5240 0A57  
                      u5160 0930                        u5320 1583                        u5400 00EA  
                      u3801 1C22                        u4345 1F1C                        u4425 1E51  
                      u4521 1257                        u4505 123F                        u4441 11FC  
                      u5081 0777                        u5225 09F6                        u5161 092F  
                      u5305 149E                        u5401 00E9                        u4370 1F41  
                      u4530 125E                        u4450 120A                        u4610 10FE  
                      u5090 1283                        u5250 0A70                        u5170 0950  
                      u5330 1590                        u5410 0102                        u4371 1F40  
                      u4355 1F28                        u4515 124C                        u4451 1209  
                      u4611 10FD                        u5091 1282                        u5171 094F  
                      u5155 0914                        u5411 0101                        _PEIE 005E  
                      u4380 1E29                        u4460 121C                        u4620 1104  
                      u4540 10B1                        u4700 106A                        u5260 0A8C  
                      u5180 0967                        u5340 159F                        u5500 0403  
                      u5420 0124                        u4285 1CA8                        u4365 1F35  
                      u4381 1E28                        u4461 121B                        u4605 10F2  
                      u4541 10B0                        u5181 0966                        u5165 092C  
                      u5341 159E                        u5501 0402                        u5405 00E6  
                      u4550 10BE                        u4710 1098                        u5270 0AAA  
                      u5190 098B                        u5350 1623                        u5430 013D  
                      u5510 1EC1                        u3815 1C30                        u4295 1CAF  
                      u4551 10BD                        u4711 1097                        u5095 127F  
                      u5271 0AA9                        u5191 098A                        u5175 094C  
                      u5351 1622                        u5415 00FE                        u5511 1EC0  
                      u4480 1230                        u4560 10CA                        u4800 0C8D  
                      u4720 0B35                        u5280 142C                        u5440 0159  
                      u5360 0066                        u5520 0DA9                        u4481 122F  
                      u4561 10C9                        u4801 0C8C                        u4721 0B34  
                      u5185 0963                        u5281 142B                        u5505 03FF  
                      u5361 0065                        u5521 0DA8                        u4810 0C96  
                      u4730 0B3E                        u5290 1430                        u5450 0177  
                      u5370 007E                        u5530 0DD2                        u4395 1E2E  
                      u4475 1221                        u4715 1094                        u4811 0C95  
                      u4731 0B3D                        u5195 0987                        u5355 161F  
                      u5451 0176                        u5371 007D                        _RCIE 0465  
                      u4580 10DE                        u4820 0CE3                        u4740 0B8B  
                      u4900 16FD                        u5460 02F6                        u5380 00A2  
                      u5540 0E36                        _RCIF 0065                        u4581 10DD  
                      u4821 0CE2                        u4741 0B8A                        u4901 16FC  
                      u5381 00A1                        u5365 0062                        u5541 0E35  
                      u4590 10EA                        u4830 0CEC                        u4750 0B94  
                      u4910 171A                        u5470 030F                        u5390 00BE  
                      u5550 0FD5                        u4495 1233                        u4591 10E9  
                      u4575 10CF                        u4831 0CEB                        u4751 0B93  
                      u4911 1719                        u5607 132D                        u5391 00BD  
                      u5375 007A                        u5551 0FD4                        u4840 0D39  
                      u4760 0BE1                        u4920 1726                        u5480 032B  
                      u5617 1081                        u4841 0D38                        u4761 0BE0  
                      u4921 1725                        u5385 009E                        u4690 104C  
                      u4850 0D42                        u4770 0BEA                        u4930 172D  
                      u5490 0349                        u4595 10E6                        u5627 1B1D  
                      u4691 104B                        u4851 0D41                        u4771 0BE9  
                      u4931 172C                        u4915 1716                        u5491 0348  
                      u5395 00BA                        u4780 0C37                        u4940 1733  
                      u4860 1658                        u5637 1B57                        u4781 0C36  
                      u4941 1732                        u4861 1657                        u3990 1E79  
                      u4790 0C40                        u4950 174C                        u4870 1677  
                      u3991 1E78                        u5647 1B70                        u4791 0C3F  
                      u4951 174B                        u4871 1676                        u5567 0E4D  
                      u4960 1765                        u4880 16B9                        u5657 07F4  
                      u4961 1764                        u4881 16B8                        u5577 0EA2  
                      u4970 177D                        u4890 16EA                        _OERR 00C1  
                      u4971 177C                        u4955 1748                        u4891 16E9  
                      u5587 1BDF                        u4980 1785                        u4981 1784  
                      u5597 1300                        u4990 17E0                        u4991 17DF  
                      _TMR0 0001                  _ChargeMode 1EAE                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0263  
                      _Menu 1E67      __end_of_lcd_write_data 1B22                        abs@v 0026  
                      _isr1 14AF                        _main 0D8D                        _init 1D49  
                      btemp 007E              _CenterReleased 0381                        start 0012  
      robotFollow@followDir 0061               ??_ReadButtons 0073            ??_robotTurnSpeed 0061  
                     ??_abs 0028       readAvgDistance@tempIR 0034                       ?_Menu 0072  
                     l11001 1E96                       l11003 1E98                       l11011 1D1F  
                     l11005 1E99                       l11021 1D47                       l11013 1D21  
                     l11007 1EAB                       l11015 1D2C                       l11031 1B48  
                     l11023 1B38                       l11009 1EAD                       l11017 1D3A  
                     l11025 1B3A                       l11201 120A                       l12001 0171  
                     l11019 1D46                       l11027 1B42                       l11131 1B9D  
                     l11123 1B8C                       l11211 1220                       l11203 120F  
                     l12011 01A3                       l12003 0177                       l11029 1B46  
                     l11133 1B9F                       l11125 1B8D                       l11141 1CAE  
                     l11221 1249                       l11213 1227                       l11205 1214  
                     l11301 07F2                       l12101 03C9                       l12021 0206  
                     l12013 01B0                       l12005 0186                       l11127 1B93  
                     l11143 1CBC                       l11135 1C98                       l11151 1F05  
                     l11231 1264                       l11223 124B                       l11215 122C  
                     l11207 1216                       l11303 07F6                       l11311 1B64  
                     l12103 03CF                       l12031 024B                       l12015 01BC  
                     l12007 018F                       l12023 020D                       l12111 1EB6  
                     l11081 1BAA                       l11129 1B99                       l11145 1CC3  
                     l11137 1C9D                       l11161 1F2C                       l11153 1F09  
                     l11233 126B                       l11225 1252                       l11217 1232  
                     l11209 121C                       l11241 10BE                       l11305 07FF  
                     l11313 1B68                       l11321 1B51                       l11401 0BEA  
                     l12105 0404                       l12041 0280                       l12033 0252  
                     l12025 0212                       l12017 01CA                       l12009 0198  
                     l12121 1EDC                       l12113 1EBD                       l12201 0E36  
                     l11083 1BAB                       l11075 1BA0                       l11139 1CA1  
                     l11171 1F4A                       l11163 1F32                       l11155 1F10  
                     l11147 1EFB                       l11219 1243                       l11227 125A  
                     l11251 10DA                       l11243 10C4                       l11235 10AA  
                     l11315 1B6C                       l11307 1B5D                       l11323 1B52  
                     l11331 1B18                       l11411 0C8D                       l11403 0C2E  
                     l12107 0415                       l12051 02BE                       l12043 0290  
                     l12035 0262                       l12027 0234                       l12019 01D3  
                     l12123 1EDF                       l12115 1EC1                       l12131 1BD2  
                     l12203 0E45                       l12211 0E7E                       l11085 1BB3  
                     l11077 1BA6                       l11165 1F34                       l11157 1F15  
                     l11149 1EFF                       l11181 1E39                       l11173 1E21  
                     l11229 125E                       l11253 10E0                       l11245 10CA  
                     l11261 1100                       l11237 10B1                       l11309 1B60  
                     l11317 1B4C                       l11325 1B12                       l11333 1BB9  
                     l11341 1014                       l11421 0D30                       l11413 0C96  
                     l11405 0C37                       l11501 1791                       l12061 02F0  
                     l12053 02C5                       l12045 0297                       l12037 0269  
                     l12029 023B                       l12125 1EE1                       l12117 1EC2  
                     l12109 1EAE                       l12133 1BD7                       l12141 1FB0  
                     l12221 0EA9                       l12213 0E88                       l12205 0E54  
                     l11087 1BB5                       l11079 1BA8                       l11167 1F3B  
                     l11159 1F1B                       l11183 1E3F                       l11175 1E29  
                     l11191 1E5F                       l11263 1104                       l11255 10EA  
                     l11247 10CE                       l11239 10BA                       l11319 1B4F  
                     l11327 1B15                       l11335 1F4B                       l11351 103A  
                     l11343 101C                       l11423 0D39                       l11415 0CDA  
                     l11407 0C40                       l11503 1796                       l11431 1658  
                     l11511 17E2                       l12071 031E                       l12063 02F6  
                     l12047 02A7                       l12039 0279                       l12055 02C6  
                     l12127 1EE4                       l12119 1ED6                       l12135 1BE6  
                     l12151 1FF1                       l12143 1FB9                       l12231 0F0E  
                     l12223 0EB8                       l12215 0E91                       l12207 0E5C  
                     l11089 1BB8                       l11169 1F43                       l11193 1E66  
                     l11185 1E49                       l11177 1E2D                       l11265 110A  
                     l11257 10F1                       l11249 10D5                       l11329 1B17  
                     l11345 1022                       l11337 100A                       l11361 105A  
                     l11353 1043                       l11425 0D42                       l11417 0CE3  
                     l11409 0C84                       l11505 17CA                       l11513 17F8  
                     l11441 1677                       l11433 165F                       l11521 1CD0  
                     l11601 1305                       l12081 0349                       l12073 0327  
                     l12065 0305                       l12049 02AE                       l12057 02DC  
                     l12129 1EE5                       l12145 1FC9                       l12153 1FF2  
                     l12137 1FA0                       l12241 0F36                       l12233 0F1B  
                     l12225 0EDA                       l12217 0E99                       l12209 0E5D  
                     l12161 0D96                       l11187 1E50                       l11179 1E34  
                     l11195 11F6                       l11267 1111                       l11259 10F8  
                     l11291 07C8                       l11347 102A                       l11339 1010  
                     l11371 1073                       l11363 105D                       l11355 1047  
                     l11419 0CEC                       l11515 17FF                       l11507 17D1  
                     l11443 167C                       l11451 16C1                       l11435 1664  
                     l11427 164D                       l11531 1CEF                       l11523 1CDC  
                     l11611 1332                       l11603 130F                       l12091 0382  
                     l12083 0358                       l12075 032B                       l12067 030B  
                     l12059 02EA                       l12147 1FD8                       l12139 1FA1  
                     l12251 0F8C                       l12243 0F56                       l12235 0F24  
                     l12227 0EE9                       l12219 0E9A                       l12171 0DA9  
                     l12163 0D99                       l12155 0D8D                       l11189 1E57  
                     l11197 11FD                       l11293 07DD                       l11349 1032  
                     l11381 10A5                       l11373 109A                       l11365 105E  
                     l11357 104C                       l11509 17D6                       l11461 16EE  
                     l11453 16D8                       l11445 16A5                       l11437 1666  
                     l11429 1652                       l11525 1CE2                       l11517 1CC4  
                     l11533 1182                       l11541 1DA8                       l11613 1345  
                     l11605 131B                       l11621 1B73                       l11701 0524  
                     l12093 038E                       l12085 0361                       l12077 033A  
                     l12069 030F                       l12149 1FE1                       l12261 0FDE  
                     l12253 0FAF                       l12245 0F5E                       l12237 0F2C  
                     l12229 0EEE                       l12173 0DAA                       l12181 0DCC  
                     l12165 0D9A                       l12157 0D93                       l11199 1206  
                     l11295 07DF                       l11383 10A6                       l11375 10A0  
                     l11367 1066                       l11359 1053                       l11391 0B82  
                     l11471 171B                       l11463 16F4                       l11455 16E2  
                     l11447 16A9                       l11439 1667                       l11527 1CEA  
                     l11519 1CC6                       l11535 1191                       l11543 1DDC  
                     l11551 1CF1                       l11615 134E                       l11607 1321  
                     l11623 1B81                       l11631 1D4E                       l11711 0583  
                     l11703 0535                       l12095 03A2                       l12087 036A  
                     l12079 0343                       l12247 0F69                       l12239 0F31  
                     l12255 0FB0                       l12191 0DF4                       l12183 0DD2  
                     l12263 0FDF                       l12175 0DB0                       l12167 0D9F  
                     l12159 0D95                       l10841 1C1A                       l10833 1BB5  
                     l11297 07E0                       l11377 10A3                       l11369 106A  
                     l11393 0B8B                       l11385 0B2A                       l11481 1733  
                     l11473 171C                       l11465 16F7                       l11457 16E6  
                     l11449 16C0                       l11529 1CEB                       l11537 11B6  
                     l11545 1AFA                       l11553 1D01                       l11561 1C74  
                     l11617 1359                       l11609 1327                       l11625 1B88  
                     l11641 1D65                       l11633 1D56                       l11721 05BA  
                     l11713 058A                       l11705 0541                       l11801 0939  
                     l12097 03AF                       l12089 0375                       l12249 0F6E  
                     l12257 0FCD                       l12193 0DFC                       l12265 0FF5  
                     l12185 0DDD                       l12177 0DB5                       l12169 0DA5  
                     l10843 1C1D                       l10835 1BB7                       l11299 07E1  
                     l11379 10A4                       l11395 0B94                       l11387 0B35  
                     l11491 176D                       l11483 174C                       l11475 1720  
                     l11467 16FE                       l11459 16EA                       l11539 11D5  
                     l11547 1AFB                       l11555 1D0A                       l11571 1C85  
                     l11563 1C75                       l11619 1366                       l11651 1D76  
                     l11643 1D6A                       l11635 1D58                       l11627 1D49  
                     l11731 05F4                       l11723 05C6                       l11715 0596  
                     l11707 054D                       l11811 098B                       l11803 093E  
                     l12099 03BB                       l12259 0FD7                       l12195 0E01  
                     l12187 0DE2                       l12179 0DC6                       l10845 1C26  
                     l11397 0BD8                       l11389 0B3E                       l11493 1771  
                     l11485 175A                       l11477 1727                       l11469 16FF  
                     l11549 1CF0                       l11573 1C8B                       l11565 1C78  
                     l11557 1C6D                       l11581 0722                       l11645 1D6F  
                     l11637 1D5C                       l11629 1D4C                       l11661 1292  
                     l11653 126C                       l11741 065D                       l11733 0600  
                     l11725 05D2                       l11717 05A2                       l11709 0558  
                     l11821 0A08                       l11813 09AF                       l11805 0950  
                     l11901 146E                       l12197 0E0B                       l12189 0DEC  
                     l10847 1C39                       l11399 0BE1                       l11495 177F  
                     l11487 175F                       l11479 172D                       l11575 1C91  
                     l11567 1C79                       l11559 1C71                       l11591 07C0  
                     l11583 0745                       l11647 1D74                       l11639 1D60  
                     l11663 129B                       l11655 1276                       l11743 0681  
                     l11735 0606                       l12287 05DA                       l11719 05AE  
                     l11727 05D3                       l11671 041B                       l11831 0A37  
                     l11823 0A0D                       l11815 09BF                       l11807 0967  
                     l11903 14A3                       l11911 1575                       l12199 0E2E  
                     l10849 1C42                       l10961 1C43                       l11497 1785  
                     l11489 1766                       l11569 1C7F                       l11585 074C  
                     l11577 06A3                       l11593 12EA                       l11649 1D75  
                     l11665 12AD                       l11657 1284                       l11745 068E  
                     l11737 062B                       l11729 05EE                       l11681 0479  
                     l11673 0434                       l11761 1136                       l11753 1112  
                     l11841 0A6C                       l11825 0A19                       l11833 0A38  
                     l11817 09E3                       l11809 0979                       l11921 1590  
                     l11913 157B                       l11905 1559                       l10971 1C52  
                     l10963 1C46                       l11499 178C                       l11587 0771  
                     l11579 071B                       l11595 12EE                       l11667 12BB  
                     l11659 1285                       l11739 063C                       l11691 04CB  
                     l11683 0488                       l11675 043A                       l11747 068F  
                     l11771 1160                       l11763 1137                       l11755 1117  
                     l11851 0A9B                       l11843 0A70                       l11835 0A51  
                     l11827 0A24                       l11819 09FB                       l11931 15BC  
                     l11923 1599                       l11915 157F                       l11907 155D  
                     l10981 1C5F                       l10973 1C55                       l10965 1C4E  
                     l11589 0778                       l11597 12F4                       l11669 12E1  
                     l11693 04F6                       l11685 049B                       l11677 0462  
                     l11781 116B                       l11773 1164                       l11765 1142  
                     l11757 1123                       l11861 0ACB                       l11853 0AA4  
                     l11845 0A7F                       l11837 0A57                       l11829 0A2D  
                     l11933 15C9                       l11925 159F                       l11917 1583  
                     l11909 156F                       l11941 15EF                       l10983 1C60  
                     l10975 1C58                       l10967 1C4F                       l10991 1E75  
                     l11599 12FA                       l11695 0502                       l11687 04AE  
                     l11679 0473                       l11775 1166                       l11767 1150  
                     l11783 116C                       l11759 1132                       l11871 0B0C  
                     l11863 0AD6                       l11855 0AAA                       l11847 0A88  
                     l11839 0A66                       l11791 0905                       l11935 15D5  
                     l11927 15A8                       l11919 158C                       l11943 1624  
                     l11951 001D                       l10985 1C61                       l10977 1C5B  
                     l10969 1C51                       l10993 1E79                       l11697 050D  
                     l11689 04B4                       l11777 1167                       l11769 1154  
                     l11865 0AE3                       l11857 0AB9                       l11849 0A8C  
                     l11873 0B13                       l11793 0909                       l11785 08EC  
                     l11881 141F                       l11945 1635                       l11937 15E3  
                     l11929 15B1                       l11961 004F                       l11953 002C  
                     l10979 1C5C                       l10995 1E7F                       l10987 1E6A  
                     l11699 051E                       l11779 1169                       l11875 0B24  
                     l11867 0AEF                       l11859 0AC2                       l11795 0918  
                     l11787 08F0                       l11891 143E                       l11883 1425  
                     l11947 163A                       l11939 15E9                       l11971 00A2  
                     l11963 0054                       l11955 002F                       l10997 1E8E  
                     l10989 1E6D                       l11869 0AFD                       l11797 0921  
                     l11789 08F6                       l11893 1449                       l11885 142C  
                     l11877 140B                       l11981 0105                       l11973 00BE  
                     l11965 0066                       l11957 003B                       l11949 0015  
                     l10999 1E92        __size_of_calibrateIR 0070                       l11799 0930  
                     l11895 1456                       l11887 1431                       l11879 1413  
                     l11991 013D                       l11983 011E                       l11975 00CE  
                     l11967 007E                       l11959 0040                       l11897 1462  
                     l11889 1435                       l11993 014C                       l11985 0124  
                     l11977 00EA                       l11969 0090                       l11899 1468  
                     l11995 0155                       l11987 0133                       l11979 0104  
                     l11997 0159                       l11989 0139                       l11999 0168  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
           __end_of___awdiv 126C                       _EEADR 010D                       STR_10 08BF  
                     STR_11 08CF                       STR_20 08D6                       STR_12 08C3  
                     STR_21 08D9                       STR_13 084A                       STR_22 08D3  
                     STR_14 083A                       STR_23 08DC                       STR_15 08B7  
                     STR_24 08DF                       STR_16 08A6                       STR_25 08D3  
                     STR_17 08BB                       STR_26 0868                       STR_18 081A  
                     STR_19 08AE                       STR_27 082A                       STR_28 0859  
           __end_of___awmod 1112                       _CARRY 0018             ___awdiv@divisor 0020  
           __end_of___lwdiv 1F4B             __end_of___lwmod 1E67             ___awdiv@counter 0025  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
                     _Disp1 00A4                       _Disp2 00A6      lcd_write_data@databyte 0022  
  __size_of_robot_turnRight 0406          i1___lwmod@dividend 0074             __end_of_isdigit 1BA0  
                     _total 00BA              __pbitbssCOMMON 0380                       pclath 000A  
               _turnlowByte 00D4             ?_lcd_write_data 0072           ?_adc_read_channel 0072  
                     status 0003                       wtemp0 007E             __end_of_sprintf 1800  
          __end_of_Debounce 140B            ??_robot_turnLeft 0066          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072            robotFollow@temp1 0066  
          robotFollow@speed 005D                __end_of_Menu 1EAE  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00DD                __end_of_isr1 1559                __end_of_main 1000  
              __end_of_init 1D78             rotate@direction 0025              _Init_Follow_IR 1BD2  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
     __end_of_RobotBattRead 1373                      ??_isr1 0078                      ??_main 0069  
                    ??_init 0023         __end_of_ReadButtons 1DA8               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            ___awdiv@dividend 0022            __end_of_adc_read 1C43  
               ?_ChargeMode 0072                      i1l2240 1506                      i1l2241 14D6  
                    i1l2242 14F3                      i1l2243 1505                      i1l2244 1527  
                    i1l2245 1526                      i1l2246 154D                      i1l2247 154C  
                    i1l2248 154D                      i1l4540 138C                      i1l4541 1391  
                    i1l4550 13EB                      i1l4542 13AB                      i1l4551 1405  
                    i1l4543 13AA                      i1l4552 1404                      i1l4544 13AF  
                    i1l4560 1D95                      i1l4553 140A                      i1l4545 13C9  
                    i1l4561 1D9D                      i1l4554 140A                      i1l4546 13C8  
                    i1l4562 1DA5                      i1l4547 13CD                      i1l4539 138D  
                    i1l4548 13E7                      i1l4549 13E6                      i1l4557 1D85  
                    i1l4558 1DA7                      i1l4559 1D8D                      i1l7690 1E20  
                    i1l7683 1E19                      i1l7684 1DF3                      i1l7685 1DE7  
                    i1l7686 1DF8                      i1l7687 1DF9                      i1l7688 1E0A  
                    i1l7689 1E18                      u410_20 13C1                      u410_21 13C0  
                    u411_20 13C5                      u403_20 1379                      u411_21 13C4  
                    u403_21 1378                      u412_20 13D3                      u404_20 1385  
                    u412_21 13D2                      u404_21 1384                      u413_20 13DF  
                    u405_20 1389                      u413_21 13DE                      u405_21 1388  
                    u414_20 13E3                      u406_20 1397                      u414_21 13E2  
                    u406_21 1396                      u415_20 13F1                      u407_20 13A3  
                    u415_21 13F0                      u407_21 13A2                      u416_20 13FD  
                    u408_20 13A7                      u416_21 13FC                      u408_21 13A6  
                    u417_20 1401                      u409_20 13B5                      u417_21 1400  
                    u409_21 13B4                      u390_20 1521                      u390_21 1520  
               _DistLowByte 00C3                      u463_20 1DE3                      u391_20 152C  
                    u463_21 1DE2                      u391_21 152B                      u392_20 1532  
                    u392_21 1531                      u464_25 1DE8                      u465_20 1DF7  
                    u393_20 154A                      u385_20 14B3                      u465_21 1DF6  
                    u393_21 1549                      u385_21 14B2                      u466_20 1E03  
                    u394_20 1D81                      u386_20 14D4                      u466_21 1E02  
                    u394_21 1D80                      u386_21 14D3                      u466_25 1DFF  
                    u395_20 1D89                      u387_20 14ED                      u395_21 1D88  
                    u387_21 14EC                      u467_25 1E0B                      u468_20 1E17  
                    u396_20 1D91                      u388_20 14FA                      u468_21 1E16  
                    u396_21 1D90                      u388_21 14F9                      u397_20 1D99  
                    u389_20 150B                      u397_21 1D98                      u389_21 150A  
                    u398_20 1DA1                      u398_21 1DA0                      _TMR0IE 005D  
                    _TMR0IF 005A                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038C            __end_of_lcd_init 1C98                      _adcVal 00AE  
           _UpDebounceCount 00C9      __end_of_Init_Follow_IR 1BF3             RobotDrive@speed 0029  
                _RobotDrive 100A                      ___wmul 1C98                   ??___awdiv 0024  
                 ??___awmod 0024                _turnhighByte 00D3                ??_ADCconvert 002E  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 1B73  
            ??_readDistance 002A            ___awdiv@quotient 0027             ___awmod@divisor 0020  
  __end_of_lcd_write_string 1D1C             ___awmod@counter 0025                ?_robotFollow 005D  
                    _rotate 1043                      _rxfifo 01A0                      clrloop 08E5  
                    _txfifo 01B0                      _rxiptr 00D0                      _rxoptr 00D1  
               _BumpSensors 00C0                      _txiptr 00D5                      _txoptr 00D6  
     robotFollow@hysterysis 0068            __end_of_ser_init 1C6D            __end_of_ser_isrx 1BB9  
         __end_ofi1___lwmod 1E21                   ??_isdigit 0020                      saved_w 007E  
             main@shortwall 006C                _AngleLowByte 00BF                 _LeftPressed 0384  
    RobotDrive@speedlowByte 002E                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 0D8D           ??_robot_turnRight 005F  
      robot_turnRight@temp1 0066        robot_turnRight@speed 005D                _CliffSensors 00C2  
            __pcstackCOMMON 0072             ?_Init_Follow_IR 0072                __pidataBANK1 1B02  
               _ReadButtons 1D78         __size_of_ChargeMode 004D            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072                sprintf@width 0044               _buttonPressed 00CC  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00C4  
        _RightDebounceCount 00C7                  __pmaintext 0D8D                 ?_RobotDrive 0029  
                   ?___wmul 0020       __end_of_robotLoadSong 1FA0                  __pintentry 0004  
              _DistHighByte 007D                  __ptext1100 06A0                  __ptext1101 1C6D  
                __ptext1110 100A                  __ptext1102 1CF0                  __ptext1111 1F4B  
                __ptext1103 1AF7                  __ptext1120 1EFB                  __ptext1112 1BB9  
                __ptext1104 1DA8                  __ptext1121 1C98                  __ptext1113 1B0F  
                __ptext1105 1182       __end_of_UpdateDisplay 06A0                  __ptext1130 1D78  
                __ptext1122 1B89                  __ptext1114 1B49                  __ptext1106 1CC4  
                __ptext1131 1DDD                  __ptext1123 1BA0                  __ptext1115 1B5D  
                __ptext1107 164A                  __ptext1132 1373                  __ptext1124 1B35  
                __ptext1116 07C5                  __ptext1108 0B2A                  __ptext1133 0000  
                __ptext1125 1D1C                  __ptext1117 10AA                  __ptext1109 1043  
                __ptext1126 1E67                  __ptext1118 11F6                  __ptext1127 1C43  
                __ptext1119 1E21                  __ptext1128 1C1A                  __ptext1129 14AF  
                __ptext1090 0015                  __ptext1091 1559                  __ptext1092 140B  
                __ptext1093 08EC                  __ptext1094 1112                  __ptext1095 041B  
                __ptext1087 1FA0                  __ptext1096 126C                  __ptext1088 1BD2  
                __ptext1097 1D49                  __ptext1089 1EAE                  __ptext1098 1B73  
                __ptext1099 12EA          __size_of_ser_getch 002C                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 002D          __size_of_robo_init 0019  
                   i1l11041 1389                     i1l11033 1373                     i1l11051 13B5  
                   i1l11043 1397                     i1l11035 1379                     i1l11061 13D9  
                   i1l11053 13BB                     i1l11045 139D                     i1l11037 137F  
                   i1l11071 13FD                     i1l11063 13DF                     i1l11055 13C1  
                   i1l11047 13A3                     i1l11039 1385                     i1l11073 1401  
                   i1l11065 13E3                     i1l11057 13C5                     i1l11049 13A7  
                   i1l11067 13F1                     i1l11059 13D3                     i1l11069 13F7  
                   i1l11271 1DE3                     i1l11281 1E03                     i1l11273 1DE7  
                   i1l11283 1E0A                     i1l11275 1DEE                     i1l11285 1E11  
                   i1l11277 1DF3                     i1l11269 1DDD                     i1l10901 150B  
                   i1l11279 1DF9                     i1l11287 1E19                     i1l10911 152C  
                   i1l10903 1515                     i1l11289 1E20                     i1l10921 154A  
                   i1l10913 1532                     i1l10905 151B                     i1l10931 1D84  
                   i1l10923 1D78                     i1l10915 153A                     i1l10907 1521  
                   i1l10941 1D92                     i1l10933 1D89                     i1l10925 1D7D  
                   i1l10917 1540                     i1l10909 1527                     i1l10951 1DA1  
                   i1l10943 1D94                     i1l10935 1D8A                     i1l10927 1D81  
                   i1l10919 1544                     i1l10953 1DA2                     i1l10945 1D99  
                   i1l10937 1D8C                     i1l10929 1D82                     i1l10881 14B4  
                   i1l10955 1DA4                     i1l10947 1D9A                     i1l10939 1D91  
                   i1l10891 14ED                     i1l10883 14BE                     i1l10957 1DA5  
                   i1l10949 1D9C                     i1l10893 14EE                     i1l10885 14BF  
                   i1l10877 14AF                     i1l10959 1DA7                     i1l10895 14F3  
                   i1l10887 14D4                     i1l10879 14B3                     i1l10897 14FA  
                   i1l10889 14D6                     i1l10899 1506          __size_of_robotTurn 0074  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094              main@currentFlw 006F        __end_of_readDistance 1B89  
                 ?_init_adc 0072                   ?_ser_init 0072                   ?_ser_isrx 0072  
          RobotDrive@radius 002B               ??_calibrateIR 005D                     ___awdiv 11F6  
                   ___awmod 10AA             __size_of___wmul 002C                     ___lwdiv 1EFB  
                   ___lwmod 1E21   __size_of_adc_read_channel 003B                  ??_adc_read 0022  
           __size_of_rotate 0067                     _dpowers 0810                __size_of_abs 0035  
     UpdateDisplay@tempDist 005B                     _isdigit 1B89        __size_of_robotFollow 023E  
          ___awmod@dividend 0022                     _lowByte 00CF                     _ser_tmp 00D2  
                   _sprintf 164A                  ??_lcd_init 0023         __size_of_RobotDrive 0039  
      end_of_initialization 1C16               _AngleHighByte 00BE                ??_ChargeMode 005D  
        robot_read@readType 0023           __end_of_ser_getch 1CF0                     init_ram 1B26  
                ??_init_adc 0020     __size_of_robotMoveSpeed 00F1           __end_of_ser_putch 1D49  
   RobotDrive@speedhighByte 002F           __end_of_robo_init 1BD2                _LeftReleased 0385  
         __end_of_robotTurn 11F6                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038A  
  __size_of_readAvgDistance 007E                  _robot_read 06A0          RobotBattRead@temp1 0024  
         ?_lcd_write_string 0027          __end_of_ChargeMode 1EFB         __end_of_calibrateIR 1182  
        ??_lcd_write_string 0029             _robot_turnRight 0015                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A4  
                 i1___lwmod 1DDD                  _totalSteps 00BC                  main@choice 006E  
             ?_spi_transfer 0072            ??_Init_Follow_IR 005D                   _BattState 00A2  
    __size_of_RobotBattRead 0089                 _VwallSensor 00CB               _CenterPressed 0380  
              ?_ReadButtons 0072              __end_of___wmul 1CC4     __size_of_robot_turnLeft 0060  
         i1___lwmod@divisor 0072           i1___lwmod@counter 0077              __end_of_rotate 10AA  
       start_initialization 1BF3      UpdateDisplay@LCDOutput 004B                 __end_of_abs 1DDD  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
        _TotalDistTravelled 00AC              ??_spi_transfer 0020       lcd_set_cursor@address 0023  
                 _UpPressed 038B                ??_RobotDrive 002D              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 1112                 __pdataBANK1 00D7     __end_of_robot_turnRight 041B  
          _adc_read_channel 07C5                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 1B73               _RobotBattRead 12EA           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
              _isdigit$8644 0020      robotMoveSpeed@distance 005D          __end_of_RobotDrive 1043  
         __size_of_lcd_init 002B              _robotMoveSpeed 1559                 sprintf@_val 003F  
               sprintf@flag 003E                 sprintf@prec 003D                _current_step 00E3  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                 _angleTurned 00B0                    ?___awdiv 0020  
                  ?___awmod 0020           __size_of_ser_init 002A           __size_of_ser_isrx 0019  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0800  
                 _dist_high 00B4              ?_RobotBattRead 0072         readDistance@readVal 002C  
                  ?_isdigit 0072              _robotTurnSpeed 140B         robotTurnSpeed@angle 005D  
       robotTurnSpeed@temp1 0064         robotTurnSpeed@speed 005F                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
    __end_of_robotMoveSpeed 164A      __size_of_robotLoadSong 0055     __size_of_lcd_set_cursor 000B  
         interrupt_function 0004      __size_of_UpdateDisplay 0285              ___wmul@product 0024  
       __size_of_robot_read 0125                  ser_putch@c 0021                   _ser_getch 1CC4  
                 _ser_putch 1D1C                   _robo_init 1BB9                   _robotTurn 1182  
              _RightPressed 0389              _robot_turnLeft 1FA0            ?_robot_turnRight 005D  
      __size_of_ReadButtons 0030               ??_robotFollow 0062        __end_of_spi_transfer 1B49  
    __end_of_robotTurnSpeed 14AF                 __stringbase 080F           ___wmul@multiplier 0020  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 1373  
         _LeftDebounceCount 00C5             ?_robotMoveSpeed 005D   __size_of_lcd_write_string 002C  
   __size_of_lcd_write_data 0013                  ?_ser_getch 0072                  ?_ser_putch 0072  
   adc_read_channel@channel 0027                    _RobotPos 00C8                  ?_robo_init 0072  
                 init_fetch 1B22      __end_of_robot_turnLeft 2000   robot_turnRight@turnTarget 0062  
                ?_robotTurn 0022                  _ADCconvert 0B2A            __size_of___awdiv 0076  
           ??_RobotBattRead 0022            __size_of___awmod 0068               _robotLoadSong 1F4B  
          __size_of___lwdiv 0050            __size_of___lwmod 0046               _UpdateDisplay 041B  
                  _adc_read 1C1A             ?_robotTurnSpeed 005D                 _currentMenu 00CD  
          __size_of_isdigit 0017    robot_turnRight@AdcTarget 0064             ___lwdiv@divisor 0026  
       __end_of_robotFollow 0B2A             ___lwdiv@counter 002D                 _menuStrings 00D7  
                  _highByte 00CE                    _lcd_init 1C6D                    _dist_low 00B6  
          __size_of_sprintf 01B6    __end_of_adc_read_channel 0800   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 1B5D               __size_of_isr1 00AA  
             __size_of_main 0273               __size_of_init 002F                    clear_ram 08E4  
                  _ser_init 1C43        robotFollow@AdcTarget 005F                    _ser_isrx 1BA0  
           ?_robot_turnLeft 0072             _readAvgDistance 126C                ?_calibrateIR 0072  
            ?_robotLoadSong 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
              _VictimSensor 00CA         _CenterDebounceCount 00C1                _RTC_FLAG_1MS 0386  
        UpdateDisplay@F1265 0190                    isdigit@c 0021                    intlevel1 0000  
            _lcd_set_cursor 1AF7                   sprintf@ap 003C                   sprintf@sp 0043  
            robotTurn@angle 0022            ___lwmod@dividend 0030          __end_of_robot_read 07C5  
                 stringcode 080A                 ??_ser_getch 0020                 ??_ser_putch 0020  
             _distTravelled 00B2                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 1B49  
   __size_of_Init_Follow_IR 0021                 _robotFollow 08EC          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0046                    sprintf@f 0034  
       robotMoveSpeed@temp1 0064         robotMoveSpeed@speed 005F             ___lwmod@divisor 002E  
                _ROBOTerror 00C6             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 1B02  
          _lcd_write_string 1CF0    RobotDrive@radiushighByte 0031                _spi_transfer 1B35  
               _RTC_Counter 00AA     __end_of_readAvgDistance 12EA              _lcd_write_data 1B0F  
           ??_robotLoadSong 0022  
