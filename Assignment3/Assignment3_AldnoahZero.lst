

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 24 14:54:30 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_readAvgDistance
    48                           	FNCALL	_main,_UpdateDisplay
    49                           	FNCALL	_main,_Menu
    50                           	FNCALL	_main,_calibrateIR
    51                           	FNCALL	_main,_scan360
    52                           	FNCALL	_main,_rotate
    53                           	FNCALL	_main,_robotMove
    54                           	FNCALL	_main,_robotTurn
    55                           	FNCALL	_main,_robot_distance
    56                           	FNCALL	_scan360,_readAvgDistance
    57                           	FNCALL	_scan360,_rotate
    58                           	FNCALL	_scan360,_UpdateDisplay
    59                           	FNCALL	_calibrateIR,_rotate
    60                           	FNCALL	_calibrateIR,_UpdateDisplay
    61                           	FNCALL	_readAvgDistance,_readDistance
    62                           	FNCALL	_readAvgDistance,___lwdiv
    63                           	FNCALL	_readAvgDistance,_ADCconvert
    64                           	FNCALL	_UpdateDisplay,_lcd_write_control
    65                           	FNCALL	_UpdateDisplay,_sprintf
    66                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    67                           	FNCALL	_UpdateDisplay,_lcd_write_string
    68                           	FNCALL	_UpdateDisplay,___awmod
    69                           	FNCALL	_init,_init_adc
    70                           	FNCALL	_init,_lcd_init
    71                           	FNCALL	_init,_ser_init
    72                           	FNCALL	_init,_robo_init
    73                           	FNCALL	_readDistance,_adc_read_channel
    74                           	FNCALL	_robot_distance,_robot_read
    75                           	FNCALL	_robot_distance,_ser_getch
    76                           	FNCALL	_lcd_init,_lcd_write_control
    77                           	FNCALL	_lcd_write_string,_lcd_write_data
    78                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    79                           	FNCALL	_robot_read,_ser_putch
    80                           	FNCALL	_sprintf,___lwdiv
    81                           	FNCALL	_sprintf,___lwmod
    82                           	FNCALL	_ser_getch,_ser_isrx
    83                           	FNCALL	_ADCconvert,___wmul
    84                           	FNCALL	_ADCconvert,___lwdiv
    85                           	FNCALL	_robotTurn,_ser_putch
    86                           	FNCALL	_robotMove,_ser_putch
    87                           	FNCALL	_rotate,_spi_transfer
    88                           	FNCALL	_robo_init,_ser_putch
    89                           	FNCALL	_adc_read_channel,_adc_read
    90                           	FNROOT	_main
    91                           	FNCALL	_isr1,i1___lwmod
    92                           	FNCALL	_isr1,_ReadButtons
    93                           	FNCALL	_ReadButtons,_Debounce
    94                           	FNCALL	intlevel1,_isr1
    95                           	global	intlevel1
    96                           	FNROOT	intlevel1
    97                           	global	_menuStrings
    98                           	global	_shortMenuStrings
    99                           	global	_current_step
   100                           	global	_distTravelled
   101                           psect	idataBANK1,class=CODE,space=0,delta=2
   102                           global __pidataBANK1
   103  0A13                     __pidataBANK1:
   104                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   105                           	line	32
   106                           
   107                           ;initializer for _menuStrings
   108  0A13  3423               	retlw	(STR_1-__stringbase)&0ffh
   109  0A14  341A               	retlw	(STR_2-__stringbase)&0ffh
   110  0A15  3435               	retlw	(STR_3-__stringbase)&0ffh
   111  0A16  343E               	retlw	(STR_4-__stringbase)&0ffh
   112  0A17  342C               	retlw	(STR_5-__stringbase)&0ffh
   113                           	line	33
   114                           
   115                           ;initializer for _shortMenuStrings
   116  0A18  345E               	retlw	(STR_6-__stringbase)&0ffh
   117  0A19  3462               	retlw	(STR_7-__stringbase)&0ffh
   118  0A1A  344E               	retlw	(STR_8-__stringbase)&0ffh
   119  0A1B  345A               	retlw	(STR_9-__stringbase)&0ffh
   120  0A1C  3466               	retlw	(STR_10-__stringbase)&0ffh
   121                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   122                           	line	30
   123                           
   124                           ;initializer for _current_step
   125  0A1D  343C               	retlw	03Ch
   126                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.h"
   127                           	line	11
   128                           
   129                           ;initializer for _distTravelled
   130  0A1E  340A               	retlw	0Ah
   131                           	global	_dpowers
   132                           psect	strings,class=STRING,delta=2
   133                           global __pstrings
   134  0800                     __pstrings:
   135                           ;	global	stringdir,stringtab,__stringbase
   136  0800                     stringtab:
   137                           ;	String table - string pointers are 1 byte each
   138  0800  1BFF               	btfsc	(btemp+1),7
   139  0801  280A               	ljmp	stringcode
   140  0802  1383               	bcf	status,7
   141  0803  187F               	btfsc	(btemp+1),0
   142  0804  1783               	bsf	status,7
   143  0805  0800               	movf	indf,w
   144  0806  0A84               	incf fsr
   145  0807  1903               skipnz
   146  0808  0AFF               incf btemp+1
   147  0809  0008               	return
   148  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   149  080A  3008               movlw high(stringdir)
   150  080B  008A               movwf pclath
   151  080C  0804               movf fsr,w
   152  080D  0A84               incf fsr
   153  080E  0782               	addwf pc
   154  080F                     __stringbase:
   155  080F  3400               	retlw	0
   156                           psect	strings
   157                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   158                           	line	350
   159  0810                     _dpowers:
   160  0810  3401               	retlw	01h
   161  0811  3400               	retlw	0
   162                           
   163  0812  340A               	retlw	0Ah
   164  0813  3400               	retlw	0
   165                           
   166  0814  3464               	retlw	064h
   167  0815  3400               	retlw	0
   168                           
   169  0816  34E8               	retlw	0E8h
   170  0817  3403               	retlw	03h
   171                           
   172  0818  3410               	retlw	010h
   173  0819  3427               	retlw	027h
   174                           
   175                           	global	_dpowers
   176                           	global	_RTC_Counter
   177                           	global	_adcVal
   178                           	global	_buttonPressed
   179                           	global	_rxiptr
   180                           	global	_rxoptr
   181                           	global	_txoptr
   182                           	global	UpdateDisplay@F1228
   183                           	global	_txiptr
   184                           	global	_CenterPressed
   185                           	global	_CenterReleased
   186                           	global	_DownPressed
   187                           	global	_DownReleased
   188                           	global	_LeftPressed
   189                           	global	_LeftReleased
   190                           	global	_RTC_FLAG_10MS
   191                           	global	_RTC_FLAG_1MS
   192                           	global	_RTC_FLAG_250MS
   193                           	global	_RTC_FLAG_500MS
   194                           	global	_RTC_FLAG_50MS
   195                           	global	_RightPressed
   196                           	global	_RightReleased
   197                           	global	_UpPressed
   198                           	global	_UpReleased
   199                           	global	_rxfifo
   200                           	global	_txfifo
   201                           	global	_dist_high
   202                           	global	_dist_low
   203                           	global	_distance
   204                           	global	_pos
   205                           	global	_test
   206                           	global	_total
   207                           	global	_totalSteps
   208                           	global	_CenterDebounceCount
   209                           	global	_DownDebounceCount
   210                           	global	_LeftDebounceCount
   211                           	global	_RightDebounceCount
   212                           	global	_SCAN_FLAG
   213                           	global	_UpDebounceCount
   214                           	global	_currentMenu
   215                           	global	_current_direction
   216                           	global	_highByte
   217                           	global	_lowByte
   218                           	global	_ser_tmp
   219                           	global	_serialInput
   220                           	global	_turnhighByte
   221                           	global	_turnlowByte
   222                           	global	_ADCON0
   223  001F                     _ADCON0	set	31
   224                           	global	_ADRESH
   225  001E                     _ADRESH	set	30
   226                           	global	_PORTA
   227  0005                     _PORTA	set	5
   228                           	global	_PORTC
   229  0007                     _PORTC	set	7
   230                           	global	_PORTD
   231  0008                     _PORTD	set	8
   232                           	global	_PORTE
   233  0009                     _PORTE	set	9
   234                           	global	_RCREG
   235  001A                     _RCREG	set	26
   236                           	global	_SSPBUF
   237  0013                     _SSPBUF	set	19
   238                           	global	_SSPCON
   239  0014                     _SSPCON	set	20
   240                           	global	_TMR0
   241  0001                     _TMR0	set	1
   242                           	global	_TXREG
   243  0019                     _TXREG	set	25
   244                           	global	AT25256A@CS0
   245  0038                     AT25256A@CS0	set	56
   246                           	global	AT25256A@CS1
   247  0039                     AT25256A@CS1	set	57
   248                           	global	_CARRY
   249  0018                     _CARRY	set	24
   250                           	global	_CHS0
   251  00FB                     _CHS0	set	251
   252                           	global	_CHS1
   253  00FC                     _CHS1	set	252
   254                           	global	_CHS2
   255  00FD                     _CHS2	set	253
   256                           	global	_CREN
   257  00C4                     _CREN	set	196
   258                           	global	_GIE
   259  005F                     _GIE	set	95
   260                           	global	_GO
   261  00FA                     _GO	set	250
   262                           	global	_OERR
   263  00C1                     _OERR	set	193
   264                           	global	_RB0
   265  0030                     _RB0	set	48
   266                           	global	_RB2
   267  0032                     _RB2	set	50
   268                           	global	_RB3
   269  0033                     _RB3	set	51
   270                           	global	_RB4
   271  0034                     _RB4	set	52
   272                           	global	_RB5
   273  0035                     _RB5	set	53
   274                           	global	_RB6
   275  0036                     _RB6	set	54
   276                           	global	_RC0
   277  0038                     _RC0	set	56
   278                           	global	_RC1
   279  0039                     _RC1	set	57
   280                           	global	_RC2
   281  003A                     _RC2	set	58
   282                           	global	_RCIF
   283  0065                     _RCIF	set	101
   284                           	global	_RE0
   285  0048                     _RE0	set	72
   286                           	global	_RE1
   287  0049                     _RE1	set	73
   288                           	global	_RE2
   289  004A                     _RE2	set	74
   290                           	global	_RX9
   291  00C6                     _RX9	set	198
   292                           	global	_SPEN
   293  00C7                     _SPEN	set	199
   294                           	global	_SSPIF
   295  0063                     _SSPIF	set	99
   296                           	global	_TMR0IE
   297  005D                     _TMR0IE	set	93
   298                           	global	_TMR0IF
   299  005A                     _TMR0IF	set	90
   300                           	global	_TXIF
   301  0064                     _TXIF	set	100
   302                           	global	_ADCON1
   303  009F                     _ADCON1	set	159
   304                           	global	_ADRESL
   305  009E                     _ADRESL	set	158
   306                           	global	_OPTION_REG
   307  0081                     _OPTION_REG	set	129
   308                           	global	_SPBRG
   309  0099                     _SPBRG	set	153
   310                           	global	_SSPSTAT
   311  0094                     _SSPSTAT	set	148
   312                           	global	_TRISA
   313  0085                     _TRISA	set	133
   314                           	global	_TRISB
   315  0086                     _TRISB	set	134
   316                           	global	_TRISC
   317  0087                     _TRISC	set	135
   318                           	global	_TRISD
   319  0088                     _TRISD	set	136
   320                           	global	_TRISE
   321  0089                     _TRISE	set	137
   322                           	global	_BRGH
   323  04C2                     _BRGH	set	1218
   324                           	global	_RCIE
   325  0465                     _RCIE	set	1125
   326                           	global	_SYNC
   327  04C4                     _SYNC	set	1220
   328                           	global	_TX9
   329  04C6                     _TX9	set	1222
   330                           	global	_TXEN
   331  04C5                     _TXEN	set	1221
   332                           	global	_TXIE
   333  0464                     _TXIE	set	1124
   334                           	global	_EEADR
   335  010D                     _EEADR	set	269
   336                           	global	_EEDATA
   337  010C                     _EEDATA	set	268
   338                           	global	_EECON1
   339  018C                     _EECON1	set	396
   340                           	global	_EECON2
   341  018D                     _EECON2	set	397
   342                           	global	_RD
   343  0C60                     _RD	set	3168
   344                           	global	_WR
   345  0C61                     _WR	set	3169
   346                           	global	_WREN
   347  0C62                     _WREN	set	3170
   348                           	
   349  081A                     STR_11:	
   350  081A  3441               	retlw	65	;'A'
   351  081B  3444               	retlw	68	;'D'
   352  081C  3443               	retlw	67	;'C'
   353  081D  343A               	retlw	58	;':'
   354  081E  3425               	retlw	37	;'%'
   355  081F  3464               	retlw	100	;'d'
   356  0820  3420               	retlw	32	;' '
   357  0821  3444               	retlw	68	;'D'
   358  0822  3469               	retlw	105	;'i'
   359  0823  3473               	retlw	115	;'s'
   360  0824  3474               	retlw	116	;'t'
   361  0825  343A               	retlw	58	;':'
   362  0826  3425               	retlw	37	;'%'
   363  0827  3464               	retlw	100	;'d'
   364  0828  3400               	retlw	0
   365                           psect	strings
   366                           	
   367  0829                     STR_2:	
   368  0829  3453               	retlw	83	;'S'
   369  082A  3463               	retlw	99	;'c'
   370  082B  3461               	retlw	97	;'a'
   371  082C  346E               	retlw	110	;'n'
   372  082D  345F               	retlw	95	;'_'
   373  082E  3433               	retlw	51	;'3'
   374  082F  3436               	retlw	54	;'6'
   375  0830  3430               	retlw	48	;'0'
   376  0831  3400               	retlw	0
   377                           psect	strings
   378                           	
   379  0832                     STR_1:	
   380  0832  3443               	retlw	67	;'C'
   381  0833  3461               	retlw	97	;'a'
   382  0834  346C               	retlw	108	;'l'
   383  0835  3469               	retlw	105	;'i'
   384  0836  3462               	retlw	98	;'b'
   385  0837  345F               	retlw	95	;'_'
   386  0838  3449               	retlw	73	;'I'
   387  0839  3452               	retlw	82	;'R'
   388  083A  3400               	retlw	0
   389                           psect	strings
   390                           	
   391  083B                     STR_5:	
   392  083B  3446               	retlw	70	;'F'
   393  083C  346C               	retlw	108	;'l'
   394  083D  3477               	retlw	119	;'w'
   395  083E  345F               	retlw	95	;'_'
   396  083F  3457               	retlw	87	;'W'
   397  0840  3461               	retlw	97	;'a'
   398  0841  346C               	retlw	108	;'l'
   399  0842  346C               	retlw	108	;'l'
   400  0843  3400               	retlw	0
   401                           psect	strings
   402                           	
   403  0844                     STR_3:	
   404  0844  3444               	retlw	68	;'D'
   405  0845  3472               	retlw	114	;'r'
   406  0846  3469               	retlw	105	;'i'
   407  0847  3476               	retlw	118	;'v'
   408  0848  3465               	retlw	101	;'e'
   409  0849  345F               	retlw	95	;'_'
   410  084A  3432               	retlw	50	;'2'
   411  084B  346D               	retlw	109	;'m'
   412  084C  3400               	retlw	0
   413                           psect	strings
   414                           	
   415  084D                     STR_4:	
   416  084D  3444               	retlw	68	;'D'
   417  084E  3472               	retlw	114	;'r'
   418  084F  3469               	retlw	105	;'i'
   419  0850  3476               	retlw	118	;'v'
   420  0851  3465               	retlw	101	;'e'
   421  0852  345F               	retlw	95	;'_'
   422  0853  344C               	retlw	76	;'L'
   423  0854  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  0855                     STR_14:	
   427  0855  3443               	retlw	67	;'C'
   428  0856  344F               	retlw	79	;'O'
   429  0857  344E               	retlw	78	;'N'
   430  0858  3446               	retlw	70	;'F'
   431  0859  3449               	retlw	73	;'I'
   432  085A  3452               	retlw	82	;'R'
   433  085B  344D               	retlw	77	;'M'
   434  085C  3400               	retlw	0
   435                           psect	strings
   436                           	
   437  085D                     STR_8:	
   438  085D  3444               	retlw	68	;'D'
   439  085E  3472               	retlw	114	;'r'
   440  085F  3432               	retlw	50	;'2'
   441  0860  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  0861                     STR_13:	
   445  0861  343C               	retlw	60	;'<'
   446  0862  343C               	retlw	60	;'<'
   447  0863  343C               	retlw	60	;'<'
   448  0864  3400               	retlw	0
   449                           psect	strings
   450                           	
   451  0865                     STR_15:	
   452  0865  343E               	retlw	62	;'>'
   453  0866  343E               	retlw	62	;'>'
   454  0867  343E               	retlw	62	;'>'
   455  0868  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  0869                     STR_9:	
   459  0869  3444               	retlw	68	;'D'
   460  086A  3472               	retlw	114	;'r'
   461  086B  344C               	retlw	76	;'L'
   462  086C  3400               	retlw	0
   463                           psect	strings
   464                           	
   465  086D                     STR_6:	
   466  086D  3443               	retlw	67	;'C'
   467  086E  3461               	retlw	97	;'a'
   468  086F  346C               	retlw	108	;'l'
   469  0870  3400               	retlw	0
   470                           psect	strings
   471                           	
   472  0871                     STR_7:	
   473  0871  3453               	retlw	83	;'S'
   474  0872  3463               	retlw	99	;'c'
   475  0873  346E               	retlw	110	;'n'
   476  0874  3400               	retlw	0
   477                           psect	strings
   478                           	
   479  0875                     STR_10:	
   480  0875  3446               	retlw	70	;'F'
   481  0876  346C               	retlw	108	;'l'
   482  0877  3477               	retlw	119	;'w'
   483  0878  3400               	retlw	0
   484                           psect	strings
   485  081A                     STR_12	equ	STR_11+0
   486                           	file	"Assignment3_AldnoahZero.as"
   487                           	line	#
   488                           psect cinit,class=CODE,delta=2
   489                           global start_initialization
   490  0C36                     start_initialization:
   491                           
   492                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   493                           global __pbitbssCOMMON
   494  0380                     __pbitbssCOMMON:
   495  0380                     _CenterPressed:
   496  0380                            ds      1
   497                           
   498  0381                     _CenterReleased:
   499  0381                            ds      1
   500                           
   501  0382                     _DownPressed:
   502  0382                            ds      1
   503                           
   504  0383                     _DownReleased:
   505  0383                            ds      1
   506                           
   507  0384                     _LeftPressed:
   508  0384                            ds      1
   509                           
   510  0385                     _LeftReleased:
   511  0385                            ds      1
   512                           
   513  0386                     _RTC_FLAG_10MS:
   514  0386                            ds      1
   515                           
   516  0387                     _RTC_FLAG_1MS:
   517  0387                            ds      1
   518                           
   519  0388                     _RTC_FLAG_250MS:
   520  0388                            ds      1
   521                           
   522  0389                     _RTC_FLAG_500MS:
   523  0389                            ds      1
   524                           
   525  038A                     _RTC_FLAG_50MS:
   526  038A                            ds      1
   527                           
   528  038B                     _RightPressed:
   529  038B                            ds      1
   530                           
   531  038C                     _RightReleased:
   532  038C                            ds      1
   533                           
   534  038D                     _UpPressed:
   535  038D                            ds      1
   536                           
   537  038E                     _UpReleased:
   538  038E                            ds      1
   539                           
   540                           psect	bssCOMMON,class=COMMON,space=1
   541                           global __pbssCOMMON
   542  007D                     __pbssCOMMON:
   543  007D                     _txiptr:
   544  007D                            ds      1
   545                           
   546                           psect	bssBANK0,class=BANK0,space=1
   547                           global __pbssBANK0
   548  0068                     __pbssBANK0:
   549  0068                     _RTC_Counter:
   550  0068                            ds      2
   551                           
   552  006A                     _adcVal:
   553  006A                            ds      2
   554                           
   555  006C                     _buttonPressed:
   556  006C                            ds      1
   557                           
   558  006D                     _rxiptr:
   559  006D                            ds      1
   560                           
   561  006E                     _rxoptr:
   562  006E                            ds      1
   563                           
   564  006F                     _txoptr:
   565  006F                            ds      1
   566                           
   567                           psect	bssBANK1,class=BANK1,space=1
   568                           global __pbssBANK1
   569  00A0                     __pbssBANK1:
   570  00A0                     _rxfifo:
   571  00A0                            ds      16
   572                           
   573  00B0                     _txfifo:
   574  00B0                            ds      16
   575                           
   576  00C0                     _dist_high:
   577  00C0                            ds      2
   578                           
   579  00C2                     _dist_low:
   580  00C2                            ds      2
   581                           
   582  00C4                     _distance:
   583  00C4                            ds      2
   584                           
   585  00C6                     _pos:
   586  00C6                            ds      2
   587                           
   588  00C8                     _test:
   589  00C8                            ds      2
   590                           
   591  00CA                     _total:
   592  00CA                            ds      2
   593                           
   594  00CC                     _totalSteps:
   595  00CC                            ds      2
   596                           
   597  00CE                     _CenterDebounceCount:
   598  00CE                            ds      1
   599                           
   600  00CF                     _DownDebounceCount:
   601  00CF                            ds      1
   602                           
   603  00D0                     _LeftDebounceCount:
   604  00D0                            ds      1
   605                           
   606  00D1                     _RightDebounceCount:
   607  00D1                            ds      1
   608                           
   609  00D2                     _SCAN_FLAG:
   610  00D2                            ds      1
   611                           
   612  00D3                     _UpDebounceCount:
   613  00D3                            ds      1
   614                           
   615  00D4                     _currentMenu:
   616  00D4                            ds      1
   617                           
   618  00D5                     _current_direction:
   619  00D5                            ds      1
   620                           
   621  00D6                     _highByte:
   622  00D6                            ds      1
   623                           
   624  00D7                     _lowByte:
   625  00D7                            ds      1
   626                           
   627  00D8                     _ser_tmp:
   628  00D8                            ds      1
   629                           
   630  00D9                     _serialInput:
   631  00D9                            ds      1
   632                           
   633  00DA                     _turnhighByte:
   634  00DA                            ds      1
   635                           
   636  00DB                     _turnlowByte:
   637  00DB                            ds      1
   638                           
   639                           psect	dataBANK1,class=BANK1,space=1
   640                           global __pdataBANK1
   641  00DC                     __pdataBANK1:
   642                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   643                           	line	32
   644  00DC                     _menuStrings:
   645  00DC                            ds      5
   646                           
   647                           psect	dataBANK1
   648                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   649                           	line	33
   650  00E1                     _shortMenuStrings:
   651  00E1                            ds      5
   652                           
   653                           psect	dataBANK1
   654                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   655                           	line	30
   656  00E6                     _current_step:
   657  00E6                            ds      1
   658                           
   659                           psect	dataBANK1
   660                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.h"
   661                           	line	11
   662  00E7                     _distTravelled:
   663  00E7                            ds      1
   664                           
   665                           psect	bssBANK3,class=BANK3,space=1
   666                           global __pbssBANK3
   667  0190                     __pbssBANK3:
   668  0190                     UpdateDisplay@F1228:
   669  0190                            ds      16
   670                           
   671                           psect clrtext,class=CODE,delta=2
   672                           global clear_ram
   673                           ;	Called with FSR containing the base address, and
   674                           ;	W with the last address+1
   675  0A00                     clear_ram:
   676  0A00  0064               	clrwdt			;clear the watchdog before getting into this loop
   677  0A01                     clrloop:
   678  0A01  0180               	clrf	indf		;clear RAM location pointed to by FSR
   679  0A02  0A84               	incf	fsr,f		;increment pointer
   680  0A03  0604               	xorwf	fsr,w		;XOR with final address
   681  0A04  1903               	btfsc	status,2	;have we reached the end yet?
   682  0A05  3400               	retlw	0		;all done for this memory range, return
   683  0A06  0604               	xorwf	fsr,w		;XOR again to restore value
   684  0A07  2A01               	goto	clrloop		;do the next byte
   685                           
   686                           ; Clear objects allocated to BITCOMMON
   687                           psect cinit,class=CODE,delta=2
   688  0C36  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   689  0C37  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   690                           ; Clear objects allocated to COMMON
   691                           psect cinit,class=CODE,delta=2
   692  0C38  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   693                           ; Clear objects allocated to BANK0
   694                           psect cinit,class=CODE,delta=2
   695  0C39  1383               	bcf	status, 7	;select IRP bank0
   696  0C3A  3068               	movlw	low(__pbssBANK0)
   697  0C3B  0084               	movwf	fsr
   698  0C3C  3070               	movlw	low((__pbssBANK0)+08h)
   699  0C3D  120A  158A  2200   	fcall	clear_ram
              120A  158A         
   700                           ; Clear objects allocated to BANK1
   701                           psect cinit,class=CODE,delta=2
   702  0C42  30A0               	movlw	low(__pbssBANK1)
   703  0C43  0084               	movwf	fsr
   704  0C44  30DC               	movlw	low((__pbssBANK1)+03Ch)
   705  0C45  120A  158A  2200   	fcall	clear_ram
              120A  158A         
   706                           ; Clear objects allocated to BANK3
   707                           psect cinit,class=CODE,delta=2
   708  0C4A  1783               	bsf	status, 7	;select IRP bank2
   709  0C4B  3090               	movlw	low(__pbssBANK3)
   710  0C4C  0084               	movwf	fsr
   711  0C4D  30A0               	movlw	low((__pbssBANK3)+010h)
   712  0C4E  120A  158A  2200   	fcall	clear_ram
              120A  158A         
   713                           global btemp
   714                           psect inittext,class=CODE,delta=2
   715                           global init_fetch,btemp
   716                           ;	Called with low address in FSR and high address in W
   717  0A4E                     init_fetch:
   718  0A4E  087E               	movf btemp,w
   719  0A4F  008A               	movwf pclath
   720  0A50  087F               	movf btemp+1,w
   721  0A51  0082               	movwf pc
   722                           global init_ram
   723                           ;Called with:
   724                           ;	high address of idata address in btemp 
   725                           ;	low address of idata address in btemp+1 
   726                           ;	low address of data in FSR
   727                           ;	high address + 1 of data in btemp-1
   728  0A52                     init_ram:
   729  0A52  120A  158A  224E   	fcall init_fetch
              120A  158A         
   730  0A57  0080               	movwf indf,f
   731  0A58  0A84               	incf fsr,f
   732  0A59  0804               	movf fsr,w
   733  0A5A  067D               	xorwf btemp-1,w
   734  0A5B  1903               	btfsc status,2
   735  0A5C  3400               	retlw 0
   736  0A5D  0AFF               	incf btemp+1,f
   737  0A5E  1903               	btfsc status,2
   738  0A5F  0AFE               	incf btemp,f
   739  0A60  2A52               	goto init_ram
   740                           ; Initialize objects allocated to BANK1
   741                           psect cinit,class=CODE,delta=2
   742                           global init_ram, __pidataBANK1
   743  0C53  1383               	bcf	status, 7	;select IRP bank0
   744  0C54  30E8               	movlw low(__pdataBANK1+12)
   745  0C55  00FD               	movwf btemp-1,f
   746  0C56  300A               	movlw high(__pidataBANK1)
   747  0C57  00FE               	movwf btemp,f
   748  0C58  3013               	movlw low(__pidataBANK1)
   749  0C59  00FF               	movwf btemp+1,f
   750  0C5A  30DC               	movlw low(__pdataBANK1)
   751  0C5B  0084               	movwf fsr,f
   752  0C5C  120A  158A  2252   	fcall init_ram
              120A  158A         
   753                           psect cinit,class=CODE,delta=2
   754                           global end_of_initialization
   755                           
   756                           ;End of C runtime variable initialization code
   757                           
   758  0C61                     end_of_initialization:
   759  0C61  0183               clrf status
   760  0C62  120A  118A  2B85   ljmp _main	;jump to C main() function
   761                           psect	cstackCOMMON,class=COMMON,space=1
   762                           global __pcstackCOMMON
   763  0072                     __pcstackCOMMON:
   764                           	global	?_ser_init
   765  0072                     ?_ser_init:	; 0 bytes @ 0x0
   766                           	global	?_robo_init
   767  0072                     ?_robo_init:	; 0 bytes @ 0x0
   768                           	global	?_UpdateDisplay
   769  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   770                           	global	?_readAvgDistance
   771  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   772                           	global	?_robot_distance
   773  0072                     ?_robot_distance:	; 0 bytes @ 0x0
   774                           	global	?_ADCconvert
   775  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   776                           	global	?_init_adc
   777  0072                     ?_init_adc:	; 0 bytes @ 0x0
   778                           	global	?_lcd_write_control
   779  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   780                           	global	?_lcd_write_data
   781  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   782                           	global	?_lcd_set_cursor
   783  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   784                           	global	?_lcd_init
   785  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   786                           	global	?_isr1
   787  0072                     ?_isr1:	; 0 bytes @ 0x0
   788                           	global	?_init
   789  0072                     ?_init:	; 0 bytes @ 0x0
   790                           	global	?_calibrateIR
   791  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   792                           	global	?_main
   793  0072                     ?_main:	; 0 bytes @ 0x0
   794                           	global	?_ser_isrx
   795  0072                     ?_ser_isrx:	; 1 bit 
   796                           	global	?_ser_putch
   797  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   798                           	global	?_Debounce
   799  0072                     ?_Debounce:	; 0 bytes @ 0x0
   800                           	global	??_Debounce
   801  0072                     ??_Debounce:	; 0 bytes @ 0x0
   802                           	global	?_ReadButtons
   803  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   804                           	global	?_Menu
   805  0072                     ?_Menu:	; 1 bytes @ 0x0
   806                           	global	?_adc_read_channel
   807  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   808                           	global	?_spi_transfer
   809  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   810                           	global	?_ser_getch
   811  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   812                           	global	?i1___lwmod
   813  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   814                           	global	i1___lwmod@divisor
   815  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   816  0072                     	ds	1
   817                           	global	??_ReadButtons
   818  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   819  0073                     	ds	1
   820                           	global	i1___lwmod@dividend
   821  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   822  0074                     	ds	2
   823                           	global	??i1___lwmod
   824  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   825  0076                     	ds	1
   826                           	global	i1___lwmod@counter
   827  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   828  0077                     	ds	1
   829                           	global	??_isr1
   830  0078                     ??_isr1:	; 0 bytes @ 0x6
   831  0078                     	ds	5
   832                           psect	cstackBANK0,class=BANK0,space=1
   833                           global __pcstackBANK0
   834  0020                     __pcstackBANK0:
   835                           	global	??_ser_init
   836  0020                     ??_ser_init:	; 0 bytes @ 0x0
   837                           	global	??_Menu
   838  0020                     ??_Menu:	; 0 bytes @ 0x0
   839                           	global	??_init_adc
   840  0020                     ??_init_adc:	; 0 bytes @ 0x0
   841                           	global	??_lcd_write_control
   842  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   843                           	global	??_lcd_write_data
   844  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   845                           	global	??_spi_transfer
   846  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   847                           	global	??_ser_isrx
   848  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   849                           	global	??_ser_getch
   850  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   851                           	global	??_ser_putch
   852  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   853                           	global	?_adc_read
   854  0020                     ?_adc_read:	; 2 bytes @ 0x0
   855                           	global	?___wmul
   856  0020                     ?___wmul:	; 2 bytes @ 0x0
   857                           	global	?___awmod
   858  0020                     ?___awmod:	; 2 bytes @ 0x0
   859                           	global	Menu@input
   860  0020                     Menu@input:	; 1 bytes @ 0x0
   861                           	global	___wmul@multiplier
   862  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   863                           	global	___awmod@divisor
   864  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   865  0020                     	ds	1
   866                           	global	spi_transfer@temp
   867  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   868                           	global	ser_getch@c
   869  0021                     ser_getch@c:	; 1 bytes @ 0x1
   870                           	global	ser_putch@c
   871  0021                     ser_putch@c:	; 1 bytes @ 0x1
   872  0021                     	ds	1
   873                           	global	??_adc_read
   874  0022                     ??_adc_read:	; 0 bytes @ 0x2
   875                           	global	??_robo_init
   876  0022                     ??_robo_init:	; 0 bytes @ 0x2
   877                           	global	?_robotMove
   878  0022                     ?_robotMove:	; 0 bytes @ 0x2
   879                           	global	?_robotTurn
   880  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   881                           	global	?_robot_read
   882  0022                     ?_robot_read:	; 0 bytes @ 0x2
   883                           	global	lcd_write_control@databyte
   884  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   885                           	global	lcd_write_data@databyte
   886  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   887                           	global	spi_transfer@data
   888  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   889                           	global	robot_read@packet
   890  0022                     robot_read@packet:	; 2 bytes @ 0x2
   891                           	global	robotMove@distance
   892  0022                     robotMove@distance:	; 2 bytes @ 0x2
   893                           	global	robotTurn@distance
   894  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   895                           	global	___wmul@multiplicand
   896  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   897                           	global	___awmod@dividend
   898  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   899  0022                     	ds	1
   900                           	global	?_rotate
   901  0023                     ?_rotate:	; 0 bytes @ 0x3
   902                           	global	??_lcd_set_cursor
   903  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   904                           	global	??_lcd_init
   905  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   906                           	global	??_init
   907  0023                     ??_init:	; 0 bytes @ 0x3
   908                           	global	lcd_set_cursor@address
   909  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   910                           	global	rotate@numsteps
   911  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   912  0023                     	ds	1
   913                           	global	??_robotMove
   914  0024                     ??_robotMove:	; 0 bytes @ 0x4
   915                           	global	??_robotTurn
   916  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   917                           	global	??_robot_distance
   918  0024                     ??_robot_distance:	; 0 bytes @ 0x4
   919                           	global	??_robot_read
   920  0024                     ??_robot_read:	; 0 bytes @ 0x4
   921                           	global	??___wmul
   922  0024                     ??___wmul:	; 0 bytes @ 0x4
   923                           	global	??___awmod
   924  0024                     ??___awmod:	; 0 bytes @ 0x4
   925                           	global	adc_read@adc_value
   926  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   927                           	global	___wmul@product
   928  0024                     ___wmul@product:	; 2 bytes @ 0x4
   929  0024                     	ds	1
   930                           	global	rotate@direction
   931  0025                     rotate@direction:	; 1 bytes @ 0x5
   932                           	global	___awmod@counter
   933  0025                     ___awmod@counter:	; 1 bytes @ 0x5
   934  0025                     	ds	1
   935                           	global	??_rotate
   936  0026                     ??_rotate:	; 0 bytes @ 0x6
   937                           	global	??_adc_read_channel
   938  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
   939                           	global	?___lwdiv
   940  0026                     ?___lwdiv:	; 2 bytes @ 0x6
   941                           	global	___awmod@sign
   942  0026                     ___awmod@sign:	; 1 bytes @ 0x6
   943                           	global	___lwdiv@divisor
   944  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   945  0026                     	ds	1
   946                           	global	?_lcd_write_string
   947  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
   948                           	global	adc_read_channel@channel
   949  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
   950                           	global	lcd_write_string@s
   951  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
   952  0027                     	ds	1
   953                           	global	?_readDistance
   954  0028                     ?_readDistance:	; 2 bytes @ 0x8
   955                           	global	rotate@i
   956  0028                     rotate@i:	; 2 bytes @ 0x8
   957                           	global	___lwdiv@dividend
   958  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   959  0028                     	ds	1
   960                           	global	??_lcd_write_string
   961  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
   962  0029                     	ds	1
   963                           	global	??_readDistance
   964  002A                     ??_readDistance:	; 0 bytes @ 0xA
   965                           	global	??___lwdiv
   966  002A                     ??___lwdiv:	; 0 bytes @ 0xA
   967  002A                     	ds	1
   968                           	global	___lwdiv@quotient
   969  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   970  002B                     	ds	1
   971                           	global	readDistance@fullval
   972  002C                     readDistance@fullval:	; 2 bytes @ 0xC
   973  002C                     	ds	1
   974                           	global	___lwdiv@counter
   975  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   976  002D                     	ds	1
   977                           	global	??_ADCconvert
   978  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
   979                           	global	?___lwmod
   980  002E                     ?___lwmod:	; 2 bytes @ 0xE
   981                           	global	___lwmod@divisor
   982  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
   983  002E                     	ds	2
   984                           	global	??_readAvgDistance
   985  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
   986                           	global	readAvgDistance@fullval
   987  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
   988                           	global	___lwmod@dividend
   989  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
   990  0030                     	ds	2
   991                           	global	??___lwmod
   992  0032                     ??___lwmod:	; 0 bytes @ 0x12
   993                           	global	readAvgDistance@i
   994  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
   995  0032                     	ds	1
   996                           	global	___lwmod@counter
   997  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
   998  0033                     	ds	1
   999                           	global	?_sprintf
  1000  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1001                           	global	sprintf@f
  1002  0034                     sprintf@f:	; 1 bytes @ 0x14
  1003  0034                     	ds	5
  1004                           	global	??_sprintf
  1005  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1006  0039                     	ds	3
  1007                           	global	sprintf@ap
  1008  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1009  003C                     	ds	1
  1010                           	global	sprintf@flag
  1011  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1012  003D                     	ds	1
  1013                           	global	sprintf@prec
  1014  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1015  003E                     	ds	1
  1016                           	global	sprintf@_val
  1017  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1018  003F                     	ds	4
  1019                           	global	sprintf@sp
  1020  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1021  0043                     	ds	1
  1022                           	global	sprintf@c
  1023  0044                     sprintf@c:	; 1 bytes @ 0x24
  1024  0044                     	ds	1
  1025                           	global	??_UpdateDisplay
  1026  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1027  0045                     	ds	5
  1028                           	global	UpdateDisplay@adcOutput
  1029  004A                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
  1030  004A                     	ds	16
  1031                           	global	??_calibrateIR
  1032  005A                     ??_calibrateIR:	; 0 bytes @ 0x3A
  1033                           	global	?_scan360
  1034  005A                     ?_scan360:	; 2 bytes @ 0x3A
  1035  005A                     	ds	2
  1036                           	global	??_scan360
  1037  005C                     ??_scan360:	; 0 bytes @ 0x3C
  1038                           	global	scan360@lowestVal
  1039  005C                     scan360@lowestVal:	; 2 bytes @ 0x3C
  1040  005C                     	ds	2
  1041                           	global	scan360@lowestSteps
  1042  005E                     scan360@lowestSteps:	; 2 bytes @ 0x3E
  1043  005E                     	ds	2
  1044                           	global	scan360@steps
  1045  0060                     scan360@steps:	; 2 bytes @ 0x40
  1046  0060                     	ds	2
  1047                           	global	??_main
  1048  0062                     ??_main:	; 0 bytes @ 0x42
  1049  0062                     	ds	3
  1050                           	global	main@shortwall
  1051  0065                     main@shortwall:	; 2 bytes @ 0x45
  1052  0065                     	ds	2
  1053                           	global	main@choice
  1054  0067                     main@choice:	; 1 bytes @ 0x47
  1055  0067                     	ds	1
  1056 ;;Data sizes: Strings 95, constant 10, data 12, bss 85, persistent 0 stack 0
  1057 ;;Auto spaces:   Size  Autos    Used
  1058 ;; COMMON          14     11      14
  1059 ;; BANK0           80     72      80
  1060 ;; BANK1           80      0      72
  1061 ;; BANK3           96      0      16
  1062 ;; BANK2           96      0       0
  1063                           
  1064 ;;
  1065 ;; Pointer list with targets:
  1066                           
  1067 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1068 ;;
  1069 ;; ?___awmod	int  size(1) Largest target is 0
  1070 ;;
  1071 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1072 ;;
  1073 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1074 ;;
  1075 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1076 ;;
  1077 ;; ?_scan360	int  size(1) Largest target is 0
  1078 ;;
  1079 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1080 ;;
  1081 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1082 ;;
  1083 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1084 ;;		 -> STR_12(CODE[15]), STR_11(CODE[15]), 
  1085 ;;
  1086 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1087 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1088 ;;
  1089 ;; ?_sprintf	int  size(1) Largest target is 0
  1090 ;;
  1091 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1092 ;;		 -> ?_sprintf(BANK0[2]), 
  1093 ;;
  1094 ;; S8121$_cp	PTR const unsigned char  size(1) Largest target is 0
  1095 ;;
  1096 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1097 ;;
  1098 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
  1099 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1100 ;;		 -> STR_6(CODE[4]), 
  1101 ;;
  1102 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
  1103 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1104 ;;		 -> STR_1(CODE[9]), 
  1105 ;;
  1106 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1107 ;;		 -> STR_15(CODE[4]), STR_14(CODE[8]), STR_13(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), 
  1108 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1109 ;;		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1110 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1111 ;;
  1112                           
  1113                           
  1114 ;;
  1115 ;; Critical Paths under _main in COMMON
  1116 ;;
  1117 ;;   None.
  1118 ;;
  1119 ;; Critical Paths under _isr1 in COMMON
  1120 ;;
  1121 ;;   _isr1->i1___lwmod
  1122 ;;   _ReadButtons->_Debounce
  1123 ;;
  1124 ;; Critical Paths under _main in BANK0
  1125 ;;
  1126 ;;   _main->_scan360
  1127 ;;   _scan360->_UpdateDisplay
  1128 ;;   _calibrateIR->_UpdateDisplay
  1129 ;;   _readAvgDistance->_ADCconvert
  1130 ;;   _UpdateDisplay->_sprintf
  1131 ;;   _readDistance->_adc_read_channel
  1132 ;;   _robot_distance->_robot_read
  1133 ;;   _lcd_init->_lcd_write_control
  1134 ;;   _lcd_write_string->___awmod
  1135 ;;   _lcd_set_cursor->_lcd_write_control
  1136 ;;   _robot_read->_ser_putch
  1137 ;;   _sprintf->___lwmod
  1138 ;;   _ADCconvert->___lwdiv
  1139 ;;   _robotTurn->_ser_putch
  1140 ;;   _robotMove->_ser_putch
  1141 ;;   _rotate->_spi_transfer
  1142 ;;   _robo_init->_ser_putch
  1143 ;;   _adc_read_channel->_adc_read
  1144 ;;   ___lwmod->___lwdiv
  1145 ;;   ___lwdiv->___wmul
  1146 ;;
  1147 ;; Critical Paths under _isr1 in BANK0
  1148 ;;
  1149 ;;   None.
  1150 ;;
  1151 ;; Critical Paths under _main in BANK1
  1152 ;;
  1153 ;;   None.
  1154 ;;
  1155 ;; Critical Paths under _isr1 in BANK1
  1156 ;;
  1157 ;;   None.
  1158 ;;
  1159 ;; Critical Paths under _main in BANK3
  1160 ;;
  1161 ;;   None.
  1162 ;;
  1163 ;; Critical Paths under _isr1 in BANK3
  1164 ;;
  1165 ;;   None.
  1166 ;;
  1167 ;; Critical Paths under _main in BANK2
  1168 ;;
  1169 ;;   None.
  1170 ;;
  1171 ;; Critical Paths under _isr1 in BANK2
  1172 ;;
  1173 ;;   None.
  1174                           
  1175 ;;
  1176 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1177 ;;
  1178                           
  1179 ;;
  1180 ;;Call Graph Tables:
  1181 ;;
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1184 ;; ---------------------------------------------------------------------------------
  1185 ;; (0) _main                                                 6     6      0    5881
  1186 ;;                                             66 BANK0      6     6      0
  1187 ;;                               _init
  1188 ;;                    _readAvgDistance
  1189 ;;                      _UpdateDisplay
  1190 ;;                               _Menu
  1191 ;;                        _calibrateIR
  1192 ;;                            _scan360
  1193 ;;                             _rotate
  1194 ;;                          _robotMove
  1195 ;;                          _robotTurn
  1196 ;;                     _robot_distance
  1197 ;; ---------------------------------------------------------------------------------
  1198 ;; (1) _scan360                                              8     6      2    2118
  1199 ;;                                             58 BANK0      8     6      2
  1200 ;;                    _readAvgDistance
  1201 ;;                             _rotate
  1202 ;;                      _UpdateDisplay
  1203 ;; ---------------------------------------------------------------------------------
  1204 ;; (1) _calibrateIR                                          0     0      0    1425
  1205 ;;                             _rotate
  1206 ;;                      _UpdateDisplay
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (2) _readAvgDistance                                      4     4      0     555
  1209 ;;                                             16 BANK0      4     4      0
  1210 ;;                       _readDistance
  1211 ;;                            ___lwdiv
  1212 ;;                         _ADCconvert
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (2) _UpdateDisplay                                       21    21      0    1327
  1215 ;;                                             37 BANK0     21    21      0
  1216 ;;                  _lcd_write_control
  1217 ;;                            _sprintf
  1218 ;;                     _lcd_set_cursor
  1219 ;;                   _lcd_write_string
  1220 ;;                            ___awmod
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (1) _init                                                 1     1      0      44
  1223 ;;                                              3 BANK0      1     1      0
  1224 ;;                           _init_adc
  1225 ;;                           _lcd_init
  1226 ;;                           _ser_init
  1227 ;;                          _robo_init
  1228 ;; ---------------------------------------------------------------------------------
  1229 ;; (3) _readDistance                                         6     4      2      69
  1230 ;;                                              8 BANK0      6     4      2
  1231 ;;                   _adc_read_channel
  1232 ;; ---------------------------------------------------------------------------------
  1233 ;; (1) _robot_distance                                       1     1      0      67
  1234 ;;                                              4 BANK0      1     1      0
  1235 ;;                         _robot_read
  1236 ;;                          _ser_getch
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (2) _lcd_init                                             0     0      0      22
  1239 ;;                  _lcd_write_control
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (3) _lcd_write_string                                     2     0      2      67
  1242 ;;                                              7 BANK0      2     0      2
  1243 ;;                     _lcd_write_data
  1244 ;;                            ___awmod (ARG)
  1245 ;; ---------------------------------------------------------------------------------
  1246 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1247 ;;                                              3 BANK0      1     1      0
  1248 ;;                  _lcd_write_control
  1249 ;; ---------------------------------------------------------------------------------
  1250 ;; (2) _robot_read                                           2     0      2      44
  1251 ;;                                              2 BANK0      2     0      2
  1252 ;;                          _ser_putch
  1253 ;; ---------------------------------------------------------------------------------
  1254 ;; (3) _sprintf                                             17    12      5     798
  1255 ;;                                             20 BANK0     17    12      5
  1256 ;;                            ___lwdiv
  1257 ;;                            ___lwmod
  1258 ;; ---------------------------------------------------------------------------------
  1259 ;; (2) _ser_getch                                            2     2      0      23
  1260 ;;                                              0 BANK0      2     2      0
  1261 ;;                           _ser_isrx
  1262 ;; ---------------------------------------------------------------------------------
  1263 ;; (3) _ADCconvert                                           2     2      0     254
  1264 ;;                                             14 BANK0      2     2      0
  1265 ;;                             ___wmul
  1266 ;;                            ___lwdiv
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (1) _robotTurn                                            3     1      2      88
  1269 ;;                                              2 BANK0      3     1      2
  1270 ;;                          _ser_putch
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (1) _robotMove                                            3     1      2      88
  1273 ;;                                              2 BANK0      3     1      2
  1274 ;;                          _ser_putch
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; (1) _rotate                                               7     4      3      98
  1277 ;;                                              3 BANK0      7     4      3
  1278 ;;                       _spi_transfer
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (2) _robo_init                                            0     0      0      22
  1281 ;;                          _ser_putch
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (4) _lcd_write_data                                       3     3      0      22
  1284 ;;                                              0 BANK0      3     3      0
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (4) _lcd_write_control                                    3     3      0      22
  1287 ;;                                              0 BANK0      3     3      0
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (2) _init_adc                                             1     1      0       0
  1290 ;;                                              0 BANK0      1     1      0
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (4) _adc_read_channel                                     2     2      0      46
  1293 ;;                                              6 BANK0      2     2      0
  1294 ;;                           _adc_read
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; (3) ___awmod                                              7     3      4     296
  1297 ;;                                              0 BANK0      7     3      4
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (4) ___lwmod                                              6     2      4     159
  1300 ;;                                             14 BANK0      6     2      4
  1301 ;;                            ___lwdiv (ARG)
  1302 ;; ---------------------------------------------------------------------------------
  1303 ;; (4) ___lwdiv                                              8     4      4     162
  1304 ;;                                              6 BANK0      8     4      4
  1305 ;;                             ___wmul (ARG)
  1306 ;; ---------------------------------------------------------------------------------
  1307 ;; (4) ___wmul                                               6     2      4      92
  1308 ;;                                              0 BANK0      6     2      4
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (3) _ser_putch                                            2     2      0      22
  1311 ;;                                              0 BANK0      2     2      0
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (3) _ser_isrx                                             0     0      0       0
  1314 ;; ---------------------------------------------------------------------------------
  1315 ;; (2) _spi_transfer                                         3     3      0      30
  1316 ;;                                              0 BANK0      3     3      0
  1317 ;; ---------------------------------------------------------------------------------
  1318 ;; (1) _Menu                                                 1     1      0      22
  1319 ;;                                              0 BANK0      1     1      0
  1320 ;; ---------------------------------------------------------------------------------
  1321 ;; (2) _ser_init                                             1     1      0       0
  1322 ;;                                              0 BANK0      1     1      0
  1323 ;; ---------------------------------------------------------------------------------
  1324 ;; (5) _adc_read                                             6     4      2      24
  1325 ;;                                              0 BANK0      6     4      2
  1326 ;; ---------------------------------------------------------------------------------
  1327 ;; Estimated maximum stack depth 5
  1328 ;; ---------------------------------------------------------------------------------
  1329 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1330 ;; ---------------------------------------------------------------------------------
  1331 ;; (6) _isr1                                                 5     5      0     521
  1332 ;;                                              6 COMMON     5     5      0
  1333 ;;                          i1___lwmod
  1334 ;;                        _ReadButtons
  1335 ;; ---------------------------------------------------------------------------------
  1336 ;; (7) _ReadButtons                                          0     0      0       0
  1337 ;;                           _Debounce
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (7) i1___lwmod                                            6     2      4     521
  1340 ;;                                              0 COMMON     6     2      4
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (8) _Debounce                                             1     1      0       0
  1343 ;;                                              0 COMMON     1     1      0
  1344 ;; ---------------------------------------------------------------------------------
  1345 ;; Estimated maximum stack depth 8
  1346 ;; ---------------------------------------------------------------------------------
  1347                           
  1348 ;; Call Graph Graphs:
  1349                           
  1350 ;; _main (ROOT)
  1351 ;;   _init
  1352 ;;     _init_adc
  1353 ;;     _lcd_init
  1354 ;;       _lcd_write_control
  1355 ;;     _ser_init
  1356 ;;     _robo_init
  1357 ;;       _ser_putch
  1358 ;;   _readAvgDistance
  1359 ;;     _readDistance
  1360 ;;       _adc_read_channel
  1361 ;;         _adc_read
  1362 ;;     ___lwdiv
  1363 ;;       ___wmul (ARG)
  1364 ;;     _ADCconvert
  1365 ;;       ___wmul
  1366 ;;       ___lwdiv
  1367 ;;         ___wmul (ARG)
  1368 ;;   _UpdateDisplay
  1369 ;;     _lcd_write_control
  1370 ;;     _sprintf
  1371 ;;       ___lwdiv
  1372 ;;         ___wmul (ARG)
  1373 ;;       ___lwmod
  1374 ;;         ___lwdiv (ARG)
  1375 ;;           ___wmul (ARG)
  1376 ;;     _lcd_set_cursor
  1377 ;;       _lcd_write_control
  1378 ;;     _lcd_write_string
  1379 ;;       _lcd_write_data
  1380 ;;       ___awmod (ARG)
  1381 ;;     ___awmod
  1382 ;;   _Menu
  1383 ;;   _calibrateIR
  1384 ;;     _rotate
  1385 ;;       _spi_transfer
  1386 ;;     _UpdateDisplay
  1387 ;;       _lcd_write_control
  1388 ;;       _sprintf
  1389 ;;         ___lwdiv
  1390 ;;           ___wmul (ARG)
  1391 ;;         ___lwmod
  1392 ;;           ___lwdiv (ARG)
  1393 ;;             ___wmul (ARG)
  1394 ;;       _lcd_set_cursor
  1395 ;;         _lcd_write_control
  1396 ;;       _lcd_write_string
  1397 ;;         _lcd_write_data
  1398 ;;         ___awmod (ARG)
  1399 ;;       ___awmod
  1400 ;;   _scan360
  1401 ;;     _readAvgDistance
  1402 ;;       _readDistance
  1403 ;;         _adc_read_channel
  1404 ;;           _adc_read
  1405 ;;       ___lwdiv
  1406 ;;         ___wmul (ARG)
  1407 ;;       _ADCconvert
  1408 ;;         ___wmul
  1409 ;;         ___lwdiv
  1410 ;;           ___wmul (ARG)
  1411 ;;     _rotate
  1412 ;;       _spi_transfer
  1413 ;;     _UpdateDisplay
  1414 ;;       _lcd_write_control
  1415 ;;       _sprintf
  1416 ;;         ___lwdiv
  1417 ;;           ___wmul (ARG)
  1418 ;;         ___lwmod
  1419 ;;           ___lwdiv (ARG)
  1420 ;;             ___wmul (ARG)
  1421 ;;       _lcd_set_cursor
  1422 ;;         _lcd_write_control
  1423 ;;       _lcd_write_string
  1424 ;;         _lcd_write_data
  1425 ;;         ___awmod (ARG)
  1426 ;;       ___awmod
  1427 ;;   _rotate
  1428 ;;     _spi_transfer
  1429 ;;   _robotMove
  1430 ;;     _ser_putch
  1431 ;;   _robotTurn
  1432 ;;     _ser_putch
  1433 ;;   _robot_distance
  1434 ;;     _robot_read
  1435 ;;       _ser_putch
  1436 ;;     _ser_getch
  1437 ;;       _ser_isrx
  1438 ;;
  1439 ;; _isr1 (ROOT)
  1440 ;;   i1___lwmod
  1441 ;;   _ReadButtons
  1442 ;;     _Debounce
  1443 ;;
  1444                           
  1445 ;; Address spaces:
  1446                           
  1447 ;;Name               Size   Autos  Total    Cost      Usage
  1448 ;;BANK3               60      0      10       9       16.7%
  1449 ;;BITBANK3            60      0       0       8        0.0%
  1450 ;;SFR3                 0      0       0       4        0.0%
  1451 ;;BITSFR3              0      0       0       4        0.0%
  1452 ;;BANK2               60      0       0      11        0.0%
  1453 ;;BITBANK2            60      0       0      10        0.0%
  1454 ;;SFR2                 0      0       0       5        0.0%
  1455 ;;BITSFR2              0      0       0       5        0.0%
  1456 ;;SFR1                 0      0       0       2        0.0%
  1457 ;;BITSFR1              0      0       0       2        0.0%
  1458 ;;BANK1               50      0      48       7       90.0%
  1459 ;;BITBANK1            50      0       0       6        0.0%
  1460 ;;CODE                 0      0       0       0        0.0%
  1461 ;;DATA                 0      0      C1      12        0.0%
  1462 ;;ABS                  0      0      B6       3        0.0%
  1463 ;;NULL                 0      0       0       0        0.0%
  1464 ;;STACK                0      0       B       2        0.0%
  1465 ;;BANK0               50     48      50       5      100.0%
  1466 ;;BITBANK0            50      0       0       4        0.0%
  1467 ;;SFR0                 0      0       0       1        0.0%
  1468 ;;BITSFR0              0      0       0       1        0.0%
  1469 ;;COMMON               E      B       E       1      100.0%
  1470 ;;BITCOMMON            E      0       2       0       14.3%
  1471 ;;EEDATA             100      0       0       0        0.0%
  1472                           
  1473                           	global	_main
  1474                           psect	maintext,global,class=CODE,delta=2
  1475                           global __pmaintext
  1476  0385                     __pmaintext:
  1477                           
  1478 ;; *************** function _main *****************
  1479 ;; Defined at:
  1480 ;;		line 233 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  shortwall       2   69[BANK0 ] int 
  1485 ;;  choice          1   71[BANK0 ] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;		None               void
  1488 ;; Registers used:
  1489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 17F/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0       0       0       0
  1496 ;;      Locals:         0       3       0       0       0
  1497 ;;      Temps:          0       3       0       0       0
  1498 ;;      Totals:         0       6       0       0       0
  1499 ;;Total ram usage:        6 bytes
  1500 ;; Hardware stack levels required when called:    8
  1501 ;; This function calls:
  1502 ;;		_init
  1503 ;;		_readAvgDistance
  1504 ;;		_UpdateDisplay
  1505 ;;		_Menu
  1506 ;;		_calibrateIR
  1507 ;;		_scan360
  1508 ;;		_rotate
  1509 ;;		_robotMove
  1510 ;;		_robotTurn
  1511 ;;		_robot_distance
  1512 ;; This function is called by:
  1513 ;;		Startup code after reset
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           psect	maintext
  1517                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1518                           	line	233
  1519                           	global	__size_of_main
  1520  010C                     	__size_of_main	equ	__end_of_main-_main
  1521                           	
  1522  0385                     _main:	
  1523                           	opt	stack 0
  1524                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1525                           	line	238
  1526                           	
  1527  0385                     l10934:	
  1528                           ;Main.c: 238: init();
  1529  0385  120A  158A  2407   	fcall	_init
              120A  118A         
  1530  038A  2B8B               	goto	l10936
  1531                           	line	243
  1532                           ;Main.c: 243: while(1)
  1533                           	
  1534  038B                     l2237:	
  1535                           	line	245
  1536                           	
  1537  038B                     l10936:	
  1538                           ;Main.c: 244: {
  1539                           ;Main.c: 245: unsigned char choice = 255;
  1540  038B  30FF               	movlw	(0FFh)
  1541  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  1542  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  1543  038E  00E2               	movwf	(??_main+0)+0
  1544  038F  0862               	movf	(??_main+0)+0,w
  1545  0390  00E7               	movwf	(main@choice)
  1546                           	line	246
  1547                           	
  1548  0391                     l10938:	
  1549                           ;Main.c: 246: int shortwall = 0;
  1550  0391  01E5               	clrf	(main@shortwall)
  1551  0392  01E6               	clrf	(main@shortwall+1)
  1552                           	line	248
  1553                           	
  1554  0393                     l10940:	
  1555                           ;Main.c: 248: if ((SCAN_FLAG == 0) & (RTC_FLAG_250MS == 1))
  1556  0393  1683               	bsf	status, 5	;RP0=1, select bank1
  1557  0394  1303               	bcf	status, 6	;RP1=0, select bank1
  1558  0395  08D2               	movf	(_SCAN_FLAG)^080h,f
  1559  0396  1D03               	skipz
  1560  0397  2B99               	goto	u4541
  1561  0398  2B9A               	goto	u4540
  1562  0399                     u4541:
  1563  0399  2BE2               	goto	l10970
  1564  039A                     u4540:
  1565                           	
  1566  039A                     l10942:	
  1567  039A  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1568  039B  2B9D               	goto	u4551
  1569  039C  2B9E               	goto	u4550
  1570  039D                     u4551:
  1571  039D  2BE2               	goto	l10970
  1572  039E                     u4550:
  1573                           	line	250
  1574                           	
  1575  039E                     l10944:	
  1576                           ;Main.c: 249: {
  1577                           ;Main.c: 250: RTC_FLAG_250MS = 0;
  1578  039E  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1579                           	line	252
  1580                           	
  1581  039F                     l10946:	
  1582                           ;Main.c: 252: readAvgDistance();
  1583  039F  120A  158A  2641   	fcall	_readAvgDistance
              120A  118A         
  1584                           	line	253
  1585                           ;Main.c: 253: UpdateDisplay();
  1586  03A4  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1587  03A9  2BE2               	goto	l10970
  1588                           	line	254
  1589                           	
  1590  03AA                     l2238:	
  1591                           	line	256
  1592                           ;Main.c: 254: }
  1593                           ;Main.c: 256: switch (buttonPressed)
  1594  03AA  2BE2               	goto	l10970
  1595                           	line	258
  1596                           ;Main.c: 257: {
  1597                           ;Main.c: 258: case 1:
  1598                           	
  1599  03AB                     l2240:	
  1600                           	line	259
  1601                           	
  1602  03AB                     l10948:	
  1603                           ;Main.c: 259: Menu(1);
  1604  03AB  3001               	movlw	(01h)
  1605  03AC  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1606                           	line	261
  1607                           	
  1608  03B1                     l10950:	
  1609                           ;Main.c: 261: buttonPressed = 0;
  1610  03B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1611  03B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1612  03B3  01EC               	clrf	(_buttonPressed)	;volatile
  1613                           	line	263
  1614                           ;Main.c: 263: break;
  1615  03B4  2C73               	goto	l10994
  1616                           	line	264
  1617                           ;Main.c: 264: case 2:
  1618                           	
  1619  03B5                     l2242:	
  1620                           	line	265
  1621                           	
  1622  03B5                     l10952:	
  1623                           ;Main.c: 265: Menu(2);
  1624  03B5  3002               	movlw	(02h)
  1625  03B6  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1626                           	line	267
  1627                           	
  1628  03BB                     l10954:	
  1629                           ;Main.c: 267: buttonPressed = 0;
  1630  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  1631  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  1632  03BD  01EC               	clrf	(_buttonPressed)	;volatile
  1633                           	line	269
  1634                           ;Main.c: 269: break;
  1635  03BE  2C73               	goto	l10994
  1636                           	line	270
  1637                           ;Main.c: 270: case 3:
  1638                           	
  1639  03BF                     l2243:	
  1640                           	line	271
  1641                           	
  1642  03BF                     l10956:	
  1643                           ;Main.c: 271: Menu(3);
  1644  03BF  3003               	movlw	(03h)
  1645  03C0  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1646                           	line	273
  1647                           	
  1648  03C5                     l10958:	
  1649                           ;Main.c: 273: buttonPressed = 0;
  1650  03C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1651  03C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1652  03C7  01EC               	clrf	(_buttonPressed)	;volatile
  1653                           	line	275
  1654                           ;Main.c: 275: break;
  1655  03C8  2C73               	goto	l10994
  1656                           	line	276
  1657                           ;Main.c: 276: case 4:
  1658                           	
  1659  03C9                     l2244:	
  1660                           	line	277
  1661                           	
  1662  03C9                     l10960:	
  1663                           ;Main.c: 277: Menu(4);
  1664  03C9  3004               	movlw	(04h)
  1665  03CA  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1666                           	line	279
  1667                           	
  1668  03CF                     l10962:	
  1669                           ;Main.c: 279: buttonPressed = 0;
  1670  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1671  03D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1672  03D1  01EC               	clrf	(_buttonPressed)	;volatile
  1673                           	line	281
  1674                           ;Main.c: 281: break;
  1675  03D2  2C73               	goto	l10994
  1676                           	line	282
  1677                           ;Main.c: 282: case 5:
  1678                           	
  1679  03D3                     l2245:	
  1680                           	line	283
  1681                           	
  1682  03D3                     l10964:	
  1683                           ;Main.c: 283: choice = Menu(5);
  1684  03D3  3005               	movlw	(05h)
  1685  03D4  120A  158A  255A   	fcall	_Menu
              120A  118A         
  1686  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1687  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1688  03DB  00E2               	movwf	(??_main+0)+0
  1689  03DC  0862               	movf	(??_main+0)+0,w
  1690  03DD  00E7               	movwf	(main@choice)
  1691                           	line	285
  1692                           	
  1693  03DE                     l10966:	
  1694                           ;Main.c: 285: buttonPressed = 0;
  1695  03DE  01EC               	clrf	(_buttonPressed)	;volatile
  1696                           	line	287
  1697                           ;Main.c: 287: break;
  1698  03DF  2C73               	goto	l10994
  1699                           	line	288
  1700                           ;Main.c: 288: default:
  1701                           	
  1702  03E0                     l2246:	
  1703                           	line	290
  1704                           ;Main.c: 290: break;
  1705  03E0  2C73               	goto	l10994
  1706                           	line	291
  1707                           	
  1708  03E1                     l10968:	
  1709                           ;Main.c: 291: }
  1710  03E1  2C73               	goto	l10994
  1711                           	line	256
  1712                           	
  1713  03E2                     l2239:	
  1714                           	
  1715  03E2                     l10970:	
  1716  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1717  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1718  03E4  086C               	movf	(_buttonPressed),w	;volatile
  1719                           	; Switch size 1, requested type "space"
  1720                           ; Number of cases is 5, Range of values is 1 to 5
  1721                           ; switch strategies available:
  1722                           ; Name         Instructions Cycles
  1723                           ; simple_byte           16     9 (average)
  1724                           ; direct_byte           26    11 (fixed)
  1725                           ; jumptable            263     9 (fixed)
  1726                           ;	Chosen strategy is simple_byte
  1727                           
  1728                           	opt asmopt_off
  1729  03E5  3A01               	xorlw	1^0	; case 1
  1730  03E6  1903               	skipnz
  1731  03E7  2BAB               	goto	l10948
  1732  03E8  3A03               	xorlw	2^1	; case 2
  1733  03E9  1903               	skipnz
  1734  03EA  2BB5               	goto	l10952
  1735  03EB  3A01               	xorlw	3^2	; case 3
  1736  03EC  1903               	skipnz
  1737  03ED  2BBF               	goto	l10956
  1738  03EE  3A07               	xorlw	4^3	; case 4
  1739  03EF  1903               	skipnz
  1740  03F0  2BC9               	goto	l10960
  1741  03F1  3A01               	xorlw	5^4	; case 5
  1742  03F2  1903               	skipnz
  1743  03F3  2BD3               	goto	l10964
  1744  03F4  2C73               	goto	l10994
  1745                           	opt asmopt_on
  1746                           
  1747                           	line	291
  1748                           	
  1749  03F5                     l2241:	
  1750                           	line	294
  1751                           ;Main.c: 294: switch (choice)
  1752  03F5  2C73               	goto	l10994
  1753                           	line	296
  1754                           ;Main.c: 295: {
  1755                           ;Main.c: 296: case 0:
  1756                           	
  1757  03F6                     l2248:	
  1758                           	line	297
  1759                           	
  1760  03F6                     l10972:	
  1761                           ;Main.c: 297: calibrateIR();
  1762  03F6  120A  158A  2696   	fcall	_calibrateIR
              120A  118A         
  1763                           	line	298
  1764                           ;Main.c: 298: break;
  1765  03FB  2C86               	goto	l10996
  1766                           	line	299
  1767                           ;Main.c: 299: case 1:
  1768                           	
  1769  03FC                     l2250:	
  1770                           	line	300
  1771                           	
  1772  03FC                     l10974:	
  1773                           ;Main.c: 300: shortwall = scan360();
  1774  03FC  120A  158A  26FB   	fcall	_scan360
              120A  118A         
  1775  0401  1283               	bcf	status, 5	;RP0=0, select bank0
  1776  0402  1303               	bcf	status, 6	;RP1=0, select bank0
  1777  0403  085B               	movf	(1+(?_scan360)),w
  1778  0404  01E6               	clrf	(main@shortwall+1)
  1779  0405  07E6               	addwf	(main@shortwall+1)
  1780  0406  085A               	movf	(0+(?_scan360)),w
  1781  0407  01E5               	clrf	(main@shortwall)
  1782  0408  07E5               	addwf	(main@shortwall)
  1783                           
  1784                           	line	301
  1785                           	
  1786  0409                     l10976:	
  1787                           ;Main.c: 301: rotate((400 - shortwall), 0);
  1788  0409  0965               	comf	(main@shortwall),w
  1789  040A  00E2               	movwf	(??_main+0)+0
  1790  040B  0966               	comf	(main@shortwall+1),w
  1791  040C  00E3               	movwf	((??_main+0)+0+1)
  1792  040D  0AE2               	incf	(??_main+0)+0,f
  1793  040E  1903               	skipnz
  1794  040F  0AE3               	incf	((??_main+0)+0+1),f
  1795  0410  0862               	movf	0+(??_main+0)+0,w
  1796  0411  3E90               	addlw	low(0190h)
  1797  0412  00A3               	movwf	(?_rotate)
  1798  0413  0863               	movf	1+(??_main+0)+0,w
  1799  0414  1803               	skipnc
  1800  0415  3E01               	addlw	1
  1801  0416  3E01               	addlw	high(0190h)
  1802  0417  00A4               	movwf	1+(?_rotate)
  1803  0418  01A5               	clrf	0+(?_rotate)+02h
  1804  0419  120A  158A  25F1   	fcall	_rotate
              120A  118A         
  1805                           	line	302
  1806                           ;Main.c: 302: break;
  1807  041E  2C86               	goto	l10996
  1808                           	line	303
  1809                           ;Main.c: 303: case 2:
  1810                           	
  1811  041F                     l2251:	
  1812                           	line	304
  1813                           	
  1814  041F                     l10978:	
  1815                           ;Main.c: 304: _delay((unsigned long)((100)*(20000000/4000.0)));
  1816                           	opt asmopt_off
  1817  041F  3003               movlw  3
  1818  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  1819  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  1820  0422  00E4               movwf	((??_main+0)+0+2),f
  1821  0423  308A               movlw	138
  1822  0424  00E3               movwf	((??_main+0)+0+1),f
  1823  0425  3056               	movlw	86
  1824  0426  00E2               movwf	((??_main+0)+0),f
  1825  0427                     u4567:
  1826  0427  0BE2               	decfsz	((??_main+0)+0),f
  1827  0428  2C27               	goto	u4567
  1828  0429  0BE3               	decfsz	((??_main+0)+0+1),f
  1829  042A  2C27               	goto	u4567
  1830  042B  0BE4               	decfsz	((??_main+0)+0+2),f
  1831  042C  2C27               	goto	u4567
  1832  042D  2C2E               	nop2
  1833                           opt asmopt_on
  1834                           
  1835                           	line	305
  1836                           	
  1837  042E                     l10980:	
  1838                           ;Main.c: 305: robotMove(2000);
  1839  042E  30D0               	movlw	low(07D0h)
  1840  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  1841  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  1842  0431  00A2               	movwf	(?_robotMove)
  1843  0432  3007               	movlw	high(07D0h)
  1844  0433  00A3               	movwf	((?_robotMove))+1
  1845  0434  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1846                           	line	308
  1847                           ;Main.c: 308: break;
  1848  0439  2C86               	goto	l10996
  1849                           	line	309
  1850                           ;Main.c: 309: case 3:
  1851                           	
  1852  043A                     l2252:	
  1853                           	line	310
  1854                           	
  1855  043A                     l10982:	
  1856                           ;Main.c: 310: _delay((unsigned long)((100)*(20000000/4000.0)));
  1857                           	opt asmopt_off
  1858  043A  3003               movlw  3
  1859  043B  1283               	bcf	status, 5	;RP0=0, select bank0
  1860  043C  1303               	bcf	status, 6	;RP1=0, select bank0
  1861  043D  00E4               movwf	((??_main+0)+0+2),f
  1862  043E  308A               movlw	138
  1863  043F  00E3               movwf	((??_main+0)+0+1),f
  1864  0440  3056               	movlw	86
  1865  0441  00E2               movwf	((??_main+0)+0),f
  1866  0442                     u4577:
  1867  0442  0BE2               	decfsz	((??_main+0)+0),f
  1868  0443  2C42               	goto	u4577
  1869  0444  0BE3               	decfsz	((??_main+0)+0+1),f
  1870  0445  2C42               	goto	u4577
  1871  0446  0BE4               	decfsz	((??_main+0)+0+2),f
  1872  0447  2C42               	goto	u4577
  1873  0448  2C49               	nop2
  1874                           opt asmopt_on
  1875                           
  1876                           	line	311
  1877                           	
  1878  0449                     l10984:	
  1879                           ;Main.c: 311: robotMove(1000);
  1880  0449  30E8               	movlw	low(03E8h)
  1881  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  1882  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  1883  044C  00A2               	movwf	(?_robotMove)
  1884  044D  3003               	movlw	high(03E8h)
  1885  044E  00A3               	movwf	((?_robotMove))+1
  1886  044F  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1887                           	line	312
  1888                           	
  1889  0454                     l10986:	
  1890                           ;Main.c: 312: robotTurn(-90);
  1891  0454  30A6               	movlw	low(-90)
  1892  0455  1283               	bcf	status, 5	;RP0=0, select bank0
  1893  0456  1303               	bcf	status, 6	;RP1=0, select bank0
  1894  0457  00A2               	movwf	(?_robotTurn)
  1895  0458  30FF               	movlw	high(-90)
  1896  0459  00A3               	movwf	((?_robotTurn))+1
  1897  045A  120A  118A  2709   	fcall	_robotTurn
              120A  118A         
  1898                           	line	313
  1899                           	
  1900  045F                     l10988:	
  1901                           ;Main.c: 313: robotMove(1000);
  1902  045F  30E8               	movlw	low(03E8h)
  1903  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  1904  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  1905  0462  00A2               	movwf	(?_robotMove)
  1906  0463  3003               	movlw	high(03E8h)
  1907  0464  00A3               	movwf	((?_robotMove))+1
  1908  0465  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1909                           	line	314
  1910                           ;Main.c: 314: break;
  1911  046A  2C86               	goto	l10996
  1912                           	line	315
  1913                           ;Main.c: 315: case 4:
  1914                           	
  1915  046B                     l2253:	
  1916                           	line	316
  1917                           	
  1918  046B                     l10990:	
  1919                           ;Main.c: 316: robot_distance();
  1920  046B  120A  158A  230F   	fcall	_robot_distance
              120A  118A         
  1921                           	line	317
  1922                           ;Main.c: 317: break;
  1923  0470  2C86               	goto	l10996
  1924                           	line	320
  1925                           ;Main.c: 320: default:
  1926                           	
  1927  0471                     l2254:	
  1928                           	line	322
  1929                           ;Main.c: 322: break;
  1930  0471  2C86               	goto	l10996
  1931                           	line	323
  1932                           	
  1933  0472                     l10992:	
  1934                           ;Main.c: 323: }
  1935  0472  2C86               	goto	l10996
  1936                           	line	294
  1937                           	
  1938  0473                     l2247:	
  1939                           	
  1940  0473                     l10994:	
  1941  0473  1283               	bcf	status, 5	;RP0=0, select bank0
  1942  0474  1303               	bcf	status, 6	;RP1=0, select bank0
  1943  0475  0867               	movf	(main@choice),w
  1944                           	; Switch size 1, requested type "space"
  1945                           ; Number of cases is 5, Range of values is 0 to 4
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte           16     9 (average)
  1949                           ; direct_byte           23     8 (fixed)
  1950                           ; jumptable            260     6 (fixed)
  1951                           ; rangetable             9     6 (fixed)
  1952                           ; spacedrange           16     9 (fixed)
  1953                           ; locatedrange           5     3 (fixed)
  1954                           ;	Chosen strategy is simple_byte
  1955                           
  1956                           	opt asmopt_off
  1957  0476  3A00               	xorlw	0^0	; case 0
  1958  0477  1903               	skipnz
  1959  0478  2BF6               	goto	l10972
  1960  0479  3A01               	xorlw	1^0	; case 1
  1961  047A  1903               	skipnz
  1962  047B  2BFC               	goto	l10974
  1963  047C  3A03               	xorlw	2^1	; case 2
  1964  047D  1903               	skipnz
  1965  047E  2C1F               	goto	l10978
  1966  047F  3A01               	xorlw	3^2	; case 3
  1967  0480  1903               	skipnz
  1968  0481  2C3A               	goto	l10982
  1969  0482  3A07               	xorlw	4^3	; case 4
  1970  0483  1903               	skipnz
  1971  0484  2C6B               	goto	l10990
  1972  0485  2C86               	goto	l10996
  1973                           	opt asmopt_on
  1974                           
  1975                           	line	323
  1976                           	
  1977  0486                     l2249:	
  1978                           	line	324
  1979                           	
  1980  0486                     l10996:	
  1981                           ;Main.c: 324: choice = 255;
  1982  0486  30FF               	movlw	(0FFh)
  1983  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  1984  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  1985  0489  00E2               	movwf	(??_main+0)+0
  1986  048A  0862               	movf	(??_main+0)+0,w
  1987  048B  00E7               	movwf	(main@choice)
  1988  048C  2B8B               	goto	l10936
  1989                           	line	474
  1990                           	
  1991  048D                     l2255:	
  1992                           	line	243
  1993  048D  2B8B               	goto	l10936
  1994                           	
  1995  048E                     l2256:	
  1996                           	line	475
  1997                           	
  1998  048E                     l2257:	
  1999                           	global	start
  2000  048E  120A  118A  2812   	ljmp	start
  2001                           	opt stack 0
  2002                           GLOBAL	__end_of_main
  2003  0491                     	__end_of_main:
  2004 ;; =============== function _main ends ============
  2005                           
  2006                           	signat	_main,88
  2007                           	global	_scan360
  2008                           psect	text876,local,class=CODE,delta=2
  2009                           global __ptext876
  2010  0EFB                     __ptext876:
  2011                           
  2012 ;; *************** function _scan360 *****************
  2013 ;; Defined at:
  2014 ;;		line 209 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  steps           2   64[BANK0 ] int 
  2019 ;;  lowestSteps     2   62[BANK0 ] int 
  2020 ;;  lowestVal       2   60[BANK0 ] int 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  2   58[BANK0 ] int 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         0       2       0       0       0
  2031 ;;      Locals:         0       6       0       0       0
  2032 ;;      Temps:          0       0       0       0       0
  2033 ;;      Totals:         0       8       0       0       0
  2034 ;;Total ram usage:        8 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    7
  2037 ;; This function calls:
  2038 ;;		_readAvgDistance
  2039 ;;		_rotate
  2040 ;;		_UpdateDisplay
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           psect	text876
  2046                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2047                           	line	209
  2048                           	global	__size_of_scan360
  2049  007D                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2050                           	
  2051  0EFB                     _scan360:	
  2052                           	opt	stack 0
  2053                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2054                           	line	210
  2055                           	
  2056  0EFB                     l10904:	
  2057                           ;Main.c: 210: int lowestVal = 0, lowestSteps = 0;
  2058  0EFB  1283               	bcf	status, 5	;RP0=0, select bank0
  2059  0EFC  1303               	bcf	status, 6	;RP1=0, select bank0
  2060  0EFD  01DC               	clrf	(scan360@lowestVal)
  2061  0EFE  01DD               	clrf	(scan360@lowestVal+1)
  2062  0EFF  01DE               	clrf	(scan360@lowestSteps)
  2063  0F00  01DF               	clrf	(scan360@lowestSteps+1)
  2064                           	line	211
  2065                           	
  2066  0F01                     l10906:	
  2067                           ;Main.c: 211: SCAN_FLAG = 1;
  2068  0F01  1683               	bsf	status, 5	;RP0=1, select bank1
  2069  0F02  1303               	bcf	status, 6	;RP1=0, select bank1
  2070  0F03  01D2               	clrf	(_SCAN_FLAG)^080h
  2071  0F04  1403               	bsf	status,0
  2072  0F05  0DD2               	rlf	(_SCAN_FLAG)^080h,f
  2073                           	line	212
  2074                           	
  2075  0F06                     l10908:	
  2076                           ;Main.c: 212: for (int steps = 0; steps < 400; steps++)
  2077  0F06  1283               	bcf	status, 5	;RP0=0, select bank0
  2078  0F07  1303               	bcf	status, 6	;RP1=0, select bank0
  2079  0F08  01E0               	clrf	(scan360@steps)
  2080  0F09  01E1               	clrf	(scan360@steps+1)
  2081                           	
  2082  0F0A                     l10910:	
  2083  0F0A  0861               	movf	(scan360@steps+1),w
  2084  0F0B  3A80               	xorlw	80h
  2085  0F0C  00FF               	movwf	btemp+1
  2086  0F0D  3081               	movlw	(high(0190h))^80h
  2087  0F0E  027F               	subwf	btemp+1,w
  2088  0F0F  1D03               	skipz
  2089  0F10  2F13               	goto	u4515
  2090  0F11  3090               	movlw	low(0190h)
  2091  0F12  0260               	subwf	(scan360@steps),w
  2092  0F13                     u4515:
  2093                           
  2094  0F13  1C03               	skipc
  2095  0F14  2F16               	goto	u4511
  2096  0F15  2F17               	goto	u4510
  2097  0F16                     u4511:
  2098  0F16  2F19               	goto	l10914
  2099  0F17                     u4510:
  2100  0F17  2F6B               	goto	l2232
  2101                           	
  2102  0F18                     l10912:	
  2103  0F18  2F6B               	goto	l2232
  2104                           	line	213
  2105                           	
  2106  0F19                     l2231:	
  2107                           	line	214
  2108                           	
  2109  0F19                     l10914:	
  2110                           ;Main.c: 213: {
  2111                           ;Main.c: 214: readAvgDistance();
  2112  0F19  120A  158A  2641   	fcall	_readAvgDistance
              120A  158A         
  2113                           	line	215
  2114                           	
  2115  0F1E                     l10916:	
  2116                           ;Main.c: 215: if (adcVal > lowestVal)
  2117  0F1E  1283               	bcf	status, 5	;RP0=0, select bank0
  2118  0F1F  1303               	bcf	status, 6	;RP1=0, select bank0
  2119  0F20  086B               	movf	(_adcVal+1),w	;volatile
  2120  0F21  025D               	subwf	(scan360@lowestVal+1),w
  2121  0F22  1D03               	skipz
  2122  0F23  2F26               	goto	u4525
  2123  0F24  086A               	movf	(_adcVal),w	;volatile
  2124  0F25  025C               	subwf	(scan360@lowestVal),w
  2125  0F26                     u4525:
  2126  0F26  1803               	skipnc
  2127  0F27  2F29               	goto	u4521
  2128  0F28  2F2A               	goto	u4520
  2129  0F29                     u4521:
  2130  0F29  2F37               	goto	l10920
  2131  0F2A                     u4520:
  2132                           	line	217
  2133                           	
  2134  0F2A                     l10918:	
  2135                           ;Main.c: 216: {
  2136                           ;Main.c: 217: lowestVal = adcVal;
  2137  0F2A  086B               	movf	(_adcVal+1),w	;volatile
  2138  0F2B  01DD               	clrf	(scan360@lowestVal+1)	;volatile
  2139  0F2C  07DD               	addwf	(scan360@lowestVal+1)	;volatile
  2140  0F2D  086A               	movf	(_adcVal),w	;volatile
  2141  0F2E  01DC               	clrf	(scan360@lowestVal)	;volatile
  2142  0F2F  07DC               	addwf	(scan360@lowestVal)	;volatile
  2143                           
  2144                           	line	218
  2145                           ;Main.c: 218: lowestSteps = steps;
  2146  0F30  0861               	movf	(scan360@steps+1),w
  2147  0F31  01DF               	clrf	(scan360@lowestSteps+1)
  2148  0F32  07DF               	addwf	(scan360@lowestSteps+1)
  2149  0F33  0860               	movf	(scan360@steps),w
  2150  0F34  01DE               	clrf	(scan360@lowestSteps)
  2151  0F35  07DE               	addwf	(scan360@lowestSteps)
  2152                           
  2153  0F36  2F37               	goto	l10920
  2154                           	line	220
  2155                           	
  2156  0F37                     l2233:	
  2157                           	line	221
  2158                           	
  2159  0F37                     l10920:	
  2160                           ;Main.c: 220: }
  2161                           ;Main.c: 221: rotate(1, 1);
  2162  0F37  3001               	movlw	low(01h)
  2163  0F38  00A3               	movwf	(?_rotate)
  2164  0F39  3000               	movlw	high(01h)
  2165  0F3A  00A4               	movwf	((?_rotate))+1
  2166  0F3B  01A5               	clrf	0+(?_rotate)+02h
  2167  0F3C  1403               	bsf	status,0
  2168  0F3D  0DA5               	rlf	0+(?_rotate)+02h,f
  2169  0F3E  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2170                           	line	222
  2171                           	
  2172  0F43                     l10922:	
  2173                           ;Main.c: 222: UpdateDisplay();
  2174  0F43  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2175                           	line	223
  2176                           	
  2177  0F48                     l10924:	
  2178                           ;Main.c: 223: test = lowestSteps;
  2179  0F48  1283               	bcf	status, 5	;RP0=0, select bank0
  2180  0F49  1303               	bcf	status, 6	;RP1=0, select bank0
  2181  0F4A  085F               	movf	(scan360@lowestSteps+1),w
  2182  0F4B  1683               	bsf	status, 5	;RP0=1, select bank1
  2183  0F4C  1303               	bcf	status, 6	;RP1=0, select bank1
  2184  0F4D  01C9               	clrf	(_test+1)^080h
  2185  0F4E  07C9               	addwf	(_test+1)^080h
  2186  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  2188  0F51  085E               	movf	(scan360@lowestSteps),w
  2189  0F52  1683               	bsf	status, 5	;RP0=1, select bank1
  2190  0F53  1303               	bcf	status, 6	;RP1=0, select bank1
  2191  0F54  01C8               	clrf	(_test)^080h
  2192  0F55  07C8               	addwf	(_test)^080h
  2193                           
  2194                           	line	212
  2195                           	
  2196  0F56                     l10926:	
  2197  0F56  3001               	movlw	low(01h)
  2198  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  2199  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  2200  0F59  07E0               	addwf	(scan360@steps),f
  2201  0F5A  1803               	skipnc
  2202  0F5B  0AE1               	incf	(scan360@steps+1),f
  2203  0F5C  3000               	movlw	high(01h)
  2204  0F5D  07E1               	addwf	(scan360@steps+1),f
  2205                           	
  2206  0F5E                     l10928:	
  2207  0F5E  0861               	movf	(scan360@steps+1),w
  2208  0F5F  3A80               	xorlw	80h
  2209  0F60  00FF               	movwf	btemp+1
  2210  0F61  3081               	movlw	(high(0190h))^80h
  2211  0F62  027F               	subwf	btemp+1,w
  2212  0F63  1D03               	skipz
  2213  0F64  2F67               	goto	u4535
  2214  0F65  3090               	movlw	low(0190h)
  2215  0F66  0260               	subwf	(scan360@steps),w
  2216  0F67                     u4535:
  2217                           
  2218  0F67  1C03               	skipc
  2219  0F68  2F6A               	goto	u4531
  2220  0F69  2F6B               	goto	u4530
  2221  0F6A                     u4531:
  2222  0F6A  2F19               	goto	l10914
  2223  0F6B                     u4530:
  2224                           	
  2225  0F6B                     l2232:	
  2226                           	line	225
  2227                           ;Main.c: 224: }
  2228                           ;Main.c: 225: SCAN_FLAG = 0;
  2229  0F6B  1683               	bsf	status, 5	;RP0=1, select bank1
  2230  0F6C  1303               	bcf	status, 6	;RP1=0, select bank1
  2231  0F6D  01D2               	clrf	(_SCAN_FLAG)^080h
  2232                           	line	226
  2233                           	
  2234  0F6E                     l10930:	
  2235                           ;Main.c: 226: return lowestSteps;
  2236  0F6E  1283               	bcf	status, 5	;RP0=0, select bank0
  2237  0F6F  1303               	bcf	status, 6	;RP1=0, select bank0
  2238  0F70  085F               	movf	(scan360@lowestSteps+1),w
  2239  0F71  01DB               	clrf	(?_scan360+1)
  2240  0F72  07DB               	addwf	(?_scan360+1)
  2241  0F73  085E               	movf	(scan360@lowestSteps),w
  2242  0F74  01DA               	clrf	(?_scan360)
  2243  0F75  07DA               	addwf	(?_scan360)
  2244                           
  2245  0F76  2F77               	goto	l2234
  2246                           	
  2247  0F77                     l10932:	
  2248                           	line	227
  2249                           	
  2250  0F77                     l2234:	
  2251  0F77  0008               	return
  2252                           	opt stack 0
  2253                           GLOBAL	__end_of_scan360
  2254  0F78                     	__end_of_scan360:
  2255 ;; =============== function _scan360 ends ============
  2256                           
  2257                           	signat	_scan360,90
  2258                           	global	_calibrateIR
  2259                           psect	text877,local,class=CODE,delta=2
  2260                           global __ptext877
  2261  0E96                     __ptext877:
  2262                           
  2263 ;; *************** function _calibrateIR *****************
  2264 ;; Defined at:
  2265 ;;		line 157 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0
  2282 ;;      Totals:         0       0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    6
  2286 ;; This function calls:
  2287 ;;		_rotate
  2288 ;;		_UpdateDisplay
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           psect	text877
  2294                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2295                           	line	157
  2296                           	global	__size_of_calibrateIR
  2297  0065                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2298                           	
  2299  0E96                     _calibrateIR:	
  2300                           	opt	stack 1
  2301                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2302                           	line	159
  2303                           	
  2304  0E96                     l10872:	
  2305                           ;Main.c: 159: currentMenu = 1;
  2306  0E96  1683               	bsf	status, 5	;RP0=1, select bank1
  2307  0E97  1303               	bcf	status, 6	;RP1=0, select bank1
  2308  0E98  01D4               	clrf	(_currentMenu)^080h
  2309  0E99  1403               	bsf	status,0
  2310  0E9A  0DD4               	rlf	(_currentMenu)^080h,f
  2311                           	line	160
  2312                           	
  2313  0E9B                     l10874:	
  2314                           ;Main.c: 160: rotate(8, 0);
  2315  0E9B  3008               	movlw	low(08h)
  2316  0E9C  1283               	bcf	status, 5	;RP0=0, select bank0
  2317  0E9D  1303               	bcf	status, 6	;RP1=0, select bank0
  2318  0E9E  00A3               	movwf	(?_rotate)
  2319  0E9F  3000               	movlw	high(08h)
  2320  0EA0  00A4               	movwf	((?_rotate))+1
  2321  0EA1  01A5               	clrf	0+(?_rotate)+02h
  2322  0EA2  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2323  0EA7  2EA8               	goto	l10876
  2324                           	line	161
  2325                           ;Main.c: 161: while (1)
  2326                           	
  2327  0EA8                     l2216:	
  2328                           	line	163
  2329                           	
  2330  0EA8                     l10876:	
  2331                           ;Main.c: 162: {
  2332                           ;Main.c: 163: if (RTC_FLAG_250MS == 1)
  2333  0EA8  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2334  0EA9  2EAB               	goto	u4501
  2335  0EAA  2EAC               	goto	u4500
  2336  0EAB                     u4501:
  2337  0EAB  2EE5               	goto	l10902
  2338  0EAC                     u4500:
  2339                           	line	165
  2340                           	
  2341  0EAC                     l10878:	
  2342                           ;Main.c: 164: {
  2343                           ;Main.c: 165: RTC_FLAG_250MS = 0;
  2344  0EAC  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2345                           	line	166
  2346                           	
  2347  0EAD                     l10880:	
  2348                           ;Main.c: 166: UpdateDisplay();
  2349  0EAD  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2350  0EB2  2EE5               	goto	l10902
  2351                           	line	167
  2352                           	
  2353  0EB3                     l2217:	
  2354                           	line	168
  2355                           ;Main.c: 167: }
  2356                           ;Main.c: 168: switch (buttonPressed)
  2357  0EB3  2EE5               	goto	l10902
  2358                           	line	170
  2359                           ;Main.c: 169: {
  2360                           ;Main.c: 170: case 1:
  2361                           	
  2362  0EB4                     l2219:	
  2363                           	line	173
  2364                           ;Main.c: 173: buttonPressed = 0;
  2365  0EB4  01EC               	clrf	(_buttonPressed)	;volatile
  2366                           	line	175
  2367                           ;Main.c: 175: break;
  2368  0EB5  2EA8               	goto	l10876
  2369                           	line	176
  2370                           ;Main.c: 176: case 2:
  2371                           	
  2372  0EB6                     l2221:	
  2373                           	line	179
  2374                           ;Main.c: 179: buttonPressed = 0;
  2375  0EB6  01EC               	clrf	(_buttonPressed)	;volatile
  2376                           	line	181
  2377                           ;Main.c: 181: break;
  2378  0EB7  2EA8               	goto	l10876
  2379                           	line	182
  2380                           ;Main.c: 182: case 3:
  2381                           	
  2382  0EB8                     l2222:	
  2383                           	line	183
  2384                           	
  2385  0EB8                     l10882:	
  2386                           ;Main.c: 183: rotate(1, 1);
  2387  0EB8  3001               	movlw	low(01h)
  2388  0EB9  00A3               	movwf	(?_rotate)
  2389  0EBA  3000               	movlw	high(01h)
  2390  0EBB  00A4               	movwf	((?_rotate))+1
  2391  0EBC  01A5               	clrf	0+(?_rotate)+02h
  2392  0EBD  1403               	bsf	status,0
  2393  0EBE  0DA5               	rlf	0+(?_rotate)+02h,f
  2394  0EBF  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2395                           	line	185
  2396                           	
  2397  0EC4                     l10884:	
  2398                           ;Main.c: 185: buttonPressed = 0;
  2399  0EC4  1283               	bcf	status, 5	;RP0=0, select bank0
  2400  0EC5  1303               	bcf	status, 6	;RP1=0, select bank0
  2401  0EC6  01EC               	clrf	(_buttonPressed)	;volatile
  2402                           	line	187
  2403                           ;Main.c: 187: break;
  2404  0EC7  2EA8               	goto	l10876
  2405                           	line	188
  2406                           ;Main.c: 188: case 4:
  2407                           	
  2408  0EC8                     l2223:	
  2409                           	line	189
  2410                           	
  2411  0EC8                     l10886:	
  2412                           ;Main.c: 189: rotate(1, 0);
  2413  0EC8  3001               	movlw	low(01h)
  2414  0EC9  00A3               	movwf	(?_rotate)
  2415  0ECA  3000               	movlw	high(01h)
  2416  0ECB  00A4               	movwf	((?_rotate))+1
  2417  0ECC  01A5               	clrf	0+(?_rotate)+02h
  2418  0ECD  120A  158A  25F1   	fcall	_rotate
              120A  158A         
  2419                           	line	191
  2420                           	
  2421  0ED2                     l10888:	
  2422                           ;Main.c: 191: buttonPressed = 0;
  2423  0ED2  1283               	bcf	status, 5	;RP0=0, select bank0
  2424  0ED3  1303               	bcf	status, 6	;RP1=0, select bank0
  2425  0ED4  01EC               	clrf	(_buttonPressed)	;volatile
  2426                           	line	193
  2427                           ;Main.c: 193: break;
  2428  0ED5  2EA8               	goto	l10876
  2429                           	line	194
  2430                           ;Main.c: 194: case 5:
  2431                           	
  2432  0ED6                     l2224:	
  2433                           	line	195
  2434                           	
  2435  0ED6                     l10890:	
  2436                           ;Main.c: 195: totalSteps = 0;
  2437  0ED6  1683               	bsf	status, 5	;RP0=1, select bank1
  2438  0ED7  1303               	bcf	status, 6	;RP1=0, select bank1
  2439  0ED8  01CC               	clrf	(_totalSteps)^080h
  2440  0ED9  01CD               	clrf	(_totalSteps+1)^080h
  2441                           	line	197
  2442                           	
  2443  0EDA                     l10892:	
  2444                           ;Main.c: 197: buttonPressed = 0;
  2445  0EDA  1283               	bcf	status, 5	;RP0=0, select bank0
  2446  0EDB  1303               	bcf	status, 6	;RP1=0, select bank0
  2447  0EDC  01EC               	clrf	(_buttonPressed)	;volatile
  2448                           	line	198
  2449                           	
  2450  0EDD                     l10894:	
  2451                           ;Main.c: 198: currentMenu = 0;
  2452  0EDD  1683               	bsf	status, 5	;RP0=1, select bank1
  2453  0EDE  1303               	bcf	status, 6	;RP1=0, select bank1
  2454  0EDF  01D4               	clrf	(_currentMenu)^080h
  2455  0EE0  2EFA               	goto	l2225
  2456                           	line	199
  2457                           	
  2458  0EE1                     l10896:	
  2459                           ;Main.c: 199: return;
  2460  0EE1  2EFA               	goto	l2225
  2461                           	line	200
  2462                           	
  2463  0EE2                     l10898:	
  2464                           ;Main.c: 200: break;
  2465  0EE2  2EA8               	goto	l10876
  2466                           	line	201
  2467                           ;Main.c: 201: default:
  2468                           	
  2469  0EE3                     l2226:	
  2470                           	line	203
  2471                           ;Main.c: 203: break;
  2472  0EE3  2EA8               	goto	l10876
  2473                           	line	204
  2474                           	
  2475  0EE4                     l10900:	
  2476                           ;Main.c: 204: }
  2477  0EE4  2EA8               	goto	l10876
  2478                           	line	168
  2479                           	
  2480  0EE5                     l2218:	
  2481                           	
  2482  0EE5                     l10902:	
  2483  0EE5  1283               	bcf	status, 5	;RP0=0, select bank0
  2484  0EE6  1303               	bcf	status, 6	;RP1=0, select bank0
  2485  0EE7  086C               	movf	(_buttonPressed),w	;volatile
  2486                           	; Switch size 1, requested type "space"
  2487                           ; Number of cases is 5, Range of values is 1 to 5
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte           16     9 (average)
  2491                           ; direct_byte           26    11 (fixed)
  2492                           ; jumptable            263     9 (fixed)
  2493                           ;	Chosen strategy is simple_byte
  2494                           
  2495                           	opt asmopt_off
  2496  0EE8  3A01               	xorlw	1^0	; case 1
  2497  0EE9  1903               	skipnz
  2498  0EEA  2EB4               	goto	l2219
  2499  0EEB  3A03               	xorlw	2^1	; case 2
  2500  0EEC  1903               	skipnz
  2501  0EED  2EB6               	goto	l2221
  2502  0EEE  3A01               	xorlw	3^2	; case 3
  2503  0EEF  1903               	skipnz
  2504  0EF0  2EB8               	goto	l10882
  2505  0EF1  3A07               	xorlw	4^3	; case 4
  2506  0EF2  1903               	skipnz
  2507  0EF3  2EC8               	goto	l10886
  2508  0EF4  3A01               	xorlw	5^4	; case 5
  2509  0EF5  1903               	skipnz
  2510  0EF6  2ED6               	goto	l10890
  2511  0EF7  2EA8               	goto	l10876
  2512                           	opt asmopt_on
  2513                           
  2514                           	line	204
  2515                           	
  2516  0EF8                     l2220:	
  2517  0EF8  2EA8               	goto	l10876
  2518                           	line	205
  2519                           	
  2520  0EF9                     l2227:	
  2521                           	line	161
  2522  0EF9  2EA8               	goto	l10876
  2523                           	
  2524  0EFA                     l2228:	
  2525                           	line	206
  2526                           	
  2527  0EFA                     l2225:	
  2528  0EFA  0008               	return
  2529                           	opt stack 0
  2530                           GLOBAL	__end_of_calibrateIR
  2531  0EFB                     	__end_of_calibrateIR:
  2532 ;; =============== function _calibrateIR ends ============
  2533                           
  2534                           	signat	_calibrateIR,88
  2535                           	global	_readAvgDistance
  2536                           psect	text878,local,class=CODE,delta=2
  2537                           global __ptext878
  2538  0E41                     __ptext878:
  2539                           
  2540 ;; *************** function _readAvgDistance *****************
  2541 ;; Defined at:
  2542 ;;		line 10 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  i               2   18[BANK0 ] int 
  2547 ;;  fullval         2   16[BANK0 ] unsigned int 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         0       4       0       0       0
  2559 ;;      Temps:          0       0       0       0       0
  2560 ;;      Totals:         0       4       0       0       0
  2561 ;;Total ram usage:        4 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    6
  2564 ;; This function calls:
  2565 ;;		_readDistance
  2566 ;;		___lwdiv
  2567 ;;		_ADCconvert
  2568 ;; This function is called by:
  2569 ;;		_scan360
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           psect	text878
  2574                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  2575                           	line	10
  2576                           	global	__size_of_readAvgDistance
  2577  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2578                           	
  2579  0E41                     _readAvgDistance:	
  2580                           	opt	stack 0
  2581                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2582                           	line	11
  2583                           	
  2584  0E41                     l10858:	
  2585                           ;infrared.c: 11: unsigned int fullval = 0;
  2586  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  2587  0E42  1303               	bcf	status, 6	;RP1=0, select bank0
  2588  0E43  01B0               	clrf	(readAvgDistance@fullval)
  2589  0E44  01B1               	clrf	(readAvgDistance@fullval+1)
  2590                           	line	14
  2591                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2592  0E45  01B2               	clrf	(readAvgDistance@i)
  2593  0E46  01B3               	clrf	(readAvgDistance@i+1)
  2594                           	
  2595  0E47                     l10860:	
  2596  0E47  0833               	movf	(readAvgDistance@i+1),w
  2597  0E48  3A80               	xorlw	80h
  2598  0E49  00FF               	movwf	btemp+1
  2599  0E4A  3080               	movlw	(high(0Ah))^80h
  2600  0E4B  027F               	subwf	btemp+1,w
  2601  0E4C  1D03               	skipz
  2602  0E4D  2E50               	goto	u4485
  2603  0E4E  300A               	movlw	low(0Ah)
  2604  0E4F  0232               	subwf	(readAvgDistance@i),w
  2605  0E50                     u4485:
  2606                           
  2607  0E50  1C03               	skipc
  2608  0E51  2E53               	goto	u4481
  2609  0E52  2E54               	goto	u4480
  2610  0E53                     u4481:
  2611  0E53  2E56               	goto	l10864
  2612  0E54                     u4480:
  2613  0E54  2E77               	goto	l10870
  2614                           	
  2615  0E55                     l10862:	
  2616  0E55  2E77               	goto	l10870
  2617                           	line	15
  2618                           	
  2619  0E56                     l2960:	
  2620                           	line	16
  2621                           	
  2622  0E56                     l10864:	
  2623                           ;infrared.c: 15: {
  2624                           ;infrared.c: 16: fullval += readDistance();
  2625  0E56  120A  158A  229F   	fcall	_readDistance
              120A  158A         
  2626  0E5B  1283               	bcf	status, 5	;RP0=0, select bank0
  2627  0E5C  1303               	bcf	status, 6	;RP1=0, select bank0
  2628  0E5D  0828               	movf	(0+(?_readDistance)),w
  2629  0E5E  07B0               	addwf	(readAvgDistance@fullval),f
  2630  0E5F  1803               	skipnc
  2631  0E60  0AB1               	incf	(readAvgDistance@fullval+1),f
  2632  0E61  0829               	movf	(1+(?_readDistance)),w
  2633  0E62  07B1               	addwf	(readAvgDistance@fullval+1),f
  2634                           	line	14
  2635                           	
  2636  0E63                     l10866:	
  2637  0E63  3001               	movlw	low(01h)
  2638  0E64  07B2               	addwf	(readAvgDistance@i),f
  2639  0E65  1803               	skipnc
  2640  0E66  0AB3               	incf	(readAvgDistance@i+1),f
  2641  0E67  3000               	movlw	high(01h)
  2642  0E68  07B3               	addwf	(readAvgDistance@i+1),f
  2643                           	
  2644  0E69                     l10868:	
  2645  0E69  0833               	movf	(readAvgDistance@i+1),w
  2646  0E6A  3A80               	xorlw	80h
  2647  0E6B  00FF               	movwf	btemp+1
  2648  0E6C  3080               	movlw	(high(0Ah))^80h
  2649  0E6D  027F               	subwf	btemp+1,w
  2650  0E6E  1D03               	skipz
  2651  0E6F  2E72               	goto	u4495
  2652  0E70  300A               	movlw	low(0Ah)
  2653  0E71  0232               	subwf	(readAvgDistance@i),w
  2654  0E72                     u4495:
  2655                           
  2656  0E72  1C03               	skipc
  2657  0E73  2E75               	goto	u4491
  2658  0E74  2E76               	goto	u4490
  2659  0E75                     u4491:
  2660  0E75  2E56               	goto	l10864
  2661  0E76                     u4490:
  2662  0E76  2E77               	goto	l10870
  2663                           	
  2664  0E77                     l2961:	
  2665                           	line	19
  2666                           	
  2667  0E77                     l10870:	
  2668                           ;infrared.c: 18: }
  2669                           ;infrared.c: 19: adcVal = fullval / 10;
  2670  0E77  300A               	movlw	low(0Ah)
  2671  0E78  1283               	bcf	status, 5	;RP0=0, select bank0
  2672  0E79  1303               	bcf	status, 6	;RP1=0, select bank0
  2673  0E7A  00A6               	movwf	(?___lwdiv)
  2674  0E7B  3000               	movlw	high(0Ah)
  2675  0E7C  00A7               	movwf	((?___lwdiv))+1
  2676  0E7D  0831               	movf	(readAvgDistance@fullval+1),w
  2677  0E7E  01A9               	clrf	1+(?___lwdiv)+02h
  2678  0E7F  07A9               	addwf	1+(?___lwdiv)+02h
  2679  0E80  0830               	movf	(readAvgDistance@fullval),w
  2680  0E81  01A8               	clrf	0+(?___lwdiv)+02h
  2681  0E82  07A8               	addwf	0+(?___lwdiv)+02h
  2682                           
  2683  0E83  120A  158A  25A1   	fcall	___lwdiv
              120A  158A         
  2684  0E88  1283               	bcf	status, 5	;RP0=0, select bank0
  2685  0E89  1303               	bcf	status, 6	;RP1=0, select bank0
  2686  0E8A  0827               	movf	(1+(?___lwdiv)),w
  2687  0E8B  01EB               	clrf	(_adcVal+1)	;volatile
  2688  0E8C  07EB               	addwf	(_adcVal+1)	;volatile
  2689  0E8D  0826               	movf	(0+(?___lwdiv)),w
  2690  0E8E  01EA               	clrf	(_adcVal)	;volatile
  2691  0E8F  07EA               	addwf	(_adcVal)	;volatile
  2692                           
  2693                           	line	20
  2694                           ;infrared.c: 20: ADCconvert();
  2695  0E90  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  2696                           	line	21
  2697                           	
  2698  0E95                     l2962:	
  2699  0E95  0008               	return
  2700                           	opt stack 0
  2701                           GLOBAL	__end_of_readAvgDistance
  2702  0E96                     	__end_of_readAvgDistance:
  2703 ;; =============== function _readAvgDistance ends ============
  2704                           
  2705                           	signat	_readAvgDistance,88
  2706                           	global	_UpdateDisplay
  2707                           psect	text879,local,class=CODE,delta=2
  2708                           global __ptext879
  2709  0238                     __ptext879:
  2710                           
  2711 ;; *************** function _UpdateDisplay *****************
  2712 ;; Defined at:
  2713 ;;		line 215 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  adcOutput      16   42[BANK0 ] unsigned char [16]
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         0      16       0       0       0
  2729 ;;      Temps:          0       5       0       0       0
  2730 ;;      Totals:         0      21       0       0       0
  2731 ;;Total ram usage:       21 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    5
  2734 ;; This function calls:
  2735 ;;		_lcd_write_control
  2736 ;;		_sprintf
  2737 ;;		_lcd_set_cursor
  2738 ;;		_lcd_write_string
  2739 ;;		___awmod
  2740 ;; This function is called by:
  2741 ;;		_calibrateIR
  2742 ;;		_scan360
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           psect	text879
  2747                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  2748                           	line	215
  2749                           	global	__size_of_UpdateDisplay
  2750  014D                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  2751                           	
  2752  0238                     _UpdateDisplay:	
  2753                           	opt	stack 1
  2754                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2755                           	line	216
  2756                           	
  2757  0238                     l10818:	
  2758                           ;HMI.c: 216: char adcOutput[16] = "";
  2759  0238  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2760  0239  0084               	movwf	fsr0
  2761  023A  3090               	movlw	low(UpdateDisplay@F1228)
  2762  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  2763  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  2764  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  2765  023E  0804               	movf	fsr0,w
  2766  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  2767  0240  3010               	movlw	16
  2768  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  2769  0242                     u4460:
  2770  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  2771  0243  0084               	movwf	fsr0
  2772  0244  1783               	bsf	status, 7	;select IRP bank3
  2773                           	
  2774  0245  0800               	movf	indf,w
  2775  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  2776  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  2777  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  2778  0249  0084               	movwf	fsr0
  2779  024A  1383               	bcf	status, 7	;select IRP bank0
  2780                           	
  2781  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  2782  024C  0080               	movwf	indf
  2783  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  2784  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  2785  024F  2A42               	goto	u4460
  2786                           	line	217
  2787                           ;HMI.c: 217: switch (currentMenu)
  2788  0250  2B7A               	goto	l10856
  2789                           	line	220
  2790                           ;HMI.c: 218: {
  2791                           ;HMI.c: 220: case 0:
  2792                           	
  2793  0251                     l5247:	
  2794                           	line	223
  2795                           	
  2796  0251                     l10820:	
  2797                           ;HMI.c: 223: lcd_write_control(0b00000001);
  2798  0251  3001               	movlw	(01h)
  2799  0252  120A  158A  2275   	fcall	_lcd_write_control
              120A  118A         
  2800                           	line	225
  2801                           	
  2802  0257                     l10822:	
  2803                           ;HMI.c: 225: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, test);
  2804  0257  300B               	movlw	((STR_11-__stringbase))&0ffh
  2805  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  2806  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  2807  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  2808  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  2809  025C  00B4               	movwf	(?_sprintf)
  2810  025D  086B               	movf	(_adcVal+1),w	;volatile
  2811  025E  01B6               	clrf	1+(?_sprintf)+01h
  2812  025F  07B6               	addwf	1+(?_sprintf)+01h
  2813  0260  086A               	movf	(_adcVal),w	;volatile
  2814  0261  01B5               	clrf	0+(?_sprintf)+01h
  2815  0262  07B5               	addwf	0+(?_sprintf)+01h
  2816                           
  2817  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  2818  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  2819  0265  0849               	movf	(_test+1)^080h,w	;volatile
  2820  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  2821  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  2822  0268  01B8               	clrf	1+(?_sprintf)+03h
  2823  0269  07B8               	addwf	1+(?_sprintf)+03h
  2824  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  2825  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  2826  026C  0848               	movf	(_test)^080h,w	;volatile
  2827  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  2828  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  2829  026F  01B7               	clrf	0+(?_sprintf)+03h
  2830  0270  07B7               	addwf	0+(?_sprintf)+03h
  2831                           
  2832  0271  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2833  0272  120A  118A  2491   	fcall	_sprintf
              120A  118A         
  2834                           	line	228
  2835                           	
  2836  0277                     l10824:	
  2837                           ;HMI.c: 228: lcd_set_cursor(0x00);
  2838  0277  3000               	movlw	(0)
  2839  0278  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  2840                           	line	229
  2841                           ;HMI.c: 229: lcd_write_string(adcOutput);
  2842  027D  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  2843  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  2844  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  2845  0280  00A7               	movwf	(?_lcd_write_string)
  2846  0281  3000               	movlw	(0x0/2)
  2847  0282  00A8               	movwf	(?_lcd_write_string+1)
  2848  0283  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  2849                           	line	231
  2850                           	
  2851  0288                     l10826:	
  2852                           ;HMI.c: 231: lcd_set_cursor(0x40);
  2853  0288  3040               	movlw	(040h)
  2854  0289  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  2855                           	line	232
  2856                           	
  2857  028E                     l10828:	
  2858                           ;HMI.c: 232: if (pos > 0)
  2859  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  2860  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  2861  0290  0847               	movf	(_pos+1)^080h,w
  2862  0291  3A80               	xorlw	80h
  2863  0292  00FF               	movwf	btemp+1
  2864  0293  3080               	movlw	(high(01h))^80h
  2865  0294  027F               	subwf	btemp+1,w
  2866  0295  1D03               	skipz
  2867  0296  2A99               	goto	u4475
  2868  0297  3001               	movlw	low(01h)
  2869  0298  0246               	subwf	(_pos)^080h,w
  2870  0299                     u4475:
  2871                           
  2872  0299  1C03               	skipc
  2873  029A  2A9C               	goto	u4471
  2874  029B  2A9D               	goto	u4470
  2875  029C                     u4471:
  2876  029C  2AB0               	goto	l10832
  2877  029D                     u4470:
  2878                           	line	233
  2879                           	
  2880  029D                     l10830:	
  2881                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  2882  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  2883  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  2884  029F  0846               	movf	(_pos)^080h,w
  2885  02A0  3EFF               	addlw	0FFh
  2886  02A1  3EE1               	addlw	_shortMenuStrings&0ffh
  2887  02A2  0084               	movwf	fsr0
  2888  02A3  1383               	bcf	status, 7	;select IRP bank1
  2889  02A4  0800               	movf	indf,w
  2890  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2891  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2892  02A7  00A7               	movwf	(?_lcd_write_string)
  2893  02A8  3080               	movlw	80h
  2894  02A9  00A8               	movwf	(?_lcd_write_string+1)
  2895  02AA  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  2896  02AF  2AC3               	goto	l10834
  2897                           	line	234
  2898                           	
  2899  02B0                     l5248:	
  2900                           	line	235
  2901                           	
  2902  02B0                     l10832:	
  2903                           ;HMI.c: 234: else
  2904                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  2905  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  2906  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  2907  02B2  0846               	movf	(_pos)^080h,w
  2908  02B3  3E04               	addlw	04h
  2909  02B4  3EE1               	addlw	_shortMenuStrings&0ffh
  2910  02B5  0084               	movwf	fsr0
  2911  02B6  1383               	bcf	status, 7	;select IRP bank1
  2912  02B7  0800               	movf	indf,w
  2913  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2914  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2915  02BA  00A7               	movwf	(?_lcd_write_string)
  2916  02BB  3080               	movlw	80h
  2917  02BC  00A8               	movwf	(?_lcd_write_string+1)
  2918  02BD  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  2919  02C2  2AC3               	goto	l10834
  2920                           	
  2921  02C3                     l5249:	
  2922                           	line	236
  2923                           	
  2924  02C3                     l10834:	
  2925                           ;HMI.c: 236: lcd_set_cursor(0x44);
  2926  02C3  3044               	movlw	(044h)
  2927  02C4  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  2928                           	line	237
  2929                           	
  2930  02C9                     l10836:	
  2931                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  2932  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  2933  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  2934  02CB  0846               	movf	(_pos)^080h,w
  2935  02CC  3EDC               	addlw	_menuStrings&0ffh
  2936  02CD  0084               	movwf	fsr0
  2937  02CE  1383               	bcf	status, 7	;select IRP bank1
  2938  02CF  0800               	movf	indf,w
  2939  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2940  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2941  02D2  00A7               	movwf	(?_lcd_write_string)
  2942  02D3  3080               	movlw	80h
  2943  02D4  00A8               	movwf	(?_lcd_write_string+1)
  2944  02D5  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  2945                           	line	238
  2946                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  2947  02DA  304D               	movlw	(04Dh)
  2948  02DB  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  2949                           	line	239
  2950                           	
  2951  02E0                     l10838:	
  2952                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  2953  02E0  3005               	movlw	low(05h)
  2954  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2955  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2956  02E3  00A0               	movwf	(?___awmod)
  2957  02E4  3000               	movlw	high(05h)
  2958  02E5  00A1               	movwf	((?___awmod))+1
  2959  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2960  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2961  02E8  0846               	movf	(_pos)^080h,w
  2962  02E9  3E01               	addlw	low(01h)
  2963  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2964  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2965  02EC  00A2               	movwf	0+(?___awmod)+02h
  2966  02ED  1683               	bsf	status, 5	;RP0=1, select bank1
  2967  02EE  1303               	bcf	status, 6	;RP1=0, select bank1
  2968  02EF  0847               	movf	(_pos+1)^080h,w
  2969  02F0  1803               	skipnc
  2970  02F1  3E01               	addlw	1
  2971  02F2  3E00               	addlw	high(01h)
  2972  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2973  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2974  02F5  00A3               	movwf	1+0+(?___awmod)+02h
  2975  02F6  120A  118A  2791   	fcall	___awmod
              120A  118A         
  2976  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2977  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2978  02FD  0820               	movf	(0+(?___awmod)),w
  2979  02FE  3EE1               	addlw	_shortMenuStrings&0ffh
  2980  02FF  0084               	movwf	fsr0
  2981  0300  1383               	bcf	status, 7	;select IRP bank1
  2982  0301  0800               	movf	indf,w
  2983  0302  00A7               	movwf	(?_lcd_write_string)
  2984  0303  3080               	movlw	80h
  2985  0304  00A8               	movwf	(?_lcd_write_string+1)
  2986  0305  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  2987                           	line	240
  2988                           ;HMI.c: 240: break;
  2989  030A  2B84               	goto	l5253
  2990                           	line	241
  2991                           ;HMI.c: 241: case 1:
  2992                           	
  2993  030B                     l5251:	
  2994                           	line	242
  2995                           	
  2996  030B                     l10840:	
  2997                           ;HMI.c: 242: lcd_write_control(0b00000001);
  2998  030B  3001               	movlw	(01h)
  2999  030C  120A  158A  2275   	fcall	_lcd_write_control
              120A  118A         
  3000                           	line	244
  3001                           	
  3002  0311                     l10842:	
  3003                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3004  0311  300B               	movlw	((STR_12-__stringbase))&0ffh
  3005  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  3006  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  3007  0314  00C5               	movwf	(??_UpdateDisplay+0)+0
  3008  0315  0845               	movf	(??_UpdateDisplay+0)+0,w
  3009  0316  00B4               	movwf	(?_sprintf)
  3010  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  3011  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  3012  0319  0856               	movf	(_highByte)^080h,w
  3013  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  3014  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  3015  031C  00C6               	movwf	(??_UpdateDisplay+1)+0
  3016  031D  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3017  031E  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3018  031F  00B5               	movwf	0+(?_sprintf)+01h
  3019  0320  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3020  0321  00B6               	movwf	1+(?_sprintf)+01h
  3021  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3022  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3023  0324  0857               	movf	(_lowByte)^080h,w
  3024  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  3025  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  3026  0327  00C8               	movwf	(??_UpdateDisplay+3)+0
  3027  0328  01C9               	clrf	(??_UpdateDisplay+3)+0+1
  3028  0329  0848               	movf	0+(??_UpdateDisplay+3)+0,w
  3029  032A  00B7               	movwf	0+(?_sprintf)+03h
  3030  032B  0849               	movf	1+(??_UpdateDisplay+3)+0,w
  3031  032C  00B8               	movwf	1+(?_sprintf)+03h
  3032  032D  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3033  032E  120A  118A  2491   	fcall	_sprintf
              120A  118A         
  3034                           	line	246
  3035                           	
  3036  0333                     l10844:	
  3037                           ;HMI.c: 246: lcd_set_cursor(0x00);
  3038  0333  3000               	movlw	(0)
  3039  0334  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  3040                           	line	247
  3041                           ;HMI.c: 247: lcd_write_string(adcOutput);
  3042  0339  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3043  033A  1283               	bcf	status, 5	;RP0=0, select bank0
  3044  033B  1303               	bcf	status, 6	;RP1=0, select bank0
  3045  033C  00A7               	movwf	(?_lcd_write_string)
  3046  033D  3000               	movlw	(0x0/2)
  3047  033E  00A8               	movwf	(?_lcd_write_string+1)
  3048  033F  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  3049                           	line	252
  3050                           	
  3051  0344                     l10846:	
  3052                           ;HMI.c: 252: lcd_set_cursor(0x40);
  3053  0344  3040               	movlw	(040h)
  3054  0345  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  3055                           	line	254
  3056                           	
  3057  034A                     l10848:	
  3058                           ;HMI.c: 254: lcd_write_string("<<<");
  3059  034A  3052               	movlw	low((STR_13-__stringbase))
  3060  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3061  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3062  034D  00A7               	movwf	(?_lcd_write_string)
  3063  034E  3080               	movlw	80h
  3064  034F  00A8               	movwf	(?_lcd_write_string+1)
  3065  0350  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  3066                           	line	257
  3067                           ;HMI.c: 257: lcd_set_cursor(0x44);
  3068  0355  3044               	movlw	(044h)
  3069  0356  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  3070                           	line	258
  3071                           	
  3072  035B                     l10850:	
  3073                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  3074  035B  3046               	movlw	low((STR_14-__stringbase))
  3075  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3076  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3077  035E  00A7               	movwf	(?_lcd_write_string)
  3078  035F  3080               	movlw	80h
  3079  0360  00A8               	movwf	(?_lcd_write_string+1)
  3080  0361  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  3081                           	line	259
  3082                           	
  3083  0366                     l10852:	
  3084                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  3085  0366  304D               	movlw	(04Dh)
  3086  0367  120A  158A  2208   	fcall	_lcd_set_cursor
              120A  118A         
  3087                           	line	260
  3088                           ;HMI.c: 260: lcd_write_string(">>>");
  3089  036C  3056               	movlw	low((STR_15-__stringbase))
  3090  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  3091  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  3092  036F  00A7               	movwf	(?_lcd_write_string)
  3093  0370  3080               	movlw	80h
  3094  0371  00A8               	movwf	(?_lcd_write_string+1)
  3095  0372  120A  158A  23DB   	fcall	_lcd_write_string
              120A  118A         
  3096                           	line	261
  3097                           ;HMI.c: 261: break;
  3098  0377  2B84               	goto	l5253
  3099                           	line	263
  3100                           ;HMI.c: 263: default:
  3101                           	
  3102  0378                     l5252:	
  3103                           	line	265
  3104                           ;HMI.c: 265: break;
  3105  0378  2B84               	goto	l5253
  3106                           	line	268
  3107                           	
  3108  0379                     l10854:	
  3109                           ;HMI.c: 268: }
  3110  0379  2B84               	goto	l5253
  3111                           	line	217
  3112                           	
  3113  037A                     l5246:	
  3114                           	
  3115  037A                     l10856:	
  3116  037A  1683               	bsf	status, 5	;RP0=1, select bank1
  3117  037B  1303               	bcf	status, 6	;RP1=0, select bank1
  3118  037C  0854               	movf	(_currentMenu)^080h,w
  3119                           	; Switch size 1, requested type "space"
  3120                           ; Number of cases is 2, Range of values is 0 to 1
  3121                           ; switch strategies available:
  3122                           ; Name         Instructions Cycles
  3123                           ; simple_byte            7     4 (average)
  3124                           ; direct_byte           14     8 (fixed)
  3125                           ; jumptable            260     6 (fixed)
  3126                           ; rangetable             6     6 (fixed)
  3127                           ; spacedrange           10     9 (fixed)
  3128                           ; locatedrange           2     3 (fixed)
  3129                           ;	Chosen strategy is simple_byte
  3130                           
  3131                           	opt asmopt_off
  3132  037D  3A00               	xorlw	0^0	; case 0
  3133  037E  1903               	skipnz
  3134  037F  2A51               	goto	l10820
  3135  0380  3A01               	xorlw	1^0	; case 1
  3136  0381  1903               	skipnz
  3137  0382  2B0B               	goto	l10840
  3138  0383  2B84               	goto	l5253
  3139                           	opt asmopt_on
  3140                           
  3141                           	line	268
  3142                           	
  3143  0384                     l5250:	
  3144                           	line	269
  3145                           	
  3146  0384                     l5253:	
  3147  0384  0008               	return
  3148                           	opt stack 0
  3149                           GLOBAL	__end_of_UpdateDisplay
  3150  0385                     	__end_of_UpdateDisplay:
  3151 ;; =============== function _UpdateDisplay ends ============
  3152                           
  3153                           	signat	_UpdateDisplay,88
  3154                           	global	_init
  3155                           psect	text880,local,class=CODE,delta=2
  3156                           global __ptext880
  3157  0C07                     __ptext880:
  3158                           
  3159 ;; *************** function _init *****************
  3160 ;; Defined at:
  3161 ;;		line 130 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;		None               void
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0
  3177 ;;      Temps:          0       1       0       0       0
  3178 ;;      Totals:         0       1       0       0       0
  3179 ;;Total ram usage:        1 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    5
  3182 ;; This function calls:
  3183 ;;		_init_adc
  3184 ;;		_lcd_init
  3185 ;;		_ser_init
  3186 ;;		_robo_init
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           psect	text880
  3192                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3193                           	line	130
  3194                           	global	__size_of_init
  3195  002F                     	__size_of_init	equ	__end_of_init-_init
  3196                           	
  3197  0C07                     _init:	
  3198                           	opt	stack 2
  3199                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3200                           	line	131
  3201                           	
  3202  0C07                     l10796:	
  3203                           ;Main.c: 131: GIE=0;
  3204  0C07  138B               	bcf	(95/8),(95)&7
  3205                           	line	132
  3206                           	
  3207  0C08                     l10798:	
  3208                           ;Main.c: 132: init_adc();
  3209  0C08  120A  158A  2289   	fcall	_init_adc
              120A  158A         
  3210                           	line	133
  3211                           ;Main.c: 133: lcd_init();
  3212  0C0D  120A  158A  2384   	fcall	_lcd_init
              120A  158A         
  3213                           	line	134
  3214                           ;Main.c: 134: ser_init();
  3215  0C12  120A  158A  2333   	fcall	_ser_init
              120A  158A         
  3216                           	line	135
  3217                           	
  3218  0C17                     l10800:	
  3219                           ;Main.c: 135: robo_init();
  3220  0C17  120A  158A  221F   	fcall	_robo_init
              120A  158A         
  3221                           	line	137
  3222                           	
  3223  0C1C                     l10802:	
  3224                           ;Main.c: 137: TRISB = 0b11111100;
  3225  0C1C  30FC               	movlw	(0FCh)
  3226  0C1D  1683               	bsf	status, 5	;RP0=1, select bank1
  3227  0C1E  1303               	bcf	status, 6	;RP1=0, select bank1
  3228  0C1F  0086               	movwf	(134)^080h	;volatile
  3229                           	line	139
  3230                           	
  3231  0C20                     l10804:	
  3232                           ;Main.c: 139: TRISC &= 0b10010000;
  3233  0C20  3090               	movlw	(090h)
  3234  0C21  1283               	bcf	status, 5	;RP0=0, select bank0
  3235  0C22  1303               	bcf	status, 6	;RP1=0, select bank0
  3236  0C23  00A3               	movwf	(??_init+0)+0
  3237  0C24  0823               	movf	(??_init+0)+0,w
  3238  0C25  1683               	bsf	status, 5	;RP0=1, select bank1
  3239  0C26  1303               	bcf	status, 6	;RP1=0, select bank1
  3240  0C27  0587               	andwf	(135)^080h,f	;volatile
  3241                           	line	141
  3242                           	
  3243  0C28                     l10806:	
  3244                           ;Main.c: 141: SSPSTAT = 0b01000000;
  3245  0C28  3040               	movlw	(040h)
  3246  0C29  0094               	movwf	(148)^080h	;volatile
  3247                           	line	142
  3248                           	
  3249  0C2A                     l10808:	
  3250                           ;Main.c: 142: SSPCON = 0b10100001;
  3251  0C2A  30A1               	movlw	(0A1h)
  3252  0C2B  1283               	bcf	status, 5	;RP0=0, select bank0
  3253  0C2C  1303               	bcf	status, 6	;RP1=0, select bank0
  3254  0C2D  0094               	movwf	(20)	;volatile
  3255                           	line	144
  3256                           	
  3257  0C2E                     l10810:	
  3258                           ;Main.c: 144: OPTION_REG = 0b00000100;
  3259  0C2E  3004               	movlw	(04h)
  3260  0C2F  1683               	bsf	status, 5	;RP0=1, select bank1
  3261  0C30  1303               	bcf	status, 6	;RP1=0, select bank1
  3262  0C31  0081               	movwf	(129)^080h	;volatile
  3263                           	line	147
  3264                           	
  3265  0C32                     l10812:	
  3266                           ;Main.c: 147: TMR0IE = 1;
  3267  0C32  168B               	bsf	(93/8),(93)&7
  3268                           	line	150
  3269                           	
  3270  0C33                     l10814:	
  3271                           ;Main.c: 150: GIE=1;
  3272  0C33  178B               	bsf	(95/8),(95)&7
  3273                           	line	151
  3274                           	
  3275  0C34                     l10816:	
  3276                           ;Main.c: 151: (GIE = 1);
  3277  0C34  178B               	bsf	(95/8),(95)&7
  3278                           	line	152
  3279                           	
  3280  0C35                     l2213:	
  3281  0C35  0008               	return
  3282                           	opt stack 0
  3283                           GLOBAL	__end_of_init
  3284  0C36                     	__end_of_init:
  3285 ;; =============== function _init ends ============
  3286                           
  3287                           	signat	_init,88
  3288                           	global	_readDistance
  3289                           psect	text881,local,class=CODE,delta=2
  3290                           global __ptext881
  3291  0A9F                     __ptext881:
  3292                           
  3293 ;; *************** function _readDistance *****************
  3294 ;; Defined at:
  3295 ;;		line 24 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  fullval         2   12[BANK0 ] unsigned int 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2    8[BANK0 ] unsigned int 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       2       0       0       0
  3310 ;;      Locals:         0       2       0       0       0
  3311 ;;      Temps:          0       2       0       0       0
  3312 ;;      Totals:         0       6       0       0       0
  3313 ;;Total ram usage:        6 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    5
  3316 ;; This function calls:
  3317 ;;		_adc_read_channel
  3318 ;; This function is called by:
  3319 ;;		_readAvgDistance
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           psect	text881
  3323                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3324                           	line	24
  3325                           	global	__size_of_readDistance
  3326  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3327                           	
  3328  0A9F                     _readDistance:	
  3329                           	opt	stack 0
  3330                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3331                           	line	27
  3332                           	
  3333  0A9F                     l10790:	
  3334                           ;infrared.c: 25: unsigned int fullval ;
  3335                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3336  0A9F  3000               	movlw	(0)
  3337  0AA0  120A  158A  2495   	fcall	_adc_read_channel
              120A  158A         
  3338  0AA5  1283               	bcf	status, 5	;RP0=0, select bank0
  3339  0AA6  1303               	bcf	status, 6	;RP1=0, select bank0
  3340  0AA7  00AA               	movwf	(??_readDistance+0)+0
  3341  0AA8  01AB               	clrf	(??_readDistance+0)+0+1
  3342  0AA9  082A               	movf	0+(??_readDistance+0)+0,w
  3343  0AAA  00AC               	movwf	(readDistance@fullval)
  3344  0AAB  082B               	movf	1+(??_readDistance+0)+0,w
  3345  0AAC  00AD               	movwf	(readDistance@fullval+1)
  3346                           	line	29
  3347                           	
  3348  0AAD                     l10792:	
  3349                           ;infrared.c: 29: return fullval;
  3350  0AAD  082D               	movf	(readDistance@fullval+1),w
  3351  0AAE  01A9               	clrf	(?_readDistance+1)
  3352  0AAF  07A9               	addwf	(?_readDistance+1)
  3353  0AB0  082C               	movf	(readDistance@fullval),w
  3354  0AB1  01A8               	clrf	(?_readDistance)
  3355  0AB2  07A8               	addwf	(?_readDistance)
  3356                           
  3357  0AB3  2AB4               	goto	l2965
  3358                           	
  3359  0AB4                     l10794:	
  3360                           	line	30
  3361                           	
  3362  0AB4                     l2965:	
  3363  0AB4  0008               	return
  3364                           	opt stack 0
  3365                           GLOBAL	__end_of_readDistance
  3366  0AB5                     	__end_of_readDistance:
  3367 ;; =============== function _readDistance ends ============
  3368                           
  3369                           	signat	_readDistance,90
  3370                           	global	_robot_distance
  3371                           psect	text882,local,class=CODE,delta=2
  3372                           global __ptext882
  3373  0B0F                     __ptext882:
  3374                           
  3375 ;; *************** function _robot_distance *****************
  3376 ;; Defined at:
  3377 ;;		line 23 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;		None               void
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0
  3393 ;;      Temps:          0       1       0       0       0
  3394 ;;      Totals:         0       1       0       0       0
  3395 ;;Total ram usage:        1 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    5
  3398 ;; This function calls:
  3399 ;;		_robot_read
  3400 ;;		_ser_getch
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           psect	text882
  3406                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3407                           	line	23
  3408                           	global	__size_of_robot_distance
  3409  0024                     	__size_of_robot_distance	equ	__end_of_robot_distance-_robot_distance
  3410                           	
  3411  0B0F                     _robot_distance:	
  3412                           	opt	stack 2
  3413                           ; Regs used in _robot_distance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3414                           	line	24
  3415                           	
  3416  0B0F                     l10788:	
  3417                           ;robot.c: 24: robot_read(19);
  3418  0B0F  3013               	movlw	low(013h)
  3419  0B10  1283               	bcf	status, 5	;RP0=0, select bank0
  3420  0B11  1303               	bcf	status, 6	;RP1=0, select bank0
  3421  0B12  00A2               	movwf	(?_robot_read)
  3422  0B13  3000               	movlw	high(013h)
  3423  0B14  00A3               	movwf	((?_robot_read))+1
  3424  0B15  120A  158A  222C   	fcall	_robot_read
              120A  158A         
  3425                           	line	25
  3426                           ;robot.c: 25: distTravelled = ser_getch();
  3427  0B1A  120A  158A  22ED   	fcall	_ser_getch
              120A  158A         
  3428  0B1F  1283               	bcf	status, 5	;RP0=0, select bank0
  3429  0B20  1303               	bcf	status, 6	;RP1=0, select bank0
  3430  0B21  00A4               	movwf	(??_robot_distance+0)+0
  3431  0B22  0824               	movf	(??_robot_distance+0)+0,w
  3432  0B23  1683               	bsf	status, 5	;RP0=1, select bank1
  3433  0B24  1303               	bcf	status, 6	;RP1=0, select bank1
  3434  0B25  00E7               	movwf	(_distTravelled)^080h
  3435                           	line	27
  3436                           ;robot.c: 27: distTravelled |= ser_getch();
  3437  0B26  120A  158A  22ED   	fcall	_ser_getch
              120A  158A         
  3438  0B2B  1283               	bcf	status, 5	;RP0=0, select bank0
  3439  0B2C  1303               	bcf	status, 6	;RP1=0, select bank0
  3440  0B2D  00A4               	movwf	(??_robot_distance+0)+0
  3441  0B2E  0824               	movf	(??_robot_distance+0)+0,w
  3442  0B2F  1683               	bsf	status, 5	;RP0=1, select bank1
  3443  0B30  1303               	bcf	status, 6	;RP1=0, select bank1
  3444  0B31  04E7               	iorwf	(_distTravelled)^080h,f
  3445                           	line	28
  3446                           	
  3447  0B32                     l6703:	
  3448  0B32  0008               	return
  3449                           	opt stack 0
  3450                           GLOBAL	__end_of_robot_distance
  3451  0B33                     	__end_of_robot_distance:
  3452 ;; =============== function _robot_distance ends ============
  3453                           
  3454                           	signat	_robot_distance,88
  3455                           	global	_lcd_init
  3456                           psect	text883,local,class=CODE,delta=2
  3457                           global __ptext883
  3458  0B84                     __ptext883:
  3459                           
  3460 ;; *************** function _lcd_init *****************
  3461 ;; Defined at:
  3462 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;		None               void
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    4
  3483 ;; This function calls:
  3484 ;;		_lcd_write_control
  3485 ;; This function is called by:
  3486 ;;		_init
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           psect	text883
  3490                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3491                           	line	101
  3492                           	global	__size_of_lcd_init
  3493  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3494                           	
  3495  0B84                     _lcd_init:	
  3496                           	opt	stack 2
  3497                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3498                           	line	105
  3499                           	
  3500  0B84                     l10768:	
  3501                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3502  0B84  3002               	movlw	(02h)
  3503  0B85  1683               	bsf	status, 5	;RP0=1, select bank1
  3504  0B86  1303               	bcf	status, 6	;RP1=0, select bank1
  3505  0B87  009F               	movwf	(159)^080h	;volatile
  3506                           	line	108
  3507                           	
  3508  0B88                     l10770:	
  3509                           ;lcd.c: 108: PORTD = 0;
  3510  0B88  1283               	bcf	status, 5	;RP0=0, select bank0
  3511  0B89  1303               	bcf	status, 6	;RP1=0, select bank0
  3512  0B8A  0188               	clrf	(8)	;volatile
  3513                           	line	109
  3514                           	
  3515  0B8B                     l10772:	
  3516                           ;lcd.c: 109: PORTE = 0;
  3517  0B8B  0189               	clrf	(9)	;volatile
  3518                           	line	111
  3519                           	
  3520  0B8C                     l10774:	
  3521                           ;lcd.c: 111: TRISD = 0b00000000;
  3522  0B8C  1683               	bsf	status, 5	;RP0=1, select bank1
  3523  0B8D  1303               	bcf	status, 6	;RP1=0, select bank1
  3524  0B8E  0188               	clrf	(136)^080h	;volatile
  3525                           	line	112
  3526                           	
  3527  0B8F                     l10776:	
  3528                           ;lcd.c: 112: TRISE = 0b00000000;
  3529  0B8F  0189               	clrf	(137)^080h	;volatile
  3530                           	line	115
  3531                           	
  3532  0B90                     l10778:	
  3533                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3534  0B90  3001               	movlw	(01h)
  3535  0B91  120A  158A  2275   	fcall	_lcd_write_control
              120A  158A         
  3536                           	line	116
  3537                           	
  3538  0B96                     l10780:	
  3539                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3540  0B96  3038               	movlw	(038h)
  3541  0B97  120A  158A  2275   	fcall	_lcd_write_control
              120A  158A         
  3542                           	line	117
  3543                           	
  3544  0B9C                     l10782:	
  3545                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3546  0B9C  300C               	movlw	(0Ch)
  3547  0B9D  120A  158A  2275   	fcall	_lcd_write_control
              120A  158A         
  3548                           	line	118
  3549                           	
  3550  0BA2                     l10784:	
  3551                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3552  0BA2  3006               	movlw	(06h)
  3553  0BA3  120A  158A  2275   	fcall	_lcd_write_control
              120A  158A         
  3554                           	line	119
  3555                           	
  3556  0BA8                     l10786:	
  3557                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3558  0BA8  3002               	movlw	(02h)
  3559  0BA9  120A  158A  2275   	fcall	_lcd_write_control
              120A  158A         
  3560                           	line	121
  3561                           	
  3562  0BAE                     l1429:	
  3563  0BAE  0008               	return
  3564                           	opt stack 0
  3565                           GLOBAL	__end_of_lcd_init
  3566  0BAF                     	__end_of_lcd_init:
  3567 ;; =============== function _lcd_init ends ============
  3568                           
  3569                           	signat	_lcd_init,88
  3570                           	global	_lcd_write_string
  3571                           psect	text884,local,class=CODE,delta=2
  3572                           global __ptext884
  3573  0BDB                     __ptext884:
  3574                           
  3575 ;; *************** function _lcd_write_string *****************
  3576 ;; Defined at:
  3577 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  s               2    7[BANK0 ] PTR unsigned char 
  3580 ;;		 -> STR_15(4), STR_14(8), STR_13(4), UpdateDisplay@adcOutput(16), 
  3581 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3582 ;;		 -> STR_6(4), STR_5(9), STR_4(8), STR_3(9), 
  3583 ;;		 -> STR_2(9), STR_1(9), 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;		None               void
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0       2       0       0       0
  3596 ;;      Locals:         0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0
  3598 ;;      Totals:         0       2       0       0       0
  3599 ;;Total ram usage:        2 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    4
  3602 ;; This function calls:
  3603 ;;		_lcd_write_data
  3604 ;; This function is called by:
  3605 ;;		_UpdateDisplay
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           psect	text884
  3609                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3610                           	line	48
  3611                           	global	__size_of_lcd_write_string
  3612  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3613                           	
  3614  0BDB                     _lcd_write_string:	
  3615                           	opt	stack 1
  3616                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3617                           	line	50
  3618                           	
  3619  0BDB                     l10760:	
  3620                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3621  0BDB  2BF5               	goto	l10766
  3622                           	
  3623  0BDC                     l1409:	
  3624                           	
  3625  0BDC                     l10762:	
  3626  0BDC  1283               	bcf	status, 5	;RP0=0, select bank0
  3627  0BDD  1303               	bcf	status, 6	;RP1=0, select bank0
  3628  0BDE  0828               	movf	(lcd_write_string@s+1),w
  3629  0BDF  00FF               	movwf	btemp+1
  3630  0BE0  0827               	movf	(lcd_write_string@s),w
  3631  0BE1  0084               	movwf	fsr0
  3632  0BE2  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3633  0BE7  120A  158A  223B   	fcall	_lcd_write_data
              120A  158A         
  3634                           	
  3635  0BEC                     l10764:	
  3636  0BEC  3001               	movlw	low(01h)
  3637  0BED  1283               	bcf	status, 5	;RP0=0, select bank0
  3638  0BEE  1303               	bcf	status, 6	;RP1=0, select bank0
  3639  0BEF  07A7               	addwf	(lcd_write_string@s),f
  3640  0BF0  1803               	skipnc
  3641  0BF1  0AA8               	incf	(lcd_write_string@s+1),f
  3642  0BF2  3000               	movlw	high(01h)
  3643  0BF3  07A8               	addwf	(lcd_write_string@s+1),f
  3644  0BF4  2BF5               	goto	l10766
  3645                           	
  3646  0BF5                     l1408:	
  3647                           	
  3648  0BF5                     l10766:	
  3649  0BF5  1283               	bcf	status, 5	;RP0=0, select bank0
  3650  0BF6  1303               	bcf	status, 6	;RP1=0, select bank0
  3651  0BF7  0828               	movf	(lcd_write_string@s+1),w
  3652  0BF8  00FF               	movwf	btemp+1
  3653  0BF9  0827               	movf	(lcd_write_string@s),w
  3654  0BFA  0084               	movwf	fsr0
  3655  0BFB  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3656  0C00  3800               	iorlw	0
  3657  0C01  1D03               	skipz
  3658  0C02  2C04               	goto	u4451
  3659  0C03  2C05               	goto	u4450
  3660  0C04                     u4451:
  3661  0C04  2BDC               	goto	l10762
  3662  0C05                     u4450:
  3663  0C05  2C06               	goto	l1411
  3664                           	
  3665  0C06                     l1410:	
  3666                           	line	51
  3667                           	
  3668  0C06                     l1411:	
  3669  0C06  0008               	return
  3670                           	opt stack 0
  3671                           GLOBAL	__end_of_lcd_write_string
  3672  0C07                     	__end_of_lcd_write_string:
  3673 ;; =============== function _lcd_write_string ends ============
  3674                           
  3675                           	signat	_lcd_write_string,4216
  3676                           	global	_lcd_set_cursor
  3677                           psect	text885,local,class=CODE,delta=2
  3678                           global __ptext885
  3679  0A08                     __ptext885:
  3680                           
  3681 ;; *************** function _lcd_set_cursor *****************
  3682 ;; Defined at:
  3683 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  address         1    wreg     unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  address         1    3[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       1       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       1       0       0       0
  3701 ;;Total ram usage:        1 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    4
  3704 ;; This function calls:
  3705 ;;		_lcd_write_control
  3706 ;; This function is called by:
  3707 ;;		_UpdateDisplay
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           psect	text885
  3711                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3712                           	line	42
  3713                           	global	__size_of_lcd_set_cursor
  3714  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3715                           	
  3716  0A08                     _lcd_set_cursor:	
  3717                           	opt	stack 1
  3718                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3719                           ;lcd_set_cursor@address stored from wreg
  3720  0A08  1283               	bcf	status, 5	;RP0=0, select bank0
  3721  0A09  1303               	bcf	status, 6	;RP1=0, select bank0
  3722  0A0A  00A3               	movwf	(lcd_set_cursor@address)
  3723                           	line	43
  3724                           	
  3725  0A0B                     l10756:	
  3726                           ;lcd.c: 43: address |= 0b10000000;
  3727  0A0B  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3728                           	line	44
  3729                           	
  3730  0A0C                     l10758:	
  3731                           ;lcd.c: 44: lcd_write_control(address);
  3732  0A0C  0823               	movf	(lcd_set_cursor@address),w
  3733  0A0D  120A  158A  2275   	fcall	_lcd_write_control
              120A  158A         
  3734                           	line	45
  3735                           	
  3736  0A12                     l1405:	
  3737  0A12  0008               	return
  3738                           	opt stack 0
  3739                           GLOBAL	__end_of_lcd_set_cursor
  3740  0A13                     	__end_of_lcd_set_cursor:
  3741 ;; =============== function _lcd_set_cursor ends ============
  3742                           
  3743                           	signat	_lcd_set_cursor,4216
  3744                           	global	_robot_read
  3745                           psect	text886,local,class=CODE,delta=2
  3746                           global __ptext886
  3747  0A2C                     __ptext886:
  3748                           
  3749 ;; *************** function _robot_read *****************
  3750 ;; Defined at:
  3751 ;;		line 18 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  packet          2    2[BANK0 ] int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       2       0       0       0
  3766 ;;      Locals:         0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         0       2       0       0       0
  3769 ;;Total ram usage:        2 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    4
  3772 ;; This function calls:
  3773 ;;		_ser_putch
  3774 ;; This function is called by:
  3775 ;;		_robot_distance
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           psect	text886
  3779                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3780                           	line	18
  3781                           	global	__size_of_robot_read
  3782  000F                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  3783                           	
  3784  0A2C                     _robot_read:	
  3785                           	opt	stack 2
  3786                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3787                           	line	19
  3788                           	
  3789  0A2C                     l10754:	
  3790                           ;robot.c: 19: ser_putch (142);
  3791  0A2C  308E               	movlw	(08Eh)
  3792  0A2D  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  3793                           	line	20
  3794                           ;robot.c: 20: ser_putch (packet);
  3795  0A32  1283               	bcf	status, 5	;RP0=0, select bank0
  3796  0A33  1303               	bcf	status, 6	;RP1=0, select bank0
  3797  0A34  0822               	movf	(robot_read@packet),w
  3798  0A35  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  3799                           	line	21
  3800                           	
  3801  0A3A                     l6700:	
  3802  0A3A  0008               	return
  3803                           	opt stack 0
  3804                           GLOBAL	__end_of_robot_read
  3805  0A3B                     	__end_of_robot_read:
  3806 ;; =============== function _robot_read ends ============
  3807                           
  3808                           	signat	_robot_read,4216
  3809                           	global	_sprintf
  3810                           psect	text887,local,class=CODE,delta=2
  3811                           global __ptext887
  3812  0491                     __ptext887:
  3813                           
  3814 ;; *************** function _sprintf *****************
  3815 ;; Defined at:
  3816 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  sp              1    wreg     PTR unsigned char 
  3819 ;;		 -> UpdateDisplay@adcOutput(16), 
  3820 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  3821 ;;		 -> STR_12(15), STR_11(15), 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  3824 ;;		 -> UpdateDisplay@adcOutput(16), 
  3825 ;;  _val            4   31[BANK0 ] struct .
  3826 ;;  c               1   36[BANK0 ] char 
  3827 ;;  prec            1   30[BANK0 ] char 
  3828 ;;  flag            1   29[BANK0 ] unsigned char 
  3829 ;;  ap              1   28[BANK0 ] PTR void [1]
  3830 ;;		 -> ?_sprintf(2), 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2   20[BANK0 ] int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       5       0       0       0
  3841 ;;      Locals:         0       9       0       0       0
  3842 ;;      Temps:          0       3       0       0       0
  3843 ;;      Totals:         0      17       0       0       0
  3844 ;;Total ram usage:       17 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    4
  3847 ;; This function calls:
  3848 ;;		___lwdiv
  3849 ;;		___lwmod
  3850 ;; This function is called by:
  3851 ;;		_UpdateDisplay
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           psect	text887
  3855                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  3856                           	line	488
  3857                           	global	__size_of_sprintf
  3858  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3859                           	
  3860  0491                     _sprintf:	
  3861                           	opt	stack 1
  3862                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3863                           ;sprintf@sp stored from wreg
  3864                           	line	537
  3865  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  3866  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  3867  0493  00C3               	movwf	(sprintf@sp)
  3868                           	
  3869  0494                     l10696:	
  3870  0494  3035               	movlw	(?_sprintf+01h)&0ffh
  3871  0495  00B9               	movwf	(??_sprintf+0)+0
  3872  0496  0839               	movf	(??_sprintf+0)+0,w
  3873  0497  00BC               	movwf	(sprintf@ap)
  3874                           	line	540
  3875  0498  2D77               	goto	l10748
  3876                           	
  3877  0499                     l6723:	
  3878                           	line	542
  3879                           	
  3880  0499                     l10698:	
  3881  0499  0844               	movf	(sprintf@c),w
  3882  049A  3A25               	xorlw	025h
  3883  049B  1903               	skipnz
  3884  049C  2C9E               	goto	u4371
  3885  049D  2C9F               	goto	u4370
  3886  049E                     u4371:
  3887  049E  2CAB               	goto	l6724
  3888  049F                     u4370:
  3889                           	line	545
  3890                           	
  3891  049F                     l10700:	
  3892  049F  0844               	movf	(sprintf@c),w
  3893  04A0  00B9               	movwf	(??_sprintf+0)+0
  3894  04A1  0843               	movf	(sprintf@sp),w
  3895  04A2  0084               	movwf	fsr0
  3896  04A3  0839               	movf	(??_sprintf+0)+0,w
  3897  04A4  1383               	bcf	status, 7	;select IRP bank0
  3898  04A5  0080               	movwf	indf
  3899                           	
  3900  04A6                     l10702:	
  3901  04A6  3001               	movlw	(01h)
  3902  04A7  00B9               	movwf	(??_sprintf+0)+0
  3903  04A8  0839               	movf	(??_sprintf+0)+0,w
  3904  04A9  07C3               	addwf	(sprintf@sp),f
  3905                           	line	546
  3906  04AA  2D77               	goto	l10748
  3907                           	line	547
  3908                           	
  3909  04AB                     l6724:	
  3910                           	line	552
  3911  04AB  01BD               	clrf	(sprintf@flag)
  3912                           	line	638
  3913  04AC  2CB2               	goto	l10706
  3914                           	line	640
  3915                           	
  3916  04AD                     l6726:	
  3917                           	line	641
  3918  04AD  2D8B               	goto	l10750
  3919                           	line	700
  3920                           	
  3921  04AE                     l6728:	
  3922  04AE  2CC7               	goto	l10708
  3923                           	line	701
  3924                           	
  3925  04AF                     l6729:	
  3926                           	line	702
  3927  04AF  2CC7               	goto	l10708
  3928                           	line	805
  3929                           	
  3930  04B0                     l6731:	
  3931                           	line	816
  3932  04B0  2D77               	goto	l10748
  3933                           	line	825
  3934                           	
  3935  04B1                     l10704:	
  3936  04B1  2CC7               	goto	l10708
  3937                           	line	638
  3938                           	
  3939  04B2                     l6725:	
  3940                           	
  3941  04B2                     l10706:	
  3942  04B2  3001               	movlw	01h
  3943  04B3  07B4               	addwf	(sprintf@f),f
  3944  04B4  30FF               	movlw	-01h
  3945  04B5  0734               	addwf	(sprintf@f),w
  3946  04B6  0084               	movwf	fsr0
  3947  04B7  120A  158A  200A   	fcall	stringdir
              120A  118A         
  3948  04BC  00C4               	movwf	(sprintf@c)
  3949                           	; Switch size 1, requested type "space"
  3950                           ; Number of cases is 3, Range of values is 0 to 105
  3951                           ; switch strategies available:
  3952                           ; Name         Instructions Cycles
  3953                           ; simple_byte           10     6 (average)
  3954                           ; jumptable            260     6 (fixed)
  3955                           ; rangetable           110     6 (fixed)
  3956                           ; spacedrange          218     9 (fixed)
  3957                           ; locatedrange         106     3 (fixed)
  3958                           ;	Chosen strategy is simple_byte
  3959                           
  3960                           	opt asmopt_off
  3961  04BD  3A00               	xorlw	0^0	; case 0
  3962  04BE  1903               	skipnz
  3963  04BF  2D8B               	goto	l10750
  3964  04C0  3A64               	xorlw	100^0	; case 100
  3965  04C1  1903               	skipnz
  3966  04C2  2CC7               	goto	l10708
  3967  04C3  3A0D               	xorlw	105^100	; case 105
  3968  04C4  1903               	skipnz
  3969  04C5  2CC7               	goto	l10708
  3970  04C6  2D77               	goto	l10748
  3971                           	opt asmopt_on
  3972                           
  3973                           	line	825
  3974                           	
  3975  04C7                     l6730:	
  3976                           	line	1254
  3977                           	
  3978  04C7                     l10708:	
  3979  04C7  083C               	movf	(sprintf@ap),w
  3980  04C8  0084               	movwf	fsr0
  3981  04C9  1383               	bcf	status, 7	;select IRP bank0
  3982  04CA  0800               	movf	indf,w
  3983  04CB  00BF               	movwf	(sprintf@_val)
  3984  04CC  0A84               	incf	fsr0,f
  3985  04CD  0800               	movf	indf,w
  3986  04CE  00C0               	movwf	(sprintf@_val+1)
  3987                           	
  3988  04CF                     l10710:	
  3989  04CF  3002               	movlw	(02h)
  3990  04D0  00B9               	movwf	(??_sprintf+0)+0
  3991  04D1  0839               	movf	(??_sprintf+0)+0,w
  3992  04D2  07BC               	addwf	(sprintf@ap),f
  3993                           	line	1256
  3994                           	
  3995  04D3                     l10712:	
  3996  04D3  1FC0               	btfss	(sprintf@_val+1),7
  3997  04D4  2CD6               	goto	u4381
  3998  04D5  2CD7               	goto	u4380
  3999  04D6                     u4381:
  4000  04D6  2CE1               	goto	l10718
  4001  04D7                     u4380:
  4002                           	line	1257
  4003                           	
  4004  04D7                     l10714:	
  4005  04D7  3003               	movlw	(03h)
  4006  04D8  00B9               	movwf	(??_sprintf+0)+0
  4007  04D9  0839               	movf	(??_sprintf+0)+0,w
  4008  04DA  04BD               	iorwf	(sprintf@flag),f
  4009                           	line	1258
  4010                           	
  4011  04DB                     l10716:	
  4012  04DB  09BF               	comf	(sprintf@_val),f
  4013  04DC  09C0               	comf	(sprintf@_val+1),f
  4014  04DD  0ABF               	incf	(sprintf@_val),f
  4015  04DE  1903               	skipnz
  4016  04DF  0AC0               	incf	(sprintf@_val+1),f
  4017  04E0  2CE1               	goto	l10718
  4018                           	line	1259
  4019                           	
  4020  04E1                     l6732:	
  4021                           	line	1300
  4022                           	
  4023  04E1                     l10718:	
  4024  04E1  01C4               	clrf	(sprintf@c)
  4025  04E2  1403               	bsf	status,0
  4026  04E3  0DC4               	rlf	(sprintf@c),f
  4027                           	
  4028  04E4                     l10720:	
  4029  04E4  0844               	movf	(sprintf@c),w
  4030  04E5  3A05               	xorlw	05h
  4031  04E6  1D03               	skipz
  4032  04E7  2CE9               	goto	u4391
  4033  04E8  2CEA               	goto	u4390
  4034  04E9                     u4391:
  4035  04E9  2CEC               	goto	l10724
  4036  04EA                     u4390:
  4037  04EA  2D14               	goto	l10732
  4038                           	
  4039  04EB                     l10722:	
  4040  04EB  2D14               	goto	l10732
  4041                           	line	1301
  4042                           	
  4043  04EC                     l6733:	
  4044                           	
  4045  04EC                     l10724:	
  4046  04EC  0844               	movf	(sprintf@c),w
  4047  04ED  00B9               	movwf	(??_sprintf+0)+0
  4048  04EE  0739               	addwf	(??_sprintf+0)+0,w
  4049  04EF  3E01               	addlw	low((_dpowers-__stringbase))
  4050  04F0  0084               	movwf	fsr0
  4051  04F1  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4052  04F6  00BA               	movwf	(??_sprintf+1)+0
  4053  04F7  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4054  04FC  00BB               	movwf	(??_sprintf+1)+0+1
  4055  04FD  083B               	movf	1+(??_sprintf+1)+0,w
  4056  04FE  0240               	subwf	(sprintf@_val+1),w
  4057  04FF  1D03               	skipz
  4058  0500  2D03               	goto	u4405
  4059  0501  083A               	movf	0+(??_sprintf+1)+0,w
  4060  0502  023F               	subwf	(sprintf@_val),w
  4061  0503                     u4405:
  4062  0503  1803               	skipnc
  4063  0504  2D06               	goto	u4401
  4064  0505  2D07               	goto	u4400
  4065  0506                     u4401:
  4066  0506  2D09               	goto	l10728
  4067  0507                     u4400:
  4068  0507  2D14               	goto	l10732
  4069                           	line	1302
  4070                           	
  4071  0508                     l10726:	
  4072  0508  2D14               	goto	l10732
  4073                           	
  4074  0509                     l6735:	
  4075                           	line	1300
  4076                           	
  4077  0509                     l10728:	
  4078  0509  3001               	movlw	(01h)
  4079  050A  00B9               	movwf	(??_sprintf+0)+0
  4080  050B  0839               	movf	(??_sprintf+0)+0,w
  4081  050C  07C4               	addwf	(sprintf@c),f
  4082                           	
  4083  050D                     l10730:	
  4084  050D  0844               	movf	(sprintf@c),w
  4085  050E  3A05               	xorlw	05h
  4086  050F  1D03               	skipz
  4087  0510  2D12               	goto	u4411
  4088  0511  2D13               	goto	u4410
  4089  0512                     u4411:
  4090  0512  2CEC               	goto	l10724
  4091  0513                     u4410:
  4092  0513  2D14               	goto	l10732
  4093                           	
  4094  0514                     l6734:	
  4095                           	line	1433
  4096                           	
  4097  0514                     l10732:	
  4098  0514  083D               	movf	(sprintf@flag),w
  4099  0515  3903               	andlw	03h
  4100  0516  1903               	btfsc	status,2
  4101  0517  2D19               	goto	u4421
  4102  0518  2D1A               	goto	u4420
  4103  0519                     u4421:
  4104  0519  2D26               	goto	l10738
  4105  051A                     u4420:
  4106                           	line	1434
  4107                           	
  4108  051A                     l10734:	
  4109  051A  302D               	movlw	(02Dh)
  4110  051B  00B9               	movwf	(??_sprintf+0)+0
  4111  051C  0843               	movf	(sprintf@sp),w
  4112  051D  0084               	movwf	fsr0
  4113  051E  0839               	movf	(??_sprintf+0)+0,w
  4114  051F  1383               	bcf	status, 7	;select IRP bank0
  4115  0520  0080               	movwf	indf
  4116                           	
  4117  0521                     l10736:	
  4118  0521  3001               	movlw	(01h)
  4119  0522  00B9               	movwf	(??_sprintf+0)+0
  4120  0523  0839               	movf	(??_sprintf+0)+0,w
  4121  0524  07C3               	addwf	(sprintf@sp),f
  4122  0525  2D26               	goto	l10738
  4123                           	
  4124  0526                     l6736:	
  4125                           	line	1467
  4126                           	
  4127  0526                     l10738:	
  4128  0526  0844               	movf	(sprintf@c),w
  4129  0527  00B9               	movwf	(??_sprintf+0)+0
  4130  0528  0839               	movf	(??_sprintf+0)+0,w
  4131  0529  00BE               	movwf	(sprintf@prec)
  4132                           	line	1469
  4133  052A  2D6B               	goto	l10746
  4134                           	
  4135  052B                     l6738:	
  4136                           	line	1484
  4137                           	
  4138  052B                     l10740:	
  4139  052B  300A               	movlw	low(0Ah)
  4140  052C  00AE               	movwf	(?___lwmod)
  4141  052D  3000               	movlw	high(0Ah)
  4142  052E  00AF               	movwf	((?___lwmod))+1
  4143  052F  083E               	movf	(sprintf@prec),w
  4144  0530  00B9               	movwf	(??_sprintf+0)+0
  4145  0531  0739               	addwf	(??_sprintf+0)+0,w
  4146  0532  3E01               	addlw	low((_dpowers-__stringbase))
  4147  0533  0084               	movwf	fsr0
  4148  0534  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4149  0539  00A6               	movwf	(?___lwdiv)
  4150  053A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4151  053F  00A7               	movwf	(?___lwdiv+1)
  4152  0540  0840               	movf	(sprintf@_val+1),w
  4153  0541  01A9               	clrf	1+(?___lwdiv)+02h
  4154  0542  07A9               	addwf	1+(?___lwdiv)+02h
  4155  0543  083F               	movf	(sprintf@_val),w
  4156  0544  01A8               	clrf	0+(?___lwdiv)+02h
  4157  0545  07A8               	addwf	0+(?___lwdiv)+02h
  4158                           
  4159  0546  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4160  054B  1283               	bcf	status, 5	;RP0=0, select bank0
  4161  054C  1303               	bcf	status, 6	;RP1=0, select bank0
  4162  054D  0827               	movf	(1+(?___lwdiv)),w
  4163  054E  01B1               	clrf	1+(?___lwmod)+02h
  4164  054F  07B1               	addwf	1+(?___lwmod)+02h
  4165  0550  0826               	movf	(0+(?___lwdiv)),w
  4166  0551  01B0               	clrf	0+(?___lwmod)+02h
  4167  0552  07B0               	addwf	0+(?___lwmod)+02h
  4168                           
  4169  0553  120A  158A  2514   	fcall	___lwmod
              120A  118A         
  4170  0558  1283               	bcf	status, 5	;RP0=0, select bank0
  4171  0559  1303               	bcf	status, 6	;RP1=0, select bank0
  4172  055A  082E               	movf	(0+(?___lwmod)),w
  4173  055B  3E30               	addlw	030h
  4174  055C  00BA               	movwf	(??_sprintf+1)+0
  4175  055D  083A               	movf	(??_sprintf+1)+0,w
  4176  055E  00C4               	movwf	(sprintf@c)
  4177                           	line	1516
  4178                           	
  4179  055F                     l10742:	
  4180  055F  0844               	movf	(sprintf@c),w
  4181  0560  00B9               	movwf	(??_sprintf+0)+0
  4182  0561  0843               	movf	(sprintf@sp),w
  4183  0562  0084               	movwf	fsr0
  4184  0563  0839               	movf	(??_sprintf+0)+0,w
  4185  0564  1383               	bcf	status, 7	;select IRP bank0
  4186  0565  0080               	movwf	indf
  4187                           	
  4188  0566                     l10744:	
  4189  0566  3001               	movlw	(01h)
  4190  0567  00B9               	movwf	(??_sprintf+0)+0
  4191  0568  0839               	movf	(??_sprintf+0)+0,w
  4192  0569  07C3               	addwf	(sprintf@sp),f
  4193  056A  2D6B               	goto	l10746
  4194                           	line	1517
  4195                           	
  4196  056B                     l6737:	
  4197                           	line	1469
  4198                           	
  4199  056B                     l10746:	
  4200  056B  30FF               	movlw	(-1)
  4201  056C  00B9               	movwf	(??_sprintf+0)+0
  4202  056D  0839               	movf	(??_sprintf+0)+0,w
  4203  056E  07BE               	addwf	(sprintf@prec),f
  4204  056F  083E               	movf	((sprintf@prec)),w
  4205  0570  3AFF               	xorlw	-1
  4206  0571  1D03               	skipz
  4207  0572  2D74               	goto	u4431
  4208  0573  2D75               	goto	u4430
  4209  0574                     u4431:
  4210  0574  2D2B               	goto	l10740
  4211  0575                     u4430:
  4212  0575  2D77               	goto	l10748
  4213                           	
  4214  0576                     l6739:	
  4215  0576  2D77               	goto	l10748
  4216                           	line	1525
  4217                           	
  4218  0577                     l6722:	
  4219                           	line	540
  4220                           	
  4221  0577                     l10748:	
  4222  0577  3001               	movlw	01h
  4223  0578  07B4               	addwf	(sprintf@f),f
  4224  0579  30FF               	movlw	-01h
  4225  057A  0734               	addwf	(sprintf@f),w
  4226  057B  0084               	movwf	fsr0
  4227  057C  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4228  0581  00B9               	movwf	(??_sprintf+0)+0
  4229  0582  0839               	movf	(??_sprintf+0)+0,w
  4230  0583  00C4               	movwf	(sprintf@c)
  4231  0584  08C4               	movf	((sprintf@c)),f
  4232  0585  1D03               	skipz
  4233  0586  2D88               	goto	u4441
  4234  0587  2D89               	goto	u4440
  4235  0588                     u4441:
  4236  0588  2C99               	goto	l10698
  4237  0589                     u4440:
  4238  0589  2D8B               	goto	l10750
  4239                           	
  4240  058A                     l6740:	
  4241  058A  2D8B               	goto	l10750
  4242                           	line	1527
  4243                           	
  4244  058B                     l6727:	
  4245                           	line	1530
  4246                           	
  4247  058B                     l10750:	
  4248  058B  0843               	movf	(sprintf@sp),w
  4249  058C  0084               	movwf	fsr0
  4250  058D  1383               	bcf	status, 7	;select IRP bank0
  4251  058E  0180               	clrf	indf
  4252  058F  2D90               	goto	l6741
  4253                           	line	1532
  4254                           	
  4255  0590                     l10752:	
  4256                           	line	1533
  4257                           ;	Return value of _sprintf is never used
  4258                           	
  4259  0590                     l6741:	
  4260  0590  0008               	return
  4261                           	opt stack 0
  4262                           GLOBAL	__end_of_sprintf
  4263  0591                     	__end_of_sprintf:
  4264 ;; =============== function _sprintf ends ============
  4265                           
  4266                           	signat	_sprintf,4698
  4267                           	global	_ser_getch
  4268                           psect	text888,local,class=CODE,delta=2
  4269                           global __ptext888
  4270  0AED                     __ptext888:
  4271                           
  4272 ;; *************** function _ser_getch *****************
  4273 ;; Defined at:
  4274 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  c               1    1[BANK0 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      unsigned char 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         0       0       0       0       0
  4289 ;;      Locals:         0       1       0       0       0
  4290 ;;      Temps:          0       1       0       0       0
  4291 ;;      Totals:         0       2       0       0       0
  4292 ;;Total ram usage:        2 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    4
  4295 ;; This function calls:
  4296 ;;		_ser_isrx
  4297 ;; This function is called by:
  4298 ;;		_robot_distance
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           psect	text888
  4302                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  4303                           	line	55
  4304                           	global	__size_of_ser_getch
  4305  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  4306                           	
  4307  0AED                     _ser_getch:	
  4308                           	opt	stack 2
  4309                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4310                           	line	58
  4311                           	
  4312  0AED                     l10680:	
  4313                           ;ser.c: 56: unsigned char c;
  4314                           ;ser.c: 58: while (ser_isrx()==0)
  4315  0AED  2AEF               	goto	l10682
  4316                           	
  4317  0AEE                     l4422:	
  4318                           	line	59
  4319                           ;ser.c: 59: continue;
  4320  0AEE  2AEF               	goto	l10682
  4321                           	
  4322  0AEF                     l4421:	
  4323                           	line	58
  4324                           	
  4325  0AEF                     l10682:	
  4326  0AEF  120A  158A  22B5   	fcall	_ser_isrx
              120A  158A         
  4327  0AF4  1C03               	btfss	status,0
  4328  0AF5  2AF7               	goto	u4361
  4329  0AF6  2AF8               	goto	u4360
  4330  0AF7                     u4361:
  4331  0AF7  2AEF               	goto	l10682
  4332  0AF8                     u4360:
  4333                           	
  4334  0AF8                     l4423:	
  4335                           	line	61
  4336                           ;ser.c: 61: GIE=0;
  4337  0AF8  138B               	bcf	(95/8),(95)&7
  4338                           	line	62
  4339                           	
  4340  0AF9                     l10684:	
  4341                           ;ser.c: 62: c=rxfifo[rxoptr];
  4342  0AF9  1283               	bcf	status, 5	;RP0=0, select bank0
  4343  0AFA  1303               	bcf	status, 6	;RP1=0, select bank0
  4344  0AFB  086E               	movf	(_rxoptr),w
  4345  0AFC  3EA0               	addlw	_rxfifo&0ffh
  4346  0AFD  0084               	movwf	fsr0
  4347  0AFE  1383               	bcf	status, 7	;select IRP bank1
  4348  0AFF  0800               	movf	indf,w
  4349  0B00  00A0               	movwf	(??_ser_getch+0)+0
  4350  0B01  0820               	movf	(??_ser_getch+0)+0,w
  4351  0B02  00A1               	movwf	(ser_getch@c)
  4352                           	line	63
  4353                           	
  4354  0B03                     l10686:	
  4355                           ;ser.c: 63: ++rxoptr;
  4356  0B03  3001               	movlw	(01h)
  4357  0B04  00A0               	movwf	(??_ser_getch+0)+0
  4358  0B05  0820               	movf	(??_ser_getch+0)+0,w
  4359  0B06  07EE               	addwf	(_rxoptr),f	;volatile
  4360                           	line	64
  4361                           	
  4362  0B07                     l10688:	
  4363                           ;ser.c: 64: rxoptr &= (16-1);
  4364  0B07  300F               	movlw	(0Fh)
  4365  0B08  00A0               	movwf	(??_ser_getch+0)+0
  4366  0B09  0820               	movf	(??_ser_getch+0)+0,w
  4367  0B0A  05EE               	andwf	(_rxoptr),f	;volatile
  4368                           	line	65
  4369                           	
  4370  0B0B                     l10690:	
  4371                           ;ser.c: 65: GIE=1;
  4372  0B0B  178B               	bsf	(95/8),(95)&7
  4373                           	line	66
  4374                           	
  4375  0B0C                     l10692:	
  4376                           ;ser.c: 66: return c;
  4377  0B0C  0821               	movf	(ser_getch@c),w
  4378  0B0D  2B0E               	goto	l4424
  4379                           	
  4380  0B0E                     l10694:	
  4381                           	line	67
  4382                           	
  4383  0B0E                     l4424:	
  4384  0B0E  0008               	return
  4385                           	opt stack 0
  4386                           GLOBAL	__end_of_ser_getch
  4387  0B0F                     	__end_of_ser_getch:
  4388 ;; =============== function _ser_getch ends ============
  4389                           
  4390                           	signat	_ser_getch,89
  4391                           	global	_ADCconvert
  4392                           psect	text889,local,class=CODE,delta=2
  4393                           global __ptext889
  4394  0015                     __ptext889:
  4395                           
  4396 ;; *************** function _ADCconvert *****************
  4397 ;; Defined at:
  4398 ;;		line 33 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0
  4414 ;;      Temps:          0       2       0       0       0
  4415 ;;      Totals:         0       2       0       0       0
  4416 ;;Total ram usage:        2 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    4
  4419 ;; This function calls:
  4420 ;;		___wmul
  4421 ;;		___lwdiv
  4422 ;; This function is called by:
  4423 ;;		_readAvgDistance
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           psect	text889
  4427                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4428                           	line	33
  4429                           	global	__size_of_ADCconvert
  4430  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4431                           	
  4432  0015                     _ADCconvert:	
  4433                           	opt	stack 1
  4434                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4435                           	line	39
  4436                           	
  4437  0015                     l10638:	
  4438                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4439  0015  3000               	movlw	high(0D5h)
  4440  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4441  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4442  0018  026B               	subwf	(_adcVal+1),w	;volatile
  4443  0019  30D5               	movlw	low(0D5h)
  4444  001A  1903               	skipnz
  4445  001B  026A               	subwf	(_adcVal),w	;volatile
  4446  001C  1C03               	skipc
  4447  001D  281F               	goto	u4221
  4448  001E  2820               	goto	u4220
  4449  001F                     u4221:
  4450  001F  2863               	goto	l10644
  4451  0020                     u4220:
  4452                           	
  4453  0020                     l10640:	
  4454  0020  3000               	movlw	high(0EAh)
  4455  0021  026B               	subwf	(_adcVal+1),w	;volatile
  4456  0022  30EA               	movlw	low(0EAh)
  4457  0023  1903               	skipnz
  4458  0024  026A               	subwf	(_adcVal),w	;volatile
  4459  0025  1803               	skipnc
  4460  0026  2828               	goto	u4231
  4461  0027  2829               	goto	u4230
  4462  0028                     u4231:
  4463  0028  2863               	goto	l10644
  4464  0029                     u4230:
  4465                           	line	41
  4466                           	
  4467  0029                     l10642:	
  4468                           ;infrared.c: 40: {
  4469                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4470  0029  3015               	movlw	low(015h)
  4471  002A  00A6               	movwf	(?___lwdiv)
  4472  002B  3000               	movlw	high(015h)
  4473  002C  00A7               	movwf	((?___lwdiv))+1
  4474  002D  096A               	comf	(_adcVal),w	;volatile
  4475  002E  00AE               	movwf	(??_ADCconvert+0)+0
  4476  002F  096B               	comf	(_adcVal+1),w	;volatile
  4477  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4478  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  4479  0032  1903               	skipnz
  4480  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4481  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  4482  0035  3EEA               	addlw	low(0EAh)
  4483  0036  00A0               	movwf	(?___wmul)
  4484  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  4485  0038  1803               	skipnc
  4486  0039  3E01               	addlw	1
  4487  003A  3E00               	addlw	high(0EAh)
  4488  003B  00A1               	movwf	1+(?___wmul)
  4489  003C  3005               	movlw	low(05h)
  4490  003D  00A2               	movwf	0+(?___wmul)+02h
  4491  003E  3000               	movlw	high(05h)
  4492  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  4493  0040  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  4494  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  4495  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  4496  0047  0821               	movf	(1+(?___wmul)),w
  4497  0048  01A9               	clrf	1+(?___lwdiv)+02h
  4498  0049  07A9               	addwf	1+(?___lwdiv)+02h
  4499  004A  0820               	movf	(0+(?___wmul)),w
  4500  004B  01A8               	clrf	0+(?___lwdiv)+02h
  4501  004C  07A8               	addwf	0+(?___lwdiv)+02h
  4502                           
  4503  004D  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4504  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4505  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4506  0054  0826               	movf	(0+(?___lwdiv)),w
  4507  0055  3E0F               	addlw	low(0Fh)
  4508  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  4509  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  4510  0058  00C4               	movwf	(_distance)^080h	;volatile
  4511  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  4512  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  4513  005B  0827               	movf	(1+(?___lwdiv)),w
  4514  005C  1803               	skipnc
  4515  005D  3E01               	addlw	1
  4516  005E  3E00               	addlw	high(0Fh)
  4517  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  4518  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  4519  0061  00C5               	movwf	1+(_distance)^080h	;volatile
  4520                           	line	42
  4521                           ;infrared.c: 42: }
  4522  0062  2A37               	goto	l2981
  4523                           	line	43
  4524                           	
  4525  0063                     l2968:	
  4526                           	
  4527  0063                     l10644:	
  4528                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4529  0063  3000               	movlw	high(0AAh)
  4530  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  4531  0065  026B               	subwf	(_adcVal+1),w	;volatile
  4532  0066  30AA               	movlw	low(0AAh)
  4533  0067  1903               	skipnz
  4534  0068  026A               	subwf	(_adcVal),w	;volatile
  4535  0069  1C03               	skipc
  4536  006A  286C               	goto	u4241
  4537  006B  286D               	goto	u4240
  4538  006C                     u4241:
  4539  006C  28B0               	goto	l10650
  4540  006D                     u4240:
  4541                           	
  4542  006D                     l10646:	
  4543  006D  3000               	movlw	high(0D5h)
  4544  006E  026B               	subwf	(_adcVal+1),w	;volatile
  4545  006F  30D5               	movlw	low(0D5h)
  4546  0070  1903               	skipnz
  4547  0071  026A               	subwf	(_adcVal),w	;volatile
  4548  0072  1803               	skipnc
  4549  0073  2875               	goto	u4251
  4550  0074  2876               	goto	u4250
  4551  0075                     u4251:
  4552  0075  28B0               	goto	l10650
  4553  0076                     u4250:
  4554                           	line	45
  4555                           	
  4556  0076                     l10648:	
  4557                           ;infrared.c: 44: {
  4558                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4559  0076  302B               	movlw	low(02Bh)
  4560  0077  00A6               	movwf	(?___lwdiv)
  4561  0078  3000               	movlw	high(02Bh)
  4562  0079  00A7               	movwf	((?___lwdiv))+1
  4563  007A  096A               	comf	(_adcVal),w	;volatile
  4564  007B  00AE               	movwf	(??_ADCconvert+0)+0
  4565  007C  096B               	comf	(_adcVal+1),w	;volatile
  4566  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4567  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  4568  007F  1903               	skipnz
  4569  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4570  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  4571  0082  3ED5               	addlw	low(0D5h)
  4572  0083  00A0               	movwf	(?___wmul)
  4573  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  4574  0085  1803               	skipnc
  4575  0086  3E01               	addlw	1
  4576  0087  3E00               	addlw	high(0D5h)
  4577  0088  00A1               	movwf	1+(?___wmul)
  4578  0089  300A               	movlw	low(0Ah)
  4579  008A  00A2               	movwf	0+(?___wmul)+02h
  4580  008B  3000               	movlw	high(0Ah)
  4581  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  4582  008D  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  4583  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  4584  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  4585  0094  0821               	movf	(1+(?___wmul)),w
  4586  0095  01A9               	clrf	1+(?___lwdiv)+02h
  4587  0096  07A9               	addwf	1+(?___lwdiv)+02h
  4588  0097  0820               	movf	(0+(?___wmul)),w
  4589  0098  01A8               	clrf	0+(?___lwdiv)+02h
  4590  0099  07A8               	addwf	0+(?___lwdiv)+02h
  4591                           
  4592  009A  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4593  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4594  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4595  00A1  0826               	movf	(0+(?___lwdiv)),w
  4596  00A2  3E14               	addlw	low(014h)
  4597  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4598  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4599  00A5  00C4               	movwf	(_distance)^080h	;volatile
  4600  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4601  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4602  00A8  0827               	movf	(1+(?___lwdiv)),w
  4603  00A9  1803               	skipnc
  4604  00AA  3E01               	addlw	1
  4605  00AB  3E00               	addlw	high(014h)
  4606  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4607  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4608  00AE  00C5               	movwf	1+(_distance)^080h	;volatile
  4609                           	line	46
  4610                           ;infrared.c: 46: }
  4611  00AF  2A37               	goto	l2981
  4612                           	line	47
  4613                           	
  4614  00B0                     l2970:	
  4615                           	
  4616  00B0                     l10650:	
  4617                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4618  00B0  3000               	movlw	high(080h)
  4619  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4620  00B2  026B               	subwf	(_adcVal+1),w	;volatile
  4621  00B3  3080               	movlw	low(080h)
  4622  00B4  1903               	skipnz
  4623  00B5  026A               	subwf	(_adcVal),w	;volatile
  4624  00B6  1C03               	skipc
  4625  00B7  28B9               	goto	u4261
  4626  00B8  28BA               	goto	u4260
  4627  00B9                     u4261:
  4628  00B9  28FD               	goto	l10656
  4629  00BA                     u4260:
  4630                           	
  4631  00BA                     l10652:	
  4632  00BA  3000               	movlw	high(0AAh)
  4633  00BB  026B               	subwf	(_adcVal+1),w	;volatile
  4634  00BC  30AA               	movlw	low(0AAh)
  4635  00BD  1903               	skipnz
  4636  00BE  026A               	subwf	(_adcVal),w	;volatile
  4637  00BF  1803               	skipnc
  4638  00C0  28C2               	goto	u4271
  4639  00C1  28C3               	goto	u4270
  4640  00C2                     u4271:
  4641  00C2  28FD               	goto	l10656
  4642  00C3                     u4270:
  4643                           	line	49
  4644                           	
  4645  00C3                     l10654:	
  4646                           ;infrared.c: 48: {
  4647                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4648  00C3  302A               	movlw	low(02Ah)
  4649  00C4  00A6               	movwf	(?___lwdiv)
  4650  00C5  3000               	movlw	high(02Ah)
  4651  00C6  00A7               	movwf	((?___lwdiv))+1
  4652  00C7  096A               	comf	(_adcVal),w	;volatile
  4653  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  4654  00C9  096B               	comf	(_adcVal+1),w	;volatile
  4655  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4656  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  4657  00CC  1903               	skipnz
  4658  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4659  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  4660  00CF  3EAA               	addlw	low(0AAh)
  4661  00D0  00A0               	movwf	(?___wmul)
  4662  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  4663  00D2  1803               	skipnc
  4664  00D3  3E01               	addlw	1
  4665  00D4  3E00               	addlw	high(0AAh)
  4666  00D5  00A1               	movwf	1+(?___wmul)
  4667  00D6  300A               	movlw	low(0Ah)
  4668  00D7  00A2               	movwf	0+(?___wmul)+02h
  4669  00D8  3000               	movlw	high(0Ah)
  4670  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  4671  00DA  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  4672  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4673  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4674  00E1  0821               	movf	(1+(?___wmul)),w
  4675  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  4676  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  4677  00E4  0820               	movf	(0+(?___wmul)),w
  4678  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  4679  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  4680                           
  4681  00E7  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4682  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4683  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4684  00EE  0826               	movf	(0+(?___lwdiv)),w
  4685  00EF  3E1E               	addlw	low(01Eh)
  4686  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4687  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4688  00F2  00C4               	movwf	(_distance)^080h	;volatile
  4689  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4690  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4691  00F5  0827               	movf	(1+(?___lwdiv)),w
  4692  00F6  1803               	skipnc
  4693  00F7  3E01               	addlw	1
  4694  00F8  3E00               	addlw	high(01Eh)
  4695  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4696  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4697  00FB  00C5               	movwf	1+(_distance)^080h	;volatile
  4698                           	line	50
  4699                           ;infrared.c: 50: }
  4700  00FC  2A37               	goto	l2981
  4701                           	line	51
  4702                           	
  4703  00FD                     l2972:	
  4704                           	
  4705  00FD                     l10656:	
  4706                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4707  00FD  3000               	movlw	high(06Bh)
  4708  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4709  00FF  026B               	subwf	(_adcVal+1),w	;volatile
  4710  0100  306B               	movlw	low(06Bh)
  4711  0101  1903               	skipnz
  4712  0102  026A               	subwf	(_adcVal),w	;volatile
  4713  0103  1C03               	skipc
  4714  0104  2906               	goto	u4281
  4715  0105  2907               	goto	u4280
  4716  0106                     u4281:
  4717  0106  294A               	goto	l10662
  4718  0107                     u4280:
  4719                           	
  4720  0107                     l10658:	
  4721  0107  3000               	movlw	high(080h)
  4722  0108  026B               	subwf	(_adcVal+1),w	;volatile
  4723  0109  3080               	movlw	low(080h)
  4724  010A  1903               	skipnz
  4725  010B  026A               	subwf	(_adcVal),w	;volatile
  4726  010C  1803               	skipnc
  4727  010D  290F               	goto	u4291
  4728  010E  2910               	goto	u4290
  4729  010F                     u4291:
  4730  010F  294A               	goto	l10662
  4731  0110                     u4290:
  4732                           	line	53
  4733                           	
  4734  0110                     l10660:	
  4735                           ;infrared.c: 52: {
  4736                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  4737  0110  3015               	movlw	low(015h)
  4738  0111  00A6               	movwf	(?___lwdiv)
  4739  0112  3000               	movlw	high(015h)
  4740  0113  00A7               	movwf	((?___lwdiv))+1
  4741  0114  096A               	comf	(_adcVal),w	;volatile
  4742  0115  00AE               	movwf	(??_ADCconvert+0)+0
  4743  0116  096B               	comf	(_adcVal+1),w	;volatile
  4744  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4745  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  4746  0119  1903               	skipnz
  4747  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4748  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  4749  011C  3E80               	addlw	low(080h)
  4750  011D  00A0               	movwf	(?___wmul)
  4751  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  4752  011F  1803               	skipnc
  4753  0120  3E01               	addlw	1
  4754  0121  3E00               	addlw	high(080h)
  4755  0122  00A1               	movwf	1+(?___wmul)
  4756  0123  300A               	movlw	low(0Ah)
  4757  0124  00A2               	movwf	0+(?___wmul)+02h
  4758  0125  3000               	movlw	high(0Ah)
  4759  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  4760  0127  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  4761  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  4762  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  4763  012E  0821               	movf	(1+(?___wmul)),w
  4764  012F  01A9               	clrf	1+(?___lwdiv)+02h
  4765  0130  07A9               	addwf	1+(?___lwdiv)+02h
  4766  0131  0820               	movf	(0+(?___wmul)),w
  4767  0132  01A8               	clrf	0+(?___lwdiv)+02h
  4768  0133  07A8               	addwf	0+(?___lwdiv)+02h
  4769                           
  4770  0134  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4771  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  4772  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  4773  013B  0826               	movf	(0+(?___lwdiv)),w
  4774  013C  3E28               	addlw	low(028h)
  4775  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  4776  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  4777  013F  00C4               	movwf	(_distance)^080h	;volatile
  4778  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  4779  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  4780  0142  0827               	movf	(1+(?___lwdiv)),w
  4781  0143  1803               	skipnc
  4782  0144  3E01               	addlw	1
  4783  0145  3E00               	addlw	high(028h)
  4784  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  4785  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  4786  0148  00C5               	movwf	1+(_distance)^080h	;volatile
  4787                           	line	54
  4788                           ;infrared.c: 54: }
  4789  0149  2A37               	goto	l2981
  4790                           	line	55
  4791                           	
  4792  014A                     l2974:	
  4793                           	
  4794  014A                     l10662:	
  4795                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  4796  014A  3000               	movlw	high(04Dh)
  4797  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  4798  014C  026B               	subwf	(_adcVal+1),w	;volatile
  4799  014D  304D               	movlw	low(04Dh)
  4800  014E  1903               	skipnz
  4801  014F  026A               	subwf	(_adcVal),w	;volatile
  4802  0150  1C03               	skipc
  4803  0151  2953               	goto	u4301
  4804  0152  2954               	goto	u4300
  4805  0153                     u4301:
  4806  0153  2997               	goto	l10668
  4807  0154                     u4300:
  4808                           	
  4809  0154                     l10664:	
  4810  0154  3000               	movlw	high(06Bh)
  4811  0155  026B               	subwf	(_adcVal+1),w	;volatile
  4812  0156  306B               	movlw	low(06Bh)
  4813  0157  1903               	skipnz
  4814  0158  026A               	subwf	(_adcVal),w	;volatile
  4815  0159  1803               	skipnc
  4816  015A  295C               	goto	u4311
  4817  015B  295D               	goto	u4310
  4818  015C                     u4311:
  4819  015C  2997               	goto	l10668
  4820  015D                     u4310:
  4821                           	line	57
  4822                           	
  4823  015D                     l10666:	
  4824                           ;infrared.c: 56: {
  4825                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  4826  015D  301E               	movlw	low(01Eh)
  4827  015E  00A6               	movwf	(?___lwdiv)
  4828  015F  3000               	movlw	high(01Eh)
  4829  0160  00A7               	movwf	((?___lwdiv))+1
  4830  0161  096A               	comf	(_adcVal),w	;volatile
  4831  0162  00AE               	movwf	(??_ADCconvert+0)+0
  4832  0163  096B               	comf	(_adcVal+1),w	;volatile
  4833  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4834  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  4835  0166  1903               	skipnz
  4836  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4837  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  4838  0169  3E6B               	addlw	low(06Bh)
  4839  016A  00A0               	movwf	(?___wmul)
  4840  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  4841  016C  1803               	skipnc
  4842  016D  3E01               	addlw	1
  4843  016E  3E00               	addlw	high(06Bh)
  4844  016F  00A1               	movwf	1+(?___wmul)
  4845  0170  300A               	movlw	low(0Ah)
  4846  0171  00A2               	movwf	0+(?___wmul)+02h
  4847  0172  3000               	movlw	high(0Ah)
  4848  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  4849  0174  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  4850  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  4851  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  4852  017B  0821               	movf	(1+(?___wmul)),w
  4853  017C  01A9               	clrf	1+(?___lwdiv)+02h
  4854  017D  07A9               	addwf	1+(?___lwdiv)+02h
  4855  017E  0820               	movf	(0+(?___wmul)),w
  4856  017F  01A8               	clrf	0+(?___lwdiv)+02h
  4857  0180  07A8               	addwf	0+(?___lwdiv)+02h
  4858                           
  4859  0181  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4860  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  4861  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  4862  0188  0826               	movf	(0+(?___lwdiv)),w
  4863  0189  3E32               	addlw	low(032h)
  4864  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  4865  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  4866  018C  00C4               	movwf	(_distance)^080h	;volatile
  4867  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  4868  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  4869  018F  0827               	movf	(1+(?___lwdiv)),w
  4870  0190  1803               	skipnc
  4871  0191  3E01               	addlw	1
  4872  0192  3E00               	addlw	high(032h)
  4873  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  4874  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  4875  0195  00C5               	movwf	1+(_distance)^080h	;volatile
  4876                           	line	58
  4877                           ;infrared.c: 58: }
  4878  0196  2A37               	goto	l2981
  4879                           	line	59
  4880                           	
  4881  0197                     l2976:	
  4882                           	
  4883  0197                     l10668:	
  4884                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  4885  0197  3000               	movlw	high(038h)
  4886  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  4887  0199  026B               	subwf	(_adcVal+1),w	;volatile
  4888  019A  3038               	movlw	low(038h)
  4889  019B  1903               	skipnz
  4890  019C  026A               	subwf	(_adcVal),w	;volatile
  4891  019D  1C03               	skipc
  4892  019E  29A0               	goto	u4321
  4893  019F  29A1               	goto	u4320
  4894  01A0                     u4321:
  4895  01A0  29E4               	goto	l10674
  4896  01A1                     u4320:
  4897                           	
  4898  01A1                     l10670:	
  4899  01A1  3000               	movlw	high(04Dh)
  4900  01A2  026B               	subwf	(_adcVal+1),w	;volatile
  4901  01A3  304D               	movlw	low(04Dh)
  4902  01A4  1903               	skipnz
  4903  01A5  026A               	subwf	(_adcVal),w	;volatile
  4904  01A6  1803               	skipnc
  4905  01A7  29A9               	goto	u4331
  4906  01A8  29AA               	goto	u4330
  4907  01A9                     u4331:
  4908  01A9  29E4               	goto	l10674
  4909  01AA                     u4330:
  4910                           	line	61
  4911                           	
  4912  01AA                     l10672:	
  4913                           ;infrared.c: 60: {
  4914                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  4915  01AA  3015               	movlw	low(015h)
  4916  01AB  00A6               	movwf	(?___lwdiv)
  4917  01AC  3000               	movlw	high(015h)
  4918  01AD  00A7               	movwf	((?___lwdiv))+1
  4919  01AE  096A               	comf	(_adcVal),w	;volatile
  4920  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  4921  01B0  096B               	comf	(_adcVal+1),w	;volatile
  4922  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4923  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  4924  01B3  1903               	skipnz
  4925  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4926  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  4927  01B6  3E4D               	addlw	low(04Dh)
  4928  01B7  00A0               	movwf	(?___wmul)
  4929  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  4930  01B9  1803               	skipnc
  4931  01BA  3E01               	addlw	1
  4932  01BB  3E00               	addlw	high(04Dh)
  4933  01BC  00A1               	movwf	1+(?___wmul)
  4934  01BD  300A               	movlw	low(0Ah)
  4935  01BE  00A2               	movwf	0+(?___wmul)+02h
  4936  01BF  3000               	movlw	high(0Ah)
  4937  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  4938  01C1  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  4939  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4940  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4941  01C8  0821               	movf	(1+(?___wmul)),w
  4942  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  4943  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  4944  01CB  0820               	movf	(0+(?___wmul)),w
  4945  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  4946  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  4947                           
  4948  01CE  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  4949  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4950  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4951  01D5  0826               	movf	(0+(?___lwdiv)),w
  4952  01D6  3E3C               	addlw	low(03Ch)
  4953  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  4954  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  4955  01D9  00C4               	movwf	(_distance)^080h	;volatile
  4956  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4957  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4958  01DC  0827               	movf	(1+(?___lwdiv)),w
  4959  01DD  1803               	skipnc
  4960  01DE  3E01               	addlw	1
  4961  01DF  3E00               	addlw	high(03Ch)
  4962  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  4963  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  4964  01E2  00C5               	movwf	1+(_distance)^080h	;volatile
  4965                           	line	62
  4966                           ;infrared.c: 62: }
  4967  01E3  2A37               	goto	l2981
  4968                           	line	63
  4969                           	
  4970  01E4                     l2978:	
  4971                           	
  4972  01E4                     l10674:	
  4973                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  4974  01E4  3000               	movlw	high(02Bh)
  4975  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4976  01E6  026B               	subwf	(_adcVal+1),w	;volatile
  4977  01E7  302B               	movlw	low(02Bh)
  4978  01E8  1903               	skipnz
  4979  01E9  026A               	subwf	(_adcVal),w	;volatile
  4980  01EA  1C03               	skipc
  4981  01EB  29ED               	goto	u4341
  4982  01EC  29EE               	goto	u4340
  4983  01ED                     u4341:
  4984  01ED  2A37               	goto	l2981
  4985  01EE                     u4340:
  4986                           	
  4987  01EE                     l10676:	
  4988  01EE  3000               	movlw	high(038h)
  4989  01EF  026B               	subwf	(_adcVal+1),w	;volatile
  4990  01F0  3038               	movlw	low(038h)
  4991  01F1  1903               	skipnz
  4992  01F2  026A               	subwf	(_adcVal),w	;volatile
  4993  01F3  1803               	skipnc
  4994  01F4  29F6               	goto	u4351
  4995  01F5  29F7               	goto	u4350
  4996  01F6                     u4351:
  4997  01F6  2A37               	goto	l2981
  4998  01F7                     u4350:
  4999                           	line	65
  5000                           	
  5001  01F7                     l10678:	
  5002                           ;infrared.c: 64: {
  5003                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5004  01F7  300D               	movlw	low(0Dh)
  5005  01F8  00A6               	movwf	(?___lwdiv)
  5006  01F9  3000               	movlw	high(0Dh)
  5007  01FA  00A7               	movwf	((?___lwdiv))+1
  5008  01FB  096A               	comf	(_adcVal),w	;volatile
  5009  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  5010  01FD  096B               	comf	(_adcVal+1),w	;volatile
  5011  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5012  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  5013  0200  1903               	skipnz
  5014  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5015  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  5016  0203  3E38               	addlw	low(038h)
  5017  0204  00A0               	movwf	(?___wmul)
  5018  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  5019  0206  1803               	skipnc
  5020  0207  3E01               	addlw	1
  5021  0208  3E00               	addlw	high(038h)
  5022  0209  00A1               	movwf	1+(?___wmul)
  5023  020A  300A               	movlw	low(0Ah)
  5024  020B  00A2               	movwf	0+(?___wmul)+02h
  5025  020C  3000               	movlw	high(0Ah)
  5026  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  5027  020E  120A  158A  23AF   	fcall	___wmul
              120A  118A         
  5028  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  5029  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  5030  0215  0821               	movf	(1+(?___wmul)),w
  5031  0216  01A9               	clrf	1+(?___lwdiv)+02h
  5032  0217  07A9               	addwf	1+(?___lwdiv)+02h
  5033  0218  0820               	movf	(0+(?___wmul)),w
  5034  0219  01A8               	clrf	0+(?___lwdiv)+02h
  5035  021A  07A8               	addwf	0+(?___lwdiv)+02h
  5036                           
  5037  021B  120A  158A  25A1   	fcall	___lwdiv
              120A  118A         
  5038  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  5039  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  5040  0222  0826               	movf	(0+(?___lwdiv)),w
  5041  0223  3E46               	addlw	low(046h)
  5042  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  5043  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  5044  0226  00C4               	movwf	(_distance)^080h	;volatile
  5045  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  5046  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  5047  0229  0827               	movf	(1+(?___lwdiv)),w
  5048  022A  1803               	skipnc
  5049  022B  3E01               	addlw	1
  5050  022C  3E00               	addlw	high(046h)
  5051  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  5052  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  5053  022F  00C5               	movwf	1+(_distance)^080h	;volatile
  5054  0230  2A37               	goto	l2981
  5055                           	line	66
  5056                           	
  5057  0231                     l2980:	
  5058  0231  2A37               	goto	l2981
  5059                           	line	67
  5060                           	
  5061  0232                     l2979:	
  5062  0232  2A37               	goto	l2981
  5063                           	
  5064  0233                     l2977:	
  5065  0233  2A37               	goto	l2981
  5066                           	
  5067  0234                     l2975:	
  5068  0234  2A37               	goto	l2981
  5069                           	
  5070  0235                     l2973:	
  5071  0235  2A37               	goto	l2981
  5072                           	
  5073  0236                     l2971:	
  5074  0236  2A37               	goto	l2981
  5075                           	
  5076  0237                     l2969:	
  5077                           	
  5078  0237                     l2981:	
  5079  0237  0008               	return
  5080                           	opt stack 0
  5081                           GLOBAL	__end_of_ADCconvert
  5082  0238                     	__end_of_ADCconvert:
  5083 ;; =============== function _ADCconvert ends ============
  5084                           
  5085                           	signat	_ADCconvert,88
  5086                           	global	_robotTurn
  5087                           psect	text890,local,class=CODE,delta=2
  5088                           global __ptext890
  5089  0709                     __ptext890:
  5090                           
  5091 ;; *************** function _robotTurn *****************
  5092 ;; Defined at:
  5093 ;;		line 78 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  distance        2    2[BANK0 ] int 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;		None               void
  5100 ;; Registers used:
  5101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5107 ;;      Params:         0       2       0       0       0
  5108 ;;      Locals:         0       0       0       0       0
  5109 ;;      Temps:          0       1       0       0       0
  5110 ;;      Totals:         0       3       0       0       0
  5111 ;;Total ram usage:        3 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    4
  5114 ;; This function calls:
  5115 ;;		_ser_putch
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           psect	text890
  5121                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5122                           	line	78
  5123                           	global	__size_of_robotTurn
  5124  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5125                           	
  5126  0709                     _robotTurn:	
  5127                           	opt	stack 3
  5128                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5129                           	line	81
  5130                           	
  5131  0709                     l10628:	
  5132                           ;robot.c: 81: turnlowByte = (unsigned char) (distance) ;
  5133  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  5134  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  5135  070B  0822               	movf	(robotTurn@distance),w
  5136  070C  00A4               	movwf	(??_robotTurn+0)+0
  5137  070D  0824               	movf	(??_robotTurn+0)+0,w
  5138  070E  1683               	bsf	status, 5	;RP0=1, select bank1
  5139  070F  1303               	bcf	status, 6	;RP1=0, select bank1
  5140  0710  00DB               	movwf	(_turnlowByte)^080h
  5141                           	line	82
  5142                           	
  5143  0711                     l10630:	
  5144                           ;robot.c: 82: turnhighByte = (unsigned char) (distance >> 8);
  5145  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  5146  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  5147  0713  0823               	movf	(robotTurn@distance+1),w
  5148  0714  00A4               	movwf	(??_robotTurn+0)+0
  5149  0715  0824               	movf	(??_robotTurn+0)+0,w
  5150  0716  1683               	bsf	status, 5	;RP0=1, select bank1
  5151  0717  1303               	bcf	status, 6	;RP1=0, select bank1
  5152  0718  00DA               	movwf	(_turnhighByte)^080h
  5153                           	line	83
  5154                           	
  5155  0719                     l10632:	
  5156                           ;robot.c: 83: if (distance >= 0)
  5157  0719  1283               	bcf	status, 5	;RP0=0, select bank0
  5158  071A  1303               	bcf	status, 6	;RP1=0, select bank0
  5159  071B  1BA3               	btfsc	(robotTurn@distance+1),7
  5160  071C  2F1E               	goto	u4211
  5161  071D  2F1F               	goto	u4210
  5162  071E                     u4211:
  5163  071E  2F3E               	goto	l10636
  5164  071F                     u4210:
  5165                           	line	85
  5166                           	
  5167  071F                     l10634:	
  5168                           ;robot.c: 84: {
  5169                           ;robot.c: 85: ser_putch(137);
  5170  071F  3089               	movlw	(089h)
  5171  0720  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5172                           	line	87
  5173                           ;robot.c: 87: ser_putch(0);
  5174  0725  3000               	movlw	(0)
  5175  0726  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5176                           	line	89
  5177                           ;robot.c: 89: ser_putch(100);
  5178  072B  3064               	movlw	(064h)
  5179  072C  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5180                           	line	91
  5181                           ;robot.c: 91: ser_putch(0);
  5182  0731  3000               	movlw	(0)
  5183  0732  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5184                           	line	93
  5185                           ;robot.c: 93: ser_putch(1);
  5186  0737  3001               	movlw	(01h)
  5187  0738  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5188                           	line	94
  5189                           ;robot.c: 94: }
  5190  073D  2F5C               	goto	l6712
  5191                           	line	95
  5192                           	
  5193  073E                     l6711:	
  5194                           	line	97
  5195                           	
  5196  073E                     l10636:	
  5197                           ;robot.c: 95: else
  5198                           ;robot.c: 96: {
  5199                           ;robot.c: 97: ser_putch(137);
  5200  073E  3089               	movlw	(089h)
  5201  073F  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5202                           	line	99
  5203                           ;robot.c: 99: ser_putch(0);
  5204  0744  3000               	movlw	(0)
  5205  0745  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5206                           	line	101
  5207                           ;robot.c: 101: ser_putch(100);
  5208  074A  3064               	movlw	(064h)
  5209  074B  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5210                           	line	103
  5211                           ;robot.c: 103: ser_putch(255);
  5212  0750  30FF               	movlw	(0FFh)
  5213  0751  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5214                           	line	105
  5215                           ;robot.c: 105: ser_putch(255);
  5216  0756  30FF               	movlw	(0FFh)
  5217  0757  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5218                           	line	106
  5219                           	
  5220  075C                     l6712:	
  5221                           	line	107
  5222                           ;robot.c: 106: }
  5223                           ;robot.c: 107: ser_putch(157);
  5224  075C  309D               	movlw	(09Dh)
  5225  075D  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5226                           	line	109
  5227                           ;robot.c: 109: ser_putch(turnhighByte);
  5228  0762  1683               	bsf	status, 5	;RP0=1, select bank1
  5229  0763  1303               	bcf	status, 6	;RP1=0, select bank1
  5230  0764  085A               	movf	(_turnhighByte)^080h,w
  5231  0765  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5232                           	line	111
  5233                           ;robot.c: 111: ser_putch(turnlowByte);
  5234  076A  1683               	bsf	status, 5	;RP0=1, select bank1
  5235  076B  1303               	bcf	status, 6	;RP1=0, select bank1
  5236  076C  085B               	movf	(_turnlowByte)^080h,w
  5237  076D  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5238                           	line	113
  5239                           ;robot.c: 113: ser_putch(137);
  5240  0772  3089               	movlw	(089h)
  5241  0773  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5242                           	line	115
  5243                           ;robot.c: 115: ser_putch(0);
  5244  0778  3000               	movlw	(0)
  5245  0779  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5246                           	line	117
  5247                           ;robot.c: 117: ser_putch(0);
  5248  077E  3000               	movlw	(0)
  5249  077F  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5250                           	line	119
  5251                           ;robot.c: 119: ser_putch(0);
  5252  0784  3000               	movlw	(0)
  5253  0785  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5254                           	line	121
  5255                           ;robot.c: 121: ser_putch(0);
  5256  078A  3000               	movlw	(0)
  5257  078B  120A  158A  22CC   	fcall	_ser_putch
              120A  118A         
  5258                           	line	122
  5259                           	
  5260  0790                     l6713:	
  5261  0790  0008               	return
  5262                           	opt stack 0
  5263                           GLOBAL	__end_of_robotTurn
  5264  0791                     	__end_of_robotTurn:
  5265 ;; =============== function _robotTurn ends ============
  5266                           
  5267                           	signat	_robotTurn,4216
  5268                           	global	_robotMove
  5269                           psect	text891,local,class=CODE,delta=2
  5270                           global __ptext891
  5271  0F78                     __ptext891:
  5272                           
  5273 ;; *************** function _robotMove *****************
  5274 ;; Defined at:
  5275 ;;		line 31 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  distance        2    2[BANK0 ] int 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;		None               void
  5282 ;; Registers used:
  5283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5289 ;;      Params:         0       2       0       0       0
  5290 ;;      Locals:         0       0       0       0       0
  5291 ;;      Temps:          0       1       0       0       0
  5292 ;;      Totals:         0       3       0       0       0
  5293 ;;Total ram usage:        3 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    4
  5296 ;; This function calls:
  5297 ;;		_ser_putch
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           psect	text891
  5303                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5304                           	line	31
  5305                           	global	__size_of_robotMove
  5306  0088                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5307                           	
  5308  0F78                     _robotMove:	
  5309                           	opt	stack 3
  5310                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5311                           	line	33
  5312                           	
  5313  0F78                     l10618:	
  5314                           ;robot.c: 33: lowByte = (unsigned char) (distance) ;
  5315  0F78  1283               	bcf	status, 5	;RP0=0, select bank0
  5316  0F79  1303               	bcf	status, 6	;RP1=0, select bank0
  5317  0F7A  0822               	movf	(robotMove@distance),w
  5318  0F7B  00A4               	movwf	(??_robotMove+0)+0
  5319  0F7C  0824               	movf	(??_robotMove+0)+0,w
  5320  0F7D  1683               	bsf	status, 5	;RP0=1, select bank1
  5321  0F7E  1303               	bcf	status, 6	;RP1=0, select bank1
  5322  0F7F  00D7               	movwf	(_lowByte)^080h
  5323                           	line	34
  5324                           	
  5325  0F80                     l10620:	
  5326                           ;robot.c: 34: highByte = (unsigned char) (distance >> 8);
  5327  0F80  1283               	bcf	status, 5	;RP0=0, select bank0
  5328  0F81  1303               	bcf	status, 6	;RP1=0, select bank0
  5329  0F82  0823               	movf	(robotMove@distance+1),w
  5330  0F83  00A4               	movwf	(??_robotMove+0)+0
  5331  0F84  0824               	movf	(??_robotMove+0)+0,w
  5332  0F85  1683               	bsf	status, 5	;RP0=1, select bank1
  5333  0F86  1303               	bcf	status, 6	;RP1=0, select bank1
  5334  0F87  00D6               	movwf	(_highByte)^080h
  5335                           	line	35
  5336                           	
  5337  0F88                     l10622:	
  5338                           ;robot.c: 35: if (distance >= 0)
  5339  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  5340  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  5341  0F8A  1BA3               	btfsc	(robotMove@distance+1),7
  5342  0F8B  2F8D               	goto	u4201
  5343  0F8C  2F8E               	goto	u4200
  5344  0F8D                     u4201:
  5345  0F8D  2FAD               	goto	l10626
  5346  0F8E                     u4200:
  5347                           	line	37
  5348                           	
  5349  0F8E                     l10624:	
  5350                           ;robot.c: 36: {
  5351                           ;robot.c: 37: ser_putch(137);
  5352  0F8E  3089               	movlw	(089h)
  5353  0F8F  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5354                           	line	39
  5355                           ;robot.c: 39: ser_putch(0);
  5356  0F94  3000               	movlw	(0)
  5357  0F95  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5358                           	line	41
  5359                           ;robot.c: 41: ser_putch(200);
  5360  0F9A  30C8               	movlw	(0C8h)
  5361  0F9B  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5362                           	line	43
  5363                           ;robot.c: 43: ser_putch(128);
  5364  0FA0  3080               	movlw	(080h)
  5365  0FA1  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5366                           	line	45
  5367                           ;robot.c: 45: ser_putch(0);
  5368  0FA6  3000               	movlw	(0)
  5369  0FA7  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5370                           	line	46
  5371                           ;robot.c: 46: }
  5372  0FAC  2FCB               	goto	l6707
  5373                           	line	47
  5374                           	
  5375  0FAD                     l6706:	
  5376                           	line	49
  5377                           	
  5378  0FAD                     l10626:	
  5379                           ;robot.c: 47: else
  5380                           ;robot.c: 48: {
  5381                           ;robot.c: 49: ser_putch(137);
  5382  0FAD  3089               	movlw	(089h)
  5383  0FAE  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5384                           	line	51
  5385                           ;robot.c: 51: ser_putch(0xff);
  5386  0FB3  30FF               	movlw	(0FFh)
  5387  0FB4  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5388                           	line	53
  5389                           ;robot.c: 53: ser_putch(0x38);
  5390  0FB9  3038               	movlw	(038h)
  5391  0FBA  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5392                           	line	55
  5393                           ;robot.c: 55: ser_putch(128);
  5394  0FBF  3080               	movlw	(080h)
  5395  0FC0  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5396                           	line	57
  5397                           ;robot.c: 57: ser_putch(0);
  5398  0FC5  3000               	movlw	(0)
  5399  0FC6  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5400                           	line	58
  5401                           	
  5402  0FCB                     l6707:	
  5403                           	line	59
  5404                           ;robot.c: 58: }
  5405                           ;robot.c: 59: ser_putch(156);
  5406  0FCB  309C               	movlw	(09Ch)
  5407  0FCC  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5408                           	line	61
  5409                           ;robot.c: 61: ser_putch(highByte);
  5410  0FD1  1683               	bsf	status, 5	;RP0=1, select bank1
  5411  0FD2  1303               	bcf	status, 6	;RP1=0, select bank1
  5412  0FD3  0856               	movf	(_highByte)^080h,w
  5413  0FD4  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5414                           	line	63
  5415                           ;robot.c: 63: ser_putch(lowByte);
  5416  0FD9  1683               	bsf	status, 5	;RP0=1, select bank1
  5417  0FDA  1303               	bcf	status, 6	;RP1=0, select bank1
  5418  0FDB  0857               	movf	(_lowByte)^080h,w
  5419  0FDC  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5420                           	line	65
  5421                           ;robot.c: 65: ser_putch(137);
  5422  0FE1  3089               	movlw	(089h)
  5423  0FE2  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5424                           	line	67
  5425                           ;robot.c: 67: ser_putch(0);
  5426  0FE7  3000               	movlw	(0)
  5427  0FE8  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5428                           	line	69
  5429                           ;robot.c: 69: ser_putch(0);
  5430  0FED  3000               	movlw	(0)
  5431  0FEE  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5432                           	line	71
  5433                           ;robot.c: 71: ser_putch(0);
  5434  0FF3  3000               	movlw	(0)
  5435  0FF4  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5436                           	line	73
  5437                           ;robot.c: 73: ser_putch(0);
  5438  0FF9  3000               	movlw	(0)
  5439  0FFA  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5440                           	line	75
  5441                           	
  5442  0FFF                     l6708:	
  5443  0FFF  0008               	return
  5444                           	opt stack 0
  5445                           GLOBAL	__end_of_robotMove
  5446  1000                     	__end_of_robotMove:
  5447 ;; =============== function _robotMove ends ============
  5448                           
  5449                           	signat	_robotMove,4216
  5450                           	global	_rotate
  5451                           psect	text892,local,class=CODE,delta=2
  5452                           global __ptext892
  5453  0DF1                     __ptext892:
  5454                           
  5455 ;; *************** function _rotate *****************
  5456 ;; Defined at:
  5457 ;;		line 48 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5460 ;;  direction       1    5[BANK0 ] unsigned char 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  i               2    8[BANK0 ] unsigned int 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;		None               void
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       3       0       0       0
  5473 ;;      Locals:         0       2       0       0       0
  5474 ;;      Temps:          0       2       0       0       0
  5475 ;;      Totals:         0       7       0       0       0
  5476 ;;Total ram usage:        7 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    4
  5479 ;; This function calls:
  5480 ;;		_spi_transfer
  5481 ;; This function is called by:
  5482 ;;		_calibrateIR
  5483 ;;		_scan360
  5484 ;;		_main
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           psect	text892
  5488                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  5489                           	line	48
  5490                           	global	__size_of_rotate
  5491  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5492                           	
  5493  0DF1                     _rotate:	
  5494                           	opt	stack 3
  5495                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5496                           	line	50
  5497                           	
  5498  0DF1                     l10590:	
  5499                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5500  0DF1  1283               	bcf	status, 5	;RP0=0, select bank0
  5501  0DF2  1303               	bcf	status, 6	;RP1=0, select bank0
  5502  0DF3  1407               	bsf	(56/8),(56)&7
  5503  0DF4  1487               	bsf	(57/8),(57)&7
  5504                           	line	51
  5505                           	
  5506  0DF5                     l10592:	
  5507                           ;steppermotor.c: 51: if (direction == 0)
  5508  0DF5  08A5               	movf	(rotate@direction),f
  5509  0DF6  1D03               	skipz
  5510  0DF7  2DF9               	goto	u4181
  5511  0DF8  2DFA               	goto	u4180
  5512  0DF9                     u4181:
  5513  0DF9  2E01               	goto	l10596
  5514  0DFA                     u4180:
  5515                           	line	52
  5516                           	
  5517  0DFA                     l10594:	
  5518                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5519  0DFA  300F               	movlw	(0Fh)
  5520  0DFB  120A  158A  2261   	fcall	_spi_transfer
              120A  158A         
  5521  0E00  2E08               	goto	l10598
  5522                           	line	53
  5523                           	
  5524  0E01                     l3682:	
  5525                           	line	54
  5526                           	
  5527  0E01                     l10596:	
  5528                           ;steppermotor.c: 53: else
  5529                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5530  0E01  300D               	movlw	(0Dh)
  5531  0E02  120A  158A  2261   	fcall	_spi_transfer
              120A  158A         
  5532  0E07  2E08               	goto	l10598
  5533                           	
  5534  0E08                     l3683:	
  5535                           	line	55
  5536                           	
  5537  0E08                     l10598:	
  5538                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5539  0E08  1283               	bcf	status, 5	;RP0=0, select bank0
  5540  0E09  1303               	bcf	status, 6	;RP1=0, select bank0
  5541  0E0A  1007               	bcf	(56/8),(56)&7
  5542                           	
  5543  0E0B                     l10600:	
  5544  0E0B  1087               	bcf	(57/8),(57)&7
  5545                           	line	56
  5546                           	
  5547  0E0C                     l10602:	
  5548                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5549  0E0C  01A8               	clrf	(rotate@i)
  5550  0E0D  01A9               	clrf	(rotate@i+1)
  5551  0E0E  2E25               	goto	l3684
  5552                           	line	57
  5553                           	
  5554  0E0F                     l3685:	
  5555                           	line	58
  5556                           ;steppermotor.c: 57: {
  5557                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5558  0E0F  1507               	bsf	(58/8),(58)&7
  5559  0E10  0000               	nop
  5560  0E11  1283               	bcf	status, 5	;RP0=0, select bank0
  5561  0E12  1303               	bcf	status, 6	;RP1=0, select bank0
  5562  0E13  1107               	bcf	(58/8),(58)&7
  5563                           	line	59
  5564                           	
  5565  0E14                     l10604:	
  5566                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5567                           	opt asmopt_off
  5568  0E14  3062               movlw	98
  5569  0E15  00A7               movwf	((??_rotate+0)+0+1),f
  5570  0E16  3065               	movlw	101
  5571  0E17  00A6               movwf	((??_rotate+0)+0),f
  5572  0E18                     u4587:
  5573  0E18  0BA6               	decfsz	((??_rotate+0)+0),f
  5574  0E19  2E18               	goto	u4587
  5575  0E1A  0BA7               	decfsz	((??_rotate+0)+0+1),f
  5576  0E1B  2E18               	goto	u4587
  5577  0E1C  2E1D               	nop2
  5578                           opt asmopt_on
  5579                           
  5580                           	line	56
  5581  0E1D  3001               	movlw	low(01h)
  5582  0E1E  1283               	bcf	status, 5	;RP0=0, select bank0
  5583  0E1F  1303               	bcf	status, 6	;RP1=0, select bank0
  5584  0E20  07A8               	addwf	(rotate@i),f
  5585  0E21  1803               	skipnc
  5586  0E22  0AA9               	incf	(rotate@i+1),f
  5587  0E23  3000               	movlw	high(01h)
  5588  0E24  07A9               	addwf	(rotate@i+1),f
  5589                           	
  5590  0E25                     l3684:	
  5591  0E25  0824               	movf	(rotate@numsteps+1),w
  5592  0E26  0229               	subwf	(rotate@i+1),w
  5593  0E27  1D03               	skipz
  5594  0E28  2E2B               	goto	u4195
  5595  0E29  0823               	movf	(rotate@numsteps),w
  5596  0E2A  0228               	subwf	(rotate@i),w
  5597  0E2B                     u4195:
  5598  0E2B  1C03               	skipc
  5599  0E2C  2E2E               	goto	u4191
  5600  0E2D  2E2F               	goto	u4190
  5601  0E2E                     u4191:
  5602  0E2E  2E0F               	goto	l3685
  5603  0E2F                     u4190:
  5604                           	
  5605  0E2F                     l3686:	
  5606                           	line	61
  5607                           ;steppermotor.c: 60: }
  5608                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5609  0E2F  1407               	bsf	(56/8),(56)&7
  5610  0E30  1487               	bsf	(57/8),(57)&7
  5611                           	line	62
  5612                           	
  5613  0E31                     l10606:	
  5614                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5615  0E31  3000               	movlw	(0)
  5616  0E32  120A  158A  2261   	fcall	_spi_transfer
              120A  158A         
  5617                           	line	63
  5618                           	
  5619  0E37                     l10608:	
  5620                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5621  0E37  1283               	bcf	status, 5	;RP0=0, select bank0
  5622  0E38  1303               	bcf	status, 6	;RP1=0, select bank0
  5623  0E39  1007               	bcf	(56/8),(56)&7
  5624                           	
  5625  0E3A                     l10610:	
  5626  0E3A  1087               	bcf	(57/8),(57)&7
  5627                           	line	64
  5628                           	
  5629  0E3B                     l10612:	
  5630                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5631  0E3B  1507               	bsf	(58/8),(58)&7
  5632                           	
  5633  0E3C                     l10614:	
  5634  0E3C  0000               	nop
  5635                           	
  5636  0E3D                     l10616:	
  5637  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5638  0E3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5639  0E3F  1107               	bcf	(58/8),(58)&7
  5640                           	line	65
  5641                           	
  5642  0E40                     l3687:	
  5643  0E40  0008               	return
  5644                           	opt stack 0
  5645                           GLOBAL	__end_of_rotate
  5646  0E41                     	__end_of_rotate:
  5647 ;; =============== function _rotate ends ============
  5648                           
  5649                           	signat	_rotate,8312
  5650                           	global	_robo_init
  5651                           psect	text893,local,class=CODE,delta=2
  5652                           global __ptext893
  5653  0A1F                     __ptext893:
  5654                           
  5655 ;; *************** function _robo_init *****************
  5656 ;; Defined at:
  5657 ;;		line 9 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;		None               void
  5664 ;; Registers used:
  5665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0
  5674 ;;      Totals:         0       0       0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    4
  5678 ;; This function calls:
  5679 ;;		_ser_putch
  5680 ;; This function is called by:
  5681 ;;		_init
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           psect	text893
  5685                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  5686                           	line	9
  5687                           	global	__size_of_robo_init
  5688  000D                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5689                           	
  5690  0A1F                     _robo_init:	
  5691                           	opt	stack 2
  5692                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5693                           	line	10
  5694                           	
  5695  0A1F                     l10588:	
  5696                           ;robot.c: 10: ser_putch(128);
  5697  0A1F  3080               	movlw	(080h)
  5698  0A20  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5699                           	line	11
  5700                           ;robot.c: 11: ser_putch(132);
  5701  0A25  3084               	movlw	(084h)
  5702  0A26  120A  158A  22CC   	fcall	_ser_putch
              120A  158A         
  5703                           	line	15
  5704                           	
  5705  0A2B                     l6697:	
  5706  0A2B  0008               	return
  5707                           	opt stack 0
  5708                           GLOBAL	__end_of_robo_init
  5709  0A2C                     	__end_of_robo_init:
  5710 ;; =============== function _robo_init ends ============
  5711                           
  5712                           	signat	_robo_init,88
  5713                           	global	_lcd_write_data
  5714                           psect	text894,local,class=CODE,delta=2
  5715                           global __ptext894
  5716  0A3B                     __ptext894:
  5717                           
  5718 ;; *************** function _lcd_write_data *****************
  5719 ;; Defined at:
  5720 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  databyte        1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  databyte        1    2[BANK0 ] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;		None               void
  5727 ;; Registers used:
  5728 ;;		wreg
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         0       1       0       0       0
  5736 ;;      Temps:          0       2       0       0       0
  5737 ;;      Totals:         0       3       0       0       0
  5738 ;;Total ram usage:        3 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    3
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_lcd_write_string
  5745 ;;		_lcd_write_2_digit_bcd
  5746 ;;		_lcd_write_3_digit_bcd
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           psect	text894
  5750                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5751                           	line	30
  5752                           	global	__size_of_lcd_write_data
  5753  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5754                           	
  5755  0A3B                     _lcd_write_data:	
  5756                           	opt	stack 1
  5757                           ; Regs used in _lcd_write_data: [wreg]
  5758                           ;lcd_write_data@databyte stored from wreg
  5759  0A3B  1283               	bcf	status, 5	;RP0=0, select bank0
  5760  0A3C  1303               	bcf	status, 6	;RP1=0, select bank0
  5761  0A3D  00A2               	movwf	(lcd_write_data@databyte)
  5762                           	line	31
  5763                           	
  5764  0A3E                     l10580:	
  5765                           ;lcd.c: 31: RE2 = 0;
  5766  0A3E  1109               	bcf	(74/8),(74)&7
  5767                           	line	32
  5768                           ;lcd.c: 32: RE1 = 0;
  5769  0A3F  1089               	bcf	(73/8),(73)&7
  5770                           	line	33
  5771                           ;lcd.c: 33: RE0 = 1;
  5772  0A40  1409               	bsf	(72/8),(72)&7
  5773                           	line	34
  5774                           	
  5775  0A41                     l10582:	
  5776                           ;lcd.c: 34: PORTD = databyte;
  5777  0A41  0822               	movf	(lcd_write_data@databyte),w
  5778  0A42  0088               	movwf	(8)	;volatile
  5779                           	line	35
  5780                           	
  5781  0A43                     l10584:	
  5782                           ;lcd.c: 35: RE2 = 1;
  5783  0A43  1509               	bsf	(74/8),(74)&7
  5784                           	line	36
  5785                           	
  5786  0A44                     l10586:	
  5787                           ;lcd.c: 36: RE2 = 0;
  5788  0A44  1109               	bcf	(74/8),(74)&7
  5789                           	line	37
  5790                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5791                           	opt asmopt_off
  5792  0A45  3007               movlw	7
  5793  0A46  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  5794  0A47  307D               	movlw	125
  5795  0A48  00A0               movwf	((??_lcd_write_data+0)+0),f
  5796  0A49                     u4597:
  5797  0A49  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  5798  0A4A  2A49               	goto	u4597
  5799  0A4B  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  5800  0A4C  2A49               	goto	u4597
  5801                           opt asmopt_on
  5802                           
  5803                           	line	38
  5804                           	
  5805  0A4D                     l1402:	
  5806  0A4D  0008               	return
  5807                           	opt stack 0
  5808                           GLOBAL	__end_of_lcd_write_data
  5809  0A4E                     	__end_of_lcd_write_data:
  5810 ;; =============== function _lcd_write_data ends ============
  5811                           
  5812                           	signat	_lcd_write_data,4216
  5813                           	global	_lcd_write_control
  5814                           psect	text895,local,class=CODE,delta=2
  5815                           global __ptext895
  5816  0A75                     __ptext895:
  5817                           
  5818 ;; *************** function _lcd_write_control *****************
  5819 ;; Defined at:
  5820 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  databyte        1    wreg     unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  databyte        1    2[BANK0 ] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		wreg
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5834 ;;      Params:         0       0       0       0       0
  5835 ;;      Locals:         0       1       0       0       0
  5836 ;;      Temps:          0       2       0       0       0
  5837 ;;      Totals:         0       3       0       0       0
  5838 ;;Total ram usage:        3 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    3
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_lcd_set_cursor
  5845 ;;		_lcd_init
  5846 ;;		_UpdateDisplay
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           psect	text895
  5850                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5851                           	line	18
  5852                           	global	__size_of_lcd_write_control
  5853  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  5854                           	
  5855  0A75                     _lcd_write_control:	
  5856                           	opt	stack 1
  5857                           ; Regs used in _lcd_write_control: [wreg]
  5858                           ;lcd_write_control@databyte stored from wreg
  5859  0A75  1283               	bcf	status, 5	;RP0=0, select bank0
  5860  0A76  1303               	bcf	status, 6	;RP1=0, select bank0
  5861  0A77  00A2               	movwf	(lcd_write_control@databyte)
  5862                           	line	19
  5863                           	
  5864  0A78                     l10572:	
  5865                           ;lcd.c: 19: RE2 = 0;
  5866  0A78  1109               	bcf	(74/8),(74)&7
  5867                           	line	20
  5868                           ;lcd.c: 20: RE1 = 0;
  5869  0A79  1089               	bcf	(73/8),(73)&7
  5870                           	line	21
  5871                           ;lcd.c: 21: RE0 = 0;
  5872  0A7A  1009               	bcf	(72/8),(72)&7
  5873                           	line	22
  5874                           	
  5875  0A7B                     l10574:	
  5876                           ;lcd.c: 22: PORTD = databyte;
  5877  0A7B  0822               	movf	(lcd_write_control@databyte),w
  5878  0A7C  0088               	movwf	(8)	;volatile
  5879                           	line	23
  5880                           	
  5881  0A7D                     l10576:	
  5882                           ;lcd.c: 23: RE2 = 1;
  5883  0A7D  1509               	bsf	(74/8),(74)&7
  5884                           	line	24
  5885                           	
  5886  0A7E                     l10578:	
  5887                           ;lcd.c: 24: RE2 = 0;
  5888  0A7E  1109               	bcf	(74/8),(74)&7
  5889                           	line	25
  5890                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5891                           	opt asmopt_off
  5892  0A7F  300D               movlw	13
  5893  0A80  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  5894  0A81  30FB               	movlw	251
  5895  0A82  00A0               movwf	((??_lcd_write_control+0)+0),f
  5896  0A83                     u4607:
  5897  0A83  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  5898  0A84  2A83               	goto	u4607
  5899  0A85  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  5900  0A86  2A83               	goto	u4607
  5901  0A87  2A88               	nop2
  5902                           opt asmopt_on
  5903                           
  5904                           	line	26
  5905                           	
  5906  0A88                     l1399:	
  5907  0A88  0008               	return
  5908                           	opt stack 0
  5909                           GLOBAL	__end_of_lcd_write_control
  5910  0A89                     	__end_of_lcd_write_control:
  5911 ;; =============== function _lcd_write_control ends ============
  5912                           
  5913                           	signat	_lcd_write_control,4216
  5914                           	global	_init_adc
  5915                           psect	text896,local,class=CODE,delta=2
  5916                           global __ptext896
  5917  0A89                     __ptext896:
  5918                           
  5919 ;; *************** function _init_adc *****************
  5920 ;; Defined at:
  5921 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg, status,2
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5935 ;;      Params:         0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0
  5937 ;;      Temps:          0       1       0       0       0
  5938 ;;      Totals:         0       1       0       0       0
  5939 ;;Total ram usage:        1 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    3
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_init
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           psect	text896
  5949                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5950                           	line	46
  5951                           	global	__size_of_init_adc
  5952  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5953                           	
  5954  0A89                     _init_adc:	
  5955                           	opt	stack 3
  5956                           ; Regs used in _init_adc: [wreg+status,2]
  5957                           	line	48
  5958                           	
  5959  0A89                     l10562:	
  5960                           ;adc.c: 48: PORTA = 0;
  5961  0A89  1283               	bcf	status, 5	;RP0=0, select bank0
  5962  0A8A  1303               	bcf	status, 6	;RP1=0, select bank0
  5963  0A8B  0185               	clrf	(5)	;volatile
  5964                           	line	49
  5965                           	
  5966  0A8C                     l10564:	
  5967                           ;adc.c: 49: TRISA = 0b00111111;
  5968  0A8C  303F               	movlw	(03Fh)
  5969  0A8D  1683               	bsf	status, 5	;RP0=1, select bank1
  5970  0A8E  1303               	bcf	status, 6	;RP1=0, select bank1
  5971  0A8F  0085               	movwf	(133)^080h	;volatile
  5972                           	line	52
  5973                           	
  5974  0A90                     l10566:	
  5975                           ;adc.c: 52: ADCON0 = 0b10100001;
  5976  0A90  30A1               	movlw	(0A1h)
  5977  0A91  1283               	bcf	status, 5	;RP0=0, select bank0
  5978  0A92  1303               	bcf	status, 6	;RP1=0, select bank0
  5979  0A93  009F               	movwf	(31)	;volatile
  5980                           	line	53
  5981                           	
  5982  0A94                     l10568:	
  5983                           ;adc.c: 53: ADCON1 = 0b0000010;
  5984  0A94  3002               	movlw	(02h)
  5985  0A95  1683               	bsf	status, 5	;RP0=1, select bank1
  5986  0A96  1303               	bcf	status, 6	;RP1=0, select bank1
  5987  0A97  009F               	movwf	(159)^080h	;volatile
  5988                           	line	55
  5989                           	
  5990  0A98                     l10570:	
  5991                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5992                           	opt asmopt_off
  5993  0A98  3053               movlw	83
  5994  0A99  1283               	bcf	status, 5	;RP0=0, select bank0
  5995  0A9A  1303               	bcf	status, 6	;RP1=0, select bank0
  5996  0A9B  00A0               movwf	(??_init_adc+0)+0,f
  5997  0A9C                     u4617:
  5998  0A9C  0BA0               decfsz	(??_init_adc+0)+0,f
  5999  0A9D  2A9C               	goto	u4617
  6000                           opt asmopt_on
  6001                           
  6002                           	line	57
  6003                           	
  6004  0A9E                     l700:	
  6005  0A9E  0008               	return
  6006                           	opt stack 0
  6007                           GLOBAL	__end_of_init_adc
  6008  0A9F                     	__end_of_init_adc:
  6009 ;; =============== function _init_adc ends ============
  6010                           
  6011                           	signat	_init_adc,88
  6012                           	global	_adc_read_channel
  6013                           psect	text897,local,class=CODE,delta=2
  6014                           global __ptext897
  6015  0C95                     __ptext897:
  6016                           
  6017 ;; *************** function _adc_read_channel *****************
  6018 ;; Defined at:
  6019 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  channel         1    wreg     unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  channel         1    7[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      unsigned char 
  6026 ;; Registers used:
  6027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6033 ;;      Params:         0       0       0       0       0
  6034 ;;      Locals:         0       1       0       0       0
  6035 ;;      Temps:          0       1       0       0       0
  6036 ;;      Totals:         0       2       0       0       0
  6037 ;;Total ram usage:        2 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    4
  6040 ;; This function calls:
  6041 ;;		_adc_read
  6042 ;; This function is called by:
  6043 ;;		_readDistance
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           psect	text897
  6047                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6048                           	line	5
  6049                           	global	__size_of_adc_read_channel
  6050  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6051                           	
  6052  0C95                     _adc_read_channel:	
  6053                           	opt	stack 0
  6054                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6055                           ;adc_read_channel@channel stored from wreg
  6056  0C95  1283               	bcf	status, 5	;RP0=0, select bank0
  6057  0C96  1303               	bcf	status, 6	;RP1=0, select bank0
  6058  0C97  00A7               	movwf	(adc_read_channel@channel)
  6059                           	line	6
  6060                           	
  6061  0C98                     l10546:	
  6062                           ;adc.c: 6: switch(channel)
  6063  0C98  2CB1               	goto	l10554
  6064                           	line	8
  6065                           ;adc.c: 7: {
  6066                           ;adc.c: 8: case 0:
  6067                           	
  6068  0C99                     l690:	
  6069                           	line	9
  6070                           ;adc.c: 9: CHS0 = 0;
  6071  0C99  119F               	bcf	(251/8),(251)&7
  6072                           	line	10
  6073                           ;adc.c: 10: CHS1 = 0;
  6074  0C9A  121F               	bcf	(252/8),(252)&7
  6075                           	line	11
  6076                           ;adc.c: 11: CHS2 = 0;
  6077  0C9B  129F               	bcf	(253/8),(253)&7
  6078                           	line	12
  6079                           ;adc.c: 12: break;
  6080  0C9C  2CC2               	goto	l10556
  6081                           	line	13
  6082                           ;adc.c: 13: case 1:
  6083                           	
  6084  0C9D                     l692:	
  6085                           	line	14
  6086                           ;adc.c: 14: CHS0 = 1;
  6087  0C9D  159F               	bsf	(251/8),(251)&7
  6088                           	line	15
  6089                           ;adc.c: 15: CHS1 = 0;
  6090  0C9E  121F               	bcf	(252/8),(252)&7
  6091                           	line	16
  6092                           ;adc.c: 16: CHS2 = 0;
  6093  0C9F  129F               	bcf	(253/8),(253)&7
  6094                           	line	17
  6095                           ;adc.c: 17: break;
  6096  0CA0  2CC2               	goto	l10556
  6097                           	line	18
  6098                           ;adc.c: 18: case 2:
  6099                           	
  6100  0CA1                     l693:	
  6101                           	line	19
  6102                           ;adc.c: 19: CHS0 = 0;
  6103  0CA1  119F               	bcf	(251/8),(251)&7
  6104                           	line	20
  6105                           ;adc.c: 20: CHS1 = 1;
  6106  0CA2  161F               	bsf	(252/8),(252)&7
  6107                           	line	21
  6108                           ;adc.c: 21: CHS2 = 0;
  6109  0CA3  129F               	bcf	(253/8),(253)&7
  6110                           	line	22
  6111                           ;adc.c: 22: break;
  6112  0CA4  2CC2               	goto	l10556
  6113                           	line	23
  6114                           ;adc.c: 23: case 3:
  6115                           	
  6116  0CA5                     l694:	
  6117                           	line	24
  6118                           ;adc.c: 24: CHS0 = 1;
  6119  0CA5  159F               	bsf	(251/8),(251)&7
  6120                           	line	25
  6121                           ;adc.c: 25: CHS1 = 1;
  6122  0CA6  161F               	bsf	(252/8),(252)&7
  6123                           	line	26
  6124                           ;adc.c: 26: CHS2 = 0;
  6125  0CA7  129F               	bcf	(253/8),(253)&7
  6126                           	line	27
  6127                           ;adc.c: 27: break;
  6128  0CA8  2CC2               	goto	l10556
  6129                           	line	28
  6130                           ;adc.c: 28: case 4:
  6131                           	
  6132  0CA9                     l695:	
  6133                           	line	29
  6134                           ;adc.c: 29: CHS0 = 0;
  6135  0CA9  119F               	bcf	(251/8),(251)&7
  6136                           	line	30
  6137                           ;adc.c: 30: CHS1 = 0;
  6138  0CAA  121F               	bcf	(252/8),(252)&7
  6139                           	line	31
  6140                           ;adc.c: 31: CHS2 = 1;
  6141  0CAB  169F               	bsf	(253/8),(253)&7
  6142                           	line	32
  6143                           ;adc.c: 32: break;
  6144  0CAC  2CC2               	goto	l10556
  6145                           	line	35
  6146                           ;adc.c: 35: default:
  6147                           	
  6148  0CAD                     l696:	
  6149                           	line	36
  6150                           	
  6151  0CAD                     l10548:	
  6152                           ;adc.c: 36: return 0;
  6153  0CAD  3000               	movlw	(0)
  6154  0CAE  2CCF               	goto	l697
  6155                           	
  6156  0CAF                     l10550:	
  6157  0CAF  2CCF               	goto	l697
  6158                           	line	37
  6159                           	
  6160  0CB0                     l10552:	
  6161                           ;adc.c: 37: }
  6162  0CB0  2CC2               	goto	l10556
  6163                           	line	6
  6164                           	
  6165  0CB1                     l689:	
  6166                           	
  6167  0CB1                     l10554:	
  6168  0CB1  0827               	movf	(adc_read_channel@channel),w
  6169                           	; Switch size 1, requested type "space"
  6170                           ; Number of cases is 5, Range of values is 0 to 4
  6171                           ; switch strategies available:
  6172                           ; Name         Instructions Cycles
  6173                           ; simple_byte           16     9 (average)
  6174                           ; direct_byte           23     8 (fixed)
  6175                           ; jumptable            260     6 (fixed)
  6176                           ; rangetable             9     6 (fixed)
  6177                           ; spacedrange           16     9 (fixed)
  6178                           ; locatedrange           5     3 (fixed)
  6179                           ;	Chosen strategy is simple_byte
  6180                           
  6181                           	opt asmopt_off
  6182  0CB2  3A00               	xorlw	0^0	; case 0
  6183  0CB3  1903               	skipnz
  6184  0CB4  2C99               	goto	l690
  6185  0CB5  3A01               	xorlw	1^0	; case 1
  6186  0CB6  1903               	skipnz
  6187  0CB7  2C9D               	goto	l692
  6188  0CB8  3A03               	xorlw	2^1	; case 2
  6189  0CB9  1903               	skipnz
  6190  0CBA  2CA1               	goto	l693
  6191  0CBB  3A01               	xorlw	3^2	; case 3
  6192  0CBC  1903               	skipnz
  6193  0CBD  2CA5               	goto	l694
  6194  0CBE  3A07               	xorlw	4^3	; case 4
  6195  0CBF  1903               	skipnz
  6196  0CC0  2CA9               	goto	l695
  6197  0CC1  2CAD               	goto	l10548
  6198                           	opt asmopt_on
  6199                           
  6200                           	line	37
  6201                           	
  6202  0CC2                     l691:	
  6203                           	line	39
  6204                           	
  6205  0CC2                     l10556:	
  6206                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6207                           	opt asmopt_off
  6208  0CC2  3053               movlw	83
  6209  0CC3  00A6               movwf	(??_adc_read_channel+0)+0,f
  6210  0CC4                     u4627:
  6211  0CC4  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6212  0CC5  2CC4               	goto	u4627
  6213                           opt asmopt_on
  6214                           
  6215                           	line	41
  6216                           	
  6217  0CC6                     l10558:	
  6218                           ;adc.c: 41: return adc_read();
  6219  0CC6  120A  158A  235B   	fcall	_adc_read
              120A  158A         
  6220  0CCB  1283               	bcf	status, 5	;RP0=0, select bank0
  6221  0CCC  1303               	bcf	status, 6	;RP1=0, select bank0
  6222  0CCD  0820               	movf	(0+(?_adc_read)),w
  6223  0CCE  2CCF               	goto	l697
  6224                           	
  6225  0CCF                     l10560:	
  6226                           	line	43
  6227                           	
  6228  0CCF                     l697:	
  6229  0CCF  0008               	return
  6230                           	opt stack 0
  6231                           GLOBAL	__end_of_adc_read_channel
  6232  0CD0                     	__end_of_adc_read_channel:
  6233 ;; =============== function _adc_read_channel ends ============
  6234                           
  6235                           	signat	_adc_read_channel,4217
  6236                           	global	___awmod
  6237                           psect	text898,local,class=CODE,delta=2
  6238                           global __ptext898
  6239  0791                     __ptext898:
  6240                           
  6241 ;; *************** function ___awmod *****************
  6242 ;; Defined at:
  6243 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  divisor         2    0[BANK0 ] int 
  6246 ;;  dividend        2    2[BANK0 ] int 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  sign            1    6[BANK0 ] unsigned char 
  6249 ;;  counter         1    5[BANK0 ] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  2    0[BANK0 ] int 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6259 ;;      Params:         0       4       0       0       0
  6260 ;;      Locals:         0       2       0       0       0
  6261 ;;      Temps:          0       1       0       0       0
  6262 ;;      Totals:         0       7       0       0       0
  6263 ;;Total ram usage:        7 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    3
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_UpdateDisplay
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           psect	text898
  6273                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6274                           	line	5
  6275                           	global	__size_of___awmod
  6276  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6277                           	
  6278  0791                     ___awmod:	
  6279                           	opt	stack 2
  6280                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6281                           	line	8
  6282                           	
  6283  0791                     l10490:	
  6284  0791  1283               	bcf	status, 5	;RP0=0, select bank0
  6285  0792  1303               	bcf	status, 6	;RP1=0, select bank0
  6286  0793  01A6               	clrf	(___awmod@sign)
  6287                           	line	9
  6288  0794  1FA3               	btfss	(___awmod@dividend+1),7
  6289  0795  2F97               	goto	u4031
  6290  0796  2F98               	goto	u4030
  6291  0797                     u4031:
  6292  0797  2FA1               	goto	l10494
  6293  0798                     u4030:
  6294                           	line	10
  6295                           	
  6296  0798                     l10492:	
  6297  0798  09A2               	comf	(___awmod@dividend),f
  6298  0799  09A3               	comf	(___awmod@dividend+1),f
  6299  079A  0AA2               	incf	(___awmod@dividend),f
  6300  079B  1903               	skipnz
  6301  079C  0AA3               	incf	(___awmod@dividend+1),f
  6302                           	line	11
  6303  079D  01A6               	clrf	(___awmod@sign)
  6304  079E  1403               	bsf	status,0
  6305  079F  0DA6               	rlf	(___awmod@sign),f
  6306  07A0  2FA1               	goto	l10494
  6307                           	line	12
  6308                           	
  6309  07A1                     l7632:	
  6310                           	line	13
  6311                           	
  6312  07A1                     l10494:	
  6313  07A1  1FA1               	btfss	(___awmod@divisor+1),7
  6314  07A2  2FA4               	goto	u4041
  6315  07A3  2FA5               	goto	u4040
  6316  07A4                     u4041:
  6317  07A4  2FAB               	goto	l10498
  6318  07A5                     u4040:
  6319                           	line	14
  6320                           	
  6321  07A5                     l10496:	
  6322  07A5  09A0               	comf	(___awmod@divisor),f
  6323  07A6  09A1               	comf	(___awmod@divisor+1),f
  6324  07A7  0AA0               	incf	(___awmod@divisor),f
  6325  07A8  1903               	skipnz
  6326  07A9  0AA1               	incf	(___awmod@divisor+1),f
  6327  07AA  2FAB               	goto	l10498
  6328                           	
  6329  07AB                     l7633:	
  6330                           	line	15
  6331                           	
  6332  07AB                     l10498:	
  6333  07AB  0821               	movf	(___awmod@divisor+1),w
  6334  07AC  0420               	iorwf	(___awmod@divisor),w
  6335  07AD  1903               	skipnz
  6336  07AE  2FB0               	goto	u4051
  6337  07AF  2FB1               	goto	u4050
  6338  07B0                     u4051:
  6339  07B0  2FE7               	goto	l10516
  6340  07B1                     u4050:
  6341                           	line	16
  6342                           	
  6343  07B1                     l10500:	
  6344  07B1  01A5               	clrf	(___awmod@counter)
  6345  07B2  1403               	bsf	status,0
  6346  07B3  0DA5               	rlf	(___awmod@counter),f
  6347                           	line	17
  6348  07B4  2FC1               	goto	l10506
  6349                           	
  6350  07B5                     l7636:	
  6351                           	line	18
  6352                           	
  6353  07B5                     l10502:	
  6354  07B5  3001               	movlw	01h
  6355                           	
  6356  07B6                     u4065:
  6357  07B6  1003               	clrc
  6358  07B7  0DA0               	rlf	(___awmod@divisor),f
  6359  07B8  0DA1               	rlf	(___awmod@divisor+1),f
  6360  07B9  3EFF               	addlw	-1
  6361  07BA  1D03               	skipz
  6362  07BB  2FB6               	goto	u4065
  6363                           	line	19
  6364                           	
  6365  07BC                     l10504:	
  6366  07BC  3001               	movlw	(01h)
  6367  07BD  00A4               	movwf	(??___awmod+0)+0
  6368  07BE  0824               	movf	(??___awmod+0)+0,w
  6369  07BF  07A5               	addwf	(___awmod@counter),f
  6370  07C0  2FC1               	goto	l10506
  6371                           	line	20
  6372                           	
  6373  07C1                     l7635:	
  6374                           	line	17
  6375                           	
  6376  07C1                     l10506:	
  6377  07C1  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6378  07C2  2FC4               	goto	u4071
  6379  07C3  2FC5               	goto	u4070
  6380  07C4                     u4071:
  6381  07C4  2FB5               	goto	l10502
  6382  07C5                     u4070:
  6383  07C5  2FC7               	goto	l10508
  6384                           	
  6385  07C6                     l7637:	
  6386  07C6  2FC7               	goto	l10508
  6387                           	line	21
  6388                           	
  6389  07C7                     l7638:	
  6390                           	line	22
  6391                           	
  6392  07C7                     l10508:	
  6393  07C7  0821               	movf	(___awmod@divisor+1),w
  6394  07C8  0223               	subwf	(___awmod@dividend+1),w
  6395  07C9  1D03               	skipz
  6396  07CA  2FCD               	goto	u4085
  6397  07CB  0820               	movf	(___awmod@divisor),w
  6398  07CC  0222               	subwf	(___awmod@dividend),w
  6399  07CD                     u4085:
  6400  07CD  1C03               	skipc
  6401  07CE  2FD0               	goto	u4081
  6402  07CF  2FD1               	goto	u4080
  6403  07D0                     u4081:
  6404  07D0  2FD8               	goto	l10512
  6405  07D1                     u4080:
  6406                           	line	23
  6407                           	
  6408  07D1                     l10510:	
  6409  07D1  0820               	movf	(___awmod@divisor),w
  6410  07D2  02A2               	subwf	(___awmod@dividend),f
  6411  07D3  0821               	movf	(___awmod@divisor+1),w
  6412  07D4  1C03               	skipc
  6413  07D5  03A3               	decf	(___awmod@dividend+1),f
  6414  07D6  02A3               	subwf	(___awmod@dividend+1),f
  6415  07D7  2FD8               	goto	l10512
  6416                           	
  6417  07D8                     l7639:	
  6418                           	line	24
  6419                           	
  6420  07D8                     l10512:	
  6421  07D8  3001               	movlw	01h
  6422                           	
  6423  07D9                     u4095:
  6424  07D9  1003               	clrc
  6425  07DA  0CA1               	rrf	(___awmod@divisor+1),f
  6426  07DB  0CA0               	rrf	(___awmod@divisor),f
  6427  07DC  3EFF               	addlw	-1
  6428  07DD  1D03               	skipz
  6429  07DE  2FD9               	goto	u4095
  6430                           	line	25
  6431                           	
  6432  07DF                     l10514:	
  6433  07DF  3001               	movlw	low(01h)
  6434  07E0  02A5               	subwf	(___awmod@counter),f
  6435  07E1  1D03               	btfss	status,2
  6436  07E2  2FE4               	goto	u4101
  6437  07E3  2FE5               	goto	u4100
  6438  07E4                     u4101:
  6439  07E4  2FC7               	goto	l10508
  6440  07E5                     u4100:
  6441  07E5  2FE7               	goto	l10516
  6442                           	
  6443  07E6                     l7640:	
  6444  07E6  2FE7               	goto	l10516
  6445                           	line	26
  6446                           	
  6447  07E7                     l7634:	
  6448                           	line	27
  6449                           	
  6450  07E7                     l10516:	
  6451  07E7  0826               	movf	(___awmod@sign),w
  6452  07E8  1D03               	skipz
  6453  07E9  2FEB               	goto	u4110
  6454  07EA  2FF1               	goto	l10520
  6455  07EB                     u4110:
  6456                           	line	28
  6457                           	
  6458  07EB                     l10518:	
  6459  07EB  09A2               	comf	(___awmod@dividend),f
  6460  07EC  09A3               	comf	(___awmod@dividend+1),f
  6461  07ED  0AA2               	incf	(___awmod@dividend),f
  6462  07EE  1903               	skipnz
  6463  07EF  0AA3               	incf	(___awmod@dividend+1),f
  6464  07F0  2FF1               	goto	l10520
  6465                           	
  6466  07F1                     l7641:	
  6467                           	line	29
  6468                           	
  6469  07F1                     l10520:	
  6470  07F1  0823               	movf	(___awmod@dividend+1),w
  6471  07F2  01A1               	clrf	(?___awmod+1)
  6472  07F3  07A1               	addwf	(?___awmod+1)
  6473  07F4  0822               	movf	(___awmod@dividend),w
  6474  07F5  01A0               	clrf	(?___awmod)
  6475  07F6  07A0               	addwf	(?___awmod)
  6476                           
  6477  07F7  2FF8               	goto	l7642
  6478                           	
  6479  07F8                     l10522:	
  6480                           	line	30
  6481                           	
  6482  07F8                     l7642:	
  6483  07F8  0008               	return
  6484                           	opt stack 0
  6485                           GLOBAL	__end_of___awmod
  6486  07F9                     	__end_of___awmod:
  6487 ;; =============== function ___awmod ends ============
  6488                           
  6489                           	signat	___awmod,8314
  6490                           	global	___lwmod
  6491                           psect	text899,local,class=CODE,delta=2
  6492                           global __ptext899
  6493  0D14                     __ptext899:
  6494                           
  6495 ;; *************** function ___lwmod *****************
  6496 ;; Defined at:
  6497 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  divisor         2   14[BANK0 ] unsigned int 
  6500 ;;  dividend        2   16[BANK0 ] unsigned int 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  counter         1   19[BANK0 ] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  2   14[BANK0 ] unsigned int 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6512 ;;      Params:         0       4       0       0       0
  6513 ;;      Locals:         0       1       0       0       0
  6514 ;;      Temps:          0       1       0       0       0
  6515 ;;      Totals:         0       6       0       0       0
  6516 ;;Total ram usage:        6 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    3
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_sprintf
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           psect	text899
  6526                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6527                           	line	5
  6528                           	global	__size_of___lwmod
  6529  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6530                           	
  6531  0D14                     ___lwmod:	
  6532                           	opt	stack 1
  6533                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6534                           	line	8
  6535                           	
  6536  0D14                     l10468:	
  6537  0D14  1283               	bcf	status, 5	;RP0=0, select bank0
  6538  0D15  1303               	bcf	status, 6	;RP1=0, select bank0
  6539  0D16  082F               	movf	(___lwmod@divisor+1),w
  6540  0D17  042E               	iorwf	(___lwmod@divisor),w
  6541  0D18  1903               	skipnz
  6542  0D19  2D1B               	goto	u3971
  6543  0D1A  2D1C               	goto	u3970
  6544  0D1B                     u3971:
  6545  0D1B  2D52               	goto	l10486
  6546  0D1C                     u3970:
  6547                           	line	9
  6548                           	
  6549  0D1C                     l10470:	
  6550  0D1C  01B3               	clrf	(___lwmod@counter)
  6551  0D1D  1403               	bsf	status,0
  6552  0D1E  0DB3               	rlf	(___lwmod@counter),f
  6553                           	line	10
  6554  0D1F  2D2C               	goto	l10476
  6555                           	
  6556  0D20                     l7442:	
  6557                           	line	11
  6558                           	
  6559  0D20                     l10472:	
  6560  0D20  3001               	movlw	01h
  6561                           	
  6562  0D21                     u3985:
  6563  0D21  1003               	clrc
  6564  0D22  0DAE               	rlf	(___lwmod@divisor),f
  6565  0D23  0DAF               	rlf	(___lwmod@divisor+1),f
  6566  0D24  3EFF               	addlw	-1
  6567  0D25  1D03               	skipz
  6568  0D26  2D21               	goto	u3985
  6569                           	line	12
  6570                           	
  6571  0D27                     l10474:	
  6572  0D27  3001               	movlw	(01h)
  6573  0D28  00B2               	movwf	(??___lwmod+0)+0
  6574  0D29  0832               	movf	(??___lwmod+0)+0,w
  6575  0D2A  07B3               	addwf	(___lwmod@counter),f
  6576  0D2B  2D2C               	goto	l10476
  6577                           	line	13
  6578                           	
  6579  0D2C                     l7441:	
  6580                           	line	10
  6581                           	
  6582  0D2C                     l10476:	
  6583  0D2C  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  6584  0D2D  2D2F               	goto	u3991
  6585  0D2E  2D30               	goto	u3990
  6586  0D2F                     u3991:
  6587  0D2F  2D20               	goto	l10472
  6588  0D30                     u3990:
  6589  0D30  2D32               	goto	l10478
  6590                           	
  6591  0D31                     l7443:	
  6592  0D31  2D32               	goto	l10478
  6593                           	line	14
  6594                           	
  6595  0D32                     l7444:	
  6596                           	line	15
  6597                           	
  6598  0D32                     l10478:	
  6599  0D32  082F               	movf	(___lwmod@divisor+1),w
  6600  0D33  0231               	subwf	(___lwmod@dividend+1),w
  6601  0D34  1D03               	skipz
  6602  0D35  2D38               	goto	u4005
  6603  0D36  082E               	movf	(___lwmod@divisor),w
  6604  0D37  0230               	subwf	(___lwmod@dividend),w
  6605  0D38                     u4005:
  6606  0D38  1C03               	skipc
  6607  0D39  2D3B               	goto	u4001
  6608  0D3A  2D3C               	goto	u4000
  6609  0D3B                     u4001:
  6610  0D3B  2D43               	goto	l10482
  6611  0D3C                     u4000:
  6612                           	line	16
  6613                           	
  6614  0D3C                     l10480:	
  6615  0D3C  082E               	movf	(___lwmod@divisor),w
  6616  0D3D  02B0               	subwf	(___lwmod@dividend),f
  6617  0D3E  082F               	movf	(___lwmod@divisor+1),w
  6618  0D3F  1C03               	skipc
  6619  0D40  03B1               	decf	(___lwmod@dividend+1),f
  6620  0D41  02B1               	subwf	(___lwmod@dividend+1),f
  6621  0D42  2D43               	goto	l10482
  6622                           	
  6623  0D43                     l7445:	
  6624                           	line	17
  6625                           	
  6626  0D43                     l10482:	
  6627  0D43  3001               	movlw	01h
  6628                           	
  6629  0D44                     u4015:
  6630  0D44  1003               	clrc
  6631  0D45  0CAF               	rrf	(___lwmod@divisor+1),f
  6632  0D46  0CAE               	rrf	(___lwmod@divisor),f
  6633  0D47  3EFF               	addlw	-1
  6634  0D48  1D03               	skipz
  6635  0D49  2D44               	goto	u4015
  6636                           	line	18
  6637                           	
  6638  0D4A                     l10484:	
  6639  0D4A  3001               	movlw	low(01h)
  6640  0D4B  02B3               	subwf	(___lwmod@counter),f
  6641  0D4C  1D03               	btfss	status,2
  6642  0D4D  2D4F               	goto	u4021
  6643  0D4E  2D50               	goto	u4020
  6644  0D4F                     u4021:
  6645  0D4F  2D32               	goto	l10478
  6646  0D50                     u4020:
  6647  0D50  2D52               	goto	l10486
  6648                           	
  6649  0D51                     l7446:	
  6650  0D51  2D52               	goto	l10486
  6651                           	line	19
  6652                           	
  6653  0D52                     l7440:	
  6654                           	line	20
  6655                           	
  6656  0D52                     l10486:	
  6657  0D52  0831               	movf	(___lwmod@dividend+1),w
  6658  0D53  01AF               	clrf	(?___lwmod+1)
  6659  0D54  07AF               	addwf	(?___lwmod+1)
  6660  0D55  0830               	movf	(___lwmod@dividend),w
  6661  0D56  01AE               	clrf	(?___lwmod)
  6662  0D57  07AE               	addwf	(?___lwmod)
  6663                           
  6664  0D58  2D59               	goto	l7447
  6665                           	
  6666  0D59                     l10488:	
  6667                           	line	21
  6668                           	
  6669  0D59                     l7447:	
  6670  0D59  0008               	return
  6671                           	opt stack 0
  6672                           GLOBAL	__end_of___lwmod
  6673  0D5A                     	__end_of___lwmod:
  6674 ;; =============== function ___lwmod ends ============
  6675                           
  6676                           	signat	___lwmod,8314
  6677                           	global	___lwdiv
  6678                           psect	text900,local,class=CODE,delta=2
  6679                           global __ptext900
  6680  0DA1                     __ptext900:
  6681                           
  6682 ;; *************** function ___lwdiv *****************
  6683 ;; Defined at:
  6684 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  divisor         2    6[BANK0 ] unsigned int 
  6687 ;;  dividend        2    8[BANK0 ] unsigned int 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  quotient        2   11[BANK0 ] unsigned int 
  6690 ;;  counter         1   13[BANK0 ] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  2    6[BANK0 ] unsigned int 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6700 ;;      Params:         0       4       0       0       0
  6701 ;;      Locals:         0       3       0       0       0
  6702 ;;      Temps:          0       1       0       0       0
  6703 ;;      Totals:         0       8       0       0       0
  6704 ;;Total ram usage:        8 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    3
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_readAvgDistance
  6711 ;;		_ADCconvert
  6712 ;;		_sprintf
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           psect	text900
  6716                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6717                           	line	5
  6718                           	global	__size_of___lwdiv
  6719  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6720                           	
  6721  0DA1                     ___lwdiv:	
  6722                           	opt	stack 1
  6723                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6724                           	line	9
  6725                           	
  6726  0DA1                     l10442:	
  6727  0DA1  1283               	bcf	status, 5	;RP0=0, select bank0
  6728  0DA2  1303               	bcf	status, 6	;RP1=0, select bank0
  6729  0DA3  01AB               	clrf	(___lwdiv@quotient)
  6730  0DA4  01AC               	clrf	(___lwdiv@quotient+1)
  6731                           	line	10
  6732                           	
  6733  0DA5                     l10444:	
  6734  0DA5  0827               	movf	(___lwdiv@divisor+1),w
  6735  0DA6  0426               	iorwf	(___lwdiv@divisor),w
  6736  0DA7  1903               	skipnz
  6737  0DA8  2DAA               	goto	u3901
  6738  0DA9  2DAB               	goto	u3900
  6739  0DAA                     u3901:
  6740  0DAA  2DE9               	goto	l10464
  6741  0DAB                     u3900:
  6742                           	line	11
  6743                           	
  6744  0DAB                     l10446:	
  6745  0DAB  01AD               	clrf	(___lwdiv@counter)
  6746  0DAC  1403               	bsf	status,0
  6747  0DAD  0DAD               	rlf	(___lwdiv@counter),f
  6748                           	line	12
  6749  0DAE  2DBB               	goto	l10452
  6750                           	
  6751  0DAF                     l7432:	
  6752                           	line	13
  6753                           	
  6754  0DAF                     l10448:	
  6755  0DAF  3001               	movlw	01h
  6756                           	
  6757  0DB0                     u3915:
  6758  0DB0  1003               	clrc
  6759  0DB1  0DA6               	rlf	(___lwdiv@divisor),f
  6760  0DB2  0DA7               	rlf	(___lwdiv@divisor+1),f
  6761  0DB3  3EFF               	addlw	-1
  6762  0DB4  1D03               	skipz
  6763  0DB5  2DB0               	goto	u3915
  6764                           	line	14
  6765                           	
  6766  0DB6                     l10450:	
  6767  0DB6  3001               	movlw	(01h)
  6768  0DB7  00AA               	movwf	(??___lwdiv+0)+0
  6769  0DB8  082A               	movf	(??___lwdiv+0)+0,w
  6770  0DB9  07AD               	addwf	(___lwdiv@counter),f
  6771  0DBA  2DBB               	goto	l10452
  6772                           	line	15
  6773                           	
  6774  0DBB                     l7431:	
  6775                           	line	12
  6776                           	
  6777  0DBB                     l10452:	
  6778  0DBB  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  6779  0DBC  2DBE               	goto	u3921
  6780  0DBD  2DBF               	goto	u3920
  6781  0DBE                     u3921:
  6782  0DBE  2DAF               	goto	l10448
  6783  0DBF                     u3920:
  6784  0DBF  2DC1               	goto	l10454
  6785                           	
  6786  0DC0                     l7433:	
  6787  0DC0  2DC1               	goto	l10454
  6788                           	line	16
  6789                           	
  6790  0DC1                     l7434:	
  6791                           	line	17
  6792                           	
  6793  0DC1                     l10454:	
  6794  0DC1  3001               	movlw	01h
  6795                           	
  6796  0DC2                     u3935:
  6797  0DC2  1003               	clrc
  6798  0DC3  0DAB               	rlf	(___lwdiv@quotient),f
  6799  0DC4  0DAC               	rlf	(___lwdiv@quotient+1),f
  6800  0DC5  3EFF               	addlw	-1
  6801  0DC6  1D03               	skipz
  6802  0DC7  2DC2               	goto	u3935
  6803                           	line	18
  6804  0DC8  0827               	movf	(___lwdiv@divisor+1),w
  6805  0DC9  0229               	subwf	(___lwdiv@dividend+1),w
  6806  0DCA  1D03               	skipz
  6807  0DCB  2DCE               	goto	u3945
  6808  0DCC  0826               	movf	(___lwdiv@divisor),w
  6809  0DCD  0228               	subwf	(___lwdiv@dividend),w
  6810  0DCE                     u3945:
  6811  0DCE  1C03               	skipc
  6812  0DCF  2DD1               	goto	u3941
  6813  0DD0  2DD2               	goto	u3940
  6814  0DD1                     u3941:
  6815  0DD1  2DDA               	goto	l10460
  6816  0DD2                     u3940:
  6817                           	line	19
  6818                           	
  6819  0DD2                     l10456:	
  6820  0DD2  0826               	movf	(___lwdiv@divisor),w
  6821  0DD3  02A8               	subwf	(___lwdiv@dividend),f
  6822  0DD4  0827               	movf	(___lwdiv@divisor+1),w
  6823  0DD5  1C03               	skipc
  6824  0DD6  03A9               	decf	(___lwdiv@dividend+1),f
  6825  0DD7  02A9               	subwf	(___lwdiv@dividend+1),f
  6826                           	line	20
  6827                           	
  6828  0DD8                     l10458:	
  6829  0DD8  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6830  0DD9  2DDA               	goto	l10460
  6831                           	line	21
  6832                           	
  6833  0DDA                     l7435:	
  6834                           	line	22
  6835                           	
  6836  0DDA                     l10460:	
  6837  0DDA  3001               	movlw	01h
  6838                           	
  6839  0DDB                     u3955:
  6840  0DDB  1003               	clrc
  6841  0DDC  0CA7               	rrf	(___lwdiv@divisor+1),f
  6842  0DDD  0CA6               	rrf	(___lwdiv@divisor),f
  6843  0DDE  3EFF               	addlw	-1
  6844  0DDF  1D03               	skipz
  6845  0DE0  2DDB               	goto	u3955
  6846                           	line	23
  6847                           	
  6848  0DE1                     l10462:	
  6849  0DE1  3001               	movlw	low(01h)
  6850  0DE2  02AD               	subwf	(___lwdiv@counter),f
  6851  0DE3  1D03               	btfss	status,2
  6852  0DE4  2DE6               	goto	u3961
  6853  0DE5  2DE7               	goto	u3960
  6854  0DE6                     u3961:
  6855  0DE6  2DC1               	goto	l10454
  6856  0DE7                     u3960:
  6857  0DE7  2DE9               	goto	l10464
  6858                           	
  6859  0DE8                     l7436:	
  6860  0DE8  2DE9               	goto	l10464
  6861                           	line	24
  6862                           	
  6863  0DE9                     l7430:	
  6864                           	line	25
  6865                           	
  6866  0DE9                     l10464:	
  6867  0DE9  082C               	movf	(___lwdiv@quotient+1),w
  6868  0DEA  01A7               	clrf	(?___lwdiv+1)
  6869  0DEB  07A7               	addwf	(?___lwdiv+1)
  6870  0DEC  082B               	movf	(___lwdiv@quotient),w
  6871  0DED  01A6               	clrf	(?___lwdiv)
  6872  0DEE  07A6               	addwf	(?___lwdiv)
  6873                           
  6874  0DEF  2DF0               	goto	l7437
  6875                           	
  6876  0DF0                     l10466:	
  6877                           	line	26
  6878                           	
  6879  0DF0                     l7437:	
  6880  0DF0  0008               	return
  6881                           	opt stack 0
  6882                           GLOBAL	__end_of___lwdiv
  6883  0DF1                     	__end_of___lwdiv:
  6884 ;; =============== function ___lwdiv ends ============
  6885                           
  6886                           	signat	___lwdiv,8314
  6887                           	global	___wmul
  6888                           psect	text901,local,class=CODE,delta=2
  6889                           global __ptext901
  6890  0BAF                     __ptext901:
  6891                           
  6892 ;; *************** function ___wmul *****************
  6893 ;; Defined at:
  6894 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6897 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  product         2    4[BANK0 ] unsigned int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2    0[BANK0 ] unsigned int 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6909 ;;      Params:         0       4       0       0       0
  6910 ;;      Locals:         0       2       0       0       0
  6911 ;;      Temps:          0       0       0       0       0
  6912 ;;      Totals:         0       6       0       0       0
  6913 ;;Total ram usage:        6 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    3
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_ADCconvert
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           psect	text901
  6923                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6924                           	line	3
  6925                           	global	__size_of___wmul
  6926  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6927                           	
  6928  0BAF                     ___wmul:	
  6929                           	opt	stack 1
  6930                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6931                           	line	4
  6932                           	
  6933  0BAF                     l10430:	
  6934  0BAF  1283               	bcf	status, 5	;RP0=0, select bank0
  6935  0BB0  1303               	bcf	status, 6	;RP1=0, select bank0
  6936  0BB1  01A4               	clrf	(___wmul@product)
  6937  0BB2  01A5               	clrf	(___wmul@product+1)
  6938  0BB3  2BB4               	goto	l10432
  6939                           	line	6
  6940                           	
  6941  0BB4                     l7424:	
  6942                           	line	7
  6943                           	
  6944  0BB4                     l10432:	
  6945  0BB4  1C20               	btfss	(___wmul@multiplier),(0)&7
  6946  0BB5  2BB7               	goto	u3861
  6947  0BB6  2BB8               	goto	u3860
  6948  0BB7                     u3861:
  6949  0BB7  2BBE               	goto	l7425
  6950  0BB8                     u3860:
  6951                           	line	8
  6952                           	
  6953  0BB8                     l10434:	
  6954  0BB8  0822               	movf	(___wmul@multiplicand),w
  6955  0BB9  07A4               	addwf	(___wmul@product),f
  6956  0BBA  1803               	skipnc
  6957  0BBB  0AA5               	incf	(___wmul@product+1),f
  6958  0BBC  0823               	movf	(___wmul@multiplicand+1),w
  6959  0BBD  07A5               	addwf	(___wmul@product+1),f
  6960                           	
  6961  0BBE                     l7425:	
  6962                           	line	9
  6963  0BBE  3001               	movlw	01h
  6964                           	
  6965  0BBF                     u3875:
  6966  0BBF  1003               	clrc
  6967  0BC0  0DA2               	rlf	(___wmul@multiplicand),f
  6968  0BC1  0DA3               	rlf	(___wmul@multiplicand+1),f
  6969  0BC2  3EFF               	addlw	-1
  6970  0BC3  1D03               	skipz
  6971  0BC4  2BBF               	goto	u3875
  6972                           	line	10
  6973                           	
  6974  0BC5                     l10436:	
  6975  0BC5  3001               	movlw	01h
  6976                           	
  6977  0BC6                     u3885:
  6978  0BC6  1003               	clrc
  6979  0BC7  0CA1               	rrf	(___wmul@multiplier+1),f
  6980  0BC8  0CA0               	rrf	(___wmul@multiplier),f
  6981  0BC9  3EFF               	addlw	-1
  6982  0BCA  1D03               	skipz
  6983  0BCB  2BC6               	goto	u3885
  6984                           	line	11
  6985  0BCC  0821               	movf	((___wmul@multiplier+1)),w
  6986  0BCD  0420               	iorwf	((___wmul@multiplier)),w
  6987  0BCE  1D03               	skipz
  6988  0BCF  2BD1               	goto	u3891
  6989  0BD0  2BD2               	goto	u3890
  6990  0BD1                     u3891:
  6991  0BD1  2BB4               	goto	l10432
  6992  0BD2                     u3890:
  6993  0BD2  2BD3               	goto	l10438
  6994                           	
  6995  0BD3                     l7426:	
  6996                           	line	12
  6997                           	
  6998  0BD3                     l10438:	
  6999  0BD3  0825               	movf	(___wmul@product+1),w
  7000  0BD4  01A1               	clrf	(?___wmul+1)
  7001  0BD5  07A1               	addwf	(?___wmul+1)
  7002  0BD6  0824               	movf	(___wmul@product),w
  7003  0BD7  01A0               	clrf	(?___wmul)
  7004  0BD8  07A0               	addwf	(?___wmul)
  7005                           
  7006  0BD9  2BDA               	goto	l7427
  7007                           	
  7008  0BDA                     l10440:	
  7009                           	line	13
  7010                           	
  7011  0BDA                     l7427:	
  7012  0BDA  0008               	return
  7013                           	opt stack 0
  7014                           GLOBAL	__end_of___wmul
  7015  0BDB                     	__end_of___wmul:
  7016 ;; =============== function ___wmul ends ============
  7017                           
  7018                           	signat	___wmul,8314
  7019                           	global	_ser_putch
  7020                           psect	text902,local,class=CODE,delta=2
  7021                           global __ptext902
  7022  0ACC                     __ptext902:
  7023                           
  7024 ;; *************** function _ser_putch *****************
  7025 ;; Defined at:
  7026 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  c               1    wreg     unsigned char 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  c               1    1[BANK0 ] unsigned char 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;		None               void
  7033 ;; Registers used:
  7034 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7040 ;;      Params:         0       0       0       0       0
  7041 ;;      Locals:         0       1       0       0       0
  7042 ;;      Temps:          0       1       0       0       0
  7043 ;;      Totals:         0       2       0       0       0
  7044 ;;Total ram usage:        2 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    3
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_robo_init
  7051 ;;		_robot_read
  7052 ;;		_robotMove
  7053 ;;		_robotTurn
  7054 ;;		_ser_puts
  7055 ;;		_ser_puts2
  7056 ;;		_ser_puthex
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           psect	text902
  7060                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7061                           	line	70
  7062                           	global	__size_of_ser_putch
  7063  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7064                           	
  7065  0ACC                     _ser_putch:	
  7066                           	opt	stack 2
  7067                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7068                           ;ser_putch@c stored from wreg
  7069  0ACC  1283               	bcf	status, 5	;RP0=0, select bank0
  7070  0ACD  1303               	bcf	status, 6	;RP1=0, select bank0
  7071  0ACE  00A1               	movwf	(ser_putch@c)
  7072                           	line	71
  7073                           	
  7074  0ACF                     l10344:	
  7075                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  7076  0ACF  2AD1               	goto	l10346
  7077                           	
  7078  0AD0                     l4428:	
  7079                           	line	72
  7080                           ;ser.c: 72: continue;
  7081  0AD0  2AD1               	goto	l10346
  7082                           	
  7083  0AD1                     l4427:	
  7084                           	line	71
  7085                           	
  7086  0AD1                     l10346:	
  7087  0AD1  087D               	movf	(_txiptr),w	;volatile
  7088  0AD2  3E01               	addlw	01h
  7089  0AD3  390F               	andlw	0Fh
  7090  0AD4  066F               	xorwf	(_txoptr),w	;volatile
  7091  0AD5  1903               	skipnz
  7092  0AD6  2AD8               	goto	u3651
  7093  0AD7  2AD9               	goto	u3650
  7094  0AD8                     u3651:
  7095  0AD8  2AD1               	goto	l10346
  7096  0AD9                     u3650:
  7097                           	
  7098  0AD9                     l4429:	
  7099                           	line	73
  7100                           ;ser.c: 73: GIE=0;
  7101  0AD9  138B               	bcf	(95/8),(95)&7
  7102                           	line	74
  7103                           	
  7104  0ADA                     l10348:	
  7105                           ;ser.c: 74: txfifo[txiptr] = c;
  7106  0ADA  0821               	movf	(ser_putch@c),w
  7107  0ADB  00A0               	movwf	(??_ser_putch+0)+0
  7108  0ADC  087D               	movf	(_txiptr),w
  7109  0ADD  3EB0               	addlw	_txfifo&0ffh
  7110  0ADE  0084               	movwf	fsr0
  7111  0ADF  0820               	movf	(??_ser_putch+0)+0,w
  7112  0AE0  1383               	bcf	status, 7	;select IRP bank1
  7113  0AE1  0080               	movwf	indf
  7114                           	line	75
  7115                           	
  7116  0AE2                     l10350:	
  7117                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  7118  0AE2  087D               	movf	(_txiptr),w	;volatile
  7119  0AE3  3E01               	addlw	01h
  7120  0AE4  390F               	andlw	0Fh
  7121  0AE5  00A0               	movwf	(??_ser_putch+0)+0
  7122  0AE6  0820               	movf	(??_ser_putch+0)+0,w
  7123  0AE7  00FD               	movwf	(_txiptr)	;volatile
  7124                           	line	76
  7125                           	
  7126  0AE8                     l10352:	
  7127                           ;ser.c: 76: TXIE=1;
  7128  0AE8  1683               	bsf	status, 5	;RP0=1, select bank1
  7129  0AE9  1303               	bcf	status, 6	;RP1=0, select bank1
  7130  0AEA  160C               	bsf	(1124/8)^080h,(1124)&7
  7131                           	line	77
  7132                           	
  7133  0AEB                     l10354:	
  7134                           ;ser.c: 77: GIE=1;
  7135  0AEB  178B               	bsf	(95/8),(95)&7
  7136                           	line	78
  7137                           	
  7138  0AEC                     l4430:	
  7139  0AEC  0008               	return
  7140                           	opt stack 0
  7141                           GLOBAL	__end_of_ser_putch
  7142  0AED                     	__end_of_ser_putch:
  7143 ;; =============== function _ser_putch ends ============
  7144                           
  7145                           	signat	_ser_putch,4216
  7146                           	global	_ser_isrx
  7147                           psect	text903,local,class=CODE,delta=2
  7148                           global __ptext903
  7149  0AB5                     __ptext903:
  7150                           
  7151 ;; *************** function _ser_isrx *****************
  7152 ;; Defined at:
  7153 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;		None               void
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7167 ;;      Params:         0       0       0       0       0
  7168 ;;      Locals:         0       0       0       0       0
  7169 ;;      Temps:          0       0       0       0       0
  7170 ;;      Totals:         0       0       0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    3
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_ser_getch
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           psect	text903
  7181                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7182                           	line	45
  7183                           	global	__size_of_ser_isrx
  7184  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  7185                           	
  7186  0AB5                     _ser_isrx:	
  7187                           	opt	stack 2
  7188                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  7189                           	line	46
  7190                           	
  7191  0AB5                     l10328:	
  7192                           ;ser.c: 46: if(OERR) {
  7193  0AB5  1283               	bcf	status, 5	;RP0=0, select bank0
  7194  0AB6  1303               	bcf	status, 6	;RP1=0, select bank0
  7195  0AB7  1C98               	btfss	(193/8),(193)&7
  7196  0AB8  2ABA               	goto	u3631
  7197  0AB9  2ABB               	goto	u3630
  7198  0ABA                     u3631:
  7199  0ABA  2AC0               	goto	l10336
  7200  0ABB                     u3630:
  7201                           	line	47
  7202                           	
  7203  0ABB                     l10330:	
  7204                           ;ser.c: 47: CREN = 0;
  7205  0ABB  1218               	bcf	(196/8),(196)&7
  7206                           	line	48
  7207                           ;ser.c: 48: CREN = 1;
  7208  0ABC  1618               	bsf	(196/8),(196)&7
  7209                           	line	49
  7210                           	
  7211  0ABD                     l10332:	
  7212                           ;ser.c: 49: return 0;
  7213  0ABD  1003               	clrc
  7214                           	
  7215  0ABE  2ACB               	goto	l4418
  7216                           	
  7217  0ABF                     l10334:	
  7218  0ABF  2ACB               	goto	l4418
  7219                           	line	50
  7220                           	
  7221  0AC0                     l4417:	
  7222                           	line	51
  7223                           	
  7224  0AC0                     l10336:	
  7225                           ;ser.c: 50: }
  7226                           ;ser.c: 51: return (rxiptr!=rxoptr);
  7227  0AC0  086D               	movf	(_rxiptr),w	;volatile
  7228  0AC1  066E               	xorwf	(_rxoptr),w	;volatile
  7229  0AC2  1D03               	skipz
  7230  0AC3  2AC5               	goto	u3641
  7231  0AC4  2AC6               	goto	u3640
  7232  0AC5                     u3641:
  7233  0AC5  2AC8               	goto	l10340
  7234  0AC6                     u3640:
  7235                           	
  7236  0AC6                     l10338:	
  7237  0AC6  1003               	clrc
  7238                           	
  7239  0AC7  2ACB               	goto	l4418
  7240                           	
  7241  0AC8                     l10066:	
  7242                           	
  7243  0AC8                     l10340:	
  7244  0AC8  1403               	setc
  7245                           	
  7246  0AC9  2ACB               	goto	l4418
  7247                           	
  7248  0ACA                     l10068:	
  7249  0ACA  2ACB               	goto	l4418
  7250                           	
  7251  0ACB                     l10342:	
  7252                           	line	52
  7253                           	
  7254  0ACB                     l4418:	
  7255  0ACB  0008               	return
  7256                           	opt stack 0
  7257                           GLOBAL	__end_of_ser_isrx
  7258  0ACC                     	__end_of_ser_isrx:
  7259 ;; =============== function _ser_isrx ends ============
  7260                           
  7261                           	signat	_ser_isrx,88
  7262                           	global	_spi_transfer
  7263                           psect	text904,local,class=CODE,delta=2
  7264                           global __ptext904
  7265  0A61                     __ptext904:
  7266                           
  7267 ;; *************** function _spi_transfer *****************
  7268 ;; Defined at:
  7269 ;;		line 34 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  data            1    wreg     unsigned char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  data            1    2[BANK0 ] unsigned char 
  7274 ;;  temp            1    1[BANK0 ] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      unsigned char 
  7277 ;; Registers used:
  7278 ;;		wreg
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7284 ;;      Params:         0       0       0       0       0
  7285 ;;      Locals:         0       2       0       0       0
  7286 ;;      Temps:          0       1       0       0       0
  7287 ;;      Totals:         0       3       0       0       0
  7288 ;;Total ram usage:        3 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    3
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_rotate
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           psect	text904
  7298                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  7299                           	line	34
  7300                           	global	__size_of_spi_transfer
  7301  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7302                           	
  7303  0A61                     _spi_transfer:	
  7304                           	opt	stack 3
  7305                           ; Regs used in _spi_transfer: [wreg]
  7306                           ;spi_transfer@data stored from wreg
  7307  0A61  1283               	bcf	status, 5	;RP0=0, select bank0
  7308  0A62  1303               	bcf	status, 6	;RP1=0, select bank0
  7309  0A63  00A2               	movwf	(spi_transfer@data)
  7310                           	line	35
  7311                           	
  7312  0A64                     l10256:	
  7313                           ;steppermotor.c: 35: unsigned char temp = 0;
  7314  0A64  01A1               	clrf	(spi_transfer@temp)
  7315                           	line	37
  7316                           ;steppermotor.c: 37: SSPIF = 0;
  7317  0A65  118C               	bcf	(99/8),(99)&7
  7318                           	line	38
  7319                           	
  7320  0A66                     l10258:	
  7321                           ;steppermotor.c: 38: SSPBUF = data;
  7322  0A66  0822               	movf	(spi_transfer@data),w
  7323  0A67  0093               	movwf	(19)	;volatile
  7324                           	line	40
  7325                           ;steppermotor.c: 40: while (SSPIF == 0);
  7326  0A68  2A69               	goto	l3676
  7327                           	
  7328  0A69                     l3677:	
  7329                           	
  7330  0A69                     l3676:	
  7331  0A69  1D8C               	btfss	(99/8),(99)&7
  7332  0A6A  2A6C               	goto	u3581
  7333  0A6B  2A6D               	goto	u3580
  7334  0A6C                     u3581:
  7335  0A6C  2A69               	goto	l3676
  7336  0A6D                     u3580:
  7337  0A6D  2A6E               	goto	l10260
  7338                           	
  7339  0A6E                     l3678:	
  7340                           	line	41
  7341                           	
  7342  0A6E                     l10260:	
  7343                           ;steppermotor.c: 41: temp = SSPBUF;
  7344  0A6E  0813               	movf	(19),w	;volatile
  7345  0A6F  00A0               	movwf	(??_spi_transfer+0)+0
  7346  0A70  0820               	movf	(??_spi_transfer+0)+0,w
  7347  0A71  00A1               	movwf	(spi_transfer@temp)
  7348                           	line	42
  7349                           	
  7350  0A72                     l10262:	
  7351                           ;steppermotor.c: 42: SSPIF = 0;
  7352  0A72  118C               	bcf	(99/8),(99)&7
  7353  0A73  2A74               	goto	l3679
  7354                           	line	44
  7355                           	
  7356  0A74                     l10264:	
  7357                           	line	45
  7358                           ;steppermotor.c: 44: return temp;
  7359                           ;	Return value of _spi_transfer is never used
  7360                           	
  7361  0A74                     l3679:	
  7362  0A74  0008               	return
  7363                           	opt stack 0
  7364                           GLOBAL	__end_of_spi_transfer
  7365  0A75                     	__end_of_spi_transfer:
  7366 ;; =============== function _spi_transfer ends ============
  7367                           
  7368                           	signat	_spi_transfer,4217
  7369                           	global	_Menu
  7370                           psect	text905,local,class=CODE,delta=2
  7371                           global __ptext905
  7372  0D5A                     __ptext905:
  7373                           
  7374 ;; *************** function _Menu *****************
  7375 ;; Defined at:
  7376 ;;		line 180 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  input           1    wreg     unsigned char 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  input           1    0[BANK0 ] unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      unsigned char 
  7383 ;; Registers used:
  7384 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7390 ;;      Params:         0       0       0       0       0
  7391 ;;      Locals:         0       1       0       0       0
  7392 ;;      Temps:          0       0       0       0       0
  7393 ;;      Totals:         0       1       0       0       0
  7394 ;;Total ram usage:        1 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    3
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_main
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           psect	text905
  7404                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7405                           	line	180
  7406                           	global	__size_of_Menu
  7407  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7408                           	
  7409  0D5A                     _Menu:	
  7410                           	opt	stack 4
  7411                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7412                           ;Menu@input stored from wreg
  7413  0D5A  1283               	bcf	status, 5	;RP0=0, select bank0
  7414  0D5B  1303               	bcf	status, 6	;RP1=0, select bank0
  7415  0D5C  00A0               	movwf	(Menu@input)
  7416                           	line	181
  7417                           	
  7418  0D5D                     l10232:	
  7419                           ;HMI.c: 181: switch (input)
  7420  0D5D  2D8C               	goto	l10250
  7421                           	line	183
  7422                           ;HMI.c: 182: {
  7423                           ;HMI.c: 183: case 1:
  7424                           	
  7425  0D5E                     l5232:	
  7426                           	line	185
  7427                           ;HMI.c: 185: break;
  7428  0D5E  2D9E               	goto	l10252
  7429                           	line	186
  7430                           ;HMI.c: 186: case 2:
  7431                           	
  7432  0D5F                     l5234:	
  7433                           	line	188
  7434                           ;HMI.c: 188: break;
  7435  0D5F  2D9E               	goto	l10252
  7436                           	line	189
  7437                           ;HMI.c: 189: case 3:
  7438                           	
  7439  0D60                     l5235:	
  7440                           	line	190
  7441                           	
  7442  0D60                     l10234:	
  7443                           ;HMI.c: 190: pos--;
  7444  0D60  30FF               	movlw	low(-1)
  7445  0D61  1683               	bsf	status, 5	;RP0=1, select bank1
  7446  0D62  1303               	bcf	status, 6	;RP1=0, select bank1
  7447  0D63  07C6               	addwf	(_pos)^080h,f
  7448  0D64  1803               	skipnc
  7449  0D65  0AC7               	incf	(_pos+1)^080h,f
  7450  0D66  30FF               	movlw	high(-1)
  7451  0D67  07C7               	addwf	(_pos+1)^080h,f
  7452                           	line	191
  7453                           	
  7454  0D68                     l10236:	
  7455                           ;HMI.c: 191: if (pos < 0)
  7456  0D68  1FC7               	btfss	(_pos+1)^080h,7
  7457  0D69  2D6B               	goto	u3561
  7458  0D6A  2D6C               	goto	u3560
  7459  0D6B                     u3561:
  7460  0D6B  2D9E               	goto	l10252
  7461  0D6C                     u3560:
  7462                           	line	192
  7463                           	
  7464  0D6C                     l10238:	
  7465                           ;HMI.c: 192: pos = 5 - 1;
  7466  0D6C  3004               	movlw	low(04h)
  7467  0D6D  00C6               	movwf	(_pos)^080h
  7468  0D6E  3000               	movlw	high(04h)
  7469  0D6F  00C7               	movwf	((_pos)^080h)+1
  7470  0D70  2D9E               	goto	l10252
  7471                           	
  7472  0D71                     l5236:	
  7473                           	line	194
  7474                           ;HMI.c: 194: break;
  7475  0D71  2D9E               	goto	l10252
  7476                           	line	195
  7477                           ;HMI.c: 195: case 4:
  7478                           	
  7479  0D72                     l5237:	
  7480                           	line	196
  7481                           	
  7482  0D72                     l10240:	
  7483                           ;HMI.c: 196: pos++;
  7484  0D72  3001               	movlw	low(01h)
  7485  0D73  1683               	bsf	status, 5	;RP0=1, select bank1
  7486  0D74  1303               	bcf	status, 6	;RP1=0, select bank1
  7487  0D75  07C6               	addwf	(_pos)^080h,f
  7488  0D76  1803               	skipnc
  7489  0D77  0AC7               	incf	(_pos+1)^080h,f
  7490  0D78  3000               	movlw	high(01h)
  7491  0D79  07C7               	addwf	(_pos+1)^080h,f
  7492                           	line	197
  7493                           ;HMI.c: 197: if (pos == 5)
  7494  0D7A  3005               	movlw	05h
  7495  0D7B  0646               	xorwf	(_pos)^080h,w
  7496  0D7C  0447               	iorwf	(_pos+1)^080h,w
  7497  0D7D  1D03               	skipz
  7498  0D7E  2D80               	goto	u3571
  7499  0D7F  2D81               	goto	u3570
  7500  0D80                     u3571:
  7501  0D80  2D9E               	goto	l10252
  7502  0D81                     u3570:
  7503                           	line	198
  7504                           	
  7505  0D81                     l10242:	
  7506                           ;HMI.c: 198: pos = 0;
  7507  0D81  01C6               	clrf	(_pos)^080h
  7508  0D82  01C7               	clrf	(_pos+1)^080h
  7509  0D83  2D9E               	goto	l10252
  7510                           	
  7511  0D84                     l5238:	
  7512                           	line	200
  7513                           ;HMI.c: 200: break;
  7514  0D84  2D9E               	goto	l10252
  7515                           	line	201
  7516                           ;HMI.c: 201: case 5:
  7517                           	
  7518  0D85                     l5239:	
  7519                           	line	202
  7520                           	
  7521  0D85                     l10244:	
  7522                           ;HMI.c: 202: return pos;
  7523  0D85  1683               	bsf	status, 5	;RP0=1, select bank1
  7524  0D86  1303               	bcf	status, 6	;RP1=0, select bank1
  7525  0D87  0846               	movf	(_pos)^080h,w
  7526  0D88  2DA0               	goto	l5240
  7527                           	
  7528  0D89                     l10246:	
  7529  0D89  2DA0               	goto	l5240
  7530                           	line	205
  7531                           ;HMI.c: 205: default:
  7532                           	
  7533  0D8A                     l5241:	
  7534                           	line	207
  7535                           ;HMI.c: 207: break;
  7536  0D8A  2D9E               	goto	l10252
  7537                           	line	208
  7538                           	
  7539  0D8B                     l10248:	
  7540                           ;HMI.c: 208: }
  7541  0D8B  2D9E               	goto	l10252
  7542                           	line	181
  7543                           	
  7544  0D8C                     l5231:	
  7545                           	
  7546  0D8C                     l10250:	
  7547  0D8C  1283               	bcf	status, 5	;RP0=0, select bank0
  7548  0D8D  0820               	movf	(Menu@input),w
  7549                           	; Switch size 1, requested type "space"
  7550                           ; Number of cases is 5, Range of values is 1 to 5
  7551                           ; switch strategies available:
  7552                           ; Name         Instructions Cycles
  7553                           ; simple_byte           16     9 (average)
  7554                           ; direct_byte           26    11 (fixed)
  7555                           ; jumptable            263     9 (fixed)
  7556                           ;	Chosen strategy is simple_byte
  7557                           
  7558                           	opt asmopt_off
  7559  0D8E  3A01               	xorlw	1^0	; case 1
  7560  0D8F  1903               	skipnz
  7561  0D90  2D9E               	goto	l10252
  7562  0D91  3A03               	xorlw	2^1	; case 2
  7563  0D92  1903               	skipnz
  7564  0D93  2D9E               	goto	l10252
  7565  0D94  3A01               	xorlw	3^2	; case 3
  7566  0D95  1903               	skipnz
  7567  0D96  2D60               	goto	l10234
  7568  0D97  3A07               	xorlw	4^3	; case 4
  7569  0D98  1903               	skipnz
  7570  0D99  2D72               	goto	l10240
  7571  0D9A  3A01               	xorlw	5^4	; case 5
  7572  0D9B  1903               	skipnz
  7573  0D9C  2D85               	goto	l10244
  7574  0D9D  2D9E               	goto	l10252
  7575                           	opt asmopt_on
  7576                           
  7577                           	line	208
  7578                           	
  7579  0D9E                     l5233:	
  7580                           	line	209
  7581                           	
  7582  0D9E                     l10252:	
  7583                           ;HMI.c: 209: return 255;
  7584  0D9E  30FF               	movlw	(0FFh)
  7585  0D9F  2DA0               	goto	l5240
  7586                           	
  7587  0DA0                     l10254:	
  7588                           	line	210
  7589                           	
  7590  0DA0                     l5240:	
  7591  0DA0  0008               	return
  7592                           	opt stack 0
  7593                           GLOBAL	__end_of_Menu
  7594  0DA1                     	__end_of_Menu:
  7595 ;; =============== function _Menu ends ============
  7596                           
  7597                           	signat	_Menu,4217
  7598                           	global	_ser_init
  7599                           psect	text906,local,class=CODE,delta=2
  7600                           global __ptext906
  7601  0B33                     __ptext906:
  7602                           
  7603 ;; *************** function _ser_init *****************
  7604 ;; Defined at:
  7605 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;		None
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7619 ;;      Params:         0       0       0       0       0
  7620 ;;      Locals:         0       0       0       0       0
  7621 ;;      Temps:          0       1       0       0       0
  7622 ;;      Totals:         0       1       0       0       0
  7623 ;;Total ram usage:        1 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    3
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_init
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           psect	text906
  7633                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7634                           	line	113
  7635                           	global	__size_of_ser_init
  7636  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7637                           	
  7638  0B33                     _ser_init:	
  7639                           	opt	stack 3
  7640                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7641                           	line	114
  7642                           	
  7643  0B33                     l10206:	
  7644                           ;ser.c: 114: TRISC |= 0b10000000;
  7645  0B33  1683               	bsf	status, 5	;RP0=1, select bank1
  7646  0B34  1303               	bcf	status, 6	;RP1=0, select bank1
  7647  0B35  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7648                           	line	115
  7649                           	
  7650  0B36                     l10208:	
  7651                           ;ser.c: 115: TRISC &= 0b10111111;
  7652  0B36  30BF               	movlw	(0BFh)
  7653  0B37  1283               	bcf	status, 5	;RP0=0, select bank0
  7654  0B38  1303               	bcf	status, 6	;RP1=0, select bank0
  7655  0B39  00A0               	movwf	(??_ser_init+0)+0
  7656  0B3A  0820               	movf	(??_ser_init+0)+0,w
  7657  0B3B  1683               	bsf	status, 5	;RP0=1, select bank1
  7658  0B3C  1303               	bcf	status, 6	;RP1=0, select bank1
  7659  0B3D  0587               	andwf	(135)^080h,f	;volatile
  7660                           	line	116
  7661                           	
  7662  0B3E                     l10210:	
  7663                           ;ser.c: 116: BRGH=1;
  7664  0B3E  1518               	bsf	(1218/8)^080h,(1218)&7
  7665                           	line	118
  7666                           	
  7667  0B3F                     l10212:	
  7668                           ;ser.c: 118: SPBRG=20;
  7669  0B3F  3014               	movlw	(014h)
  7670  0B40  0099               	movwf	(153)^080h	;volatile
  7671                           	line	121
  7672                           	
  7673  0B41                     l10214:	
  7674                           ;ser.c: 121: TX9=0;
  7675  0B41  1318               	bcf	(1222/8)^080h,(1222)&7
  7676                           	line	122
  7677                           	
  7678  0B42                     l10216:	
  7679                           ;ser.c: 122: RX9=0;
  7680  0B42  1283               	bcf	status, 5	;RP0=0, select bank0
  7681  0B43  1303               	bcf	status, 6	;RP1=0, select bank0
  7682  0B44  1318               	bcf	(198/8),(198)&7
  7683                           	line	124
  7684                           	
  7685  0B45                     l10218:	
  7686                           ;ser.c: 124: SYNC=0;
  7687  0B45  1683               	bsf	status, 5	;RP0=1, select bank1
  7688  0B46  1303               	bcf	status, 6	;RP1=0, select bank1
  7689  0B47  1218               	bcf	(1220/8)^080h,(1220)&7
  7690                           	line	125
  7691                           	
  7692  0B48                     l10220:	
  7693                           ;ser.c: 125: SPEN=1;
  7694  0B48  1283               	bcf	status, 5	;RP0=0, select bank0
  7695  0B49  1303               	bcf	status, 6	;RP1=0, select bank0
  7696  0B4A  1798               	bsf	(199/8),(199)&7
  7697                           	line	126
  7698                           	
  7699  0B4B                     l10222:	
  7700                           ;ser.c: 126: CREN=1;
  7701  0B4B  1618               	bsf	(196/8),(196)&7
  7702                           	line	127
  7703                           	
  7704  0B4C                     l10224:	
  7705                           ;ser.c: 127: TXIE=0;
  7706  0B4C  1683               	bsf	status, 5	;RP0=1, select bank1
  7707  0B4D  1303               	bcf	status, 6	;RP1=0, select bank1
  7708  0B4E  120C               	bcf	(1124/8)^080h,(1124)&7
  7709                           	line	128
  7710                           	
  7711  0B4F                     l10226:	
  7712                           ;ser.c: 128: RCIE=1;
  7713  0B4F  168C               	bsf	(1125/8)^080h,(1125)&7
  7714                           	line	129
  7715                           	
  7716  0B50                     l10228:	
  7717                           ;ser.c: 129: TXEN=1;
  7718  0B50  1698               	bsf	(1221/8)^080h,(1221)&7
  7719                           	line	132
  7720                           	
  7721  0B51                     l10230:	
  7722                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  7723  0B51  3000               	movlw	(0)
  7724  0B52  1283               	bcf	status, 5	;RP0=0, select bank0
  7725  0B53  1303               	bcf	status, 6	;RP1=0, select bank0
  7726  0B54  00EF               	movwf	(_txoptr)	;volatile
  7727  0B55  00FD               	movwf	(_txiptr)	;volatile
  7728  0B56  00EE               	movwf	(_rxoptr)	;volatile
  7729  0B57  00A0               	movwf	(??_ser_init+0)+0
  7730  0B58  0820               	movf	(??_ser_init+0)+0,w
  7731  0B59  00ED               	movwf	(_rxiptr)	;volatile
  7732                           	line	133
  7733                           	
  7734  0B5A                     l4452:	
  7735  0B5A  0008               	return
  7736                           	opt stack 0
  7737                           GLOBAL	__end_of_ser_init
  7738  0B5B                     	__end_of_ser_init:
  7739 ;; =============== function _ser_init ends ============
  7740                           
  7741                           	signat	_ser_init,88
  7742                           	global	_adc_read
  7743                           psect	text907,local,class=CODE,delta=2
  7744                           global __ptext907
  7745  0B5B                     __ptext907:
  7746                           
  7747 ;; *************** function _adc_read *****************
  7748 ;; Defined at:
  7749 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  2    0[BANK0 ] unsigned int 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7763 ;;      Params:         0       2       0       0       0
  7764 ;;      Locals:         0       2       0       0       0
  7765 ;;      Temps:          0       2       0       0       0
  7766 ;;      Totals:         0       6       0       0       0
  7767 ;;Total ram usage:        6 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    3
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_adc_read_channel
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           psect	text907
  7777                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7778                           	line	61
  7779                           	global	__size_of_adc_read
  7780  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7781                           	
  7782  0B5B                     _adc_read:	
  7783                           	opt	stack 0
  7784                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7785                           	line	64
  7786                           	
  7787  0B5B                     l10078:	
  7788                           ;adc.c: 62: volatile unsigned int adc_value;
  7789                           ;adc.c: 64: ADRESH = 0;
  7790  0B5B  1283               	bcf	status, 5	;RP0=0, select bank0
  7791  0B5C  1303               	bcf	status, 6	;RP1=0, select bank0
  7792  0B5D  019E               	clrf	(30)	;volatile
  7793                           	line	66
  7794                           	
  7795  0B5E                     l10080:	
  7796                           ;adc.c: 66: GO = 1;
  7797  0B5E  151F               	bsf	(250/8),(250)&7
  7798                           	line	67
  7799                           ;adc.c: 67: while(GO) continue;
  7800  0B5F  2B60               	goto	l703
  7801                           	
  7802  0B60                     l704:	
  7803                           	
  7804  0B60                     l703:	
  7805  0B60  191F               	btfsc	(250/8),(250)&7
  7806  0B61  2B63               	goto	u3351
  7807  0B62  2B64               	goto	u3350
  7808  0B63                     u3351:
  7809  0B63  2B60               	goto	l703
  7810  0B64                     u3350:
  7811                           	
  7812  0B64                     l705:	
  7813                           	line	68
  7814                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7815  0B64  0000               nop ;#
  7816                           	line	69
  7817                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7818  0B65  0000               nop ;#
  7819                           	line	70
  7820                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7821  0B66  0000               nop ;#
  7822                           psect	text907
  7823                           	line	73
  7824                           	
  7825  0B67                     l10082:	
  7826                           ;adc.c: 73: adc_value = ADRESH;
  7827  0B67  1283               	bcf	status, 5	;RP0=0, select bank0
  7828  0B68  1303               	bcf	status, 6	;RP1=0, select bank0
  7829  0B69  081E               	movf	(30),w	;volatile
  7830  0B6A  00A2               	movwf	(??_adc_read+0)+0
  7831  0B6B  01A3               	clrf	(??_adc_read+0)+0+1
  7832  0B6C  0822               	movf	0+(??_adc_read+0)+0,w
  7833  0B6D  00A4               	movwf	(adc_read@adc_value)	;volatile
  7834  0B6E  0823               	movf	1+(??_adc_read+0)+0,w
  7835  0B6F  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  7836                           	line	74
  7837                           ;adc.c: 74: adc_value <<= 1;
  7838  0B70  3001               	movlw	01h
  7839                           	
  7840  0B71                     u3365:
  7841  0B71  1003               	clrc
  7842  0B72  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  7843  0B73  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  7844  0B74  3EFF               	addlw	-1
  7845  0B75  1D03               	skipz
  7846  0B76  2B71               	goto	u3365
  7847                           	line	75
  7848                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7849  0B77  1683               	bsf	status, 5	;RP0=1, select bank1
  7850  0B78  1303               	bcf	status, 6	;RP1=0, select bank1
  7851  0B79  081E               	movf	(158)^080h,w	;volatile
  7852                           	line	78
  7853                           	
  7854  0B7A                     l10084:	
  7855                           ;adc.c: 78: return (adc_value);
  7856  0B7A  1283               	bcf	status, 5	;RP0=0, select bank0
  7857  0B7B  1303               	bcf	status, 6	;RP1=0, select bank0
  7858  0B7C  0825               	movf	(adc_read@adc_value+1),w	;volatile
  7859  0B7D  01A1               	clrf	(?_adc_read+1)
  7860  0B7E  07A1               	addwf	(?_adc_read+1)
  7861  0B7F  0824               	movf	(adc_read@adc_value),w	;volatile
  7862  0B80  01A0               	clrf	(?_adc_read)
  7863  0B81  07A0               	addwf	(?_adc_read)
  7864                           
  7865  0B82  2B83               	goto	l706
  7866                           	
  7867  0B83                     l10086:	
  7868                           	line	79
  7869                           	
  7870  0B83                     l706:	
  7871  0B83  0008               	return
  7872                           	opt stack 0
  7873                           GLOBAL	__end_of_adc_read
  7874  0B84                     	__end_of_adc_read:
  7875 ;; =============== function _adc_read ends ============
  7876                           
  7877                           	signat	_adc_read,90
  7878                           	global	_isr1
  7879                           psect	text908,local,class=CODE,delta=2
  7880                           global __ptext908
  7881  0591                     __ptext908:
  7882                           
  7883 ;; *************** function _isr1 *****************
  7884 ;; Defined at:
  7885 ;;		line 88 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;		None               void
  7892 ;; Registers used:
  7893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0
  7901 ;;      Temps:          5       0       0       0       0
  7902 ;;      Totals:         5       0       0       0       0
  7903 ;;Total ram usage:        5 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    2
  7906 ;; This function calls:
  7907 ;;		i1___lwmod
  7908 ;;		_ReadButtons
  7909 ;; This function is called by:
  7910 ;;		Interrupt level 1
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           psect	text908
  7914                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  7915                           	line	88
  7916                           	global	__size_of_isr1
  7917  00E0                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  7918                           	
  7919  0591                     _isr1:	
  7920                           	opt	stack 0
  7921                           ; Regs used in _isr1: [allreg]
  7922                           psect	intentry,class=CODE,delta=2
  7923                           global __pintentry
  7924  0004                     __pintentry:
  7925                           global interrupt_function
  7926  0004                     interrupt_function:
  7927                           	global saved_w
  7928  007E                     	saved_w	set	btemp+0
  7929  0004  00FE               	movwf	saved_w
  7930  0005  0E03               	swapf	status,w
  7931  0006  00F9               	movwf	(??_isr1+1)
  7932  0007  0804               	movf	fsr0,w
  7933  0008  00FA               	movwf	(??_isr1+2)
  7934  0009  080A               	movf	pclath,w
  7935  000A  00FB               	movwf	(??_isr1+3)
  7936  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  7937  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  7938  000D  087F               	movf	btemp+1,w
  7939  000E  00FC               	movwf	(??_isr1+4)
  7940  000F  120A  118A  2D91   	ljmp	_isr1
  7941                           psect	text908
  7942                           	line	90
  7943                           	
  7944  0591                     i1l10114:	
  7945                           ;Main.c: 90: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  7946  0591  1E8C               	btfss	(101/8),(101)&7
  7947  0592  2D94               	goto	u340_21
  7948  0593  2D95               	goto	u340_20
  7949  0594                     u340_21:
  7950  0594  2DB7               	goto	i1l10124
  7951  0595                     u340_20:
  7952                           	
  7953  0595                     i1l10116:	
  7954  0595  081A               	movf	(26),w	;volatile
  7955  0596  00F8               	movwf	(??_isr1+0)+0
  7956  0597  086D               	movf	(_rxiptr),w
  7957  0598  3EA0               	addlw	_rxfifo&0ffh
  7958  0599  0084               	movwf	fsr0
  7959  059A  0878               	movf	(??_isr1+0)+0,w
  7960  059B  1383               	bcf	status, 7	;select IRP bank1
  7961  059C  0080               	movwf	indf
  7962                           	
  7963  059D                     i1l10118:	
  7964  059D  086D               	movf	(_rxiptr),w	;volatile
  7965  059E  3E01               	addlw	01h
  7966  059F  390F               	andlw	0Fh
  7967  05A0  00F8               	movwf	(??_isr1+0)+0
  7968  05A1  0878               	movf	(??_isr1+0)+0,w
  7969  05A2  1683               	bsf	status, 5	;RP0=1, select bank1
  7970  05A3  1303               	bcf	status, 6	;RP1=0, select bank1
  7971  05A4  00D8               	movwf	(_ser_tmp)^080h
  7972                           	
  7973  05A5                     i1l10120:	
  7974  05A5  0858               	movf	(_ser_tmp)^080h,w
  7975  05A6  1283               	bcf	status, 5	;RP0=0, select bank0
  7976  05A7  1303               	bcf	status, 6	;RP1=0, select bank0
  7977  05A8  066E               	xorwf	(_rxoptr),w	;volatile
  7978  05A9  1903               	skipnz
  7979  05AA  2DAC               	goto	u341_21
  7980  05AB  2DAD               	goto	u341_20
  7981  05AC                     u341_21:
  7982  05AC  2DB7               	goto	i1l10124
  7983  05AD                     u341_20:
  7984                           	
  7985  05AD                     i1l10122:	
  7986  05AD  1683               	bsf	status, 5	;RP0=1, select bank1
  7987  05AE  1303               	bcf	status, 6	;RP1=0, select bank1
  7988  05AF  0858               	movf	(_ser_tmp)^080h,w
  7989  05B0  00F8               	movwf	(??_isr1+0)+0
  7990  05B1  0878               	movf	(??_isr1+0)+0,w
  7991  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  7992  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  7993  05B4  00ED               	movwf	(_rxiptr)	;volatile
  7994  05B5  2DB7               	goto	i1l10124
  7995                           	
  7996  05B6                     i1l2201:	
  7997  05B6  2DB7               	goto	i1l10124
  7998                           	
  7999  05B7                     i1l2200:	
  8000                           	
  8001  05B7                     i1l10124:	
  8002  05B7  1E0C               	btfss	(100/8),(100)&7
  8003  05B8  2DBA               	goto	u342_21
  8004  05B9  2DBB               	goto	u342_20
  8005  05BA                     u342_21:
  8006  05BA  2DDB               	goto	i1l2202
  8007  05BB                     u342_20:
  8008                           	
  8009  05BB                     i1l10126:	
  8010  05BB  1683               	bsf	status, 5	;RP0=1, select bank1
  8011  05BC  1303               	bcf	status, 6	;RP1=0, select bank1
  8012  05BD  1E0C               	btfss	(1124/8)^080h,(1124)&7
  8013  05BE  2DC0               	goto	u343_21
  8014  05BF  2DC1               	goto	u343_20
  8015  05C0                     u343_21:
  8016  05C0  2DDB               	goto	i1l2202
  8017  05C1                     u343_20:
  8018                           	
  8019  05C1                     i1l10128:	
  8020  05C1  1283               	bcf	status, 5	;RP0=0, select bank0
  8021  05C2  1303               	bcf	status, 6	;RP1=0, select bank0
  8022  05C3  086F               	movf	(_txoptr),w
  8023  05C4  3EB0               	addlw	_txfifo&0ffh
  8024  05C5  0084               	movwf	fsr0
  8025  05C6  1383               	bcf	status, 7	;select IRP bank1
  8026  05C7  0800               	movf	indf,w
  8027  05C8  0099               	movwf	(25)	;volatile
  8028                           	
  8029  05C9                     i1l10130:	
  8030  05C9  3001               	movlw	(01h)
  8031  05CA  00F8               	movwf	(??_isr1+0)+0
  8032  05CB  0878               	movf	(??_isr1+0)+0,w
  8033  05CC  07EF               	addwf	(_txoptr),f	;volatile
  8034                           	
  8035  05CD                     i1l10132:	
  8036  05CD  300F               	movlw	(0Fh)
  8037  05CE  00F8               	movwf	(??_isr1+0)+0
  8038  05CF  0878               	movf	(??_isr1+0)+0,w
  8039  05D0  05EF               	andwf	(_txoptr),f	;volatile
  8040                           	
  8041  05D1                     i1l10134:	
  8042  05D1  086F               	movf	(_txoptr),w	;volatile
  8043  05D2  067D               	xorwf	(_txiptr),w	;volatile
  8044  05D3  1D03               	skipz
  8045  05D4  2DD6               	goto	u344_21
  8046  05D5  2DD7               	goto	u344_20
  8047  05D6                     u344_21:
  8048  05D6  2DDB               	goto	i1l2202
  8049  05D7                     u344_20:
  8050                           	
  8051  05D7                     i1l10136:	
  8052  05D7  1683               	bsf	status, 5	;RP0=1, select bank1
  8053  05D8  1303               	bcf	status, 6	;RP1=0, select bank1
  8054  05D9  120C               	bcf	(1124/8)^080h,(1124)&7
  8055  05DA  2DDB               	goto	i1l2202
  8056                           	
  8057  05DB                     i1l2203:	
  8058                           	
  8059  05DB                     i1l2202:	
  8060                           	line	93
  8061                           ;Main.c: 93: if(TMR0IF)
  8062  05DB  1D0B               	btfss	(90/8),(90)&7
  8063  05DC  2DDE               	goto	u345_21
  8064  05DD  2DDF               	goto	u345_20
  8065  05DE                     u345_21:
  8066  05DE  2E65               	goto	i1l2210
  8067  05DF                     u345_20:
  8068                           	line	95
  8069                           	
  8070  05DF                     i1l10138:	
  8071                           ;Main.c: 94: {
  8072                           ;Main.c: 95: TMR0IF = 0;
  8073  05DF  110B               	bcf	(90/8),(90)&7
  8074                           	line	96
  8075                           	
  8076  05E0                     i1l10140:	
  8077                           ;Main.c: 96: TMR0 = 100;
  8078  05E0  3064               	movlw	(064h)
  8079  05E1  1283               	bcf	status, 5	;RP0=0, select bank0
  8080  05E2  0081               	movwf	(1)	;volatile
  8081                           	line	98
  8082                           ;Main.c: 98: RTC_Counter++;
  8083  05E3  3001               	movlw	low(01h)
  8084  05E4  07E8               	addwf	(_RTC_Counter),f	;volatile
  8085  05E5  1803               	skipnc
  8086  05E6  0AE9               	incf	(_RTC_Counter+1),f	;volatile
  8087  05E7  3000               	movlw	high(01h)
  8088  05E8  07E9               	addwf	(_RTC_Counter+1),f	;volatile
  8089                           	line	100
  8090                           	
  8091  05E9                     i1l10142:	
  8092                           ;Main.c: 100: RTC_FLAG_1MS = 1;
  8093  05E9  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  8094                           	line	101
  8095                           	
  8096  05EA                     i1l10144:	
  8097                           ;Main.c: 101: if(RTC_Counter % 10 == 0)
  8098  05EA  300A               	movlw	low(0Ah)
  8099  05EB  00F2               	movwf	(?i1___lwmod)
  8100  05EC  3000               	movlw	high(0Ah)
  8101  05ED  00F3               	movwf	((?i1___lwmod))+1
  8102  05EE  0869               	movf	(_RTC_Counter+1),w	;volatile
  8103  05EF  01F5               	clrf	1+(?i1___lwmod)+02h
  8104  05F0  07F5               	addwf	1+(?i1___lwmod)+02h
  8105  05F1  0868               	movf	(_RTC_Counter),w	;volatile
  8106  05F2  01F4               	clrf	0+(?i1___lwmod)+02h
  8107  05F3  07F4               	addwf	0+(?i1___lwmod)+02h
  8108                           
  8109  05F4  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8110  05F9  0873               	movf	((1+(?i1___lwmod))),w
  8111  05FA  0472               	iorwf	((0+(?i1___lwmod))),w
  8112  05FB  1D03               	skipz
  8113  05FC  2DFE               	goto	u346_21
  8114  05FD  2DFF               	goto	u346_20
  8115  05FE                     u346_21:
  8116  05FE  2E01               	goto	i1l10148
  8117  05FF                     u346_20:
  8118                           	line	103
  8119                           	
  8120  05FF                     i1l10146:	
  8121                           ;Main.c: 102: {
  8122                           ;Main.c: 103: RTC_FLAG_10MS = 1;
  8123  05FF  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  8124  0600  2E01               	goto	i1l10148
  8125                           	line	106
  8126                           	
  8127  0601                     i1l2205:	
  8128                           	line	107
  8129                           	
  8130  0601                     i1l10148:	
  8131                           ;Main.c: 106: }
  8132                           ;Main.c: 107: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  8133  0601  3032               	movlw	low(032h)
  8134  0602  00F2               	movwf	(?i1___lwmod)
  8135  0603  3000               	movlw	high(032h)
  8136  0604  00F3               	movwf	((?i1___lwmod))+1
  8137  0605  1283               	bcf	status, 5	;RP0=0, select bank0
  8138  0606  1303               	bcf	status, 6	;RP1=0, select bank0
  8139  0607  0869               	movf	(_RTC_Counter+1),w	;volatile
  8140  0608  01F5               	clrf	1+(?i1___lwmod)+02h
  8141  0609  07F5               	addwf	1+(?i1___lwmod)+02h
  8142  060A  0868               	movf	(_RTC_Counter),w	;volatile
  8143  060B  01F4               	clrf	0+(?i1___lwmod)+02h
  8144  060C  07F4               	addwf	0+(?i1___lwmod)+02h
  8145                           
  8146  060D  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8147  0612  0873               	movf	((1+(?i1___lwmod))),w
  8148  0613  0472               	iorwf	((0+(?i1___lwmod))),w
  8149  0614  1D03               	skipz
  8150  0615  2E17               	goto	u347_21
  8151  0616  2E18               	goto	u347_20
  8152  0617                     u347_21:
  8153  0617  2E1A               	goto	i1l10152
  8154  0618                     u347_20:
  8155                           	
  8156  0618                     i1l10150:	
  8157  0618  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  8158  0619  2E1A               	goto	i1l10152
  8159                           	
  8160  061A                     i1l2206:	
  8161                           	line	108
  8162                           	
  8163  061A                     i1l10152:	
  8164                           ;Main.c: 108: if(RTC_Counter % 250 == 0)
  8165  061A  30FA               	movlw	low(0FAh)
  8166  061B  00F2               	movwf	(?i1___lwmod)
  8167  061C  3000               	movlw	high(0FAh)
  8168  061D  00F3               	movwf	((?i1___lwmod))+1
  8169  061E  1283               	bcf	status, 5	;RP0=0, select bank0
  8170  061F  1303               	bcf	status, 6	;RP1=0, select bank0
  8171  0620  0869               	movf	(_RTC_Counter+1),w	;volatile
  8172  0621  01F5               	clrf	1+(?i1___lwmod)+02h
  8173  0622  07F5               	addwf	1+(?i1___lwmod)+02h
  8174  0623  0868               	movf	(_RTC_Counter),w	;volatile
  8175  0624  01F4               	clrf	0+(?i1___lwmod)+02h
  8176  0625  07F4               	addwf	0+(?i1___lwmod)+02h
  8177                           
  8178  0626  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8179  062B  0873               	movf	((1+(?i1___lwmod))),w
  8180  062C  0472               	iorwf	((0+(?i1___lwmod))),w
  8181  062D  1D03               	skipz
  8182  062E  2E30               	goto	u348_21
  8183  062F  2E31               	goto	u348_20
  8184  0630                     u348_21:
  8185  0630  2E33               	goto	i1l10156
  8186  0631                     u348_20:
  8187                           	line	111
  8188                           	
  8189  0631                     i1l10154:	
  8190                           ;Main.c: 109: {
  8191                           ;Main.c: 111: RTC_FLAG_250MS = 1;
  8192  0631  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  8193  0632  2E33               	goto	i1l10156
  8194                           	line	113
  8195                           	
  8196  0633                     i1l2207:	
  8197                           	line	114
  8198                           	
  8199  0633                     i1l10156:	
  8200                           ;Main.c: 113: }
  8201                           ;Main.c: 114: if(RTC_Counter % 500 == 0)
  8202  0633  30F4               	movlw	low(01F4h)
  8203  0634  00F2               	movwf	(?i1___lwmod)
  8204  0635  3001               	movlw	high(01F4h)
  8205  0636  00F3               	movwf	((?i1___lwmod))+1
  8206  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  8207  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  8208  0639  0869               	movf	(_RTC_Counter+1),w	;volatile
  8209  063A  01F5               	clrf	1+(?i1___lwmod)+02h
  8210  063B  07F5               	addwf	1+(?i1___lwmod)+02h
  8211  063C  0868               	movf	(_RTC_Counter),w	;volatile
  8212  063D  01F4               	clrf	0+(?i1___lwmod)+02h
  8213  063E  07F4               	addwf	0+(?i1___lwmod)+02h
  8214                           
  8215  063F  120A  158A  24D0   	fcall	i1___lwmod
              120A  118A         
  8216  0644  0873               	movf	((1+(?i1___lwmod))),w
  8217  0645  0472               	iorwf	((0+(?i1___lwmod))),w
  8218  0646  1D03               	skipz
  8219  0647  2E49               	goto	u349_21
  8220  0648  2E4A               	goto	u349_20
  8221  0649                     u349_21:
  8222  0649  2E52               	goto	i1l10164
  8223  064A                     u349_20:
  8224                           	line	116
  8225                           	
  8226  064A                     i1l10158:	
  8227                           ;Main.c: 115: {
  8228                           ;Main.c: 116: RTC_FLAG_500MS = 1;
  8229  064A  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  8230                           	line	117
  8231                           	
  8232  064B                     i1l10160:	
  8233                           ;Main.c: 117: RTC_Counter = 0;
  8234  064B  1283               	bcf	status, 5	;RP0=0, select bank0
  8235  064C  1303               	bcf	status, 6	;RP1=0, select bank0
  8236  064D  01E8               	clrf	(_RTC_Counter)	;volatile
  8237  064E  01E9               	clrf	(_RTC_Counter+1)	;volatile
  8238                           	line	118
  8239                           	
  8240  064F                     i1l10162:	
  8241                           ;Main.c: 118: RB0 ^= 0x01;
  8242  064F  3001               	movlw	1<<((48)&7)
  8243  0650  0686               	xorwf	((48)/8),f
  8244  0651  2E52               	goto	i1l10164
  8245                           	line	120
  8246                           	
  8247  0652                     i1l2208:	
  8248                           	line	122
  8249                           	
  8250  0652                     i1l10164:	
  8251                           ;Main.c: 120: }
  8252                           ;Main.c: 122: if (buttonPressed == 0)
  8253  0652  1283               	bcf	status, 5	;RP0=0, select bank0
  8254  0653  1303               	bcf	status, 6	;RP1=0, select bank0
  8255  0654  08EC               	movf	(_buttonPressed),f
  8256  0655  1D03               	skipz	;volatile
  8257  0656  2E58               	goto	u350_21
  8258  0657  2E59               	goto	u350_20
  8259  0658                     u350_21:
  8260  0658  2E65               	goto	i1l2210
  8261  0659                     u350_20:
  8262                           	line	124
  8263                           	
  8264  0659                     i1l10166:	
  8265                           ;Main.c: 123: {
  8266                           ;Main.c: 124: buttonPressed = ReadButtons();
  8267  0659  120A  158A  2465   	fcall	_ReadButtons
              120A  118A         
  8268  065E  00F8               	movwf	(??_isr1+0)+0
  8269  065F  0878               	movf	(??_isr1+0)+0,w
  8270  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  8271  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  8272  0662  00EC               	movwf	(_buttonPressed)	;volatile
  8273  0663  2E65               	goto	i1l2210
  8274                           	line	125
  8275                           	
  8276  0664                     i1l2209:	
  8277  0664  2E65               	goto	i1l2210
  8278                           	line	126
  8279                           	
  8280  0665                     i1l2204:	
  8281                           	line	127
  8282                           	
  8283  0665                     i1l2210:	
  8284  0665  087C               	movf	(??_isr1+4),w
  8285  0666  1283               	bcf	status, 5	;RP0=0, select bank0
  8286  0667  00FF               	movwf	btemp+1
  8287  0668  087B               	movf	(??_isr1+3),w
  8288  0669  008A               	movwf	pclath
  8289  066A  087A               	movf	(??_isr1+2),w
  8290  066B  0084               	movwf	fsr0
  8291  066C  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
  8292  066D  0083               	movwf	status
  8293  066E  0EFE               	swapf	saved_w,f
  8294  066F  0E7E               	swapf	saved_w,w
  8295  0670  0009               	retfie
  8296                           	opt stack 0
  8297                           GLOBAL	__end_of_isr1
  8298  0671                     	__end_of_isr1:
  8299 ;; =============== function _isr1 ends ============
  8300                           
  8301                           	signat	_isr1,88
  8302                           	global	_ReadButtons
  8303                           psect	text909,local,class=CODE,delta=2
  8304                           global __ptext909
  8305  0C65                     __ptext909:
  8306                           
  8307 ;; *************** function _ReadButtons *****************
  8308 ;; Defined at:
  8309 ;;		line 141 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      unsigned char 
  8316 ;; Registers used:
  8317 ;;		wreg, status,2, status,0, pclath, cstack
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8323 ;;      Params:         0       0       0       0       0
  8324 ;;      Locals:         0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0
  8326 ;;      Totals:         0       0       0       0       0
  8327 ;;Total ram usage:        0 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    1
  8330 ;; This function calls:
  8331 ;;		_Debounce
  8332 ;; This function is called by:
  8333 ;;		_isr1
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           psect	text909
  8337                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8338                           	line	141
  8339                           	global	__size_of_ReadButtons
  8340  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8341                           	
  8342  0C65                     _ReadButtons:	
  8343                           	opt	stack 0
  8344                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8345                           	line	142
  8346                           	
  8347  0C65                     i1l10168:	
  8348                           ;HMI.c: 142: Debounce();
  8349  0C65  120A  118A  2671   	fcall	_Debounce
              120A  158A         
  8350                           	line	144
  8351                           	
  8352  0C6A                     i1l10170:	
  8353                           ;HMI.c: 144: if(UpPressed)
  8354  0C6A  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  8355  0C6B  2C6D               	goto	u351_21
  8356  0C6C  2C6E               	goto	u351_20
  8357  0C6D                     u351_21:
  8358  0C6D  2C72               	goto	i1l5223
  8359  0C6E                     u351_20:
  8360                           	line	146
  8361                           	
  8362  0C6E                     i1l10172:	
  8363                           ;HMI.c: 145: {
  8364                           ;HMI.c: 146: UpPressed = 0;
  8365  0C6E  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  8366                           	line	147
  8367                           	
  8368  0C6F                     i1l10174:	
  8369                           ;HMI.c: 147: return 1;
  8370  0C6F  3001               	movlw	(01h)
  8371  0C70  2C94               	goto	i1l5224
  8372                           	
  8373  0C71                     i1l10176:	
  8374  0C71  2C94               	goto	i1l5224
  8375                           	line	149
  8376                           	
  8377  0C72                     i1l5223:	
  8378                           	line	151
  8379                           ;HMI.c: 149: }
  8380                           ;HMI.c: 151: if(DownPressed)
  8381  0C72  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8382  0C73  2C75               	goto	u352_21
  8383  0C74  2C76               	goto	u352_20
  8384  0C75                     u352_21:
  8385  0C75  2C7A               	goto	i1l5225
  8386  0C76                     u352_20:
  8387                           	line	153
  8388                           	
  8389  0C76                     i1l10178:	
  8390                           ;HMI.c: 152: {
  8391                           ;HMI.c: 153: DownPressed = 0;
  8392  0C76  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8393                           	line	154
  8394                           	
  8395  0C77                     i1l10180:	
  8396                           ;HMI.c: 154: return 2;
  8397  0C77  3002               	movlw	(02h)
  8398  0C78  2C94               	goto	i1l5224
  8399                           	
  8400  0C79                     i1l10182:	
  8401  0C79  2C94               	goto	i1l5224
  8402                           	line	156
  8403                           	
  8404  0C7A                     i1l5225:	
  8405                           	line	157
  8406                           ;HMI.c: 156: }
  8407                           ;HMI.c: 157: if(LeftPressed)
  8408  0C7A  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8409  0C7B  2C7D               	goto	u353_21
  8410  0C7C  2C7E               	goto	u353_20
  8411  0C7D                     u353_21:
  8412  0C7D  2C82               	goto	i1l5226
  8413  0C7E                     u353_20:
  8414                           	line	159
  8415                           	
  8416  0C7E                     i1l10184:	
  8417                           ;HMI.c: 158: {
  8418                           ;HMI.c: 159: LeftPressed = 0;
  8419  0C7E  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8420                           	line	160
  8421                           	
  8422  0C7F                     i1l10186:	
  8423                           ;HMI.c: 160: return 3;
  8424  0C7F  3003               	movlw	(03h)
  8425  0C80  2C94               	goto	i1l5224
  8426                           	
  8427  0C81                     i1l10188:	
  8428  0C81  2C94               	goto	i1l5224
  8429                           	line	162
  8430                           	
  8431  0C82                     i1l5226:	
  8432                           	line	163
  8433                           ;HMI.c: 162: }
  8434                           ;HMI.c: 163: if(RightPressed)
  8435  0C82  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
  8436  0C83  2C85               	goto	u354_21
  8437  0C84  2C86               	goto	u354_20
  8438  0C85                     u354_21:
  8439  0C85  2C8A               	goto	i1l5227
  8440  0C86                     u354_20:
  8441                           	line	165
  8442                           	
  8443  0C86                     i1l10190:	
  8444                           ;HMI.c: 164: {
  8445                           ;HMI.c: 165: RightPressed = 0;
  8446  0C86  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
  8447                           	line	166
  8448                           	
  8449  0C87                     i1l10192:	
  8450                           ;HMI.c: 166: return 4;
  8451  0C87  3004               	movlw	(04h)
  8452  0C88  2C94               	goto	i1l5224
  8453                           	
  8454  0C89                     i1l10194:	
  8455  0C89  2C94               	goto	i1l5224
  8456                           	line	168
  8457                           	
  8458  0C8A                     i1l5227:	
  8459                           	line	170
  8460                           ;HMI.c: 168: }
  8461                           ;HMI.c: 170: if(CenterPressed)
  8462  0C8A  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8463  0C8B  2C8D               	goto	u355_21
  8464  0C8C  2C8E               	goto	u355_20
  8465  0C8D                     u355_21:
  8466  0C8D  2C92               	goto	i1l10202
  8467  0C8E                     u355_20:
  8468                           	line	172
  8469                           	
  8470  0C8E                     i1l10196:	
  8471                           ;HMI.c: 171: {
  8472                           ;HMI.c: 172: CenterPressed = 0;
  8473  0C8E  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8474                           	line	173
  8475                           	
  8476  0C8F                     i1l10198:	
  8477                           ;HMI.c: 173: return 5;
  8478  0C8F  3005               	movlw	(05h)
  8479  0C90  2C94               	goto	i1l5224
  8480                           	
  8481  0C91                     i1l10200:	
  8482  0C91  2C94               	goto	i1l5224
  8483                           	line	175
  8484                           	
  8485  0C92                     i1l5228:	
  8486                           	line	176
  8487                           	
  8488  0C92                     i1l10202:	
  8489                           ;HMI.c: 175: }
  8490                           ;HMI.c: 176: return 0;
  8491  0C92  3000               	movlw	(0)
  8492  0C93  2C94               	goto	i1l5224
  8493                           	
  8494  0C94                     i1l10204:	
  8495                           	line	177
  8496                           	
  8497  0C94                     i1l5224:	
  8498  0C94  0008               	return
  8499                           	opt stack 0
  8500                           GLOBAL	__end_of_ReadButtons
  8501  0C95                     	__end_of_ReadButtons:
  8502 ;; =============== function _ReadButtons ends ============
  8503                           
  8504                           	signat	_ReadButtons,89
  8505                           	global	i1___lwmod
  8506                           psect	text910,local,class=CODE,delta=2
  8507                           global __ptext910
  8508  0CD0                     __ptext910:
  8509                           
  8510 ;; *************** function i1___lwmod *****************
  8511 ;; Defined at:
  8512 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  __lwmod         2    0[COMMON] unsigned int 
  8515 ;;  __lwmod         2    2[COMMON] unsigned int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  __lwmod         1    5[COMMON] unsigned char 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  2    0[COMMON] unsigned int 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8527 ;;      Params:         4       0       0       0       0
  8528 ;;      Locals:         1       0       0       0       0
  8529 ;;      Temps:          1       0       0       0       0
  8530 ;;      Totals:         6       0       0       0       0
  8531 ;;Total ram usage:        6 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_isr1
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           psect	text910
  8540                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8541                           	line	5
  8542                           	global	__size_ofi1___lwmod
  8543  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8544                           	
  8545  0CD0                     i1___lwmod:	
  8546                           	opt	stack 1
  8547                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8548                           	line	8
  8549                           	
  8550  0CD0                     i1l10524:	
  8551  0CD0  0873               	movf	(i1___lwmod@divisor+1),w
  8552  0CD1  0472               	iorwf	(i1___lwmod@divisor),w
  8553  0CD2  1903               	skipnz
  8554  0CD3  2CD5               	goto	u412_21
  8555  0CD4  2CD6               	goto	u412_20
  8556  0CD5                     u412_21:
  8557  0CD5  2D0C               	goto	i1l10542
  8558  0CD6                     u412_20:
  8559                           	line	9
  8560                           	
  8561  0CD6                     i1l10526:	
  8562  0CD6  01F7               	clrf	(i1___lwmod@counter)
  8563  0CD7  1403               	bsf	status,0
  8564  0CD8  0DF7               	rlf	(i1___lwmod@counter),f
  8565                           	line	10
  8566  0CD9  2CE6               	goto	i1l10532
  8567                           	
  8568  0CDA                     i1l7442:	
  8569                           	line	11
  8570                           	
  8571  0CDA                     i1l10528:	
  8572  0CDA  3001               	movlw	01h
  8573                           	
  8574  0CDB                     u413_25:
  8575  0CDB  1003               	clrc
  8576  0CDC  0DF2               	rlf	(i1___lwmod@divisor),f
  8577  0CDD  0DF3               	rlf	(i1___lwmod@divisor+1),f
  8578  0CDE  3EFF               	addlw	-1
  8579  0CDF  1D03               	skipz
  8580  0CE0  2CDB               	goto	u413_25
  8581                           	line	12
  8582                           	
  8583  0CE1                     i1l10530:	
  8584  0CE1  3001               	movlw	(01h)
  8585  0CE2  00F6               	movwf	(??i1___lwmod+0)+0
  8586  0CE3  0876               	movf	(??i1___lwmod+0)+0,w
  8587  0CE4  07F7               	addwf	(i1___lwmod@counter),f
  8588  0CE5  2CE6               	goto	i1l10532
  8589                           	line	13
  8590                           	
  8591  0CE6                     i1l7441:	
  8592                           	line	10
  8593                           	
  8594  0CE6                     i1l10532:	
  8595  0CE6  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  8596  0CE7  2CE9               	goto	u414_21
  8597  0CE8  2CEA               	goto	u414_20
  8598  0CE9                     u414_21:
  8599  0CE9  2CDA               	goto	i1l10528
  8600  0CEA                     u414_20:
  8601  0CEA  2CEC               	goto	i1l10534
  8602                           	
  8603  0CEB                     i1l7443:	
  8604  0CEB  2CEC               	goto	i1l10534
  8605                           	line	14
  8606                           	
  8607  0CEC                     i1l7444:	
  8608                           	line	15
  8609                           	
  8610  0CEC                     i1l10534:	
  8611  0CEC  0873               	movf	(i1___lwmod@divisor+1),w
  8612  0CED  0275               	subwf	(i1___lwmod@dividend+1),w
  8613  0CEE  1D03               	skipz
  8614  0CEF  2CF2               	goto	u415_25
  8615  0CF0  0872               	movf	(i1___lwmod@divisor),w
  8616  0CF1  0274               	subwf	(i1___lwmod@dividend),w
  8617  0CF2                     u415_25:
  8618  0CF2  1C03               	skipc
  8619  0CF3  2CF5               	goto	u415_21
  8620  0CF4  2CF6               	goto	u415_20
  8621  0CF5                     u415_21:
  8622  0CF5  2CFD               	goto	i1l10538
  8623  0CF6                     u415_20:
  8624                           	line	16
  8625                           	
  8626  0CF6                     i1l10536:	
  8627  0CF6  0872               	movf	(i1___lwmod@divisor),w
  8628  0CF7  02F4               	subwf	(i1___lwmod@dividend),f
  8629  0CF8  0873               	movf	(i1___lwmod@divisor+1),w
  8630  0CF9  1C03               	skipc
  8631  0CFA  03F5               	decf	(i1___lwmod@dividend+1),f
  8632  0CFB  02F5               	subwf	(i1___lwmod@dividend+1),f
  8633  0CFC  2CFD               	goto	i1l10538
  8634                           	
  8635  0CFD                     i1l7445:	
  8636                           	line	17
  8637                           	
  8638  0CFD                     i1l10538:	
  8639  0CFD  3001               	movlw	01h
  8640                           	
  8641  0CFE                     u416_25:
  8642  0CFE  1003               	clrc
  8643  0CFF  0CF3               	rrf	(i1___lwmod@divisor+1),f
  8644  0D00  0CF2               	rrf	(i1___lwmod@divisor),f
  8645  0D01  3EFF               	addlw	-1
  8646  0D02  1D03               	skipz
  8647  0D03  2CFE               	goto	u416_25
  8648                           	line	18
  8649                           	
  8650  0D04                     i1l10540:	
  8651  0D04  3001               	movlw	low(01h)
  8652  0D05  02F7               	subwf	(i1___lwmod@counter),f
  8653  0D06  1D03               	btfss	status,2
  8654  0D07  2D09               	goto	u417_21
  8655  0D08  2D0A               	goto	u417_20
  8656  0D09                     u417_21:
  8657  0D09  2CEC               	goto	i1l10534
  8658  0D0A                     u417_20:
  8659  0D0A  2D0C               	goto	i1l10542
  8660                           	
  8661  0D0B                     i1l7446:	
  8662  0D0B  2D0C               	goto	i1l10542
  8663                           	line	19
  8664                           	
  8665  0D0C                     i1l7440:	
  8666                           	line	20
  8667                           	
  8668  0D0C                     i1l10542:	
  8669  0D0C  0875               	movf	(i1___lwmod@dividend+1),w
  8670  0D0D  01F3               	clrf	(?i1___lwmod+1)
  8671  0D0E  07F3               	addwf	(?i1___lwmod+1)
  8672  0D0F  0874               	movf	(i1___lwmod@dividend),w
  8673  0D10  01F2               	clrf	(?i1___lwmod)
  8674  0D11  07F2               	addwf	(?i1___lwmod)
  8675                           
  8676  0D12  2D13               	goto	i1l7447
  8677                           	
  8678  0D13                     i1l10544:	
  8679                           	line	21
  8680                           	
  8681  0D13                     i1l7447:	
  8682  0D13  0008               	return
  8683                           	opt stack 0
  8684                           GLOBAL	__end_ofi1___lwmod
  8685  0D14                     	__end_ofi1___lwmod:
  8686 ;; =============== function i1___lwmod ends ============
  8687                           
  8688                           	signat	i1___lwmod,90
  8689                           	global	_Debounce
  8690                           psect	text911,local,class=CODE,delta=2
  8691                           global __ptext911
  8692  0671                     __ptext911:
  8693                           
  8694 ;; *************** function _Debounce *****************
  8695 ;; Defined at:
  8696 ;;		line 61 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;		None
  8701 ;; Return value:  Size  Location     Type
  8702 ;;		None               void
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8710 ;;      Params:         0       0       0       0       0
  8711 ;;      Locals:         0       0       0       0       0
  8712 ;;      Temps:          1       0       0       0       0
  8713 ;;      Totals:         1       0       0       0       0
  8714 ;;Total ram usage:        1 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; This function calls:
  8717 ;;		Nothing
  8718 ;; This function is called by:
  8719 ;;		_ReadButtons
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           psect	text911
  8723                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  8724                           	line	61
  8725                           	global	__size_of_Debounce
  8726  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  8727                           	
  8728  0671                     _Debounce:	
  8729                           	opt	stack 0
  8730                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  8731                           	line	63
  8732                           	
  8733  0671                     i1l10388:	
  8734                           ;HMI.c: 63: if(!RB2)
  8735  0671  1283               	bcf	status, 5	;RP0=0, select bank0
  8736  0672  1303               	bcf	status, 6	;RP1=0, select bank0
  8737  0673  1906               	btfsc	(50/8),(50)&7
  8738  0674  2E76               	goto	u371_21
  8739  0675  2E77               	goto	u371_20
  8740  0676                     u371_21:
  8741  0676  2E8B               	goto	i1l5205
  8742  0677                     u371_20:
  8743                           	line	65
  8744                           	
  8745  0677                     i1l10390:	
  8746                           ;HMI.c: 64: {
  8747                           ;HMI.c: 65: UpDebounceCount++;
  8748  0677  3001               	movlw	(01h)
  8749  0678  00F2               	movwf	(??_Debounce+0)+0
  8750  0679  0872               	movf	(??_Debounce+0)+0,w
  8751  067A  1683               	bsf	status, 5	;RP0=1, select bank1
  8752  067B  1303               	bcf	status, 6	;RP1=0, select bank1
  8753  067C  07D3               	addwf	(_UpDebounceCount)^080h,f	;volatile
  8754                           	line	66
  8755                           	
  8756  067D                     i1l10392:	
  8757                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  8758  067D  300A               	movlw	(0Ah)
  8759  067E  0253               	subwf	(_UpDebounceCount)^080h,w	;volatile
  8760  067F  1C03               	skipc
  8761  0680  2E82               	goto	u372_21
  8762  0681  2E83               	goto	u372_20
  8763  0682                     u372_21:
  8764  0682  2E8F               	goto	i1l5207
  8765  0683                     u372_20:
  8766                           	
  8767  0683                     i1l10394:	
  8768  0683  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
  8769  0684  2E86               	goto	u373_21
  8770  0685  2E87               	goto	u373_20
  8771  0686                     u373_21:
  8772  0686  2E8F               	goto	i1l5207
  8773  0687                     u373_20:
  8774                           	line	68
  8775                           	
  8776  0687                     i1l10396:	
  8777                           ;HMI.c: 67: {
  8778                           ;HMI.c: 68: UpPressed = 1;
  8779  0687  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
  8780                           	line	69
  8781                           ;HMI.c: 69: UpReleased = 0;
  8782  0688  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
  8783  0689  2E8F               	goto	i1l5207
  8784                           	line	70
  8785                           	
  8786  068A                     i1l5206:	
  8787                           	line	71
  8788                           ;HMI.c: 70: }
  8789                           ;HMI.c: 71: }
  8790  068A  2E8F               	goto	i1l5207
  8791                           	line	72
  8792                           	
  8793  068B                     i1l5205:	
  8794                           	line	74
  8795                           ;HMI.c: 72: else
  8796                           ;HMI.c: 73: {
  8797                           ;HMI.c: 74: UpDebounceCount = 0;
  8798  068B  1683               	bsf	status, 5	;RP0=1, select bank1
  8799  068C  1303               	bcf	status, 6	;RP1=0, select bank1
  8800  068D  01D3               	clrf	(_UpDebounceCount)^080h	;volatile
  8801                           	line	75
  8802                           ;HMI.c: 75: UpReleased = 1;
  8803  068E  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
  8804                           	line	76
  8805                           	
  8806  068F                     i1l5207:	
  8807                           	line	79
  8808                           ;HMI.c: 76: }
  8809                           ;HMI.c: 79: if(!RB3)
  8810  068F  1283               	bcf	status, 5	;RP0=0, select bank0
  8811  0690  1303               	bcf	status, 6	;RP1=0, select bank0
  8812  0691  1986               	btfsc	(51/8),(51)&7
  8813  0692  2E94               	goto	u374_21
  8814  0693  2E95               	goto	u374_20
  8815  0694                     u374_21:
  8816  0694  2EA9               	goto	i1l5208
  8817  0695                     u374_20:
  8818                           	line	81
  8819                           	
  8820  0695                     i1l10398:	
  8821                           ;HMI.c: 80: {
  8822                           ;HMI.c: 81: DownDebounceCount++;
  8823  0695  3001               	movlw	(01h)
  8824  0696  00F2               	movwf	(??_Debounce+0)+0
  8825  0697  0872               	movf	(??_Debounce+0)+0,w
  8826  0698  1683               	bsf	status, 5	;RP0=1, select bank1
  8827  0699  1303               	bcf	status, 6	;RP1=0, select bank1
  8828  069A  07CF               	addwf	(_DownDebounceCount)^080h,f	;volatile
  8829                           	line	82
  8830                           	
  8831  069B                     i1l10400:	
  8832                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  8833  069B  300A               	movlw	(0Ah)
  8834  069C  024F               	subwf	(_DownDebounceCount)^080h,w	;volatile
  8835  069D  1C03               	skipc
  8836  069E  2EA0               	goto	u375_21
  8837  069F  2EA1               	goto	u375_20
  8838  06A0                     u375_21:
  8839  06A0  2EAD               	goto	i1l5210
  8840  06A1                     u375_20:
  8841                           	
  8842  06A1                     i1l10402:	
  8843  06A1  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  8844  06A2  2EA4               	goto	u376_21
  8845  06A3  2EA5               	goto	u376_20
  8846  06A4                     u376_21:
  8847  06A4  2EAD               	goto	i1l5210
  8848  06A5                     u376_20:
  8849                           	line	84
  8850                           	
  8851  06A5                     i1l10404:	
  8852                           ;HMI.c: 83: {
  8853                           ;HMI.c: 84: DownPressed = 1;
  8854  06A5  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  8855                           	line	85
  8856                           ;HMI.c: 85: DownReleased = 0;
  8857  06A6  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  8858  06A7  2EAD               	goto	i1l5210
  8859                           	line	86
  8860                           	
  8861  06A8                     i1l5209:	
  8862                           	line	87
  8863                           ;HMI.c: 86: }
  8864                           ;HMI.c: 87: }
  8865  06A8  2EAD               	goto	i1l5210
  8866                           	line	88
  8867                           	
  8868  06A9                     i1l5208:	
  8869                           	line	90
  8870                           ;HMI.c: 88: else
  8871                           ;HMI.c: 89: {
  8872                           ;HMI.c: 90: DownDebounceCount = 0;
  8873  06A9  1683               	bsf	status, 5	;RP0=1, select bank1
  8874  06AA  1303               	bcf	status, 6	;RP1=0, select bank1
  8875  06AB  01CF               	clrf	(_DownDebounceCount)^080h	;volatile
  8876                           	line	91
  8877                           ;HMI.c: 91: DownReleased = 1;
  8878  06AC  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  8879                           	line	92
  8880                           	
  8881  06AD                     i1l5210:	
  8882                           	line	94
  8883                           ;HMI.c: 92: }
  8884                           ;HMI.c: 94: if(!RB4)
  8885  06AD  1283               	bcf	status, 5	;RP0=0, select bank0
  8886  06AE  1303               	bcf	status, 6	;RP1=0, select bank0
  8887  06AF  1A06               	btfsc	(52/8),(52)&7
  8888  06B0  2EB2               	goto	u377_21
  8889  06B1  2EB3               	goto	u377_20
  8890  06B2                     u377_21:
  8891  06B2  2EC7               	goto	i1l5211
  8892  06B3                     u377_20:
  8893                           	line	96
  8894                           	
  8895  06B3                     i1l10406:	
  8896                           ;HMI.c: 95: {
  8897                           ;HMI.c: 96: LeftDebounceCount++;
  8898  06B3  3001               	movlw	(01h)
  8899  06B4  00F2               	movwf	(??_Debounce+0)+0
  8900  06B5  0872               	movf	(??_Debounce+0)+0,w
  8901  06B6  1683               	bsf	status, 5	;RP0=1, select bank1
  8902  06B7  1303               	bcf	status, 6	;RP1=0, select bank1
  8903  06B8  07D0               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  8904                           	line	97
  8905                           	
  8906  06B9                     i1l10408:	
  8907                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  8908  06B9  300A               	movlw	(0Ah)
  8909  06BA  0250               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  8910  06BB  1C03               	skipc
  8911  06BC  2EBE               	goto	u378_21
  8912  06BD  2EBF               	goto	u378_20
  8913  06BE                     u378_21:
  8914  06BE  2ECB               	goto	i1l5213
  8915  06BF                     u378_20:
  8916                           	
  8917  06BF                     i1l10410:	
  8918  06BF  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  8919  06C0  2EC2               	goto	u379_21
  8920  06C1  2EC3               	goto	u379_20
  8921  06C2                     u379_21:
  8922  06C2  2ECB               	goto	i1l5213
  8923  06C3                     u379_20:
  8924                           	line	99
  8925                           	
  8926  06C3                     i1l10412:	
  8927                           ;HMI.c: 98: {
  8928                           ;HMI.c: 99: LeftPressed = 1;
  8929  06C3  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  8930                           	line	100
  8931                           ;HMI.c: 100: LeftReleased = 0;
  8932  06C4  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  8933  06C5  2ECB               	goto	i1l5213
  8934                           	line	101
  8935                           	
  8936  06C6                     i1l5212:	
  8937                           	line	102
  8938                           ;HMI.c: 101: }
  8939                           ;HMI.c: 102: }
  8940  06C6  2ECB               	goto	i1l5213
  8941                           	line	103
  8942                           	
  8943  06C7                     i1l5211:	
  8944                           	line	105
  8945                           ;HMI.c: 103: else
  8946                           ;HMI.c: 104: {
  8947                           ;HMI.c: 105: LeftDebounceCount = 0;
  8948  06C7  1683               	bsf	status, 5	;RP0=1, select bank1
  8949  06C8  1303               	bcf	status, 6	;RP1=0, select bank1
  8950  06C9  01D0               	clrf	(_LeftDebounceCount)^080h	;volatile
  8951                           	line	106
  8952                           ;HMI.c: 106: LeftReleased = 1;
  8953  06CA  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  8954                           	line	107
  8955                           	
  8956  06CB                     i1l5213:	
  8957                           	line	109
  8958                           ;HMI.c: 107: }
  8959                           ;HMI.c: 109: if(!RB5)
  8960  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  8961  06CC  1303               	bcf	status, 6	;RP1=0, select bank0
  8962  06CD  1A86               	btfsc	(53/8),(53)&7
  8963  06CE  2ED0               	goto	u380_21
  8964  06CF  2ED1               	goto	u380_20
  8965  06D0                     u380_21:
  8966  06D0  2EE5               	goto	i1l5214
  8967  06D1                     u380_20:
  8968                           	line	111
  8969                           	
  8970  06D1                     i1l10414:	
  8971                           ;HMI.c: 110: {
  8972                           ;HMI.c: 111: RightDebounceCount++;
  8973  06D1  3001               	movlw	(01h)
  8974  06D2  00F2               	movwf	(??_Debounce+0)+0
  8975  06D3  0872               	movf	(??_Debounce+0)+0,w
  8976  06D4  1683               	bsf	status, 5	;RP0=1, select bank1
  8977  06D5  1303               	bcf	status, 6	;RP1=0, select bank1
  8978  06D6  07D1               	addwf	(_RightDebounceCount)^080h,f	;volatile
  8979                           	line	112
  8980                           	
  8981  06D7                     i1l10416:	
  8982                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  8983  06D7  300A               	movlw	(0Ah)
  8984  06D8  0251               	subwf	(_RightDebounceCount)^080h,w	;volatile
  8985  06D9  1C03               	skipc
  8986  06DA  2EDC               	goto	u381_21
  8987  06DB  2EDD               	goto	u381_20
  8988  06DC                     u381_21:
  8989  06DC  2EE9               	goto	i1l5216
  8990  06DD                     u381_20:
  8991                           	
  8992  06DD                     i1l10418:	
  8993  06DD  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
  8994  06DE  2EE0               	goto	u382_21
  8995  06DF  2EE1               	goto	u382_20
  8996  06E0                     u382_21:
  8997  06E0  2EE9               	goto	i1l5216
  8998  06E1                     u382_20:
  8999                           	line	114
  9000                           	
  9001  06E1                     i1l10420:	
  9002                           ;HMI.c: 113: {
  9003                           ;HMI.c: 114: RightPressed = 1;
  9004  06E1  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
  9005                           	line	115
  9006                           ;HMI.c: 115: RightReleased = 0;
  9007  06E2  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
  9008  06E3  2EE9               	goto	i1l5216
  9009                           	line	116
  9010                           	
  9011  06E4                     i1l5215:	
  9012                           	line	117
  9013                           ;HMI.c: 116: }
  9014                           ;HMI.c: 117: }
  9015  06E4  2EE9               	goto	i1l5216
  9016                           	line	118
  9017                           	
  9018  06E5                     i1l5214:	
  9019                           	line	120
  9020                           ;HMI.c: 118: else
  9021                           ;HMI.c: 119: {
  9022                           ;HMI.c: 120: RightDebounceCount = 0;
  9023  06E5  1683               	bsf	status, 5	;RP0=1, select bank1
  9024  06E6  1303               	bcf	status, 6	;RP1=0, select bank1
  9025  06E7  01D1               	clrf	(_RightDebounceCount)^080h	;volatile
  9026                           	line	121
  9027                           ;HMI.c: 121: RightReleased = 1;
  9028  06E8  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
  9029                           	line	122
  9030                           	
  9031  06E9                     i1l5216:	
  9032                           	line	124
  9033                           ;HMI.c: 122: }
  9034                           ;HMI.c: 124: if(!RB6)
  9035  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
  9036  06EA  1303               	bcf	status, 6	;RP1=0, select bank0
  9037  06EB  1B06               	btfsc	(54/8),(54)&7
  9038  06EC  2EEE               	goto	u383_21
  9039  06ED  2EEF               	goto	u383_20
  9040  06EE                     u383_21:
  9041  06EE  2F03               	goto	i1l5217
  9042  06EF                     u383_20:
  9043                           	line	126
  9044                           	
  9045  06EF                     i1l10422:	
  9046                           ;HMI.c: 125: {
  9047                           ;HMI.c: 126: CenterDebounceCount++;
  9048  06EF  3001               	movlw	(01h)
  9049  06F0  00F2               	movwf	(??_Debounce+0)+0
  9050  06F1  0872               	movf	(??_Debounce+0)+0,w
  9051  06F2  1683               	bsf	status, 5	;RP0=1, select bank1
  9052  06F3  1303               	bcf	status, 6	;RP1=0, select bank1
  9053  06F4  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  9054                           	line	127
  9055                           	
  9056  06F5                     i1l10424:	
  9057                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  9058  06F5  300A               	movlw	(0Ah)
  9059  06F6  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  9060  06F7  1C03               	skipc
  9061  06F8  2EFA               	goto	u384_21
  9062  06F9  2EFB               	goto	u384_20
  9063  06FA                     u384_21:
  9064  06FA  2F08               	goto	i1l5220
  9065  06FB                     u384_20:
  9066                           	
  9067  06FB                     i1l10426:	
  9068  06FB  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  9069  06FC  2EFE               	goto	u385_21
  9070  06FD  2EFF               	goto	u385_20
  9071  06FE                     u385_21:
  9072  06FE  2F08               	goto	i1l5220
  9073  06FF                     u385_20:
  9074                           	line	129
  9075                           	
  9076  06FF                     i1l10428:	
  9077                           ;HMI.c: 128: {
  9078                           ;HMI.c: 129: CenterPressed = 1;
  9079  06FF  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  9080                           	line	130
  9081                           ;HMI.c: 130: CenterReleased = 0;
  9082  0700  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  9083  0701  2F08               	goto	i1l5220
  9084                           	line	131
  9085                           	
  9086  0702                     i1l5218:	
  9087                           	line	132
  9088                           ;HMI.c: 131: }
  9089                           ;HMI.c: 132: }
  9090  0702  2F08               	goto	i1l5220
  9091                           	line	133
  9092                           	
  9093  0703                     i1l5217:	
  9094                           	line	135
  9095                           ;HMI.c: 133: else
  9096                           ;HMI.c: 134: {
  9097                           ;HMI.c: 135: CenterDebounceCount = 0;
  9098  0703  1683               	bsf	status, 5	;RP0=1, select bank1
  9099  0704  1303               	bcf	status, 6	;RP1=0, select bank1
  9100  0705  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
  9101                           	line	136
  9102                           ;HMI.c: 136: CenterReleased = 1;
  9103  0706  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  9104  0707  2F08               	goto	i1l5220
  9105                           	line	137
  9106                           	
  9107  0708                     i1l5219:	
  9108                           	line	138
  9109                           	
  9110  0708                     i1l5220:	
  9111  0708  0008               	return
  9112                           	opt stack 0
  9113                           GLOBAL	__end_of_Debounce
  9114  0709                     	__end_of_Debounce:
  9115 ;; =============== function _Debounce ends ============
  9116                           
  9117                           	signat	_Debounce,88
  9118                           psect	text912,local,class=CODE,delta=2
  9119                           global __ptext912
  9120  0000                     __ptext912:
  9121                           	global	btemp
  9122  007E                     	btemp set 07Eh
  9123                           
  9124                           	DABS	1,126,2	;btemp
  9125                           	global	wtemp0
  9126  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 24 14:54:30 2015

 __end_of_lcd_write_control 0A89             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 0A9E  
                       l703 0B60                         l704 0B60                         l705 0B64  
                       l706 0B83                         l690 0C99                         l691 0CC2  
                       l692 0C9D                         l693 0CA1                         l694 0CA5  
                       l695 0CA9                         l696 0CAD                         l689 0CB1  
                       l697 0CCF                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _pos 00C6                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026             ?_lcd_set_cursor 0072  
                      l1402 0A4D                        l1410 0C06                        l1411 0C06  
                      l2220 0EF8                        l1405 0A12                        l2213 0C35  
                      l2221 0EB6                        l2222 0EB8                        l2223 0EC8  
                      l2231 0F19                        l1408 0BF5                        l2224 0ED6  
                      l2216 0EA8                        l2232 0F6B                        l2240 03AB  
                      l1409 0BDC                        l2225 0EFA                        l2217 0EB3  
                      l2233 0F37                        l2241 03F5                        l2218 0EE5  
                      l2226 0EE3                        l2234 0F77                        l2250 03FC  
                      l2242 03B5                        l2227 0EF9                        l2219 0EB4  
                      l2251 041F                        l2243 03BF                        l2228 0EFA  
                      l2252 043A                        l2244 03C9                        l1429 0BAE  
                      l2253 046B                        l2245 03D3                        l2237 038B  
                      l2254 0471                        l2246 03E0                        l2238 03AA  
                      l2255 048D                        l2247 0473                        l2239 03E2  
                      l2256 048E                        l2248 03F6                        l2257 048E  
                      l2249 0486                        l1399 0A88                        l4421 0AEF  
                      l4430 0AEC                        l4422 0AEE                        l5231 0D8C  
                      l4423 0AF8                        l5240 0DA0                        l5232 0D5E  
                      l4424 0B0E                        l5233 0D9E                        l5241 0D8A  
                      l4417 0AC0                        l5234 0D5F                        l4418 0ACB  
                      l5250 0384                        l5235 0D60                        l4427 0AD1  
                      l5251 030B                        l4452 0B5A                        l5236 0D71  
                      l4428 0AD0                        l5252 0378                        l5237 0D72  
                      l4429 0AD9                        l5253 0384                        l5238 0D84  
                      l5246 037A                        l5239 0D85                        l5247 0251  
                      l5248 02B0                        l2960 0E56                        l5249 02C3  
                      l2961 0E77                        l3682 0E01                        l2970 00B0  
                      l2962 0E95                        l3683 0E08                        l2971 0236  
                      l3676 0A69                        l3684 0E25                        l2980 0231  
                      l2972 00FD                        l3677 0A69                        l3685 0E0F  
                      l2973 0235                        l2981 0237                        l2965 0AB4  
                      l3678 0A6E                        l3686 0E2F                        l2974 014A  
                      l3679 0A74                        l3687 0E40                        l2975 0234  
                      l2976 0197                        l2968 0063                        l2969 0237  
                      l2977 0233                        l2978 01E4                        l2979 0232  
                      l6700 0A3A                        l7430 0DE9                        l7431 0DBB  
                      l6711 073E                        l6703 0B32                        l7424 0BB4  
                      l7432 0DAF                        l7440 0D52                        l6712 075C  
                      l7425 0BBE                        l7433 0DC0                        l7441 0D2C  
                      l6713 0790                        l7426 0BD3                        l7434 0DC1  
                      l7442 0D20                        l6706 0FAD                        l6722 0577  
                      l6730 04C7                        l7427 0BDA                        l7435 0DDA  
                      l7443 0D31                        l6707 0FCB                        l6731 04B0  
                      l6723 0499                        l7436 0DE8                        l7444 0D32  
                      l6708 0FFF                        l6740 058A                        l6732 04E1  
                      l6724 04AB                        l7437 0DF0                        l7445 0D43  
                      l6741 0590                        l6733 04EC                        l6725 04B2  
                      l7446 0D51                        l6734 0514                        l6726 04AD  
                      l7447 0D59                        l6727 058B                        l6735 0509  
                      l7640 07E6                        l7632 07A1                        l6736 0526  
                      l6728 04AE                        l7641 07F1                        l7633 07AB  
                      l6737 056B                        l6729 04AF                        l7642 07F8  
                      l7634 07E7                        l6738 052B                        l7635 07C1  
                      l6739 0576                        l7636 07B5                        l7637 07C6  
                      l7638 07C7                        l7639 07D8                        l6697 0A2B  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 0832                        STR_2 0829                        STR_3 0844  
                      STR_4 084D                        STR_5 083B                        STR_6 086D  
                      STR_7 0871                        STR_8 085D                        STR_9 0869  
                      _BRGH 04C2                        _CREN 00C4                        u4000 0D3C  
                      u4001 0D3B                        u4020 0D50                        u4100 07E5  
                      u4021 0D4F                        u4005 0D38                        u4101 07E4  
                      u4110 07EB                        u4030 0798                        u4015 0D44  
                      u4031 0797                        u4040 07A5                        u4200 0F8E  
                      u4041 07A4                        u4201 0F8D                        u4050 07B1  
                      u4210 071F                        u4051 07B0                        u4211 071E  
                      u4300 0154                        u4220 0020                        u4301 0153  
                      u4221 001F                        u3350 0B64                        u4070 07C5  
                      u4310 015D                        u4230 0029                        u3351 0B63  
                      u4071 07C4                        u4311 015C                        u4231 0028  
                      u4080 07D1                        u4320 01A1                        u4240 006D  
                      u4400 0507                        u4081 07D0                        u4065 07B6  
                      u4321 01A0                        u4241 006C                        u4401 0506  
                      u4330 01AA                        u4250 0076                        u4410 0513  
                      u4331 01A9                        u4251 0075                        u4411 0512  
                      u4180 0DFA                        u4340 01EE                        u4260 00BA  
                      u4420 051A                        u4500 0EAC                        u3365 0B71  
                      u4085 07CD                        u4181 0DF9                        u4341 01ED  
                      u4261 00B9                        u4421 0519                        u4405 0503  
                      u4501 0EAB                        u3630 0ABB                        u4190 0E2F  
                      u4350 01F7                        u4270 00C3                        u4430 0575  
                      u4510 0F17                        u3631 0ABA                        u4095 07D9  
                      u4191 0E2E                        u4351 01F6                        u4271 00C2  
                      u4431 0574                        u4511 0F16                        u3560 0D6C  
                      u3640 0AC6                        u4280 0107                        u4360 0AF8  
                      u4440 0589                        u4520 0F2A                        u3561 0D6B  
                      u3641 0AC5                        u4281 0106                        u4361 0AF7  
                      u4441 0588                        u4521 0F29                        u3570 0D81  
                      u3650 0AD9                        u4290 0110                        u4370 049F  
                      u4450 0C05                        u4530 0F6B                        u3571 0D80  
                      u3651 0AD8                        u4195 0E2B                        u4291 010F  
                      u4371 049E                        u4451 0C04                        u4531 0F6A  
                      u4515 0F13                        u3580 0A6D                        u3900 0DAB  
                      u4380 04D7                        u4460 0242                        u4540 039A  
                      u3581 0A6C                        u3901 0DAA                        u4381 04D6  
                      u4525 0F26                        u4541 0399                        u4390 04EA  
                      u4470 029D                        u4550 039E                        u4607 0A83  
                      u4391 04E9                        u4471 029C                        u4535 0F67  
                      u4551 039D                        u3920 0DBF                        u4480 0E54  
                      u3921 0DBE                        u4617 0A9C                        u4481 0E53  
                      u4490 0E76                        u3915 0DB0                        u4627 0CC4  
                      u4475 0299                        u4491 0E75                        _RCIE 0465  
                      u3860 0BB8                        u3940 0DD2                        _RCIF 0065  
                      u3861 0BB7                        u3941 0DD1                        u4485 0E50  
                      u3935 0DC2                        u4495 0E72                        u4567 0427  
                      u3960 0DE7                        u3961 0DE6                        u3945 0DCE  
                      u4577 0442                        u3890 0BD2                        u3970 0D1C  
                      u3891 0BD1                        u3875 0BBF                        u3955 0DDB  
                      u3971 0D1B                        u4587 0E18                        u3885 0BC6  
                      u4597 0A49                        u3990 0D30                        u3991 0D2F  
                      u3985 0D21                        _OERR 00C1                        _TMR0 0001  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0223                        _Menu 0D5A      __end_of_lcd_write_data 0A4E  
                      _isr1 0591                        _main 0385                        _init 0C07  
                      _test 00C8                        btemp 007E              _CenterReleased 0381  
                      start 0012               ??_ReadButtons 0073                       ?_Menu 0072  
          ??_robot_distance 0024                       l10210 0B3E                       l10220 0B48  
                     l10212 0B3F                       l10230 0B51                       l10222 0B4B  
                     l10214 0B41                       l10206 0B33                       l10080 0B5E  
                     l10224 0B4C                       l10216 0B42                       l10208 0B36  
                     l10240 0D72                       l10232 0D5D                       l10082 0B67  
                     l10226 0B4F                       l10218 0B45                       l10242 0D81  
                     l10234 0D60                       l10250 0D8C                       l10066 0AC8  
                     l10330 0ABB                       l10084 0B7A                       l10228 0B50  
                     l10244 0D85                       l10236 0D68                       l10252 0D9E  
                     l10260 0A6E                       l10068 0ACA                       l10340 0AC8  
                     l10332 0ABD                       l10500 07B1                       l10086 0B83  
                     l10078 0B5B                       l10254 0DA0                       l10246 0D89  
                     l10238 0D6C                       l10262 0A72                       l10342 0ACB  
                     l10334 0ABF                       l10350 0AE2                       l10430 0BAF  
                     l10510 07D1                       l10502 07B5                       l10248 0D8B  
                     l10264 0A74                       l10256 0A64                       l10336 0AC0  
                     l10328 0AB5                       l10352 0AE8                       l10344 0ACF  
                     l10440 0BDA                       l10432 0BB4                       l10520 07F1  
                     l10512 07D8                       l10504 07BC                       l10600 0E0B  
                     l10258 0A66                       l10338 0AC6                       l10354 0AEB  
                     l10346 0AD1                       l10434 0BB8                       l10450 0DB6  
                     l10442 0DA1                       l10522 07F8                       l10514 07DF  
                     l10506 07C1                       l10610 0E3A                       l10602 0E0C  
                     l10348 0ADA                       l10436 0BC5                       l10460 0DDA  
                     l10452 0DBB                       l10444 0DA5                       l10508 07C7  
                     l10516 07E7                       l10612 0E3B                       l10604 0E14  
                     l10620 0F80                       l10700 049F                       l10438 0BD3  
                     l10462 0DE1                       l10454 0DC1                       l10446 0DAB  
                     l10470 0D1C                       l10518 07EB                       l10550 0CAF  
                     l10614 0E3C                       l10606 0E31                       l10622 0F88  
                     l10630 0711                       l10710 04CF                       l10702 04A6  
                     l10456 0DD2                       l10448 0DAF                       l10464 0DE9  
                     l10480 0D3C                       l10472 0D20                       l10560 0CCF  
                     l10552 0CB0                       l10616 0E3D                       l10608 0E37  
                     l10624 0F8E                       l10632 0719                       l10640 0020  
                     l10720 04E4                       l10712 04D3                       l10704 04B1  
                     l10800 0C17                       l10466 0DF0                       l10458 0DD8  
                     l10482 0D43                       l10474 0D27                       l10490 0791  
                     l10554 0CB1                       l10546 0C98                       l10570 0A98  
                     l10562 0A89                       l10626 0FAD                       l10618 0F78  
                     l10634 071F                       l10650 00B0                       l10642 0029  
                     l10730 050D                       l10722 04EB                       l10714 04D7  
                     l10706 04B2                       l10810 0C2E                       l10802 0C1C  
                     l10484 0D4A                       l10476 0D2C                       l10468 0D14  
                     l10492 0798                       l10548 0CAD                       l10556 0CC2  
                     l10564 0A8C                       l10572 0A78                       l10580 0A3E  
                     l10636 073E                       l10628 0709                       l10660 0110  
                     l10652 00BA                       l10644 0063                       l10740 052B  
                     l10732 0514                       l10724 04EC                       l10716 04DB  
                     l10708 04C7                       l10812 0C32                       l10804 0C20  
                     l10820 0251                       l10900 0EE4                       l10478 0D32  
                     l10486 0D52                       l10494 07A1                       l10558 0CC6  
                     l10566 0A90                       l10574 0A7B                       l10582 0A41  
                     l10590 0DF1                       l10670 01A1                       l10662 014A  
                     l10654 00C3                       l10646 006D                       l10638 0015  
                     l10742 055F                       l10734 051A                       l10726 0508  
                     l10718 04E1                       l10750 058B                       l10814 0C33  
                     l10806 0C28                       l10830 029D                       l10822 0257  
                     l10902 0EE5                       l10910 0F0A                       l10488 0D59  
                     l10496 07A5                       l10568 0A94                       l10576 0A7D  
                     l10584 0A43                       l10592 0DF5                       l10672 01AA  
                     l10664 0154                       l10656 00FD                       l10648 0076  
                     l10680 0AED                       l10752 0590                       l10744 0566  
                     l10736 0521                       l10728 0509                       l10760 0BDB  
                     l10816 0C34                       l10808 0C2A                       l10840 030B  
                     l10832 02B0                       l10824 0277                       l10920 0F37  
                     l10912 0F18                       l10904 0EFB                       l10498 07AB  
                     l10578 0A7E                       l10586 0A44                       l10594 0DFA  
                     l10674 01E4                       l10666 015D                       l10658 0107  
                     l10690 0B0B                       l10682 0AEF                       l10746 056B  
                     l10738 0526                       l10754 0A2C                       l10762 0BDC  
                     l10770 0B88                       l10850 035B                       l10842 0311  
                     l10834 02C3                       l10826 0288                       l10818 0238  
                     l10930 0F6E                       l10922 0F43                       l10914 0F19  
                     l10906 0F01                       l10588 0A1F                       l10596 0E01  
                     l10676 01EE                       l10668 0197                       l10692 0B0C  
                     l10684 0AF9                       l10748 0577                       l10756 0A0B  
                     l10764 0BEC                       l10780 0B96                       l10772 0B8B  
                     l10852 0366                       l10844 0333                       l10836 02C9  
                     l10828 028E                       l10860 0E47                       l10932 0F77  
                     l10924 0F48                       l10916 0F1E                       l10908 0F06  
                     l10940 0393                       l10598 0E08                       l10678 01F7  
                     l10694 0B0E                       l10686 0B03                       l10758 0A0C  
                     l10766 0BF5                       l10782 0B9C                       l10774 0B8C  
                     l10790 0A9F                       l10854 0379                       l10846 0344  
                     l10838 02E0                       l10862 0E55                       l10870 0E77  
                     l10926 0F56                       l10918 0F2A                       l10950 03B1  
                     l10942 039A                       l10934 0385                       l10688 0B07  
                     l10696 0494                       l10784 0BA2                       l10776 0B8F  
                     l10768 0B84                       l10792 0AAD                       l10848 034A  
                     l10856 037A                       l10864 0E56                       l10880 0EAD  
                     l10872 0E96                       l10928 0F5E                       l10960 03C9  
                     l10952 03B5                       l10944 039E                       l10936 038B  
                     l10698 0499                       l10786 0BA8                       l10778 0B90  
                     l10794 0AB4                       l10866 0E63                       l10858 0E41  
                     l10890 0ED6                       l10882 0EB8                       l10874 0E9B  
                     l10962 03CF                       l10954 03BB                       l10946 039F  
                     l10970 03E2                       l10938 0391                       l10788 0B0F  
                     l10796 0C07                       l10868 0E69                       l10892 0EDA  
                     l10884 0EC4                       l10876 0EA8                       l10980 042E  
                     l10972 03F6                       l10964 03D3                       l10956 03BF  
                     l10948 03AB                       l10798 0C08                       l10894 0EDD  
                     l10886 0EC8                       l10878 0EAC                       l10990 046B  
                     l10982 043A                       l10974 03FC                       l10966 03DE  
                     l10958 03C5                       l10896 0EE1                       l10888 0ED2  
                     l10992 0472                       l10984 0449                       l10976 0409  
                     l10968 03E1                       l10898 0EE2                       l10986 0454  
                     l10978 041F                       l10994 0473                       l10988 045F  
                     l10996 0486        __size_of_calibrateIR 0065                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072                       _EEADR 010D  
                     STR_10 0875                       STR_11 081A                       STR_12 081A  
                     STR_13 0861                       STR_14 0855                       STR_15 0865  
           __end_of___awmod 07F9                       _CARRY 0018             __end_of___lwdiv 0DF1  
           __end_of___lwmod 0D5A                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0F78                       _total 00CA  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00DB  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 0591            __end_of_Debounce 0709  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
              __end_of_Menu 0DA1  __size_of_lcd_write_control 0014            _shortMenuStrings 00E1  
              __end_of_isr1 0671                __end_of_main 0491                __end_of_init 0C36  
           rotate@direction 0025                      ??_Menu 0020               ?_readDistance 0028  
    readAvgDistance@fullval 0030                      ??_isr1 0078                      ??_main 0062  
                    ??_init 0023         __end_of_ReadButtons 0C95                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          __end_of_adc_read 0B84                      i1l2200 05B7                      i1l2201 05B6  
                    i1l2210 0665                      i1l2202 05DB                      i1l2203 05DB  
                    i1l2204 0665                      i1l2205 0601                      i1l2206 061A  
                    i1l2207 0633                      i1l2208 0652                      i1l2209 0664  
                    i1l5210 06AD                      i1l5211 06C7                      i1l5220 0708  
                    i1l5212 06C6                      i1l5213 06CB                      i1l5205 068B  
                    i1l5214 06E5                      i1l5206 068A                      i1l5215 06E4  
                    i1l5207 068F                      i1l5223 0C72                      i1l5216 06E9  
                    i1l5208 06A9                      i1l5224 0C94                      i1l5217 0703  
                    i1l5209 06A8                      i1l5225 0C7A                      i1l5218 0702  
                    i1l5226 0C82                      i1l5219 0708                      i1l5227 0C8A  
                    i1l5228 0C92                      i1l7440 0D0C                      i1l7441 0CE6  
                    i1l7442 0CDA                      i1l7443 0CEB                      i1l7444 0CEC  
                    i1l7445 0CFD                      i1l7446 0D0B                      i1l7447 0D13  
                    u412_20 0CD6                      u340_20 0595                      u412_21 0CD5  
                    u340_21 0594                      u341_20 05AD                      u341_21 05AC  
                    u413_25 0CDB                      u414_20 0CEA                      u350_20 0659  
                    u342_20 05BB                      u414_21 0CE9                      u350_21 0658  
                    u342_21 05BA                      u415_20 0CF6                      u351_20 0C6E  
                    u343_20 05C1                      u415_21 0CF5                      u351_21 0C6D  
                    u343_21 05C0                      u415_25 0CF2                      u352_20 0C76  
                    u344_20 05D7                      u352_21 0C75                      u344_21 05D6  
                    u416_25 0CFE                      u417_20 0D0A                      u353_20 0C7E  
                    u345_20 05DF                      u417_21 0D09                      u353_21 0C7D  
                    u345_21 05DE                      u354_20 0C86                      u346_20 05FF  
                    u354_21 0C85                      u346_21 05FE                      u371_20 0677  
                    u355_20 0C8E                      u347_20 0618                      u371_21 0676  
                    u355_21 0C8D                      u347_21 0617                      u380_20 06D1  
                    u372_20 0683                      u348_20 0631                      u380_21 06D0  
                    u372_21 0682                      u348_21 0630                      u381_20 06DD  
                    u373_20 0687                      u349_20 064A                      u381_21 06DC  
                    u373_21 0686                      u349_21 0649                      u382_20 06E1  
                    u374_20 0695                      u382_21 06E0                      u374_21 0694  
                    u383_20 06EF                      u375_20 06A1                      u383_21 06EE  
                    u375_21 06A0                      u384_20 06FB                      u376_20 06A5  
                    u384_21 06FA                      u376_21 06A4                      u385_20 06FF  
                    u377_20 06B3                      u385_21 06FE                      u377_21 06B2  
                    u378_20 06BF                      u378_21 06BE                      u379_20 06C3  
                    u379_21 06C2                      _TMR0IE 005D                      _TMR0IF 005A  
              scan360@steps 0060                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038E            __end_of_lcd_init 0BAF                      _adcVal 006A  
           _UpDebounceCount 00D3                      ___wmul 0BAF                   ??___awmod 0024  
              _turnhighByte 00DA                ??_ADCconvert 002E                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 0A9F              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 0C07             ___awmod@counter 0025  
                    _rotate 0DF1                      _rxfifo 00A0                      clrloop 0A01  
                    _txfifo 00B0                      _rxiptr 006D                      _rxoptr 006E  
                    _txiptr 007D                   ??_scan360 005C                      _txoptr 006F  
          __end_of_ser_init 0B5B            __end_of_ser_isrx 0ACC           __end_ofi1___lwmod 0D14  
                    saved_w 007E               main@shortwall 0065                 _LeftPressed 0384  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 0238              __pcstackCOMMON 0072                __pidataBANK1 0A13  
               _ReadButtons 0C65            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 006C                  __pbssBANK0 0068                  __pbssBANK1 00A0  
                __pbssBANK3 0190           _DownDebounceCount 00CF          _RightDebounceCount 00D1  
                __pmaintext 0385           robotTurn@distance 0022                     ?___wmul 0020  
                __pintentry 0004       __end_of_UpdateDisplay 0385          __size_of_ser_getch 0022  
                 ?_adc_read 0020                     ?_rotate 0023          __size_of_ser_putch 0021  
        __size_of_robo_init 000D                     i1l10200 0C91                     i1l10120 05A5  
                   i1l10202 0C92                     i1l10130 05C9                     i1l10122 05AD  
                   i1l10114 0591                     i1l10204 0C94                     i1l10140 05E0  
                   i1l10132 05CD                     i1l10116 0595                     i1l10124 05B7  
                   i1l10150 0618                     i1l10142 05E9                     i1l10134 05D1  
                   i1l10126 05BB                     i1l10118 059D                     i1l10400 069B  
                   i1l10160 064B                     i1l10152 061A                     i1l10144 05EA  
                   i1l10136 05D7                     i1l10128 05C1                     i1l10410 06BF  
                   i1l10402 06A1                     i1l10170 0C6A                     i1l10162 064F  
                   i1l10154 0631                     i1l10146 05FF                     i1l10138 05DF  
                   i1l10420 06E1                     i1l10412 06C3                     i1l10404 06A5  
                   i1l10180 0C77                     i1l10172 0C6E                     i1l10164 0652  
                   i1l10156 0633                     i1l10148 0601                     i1l10422 06EF  
                   i1l10414 06D1                     i1l10406 06B3                     i1l10190 0C86  
                   i1l10182 0C79                     i1l10174 0C6F                     i1l10166 0659  
                   i1l10158 064A          __size_of_robotMove 0088                     i1l10424 06F5  
                   i1l10416 06D7                     i1l10408 06B9                     i1l10192 0C87  
                   i1l10184 0C7E                     i1l10176 0C71                     i1l10168 0C65  
                   i1l10426 06FB                     i1l10418 06DD                     i1l10530 0CE1  
                   i1l10194 0C89                     i1l10186 0C7F                     i1l10178 0C76  
                   i1l10428 06FF                     i1l10540 0D04                     i1l10532 0CE6  
                   i1l10524 0CD0                     i1l10196 0C8E                     i1l10188 0C81  
                   i1l10390 0677                     i1l10534 0CEC                     i1l10526 0CD6  
                   i1l10542 0D0C                     i1l10198 0C8F                     i1l10392 067D  
                   i1l10544 0D13                     i1l10536 0CF6                     i1l10528 0CDA  
                   i1l10394 0683                     i1l10538 0CFD                     i1l10396 0687  
                   i1l10388 0671                     i1l10398 0695          __size_of_robotTurn 0088  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 0AB5                   ?_init_adc 0072  
                 ?_ser_init 0072                   ?_ser_isrx 0072               ??_calibrateIR 005A  
                   ___awmod 0791             __size_of___wmul 002C                     ___lwdiv 0DA1  
                   ___lwmod 0D14   __size_of_adc_read_channel 003B                  ??_adc_read 0022  
           __size_of_rotate 0050                     _scan360 0EFB                     _dpowers 0810  
          ___awmod@dividend 0022                     _lowByte 00D7                     _ser_tmp 00D8  
                   _sprintf 0491                  ??_lcd_init 0023        end_of_initialization 0C61  
         __end_of_ser_getch 0B0F                   _SCAN_FLAG 00D2                     init_ram 0A52  
                ??_init_adc 0020           __end_of_ser_putch 0AED           __end_of_robo_init 0A2C  
         __end_of_robotMove 1000                _LeftReleased 0385           __end_of_robotTurn 0791  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038C    __size_of_readAvgDistance 0055  
                _robot_read 0A2C           ?_lcd_write_string 0027         __end_of_calibrateIR 0EFB  
        ??_lcd_write_string 0029                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024                   i1___lwmod 0CD0     __size_of_robot_distance 0024  
                _totalSteps 00CC                  main@choice 0067               ?_spi_transfer 0072  
                 Menu@input 0020               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 0BDB           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 0E41         start_initialization 0C36       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038D              _RTC_FLAG_250MS 0388  
            _RTC_FLAG_500MS 0389                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 0E96                 __pdataBANK1 00DC            _adc_read_channel 0C95  
               ?_robot_read 0022                    ??_rotate 0026                _readDistance 0A9F  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020           __size_of_lcd_init 002B                 sprintf@_val 003F  
               sprintf@flag 003D           robotMove@distance 0022                 sprintf@prec 003E  
              _current_step 00E6            readAvgDistance@i 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                    ?___awmod 0020                   __ptext900 0DA1  
                 __ptext901 0BAF                   __ptext910 0CD0                   __ptext902 0ACC  
                 __ptext911 0671                   __ptext903 0AB5                   __ptext912 0000  
                 __ptext904 0A61                   __ptext905 0D5A                   __ptext906 0B33  
                 __ptext907 0B5B                   __ptext908 0591                   __ptext909 0C65  
                 __ptext880 0C07                   __ptext881 0A9F                   __ptext890 0709  
                 __ptext882 0B0F                   __ptext891 0F78                   __ptext883 0B84  
                 __ptext892 0DF1                   __ptext884 0BDB                   __ptext876 0EFB  
                 __ptext893 0A1F                   __ptext885 0A08                   __ptext877 0E96  
                 __ptext894 0A3B                   __ptext886 0A2C                   __ptext878 0E41  
                 __ptext895 0A75                   __ptext887 0491                   __ptext879 0238  
                 __ptext896 0A89                   __ptext888 0AED                   __ptext897 0C95  
                 __ptext889 0015                   __ptext898 0791                   __ptext899 0D14  
         __size_of_ser_init 0028           __size_of_ser_isrx 0017                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 0800                   _dist_high 00C0  
                  ?_scan360 005A         readDistance@fullval 002C                  ser_getch@c 0021  
          ___lwdiv@quotient 002B              _robot_distance 0B0F                 ??i1___lwmod 0076  
                  ?_sprintf 0034     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 014D              ___wmul@product 0024         __size_of_robot_read 000F  
                ser_putch@c 0021                   _ser_getch 0AED                   _ser_putch 0ACC  
                 _robo_init 0A1F                   _robotMove 0F78                   _robotTurn 0709  
              _RightPressed 038B        __size_of_ReadButtons 0030        __end_of_spi_transfer 0A75  
               __stringbase 080F           ___wmul@multiplier 0020      UpdateDisplay@adcOutput 004A  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 0671  
    __end_of_robot_distance 0B33           _LeftDebounceCount 00D0   __size_of_lcd_write_string 002C  
        scan360@lowestSteps 005E     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027               _RTC_FLAG_10MS 0386  
             _RTC_FLAG_50MS 038A                  ?_robo_init 0072                   init_fetch 0A4E  
                ?_robotMove 0022                  ?_robotTurn 0022                  _ADCconvert 0015  
          __size_of___awmod 0068            __size_of___lwdiv 0050            __size_of___lwmod 0046  
             _UpdateDisplay 0238                    _adc_read 0B5B                 _currentMenu 00D4  
          __size_of_scan360 007D             ?_robot_distance 0072             ___lwdiv@divisor 0026  
           ___lwdiv@counter 002D                 _menuStrings 00DC                    _highByte 00D6  
                  _lcd_init 0B84                    _distance 00C4                    _dist_low 00C2  
          __size_of_sprintf 0100    __end_of_adc_read_channel 0CD0   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 0A89               __size_of_isr1 00E0  
             __size_of_main 010C               __size_of_init 002F            robot_read@packet 0022  
                  clear_ram 0A00                    _ser_init 0B33                    _ser_isrx 0AB5  
           _readAvgDistance 0E41                ?_calibrateIR 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0024         _CenterDebounceCount 00CE                _RTC_FLAG_1MS 0387  
        UpdateDisplay@F1228 0190                    intlevel1 0000              _lcd_set_cursor 0A08  
                 sprintf@ap 003C                   sprintf@sp 0043            ___lwmod@dividend 0030  
        __end_of_robot_read 0A3B                   stringcode 080A                 ??_ser_getch 0020  
               _serialInput 00D9                 ??_ser_putch 0020               _distTravelled 00E7  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotMove 0024  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 0A75  
          scan360@lowestVal 005C          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034             ___lwmod@divisor 002E  
           ___lwmod@counter 0033                    stringdir 080A                    stringtab 0800  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 0A13            _lcd_write_string 0BDB  
              _spi_transfer 0A61           _current_direction 00D5                 _RTC_Counter 0068  
   __end_of_readAvgDistance 0E96              _lcd_write_data 0A3B  
