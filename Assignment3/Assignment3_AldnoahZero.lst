

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 24 13:47:50 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_Menu
    48                           	FNCALL	_main,_calibrateIR
    49                           	FNCALL	_main,_scan360
    50                           	FNCALL	_main,_rotate
    51                           	FNCALL	_main,_robotMove
    52                           	FNCALL	_main,_robotTurn
    53                           	FNCALL	_scan360,_readAvgDistance
    54                           	FNCALL	_scan360,_rotate
    55                           	FNCALL	_scan360,_UpdateDisplay
    56                           	FNCALL	_init,_init_adc
    57                           	FNCALL	_init,_lcd_init
    58                           	FNCALL	_init,_ser_init
    59                           	FNCALL	_init,_robo_init
    60                           	FNCALL	_UpdateDisplay,_lcd_write_control
    61                           	FNCALL	_UpdateDisplay,_sprintf
    62                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    63                           	FNCALL	_UpdateDisplay,_lcd_write_string
    64                           	FNCALL	_UpdateDisplay,___awmod
    65                           	FNCALL	_readAvgDistance,_readDistance
    66                           	FNCALL	_readAvgDistance,___lwdiv
    67                           	FNCALL	_readAvgDistance,_ADCconvert
    68                           	FNCALL	_readDistance,_adc_read_channel
    69                           	FNCALL	_calibrateIR,_rotate
    70                           	FNCALL	_lcd_init,_lcd_write_control
    71                           	FNCALL	_lcd_write_string,_lcd_write_data
    72                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    73                           	FNCALL	_sprintf,___lwdiv
    74                           	FNCALL	_sprintf,___lwmod
    75                           	FNCALL	_ADCconvert,___wmul
    76                           	FNCALL	_ADCconvert,___lwdiv
    77                           	FNCALL	_robotTurn,_ser_putch
    78                           	FNCALL	_robotMove,_ser_putch
    79                           	FNCALL	_rotate,_spi_transfer
    80                           	FNCALL	_robo_init,_ser_putch
    81                           	FNCALL	_adc_read_channel,_adc_read
    82                           	FNROOT	_main
    83                           	FNCALL	_isr1,i1___lwmod
    84                           	FNCALL	_isr1,i1_readAvgDistance
    85                           	FNCALL	_isr1,i1_UpdateDisplay
    86                           	FNCALL	_isr1,_ReadButtons
    87                           	FNCALL	i1_UpdateDisplay,i1_lcd_write_control
    88                           	FNCALL	i1_UpdateDisplay,i1_sprintf
    89                           	FNCALL	i1_UpdateDisplay,i1_lcd_set_cursor
    90                           	FNCALL	i1_UpdateDisplay,i1_lcd_write_string
    91                           	FNCALL	i1_UpdateDisplay,i1___awmod
    92                           	FNCALL	i1_readAvgDistance,i1_readDistance
    93                           	FNCALL	i1_readAvgDistance,i1___lwdiv
    94                           	FNCALL	i1_readAvgDistance,i1_ADCconvert
    95                           	FNCALL	i1_readDistance,i1_adc_read_channel
    96                           	FNCALL	i1_lcd_write_string,i1_lcd_write_data
    97                           	FNCALL	i1_lcd_set_cursor,i1_lcd_write_control
    98                           	FNCALL	i1_sprintf,i1___lwdiv
    99                           	FNCALL	i1_sprintf,i1___lwmod
   100                           	FNCALL	i1_ADCconvert,i1___wmul
   101                           	FNCALL	i1_ADCconvert,i1___lwdiv
   102                           	FNCALL	i1_adc_read_channel,i1_adc_read
   103                           	FNCALL	_ReadButtons,_Debounce
   104                           	FNCALL	intlevel1,_isr1
   105                           	global	intlevel1
   106                           	FNROOT	intlevel1
   107                           	global	_current_step
   108                           	global	_menuStrings
   109                           	global	_shortMenuStrings
   110                           psect	idataBANK0,class=CODE,space=0,delta=2
   111                           global __pidataBANK0
   112  07FB                     __pidataBANK0:
   113                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   114                           	line	30
   115                           
   116                           ;initializer for _current_step
   117  07FB  343C               	retlw	03Ch
   118                           psect	idataBANK3,class=CODE,space=0,delta=2
   119                           global __pidataBANK3
   120  13CD                     __pidataBANK3:
   121                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   122                           	line	32
   123                           
   124                           ;initializer for _menuStrings
   125  13CD  3423               	retlw	(STR_1-__stringbase)&0ffh
   126  13CE  341A               	retlw	(STR_2-__stringbase)&0ffh
   127  13CF  3435               	retlw	(STR_3-__stringbase)&0ffh
   128  13D0  343E               	retlw	(STR_4-__stringbase)&0ffh
   129  13D1  342C               	retlw	(STR_5-__stringbase)&0ffh
   130                           	line	33
   131                           
   132                           ;initializer for _shortMenuStrings
   133  13D2  345E               	retlw	(STR_6-__stringbase)&0ffh
   134  13D3  3462               	retlw	(STR_7-__stringbase)&0ffh
   135  13D4  344E               	retlw	(STR_8-__stringbase)&0ffh
   136  13D5  345A               	retlw	(STR_9-__stringbase)&0ffh
   137  13D6  3466               	retlw	(STR_10-__stringbase)&0ffh
   138                           	global	_dpowers
   139                           psect	strings,class=STRING,delta=2
   140                           global __pstrings
   141  0800                     __pstrings:
   142                           ;	global	stringdir,stringtab,__stringbase
   143  0800                     stringtab:
   144                           ;	String table - string pointers are 1 byte each
   145  0800  1BFF               	btfsc	(btemp+1),7
   146  0801  280A               	ljmp	stringcode
   147  0802  1383               	bcf	status,7
   148  0803  187F               	btfsc	(btemp+1),0
   149  0804  1783               	bsf	status,7
   150  0805  0800               	movf	indf,w
   151  0806  0A84               	incf fsr
   152  0807  1903               skipnz
   153  0808  0AFF               incf btemp+1
   154  0809  0008               	return
   155  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   156  080A  3008               movlw high(stringdir)
   157  080B  008A               movwf pclath
   158  080C  0804               movf fsr,w
   159  080D  0A84               incf fsr
   160  080E  0782               	addwf pc
   161  080F                     __stringbase:
   162  080F  3400               	retlw	0
   163                           psect	strings
   164                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   165                           	line	350
   166  0810                     _dpowers:
   167  0810  3401               	retlw	01h
   168  0811  3400               	retlw	0
   169                           
   170  0812  340A               	retlw	0Ah
   171  0813  3400               	retlw	0
   172                           
   173  0814  3464               	retlw	064h
   174  0815  3400               	retlw	0
   175                           
   176  0816  34E8               	retlw	0E8h
   177  0817  3403               	retlw	03h
   178                           
   179  0818  3410               	retlw	010h
   180  0819  3427               	retlw	027h
   181                           
   182                           	global	_dpowers
   183                           	global	_RTC_Counter
   184                           	global	_dist_high
   185                           	global	_dist_low
   186                           	global	_distance
   187                           	global	_total
   188                           	global	_CenterDebounceCount
   189                           	global	_DownDebounceCount
   190                           	global	_LeftDebounceCount
   191                           	global	_RightDebounceCount
   192                           	global	_SCAN_FLAG
   193                           	global	_UpDebounceCount
   194                           	global	_buttonPressed
   195                           	global	_currentMenu
   196                           	global	_current_direction
   197                           	global	_rxiptr
   198                           	global	_rxoptr
   199                           	global	_ser_tmp
   200                           	global	_serialInput
   201                           	global	_turnhighByte
   202                           	global	_turnlowByte
   203                           	global	_txiptr
   204                           	global	_txoptr
   205                           	global	_CenterPressed
   206                           	global	_CenterReleased
   207                           	global	_DownPressed
   208                           	global	_DownReleased
   209                           	global	_LeftPressed
   210                           	global	_LeftReleased
   211                           	global	_RTC_FLAG_10MS
   212                           	global	_RTC_FLAG_1MS
   213                           	global	_RTC_FLAG_250MS
   214                           	global	_RTC_FLAG_500MS
   215                           	global	_RTC_FLAG_50MS
   216                           	global	_RightPressed
   217                           	global	_RightReleased
   218                           	global	_UpPressed
   219                           	global	_UpReleased
   220                           	global	UpdateDisplay@F1223
   221                           	global	_rxfifo
   222                           	global	_txfifo
   223                           	global	_totalSteps
   224                           	global	_adcVal
   225                           	global	_pos
   226                           	global	_test
   227                           	global	_highByte
   228                           	global	_lowByte
   229                           	global	_ADCON0
   230  001F                     _ADCON0	set	31
   231                           	global	_ADRESH
   232  001E                     _ADRESH	set	30
   233                           	global	_PORTA
   234  0005                     _PORTA	set	5
   235                           	global	_PORTC
   236  0007                     _PORTC	set	7
   237                           	global	_PORTD
   238  0008                     _PORTD	set	8
   239                           	global	_PORTE
   240  0009                     _PORTE	set	9
   241                           	global	_RCREG
   242  001A                     _RCREG	set	26
   243                           	global	_SSPBUF
   244  0013                     _SSPBUF	set	19
   245                           	global	_SSPCON
   246  0014                     _SSPCON	set	20
   247                           	global	_TMR0
   248  0001                     _TMR0	set	1
   249                           	global	_TXREG
   250  0019                     _TXREG	set	25
   251                           	global	AT25256A@CS0
   252  0038                     AT25256A@CS0	set	56
   253                           	global	AT25256A@CS1
   254  0039                     AT25256A@CS1	set	57
   255                           	global	_CARRY
   256  0018                     _CARRY	set	24
   257                           	global	_CHS0
   258  00FB                     _CHS0	set	251
   259                           	global	_CHS1
   260  00FC                     _CHS1	set	252
   261                           	global	_CHS2
   262  00FD                     _CHS2	set	253
   263                           	global	_CREN
   264  00C4                     _CREN	set	196
   265                           	global	_GIE
   266  005F                     _GIE	set	95
   267                           	global	_GO
   268  00FA                     _GO	set	250
   269                           	global	_OERR
   270  00C1                     _OERR	set	193
   271                           	global	_RB0
   272  0030                     _RB0	set	48
   273                           	global	_RB2
   274  0032                     _RB2	set	50
   275                           	global	_RB3
   276  0033                     _RB3	set	51
   277                           	global	_RB4
   278  0034                     _RB4	set	52
   279                           	global	_RB5
   280  0035                     _RB5	set	53
   281                           	global	_RB6
   282  0036                     _RB6	set	54
   283                           	global	_RC0
   284  0038                     _RC0	set	56
   285                           	global	_RC1
   286  0039                     _RC1	set	57
   287                           	global	_RC2
   288  003A                     _RC2	set	58
   289                           	global	_RCIF
   290  0065                     _RCIF	set	101
   291                           	global	_RE0
   292  0048                     _RE0	set	72
   293                           	global	_RE1
   294  0049                     _RE1	set	73
   295                           	global	_RE2
   296  004A                     _RE2	set	74
   297                           	global	_RX9
   298  00C6                     _RX9	set	198
   299                           	global	_SPEN
   300  00C7                     _SPEN	set	199
   301                           	global	_SSPIF
   302  0063                     _SSPIF	set	99
   303                           	global	_TMR0IE
   304  005D                     _TMR0IE	set	93
   305                           	global	_TMR0IF
   306  005A                     _TMR0IF	set	90
   307                           	global	_TXIF
   308  0064                     _TXIF	set	100
   309                           	global	_ADCON1
   310  009F                     _ADCON1	set	159
   311                           	global	_ADRESL
   312  009E                     _ADRESL	set	158
   313                           	global	_OPTION_REG
   314  0081                     _OPTION_REG	set	129
   315                           	global	_SPBRG
   316  0099                     _SPBRG	set	153
   317                           	global	_SSPSTAT
   318  0094                     _SSPSTAT	set	148
   319                           	global	_TRISA
   320  0085                     _TRISA	set	133
   321                           	global	_TRISB
   322  0086                     _TRISB	set	134
   323                           	global	_TRISC
   324  0087                     _TRISC	set	135
   325                           	global	_TRISD
   326  0088                     _TRISD	set	136
   327                           	global	_TRISE
   328  0089                     _TRISE	set	137
   329                           	global	_BRGH
   330  04C2                     _BRGH	set	1218
   331                           	global	_RCIE
   332  0465                     _RCIE	set	1125
   333                           	global	_SYNC
   334  04C4                     _SYNC	set	1220
   335                           	global	_TX9
   336  04C6                     _TX9	set	1222
   337                           	global	_TXEN
   338  04C5                     _TXEN	set	1221
   339                           	global	_TXIE
   340  0464                     _TXIE	set	1124
   341                           	global	_EEADR
   342  010D                     _EEADR	set	269
   343                           	global	_EEDATA
   344  010C                     _EEDATA	set	268
   345                           	global	_EECON1
   346  018C                     _EECON1	set	396
   347                           	global	_EECON2
   348  018D                     _EECON2	set	397
   349                           	global	_RD
   350  0C60                     _RD	set	3168
   351                           	global	_WR
   352  0C61                     _WR	set	3169
   353                           	global	_WREN
   354  0C62                     _WREN	set	3170
   355                           	
   356  081A                     STR_11:	
   357  081A  3441               	retlw	65	;'A'
   358  081B  3444               	retlw	68	;'D'
   359  081C  3443               	retlw	67	;'C'
   360  081D  343A               	retlw	58	;':'
   361  081E  3425               	retlw	37	;'%'
   362  081F  3464               	retlw	100	;'d'
   363  0820  3420               	retlw	32	;' '
   364  0821  3444               	retlw	68	;'D'
   365  0822  3469               	retlw	105	;'i'
   366  0823  3473               	retlw	115	;'s'
   367  0824  3474               	retlw	116	;'t'
   368  0825  343A               	retlw	58	;':'
   369  0826  3425               	retlw	37	;'%'
   370  0827  3464               	retlw	100	;'d'
   371  0828  3400               	retlw	0
   372                           psect	strings
   373                           	
   374  0829                     STR_2:	
   375  0829  3453               	retlw	83	;'S'
   376  082A  3463               	retlw	99	;'c'
   377  082B  3461               	retlw	97	;'a'
   378  082C  346E               	retlw	110	;'n'
   379  082D  345F               	retlw	95	;'_'
   380  082E  3433               	retlw	51	;'3'
   381  082F  3436               	retlw	54	;'6'
   382  0830  3430               	retlw	48	;'0'
   383  0831  3400               	retlw	0
   384                           psect	strings
   385                           	
   386  0832                     STR_1:	
   387  0832  3443               	retlw	67	;'C'
   388  0833  3461               	retlw	97	;'a'
   389  0834  346C               	retlw	108	;'l'
   390  0835  3469               	retlw	105	;'i'
   391  0836  3462               	retlw	98	;'b'
   392  0837  345F               	retlw	95	;'_'
   393  0838  3449               	retlw	73	;'I'
   394  0839  3452               	retlw	82	;'R'
   395  083A  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  083B                     STR_5:	
   399  083B  3446               	retlw	70	;'F'
   400  083C  346C               	retlw	108	;'l'
   401  083D  3477               	retlw	119	;'w'
   402  083E  345F               	retlw	95	;'_'
   403  083F  3457               	retlw	87	;'W'
   404  0840  3461               	retlw	97	;'a'
   405  0841  346C               	retlw	108	;'l'
   406  0842  346C               	retlw	108	;'l'
   407  0843  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  0844                     STR_3:	
   411  0844  3444               	retlw	68	;'D'
   412  0845  3472               	retlw	114	;'r'
   413  0846  3469               	retlw	105	;'i'
   414  0847  3476               	retlw	118	;'v'
   415  0848  3465               	retlw	101	;'e'
   416  0849  345F               	retlw	95	;'_'
   417  084A  3432               	retlw	50	;'2'
   418  084B  346D               	retlw	109	;'m'
   419  084C  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  084D                     STR_4:	
   423  084D  3444               	retlw	68	;'D'
   424  084E  3472               	retlw	114	;'r'
   425  084F  3469               	retlw	105	;'i'
   426  0850  3476               	retlw	118	;'v'
   427  0851  3465               	retlw	101	;'e'
   428  0852  345F               	retlw	95	;'_'
   429  0853  344C               	retlw	76	;'L'
   430  0854  3400               	retlw	0
   431                           psect	strings
   432                           	
   433  0855                     STR_14:	
   434  0855  3443               	retlw	67	;'C'
   435  0856  344F               	retlw	79	;'O'
   436  0857  344E               	retlw	78	;'N'
   437  0858  3446               	retlw	70	;'F'
   438  0859  3449               	retlw	73	;'I'
   439  085A  3452               	retlw	82	;'R'
   440  085B  344D               	retlw	77	;'M'
   441  085C  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  085D                     STR_8:	
   445  085D  3444               	retlw	68	;'D'
   446  085E  3472               	retlw	114	;'r'
   447  085F  3432               	retlw	50	;'2'
   448  0860  3400               	retlw	0
   449                           psect	strings
   450                           	
   451  0861                     STR_13:	
   452  0861  343C               	retlw	60	;'<'
   453  0862  343C               	retlw	60	;'<'
   454  0863  343C               	retlw	60	;'<'
   455  0864  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  0865                     STR_15:	
   459  0865  343E               	retlw	62	;'>'
   460  0866  343E               	retlw	62	;'>'
   461  0867  343E               	retlw	62	;'>'
   462  0868  3400               	retlw	0
   463                           psect	strings
   464                           	
   465  0869                     STR_9:	
   466  0869  3444               	retlw	68	;'D'
   467  086A  3472               	retlw	114	;'r'
   468  086B  344C               	retlw	76	;'L'
   469  086C  3400               	retlw	0
   470                           psect	strings
   471                           	
   472  086D                     STR_6:	
   473  086D  3443               	retlw	67	;'C'
   474  086E  3461               	retlw	97	;'a'
   475  086F  346C               	retlw	108	;'l'
   476  0870  3400               	retlw	0
   477                           psect	strings
   478                           	
   479  0871                     STR_7:	
   480  0871  3453               	retlw	83	;'S'
   481  0872  3463               	retlw	99	;'c'
   482  0873  346E               	retlw	110	;'n'
   483  0874  3400               	retlw	0
   484                           psect	strings
   485                           	
   486  0875                     STR_10:	
   487  0875  3446               	retlw	70	;'F'
   488  0876  346C               	retlw	108	;'l'
   489  0877  3477               	retlw	119	;'w'
   490  0878  3400               	retlw	0
   491                           psect	strings
   492  081A                     STR_12	equ	STR_11+0
   493                           	file	"Assignment3_AldnoahZero.as"
   494                           	line	#
   495                           psect cinit,class=CODE,delta=2
   496                           global start_initialization
   497  1672                     start_initialization:
   498                           
   499                           psect	bitbssBANK0,class=BANK0,bit,space=1
   500                           global __pbitbssBANK0
   501  0360                     __pbitbssBANK0:
   502  0360                     _CenterPressed:
   503  0360                            ds      1
   504                           
   505  0361                     _CenterReleased:
   506  0361                            ds      1
   507                           
   508  0362                     _DownPressed:
   509  0362                            ds      1
   510                           
   511  0363                     _DownReleased:
   512  0363                            ds      1
   513                           
   514  0364                     _LeftPressed:
   515  0364                            ds      1
   516                           
   517  0365                     _LeftReleased:
   518  0365                            ds      1
   519                           
   520  0366                     _RTC_FLAG_10MS:
   521  0366                            ds      1
   522                           
   523  0367                     _RTC_FLAG_1MS:
   524  0367                            ds      1
   525                           
   526  0368                     _RTC_FLAG_250MS:
   527  0368                            ds      1
   528                           
   529  0369                     _RTC_FLAG_500MS:
   530  0369                            ds      1
   531                           
   532  036A                     _RTC_FLAG_50MS:
   533  036A                            ds      1
   534                           
   535  036B                     _RightPressed:
   536  036B                            ds      1
   537                           
   538  036C                     _RightReleased:
   539  036C                            ds      1
   540                           
   541  036D                     _UpPressed:
   542  036D                            ds      1
   543                           
   544  036E                     _UpReleased:
   545  036E                            ds      1
   546                           
   547                           psect	bssBANK0,class=BANK0,space=1
   548                           global __pbssBANK0
   549  0051                     __pbssBANK0:
   550  0051                     _RTC_Counter:
   551  0051                            ds      2
   552                           
   553  0053                     _dist_high:
   554  0053                            ds      2
   555                           
   556  0055                     _dist_low:
   557  0055                            ds      2
   558                           
   559  0057                     _distance:
   560  0057                            ds      2
   561                           
   562  0059                     _total:
   563  0059                            ds      2
   564                           
   565  005B                     _CenterDebounceCount:
   566  005B                            ds      1
   567                           
   568  005C                     _DownDebounceCount:
   569  005C                            ds      1
   570                           
   571  005D                     _LeftDebounceCount:
   572  005D                            ds      1
   573                           
   574  005E                     _RightDebounceCount:
   575  005E                            ds      1
   576                           
   577  005F                     _SCAN_FLAG:
   578  005F                            ds      1
   579                           
   580  0060                     _UpDebounceCount:
   581  0060                            ds      1
   582                           
   583  0061                     _buttonPressed:
   584  0061                            ds      1
   585                           
   586  0062                     _currentMenu:
   587  0062                            ds      1
   588                           
   589  0063                     _current_direction:
   590  0063                            ds      1
   591                           
   592  0064                     _rxiptr:
   593  0064                            ds      1
   594                           
   595  0065                     _rxoptr:
   596  0065                            ds      1
   597                           
   598  0066                     _ser_tmp:
   599  0066                            ds      1
   600                           
   601  0067                     _serialInput:
   602  0067                            ds      1
   603                           
   604  0068                     _turnhighByte:
   605  0068                            ds      1
   606                           
   607  0069                     _turnlowByte:
   608  0069                            ds      1
   609                           
   610  006A                     _txiptr:
   611  006A                            ds      1
   612                           
   613  006B                     _txoptr:
   614  006B                            ds      1
   615                           
   616                           psect	dataBANK0,class=BANK0,space=1
   617                           global __pdataBANK0
   618  006E                     __pdataBANK0:
   619                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   620                           	line	30
   621  006E                     _current_step:
   622  006E                            ds      1
   623                           
   624                           psect	bssBANK1,class=BANK1,space=1
   625                           global __pbssBANK1
   626  00E8                     __pbssBANK1:
   627  00E8                     _adcVal:
   628  00E8                            ds      2
   629                           
   630  00EA                     _pos:
   631  00EA                            ds      2
   632                           
   633  00EC                     _test:
   634  00EC                            ds      2
   635                           
   636  00EE                     _highByte:
   637  00EE                            ds      1
   638                           
   639  00EF                     _lowByte:
   640  00EF                            ds      1
   641                           
   642                           psect	bssBANK3,class=BANK3,space=1
   643                           global __pbssBANK3
   644  0190                     __pbssBANK3:
   645  0190                     UpdateDisplay@F1223:
   646  0190                            ds      16
   647                           
   648  01A0                     _rxfifo:
   649  01A0                            ds      16
   650                           
   651  01B0                     _txfifo:
   652  01B0                            ds      16
   653                           
   654  01C0                     _totalSteps:
   655  01C0                            ds      2
   656                           
   657                           psect	dataBANK3,class=BANK3,space=1
   658                           global __pdataBANK3
   659  01C2                     __pdataBANK3:
   660                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   661                           	line	32
   662  01C2                     _menuStrings:
   663  01C2                            ds      5
   664                           
   665                           psect	dataBANK3
   666                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   667                           	line	33
   668  01C7                     _shortMenuStrings:
   669  01C7                            ds      5
   670                           
   671                           psect clrtext,class=CODE,delta=2
   672                           global clear_ram
   673                           ;	Called with FSR containing the base address, and
   674                           ;	W with the last address+1
   675  13BC                     clear_ram:
   676  13BC  0064               	clrwdt			;clear the watchdog before getting into this loop
   677  13BD                     clrloop:
   678  13BD  0180               	clrf	indf		;clear RAM location pointed to by FSR
   679  13BE  0A84               	incf	fsr,f		;increment pointer
   680  13BF  0604               	xorwf	fsr,w		;XOR with final address
   681  13C0  1903               	btfsc	status,2	;have we reached the end yet?
   682  13C1  3400               	retlw	0		;all done for this memory range, return
   683  13C2  0604               	xorwf	fsr,w		;XOR again to restore value
   684  13C3  2BBD               	goto	clrloop		;do the next byte
   685                           
   686                           ; Clear objects allocated to BITBANK0
   687                           psect cinit,class=CODE,delta=2
   688  1672  01EC               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   689  1673  01ED               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   690                           ; Clear objects allocated to BANK0
   691                           psect cinit,class=CODE,delta=2
   692  1674  1383               	bcf	status, 7	;select IRP bank0
   693  1675  3051               	movlw	low(__pbssBANK0)
   694  1676  0084               	movwf	fsr
   695  1677  306C               	movlw	low((__pbssBANK0)+01Bh)
   696  1678  160A  118A  23BC   	fcall	clear_ram
              160A  118A         
   697                           ; Clear objects allocated to BANK1
   698                           psect cinit,class=CODE,delta=2
   699  167D  30E8               	movlw	low(__pbssBANK1)
   700  167E  0084               	movwf	fsr
   701  167F  30F0               	movlw	low((__pbssBANK1)+08h)
   702  1680  160A  118A  23BC   	fcall	clear_ram
              160A  118A         
   703                           ; Clear objects allocated to BANK3
   704                           psect cinit,class=CODE,delta=2
   705  1685  1783               	bsf	status, 7	;select IRP bank2
   706  1686  3090               	movlw	low(__pbssBANK3)
   707  1687  0084               	movwf	fsr
   708  1688  30C2               	movlw	low((__pbssBANK3)+032h)
   709  1689  160A  118A  23BC   	fcall	clear_ram
              160A  118A         
   710                           global btemp
   711                           psect inittext,class=CODE,delta=2
   712                           global init_fetch,btemp
   713                           ;	Called with low address in FSR and high address in W
   714  13F5                     init_fetch:
   715  13F5  087E               	movf btemp,w
   716  13F6  008A               	movwf pclath
   717  13F7  087F               	movf btemp+1,w
   718  13F8  0082               	movwf pc
   719                           global init_ram
   720                           ;Called with:
   721                           ;	high address of idata address in btemp 
   722                           ;	low address of idata address in btemp+1 
   723                           ;	low address of data in FSR
   724                           ;	high address + 1 of data in btemp-1
   725  13F9                     init_ram:
   726  13F9  160A  118A  23F5   	fcall init_fetch
              160A  118A         
   727  13FE  0080               	movwf indf,f
   728  13FF  0A84               	incf fsr,f
   729  1400  0804               	movf fsr,w
   730  1401  067D               	xorwf btemp-1,w
   731  1402  1903               	btfsc status,2
   732  1403  3400               	retlw 0
   733  1404  0AFF               	incf btemp+1,f
   734  1405  1903               	btfsc status,2
   735  1406  0AFE               	incf btemp,f
   736  1407  2BF9               	goto init_ram
   737                           ; Initialize objects allocated to BANK3
   738                           psect cinit,class=CODE,delta=2
   739                           global init_ram, __pidataBANK3
   740  168E  30CC               	movlw low(__pdataBANK3+10)
   741  168F  00FD               	movwf btemp-1,f
   742  1690  3013               	movlw high(__pidataBANK3)
   743  1691  00FE               	movwf btemp,f
   744  1692  30CD               	movlw low(__pidataBANK3)
   745  1693  00FF               	movwf btemp+1,f
   746  1694  30C2               	movlw low(__pdataBANK3)
   747  1695  0084               	movwf fsr,f
   748  1696  160A  118A  23F9   	fcall init_ram
              160A  118A         
   749                           ; Initialize objects allocated to BANK0
   750                           	global __pidataBANK0
   751                           psect cinit,class=CODE,delta=2
   752  169B  120A  118A  27FB   	fcall	__pidataBANK0+0		;fetch initializer
              160A  118A         
   753  16A0  00EE               	movwf	__pdataBANK0+0&07fh		
   754                           psect cinit,class=CODE,delta=2
   755                           global end_of_initialization
   756                           
   757                           ;End of C runtime variable initialization code
   758                           
   759  16A1                     end_of_initialization:
   760  16A1  0183               clrf status
   761  16A2  120A  158A  2D2E   ljmp _main	;jump to C main() function
   762                           psect	cstackBANK1,class=BANK1,space=1
   763                           global __pcstackBANK1
   764  00A0                     __pcstackBANK1:
   765                           	global	??_ser_init
   766  00A0                     ??_ser_init:	; 0 bytes @ 0x0
   767                           	global	??_Menu
   768  00A0                     ??_Menu:	; 0 bytes @ 0x0
   769                           	global	??_init_adc
   770  00A0                     ??_init_adc:	; 0 bytes @ 0x0
   771                           	global	??_lcd_write_control
   772  00A0                     ??_lcd_write_control:	; 0 bytes @ 0x0
   773                           	global	??_lcd_write_data
   774  00A0                     ??_lcd_write_data:	; 0 bytes @ 0x0
   775                           	global	??_spi_transfer
   776  00A0                     ??_spi_transfer:	; 0 bytes @ 0x0
   777                           	global	??_ser_putch
   778  00A0                     ??_ser_putch:	; 0 bytes @ 0x0
   779                           	global	?_adc_read
   780  00A0                     ?_adc_read:	; 2 bytes @ 0x0
   781                           	global	?___wmul
   782  00A0                     ?___wmul:	; 2 bytes @ 0x0
   783                           	global	?___awmod
   784  00A0                     ?___awmod:	; 2 bytes @ 0x0
   785                           	global	Menu@input
   786  00A0                     Menu@input:	; 1 bytes @ 0x0
   787                           	global	___wmul@multiplier
   788  00A0                     ___wmul@multiplier:	; 2 bytes @ 0x0
   789                           	global	___awmod@divisor
   790  00A0                     ___awmod@divisor:	; 2 bytes @ 0x0
   791  00A0                     	ds	1
   792                           	global	spi_transfer@temp
   793  00A1                     spi_transfer@temp:	; 1 bytes @ 0x1
   794                           	global	ser_putch@c
   795  00A1                     ser_putch@c:	; 1 bytes @ 0x1
   796  00A1                     	ds	1
   797                           	global	??_adc_read
   798  00A2                     ??_adc_read:	; 0 bytes @ 0x2
   799                           	global	??_robo_init
   800  00A2                     ??_robo_init:	; 0 bytes @ 0x2
   801                           	global	?_robotMove
   802  00A2                     ?_robotMove:	; 0 bytes @ 0x2
   803                           	global	?_robotTurn
   804  00A2                     ?_robotTurn:	; 0 bytes @ 0x2
   805                           	global	lcd_write_control@databyte
   806  00A2                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   807                           	global	lcd_write_data@databyte
   808  00A2                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   809                           	global	spi_transfer@data
   810  00A2                     spi_transfer@data:	; 1 bytes @ 0x2
   811                           	global	robotMove@distance
   812  00A2                     robotMove@distance:	; 2 bytes @ 0x2
   813                           	global	robotTurn@distance
   814  00A2                     robotTurn@distance:	; 2 bytes @ 0x2
   815                           	global	___wmul@multiplicand
   816  00A2                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   817                           	global	___awmod@dividend
   818  00A2                     ___awmod@dividend:	; 2 bytes @ 0x2
   819  00A2                     	ds	1
   820                           	global	?_rotate
   821  00A3                     ?_rotate:	; 0 bytes @ 0x3
   822                           	global	??_lcd_set_cursor
   823  00A3                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   824                           	global	??_lcd_init
   825  00A3                     ??_lcd_init:	; 0 bytes @ 0x3
   826                           	global	??_init
   827  00A3                     ??_init:	; 0 bytes @ 0x3
   828                           	global	lcd_set_cursor@address
   829  00A3                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   830                           	global	rotate@direction
   831  00A3                     rotate@direction:	; 1 bytes @ 0x3
   832  00A3                     	ds	1
   833                           	global	??_rotate
   834  00A4                     ??_rotate:	; 0 bytes @ 0x4
   835                           	global	??_robotMove
   836  00A4                     ??_robotMove:	; 0 bytes @ 0x4
   837                           	global	??_robotTurn
   838  00A4                     ??_robotTurn:	; 0 bytes @ 0x4
   839                           	global	??___wmul
   840  00A4                     ??___wmul:	; 0 bytes @ 0x4
   841                           	global	??___awmod
   842  00A4                     ??___awmod:	; 0 bytes @ 0x4
   843                           	global	adc_read@adc_value
   844  00A4                     adc_read@adc_value:	; 2 bytes @ 0x4
   845                           	global	___wmul@product
   846  00A4                     ___wmul@product:	; 2 bytes @ 0x4
   847  00A4                     	ds	1
   848                           	global	___awmod@counter
   849  00A5                     ___awmod@counter:	; 1 bytes @ 0x5
   850  00A5                     	ds	1
   851                           	global	??_adc_read_channel
   852  00A6                     ??_adc_read_channel:	; 0 bytes @ 0x6
   853                           	global	?___lwdiv
   854  00A6                     ?___lwdiv:	; 2 bytes @ 0x6
   855                           	global	rotate@steps
   856  00A6                     rotate@steps:	; 1 bytes @ 0x6
   857                           	global	___awmod@sign
   858  00A6                     ___awmod@sign:	; 1 bytes @ 0x6
   859                           	global	___lwdiv@divisor
   860  00A6                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   861  00A6                     	ds	1
   862                           	global	?_lcd_write_string
   863  00A7                     ?_lcd_write_string:	; 0 bytes @ 0x7
   864                           	global	adc_read_channel@channel
   865  00A7                     adc_read_channel@channel:	; 1 bytes @ 0x7
   866                           	global	rotate@i
   867  00A7                     rotate@i:	; 1 bytes @ 0x7
   868                           	global	lcd_write_string@s
   869  00A7                     lcd_write_string@s:	; 2 bytes @ 0x7
   870  00A7                     	ds	1
   871                           	global	??_calibrateIR
   872  00A8                     ??_calibrateIR:	; 0 bytes @ 0x8
   873                           	global	?_readDistance
   874  00A8                     ?_readDistance:	; 2 bytes @ 0x8
   875                           	global	___lwdiv@dividend
   876  00A8                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   877  00A8                     	ds	1
   878                           	global	??_lcd_write_string
   879  00A9                     ??_lcd_write_string:	; 0 bytes @ 0x9
   880  00A9                     	ds	1
   881                           	global	??_readDistance
   882  00AA                     ??_readDistance:	; 0 bytes @ 0xA
   883                           	global	??___lwdiv
   884  00AA                     ??___lwdiv:	; 0 bytes @ 0xA
   885  00AA                     	ds	1
   886                           	global	___lwdiv@quotient
   887  00AB                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   888  00AB                     	ds	1
   889                           	global	readDistance@fullval
   890  00AC                     readDistance@fullval:	; 2 bytes @ 0xC
   891  00AC                     	ds	1
   892                           	global	___lwdiv@counter
   893  00AD                     ___lwdiv@counter:	; 1 bytes @ 0xD
   894  00AD                     	ds	1
   895                           	global	??_ADCconvert
   896  00AE                     ??_ADCconvert:	; 0 bytes @ 0xE
   897                           	global	?___lwmod
   898  00AE                     ?___lwmod:	; 2 bytes @ 0xE
   899                           	global	___lwmod@divisor
   900  00AE                     ___lwmod@divisor:	; 2 bytes @ 0xE
   901  00AE                     	ds	2
   902                           	global	??_readAvgDistance
   903  00B0                     ??_readAvgDistance:	; 0 bytes @ 0x10
   904                           	global	readAvgDistance@fullval
   905  00B0                     readAvgDistance@fullval:	; 2 bytes @ 0x10
   906                           	global	___lwmod@dividend
   907  00B0                     ___lwmod@dividend:	; 2 bytes @ 0x10
   908  00B0                     	ds	2
   909                           	global	??___lwmod
   910  00B2                     ??___lwmod:	; 0 bytes @ 0x12
   911                           	global	readAvgDistance@i
   912  00B2                     readAvgDistance@i:	; 2 bytes @ 0x12
   913  00B2                     	ds	1
   914                           	global	___lwmod@counter
   915  00B3                     ___lwmod@counter:	; 1 bytes @ 0x13
   916  00B3                     	ds	1
   917                           	global	?_sprintf
   918  00B4                     ?_sprintf:	; 2 bytes @ 0x14
   919                           	global	sprintf@f
   920  00B4                     sprintf@f:	; 1 bytes @ 0x14
   921  00B4                     	ds	5
   922                           	global	??_sprintf
   923  00B9                     ??_sprintf:	; 0 bytes @ 0x19
   924  00B9                     	ds	3
   925                           	global	sprintf@ap
   926  00BC                     sprintf@ap:	; 1 bytes @ 0x1C
   927  00BC                     	ds	1
   928                           	global	sprintf@flag
   929  00BD                     sprintf@flag:	; 1 bytes @ 0x1D
   930  00BD                     	ds	1
   931                           	global	sprintf@prec
   932  00BE                     sprintf@prec:	; 1 bytes @ 0x1E
   933  00BE                     	ds	1
   934                           	global	sprintf@_val
   935  00BF                     sprintf@_val:	; 4 bytes @ 0x1F
   936  00BF                     	ds	4
   937                           	global	sprintf@sp
   938  00C3                     sprintf@sp:	; 1 bytes @ 0x23
   939  00C3                     	ds	1
   940                           	global	sprintf@c
   941  00C4                     sprintf@c:	; 1 bytes @ 0x24
   942  00C4                     	ds	1
   943                           	global	??_UpdateDisplay
   944  00C5                     ??_UpdateDisplay:	; 0 bytes @ 0x25
   945  00C5                     	ds	5
   946                           	global	UpdateDisplay@adcOutput
   947  00CA                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
   948  00CA                     	ds	16
   949                           	global	?_scan360
   950  00DA                     ?_scan360:	; 2 bytes @ 0x3A
   951  00DA                     	ds	2
   952                           	global	??_scan360
   953  00DC                     ??_scan360:	; 0 bytes @ 0x3C
   954                           	global	scan360@lowestVal
   955  00DC                     scan360@lowestVal:	; 2 bytes @ 0x3C
   956  00DC                     	ds	2
   957                           	global	scan360@lowestSteps
   958  00DE                     scan360@lowestSteps:	; 2 bytes @ 0x3E
   959  00DE                     	ds	2
   960                           	global	scan360@steps
   961  00E0                     scan360@steps:	; 2 bytes @ 0x40
   962  00E0                     	ds	2
   963                           	global	??_main
   964  00E2                     ??_main:	; 0 bytes @ 0x42
   965  00E2                     	ds	3
   966                           	global	main@shortwall
   967  00E5                     main@shortwall:	; 2 bytes @ 0x45
   968  00E5                     	ds	2
   969                           	global	main@choice
   970  00E7                     main@choice:	; 1 bytes @ 0x47
   971  00E7                     	ds	1
   972                           psect	cstackCOMMON,class=COMMON,space=1
   973                           global __pcstackCOMMON
   974  0070                     __pcstackCOMMON:
   975                           	global	?_readAvgDistance
   976  0070                     ?_readAvgDistance:	; 0 bytes @ 0x0
   977                           	global	?_UpdateDisplay
   978  0070                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   979                           	global	?_ser_init
   980  0070                     ?_ser_init:	; 0 bytes @ 0x0
   981                           	global	?_robo_init
   982  0070                     ?_robo_init:	; 0 bytes @ 0x0
   983                           	global	?_ADCconvert
   984  0070                     ?_ADCconvert:	; 0 bytes @ 0x0
   985                           	global	?_init_adc
   986  0070                     ?_init_adc:	; 0 bytes @ 0x0
   987                           	global	?_lcd_write_control
   988  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   989                           	global	?_lcd_write_data
   990  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   991                           	global	?_lcd_set_cursor
   992  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   993                           	global	?_lcd_init
   994  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   995                           	global	?_isr1
   996  0070                     ?_isr1:	; 0 bytes @ 0x0
   997                           	global	?_init
   998  0070                     ?_init:	; 0 bytes @ 0x0
   999                           	global	?_calibrateIR
  1000  0070                     ?_calibrateIR:	; 0 bytes @ 0x0
  1001                           	global	?_main
  1002  0070                     ?_main:	; 0 bytes @ 0x0
  1003                           	global	?_ser_putch
  1004  0070                     ?_ser_putch:	; 0 bytes @ 0x0
  1005                           	global	?_Debounce
  1006  0070                     ?_Debounce:	; 0 bytes @ 0x0
  1007                           	global	??_Debounce
  1008  0070                     ??_Debounce:	; 0 bytes @ 0x0
  1009                           	global	?i1_lcd_write_control
  1010  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
  1011                           	global	??i1_lcd_write_control
  1012  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
  1013                           	global	?i1_lcd_write_data
  1014  0070                     ?i1_lcd_write_data:	; 0 bytes @ 0x0
  1015                           	global	??i1_lcd_write_data
  1016  0070                     ??i1_lcd_write_data:	; 0 bytes @ 0x0
  1017                           	global	?i1_lcd_set_cursor
  1018  0070                     ?i1_lcd_set_cursor:	; 0 bytes @ 0x0
  1019                           	global	?i1_readAvgDistance
  1020  0070                     ?i1_readAvgDistance:	; 0 bytes @ 0x0
  1021                           	global	?i1_ADCconvert
  1022  0070                     ?i1_ADCconvert:	; 0 bytes @ 0x0
  1023                           	global	?i1_UpdateDisplay
  1024  0070                     ?i1_UpdateDisplay:	; 0 bytes @ 0x0
  1025                           	global	?_ReadButtons
  1026  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
  1027                           	global	?_Menu
  1028  0070                     ?_Menu:	; 1 bytes @ 0x0
  1029                           	global	?_adc_read_channel
  1030  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
  1031                           	global	?_spi_transfer
  1032  0070                     ?_spi_transfer:	; 1 bytes @ 0x0
  1033                           	global	?i1_adc_read_channel
  1034  0070                     ?i1_adc_read_channel:	; 1 bytes @ 0x0
  1035                           	global	?i1_adc_read
  1036  0070                     ?i1_adc_read:	; 2 bytes @ 0x0
  1037                           	global	?i1___wmul
  1038  0070                     ?i1___wmul:	; 2 bytes @ 0x0
  1039                           	global	?i1___awmod
  1040  0070                     ?i1___awmod:	; 2 bytes @ 0x0
  1041                           	global	UpdateDisplay@serialInput
  1042  0070                     UpdateDisplay@serialInput:	; 1 bytes @ 0x0
  1043                           	global	i1___wmul@multiplier
  1044  0070                     i1___wmul@multiplier:	; 2 bytes @ 0x0
  1045                           	global	i1___awmod@divisor
  1046  0070                     i1___awmod@divisor:	; 2 bytes @ 0x0
  1047  0070                     	ds	1
  1048                           	global	??_ReadButtons
  1049  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
  1050  0071                     	ds	1
  1051                           	global	??i1_adc_read
  1052  0072                     ??i1_adc_read:	; 0 bytes @ 0x2
  1053                           	global	i1lcd_write_control@databyte
  1054  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
  1055                           	global	i1lcd_write_data@databyte
  1056  0072                     i1lcd_write_data@databyte:	; 1 bytes @ 0x2
  1057                           	global	i1___wmul@multiplicand
  1058  0072                     i1___wmul@multiplicand:	; 2 bytes @ 0x2
  1059                           	global	i1___awmod@dividend
  1060  0072                     i1___awmod@dividend:	; 2 bytes @ 0x2
  1061  0072                     	ds	1
  1062                           	global	??i1_lcd_set_cursor
  1063  0073                     ??i1_lcd_set_cursor:	; 0 bytes @ 0x3
  1064                           	global	i1lcd_set_cursor@address
  1065  0073                     i1lcd_set_cursor@address:	; 1 bytes @ 0x3
  1066  0073                     	ds	1
  1067                           	global	??i1___wmul
  1068  0074                     ??i1___wmul:	; 0 bytes @ 0x4
  1069                           	global	??i1___awmod
  1070  0074                     ??i1___awmod:	; 0 bytes @ 0x4
  1071                           	global	i1adc_read@adc_value
  1072  0074                     i1adc_read@adc_value:	; 2 bytes @ 0x4
  1073                           	global	i1___wmul@product
  1074  0074                     i1___wmul@product:	; 2 bytes @ 0x4
  1075  0074                     	ds	1
  1076                           	global	i1___awmod@counter
  1077  0075                     i1___awmod@counter:	; 1 bytes @ 0x5
  1078  0075                     	ds	1
  1079                           	global	??i1_adc_read_channel
  1080  0076                     ??i1_adc_read_channel:	; 0 bytes @ 0x6
  1081                           	global	?i1___lwdiv
  1082  0076                     ?i1___lwdiv:	; 2 bytes @ 0x6
  1083                           	global	i1___awmod@sign
  1084  0076                     i1___awmod@sign:	; 1 bytes @ 0x6
  1085                           	global	i1___lwdiv@divisor
  1086  0076                     i1___lwdiv@divisor:	; 2 bytes @ 0x6
  1087  0076                     	ds	1
  1088                           	global	?i1_lcd_write_string
  1089  0077                     ?i1_lcd_write_string:	; 0 bytes @ 0x7
  1090                           	global	i1adc_read_channel@channel
  1091  0077                     i1adc_read_channel@channel:	; 1 bytes @ 0x7
  1092                           	global	i1lcd_write_string@s
  1093  0077                     i1lcd_write_string@s:	; 2 bytes @ 0x7
  1094  0077                     	ds	1
  1095                           	global	?i1_readDistance
  1096  0078                     ?i1_readDistance:	; 2 bytes @ 0x8
  1097                           	global	i1___lwdiv@dividend
  1098  0078                     i1___lwdiv@dividend:	; 2 bytes @ 0x8
  1099  0078                     	ds	1
  1100                           	global	??i1_lcd_write_string
  1101  0079                     ??i1_lcd_write_string:	; 0 bytes @ 0x9
  1102  0079                     	ds	1
  1103                           	global	??i1_readDistance
  1104  007A                     ??i1_readDistance:	; 0 bytes @ 0xA
  1105                           	global	??i1___lwdiv
  1106  007A                     ??i1___lwdiv:	; 0 bytes @ 0xA
  1107  007A                     	ds	1
  1108                           	global	i1___lwdiv@counter
  1109  007B                     i1___lwdiv@counter:	; 1 bytes @ 0xB
  1110  007B                     	ds	1
  1111                           	global	i1readDistance@fullval
  1112  007C                     i1readDistance@fullval:	; 2 bytes @ 0xC
  1113                           	global	i1___lwdiv@quotient
  1114  007C                     i1___lwdiv@quotient:	; 2 bytes @ 0xC
  1115  007C                     	ds	2
  1116                           	global	??i1_readAvgDistance
  1117  007E                     ??i1_readAvgDistance:	; 0 bytes @ 0xE
  1118                           psect	cstackBANK0,class=BANK0,space=1
  1119                           global __pcstackBANK0
  1120  0020                     __pcstackBANK0:
  1121                           	global	??i1_ADCconvert
  1122  0020                     ??i1_ADCconvert:	; 0 bytes @ 0x0
  1123                           	global	?i1___lwmod
  1124  0020                     ?i1___lwmod:	; 2 bytes @ 0x0
  1125                           	global	i1___lwmod@divisor
  1126  0020                     i1___lwmod@divisor:	; 2 bytes @ 0x0
  1127  0020                     	ds	2
  1128                           	global	i1readAvgDistance@fullval
  1129  0022                     i1readAvgDistance@fullval:	; 2 bytes @ 0x2
  1130                           	global	i1___lwmod@dividend
  1131  0022                     i1___lwmod@dividend:	; 2 bytes @ 0x2
  1132  0022                     	ds	2
  1133                           	global	??i1___lwmod
  1134  0024                     ??i1___lwmod:	; 0 bytes @ 0x4
  1135                           	global	i1readAvgDistance@i
  1136  0024                     i1readAvgDistance@i:	; 2 bytes @ 0x4
  1137  0024                     	ds	1
  1138                           	global	i1___lwmod@counter
  1139  0025                     i1___lwmod@counter:	; 1 bytes @ 0x5
  1140  0025                     	ds	1
  1141                           	global	?i1_sprintf
  1142  0026                     ?i1_sprintf:	; 2 bytes @ 0x6
  1143                           	global	i1sprintf@f
  1144  0026                     i1sprintf@f:	; 1 bytes @ 0x6
  1145  0026                     	ds	5
  1146                           	global	??i1_sprintf
  1147  002B                     ??i1_sprintf:	; 0 bytes @ 0xB
  1148  002B                     	ds	3
  1149                           	global	i1sprintf@ap
  1150  002E                     i1sprintf@ap:	; 1 bytes @ 0xE
  1151  002E                     	ds	1
  1152                           	global	i1sprintf@flag
  1153  002F                     i1sprintf@flag:	; 1 bytes @ 0xF
  1154  002F                     	ds	1
  1155                           	global	i1sprintf@prec
  1156  0030                     i1sprintf@prec:	; 1 bytes @ 0x10
  1157  0030                     	ds	1
  1158                           	global	i1sprintf@_val
  1159  0031                     i1sprintf@_val:	; 4 bytes @ 0x11
  1160  0031                     	ds	4
  1161                           	global	i1sprintf@sp
  1162  0035                     i1sprintf@sp:	; 1 bytes @ 0x15
  1163  0035                     	ds	1
  1164                           	global	i1sprintf@c
  1165  0036                     i1sprintf@c:	; 1 bytes @ 0x16
  1166  0036                     	ds	1
  1167                           	global	??i1_UpdateDisplay
  1168  0037                     ??i1_UpdateDisplay:	; 0 bytes @ 0x17
  1169  0037                     	ds	5
  1170                           	global	i1UpdateDisplay@adcOutput
  1171  003C                     i1UpdateDisplay@adcOutput:	; 16 bytes @ 0x1C
  1172  003C                     	ds	16
  1173                           	global	??_isr1
  1174  004C                     ??_isr1:	; 0 bytes @ 0x2C
  1175  004C                     	ds	5
  1176 ;;Data sizes: Strings 95, constant 10, data 11, bss 85, persistent 0 stack 0
  1177 ;;Auto spaces:   Size  Autos    Used
  1178 ;; COMMON          14     14      14
  1179 ;; BANK0           80     49      79
  1180 ;; BANK1           80     72      80
  1181 ;; BANK3           96      0      60
  1182 ;; BANK2           96      0       0
  1183                           
  1184 ;;
  1185 ;; Pointer list with targets:
  1186                           
  1187 ;; i1sprintf@ap	PTR void [1] size(1) Largest target is 2
  1188 ;;		 -> ?i1_sprintf(BANK0[2]), 
  1189 ;;
  1190 ;; ?i1___awmod	int  size(1) Largest target is 0
  1191 ;;
  1192 ;; i1sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1193 ;;		 -> STR_12(CODE[15]), STR_11(CODE[15]), 
  1194 ;;
  1195 ;; ?i1_sprintf	int  size(1) Largest target is 0
  1196 ;;
  1197 ;; i1sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1198 ;;		 -> i1UpdateDisplay@adcOutput(BANK0[16]), 
  1199 ;;
  1200 ;; ?i1___wmul	unsigned int  size(1) Largest target is 0
  1201 ;;
  1202 ;; ?i1_readDistance	unsigned int  size(1) Largest target is 0
  1203 ;;
  1204 ;; ?i1___lwdiv	unsigned int  size(1) Largest target is 0
  1205 ;;
  1206 ;; i1lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1207 ;;		 -> i1UpdateDisplay@adcOutput(BANK0[16]), STR_15(CODE[4]), STR_14(CODE[8]), STR_13(CODE[4]), 
  1208 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1209 ;;		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1210 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1211 ;;
  1212 ;; ?i1_adc_read	unsigned int  size(1) Largest target is 0
  1213 ;;
  1214 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1215 ;;
  1216 ;; ?___awmod	int  size(1) Largest target is 0
  1217 ;;
  1218 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1219 ;;
  1220 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1221 ;;
  1222 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1223 ;;
  1224 ;; ?_scan360	int  size(1) Largest target is 0
  1225 ;;
  1226 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1227 ;;
  1228 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1229 ;;
  1230 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1231 ;;		 -> STR_12(CODE[15]), STR_11(CODE[15]), 
  1232 ;;
  1233 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1234 ;;		 -> UpdateDisplay@adcOutput(BANK1[16]), 
  1235 ;;
  1236 ;; ?_sprintf	int  size(1) Largest target is 0
  1237 ;;
  1238 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1239 ;;		 -> ?_sprintf(BANK1[2]), 
  1240 ;;
  1241 ;; S8114$_cp	PTR const unsigned char  size(1) Largest target is 0
  1242 ;;
  1243 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1244 ;;
  1245 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
  1246 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1247 ;;		 -> STR_6(CODE[4]), 
  1248 ;;
  1249 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
  1250 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1251 ;;		 -> STR_1(CODE[9]), 
  1252 ;;
  1253 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1254 ;;		 -> STR_15(CODE[4]), STR_14(CODE[8]), STR_13(CODE[4]), UpdateDisplay@adcOutput(BANK1[16]), 
  1255 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1256 ;;		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1257 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1258 ;;
  1259                           
  1260                           
  1261 ;;
  1262 ;; Critical Paths under _main in COMMON
  1263 ;;
  1264 ;;   None.
  1265 ;;
  1266 ;; Critical Paths under _isr1 in COMMON
  1267 ;;
  1268 ;;   i1_readAvgDistance->i1_readDistance
  1269 ;;   i1_readAvgDistance->i1___lwdiv
  1270 ;;   i1_readDistance->i1_adc_read_channel
  1271 ;;   i1_lcd_write_string->i1___awmod
  1272 ;;   i1_lcd_set_cursor->i1_lcd_write_control
  1273 ;;   i1_sprintf->i1___lwdiv
  1274 ;;   i1_ADCconvert->i1___lwdiv
  1275 ;;   i1_adc_read_channel->i1_adc_read
  1276 ;;   _ReadButtons->_Debounce
  1277 ;;   i1___lwmod->i1___lwdiv
  1278 ;;   i1___lwdiv->i1___wmul
  1279 ;;
  1280 ;; Critical Paths under _main in BANK0
  1281 ;;
  1282 ;;   None.
  1283 ;;
  1284 ;; Critical Paths under _isr1 in BANK0
  1285 ;;
  1286 ;;   _isr1->i1_UpdateDisplay
  1287 ;;   i1_UpdateDisplay->i1_sprintf
  1288 ;;   i1_readAvgDistance->i1_ADCconvert
  1289 ;;   i1_sprintf->i1___lwmod
  1290 ;;
  1291 ;; Critical Paths under _main in BANK1
  1292 ;;
  1293 ;;   _main->_scan360
  1294 ;;   _scan360->_UpdateDisplay
  1295 ;;   _UpdateDisplay->_sprintf
  1296 ;;   _readAvgDistance->_ADCconvert
  1297 ;;   _readDistance->_adc_read_channel
  1298 ;;   _calibrateIR->_rotate
  1299 ;;   _lcd_init->_lcd_write_control
  1300 ;;   _lcd_write_string->___awmod
  1301 ;;   _lcd_set_cursor->_lcd_write_control
  1302 ;;   _sprintf->___lwmod
  1303 ;;   _ADCconvert->___lwdiv
  1304 ;;   _robotTurn->_ser_putch
  1305 ;;   _robotMove->_ser_putch
  1306 ;;   _rotate->_spi_transfer
  1307 ;;   _robo_init->_ser_putch
  1308 ;;   _adc_read_channel->_adc_read
  1309 ;;   ___lwmod->___lwdiv
  1310 ;;   ___lwdiv->___wmul
  1311 ;;
  1312 ;; Critical Paths under _isr1 in BANK1
  1313 ;;
  1314 ;;   None.
  1315 ;;
  1316 ;; Critical Paths under _main in BANK3
  1317 ;;
  1318 ;;   None.
  1319 ;;
  1320 ;; Critical Paths under _isr1 in BANK3
  1321 ;;
  1322 ;;   None.
  1323 ;;
  1324 ;; Critical Paths under _main in BANK2
  1325 ;;
  1326 ;;   None.
  1327 ;;
  1328 ;; Critical Paths under _isr1 in BANK2
  1329 ;;
  1330 ;;   None.
  1331                           
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1334 ;;
  1335                           
  1336 ;;
  1337 ;;Call Graph Tables:
  1338 ;;
  1339 ;; ---------------------------------------------------------------------------------
  1340 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (0) _main                                                 6     6      0    2625
  1343 ;;                                             66 BANK1      6     6      0
  1344 ;;                               _init
  1345 ;;                               _Menu
  1346 ;;                        _calibrateIR
  1347 ;;                            _scan360
  1348 ;;                             _rotate
  1349 ;;                          _robotMove
  1350 ;;                          _robotTurn
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (1) _scan360                                              8     6      2    2138
  1353 ;;                                             58 BANK1      8     6      2
  1354 ;;                    _readAvgDistance
  1355 ;;                             _rotate
  1356 ;;                      _UpdateDisplay
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (1) _init                                                 1     1      0      44
  1359 ;;                                              3 BANK1      1     1      0
  1360 ;;                           _init_adc
  1361 ;;                           _lcd_init
  1362 ;;                           _ser_init
  1363 ;;                          _robo_init
  1364 ;; ---------------------------------------------------------------------------------
  1365 ;; (2) _UpdateDisplay                                       22    22      0    1347
  1366 ;;                                             37 BANK1     21    21      0
  1367 ;;                  _lcd_write_control
  1368 ;;                            _sprintf
  1369 ;;                     _lcd_set_cursor
  1370 ;;                   _lcd_write_string
  1371 ;;                            ___awmod
  1372 ;; ---------------------------------------------------------------------------------
  1373 ;; (2) _readAvgDistance                                      4     4      0     555
  1374 ;;                                             16 BANK1      4     4      0
  1375 ;;                       _readDistance
  1376 ;;                            ___lwdiv
  1377 ;;                         _ADCconvert
  1378 ;; ---------------------------------------------------------------------------------
  1379 ;; (3) _readDistance                                         6     4      2      69
  1380 ;;                                              8 BANK1      6     4      2
  1381 ;;                   _adc_read_channel
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (1) _calibrateIR                                          0     0      0      98
  1384 ;;                             _rotate
  1385 ;; ---------------------------------------------------------------------------------
  1386 ;; (2) _lcd_init                                             0     0      0      22
  1387 ;;                  _lcd_write_control
  1388 ;; ---------------------------------------------------------------------------------
  1389 ;; (3) _lcd_write_string                                     2     0      2      67
  1390 ;;                                              7 BANK1      2     0      2
  1391 ;;                     _lcd_write_data
  1392 ;;                            ___awmod (ARG)
  1393 ;; ---------------------------------------------------------------------------------
  1394 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1395 ;;                                              3 BANK1      1     1      0
  1396 ;;                  _lcd_write_control
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (3) _sprintf                                             17    12      5     798
  1399 ;;                                             20 BANK1     17    12      5
  1400 ;;                            ___lwdiv
  1401 ;;                            ___lwmod
  1402 ;; ---------------------------------------------------------------------------------
  1403 ;; (3) _ADCconvert                                           2     2      0     254
  1404 ;;                                             14 BANK1      2     2      0
  1405 ;;                             ___wmul
  1406 ;;                            ___lwdiv
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (1) _robotTurn                                            3     1      2      88
  1409 ;;                                              2 BANK1      3     1      2
  1410 ;;                          _ser_putch
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (1) _robotMove                                            3     1      2      88
  1413 ;;                                              2 BANK1      3     1      2
  1414 ;;                          _ser_putch
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (1) _rotate                                               5     4      1      98
  1417 ;;                                              3 BANK1      5     4      1
  1418 ;;                       _spi_transfer
  1419 ;; ---------------------------------------------------------------------------------
  1420 ;; (2) _robo_init                                            0     0      0      22
  1421 ;;                          _ser_putch
  1422 ;; ---------------------------------------------------------------------------------
  1423 ;; (4) _lcd_write_data                                       3     3      0      22
  1424 ;;                                              0 BANK1      3     3      0
  1425 ;; ---------------------------------------------------------------------------------
  1426 ;; (4) _lcd_write_control                                    3     3      0      22
  1427 ;;                                              0 BANK1      3     3      0
  1428 ;; ---------------------------------------------------------------------------------
  1429 ;; (2) _init_adc                                             1     1      0       0
  1430 ;;                                              0 BANK1      1     1      0
  1431 ;; ---------------------------------------------------------------------------------
  1432 ;; (4) _adc_read_channel                                     2     2      0      46
  1433 ;;                                              6 BANK1      2     2      0
  1434 ;;                           _adc_read
  1435 ;; ---------------------------------------------------------------------------------
  1436 ;; (3) ___awmod                                              7     3      4     296
  1437 ;;                                              0 BANK1      7     3      4
  1438 ;; ---------------------------------------------------------------------------------
  1439 ;; (4) ___lwmod                                              6     2      4     159
  1440 ;;                                             14 BANK1      6     2      4
  1441 ;;                            ___lwdiv (ARG)
  1442 ;; ---------------------------------------------------------------------------------
  1443 ;; (4) ___lwdiv                                              8     4      4     162
  1444 ;;                                              6 BANK1      8     4      4
  1445 ;;                             ___wmul (ARG)
  1446 ;; ---------------------------------------------------------------------------------
  1447 ;; (4) ___wmul                                               6     2      4      92
  1448 ;;                                              0 BANK1      6     2      4
  1449 ;; ---------------------------------------------------------------------------------
  1450 ;; (2) _ser_putch                                            2     2      0      22
  1451 ;;                                              0 BANK1      2     2      0
  1452 ;; ---------------------------------------------------------------------------------
  1453 ;; (2) _spi_transfer                                         3     3      0      30
  1454 ;;                                              0 BANK1      3     3      0
  1455 ;; ---------------------------------------------------------------------------------
  1456 ;; (1) _Menu                                                 1     1      0      22
  1457 ;;                                              0 BANK1      1     1      0
  1458 ;; ---------------------------------------------------------------------------------
  1459 ;; (2) _ser_init                                             1     1      0       0
  1460 ;;                                              0 BANK1      1     1      0
  1461 ;; ---------------------------------------------------------------------------------
  1462 ;; (5) _adc_read                                             6     4      2      24
  1463 ;;                                              0 BANK1      6     4      2
  1464 ;; ---------------------------------------------------------------------------------
  1465 ;; Estimated maximum stack depth 5
  1466 ;; ---------------------------------------------------------------------------------
  1467 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1468 ;; ---------------------------------------------------------------------------------
  1469 ;; (6) _isr1                                                 5     5      0    6643
  1470 ;;                                             44 BANK0      5     5      0
  1471 ;;                          i1___lwmod
  1472 ;;                  i1_readAvgDistance
  1473 ;;                    i1_UpdateDisplay
  1474 ;;                        _ReadButtons
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (7) i1_UpdateDisplay                                     22    22      0    4316
  1477 ;;                                             23 BANK0     21    21      0
  1478 ;;                i1_lcd_write_control
  1479 ;;                          i1_sprintf
  1480 ;;                   i1_lcd_set_cursor
  1481 ;;                 i1_lcd_write_string
  1482 ;;                          i1___awmod
  1483 ;; ---------------------------------------------------------------------------------
  1484 ;; (7) i1_readAvgDistance                                    4     4      0    1806
  1485 ;;                                              2 BANK0      4     4      0
  1486 ;;                     i1_readDistance
  1487 ;;                          i1___lwdiv
  1488 ;;                       i1_ADCconvert
  1489 ;; ---------------------------------------------------------------------------------
  1490 ;; (8) i1_readDistance                                       6     4      2     225
  1491 ;;                                              8 COMMON     6     4      2
  1492 ;;                 i1_adc_read_channel
  1493 ;; ---------------------------------------------------------------------------------
  1494 ;; (8) i1_lcd_write_string                                   2     0      2     221
  1495 ;;                                              7 COMMON     2     0      2
  1496 ;;                   i1_lcd_write_data
  1497 ;;                          i1___awmod (ARG)
  1498 ;; ---------------------------------------------------------------------------------
  1499 ;; (8) i1_lcd_set_cursor                                     1     1      0     148
  1500 ;;                                              3 COMMON     1     1      0
  1501 ;;                i1_lcd_write_control
  1502 ;; ---------------------------------------------------------------------------------
  1503 ;; (8) i1_sprintf                                           17    12      5    2611
  1504 ;;                                              6 BANK0     17    12      5
  1505 ;;                          i1___lwdiv
  1506 ;;                          i1___lwmod
  1507 ;; ---------------------------------------------------------------------------------
  1508 ;; (8) i1_ADCconvert                                         2     2      0     827
  1509 ;;                                              0 BANK0      2     2      0
  1510 ;;                           i1___wmul
  1511 ;;                          i1___lwdiv
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (9) i1_lcd_write_data                                     3     3      0      73
  1514 ;;                                              0 COMMON     3     3      0
  1515 ;; ---------------------------------------------------------------------------------
  1516 ;; (9) i1_lcd_write_control                                  3     3      0      73
  1517 ;;                                              0 COMMON     3     3      0
  1518 ;; ---------------------------------------------------------------------------------
  1519 ;; (9) i1_adc_read_channel                                   2     2      0     150
  1520 ;;                                              6 COMMON     2     2      0
  1521 ;;                         i1_adc_read
  1522 ;; ---------------------------------------------------------------------------------
  1523 ;; (7) _ReadButtons                                          0     0      0       0
  1524 ;;                           _Debounce
  1525 ;; ---------------------------------------------------------------------------------
  1526 ;; (8) i1___awmod                                            7     3      4     969
  1527 ;;                                              0 COMMON     7     3      4
  1528 ;; ---------------------------------------------------------------------------------
  1529 ;; (9) i1___lwmod                                            6     2      4     521
  1530 ;;                                              0 BANK0      6     2      4
  1531 ;;                          i1___lwdiv (ARG)
  1532 ;; ---------------------------------------------------------------------------------
  1533 ;; (9) i1___lwdiv                                            8     4      4     527
  1534 ;;                                              6 COMMON     8     4      4
  1535 ;;                           i1___wmul (ARG)
  1536 ;; ---------------------------------------------------------------------------------
  1537 ;; (9) i1___wmul                                             6     2      4     300
  1538 ;;                                              0 COMMON     6     2      4
  1539 ;; ---------------------------------------------------------------------------------
  1540 ;; (10) i1_adc_read                                          6     4      2      77
  1541 ;;                                              0 COMMON     6     4      2
  1542 ;; ---------------------------------------------------------------------------------
  1543 ;; (8) _Debounce                                             1     1      0       0
  1544 ;;                                              0 COMMON     1     1      0
  1545 ;; ---------------------------------------------------------------------------------
  1546 ;; Estimated maximum stack depth 10
  1547 ;; ---------------------------------------------------------------------------------
  1548                           
  1549 ;; Call Graph Graphs:
  1550                           
  1551 ;; _main (ROOT)
  1552 ;;   _init
  1553 ;;     _init_adc
  1554 ;;     _lcd_init
  1555 ;;       _lcd_write_control
  1556 ;;     _ser_init
  1557 ;;     _robo_init
  1558 ;;       _ser_putch
  1559 ;;   _Menu
  1560 ;;   _calibrateIR
  1561 ;;     _rotate
  1562 ;;       _spi_transfer
  1563 ;;   _scan360
  1564 ;;     _readAvgDistance
  1565 ;;       _readDistance
  1566 ;;         _adc_read_channel
  1567 ;;           _adc_read
  1568 ;;       ___lwdiv
  1569 ;;         ___wmul (ARG)
  1570 ;;       _ADCconvert
  1571 ;;         ___wmul
  1572 ;;         ___lwdiv
  1573 ;;           ___wmul (ARG)
  1574 ;;     _rotate
  1575 ;;       _spi_transfer
  1576 ;;     _UpdateDisplay
  1577 ;;       _lcd_write_control
  1578 ;;       _sprintf
  1579 ;;         ___lwdiv
  1580 ;;           ___wmul (ARG)
  1581 ;;         ___lwmod
  1582 ;;           ___lwdiv (ARG)
  1583 ;;             ___wmul (ARG)
  1584 ;;       _lcd_set_cursor
  1585 ;;         _lcd_write_control
  1586 ;;       _lcd_write_string
  1587 ;;         _lcd_write_data
  1588 ;;         ___awmod (ARG)
  1589 ;;       ___awmod
  1590 ;;   _rotate
  1591 ;;     _spi_transfer
  1592 ;;   _robotMove
  1593 ;;     _ser_putch
  1594 ;;   _robotTurn
  1595 ;;     _ser_putch
  1596 ;;
  1597 ;; _isr1 (ROOT)
  1598 ;;   i1___lwmod
  1599 ;;     i1___lwdiv (ARG)
  1600 ;;       i1___wmul (ARG)
  1601 ;;   i1_readAvgDistance
  1602 ;;     i1_readDistance
  1603 ;;       i1_adc_read_channel
  1604 ;;         i1_adc_read
  1605 ;;     i1___lwdiv
  1606 ;;       i1___wmul (ARG)
  1607 ;;     i1_ADCconvert
  1608 ;;       i1___wmul
  1609 ;;       i1___lwdiv
  1610 ;;         i1___wmul (ARG)
  1611 ;;   i1_UpdateDisplay
  1612 ;;     i1_lcd_write_control
  1613 ;;     i1_sprintf
  1614 ;;       i1___lwdiv
  1615 ;;         i1___wmul (ARG)
  1616 ;;       i1___lwmod
  1617 ;;         i1___lwdiv (ARG)
  1618 ;;           i1___wmul (ARG)
  1619 ;;     i1_lcd_set_cursor
  1620 ;;       i1_lcd_write_control
  1621 ;;     i1_lcd_write_string
  1622 ;;       i1_lcd_write_data
  1623 ;;       i1___awmod (ARG)
  1624 ;;     i1___awmod
  1625 ;;   _ReadButtons
  1626 ;;     _Debounce
  1627 ;;
  1628                           
  1629 ;; Address spaces:
  1630                           
  1631 ;;Name               Size   Autos  Total    Cost      Usage
  1632 ;;BANK3               60      0      3C       9       62.5%
  1633 ;;BITBANK3            60      0       0       8        0.0%
  1634 ;;SFR3                 0      0       0       4        0.0%
  1635 ;;BITSFR3              0      0       0       4        0.0%
  1636 ;;BANK2               60      0       0      11        0.0%
  1637 ;;BITBANK2            60      0       0      10        0.0%
  1638 ;;SFR2                 0      0       0       5        0.0%
  1639 ;;BITSFR2              0      0       0       5        0.0%
  1640 ;;SFR1                 0      0       0       2        0.0%
  1641 ;;BITSFR1              0      0       0       2        0.0%
  1642 ;;BANK1               50     48      50       7      100.0%
  1643 ;;BITBANK1            50      0       0       6        0.0%
  1644 ;;CODE                 0      0       0       0        0.0%
  1645 ;;DATA                 0      0      F8      12        0.0%
  1646 ;;ABS                  0      0      E9       3        0.0%
  1647 ;;NULL                 0      0       0       0        0.0%
  1648 ;;STACK                0      0       F       2        0.0%
  1649 ;;BANK0               50     31      4F       5       98.8%
  1650 ;;BITBANK0            50      0       2       4        2.5%
  1651 ;;SFR0                 0      0       0       1        0.0%
  1652 ;;BITSFR0              0      0       0       1        0.0%
  1653 ;;COMMON               E      E       E       1      100.0%
  1654 ;;BITCOMMON            E      0       0       0        0.0%
  1655 ;;EEDATA             100      0       0       0        0.0%
  1656                           
  1657                           	global	_main
  1658                           psect	maintext,global,class=CODE,delta=2
  1659                           global __pmaintext
  1660  0D2E                     __pmaintext:
  1661                           
  1662 ;; *************** function _main *****************
  1663 ;; Defined at:
  1664 ;;		line 227 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  shortwall       2   69[BANK1 ] int 
  1669 ;;  choice          1   71[BANK1 ] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 17F/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       3       0       0
  1681 ;;      Temps:          0       0       3       0       0
  1682 ;;      Totals:         0       0       6       0       0
  1683 ;;Total ram usage:        6 bytes
  1684 ;; Hardware stack levels required when called:   10
  1685 ;; This function calls:
  1686 ;;		_init
  1687 ;;		_Menu
  1688 ;;		_calibrateIR
  1689 ;;		_scan360
  1690 ;;		_rotate
  1691 ;;		_robotMove
  1692 ;;		_robotTurn
  1693 ;; This function is called by:
  1694 ;;		Startup code after reset
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           psect	maintext
  1698                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1699                           	line	227
  1700                           	global	__size_of_main
  1701  00E7                     	__size_of_main	equ	__end_of_main-_main
  1702                           	
  1703  0D2E                     _main:	
  1704 ;; hardware stack exceeded
  1705                           	opt	stack 0
  1706                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1707                           	line	232
  1708                           	
  1709  0D2E                     l12248:	
  1710                           ;Main.c: 232: init();
  1711  0D2E  160A  118A  253E   	fcall	_init
              120A  158A         
  1712  0D33  2D34               	goto	l12250
  1713                           	line	238
  1714                           ;Main.c: 238: while(1)
  1715                           	
  1716  0D34                     l2233:	
  1717                           	line	240
  1718                           	
  1719  0D34                     l12250:	
  1720                           ;Main.c: 239: {
  1721                           ;Main.c: 240: unsigned char choice = 255;
  1722  0D34  30FF               	movlw	(0FFh)
  1723  0D35  1683               	bsf	status, 5	;RP0=1, select bank1
  1724  0D36  1303               	bcf	status, 6	;RP1=0, select bank1
  1725  0D37  00E2               	movwf	(??_main+0)^080h+0
  1726  0D38  0862               	movf	(??_main+0)^080h+0,w
  1727  0D39  00E7               	movwf	(main@choice)^080h
  1728                           	line	241
  1729                           	
  1730  0D3A                     l12252:	
  1731                           ;Main.c: 241: int shortwall = 0;
  1732  0D3A  01E5               	clrf	(main@shortwall)^080h
  1733  0D3B  01E6               	clrf	(main@shortwall+1)^080h
  1734                           	line	242
  1735                           	
  1736  0D3C                     l12254:	
  1737                           ;Main.c: 242: currentMenu = 0;
  1738  0D3C  1283               	bcf	status, 5	;RP0=0, select bank0
  1739  0D3D  1303               	bcf	status, 6	;RP1=0, select bank0
  1740  0D3E  01E2               	clrf	(_currentMenu)
  1741                           	line	243
  1742                           ;Main.c: 243: switch (buttonPressed)
  1743  0D3F  2D79               	goto	l12278
  1744                           	line	245
  1745                           ;Main.c: 244: {
  1746                           ;Main.c: 245: case 1:
  1747                           	
  1748  0D40                     l2235:	
  1749                           	line	246
  1750                           	
  1751  0D40                     l12256:	
  1752                           ;Main.c: 246: Menu(1);
  1753  0D40  3001               	movlw	(01h)
  1754  0D41  160A  118A  26A5   	fcall	_Menu
              120A  158A         
  1755                           	line	248
  1756                           	
  1757  0D46                     l12258:	
  1758                           ;Main.c: 248: buttonPressed = 0;
  1759  0D46  1283               	bcf	status, 5	;RP0=0, select bank0
  1760  0D47  1303               	bcf	status, 6	;RP1=0, select bank0
  1761  0D48  01E1               	clrf	(_buttonPressed)	;volatile
  1762                           	line	250
  1763                           ;Main.c: 250: break;
  1764  0D49  2DF7               	goto	l12300
  1765                           	line	251
  1766                           ;Main.c: 251: case 2:
  1767                           	
  1768  0D4A                     l2237:	
  1769                           	line	252
  1770                           	
  1771  0D4A                     l12260:	
  1772                           ;Main.c: 252: Menu(2);
  1773  0D4A  3002               	movlw	(02h)
  1774  0D4B  160A  118A  26A5   	fcall	_Menu
              120A  158A         
  1775                           	line	254
  1776                           	
  1777  0D50                     l12262:	
  1778                           ;Main.c: 254: buttonPressed = 0;
  1779  0D50  1283               	bcf	status, 5	;RP0=0, select bank0
  1780  0D51  1303               	bcf	status, 6	;RP1=0, select bank0
  1781  0D52  01E1               	clrf	(_buttonPressed)	;volatile
  1782                           	line	256
  1783                           ;Main.c: 256: break;
  1784  0D53  2DF7               	goto	l12300
  1785                           	line	257
  1786                           ;Main.c: 257: case 3:
  1787                           	
  1788  0D54                     l2238:	
  1789                           	line	258
  1790                           	
  1791  0D54                     l12264:	
  1792                           ;Main.c: 258: Menu(3);
  1793  0D54  3003               	movlw	(03h)
  1794  0D55  160A  118A  26A5   	fcall	_Menu
              120A  158A         
  1795                           	line	260
  1796                           	
  1797  0D5A                     l12266:	
  1798                           ;Main.c: 260: buttonPressed = 0;
  1799  0D5A  1283               	bcf	status, 5	;RP0=0, select bank0
  1800  0D5B  1303               	bcf	status, 6	;RP1=0, select bank0
  1801  0D5C  01E1               	clrf	(_buttonPressed)	;volatile
  1802                           	line	262
  1803                           ;Main.c: 262: break;
  1804  0D5D  2DF7               	goto	l12300
  1805                           	line	263
  1806                           ;Main.c: 263: case 4:
  1807                           	
  1808  0D5E                     l2239:	
  1809                           	line	264
  1810                           	
  1811  0D5E                     l12268:	
  1812                           ;Main.c: 264: Menu(4);
  1813  0D5E  3004               	movlw	(04h)
  1814  0D5F  160A  118A  26A5   	fcall	_Menu
              120A  158A         
  1815                           	line	266
  1816                           	
  1817  0D64                     l12270:	
  1818                           ;Main.c: 266: buttonPressed = 0;
  1819  0D64  1283               	bcf	status, 5	;RP0=0, select bank0
  1820  0D65  1303               	bcf	status, 6	;RP1=0, select bank0
  1821  0D66  01E1               	clrf	(_buttonPressed)	;volatile
  1822                           	line	268
  1823                           ;Main.c: 268: break;
  1824  0D67  2DF7               	goto	l12300
  1825                           	line	269
  1826                           ;Main.c: 269: case 5:
  1827                           	
  1828  0D68                     l2240:	
  1829                           	line	270
  1830                           	
  1831  0D68                     l12272:	
  1832                           ;Main.c: 270: choice = Menu(5);
  1833  0D68  3005               	movlw	(05h)
  1834  0D69  160A  118A  26A5   	fcall	_Menu
              120A  158A         
  1835  0D6E  1683               	bsf	status, 5	;RP0=1, select bank1
  1836  0D6F  1303               	bcf	status, 6	;RP1=0, select bank1
  1837  0D70  00E2               	movwf	(??_main+0)^080h+0
  1838  0D71  0862               	movf	(??_main+0)^080h+0,w
  1839  0D72  00E7               	movwf	(main@choice)^080h
  1840                           	line	272
  1841                           	
  1842  0D73                     l12274:	
  1843                           ;Main.c: 272: buttonPressed = 0;
  1844  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  1845  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  1846  0D75  01E1               	clrf	(_buttonPressed)	;volatile
  1847                           	line	274
  1848                           ;Main.c: 274: break;
  1849  0D76  2DF7               	goto	l12300
  1850                           	line	275
  1851                           ;Main.c: 275: default:
  1852                           	
  1853  0D77                     l2241:	
  1854                           	line	277
  1855                           ;Main.c: 277: break;
  1856  0D77  2DF7               	goto	l12300
  1857                           	line	278
  1858                           	
  1859  0D78                     l12276:	
  1860                           ;Main.c: 278: }
  1861  0D78  2DF7               	goto	l12300
  1862                           	line	243
  1863                           	
  1864  0D79                     l2234:	
  1865                           	
  1866  0D79                     l12278:	
  1867  0D79  0861               	movf	(_buttonPressed),w	;volatile
  1868                           	; Switch size 1, requested type "space"
  1869                           ; Number of cases is 5, Range of values is 1 to 5
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte           16     9 (average)
  1873                           ; direct_byte           26    11 (fixed)
  1874                           ; jumptable            263     9 (fixed)
  1875                           ;	Chosen strategy is simple_byte
  1876                           
  1877                           	opt asmopt_off
  1878  0D7A  3A01               	xorlw	1^0	; case 1
  1879  0D7B  1903               	skipnz
  1880  0D7C  2D40               	goto	l12256
  1881  0D7D  3A03               	xorlw	2^1	; case 2
  1882  0D7E  1903               	skipnz
  1883  0D7F  2D4A               	goto	l12260
  1884  0D80  3A01               	xorlw	3^2	; case 3
  1885  0D81  1903               	skipnz
  1886  0D82  2D54               	goto	l12264
  1887  0D83  3A07               	xorlw	4^3	; case 4
  1888  0D84  1903               	skipnz
  1889  0D85  2D5E               	goto	l12268
  1890  0D86  3A01               	xorlw	5^4	; case 5
  1891  0D87  1903               	skipnz
  1892  0D88  2D68               	goto	l12272
  1893  0D89  2DF7               	goto	l12300
  1894                           	opt asmopt_on
  1895                           
  1896                           	line	278
  1897                           	
  1898  0D8A                     l2236:	
  1899                           	line	281
  1900                           ;Main.c: 281: switch (choice)
  1901  0D8A  2DF7               	goto	l12300
  1902                           	line	283
  1903                           ;Main.c: 282: {
  1904                           ;Main.c: 283: case 0:
  1905                           	
  1906  0D8B                     l2243:	
  1907                           	line	284
  1908                           	
  1909  0D8B                     l12280:	
  1910                           ;Main.c: 284: calibrateIR();
  1911  0D8B  120A  158A  2114   	fcall	_calibrateIR
              120A  158A         
  1912                           	line	285
  1913                           ;Main.c: 285: break;
  1914  0D90  2E0A               	goto	l12302
  1915                           	line	286
  1916                           ;Main.c: 286: case 1:
  1917                           	
  1918  0D91                     l2245:	
  1919                           	line	287
  1920                           	
  1921  0D91                     l12282:	
  1922                           ;Main.c: 287: shortwall = scan360();
  1923  0D91  120A  158A  2335   	fcall	_scan360
              120A  158A         
  1924  0D96  1683               	bsf	status, 5	;RP0=1, select bank1
  1925  0D97  1303               	bcf	status, 6	;RP1=0, select bank1
  1926  0D98  085B               	movf	(1+(?_scan360))^080h,w
  1927  0D99  01E6               	clrf	(main@shortwall+1)^080h
  1928  0D9A  07E6               	addwf	(main@shortwall+1)^080h
  1929  0D9B  085A               	movf	(0+(?_scan360))^080h,w
  1930  0D9C  01E5               	clrf	(main@shortwall)^080h
  1931  0D9D  07E5               	addwf	(main@shortwall)^080h
  1932                           
  1933                           	line	288
  1934                           	
  1935  0D9E                     l12284:	
  1936                           ;Main.c: 288: rotate((400 - shortwall), 0);
  1937  0D9E  01A3               	clrf	(?_rotate)^080h
  1938  0D9F  0365               	decf	(main@shortwall)^080h,w
  1939  0DA0  3AFF               	xorlw	0ffh
  1940  0DA1  3E90               	addlw	090h
  1941  0DA2  120A  158A  2210   	fcall	_rotate
              120A  158A         
  1942                           	line	289
  1943                           ;Main.c: 289: break;
  1944  0DA7  2E0A               	goto	l12302
  1945                           	line	290
  1946                           ;Main.c: 290: case 2:
  1947                           	
  1948  0DA8                     l2246:	
  1949                           	line	291
  1950                           	
  1951  0DA8                     l12286:	
  1952                           ;Main.c: 291: _delay((unsigned long)((100)*(20000000/4000.0)));
  1953                           	opt asmopt_off
  1954  0DA8  3003               movlw  3
  1955  0DA9  1683               	bsf	status, 5	;RP0=1, select bank1
  1956  0DAA  1303               	bcf	status, 6	;RP1=0, select bank1
  1957  0DAB  00E4               movwf	((??_main+0)^080h+0+2),f
  1958  0DAC  308A               movlw	138
  1959  0DAD  00E3               movwf	((??_main+0)^080h+0+1),f
  1960  0DAE  3056               	movlw	86
  1961  0DAF  00E2               movwf	((??_main+0)^080h+0),f
  1962  0DB0                     u6037:
  1963  0DB0  0BE2               	decfsz	((??_main+0)^080h+0),f
  1964  0DB1  2DB0               	goto	u6037
  1965  0DB2  0BE3               	decfsz	((??_main+0)^080h+0+1),f
  1966  0DB3  2DB0               	goto	u6037
  1967  0DB4  0BE4               	decfsz	((??_main+0)^080h+0+2),f
  1968  0DB5  2DB0               	goto	u6037
  1969  0DB6  2DB7               	nop2
  1970                           opt asmopt_on
  1971                           
  1972                           	line	292
  1973                           	
  1974  0DB7                     l12288:	
  1975                           ;Main.c: 292: robotMove(2000);
  1976  0DB7  30D0               	movlw	low(07D0h)
  1977  0DB8  1683               	bsf	status, 5	;RP0=1, select bank1
  1978  0DB9  1303               	bcf	status, 6	;RP1=0, select bank1
  1979  0DBA  00A2               	movwf	(?_robotMove)^080h
  1980  0DBB  3007               	movlw	high(07D0h)
  1981  0DBC  00A3               	movwf	((?_robotMove)^080h)+1
  1982  0DBD  120A  158A  2426   	fcall	_robotMove
              120A  158A         
  1983                           	line	295
  1984                           ;Main.c: 295: break;
  1985  0DC2  2E0A               	goto	l12302
  1986                           	line	296
  1987                           ;Main.c: 296: case 3:
  1988                           	
  1989  0DC3                     l2247:	
  1990                           	line	297
  1991                           	
  1992  0DC3                     l12290:	
  1993                           ;Main.c: 297: _delay((unsigned long)((100)*(20000000/4000.0)));
  1994                           	opt asmopt_off
  1995  0DC3  3003               movlw  3
  1996  0DC4  1683               	bsf	status, 5	;RP0=1, select bank1
  1997  0DC5  1303               	bcf	status, 6	;RP1=0, select bank1
  1998  0DC6  00E4               movwf	((??_main+0)^080h+0+2),f
  1999  0DC7  308A               movlw	138
  2000  0DC8  00E3               movwf	((??_main+0)^080h+0+1),f
  2001  0DC9  3056               	movlw	86
  2002  0DCA  00E2               movwf	((??_main+0)^080h+0),f
  2003  0DCB                     u6047:
  2004  0DCB  0BE2               	decfsz	((??_main+0)^080h+0),f
  2005  0DCC  2DCB               	goto	u6047
  2006  0DCD  0BE3               	decfsz	((??_main+0)^080h+0+1),f
  2007  0DCE  2DCB               	goto	u6047
  2008  0DCF  0BE4               	decfsz	((??_main+0)^080h+0+2),f
  2009  0DD0  2DCB               	goto	u6047
  2010  0DD1  2DD2               	nop2
  2011                           opt asmopt_on
  2012                           
  2013                           	line	298
  2014                           	
  2015  0DD2                     l12292:	
  2016                           ;Main.c: 298: robotMove(1000);
  2017  0DD2  30E8               	movlw	low(03E8h)
  2018  0DD3  1683               	bsf	status, 5	;RP0=1, select bank1
  2019  0DD4  1303               	bcf	status, 6	;RP1=0, select bank1
  2020  0DD5  00A2               	movwf	(?_robotMove)^080h
  2021  0DD6  3003               	movlw	high(03E8h)
  2022  0DD7  00A3               	movwf	((?_robotMove)^080h)+1
  2023  0DD8  120A  158A  2426   	fcall	_robotMove
              120A  158A         
  2024                           	line	299
  2025                           	
  2026  0DDD                     l12294:	
  2027                           ;Main.c: 299: robotTurn(-90);
  2028  0DDD  30A6               	movlw	low(-90)
  2029  0DDE  1683               	bsf	status, 5	;RP0=1, select bank1
  2030  0DDF  1303               	bcf	status, 6	;RP1=0, select bank1
  2031  0DE0  00A2               	movwf	(?_robotTurn)^080h
  2032  0DE1  30FF               	movlw	high(-90)
  2033  0DE2  00A3               	movwf	((?_robotTurn)^080h)+1
  2034  0DE3  120A  158A  24A6   	fcall	_robotTurn
              120A  158A         
  2035                           	line	300
  2036                           	
  2037  0DE8                     l12296:	
  2038                           ;Main.c: 300: robotMove(1000);
  2039  0DE8  30E8               	movlw	low(03E8h)
  2040  0DE9  1683               	bsf	status, 5	;RP0=1, select bank1
  2041  0DEA  1303               	bcf	status, 6	;RP1=0, select bank1
  2042  0DEB  00A2               	movwf	(?_robotMove)^080h
  2043  0DEC  3003               	movlw	high(03E8h)
  2044  0DED  00A3               	movwf	((?_robotMove)^080h)+1
  2045  0DEE  120A  158A  2426   	fcall	_robotMove
              120A  158A         
  2046                           	line	301
  2047                           ;Main.c: 301: break;
  2048  0DF3  2E0A               	goto	l12302
  2049                           	line	302
  2050                           ;Main.c: 302: case 4:
  2051                           	
  2052  0DF4                     l2248:	
  2053                           	line	304
  2054                           ;Main.c: 304: break;
  2055  0DF4  2E0A               	goto	l12302
  2056                           	line	307
  2057                           ;Main.c: 307: default:
  2058                           	
  2059  0DF5                     l2249:	
  2060                           	line	309
  2061                           ;Main.c: 309: break;
  2062  0DF5  2E0A               	goto	l12302
  2063                           	line	310
  2064                           	
  2065  0DF6                     l12298:	
  2066                           ;Main.c: 310: }
  2067  0DF6  2E0A               	goto	l12302
  2068                           	line	281
  2069                           	
  2070  0DF7                     l2242:	
  2071                           	
  2072  0DF7                     l12300:	
  2073  0DF7  1683               	bsf	status, 5	;RP0=1, select bank1
  2074  0DF8  1303               	bcf	status, 6	;RP1=0, select bank1
  2075  0DF9  0867               	movf	(main@choice)^080h,w
  2076                           	; Switch size 1, requested type "space"
  2077                           ; Number of cases is 5, Range of values is 0 to 4
  2078                           ; switch strategies available:
  2079                           ; Name         Instructions Cycles
  2080                           ; simple_byte           16     9 (average)
  2081                           ; direct_byte           23     8 (fixed)
  2082                           ; jumptable            260     6 (fixed)
  2083                           ; rangetable             9     6 (fixed)
  2084                           ; spacedrange           16     9 (fixed)
  2085                           ; locatedrange           5     3 (fixed)
  2086                           ;	Chosen strategy is simple_byte
  2087                           
  2088                           	opt asmopt_off
  2089  0DFA  3A00               	xorlw	0^0	; case 0
  2090  0DFB  1903               	skipnz
  2091  0DFC  2D8B               	goto	l12280
  2092  0DFD  3A01               	xorlw	1^0	; case 1
  2093  0DFE  1903               	skipnz
  2094  0DFF  2D91               	goto	l12282
  2095  0E00  3A03               	xorlw	2^1	; case 2
  2096  0E01  1903               	skipnz
  2097  0E02  2DA8               	goto	l12286
  2098  0E03  3A01               	xorlw	3^2	; case 3
  2099  0E04  1903               	skipnz
  2100  0E05  2DC3               	goto	l12290
  2101  0E06  3A07               	xorlw	4^3	; case 4
  2102  0E07  1903               	skipnz
  2103  0E08  2E0A               	goto	l12302
  2104  0E09  2E0A               	goto	l12302
  2105                           	opt asmopt_on
  2106                           
  2107                           	line	310
  2108                           	
  2109  0E0A                     l2244:	
  2110                           	line	311
  2111                           	
  2112  0E0A                     l12302:	
  2113                           ;Main.c: 311: choice = 255;
  2114  0E0A  30FF               	movlw	(0FFh)
  2115  0E0B  1683               	bsf	status, 5	;RP0=1, select bank1
  2116  0E0C  1303               	bcf	status, 6	;RP1=0, select bank1
  2117  0E0D  00E2               	movwf	(??_main+0)^080h+0
  2118  0E0E  0862               	movf	(??_main+0)^080h+0,w
  2119  0E0F  00E7               	movwf	(main@choice)^080h
  2120  0E10  2D34               	goto	l12250
  2121                           	line	461
  2122                           	
  2123  0E11                     l2250:	
  2124                           	line	238
  2125  0E11  2D34               	goto	l12250
  2126                           	
  2127  0E12                     l2251:	
  2128                           	line	462
  2129                           	
  2130  0E12                     l2252:	
  2131                           	global	start
  2132  0E12  120A  118A  2812   	ljmp	start
  2133                           	opt stack 0
  2134                           GLOBAL	__end_of_main
  2135  0E15                     	__end_of_main:
  2136 ;; =============== function _main ends ============
  2137                           
  2138                           	signat	_main,88
  2139                           	global	_scan360
  2140                           psect	text1131,local,class=CODE,delta=2
  2141                           global __ptext1131
  2142  0B35                     __ptext1131:
  2143                           
  2144 ;; *************** function _scan360 *****************
  2145 ;; Defined at:
  2146 ;;		line 203 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  steps           2   64[BANK1 ] int 
  2151 ;;  lowestSteps     2   62[BANK1 ] int 
  2152 ;;  lowestVal       2   60[BANK1 ] int 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   58[BANK1 ] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       0       2       0       0
  2163 ;;      Locals:         0       0       6       0       0
  2164 ;;      Temps:          0       0       0       0       0
  2165 ;;      Totals:         0       0       8       0       0
  2166 ;;Total ram usage:        8 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    9
  2169 ;; This function calls:
  2170 ;;		_readAvgDistance
  2171 ;;		_rotate
  2172 ;;		_UpdateDisplay
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           psect	text1131
  2178                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2179                           	line	203
  2180                           	global	__size_of_scan360
  2181  0075                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2182                           	
  2183  0B35                     _scan360:	
  2184 ;; hardware stack exceeded
  2185                           	opt	stack 0
  2186                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2187                           	line	204
  2188                           	
  2189  0B35                     l12218:	
  2190                           ;Main.c: 204: int lowestVal = 0, lowestSteps = 0;
  2191  0B35  1683               	bsf	status, 5	;RP0=1, select bank1
  2192  0B36  1303               	bcf	status, 6	;RP1=0, select bank1
  2193  0B37  01DC               	clrf	(scan360@lowestVal)^080h
  2194  0B38  01DD               	clrf	(scan360@lowestVal+1)^080h
  2195  0B39  01DE               	clrf	(scan360@lowestSteps)^080h
  2196  0B3A  01DF               	clrf	(scan360@lowestSteps+1)^080h
  2197                           	line	205
  2198                           	
  2199  0B3B                     l12220:	
  2200                           ;Main.c: 205: SCAN_FLAG = 1;
  2201  0B3B  1283               	bcf	status, 5	;RP0=0, select bank0
  2202  0B3C  1303               	bcf	status, 6	;RP1=0, select bank0
  2203  0B3D  01DF               	clrf	(_SCAN_FLAG)
  2204  0B3E  1403               	bsf	status,0
  2205  0B3F  0DDF               	rlf	(_SCAN_FLAG),f
  2206                           	line	206
  2207                           	
  2208  0B40                     l12222:	
  2209                           ;Main.c: 206: for (int steps = 0; steps < 400; steps++)
  2210  0B40  1683               	bsf	status, 5	;RP0=1, select bank1
  2211  0B41  1303               	bcf	status, 6	;RP1=0, select bank1
  2212  0B42  01E0               	clrf	(scan360@steps)^080h
  2213  0B43  01E1               	clrf	(scan360@steps+1)^080h
  2214                           	
  2215  0B44                     l12224:	
  2216  0B44  0861               	movf	(scan360@steps+1)^080h,w
  2217  0B45  3A80               	xorlw	80h
  2218  0B46  00FF               	movwf	btemp+1
  2219  0B47  3081               	movlw	(high(0190h))^80h
  2220  0B48  027F               	subwf	btemp+1,w
  2221  0B49  1D03               	skipz
  2222  0B4A  2B4D               	goto	u6005
  2223  0B4B  3090               	movlw	low(0190h)
  2224  0B4C  0260               	subwf	(scan360@steps)^080h,w
  2225  0B4D                     u6005:
  2226                           
  2227  0B4D  1C03               	skipc
  2228  0B4E  2B50               	goto	u6001
  2229  0B4F  2B51               	goto	u6000
  2230  0B50                     u6001:
  2231  0B50  2B53               	goto	l12228
  2232  0B51                     u6000:
  2233  0B51  2B9D               	goto	l2228
  2234                           	
  2235  0B52                     l12226:	
  2236  0B52  2B9D               	goto	l2228
  2237                           	line	207
  2238                           	
  2239  0B53                     l2227:	
  2240                           	line	208
  2241                           	
  2242  0B53                     l12228:	
  2243                           ;Main.c: 207: {
  2244                           ;Main.c: 208: readAvgDistance();
  2245  0B53  120A  158A  21BB   	fcall	_readAvgDistance
              120A  158A         
  2246                           	line	209
  2247                           	
  2248  0B58                     l12230:	
  2249                           ;Main.c: 209: if (adcVal > lowestVal)
  2250  0B58  1683               	bsf	status, 5	;RP0=1, select bank1
  2251  0B59  1303               	bcf	status, 6	;RP1=0, select bank1
  2252  0B5A  0869               	movf	(_adcVal+1)^080h,w	;volatile
  2253  0B5B  025D               	subwf	(scan360@lowestVal+1)^080h,w
  2254  0B5C  1D03               	skipz
  2255  0B5D  2B60               	goto	u6015
  2256  0B5E  0868               	movf	(_adcVal)^080h,w	;volatile
  2257  0B5F  025C               	subwf	(scan360@lowestVal)^080h,w
  2258  0B60                     u6015:
  2259  0B60  1803               	skipnc
  2260  0B61  2B63               	goto	u6011
  2261  0B62  2B64               	goto	u6010
  2262  0B63                     u6011:
  2263  0B63  2B71               	goto	l12234
  2264  0B64                     u6010:
  2265                           	line	211
  2266                           	
  2267  0B64                     l12232:	
  2268                           ;Main.c: 210: {
  2269                           ;Main.c: 211: lowestVal = adcVal;
  2270  0B64  0869               	movf	(_adcVal+1)^080h,w	;volatile
  2271  0B65  01DD               	clrf	(scan360@lowestVal+1)^080h	;volatile
  2272  0B66  07DD               	addwf	(scan360@lowestVal+1)^080h	;volatile
  2273  0B67  0868               	movf	(_adcVal)^080h,w	;volatile
  2274  0B68  01DC               	clrf	(scan360@lowestVal)^080h	;volatile
  2275  0B69  07DC               	addwf	(scan360@lowestVal)^080h	;volatile
  2276                           
  2277                           	line	212
  2278                           ;Main.c: 212: lowestSteps = steps;
  2279  0B6A  0861               	movf	(scan360@steps+1)^080h,w
  2280  0B6B  01DF               	clrf	(scan360@lowestSteps+1)^080h
  2281  0B6C  07DF               	addwf	(scan360@lowestSteps+1)^080h
  2282  0B6D  0860               	movf	(scan360@steps)^080h,w
  2283  0B6E  01DE               	clrf	(scan360@lowestSteps)^080h
  2284  0B6F  07DE               	addwf	(scan360@lowestSteps)^080h
  2285                           
  2286  0B70  2B71               	goto	l12234
  2287                           	line	214
  2288                           	
  2289  0B71                     l2229:	
  2290                           	line	215
  2291                           	
  2292  0B71                     l12234:	
  2293                           ;Main.c: 214: }
  2294                           ;Main.c: 215: rotate(1, 1);
  2295  0B71  01A3               	clrf	(?_rotate)^080h
  2296  0B72  1403               	bsf	status,0
  2297  0B73  0DA3               	rlf	(?_rotate)^080h,f
  2298  0B74  3001               	movlw	(01h)
  2299  0B75  120A  158A  2210   	fcall	_rotate
              120A  158A         
  2300                           	line	216
  2301                           	
  2302  0B7A                     l12236:	
  2303                           ;Main.c: 216: UpdateDisplay(serialInput);
  2304  0B7A  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  0B7B  1303               	bcf	status, 6	;RP1=0, select bank0
  2306  0B7C  0867               	movf	(_serialInput),w	;volatile
  2307  0B7D  120A  118A  2594   	fcall	_UpdateDisplay
              120A  158A         
  2308                           	line	217
  2309                           	
  2310  0B82                     l12238:	
  2311                           ;Main.c: 217: test = lowestSteps;
  2312  0B82  1683               	bsf	status, 5	;RP0=1, select bank1
  2313  0B83  1303               	bcf	status, 6	;RP1=0, select bank1
  2314  0B84  085F               	movf	(scan360@lowestSteps+1)^080h,w
  2315  0B85  01ED               	clrf	(_test+1)^080h
  2316  0B86  07ED               	addwf	(_test+1)^080h
  2317  0B87  085E               	movf	(scan360@lowestSteps)^080h,w
  2318  0B88  01EC               	clrf	(_test)^080h
  2319  0B89  07EC               	addwf	(_test)^080h
  2320                           
  2321                           	line	206
  2322                           	
  2323  0B8A                     l12240:	
  2324  0B8A  3001               	movlw	low(01h)
  2325  0B8B  07E0               	addwf	(scan360@steps)^080h,f
  2326  0B8C  1803               	skipnc
  2327  0B8D  0AE1               	incf	(scan360@steps+1)^080h,f
  2328  0B8E  3000               	movlw	high(01h)
  2329  0B8F  07E1               	addwf	(scan360@steps+1)^080h,f
  2330                           	
  2331  0B90                     l12242:	
  2332  0B90  0861               	movf	(scan360@steps+1)^080h,w
  2333  0B91  3A80               	xorlw	80h
  2334  0B92  00FF               	movwf	btemp+1
  2335  0B93  3081               	movlw	(high(0190h))^80h
  2336  0B94  027F               	subwf	btemp+1,w
  2337  0B95  1D03               	skipz
  2338  0B96  2B99               	goto	u6025
  2339  0B97  3090               	movlw	low(0190h)
  2340  0B98  0260               	subwf	(scan360@steps)^080h,w
  2341  0B99                     u6025:
  2342                           
  2343  0B99  1C03               	skipc
  2344  0B9A  2B9C               	goto	u6021
  2345  0B9B  2B9D               	goto	u6020
  2346  0B9C                     u6021:
  2347  0B9C  2B53               	goto	l12228
  2348  0B9D                     u6020:
  2349                           	
  2350  0B9D                     l2228:	
  2351                           	line	219
  2352                           ;Main.c: 218: }
  2353                           ;Main.c: 219: SCAN_FLAG = 0;
  2354  0B9D  1283               	bcf	status, 5	;RP0=0, select bank0
  2355  0B9E  1303               	bcf	status, 6	;RP1=0, select bank0
  2356  0B9F  01DF               	clrf	(_SCAN_FLAG)
  2357                           	line	220
  2358                           	
  2359  0BA0                     l12244:	
  2360                           ;Main.c: 220: return lowestSteps;
  2361  0BA0  1683               	bsf	status, 5	;RP0=1, select bank1
  2362  0BA1  1303               	bcf	status, 6	;RP1=0, select bank1
  2363  0BA2  085F               	movf	(scan360@lowestSteps+1)^080h,w
  2364  0BA3  01DB               	clrf	(?_scan360+1)^080h
  2365  0BA4  07DB               	addwf	(?_scan360+1)^080h
  2366  0BA5  085E               	movf	(scan360@lowestSteps)^080h,w
  2367  0BA6  01DA               	clrf	(?_scan360)^080h
  2368  0BA7  07DA               	addwf	(?_scan360)^080h
  2369                           
  2370  0BA8  2BA9               	goto	l2230
  2371                           	
  2372  0BA9                     l12246:	
  2373                           	line	221
  2374                           	
  2375  0BA9                     l2230:	
  2376  0BA9  0008               	return
  2377                           	opt stack 0
  2378                           GLOBAL	__end_of_scan360
  2379  0BAA                     	__end_of_scan360:
  2380 ;; =============== function _scan360 ends ============
  2381                           
  2382                           	signat	_scan360,90
  2383                           	global	_init
  2384                           psect	text1132,local,class=CODE,delta=2
  2385                           global __ptext1132
  2386  153E                     __ptext1132:
  2387                           
  2388 ;; *************** function _init *****************
  2389 ;; Defined at:
  2390 ;;		line 132 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;		None               void
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          0       0       1       0       0
  2407 ;;      Totals:         0       0       1       0       0
  2408 ;;Total ram usage:        1 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    7
  2411 ;; This function calls:
  2412 ;;		_init_adc
  2413 ;;		_lcd_init
  2414 ;;		_ser_init
  2415 ;;		_robo_init
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           psect	text1132
  2421                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2422                           	line	132
  2423                           	global	__size_of_init
  2424  0029                     	__size_of_init	equ	__end_of_init-_init
  2425                           	
  2426  153E                     _init:	
  2427                           	opt	stack 0
  2428                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2429                           	line	133
  2430                           	
  2431  153E                     l12200:	
  2432                           ;Main.c: 133: init_adc();
  2433  153E  160A  118A  2430   	fcall	_init_adc
              160A  118A         
  2434                           	line	134
  2435                           ;Main.c: 134: lcd_init();
  2436  1543  160A  118A  25BB   	fcall	_lcd_init
              160A  118A         
  2437                           	line	135
  2438                           ;Main.c: 135: ser_init();
  2439  1548  160A  118A  2516   	fcall	_ser_init
              160A  118A         
  2440                           	line	136
  2441                           	
  2442  154D                     l12202:	
  2443                           ;Main.c: 136: robo_init();
  2444  154D  160A  118A  245A   	fcall	_robo_init
              160A  118A         
  2445                           	line	138
  2446                           	
  2447  1552                     l12204:	
  2448                           ;Main.c: 138: TRISB = 0b11111100;
  2449  1552  30FC               	movlw	(0FCh)
  2450  1553  1683               	bsf	status, 5	;RP0=1, select bank1
  2451  1554  1303               	bcf	status, 6	;RP1=0, select bank1
  2452  1555  0086               	movwf	(134)^080h	;volatile
  2453                           	line	140
  2454                           	
  2455  1556                     l12206:	
  2456                           ;Main.c: 140: TRISC &= 0b10010000;
  2457  1556  3090               	movlw	(090h)
  2458  1557  00A3               	movwf	(??_init+0)^080h+0
  2459  1558  0823               	movf	(??_init+0)^080h+0,w
  2460  1559  0587               	andwf	(135)^080h,f	;volatile
  2461                           	line	142
  2462                           	
  2463  155A                     l12208:	
  2464                           ;Main.c: 142: SSPSTAT = 0b01000000;
  2465  155A  3040               	movlw	(040h)
  2466  155B  0094               	movwf	(148)^080h	;volatile
  2467                           	line	143
  2468                           	
  2469  155C                     l12210:	
  2470                           ;Main.c: 143: SSPCON = 0b10100001;
  2471  155C  30A1               	movlw	(0A1h)
  2472  155D  1283               	bcf	status, 5	;RP0=0, select bank0
  2473  155E  1303               	bcf	status, 6	;RP1=0, select bank0
  2474  155F  0094               	movwf	(20)	;volatile
  2475                           	line	145
  2476                           	
  2477  1560                     l12212:	
  2478                           ;Main.c: 145: OPTION_REG = 0b00000100;
  2479  1560  3004               	movlw	(04h)
  2480  1561  1683               	bsf	status, 5	;RP0=1, select bank1
  2481  1562  1303               	bcf	status, 6	;RP1=0, select bank1
  2482  1563  0081               	movwf	(129)^080h	;volatile
  2483                           	line	148
  2484                           	
  2485  1564                     l12214:	
  2486                           ;Main.c: 148: TMR0IE = 1;
  2487  1564  168B               	bsf	(93/8),(93)&7
  2488                           	line	151
  2489                           	
  2490  1565                     l12216:	
  2491                           ;Main.c: 151: (GIE = 1);
  2492  1565  178B               	bsf	(95/8),(95)&7
  2493                           	line	152
  2494                           	
  2495  1566                     l2210:	
  2496  1566  0008               	return
  2497                           	opt stack 0
  2498                           GLOBAL	__end_of_init
  2499  1567                     	__end_of_init:
  2500 ;; =============== function _init ends ============
  2501                           
  2502                           	signat	_init,88
  2503                           	global	_UpdateDisplay
  2504                           psect	text1133,local,class=CODE,delta=2
  2505                           global __ptext1133
  2506  0594                     __ptext1133:
  2507                           
  2508 ;; *************** function _UpdateDisplay *****************
  2509 ;; Defined at:
  2510 ;;		line 215 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  serialInput     1    wreg     unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  serialInput     1    0[COMMON] unsigned char 
  2515 ;;  adcOutput      16   42[BANK1 ] unsigned char [16]
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       0      16       0       0
  2527 ;;      Temps:          0       0       5       0       0
  2528 ;;      Totals:         0       0      21       0       0
  2529 ;;Total ram usage:       21 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    7
  2532 ;; This function calls:
  2533 ;;		_lcd_write_control
  2534 ;;		_sprintf
  2535 ;;		_lcd_set_cursor
  2536 ;;		_lcd_write_string
  2537 ;;		___awmod
  2538 ;; This function is called by:
  2539 ;;		_scan360
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           psect	text1133
  2543                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  2544                           	line	215
  2545                           	global	__size_of_UpdateDisplay
  2546  012F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  2547                           	
  2548  0594                     _UpdateDisplay:	
  2549 ;; hardware stack exceeded
  2550                           	opt	stack 0
  2551                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2552                           	line	216
  2553                           	
  2554  0594                     l12160:	
  2555                           ;HMI.c: 216: char adcOutput[16] = "";
  2556  0594  30CA               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2557  0595  0084               	movwf	fsr0
  2558  0596  3090               	movlw	low(UpdateDisplay@F1223)
  2559  0597  1683               	bsf	status, 5	;RP0=1, select bank1
  2560  0598  1303               	bcf	status, 6	;RP1=0, select bank1
  2561  0599  00C5               	movwf	(??_UpdateDisplay+0)^080h+0
  2562  059A  0804               	movf	fsr0,w
  2563  059B  00C6               	movwf	((??_UpdateDisplay+0)^080h+0+1)
  2564  059C  3010               	movlw	16
  2565  059D  00C7               	movwf	((??_UpdateDisplay+0)^080h+0+2)
  2566  059E                     u5980:
  2567  059E  0845               	movf	(??_UpdateDisplay+0)^080h+0,w
  2568  059F  0084               	movwf	fsr0
  2569  05A0  1783               	bsf	status, 7	;select IRP bank3
  2570                           	
  2571  05A1  0800               	movf	indf,w
  2572  05A2  00C8               	movwf	((??_UpdateDisplay+0)^080h+0+3)
  2573  05A3  0AC5               	incf	(??_UpdateDisplay+0)^080h+0,f
  2574  05A4  0846               	movf	((??_UpdateDisplay+0)^080h+0+1),w
  2575  05A5  0084               	movwf	fsr0
  2576  05A6  1383               	bcf	status, 7	;select IRP bank1
  2577                           	
  2578  05A7  0848               	movf	((??_UpdateDisplay+0)^080h+0+3),w
  2579  05A8  0080               	movwf	indf
  2580  05A9  0AC6               	incf	((??_UpdateDisplay+0)^080h+0+1),f
  2581  05AA  0BC7               	decfsz	((??_UpdateDisplay+0)^080h+0+2),f
  2582  05AB  2D9E               	goto	u5980
  2583                           	line	217
  2584                           ;HMI.c: 217: switch (currentMenu)
  2585  05AC  2EB8               	goto	l12198
  2586                           	line	220
  2587                           ;HMI.c: 218: {
  2588                           ;HMI.c: 220: case 0:
  2589                           	
  2590  05AD                     l5240:	
  2591                           	line	221
  2592                           	
  2593  05AD                     l12162:	
  2594                           ;HMI.c: 221: lcd_write_control(0b00000001);
  2595  05AD  3001               	movlw	(01h)
  2596  05AE  160A  118A  248E   	fcall	_lcd_write_control
              120A  118A         
  2597                           	line	222
  2598                           	
  2599  05B3                     l12164:	
  2600                           ;HMI.c: 222: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, test);
  2601  05B3  300B               	movlw	((STR_11-__stringbase))&0ffh
  2602  05B4  1683               	bsf	status, 5	;RP0=1, select bank1
  2603  05B5  1303               	bcf	status, 6	;RP1=0, select bank1
  2604  05B6  00C5               	movwf	(??_UpdateDisplay+0)^080h+0
  2605  05B7  0845               	movf	(??_UpdateDisplay+0)^080h+0,w
  2606  05B8  00B4               	movwf	(?_sprintf)^080h
  2607  05B9  0869               	movf	(_adcVal+1)^080h,w	;volatile
  2608  05BA  01B6               	clrf	1+(?_sprintf)^080h+01h
  2609  05BB  07B6               	addwf	1+(?_sprintf)^080h+01h
  2610  05BC  0868               	movf	(_adcVal)^080h,w	;volatile
  2611  05BD  01B5               	clrf	0+(?_sprintf)^080h+01h
  2612  05BE  07B5               	addwf	0+(?_sprintf)^080h+01h
  2613                           
  2614  05BF  086D               	movf	(_test+1)^080h,w	;volatile
  2615  05C0  01B8               	clrf	1+(?_sprintf)^080h+03h
  2616  05C1  07B8               	addwf	1+(?_sprintf)^080h+03h
  2617  05C2  086C               	movf	(_test)^080h,w	;volatile
  2618  05C3  01B7               	clrf	0+(?_sprintf)^080h+03h
  2619  05C4  07B7               	addwf	0+(?_sprintf)^080h+03h
  2620                           
  2621  05C5  30CA               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2622  05C6  120A  118A  26C3   	fcall	_sprintf
              120A  118A         
  2623                           	line	225
  2624                           	
  2625  05CB                     l12166:	
  2626                           ;HMI.c: 225: lcd_set_cursor(0x00);
  2627  05CB  3000               	movlw	(0)
  2628  05CC  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2629                           	line	226
  2630                           ;HMI.c: 226: lcd_write_string(adcOutput);
  2631  05D1  30CA               	movlw	(UpdateDisplay@adcOutput&0ffh)
  2632  05D2  1683               	bsf	status, 5	;RP0=1, select bank1
  2633  05D3  1303               	bcf	status, 6	;RP1=0, select bank1
  2634  05D4  00A7               	movwf	(?_lcd_write_string)^080h
  2635  05D5  3000               	movlw	(0x1/2)
  2636  05D6  00A8               	movwf	(?_lcd_write_string+1)^080h
  2637  05D7  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2638                           	line	231
  2639                           	
  2640  05DC                     l12168:	
  2641                           ;HMI.c: 231: lcd_set_cursor(0x40);
  2642  05DC  3040               	movlw	(040h)
  2643  05DD  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2644                           	line	232
  2645                           	
  2646  05E2                     l12170:	
  2647                           ;HMI.c: 232: if (pos > 0)
  2648  05E2  1683               	bsf	status, 5	;RP0=1, select bank1
  2649  05E3  1303               	bcf	status, 6	;RP1=0, select bank1
  2650  05E4  086B               	movf	(_pos+1)^080h,w
  2651  05E5  3A80               	xorlw	80h
  2652  05E6  00FF               	movwf	btemp+1
  2653  05E7  3080               	movlw	(high(01h))^80h
  2654  05E8  027F               	subwf	btemp+1,w
  2655  05E9  1D03               	skipz
  2656  05EA  2DED               	goto	u5995
  2657  05EB  3001               	movlw	low(01h)
  2658  05EC  026A               	subwf	(_pos)^080h,w
  2659  05ED                     u5995:
  2660                           
  2661  05ED  1C03               	skipc
  2662  05EE  2DF0               	goto	u5991
  2663  05EF  2DF1               	goto	u5990
  2664  05F0                     u5991:
  2665  05F0  2E02               	goto	l12174
  2666  05F1                     u5990:
  2667                           	line	233
  2668                           	
  2669  05F1                     l12172:	
  2670                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  2671  05F1  1683               	bsf	status, 5	;RP0=1, select bank1
  2672  05F2  1303               	bcf	status, 6	;RP1=0, select bank1
  2673  05F3  086A               	movf	(_pos)^080h,w
  2674  05F4  3EFF               	addlw	0FFh
  2675  05F5  3EC7               	addlw	_shortMenuStrings&0ffh
  2676  05F6  0084               	movwf	fsr0
  2677  05F7  1783               	bsf	status, 7	;select IRP bank3
  2678  05F8  0800               	movf	indf,w
  2679  05F9  00A7               	movwf	(?_lcd_write_string)^080h
  2680  05FA  3080               	movlw	80h
  2681  05FB  00A8               	movwf	(?_lcd_write_string+1)^080h
  2682  05FC  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2683  0601  2E13               	goto	l12176
  2684                           	line	234
  2685                           	
  2686  0602                     l5241:	
  2687                           	line	235
  2688                           	
  2689  0602                     l12174:	
  2690                           ;HMI.c: 234: else
  2691                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  2692  0602  1683               	bsf	status, 5	;RP0=1, select bank1
  2693  0603  1303               	bcf	status, 6	;RP1=0, select bank1
  2694  0604  086A               	movf	(_pos)^080h,w
  2695  0605  3E04               	addlw	04h
  2696  0606  3EC7               	addlw	_shortMenuStrings&0ffh
  2697  0607  0084               	movwf	fsr0
  2698  0608  1783               	bsf	status, 7	;select IRP bank3
  2699  0609  0800               	movf	indf,w
  2700  060A  00A7               	movwf	(?_lcd_write_string)^080h
  2701  060B  3080               	movlw	80h
  2702  060C  00A8               	movwf	(?_lcd_write_string+1)^080h
  2703  060D  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2704  0612  2E13               	goto	l12176
  2705                           	
  2706  0613                     l5242:	
  2707                           	line	236
  2708                           	
  2709  0613                     l12176:	
  2710                           ;HMI.c: 236: lcd_set_cursor(0x44);
  2711  0613  3044               	movlw	(044h)
  2712  0614  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2713                           	line	237
  2714                           	
  2715  0619                     l12178:	
  2716                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  2717  0619  1683               	bsf	status, 5	;RP0=1, select bank1
  2718  061A  1303               	bcf	status, 6	;RP1=0, select bank1
  2719  061B  086A               	movf	(_pos)^080h,w
  2720  061C  3EC2               	addlw	_menuStrings&0ffh
  2721  061D  0084               	movwf	fsr0
  2722  061E  1783               	bsf	status, 7	;select IRP bank3
  2723  061F  0800               	movf	indf,w
  2724  0620  00A7               	movwf	(?_lcd_write_string)^080h
  2725  0621  3080               	movlw	80h
  2726  0622  00A8               	movwf	(?_lcd_write_string+1)^080h
  2727  0623  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2728                           	line	238
  2729                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  2730  0628  304D               	movlw	(04Dh)
  2731  0629  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2732                           	line	239
  2733                           	
  2734  062E                     l12180:	
  2735                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  2736  062E  3005               	movlw	low(05h)
  2737  062F  1683               	bsf	status, 5	;RP0=1, select bank1
  2738  0630  1303               	bcf	status, 6	;RP1=0, select bank1
  2739  0631  00A0               	movwf	(?___awmod)^080h
  2740  0632  3000               	movlw	high(05h)
  2741  0633  00A1               	movwf	((?___awmod)^080h)+1
  2742  0634  086A               	movf	(_pos)^080h,w
  2743  0635  3E01               	addlw	low(01h)
  2744  0636  00A2               	movwf	0+(?___awmod)^080h+02h
  2745  0637  086B               	movf	(_pos+1)^080h,w
  2746  0638  1803               	skipnc
  2747  0639  3E01               	addlw	1
  2748  063A  3E00               	addlw	high(01h)
  2749  063B  00A3               	movwf	1+0+(?___awmod)^080h+02h
  2750  063C  120A  158A  22CD   	fcall	___awmod
              120A  118A         
  2751  0641  1683               	bsf	status, 5	;RP0=1, select bank1
  2752  0642  1303               	bcf	status, 6	;RP1=0, select bank1
  2753  0643  0820               	movf	(0+(?___awmod))^080h,w
  2754  0644  3EC7               	addlw	_shortMenuStrings&0ffh
  2755  0645  0084               	movwf	fsr0
  2756  0646  1783               	bsf	status, 7	;select IRP bank3
  2757  0647  0800               	movf	indf,w
  2758  0648  00A7               	movwf	(?_lcd_write_string)^080h
  2759  0649  3080               	movlw	80h
  2760  064A  00A8               	movwf	(?_lcd_write_string+1)^080h
  2761  064B  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2762                           	line	240
  2763                           ;HMI.c: 240: break;
  2764  0650  2EC2               	goto	l5246
  2765                           	line	241
  2766                           ;HMI.c: 241: case 1:
  2767                           	
  2768  0651                     l5244:	
  2769                           	line	242
  2770                           	
  2771  0651                     l12182:	
  2772                           ;HMI.c: 242: lcd_write_control(0b00000001);
  2773  0651  3001               	movlw	(01h)
  2774  0652  160A  118A  248E   	fcall	_lcd_write_control
              120A  118A         
  2775                           	line	244
  2776                           	
  2777  0657                     l12184:	
  2778                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  2779  0657  300B               	movlw	((STR_12-__stringbase))&0ffh
  2780  0658  1683               	bsf	status, 5	;RP0=1, select bank1
  2781  0659  1303               	bcf	status, 6	;RP1=0, select bank1
  2782  065A  00C5               	movwf	(??_UpdateDisplay+0)^080h+0
  2783  065B  0845               	movf	(??_UpdateDisplay+0)^080h+0,w
  2784  065C  00B4               	movwf	(?_sprintf)^080h
  2785  065D  086E               	movf	(_highByte)^080h,w
  2786  065E  00C6               	movwf	(??_UpdateDisplay+1)^080h+0
  2787  065F  01C7               	clrf	(??_UpdateDisplay+1)^080h+0+1
  2788  0660  0846               	movf	0+(??_UpdateDisplay+1)^080h+0,w
  2789  0661  00B5               	movwf	0+(?_sprintf)^080h+01h
  2790  0662  0847               	movf	1+(??_UpdateDisplay+1)^080h+0,w
  2791  0663  00B6               	movwf	1+(?_sprintf)^080h+01h
  2792  0664  086F               	movf	(_lowByte)^080h,w
  2793  0665  00C8               	movwf	(??_UpdateDisplay+3)^080h+0
  2794  0666  01C9               	clrf	(??_UpdateDisplay+3)^080h+0+1
  2795  0667  0848               	movf	0+(??_UpdateDisplay+3)^080h+0,w
  2796  0668  00B7               	movwf	0+(?_sprintf)^080h+03h
  2797  0669  0849               	movf	1+(??_UpdateDisplay+3)^080h+0,w
  2798  066A  00B8               	movwf	1+(?_sprintf)^080h+03h
  2799  066B  30CA               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2800  066C  120A  118A  26C3   	fcall	_sprintf
              120A  118A         
  2801                           	line	246
  2802                           	
  2803  0671                     l12186:	
  2804                           ;HMI.c: 246: lcd_set_cursor(0x00);
  2805  0671  3000               	movlw	(0)
  2806  0672  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2807                           	line	247
  2808                           ;HMI.c: 247: lcd_write_string(adcOutput);
  2809  0677  30CA               	movlw	(UpdateDisplay@adcOutput&0ffh)
  2810  0678  1683               	bsf	status, 5	;RP0=1, select bank1
  2811  0679  1303               	bcf	status, 6	;RP1=0, select bank1
  2812  067A  00A7               	movwf	(?_lcd_write_string)^080h
  2813  067B  3000               	movlw	(0x1/2)
  2814  067C  00A8               	movwf	(?_lcd_write_string+1)^080h
  2815  067D  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2816                           	line	252
  2817                           	
  2818  0682                     l12188:	
  2819                           ;HMI.c: 252: lcd_set_cursor(0x40);
  2820  0682  3040               	movlw	(040h)
  2821  0683  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2822                           	line	254
  2823                           	
  2824  0688                     l12190:	
  2825                           ;HMI.c: 254: lcd_write_string("<<<");
  2826  0688  3052               	movlw	low((STR_13-__stringbase))
  2827  0689  1683               	bsf	status, 5	;RP0=1, select bank1
  2828  068A  1303               	bcf	status, 6	;RP1=0, select bank1
  2829  068B  00A7               	movwf	(?_lcd_write_string)^080h
  2830  068C  3080               	movlw	80h
  2831  068D  00A8               	movwf	(?_lcd_write_string+1)^080h
  2832  068E  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2833                           	line	257
  2834                           ;HMI.c: 257: lcd_set_cursor(0x44);
  2835  0693  3044               	movlw	(044h)
  2836  0694  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2837                           	line	258
  2838                           	
  2839  0699                     l12192:	
  2840                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  2841  0699  3046               	movlw	low((STR_14-__stringbase))
  2842  069A  1683               	bsf	status, 5	;RP0=1, select bank1
  2843  069B  1303               	bcf	status, 6	;RP1=0, select bank1
  2844  069C  00A7               	movwf	(?_lcd_write_string)^080h
  2845  069D  3080               	movlw	80h
  2846  069E  00A8               	movwf	(?_lcd_write_string+1)^080h
  2847  069F  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2848                           	line	259
  2849                           	
  2850  06A4                     l12194:	
  2851                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  2852  06A4  304D               	movlw	(04Dh)
  2853  06A5  160A  118A  23D7   	fcall	_lcd_set_cursor
              120A  118A         
  2854                           	line	260
  2855                           ;HMI.c: 260: lcd_write_string(">>>");
  2856  06AA  3056               	movlw	low((STR_15-__stringbase))
  2857  06AB  1683               	bsf	status, 5	;RP0=1, select bank1
  2858  06AC  1303               	bcf	status, 6	;RP1=0, select bank1
  2859  06AD  00A7               	movwf	(?_lcd_write_string)^080h
  2860  06AE  3080               	movlw	80h
  2861  06AF  00A8               	movwf	(?_lcd_write_string+1)^080h
  2862  06B0  120A  118A  27C3   	fcall	_lcd_write_string
              120A  118A         
  2863                           	line	261
  2864                           ;HMI.c: 261: break;
  2865  06B5  2EC2               	goto	l5246
  2866                           	line	263
  2867                           ;HMI.c: 263: default:
  2868                           	
  2869  06B6                     l5245:	
  2870                           	line	265
  2871                           ;HMI.c: 265: break;
  2872  06B6  2EC2               	goto	l5246
  2873                           	line	268
  2874                           	
  2875  06B7                     l12196:	
  2876                           ;HMI.c: 268: }
  2877  06B7  2EC2               	goto	l5246
  2878                           	line	217
  2879                           	
  2880  06B8                     l5239:	
  2881                           	
  2882  06B8                     l12198:	
  2883  06B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2884  06B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2885  06BA  0862               	movf	(_currentMenu),w
  2886                           	; Switch size 1, requested type "space"
  2887                           ; Number of cases is 2, Range of values is 0 to 1
  2888                           ; switch strategies available:
  2889                           ; Name         Instructions Cycles
  2890                           ; simple_byte            7     4 (average)
  2891                           ; direct_byte           14     8 (fixed)
  2892                           ; jumptable            260     6 (fixed)
  2893                           ; rangetable             6     6 (fixed)
  2894                           ; spacedrange           10     9 (fixed)
  2895                           ; locatedrange           2     3 (fixed)
  2896                           ;	Chosen strategy is simple_byte
  2897                           
  2898                           	opt asmopt_off
  2899  06BB  3A00               	xorlw	0^0	; case 0
  2900  06BC  1903               	skipnz
  2901  06BD  2DAD               	goto	l12162
  2902  06BE  3A01               	xorlw	1^0	; case 1
  2903  06BF  1903               	skipnz
  2904  06C0  2E51               	goto	l12182
  2905  06C1  2EC2               	goto	l5246
  2906                           	opt asmopt_on
  2907                           
  2908                           	line	268
  2909                           	
  2910  06C2                     l5243:	
  2911                           	line	269
  2912                           	
  2913  06C2                     l5246:	
  2914  06C2  0008               	return
  2915                           	opt stack 0
  2916                           GLOBAL	__end_of_UpdateDisplay
  2917  06C3                     	__end_of_UpdateDisplay:
  2918 ;; =============== function _UpdateDisplay ends ============
  2919                           
  2920                           	signat	_UpdateDisplay,4216
  2921                           	global	_readAvgDistance
  2922                           psect	text1134,local,class=CODE,delta=2
  2923                           global __ptext1134
  2924  09BB                     __ptext1134:
  2925                           
  2926 ;; *************** function _readAvgDistance *****************
  2927 ;; Defined at:
  2928 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  i               2   18[BANK1 ] int 
  2933 ;;  fullval         2   16[BANK1 ] unsigned int 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       0       0       0       0
  2944 ;;      Locals:         0       0       4       0       0
  2945 ;;      Temps:          0       0       0       0       0
  2946 ;;      Totals:         0       0       4       0       0
  2947 ;;Total ram usage:        4 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    8
  2950 ;; This function calls:
  2951 ;;		_readDistance
  2952 ;;		___lwdiv
  2953 ;;		_ADCconvert
  2954 ;; This function is called by:
  2955 ;;		_scan360
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           psect	text1134
  2959                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2960                           	line	10
  2961                           	global	__size_of_readAvgDistance
  2962  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2963                           	
  2964  09BB                     _readAvgDistance:	
  2965 ;; hardware stack exceeded
  2966                           	opt	stack 0
  2967                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2968                           	line	11
  2969                           	
  2970  09BB                     l12146:	
  2971                           ;infrared.c: 11: unsigned int fullval = 0;
  2972  09BB  1683               	bsf	status, 5	;RP0=1, select bank1
  2973  09BC  1303               	bcf	status, 6	;RP1=0, select bank1
  2974  09BD  01B0               	clrf	(readAvgDistance@fullval)^080h
  2975  09BE  01B1               	clrf	(readAvgDistance@fullval+1)^080h
  2976                           	line	14
  2977                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2978  09BF  01B2               	clrf	(readAvgDistance@i)^080h
  2979  09C0  01B3               	clrf	(readAvgDistance@i+1)^080h
  2980                           	
  2981  09C1                     l12148:	
  2982  09C1  0833               	movf	(readAvgDistance@i+1)^080h,w
  2983  09C2  3A80               	xorlw	80h
  2984  09C3  00FF               	movwf	btemp+1
  2985  09C4  3080               	movlw	(high(0Ah))^80h
  2986  09C5  027F               	subwf	btemp+1,w
  2987  09C6  1D03               	skipz
  2988  09C7  29CA               	goto	u5965
  2989  09C8  300A               	movlw	low(0Ah)
  2990  09C9  0232               	subwf	(readAvgDistance@i)^080h,w
  2991  09CA                     u5965:
  2992                           
  2993  09CA  1C03               	skipc
  2994  09CB  29CD               	goto	u5961
  2995  09CC  29CE               	goto	u5960
  2996  09CD                     u5961:
  2997  09CD  29D0               	goto	l12152
  2998  09CE                     u5960:
  2999  09CE  29F1               	goto	l12158
  3000                           	
  3001  09CF                     l12150:	
  3002  09CF  29F1               	goto	l12158
  3003                           	line	15
  3004                           	
  3005  09D0                     l2955:	
  3006                           	line	16
  3007                           	
  3008  09D0                     l12152:	
  3009                           ;infrared.c: 15: {
  3010                           ;infrared.c: 16: fullval += readDistance();
  3011  09D0  160A  118A  2444   	fcall	_readDistance
              120A  158A         
  3012  09D5  1683               	bsf	status, 5	;RP0=1, select bank1
  3013  09D6  1303               	bcf	status, 6	;RP1=0, select bank1
  3014  09D7  0828               	movf	(0+(?_readDistance))^080h,w
  3015  09D8  07B0               	addwf	(readAvgDistance@fullval)^080h,f
  3016  09D9  1803               	skipnc
  3017  09DA  0AB1               	incf	(readAvgDistance@fullval+1)^080h,f
  3018  09DB  0829               	movf	(1+(?_readDistance))^080h,w
  3019  09DC  07B1               	addwf	(readAvgDistance@fullval+1)^080h,f
  3020                           	line	14
  3021                           	
  3022  09DD                     l12154:	
  3023  09DD  3001               	movlw	low(01h)
  3024  09DE  07B2               	addwf	(readAvgDistance@i)^080h,f
  3025  09DF  1803               	skipnc
  3026  09E0  0AB3               	incf	(readAvgDistance@i+1)^080h,f
  3027  09E1  3000               	movlw	high(01h)
  3028  09E2  07B3               	addwf	(readAvgDistance@i+1)^080h,f
  3029                           	
  3030  09E3                     l12156:	
  3031  09E3  0833               	movf	(readAvgDistance@i+1)^080h,w
  3032  09E4  3A80               	xorlw	80h
  3033  09E5  00FF               	movwf	btemp+1
  3034  09E6  3080               	movlw	(high(0Ah))^80h
  3035  09E7  027F               	subwf	btemp+1,w
  3036  09E8  1D03               	skipz
  3037  09E9  29EC               	goto	u5975
  3038  09EA  300A               	movlw	low(0Ah)
  3039  09EB  0232               	subwf	(readAvgDistance@i)^080h,w
  3040  09EC                     u5975:
  3041                           
  3042  09EC  1C03               	skipc
  3043  09ED  29EF               	goto	u5971
  3044  09EE  29F0               	goto	u5970
  3045  09EF                     u5971:
  3046  09EF  29D0               	goto	l12152
  3047  09F0                     u5970:
  3048  09F0  29F1               	goto	l12158
  3049                           	
  3050  09F1                     l2956:	
  3051                           	line	19
  3052                           	
  3053  09F1                     l12158:	
  3054                           ;infrared.c: 18: }
  3055                           ;infrared.c: 19: adcVal = fullval / 10;
  3056  09F1  300A               	movlw	low(0Ah)
  3057  09F2  1683               	bsf	status, 5	;RP0=1, select bank1
  3058  09F3  1303               	bcf	status, 6	;RP1=0, select bank1
  3059  09F4  00A6               	movwf	(?___lwdiv)^080h
  3060  09F5  3000               	movlw	high(0Ah)
  3061  09F6  00A7               	movwf	((?___lwdiv)^080h)+1
  3062  09F7  0831               	movf	(readAvgDistance@fullval+1)^080h,w
  3063  09F8  01A9               	clrf	1+(?___lwdiv)^080h+02h
  3064  09F9  07A9               	addwf	1+(?___lwdiv)^080h+02h
  3065  09FA  0830               	movf	(readAvgDistance@fullval)^080h,w
  3066  09FB  01A8               	clrf	0+(?___lwdiv)^080h+02h
  3067  09FC  07A8               	addwf	0+(?___lwdiv)^080h+02h
  3068                           
  3069  09FD  120A  158A  20C4   	fcall	___lwdiv
              120A  158A         
  3070  0A02  1683               	bsf	status, 5	;RP0=1, select bank1
  3071  0A03  1303               	bcf	status, 6	;RP1=0, select bank1
  3072  0A04  0827               	movf	(1+(?___lwdiv))^080h,w
  3073  0A05  01E9               	clrf	(_adcVal+1)^080h	;volatile
  3074  0A06  07E9               	addwf	(_adcVal+1)^080h	;volatile
  3075  0A07  0826               	movf	(0+(?___lwdiv))^080h,w
  3076  0A08  01E8               	clrf	(_adcVal)^080h	;volatile
  3077  0A09  07E8               	addwf	(_adcVal)^080h	;volatile
  3078                           
  3079                           	line	20
  3080                           ;infrared.c: 20: ADCconvert();
  3081  0A0A  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  3082                           	line	21
  3083                           	
  3084  0A0F                     l2957:	
  3085  0A0F  0008               	return
  3086                           	opt stack 0
  3087                           GLOBAL	__end_of_readAvgDistance
  3088  0A10                     	__end_of_readAvgDistance:
  3089 ;; =============== function _readAvgDistance ends ============
  3090                           
  3091                           	signat	_readAvgDistance,88
  3092                           	global	_readDistance
  3093                           psect	text1135,local,class=CODE,delta=2
  3094                           global __ptext1135
  3095  1444                     __ptext1135:
  3096                           
  3097 ;; *************** function _readDistance *****************
  3098 ;; Defined at:
  3099 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  fullval         2   12[BANK1 ] unsigned int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    8[BANK1 ] unsigned int 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       0       2       0       0
  3114 ;;      Locals:         0       0       2       0       0
  3115 ;;      Temps:          0       0       2       0       0
  3116 ;;      Totals:         0       0       6       0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    7
  3120 ;; This function calls:
  3121 ;;		_adc_read_channel
  3122 ;; This function is called by:
  3123 ;;		_readAvgDistance
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           psect	text1135
  3127                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3128                           	line	24
  3129                           	global	__size_of_readDistance
  3130  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3131                           	
  3132  1444                     _readDistance:	
  3133 ;; hardware stack exceeded
  3134                           	opt	stack 0
  3135                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3136                           	line	27
  3137                           	
  3138  1444                     l12140:	
  3139                           ;infrared.c: 25: unsigned int fullval ;
  3140                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3141  1444  3000               	movlw	(0)
  3142  1445  120A  158A  207B   	fcall	_adc_read_channel
              160A  118A         
  3143  144A  1683               	bsf	status, 5	;RP0=1, select bank1
  3144  144B  1303               	bcf	status, 6	;RP1=0, select bank1
  3145  144C  00AA               	movwf	(??_readDistance+0)^080h+0
  3146  144D  01AB               	clrf	(??_readDistance+0)^080h+0+1
  3147  144E  082A               	movf	0+(??_readDistance+0)^080h+0,w
  3148  144F  00AC               	movwf	(readDistance@fullval)^080h
  3149  1450  082B               	movf	1+(??_readDistance+0)^080h+0,w
  3150  1451  00AD               	movwf	(readDistance@fullval+1)^080h
  3151                           	line	29
  3152                           	
  3153  1452                     l12142:	
  3154                           ;infrared.c: 29: return fullval;
  3155  1452  082D               	movf	(readDistance@fullval+1)^080h,w
  3156  1453  01A9               	clrf	(?_readDistance+1)^080h
  3157  1454  07A9               	addwf	(?_readDistance+1)^080h
  3158  1455  082C               	movf	(readDistance@fullval)^080h,w
  3159  1456  01A8               	clrf	(?_readDistance)^080h
  3160  1457  07A8               	addwf	(?_readDistance)^080h
  3161                           
  3162  1458  2C59               	goto	l2960
  3163                           	
  3164  1459                     l12144:	
  3165                           	line	30
  3166                           	
  3167  1459                     l2960:	
  3168  1459  0008               	return
  3169                           	opt stack 0
  3170                           GLOBAL	__end_of_readDistance
  3171  145A                     	__end_of_readDistance:
  3172 ;; =============== function _readDistance ends ============
  3173                           
  3174                           	signat	_readDistance,90
  3175                           	global	_calibrateIR
  3176                           psect	text1136,local,class=CODE,delta=2
  3177                           global __ptext1136
  3178  0914                     __ptext1136:
  3179                           
  3180 ;; *************** function _calibrateIR *****************
  3181 ;; Defined at:
  3182 ;;		line 157 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;		None               void
  3189 ;; Registers used:
  3190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0
  3199 ;;      Totals:         0       0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    7
  3203 ;; This function calls:
  3204 ;;		_rotate
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           psect	text1136
  3210                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3211                           	line	157
  3212                           	global	__size_of_calibrateIR
  3213  0052                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3214                           	
  3215  0914                     _calibrateIR:	
  3216                           	opt	stack 0
  3217                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3218                           	line	159
  3219                           	
  3220  0914                     l12116:	
  3221                           ;Main.c: 159: currentMenu = 1;
  3222  0914  1283               	bcf	status, 5	;RP0=0, select bank0
  3223  0915  1303               	bcf	status, 6	;RP1=0, select bank0
  3224  0916  01E2               	clrf	(_currentMenu)
  3225  0917  1403               	bsf	status,0
  3226  0918  0DE2               	rlf	(_currentMenu),f
  3227                           	line	160
  3228                           	
  3229  0919                     l12118:	
  3230                           ;Main.c: 160: rotate(8, 0);
  3231  0919  1683               	bsf	status, 5	;RP0=1, select bank1
  3232  091A  1303               	bcf	status, 6	;RP1=0, select bank1
  3233  091B  01A3               	clrf	(?_rotate)^080h
  3234  091C  3008               	movlw	(08h)
  3235  091D  120A  158A  2210   	fcall	_rotate
              120A  158A         
  3236  0922  2950               	goto	l12138
  3237                           	line	161
  3238                           ;Main.c: 161: while (1)
  3239                           	
  3240  0923                     l2213:	
  3241                           	line	163
  3242                           ;Main.c: 162: {
  3243                           ;Main.c: 163: switch (buttonPressed)
  3244  0923  2950               	goto	l12138
  3245                           	line	165
  3246                           ;Main.c: 164: {
  3247                           ;Main.c: 165: case 1:
  3248                           	
  3249  0924                     l2215:	
  3250                           	line	168
  3251                           ;Main.c: 168: buttonPressed = 0;
  3252  0924  01E1               	clrf	(_buttonPressed)	;volatile
  3253                           	line	170
  3254                           ;Main.c: 170: break;
  3255  0925  2950               	goto	l12138
  3256                           	line	171
  3257                           ;Main.c: 171: case 2:
  3258                           	
  3259  0926                     l2217:	
  3260                           	line	174
  3261                           ;Main.c: 174: buttonPressed = 0;
  3262  0926  01E1               	clrf	(_buttonPressed)	;volatile
  3263                           	line	176
  3264                           ;Main.c: 176: break;
  3265  0927  2950               	goto	l12138
  3266                           	line	177
  3267                           ;Main.c: 177: case 3:
  3268                           	
  3269  0928                     l2218:	
  3270                           	line	178
  3271                           	
  3272  0928                     l12120:	
  3273                           ;Main.c: 178: rotate(1, 1);
  3274  0928  1683               	bsf	status, 5	;RP0=1, select bank1
  3275  0929  1303               	bcf	status, 6	;RP1=0, select bank1
  3276  092A  01A3               	clrf	(?_rotate)^080h
  3277  092B  1403               	bsf	status,0
  3278  092C  0DA3               	rlf	(?_rotate)^080h,f
  3279  092D  3001               	movlw	(01h)
  3280  092E  120A  158A  2210   	fcall	_rotate
              120A  158A         
  3281                           	line	180
  3282                           	
  3283  0933                     l12122:	
  3284                           ;Main.c: 180: buttonPressed = 0;
  3285  0933  1283               	bcf	status, 5	;RP0=0, select bank0
  3286  0934  1303               	bcf	status, 6	;RP1=0, select bank0
  3287  0935  01E1               	clrf	(_buttonPressed)	;volatile
  3288                           	line	182
  3289                           ;Main.c: 182: break;
  3290  0936  2950               	goto	l12138
  3291                           	line	183
  3292                           ;Main.c: 183: case 4:
  3293                           	
  3294  0937                     l2219:	
  3295                           	line	184
  3296                           	
  3297  0937                     l12124:	
  3298                           ;Main.c: 184: rotate(1, 0);
  3299  0937  1683               	bsf	status, 5	;RP0=1, select bank1
  3300  0938  1303               	bcf	status, 6	;RP1=0, select bank1
  3301  0939  01A3               	clrf	(?_rotate)^080h
  3302  093A  3001               	movlw	(01h)
  3303  093B  120A  158A  2210   	fcall	_rotate
              120A  158A         
  3304                           	line	186
  3305                           	
  3306  0940                     l12126:	
  3307                           ;Main.c: 186: buttonPressed = 0;
  3308  0940  1283               	bcf	status, 5	;RP0=0, select bank0
  3309  0941  1303               	bcf	status, 6	;RP1=0, select bank0
  3310  0942  01E1               	clrf	(_buttonPressed)	;volatile
  3311                           	line	188
  3312                           ;Main.c: 188: break;
  3313  0943  2950               	goto	l12138
  3314                           	line	189
  3315                           ;Main.c: 189: case 5:
  3316                           	
  3317  0944                     l2220:	
  3318                           	line	190
  3319                           	
  3320  0944                     l12128:	
  3321                           ;Main.c: 190: totalSteps = 0;
  3322  0944  1683               	bsf	status, 5	;RP0=1, select bank3
  3323  0945  1703               	bsf	status, 6	;RP1=1, select bank3
  3324  0946  01C0               	clrf	(_totalSteps)^0180h
  3325  0947  01C1               	clrf	(_totalSteps+1)^0180h
  3326                           	line	192
  3327                           	
  3328  0948                     l12130:	
  3329                           ;Main.c: 192: buttonPressed = 0;
  3330  0948  1283               	bcf	status, 5	;RP0=0, select bank0
  3331  0949  1303               	bcf	status, 6	;RP1=0, select bank0
  3332  094A  01E1               	clrf	(_buttonPressed)	;volatile
  3333  094B  2965               	goto	l2221
  3334                           	line	193
  3335                           	
  3336  094C                     l12132:	
  3337                           ;Main.c: 193: return;
  3338  094C  2965               	goto	l2221
  3339                           	line	194
  3340                           	
  3341  094D                     l12134:	
  3342                           ;Main.c: 194: break;
  3343  094D  2950               	goto	l12138
  3344                           	line	195
  3345                           ;Main.c: 195: default:
  3346                           	
  3347  094E                     l2222:	
  3348                           	line	197
  3349                           ;Main.c: 197: break;
  3350  094E  2950               	goto	l12138
  3351                           	line	198
  3352                           	
  3353  094F                     l12136:	
  3354                           ;Main.c: 198: }
  3355  094F  2950               	goto	l12138
  3356                           	line	163
  3357                           	
  3358  0950                     l2214:	
  3359                           	
  3360  0950                     l12138:	
  3361  0950  1283               	bcf	status, 5	;RP0=0, select bank0
  3362  0951  1303               	bcf	status, 6	;RP1=0, select bank0
  3363  0952  0861               	movf	(_buttonPressed),w	;volatile
  3364                           	; Switch size 1, requested type "space"
  3365                           ; Number of cases is 5, Range of values is 1 to 5
  3366                           ; switch strategies available:
  3367                           ; Name         Instructions Cycles
  3368                           ; simple_byte           16     9 (average)
  3369                           ; direct_byte           26    11 (fixed)
  3370                           ; jumptable            263     9 (fixed)
  3371                           ;	Chosen strategy is simple_byte
  3372                           
  3373                           	opt asmopt_off
  3374  0953  3A01               	xorlw	1^0	; case 1
  3375  0954  1903               	skipnz
  3376  0955  2924               	goto	l2215
  3377  0956  3A03               	xorlw	2^1	; case 2
  3378  0957  1903               	skipnz
  3379  0958  2926               	goto	l2217
  3380  0959  3A01               	xorlw	3^2	; case 3
  3381  095A  1903               	skipnz
  3382  095B  2928               	goto	l12120
  3383  095C  3A07               	xorlw	4^3	; case 4
  3384  095D  1903               	skipnz
  3385  095E  2937               	goto	l12124
  3386  095F  3A01               	xorlw	5^4	; case 5
  3387  0960  1903               	skipnz
  3388  0961  2944               	goto	l12128
  3389  0962  2950               	goto	l12138
  3390                           	opt asmopt_on
  3391                           
  3392                           	line	198
  3393                           	
  3394  0963                     l2216:	
  3395  0963  2950               	goto	l12138
  3396                           	line	199
  3397                           	
  3398  0964                     l2223:	
  3399                           	line	161
  3400  0964  2950               	goto	l12138
  3401                           	
  3402  0965                     l2224:	
  3403                           	line	200
  3404                           	
  3405  0965                     l2221:	
  3406  0965  0008               	return
  3407                           	opt stack 0
  3408                           GLOBAL	__end_of_calibrateIR
  3409  0966                     	__end_of_calibrateIR:
  3410 ;; =============== function _calibrateIR ends ============
  3411                           
  3412                           	signat	_calibrateIR,88
  3413                           	global	_lcd_init
  3414                           psect	text1137,local,class=CODE,delta=2
  3415                           global __ptext1137
  3416  15BB                     __ptext1137:
  3417                           
  3418 ;; *************** function _lcd_init *****************
  3419 ;; Defined at:
  3420 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;		None               void
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0, pclath, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3434 ;;      Params:         0       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0
  3437 ;;      Totals:         0       0       0       0       0
  3438 ;;Total ram usage:        0 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    6
  3441 ;; This function calls:
  3442 ;;		_lcd_write_control
  3443 ;; This function is called by:
  3444 ;;		_init
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           psect	text1137
  3448                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3449                           	line	101
  3450                           	global	__size_of_lcd_init
  3451  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3452                           	
  3453  15BB                     _lcd_init:	
  3454                           	opt	stack 0
  3455                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3456                           	line	105
  3457                           	
  3458  15BB                     l12096:	
  3459                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3460  15BB  3002               	movlw	(02h)
  3461  15BC  1683               	bsf	status, 5	;RP0=1, select bank1
  3462  15BD  1303               	bcf	status, 6	;RP1=0, select bank1
  3463  15BE  009F               	movwf	(159)^080h	;volatile
  3464                           	line	108
  3465                           	
  3466  15BF                     l12098:	
  3467                           ;lcd.c: 108: PORTD = 0;
  3468  15BF  1283               	bcf	status, 5	;RP0=0, select bank0
  3469  15C0  1303               	bcf	status, 6	;RP1=0, select bank0
  3470  15C1  0188               	clrf	(8)	;volatile
  3471                           	line	109
  3472                           	
  3473  15C2                     l12100:	
  3474                           ;lcd.c: 109: PORTE = 0;
  3475  15C2  0189               	clrf	(9)	;volatile
  3476                           	line	111
  3477                           	
  3478  15C3                     l12102:	
  3479                           ;lcd.c: 111: TRISD = 0b00000000;
  3480  15C3  1683               	bsf	status, 5	;RP0=1, select bank1
  3481  15C4  1303               	bcf	status, 6	;RP1=0, select bank1
  3482  15C5  0188               	clrf	(136)^080h	;volatile
  3483                           	line	112
  3484                           	
  3485  15C6                     l12104:	
  3486                           ;lcd.c: 112: TRISE = 0b00000000;
  3487  15C6  0189               	clrf	(137)^080h	;volatile
  3488                           	line	115
  3489                           	
  3490  15C7                     l12106:	
  3491                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3492  15C7  3001               	movlw	(01h)
  3493  15C8  160A  118A  248E   	fcall	_lcd_write_control
              160A  118A         
  3494                           	line	116
  3495                           	
  3496  15CD                     l12108:	
  3497                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3498  15CD  3038               	movlw	(038h)
  3499  15CE  160A  118A  248E   	fcall	_lcd_write_control
              160A  118A         
  3500                           	line	117
  3501                           	
  3502  15D3                     l12110:	
  3503                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3504  15D3  300C               	movlw	(0Ch)
  3505  15D4  160A  118A  248E   	fcall	_lcd_write_control
              160A  118A         
  3506                           	line	118
  3507                           	
  3508  15D9                     l12112:	
  3509                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3510  15D9  3006               	movlw	(06h)
  3511  15DA  160A  118A  248E   	fcall	_lcd_write_control
              160A  118A         
  3512                           	line	119
  3513                           	
  3514  15DF                     l12114:	
  3515                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3516  15DF  3002               	movlw	(02h)
  3517  15E0  160A  118A  248E   	fcall	_lcd_write_control
              160A  118A         
  3518                           	line	121
  3519                           	
  3520  15E5                     l1429:	
  3521  15E5  0008               	return
  3522                           	opt stack 0
  3523                           GLOBAL	__end_of_lcd_init
  3524  15E6                     	__end_of_lcd_init:
  3525 ;; =============== function _lcd_init ends ============
  3526                           
  3527                           	signat	_lcd_init,88
  3528                           	global	_lcd_write_string
  3529                           psect	text1138,local,class=CODE,delta=2
  3530                           global __ptext1138
  3531  07C3                     __ptext1138:
  3532                           
  3533 ;; *************** function _lcd_write_string *****************
  3534 ;; Defined at:
  3535 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  s               2    7[BANK1 ] PTR unsigned char 
  3538 ;;		 -> STR_15(4), STR_14(8), STR_13(4), UpdateDisplay@adcOutput(16), 
  3539 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3540 ;;		 -> STR_6(4), STR_5(9), STR_4(8), STR_3(9), 
  3541 ;;		 -> STR_2(9), STR_1(9), 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;		None               void
  3546 ;; Registers used:
  3547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3553 ;;      Params:         0       0       2       0       0
  3554 ;;      Locals:         0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0
  3556 ;;      Totals:         0       0       2       0       0
  3557 ;;Total ram usage:        2 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    6
  3560 ;; This function calls:
  3561 ;;		_lcd_write_data
  3562 ;; This function is called by:
  3563 ;;		_UpdateDisplay
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           psect	text1138
  3567                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3568                           	line	48
  3569                           	global	__size_of_lcd_write_string
  3570  0038                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3571                           	
  3572  07C3                     _lcd_write_string:	
  3573 ;; hardware stack exceeded
  3574                           	opt	stack 0
  3575                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3576                           	line	50
  3577                           	
  3578  07C3                     l12088:	
  3579                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3580  07C3  2FE3               	goto	l12094
  3581                           	
  3582  07C4                     l1409:	
  3583                           	
  3584  07C4                     l12090:	
  3585  07C4  1683               	bsf	status, 5	;RP0=1, select bank1
  3586  07C5  1303               	bcf	status, 6	;RP1=0, select bank1
  3587  07C6  0828               	movf	(lcd_write_string@s+1)^080h,w
  3588  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
  3589  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
  3590  07C9  00FF               	movwf	btemp+1
  3591  07CA  1683               	bsf	status, 5	;RP0=1, select bank1
  3592  07CB  1303               	bcf	status, 6	;RP1=0, select bank1
  3593  07CC  0827               	movf	(lcd_write_string@s)^080h,w
  3594  07CD  0084               	movwf	fsr0
  3595  07CE  1283               	bcf	status, 5	;RP0=0, select bank0
  3596  07CF  1303               	bcf	status, 6	;RP1=0, select bank0
  3597  07D0  120A  158A  2000   	fcall	stringtab
              120A  118A         
  3598  07D5  160A  118A  2473   	fcall	_lcd_write_data
              120A  118A         
  3599                           	
  3600  07DA                     l12092:	
  3601  07DA  3001               	movlw	low(01h)
  3602  07DB  1683               	bsf	status, 5	;RP0=1, select bank1
  3603  07DC  1303               	bcf	status, 6	;RP1=0, select bank1
  3604  07DD  07A7               	addwf	(lcd_write_string@s)^080h,f
  3605  07DE  1803               	skipnc
  3606  07DF  0AA8               	incf	(lcd_write_string@s+1)^080h,f
  3607  07E0  3000               	movlw	high(01h)
  3608  07E1  07A8               	addwf	(lcd_write_string@s+1)^080h,f
  3609  07E2  2FE3               	goto	l12094
  3610                           	
  3611  07E3                     l1408:	
  3612                           	
  3613  07E3                     l12094:	
  3614  07E3  1683               	bsf	status, 5	;RP0=1, select bank1
  3615  07E4  1303               	bcf	status, 6	;RP1=0, select bank1
  3616  07E5  0828               	movf	(lcd_write_string@s+1)^080h,w
  3617  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3618  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3619  07E8  00FF               	movwf	btemp+1
  3620  07E9  1683               	bsf	status, 5	;RP0=1, select bank1
  3621  07EA  1303               	bcf	status, 6	;RP1=0, select bank1
  3622  07EB  0827               	movf	(lcd_write_string@s)^080h,w
  3623  07EC  0084               	movwf	fsr0
  3624  07ED  1283               	bcf	status, 5	;RP0=0, select bank0
  3625  07EE  1303               	bcf	status, 6	;RP1=0, select bank0
  3626  07EF  120A  158A  2000   	fcall	stringtab
              120A  118A         
  3627  07F4  3800               	iorlw	0
  3628  07F5  1D03               	skipz
  3629  07F6  2FF8               	goto	u5951
  3630  07F7  2FF9               	goto	u5950
  3631  07F8                     u5951:
  3632  07F8  2FC4               	goto	l12090
  3633  07F9                     u5950:
  3634  07F9  2FFA               	goto	l1411
  3635                           	
  3636  07FA                     l1410:	
  3637                           	line	51
  3638                           	
  3639  07FA                     l1411:	
  3640  07FA  0008               	return
  3641                           	opt stack 0
  3642                           GLOBAL	__end_of_lcd_write_string
  3643  07FB                     	__end_of_lcd_write_string:
  3644 ;; =============== function _lcd_write_string ends ============
  3645                           
  3646                           	signat	_lcd_write_string,4216
  3647                           	global	_lcd_set_cursor
  3648                           psect	text1139,local,class=CODE,delta=2
  3649                           global __ptext1139
  3650  13D7                     __ptext1139:
  3651                           
  3652 ;; *************** function _lcd_set_cursor *****************
  3653 ;; Defined at:
  3654 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  address         1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  address         1    3[BANK1 ] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;		None               void
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, pclath, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         0       0       0       0       0
  3669 ;;      Locals:         0       0       1       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       0       1       0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    6
  3675 ;; This function calls:
  3676 ;;		_lcd_write_control
  3677 ;; This function is called by:
  3678 ;;		_UpdateDisplay
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           psect	text1139
  3682                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3683                           	line	42
  3684                           	global	__size_of_lcd_set_cursor
  3685  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3686                           	
  3687  13D7                     _lcd_set_cursor:	
  3688 ;; hardware stack exceeded
  3689                           	opt	stack 0
  3690                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3691                           ;lcd_set_cursor@address stored from wreg
  3692  13D7  1683               	bsf	status, 5	;RP0=1, select bank1
  3693  13D8  1303               	bcf	status, 6	;RP1=0, select bank1
  3694  13D9  00A3               	movwf	(lcd_set_cursor@address)^080h
  3695                           	line	43
  3696                           	
  3697  13DA                     l12084:	
  3698                           ;lcd.c: 43: address |= 0b10000000;
  3699  13DA  17A3               	bsf	(lcd_set_cursor@address)^080h+(7/8),(7)&7
  3700                           	line	44
  3701                           	
  3702  13DB                     l12086:	
  3703                           ;lcd.c: 44: lcd_write_control(address);
  3704  13DB  0823               	movf	(lcd_set_cursor@address)^080h,w
  3705  13DC  160A  118A  248E   	fcall	_lcd_write_control
              160A  118A         
  3706                           	line	45
  3707                           	
  3708  13E1                     l1405:	
  3709  13E1  0008               	return
  3710                           	opt stack 0
  3711                           GLOBAL	__end_of_lcd_set_cursor
  3712  13E2                     	__end_of_lcd_set_cursor:
  3713 ;; =============== function _lcd_set_cursor ends ============
  3714                           
  3715                           	signat	_lcd_set_cursor,4216
  3716                           	global	_sprintf
  3717                           psect	text1140,local,class=CODE,delta=2
  3718                           global __ptext1140
  3719  06C3                     __ptext1140:
  3720                           
  3721 ;; *************** function _sprintf *****************
  3722 ;; Defined at:
  3723 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  sp              1    wreg     PTR unsigned char 
  3726 ;;		 -> UpdateDisplay@adcOutput(16), 
  3727 ;;  f               1   20[BANK1 ] PTR const unsigned char 
  3728 ;;		 -> STR_12(15), STR_11(15), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  3731 ;;		 -> UpdateDisplay@adcOutput(16), 
  3732 ;;  _val            4   31[BANK1 ] struct .
  3733 ;;  c               1   36[BANK1 ] char 
  3734 ;;  prec            1   30[BANK1 ] char 
  3735 ;;  flag            1   29[BANK1 ] unsigned char 
  3736 ;;  ap              1   28[BANK1 ] PTR void [1]
  3737 ;;		 -> ?_sprintf(2), 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2   20[BANK1 ] int 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       0       5       0       0
  3748 ;;      Locals:         0       0       9       0       0
  3749 ;;      Temps:          0       0       3       0       0
  3750 ;;      Totals:         0       0      17       0       0
  3751 ;;Total ram usage:       17 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    6
  3754 ;; This function calls:
  3755 ;;		___lwdiv
  3756 ;;		___lwmod
  3757 ;; This function is called by:
  3758 ;;		_UpdateDisplay
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           psect	text1140
  3762                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  3763                           	line	488
  3764                           	global	__size_of_sprintf
  3765  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3766                           	
  3767  06C3                     _sprintf:	
  3768 ;; hardware stack exceeded
  3769                           	opt	stack 0
  3770                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3771                           ;sprintf@sp stored from wreg
  3772                           	line	537
  3773  06C3  1683               	bsf	status, 5	;RP0=1, select bank1
  3774  06C4  1303               	bcf	status, 6	;RP1=0, select bank1
  3775  06C5  00C3               	movwf	(sprintf@sp)^080h
  3776                           	
  3777  06C6                     l12026:	
  3778  06C6  30B5               	movlw	(?_sprintf+01h)&0ffh
  3779  06C7  00B9               	movwf	(??_sprintf+0)^080h+0
  3780  06C8  0839               	movf	(??_sprintf+0)^080h+0,w
  3781  06C9  00BC               	movwf	(sprintf@ap)^080h
  3782                           	line	540
  3783  06CA  2FA9               	goto	l12078
  3784                           	
  3785  06CB                     l6711:	
  3786                           	line	542
  3787                           	
  3788  06CB                     l12028:	
  3789  06CB  0844               	movf	(sprintf@c)^080h,w
  3790  06CC  3A25               	xorlw	025h
  3791  06CD  1903               	skipnz
  3792  06CE  2ED0               	goto	u5871
  3793  06CF  2ED1               	goto	u5870
  3794  06D0                     u5871:
  3795  06D0  2EDD               	goto	l6712
  3796  06D1                     u5870:
  3797                           	line	545
  3798                           	
  3799  06D1                     l12030:	
  3800  06D1  0844               	movf	(sprintf@c)^080h,w
  3801  06D2  00B9               	movwf	(??_sprintf+0)^080h+0
  3802  06D3  0843               	movf	(sprintf@sp)^080h,w
  3803  06D4  0084               	movwf	fsr0
  3804  06D5  0839               	movf	(??_sprintf+0)^080h+0,w
  3805  06D6  1383               	bcf	status, 7	;select IRP bank0
  3806  06D7  0080               	movwf	indf
  3807                           	
  3808  06D8                     l12032:	
  3809  06D8  3001               	movlw	(01h)
  3810  06D9  00B9               	movwf	(??_sprintf+0)^080h+0
  3811  06DA  0839               	movf	(??_sprintf+0)^080h+0,w
  3812  06DB  07C3               	addwf	(sprintf@sp)^080h,f
  3813                           	line	546
  3814  06DC  2FA9               	goto	l12078
  3815                           	line	547
  3816                           	
  3817  06DD                     l6712:	
  3818                           	line	552
  3819  06DD  01BD               	clrf	(sprintf@flag)^080h
  3820                           	line	638
  3821  06DE  2EE4               	goto	l12036
  3822                           	line	640
  3823                           	
  3824  06DF                     l6714:	
  3825                           	line	641
  3826  06DF  2FBD               	goto	l12080
  3827                           	line	700
  3828                           	
  3829  06E0                     l6716:	
  3830  06E0  2EF9               	goto	l12038
  3831                           	line	701
  3832                           	
  3833  06E1                     l6717:	
  3834                           	line	702
  3835  06E1  2EF9               	goto	l12038
  3836                           	line	805
  3837                           	
  3838  06E2                     l6719:	
  3839                           	line	816
  3840  06E2  2FA9               	goto	l12078
  3841                           	line	825
  3842                           	
  3843  06E3                     l12034:	
  3844  06E3  2EF9               	goto	l12038
  3845                           	line	638
  3846                           	
  3847  06E4                     l6713:	
  3848                           	
  3849  06E4                     l12036:	
  3850  06E4  3001               	movlw	01h
  3851  06E5  07B4               	addwf	(sprintf@f)^080h,f
  3852  06E6  30FF               	movlw	-01h
  3853  06E7  0734               	addwf	(sprintf@f)^080h,w
  3854  06E8  0084               	movwf	fsr0
  3855  06E9  120A  158A  200A   	fcall	stringdir
              120A  118A         
  3856  06EE  00C4               	movwf	(sprintf@c)^080h
  3857                           	; Switch size 1, requested type "space"
  3858                           ; Number of cases is 3, Range of values is 0 to 105
  3859                           ; switch strategies available:
  3860                           ; Name         Instructions Cycles
  3861                           ; simple_byte           10     6 (average)
  3862                           ; jumptable            260     6 (fixed)
  3863                           ; rangetable           110     6 (fixed)
  3864                           ; spacedrange          218     9 (fixed)
  3865                           ; locatedrange         106     3 (fixed)
  3866                           ;	Chosen strategy is simple_byte
  3867                           
  3868                           	opt asmopt_off
  3869  06EF  3A00               	xorlw	0^0	; case 0
  3870  06F0  1903               	skipnz
  3871  06F1  2FBD               	goto	l12080
  3872  06F2  3A64               	xorlw	100^0	; case 100
  3873  06F3  1903               	skipnz
  3874  06F4  2EF9               	goto	l12038
  3875  06F5  3A0D               	xorlw	105^100	; case 105
  3876  06F6  1903               	skipnz
  3877  06F7  2EF9               	goto	l12038
  3878  06F8  2FA9               	goto	l12078
  3879                           	opt asmopt_on
  3880                           
  3881                           	line	825
  3882                           	
  3883  06F9                     l6718:	
  3884                           	line	1254
  3885                           	
  3886  06F9                     l12038:	
  3887  06F9  083C               	movf	(sprintf@ap)^080h,w
  3888  06FA  0084               	movwf	fsr0
  3889  06FB  1383               	bcf	status, 7	;select IRP bank0
  3890  06FC  0800               	movf	indf,w
  3891  06FD  00BF               	movwf	(sprintf@_val)^080h
  3892  06FE  0A84               	incf	fsr0,f
  3893  06FF  0800               	movf	indf,w
  3894  0700  00C0               	movwf	(sprintf@_val+1)^080h
  3895                           	
  3896  0701                     l12040:	
  3897  0701  3002               	movlw	(02h)
  3898  0702  00B9               	movwf	(??_sprintf+0)^080h+0
  3899  0703  0839               	movf	(??_sprintf+0)^080h+0,w
  3900  0704  07BC               	addwf	(sprintf@ap)^080h,f
  3901                           	line	1256
  3902                           	
  3903  0705                     l12042:	
  3904  0705  1FC0               	btfss	(sprintf@_val+1)^080h,7
  3905  0706  2F08               	goto	u5881
  3906  0707  2F09               	goto	u5880
  3907  0708                     u5881:
  3908  0708  2F13               	goto	l12048
  3909  0709                     u5880:
  3910                           	line	1257
  3911                           	
  3912  0709                     l12044:	
  3913  0709  3003               	movlw	(03h)
  3914  070A  00B9               	movwf	(??_sprintf+0)^080h+0
  3915  070B  0839               	movf	(??_sprintf+0)^080h+0,w
  3916  070C  04BD               	iorwf	(sprintf@flag)^080h,f
  3917                           	line	1258
  3918                           	
  3919  070D                     l12046:	
  3920  070D  09BF               	comf	(sprintf@_val)^080h,f
  3921  070E  09C0               	comf	(sprintf@_val+1)^080h,f
  3922  070F  0ABF               	incf	(sprintf@_val)^080h,f
  3923  0710  1903               	skipnz
  3924  0711  0AC0               	incf	(sprintf@_val+1)^080h,f
  3925  0712  2F13               	goto	l12048
  3926                           	line	1259
  3927                           	
  3928  0713                     l6720:	
  3929                           	line	1300
  3930                           	
  3931  0713                     l12048:	
  3932  0713  01C4               	clrf	(sprintf@c)^080h
  3933  0714  1403               	bsf	status,0
  3934  0715  0DC4               	rlf	(sprintf@c)^080h,f
  3935                           	
  3936  0716                     l12050:	
  3937  0716  0844               	movf	(sprintf@c)^080h,w
  3938  0717  3A05               	xorlw	05h
  3939  0718  1D03               	skipz
  3940  0719  2F1B               	goto	u5891
  3941  071A  2F1C               	goto	u5890
  3942  071B                     u5891:
  3943  071B  2F1E               	goto	l12054
  3944  071C                     u5890:
  3945  071C  2F46               	goto	l12062
  3946                           	
  3947  071D                     l12052:	
  3948  071D  2F46               	goto	l12062
  3949                           	line	1301
  3950                           	
  3951  071E                     l6721:	
  3952                           	
  3953  071E                     l12054:	
  3954  071E  0844               	movf	(sprintf@c)^080h,w
  3955  071F  00B9               	movwf	(??_sprintf+0)^080h+0
  3956  0720  0739               	addwf	(??_sprintf+0)^080h+0,w
  3957  0721  3E01               	addlw	low((_dpowers-__stringbase))
  3958  0722  0084               	movwf	fsr0
  3959  0723  120A  158A  200A   	fcall	stringdir
              120A  118A         
  3960  0728  00BA               	movwf	(??_sprintf+1)^080h+0
  3961  0729  120A  158A  200A   	fcall	stringdir
              120A  118A         
  3962  072E  00BB               	movwf	(??_sprintf+1)^080h+0+1
  3963  072F  083B               	movf	1+(??_sprintf+1)^080h+0,w
  3964  0730  0240               	subwf	(sprintf@_val+1)^080h,w
  3965  0731  1D03               	skipz
  3966  0732  2F35               	goto	u5905
  3967  0733  083A               	movf	0+(??_sprintf+1)^080h+0,w
  3968  0734  023F               	subwf	(sprintf@_val)^080h,w
  3969  0735                     u5905:
  3970  0735  1803               	skipnc
  3971  0736  2F38               	goto	u5901
  3972  0737  2F39               	goto	u5900
  3973  0738                     u5901:
  3974  0738  2F3B               	goto	l12058
  3975  0739                     u5900:
  3976  0739  2F46               	goto	l12062
  3977                           	line	1302
  3978                           	
  3979  073A                     l12056:	
  3980  073A  2F46               	goto	l12062
  3981                           	
  3982  073B                     l6723:	
  3983                           	line	1300
  3984                           	
  3985  073B                     l12058:	
  3986  073B  3001               	movlw	(01h)
  3987  073C  00B9               	movwf	(??_sprintf+0)^080h+0
  3988  073D  0839               	movf	(??_sprintf+0)^080h+0,w
  3989  073E  07C4               	addwf	(sprintf@c)^080h,f
  3990                           	
  3991  073F                     l12060:	
  3992  073F  0844               	movf	(sprintf@c)^080h,w
  3993  0740  3A05               	xorlw	05h
  3994  0741  1D03               	skipz
  3995  0742  2F44               	goto	u5911
  3996  0743  2F45               	goto	u5910
  3997  0744                     u5911:
  3998  0744  2F1E               	goto	l12054
  3999  0745                     u5910:
  4000  0745  2F46               	goto	l12062
  4001                           	
  4002  0746                     l6722:	
  4003                           	line	1433
  4004                           	
  4005  0746                     l12062:	
  4006  0746  083D               	movf	(sprintf@flag)^080h,w
  4007  0747  3903               	andlw	03h
  4008  0748  1903               	btfsc	status,2
  4009  0749  2F4B               	goto	u5921
  4010  074A  2F4C               	goto	u5920
  4011  074B                     u5921:
  4012  074B  2F58               	goto	l12068
  4013  074C                     u5920:
  4014                           	line	1434
  4015                           	
  4016  074C                     l12064:	
  4017  074C  302D               	movlw	(02Dh)
  4018  074D  00B9               	movwf	(??_sprintf+0)^080h+0
  4019  074E  0843               	movf	(sprintf@sp)^080h,w
  4020  074F  0084               	movwf	fsr0
  4021  0750  0839               	movf	(??_sprintf+0)^080h+0,w
  4022  0751  1383               	bcf	status, 7	;select IRP bank0
  4023  0752  0080               	movwf	indf
  4024                           	
  4025  0753                     l12066:	
  4026  0753  3001               	movlw	(01h)
  4027  0754  00B9               	movwf	(??_sprintf+0)^080h+0
  4028  0755  0839               	movf	(??_sprintf+0)^080h+0,w
  4029  0756  07C3               	addwf	(sprintf@sp)^080h,f
  4030  0757  2F58               	goto	l12068
  4031                           	
  4032  0758                     l6724:	
  4033                           	line	1467
  4034                           	
  4035  0758                     l12068:	
  4036  0758  0844               	movf	(sprintf@c)^080h,w
  4037  0759  00B9               	movwf	(??_sprintf+0)^080h+0
  4038  075A  0839               	movf	(??_sprintf+0)^080h+0,w
  4039  075B  00BE               	movwf	(sprintf@prec)^080h
  4040                           	line	1469
  4041  075C  2F9D               	goto	l12076
  4042                           	
  4043  075D                     l6726:	
  4044                           	line	1484
  4045                           	
  4046  075D                     l12070:	
  4047  075D  300A               	movlw	low(0Ah)
  4048  075E  00AE               	movwf	(?___lwmod)^080h
  4049  075F  3000               	movlw	high(0Ah)
  4050  0760  00AF               	movwf	((?___lwmod)^080h)+1
  4051  0761  083E               	movf	(sprintf@prec)^080h,w
  4052  0762  00B9               	movwf	(??_sprintf+0)^080h+0
  4053  0763  0739               	addwf	(??_sprintf+0)^080h+0,w
  4054  0764  3E01               	addlw	low((_dpowers-__stringbase))
  4055  0765  0084               	movwf	fsr0
  4056  0766  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4057  076B  00A6               	movwf	(?___lwdiv)^080h
  4058  076C  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4059  0771  00A7               	movwf	(?___lwdiv+1)^080h
  4060  0772  0840               	movf	(sprintf@_val+1)^080h,w
  4061  0773  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4062  0774  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4063  0775  083F               	movf	(sprintf@_val)^080h,w
  4064  0776  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4065  0777  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4066                           
  4067  0778  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4068  077D  1683               	bsf	status, 5	;RP0=1, select bank1
  4069  077E  1303               	bcf	status, 6	;RP1=0, select bank1
  4070  077F  0827               	movf	(1+(?___lwdiv))^080h,w
  4071  0780  01B1               	clrf	1+(?___lwmod)^080h+02h
  4072  0781  07B1               	addwf	1+(?___lwmod)^080h+02h
  4073  0782  0826               	movf	(0+(?___lwdiv))^080h,w
  4074  0783  01B0               	clrf	0+(?___lwmod)^080h+02h
  4075  0784  07B0               	addwf	0+(?___lwmod)^080h+02h
  4076                           
  4077  0785  160A  118A  276C   	fcall	___lwmod
              120A  118A         
  4078  078A  1683               	bsf	status, 5	;RP0=1, select bank1
  4079  078B  1303               	bcf	status, 6	;RP1=0, select bank1
  4080  078C  082E               	movf	(0+(?___lwmod))^080h,w
  4081  078D  3E30               	addlw	030h
  4082  078E  00BA               	movwf	(??_sprintf+1)^080h+0
  4083  078F  083A               	movf	(??_sprintf+1)^080h+0,w
  4084  0790  00C4               	movwf	(sprintf@c)^080h
  4085                           	line	1516
  4086                           	
  4087  0791                     l12072:	
  4088  0791  0844               	movf	(sprintf@c)^080h,w
  4089  0792  00B9               	movwf	(??_sprintf+0)^080h+0
  4090  0793  0843               	movf	(sprintf@sp)^080h,w
  4091  0794  0084               	movwf	fsr0
  4092  0795  0839               	movf	(??_sprintf+0)^080h+0,w
  4093  0796  1383               	bcf	status, 7	;select IRP bank0
  4094  0797  0080               	movwf	indf
  4095                           	
  4096  0798                     l12074:	
  4097  0798  3001               	movlw	(01h)
  4098  0799  00B9               	movwf	(??_sprintf+0)^080h+0
  4099  079A  0839               	movf	(??_sprintf+0)^080h+0,w
  4100  079B  07C3               	addwf	(sprintf@sp)^080h,f
  4101  079C  2F9D               	goto	l12076
  4102                           	line	1517
  4103                           	
  4104  079D                     l6725:	
  4105                           	line	1469
  4106                           	
  4107  079D                     l12076:	
  4108  079D  30FF               	movlw	(-1)
  4109  079E  00B9               	movwf	(??_sprintf+0)^080h+0
  4110  079F  0839               	movf	(??_sprintf+0)^080h+0,w
  4111  07A0  07BE               	addwf	(sprintf@prec)^080h,f
  4112  07A1  083E               	movf	((sprintf@prec)^080h),w
  4113  07A2  3AFF               	xorlw	-1
  4114  07A3  1D03               	skipz
  4115  07A4  2FA6               	goto	u5931
  4116  07A5  2FA7               	goto	u5930
  4117  07A6                     u5931:
  4118  07A6  2F5D               	goto	l12070
  4119  07A7                     u5930:
  4120  07A7  2FA9               	goto	l12078
  4121                           	
  4122  07A8                     l6727:	
  4123  07A8  2FA9               	goto	l12078
  4124                           	line	1525
  4125                           	
  4126  07A9                     l6710:	
  4127                           	line	540
  4128                           	
  4129  07A9                     l12078:	
  4130  07A9  3001               	movlw	01h
  4131  07AA  07B4               	addwf	(sprintf@f)^080h,f
  4132  07AB  30FF               	movlw	-01h
  4133  07AC  0734               	addwf	(sprintf@f)^080h,w
  4134  07AD  0084               	movwf	fsr0
  4135  07AE  120A  158A  200A   	fcall	stringdir
              120A  118A         
  4136  07B3  00B9               	movwf	(??_sprintf+0)^080h+0
  4137  07B4  0839               	movf	(??_sprintf+0)^080h+0,w
  4138  07B5  00C4               	movwf	(sprintf@c)^080h
  4139  07B6  08C4               	movf	((sprintf@c)^080h),f
  4140  07B7  1D03               	skipz
  4141  07B8  2FBA               	goto	u5941
  4142  07B9  2FBB               	goto	u5940
  4143  07BA                     u5941:
  4144  07BA  2ECB               	goto	l12028
  4145  07BB                     u5940:
  4146  07BB  2FBD               	goto	l12080
  4147                           	
  4148  07BC                     l6728:	
  4149  07BC  2FBD               	goto	l12080
  4150                           	line	1527
  4151                           	
  4152  07BD                     l6715:	
  4153                           	line	1530
  4154                           	
  4155  07BD                     l12080:	
  4156  07BD  0843               	movf	(sprintf@sp)^080h,w
  4157  07BE  0084               	movwf	fsr0
  4158  07BF  1383               	bcf	status, 7	;select IRP bank0
  4159  07C0  0180               	clrf	indf
  4160  07C1  2FC2               	goto	l6729
  4161                           	line	1532
  4162                           	
  4163  07C2                     l12082:	
  4164                           	line	1533
  4165                           ;	Return value of _sprintf is never used
  4166                           	
  4167  07C2                     l6729:	
  4168  07C2  0008               	return
  4169                           	opt stack 0
  4170                           GLOBAL	__end_of_sprintf
  4171  07C3                     	__end_of_sprintf:
  4172 ;; =============== function _sprintf ends ============
  4173                           
  4174                           	signat	_sprintf,4698
  4175                           	global	_ADCconvert
  4176                           psect	text1141,local,class=CODE,delta=2
  4177                           global __ptext1141
  4178  0015                     __ptext1141:
  4179                           
  4180 ;; *************** function _ADCconvert *****************
  4181 ;; Defined at:
  4182 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;		None               void
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0
  4198 ;;      Temps:          0       0       2       0       0
  4199 ;;      Totals:         0       0       2       0       0
  4200 ;;Total ram usage:        2 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    6
  4203 ;; This function calls:
  4204 ;;		___wmul
  4205 ;;		___lwdiv
  4206 ;; This function is called by:
  4207 ;;		_readAvgDistance
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           psect	text1141
  4211                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4212                           	line	33
  4213                           	global	__size_of_ADCconvert
  4214  0229                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4215                           	
  4216  0015                     _ADCconvert:	
  4217 ;; hardware stack exceeded
  4218                           	opt	stack 0
  4219                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4220                           	line	39
  4221                           	
  4222  0015                     l11984:	
  4223                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4224  0015  3000               	movlw	high(0D5h)
  4225  0016  1683               	bsf	status, 5	;RP0=1, select bank1
  4226  0017  1303               	bcf	status, 6	;RP1=0, select bank1
  4227  0018  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4228  0019  30D5               	movlw	low(0D5h)
  4229  001A  1903               	skipnz
  4230  001B  0268               	subwf	(_adcVal)^080h,w	;volatile
  4231  001C  1C03               	skipc
  4232  001D  281F               	goto	u5731
  4233  001E  2820               	goto	u5730
  4234  001F                     u5731:
  4235  001F  2863               	goto	l11990
  4236  0020                     u5730:
  4237                           	
  4238  0020                     l11986:	
  4239  0020  3000               	movlw	high(0EAh)
  4240  0021  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4241  0022  30EA               	movlw	low(0EAh)
  4242  0023  1903               	skipnz
  4243  0024  0268               	subwf	(_adcVal)^080h,w	;volatile
  4244  0025  1803               	skipnc
  4245  0026  2828               	goto	u5741
  4246  0027  2829               	goto	u5740
  4247  0028                     u5741:
  4248  0028  2863               	goto	l11990
  4249  0029                     u5740:
  4250                           	line	41
  4251                           	
  4252  0029                     l11988:	
  4253                           ;infrared.c: 40: {
  4254                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4255  0029  3015               	movlw	low(015h)
  4256  002A  00A6               	movwf	(?___lwdiv)^080h
  4257  002B  3000               	movlw	high(015h)
  4258  002C  00A7               	movwf	((?___lwdiv)^080h)+1
  4259  002D  0968               	comf	(_adcVal)^080h,w	;volatile
  4260  002E  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4261  002F  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4262  0030  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4263  0031  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4264  0032  1903               	skipnz
  4265  0033  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4266  0034  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4267  0035  3EEA               	addlw	low(0EAh)
  4268  0036  00A0               	movwf	(?___wmul)^080h
  4269  0037  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4270  0038  1803               	skipnc
  4271  0039  3E01               	addlw	1
  4272  003A  3E00               	addlw	high(0EAh)
  4273  003B  00A1               	movwf	1+(?___wmul)^080h
  4274  003C  3005               	movlw	low(05h)
  4275  003D  00A2               	movwf	0+(?___wmul)^080h+02h
  4276  003E  3000               	movlw	high(05h)
  4277  003F  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4278  0040  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4279  0045  1683               	bsf	status, 5	;RP0=1, select bank1
  4280  0046  1303               	bcf	status, 6	;RP1=0, select bank1
  4281  0047  0821               	movf	(1+(?___wmul))^080h,w
  4282  0048  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4283  0049  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4284  004A  0820               	movf	(0+(?___wmul))^080h,w
  4285  004B  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4286  004C  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4287                           
  4288  004D  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4289  0052  1683               	bsf	status, 5	;RP0=1, select bank1
  4290  0053  1303               	bcf	status, 6	;RP1=0, select bank1
  4291  0054  0826               	movf	(0+(?___lwdiv))^080h,w
  4292  0055  3E0F               	addlw	low(0Fh)
  4293  0056  1283               	bcf	status, 5	;RP0=0, select bank0
  4294  0057  1303               	bcf	status, 6	;RP1=0, select bank0
  4295  0058  00D7               	movwf	(_distance)	;volatile
  4296  0059  1683               	bsf	status, 5	;RP0=1, select bank1
  4297  005A  1303               	bcf	status, 6	;RP1=0, select bank1
  4298  005B  0827               	movf	(1+(?___lwdiv))^080h,w
  4299  005C  1803               	skipnc
  4300  005D  3E01               	addlw	1
  4301  005E  3E00               	addlw	high(0Fh)
  4302  005F  1283               	bcf	status, 5	;RP0=0, select bank0
  4303  0060  1303               	bcf	status, 6	;RP1=0, select bank0
  4304  0061  00D8               	movwf	1+(_distance)	;volatile
  4305                           	line	42
  4306                           ;infrared.c: 42: }
  4307  0062  2A3D               	goto	l2976
  4308                           	line	43
  4309                           	
  4310  0063                     l2963:	
  4311                           	
  4312  0063                     l11990:	
  4313                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4314  0063  3000               	movlw	high(0AAh)
  4315  0064  1683               	bsf	status, 5	;RP0=1, select bank1
  4316  0065  1303               	bcf	status, 6	;RP1=0, select bank1
  4317  0066  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4318  0067  30AA               	movlw	low(0AAh)
  4319  0068  1903               	skipnz
  4320  0069  0268               	subwf	(_adcVal)^080h,w	;volatile
  4321  006A  1C03               	skipc
  4322  006B  286D               	goto	u5751
  4323  006C  286E               	goto	u5750
  4324  006D                     u5751:
  4325  006D  28B1               	goto	l11996
  4326  006E                     u5750:
  4327                           	
  4328  006E                     l11992:	
  4329  006E  3000               	movlw	high(0D5h)
  4330  006F  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4331  0070  30D5               	movlw	low(0D5h)
  4332  0071  1903               	skipnz
  4333  0072  0268               	subwf	(_adcVal)^080h,w	;volatile
  4334  0073  1803               	skipnc
  4335  0074  2876               	goto	u5761
  4336  0075  2877               	goto	u5760
  4337  0076                     u5761:
  4338  0076  28B1               	goto	l11996
  4339  0077                     u5760:
  4340                           	line	45
  4341                           	
  4342  0077                     l11994:	
  4343                           ;infrared.c: 44: {
  4344                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4345  0077  302B               	movlw	low(02Bh)
  4346  0078  00A6               	movwf	(?___lwdiv)^080h
  4347  0079  3000               	movlw	high(02Bh)
  4348  007A  00A7               	movwf	((?___lwdiv)^080h)+1
  4349  007B  0968               	comf	(_adcVal)^080h,w	;volatile
  4350  007C  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4351  007D  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4352  007E  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4353  007F  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4354  0080  1903               	skipnz
  4355  0081  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4356  0082  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4357  0083  3ED5               	addlw	low(0D5h)
  4358  0084  00A0               	movwf	(?___wmul)^080h
  4359  0085  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4360  0086  1803               	skipnc
  4361  0087  3E01               	addlw	1
  4362  0088  3E00               	addlw	high(0D5h)
  4363  0089  00A1               	movwf	1+(?___wmul)^080h
  4364  008A  300A               	movlw	low(0Ah)
  4365  008B  00A2               	movwf	0+(?___wmul)^080h+02h
  4366  008C  3000               	movlw	high(0Ah)
  4367  008D  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4368  008E  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4369  0093  1683               	bsf	status, 5	;RP0=1, select bank1
  4370  0094  1303               	bcf	status, 6	;RP1=0, select bank1
  4371  0095  0821               	movf	(1+(?___wmul))^080h,w
  4372  0096  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4373  0097  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4374  0098  0820               	movf	(0+(?___wmul))^080h,w
  4375  0099  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4376  009A  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4377                           
  4378  009B  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4379  00A0  1683               	bsf	status, 5	;RP0=1, select bank1
  4380  00A1  1303               	bcf	status, 6	;RP1=0, select bank1
  4381  00A2  0826               	movf	(0+(?___lwdiv))^080h,w
  4382  00A3  3E14               	addlw	low(014h)
  4383  00A4  1283               	bcf	status, 5	;RP0=0, select bank0
  4384  00A5  1303               	bcf	status, 6	;RP1=0, select bank0
  4385  00A6  00D7               	movwf	(_distance)	;volatile
  4386  00A7  1683               	bsf	status, 5	;RP0=1, select bank1
  4387  00A8  1303               	bcf	status, 6	;RP1=0, select bank1
  4388  00A9  0827               	movf	(1+(?___lwdiv))^080h,w
  4389  00AA  1803               	skipnc
  4390  00AB  3E01               	addlw	1
  4391  00AC  3E00               	addlw	high(014h)
  4392  00AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4393  00AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4394  00AF  00D8               	movwf	1+(_distance)	;volatile
  4395                           	line	46
  4396                           ;infrared.c: 46: }
  4397  00B0  2A3D               	goto	l2976
  4398                           	line	47
  4399                           	
  4400  00B1                     l2965:	
  4401                           	
  4402  00B1                     l11996:	
  4403                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4404  00B1  3000               	movlw	high(080h)
  4405  00B2  1683               	bsf	status, 5	;RP0=1, select bank1
  4406  00B3  1303               	bcf	status, 6	;RP1=0, select bank1
  4407  00B4  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4408  00B5  3080               	movlw	low(080h)
  4409  00B6  1903               	skipnz
  4410  00B7  0268               	subwf	(_adcVal)^080h,w	;volatile
  4411  00B8  1C03               	skipc
  4412  00B9  28BB               	goto	u5771
  4413  00BA  28BC               	goto	u5770
  4414  00BB                     u5771:
  4415  00BB  28FF               	goto	l12002
  4416  00BC                     u5770:
  4417                           	
  4418  00BC                     l11998:	
  4419  00BC  3000               	movlw	high(0AAh)
  4420  00BD  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4421  00BE  30AA               	movlw	low(0AAh)
  4422  00BF  1903               	skipnz
  4423  00C0  0268               	subwf	(_adcVal)^080h,w	;volatile
  4424  00C1  1803               	skipnc
  4425  00C2  28C4               	goto	u5781
  4426  00C3  28C5               	goto	u5780
  4427  00C4                     u5781:
  4428  00C4  28FF               	goto	l12002
  4429  00C5                     u5780:
  4430                           	line	49
  4431                           	
  4432  00C5                     l12000:	
  4433                           ;infrared.c: 48: {
  4434                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4435  00C5  302A               	movlw	low(02Ah)
  4436  00C6  00A6               	movwf	(?___lwdiv)^080h
  4437  00C7  3000               	movlw	high(02Ah)
  4438  00C8  00A7               	movwf	((?___lwdiv)^080h)+1
  4439  00C9  0968               	comf	(_adcVal)^080h,w	;volatile
  4440  00CA  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4441  00CB  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4442  00CC  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4443  00CD  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4444  00CE  1903               	skipnz
  4445  00CF  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4446  00D0  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4447  00D1  3EAA               	addlw	low(0AAh)
  4448  00D2  00A0               	movwf	(?___wmul)^080h
  4449  00D3  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4450  00D4  1803               	skipnc
  4451  00D5  3E01               	addlw	1
  4452  00D6  3E00               	addlw	high(0AAh)
  4453  00D7  00A1               	movwf	1+(?___wmul)^080h
  4454  00D8  300A               	movlw	low(0Ah)
  4455  00D9  00A2               	movwf	0+(?___wmul)^080h+02h
  4456  00DA  3000               	movlw	high(0Ah)
  4457  00DB  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4458  00DC  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4459  00E1  1683               	bsf	status, 5	;RP0=1, select bank1
  4460  00E2  1303               	bcf	status, 6	;RP1=0, select bank1
  4461  00E3  0821               	movf	(1+(?___wmul))^080h,w
  4462  00E4  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4463  00E5  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4464  00E6  0820               	movf	(0+(?___wmul))^080h,w
  4465  00E7  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4466  00E8  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4467                           
  4468  00E9  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4469  00EE  1683               	bsf	status, 5	;RP0=1, select bank1
  4470  00EF  1303               	bcf	status, 6	;RP1=0, select bank1
  4471  00F0  0826               	movf	(0+(?___lwdiv))^080h,w
  4472  00F1  3E1E               	addlw	low(01Eh)
  4473  00F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4474  00F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4475  00F4  00D7               	movwf	(_distance)	;volatile
  4476  00F5  1683               	bsf	status, 5	;RP0=1, select bank1
  4477  00F6  1303               	bcf	status, 6	;RP1=0, select bank1
  4478  00F7  0827               	movf	(1+(?___lwdiv))^080h,w
  4479  00F8  1803               	skipnc
  4480  00F9  3E01               	addlw	1
  4481  00FA  3E00               	addlw	high(01Eh)
  4482  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  4483  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  4484  00FD  00D8               	movwf	1+(_distance)	;volatile
  4485                           	line	50
  4486                           ;infrared.c: 50: }
  4487  00FE  2A3D               	goto	l2976
  4488                           	line	51
  4489                           	
  4490  00FF                     l2967:	
  4491                           	
  4492  00FF                     l12002:	
  4493                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4494  00FF  3000               	movlw	high(06Bh)
  4495  0100  1683               	bsf	status, 5	;RP0=1, select bank1
  4496  0101  1303               	bcf	status, 6	;RP1=0, select bank1
  4497  0102  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4498  0103  306B               	movlw	low(06Bh)
  4499  0104  1903               	skipnz
  4500  0105  0268               	subwf	(_adcVal)^080h,w	;volatile
  4501  0106  1C03               	skipc
  4502  0107  2909               	goto	u5791
  4503  0108  290A               	goto	u5790
  4504  0109                     u5791:
  4505  0109  294D               	goto	l12008
  4506  010A                     u5790:
  4507                           	
  4508  010A                     l12004:	
  4509  010A  3000               	movlw	high(080h)
  4510  010B  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4511  010C  3080               	movlw	low(080h)
  4512  010D  1903               	skipnz
  4513  010E  0268               	subwf	(_adcVal)^080h,w	;volatile
  4514  010F  1803               	skipnc
  4515  0110  2912               	goto	u5801
  4516  0111  2913               	goto	u5800
  4517  0112                     u5801:
  4518  0112  294D               	goto	l12008
  4519  0113                     u5800:
  4520                           	line	53
  4521                           	
  4522  0113                     l12006:	
  4523                           ;infrared.c: 52: {
  4524                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  4525  0113  3015               	movlw	low(015h)
  4526  0114  00A6               	movwf	(?___lwdiv)^080h
  4527  0115  3000               	movlw	high(015h)
  4528  0116  00A7               	movwf	((?___lwdiv)^080h)+1
  4529  0117  0968               	comf	(_adcVal)^080h,w	;volatile
  4530  0118  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4531  0119  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4532  011A  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4533  011B  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4534  011C  1903               	skipnz
  4535  011D  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4536  011E  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4537  011F  3E80               	addlw	low(080h)
  4538  0120  00A0               	movwf	(?___wmul)^080h
  4539  0121  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4540  0122  1803               	skipnc
  4541  0123  3E01               	addlw	1
  4542  0124  3E00               	addlw	high(080h)
  4543  0125  00A1               	movwf	1+(?___wmul)^080h
  4544  0126  300A               	movlw	low(0Ah)
  4545  0127  00A2               	movwf	0+(?___wmul)^080h+02h
  4546  0128  3000               	movlw	high(0Ah)
  4547  0129  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4548  012A  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4549  012F  1683               	bsf	status, 5	;RP0=1, select bank1
  4550  0130  1303               	bcf	status, 6	;RP1=0, select bank1
  4551  0131  0821               	movf	(1+(?___wmul))^080h,w
  4552  0132  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4553  0133  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4554  0134  0820               	movf	(0+(?___wmul))^080h,w
  4555  0135  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4556  0136  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4557                           
  4558  0137  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4559  013C  1683               	bsf	status, 5	;RP0=1, select bank1
  4560  013D  1303               	bcf	status, 6	;RP1=0, select bank1
  4561  013E  0826               	movf	(0+(?___lwdiv))^080h,w
  4562  013F  3E28               	addlw	low(028h)
  4563  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  4564  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  4565  0142  00D7               	movwf	(_distance)	;volatile
  4566  0143  1683               	bsf	status, 5	;RP0=1, select bank1
  4567  0144  1303               	bcf	status, 6	;RP1=0, select bank1
  4568  0145  0827               	movf	(1+(?___lwdiv))^080h,w
  4569  0146  1803               	skipnc
  4570  0147  3E01               	addlw	1
  4571  0148  3E00               	addlw	high(028h)
  4572  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  4573  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  4574  014B  00D8               	movwf	1+(_distance)	;volatile
  4575                           	line	54
  4576                           ;infrared.c: 54: }
  4577  014C  2A3D               	goto	l2976
  4578                           	line	55
  4579                           	
  4580  014D                     l2969:	
  4581                           	
  4582  014D                     l12008:	
  4583                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  4584  014D  3000               	movlw	high(04Dh)
  4585  014E  1683               	bsf	status, 5	;RP0=1, select bank1
  4586  014F  1303               	bcf	status, 6	;RP1=0, select bank1
  4587  0150  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4588  0151  304D               	movlw	low(04Dh)
  4589  0152  1903               	skipnz
  4590  0153  0268               	subwf	(_adcVal)^080h,w	;volatile
  4591  0154  1C03               	skipc
  4592  0155  2957               	goto	u5811
  4593  0156  2958               	goto	u5810
  4594  0157                     u5811:
  4595  0157  299B               	goto	l12014
  4596  0158                     u5810:
  4597                           	
  4598  0158                     l12010:	
  4599  0158  3000               	movlw	high(06Bh)
  4600  0159  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4601  015A  306B               	movlw	low(06Bh)
  4602  015B  1903               	skipnz
  4603  015C  0268               	subwf	(_adcVal)^080h,w	;volatile
  4604  015D  1803               	skipnc
  4605  015E  2960               	goto	u5821
  4606  015F  2961               	goto	u5820
  4607  0160                     u5821:
  4608  0160  299B               	goto	l12014
  4609  0161                     u5820:
  4610                           	line	57
  4611                           	
  4612  0161                     l12012:	
  4613                           ;infrared.c: 56: {
  4614                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  4615  0161  301E               	movlw	low(01Eh)
  4616  0162  00A6               	movwf	(?___lwdiv)^080h
  4617  0163  3000               	movlw	high(01Eh)
  4618  0164  00A7               	movwf	((?___lwdiv)^080h)+1
  4619  0165  0968               	comf	(_adcVal)^080h,w	;volatile
  4620  0166  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4621  0167  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4622  0168  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4623  0169  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4624  016A  1903               	skipnz
  4625  016B  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4626  016C  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4627  016D  3E6B               	addlw	low(06Bh)
  4628  016E  00A0               	movwf	(?___wmul)^080h
  4629  016F  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4630  0170  1803               	skipnc
  4631  0171  3E01               	addlw	1
  4632  0172  3E00               	addlw	high(06Bh)
  4633  0173  00A1               	movwf	1+(?___wmul)^080h
  4634  0174  300A               	movlw	low(0Ah)
  4635  0175  00A2               	movwf	0+(?___wmul)^080h+02h
  4636  0176  3000               	movlw	high(0Ah)
  4637  0177  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4638  0178  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4639  017D  1683               	bsf	status, 5	;RP0=1, select bank1
  4640  017E  1303               	bcf	status, 6	;RP1=0, select bank1
  4641  017F  0821               	movf	(1+(?___wmul))^080h,w
  4642  0180  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4643  0181  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4644  0182  0820               	movf	(0+(?___wmul))^080h,w
  4645  0183  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4646  0184  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4647                           
  4648  0185  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4649  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  4650  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  4651  018C  0826               	movf	(0+(?___lwdiv))^080h,w
  4652  018D  3E32               	addlw	low(032h)
  4653  018E  1283               	bcf	status, 5	;RP0=0, select bank0
  4654  018F  1303               	bcf	status, 6	;RP1=0, select bank0
  4655  0190  00D7               	movwf	(_distance)	;volatile
  4656  0191  1683               	bsf	status, 5	;RP0=1, select bank1
  4657  0192  1303               	bcf	status, 6	;RP1=0, select bank1
  4658  0193  0827               	movf	(1+(?___lwdiv))^080h,w
  4659  0194  1803               	skipnc
  4660  0195  3E01               	addlw	1
  4661  0196  3E00               	addlw	high(032h)
  4662  0197  1283               	bcf	status, 5	;RP0=0, select bank0
  4663  0198  1303               	bcf	status, 6	;RP1=0, select bank0
  4664  0199  00D8               	movwf	1+(_distance)	;volatile
  4665                           	line	58
  4666                           ;infrared.c: 58: }
  4667  019A  2A3D               	goto	l2976
  4668                           	line	59
  4669                           	
  4670  019B                     l2971:	
  4671                           	
  4672  019B                     l12014:	
  4673                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  4674  019B  3000               	movlw	high(038h)
  4675  019C  1683               	bsf	status, 5	;RP0=1, select bank1
  4676  019D  1303               	bcf	status, 6	;RP1=0, select bank1
  4677  019E  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4678  019F  3038               	movlw	low(038h)
  4679  01A0  1903               	skipnz
  4680  01A1  0268               	subwf	(_adcVal)^080h,w	;volatile
  4681  01A2  1C03               	skipc
  4682  01A3  29A5               	goto	u5831
  4683  01A4  29A6               	goto	u5830
  4684  01A5                     u5831:
  4685  01A5  29E9               	goto	l12020
  4686  01A6                     u5830:
  4687                           	
  4688  01A6                     l12016:	
  4689  01A6  3000               	movlw	high(04Dh)
  4690  01A7  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4691  01A8  304D               	movlw	low(04Dh)
  4692  01A9  1903               	skipnz
  4693  01AA  0268               	subwf	(_adcVal)^080h,w	;volatile
  4694  01AB  1803               	skipnc
  4695  01AC  29AE               	goto	u5841
  4696  01AD  29AF               	goto	u5840
  4697  01AE                     u5841:
  4698  01AE  29E9               	goto	l12020
  4699  01AF                     u5840:
  4700                           	line	61
  4701                           	
  4702  01AF                     l12018:	
  4703                           ;infrared.c: 60: {
  4704                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  4705  01AF  3015               	movlw	low(015h)
  4706  01B0  00A6               	movwf	(?___lwdiv)^080h
  4707  01B1  3000               	movlw	high(015h)
  4708  01B2  00A7               	movwf	((?___lwdiv)^080h)+1
  4709  01B3  0968               	comf	(_adcVal)^080h,w	;volatile
  4710  01B4  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4711  01B5  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4712  01B6  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4713  01B7  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4714  01B8  1903               	skipnz
  4715  01B9  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4716  01BA  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4717  01BB  3E4D               	addlw	low(04Dh)
  4718  01BC  00A0               	movwf	(?___wmul)^080h
  4719  01BD  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4720  01BE  1803               	skipnc
  4721  01BF  3E01               	addlw	1
  4722  01C0  3E00               	addlw	high(04Dh)
  4723  01C1  00A1               	movwf	1+(?___wmul)^080h
  4724  01C2  300A               	movlw	low(0Ah)
  4725  01C3  00A2               	movwf	0+(?___wmul)^080h+02h
  4726  01C4  3000               	movlw	high(0Ah)
  4727  01C5  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4728  01C6  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4729  01CB  1683               	bsf	status, 5	;RP0=1, select bank1
  4730  01CC  1303               	bcf	status, 6	;RP1=0, select bank1
  4731  01CD  0821               	movf	(1+(?___wmul))^080h,w
  4732  01CE  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4733  01CF  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4734  01D0  0820               	movf	(0+(?___wmul))^080h,w
  4735  01D1  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4736  01D2  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4737                           
  4738  01D3  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4739  01D8  1683               	bsf	status, 5	;RP0=1, select bank1
  4740  01D9  1303               	bcf	status, 6	;RP1=0, select bank1
  4741  01DA  0826               	movf	(0+(?___lwdiv))^080h,w
  4742  01DB  3E3C               	addlw	low(03Ch)
  4743  01DC  1283               	bcf	status, 5	;RP0=0, select bank0
  4744  01DD  1303               	bcf	status, 6	;RP1=0, select bank0
  4745  01DE  00D7               	movwf	(_distance)	;volatile
  4746  01DF  1683               	bsf	status, 5	;RP0=1, select bank1
  4747  01E0  1303               	bcf	status, 6	;RP1=0, select bank1
  4748  01E1  0827               	movf	(1+(?___lwdiv))^080h,w
  4749  01E2  1803               	skipnc
  4750  01E3  3E01               	addlw	1
  4751  01E4  3E00               	addlw	high(03Ch)
  4752  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4753  01E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4754  01E7  00D8               	movwf	1+(_distance)	;volatile
  4755                           	line	62
  4756                           ;infrared.c: 62: }
  4757  01E8  2A3D               	goto	l2976
  4758                           	line	63
  4759                           	
  4760  01E9                     l2973:	
  4761                           	
  4762  01E9                     l12020:	
  4763                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  4764  01E9  3000               	movlw	high(02Bh)
  4765  01EA  1683               	bsf	status, 5	;RP0=1, select bank1
  4766  01EB  1303               	bcf	status, 6	;RP1=0, select bank1
  4767  01EC  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4768  01ED  302B               	movlw	low(02Bh)
  4769  01EE  1903               	skipnz
  4770  01EF  0268               	subwf	(_adcVal)^080h,w	;volatile
  4771  01F0  1C03               	skipc
  4772  01F1  29F3               	goto	u5851
  4773  01F2  29F4               	goto	u5850
  4774  01F3                     u5851:
  4775  01F3  2A3D               	goto	l2976
  4776  01F4                     u5850:
  4777                           	
  4778  01F4                     l12022:	
  4779  01F4  3000               	movlw	high(038h)
  4780  01F5  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  4781  01F6  3038               	movlw	low(038h)
  4782  01F7  1903               	skipnz
  4783  01F8  0268               	subwf	(_adcVal)^080h,w	;volatile
  4784  01F9  1803               	skipnc
  4785  01FA  29FC               	goto	u5861
  4786  01FB  29FD               	goto	u5860
  4787  01FC                     u5861:
  4788  01FC  2A3D               	goto	l2976
  4789  01FD                     u5860:
  4790                           	line	65
  4791                           	
  4792  01FD                     l12024:	
  4793                           ;infrared.c: 64: {
  4794                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  4795  01FD  300D               	movlw	low(0Dh)
  4796  01FE  00A6               	movwf	(?___lwdiv)^080h
  4797  01FF  3000               	movlw	high(0Dh)
  4798  0200  00A7               	movwf	((?___lwdiv)^080h)+1
  4799  0201  0968               	comf	(_adcVal)^080h,w	;volatile
  4800  0202  00AE               	movwf	(??_ADCconvert+0)^080h+0
  4801  0203  0969               	comf	(_adcVal+1)^080h,w	;volatile
  4802  0204  00AF               	movwf	((??_ADCconvert+0)^080h+0+1)
  4803  0205  0AAE               	incf	(??_ADCconvert+0)^080h+0,f
  4804  0206  1903               	skipnz
  4805  0207  0AAF               	incf	((??_ADCconvert+0)^080h+0+1),f
  4806  0208  082E               	movf	0+(??_ADCconvert+0)^080h+0,w
  4807  0209  3E38               	addlw	low(038h)
  4808  020A  00A0               	movwf	(?___wmul)^080h
  4809  020B  082F               	movf	1+(??_ADCconvert+0)^080h+0,w
  4810  020C  1803               	skipnc
  4811  020D  3E01               	addlw	1
  4812  020E  3E00               	addlw	high(038h)
  4813  020F  00A1               	movwf	1+(?___wmul)^080h
  4814  0210  300A               	movlw	low(0Ah)
  4815  0211  00A2               	movwf	0+(?___wmul)^080h+02h
  4816  0212  3000               	movlw	high(0Ah)
  4817  0213  00A3               	movwf	(0+(?___wmul)^080h+02h)+1
  4818  0214  160A  118A  25E6   	fcall	___wmul
              120A  118A         
  4819  0219  1683               	bsf	status, 5	;RP0=1, select bank1
  4820  021A  1303               	bcf	status, 6	;RP1=0, select bank1
  4821  021B  0821               	movf	(1+(?___wmul))^080h,w
  4822  021C  01A9               	clrf	1+(?___lwdiv)^080h+02h
  4823  021D  07A9               	addwf	1+(?___lwdiv)^080h+02h
  4824  021E  0820               	movf	(0+(?___wmul))^080h,w
  4825  021F  01A8               	clrf	0+(?___lwdiv)^080h+02h
  4826  0220  07A8               	addwf	0+(?___lwdiv)^080h+02h
  4827                           
  4828  0221  120A  158A  20C4   	fcall	___lwdiv
              120A  118A         
  4829  0226  1683               	bsf	status, 5	;RP0=1, select bank1
  4830  0227  1303               	bcf	status, 6	;RP1=0, select bank1
  4831  0228  0826               	movf	(0+(?___lwdiv))^080h,w
  4832  0229  3E46               	addlw	low(046h)
  4833  022A  1283               	bcf	status, 5	;RP0=0, select bank0
  4834  022B  1303               	bcf	status, 6	;RP1=0, select bank0
  4835  022C  00D7               	movwf	(_distance)	;volatile
  4836  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  4837  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  4838  022F  0827               	movf	(1+(?___lwdiv))^080h,w
  4839  0230  1803               	skipnc
  4840  0231  3E01               	addlw	1
  4841  0232  3E00               	addlw	high(046h)
  4842  0233  1283               	bcf	status, 5	;RP0=0, select bank0
  4843  0234  1303               	bcf	status, 6	;RP1=0, select bank0
  4844  0235  00D8               	movwf	1+(_distance)	;volatile
  4845  0236  2A3D               	goto	l2976
  4846                           	line	66
  4847                           	
  4848  0237                     l2975:	
  4849  0237  2A3D               	goto	l2976
  4850                           	line	67
  4851                           	
  4852  0238                     l2974:	
  4853  0238  2A3D               	goto	l2976
  4854                           	
  4855  0239                     l2972:	
  4856  0239  2A3D               	goto	l2976
  4857                           	
  4858  023A                     l2970:	
  4859  023A  2A3D               	goto	l2976
  4860                           	
  4861  023B                     l2968:	
  4862  023B  2A3D               	goto	l2976
  4863                           	
  4864  023C                     l2966:	
  4865  023C  2A3D               	goto	l2976
  4866                           	
  4867  023D                     l2964:	
  4868                           	
  4869  023D                     l2976:	
  4870  023D  0008               	return
  4871                           	opt stack 0
  4872                           GLOBAL	__end_of_ADCconvert
  4873  023E                     	__end_of_ADCconvert:
  4874 ;; =============== function _ADCconvert ends ============
  4875                           
  4876                           	signat	_ADCconvert,88
  4877                           	global	_robotTurn
  4878                           psect	text1142,local,class=CODE,delta=2
  4879                           global __ptext1142
  4880  0CA6                     __ptext1142:
  4881                           
  4882 ;; *************** function _robotTurn *****************
  4883 ;; Defined at:
  4884 ;;		line 74 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  distance        2    2[BANK1 ] int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;		None               void
  4891 ;; Registers used:
  4892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4898 ;;      Params:         0       0       2       0       0
  4899 ;;      Locals:         0       0       0       0       0
  4900 ;;      Temps:          0       0       1       0       0
  4901 ;;      Totals:         0       0       3       0       0
  4902 ;;Total ram usage:        3 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    6
  4905 ;; This function calls:
  4906 ;;		_ser_putch
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           psect	text1142
  4912                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4913                           	line	74
  4914                           	global	__size_of_robotTurn
  4915  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  4916                           	
  4917  0CA6                     _robotTurn:	
  4918                           	opt	stack 1
  4919                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4920                           	line	77
  4921                           	
  4922  0CA6                     l11974:	
  4923                           ;robot.c: 77: turnlowByte = (unsigned char) (distance) ;
  4924  0CA6  1683               	bsf	status, 5	;RP0=1, select bank1
  4925  0CA7  1303               	bcf	status, 6	;RP1=0, select bank1
  4926  0CA8  0822               	movf	(robotTurn@distance)^080h,w
  4927  0CA9  00A4               	movwf	(??_robotTurn+0)^080h+0
  4928  0CAA  0824               	movf	(??_robotTurn+0)^080h+0,w
  4929  0CAB  1283               	bcf	status, 5	;RP0=0, select bank0
  4930  0CAC  1303               	bcf	status, 6	;RP1=0, select bank0
  4931  0CAD  00E9               	movwf	(_turnlowByte)
  4932                           	line	78
  4933                           	
  4934  0CAE                     l11976:	
  4935                           ;robot.c: 78: turnhighByte = (unsigned char) (distance >> 8);
  4936  0CAE  1683               	bsf	status, 5	;RP0=1, select bank1
  4937  0CAF  1303               	bcf	status, 6	;RP1=0, select bank1
  4938  0CB0  0823               	movf	(robotTurn@distance+1)^080h,w
  4939  0CB1  00A4               	movwf	(??_robotTurn+0)^080h+0
  4940  0CB2  0824               	movf	(??_robotTurn+0)^080h+0,w
  4941  0CB3  1283               	bcf	status, 5	;RP0=0, select bank0
  4942  0CB4  1303               	bcf	status, 6	;RP1=0, select bank0
  4943  0CB5  00E8               	movwf	(_turnhighByte)
  4944                           	line	79
  4945                           	
  4946  0CB6                     l11978:	
  4947                           ;robot.c: 79: if (distance >= 0)
  4948  0CB6  1683               	bsf	status, 5	;RP0=1, select bank1
  4949  0CB7  1303               	bcf	status, 6	;RP1=0, select bank1
  4950  0CB8  1BA3               	btfsc	(robotTurn@distance+1)^080h,7
  4951  0CB9  2CBB               	goto	u5721
  4952  0CBA  2CBC               	goto	u5720
  4953  0CBB                     u5721:
  4954  0CBB  2CDB               	goto	l11982
  4955  0CBC                     u5720:
  4956                           	line	81
  4957                           	
  4958  0CBC                     l11980:	
  4959                           ;robot.c: 80: {
  4960                           ;robot.c: 81: ser_putch(137);
  4961  0CBC  3089               	movlw	(089h)
  4962  0CBD  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4963                           	line	83
  4964                           ;robot.c: 83: ser_putch(0);
  4965  0CC2  3000               	movlw	(0)
  4966  0CC3  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4967                           	line	85
  4968                           ;robot.c: 85: ser_putch(100);
  4969  0CC8  3064               	movlw	(064h)
  4970  0CC9  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4971                           	line	87
  4972                           ;robot.c: 87: ser_putch(0);
  4973  0CCE  3000               	movlw	(0)
  4974  0CCF  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4975                           	line	89
  4976                           ;robot.c: 89: ser_putch(1);
  4977  0CD4  3001               	movlw	(01h)
  4978  0CD5  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4979                           	line	90
  4980                           ;robot.c: 90: }
  4981  0CDA  2CF9               	goto	l6700
  4982                           	line	91
  4983                           	
  4984  0CDB                     l6699:	
  4985                           	line	93
  4986                           	
  4987  0CDB                     l11982:	
  4988                           ;robot.c: 91: else
  4989                           ;robot.c: 92: {
  4990                           ;robot.c: 93: ser_putch(137);
  4991  0CDB  3089               	movlw	(089h)
  4992  0CDC  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4993                           	line	95
  4994                           ;robot.c: 95: ser_putch(0);
  4995  0CE1  3000               	movlw	(0)
  4996  0CE2  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  4997                           	line	97
  4998                           ;robot.c: 97: ser_putch(100);
  4999  0CE7  3064               	movlw	(064h)
  5000  0CE8  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5001                           	line	99
  5002                           ;robot.c: 99: ser_putch(255);
  5003  0CED  30FF               	movlw	(0FFh)
  5004  0CEE  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5005                           	line	101
  5006                           ;robot.c: 101: ser_putch(255);
  5007  0CF3  30FF               	movlw	(0FFh)
  5008  0CF4  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5009                           	line	102
  5010                           	
  5011  0CF9                     l6700:	
  5012                           	line	103
  5013                           ;robot.c: 102: }
  5014                           ;robot.c: 103: ser_putch(157);
  5015  0CF9  309D               	movlw	(09Dh)
  5016  0CFA  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5017                           	line	105
  5018                           ;robot.c: 105: ser_putch(turnhighByte);
  5019  0CFF  1283               	bcf	status, 5	;RP0=0, select bank0
  5020  0D00  1303               	bcf	status, 6	;RP1=0, select bank0
  5021  0D01  0868               	movf	(_turnhighByte),w
  5022  0D02  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5023                           	line	107
  5024                           ;robot.c: 107: ser_putch(turnlowByte);
  5025  0D07  1283               	bcf	status, 5	;RP0=0, select bank0
  5026  0D08  1303               	bcf	status, 6	;RP1=0, select bank0
  5027  0D09  0869               	movf	(_turnlowByte),w
  5028  0D0A  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5029                           	line	109
  5030                           ;robot.c: 109: ser_putch(137);
  5031  0D0F  3089               	movlw	(089h)
  5032  0D10  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5033                           	line	111
  5034                           ;robot.c: 111: ser_putch(0);
  5035  0D15  3000               	movlw	(0)
  5036  0D16  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5037                           	line	113
  5038                           ;robot.c: 113: ser_putch(0);
  5039  0D1B  3000               	movlw	(0)
  5040  0D1C  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5041                           	line	115
  5042                           ;robot.c: 115: ser_putch(0);
  5043  0D21  3000               	movlw	(0)
  5044  0D22  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5045                           	line	117
  5046                           ;robot.c: 117: ser_putch(0);
  5047  0D27  3000               	movlw	(0)
  5048  0D28  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5049                           	line	119
  5050                           	
  5051  0D2D                     l6701:	
  5052  0D2D  0008               	return
  5053                           	opt stack 0
  5054                           GLOBAL	__end_of_robotTurn
  5055  0D2E                     	__end_of_robotTurn:
  5056 ;; =============== function _robotTurn ends ============
  5057                           
  5058                           	signat	_robotTurn,4216
  5059                           	global	_robotMove
  5060                           psect	text1143,local,class=CODE,delta=2
  5061                           global __ptext1143
  5062  0C26                     __ptext1143:
  5063                           
  5064 ;; *************** function _robotMove *****************
  5065 ;; Defined at:
  5066 ;;		line 27 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  distance        2    2[BANK1 ] int 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;		None               void
  5073 ;; Registers used:
  5074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5080 ;;      Params:         0       0       2       0       0
  5081 ;;      Locals:         0       0       0       0       0
  5082 ;;      Temps:          0       0       1       0       0
  5083 ;;      Totals:         0       0       3       0       0
  5084 ;;Total ram usage:        3 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    6
  5087 ;; This function calls:
  5088 ;;		_ser_putch
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           psect	text1143
  5094                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5095                           	line	27
  5096                           	global	__size_of_robotMove
  5097  0080                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5098                           	
  5099  0C26                     _robotMove:	
  5100                           	opt	stack 1
  5101                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5102                           	line	29
  5103                           	
  5104  0C26                     l11964:	
  5105                           ;robot.c: 29: lowByte = (unsigned char) (distance) ;
  5106  0C26  1683               	bsf	status, 5	;RP0=1, select bank1
  5107  0C27  1303               	bcf	status, 6	;RP1=0, select bank1
  5108  0C28  0822               	movf	(robotMove@distance)^080h,w
  5109  0C29  00A4               	movwf	(??_robotMove+0)^080h+0
  5110  0C2A  0824               	movf	(??_robotMove+0)^080h+0,w
  5111  0C2B  00EF               	movwf	(_lowByte)^080h
  5112                           	line	30
  5113                           	
  5114  0C2C                     l11966:	
  5115                           ;robot.c: 30: highByte = (unsigned char) (distance >> 8);
  5116  0C2C  0823               	movf	(robotMove@distance+1)^080h,w
  5117  0C2D  00A4               	movwf	(??_robotMove+0)^080h+0
  5118  0C2E  0824               	movf	(??_robotMove+0)^080h+0,w
  5119  0C2F  00EE               	movwf	(_highByte)^080h
  5120                           	line	31
  5121                           	
  5122  0C30                     l11968:	
  5123                           ;robot.c: 31: if (distance >= 0)
  5124  0C30  1BA3               	btfsc	(robotMove@distance+1)^080h,7
  5125  0C31  2C33               	goto	u5711
  5126  0C32  2C34               	goto	u5710
  5127  0C33                     u5711:
  5128  0C33  2C53               	goto	l11972
  5129  0C34                     u5710:
  5130                           	line	33
  5131                           	
  5132  0C34                     l11970:	
  5133                           ;robot.c: 32: {
  5134                           ;robot.c: 33: ser_putch(137);
  5135  0C34  3089               	movlw	(089h)
  5136  0C35  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5137                           	line	35
  5138                           ;robot.c: 35: ser_putch(0);
  5139  0C3A  3000               	movlw	(0)
  5140  0C3B  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5141                           	line	37
  5142                           ;robot.c: 37: ser_putch(200);
  5143  0C40  30C8               	movlw	(0C8h)
  5144  0C41  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5145                           	line	39
  5146                           ;robot.c: 39: ser_putch(128);
  5147  0C46  3080               	movlw	(080h)
  5148  0C47  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5149                           	line	41
  5150                           ;robot.c: 41: ser_putch(0);
  5151  0C4C  3000               	movlw	(0)
  5152  0C4D  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5153                           	line	42
  5154                           ;robot.c: 42: }
  5155  0C52  2C71               	goto	l6695
  5156                           	line	43
  5157                           	
  5158  0C53                     l6694:	
  5159                           	line	45
  5160                           	
  5161  0C53                     l11972:	
  5162                           ;robot.c: 43: else
  5163                           ;robot.c: 44: {
  5164                           ;robot.c: 45: ser_putch(137);
  5165  0C53  3089               	movlw	(089h)
  5166  0C54  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5167                           	line	47
  5168                           ;robot.c: 47: ser_putch(0xff);
  5169  0C59  30FF               	movlw	(0FFh)
  5170  0C5A  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5171                           	line	49
  5172                           ;robot.c: 49: ser_putch(0x38);
  5173  0C5F  3038               	movlw	(038h)
  5174  0C60  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5175                           	line	51
  5176                           ;robot.c: 51: ser_putch(128);
  5177  0C65  3080               	movlw	(080h)
  5178  0C66  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5179                           	line	53
  5180                           ;robot.c: 53: ser_putch(0);
  5181  0C6B  3000               	movlw	(0)
  5182  0C6C  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5183                           	line	54
  5184                           	
  5185  0C71                     l6695:	
  5186                           	line	55
  5187                           ;robot.c: 54: }
  5188                           ;robot.c: 55: ser_putch(156);
  5189  0C71  309C               	movlw	(09Ch)
  5190  0C72  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5191                           	line	57
  5192                           ;robot.c: 57: ser_putch(highByte);
  5193  0C77  1683               	bsf	status, 5	;RP0=1, select bank1
  5194  0C78  1303               	bcf	status, 6	;RP1=0, select bank1
  5195  0C79  086E               	movf	(_highByte)^080h,w
  5196  0C7A  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5197                           	line	59
  5198                           ;robot.c: 59: ser_putch(lowByte);
  5199  0C7F  1683               	bsf	status, 5	;RP0=1, select bank1
  5200  0C80  1303               	bcf	status, 6	;RP1=0, select bank1
  5201  0C81  086F               	movf	(_lowByte)^080h,w
  5202  0C82  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5203                           	line	61
  5204                           ;robot.c: 61: ser_putch(137);
  5205  0C87  3089               	movlw	(089h)
  5206  0C88  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5207                           	line	63
  5208                           ;robot.c: 63: ser_putch(0);
  5209  0C8D  3000               	movlw	(0)
  5210  0C8E  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5211                           	line	65
  5212                           ;robot.c: 65: ser_putch(0);
  5213  0C93  3000               	movlw	(0)
  5214  0C94  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5215                           	line	67
  5216                           ;robot.c: 67: ser_putch(0);
  5217  0C99  3000               	movlw	(0)
  5218  0C9A  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5219                           	line	69
  5220                           ;robot.c: 69: ser_putch(0);
  5221  0C9F  3000               	movlw	(0)
  5222  0CA0  160A  118A  2612   	fcall	_ser_putch
              120A  158A         
  5223                           	line	71
  5224                           	
  5225  0CA5                     l6696:	
  5226  0CA5  0008               	return
  5227                           	opt stack 0
  5228                           GLOBAL	__end_of_robotMove
  5229  0CA6                     	__end_of_robotMove:
  5230 ;; =============== function _robotMove ends ============
  5231                           
  5232                           	signat	_robotMove,4216
  5233                           	global	_rotate
  5234                           psect	text1144,local,class=CODE,delta=2
  5235                           global __ptext1144
  5236  0A10                     __ptext1144:
  5237                           
  5238 ;; *************** function _rotate *****************
  5239 ;; Defined at:
  5240 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  steps           1    wreg     unsigned char 
  5243 ;;  direction       1    3[BANK1 ] unsigned char 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  steps           1    6[BANK1 ] unsigned char 
  5246 ;;  i               1    7[BANK1 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;		None               void
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, pclath, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       0       1       0       0
  5257 ;;      Locals:         0       0       2       0       0
  5258 ;;      Temps:          0       0       2       0       0
  5259 ;;      Totals:         0       0       5       0       0
  5260 ;;Total ram usage:        5 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    6
  5263 ;; This function calls:
  5264 ;;		_spi_transfer
  5265 ;; This function is called by:
  5266 ;;		_calibrateIR
  5267 ;;		_scan360
  5268 ;;		_main
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           psect	text1144
  5272                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5273                           	line	48
  5274                           	global	__size_of_rotate
  5275  0057                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5276                           	
  5277  0A10                     _rotate:	
  5278                           	opt	stack 1
  5279                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5280                           ;rotate@steps stored from wreg
  5281                           	line	50
  5282  0A10  1683               	bsf	status, 5	;RP0=1, select bank1
  5283  0A11  1303               	bcf	status, 6	;RP1=0, select bank1
  5284  0A12  00A6               	movwf	(rotate@steps)^080h
  5285                           	
  5286  0A13                     l11932:	
  5287                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5288  0A13  1283               	bcf	status, 5	;RP0=0, select bank0
  5289  0A14  1303               	bcf	status, 6	;RP1=0, select bank0
  5290  0A15  1407               	bsf	(56/8),(56)&7
  5291  0A16  1487               	bsf	(57/8),(57)&7
  5292                           	line	51
  5293                           	
  5294  0A17                     l11934:	
  5295                           ;steppermotor.c: 51: if (direction == 0)
  5296  0A17  1683               	bsf	status, 5	;RP0=1, select bank1
  5297  0A18  1303               	bcf	status, 6	;RP1=0, select bank1
  5298  0A19  08A3               	movf	(rotate@direction)^080h,f
  5299  0A1A  1D03               	skipz
  5300  0A1B  2A1D               	goto	u5691
  5301  0A1C  2A1E               	goto	u5690
  5302  0A1D                     u5691:
  5303  0A1D  2A25               	goto	l11938
  5304  0A1E                     u5690:
  5305                           	line	52
  5306                           	
  5307  0A1E                     l11936:	
  5308                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5309  0A1E  300F               	movlw	(0Fh)
  5310  0A1F  160A  118A  24AA   	fcall	_spi_transfer
              120A  158A         
  5311  0A24  2A2C               	goto	l11940
  5312                           	line	53
  5313                           	
  5314  0A25                     l3677:	
  5315                           	line	54
  5316                           	
  5317  0A25                     l11938:	
  5318                           ;steppermotor.c: 53: else
  5319                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5320  0A25  300D               	movlw	(0Dh)
  5321  0A26  160A  118A  24AA   	fcall	_spi_transfer
              120A  158A         
  5322  0A2B  2A2C               	goto	l11940
  5323                           	
  5324  0A2C                     l3678:	
  5325                           	line	55
  5326                           	
  5327  0A2C                     l11940:	
  5328                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5329  0A2C  1283               	bcf	status, 5	;RP0=0, select bank0
  5330  0A2D  1303               	bcf	status, 6	;RP1=0, select bank0
  5331  0A2E  1007               	bcf	(56/8),(56)&7
  5332                           	
  5333  0A2F                     l11942:	
  5334  0A2F  1087               	bcf	(57/8),(57)&7
  5335                           	line	56
  5336                           	
  5337  0A30                     l11944:	
  5338                           ;steppermotor.c: 56: for (unsigned char i = 0; i < steps; i++)
  5339  0A30  1683               	bsf	status, 5	;RP0=1, select bank1
  5340  0A31  1303               	bcf	status, 6	;RP1=0, select bank1
  5341  0A32  01A7               	clrf	(rotate@i)^080h
  5342  0A33  2A4D               	goto	l11950
  5343                           	line	57
  5344                           	
  5345  0A34                     l3680:	
  5346                           	line	58
  5347                           ;steppermotor.c: 57: {
  5348                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5349  0A34  1283               	bcf	status, 5	;RP0=0, select bank0
  5350  0A35  1303               	bcf	status, 6	;RP1=0, select bank0
  5351  0A36  1507               	bsf	(58/8),(58)&7
  5352  0A37  0000               	nop
  5353  0A38  1283               	bcf	status, 5	;RP0=0, select bank0
  5354  0A39  1303               	bcf	status, 6	;RP1=0, select bank0
  5355  0A3A  1107               	bcf	(58/8),(58)&7
  5356                           	line	59
  5357                           	
  5358  0A3B                     l11946:	
  5359                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5360                           	opt asmopt_off
  5361  0A3B  3062               movlw	98
  5362  0A3C  1683               	bsf	status, 5	;RP0=1, select bank1
  5363  0A3D  1303               	bcf	status, 6	;RP1=0, select bank1
  5364  0A3E  00A5               movwf	((??_rotate+0)^080h+0+1),f
  5365  0A3F  3065               	movlw	101
  5366  0A40  00A4               movwf	((??_rotate+0)^080h+0),f
  5367  0A41                     u6057:
  5368  0A41  0BA4               	decfsz	((??_rotate+0)^080h+0),f
  5369  0A42  2A41               	goto	u6057
  5370  0A43  0BA5               	decfsz	((??_rotate+0)^080h+0+1),f
  5371  0A44  2A41               	goto	u6057
  5372  0A45  2A46               	nop2
  5373                           opt asmopt_on
  5374                           
  5375                           	line	56
  5376                           	
  5377  0A46                     l11948:	
  5378  0A46  3001               	movlw	(01h)
  5379  0A47  1683               	bsf	status, 5	;RP0=1, select bank1
  5380  0A48  1303               	bcf	status, 6	;RP1=0, select bank1
  5381  0A49  00A4               	movwf	(??_rotate+0)^080h+0
  5382  0A4A  0824               	movf	(??_rotate+0)^080h+0,w
  5383  0A4B  07A7               	addwf	(rotate@i)^080h,f
  5384  0A4C  2A4D               	goto	l11950
  5385                           	
  5386  0A4D                     l3679:	
  5387                           	
  5388  0A4D                     l11950:	
  5389  0A4D  0826               	movf	(rotate@steps)^080h,w
  5390  0A4E  0227               	subwf	(rotate@i)^080h,w
  5391  0A4F  1C03               	skipc
  5392  0A50  2A52               	goto	u5701
  5393  0A51  2A53               	goto	u5700
  5394  0A52                     u5701:
  5395  0A52  2A34               	goto	l3680
  5396  0A53                     u5700:
  5397                           	
  5398  0A53                     l3681:	
  5399                           	line	61
  5400                           ;steppermotor.c: 60: }
  5401                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5402  0A53  1283               	bcf	status, 5	;RP0=0, select bank0
  5403  0A54  1303               	bcf	status, 6	;RP1=0, select bank0
  5404  0A55  1407               	bsf	(56/8),(56)&7
  5405  0A56  1487               	bsf	(57/8),(57)&7
  5406                           	line	62
  5407                           	
  5408  0A57                     l11952:	
  5409                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5410  0A57  3000               	movlw	(0)
  5411  0A58  160A  118A  24AA   	fcall	_spi_transfer
              120A  158A         
  5412                           	line	63
  5413                           	
  5414  0A5D                     l11954:	
  5415                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5416  0A5D  1283               	bcf	status, 5	;RP0=0, select bank0
  5417  0A5E  1303               	bcf	status, 6	;RP1=0, select bank0
  5418  0A5F  1007               	bcf	(56/8),(56)&7
  5419                           	
  5420  0A60                     l11956:	
  5421  0A60  1087               	bcf	(57/8),(57)&7
  5422                           	line	64
  5423                           	
  5424  0A61                     l11958:	
  5425                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5426  0A61  1507               	bsf	(58/8),(58)&7
  5427                           	
  5428  0A62                     l11960:	
  5429  0A62  0000               	nop
  5430                           	
  5431  0A63                     l11962:	
  5432  0A63  1283               	bcf	status, 5	;RP0=0, select bank0
  5433  0A64  1303               	bcf	status, 6	;RP1=0, select bank0
  5434  0A65  1107               	bcf	(58/8),(58)&7
  5435                           	line	65
  5436                           	
  5437  0A66                     l3682:	
  5438  0A66  0008               	return
  5439                           	opt stack 0
  5440                           GLOBAL	__end_of_rotate
  5441  0A67                     	__end_of_rotate:
  5442 ;; =============== function _rotate ends ============
  5443                           
  5444                           	signat	_rotate,8312
  5445                           	global	_robo_init
  5446                           psect	text1145,local,class=CODE,delta=2
  5447                           global __ptext1145
  5448  145A                     __ptext1145:
  5449                           
  5450 ;; *************** function _robo_init *****************
  5451 ;; Defined at:
  5452 ;;		line 9 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;		None               void
  5459 ;; Registers used:
  5460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5466 ;;      Params:         0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    6
  5473 ;; This function calls:
  5474 ;;		_ser_putch
  5475 ;; This function is called by:
  5476 ;;		_init
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           psect	text1145
  5480                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5481                           	line	9
  5482                           	global	__size_of_robo_init
  5483  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5484                           	
  5485  145A                     _robo_init:	
  5486                           	opt	stack 0
  5487                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5488                           	line	10
  5489                           	
  5490  145A                     l11930:	
  5491                           ;robot.c: 10: ser_putch(128);
  5492  145A  3080               	movlw	(080h)
  5493  145B  160A  118A  2612   	fcall	_ser_putch
              160A  118A         
  5494                           	line	11
  5495                           ;robot.c: 11: ser_putch(132);
  5496  1460  3084               	movlw	(084h)
  5497  1461  160A  118A  2612   	fcall	_ser_putch
              160A  118A         
  5498                           	line	14
  5499                           ;robot.c: 14: ser_putch (142);
  5500  1466  308E               	movlw	(08Eh)
  5501  1467  160A  118A  2612   	fcall	_ser_putch
              160A  118A         
  5502                           	line	15
  5503                           ;robot.c: 15: ser_putch (19);
  5504  146C  3013               	movlw	(013h)
  5505  146D  160A  118A  2612   	fcall	_ser_putch
              160A  118A         
  5506                           	line	16
  5507                           	
  5508  1472                     l6686:	
  5509  1472  0008               	return
  5510                           	opt stack 0
  5511                           GLOBAL	__end_of_robo_init
  5512  1473                     	__end_of_robo_init:
  5513 ;; =============== function _robo_init ends ============
  5514                           
  5515                           	signat	_robo_init,88
  5516                           	global	_lcd_write_data
  5517                           psect	text1146,local,class=CODE,delta=2
  5518                           global __ptext1146
  5519  1473                     __ptext1146:
  5520                           
  5521 ;; *************** function _lcd_write_data *****************
  5522 ;; Defined at:
  5523 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  databyte        1    wreg     unsigned char 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  databyte        1    2[BANK1 ] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;		None               void
  5530 ;; Registers used:
  5531 ;;		wreg
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       0       0       0
  5538 ;;      Locals:         0       0       1       0       0
  5539 ;;      Temps:          0       0       2       0       0
  5540 ;;      Totals:         0       0       3       0       0
  5541 ;;Total ram usage:        3 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    5
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_lcd_write_string
  5548 ;;		_lcd_write_2_digit_bcd
  5549 ;;		_lcd_write_3_digit_bcd
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           psect	text1146
  5553                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5554                           	line	30
  5555                           	global	__size_of_lcd_write_data
  5556  001B                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5557                           	
  5558  1473                     _lcd_write_data:	
  5559 ;; hardware stack exceeded
  5560                           	opt	stack 0
  5561                           ; Regs used in _lcd_write_data: [wreg]
  5562                           ;lcd_write_data@databyte stored from wreg
  5563  1473  1683               	bsf	status, 5	;RP0=1, select bank1
  5564  1474  1303               	bcf	status, 6	;RP1=0, select bank1
  5565  1475  00A2               	movwf	(lcd_write_data@databyte)^080h
  5566                           	line	31
  5567                           	
  5568  1476                     l11922:	
  5569                           ;lcd.c: 31: RE2 = 0;
  5570  1476  1283               	bcf	status, 5	;RP0=0, select bank0
  5571  1477  1303               	bcf	status, 6	;RP1=0, select bank0
  5572  1478  1109               	bcf	(74/8),(74)&7
  5573                           	line	32
  5574                           ;lcd.c: 32: RE1 = 0;
  5575  1479  1089               	bcf	(73/8),(73)&7
  5576                           	line	33
  5577                           ;lcd.c: 33: RE0 = 1;
  5578  147A  1409               	bsf	(72/8),(72)&7
  5579                           	line	34
  5580                           	
  5581  147B                     l11924:	
  5582                           ;lcd.c: 34: PORTD = databyte;
  5583  147B  1683               	bsf	status, 5	;RP0=1, select bank1
  5584  147C  1303               	bcf	status, 6	;RP1=0, select bank1
  5585  147D  0822               	movf	(lcd_write_data@databyte)^080h,w
  5586  147E  1283               	bcf	status, 5	;RP0=0, select bank0
  5587  147F  1303               	bcf	status, 6	;RP1=0, select bank0
  5588  1480  0088               	movwf	(8)	;volatile
  5589                           	line	35
  5590                           	
  5591  1481                     l11926:	
  5592                           ;lcd.c: 35: RE2 = 1;
  5593  1481  1509               	bsf	(74/8),(74)&7
  5594                           	line	36
  5595                           	
  5596  1482                     l11928:	
  5597                           ;lcd.c: 36: RE2 = 0;
  5598  1482  1109               	bcf	(74/8),(74)&7
  5599                           	line	37
  5600                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5601                           	opt asmopt_off
  5602  1483  3007               movlw	7
  5603  1484  1683               	bsf	status, 5	;RP0=1, select bank1
  5604  1485  1303               	bcf	status, 6	;RP1=0, select bank1
  5605  1486  00A1               movwf	((??_lcd_write_data+0)^080h+0+1),f
  5606  1487  307D               	movlw	125
  5607  1488  00A0               movwf	((??_lcd_write_data+0)^080h+0),f
  5608  1489                     u6067:
  5609  1489  0BA0               	decfsz	((??_lcd_write_data+0)^080h+0),f
  5610  148A  2C89               	goto	u6067
  5611  148B  0BA1               	decfsz	((??_lcd_write_data+0)^080h+0+1),f
  5612  148C  2C89               	goto	u6067
  5613                           opt asmopt_on
  5614                           
  5615                           	line	38
  5616                           	
  5617  148D                     l1402:	
  5618  148D  0008               	return
  5619                           	opt stack 0
  5620                           GLOBAL	__end_of_lcd_write_data
  5621  148E                     	__end_of_lcd_write_data:
  5622 ;; =============== function _lcd_write_data ends ============
  5623                           
  5624                           	signat	_lcd_write_data,4216
  5625                           	global	_lcd_write_control
  5626                           psect	text1147,local,class=CODE,delta=2
  5627                           global __ptext1147
  5628  148E                     __ptext1147:
  5629                           
  5630 ;; *************** function _lcd_write_control *****************
  5631 ;; Defined at:
  5632 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  databyte        1    wreg     unsigned char 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  databyte        1    2[BANK1 ] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;		None               void
  5639 ;; Registers used:
  5640 ;;		wreg
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5646 ;;      Params:         0       0       0       0       0
  5647 ;;      Locals:         0       0       1       0       0
  5648 ;;      Temps:          0       0       2       0       0
  5649 ;;      Totals:         0       0       3       0       0
  5650 ;;Total ram usage:        3 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    5
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_lcd_set_cursor
  5657 ;;		_lcd_init
  5658 ;;		_UpdateDisplay
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           psect	text1147
  5662                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5663                           	line	18
  5664                           	global	__size_of_lcd_write_control
  5665  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  5666                           	
  5667  148E                     _lcd_write_control:	
  5668 ;; hardware stack exceeded
  5669                           	opt	stack 0
  5670                           ; Regs used in _lcd_write_control: [wreg]
  5671                           ;lcd_write_control@databyte stored from wreg
  5672  148E  1683               	bsf	status, 5	;RP0=1, select bank1
  5673  148F  1303               	bcf	status, 6	;RP1=0, select bank1
  5674  1490  00A2               	movwf	(lcd_write_control@databyte)^080h
  5675                           	line	19
  5676                           	
  5677  1491                     l11914:	
  5678                           ;lcd.c: 19: RE2 = 0;
  5679  1491  1283               	bcf	status, 5	;RP0=0, select bank0
  5680  1492  1303               	bcf	status, 6	;RP1=0, select bank0
  5681  1493  1109               	bcf	(74/8),(74)&7
  5682                           	line	20
  5683                           ;lcd.c: 20: RE1 = 0;
  5684  1494  1089               	bcf	(73/8),(73)&7
  5685                           	line	21
  5686                           ;lcd.c: 21: RE0 = 0;
  5687  1495  1009               	bcf	(72/8),(72)&7
  5688                           	line	22
  5689                           	
  5690  1496                     l11916:	
  5691                           ;lcd.c: 22: PORTD = databyte;
  5692  1496  1683               	bsf	status, 5	;RP0=1, select bank1
  5693  1497  1303               	bcf	status, 6	;RP1=0, select bank1
  5694  1498  0822               	movf	(lcd_write_control@databyte)^080h,w
  5695  1499  1283               	bcf	status, 5	;RP0=0, select bank0
  5696  149A  1303               	bcf	status, 6	;RP1=0, select bank0
  5697  149B  0088               	movwf	(8)	;volatile
  5698                           	line	23
  5699                           	
  5700  149C                     l11918:	
  5701                           ;lcd.c: 23: RE2 = 1;
  5702  149C  1509               	bsf	(74/8),(74)&7
  5703                           	line	24
  5704                           	
  5705  149D                     l11920:	
  5706                           ;lcd.c: 24: RE2 = 0;
  5707  149D  1109               	bcf	(74/8),(74)&7
  5708                           	line	25
  5709                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5710                           	opt asmopt_off
  5711  149E  300D               movlw	13
  5712  149F  1683               	bsf	status, 5	;RP0=1, select bank1
  5713  14A0  1303               	bcf	status, 6	;RP1=0, select bank1
  5714  14A1  00A1               movwf	((??_lcd_write_control+0)^080h+0+1),f
  5715  14A2  30FB               	movlw	251
  5716  14A3  00A0               movwf	((??_lcd_write_control+0)^080h+0),f
  5717  14A4                     u6077:
  5718  14A4  0BA0               	decfsz	((??_lcd_write_control+0)^080h+0),f
  5719  14A5  2CA4               	goto	u6077
  5720  14A6  0BA1               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  5721  14A7  2CA4               	goto	u6077
  5722  14A8  2CA9               	nop2
  5723                           opt asmopt_on
  5724                           
  5725                           	line	26
  5726                           	
  5727  14A9                     l1399:	
  5728  14A9  0008               	return
  5729                           	opt stack 0
  5730                           GLOBAL	__end_of_lcd_write_control
  5731  14AA                     	__end_of_lcd_write_control:
  5732 ;; =============== function _lcd_write_control ends ============
  5733                           
  5734                           	signat	_lcd_write_control,4216
  5735                           	global	_init_adc
  5736                           psect	text1148,local,class=CODE,delta=2
  5737                           global __ptext1148
  5738  1430                     __ptext1148:
  5739                           
  5740 ;; *************** function _init_adc *****************
  5741 ;; Defined at:
  5742 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;		None
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;		None               void
  5749 ;; Registers used:
  5750 ;;		wreg, status,2
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5756 ;;      Params:         0       0       0       0       0
  5757 ;;      Locals:         0       0       0       0       0
  5758 ;;      Temps:          0       0       1       0       0
  5759 ;;      Totals:         0       0       1       0       0
  5760 ;;Total ram usage:        1 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    5
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_init
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           psect	text1148
  5770                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5771                           	line	46
  5772                           	global	__size_of_init_adc
  5773  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5774                           	
  5775  1430                     _init_adc:	
  5776                           	opt	stack 1
  5777                           ; Regs used in _init_adc: [wreg+status,2]
  5778                           	line	48
  5779                           	
  5780  1430                     l11904:	
  5781                           ;adc.c: 48: PORTA = 0;
  5782  1430  1283               	bcf	status, 5	;RP0=0, select bank0
  5783  1431  1303               	bcf	status, 6	;RP1=0, select bank0
  5784  1432  0185               	clrf	(5)	;volatile
  5785                           	line	49
  5786                           	
  5787  1433                     l11906:	
  5788                           ;adc.c: 49: TRISA = 0b00111111;
  5789  1433  303F               	movlw	(03Fh)
  5790  1434  1683               	bsf	status, 5	;RP0=1, select bank1
  5791  1435  1303               	bcf	status, 6	;RP1=0, select bank1
  5792  1436  0085               	movwf	(133)^080h	;volatile
  5793                           	line	52
  5794                           	
  5795  1437                     l11908:	
  5796                           ;adc.c: 52: ADCON0 = 0b10100001;
  5797  1437  30A1               	movlw	(0A1h)
  5798  1438  1283               	bcf	status, 5	;RP0=0, select bank0
  5799  1439  1303               	bcf	status, 6	;RP1=0, select bank0
  5800  143A  009F               	movwf	(31)	;volatile
  5801                           	line	53
  5802                           	
  5803  143B                     l11910:	
  5804                           ;adc.c: 53: ADCON1 = 0b0000010;
  5805  143B  3002               	movlw	(02h)
  5806  143C  1683               	bsf	status, 5	;RP0=1, select bank1
  5807  143D  1303               	bcf	status, 6	;RP1=0, select bank1
  5808  143E  009F               	movwf	(159)^080h	;volatile
  5809                           	line	55
  5810                           	
  5811  143F                     l11912:	
  5812                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5813                           	opt asmopt_off
  5814  143F  3053               movlw	83
  5815  1440  00A0               movwf	(??_init_adc+0)^080h+0,f
  5816  1441                     u6087:
  5817  1441  0BA0               decfsz	(??_init_adc+0)^080h+0,f
  5818  1442  2C41               	goto	u6087
  5819                           opt asmopt_on
  5820                           
  5821                           	line	57
  5822                           	
  5823  1443                     l700:	
  5824  1443  0008               	return
  5825                           	opt stack 0
  5826                           GLOBAL	__end_of_init_adc
  5827  1444                     	__end_of_init_adc:
  5828 ;; =============== function _init_adc ends ============
  5829                           
  5830                           	signat	_init_adc,88
  5831                           	global	_adc_read_channel
  5832                           psect	text1149,local,class=CODE,delta=2
  5833                           global __ptext1149
  5834  087B                     __ptext1149:
  5835                           
  5836 ;; *************** function _adc_read_channel *****************
  5837 ;; Defined at:
  5838 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  channel         1    wreg     unsigned char 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  channel         1    7[BANK1 ] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      unsigned char 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5852 ;;      Params:         0       0       0       0       0
  5853 ;;      Locals:         0       0       1       0       0
  5854 ;;      Temps:          0       0       1       0       0
  5855 ;;      Totals:         0       0       2       0       0
  5856 ;;Total ram usage:        2 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    6
  5859 ;; This function calls:
  5860 ;;		_adc_read
  5861 ;; This function is called by:
  5862 ;;		_readDistance
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           psect	text1149
  5866                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5867                           	line	5
  5868                           	global	__size_of_adc_read_channel
  5869  0049                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5870                           	
  5871  087B                     _adc_read_channel:	
  5872 ;; hardware stack exceeded
  5873                           	opt	stack 0
  5874                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5875                           ;adc_read_channel@channel stored from wreg
  5876  087B  1683               	bsf	status, 5	;RP0=1, select bank1
  5877  087C  1303               	bcf	status, 6	;RP1=0, select bank1
  5878  087D  00A7               	movwf	(adc_read_channel@channel)^080h
  5879                           	line	6
  5880                           	
  5881  087E                     l11888:	
  5882                           ;adc.c: 6: switch(channel)
  5883  087E  28A1               	goto	l11896
  5884                           	line	8
  5885                           ;adc.c: 7: {
  5886                           ;adc.c: 8: case 0:
  5887                           	
  5888  087F                     l690:	
  5889                           	line	9
  5890                           ;adc.c: 9: CHS0 = 0;
  5891  087F  1283               	bcf	status, 5	;RP0=0, select bank0
  5892  0880  1303               	bcf	status, 6	;RP1=0, select bank0
  5893  0881  119F               	bcf	(251/8),(251)&7
  5894                           	line	10
  5895                           ;adc.c: 10: CHS1 = 0;
  5896  0882  121F               	bcf	(252/8),(252)&7
  5897                           	line	11
  5898                           ;adc.c: 11: CHS2 = 0;
  5899  0883  129F               	bcf	(253/8),(253)&7
  5900                           	line	12
  5901                           ;adc.c: 12: break;
  5902  0884  28B4               	goto	l11898
  5903                           	line	13
  5904                           ;adc.c: 13: case 1:
  5905                           	
  5906  0885                     l692:	
  5907                           	line	14
  5908                           ;adc.c: 14: CHS0 = 1;
  5909  0885  1283               	bcf	status, 5	;RP0=0, select bank0
  5910  0886  1303               	bcf	status, 6	;RP1=0, select bank0
  5911  0887  159F               	bsf	(251/8),(251)&7
  5912                           	line	15
  5913                           ;adc.c: 15: CHS1 = 0;
  5914  0888  121F               	bcf	(252/8),(252)&7
  5915                           	line	16
  5916                           ;adc.c: 16: CHS2 = 0;
  5917  0889  129F               	bcf	(253/8),(253)&7
  5918                           	line	17
  5919                           ;adc.c: 17: break;
  5920  088A  28B4               	goto	l11898
  5921                           	line	18
  5922                           ;adc.c: 18: case 2:
  5923                           	
  5924  088B                     l693:	
  5925                           	line	19
  5926                           ;adc.c: 19: CHS0 = 0;
  5927  088B  1283               	bcf	status, 5	;RP0=0, select bank0
  5928  088C  1303               	bcf	status, 6	;RP1=0, select bank0
  5929  088D  119F               	bcf	(251/8),(251)&7
  5930                           	line	20
  5931                           ;adc.c: 20: CHS1 = 1;
  5932  088E  161F               	bsf	(252/8),(252)&7
  5933                           	line	21
  5934                           ;adc.c: 21: CHS2 = 0;
  5935  088F  129F               	bcf	(253/8),(253)&7
  5936                           	line	22
  5937                           ;adc.c: 22: break;
  5938  0890  28B4               	goto	l11898
  5939                           	line	23
  5940                           ;adc.c: 23: case 3:
  5941                           	
  5942  0891                     l694:	
  5943                           	line	24
  5944                           ;adc.c: 24: CHS0 = 1;
  5945  0891  1283               	bcf	status, 5	;RP0=0, select bank0
  5946  0892  1303               	bcf	status, 6	;RP1=0, select bank0
  5947  0893  159F               	bsf	(251/8),(251)&7
  5948                           	line	25
  5949                           ;adc.c: 25: CHS1 = 1;
  5950  0894  161F               	bsf	(252/8),(252)&7
  5951                           	line	26
  5952                           ;adc.c: 26: CHS2 = 0;
  5953  0895  129F               	bcf	(253/8),(253)&7
  5954                           	line	27
  5955                           ;adc.c: 27: break;
  5956  0896  28B4               	goto	l11898
  5957                           	line	28
  5958                           ;adc.c: 28: case 4:
  5959                           	
  5960  0897                     l695:	
  5961                           	line	29
  5962                           ;adc.c: 29: CHS0 = 0;
  5963  0897  1283               	bcf	status, 5	;RP0=0, select bank0
  5964  0898  1303               	bcf	status, 6	;RP1=0, select bank0
  5965  0899  119F               	bcf	(251/8),(251)&7
  5966                           	line	30
  5967                           ;adc.c: 30: CHS1 = 0;
  5968  089A  121F               	bcf	(252/8),(252)&7
  5969                           	line	31
  5970                           ;adc.c: 31: CHS2 = 1;
  5971  089B  169F               	bsf	(253/8),(253)&7
  5972                           	line	32
  5973                           ;adc.c: 32: break;
  5974  089C  28B4               	goto	l11898
  5975                           	line	35
  5976                           ;adc.c: 35: default:
  5977                           	
  5978  089D                     l696:	
  5979                           	line	36
  5980                           	
  5981  089D                     l11890:	
  5982                           ;adc.c: 36: return 0;
  5983  089D  3000               	movlw	(0)
  5984  089E  28C3               	goto	l697
  5985                           	
  5986  089F                     l11892:	
  5987  089F  28C3               	goto	l697
  5988                           	line	37
  5989                           	
  5990  08A0                     l11894:	
  5991                           ;adc.c: 37: }
  5992  08A0  28B4               	goto	l11898
  5993                           	line	6
  5994                           	
  5995  08A1                     l689:	
  5996                           	
  5997  08A1                     l11896:	
  5998  08A1  1683               	bsf	status, 5	;RP0=1, select bank1
  5999  08A2  1303               	bcf	status, 6	;RP1=0, select bank1
  6000  08A3  0827               	movf	(adc_read_channel@channel)^080h,w
  6001                           	; Switch size 1, requested type "space"
  6002                           ; Number of cases is 5, Range of values is 0 to 4
  6003                           ; switch strategies available:
  6004                           ; Name         Instructions Cycles
  6005                           ; simple_byte           16     9 (average)
  6006                           ; direct_byte           23     8 (fixed)
  6007                           ; jumptable            260     6 (fixed)
  6008                           ; rangetable             9     6 (fixed)
  6009                           ; spacedrange           16     9 (fixed)
  6010                           ; locatedrange           5     3 (fixed)
  6011                           ;	Chosen strategy is simple_byte
  6012                           
  6013                           	opt asmopt_off
  6014  08A4  3A00               	xorlw	0^0	; case 0
  6015  08A5  1903               	skipnz
  6016  08A6  287F               	goto	l690
  6017  08A7  3A01               	xorlw	1^0	; case 1
  6018  08A8  1903               	skipnz
  6019  08A9  2885               	goto	l692
  6020  08AA  3A03               	xorlw	2^1	; case 2
  6021  08AB  1903               	skipnz
  6022  08AC  288B               	goto	l693
  6023  08AD  3A01               	xorlw	3^2	; case 3
  6024  08AE  1903               	skipnz
  6025  08AF  2891               	goto	l694
  6026  08B0  3A07               	xorlw	4^3	; case 4
  6027  08B1  1903               	skipnz
  6028  08B2  2897               	goto	l695
  6029  08B3  289D               	goto	l11890
  6030                           	opt asmopt_on
  6031                           
  6032                           	line	37
  6033                           	
  6034  08B4                     l691:	
  6035                           	line	39
  6036                           	
  6037  08B4                     l11898:	
  6038                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6039                           	opt asmopt_off
  6040  08B4  3053               movlw	83
  6041  08B5  1683               	bsf	status, 5	;RP0=1, select bank1
  6042  08B6  1303               	bcf	status, 6	;RP1=0, select bank1
  6043  08B7  00A6               movwf	(??_adc_read_channel+0)^080h+0,f
  6044  08B8                     u6097:
  6045  08B8  0BA6               decfsz	(??_adc_read_channel+0)^080h+0,f
  6046  08B9  28B8               	goto	u6097
  6047                           opt asmopt_on
  6048                           
  6049                           	line	41
  6050                           	
  6051  08BA                     l11900:	
  6052                           ;adc.c: 41: return adc_read();
  6053  08BA  160A  118A  24EF   	fcall	_adc_read
              120A  158A         
  6054  08BF  1683               	bsf	status, 5	;RP0=1, select bank1
  6055  08C0  1303               	bcf	status, 6	;RP1=0, select bank1
  6056  08C1  0820               	movf	(0+(?_adc_read))^080h,w
  6057  08C2  28C3               	goto	l697
  6058                           	
  6059  08C3                     l11902:	
  6060                           	line	43
  6061                           	
  6062  08C3                     l697:	
  6063  08C3  0008               	return
  6064                           	opt stack 0
  6065                           GLOBAL	__end_of_adc_read_channel
  6066  08C4                     	__end_of_adc_read_channel:
  6067 ;; =============== function _adc_read_channel ends ============
  6068                           
  6069                           	signat	_adc_read_channel,4217
  6070                           	global	___awmod
  6071                           psect	text1150,local,class=CODE,delta=2
  6072                           global __ptext1150
  6073  0ACD                     __ptext1150:
  6074                           
  6075 ;; *************** function ___awmod *****************
  6076 ;; Defined at:
  6077 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  divisor         2    0[BANK1 ] int 
  6080 ;;  dividend        2    2[BANK1 ] int 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  sign            1    6[BANK1 ] unsigned char 
  6083 ;;  counter         1    5[BANK1 ] unsigned char 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  2    0[BANK1 ] int 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6093 ;;      Params:         0       0       4       0       0
  6094 ;;      Locals:         0       0       2       0       0
  6095 ;;      Temps:          0       0       1       0       0
  6096 ;;      Totals:         0       0       7       0       0
  6097 ;;Total ram usage:        7 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    5
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_UpdateDisplay
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           psect	text1150
  6107                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6108                           	line	5
  6109                           	global	__size_of___awmod
  6110  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6111                           	
  6112  0ACD                     ___awmod:	
  6113                           	opt	stack 0
  6114                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6115                           	line	8
  6116                           	
  6117  0ACD                     l11546:	
  6118  0ACD  1683               	bsf	status, 5	;RP0=1, select bank1
  6119  0ACE  1303               	bcf	status, 6	;RP1=0, select bank1
  6120  0ACF  01A6               	clrf	(___awmod@sign)^080h
  6121                           	line	9
  6122  0AD0  1FA3               	btfss	(___awmod@dividend+1)^080h,7
  6123  0AD1  2AD3               	goto	u5051
  6124  0AD2  2AD4               	goto	u5050
  6125  0AD3                     u5051:
  6126  0AD3  2ADD               	goto	l11550
  6127  0AD4                     u5050:
  6128                           	line	10
  6129                           	
  6130  0AD4                     l11548:	
  6131  0AD4  09A2               	comf	(___awmod@dividend)^080h,f
  6132  0AD5  09A3               	comf	(___awmod@dividend+1)^080h,f
  6133  0AD6  0AA2               	incf	(___awmod@dividend)^080h,f
  6134  0AD7  1903               	skipnz
  6135  0AD8  0AA3               	incf	(___awmod@dividend+1)^080h,f
  6136                           	line	11
  6137  0AD9  01A6               	clrf	(___awmod@sign)^080h
  6138  0ADA  1403               	bsf	status,0
  6139  0ADB  0DA6               	rlf	(___awmod@sign)^080h,f
  6140  0ADC  2ADD               	goto	l11550
  6141                           	line	12
  6142                           	
  6143  0ADD                     l7620:	
  6144                           	line	13
  6145                           	
  6146  0ADD                     l11550:	
  6147  0ADD  1FA1               	btfss	(___awmod@divisor+1)^080h,7
  6148  0ADE  2AE0               	goto	u5061
  6149  0ADF  2AE1               	goto	u5060
  6150  0AE0                     u5061:
  6151  0AE0  2AE7               	goto	l11554
  6152  0AE1                     u5060:
  6153                           	line	14
  6154                           	
  6155  0AE1                     l11552:	
  6156  0AE1  09A0               	comf	(___awmod@divisor)^080h,f
  6157  0AE2  09A1               	comf	(___awmod@divisor+1)^080h,f
  6158  0AE3  0AA0               	incf	(___awmod@divisor)^080h,f
  6159  0AE4  1903               	skipnz
  6160  0AE5  0AA1               	incf	(___awmod@divisor+1)^080h,f
  6161  0AE6  2AE7               	goto	l11554
  6162                           	
  6163  0AE7                     l7621:	
  6164                           	line	15
  6165                           	
  6166  0AE7                     l11554:	
  6167  0AE7  0821               	movf	(___awmod@divisor+1)^080h,w
  6168  0AE8  0420               	iorwf	(___awmod@divisor)^080h,w
  6169  0AE9  1903               	skipnz
  6170  0AEA  2AEC               	goto	u5071
  6171  0AEB  2AED               	goto	u5070
  6172  0AEC                     u5071:
  6173  0AEC  2B23               	goto	l11572
  6174  0AED                     u5070:
  6175                           	line	16
  6176                           	
  6177  0AED                     l11556:	
  6178  0AED  01A5               	clrf	(___awmod@counter)^080h
  6179  0AEE  1403               	bsf	status,0
  6180  0AEF  0DA5               	rlf	(___awmod@counter)^080h,f
  6181                           	line	17
  6182  0AF0  2AFD               	goto	l11562
  6183                           	
  6184  0AF1                     l7624:	
  6185                           	line	18
  6186                           	
  6187  0AF1                     l11558:	
  6188  0AF1  3001               	movlw	01h
  6189                           	
  6190  0AF2                     u5085:
  6191  0AF2  1003               	clrc
  6192  0AF3  0DA0               	rlf	(___awmod@divisor)^080h,f
  6193  0AF4  0DA1               	rlf	(___awmod@divisor+1)^080h,f
  6194  0AF5  3EFF               	addlw	-1
  6195  0AF6  1D03               	skipz
  6196  0AF7  2AF2               	goto	u5085
  6197                           	line	19
  6198                           	
  6199  0AF8                     l11560:	
  6200  0AF8  3001               	movlw	(01h)
  6201  0AF9  00A4               	movwf	(??___awmod+0)^080h+0
  6202  0AFA  0824               	movf	(??___awmod+0)^080h+0,w
  6203  0AFB  07A5               	addwf	(___awmod@counter)^080h,f
  6204  0AFC  2AFD               	goto	l11562
  6205                           	line	20
  6206                           	
  6207  0AFD                     l7623:	
  6208                           	line	17
  6209                           	
  6210  0AFD                     l11562:	
  6211  0AFD  1FA1               	btfss	(___awmod@divisor+1)^080h,(15)&7
  6212  0AFE  2B00               	goto	u5091
  6213  0AFF  2B01               	goto	u5090
  6214  0B00                     u5091:
  6215  0B00  2AF1               	goto	l11558
  6216  0B01                     u5090:
  6217  0B01  2B03               	goto	l11564
  6218                           	
  6219  0B02                     l7625:	
  6220  0B02  2B03               	goto	l11564
  6221                           	line	21
  6222                           	
  6223  0B03                     l7626:	
  6224                           	line	22
  6225                           	
  6226  0B03                     l11564:	
  6227  0B03  0821               	movf	(___awmod@divisor+1)^080h,w
  6228  0B04  0223               	subwf	(___awmod@dividend+1)^080h,w
  6229  0B05  1D03               	skipz
  6230  0B06  2B09               	goto	u5105
  6231  0B07  0820               	movf	(___awmod@divisor)^080h,w
  6232  0B08  0222               	subwf	(___awmod@dividend)^080h,w
  6233  0B09                     u5105:
  6234  0B09  1C03               	skipc
  6235  0B0A  2B0C               	goto	u5101
  6236  0B0B  2B0D               	goto	u5100
  6237  0B0C                     u5101:
  6238  0B0C  2B14               	goto	l11568
  6239  0B0D                     u5100:
  6240                           	line	23
  6241                           	
  6242  0B0D                     l11566:	
  6243  0B0D  0820               	movf	(___awmod@divisor)^080h,w
  6244  0B0E  02A2               	subwf	(___awmod@dividend)^080h,f
  6245  0B0F  0821               	movf	(___awmod@divisor+1)^080h,w
  6246  0B10  1C03               	skipc
  6247  0B11  03A3               	decf	(___awmod@dividend+1)^080h,f
  6248  0B12  02A3               	subwf	(___awmod@dividend+1)^080h,f
  6249  0B13  2B14               	goto	l11568
  6250                           	
  6251  0B14                     l7627:	
  6252                           	line	24
  6253                           	
  6254  0B14                     l11568:	
  6255  0B14  3001               	movlw	01h
  6256                           	
  6257  0B15                     u5115:
  6258  0B15  1003               	clrc
  6259  0B16  0CA1               	rrf	(___awmod@divisor+1)^080h,f
  6260  0B17  0CA0               	rrf	(___awmod@divisor)^080h,f
  6261  0B18  3EFF               	addlw	-1
  6262  0B19  1D03               	skipz
  6263  0B1A  2B15               	goto	u5115
  6264                           	line	25
  6265                           	
  6266  0B1B                     l11570:	
  6267  0B1B  3001               	movlw	low(01h)
  6268  0B1C  02A5               	subwf	(___awmod@counter)^080h,f
  6269  0B1D  1D03               	btfss	status,2
  6270  0B1E  2B20               	goto	u5121
  6271  0B1F  2B21               	goto	u5120
  6272  0B20                     u5121:
  6273  0B20  2B03               	goto	l11564
  6274  0B21                     u5120:
  6275  0B21  2B23               	goto	l11572
  6276                           	
  6277  0B22                     l7628:	
  6278  0B22  2B23               	goto	l11572
  6279                           	line	26
  6280                           	
  6281  0B23                     l7622:	
  6282                           	line	27
  6283                           	
  6284  0B23                     l11572:	
  6285  0B23  0826               	movf	(___awmod@sign)^080h,w
  6286  0B24  1D03               	skipz
  6287  0B25  2B27               	goto	u5130
  6288  0B26  2B2D               	goto	l11576
  6289  0B27                     u5130:
  6290                           	line	28
  6291                           	
  6292  0B27                     l11574:	
  6293  0B27  09A2               	comf	(___awmod@dividend)^080h,f
  6294  0B28  09A3               	comf	(___awmod@dividend+1)^080h,f
  6295  0B29  0AA2               	incf	(___awmod@dividend)^080h,f
  6296  0B2A  1903               	skipnz
  6297  0B2B  0AA3               	incf	(___awmod@dividend+1)^080h,f
  6298  0B2C  2B2D               	goto	l11576
  6299                           	
  6300  0B2D                     l7629:	
  6301                           	line	29
  6302                           	
  6303  0B2D                     l11576:	
  6304  0B2D  0823               	movf	(___awmod@dividend+1)^080h,w
  6305  0B2E  01A1               	clrf	(?___awmod+1)^080h
  6306  0B2F  07A1               	addwf	(?___awmod+1)^080h
  6307  0B30  0822               	movf	(___awmod@dividend)^080h,w
  6308  0B31  01A0               	clrf	(?___awmod)^080h
  6309  0B32  07A0               	addwf	(?___awmod)^080h
  6310                           
  6311  0B33  2B34               	goto	l7630
  6312                           	
  6313  0B34                     l11578:	
  6314                           	line	30
  6315                           	
  6316  0B34                     l7630:	
  6317  0B34  0008               	return
  6318                           	opt stack 0
  6319                           GLOBAL	__end_of___awmod
  6320  0B35                     	__end_of___awmod:
  6321 ;; =============== function ___awmod ends ============
  6322                           
  6323                           	signat	___awmod,8314
  6324                           	global	___lwmod
  6325                           psect	text1151,local,class=CODE,delta=2
  6326                           global __ptext1151
  6327  176C                     __ptext1151:
  6328                           
  6329 ;; *************** function ___lwmod *****************
  6330 ;; Defined at:
  6331 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  divisor         2   14[BANK1 ] unsigned int 
  6334 ;;  dividend        2   16[BANK1 ] unsigned int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  counter         1   19[BANK1 ] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  2   14[BANK1 ] unsigned int 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6346 ;;      Params:         0       0       4       0       0
  6347 ;;      Locals:         0       0       1       0       0
  6348 ;;      Temps:          0       0       1       0       0
  6349 ;;      Totals:         0       0       6       0       0
  6350 ;;Total ram usage:        6 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    5
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_sprintf
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           psect	text1151
  6360                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6361                           	line	5
  6362                           	global	__size_of___lwmod
  6363  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6364                           	
  6365  176C                     ___lwmod:	
  6366 ;; hardware stack exceeded
  6367                           	opt	stack 0
  6368                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6369                           	line	8
  6370                           	
  6371  176C                     l11524:	
  6372  176C  1683               	bsf	status, 5	;RP0=1, select bank1
  6373  176D  1303               	bcf	status, 6	;RP1=0, select bank1
  6374  176E  082F               	movf	(___lwmod@divisor+1)^080h,w
  6375  176F  042E               	iorwf	(___lwmod@divisor)^080h,w
  6376  1770  1903               	skipnz
  6377  1771  2F73               	goto	u4991
  6378  1772  2F74               	goto	u4990
  6379  1773                     u4991:
  6380  1773  2FAA               	goto	l11542
  6381  1774                     u4990:
  6382                           	line	9
  6383                           	
  6384  1774                     l11526:	
  6385  1774  01B3               	clrf	(___lwmod@counter)^080h
  6386  1775  1403               	bsf	status,0
  6387  1776  0DB3               	rlf	(___lwmod@counter)^080h,f
  6388                           	line	10
  6389  1777  2F84               	goto	l11532
  6390                           	
  6391  1778                     l7430:	
  6392                           	line	11
  6393                           	
  6394  1778                     l11528:	
  6395  1778  3001               	movlw	01h
  6396                           	
  6397  1779                     u5005:
  6398  1779  1003               	clrc
  6399  177A  0DAE               	rlf	(___lwmod@divisor)^080h,f
  6400  177B  0DAF               	rlf	(___lwmod@divisor+1)^080h,f
  6401  177C  3EFF               	addlw	-1
  6402  177D  1D03               	skipz
  6403  177E  2F79               	goto	u5005
  6404                           	line	12
  6405                           	
  6406  177F                     l11530:	
  6407  177F  3001               	movlw	(01h)
  6408  1780  00B2               	movwf	(??___lwmod+0)^080h+0
  6409  1781  0832               	movf	(??___lwmod+0)^080h+0,w
  6410  1782  07B3               	addwf	(___lwmod@counter)^080h,f
  6411  1783  2F84               	goto	l11532
  6412                           	line	13
  6413                           	
  6414  1784                     l7429:	
  6415                           	line	10
  6416                           	
  6417  1784                     l11532:	
  6418  1784  1FAF               	btfss	(___lwmod@divisor+1)^080h,(15)&7
  6419  1785  2F87               	goto	u5011
  6420  1786  2F88               	goto	u5010
  6421  1787                     u5011:
  6422  1787  2F78               	goto	l11528
  6423  1788                     u5010:
  6424  1788  2F8A               	goto	l11534
  6425                           	
  6426  1789                     l7431:	
  6427  1789  2F8A               	goto	l11534
  6428                           	line	14
  6429                           	
  6430  178A                     l7432:	
  6431                           	line	15
  6432                           	
  6433  178A                     l11534:	
  6434  178A  082F               	movf	(___lwmod@divisor+1)^080h,w
  6435  178B  0231               	subwf	(___lwmod@dividend+1)^080h,w
  6436  178C  1D03               	skipz
  6437  178D  2F90               	goto	u5025
  6438  178E  082E               	movf	(___lwmod@divisor)^080h,w
  6439  178F  0230               	subwf	(___lwmod@dividend)^080h,w
  6440  1790                     u5025:
  6441  1790  1C03               	skipc
  6442  1791  2F93               	goto	u5021
  6443  1792  2F94               	goto	u5020
  6444  1793                     u5021:
  6445  1793  2F9B               	goto	l11538
  6446  1794                     u5020:
  6447                           	line	16
  6448                           	
  6449  1794                     l11536:	
  6450  1794  082E               	movf	(___lwmod@divisor)^080h,w
  6451  1795  02B0               	subwf	(___lwmod@dividend)^080h,f
  6452  1796  082F               	movf	(___lwmod@divisor+1)^080h,w
  6453  1797  1C03               	skipc
  6454  1798  03B1               	decf	(___lwmod@dividend+1)^080h,f
  6455  1799  02B1               	subwf	(___lwmod@dividend+1)^080h,f
  6456  179A  2F9B               	goto	l11538
  6457                           	
  6458  179B                     l7433:	
  6459                           	line	17
  6460                           	
  6461  179B                     l11538:	
  6462  179B  3001               	movlw	01h
  6463                           	
  6464  179C                     u5035:
  6465  179C  1003               	clrc
  6466  179D  0CAF               	rrf	(___lwmod@divisor+1)^080h,f
  6467  179E  0CAE               	rrf	(___lwmod@divisor)^080h,f
  6468  179F  3EFF               	addlw	-1
  6469  17A0  1D03               	skipz
  6470  17A1  2F9C               	goto	u5035
  6471                           	line	18
  6472                           	
  6473  17A2                     l11540:	
  6474  17A2  3001               	movlw	low(01h)
  6475  17A3  02B3               	subwf	(___lwmod@counter)^080h,f
  6476  17A4  1D03               	btfss	status,2
  6477  17A5  2FA7               	goto	u5041
  6478  17A6  2FA8               	goto	u5040
  6479  17A7                     u5041:
  6480  17A7  2F8A               	goto	l11534
  6481  17A8                     u5040:
  6482  17A8  2FAA               	goto	l11542
  6483                           	
  6484  17A9                     l7434:	
  6485  17A9  2FAA               	goto	l11542
  6486                           	line	19
  6487                           	
  6488  17AA                     l7428:	
  6489                           	line	20
  6490                           	
  6491  17AA                     l11542:	
  6492  17AA  0831               	movf	(___lwmod@dividend+1)^080h,w
  6493  17AB  01AF               	clrf	(?___lwmod+1)^080h
  6494  17AC  07AF               	addwf	(?___lwmod+1)^080h
  6495  17AD  0830               	movf	(___lwmod@dividend)^080h,w
  6496  17AE  01AE               	clrf	(?___lwmod)^080h
  6497  17AF  07AE               	addwf	(?___lwmod)^080h
  6498                           
  6499  17B0  2FB1               	goto	l7435
  6500                           	
  6501  17B1                     l11544:	
  6502                           	line	21
  6503                           	
  6504  17B1                     l7435:	
  6505  17B1  0008               	return
  6506                           	opt stack 0
  6507                           GLOBAL	__end_of___lwmod
  6508  17B2                     	__end_of___lwmod:
  6509 ;; =============== function ___lwmod ends ============
  6510                           
  6511                           	signat	___lwmod,8314
  6512                           	global	___lwdiv
  6513                           psect	text1152,local,class=CODE,delta=2
  6514                           global __ptext1152
  6515  08C4                     __ptext1152:
  6516                           
  6517 ;; *************** function ___lwdiv *****************
  6518 ;; Defined at:
  6519 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  divisor         2    6[BANK1 ] unsigned int 
  6522 ;;  dividend        2    8[BANK1 ] unsigned int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  quotient        2   11[BANK1 ] unsigned int 
  6525 ;;  counter         1   13[BANK1 ] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  2    6[BANK1 ] unsigned int 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6535 ;;      Params:         0       0       4       0       0
  6536 ;;      Locals:         0       0       3       0       0
  6537 ;;      Temps:          0       0       1       0       0
  6538 ;;      Totals:         0       0       8       0       0
  6539 ;;Total ram usage:        8 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    5
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_readAvgDistance
  6546 ;;		_ADCconvert
  6547 ;;		_sprintf
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           psect	text1152
  6551                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6552                           	line	5
  6553                           	global	__size_of___lwdiv
  6554  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6555                           	
  6556  08C4                     ___lwdiv:	
  6557 ;; hardware stack exceeded
  6558                           	opt	stack 0
  6559                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6560                           	line	9
  6561                           	
  6562  08C4                     l11498:	
  6563  08C4  1683               	bsf	status, 5	;RP0=1, select bank1
  6564  08C5  1303               	bcf	status, 6	;RP1=0, select bank1
  6565  08C6  01AB               	clrf	(___lwdiv@quotient)^080h
  6566  08C7  01AC               	clrf	(___lwdiv@quotient+1)^080h
  6567                           	line	10
  6568                           	
  6569  08C8                     l11500:	
  6570  08C8  0827               	movf	(___lwdiv@divisor+1)^080h,w
  6571  08C9  0426               	iorwf	(___lwdiv@divisor)^080h,w
  6572  08CA  1903               	skipnz
  6573  08CB  28CD               	goto	u4921
  6574  08CC  28CE               	goto	u4920
  6575  08CD                     u4921:
  6576  08CD  290C               	goto	l11520
  6577  08CE                     u4920:
  6578                           	line	11
  6579                           	
  6580  08CE                     l11502:	
  6581  08CE  01AD               	clrf	(___lwdiv@counter)^080h
  6582  08CF  1403               	bsf	status,0
  6583  08D0  0DAD               	rlf	(___lwdiv@counter)^080h,f
  6584                           	line	12
  6585  08D1  28DE               	goto	l11508
  6586                           	
  6587  08D2                     l7420:	
  6588                           	line	13
  6589                           	
  6590  08D2                     l11504:	
  6591  08D2  3001               	movlw	01h
  6592                           	
  6593  08D3                     u4935:
  6594  08D3  1003               	clrc
  6595  08D4  0DA6               	rlf	(___lwdiv@divisor)^080h,f
  6596  08D5  0DA7               	rlf	(___lwdiv@divisor+1)^080h,f
  6597  08D6  3EFF               	addlw	-1
  6598  08D7  1D03               	skipz
  6599  08D8  28D3               	goto	u4935
  6600                           	line	14
  6601                           	
  6602  08D9                     l11506:	
  6603  08D9  3001               	movlw	(01h)
  6604  08DA  00AA               	movwf	(??___lwdiv+0)^080h+0
  6605  08DB  082A               	movf	(??___lwdiv+0)^080h+0,w
  6606  08DC  07AD               	addwf	(___lwdiv@counter)^080h,f
  6607  08DD  28DE               	goto	l11508
  6608                           	line	15
  6609                           	
  6610  08DE                     l7419:	
  6611                           	line	12
  6612                           	
  6613  08DE                     l11508:	
  6614  08DE  1FA7               	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  6615  08DF  28E1               	goto	u4941
  6616  08E0  28E2               	goto	u4940
  6617  08E1                     u4941:
  6618  08E1  28D2               	goto	l11504
  6619  08E2                     u4940:
  6620  08E2  28E4               	goto	l11510
  6621                           	
  6622  08E3                     l7421:	
  6623  08E3  28E4               	goto	l11510
  6624                           	line	16
  6625                           	
  6626  08E4                     l7422:	
  6627                           	line	17
  6628                           	
  6629  08E4                     l11510:	
  6630  08E4  3001               	movlw	01h
  6631                           	
  6632  08E5                     u4955:
  6633  08E5  1003               	clrc
  6634  08E6  0DAB               	rlf	(___lwdiv@quotient)^080h,f
  6635  08E7  0DAC               	rlf	(___lwdiv@quotient+1)^080h,f
  6636  08E8  3EFF               	addlw	-1
  6637  08E9  1D03               	skipz
  6638  08EA  28E5               	goto	u4955
  6639                           	line	18
  6640  08EB  0827               	movf	(___lwdiv@divisor+1)^080h,w
  6641  08EC  0229               	subwf	(___lwdiv@dividend+1)^080h,w
  6642  08ED  1D03               	skipz
  6643  08EE  28F1               	goto	u4965
  6644  08EF  0826               	movf	(___lwdiv@divisor)^080h,w
  6645  08F0  0228               	subwf	(___lwdiv@dividend)^080h,w
  6646  08F1                     u4965:
  6647  08F1  1C03               	skipc
  6648  08F2  28F4               	goto	u4961
  6649  08F3  28F5               	goto	u4960
  6650  08F4                     u4961:
  6651  08F4  28FD               	goto	l11516
  6652  08F5                     u4960:
  6653                           	line	19
  6654                           	
  6655  08F5                     l11512:	
  6656  08F5  0826               	movf	(___lwdiv@divisor)^080h,w
  6657  08F6  02A8               	subwf	(___lwdiv@dividend)^080h,f
  6658  08F7  0827               	movf	(___lwdiv@divisor+1)^080h,w
  6659  08F8  1C03               	skipc
  6660  08F9  03A9               	decf	(___lwdiv@dividend+1)^080h,f
  6661  08FA  02A9               	subwf	(___lwdiv@dividend+1)^080h,f
  6662                           	line	20
  6663                           	
  6664  08FB                     l11514:	
  6665  08FB  142B               	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  6666  08FC  28FD               	goto	l11516
  6667                           	line	21
  6668                           	
  6669  08FD                     l7423:	
  6670                           	line	22
  6671                           	
  6672  08FD                     l11516:	
  6673  08FD  3001               	movlw	01h
  6674                           	
  6675  08FE                     u4975:
  6676  08FE  1003               	clrc
  6677  08FF  0CA7               	rrf	(___lwdiv@divisor+1)^080h,f
  6678  0900  0CA6               	rrf	(___lwdiv@divisor)^080h,f
  6679  0901  3EFF               	addlw	-1
  6680  0902  1D03               	skipz
  6681  0903  28FE               	goto	u4975
  6682                           	line	23
  6683                           	
  6684  0904                     l11518:	
  6685  0904  3001               	movlw	low(01h)
  6686  0905  02AD               	subwf	(___lwdiv@counter)^080h,f
  6687  0906  1D03               	btfss	status,2
  6688  0907  2909               	goto	u4981
  6689  0908  290A               	goto	u4980
  6690  0909                     u4981:
  6691  0909  28E4               	goto	l11510
  6692  090A                     u4980:
  6693  090A  290C               	goto	l11520
  6694                           	
  6695  090B                     l7424:	
  6696  090B  290C               	goto	l11520
  6697                           	line	24
  6698                           	
  6699  090C                     l7418:	
  6700                           	line	25
  6701                           	
  6702  090C                     l11520:	
  6703  090C  082C               	movf	(___lwdiv@quotient+1)^080h,w
  6704  090D  01A7               	clrf	(?___lwdiv+1)^080h
  6705  090E  07A7               	addwf	(?___lwdiv+1)^080h
  6706  090F  082B               	movf	(___lwdiv@quotient)^080h,w
  6707  0910  01A6               	clrf	(?___lwdiv)^080h
  6708  0911  07A6               	addwf	(?___lwdiv)^080h
  6709                           
  6710  0912  2913               	goto	l7425
  6711                           	
  6712  0913                     l11522:	
  6713                           	line	26
  6714                           	
  6715  0913                     l7425:	
  6716  0913  0008               	return
  6717                           	opt stack 0
  6718                           GLOBAL	__end_of___lwdiv
  6719  0914                     	__end_of___lwdiv:
  6720 ;; =============== function ___lwdiv ends ============
  6721                           
  6722                           	signat	___lwdiv,8314
  6723                           	global	___wmul
  6724                           psect	text1153,local,class=CODE,delta=2
  6725                           global __ptext1153
  6726  15E6                     __ptext1153:
  6727                           
  6728 ;; *************** function ___wmul *****************
  6729 ;; Defined at:
  6730 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  multiplier      2    0[BANK1 ] unsigned int 
  6733 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  product         2    4[BANK1 ] unsigned int 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2    0[BANK1 ] unsigned int 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6745 ;;      Params:         0       0       4       0       0
  6746 ;;      Locals:         0       0       2       0       0
  6747 ;;      Temps:          0       0       0       0       0
  6748 ;;      Totals:         0       0       6       0       0
  6749 ;;Total ram usage:        6 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    5
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_ADCconvert
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           psect	text1153
  6759                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6760                           	line	3
  6761                           	global	__size_of___wmul
  6762  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6763                           	
  6764  15E6                     ___wmul:	
  6765 ;; hardware stack exceeded
  6766                           	opt	stack 0
  6767                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6768                           	line	4
  6769                           	
  6770  15E6                     l11486:	
  6771  15E6  1683               	bsf	status, 5	;RP0=1, select bank1
  6772  15E7  1303               	bcf	status, 6	;RP1=0, select bank1
  6773  15E8  01A4               	clrf	(___wmul@product)^080h
  6774  15E9  01A5               	clrf	(___wmul@product+1)^080h
  6775  15EA  2DEB               	goto	l11488
  6776                           	line	6
  6777                           	
  6778  15EB                     l7412:	
  6779                           	line	7
  6780                           	
  6781  15EB                     l11488:	
  6782  15EB  1C20               	btfss	(___wmul@multiplier)^080h,(0)&7
  6783  15EC  2DEE               	goto	u4881
  6784  15ED  2DEF               	goto	u4880
  6785  15EE                     u4881:
  6786  15EE  2DF5               	goto	l7413
  6787  15EF                     u4880:
  6788                           	line	8
  6789                           	
  6790  15EF                     l11490:	
  6791  15EF  0822               	movf	(___wmul@multiplicand)^080h,w
  6792  15F0  07A4               	addwf	(___wmul@product)^080h,f
  6793  15F1  1803               	skipnc
  6794  15F2  0AA5               	incf	(___wmul@product+1)^080h,f
  6795  15F3  0823               	movf	(___wmul@multiplicand+1)^080h,w
  6796  15F4  07A5               	addwf	(___wmul@product+1)^080h,f
  6797                           	
  6798  15F5                     l7413:	
  6799                           	line	9
  6800  15F5  3001               	movlw	01h
  6801                           	
  6802  15F6                     u4895:
  6803  15F6  1003               	clrc
  6804  15F7  0DA2               	rlf	(___wmul@multiplicand)^080h,f
  6805  15F8  0DA3               	rlf	(___wmul@multiplicand+1)^080h,f
  6806  15F9  3EFF               	addlw	-1
  6807  15FA  1D03               	skipz
  6808  15FB  2DF6               	goto	u4895
  6809                           	line	10
  6810                           	
  6811  15FC                     l11492:	
  6812  15FC  3001               	movlw	01h
  6813                           	
  6814  15FD                     u4905:
  6815  15FD  1003               	clrc
  6816  15FE  0CA1               	rrf	(___wmul@multiplier+1)^080h,f
  6817  15FF  0CA0               	rrf	(___wmul@multiplier)^080h,f
  6818  1600  3EFF               	addlw	-1
  6819  1601  1D03               	skipz
  6820  1602  2DFD               	goto	u4905
  6821                           	line	11
  6822  1603  0821               	movf	((___wmul@multiplier+1)^080h),w
  6823  1604  0420               	iorwf	((___wmul@multiplier)^080h),w
  6824  1605  1D03               	skipz
  6825  1606  2E08               	goto	u4911
  6826  1607  2E09               	goto	u4910
  6827  1608                     u4911:
  6828  1608  2DEB               	goto	l11488
  6829  1609                     u4910:
  6830  1609  2E0A               	goto	l11494
  6831                           	
  6832  160A                     l7414:	
  6833                           	line	12
  6834                           	
  6835  160A                     l11494:	
  6836  160A  0825               	movf	(___wmul@product+1)^080h,w
  6837  160B  01A1               	clrf	(?___wmul+1)^080h
  6838  160C  07A1               	addwf	(?___wmul+1)^080h
  6839  160D  0824               	movf	(___wmul@product)^080h,w
  6840  160E  01A0               	clrf	(?___wmul)^080h
  6841  160F  07A0               	addwf	(?___wmul)^080h
  6842                           
  6843  1610  2E11               	goto	l7415
  6844                           	
  6845  1611                     l11496:	
  6846                           	line	13
  6847                           	
  6848  1611                     l7415:	
  6849  1611  0008               	return
  6850                           	opt stack 0
  6851                           GLOBAL	__end_of___wmul
  6852  1612                     	__end_of___wmul:
  6853 ;; =============== function ___wmul ends ============
  6854                           
  6855                           	signat	___wmul,8314
  6856                           	global	_ser_putch
  6857                           psect	text1154,local,class=CODE,delta=2
  6858                           global __ptext1154
  6859  1612                     __ptext1154:
  6860                           
  6861 ;; *************** function _ser_putch *****************
  6862 ;; Defined at:
  6863 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  c               1    wreg     unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  c               1    1[BANK1 ] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;		None               void
  6870 ;; Registers used:
  6871 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6877 ;;      Params:         0       0       0       0       0
  6878 ;;      Locals:         0       0       1       0       0
  6879 ;;      Temps:          0       0       1       0       0
  6880 ;;      Totals:         0       0       2       0       0
  6881 ;;Total ram usage:        2 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    5
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_robo_init
  6888 ;;		_robotMove
  6889 ;;		_robotTurn
  6890 ;;		_ser_puts
  6891 ;;		_ser_puts2
  6892 ;;		_ser_puthex
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           psect	text1154
  6896                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6897                           	line	70
  6898                           	global	__size_of_ser_putch
  6899  002E                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  6900                           	
  6901  1612                     _ser_putch:	
  6902                           	opt	stack 1
  6903                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  6904                           ;ser_putch@c stored from wreg
  6905  1612  1683               	bsf	status, 5	;RP0=1, select bank1
  6906  1613  1303               	bcf	status, 6	;RP1=0, select bank1
  6907  1614  00A1               	movwf	(ser_putch@c)^080h
  6908                           	line	71
  6909                           	
  6910  1615                     l11386:	
  6911                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  6912  1615  2E17               	goto	l11388
  6913                           	
  6914  1616                     l4423:	
  6915                           	line	72
  6916                           ;ser.c: 72: continue;
  6917  1616  2E17               	goto	l11388
  6918                           	
  6919  1617                     l4422:	
  6920                           	line	71
  6921                           	
  6922  1617                     l11388:	
  6923  1617  1283               	bcf	status, 5	;RP0=0, select bank0
  6924  1618  086A               	movf	(_txiptr),w	;volatile
  6925  1619  3E01               	addlw	01h
  6926  161A  390F               	andlw	0Fh
  6927  161B  066B               	xorwf	(_txoptr),w	;volatile
  6928  161C  1903               	skipnz
  6929  161D  2E1F               	goto	u4651
  6930  161E  2E20               	goto	u4650
  6931  161F                     u4651:
  6932  161F  2E17               	goto	l11388
  6933  1620                     u4650:
  6934                           	
  6935  1620                     l4424:	
  6936                           	line	73
  6937                           ;ser.c: 73: GIE=0;
  6938  1620  138B               	bcf	(95/8),(95)&7
  6939                           	line	74
  6940                           	
  6941  1621                     l11390:	
  6942                           ;ser.c: 74: txfifo[txiptr] = c;
  6943  1621  1683               	bsf	status, 5	;RP0=1, select bank1
  6944  1622  1303               	bcf	status, 6	;RP1=0, select bank1
  6945  1623  0821               	movf	(ser_putch@c)^080h,w
  6946  1624  00A0               	movwf	(??_ser_putch+0)^080h+0
  6947  1625  1283               	bcf	status, 5	;RP0=0, select bank0
  6948  1626  1303               	bcf	status, 6	;RP1=0, select bank0
  6949  1627  086A               	movf	(_txiptr),w
  6950  1628  3EB0               	addlw	_txfifo&0ffh
  6951  1629  0084               	movwf	fsr0
  6952  162A  1683               	bsf	status, 5	;RP0=1, select bank1
  6953  162B  1303               	bcf	status, 6	;RP1=0, select bank1
  6954  162C  0820               	movf	(??_ser_putch+0)^080h+0,w
  6955  162D  1783               	bsf	status, 7	;select IRP bank3
  6956  162E  0080               	movwf	indf
  6957                           	line	75
  6958                           	
  6959  162F                     l11392:	
  6960                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  6961  162F  1283               	bcf	status, 5	;RP0=0, select bank0
  6962  1630  1303               	bcf	status, 6	;RP1=0, select bank0
  6963  1631  086A               	movf	(_txiptr),w	;volatile
  6964  1632  3E01               	addlw	01h
  6965  1633  390F               	andlw	0Fh
  6966  1634  1683               	bsf	status, 5	;RP0=1, select bank1
  6967  1635  1303               	bcf	status, 6	;RP1=0, select bank1
  6968  1636  00A0               	movwf	(??_ser_putch+0)^080h+0
  6969  1637  0820               	movf	(??_ser_putch+0)^080h+0,w
  6970  1638  1283               	bcf	status, 5	;RP0=0, select bank0
  6971  1639  1303               	bcf	status, 6	;RP1=0, select bank0
  6972  163A  00EA               	movwf	(_txiptr)	;volatile
  6973                           	line	76
  6974                           	
  6975  163B                     l11394:	
  6976                           ;ser.c: 76: TXIE=1;
  6977  163B  1683               	bsf	status, 5	;RP0=1, select bank1
  6978  163C  1303               	bcf	status, 6	;RP1=0, select bank1
  6979  163D  160C               	bsf	(1124/8)^080h,(1124)&7
  6980                           	line	77
  6981                           	
  6982  163E                     l11396:	
  6983                           ;ser.c: 77: GIE=1;
  6984  163E  178B               	bsf	(95/8),(95)&7
  6985                           	line	78
  6986                           	
  6987  163F                     l4425:	
  6988  163F  0008               	return
  6989                           	opt stack 0
  6990                           GLOBAL	__end_of_ser_putch
  6991  1640                     	__end_of_ser_putch:
  6992 ;; =============== function _ser_putch ends ============
  6993                           
  6994                           	signat	_ser_putch,4216
  6995                           	global	_spi_transfer
  6996                           psect	text1155,local,class=CODE,delta=2
  6997                           global __ptext1155
  6998  14AA                     __ptext1155:
  6999                           
  7000 ;; *************** function _spi_transfer *****************
  7001 ;; Defined at:
  7002 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  data            1    wreg     unsigned char 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  data            1    2[BANK1 ] unsigned char 
  7007 ;;  temp            1    1[BANK1 ] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      unsigned char 
  7010 ;; Registers used:
  7011 ;;		wreg
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7017 ;;      Params:         0       0       0       0       0
  7018 ;;      Locals:         0       0       2       0       0
  7019 ;;      Temps:          0       0       1       0       0
  7020 ;;      Totals:         0       0       3       0       0
  7021 ;;Total ram usage:        3 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    5
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_rotate
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           psect	text1155
  7031                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7032                           	line	34
  7033                           	global	__size_of_spi_transfer
  7034  001E                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7035                           	
  7036  14AA                     _spi_transfer:	
  7037                           	opt	stack 1
  7038                           ; Regs used in _spi_transfer: [wreg]
  7039                           ;spi_transfer@data stored from wreg
  7040  14AA  1683               	bsf	status, 5	;RP0=1, select bank1
  7041  14AB  1303               	bcf	status, 6	;RP1=0, select bank1
  7042  14AC  00A2               	movwf	(spi_transfer@data)^080h
  7043                           	line	35
  7044                           	
  7045  14AD                     l11284:	
  7046                           ;steppermotor.c: 35: unsigned char temp = 0;
  7047  14AD  01A1               	clrf	(spi_transfer@temp)^080h
  7048                           	line	37
  7049                           ;steppermotor.c: 37: SSPIF = 0;
  7050  14AE  1283               	bcf	status, 5	;RP0=0, select bank0
  7051  14AF  1303               	bcf	status, 6	;RP1=0, select bank0
  7052  14B0  118C               	bcf	(99/8),(99)&7
  7053                           	line	38
  7054                           	
  7055  14B1                     l11286:	
  7056                           ;steppermotor.c: 38: SSPBUF = data;
  7057  14B1  1683               	bsf	status, 5	;RP0=1, select bank1
  7058  14B2  1303               	bcf	status, 6	;RP1=0, select bank1
  7059  14B3  0822               	movf	(spi_transfer@data)^080h,w
  7060  14B4  1283               	bcf	status, 5	;RP0=0, select bank0
  7061  14B5  1303               	bcf	status, 6	;RP1=0, select bank0
  7062  14B6  0093               	movwf	(19)	;volatile
  7063                           	line	40
  7064                           ;steppermotor.c: 40: while (SSPIF == 0);
  7065  14B7  2CB8               	goto	l3671
  7066                           	
  7067  14B8                     l3672:	
  7068                           	
  7069  14B8                     l3671:	
  7070  14B8  1D8C               	btfss	(99/8),(99)&7
  7071  14B9  2CBB               	goto	u4571
  7072  14BA  2CBC               	goto	u4570
  7073  14BB                     u4571:
  7074  14BB  2CB8               	goto	l3671
  7075  14BC                     u4570:
  7076  14BC  2CBD               	goto	l11288
  7077                           	
  7078  14BD                     l3673:	
  7079                           	line	41
  7080                           	
  7081  14BD                     l11288:	
  7082                           ;steppermotor.c: 41: temp = SSPBUF;
  7083  14BD  0813               	movf	(19),w	;volatile
  7084  14BE  1683               	bsf	status, 5	;RP0=1, select bank1
  7085  14BF  1303               	bcf	status, 6	;RP1=0, select bank1
  7086  14C0  00A0               	movwf	(??_spi_transfer+0)^080h+0
  7087  14C1  0820               	movf	(??_spi_transfer+0)^080h+0,w
  7088  14C2  00A1               	movwf	(spi_transfer@temp)^080h
  7089                           	line	42
  7090                           	
  7091  14C3                     l11290:	
  7092                           ;steppermotor.c: 42: SSPIF = 0;
  7093  14C3  1283               	bcf	status, 5	;RP0=0, select bank0
  7094  14C4  1303               	bcf	status, 6	;RP1=0, select bank0
  7095  14C5  118C               	bcf	(99/8),(99)&7
  7096  14C6  2CC7               	goto	l3674
  7097                           	line	44
  7098                           	
  7099  14C7                     l11292:	
  7100                           	line	45
  7101                           ;steppermotor.c: 44: return temp;
  7102                           ;	Return value of _spi_transfer is never used
  7103                           	
  7104  14C7                     l3674:	
  7105  14C7  0008               	return
  7106                           	opt stack 0
  7107                           GLOBAL	__end_of_spi_transfer
  7108  14C8                     	__end_of_spi_transfer:
  7109 ;; =============== function _spi_transfer ends ============
  7110                           
  7111                           	signat	_spi_transfer,4217
  7112                           	global	_Menu
  7113                           psect	text1156,local,class=CODE,delta=2
  7114                           global __ptext1156
  7115  16A5                     __ptext1156:
  7116                           
  7117 ;; *************** function _Menu *****************
  7118 ;; Defined at:
  7119 ;;		line 180 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  input           1    wreg     unsigned char 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  input           1    0[BANK1 ] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      unsigned char 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7133 ;;      Params:         0       0       0       0       0
  7134 ;;      Locals:         0       0       1       0       0
  7135 ;;      Temps:          0       0       0       0       0
  7136 ;;      Totals:         0       0       1       0       0
  7137 ;;Total ram usage:        1 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    5
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           psect	text1156
  7147                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7148                           	line	180
  7149                           	global	__size_of_Menu
  7150  0040                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7151                           	
  7152  16A5                     _Menu:	
  7153                           	opt	stack 2
  7154                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7155                           ;Menu@input stored from wreg
  7156  16A5  1683               	bsf	status, 5	;RP0=1, select bank1
  7157  16A6  1303               	bcf	status, 6	;RP1=0, select bank1
  7158  16A7  00A0               	movwf	(Menu@input)^080h
  7159                           	line	181
  7160                           	
  7161  16A8                     l11260:	
  7162                           ;HMI.c: 181: switch (input)
  7163  16A8  2ED1               	goto	l11278
  7164                           	line	183
  7165                           ;HMI.c: 182: {
  7166                           ;HMI.c: 183: case 1:
  7167                           	
  7168  16A9                     l5225:	
  7169                           	line	185
  7170                           ;HMI.c: 185: break;
  7171  16A9  2EE2               	goto	l11280
  7172                           	line	186
  7173                           ;HMI.c: 186: case 2:
  7174                           	
  7175  16AA                     l5227:	
  7176                           	line	188
  7177                           ;HMI.c: 188: break;
  7178  16AA  2EE2               	goto	l11280
  7179                           	line	189
  7180                           ;HMI.c: 189: case 3:
  7181                           	
  7182  16AB                     l5228:	
  7183                           	line	190
  7184                           	
  7185  16AB                     l11262:	
  7186                           ;HMI.c: 190: pos--;
  7187  16AB  30FF               	movlw	low(-1)
  7188  16AC  07EA               	addwf	(_pos)^080h,f
  7189  16AD  1803               	skipnc
  7190  16AE  0AEB               	incf	(_pos+1)^080h,f
  7191  16AF  30FF               	movlw	high(-1)
  7192  16B0  07EB               	addwf	(_pos+1)^080h,f
  7193                           	line	191
  7194                           	
  7195  16B1                     l11264:	
  7196                           ;HMI.c: 191: if (pos < 0)
  7197  16B1  1FEB               	btfss	(_pos+1)^080h,7
  7198  16B2  2EB4               	goto	u4551
  7199  16B3  2EB5               	goto	u4550
  7200  16B4                     u4551:
  7201  16B4  2EE2               	goto	l11280
  7202  16B5                     u4550:
  7203                           	line	192
  7204                           	
  7205  16B5                     l11266:	
  7206                           ;HMI.c: 192: pos = 5 - 1;
  7207  16B5  3004               	movlw	low(04h)
  7208  16B6  00EA               	movwf	(_pos)^080h
  7209  16B7  3000               	movlw	high(04h)
  7210  16B8  00EB               	movwf	((_pos)^080h)+1
  7211  16B9  2EE2               	goto	l11280
  7212                           	
  7213  16BA                     l5229:	
  7214                           	line	194
  7215                           ;HMI.c: 194: break;
  7216  16BA  2EE2               	goto	l11280
  7217                           	line	195
  7218                           ;HMI.c: 195: case 4:
  7219                           	
  7220  16BB                     l5230:	
  7221                           	line	196
  7222                           	
  7223  16BB                     l11268:	
  7224                           ;HMI.c: 196: pos++;
  7225  16BB  3001               	movlw	low(01h)
  7226  16BC  07EA               	addwf	(_pos)^080h,f
  7227  16BD  1803               	skipnc
  7228  16BE  0AEB               	incf	(_pos+1)^080h,f
  7229  16BF  3000               	movlw	high(01h)
  7230  16C0  07EB               	addwf	(_pos+1)^080h,f
  7231                           	line	197
  7232                           ;HMI.c: 197: if (pos == 5)
  7233  16C1  3005               	movlw	05h
  7234  16C2  066A               	xorwf	(_pos)^080h,w
  7235  16C3  046B               	iorwf	(_pos+1)^080h,w
  7236  16C4  1D03               	skipz
  7237  16C5  2EC7               	goto	u4561
  7238  16C6  2EC8               	goto	u4560
  7239  16C7                     u4561:
  7240  16C7  2EE2               	goto	l11280
  7241  16C8                     u4560:
  7242                           	line	198
  7243                           	
  7244  16C8                     l11270:	
  7245                           ;HMI.c: 198: pos = 0;
  7246  16C8  01EA               	clrf	(_pos)^080h
  7247  16C9  01EB               	clrf	(_pos+1)^080h
  7248  16CA  2EE2               	goto	l11280
  7249                           	
  7250  16CB                     l5231:	
  7251                           	line	200
  7252                           ;HMI.c: 200: break;
  7253  16CB  2EE2               	goto	l11280
  7254                           	line	201
  7255                           ;HMI.c: 201: case 5:
  7256                           	
  7257  16CC                     l5232:	
  7258                           	line	202
  7259                           	
  7260  16CC                     l11272:	
  7261                           ;HMI.c: 202: return pos;
  7262  16CC  086A               	movf	(_pos)^080h,w
  7263  16CD  2EE4               	goto	l5233
  7264                           	
  7265  16CE                     l11274:	
  7266  16CE  2EE4               	goto	l5233
  7267                           	line	205
  7268                           ;HMI.c: 205: default:
  7269                           	
  7270  16CF                     l5234:	
  7271                           	line	207
  7272                           ;HMI.c: 207: break;
  7273  16CF  2EE2               	goto	l11280
  7274                           	line	208
  7275                           	
  7276  16D0                     l11276:	
  7277                           ;HMI.c: 208: }
  7278  16D0  2EE2               	goto	l11280
  7279                           	line	181
  7280                           	
  7281  16D1                     l5224:	
  7282                           	
  7283  16D1                     l11278:	
  7284  16D1  0820               	movf	(Menu@input)^080h,w
  7285                           	; Switch size 1, requested type "space"
  7286                           ; Number of cases is 5, Range of values is 1 to 5
  7287                           ; switch strategies available:
  7288                           ; Name         Instructions Cycles
  7289                           ; simple_byte           16     9 (average)
  7290                           ; direct_byte           26    11 (fixed)
  7291                           ; jumptable            263     9 (fixed)
  7292                           ;	Chosen strategy is simple_byte
  7293                           
  7294                           	opt asmopt_off
  7295  16D2  3A01               	xorlw	1^0	; case 1
  7296  16D3  1903               	skipnz
  7297  16D4  2EE2               	goto	l11280
  7298  16D5  3A03               	xorlw	2^1	; case 2
  7299  16D6  1903               	skipnz
  7300  16D7  2EE2               	goto	l11280
  7301  16D8  3A01               	xorlw	3^2	; case 3
  7302  16D9  1903               	skipnz
  7303  16DA  2EAB               	goto	l11262
  7304  16DB  3A07               	xorlw	4^3	; case 4
  7305  16DC  1903               	skipnz
  7306  16DD  2EBB               	goto	l11268
  7307  16DE  3A01               	xorlw	5^4	; case 5
  7308  16DF  1903               	skipnz
  7309  16E0  2ECC               	goto	l11272
  7310  16E1  2EE2               	goto	l11280
  7311                           	opt asmopt_on
  7312                           
  7313                           	line	208
  7314                           	
  7315  16E2                     l5226:	
  7316                           	line	209
  7317                           	
  7318  16E2                     l11280:	
  7319                           ;HMI.c: 209: return 255;
  7320  16E2  30FF               	movlw	(0FFh)
  7321  16E3  2EE4               	goto	l5233
  7322                           	
  7323  16E4                     l11282:	
  7324                           	line	210
  7325                           	
  7326  16E4                     l5233:	
  7327  16E4  0008               	return
  7328                           	opt stack 0
  7329                           GLOBAL	__end_of_Menu
  7330  16E5                     	__end_of_Menu:
  7331 ;; =============== function _Menu ends ============
  7332                           
  7333                           	signat	_Menu,4217
  7334                           	global	_ser_init
  7335                           psect	text1157,local,class=CODE,delta=2
  7336                           global __ptext1157
  7337  1516                     __ptext1157:
  7338                           
  7339 ;; *************** function _ser_init *****************
  7340 ;; Defined at:
  7341 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;		None               void
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7355 ;;      Params:         0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0
  7357 ;;      Temps:          0       0       1       0       0
  7358 ;;      Totals:         0       0       1       0       0
  7359 ;;Total ram usage:        1 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    5
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_init
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           psect	text1157
  7369                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7370                           	line	113
  7371                           	global	__size_of_ser_init
  7372  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7373                           	
  7374  1516                     _ser_init:	
  7375                           	opt	stack 1
  7376                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7377                           	line	114
  7378                           	
  7379  1516                     l11234:	
  7380                           ;ser.c: 114: TRISC |= 0b10000000;
  7381  1516  1683               	bsf	status, 5	;RP0=1, select bank1
  7382  1517  1303               	bcf	status, 6	;RP1=0, select bank1
  7383  1518  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7384                           	line	115
  7385                           	
  7386  1519                     l11236:	
  7387                           ;ser.c: 115: TRISC &= 0b10111111;
  7388  1519  30BF               	movlw	(0BFh)
  7389  151A  00A0               	movwf	(??_ser_init+0)^080h+0
  7390  151B  0820               	movf	(??_ser_init+0)^080h+0,w
  7391  151C  0587               	andwf	(135)^080h,f	;volatile
  7392                           	line	116
  7393                           	
  7394  151D                     l11238:	
  7395                           ;ser.c: 116: BRGH=1;
  7396  151D  1518               	bsf	(1218/8)^080h,(1218)&7
  7397                           	line	118
  7398                           	
  7399  151E                     l11240:	
  7400                           ;ser.c: 118: SPBRG=20;
  7401  151E  3014               	movlw	(014h)
  7402  151F  0099               	movwf	(153)^080h	;volatile
  7403                           	line	121
  7404                           	
  7405  1520                     l11242:	
  7406                           ;ser.c: 121: TX9=0;
  7407  1520  1318               	bcf	(1222/8)^080h,(1222)&7
  7408                           	line	122
  7409                           	
  7410  1521                     l11244:	
  7411                           ;ser.c: 122: RX9=0;
  7412  1521  1283               	bcf	status, 5	;RP0=0, select bank0
  7413  1522  1303               	bcf	status, 6	;RP1=0, select bank0
  7414  1523  1318               	bcf	(198/8),(198)&7
  7415                           	line	124
  7416                           	
  7417  1524                     l11246:	
  7418                           ;ser.c: 124: SYNC=0;
  7419  1524  1683               	bsf	status, 5	;RP0=1, select bank1
  7420  1525  1303               	bcf	status, 6	;RP1=0, select bank1
  7421  1526  1218               	bcf	(1220/8)^080h,(1220)&7
  7422                           	line	125
  7423                           	
  7424  1527                     l11248:	
  7425                           ;ser.c: 125: SPEN=1;
  7426  1527  1283               	bcf	status, 5	;RP0=0, select bank0
  7427  1528  1303               	bcf	status, 6	;RP1=0, select bank0
  7428  1529  1798               	bsf	(199/8),(199)&7
  7429                           	line	126
  7430                           	
  7431  152A                     l11250:	
  7432                           ;ser.c: 126: CREN=1;
  7433  152A  1618               	bsf	(196/8),(196)&7
  7434                           	line	127
  7435                           	
  7436  152B                     l11252:	
  7437                           ;ser.c: 127: TXIE=0;
  7438  152B  1683               	bsf	status, 5	;RP0=1, select bank1
  7439  152C  1303               	bcf	status, 6	;RP1=0, select bank1
  7440  152D  120C               	bcf	(1124/8)^080h,(1124)&7
  7441                           	line	128
  7442                           	
  7443  152E                     l11254:	
  7444                           ;ser.c: 128: RCIE=1;
  7445  152E  168C               	bsf	(1125/8)^080h,(1125)&7
  7446                           	line	129
  7447                           	
  7448  152F                     l11256:	
  7449                           ;ser.c: 129: TXEN=1;
  7450  152F  1698               	bsf	(1221/8)^080h,(1221)&7
  7451                           	line	132
  7452                           	
  7453  1530                     l11258:	
  7454                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  7455  1530  3000               	movlw	(0)
  7456  1531  1283               	bcf	status, 5	;RP0=0, select bank0
  7457  1532  1303               	bcf	status, 6	;RP1=0, select bank0
  7458  1533  00EB               	movwf	(_txoptr)	;volatile
  7459  1534  00EA               	movwf	(_txiptr)	;volatile
  7460  1535  00E5               	movwf	(_rxoptr)	;volatile
  7461  1536  1683               	bsf	status, 5	;RP0=1, select bank1
  7462  1537  1303               	bcf	status, 6	;RP1=0, select bank1
  7463  1538  00A0               	movwf	(??_ser_init+0)^080h+0
  7464  1539  0820               	movf	(??_ser_init+0)^080h+0,w
  7465  153A  1283               	bcf	status, 5	;RP0=0, select bank0
  7466  153B  1303               	bcf	status, 6	;RP1=0, select bank0
  7467  153C  00E4               	movwf	(_rxiptr)	;volatile
  7468                           	line	133
  7469                           	
  7470  153D                     l4447:	
  7471  153D  0008               	return
  7472                           	opt stack 0
  7473                           GLOBAL	__end_of_ser_init
  7474  153E                     	__end_of_ser_init:
  7475 ;; =============== function _ser_init ends ============
  7476                           
  7477                           	signat	_ser_init,88
  7478                           	global	_adc_read
  7479                           psect	text1158,local,class=CODE,delta=2
  7480                           global __ptext1158
  7481  14EF                     __ptext1158:
  7482                           
  7483 ;; *************** function _adc_read *****************
  7484 ;; Defined at:
  7485 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  adc_value       2    4[BANK1 ] volatile unsigned int 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  2    0[BANK1 ] unsigned int 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7499 ;;      Params:         0       0       2       0       0
  7500 ;;      Locals:         0       0       2       0       0
  7501 ;;      Temps:          0       0       2       0       0
  7502 ;;      Totals:         0       0       6       0       0
  7503 ;;Total ram usage:        6 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    5
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_adc_read_channel
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           psect	text1158
  7513                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7514                           	line	61
  7515                           	global	__size_of_adc_read
  7516  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7517                           	
  7518  14EF                     _adc_read:	
  7519 ;; hardware stack exceeded
  7520                           	opt	stack 0
  7521                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7522                           	line	64
  7523                           	
  7524  14EF                     l11100:	
  7525                           ;adc.c: 62: volatile unsigned int adc_value;
  7526                           ;adc.c: 64: ADRESH = 0;
  7527  14EF  1283               	bcf	status, 5	;RP0=0, select bank0
  7528  14F0  1303               	bcf	status, 6	;RP1=0, select bank0
  7529  14F1  019E               	clrf	(30)	;volatile
  7530                           	line	66
  7531                           	
  7532  14F2                     l11102:	
  7533                           ;adc.c: 66: GO = 1;
  7534  14F2  151F               	bsf	(250/8),(250)&7
  7535                           	line	67
  7536                           ;adc.c: 67: while(GO) continue;
  7537  14F3  2CF4               	goto	l703
  7538                           	
  7539  14F4                     l704:	
  7540                           	
  7541  14F4                     l703:	
  7542  14F4  191F               	btfsc	(250/8),(250)&7
  7543  14F5  2CF7               	goto	u4331
  7544  14F6  2CF8               	goto	u4330
  7545  14F7                     u4331:
  7546  14F7  2CF4               	goto	l703
  7547  14F8                     u4330:
  7548                           	
  7549  14F8                     l705:	
  7550                           	line	68
  7551                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7552  14F8  0000               nop ;#
  7553                           	line	69
  7554                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7555  14F9  0000               nop ;#
  7556                           	line	70
  7557                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7558  14FA  0000               nop ;#
  7559                           psect	text1158
  7560                           	line	73
  7561                           	
  7562  14FB                     l11104:	
  7563                           ;adc.c: 73: adc_value = ADRESH;
  7564  14FB  1283               	bcf	status, 5	;RP0=0, select bank0
  7565  14FC  1303               	bcf	status, 6	;RP1=0, select bank0
  7566  14FD  081E               	movf	(30),w	;volatile
  7567  14FE  1683               	bsf	status, 5	;RP0=1, select bank1
  7568  14FF  1303               	bcf	status, 6	;RP1=0, select bank1
  7569  1500  00A2               	movwf	(??_adc_read+0)^080h+0
  7570  1501  01A3               	clrf	(??_adc_read+0)^080h+0+1
  7571  1502  0822               	movf	0+(??_adc_read+0)^080h+0,w
  7572  1503  00A4               	movwf	(adc_read@adc_value)^080h	;volatile
  7573  1504  0823               	movf	1+(??_adc_read+0)^080h+0,w
  7574  1505  00A5               	movwf	(adc_read@adc_value+1)^080h	;volatile
  7575                           	line	74
  7576                           ;adc.c: 74: adc_value <<= 1;
  7577  1506  3001               	movlw	01h
  7578                           	
  7579  1507                     u4345:
  7580  1507  1003               	clrc
  7581  1508  0DA4               	rlf	(adc_read@adc_value)^080h,f	;volatile
  7582  1509  0DA5               	rlf	(adc_read@adc_value+1)^080h,f	;volatile
  7583  150A  3EFF               	addlw	-1
  7584  150B  1D03               	skipz
  7585  150C  2D07               	goto	u4345
  7586                           	line	75
  7587                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7588  150D  081E               	movf	(158)^080h,w	;volatile
  7589                           	line	78
  7590                           	
  7591  150E                     l11106:	
  7592                           ;adc.c: 78: return (adc_value);
  7593  150E  0825               	movf	(adc_read@adc_value+1)^080h,w	;volatile
  7594  150F  01A1               	clrf	(?_adc_read+1)^080h
  7595  1510  07A1               	addwf	(?_adc_read+1)^080h
  7596  1511  0824               	movf	(adc_read@adc_value)^080h,w	;volatile
  7597  1512  01A0               	clrf	(?_adc_read)^080h
  7598  1513  07A0               	addwf	(?_adc_read)^080h
  7599                           
  7600  1514  2D15               	goto	l706
  7601                           	
  7602  1515                     l11108:	
  7603                           	line	79
  7604                           	
  7605  1515                     l706:	
  7606  1515  0008               	return
  7607                           	opt stack 0
  7608                           GLOBAL	__end_of_adc_read
  7609  1516                     	__end_of_adc_read:
  7610 ;; =============== function _adc_read ends ============
  7611                           
  7612                           	signat	_adc_read,90
  7613                           	global	_isr1
  7614                           psect	text1159,local,class=CODE,delta=2
  7615                           global __ptext1159
  7616  0E15                     __ptext1159:
  7617                           
  7618 ;; *************** function _isr1 *****************
  7619 ;; Defined at:
  7620 ;;		line 87 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;		None
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;		None               void
  7627 ;; Registers used:
  7628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7634 ;;      Params:         0       0       0       0       0
  7635 ;;      Locals:         0       0       0       0       0
  7636 ;;      Temps:          0       5       0       0       0
  7637 ;;      Totals:         0       5       0       0       0
  7638 ;;Total ram usage:        5 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    4
  7641 ;; This function calls:
  7642 ;;		i1___lwmod
  7643 ;;		i1_readAvgDistance
  7644 ;;		i1_UpdateDisplay
  7645 ;;		_ReadButtons
  7646 ;; This function is called by:
  7647 ;;		Interrupt level 1
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           psect	text1159
  7651                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  7652                           	line	87
  7653                           	global	__size_of_isr1
  7654  00EB                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  7655                           	
  7656  0E15                     _isr1:	
  7657 ;; hardware stack exceeded
  7658                           	opt	stack 0
  7659                           ; Regs used in _isr1: [allreg]
  7660                           psect	intentry,class=CODE,delta=2
  7661                           global __pintentry
  7662  0004                     __pintentry:
  7663                           global interrupt_function
  7664  0004                     interrupt_function:
  7665                           	global saved_w
  7666  007E                     	saved_w	set	btemp+0
  7667  0004  00FE               	movwf	saved_w
  7668  0005  0E03               	swapf	status,w
  7669  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  7670  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  7671  0008  00CD               	movwf	(??_isr1+1)
  7672  0009  0804               	movf	fsr0,w
  7673  000A  00CE               	movwf	(??_isr1+2)
  7674  000B  080A               	movf	pclath,w
  7675  000C  00CF               	movwf	(??_isr1+3)
  7676  000D  087F               	movf	btemp+1,w
  7677  000E  00D0               	movwf	(??_isr1+4)
  7678  000F  120A  158A  2E15   	ljmp	_isr1
  7679                           psect	text1159
  7680                           	line	89
  7681                           	
  7682  0E15                     i1l11136:	
  7683                           ;Main.c: 89: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  7684  0E15  1E8C               	btfss	(101/8),(101)&7
  7685  0E16  2E18               	goto	u438_21
  7686  0E17  2E19               	goto	u438_20
  7687  0E18                     u438_21:
  7688  0E18  2E33               	goto	i1l11146
  7689  0E19                     u438_20:
  7690                           	
  7691  0E19                     i1l11138:	
  7692  0E19  081A               	movf	(26),w	;volatile
  7693  0E1A  00CC               	movwf	(??_isr1+0)+0
  7694  0E1B  0864               	movf	(_rxiptr),w
  7695  0E1C  3EA0               	addlw	_rxfifo&0ffh
  7696  0E1D  0084               	movwf	fsr0
  7697  0E1E  084C               	movf	(??_isr1+0)+0,w
  7698  0E1F  1783               	bsf	status, 7	;select IRP bank3
  7699  0E20  0080               	movwf	indf
  7700                           	
  7701  0E21                     i1l11140:	
  7702  0E21  0864               	movf	(_rxiptr),w	;volatile
  7703  0E22  3E01               	addlw	01h
  7704  0E23  390F               	andlw	0Fh
  7705  0E24  00CC               	movwf	(??_isr1+0)+0
  7706  0E25  084C               	movf	(??_isr1+0)+0,w
  7707  0E26  00E6               	movwf	(_ser_tmp)
  7708                           	
  7709  0E27                     i1l11142:	
  7710  0E27  0866               	movf	(_ser_tmp),w
  7711  0E28  0665               	xorwf	(_rxoptr),w	;volatile
  7712  0E29  1903               	skipnz
  7713  0E2A  2E2C               	goto	u439_21
  7714  0E2B  2E2D               	goto	u439_20
  7715  0E2C                     u439_21:
  7716  0E2C  2E33               	goto	i1l11146
  7717  0E2D                     u439_20:
  7718                           	
  7719  0E2D                     i1l11144:	
  7720  0E2D  0866               	movf	(_ser_tmp),w
  7721  0E2E  00CC               	movwf	(??_isr1+0)+0
  7722  0E2F  084C               	movf	(??_isr1+0)+0,w
  7723  0E30  00E4               	movwf	(_rxiptr)	;volatile
  7724  0E31  2E33               	goto	i1l11146
  7725                           	
  7726  0E32                     i1l2197:	
  7727  0E32  2E33               	goto	i1l11146
  7728                           	
  7729  0E33                     i1l2196:	
  7730                           	
  7731  0E33                     i1l11146:	
  7732  0E33  1E0C               	btfss	(100/8),(100)&7
  7733  0E34  2E36               	goto	u440_21
  7734  0E35  2E37               	goto	u440_20
  7735  0E36                     u440_21:
  7736  0E36  2E57               	goto	i1l2198
  7737  0E37                     u440_20:
  7738                           	
  7739  0E37                     i1l11148:	
  7740  0E37  1683               	bsf	status, 5	;RP0=1, select bank1
  7741  0E38  1303               	bcf	status, 6	;RP1=0, select bank1
  7742  0E39  1E0C               	btfss	(1124/8)^080h,(1124)&7
  7743  0E3A  2E3C               	goto	u441_21
  7744  0E3B  2E3D               	goto	u441_20
  7745  0E3C                     u441_21:
  7746  0E3C  2E57               	goto	i1l2198
  7747  0E3D                     u441_20:
  7748                           	
  7749  0E3D                     i1l11150:	
  7750  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  7751  0E3E  1303               	bcf	status, 6	;RP1=0, select bank0
  7752  0E3F  086B               	movf	(_txoptr),w
  7753  0E40  3EB0               	addlw	_txfifo&0ffh
  7754  0E41  0084               	movwf	fsr0
  7755  0E42  1783               	bsf	status, 7	;select IRP bank3
  7756  0E43  0800               	movf	indf,w
  7757  0E44  0099               	movwf	(25)	;volatile
  7758                           	
  7759  0E45                     i1l11152:	
  7760  0E45  3001               	movlw	(01h)
  7761  0E46  00CC               	movwf	(??_isr1+0)+0
  7762  0E47  084C               	movf	(??_isr1+0)+0,w
  7763  0E48  07EB               	addwf	(_txoptr),f	;volatile
  7764                           	
  7765  0E49                     i1l11154:	
  7766  0E49  300F               	movlw	(0Fh)
  7767  0E4A  00CC               	movwf	(??_isr1+0)+0
  7768  0E4B  084C               	movf	(??_isr1+0)+0,w
  7769  0E4C  05EB               	andwf	(_txoptr),f	;volatile
  7770                           	
  7771  0E4D                     i1l11156:	
  7772  0E4D  086B               	movf	(_txoptr),w	;volatile
  7773  0E4E  066A               	xorwf	(_txiptr),w	;volatile
  7774  0E4F  1D03               	skipz
  7775  0E50  2E52               	goto	u442_21
  7776  0E51  2E53               	goto	u442_20
  7777  0E52                     u442_21:
  7778  0E52  2E57               	goto	i1l2198
  7779  0E53                     u442_20:
  7780                           	
  7781  0E53                     i1l11158:	
  7782  0E53  1683               	bsf	status, 5	;RP0=1, select bank1
  7783  0E54  1303               	bcf	status, 6	;RP1=0, select bank1
  7784  0E55  120C               	bcf	(1124/8)^080h,(1124)&7
  7785  0E56  2E57               	goto	i1l2198
  7786                           	
  7787  0E57                     i1l2199:	
  7788                           	
  7789  0E57                     i1l2198:	
  7790                           	line	92
  7791                           ;Main.c: 92: if(TMR0IF)
  7792  0E57  1D0B               	btfss	(90/8),(90)&7
  7793  0E58  2E5A               	goto	u443_21
  7794  0E59  2E5B               	goto	u443_20
  7795  0E5A                     u443_21:
  7796  0E5A  2EF4               	goto	i1l2207
  7797  0E5B                     u443_20:
  7798                           	line	94
  7799                           	
  7800  0E5B                     i1l11160:	
  7801                           ;Main.c: 93: {
  7802                           ;Main.c: 94: TMR0IF = 0;
  7803  0E5B  110B               	bcf	(90/8),(90)&7
  7804                           	line	95
  7805                           	
  7806  0E5C                     i1l11162:	
  7807                           ;Main.c: 95: TMR0 = 100;
  7808  0E5C  3064               	movlw	(064h)
  7809  0E5D  1283               	bcf	status, 5	;RP0=0, select bank0
  7810  0E5E  0081               	movwf	(1)	;volatile
  7811                           	line	97
  7812                           ;Main.c: 97: RTC_Counter++;
  7813  0E5F  3001               	movlw	low(01h)
  7814  0E60  07D1               	addwf	(_RTC_Counter),f	;volatile
  7815  0E61  1803               	skipnc
  7816  0E62  0AD2               	incf	(_RTC_Counter+1),f	;volatile
  7817  0E63  3000               	movlw	high(01h)
  7818  0E64  07D2               	addwf	(_RTC_Counter+1),f	;volatile
  7819                           	line	99
  7820                           	
  7821  0E65                     i1l11164:	
  7822                           ;Main.c: 99: RTC_FLAG_1MS = 1;
  7823  0E65  17EC               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  7824                           	line	100
  7825                           	
  7826  0E66                     i1l11166:	
  7827                           ;Main.c: 100: if(RTC_Counter % 10 == 0)
  7828  0E66  300A               	movlw	low(0Ah)
  7829  0E67  00A0               	movwf	(?i1___lwmod)
  7830  0E68  3000               	movlw	high(0Ah)
  7831  0E69  00A1               	movwf	((?i1___lwmod))+1
  7832  0E6A  0852               	movf	(_RTC_Counter+1),w	;volatile
  7833  0E6B  01A3               	clrf	1+(?i1___lwmod)+02h
  7834  0E6C  07A3               	addwf	1+(?i1___lwmod)+02h
  7835  0E6D  0851               	movf	(_RTC_Counter),w	;volatile
  7836  0E6E  01A2               	clrf	0+(?i1___lwmod)+02h
  7837  0E6F  07A2               	addwf	0+(?i1___lwmod)+02h
  7838                           
  7839  0E70  160A  118A  2726   	fcall	i1___lwmod
              120A  158A         
  7840  0E75  1283               	bcf	status, 5	;RP0=0, select bank0
  7841  0E76  1303               	bcf	status, 6	;RP1=0, select bank0
  7842  0E77  0821               	movf	((1+(?i1___lwmod))),w
  7843  0E78  0420               	iorwf	((0+(?i1___lwmod))),w
  7844  0E79  1D03               	skipz
  7845  0E7A  2E7C               	goto	u444_21
  7846  0E7B  2E7D               	goto	u444_20
  7847  0E7C                     u444_21:
  7848  0E7C  2E7F               	goto	i1l11170
  7849  0E7D                     u444_20:
  7850                           	line	102
  7851                           	
  7852  0E7D                     i1l11168:	
  7853                           ;Main.c: 101: {
  7854                           ;Main.c: 102: RTC_FLAG_10MS = 1;
  7855  0E7D  176C               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  7856  0E7E  2E7F               	goto	i1l11170
  7857                           	line	105
  7858                           	
  7859  0E7F                     i1l2201:	
  7860                           	line	106
  7861                           	
  7862  0E7F                     i1l11170:	
  7863                           ;Main.c: 105: }
  7864                           ;Main.c: 106: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  7865  0E7F  3032               	movlw	low(032h)
  7866  0E80  00A0               	movwf	(?i1___lwmod)
  7867  0E81  3000               	movlw	high(032h)
  7868  0E82  00A1               	movwf	((?i1___lwmod))+1
  7869  0E83  0852               	movf	(_RTC_Counter+1),w	;volatile
  7870  0E84  01A3               	clrf	1+(?i1___lwmod)+02h
  7871  0E85  07A3               	addwf	1+(?i1___lwmod)+02h
  7872  0E86  0851               	movf	(_RTC_Counter),w	;volatile
  7873  0E87  01A2               	clrf	0+(?i1___lwmod)+02h
  7874  0E88  07A2               	addwf	0+(?i1___lwmod)+02h
  7875                           
  7876  0E89  160A  118A  2726   	fcall	i1___lwmod
              120A  158A         
  7877  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  7878  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  7879  0E90  0821               	movf	((1+(?i1___lwmod))),w
  7880  0E91  0420               	iorwf	((0+(?i1___lwmod))),w
  7881  0E92  1D03               	skipz
  7882  0E93  2E95               	goto	u445_21
  7883  0E94  2E96               	goto	u445_20
  7884  0E95                     u445_21:
  7885  0E95  2E98               	goto	i1l11174
  7886  0E96                     u445_20:
  7887                           	
  7888  0E96                     i1l11172:	
  7889  0E96  156D               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  7890  0E97  2E98               	goto	i1l11174
  7891                           	
  7892  0E98                     i1l2202:	
  7893                           	line	107
  7894                           	
  7895  0E98                     i1l11174:	
  7896                           ;Main.c: 107: if(RTC_Counter % 250 == 0)
  7897  0E98  30FA               	movlw	low(0FAh)
  7898  0E99  00A0               	movwf	(?i1___lwmod)
  7899  0E9A  3000               	movlw	high(0FAh)
  7900  0E9B  00A1               	movwf	((?i1___lwmod))+1
  7901  0E9C  0852               	movf	(_RTC_Counter+1),w	;volatile
  7902  0E9D  01A3               	clrf	1+(?i1___lwmod)+02h
  7903  0E9E  07A3               	addwf	1+(?i1___lwmod)+02h
  7904  0E9F  0851               	movf	(_RTC_Counter),w	;volatile
  7905  0EA0  01A2               	clrf	0+(?i1___lwmod)+02h
  7906  0EA1  07A2               	addwf	0+(?i1___lwmod)+02h
  7907                           
  7908  0EA2  160A  118A  2726   	fcall	i1___lwmod
              120A  158A         
  7909  0EA7  1283               	bcf	status, 5	;RP0=0, select bank0
  7910  0EA8  1303               	bcf	status, 6	;RP1=0, select bank0
  7911  0EA9  0821               	movf	((1+(?i1___lwmod))),w
  7912  0EAA  0420               	iorwf	((0+(?i1___lwmod))),w
  7913  0EAB  1D03               	skipz
  7914  0EAC  2EAE               	goto	u446_21
  7915  0EAD  2EAF               	goto	u446_20
  7916  0EAE                     u446_21:
  7917  0EAE  2EC6               	goto	i1l11184
  7918  0EAF                     u446_20:
  7919                           	line	109
  7920                           	
  7921  0EAF                     i1l11176:	
  7922                           ;Main.c: 108: {
  7923                           ;Main.c: 109: if (SCAN_FLAG == 0)
  7924  0EAF  08DF               	movf	(_SCAN_FLAG),f
  7925  0EB0  1D03               	skipz
  7926  0EB1  2EB3               	goto	u447_21
  7927  0EB2  2EB4               	goto	u447_20
  7928  0EB3                     u447_21:
  7929  0EB3  2EC2               	goto	i1l11182
  7930  0EB4                     u447_20:
  7931                           	line	111
  7932                           	
  7933  0EB4                     i1l11178:	
  7934                           ;Main.c: 110: {
  7935                           ;Main.c: 111: readAvgDistance();
  7936  0EB4  120A  158A  2166   	fcall	i1_readAvgDistance
              120A  158A         
  7937                           	line	112
  7938                           	
  7939  0EB9                     i1l11180:	
  7940                           ;Main.c: 112: UpdateDisplay(serialInput);
  7941  0EB9  1283               	bcf	status, 5	;RP0=0, select bank0
  7942  0EBA  1303               	bcf	status, 6	;RP1=0, select bank0
  7943  0EBB  0867               	movf	(_serialInput),w	;volatile
  7944  0EBC  120A  118A  2459   	fcall	i1_UpdateDisplay
              120A  158A         
  7945  0EC1  2EC2               	goto	i1l11182
  7946                           	line	113
  7947                           	
  7948  0EC2                     i1l2204:	
  7949                           	line	114
  7950                           	
  7951  0EC2                     i1l11182:	
  7952                           ;Main.c: 113: }
  7953                           ;Main.c: 114: RTC_FLAG_250MS = 1;
  7954  0EC2  1283               	bcf	status, 5	;RP0=0, select bank0
  7955  0EC3  1303               	bcf	status, 6	;RP1=0, select bank0
  7956  0EC4  146D               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  7957  0EC5  2EC6               	goto	i1l11184
  7958                           	line	116
  7959                           	
  7960  0EC6                     i1l2203:	
  7961                           	line	117
  7962                           	
  7963  0EC6                     i1l11184:	
  7964                           ;Main.c: 116: }
  7965                           ;Main.c: 117: if(RTC_Counter % 500 == 0)
  7966  0EC6  30F4               	movlw	low(01F4h)
  7967  0EC7  00A0               	movwf	(?i1___lwmod)
  7968  0EC8  3001               	movlw	high(01F4h)
  7969  0EC9  00A1               	movwf	((?i1___lwmod))+1
  7970  0ECA  0852               	movf	(_RTC_Counter+1),w	;volatile
  7971  0ECB  01A3               	clrf	1+(?i1___lwmod)+02h
  7972  0ECC  07A3               	addwf	1+(?i1___lwmod)+02h
  7973  0ECD  0851               	movf	(_RTC_Counter),w	;volatile
  7974  0ECE  01A2               	clrf	0+(?i1___lwmod)+02h
  7975  0ECF  07A2               	addwf	0+(?i1___lwmod)+02h
  7976                           
  7977  0ED0  160A  118A  2726   	fcall	i1___lwmod
              120A  158A         
  7978  0ED5  1283               	bcf	status, 5	;RP0=0, select bank0
  7979  0ED6  1303               	bcf	status, 6	;RP1=0, select bank0
  7980  0ED7  0821               	movf	((1+(?i1___lwmod))),w
  7981  0ED8  0420               	iorwf	((0+(?i1___lwmod))),w
  7982  0ED9  1D03               	skipz
  7983  0EDA  2EDC               	goto	u448_21
  7984  0EDB  2EDD               	goto	u448_20
  7985  0EDC                     u448_21:
  7986  0EDC  2EE3               	goto	i1l11192
  7987  0EDD                     u448_20:
  7988                           	line	119
  7989                           	
  7990  0EDD                     i1l11186:	
  7991                           ;Main.c: 118: {
  7992                           ;Main.c: 119: RTC_FLAG_500MS = 1;
  7993  0EDD  14ED               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  7994                           	line	120
  7995                           	
  7996  0EDE                     i1l11188:	
  7997                           ;Main.c: 120: RTC_Counter = 0;
  7998  0EDE  01D1               	clrf	(_RTC_Counter)	;volatile
  7999  0EDF  01D2               	clrf	(_RTC_Counter+1)	;volatile
  8000                           	line	121
  8001                           	
  8002  0EE0                     i1l11190:	
  8003                           ;Main.c: 121: RB0 ^= 0x01;
  8004  0EE0  3001               	movlw	1<<((48)&7)
  8005  0EE1  0686               	xorwf	((48)/8),f
  8006  0EE2  2EE3               	goto	i1l11192
  8007                           	line	122
  8008                           	
  8009  0EE3                     i1l2205:	
  8010                           	line	124
  8011                           	
  8012  0EE3                     i1l11192:	
  8013                           ;Main.c: 122: }
  8014                           ;Main.c: 124: if (buttonPressed == 0)
  8015  0EE3  08E1               	movf	(_buttonPressed),f
  8016  0EE4  1D03               	skipz	;volatile
  8017  0EE5  2EE7               	goto	u449_21
  8018  0EE6  2EE8               	goto	u449_20
  8019  0EE7                     u449_21:
  8020  0EE7  2EF4               	goto	i1l2207
  8021  0EE8                     u449_20:
  8022                           	line	126
  8023                           	
  8024  0EE8                     i1l11194:	
  8025                           ;Main.c: 125: {
  8026                           ;Main.c: 126: buttonPressed = ReadButtons();
  8027  0EE8  160A  118A  2640   	fcall	_ReadButtons
              120A  158A         
  8028  0EED  1283               	bcf	status, 5	;RP0=0, select bank0
  8029  0EEE  1303               	bcf	status, 6	;RP1=0, select bank0
  8030  0EEF  00CC               	movwf	(??_isr1+0)+0
  8031  0EF0  084C               	movf	(??_isr1+0)+0,w
  8032  0EF1  00E1               	movwf	(_buttonPressed)	;volatile
  8033  0EF2  2EF4               	goto	i1l2207
  8034                           	line	127
  8035                           	
  8036  0EF3                     i1l2206:	
  8037  0EF3  2EF4               	goto	i1l2207
  8038                           	line	128
  8039                           	
  8040  0EF4                     i1l2200:	
  8041                           	line	129
  8042                           	
  8043  0EF4                     i1l2207:	
  8044  0EF4  1283               	bcf	status, 5	;RP0=0, select bank0
  8045  0EF5  0850               	movf	(??_isr1+4),w
  8046  0EF6  00FF               	movwf	btemp+1
  8047  0EF7  084F               	movf	(??_isr1+3),w
  8048  0EF8  008A               	movwf	pclath
  8049  0EF9  084E               	movf	(??_isr1+2),w
  8050  0EFA  0084               	movwf	fsr0
  8051  0EFB  0E4D               	swapf	(??_isr1+1)^00h,w
  8052  0EFC  0083               	movwf	status
  8053  0EFD  0EFE               	swapf	saved_w,f
  8054  0EFE  0E7E               	swapf	saved_w,w
  8055  0EFF  0009               	retfie
  8056                           	opt stack 0
  8057                           GLOBAL	__end_of_isr1
  8058  0F00                     	__end_of_isr1:
  8059 ;; =============== function _isr1 ends ============
  8060                           
  8061                           	signat	_isr1,88
  8062                           	global	i1_UpdateDisplay
  8063                           psect	text1160,local,class=CODE,delta=2
  8064                           global __ptext1160
  8065  0459                     __ptext1160:
  8066                           
  8067 ;; *************** function i1_UpdateDisplay *****************
  8068 ;; Defined at:
  8069 ;;		line 215 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  UpdateDispla    1    wreg     unsigned char 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  UpdateDispla    1 (no storage) unsigned char 
  8074 ;;  UpdateDispla   16   28[BANK0 ] unsigned char [16]
  8075 ;; Return value:  Size  Location     Type
  8076 ;;		None               void
  8077 ;; Registers used:
  8078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8084 ;;      Params:         0       0       0       0       0
  8085 ;;      Locals:         0      16       0       0       0
  8086 ;;      Temps:          0       5       0       0       0
  8087 ;;      Totals:         0      21       0       0       0
  8088 ;;Total ram usage:       21 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    2
  8091 ;; This function calls:
  8092 ;;		i1_lcd_write_control
  8093 ;;		i1_sprintf
  8094 ;;		i1_lcd_set_cursor
  8095 ;;		i1_lcd_write_string
  8096 ;;		i1___awmod
  8097 ;; This function is called by:
  8098 ;;		_isr1
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           psect	text1160
  8102                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8103                           	line	215
  8104                           	global	__size_ofi1_UpdateDisplay
  8105  013B                     	__size_ofi1_UpdateDisplay	equ	__end_ofi1_UpdateDisplay-i1_UpdateDisplay
  8106                           	
  8107  0459                     i1_UpdateDisplay:	
  8108 ;; hardware stack exceeded
  8109                           	opt	stack 0
  8110                           ; Regs used in i1_UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8111                           	line	216
  8112                           	
  8113  0459                     i1l11696:	
  8114                           ;HMI.c: 216: char adcOutput[16] = "";
  8115  0459  303C               	movlw	(i1UpdateDisplay@adcOutput)&0ffh
  8116  045A  0084               	movwf	fsr0
  8117  045B  3090               	movlw	low(UpdateDisplay@F1223)
  8118  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  8119  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  8120  045E  00B7               	movwf	(??i1_UpdateDisplay+0)+0
  8121  045F  0804               	movf	fsr0,w
  8122  0460  00B8               	movwf	((??i1_UpdateDisplay+0)+0+1)
  8123  0461  3010               	movlw	16
  8124  0462  00B9               	movwf	((??i1_UpdateDisplay+0)+0+2)
  8125  0463                     u533_20:
  8126  0463  0837               	movf	(??i1_UpdateDisplay+0)+0,w
  8127  0464  0084               	movwf	fsr0
  8128  0465  1783               	bsf	status, 7	;select IRP bank3
  8129                           	
  8130  0466  0800               	movf	indf,w
  8131  0467  00BA               	movwf	((??i1_UpdateDisplay+0)+0+3)
  8132  0468  0AB7               	incf	(??i1_UpdateDisplay+0)+0,f
  8133  0469  0838               	movf	((??i1_UpdateDisplay+0)+0+1),w
  8134  046A  0084               	movwf	fsr0
  8135  046B  1383               	bcf	status, 7	;select IRP bank0
  8136                           	
  8137  046C  083A               	movf	((??i1_UpdateDisplay+0)+0+3),w
  8138  046D  0080               	movwf	indf
  8139  046E  0AB8               	incf	((??i1_UpdateDisplay+0)+0+1),f
  8140  046F  0BB9               	decfsz	((??i1_UpdateDisplay+0)+0+2),f
  8141  0470  2C63               	goto	u533_20
  8142                           	line	217
  8143                           ;HMI.c: 217: switch (currentMenu)
  8144  0471  2D89               	goto	i1l11734
  8145                           	line	220
  8146                           ;HMI.c: 218: {
  8147                           ;HMI.c: 220: case 0:
  8148                           	
  8149  0472                     i1l5240:	
  8150                           	line	221
  8151                           	
  8152  0472                     i1l11698:	
  8153                           ;HMI.c: 221: lcd_write_control(0b00000001);
  8154  0472  3001               	movlw	(01h)
  8155  0473  160A  118A  2408   	fcall	i1_lcd_write_control
              120A  118A         
  8156                           	line	222
  8157                           	
  8158  0478                     i1l11700:	
  8159                           ;HMI.c: 222: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, test);
  8160  0478  300B               	movlw	((STR_11-__stringbase))&0ffh
  8161  0479  1283               	bcf	status, 5	;RP0=0, select bank0
  8162  047A  1303               	bcf	status, 6	;RP1=0, select bank0
  8163  047B  00B7               	movwf	(??i1_UpdateDisplay+0)+0
  8164  047C  0837               	movf	(??i1_UpdateDisplay+0)+0,w
  8165  047D  00A6               	movwf	(?i1_sprintf)
  8166  047E  1683               	bsf	status, 5	;RP0=1, select bank1
  8167  047F  1303               	bcf	status, 6	;RP1=0, select bank1
  8168  0480  0869               	movf	(_adcVal+1)^080h,w	;volatile
  8169  0481  1283               	bcf	status, 5	;RP0=0, select bank0
  8170  0482  1303               	bcf	status, 6	;RP1=0, select bank0
  8171  0483  01A8               	clrf	1+(?i1_sprintf)+01h
  8172  0484  07A8               	addwf	1+(?i1_sprintf)+01h
  8173  0485  1683               	bsf	status, 5	;RP0=1, select bank1
  8174  0486  1303               	bcf	status, 6	;RP1=0, select bank1
  8175  0487  0868               	movf	(_adcVal)^080h,w	;volatile
  8176  0488  1283               	bcf	status, 5	;RP0=0, select bank0
  8177  0489  1303               	bcf	status, 6	;RP1=0, select bank0
  8178  048A  01A7               	clrf	0+(?i1_sprintf)+01h
  8179  048B  07A7               	addwf	0+(?i1_sprintf)+01h
  8180                           
  8181  048C  1683               	bsf	status, 5	;RP0=1, select bank1
  8182  048D  1303               	bcf	status, 6	;RP1=0, select bank1
  8183  048E  086D               	movf	(_test+1)^080h,w	;volatile
  8184  048F  1283               	bcf	status, 5	;RP0=0, select bank0
  8185  0490  1303               	bcf	status, 6	;RP1=0, select bank0
  8186  0491  01AA               	clrf	1+(?i1_sprintf)+03h
  8187  0492  07AA               	addwf	1+(?i1_sprintf)+03h
  8188  0493  1683               	bsf	status, 5	;RP0=1, select bank1
  8189  0494  1303               	bcf	status, 6	;RP1=0, select bank1
  8190  0495  086C               	movf	(_test)^080h,w	;volatile
  8191  0496  1283               	bcf	status, 5	;RP0=0, select bank0
  8192  0497  1303               	bcf	status, 6	;RP1=0, select bank0
  8193  0498  01A9               	clrf	0+(?i1_sprintf)+03h
  8194  0499  07A9               	addwf	0+(?i1_sprintf)+03h
  8195                           
  8196  049A  303C               	movlw	(i1UpdateDisplay@adcOutput)&0ffh
  8197  049B  120A  158A  2700   	fcall	i1_sprintf
              120A  118A         
  8198                           	line	225
  8199                           	
  8200  04A0                     i1l11702:	
  8201                           ;HMI.c: 225: lcd_set_cursor(0x00);
  8202  04A0  3000               	movlw	(0)
  8203  04A1  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8204                           	line	226
  8205                           ;HMI.c: 226: lcd_write_string(adcOutput);
  8206  04A6  303C               	movlw	(i1UpdateDisplay@adcOutput&0ffh)
  8207  04A7  00F7               	movwf	(?i1_lcd_write_string)
  8208  04A8  3000               	movlw	(0x0/2)
  8209  04A9  00F8               	movwf	(?i1_lcd_write_string+1)
  8210  04AA  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8211                           	line	231
  8212                           	
  8213  04AF                     i1l11704:	
  8214                           ;HMI.c: 231: lcd_set_cursor(0x40);
  8215  04AF  3040               	movlw	(040h)
  8216  04B0  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8217                           	line	232
  8218                           	
  8219  04B5                     i1l11706:	
  8220                           ;HMI.c: 232: if (pos > 0)
  8221  04B5  1683               	bsf	status, 5	;RP0=1, select bank1
  8222  04B6  1303               	bcf	status, 6	;RP1=0, select bank1
  8223  04B7  086B               	movf	(_pos+1)^080h,w
  8224  04B8  3A80               	xorlw	80h
  8225  04B9  00FF               	movwf	btemp+1
  8226  04BA  3080               	movlw	(high(01h))^80h
  8227  04BB  027F               	subwf	btemp+1,w
  8228  04BC  1D03               	skipz
  8229  04BD  2CC0               	goto	u534_25
  8230  04BE  3001               	movlw	low(01h)
  8231  04BF  026A               	subwf	(_pos)^080h,w
  8232  04C0                     u534_25:
  8233                           
  8234  04C0  1C03               	skipc
  8235  04C1  2CC3               	goto	u534_21
  8236  04C2  2CC4               	goto	u534_20
  8237  04C3                     u534_21:
  8238  04C3  2CD5               	goto	i1l11710
  8239  04C4                     u534_20:
  8240                           	line	233
  8241                           	
  8242  04C4                     i1l11708:	
  8243                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  8244  04C4  1683               	bsf	status, 5	;RP0=1, select bank1
  8245  04C5  1303               	bcf	status, 6	;RP1=0, select bank1
  8246  04C6  086A               	movf	(_pos)^080h,w
  8247  04C7  3EFF               	addlw	0FFh
  8248  04C8  3EC7               	addlw	_shortMenuStrings&0ffh
  8249  04C9  0084               	movwf	fsr0
  8250  04CA  1783               	bsf	status, 7	;select IRP bank3
  8251  04CB  0800               	movf	indf,w
  8252  04CC  00F7               	movwf	(?i1_lcd_write_string)
  8253  04CD  3080               	movlw	80h
  8254  04CE  00F8               	movwf	(?i1_lcd_write_string+1)
  8255  04CF  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8256  04D4  2CE6               	goto	i1l11712
  8257                           	line	234
  8258                           	
  8259  04D5                     i1l5241:	
  8260                           	line	235
  8261                           	
  8262  04D5                     i1l11710:	
  8263                           ;HMI.c: 234: else
  8264                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  8265  04D5  1683               	bsf	status, 5	;RP0=1, select bank1
  8266  04D6  1303               	bcf	status, 6	;RP1=0, select bank1
  8267  04D7  086A               	movf	(_pos)^080h,w
  8268  04D8  3E04               	addlw	04h
  8269  04D9  3EC7               	addlw	_shortMenuStrings&0ffh
  8270  04DA  0084               	movwf	fsr0
  8271  04DB  1783               	bsf	status, 7	;select IRP bank3
  8272  04DC  0800               	movf	indf,w
  8273  04DD  00F7               	movwf	(?i1_lcd_write_string)
  8274  04DE  3080               	movlw	80h
  8275  04DF  00F8               	movwf	(?i1_lcd_write_string+1)
  8276  04E0  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8277  04E5  2CE6               	goto	i1l11712
  8278                           	
  8279  04E6                     i1l5242:	
  8280                           	line	236
  8281                           	
  8282  04E6                     i1l11712:	
  8283                           ;HMI.c: 236: lcd_set_cursor(0x44);
  8284  04E6  3044               	movlw	(044h)
  8285  04E7  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8286                           	line	237
  8287                           	
  8288  04EC                     i1l11714:	
  8289                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  8290  04EC  1683               	bsf	status, 5	;RP0=1, select bank1
  8291  04ED  1303               	bcf	status, 6	;RP1=0, select bank1
  8292  04EE  086A               	movf	(_pos)^080h,w
  8293  04EF  3EC2               	addlw	_menuStrings&0ffh
  8294  04F0  0084               	movwf	fsr0
  8295  04F1  1783               	bsf	status, 7	;select IRP bank3
  8296  04F2  0800               	movf	indf,w
  8297  04F3  00F7               	movwf	(?i1_lcd_write_string)
  8298  04F4  3080               	movlw	80h
  8299  04F5  00F8               	movwf	(?i1_lcd_write_string+1)
  8300  04F6  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8301                           	line	238
  8302                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  8303  04FB  304D               	movlw	(04Dh)
  8304  04FC  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8305                           	line	239
  8306                           	
  8307  0501                     i1l11716:	
  8308                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  8309  0501  3005               	movlw	low(05h)
  8310  0502  00F0               	movwf	(?i1___awmod)
  8311  0503  3000               	movlw	high(05h)
  8312  0504  00F1               	movwf	((?i1___awmod))+1
  8313  0505  1683               	bsf	status, 5	;RP0=1, select bank1
  8314  0506  1303               	bcf	status, 6	;RP1=0, select bank1
  8315  0507  086A               	movf	(_pos)^080h,w
  8316  0508  3E01               	addlw	low(01h)
  8317  0509  00F2               	movwf	0+(?i1___awmod)+02h
  8318  050A  086B               	movf	(_pos+1)^080h,w
  8319  050B  1803               	skipnc
  8320  050C  3E01               	addlw	1
  8321  050D  3E00               	addlw	high(01h)
  8322  050E  00F3               	movwf	1+0+(?i1___awmod)+02h
  8323  050F  120A  158A  2267   	fcall	i1___awmod
              120A  118A         
  8324  0514  0870               	movf	(0+(?i1___awmod)),w
  8325  0515  3EC7               	addlw	_shortMenuStrings&0ffh
  8326  0516  0084               	movwf	fsr0
  8327  0517  1783               	bsf	status, 7	;select IRP bank3
  8328  0518  0800               	movf	indf,w
  8329  0519  00F7               	movwf	(?i1_lcd_write_string)
  8330  051A  3080               	movlw	80h
  8331  051B  00F8               	movwf	(?i1_lcd_write_string+1)
  8332  051C  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8333                           	line	240
  8334                           ;HMI.c: 240: break;
  8335  0521  2D93               	goto	i1l5246
  8336                           	line	241
  8337                           ;HMI.c: 241: case 1:
  8338                           	
  8339  0522                     i1l5244:	
  8340                           	line	242
  8341                           	
  8342  0522                     i1l11718:	
  8343                           ;HMI.c: 242: lcd_write_control(0b00000001);
  8344  0522  3001               	movlw	(01h)
  8345  0523  160A  118A  2408   	fcall	i1_lcd_write_control
              120A  118A         
  8346                           	line	244
  8347                           	
  8348  0528                     i1l11720:	
  8349                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  8350  0528  300B               	movlw	((STR_12-__stringbase))&0ffh
  8351  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  8352  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  8353  052B  00B7               	movwf	(??i1_UpdateDisplay+0)+0
  8354  052C  0837               	movf	(??i1_UpdateDisplay+0)+0,w
  8355  052D  00A6               	movwf	(?i1_sprintf)
  8356  052E  1683               	bsf	status, 5	;RP0=1, select bank1
  8357  052F  1303               	bcf	status, 6	;RP1=0, select bank1
  8358  0530  086E               	movf	(_highByte)^080h,w
  8359  0531  1283               	bcf	status, 5	;RP0=0, select bank0
  8360  0532  1303               	bcf	status, 6	;RP1=0, select bank0
  8361  0533  00B8               	movwf	(??i1_UpdateDisplay+1)+0
  8362  0534  01B9               	clrf	(??i1_UpdateDisplay+1)+0+1
  8363  0535  0838               	movf	0+(??i1_UpdateDisplay+1)+0,w
  8364  0536  00A7               	movwf	0+(?i1_sprintf)+01h
  8365  0537  0839               	movf	1+(??i1_UpdateDisplay+1)+0,w
  8366  0538  00A8               	movwf	1+(?i1_sprintf)+01h
  8367  0539  1683               	bsf	status, 5	;RP0=1, select bank1
  8368  053A  1303               	bcf	status, 6	;RP1=0, select bank1
  8369  053B  086F               	movf	(_lowByte)^080h,w
  8370  053C  1283               	bcf	status, 5	;RP0=0, select bank0
  8371  053D  1303               	bcf	status, 6	;RP1=0, select bank0
  8372  053E  00BA               	movwf	(??i1_UpdateDisplay+3)+0
  8373  053F  01BB               	clrf	(??i1_UpdateDisplay+3)+0+1
  8374  0540  083A               	movf	0+(??i1_UpdateDisplay+3)+0,w
  8375  0541  00A9               	movwf	0+(?i1_sprintf)+03h
  8376  0542  083B               	movf	1+(??i1_UpdateDisplay+3)+0,w
  8377  0543  00AA               	movwf	1+(?i1_sprintf)+03h
  8378  0544  303C               	movlw	(i1UpdateDisplay@adcOutput)&0ffh
  8379  0545  120A  158A  2700   	fcall	i1_sprintf
              120A  118A         
  8380                           	line	246
  8381                           	
  8382  054A                     i1l11722:	
  8383                           ;HMI.c: 246: lcd_set_cursor(0x00);
  8384  054A  3000               	movlw	(0)
  8385  054B  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8386                           	line	247
  8387                           ;HMI.c: 247: lcd_write_string(adcOutput);
  8388  0550  303C               	movlw	(i1UpdateDisplay@adcOutput&0ffh)
  8389  0551  00F7               	movwf	(?i1_lcd_write_string)
  8390  0552  3000               	movlw	(0x0/2)
  8391  0553  00F8               	movwf	(?i1_lcd_write_string+1)
  8392  0554  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8393                           	line	252
  8394                           	
  8395  0559                     i1l11724:	
  8396                           ;HMI.c: 252: lcd_set_cursor(0x40);
  8397  0559  3040               	movlw	(040h)
  8398  055A  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8399                           	line	254
  8400                           	
  8401  055F                     i1l11726:	
  8402                           ;HMI.c: 254: lcd_write_string("<<<");
  8403  055F  3052               	movlw	low((STR_13-__stringbase))
  8404  0560  00F7               	movwf	(?i1_lcd_write_string)
  8405  0561  3080               	movlw	80h
  8406  0562  00F8               	movwf	(?i1_lcd_write_string+1)
  8407  0563  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8408                           	line	257
  8409                           ;HMI.c: 257: lcd_set_cursor(0x44);
  8410  0568  3044               	movlw	(044h)
  8411  0569  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8412                           	line	258
  8413                           	
  8414  056E                     i1l11728:	
  8415                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  8416  056E  3046               	movlw	low((STR_14-__stringbase))
  8417  056F  00F7               	movwf	(?i1_lcd_write_string)
  8418  0570  3080               	movlw	80h
  8419  0571  00F8               	movwf	(?i1_lcd_write_string+1)
  8420  0572  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8421                           	line	259
  8422                           	
  8423  0577                     i1l11730:	
  8424                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  8425  0577  304D               	movlw	(04Dh)
  8426  0578  160A  118A  23C4   	fcall	i1_lcd_set_cursor
              120A  118A         
  8427                           	line	260
  8428                           ;HMI.c: 260: lcd_write_string(">>>");
  8429  057D  3056               	movlw	low((STR_15-__stringbase))
  8430  057E  00F7               	movwf	(?i1_lcd_write_string)
  8431  057F  3080               	movlw	80h
  8432  0580  00F8               	movwf	(?i1_lcd_write_string+1)
  8433  0581  160A  118A  2591   	fcall	i1_lcd_write_string
              120A  118A         
  8434                           	line	261
  8435                           ;HMI.c: 261: break;
  8436  0586  2D93               	goto	i1l5246
  8437                           	line	263
  8438                           ;HMI.c: 263: default:
  8439                           	
  8440  0587                     i1l5245:	
  8441                           	line	265
  8442                           ;HMI.c: 265: break;
  8443  0587  2D93               	goto	i1l5246
  8444                           	line	268
  8445                           	
  8446  0588                     i1l11732:	
  8447                           ;HMI.c: 268: }
  8448  0588  2D93               	goto	i1l5246
  8449                           	line	217
  8450                           	
  8451  0589                     i1l5239:	
  8452                           	
  8453  0589                     i1l11734:	
  8454  0589  1283               	bcf	status, 5	;RP0=0, select bank0
  8455  058A  1303               	bcf	status, 6	;RP1=0, select bank0
  8456  058B  0862               	movf	(_currentMenu),w
  8457                           	; Switch size 1, requested type "space"
  8458                           ; Number of cases is 2, Range of values is 0 to 1
  8459                           ; switch strategies available:
  8460                           ; Name         Instructions Cycles
  8461                           ; simple_byte            7     4 (average)
  8462                           ; direct_byte           14     8 (fixed)
  8463                           ; jumptable            260     6 (fixed)
  8464                           ; rangetable             6     6 (fixed)
  8465                           ; spacedrange           10     9 (fixed)
  8466                           ; locatedrange           2     3 (fixed)
  8467                           ;	Chosen strategy is simple_byte
  8468                           
  8469                           	opt asmopt_off
  8470  058C  3A00               	xorlw	0^0	; case 0
  8471  058D  1903               	skipnz
  8472  058E  2C72               	goto	i1l11698
  8473  058F  3A01               	xorlw	1^0	; case 1
  8474  0590  1903               	skipnz
  8475  0591  2D22               	goto	i1l11718
  8476  0592  2D93               	goto	i1l5246
  8477                           	opt asmopt_on
  8478                           
  8479                           	line	268
  8480                           	
  8481  0593                     i1l5243:	
  8482                           	line	269
  8483                           	
  8484  0593                     i1l5246:	
  8485  0593  0008               	return
  8486                           	opt stack 0
  8487                           GLOBAL	__end_ofi1_UpdateDisplay
  8488  0594                     	__end_ofi1_UpdateDisplay:
  8489 ;; =============== function i1_UpdateDisplay ends ============
  8490                           
  8491                           	signat	i1_UpdateDisplay,88
  8492                           	global	i1_readAvgDistance
  8493                           psect	text1161,local,class=CODE,delta=2
  8494                           global __ptext1161
  8495  0966                     __ptext1161:
  8496                           
  8497 ;; *************** function i1_readAvgDistance *****************
  8498 ;; Defined at:
  8499 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  readAvgDista    2    4[BANK0 ] int 
  8504 ;;  readAvgDista    2    2[BANK0 ] unsigned int 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;		None               void
  8507 ;; Registers used:
  8508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8514 ;;      Params:         0       0       0       0       0
  8515 ;;      Locals:         0       4       0       0       0
  8516 ;;      Temps:          0       0       0       0       0
  8517 ;;      Totals:         0       4       0       0       0
  8518 ;;Total ram usage:        4 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:    3
  8521 ;; This function calls:
  8522 ;;		i1_readDistance
  8523 ;;		i1___lwdiv
  8524 ;;		i1_ADCconvert
  8525 ;; This function is called by:
  8526 ;;		_isr1
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           psect	text1161
  8530                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8531                           	line	10
  8532                           	global	__size_ofi1_readAvgDistance
  8533  0055                     	__size_ofi1_readAvgDistance	equ	__end_ofi1_readAvgDistance-i1_readAvgDistance
  8534                           	
  8535  0966                     i1_readAvgDistance:	
  8536 ;; hardware stack exceeded
  8537                           	opt	stack 0
  8538                           ; Regs used in i1_readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8539                           	line	11
  8540                           	
  8541  0966                     i1l11634:	
  8542                           ;infrared.c: 11: unsigned int fullval = 0;
  8543  0966  1283               	bcf	status, 5	;RP0=0, select bank0
  8544  0967  1303               	bcf	status, 6	;RP1=0, select bank0
  8545  0968  01A2               	clrf	(i1readAvgDistance@fullval)
  8546  0969  01A3               	clrf	(i1readAvgDistance@fullval+1)
  8547                           	line	14
  8548                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  8549  096A  01A4               	clrf	(i1readAvgDistance@i)
  8550  096B  01A5               	clrf	(i1readAvgDistance@i+1)
  8551                           	
  8552  096C                     i1l11636:	
  8553  096C  0825               	movf	(i1readAvgDistance@i+1),w
  8554  096D  3A80               	xorlw	80h
  8555  096E  00FF               	movwf	btemp+1
  8556  096F  3080               	movlw	(high(0Ah))^80h
  8557  0970  027F               	subwf	btemp+1,w
  8558  0971  1D03               	skipz
  8559  0972  2975               	goto	u517_25
  8560  0973  300A               	movlw	low(0Ah)
  8561  0974  0224               	subwf	(i1readAvgDistance@i),w
  8562  0975                     u517_25:
  8563                           
  8564  0975  1C03               	skipc
  8565  0976  2978               	goto	u517_21
  8566  0977  2979               	goto	u517_20
  8567  0978                     u517_21:
  8568  0978  297B               	goto	i1l11640
  8569  0979                     u517_20:
  8570  0979  299C               	goto	i1l11646
  8571                           	
  8572  097A                     i1l11638:	
  8573  097A  299C               	goto	i1l11646
  8574                           	line	15
  8575                           	
  8576  097B                     i1l2955:	
  8577                           	line	16
  8578                           	
  8579  097B                     i1l11640:	
  8580                           ;infrared.c: 15: {
  8581                           ;infrared.c: 16: fullval += readDistance();
  8582  097B  160A  118A  241C   	fcall	i1_readDistance
              120A  158A         
  8583  0980  0878               	movf	(0+(?i1_readDistance)),w
  8584  0981  1283               	bcf	status, 5	;RP0=0, select bank0
  8585  0982  1303               	bcf	status, 6	;RP1=0, select bank0
  8586  0983  07A2               	addwf	(i1readAvgDistance@fullval),f
  8587  0984  1803               	skipnc
  8588  0985  0AA3               	incf	(i1readAvgDistance@fullval+1),f
  8589  0986  0879               	movf	(1+(?i1_readDistance)),w
  8590  0987  07A3               	addwf	(i1readAvgDistance@fullval+1),f
  8591                           	line	14
  8592                           	
  8593  0988                     i1l11642:	
  8594  0988  3001               	movlw	low(01h)
  8595  0989  07A4               	addwf	(i1readAvgDistance@i),f
  8596  098A  1803               	skipnc
  8597  098B  0AA5               	incf	(i1readAvgDistance@i+1),f
  8598  098C  3000               	movlw	high(01h)
  8599  098D  07A5               	addwf	(i1readAvgDistance@i+1),f
  8600                           	
  8601  098E                     i1l11644:	
  8602  098E  0825               	movf	(i1readAvgDistance@i+1),w
  8603  098F  3A80               	xorlw	80h
  8604  0990  00FF               	movwf	btemp+1
  8605  0991  3080               	movlw	(high(0Ah))^80h
  8606  0992  027F               	subwf	btemp+1,w
  8607  0993  1D03               	skipz
  8608  0994  2997               	goto	u518_25
  8609  0995  300A               	movlw	low(0Ah)
  8610  0996  0224               	subwf	(i1readAvgDistance@i),w
  8611  0997                     u518_25:
  8612                           
  8613  0997  1C03               	skipc
  8614  0998  299A               	goto	u518_21
  8615  0999  299B               	goto	u518_20
  8616  099A                     u518_21:
  8617  099A  297B               	goto	i1l11640
  8618  099B                     u518_20:
  8619  099B  299C               	goto	i1l11646
  8620                           	
  8621  099C                     i1l2956:	
  8622                           	line	19
  8623                           	
  8624  099C                     i1l11646:	
  8625                           ;infrared.c: 18: }
  8626                           ;infrared.c: 19: adcVal = fullval / 10;
  8627  099C  300A               	movlw	low(0Ah)
  8628  099D  00F6               	movwf	(?i1___lwdiv)
  8629  099E  3000               	movlw	high(0Ah)
  8630  099F  00F7               	movwf	((?i1___lwdiv))+1
  8631  09A0  1283               	bcf	status, 5	;RP0=0, select bank0
  8632  09A1  1303               	bcf	status, 6	;RP1=0, select bank0
  8633  09A2  0823               	movf	(i1readAvgDistance@fullval+1),w
  8634  09A3  01F9               	clrf	1+(?i1___lwdiv)+02h
  8635  09A4  07F9               	addwf	1+(?i1___lwdiv)+02h
  8636  09A5  0822               	movf	(i1readAvgDistance@fullval),w
  8637  09A6  01F8               	clrf	0+(?i1___lwdiv)+02h
  8638  09A7  07F8               	addwf	0+(?i1___lwdiv)+02h
  8639                           
  8640  09A8  160A  118A  27B2   	fcall	i1___lwdiv
              120A  158A         
  8641  09AD  0877               	movf	(1+(?i1___lwdiv)),w
  8642  09AE  1683               	bsf	status, 5	;RP0=1, select bank1
  8643  09AF  1303               	bcf	status, 6	;RP1=0, select bank1
  8644  09B0  01E9               	clrf	(_adcVal+1)^080h	;volatile
  8645  09B1  07E9               	addwf	(_adcVal+1)^080h	;volatile
  8646  09B2  0876               	movf	(0+(?i1___lwdiv)),w
  8647  09B3  01E8               	clrf	(_adcVal)^080h	;volatile
  8648  09B4  07E8               	addwf	(_adcVal)^080h	;volatile
  8649                           
  8650                           	line	20
  8651                           ;infrared.c: 20: ADCconvert();
  8652  09B5  120A  118A  223E   	fcall	i1_ADCconvert
              120A  158A         
  8653                           	line	21
  8654                           	
  8655  09BA                     i1l2957:	
  8656  09BA  0008               	return
  8657                           	opt stack 0
  8658                           GLOBAL	__end_ofi1_readAvgDistance
  8659  09BB                     	__end_ofi1_readAvgDistance:
  8660 ;; =============== function i1_readAvgDistance ends ============
  8661                           
  8662                           	signat	i1_readAvgDistance,88
  8663                           	global	i1_readDistance
  8664                           psect	text1162,local,class=CODE,delta=2
  8665                           global __ptext1162
  8666  141C                     __ptext1162:
  8667                           
  8668 ;; *************** function i1_readDistance *****************
  8669 ;; Defined at:
  8670 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;		None
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  readDistance    2   12[COMMON] unsigned int 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  2    8[COMMON] unsigned int 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8684 ;;      Params:         2       0       0       0       0
  8685 ;;      Locals:         2       0       0       0       0
  8686 ;;      Temps:          2       0       0       0       0
  8687 ;;      Totals:         6       0       0       0       0
  8688 ;;Total ram usage:        6 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    2
  8691 ;; This function calls:
  8692 ;;		i1_adc_read_channel
  8693 ;; This function is called by:
  8694 ;;		i1_readAvgDistance
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           psect	text1162
  8698                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8699                           	line	24
  8700                           	global	__size_ofi1_readDistance
  8701  0014                     	__size_ofi1_readDistance	equ	__end_ofi1_readDistance-i1_readDistance
  8702                           	
  8703  141C                     i1_readDistance:	
  8704 ;; hardware stack exceeded
  8705                           	opt	stack 0
  8706                           ; Regs used in i1_readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8707                           	line	27
  8708                           	
  8709  141C                     i1l11648:	
  8710                           ;infrared.c: 25: unsigned int fullval ;
  8711                           ;infrared.c: 27: fullval = adc_read_channel(0);
  8712  141C  3000               	movlw	(0)
  8713  141D  160A  118A  26E5   	fcall	i1_adc_read_channel
              160A  118A         
  8714  1422  00FA               	movwf	(??i1_readDistance+0)+0
  8715  1423  01FB               	clrf	(??i1_readDistance+0)+0+1
  8716  1424  087A               	movf	0+(??i1_readDistance+0)+0,w
  8717  1425  00FC               	movwf	(i1readDistance@fullval)
  8718  1426  087B               	movf	1+(??i1_readDistance+0)+0,w
  8719  1427  00FD               	movwf	(i1readDistance@fullval+1)
  8720                           	line	29
  8721                           	
  8722  1428                     i1l11650:	
  8723                           ;infrared.c: 29: return fullval;
  8724  1428  087D               	movf	(i1readDistance@fullval+1),w
  8725  1429  01F9               	clrf	(?i1_readDistance+1)
  8726  142A  07F9               	addwf	(?i1_readDistance+1)
  8727  142B  087C               	movf	(i1readDistance@fullval),w
  8728  142C  01F8               	clrf	(?i1_readDistance)
  8729  142D  07F8               	addwf	(?i1_readDistance)
  8730                           
  8731  142E  2C2F               	goto	i1l2960
  8732                           	
  8733  142F                     i1l11652:	
  8734                           	line	30
  8735                           	
  8736  142F                     i1l2960:	
  8737  142F  0008               	return
  8738                           	opt stack 0
  8739                           GLOBAL	__end_ofi1_readDistance
  8740  1430                     	__end_ofi1_readDistance:
  8741 ;; =============== function i1_readDistance ends ============
  8742                           
  8743                           	signat	i1_readDistance,90
  8744                           	global	i1_lcd_write_string
  8745                           psect	text1163,local,class=CODE,delta=2
  8746                           global __ptext1163
  8747  1591                     __ptext1163:
  8748                           
  8749 ;; *************** function i1_lcd_write_string *****************
  8750 ;; Defined at:
  8751 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  lcd_write_st    2    7[COMMON] PTR unsigned char 
  8754 ;;		 -> i1UpdateDisplay@adcOutput(16), STR_15(4), STR_14(8), STR_13(4), 
  8755 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  8756 ;;		 -> STR_6(4), STR_5(9), STR_4(8), STR_3(9), 
  8757 ;;		 -> STR_2(9), STR_1(9), 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;		None               void
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8769 ;;      Params:         2       0       0       0       0
  8770 ;;      Locals:         0       0       0       0       0
  8771 ;;      Temps:          0       0       0       0       0
  8772 ;;      Totals:         2       0       0       0       0
  8773 ;;Total ram usage:        2 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    1
  8776 ;; This function calls:
  8777 ;;		i1_lcd_write_data
  8778 ;; This function is called by:
  8779 ;;		i1_UpdateDisplay
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           psect	text1163
  8783                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8784                           	line	48
  8785                           	global	__size_ofi1_lcd_write_string
  8786  002A                     	__size_ofi1_lcd_write_string	equ	__end_ofi1_lcd_write_string-i1_lcd_write_string
  8787                           	
  8788  1591                     i1_lcd_write_string:	
  8789 ;; hardware stack exceeded
  8790                           	opt	stack 0
  8791                           ; Regs used in i1_lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8792                           	line	50
  8793                           	
  8794  1591                     i1l11626:	
  8795                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  8796  1591  2DA9               	goto	i1l11632
  8797                           	
  8798  1592                     i1l1409:	
  8799                           	
  8800  1592                     i1l11628:	
  8801  1592  0878               	movf	(i1lcd_write_string@s+1),w
  8802  1593  1283               	bcf	status, 5	;RP0=0, select bank0
  8803  1594  1303               	bcf	status, 6	;RP1=0, select bank0
  8804  1595  00FF               	movwf	btemp+1
  8805  1596  0877               	movf	(i1lcd_write_string@s),w
  8806  1597  0084               	movwf	fsr0
  8807  1598  120A  158A  2000   	fcall	stringtab
              160A  118A         
  8808  159D  160A  118A  23E2   	fcall	i1_lcd_write_data
              160A  118A         
  8809                           	
  8810  15A2                     i1l11630:	
  8811  15A2  3001               	movlw	low(01h)
  8812  15A3  07F7               	addwf	(i1lcd_write_string@s),f
  8813  15A4  1803               	skipnc
  8814  15A5  0AF8               	incf	(i1lcd_write_string@s+1),f
  8815  15A6  3000               	movlw	high(01h)
  8816  15A7  07F8               	addwf	(i1lcd_write_string@s+1),f
  8817  15A8  2DA9               	goto	i1l11632
  8818                           	
  8819  15A9                     i1l1408:	
  8820                           	
  8821  15A9                     i1l11632:	
  8822  15A9  0878               	movf	(i1lcd_write_string@s+1),w
  8823  15AA  1283               	bcf	status, 5	;RP0=0, select bank0
  8824  15AB  1303               	bcf	status, 6	;RP1=0, select bank0
  8825  15AC  00FF               	movwf	btemp+1
  8826  15AD  0877               	movf	(i1lcd_write_string@s),w
  8827  15AE  0084               	movwf	fsr0
  8828  15AF  120A  158A  2000   	fcall	stringtab
              160A  118A         
  8829  15B4  3800               	iorlw	0
  8830  15B5  1D03               	skipz
  8831  15B6  2DB8               	goto	u516_21
  8832  15B7  2DB9               	goto	u516_20
  8833  15B8                     u516_21:
  8834  15B8  2D92               	goto	i1l11628
  8835  15B9                     u516_20:
  8836  15B9  2DBA               	goto	i1l1411
  8837                           	
  8838  15BA                     i1l1410:	
  8839                           	line	51
  8840                           	
  8841  15BA                     i1l1411:	
  8842  15BA  0008               	return
  8843                           	opt stack 0
  8844                           GLOBAL	__end_ofi1_lcd_write_string
  8845  15BB                     	__end_ofi1_lcd_write_string:
  8846 ;; =============== function i1_lcd_write_string ends ============
  8847                           
  8848                           	signat	i1_lcd_write_string,88
  8849                           	global	i1_lcd_set_cursor
  8850                           psect	text1164,local,class=CODE,delta=2
  8851                           global __ptext1164
  8852  13C4                     __ptext1164:
  8853                           
  8854 ;; *************** function i1_lcd_set_cursor *****************
  8855 ;; Defined at:
  8856 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  lcd_set_curs    1    wreg     unsigned char 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;  lcd_set_curs    1    3[COMMON] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;		None               void
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0, pclath, cstack
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8870 ;;      Params:         0       0       0       0       0
  8871 ;;      Locals:         1       0       0       0       0
  8872 ;;      Temps:          0       0       0       0       0
  8873 ;;      Totals:         1       0       0       0       0
  8874 ;;Total ram usage:        1 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    1
  8877 ;; This function calls:
  8878 ;;		i1_lcd_write_control
  8879 ;; This function is called by:
  8880 ;;		i1_UpdateDisplay
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           psect	text1164
  8884                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8885                           	line	42
  8886                           	global	__size_ofi1_lcd_set_cursor
  8887  0009                     	__size_ofi1_lcd_set_cursor	equ	__end_ofi1_lcd_set_cursor-i1_lcd_set_cursor
  8888                           	
  8889  13C4                     i1_lcd_set_cursor:	
  8890 ;; hardware stack exceeded
  8891                           	opt	stack 0
  8892                           ; Regs used in i1_lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8893                           ;i1lcd_set_cursor@address stored from wreg
  8894  13C4  00F3               	movwf	(i1lcd_set_cursor@address)
  8895                           	line	43
  8896                           	
  8897  13C5                     i1l11622:	
  8898                           ;lcd.c: 43: address |= 0b10000000;
  8899  13C5  17F3               	bsf	(i1lcd_set_cursor@address)+(7/8),(7)&7
  8900                           	line	44
  8901                           	
  8902  13C6                     i1l11624:	
  8903                           ;lcd.c: 44: lcd_write_control(address);
  8904  13C6  0873               	movf	(i1lcd_set_cursor@address),w
  8905  13C7  160A  118A  2408   	fcall	i1_lcd_write_control
              160A  118A         
  8906                           	line	45
  8907                           	
  8908  13CC                     i1l1405:	
  8909  13CC  0008               	return
  8910                           	opt stack 0
  8911                           GLOBAL	__end_ofi1_lcd_set_cursor
  8912  13CD                     	__end_ofi1_lcd_set_cursor:
  8913 ;; =============== function i1_lcd_set_cursor ends ============
  8914                           
  8915                           	signat	i1_lcd_set_cursor,88
  8916                           	global	i1_sprintf
  8917                           psect	text1165,local,class=CODE,delta=2
  8918                           global __ptext1165
  8919  0F00                     __ptext1165:
  8920                           
  8921 ;; *************** function i1_sprintf *****************
  8922 ;; Defined at:
  8923 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  sprintf         1    wreg     PTR unsigned char 
  8926 ;;		 -> i1UpdateDisplay@adcOutput(16), 
  8927 ;;  sprintf         1    6[BANK0 ] PTR const unsigned char 
  8928 ;;		 -> STR_12(15), STR_11(15), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  sprintf         1   21[BANK0 ] PTR unsigned char 
  8931 ;;		 -> i1UpdateDisplay@adcOutput(16), 
  8932 ;;  sprintf         4   17[BANK0 ] struct .
  8933 ;;  sprintf         1   22[BANK0 ] char 
  8934 ;;  sprintf         1   16[BANK0 ] char 
  8935 ;;  sprintf         1   15[BANK0 ] unsigned char 
  8936 ;;  sprintf         1   14[BANK0 ] PTR void [1]
  8937 ;;		 -> ?i1_sprintf(2), 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  2    6[BANK0 ] int 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8947 ;;      Params:         0       5       0       0       0
  8948 ;;      Locals:         0       9       0       0       0
  8949 ;;      Temps:          0       3       0       0       0
  8950 ;;      Totals:         0      17       0       0       0
  8951 ;;Total ram usage:       17 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:    1
  8954 ;; This function calls:
  8955 ;;		i1___lwdiv
  8956 ;;		i1___lwmod
  8957 ;; This function is called by:
  8958 ;;		i1_UpdateDisplay
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           psect	text1165
  8962                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  8963                           	line	488
  8964                           	global	__size_ofi1_sprintf
  8965  0100                     	__size_ofi1_sprintf	equ	__end_ofi1_sprintf-i1_sprintf
  8966                           	
  8967  0F00                     i1_sprintf:	
  8968 ;; hardware stack exceeded
  8969                           	opt	stack 0
  8970                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8971                           ;i1sprintf@sp stored from wreg
  8972                           	line	537
  8973  0F00  1283               	bcf	status, 5	;RP0=0, select bank0
  8974  0F01  1303               	bcf	status, 6	;RP1=0, select bank0
  8975  0F02  00B5               	movwf	(i1sprintf@sp)
  8976                           	
  8977  0F03                     i1l11736:	
  8978                           ;doprnt.c: 489: va_list ap;
  8979                           ;doprnt.c: 494: signed char c;
  8980                           ;doprnt.c: 501: signed char prec;
  8981                           ;doprnt.c: 503: unsigned char flag;
  8982                           ;doprnt.c: 522: union {
  8983                           ;doprnt.c: 523: unsigned int _val;
  8984                           ;doprnt.c: 524: struct {
  8985                           ;doprnt.c: 525: const char * _cp;
  8986                           ;doprnt.c: 526: unsigned _len;
  8987                           ;doprnt.c: 527: } _str;
  8988                           ;doprnt.c: 528: } _val;
  8989                           ;doprnt.c: 537: *ap = __va_start();
  8990  0F03  3027               	movlw	(?i1_sprintf+01h)&0ffh
  8991  0F04  00AB               	movwf	(??i1_sprintf+0)+0
  8992  0F05  082B               	movf	(??i1_sprintf+0)+0,w
  8993  0F06  00AE               	movwf	(i1sprintf@ap)
  8994                           	line	540
  8995                           ;doprnt.c: 540: while(c = *f++) {
  8996  0F07  2FE6               	goto	i1l11788
  8997                           	
  8998  0F08                     i1l6711:	
  8999                           	line	542
  9000                           	
  9001  0F08                     i1l11738:	
  9002                           ;doprnt.c: 542: if(c != '%')
  9003  0F08  0836               	movf	(i1sprintf@c),w
  9004  0F09  3A25               	xorlw	025h
  9005  0F0A  1903               	skipnz
  9006  0F0B  2F0D               	goto	u535_21
  9007  0F0C  2F0E               	goto	u535_20
  9008  0F0D                     u535_21:
  9009  0F0D  2F1A               	goto	i1l6712
  9010  0F0E                     u535_20:
  9011                           	line	545
  9012                           	
  9013  0F0E                     i1l11740:	
  9014                           ;doprnt.c: 544: {
  9015                           ;doprnt.c: 545: ((*sp++ = (c)));
  9016  0F0E  0836               	movf	(i1sprintf@c),w
  9017  0F0F  00AB               	movwf	(??i1_sprintf+0)+0
  9018  0F10  0835               	movf	(i1sprintf@sp),w
  9019  0F11  0084               	movwf	fsr0
  9020  0F12  082B               	movf	(??i1_sprintf+0)+0,w
  9021  0F13  1383               	bcf	status, 7	;select IRP bank0
  9022  0F14  0080               	movwf	indf
  9023                           	
  9024  0F15                     i1l11742:	
  9025  0F15  3001               	movlw	(01h)
  9026  0F16  00AB               	movwf	(??i1_sprintf+0)+0
  9027  0F17  082B               	movf	(??i1_sprintf+0)+0,w
  9028  0F18  07B5               	addwf	(i1sprintf@sp),f
  9029                           	line	546
  9030                           ;doprnt.c: 546: continue;
  9031  0F19  2FE6               	goto	i1l11788
  9032                           	line	547
  9033                           	
  9034  0F1A                     i1l6712:	
  9035                           	line	552
  9036                           ;doprnt.c: 547: }
  9037                           ;doprnt.c: 552: flag = 0;
  9038  0F1A  01AF               	clrf	(i1sprintf@flag)
  9039                           	line	638
  9040                           ;doprnt.c: 638: switch(c = *f++) {
  9041  0F1B  2F21               	goto	i1l11746
  9042                           	line	640
  9043                           ;doprnt.c: 640: case 0:
  9044                           	
  9045  0F1C                     i1l6714:	
  9046                           	line	641
  9047                           ;doprnt.c: 641: goto alldone;
  9048  0F1C  2FFA               	goto	i1l11790
  9049                           	line	700
  9050                           ;doprnt.c: 700: case 'd':
  9051                           	
  9052  0F1D                     i1l6716:	
  9053  0F1D  2F36               	goto	i1l11748
  9054                           	line	701
  9055                           	
  9056  0F1E                     i1l6717:	
  9057                           	line	702
  9058                           ;doprnt.c: 701: case 'i':
  9059                           ;doprnt.c: 702: break;
  9060  0F1E  2F36               	goto	i1l11748
  9061                           	line	805
  9062                           ;doprnt.c: 805: default:
  9063                           	
  9064  0F1F                     i1l6719:	
  9065                           	line	816
  9066                           ;doprnt.c: 816: continue;
  9067  0F1F  2FE6               	goto	i1l11788
  9068                           	line	825
  9069                           	
  9070  0F20                     i1l11744:	
  9071                           ;doprnt.c: 825: }
  9072  0F20  2F36               	goto	i1l11748
  9073                           	line	638
  9074                           	
  9075  0F21                     i1l6713:	
  9076                           	
  9077  0F21                     i1l11746:	
  9078  0F21  3001               	movlw	01h
  9079  0F22  07A6               	addwf	(i1sprintf@f),f
  9080  0F23  30FF               	movlw	-01h
  9081  0F24  0726               	addwf	(i1sprintf@f),w
  9082  0F25  0084               	movwf	fsr0
  9083  0F26  120A  158A  200A   	fcall	stringdir
              120A  158A         
  9084  0F2B  00B6               	movwf	(i1sprintf@c)
  9085                           	; Switch size 1, requested type "space"
  9086                           ; Number of cases is 3, Range of values is 0 to 105
  9087                           ; switch strategies available:
  9088                           ; Name         Instructions Cycles
  9089                           ; simple_byte           10     6 (average)
  9090                           ; jumptable            260     6 (fixed)
  9091                           ; rangetable           110     6 (fixed)
  9092                           ; spacedrange          218     9 (fixed)
  9093                           ; locatedrange         106     3 (fixed)
  9094                           ;	Chosen strategy is simple_byte
  9095                           
  9096                           	opt asmopt_off
  9097  0F2C  3A00               	xorlw	0^0	; case 0
  9098  0F2D  1903               	skipnz
  9099  0F2E  2FFA               	goto	i1l11790
  9100  0F2F  3A64               	xorlw	100^0	; case 100
  9101  0F30  1903               	skipnz
  9102  0F31  2F36               	goto	i1l11748
  9103  0F32  3A0D               	xorlw	105^100	; case 105
  9104  0F33  1903               	skipnz
  9105  0F34  2F36               	goto	i1l11748
  9106  0F35  2FE6               	goto	i1l11788
  9107                           	opt asmopt_on
  9108                           
  9109                           	line	825
  9110                           	
  9111  0F36                     i1l6718:	
  9112                           	line	1254
  9113                           	
  9114  0F36                     i1l11748:	
  9115                           ;doprnt.c: 1248: {
  9116                           ;doprnt.c: 1254: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9117  0F36  082E               	movf	(i1sprintf@ap),w
  9118  0F37  0084               	movwf	fsr0
  9119  0F38  1383               	bcf	status, 7	;select IRP bank0
  9120  0F39  0800               	movf	indf,w
  9121  0F3A  00B1               	movwf	(i1sprintf@_val)
  9122  0F3B  0A84               	incf	fsr0,f
  9123  0F3C  0800               	movf	indf,w
  9124  0F3D  00B2               	movwf	(i1sprintf@_val+1)
  9125                           	
  9126  0F3E                     i1l11750:	
  9127  0F3E  3002               	movlw	(02h)
  9128  0F3F  00AB               	movwf	(??i1_sprintf+0)+0
  9129  0F40  082B               	movf	(??i1_sprintf+0)+0,w
  9130  0F41  07AE               	addwf	(i1sprintf@ap),f
  9131                           	line	1256
  9132                           	
  9133  0F42                     i1l11752:	
  9134                           ;doprnt.c: 1256: if((int)_val._val < 0) {
  9135  0F42  1FB2               	btfss	(i1sprintf@_val+1),7
  9136  0F43  2F45               	goto	u536_21
  9137  0F44  2F46               	goto	u536_20
  9138  0F45                     u536_21:
  9139  0F45  2F50               	goto	i1l11758
  9140  0F46                     u536_20:
  9141                           	line	1257
  9142                           	
  9143  0F46                     i1l11754:	
  9144                           ;doprnt.c: 1257: flag |= 0x03;
  9145  0F46  3003               	movlw	(03h)
  9146  0F47  00AB               	movwf	(??i1_sprintf+0)+0
  9147  0F48  082B               	movf	(??i1_sprintf+0)+0,w
  9148  0F49  04AF               	iorwf	(i1sprintf@flag),f
  9149                           	line	1258
  9150                           	
  9151  0F4A                     i1l11756:	
  9152                           ;doprnt.c: 1258: _val._val = -_val._val;
  9153  0F4A  09B1               	comf	(i1sprintf@_val),f
  9154  0F4B  09B2               	comf	(i1sprintf@_val+1),f
  9155  0F4C  0AB1               	incf	(i1sprintf@_val),f
  9156  0F4D  1903               	skipnz
  9157  0F4E  0AB2               	incf	(i1sprintf@_val+1),f
  9158  0F4F  2F50               	goto	i1l11758
  9159                           	line	1259
  9160                           	
  9161  0F50                     i1l6720:	
  9162                           	line	1300
  9163                           	
  9164  0F50                     i1l11758:	
  9165                           ;doprnt.c: 1259: }
  9166                           ;doprnt.c: 1261: }
  9167                           ;doprnt.c: 1300: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9168  0F50  01B6               	clrf	(i1sprintf@c)
  9169  0F51  1403               	bsf	status,0
  9170  0F52  0DB6               	rlf	(i1sprintf@c),f
  9171                           	
  9172  0F53                     i1l11760:	
  9173  0F53  0836               	movf	(i1sprintf@c),w
  9174  0F54  3A05               	xorlw	05h
  9175  0F55  1D03               	skipz
  9176  0F56  2F58               	goto	u537_21
  9177  0F57  2F59               	goto	u537_20
  9178  0F58                     u537_21:
  9179  0F58  2F5B               	goto	i1l11764
  9180  0F59                     u537_20:
  9181  0F59  2F83               	goto	i1l11772
  9182                           	
  9183  0F5A                     i1l11762:	
  9184  0F5A  2F83               	goto	i1l11772
  9185                           	line	1301
  9186                           	
  9187  0F5B                     i1l6721:	
  9188                           	
  9189  0F5B                     i1l11764:	
  9190                           ;doprnt.c: 1301: if(_val._val < dpowers[c])
  9191  0F5B  0836               	movf	(i1sprintf@c),w
  9192  0F5C  00AB               	movwf	(??i1_sprintf+0)+0
  9193  0F5D  072B               	addwf	(??i1_sprintf+0)+0,w
  9194  0F5E  3E01               	addlw	low((_dpowers-__stringbase))
  9195  0F5F  0084               	movwf	fsr0
  9196  0F60  120A  158A  200A   	fcall	stringdir
              120A  158A         
  9197  0F65  00AC               	movwf	(??i1_sprintf+1)+0
  9198  0F66  120A  158A  200A   	fcall	stringdir
              120A  158A         
  9199  0F6B  00AD               	movwf	(??i1_sprintf+1)+0+1
  9200  0F6C  082D               	movf	1+(??i1_sprintf+1)+0,w
  9201  0F6D  0232               	subwf	(i1sprintf@_val+1),w
  9202  0F6E  1D03               	skipz
  9203  0F6F  2F72               	goto	u538_25
  9204  0F70  082C               	movf	0+(??i1_sprintf+1)+0,w
  9205  0F71  0231               	subwf	(i1sprintf@_val),w
  9206  0F72                     u538_25:
  9207  0F72  1803               	skipnc
  9208  0F73  2F75               	goto	u538_21
  9209  0F74  2F76               	goto	u538_20
  9210  0F75                     u538_21:
  9211  0F75  2F78               	goto	i1l11768
  9212  0F76                     u538_20:
  9213  0F76  2F83               	goto	i1l11772
  9214                           	line	1302
  9215                           	
  9216  0F77                     i1l11766:	
  9217                           ;doprnt.c: 1302: break;
  9218  0F77  2F83               	goto	i1l11772
  9219                           	
  9220  0F78                     i1l6723:	
  9221                           	line	1300
  9222                           	
  9223  0F78                     i1l11768:	
  9224  0F78  3001               	movlw	(01h)
  9225  0F79  00AB               	movwf	(??i1_sprintf+0)+0
  9226  0F7A  082B               	movf	(??i1_sprintf+0)+0,w
  9227  0F7B  07B6               	addwf	(i1sprintf@c),f
  9228                           	
  9229  0F7C                     i1l11770:	
  9230  0F7C  0836               	movf	(i1sprintf@c),w
  9231  0F7D  3A05               	xorlw	05h
  9232  0F7E  1D03               	skipz
  9233  0F7F  2F81               	goto	u539_21
  9234  0F80  2F82               	goto	u539_20
  9235  0F81                     u539_21:
  9236  0F81  2F5B               	goto	i1l11764
  9237  0F82                     u539_20:
  9238  0F82  2F83               	goto	i1l11772
  9239                           	
  9240  0F83                     i1l6722:	
  9241                           	line	1433
  9242                           	
  9243  0F83                     i1l11772:	
  9244                           ;doprnt.c: 1417: {
  9245                           ;doprnt.c: 1433: if(flag & 0x03)
  9246  0F83  082F               	movf	(i1sprintf@flag),w
  9247  0F84  3903               	andlw	03h
  9248  0F85  1903               	btfsc	status,2
  9249  0F86  2F88               	goto	u540_21
  9250  0F87  2F89               	goto	u540_20
  9251  0F88                     u540_21:
  9252  0F88  2F95               	goto	i1l11778
  9253  0F89                     u540_20:
  9254                           	line	1434
  9255                           	
  9256  0F89                     i1l11774:	
  9257                           ;doprnt.c: 1434: ((*sp++ = ('-')));
  9258  0F89  302D               	movlw	(02Dh)
  9259  0F8A  00AB               	movwf	(??i1_sprintf+0)+0
  9260  0F8B  0835               	movf	(i1sprintf@sp),w
  9261  0F8C  0084               	movwf	fsr0
  9262  0F8D  082B               	movf	(??i1_sprintf+0)+0,w
  9263  0F8E  1383               	bcf	status, 7	;select IRP bank0
  9264  0F8F  0080               	movwf	indf
  9265                           	
  9266  0F90                     i1l11776:	
  9267  0F90  3001               	movlw	(01h)
  9268  0F91  00AB               	movwf	(??i1_sprintf+0)+0
  9269  0F92  082B               	movf	(??i1_sprintf+0)+0,w
  9270  0F93  07B5               	addwf	(i1sprintf@sp),f
  9271  0F94  2F95               	goto	i1l11778
  9272                           	
  9273  0F95                     i1l6724:	
  9274                           	line	1467
  9275                           	
  9276  0F95                     i1l11778:	
  9277                           ;doprnt.c: 1464: }
  9278                           ;doprnt.c: 1467: prec = c;
  9279  0F95  0836               	movf	(i1sprintf@c),w
  9280  0F96  00AB               	movwf	(??i1_sprintf+0)+0
  9281  0F97  082B               	movf	(??i1_sprintf+0)+0,w
  9282  0F98  00B0               	movwf	(i1sprintf@prec)
  9283                           	line	1469
  9284                           ;doprnt.c: 1469: while(prec--) {
  9285  0F99  2FDA               	goto	i1l11786
  9286                           	
  9287  0F9A                     i1l6726:	
  9288                           	line	1484
  9289                           	
  9290  0F9A                     i1l11780:	
  9291                           ;doprnt.c: 1473: {
  9292                           ;doprnt.c: 1484: c = (_val._val / dpowers[prec]) % 10 + '0';
  9293  0F9A  300A               	movlw	low(0Ah)
  9294  0F9B  00A0               	movwf	(?i1___lwmod)
  9295  0F9C  3000               	movlw	high(0Ah)
  9296  0F9D  00A1               	movwf	((?i1___lwmod))+1
  9297  0F9E  0830               	movf	(i1sprintf@prec),w
  9298  0F9F  00AB               	movwf	(??i1_sprintf+0)+0
  9299  0FA0  072B               	addwf	(??i1_sprintf+0)+0,w
  9300  0FA1  3E01               	addlw	low((_dpowers-__stringbase))
  9301  0FA2  0084               	movwf	fsr0
  9302  0FA3  120A  158A  200A   	fcall	stringdir
              120A  158A         
  9303  0FA8  00F6               	movwf	(?i1___lwdiv)
  9304  0FA9  120A  158A  200A   	fcall	stringdir
              120A  158A         
  9305  0FAE  00F7               	movwf	(?i1___lwdiv+1)
  9306  0FAF  0832               	movf	(i1sprintf@_val+1),w
  9307  0FB0  01F9               	clrf	1+(?i1___lwdiv)+02h
  9308  0FB1  07F9               	addwf	1+(?i1___lwdiv)+02h
  9309  0FB2  0831               	movf	(i1sprintf@_val),w
  9310  0FB3  01F8               	clrf	0+(?i1___lwdiv)+02h
  9311  0FB4  07F8               	addwf	0+(?i1___lwdiv)+02h
  9312                           
  9313  0FB5  160A  118A  27B2   	fcall	i1___lwdiv
              120A  158A         
  9314  0FBA  0877               	movf	(1+(?i1___lwdiv)),w
  9315  0FBB  1283               	bcf	status, 5	;RP0=0, select bank0
  9316  0FBC  1303               	bcf	status, 6	;RP1=0, select bank0
  9317  0FBD  01A3               	clrf	1+(?i1___lwmod)+02h
  9318  0FBE  07A3               	addwf	1+(?i1___lwmod)+02h
  9319  0FBF  0876               	movf	(0+(?i1___lwdiv)),w
  9320  0FC0  01A2               	clrf	0+(?i1___lwmod)+02h
  9321  0FC1  07A2               	addwf	0+(?i1___lwmod)+02h
  9322                           
  9323  0FC2  160A  118A  2726   	fcall	i1___lwmod
              120A  158A         
  9324  0FC7  1283               	bcf	status, 5	;RP0=0, select bank0
  9325  0FC8  1303               	bcf	status, 6	;RP1=0, select bank0
  9326  0FC9  0820               	movf	(0+(?i1___lwmod)),w
  9327  0FCA  3E30               	addlw	030h
  9328  0FCB  00AC               	movwf	(??i1_sprintf+1)+0
  9329  0FCC  082C               	movf	(??i1_sprintf+1)+0,w
  9330  0FCD  00B6               	movwf	(i1sprintf@c)
  9331                           	line	1516
  9332                           	
  9333  0FCE                     i1l11782:	
  9334                           ;doprnt.c: 1515: }
  9335                           ;doprnt.c: 1516: ((*sp++ = (c)));
  9336  0FCE  0836               	movf	(i1sprintf@c),w
  9337  0FCF  00AB               	movwf	(??i1_sprintf+0)+0
  9338  0FD0  0835               	movf	(i1sprintf@sp),w
  9339  0FD1  0084               	movwf	fsr0
  9340  0FD2  082B               	movf	(??i1_sprintf+0)+0,w
  9341  0FD3  1383               	bcf	status, 7	;select IRP bank0
  9342  0FD4  0080               	movwf	indf
  9343                           	
  9344  0FD5                     i1l11784:	
  9345  0FD5  3001               	movlw	(01h)
  9346  0FD6  00AB               	movwf	(??i1_sprintf+0)+0
  9347  0FD7  082B               	movf	(??i1_sprintf+0)+0,w
  9348  0FD8  07B5               	addwf	(i1sprintf@sp),f
  9349  0FD9  2FDA               	goto	i1l11786
  9350                           	line	1517
  9351                           	
  9352  0FDA                     i1l6725:	
  9353                           	line	1469
  9354                           	
  9355  0FDA                     i1l11786:	
  9356  0FDA  30FF               	movlw	(-1)
  9357  0FDB  00AB               	movwf	(??i1_sprintf+0)+0
  9358  0FDC  082B               	movf	(??i1_sprintf+0)+0,w
  9359  0FDD  07B0               	addwf	(i1sprintf@prec),f
  9360  0FDE  0830               	movf	((i1sprintf@prec)),w
  9361  0FDF  3AFF               	xorlw	-1
  9362  0FE0  1D03               	skipz
  9363  0FE1  2FE3               	goto	u541_21
  9364  0FE2  2FE4               	goto	u541_20
  9365  0FE3                     u541_21:
  9366  0FE3  2F9A               	goto	i1l11780
  9367  0FE4                     u541_20:
  9368  0FE4  2FE6               	goto	i1l11788
  9369                           	
  9370  0FE5                     i1l6727:	
  9371  0FE5  2FE6               	goto	i1l11788
  9372                           	line	1525
  9373                           	
  9374  0FE6                     i1l6710:	
  9375                           	line	540
  9376                           	
  9377  0FE6                     i1l11788:	
  9378  0FE6  3001               	movlw	01h
  9379  0FE7  07A6               	addwf	(i1sprintf@f),f
  9380  0FE8  30FF               	movlw	-01h
  9381  0FE9  0726               	addwf	(i1sprintf@f),w
  9382  0FEA  0084               	movwf	fsr0
  9383  0FEB  120A  158A  200A   	fcall	stringdir
              120A  158A         
  9384  0FF0  00AB               	movwf	(??i1_sprintf+0)+0
  9385  0FF1  082B               	movf	(??i1_sprintf+0)+0,w
  9386  0FF2  00B6               	movwf	(i1sprintf@c)
  9387  0FF3  08B6               	movf	((i1sprintf@c)),f
  9388  0FF4  1D03               	skipz
  9389  0FF5  2FF7               	goto	u542_21
  9390  0FF6  2FF8               	goto	u542_20
  9391  0FF7                     u542_21:
  9392  0FF7  2F08               	goto	i1l11738
  9393  0FF8                     u542_20:
  9394  0FF8  2FFA               	goto	i1l11790
  9395                           	
  9396  0FF9                     i1l6728:	
  9397  0FF9  2FFA               	goto	i1l11790
  9398                           	line	1527
  9399                           ;doprnt.c: 1517: }
  9400                           ;doprnt.c: 1525: }
  9401                           ;doprnt.c: 1527: alldone:
  9402                           	
  9403  0FFA                     i1l6715:	
  9404                           	line	1530
  9405                           	
  9406  0FFA                     i1l11790:	
  9407                           ;doprnt.c: 1530: *sp = 0;
  9408  0FFA  0835               	movf	(i1sprintf@sp),w
  9409  0FFB  0084               	movwf	fsr0
  9410  0FFC  1383               	bcf	status, 7	;select IRP bank0
  9411  0FFD  0180               	clrf	indf
  9412  0FFE  2FFF               	goto	i1l6729
  9413                           	line	1532
  9414                           	
  9415  0FFF                     i1l11792:	
  9416                           	line	1533
  9417                           ;doprnt.c: 1532: return 0;
  9418                           ;	Return value of i1_sprintf is never used
  9419                           	
  9420  0FFF                     i1l6729:	
  9421  0FFF  0008               	return
  9422                           	opt stack 0
  9423                           GLOBAL	__end_ofi1_sprintf
  9424  1000                     	__end_ofi1_sprintf:
  9425 ;; =============== function i1_sprintf ends ============
  9426                           
  9427                           	signat	i1_sprintf,90
  9428                           	global	i1_ADCconvert
  9429                           psect	text1166,local,class=CODE,delta=2
  9430                           global __ptext1166
  9431  023E                     __ptext1166:
  9432                           
  9433 ;; *************** function i1_ADCconvert *****************
  9434 ;; Defined at:
  9435 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;		None
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;		None               void
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0, pclath, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9449 ;;      Params:         0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0
  9451 ;;      Temps:          0       2       0       0       0
  9452 ;;      Totals:         0       2       0       0       0
  9453 ;;Total ram usage:        2 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    1
  9456 ;; This function calls:
  9457 ;;		i1___wmul
  9458 ;;		i1___lwdiv
  9459 ;; This function is called by:
  9460 ;;		i1_readAvgDistance
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           psect	text1166
  9464                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  9465                           	line	33
  9466                           	global	__size_ofi1_ADCconvert
  9467  021B                     	__size_ofi1_ADCconvert	equ	__end_ofi1_ADCconvert-i1_ADCconvert
  9468                           	
  9469  023E                     i1_ADCconvert:	
  9470 ;; hardware stack exceeded
  9471                           	opt	stack 0
  9472                           ; Regs used in i1_ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  9473                           	line	39
  9474                           	
  9475  023E                     i1l11654:	
  9476                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  9477  023E  3000               	movlw	high(0D5h)
  9478  023F  1683               	bsf	status, 5	;RP0=1, select bank1
  9479  0240  1303               	bcf	status, 6	;RP1=0, select bank1
  9480  0241  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9481  0242  30D5               	movlw	low(0D5h)
  9482  0243  1903               	skipnz
  9483  0244  0268               	subwf	(_adcVal)^080h,w	;volatile
  9484  0245  1C03               	skipc
  9485  0246  2A48               	goto	u519_21
  9486  0247  2A49               	goto	u519_20
  9487  0248                     u519_21:
  9488  0248  2A8A               	goto	i1l11660
  9489  0249                     u519_20:
  9490                           	
  9491  0249                     i1l11656:	
  9492  0249  3000               	movlw	high(0EAh)
  9493  024A  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9494  024B  30EA               	movlw	low(0EAh)
  9495  024C  1903               	skipnz
  9496  024D  0268               	subwf	(_adcVal)^080h,w	;volatile
  9497  024E  1803               	skipnc
  9498  024F  2A51               	goto	u520_21
  9499  0250  2A52               	goto	u520_20
  9500  0251                     u520_21:
  9501  0251  2A8A               	goto	i1l11660
  9502  0252                     u520_20:
  9503                           	line	41
  9504                           	
  9505  0252                     i1l11658:	
  9506                           ;infrared.c: 40: {
  9507                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  9508  0252  3015               	movlw	low(015h)
  9509  0253  00F6               	movwf	(?i1___lwdiv)
  9510  0254  3000               	movlw	high(015h)
  9511  0255  00F7               	movwf	((?i1___lwdiv))+1
  9512  0256  0968               	comf	(_adcVal)^080h,w	;volatile
  9513  0257  1283               	bcf	status, 5	;RP0=0, select bank0
  9514  0258  1303               	bcf	status, 6	;RP1=0, select bank0
  9515  0259  00A0               	movwf	(??i1_ADCconvert+0)+0
  9516  025A  1683               	bsf	status, 5	;RP0=1, select bank1
  9517  025B  1303               	bcf	status, 6	;RP1=0, select bank1
  9518  025C  0969               	comf	(_adcVal+1)^080h,w	;volatile
  9519  025D  1283               	bcf	status, 5	;RP0=0, select bank0
  9520  025E  1303               	bcf	status, 6	;RP1=0, select bank0
  9521  025F  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
  9522  0260  0AA0               	incf	(??i1_ADCconvert+0)+0,f
  9523  0261  1903               	skipnz
  9524  0262  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
  9525  0263  0820               	movf	0+(??i1_ADCconvert+0)+0,w
  9526  0264  3EEA               	addlw	low(0EAh)
  9527  0265  00F0               	movwf	(?i1___wmul)
  9528  0266  0821               	movf	1+(??i1_ADCconvert+0)+0,w
  9529  0267  1803               	skipnc
  9530  0268  3E01               	addlw	1
  9531  0269  3E00               	addlw	high(0EAh)
  9532  026A  00F1               	movwf	1+(?i1___wmul)
  9533  026B  3005               	movlw	low(05h)
  9534  026C  00F2               	movwf	0+(?i1___wmul)+02h
  9535  026D  3000               	movlw	high(05h)
  9536  026E  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  9537  026F  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
  9538  0274  0871               	movf	(1+(?i1___wmul)),w
  9539  0275  01F9               	clrf	1+(?i1___lwdiv)+02h
  9540  0276  07F9               	addwf	1+(?i1___lwdiv)+02h
  9541  0277  0870               	movf	(0+(?i1___wmul)),w
  9542  0278  01F8               	clrf	0+(?i1___lwdiv)+02h
  9543  0279  07F8               	addwf	0+(?i1___lwdiv)+02h
  9544                           
  9545  027A  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
  9546  027F  0876               	movf	(0+(?i1___lwdiv)),w
  9547  0280  3E0F               	addlw	low(0Fh)
  9548  0281  1283               	bcf	status, 5	;RP0=0, select bank0
  9549  0282  1303               	bcf	status, 6	;RP1=0, select bank0
  9550  0283  00D7               	movwf	(_distance)	;volatile
  9551  0284  0877               	movf	(1+(?i1___lwdiv)),w
  9552  0285  1803               	skipnc
  9553  0286  3E01               	addlw	1
  9554  0287  3E00               	addlw	high(0Fh)
  9555  0288  00D8               	movwf	1+(_distance)	;volatile
  9556                           	line	42
  9557                           ;infrared.c: 42: }
  9558  0289  2C58               	goto	i1l2976
  9559                           	line	43
  9560                           	
  9561  028A                     i1l2963:	
  9562                           	
  9563  028A                     i1l11660:	
  9564                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  9565  028A  3000               	movlw	high(0AAh)
  9566  028B  1683               	bsf	status, 5	;RP0=1, select bank1
  9567  028C  1303               	bcf	status, 6	;RP1=0, select bank1
  9568  028D  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9569  028E  30AA               	movlw	low(0AAh)
  9570  028F  1903               	skipnz
  9571  0290  0268               	subwf	(_adcVal)^080h,w	;volatile
  9572  0291  1C03               	skipc
  9573  0292  2A94               	goto	u521_21
  9574  0293  2A95               	goto	u521_20
  9575  0294                     u521_21:
  9576  0294  2AD6               	goto	i1l11666
  9577  0295                     u521_20:
  9578                           	
  9579  0295                     i1l11662:	
  9580  0295  3000               	movlw	high(0D5h)
  9581  0296  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9582  0297  30D5               	movlw	low(0D5h)
  9583  0298  1903               	skipnz
  9584  0299  0268               	subwf	(_adcVal)^080h,w	;volatile
  9585  029A  1803               	skipnc
  9586  029B  2A9D               	goto	u522_21
  9587  029C  2A9E               	goto	u522_20
  9588  029D                     u522_21:
  9589  029D  2AD6               	goto	i1l11666
  9590  029E                     u522_20:
  9591                           	line	45
  9592                           	
  9593  029E                     i1l11664:	
  9594                           ;infrared.c: 44: {
  9595                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  9596  029E  302B               	movlw	low(02Bh)
  9597  029F  00F6               	movwf	(?i1___lwdiv)
  9598  02A0  3000               	movlw	high(02Bh)
  9599  02A1  00F7               	movwf	((?i1___lwdiv))+1
  9600  02A2  0968               	comf	(_adcVal)^080h,w	;volatile
  9601  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  9602  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  9603  02A5  00A0               	movwf	(??i1_ADCconvert+0)+0
  9604  02A6  1683               	bsf	status, 5	;RP0=1, select bank1
  9605  02A7  1303               	bcf	status, 6	;RP1=0, select bank1
  9606  02A8  0969               	comf	(_adcVal+1)^080h,w	;volatile
  9607  02A9  1283               	bcf	status, 5	;RP0=0, select bank0
  9608  02AA  1303               	bcf	status, 6	;RP1=0, select bank0
  9609  02AB  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
  9610  02AC  0AA0               	incf	(??i1_ADCconvert+0)+0,f
  9611  02AD  1903               	skipnz
  9612  02AE  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
  9613  02AF  0820               	movf	0+(??i1_ADCconvert+0)+0,w
  9614  02B0  3ED5               	addlw	low(0D5h)
  9615  02B1  00F0               	movwf	(?i1___wmul)
  9616  02B2  0821               	movf	1+(??i1_ADCconvert+0)+0,w
  9617  02B3  1803               	skipnc
  9618  02B4  3E01               	addlw	1
  9619  02B5  3E00               	addlw	high(0D5h)
  9620  02B6  00F1               	movwf	1+(?i1___wmul)
  9621  02B7  300A               	movlw	low(0Ah)
  9622  02B8  00F2               	movwf	0+(?i1___wmul)+02h
  9623  02B9  3000               	movlw	high(0Ah)
  9624  02BA  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  9625  02BB  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
  9626  02C0  0871               	movf	(1+(?i1___wmul)),w
  9627  02C1  01F9               	clrf	1+(?i1___lwdiv)+02h
  9628  02C2  07F9               	addwf	1+(?i1___lwdiv)+02h
  9629  02C3  0870               	movf	(0+(?i1___wmul)),w
  9630  02C4  01F8               	clrf	0+(?i1___lwdiv)+02h
  9631  02C5  07F8               	addwf	0+(?i1___lwdiv)+02h
  9632                           
  9633  02C6  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
  9634  02CB  0876               	movf	(0+(?i1___lwdiv)),w
  9635  02CC  3E14               	addlw	low(014h)
  9636  02CD  1283               	bcf	status, 5	;RP0=0, select bank0
  9637  02CE  1303               	bcf	status, 6	;RP1=0, select bank0
  9638  02CF  00D7               	movwf	(_distance)	;volatile
  9639  02D0  0877               	movf	(1+(?i1___lwdiv)),w
  9640  02D1  1803               	skipnc
  9641  02D2  3E01               	addlw	1
  9642  02D3  3E00               	addlw	high(014h)
  9643  02D4  00D8               	movwf	1+(_distance)	;volatile
  9644                           	line	46
  9645                           ;infrared.c: 46: }
  9646  02D5  2C58               	goto	i1l2976
  9647                           	line	47
  9648                           	
  9649  02D6                     i1l2965:	
  9650                           	
  9651  02D6                     i1l11666:	
  9652                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  9653  02D6  3000               	movlw	high(080h)
  9654  02D7  1683               	bsf	status, 5	;RP0=1, select bank1
  9655  02D8  1303               	bcf	status, 6	;RP1=0, select bank1
  9656  02D9  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9657  02DA  3080               	movlw	low(080h)
  9658  02DB  1903               	skipnz
  9659  02DC  0268               	subwf	(_adcVal)^080h,w	;volatile
  9660  02DD  1C03               	skipc
  9661  02DE  2AE0               	goto	u523_21
  9662  02DF  2AE1               	goto	u523_20
  9663  02E0                     u523_21:
  9664  02E0  2B22               	goto	i1l11672
  9665  02E1                     u523_20:
  9666                           	
  9667  02E1                     i1l11668:	
  9668  02E1  3000               	movlw	high(0AAh)
  9669  02E2  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9670  02E3  30AA               	movlw	low(0AAh)
  9671  02E4  1903               	skipnz
  9672  02E5  0268               	subwf	(_adcVal)^080h,w	;volatile
  9673  02E6  1803               	skipnc
  9674  02E7  2AE9               	goto	u524_21
  9675  02E8  2AEA               	goto	u524_20
  9676  02E9                     u524_21:
  9677  02E9  2B22               	goto	i1l11672
  9678  02EA                     u524_20:
  9679                           	line	49
  9680                           	
  9681  02EA                     i1l11670:	
  9682                           ;infrared.c: 48: {
  9683                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  9684  02EA  302A               	movlw	low(02Ah)
  9685  02EB  00F6               	movwf	(?i1___lwdiv)
  9686  02EC  3000               	movlw	high(02Ah)
  9687  02ED  00F7               	movwf	((?i1___lwdiv))+1
  9688  02EE  0968               	comf	(_adcVal)^080h,w	;volatile
  9689  02EF  1283               	bcf	status, 5	;RP0=0, select bank0
  9690  02F0  1303               	bcf	status, 6	;RP1=0, select bank0
  9691  02F1  00A0               	movwf	(??i1_ADCconvert+0)+0
  9692  02F2  1683               	bsf	status, 5	;RP0=1, select bank1
  9693  02F3  1303               	bcf	status, 6	;RP1=0, select bank1
  9694  02F4  0969               	comf	(_adcVal+1)^080h,w	;volatile
  9695  02F5  1283               	bcf	status, 5	;RP0=0, select bank0
  9696  02F6  1303               	bcf	status, 6	;RP1=0, select bank0
  9697  02F7  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
  9698  02F8  0AA0               	incf	(??i1_ADCconvert+0)+0,f
  9699  02F9  1903               	skipnz
  9700  02FA  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
  9701  02FB  0820               	movf	0+(??i1_ADCconvert+0)+0,w
  9702  02FC  3EAA               	addlw	low(0AAh)
  9703  02FD  00F0               	movwf	(?i1___wmul)
  9704  02FE  0821               	movf	1+(??i1_ADCconvert+0)+0,w
  9705  02FF  1803               	skipnc
  9706  0300  3E01               	addlw	1
  9707  0301  3E00               	addlw	high(0AAh)
  9708  0302  00F1               	movwf	1+(?i1___wmul)
  9709  0303  300A               	movlw	low(0Ah)
  9710  0304  00F2               	movwf	0+(?i1___wmul)+02h
  9711  0305  3000               	movlw	high(0Ah)
  9712  0306  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  9713  0307  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
  9714  030C  0871               	movf	(1+(?i1___wmul)),w
  9715  030D  01F9               	clrf	1+(?i1___lwdiv)+02h
  9716  030E  07F9               	addwf	1+(?i1___lwdiv)+02h
  9717  030F  0870               	movf	(0+(?i1___wmul)),w
  9718  0310  01F8               	clrf	0+(?i1___lwdiv)+02h
  9719  0311  07F8               	addwf	0+(?i1___lwdiv)+02h
  9720                           
  9721  0312  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
  9722  0317  0876               	movf	(0+(?i1___lwdiv)),w
  9723  0318  3E1E               	addlw	low(01Eh)
  9724  0319  1283               	bcf	status, 5	;RP0=0, select bank0
  9725  031A  1303               	bcf	status, 6	;RP1=0, select bank0
  9726  031B  00D7               	movwf	(_distance)	;volatile
  9727  031C  0877               	movf	(1+(?i1___lwdiv)),w
  9728  031D  1803               	skipnc
  9729  031E  3E01               	addlw	1
  9730  031F  3E00               	addlw	high(01Eh)
  9731  0320  00D8               	movwf	1+(_distance)	;volatile
  9732                           	line	50
  9733                           ;infrared.c: 50: }
  9734  0321  2C58               	goto	i1l2976
  9735                           	line	51
  9736                           	
  9737  0322                     i1l2967:	
  9738                           	
  9739  0322                     i1l11672:	
  9740                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  9741  0322  3000               	movlw	high(06Bh)
  9742  0323  1683               	bsf	status, 5	;RP0=1, select bank1
  9743  0324  1303               	bcf	status, 6	;RP1=0, select bank1
  9744  0325  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9745  0326  306B               	movlw	low(06Bh)
  9746  0327  1903               	skipnz
  9747  0328  0268               	subwf	(_adcVal)^080h,w	;volatile
  9748  0329  1C03               	skipc
  9749  032A  2B2C               	goto	u525_21
  9750  032B  2B2D               	goto	u525_20
  9751  032C                     u525_21:
  9752  032C  2B6E               	goto	i1l11678
  9753  032D                     u525_20:
  9754                           	
  9755  032D                     i1l11674:	
  9756  032D  3000               	movlw	high(080h)
  9757  032E  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9758  032F  3080               	movlw	low(080h)
  9759  0330  1903               	skipnz
  9760  0331  0268               	subwf	(_adcVal)^080h,w	;volatile
  9761  0332  1803               	skipnc
  9762  0333  2B35               	goto	u526_21
  9763  0334  2B36               	goto	u526_20
  9764  0335                     u526_21:
  9765  0335  2B6E               	goto	i1l11678
  9766  0336                     u526_20:
  9767                           	line	53
  9768                           	
  9769  0336                     i1l11676:	
  9770                           ;infrared.c: 52: {
  9771                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  9772  0336  3015               	movlw	low(015h)
  9773  0337  00F6               	movwf	(?i1___lwdiv)
  9774  0338  3000               	movlw	high(015h)
  9775  0339  00F7               	movwf	((?i1___lwdiv))+1
  9776  033A  0968               	comf	(_adcVal)^080h,w	;volatile
  9777  033B  1283               	bcf	status, 5	;RP0=0, select bank0
  9778  033C  1303               	bcf	status, 6	;RP1=0, select bank0
  9779  033D  00A0               	movwf	(??i1_ADCconvert+0)+0
  9780  033E  1683               	bsf	status, 5	;RP0=1, select bank1
  9781  033F  1303               	bcf	status, 6	;RP1=0, select bank1
  9782  0340  0969               	comf	(_adcVal+1)^080h,w	;volatile
  9783  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  9784  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  9785  0343  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
  9786  0344  0AA0               	incf	(??i1_ADCconvert+0)+0,f
  9787  0345  1903               	skipnz
  9788  0346  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
  9789  0347  0820               	movf	0+(??i1_ADCconvert+0)+0,w
  9790  0348  3E80               	addlw	low(080h)
  9791  0349  00F0               	movwf	(?i1___wmul)
  9792  034A  0821               	movf	1+(??i1_ADCconvert+0)+0,w
  9793  034B  1803               	skipnc
  9794  034C  3E01               	addlw	1
  9795  034D  3E00               	addlw	high(080h)
  9796  034E  00F1               	movwf	1+(?i1___wmul)
  9797  034F  300A               	movlw	low(0Ah)
  9798  0350  00F2               	movwf	0+(?i1___wmul)+02h
  9799  0351  3000               	movlw	high(0Ah)
  9800  0352  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  9801  0353  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
  9802  0358  0871               	movf	(1+(?i1___wmul)),w
  9803  0359  01F9               	clrf	1+(?i1___lwdiv)+02h
  9804  035A  07F9               	addwf	1+(?i1___lwdiv)+02h
  9805  035B  0870               	movf	(0+(?i1___wmul)),w
  9806  035C  01F8               	clrf	0+(?i1___lwdiv)+02h
  9807  035D  07F8               	addwf	0+(?i1___lwdiv)+02h
  9808                           
  9809  035E  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
  9810  0363  0876               	movf	(0+(?i1___lwdiv)),w
  9811  0364  3E28               	addlw	low(028h)
  9812  0365  1283               	bcf	status, 5	;RP0=0, select bank0
  9813  0366  1303               	bcf	status, 6	;RP1=0, select bank0
  9814  0367  00D7               	movwf	(_distance)	;volatile
  9815  0368  0877               	movf	(1+(?i1___lwdiv)),w
  9816  0369  1803               	skipnc
  9817  036A  3E01               	addlw	1
  9818  036B  3E00               	addlw	high(028h)
  9819  036C  00D8               	movwf	1+(_distance)	;volatile
  9820                           	line	54
  9821                           ;infrared.c: 54: }
  9822  036D  2C58               	goto	i1l2976
  9823                           	line	55
  9824                           	
  9825  036E                     i1l2969:	
  9826                           	
  9827  036E                     i1l11678:	
  9828                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  9829  036E  3000               	movlw	high(04Dh)
  9830  036F  1683               	bsf	status, 5	;RP0=1, select bank1
  9831  0370  1303               	bcf	status, 6	;RP1=0, select bank1
  9832  0371  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9833  0372  304D               	movlw	low(04Dh)
  9834  0373  1903               	skipnz
  9835  0374  0268               	subwf	(_adcVal)^080h,w	;volatile
  9836  0375  1C03               	skipc
  9837  0376  2B78               	goto	u527_21
  9838  0377  2B79               	goto	u527_20
  9839  0378                     u527_21:
  9840  0378  2BBA               	goto	i1l11684
  9841  0379                     u527_20:
  9842                           	
  9843  0379                     i1l11680:	
  9844  0379  3000               	movlw	high(06Bh)
  9845  037A  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9846  037B  306B               	movlw	low(06Bh)
  9847  037C  1903               	skipnz
  9848  037D  0268               	subwf	(_adcVal)^080h,w	;volatile
  9849  037E  1803               	skipnc
  9850  037F  2B81               	goto	u528_21
  9851  0380  2B82               	goto	u528_20
  9852  0381                     u528_21:
  9853  0381  2BBA               	goto	i1l11684
  9854  0382                     u528_20:
  9855                           	line	57
  9856                           	
  9857  0382                     i1l11682:	
  9858                           ;infrared.c: 56: {
  9859                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  9860  0382  301E               	movlw	low(01Eh)
  9861  0383  00F6               	movwf	(?i1___lwdiv)
  9862  0384  3000               	movlw	high(01Eh)
  9863  0385  00F7               	movwf	((?i1___lwdiv))+1
  9864  0386  0968               	comf	(_adcVal)^080h,w	;volatile
  9865  0387  1283               	bcf	status, 5	;RP0=0, select bank0
  9866  0388  1303               	bcf	status, 6	;RP1=0, select bank0
  9867  0389  00A0               	movwf	(??i1_ADCconvert+0)+0
  9868  038A  1683               	bsf	status, 5	;RP0=1, select bank1
  9869  038B  1303               	bcf	status, 6	;RP1=0, select bank1
  9870  038C  0969               	comf	(_adcVal+1)^080h,w	;volatile
  9871  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  9872  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  9873  038F  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
  9874  0390  0AA0               	incf	(??i1_ADCconvert+0)+0,f
  9875  0391  1903               	skipnz
  9876  0392  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
  9877  0393  0820               	movf	0+(??i1_ADCconvert+0)+0,w
  9878  0394  3E6B               	addlw	low(06Bh)
  9879  0395  00F0               	movwf	(?i1___wmul)
  9880  0396  0821               	movf	1+(??i1_ADCconvert+0)+0,w
  9881  0397  1803               	skipnc
  9882  0398  3E01               	addlw	1
  9883  0399  3E00               	addlw	high(06Bh)
  9884  039A  00F1               	movwf	1+(?i1___wmul)
  9885  039B  300A               	movlw	low(0Ah)
  9886  039C  00F2               	movwf	0+(?i1___wmul)+02h
  9887  039D  3000               	movlw	high(0Ah)
  9888  039E  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  9889  039F  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
  9890  03A4  0871               	movf	(1+(?i1___wmul)),w
  9891  03A5  01F9               	clrf	1+(?i1___lwdiv)+02h
  9892  03A6  07F9               	addwf	1+(?i1___lwdiv)+02h
  9893  03A7  0870               	movf	(0+(?i1___wmul)),w
  9894  03A8  01F8               	clrf	0+(?i1___lwdiv)+02h
  9895  03A9  07F8               	addwf	0+(?i1___lwdiv)+02h
  9896                           
  9897  03AA  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
  9898  03AF  0876               	movf	(0+(?i1___lwdiv)),w
  9899  03B0  3E32               	addlw	low(032h)
  9900  03B1  1283               	bcf	status, 5	;RP0=0, select bank0
  9901  03B2  1303               	bcf	status, 6	;RP1=0, select bank0
  9902  03B3  00D7               	movwf	(_distance)	;volatile
  9903  03B4  0877               	movf	(1+(?i1___lwdiv)),w
  9904  03B5  1803               	skipnc
  9905  03B6  3E01               	addlw	1
  9906  03B7  3E00               	addlw	high(032h)
  9907  03B8  00D8               	movwf	1+(_distance)	;volatile
  9908                           	line	58
  9909                           ;infrared.c: 58: }
  9910  03B9  2C58               	goto	i1l2976
  9911                           	line	59
  9912                           	
  9913  03BA                     i1l2971:	
  9914                           	
  9915  03BA                     i1l11684:	
  9916                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  9917  03BA  3000               	movlw	high(038h)
  9918  03BB  1683               	bsf	status, 5	;RP0=1, select bank1
  9919  03BC  1303               	bcf	status, 6	;RP1=0, select bank1
  9920  03BD  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9921  03BE  3038               	movlw	low(038h)
  9922  03BF  1903               	skipnz
  9923  03C0  0268               	subwf	(_adcVal)^080h,w	;volatile
  9924  03C1  1C03               	skipc
  9925  03C2  2BC4               	goto	u529_21
  9926  03C3  2BC5               	goto	u529_20
  9927  03C4                     u529_21:
  9928  03C4  2C06               	goto	i1l11690
  9929  03C5                     u529_20:
  9930                           	
  9931  03C5                     i1l11686:	
  9932  03C5  3000               	movlw	high(04Dh)
  9933  03C6  0269               	subwf	(_adcVal+1)^080h,w	;volatile
  9934  03C7  304D               	movlw	low(04Dh)
  9935  03C8  1903               	skipnz
  9936  03C9  0268               	subwf	(_adcVal)^080h,w	;volatile
  9937  03CA  1803               	skipnc
  9938  03CB  2BCD               	goto	u530_21
  9939  03CC  2BCE               	goto	u530_20
  9940  03CD                     u530_21:
  9941  03CD  2C06               	goto	i1l11690
  9942  03CE                     u530_20:
  9943                           	line	61
  9944                           	
  9945  03CE                     i1l11688:	
  9946                           ;infrared.c: 60: {
  9947                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  9948  03CE  3015               	movlw	low(015h)
  9949  03CF  00F6               	movwf	(?i1___lwdiv)
  9950  03D0  3000               	movlw	high(015h)
  9951  03D1  00F7               	movwf	((?i1___lwdiv))+1
  9952  03D2  0968               	comf	(_adcVal)^080h,w	;volatile
  9953  03D3  1283               	bcf	status, 5	;RP0=0, select bank0
  9954  03D4  1303               	bcf	status, 6	;RP1=0, select bank0
  9955  03D5  00A0               	movwf	(??i1_ADCconvert+0)+0
  9956  03D6  1683               	bsf	status, 5	;RP0=1, select bank1
  9957  03D7  1303               	bcf	status, 6	;RP1=0, select bank1
  9958  03D8  0969               	comf	(_adcVal+1)^080h,w	;volatile
  9959  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  9960  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  9961  03DB  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
  9962  03DC  0AA0               	incf	(??i1_ADCconvert+0)+0,f
  9963  03DD  1903               	skipnz
  9964  03DE  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
  9965  03DF  0820               	movf	0+(??i1_ADCconvert+0)+0,w
  9966  03E0  3E4D               	addlw	low(04Dh)
  9967  03E1  00F0               	movwf	(?i1___wmul)
  9968  03E2  0821               	movf	1+(??i1_ADCconvert+0)+0,w
  9969  03E3  1803               	skipnc
  9970  03E4  3E01               	addlw	1
  9971  03E5  3E00               	addlw	high(04Dh)
  9972  03E6  00F1               	movwf	1+(?i1___wmul)
  9973  03E7  300A               	movlw	low(0Ah)
  9974  03E8  00F2               	movwf	0+(?i1___wmul)+02h
  9975  03E9  3000               	movlw	high(0Ah)
  9976  03EA  00F3               	movwf	(0+(?i1___wmul)+02h)+1
  9977  03EB  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
  9978  03F0  0871               	movf	(1+(?i1___wmul)),w
  9979  03F1  01F9               	clrf	1+(?i1___lwdiv)+02h
  9980  03F2  07F9               	addwf	1+(?i1___lwdiv)+02h
  9981  03F3  0870               	movf	(0+(?i1___wmul)),w
  9982  03F4  01F8               	clrf	0+(?i1___lwdiv)+02h
  9983  03F5  07F8               	addwf	0+(?i1___lwdiv)+02h
  9984                           
  9985  03F6  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
  9986  03FB  0876               	movf	(0+(?i1___lwdiv)),w
  9987  03FC  3E3C               	addlw	low(03Ch)
  9988  03FD  1283               	bcf	status, 5	;RP0=0, select bank0
  9989  03FE  1303               	bcf	status, 6	;RP1=0, select bank0
  9990  03FF  00D7               	movwf	(_distance)	;volatile
  9991  0400  0877               	movf	(1+(?i1___lwdiv)),w
  9992  0401  1803               	skipnc
  9993  0402  3E01               	addlw	1
  9994  0403  3E00               	addlw	high(03Ch)
  9995  0404  00D8               	movwf	1+(_distance)	;volatile
  9996                           	line	62
  9997                           ;infrared.c: 62: }
  9998  0405  2C58               	goto	i1l2976
  9999                           	line	63
 10000                           	
 10001  0406                     i1l2973:	
 10002                           	
 10003  0406                     i1l11690:	
 10004                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
 10005  0406  3000               	movlw	high(02Bh)
 10006  0407  1683               	bsf	status, 5	;RP0=1, select bank1
 10007  0408  1303               	bcf	status, 6	;RP1=0, select bank1
 10008  0409  0269               	subwf	(_adcVal+1)^080h,w	;volatile
 10009  040A  302B               	movlw	low(02Bh)
 10010  040B  1903               	skipnz
 10011  040C  0268               	subwf	(_adcVal)^080h,w	;volatile
 10012  040D  1C03               	skipc
 10013  040E  2C10               	goto	u531_21
 10014  040F  2C11               	goto	u531_20
 10015  0410                     u531_21:
 10016  0410  2C58               	goto	i1l2976
 10017  0411                     u531_20:
 10018                           	
 10019  0411                     i1l11692:	
 10020  0411  3000               	movlw	high(038h)
 10021  0412  0269               	subwf	(_adcVal+1)^080h,w	;volatile
 10022  0413  3038               	movlw	low(038h)
 10023  0414  1903               	skipnz
 10024  0415  0268               	subwf	(_adcVal)^080h,w	;volatile
 10025  0416  1803               	skipnc
 10026  0417  2C19               	goto	u532_21
 10027  0418  2C1A               	goto	u532_20
 10028  0419                     u532_21:
 10029  0419  2C58               	goto	i1l2976
 10030  041A                     u532_20:
 10031                           	line	65
 10032                           	
 10033  041A                     i1l11694:	
 10034                           ;infrared.c: 64: {
 10035                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
 10036  041A  300D               	movlw	low(0Dh)
 10037  041B  00F6               	movwf	(?i1___lwdiv)
 10038  041C  3000               	movlw	high(0Dh)
 10039  041D  00F7               	movwf	((?i1___lwdiv))+1
 10040  041E  0968               	comf	(_adcVal)^080h,w	;volatile
 10041  041F  1283               	bcf	status, 5	;RP0=0, select bank0
 10042  0420  1303               	bcf	status, 6	;RP1=0, select bank0
 10043  0421  00A0               	movwf	(??i1_ADCconvert+0)+0
 10044  0422  1683               	bsf	status, 5	;RP0=1, select bank1
 10045  0423  1303               	bcf	status, 6	;RP1=0, select bank1
 10046  0424  0969               	comf	(_adcVal+1)^080h,w	;volatile
 10047  0425  1283               	bcf	status, 5	;RP0=0, select bank0
 10048  0426  1303               	bcf	status, 6	;RP1=0, select bank0
 10049  0427  00A1               	movwf	((??i1_ADCconvert+0)+0+1)
 10050  0428  0AA0               	incf	(??i1_ADCconvert+0)+0,f
 10051  0429  1903               	skipnz
 10052  042A  0AA1               	incf	((??i1_ADCconvert+0)+0+1),f
 10053  042B  0820               	movf	0+(??i1_ADCconvert+0)+0,w
 10054  042C  3E38               	addlw	low(038h)
 10055  042D  00F0               	movwf	(?i1___wmul)
 10056  042E  0821               	movf	1+(??i1_ADCconvert+0)+0,w
 10057  042F  1803               	skipnc
 10058  0430  3E01               	addlw	1
 10059  0431  3E00               	addlw	high(038h)
 10060  0432  00F1               	movwf	1+(?i1___wmul)
 10061  0433  300A               	movlw	low(0Ah)
 10062  0434  00F2               	movwf	0+(?i1___wmul)+02h
 10063  0435  3000               	movlw	high(0Ah)
 10064  0436  00F3               	movwf	(0+(?i1___wmul)+02h)+1
 10065  0437  160A  118A  2567   	fcall	i1___wmul
              120A  118A         
 10066  043C  0871               	movf	(1+(?i1___wmul)),w
 10067  043D  01F9               	clrf	1+(?i1___lwdiv)+02h
 10068  043E  07F9               	addwf	1+(?i1___lwdiv)+02h
 10069  043F  0870               	movf	(0+(?i1___wmul)),w
 10070  0440  01F8               	clrf	0+(?i1___lwdiv)+02h
 10071  0441  07F8               	addwf	0+(?i1___lwdiv)+02h
 10072                           
 10073  0442  160A  118A  27B2   	fcall	i1___lwdiv
              120A  118A         
 10074  0447  0876               	movf	(0+(?i1___lwdiv)),w
 10075  0448  3E46               	addlw	low(046h)
 10076  0449  1283               	bcf	status, 5	;RP0=0, select bank0
 10077  044A  1303               	bcf	status, 6	;RP1=0, select bank0
 10078  044B  00D7               	movwf	(_distance)	;volatile
 10079  044C  0877               	movf	(1+(?i1___lwdiv)),w
 10080  044D  1803               	skipnc
 10081  044E  3E01               	addlw	1
 10082  044F  3E00               	addlw	high(046h)
 10083  0450  00D8               	movwf	1+(_distance)	;volatile
 10084  0451  2C58               	goto	i1l2976
 10085                           	line	66
 10086                           	
 10087  0452                     i1l2975:	
 10088  0452  2C58               	goto	i1l2976
 10089                           	line	67
 10090                           	
 10091  0453                     i1l2974:	
 10092  0453  2C58               	goto	i1l2976
 10093                           	
 10094  0454                     i1l2972:	
 10095  0454  2C58               	goto	i1l2976
 10096                           	
 10097  0455                     i1l2970:	
 10098  0455  2C58               	goto	i1l2976
 10099                           	
 10100  0456                     i1l2968:	
 10101  0456  2C58               	goto	i1l2976
 10102                           	
 10103  0457                     i1l2966:	
 10104  0457  2C58               	goto	i1l2976
 10105                           	
 10106  0458                     i1l2964:	
 10107                           	
 10108  0458                     i1l2976:	
 10109  0458  0008               	return
 10110                           	opt stack 0
 10111                           GLOBAL	__end_ofi1_ADCconvert
 10112  0459                     	__end_ofi1_ADCconvert:
 10113 ;; =============== function i1_ADCconvert ends ============
 10114                           
 10115                           	signat	i1_ADCconvert,88
 10116                           	global	i1_lcd_write_data
 10117                           psect	text1167,local,class=CODE,delta=2
 10118                           global __ptext1167
 10119  13E2                     __ptext1167:
 10120                           
 10121 ;; *************** function i1_lcd_write_data *****************
 10122 ;; Defined at:
 10123 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  lcd_write_da    1    wreg     unsigned char 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  lcd_write_da    1    2[COMMON] unsigned char 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;		None               void
 10130 ;; Registers used:
 10131 ;;		wreg
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10137 ;;      Params:         0       0       0       0       0
 10138 ;;      Locals:         1       0       0       0       0
 10139 ;;      Temps:          2       0       0       0       0
 10140 ;;      Totals:         3       0       0       0       0
 10141 ;;Total ram usage:        3 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		i1_lcd_write_string
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           psect	text1167
 10150                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10151                           	line	30
 10152                           	global	__size_ofi1_lcd_write_data
 10153  0013                     	__size_ofi1_lcd_write_data	equ	__end_ofi1_lcd_write_data-i1_lcd_write_data
 10154                           	
 10155  13E2                     i1_lcd_write_data:	
 10156 ;; hardware stack exceeded
 10157                           	opt	stack 0
 10158                           ; Regs used in i1_lcd_write_data: [wreg]
 10159                           ;i1lcd_write_data@databyte stored from wreg
 10160  13E2  00F2               	movwf	(i1lcd_write_data@databyte)
 10161                           	line	31
 10162                           	
 10163  13E3                     i1l11614:	
 10164                           ;lcd.c: 31: RE2 = 0;
 10165  13E3  1283               	bcf	status, 5	;RP0=0, select bank0
 10166  13E4  1303               	bcf	status, 6	;RP1=0, select bank0
 10167  13E5  1109               	bcf	(74/8),(74)&7
 10168                           	line	32
 10169                           ;lcd.c: 32: RE1 = 0;
 10170  13E6  1089               	bcf	(73/8),(73)&7
 10171                           	line	33
 10172                           ;lcd.c: 33: RE0 = 1;
 10173  13E7  1409               	bsf	(72/8),(72)&7
 10174                           	line	34
 10175                           	
 10176  13E8                     i1l11616:	
 10177                           ;lcd.c: 34: PORTD = databyte;
 10178  13E8  0872               	movf	(i1lcd_write_data@databyte),w
 10179  13E9  0088               	movwf	(8)	;volatile
 10180                           	line	35
 10181                           	
 10182  13EA                     i1l11618:	
 10183                           ;lcd.c: 35: RE2 = 1;
 10184  13EA  1509               	bsf	(74/8),(74)&7
 10185                           	line	36
 10186                           	
 10187  13EB                     i1l11620:	
 10188                           ;lcd.c: 36: RE2 = 0;
 10189  13EB  1109               	bcf	(74/8),(74)&7
 10190                           	line	37
 10191                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
 10192                           	opt asmopt_off
 10193  13EC  3007               movlw	7
 10194  13ED  00F1               movwf	((??i1_lcd_write_data+0)+0+1),f
 10195  13EE  307D               	movlw	125
 10196  13EF  00F0               movwf	((??i1_lcd_write_data+0)+0),f
 10197  13F0                     u610_27:
 10198  13F0  0BF0               	decfsz	((??i1_lcd_write_data+0)+0),f
 10199  13F1  2BF0               	goto	u610_27
 10200  13F2  0BF1               	decfsz	((??i1_lcd_write_data+0)+0+1),f
 10201  13F3  2BF0               	goto	u610_27
 10202                           opt asmopt_on
 10203                           
 10204                           	line	38
 10205                           	
 10206  13F4                     i1l1402:	
 10207  13F4  0008               	return
 10208                           	opt stack 0
 10209                           GLOBAL	__end_ofi1_lcd_write_data
 10210  13F5                     	__end_ofi1_lcd_write_data:
 10211 ;; =============== function i1_lcd_write_data ends ============
 10212                           
 10213                           	signat	i1_lcd_write_data,88
 10214                           	global	i1_lcd_write_control
 10215                           psect	text1168,local,class=CODE,delta=2
 10216                           global __ptext1168
 10217  1408                     __ptext1168:
 10218                           
 10219 ;; *************** function i1_lcd_write_control *****************
 10220 ;; Defined at:
 10221 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  lcd_write_co    1    wreg     unsigned char 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  lcd_write_co    1    2[COMMON] unsigned char 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;		None               void
 10228 ;; Registers used:
 10229 ;;		wreg
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10235 ;;      Params:         0       0       0       0       0
 10236 ;;      Locals:         1       0       0       0       0
 10237 ;;      Temps:          2       0       0       0       0
 10238 ;;      Totals:         3       0       0       0       0
 10239 ;;Total ram usage:        3 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; This function calls:
 10242 ;;		Nothing
 10243 ;; This function is called by:
 10244 ;;		i1_lcd_set_cursor
 10245 ;;		i1_UpdateDisplay
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           psect	text1168
 10249                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10250                           	line	18
 10251                           	global	__size_ofi1_lcd_write_control
 10252  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
 10253                           	
 10254  1408                     i1_lcd_write_control:	
 10255 ;; hardware stack exceeded
 10256                           	opt	stack 0
 10257                           ; Regs used in i1_lcd_write_control: [wreg]
 10258                           ;i1lcd_write_control@databyte stored from wreg
 10259  1408  00F2               	movwf	(i1lcd_write_control@databyte)
 10260                           	line	19
 10261                           	
 10262  1409                     i1l11606:	
 10263                           ;lcd.c: 19: RE2 = 0;
 10264  1409  1283               	bcf	status, 5	;RP0=0, select bank0
 10265  140A  1303               	bcf	status, 6	;RP1=0, select bank0
 10266  140B  1109               	bcf	(74/8),(74)&7
 10267                           	line	20
 10268                           ;lcd.c: 20: RE1 = 0;
 10269  140C  1089               	bcf	(73/8),(73)&7
 10270                           	line	21
 10271                           ;lcd.c: 21: RE0 = 0;
 10272  140D  1009               	bcf	(72/8),(72)&7
 10273                           	line	22
 10274                           	
 10275  140E                     i1l11608:	
 10276                           ;lcd.c: 22: PORTD = databyte;
 10277  140E  0872               	movf	(i1lcd_write_control@databyte),w
 10278  140F  0088               	movwf	(8)	;volatile
 10279                           	line	23
 10280                           	
 10281  1410                     i1l11610:	
 10282                           ;lcd.c: 23: RE2 = 1;
 10283  1410  1509               	bsf	(74/8),(74)&7
 10284                           	line	24
 10285                           	
 10286  1411                     i1l11612:	
 10287                           ;lcd.c: 24: RE2 = 0;
 10288  1411  1109               	bcf	(74/8),(74)&7
 10289                           	line	25
 10290                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
 10291                           	opt asmopt_off
 10292  1412  300D               movlw	13
 10293  1413  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
 10294  1414  30FB               	movlw	251
 10295  1415  00F0               movwf	((??i1_lcd_write_control+0)+0),f
 10296  1416                     u611_27:
 10297  1416  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
 10298  1417  2C16               	goto	u611_27
 10299  1418  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
 10300  1419  2C16               	goto	u611_27
 10301  141A  2C1B               	nop2
 10302                           opt asmopt_on
 10303                           
 10304                           	line	26
 10305                           	
 10306  141B                     i1l1399:	
 10307  141B  0008               	return
 10308                           	opt stack 0
 10309                           GLOBAL	__end_ofi1_lcd_write_control
 10310  141C                     	__end_ofi1_lcd_write_control:
 10311 ;; =============== function i1_lcd_write_control ends ============
 10312                           
 10313                           	signat	i1_lcd_write_control,88
 10314                           	global	i1_adc_read_channel
 10315                           psect	text1169,local,class=CODE,delta=2
 10316                           global __ptext1169
 10317  16E5                     __ptext1169:
 10318                           
 10319 ;; *************** function i1_adc_read_channel *****************
 10320 ;; Defined at:
 10321 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  adc_read_cha    1    wreg     unsigned char 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  adc_read_cha    1    7[COMMON] unsigned char 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      unsigned char 
 10328 ;; Registers used:
 10329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10335 ;;      Params:         0       0       0       0       0
 10336 ;;      Locals:         1       0       0       0       0
 10337 ;;      Temps:          1       0       0       0       0
 10338 ;;      Totals:         2       0       0       0       0
 10339 ;;Total ram usage:        2 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:    1
 10342 ;; This function calls:
 10343 ;;		i1_adc_read
 10344 ;; This function is called by:
 10345 ;;		i1_readDistance
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           psect	text1169
 10349                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10350                           	line	5
 10351                           	global	__size_ofi1_adc_read_channel
 10352  0041                     	__size_ofi1_adc_read_channel	equ	__end_ofi1_adc_read_channel-i1_adc_read_channel
 10353                           	
 10354  16E5                     i1_adc_read_channel:	
 10355 ;; hardware stack exceeded
 10356                           	opt	stack 0
 10357                           ; Regs used in i1_adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10358                           ;i1adc_read_channel@channel stored from wreg
 10359  16E5  00F7               	movwf	(i1adc_read_channel@channel)
 10360                           	line	6
 10361                           	
 10362  16E6                     i1l11580:	
 10363                           ;adc.c: 6: switch(channel)
 10364  16E6  2F09               	goto	i1l11588
 10365                           	line	8
 10366                           ;adc.c: 7: {
 10367                           ;adc.c: 8: case 0:
 10368                           	
 10369  16E7                     i1l690:	
 10370                           	line	9
 10371                           ;adc.c: 9: CHS0 = 0;
 10372  16E7  1283               	bcf	status, 5	;RP0=0, select bank0
 10373  16E8  1303               	bcf	status, 6	;RP1=0, select bank0
 10374  16E9  119F               	bcf	(251/8),(251)&7
 10375                           	line	10
 10376                           ;adc.c: 10: CHS1 = 0;
 10377  16EA  121F               	bcf	(252/8),(252)&7
 10378                           	line	11
 10379                           ;adc.c: 11: CHS2 = 0;
 10380  16EB  129F               	bcf	(253/8),(253)&7
 10381                           	line	12
 10382                           ;adc.c: 12: break;
 10383  16EC  2F1A               	goto	i1l11590
 10384                           	line	13
 10385                           ;adc.c: 13: case 1:
 10386                           	
 10387  16ED                     i1l692:	
 10388                           	line	14
 10389                           ;adc.c: 14: CHS0 = 1;
 10390  16ED  1283               	bcf	status, 5	;RP0=0, select bank0
 10391  16EE  1303               	bcf	status, 6	;RP1=0, select bank0
 10392  16EF  159F               	bsf	(251/8),(251)&7
 10393                           	line	15
 10394                           ;adc.c: 15: CHS1 = 0;
 10395  16F0  121F               	bcf	(252/8),(252)&7
 10396                           	line	16
 10397                           ;adc.c: 16: CHS2 = 0;
 10398  16F1  129F               	bcf	(253/8),(253)&7
 10399                           	line	17
 10400                           ;adc.c: 17: break;
 10401  16F2  2F1A               	goto	i1l11590
 10402                           	line	18
 10403                           ;adc.c: 18: case 2:
 10404                           	
 10405  16F3                     i1l693:	
 10406                           	line	19
 10407                           ;adc.c: 19: CHS0 = 0;
 10408  16F3  1283               	bcf	status, 5	;RP0=0, select bank0
 10409  16F4  1303               	bcf	status, 6	;RP1=0, select bank0
 10410  16F5  119F               	bcf	(251/8),(251)&7
 10411                           	line	20
 10412                           ;adc.c: 20: CHS1 = 1;
 10413  16F6  161F               	bsf	(252/8),(252)&7
 10414                           	line	21
 10415                           ;adc.c: 21: CHS2 = 0;
 10416  16F7  129F               	bcf	(253/8),(253)&7
 10417                           	line	22
 10418                           ;adc.c: 22: break;
 10419  16F8  2F1A               	goto	i1l11590
 10420                           	line	23
 10421                           ;adc.c: 23: case 3:
 10422                           	
 10423  16F9                     i1l694:	
 10424                           	line	24
 10425                           ;adc.c: 24: CHS0 = 1;
 10426  16F9  1283               	bcf	status, 5	;RP0=0, select bank0
 10427  16FA  1303               	bcf	status, 6	;RP1=0, select bank0
 10428  16FB  159F               	bsf	(251/8),(251)&7
 10429                           	line	25
 10430                           ;adc.c: 25: CHS1 = 1;
 10431  16FC  161F               	bsf	(252/8),(252)&7
 10432                           	line	26
 10433                           ;adc.c: 26: CHS2 = 0;
 10434  16FD  129F               	bcf	(253/8),(253)&7
 10435                           	line	27
 10436                           ;adc.c: 27: break;
 10437  16FE  2F1A               	goto	i1l11590
 10438                           	line	28
 10439                           ;adc.c: 28: case 4:
 10440                           	
 10441  16FF                     i1l695:	
 10442                           	line	29
 10443                           ;adc.c: 29: CHS0 = 0;
 10444  16FF  1283               	bcf	status, 5	;RP0=0, select bank0
 10445  1700  1303               	bcf	status, 6	;RP1=0, select bank0
 10446  1701  119F               	bcf	(251/8),(251)&7
 10447                           	line	30
 10448                           ;adc.c: 30: CHS1 = 0;
 10449  1702  121F               	bcf	(252/8),(252)&7
 10450                           	line	31
 10451                           ;adc.c: 31: CHS2 = 1;
 10452  1703  169F               	bsf	(253/8),(253)&7
 10453                           	line	32
 10454                           ;adc.c: 32: break;
 10455  1704  2F1A               	goto	i1l11590
 10456                           	line	35
 10457                           ;adc.c: 35: default:
 10458                           	
 10459  1705                     i1l696:	
 10460                           	line	36
 10461                           	
 10462  1705                     i1l11582:	
 10463                           ;adc.c: 36: return 0;
 10464  1705  3000               	movlw	(0)
 10465  1706  2F25               	goto	i1l697
 10466                           	
 10467  1707                     i1l11584:	
 10468  1707  2F25               	goto	i1l697
 10469                           	line	37
 10470                           	
 10471  1708                     i1l11586:	
 10472                           ;adc.c: 37: }
 10473  1708  2F1A               	goto	i1l11590
 10474                           	line	6
 10475                           	
 10476  1709                     i1l689:	
 10477                           	
 10478  1709                     i1l11588:	
 10479  1709  0877               	movf	(i1adc_read_channel@channel),w
 10480                           	; Switch size 1, requested type "space"
 10481                           ; Number of cases is 5, Range of values is 0 to 4
 10482                           ; switch strategies available:
 10483                           ; Name         Instructions Cycles
 10484                           ; simple_byte           16     9 (average)
 10485                           ; direct_byte           23     8 (fixed)
 10486                           ; jumptable            260     6 (fixed)
 10487                           ; rangetable             9     6 (fixed)
 10488                           ; spacedrange           16     9 (fixed)
 10489                           ; locatedrange           5     3 (fixed)
 10490                           ;	Chosen strategy is simple_byte
 10491                           
 10492                           	opt asmopt_off
 10493  170A  3A00               	xorlw	0^0	; case 0
 10494  170B  1903               	skipnz
 10495  170C  2EE7               	goto	i1l690
 10496  170D  3A01               	xorlw	1^0	; case 1
 10497  170E  1903               	skipnz
 10498  170F  2EED               	goto	i1l692
 10499  1710  3A03               	xorlw	2^1	; case 2
 10500  1711  1903               	skipnz
 10501  1712  2EF3               	goto	i1l693
 10502  1713  3A01               	xorlw	3^2	; case 3
 10503  1714  1903               	skipnz
 10504  1715  2EF9               	goto	i1l694
 10505  1716  3A07               	xorlw	4^3	; case 4
 10506  1717  1903               	skipnz
 10507  1718  2EFF               	goto	i1l695
 10508  1719  2F05               	goto	i1l11582
 10509                           	opt asmopt_on
 10510                           
 10511                           	line	37
 10512                           	
 10513  171A                     i1l691:	
 10514                           	line	39
 10515                           	
 10516  171A                     i1l11590:	
 10517                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10518                           	opt asmopt_off
 10519  171A  3053               movlw	83
 10520  171B  00F6               movwf	(??i1_adc_read_channel+0)+0,f
 10521  171C                     u612_27:
 10522  171C  0BF6               decfsz	(??i1_adc_read_channel+0)+0,f
 10523  171D  2F1C               	goto	u612_27
 10524                           opt asmopt_on
 10525                           
 10526                           	line	41
 10527                           	
 10528  171E                     i1l11592:	
 10529                           ;adc.c: 41: return adc_read();
 10530  171E  160A  118A  24C8   	fcall	i1_adc_read
              160A  118A         
 10531  1723  0870               	movf	(0+(?i1_adc_read)),w
 10532  1724  2F25               	goto	i1l697
 10533                           	
 10534  1725                     i1l11594:	
 10535                           	line	43
 10536                           	
 10537  1725                     i1l697:	
 10538  1725  0008               	return
 10539                           	opt stack 0
 10540                           GLOBAL	__end_ofi1_adc_read_channel
 10541  1726                     	__end_ofi1_adc_read_channel:
 10542 ;; =============== function i1_adc_read_channel ends ============
 10543                           
 10544                           	signat	i1_adc_read_channel,89
 10545                           	global	_ReadButtons
 10546                           psect	text1170,local,class=CODE,delta=2
 10547                           global __ptext1170
 10548  1640                     __ptext1170:
 10549                           
 10550 ;; *************** function _ReadButtons *****************
 10551 ;; Defined at:
 10552 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  1    wreg      unsigned char 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0, pclath, cstack
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10566 ;;      Params:         0       0       0       0       0
 10567 ;;      Locals:         0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0
 10569 ;;      Totals:         0       0       0       0       0
 10570 ;;Total ram usage:        0 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    1
 10573 ;; This function calls:
 10574 ;;		_Debounce
 10575 ;; This function is called by:
 10576 ;;		_isr1
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           psect	text1170
 10580                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10581                           	line	141
 10582                           	global	__size_of_ReadButtons
 10583  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 10584                           	
 10585  1640                     _ReadButtons:	
 10586                           	opt	stack 0
 10587                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 10588                           	line	142
 10589                           	
 10590  1640                     i1l11196:	
 10591                           ;HMI.c: 142: Debounce();
 10592  1640  120A  158A  23AA   	fcall	_Debounce
              160A  118A         
 10593                           	line	144
 10594                           	
 10595  1645                     i1l11198:	
 10596                           ;HMI.c: 144: if(UpPressed)
 10597  1645  1283               	bcf	status, 5	;RP0=0, select bank0
 10598  1646  1303               	bcf	status, 6	;RP1=0, select bank0
 10599  1647  1EED               	btfss	(_UpPressed/8),(_UpPressed)&7
 10600  1648  2E4A               	goto	u450_21
 10601  1649  2E4B               	goto	u450_20
 10602  164A                     u450_21:
 10603  164A  2E4F               	goto	i1l5216
 10604  164B                     u450_20:
 10605                           	line	146
 10606                           	
 10607  164B                     i1l11200:	
 10608                           ;HMI.c: 145: {
 10609                           ;HMI.c: 146: UpPressed = 0;
 10610  164B  12ED               	bcf	(_UpPressed/8),(_UpPressed)&7
 10611                           	line	147
 10612                           	
 10613  164C                     i1l11202:	
 10614                           ;HMI.c: 147: return 1;
 10615  164C  3001               	movlw	(01h)
 10616  164D  2E71               	goto	i1l5217
 10617                           	
 10618  164E                     i1l11204:	
 10619  164E  2E71               	goto	i1l5217
 10620                           	line	149
 10621                           	
 10622  164F                     i1l5216:	
 10623                           	line	151
 10624                           ;HMI.c: 149: }
 10625                           ;HMI.c: 151: if(DownPressed)
 10626  164F  1D6C               	btfss	(_DownPressed/8),(_DownPressed)&7
 10627  1650  2E52               	goto	u451_21
 10628  1651  2E53               	goto	u451_20
 10629  1652                     u451_21:
 10630  1652  2E57               	goto	i1l5218
 10631  1653                     u451_20:
 10632                           	line	153
 10633                           	
 10634  1653                     i1l11206:	
 10635                           ;HMI.c: 152: {
 10636                           ;HMI.c: 153: DownPressed = 0;
 10637  1653  116C               	bcf	(_DownPressed/8),(_DownPressed)&7
 10638                           	line	154
 10639                           	
 10640  1654                     i1l11208:	
 10641                           ;HMI.c: 154: return 2;
 10642  1654  3002               	movlw	(02h)
 10643  1655  2E71               	goto	i1l5217
 10644                           	
 10645  1656                     i1l11210:	
 10646  1656  2E71               	goto	i1l5217
 10647                           	line	156
 10648                           	
 10649  1657                     i1l5218:	
 10650                           	line	157
 10651                           ;HMI.c: 156: }
 10652                           ;HMI.c: 157: if(LeftPressed)
 10653  1657  1E6C               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 10654  1658  2E5A               	goto	u452_21
 10655  1659  2E5B               	goto	u452_20
 10656  165A                     u452_21:
 10657  165A  2E5F               	goto	i1l5219
 10658  165B                     u452_20:
 10659                           	line	159
 10660                           	
 10661  165B                     i1l11212:	
 10662                           ;HMI.c: 158: {
 10663                           ;HMI.c: 159: LeftPressed = 0;
 10664  165B  126C               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 10665                           	line	160
 10666                           	
 10667  165C                     i1l11214:	
 10668                           ;HMI.c: 160: return 3;
 10669  165C  3003               	movlw	(03h)
 10670  165D  2E71               	goto	i1l5217
 10671                           	
 10672  165E                     i1l11216:	
 10673  165E  2E71               	goto	i1l5217
 10674                           	line	162
 10675                           	
 10676  165F                     i1l5219:	
 10677                           	line	163
 10678                           ;HMI.c: 162: }
 10679                           ;HMI.c: 163: if(RightPressed)
 10680  165F  1DED               	btfss	(_RightPressed/8),(_RightPressed)&7
 10681  1660  2E62               	goto	u453_21
 10682  1661  2E63               	goto	u453_20
 10683  1662                     u453_21:
 10684  1662  2E67               	goto	i1l5220
 10685  1663                     u453_20:
 10686                           	line	165
 10687                           	
 10688  1663                     i1l11218:	
 10689                           ;HMI.c: 164: {
 10690                           ;HMI.c: 165: RightPressed = 0;
 10691  1663  11ED               	bcf	(_RightPressed/8),(_RightPressed)&7
 10692                           	line	166
 10693                           	
 10694  1664                     i1l11220:	
 10695                           ;HMI.c: 166: return 4;
 10696  1664  3004               	movlw	(04h)
 10697  1665  2E71               	goto	i1l5217
 10698                           	
 10699  1666                     i1l11222:	
 10700  1666  2E71               	goto	i1l5217
 10701                           	line	168
 10702                           	
 10703  1667                     i1l5220:	
 10704                           	line	170
 10705                           ;HMI.c: 168: }
 10706                           ;HMI.c: 170: if(CenterPressed)
 10707  1667  1C6C               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 10708  1668  2E6A               	goto	u454_21
 10709  1669  2E6B               	goto	u454_20
 10710  166A                     u454_21:
 10711  166A  2E6F               	goto	i1l11230
 10712  166B                     u454_20:
 10713                           	line	172
 10714                           	
 10715  166B                     i1l11224:	
 10716                           ;HMI.c: 171: {
 10717                           ;HMI.c: 172: CenterPressed = 0;
 10718  166B  106C               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 10719                           	line	173
 10720                           	
 10721  166C                     i1l11226:	
 10722                           ;HMI.c: 173: return 5;
 10723  166C  3005               	movlw	(05h)
 10724  166D  2E71               	goto	i1l5217
 10725                           	
 10726  166E                     i1l11228:	
 10727  166E  2E71               	goto	i1l5217
 10728                           	line	175
 10729                           	
 10730  166F                     i1l5221:	
 10731                           	line	176
 10732                           	
 10733  166F                     i1l11230:	
 10734                           ;HMI.c: 175: }
 10735                           ;HMI.c: 176: return 0;
 10736  166F  3000               	movlw	(0)
 10737  1670  2E71               	goto	i1l5217
 10738                           	
 10739  1671                     i1l11232:	
 10740                           	line	177
 10741                           	
 10742  1671                     i1l5217:	
 10743  1671  0008               	return
 10744                           	opt stack 0
 10745                           GLOBAL	__end_of_ReadButtons
 10746  1672                     	__end_of_ReadButtons:
 10747 ;; =============== function _ReadButtons ends ============
 10748                           
 10749                           	signat	_ReadButtons,89
 10750                           	global	i1___awmod
 10751                           psect	text1171,local,class=CODE,delta=2
 10752                           global __ptext1171
 10753  0A67                     __ptext1171:
 10754                           
 10755 ;; *************** function i1___awmod *****************
 10756 ;; Defined at:
 10757 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  __awmod         2    0[COMMON] int 
 10760 ;;  __awmod         2    2[COMMON] int 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;  __awmod         1    6[COMMON] unsigned char 
 10763 ;;  __awmod         1    5[COMMON] unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  2    0[COMMON] int 
 10766 ;; Registers used:
 10767 ;;		wreg, status,2, status,0
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10773 ;;      Params:         4       0       0       0       0
 10774 ;;      Locals:         2       0       0       0       0
 10775 ;;      Temps:          1       0       0       0       0
 10776 ;;      Totals:         7       0       0       0       0
 10777 ;;Total ram usage:        7 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; This function calls:
 10780 ;;		Nothing
 10781 ;; This function is called by:
 10782 ;;		i1_UpdateDisplay
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           psect	text1171
 10786                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10787                           	line	5
 10788                           	global	__size_ofi1___awmod
 10789  0066                     	__size_ofi1___awmod	equ	__end_ofi1___awmod-i1___awmod
 10790                           	
 10791  0A67                     i1___awmod:	
 10792                           	opt	stack 0
 10793                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 10794                           	line	8
 10795                           	
 10796  0A67                     i1l11854:	
 10797  0A67  01F6               	clrf	(i1___awmod@sign)
 10798                           	line	9
 10799  0A68  1FF3               	btfss	(i1___awmod@dividend+1),7
 10800  0A69  2A6B               	goto	u560_21
 10801  0A6A  2A6C               	goto	u560_20
 10802  0A6B                     u560_21:
 10803  0A6B  2A75               	goto	i1l11858
 10804  0A6C                     u560_20:
 10805                           	line	10
 10806                           	
 10807  0A6C                     i1l11856:	
 10808  0A6C  09F2               	comf	(i1___awmod@dividend),f
 10809  0A6D  09F3               	comf	(i1___awmod@dividend+1),f
 10810  0A6E  0AF2               	incf	(i1___awmod@dividend),f
 10811  0A6F  1903               	skipnz
 10812  0A70  0AF3               	incf	(i1___awmod@dividend+1),f
 10813                           	line	11
 10814  0A71  01F6               	clrf	(i1___awmod@sign)
 10815  0A72  1403               	bsf	status,0
 10816  0A73  0DF6               	rlf	(i1___awmod@sign),f
 10817  0A74  2A75               	goto	i1l11858
 10818                           	line	12
 10819                           	
 10820  0A75                     i1l7620:	
 10821                           	line	13
 10822                           	
 10823  0A75                     i1l11858:	
 10824  0A75  1FF1               	btfss	(i1___awmod@divisor+1),7
 10825  0A76  2A78               	goto	u561_21
 10826  0A77  2A79               	goto	u561_20
 10827  0A78                     u561_21:
 10828  0A78  2A7F               	goto	i1l11862
 10829  0A79                     u561_20:
 10830                           	line	14
 10831                           	
 10832  0A79                     i1l11860:	
 10833  0A79  09F0               	comf	(i1___awmod@divisor),f
 10834  0A7A  09F1               	comf	(i1___awmod@divisor+1),f
 10835  0A7B  0AF0               	incf	(i1___awmod@divisor),f
 10836  0A7C  1903               	skipnz
 10837  0A7D  0AF1               	incf	(i1___awmod@divisor+1),f
 10838  0A7E  2A7F               	goto	i1l11862
 10839                           	
 10840  0A7F                     i1l7621:	
 10841                           	line	15
 10842                           	
 10843  0A7F                     i1l11862:	
 10844  0A7F  0871               	movf	(i1___awmod@divisor+1),w
 10845  0A80  0470               	iorwf	(i1___awmod@divisor),w
 10846  0A81  1903               	skipnz
 10847  0A82  2A84               	goto	u562_21
 10848  0A83  2A85               	goto	u562_20
 10849  0A84                     u562_21:
 10850  0A84  2ABB               	goto	i1l11880
 10851  0A85                     u562_20:
 10852                           	line	16
 10853                           	
 10854  0A85                     i1l11864:	
 10855  0A85  01F5               	clrf	(i1___awmod@counter)
 10856  0A86  1403               	bsf	status,0
 10857  0A87  0DF5               	rlf	(i1___awmod@counter),f
 10858                           	line	17
 10859  0A88  2A95               	goto	i1l11870
 10860                           	
 10861  0A89                     i1l7624:	
 10862                           	line	18
 10863                           	
 10864  0A89                     i1l11866:	
 10865  0A89  3001               	movlw	01h
 10866                           	
 10867  0A8A                     u563_25:
 10868  0A8A  1003               	clrc
 10869  0A8B  0DF0               	rlf	(i1___awmod@divisor),f
 10870  0A8C  0DF1               	rlf	(i1___awmod@divisor+1),f
 10871  0A8D  3EFF               	addlw	-1
 10872  0A8E  1D03               	skipz
 10873  0A8F  2A8A               	goto	u563_25
 10874                           	line	19
 10875                           	
 10876  0A90                     i1l11868:	
 10877  0A90  3001               	movlw	(01h)
 10878  0A91  00F4               	movwf	(??i1___awmod+0)+0
 10879  0A92  0874               	movf	(??i1___awmod+0)+0,w
 10880  0A93  07F5               	addwf	(i1___awmod@counter),f
 10881  0A94  2A95               	goto	i1l11870
 10882                           	line	20
 10883                           	
 10884  0A95                     i1l7623:	
 10885                           	line	17
 10886                           	
 10887  0A95                     i1l11870:	
 10888  0A95  1FF1               	btfss	(i1___awmod@divisor+1),(15)&7
 10889  0A96  2A98               	goto	u564_21
 10890  0A97  2A99               	goto	u564_20
 10891  0A98                     u564_21:
 10892  0A98  2A89               	goto	i1l11866
 10893  0A99                     u564_20:
 10894  0A99  2A9B               	goto	i1l11872
 10895                           	
 10896  0A9A                     i1l7625:	
 10897  0A9A  2A9B               	goto	i1l11872
 10898                           	line	21
 10899                           	
 10900  0A9B                     i1l7626:	
 10901                           	line	22
 10902                           	
 10903  0A9B                     i1l11872:	
 10904  0A9B  0871               	movf	(i1___awmod@divisor+1),w
 10905  0A9C  0273               	subwf	(i1___awmod@dividend+1),w
 10906  0A9D  1D03               	skipz
 10907  0A9E  2AA1               	goto	u565_25
 10908  0A9F  0870               	movf	(i1___awmod@divisor),w
 10909  0AA0  0272               	subwf	(i1___awmod@dividend),w
 10910  0AA1                     u565_25:
 10911  0AA1  1C03               	skipc
 10912  0AA2  2AA4               	goto	u565_21
 10913  0AA3  2AA5               	goto	u565_20
 10914  0AA4                     u565_21:
 10915  0AA4  2AAC               	goto	i1l11876
 10916  0AA5                     u565_20:
 10917                           	line	23
 10918                           	
 10919  0AA5                     i1l11874:	
 10920  0AA5  0870               	movf	(i1___awmod@divisor),w
 10921  0AA6  02F2               	subwf	(i1___awmod@dividend),f
 10922  0AA7  0871               	movf	(i1___awmod@divisor+1),w
 10923  0AA8  1C03               	skipc
 10924  0AA9  03F3               	decf	(i1___awmod@dividend+1),f
 10925  0AAA  02F3               	subwf	(i1___awmod@dividend+1),f
 10926  0AAB  2AAC               	goto	i1l11876
 10927                           	
 10928  0AAC                     i1l7627:	
 10929                           	line	24
 10930                           	
 10931  0AAC                     i1l11876:	
 10932  0AAC  3001               	movlw	01h
 10933                           	
 10934  0AAD                     u566_25:
 10935  0AAD  1003               	clrc
 10936  0AAE  0CF1               	rrf	(i1___awmod@divisor+1),f
 10937  0AAF  0CF0               	rrf	(i1___awmod@divisor),f
 10938  0AB0  3EFF               	addlw	-1
 10939  0AB1  1D03               	skipz
 10940  0AB2  2AAD               	goto	u566_25
 10941                           	line	25
 10942                           	
 10943  0AB3                     i1l11878:	
 10944  0AB3  3001               	movlw	low(01h)
 10945  0AB4  02F5               	subwf	(i1___awmod@counter),f
 10946  0AB5  1D03               	btfss	status,2
 10947  0AB6  2AB8               	goto	u567_21
 10948  0AB7  2AB9               	goto	u567_20
 10949  0AB8                     u567_21:
 10950  0AB8  2A9B               	goto	i1l11872
 10951  0AB9                     u567_20:
 10952  0AB9  2ABB               	goto	i1l11880
 10953                           	
 10954  0ABA                     i1l7628:	
 10955  0ABA  2ABB               	goto	i1l11880
 10956                           	line	26
 10957                           	
 10958  0ABB                     i1l7622:	
 10959                           	line	27
 10960                           	
 10961  0ABB                     i1l11880:	
 10962  0ABB  0876               	movf	(i1___awmod@sign),w
 10963  0ABC  1D03               	skipz
 10964  0ABD  2ABF               	goto	u568_20
 10965  0ABE  2AC5               	goto	i1l11884
 10966  0ABF                     u568_20:
 10967                           	line	28
 10968                           	
 10969  0ABF                     i1l11882:	
 10970  0ABF  09F2               	comf	(i1___awmod@dividend),f
 10971  0AC0  09F3               	comf	(i1___awmod@dividend+1),f
 10972  0AC1  0AF2               	incf	(i1___awmod@dividend),f
 10973  0AC2  1903               	skipnz
 10974  0AC3  0AF3               	incf	(i1___awmod@dividend+1),f
 10975  0AC4  2AC5               	goto	i1l11884
 10976                           	
 10977  0AC5                     i1l7629:	
 10978                           	line	29
 10979                           	
 10980  0AC5                     i1l11884:	
 10981  0AC5  0873               	movf	(i1___awmod@dividend+1),w
 10982  0AC6  01F1               	clrf	(?i1___awmod+1)
 10983  0AC7  07F1               	addwf	(?i1___awmod+1)
 10984  0AC8  0872               	movf	(i1___awmod@dividend),w
 10985  0AC9  01F0               	clrf	(?i1___awmod)
 10986  0ACA  07F0               	addwf	(?i1___awmod)
 10987                           
 10988  0ACB  2ACC               	goto	i1l7630
 10989                           	
 10990  0ACC                     i1l11886:	
 10991                           	line	30
 10992                           	
 10993  0ACC                     i1l7630:	
 10994  0ACC  0008               	return
 10995                           	opt stack 0
 10996                           GLOBAL	__end_ofi1___awmod
 10997  0ACD                     	__end_ofi1___awmod:
 10998 ;; =============== function i1___awmod ends ============
 10999                           
 11000                           	signat	i1___awmod,90
 11001                           	global	i1___lwmod
 11002                           psect	text1172,local,class=CODE,delta=2
 11003                           global __ptext1172
 11004  1726                     __ptext1172:
 11005                           
 11006 ;; *************** function i1___lwmod *****************
 11007 ;; Defined at:
 11008 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;  __lwmod         2    0[BANK0 ] unsigned int 
 11011 ;;  __lwmod         2    2[BANK0 ] unsigned int 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;  __lwmod         1    5[BANK0 ] unsigned char 
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  2    0[BANK0 ] unsigned int 
 11016 ;; Registers used:
 11017 ;;		wreg, status,2, status,0
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11023 ;;      Params:         0       4       0       0       0
 11024 ;;      Locals:         0       1       0       0       0
 11025 ;;      Temps:          0       1       0       0       0
 11026 ;;      Totals:         0       6       0       0       0
 11027 ;;Total ram usage:        6 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_isr1
 11033 ;;		i1_sprintf
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           psect	text1172
 11037                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11038                           	line	5
 11039                           	global	__size_ofi1___lwmod
 11040  0046                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11041                           	
 11042  1726                     i1___lwmod:	
 11043 ;; hardware stack exceeded
 11044                           	opt	stack 0
 11045                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11046                           	line	8
 11047                           	
 11048  1726                     i1l11832:	
 11049  1726  1283               	bcf	status, 5	;RP0=0, select bank0
 11050  1727  1303               	bcf	status, 6	;RP1=0, select bank0
 11051  1728  0821               	movf	(i1___lwmod@divisor+1),w
 11052  1729  0420               	iorwf	(i1___lwmod@divisor),w
 11053  172A  1903               	skipnz
 11054  172B  2F2D               	goto	u554_21
 11055  172C  2F2E               	goto	u554_20
 11056  172D                     u554_21:
 11057  172D  2F64               	goto	i1l11850
 11058  172E                     u554_20:
 11059                           	line	9
 11060                           	
 11061  172E                     i1l11834:	
 11062  172E  01A5               	clrf	(i1___lwmod@counter)
 11063  172F  1403               	bsf	status,0
 11064  1730  0DA5               	rlf	(i1___lwmod@counter),f
 11065                           	line	10
 11066  1731  2F3E               	goto	i1l11840
 11067                           	
 11068  1732                     i1l7430:	
 11069                           	line	11
 11070                           	
 11071  1732                     i1l11836:	
 11072  1732  3001               	movlw	01h
 11073                           	
 11074  1733                     u555_25:
 11075  1733  1003               	clrc
 11076  1734  0DA0               	rlf	(i1___lwmod@divisor),f
 11077  1735  0DA1               	rlf	(i1___lwmod@divisor+1),f
 11078  1736  3EFF               	addlw	-1
 11079  1737  1D03               	skipz
 11080  1738  2F33               	goto	u555_25
 11081                           	line	12
 11082                           	
 11083  1739                     i1l11838:	
 11084  1739  3001               	movlw	(01h)
 11085  173A  00A4               	movwf	(??i1___lwmod+0)+0
 11086  173B  0824               	movf	(??i1___lwmod+0)+0,w
 11087  173C  07A5               	addwf	(i1___lwmod@counter),f
 11088  173D  2F3E               	goto	i1l11840
 11089                           	line	13
 11090                           	
 11091  173E                     i1l7429:	
 11092                           	line	10
 11093                           	
 11094  173E                     i1l11840:	
 11095  173E  1FA1               	btfss	(i1___lwmod@divisor+1),(15)&7
 11096  173F  2F41               	goto	u556_21
 11097  1740  2F42               	goto	u556_20
 11098  1741                     u556_21:
 11099  1741  2F32               	goto	i1l11836
 11100  1742                     u556_20:
 11101  1742  2F44               	goto	i1l11842
 11102                           	
 11103  1743                     i1l7431:	
 11104  1743  2F44               	goto	i1l11842
 11105                           	line	14
 11106                           	
 11107  1744                     i1l7432:	
 11108                           	line	15
 11109                           	
 11110  1744                     i1l11842:	
 11111  1744  0821               	movf	(i1___lwmod@divisor+1),w
 11112  1745  0223               	subwf	(i1___lwmod@dividend+1),w
 11113  1746  1D03               	skipz
 11114  1747  2F4A               	goto	u557_25
 11115  1748  0820               	movf	(i1___lwmod@divisor),w
 11116  1749  0222               	subwf	(i1___lwmod@dividend),w
 11117  174A                     u557_25:
 11118  174A  1C03               	skipc
 11119  174B  2F4D               	goto	u557_21
 11120  174C  2F4E               	goto	u557_20
 11121  174D                     u557_21:
 11122  174D  2F55               	goto	i1l11846
 11123  174E                     u557_20:
 11124                           	line	16
 11125                           	
 11126  174E                     i1l11844:	
 11127  174E  0820               	movf	(i1___lwmod@divisor),w
 11128  174F  02A2               	subwf	(i1___lwmod@dividend),f
 11129  1750  0821               	movf	(i1___lwmod@divisor+1),w
 11130  1751  1C03               	skipc
 11131  1752  03A3               	decf	(i1___lwmod@dividend+1),f
 11132  1753  02A3               	subwf	(i1___lwmod@dividend+1),f
 11133  1754  2F55               	goto	i1l11846
 11134                           	
 11135  1755                     i1l7433:	
 11136                           	line	17
 11137                           	
 11138  1755                     i1l11846:	
 11139  1755  3001               	movlw	01h
 11140                           	
 11141  1756                     u558_25:
 11142  1756  1003               	clrc
 11143  1757  0CA1               	rrf	(i1___lwmod@divisor+1),f
 11144  1758  0CA0               	rrf	(i1___lwmod@divisor),f
 11145  1759  3EFF               	addlw	-1
 11146  175A  1D03               	skipz
 11147  175B  2F56               	goto	u558_25
 11148                           	line	18
 11149                           	
 11150  175C                     i1l11848:	
 11151  175C  3001               	movlw	low(01h)
 11152  175D  02A5               	subwf	(i1___lwmod@counter),f
 11153  175E  1D03               	btfss	status,2
 11154  175F  2F61               	goto	u559_21
 11155  1760  2F62               	goto	u559_20
 11156  1761                     u559_21:
 11157  1761  2F44               	goto	i1l11842
 11158  1762                     u559_20:
 11159  1762  2F64               	goto	i1l11850
 11160                           	
 11161  1763                     i1l7434:	
 11162  1763  2F64               	goto	i1l11850
 11163                           	line	19
 11164                           	
 11165  1764                     i1l7428:	
 11166                           	line	20
 11167                           	
 11168  1764                     i1l11850:	
 11169  1764  0823               	movf	(i1___lwmod@dividend+1),w
 11170  1765  01A1               	clrf	(?i1___lwmod+1)
 11171  1766  07A1               	addwf	(?i1___lwmod+1)
 11172  1767  0822               	movf	(i1___lwmod@dividend),w
 11173  1768  01A0               	clrf	(?i1___lwmod)
 11174  1769  07A0               	addwf	(?i1___lwmod)
 11175                           
 11176  176A  2F6B               	goto	i1l7435
 11177                           	
 11178  176B                     i1l11852:	
 11179                           	line	21
 11180                           	
 11181  176B                     i1l7435:	
 11182  176B  0008               	return
 11183                           	opt stack 0
 11184                           GLOBAL	__end_ofi1___lwmod
 11185  176C                     	__end_ofi1___lwmod:
 11186 ;; =============== function i1___lwmod ends ============
 11187                           
 11188                           	signat	i1___lwmod,90
 11189                           	global	i1___lwdiv
 11190                           psect	text1173,local,class=CODE,delta=2
 11191                           global __ptext1173
 11192  17B2                     __ptext1173:
 11193                           
 11194 ;; *************** function i1___lwdiv *****************
 11195 ;; Defined at:
 11196 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;  __lwdiv         2    6[COMMON] unsigned int 
 11199 ;;  __lwdiv         2    8[COMMON] unsigned int 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  __lwdiv         2   12[COMMON] unsigned int 
 11202 ;;  __lwdiv         1   11[COMMON] unsigned char 
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  2    6[COMMON] unsigned int 
 11205 ;; Registers used:
 11206 ;;		wreg, status,2, status,0
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11212 ;;      Params:         4       0       0       0       0
 11213 ;;      Locals:         3       0       0       0       0
 11214 ;;      Temps:          1       0       0       0       0
 11215 ;;      Totals:         8       0       0       0       0
 11216 ;;Total ram usage:        8 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; This function calls:
 11219 ;;		Nothing
 11220 ;; This function is called by:
 11221 ;;		i1_readAvgDistance
 11222 ;;		i1_ADCconvert
 11223 ;;		i1_sprintf
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           psect	text1173
 11227                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11228                           	line	5
 11229                           	global	__size_ofi1___lwdiv
 11230  004E                     	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
 11231                           	
 11232  17B2                     i1___lwdiv:	
 11233 ;; hardware stack exceeded
 11234                           	opt	stack 0
 11235                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 11236                           	line	9
 11237                           	
 11238  17B2                     i1l11806:	
 11239  17B2  01FC               	clrf	(i1___lwdiv@quotient)
 11240  17B3  01FD               	clrf	(i1___lwdiv@quotient+1)
 11241                           	line	10
 11242                           	
 11243  17B4                     i1l11808:	
 11244  17B4  0877               	movf	(i1___lwdiv@divisor+1),w
 11245  17B5  0476               	iorwf	(i1___lwdiv@divisor),w
 11246  17B6  1903               	skipnz
 11247  17B7  2FB9               	goto	u547_21
 11248  17B8  2FBA               	goto	u547_20
 11249  17B9                     u547_21:
 11250  17B9  2FF8               	goto	i1l11828
 11251  17BA                     u547_20:
 11252                           	line	11
 11253                           	
 11254  17BA                     i1l11810:	
 11255  17BA  01FB               	clrf	(i1___lwdiv@counter)
 11256  17BB  1403               	bsf	status,0
 11257  17BC  0DFB               	rlf	(i1___lwdiv@counter),f
 11258                           	line	12
 11259  17BD  2FCA               	goto	i1l11816
 11260                           	
 11261  17BE                     i1l7420:	
 11262                           	line	13
 11263                           	
 11264  17BE                     i1l11812:	
 11265  17BE  3001               	movlw	01h
 11266                           	
 11267  17BF                     u548_25:
 11268  17BF  1003               	clrc
 11269  17C0  0DF6               	rlf	(i1___lwdiv@divisor),f
 11270  17C1  0DF7               	rlf	(i1___lwdiv@divisor+1),f
 11271  17C2  3EFF               	addlw	-1
 11272  17C3  1D03               	skipz
 11273  17C4  2FBF               	goto	u548_25
 11274                           	line	14
 11275                           	
 11276  17C5                     i1l11814:	
 11277  17C5  3001               	movlw	(01h)
 11278  17C6  00FA               	movwf	(??i1___lwdiv+0)+0
 11279  17C7  087A               	movf	(??i1___lwdiv+0)+0,w
 11280  17C8  07FB               	addwf	(i1___lwdiv@counter),f
 11281  17C9  2FCA               	goto	i1l11816
 11282                           	line	15
 11283                           	
 11284  17CA                     i1l7419:	
 11285                           	line	12
 11286                           	
 11287  17CA                     i1l11816:	
 11288  17CA  1FF7               	btfss	(i1___lwdiv@divisor+1),(15)&7
 11289  17CB  2FCD               	goto	u549_21
 11290  17CC  2FCE               	goto	u549_20
 11291  17CD                     u549_21:
 11292  17CD  2FBE               	goto	i1l11812
 11293  17CE                     u549_20:
 11294  17CE  2FD0               	goto	i1l11818
 11295                           	
 11296  17CF                     i1l7421:	
 11297  17CF  2FD0               	goto	i1l11818
 11298                           	line	16
 11299                           	
 11300  17D0                     i1l7422:	
 11301                           	line	17
 11302                           	
 11303  17D0                     i1l11818:	
 11304  17D0  3001               	movlw	01h
 11305                           	
 11306  17D1                     u550_25:
 11307  17D1  1003               	clrc
 11308  17D2  0DFC               	rlf	(i1___lwdiv@quotient),f
 11309  17D3  0DFD               	rlf	(i1___lwdiv@quotient+1),f
 11310  17D4  3EFF               	addlw	-1
 11311  17D5  1D03               	skipz
 11312  17D6  2FD1               	goto	u550_25
 11313                           	line	18
 11314  17D7  0877               	movf	(i1___lwdiv@divisor+1),w
 11315  17D8  0279               	subwf	(i1___lwdiv@dividend+1),w
 11316  17D9  1D03               	skipz
 11317  17DA  2FDD               	goto	u551_25
 11318  17DB  0876               	movf	(i1___lwdiv@divisor),w
 11319  17DC  0278               	subwf	(i1___lwdiv@dividend),w
 11320  17DD                     u551_25:
 11321  17DD  1C03               	skipc
 11322  17DE  2FE0               	goto	u551_21
 11323  17DF  2FE1               	goto	u551_20
 11324  17E0                     u551_21:
 11325  17E0  2FE9               	goto	i1l11824
 11326  17E1                     u551_20:
 11327                           	line	19
 11328                           	
 11329  17E1                     i1l11820:	
 11330  17E1  0876               	movf	(i1___lwdiv@divisor),w
 11331  17E2  02F8               	subwf	(i1___lwdiv@dividend),f
 11332  17E3  0877               	movf	(i1___lwdiv@divisor+1),w
 11333  17E4  1C03               	skipc
 11334  17E5  03F9               	decf	(i1___lwdiv@dividend+1),f
 11335  17E6  02F9               	subwf	(i1___lwdiv@dividend+1),f
 11336                           	line	20
 11337                           	
 11338  17E7                     i1l11822:	
 11339  17E7  147C               	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
 11340  17E8  2FE9               	goto	i1l11824
 11341                           	line	21
 11342                           	
 11343  17E9                     i1l7423:	
 11344                           	line	22
 11345                           	
 11346  17E9                     i1l11824:	
 11347  17E9  3001               	movlw	01h
 11348                           	
 11349  17EA                     u552_25:
 11350  17EA  1003               	clrc
 11351  17EB  0CF7               	rrf	(i1___lwdiv@divisor+1),f
 11352  17EC  0CF6               	rrf	(i1___lwdiv@divisor),f
 11353  17ED  3EFF               	addlw	-1
 11354  17EE  1D03               	skipz
 11355  17EF  2FEA               	goto	u552_25
 11356                           	line	23
 11357                           	
 11358  17F0                     i1l11826:	
 11359  17F0  3001               	movlw	low(01h)
 11360  17F1  02FB               	subwf	(i1___lwdiv@counter),f
 11361  17F2  1D03               	btfss	status,2
 11362  17F3  2FF5               	goto	u553_21
 11363  17F4  2FF6               	goto	u553_20
 11364  17F5                     u553_21:
 11365  17F5  2FD0               	goto	i1l11818
 11366  17F6                     u553_20:
 11367  17F6  2FF8               	goto	i1l11828
 11368                           	
 11369  17F7                     i1l7424:	
 11370  17F7  2FF8               	goto	i1l11828
 11371                           	line	24
 11372                           	
 11373  17F8                     i1l7418:	
 11374                           	line	25
 11375                           	
 11376  17F8                     i1l11828:	
 11377  17F8  087D               	movf	(i1___lwdiv@quotient+1),w
 11378  17F9  01F7               	clrf	(?i1___lwdiv+1)
 11379  17FA  07F7               	addwf	(?i1___lwdiv+1)
 11380  17FB  087C               	movf	(i1___lwdiv@quotient),w
 11381  17FC  01F6               	clrf	(?i1___lwdiv)
 11382  17FD  07F6               	addwf	(?i1___lwdiv)
 11383                           
 11384  17FE  2FFF               	goto	i1l7425
 11385                           	
 11386  17FF                     i1l11830:	
 11387                           	line	26
 11388                           	
 11389  17FF                     i1l7425:	
 11390  17FF  0008               	return
 11391                           	opt stack 0
 11392                           GLOBAL	__end_ofi1___lwdiv
 11393  1800                     	__end_ofi1___lwdiv:
 11394 ;; =============== function i1___lwdiv ends ============
 11395                           
 11396                           	signat	i1___lwdiv,90
 11397                           	global	i1___wmul
 11398                           psect	text1174,local,class=CODE,delta=2
 11399                           global __ptext1174
 11400  1567                     __ptext1174:
 11401                           
 11402 ;; *************** function i1___wmul *****************
 11403 ;; Defined at:
 11404 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  __wmul          2    0[COMMON] unsigned int 
 11407 ;;  __wmul          2    2[COMMON] unsigned int 
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  __wmul          2    4[COMMON] unsigned int 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  2    0[COMMON] unsigned int 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2, status,0
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11419 ;;      Params:         4       0       0       0       0
 11420 ;;      Locals:         2       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0
 11422 ;;      Totals:         6       0       0       0       0
 11423 ;;Total ram usage:        6 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; This function calls:
 11426 ;;		Nothing
 11427 ;; This function is called by:
 11428 ;;		i1_ADCconvert
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           psect	text1174
 11432                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11433                           	line	3
 11434                           	global	__size_ofi1___wmul
 11435  002A                     	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
 11436                           	
 11437  1567                     i1___wmul:	
 11438 ;; hardware stack exceeded
 11439                           	opt	stack 0
 11440                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 11441                           	line	4
 11442                           	
 11443  1567                     i1l11794:	
 11444  1567  01F4               	clrf	(i1___wmul@product)
 11445  1568  01F5               	clrf	(i1___wmul@product+1)
 11446  1569  2D6A               	goto	i1l11796
 11447                           	line	6
 11448                           	
 11449  156A                     i1l7412:	
 11450                           	line	7
 11451                           	
 11452  156A                     i1l11796:	
 11453  156A  1C70               	btfss	(i1___wmul@multiplier),(0)&7
 11454  156B  2D6D               	goto	u543_21
 11455  156C  2D6E               	goto	u543_20
 11456  156D                     u543_21:
 11457  156D  2D74               	goto	i1l7413
 11458  156E                     u543_20:
 11459                           	line	8
 11460                           	
 11461  156E                     i1l11798:	
 11462  156E  0872               	movf	(i1___wmul@multiplicand),w
 11463  156F  07F4               	addwf	(i1___wmul@product),f
 11464  1570  1803               	skipnc
 11465  1571  0AF5               	incf	(i1___wmul@product+1),f
 11466  1572  0873               	movf	(i1___wmul@multiplicand+1),w
 11467  1573  07F5               	addwf	(i1___wmul@product+1),f
 11468                           	
 11469  1574                     i1l7413:	
 11470                           	line	9
 11471  1574  3001               	movlw	01h
 11472                           	
 11473  1575                     u544_25:
 11474  1575  1003               	clrc
 11475  1576  0DF2               	rlf	(i1___wmul@multiplicand),f
 11476  1577  0DF3               	rlf	(i1___wmul@multiplicand+1),f
 11477  1578  3EFF               	addlw	-1
 11478  1579  1D03               	skipz
 11479  157A  2D75               	goto	u544_25
 11480                           	line	10
 11481                           	
 11482  157B                     i1l11800:	
 11483  157B  3001               	movlw	01h
 11484                           	
 11485  157C                     u545_25:
 11486  157C  1003               	clrc
 11487  157D  0CF1               	rrf	(i1___wmul@multiplier+1),f
 11488  157E  0CF0               	rrf	(i1___wmul@multiplier),f
 11489  157F  3EFF               	addlw	-1
 11490  1580  1D03               	skipz
 11491  1581  2D7C               	goto	u545_25
 11492                           	line	11
 11493  1582  0871               	movf	((i1___wmul@multiplier+1)),w
 11494  1583  0470               	iorwf	((i1___wmul@multiplier)),w
 11495  1584  1D03               	skipz
 11496  1585  2D87               	goto	u546_21
 11497  1586  2D88               	goto	u546_20
 11498  1587                     u546_21:
 11499  1587  2D6A               	goto	i1l11796
 11500  1588                     u546_20:
 11501  1588  2D89               	goto	i1l11802
 11502                           	
 11503  1589                     i1l7414:	
 11504                           	line	12
 11505                           	
 11506  1589                     i1l11802:	
 11507  1589  0875               	movf	(i1___wmul@product+1),w
 11508  158A  01F1               	clrf	(?i1___wmul+1)
 11509  158B  07F1               	addwf	(?i1___wmul+1)
 11510  158C  0874               	movf	(i1___wmul@product),w
 11511  158D  01F0               	clrf	(?i1___wmul)
 11512  158E  07F0               	addwf	(?i1___wmul)
 11513                           
 11514  158F  2D90               	goto	i1l7415
 11515                           	
 11516  1590                     i1l11804:	
 11517                           	line	13
 11518                           	
 11519  1590                     i1l7415:	
 11520  1590  0008               	return
 11521                           	opt stack 0
 11522                           GLOBAL	__end_ofi1___wmul
 11523  1591                     	__end_ofi1___wmul:
 11524 ;; =============== function i1___wmul ends ============
 11525                           
 11526                           	signat	i1___wmul,90
 11527                           	global	i1_adc_read
 11528                           psect	text1175,local,class=CODE,delta=2
 11529                           global __ptext1175
 11530  14C8                     __ptext1175:
 11531                           
 11532 ;; *************** function i1_adc_read *****************
 11533 ;; Defined at:
 11534 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  adc_read        2    4[COMMON] volatile unsigned int 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  2    0[COMMON] unsigned int 
 11541 ;; Registers used:
 11542 ;;		wreg, status,2, status,0
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11548 ;;      Params:         2       0       0       0       0
 11549 ;;      Locals:         2       0       0       0       0
 11550 ;;      Temps:          2       0       0       0       0
 11551 ;;      Totals:         6       0       0       0       0
 11552 ;;Total ram usage:        6 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; This function calls:
 11555 ;;		Nothing
 11556 ;; This function is called by:
 11557 ;;		i1_adc_read_channel
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           psect	text1175
 11561                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 11562                           	line	61
 11563                           	global	__size_ofi1_adc_read
 11564  0027                     	__size_ofi1_adc_read	equ	__end_ofi1_adc_read-i1_adc_read
 11565                           	
 11566  14C8                     i1_adc_read:	
 11567 ;; hardware stack exceeded
 11568                           	opt	stack 0
 11569                           ; Regs used in i1_adc_read: [wreg+status,2+status,0]
 11570                           	line	64
 11571                           	
 11572  14C8                     i1l11596:	
 11573                           ;adc.c: 62: volatile unsigned int adc_value;
 11574                           ;adc.c: 64: ADRESH = 0;
 11575  14C8  1283               	bcf	status, 5	;RP0=0, select bank0
 11576  14C9  1303               	bcf	status, 6	;RP1=0, select bank0
 11577  14CA  019E               	clrf	(30)	;volatile
 11578                           	line	66
 11579                           	
 11580  14CB                     i1l11598:	
 11581                           ;adc.c: 66: GO = 1;
 11582  14CB  151F               	bsf	(250/8),(250)&7
 11583                           	line	67
 11584                           ;adc.c: 67: while(GO) continue;
 11585  14CC  2CCD               	goto	i1l703
 11586                           	
 11587  14CD                     i1l704:	
 11588                           	
 11589  14CD                     i1l703:	
 11590  14CD  191F               	btfsc	(250/8),(250)&7
 11591  14CE  2CD0               	goto	u514_21
 11592  14CF  2CD1               	goto	u514_20
 11593  14D0                     u514_21:
 11594  14D0  2CCD               	goto	i1l703
 11595  14D1                     u514_20:
 11596                           	
 11597  14D1                     i1l705:	
 11598                           	line	68
 11599                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11600  14D1  0000               nop ;#
 11601                           	line	69
 11602                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11603  14D2  0000               nop ;#
 11604                           	line	70
 11605                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11606  14D3  0000               nop ;#
 11607                           psect	text1175
 11608                           	line	73
 11609                           	
 11610  14D4                     i1l11600:	
 11611                           ;adc.c: 73: adc_value = ADRESH;
 11612  14D4  1283               	bcf	status, 5	;RP0=0, select bank0
 11613  14D5  1303               	bcf	status, 6	;RP1=0, select bank0
 11614  14D6  081E               	movf	(30),w	;volatile
 11615  14D7  00F2               	movwf	(??i1_adc_read+0)+0
 11616  14D8  01F3               	clrf	(??i1_adc_read+0)+0+1
 11617  14D9  0872               	movf	0+(??i1_adc_read+0)+0,w
 11618  14DA  00F4               	movwf	(i1adc_read@adc_value)	;volatile
 11619  14DB  0873               	movf	1+(??i1_adc_read+0)+0,w
 11620  14DC  00F5               	movwf	(i1adc_read@adc_value+1)	;volatile
 11621                           	line	74
 11622                           ;adc.c: 74: adc_value <<= 1;
 11623  14DD  3001               	movlw	01h
 11624                           	
 11625  14DE                     u515_25:
 11626  14DE  1003               	clrc
 11627  14DF  0DF4               	rlf	(i1adc_read@adc_value),f	;volatile
 11628  14E0  0DF5               	rlf	(i1adc_read@adc_value+1),f	;volatile
 11629  14E1  3EFF               	addlw	-1
 11630  14E2  1D03               	skipz
 11631  14E3  2CDE               	goto	u515_25
 11632                           	line	75
 11633                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
 11634  14E4  1683               	bsf	status, 5	;RP0=1, select bank1
 11635  14E5  1303               	bcf	status, 6	;RP1=0, select bank1
 11636  14E6  081E               	movf	(158)^080h,w	;volatile
 11637                           	line	78
 11638                           	
 11639  14E7                     i1l11602:	
 11640                           ;adc.c: 78: return (adc_value);
 11641  14E7  0875               	movf	(i1adc_read@adc_value+1),w	;volatile
 11642  14E8  01F1               	clrf	(?i1_adc_read+1)
 11643  14E9  07F1               	addwf	(?i1_adc_read+1)
 11644  14EA  0874               	movf	(i1adc_read@adc_value),w	;volatile
 11645  14EB  01F0               	clrf	(?i1_adc_read)
 11646  14EC  07F0               	addwf	(?i1_adc_read)
 11647                           
 11648  14ED  2CEE               	goto	i1l706
 11649                           	
 11650  14EE                     i1l11604:	
 11651                           	line	79
 11652                           	
 11653  14EE                     i1l706:	
 11654  14EE  0008               	return
 11655                           	opt stack 0
 11656                           GLOBAL	__end_ofi1_adc_read
 11657  14EF                     	__end_ofi1_adc_read:
 11658 ;; =============== function i1_adc_read ends ============
 11659                           
 11660                           	signat	i1_adc_read,90
 11661                           	global	_Debounce
 11662                           psect	text1176,local,class=CODE,delta=2
 11663                           global __ptext1176
 11664  0BAA                     __ptext1176:
 11665                           
 11666 ;; *************** function _Debounce *****************
 11667 ;; Defined at:
 11668 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;		None
 11673 ;; Return value:  Size  Location     Type
 11674 ;;		None               void
 11675 ;; Registers used:
 11676 ;;		wreg, status,2, status,0
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11682 ;;      Params:         0       0       0       0       0
 11683 ;;      Locals:         0       0       0       0       0
 11684 ;;      Temps:          1       0       0       0       0
 11685 ;;      Totals:         1       0       0       0       0
 11686 ;;Total ram usage:        1 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; This function calls:
 11689 ;;		Nothing
 11690 ;; This function is called by:
 11691 ;;		_ReadButtons
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           psect	text1176
 11695                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11696                           	line	61
 11697                           	global	__size_of_Debounce
 11698  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11699                           	
 11700  0BAA                     _Debounce:	
 11701                           	opt	stack 0
 11702                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11703                           	line	63
 11704                           	
 11705  0BAA                     i1l11430:	
 11706                           ;HMI.c: 63: if(!RB2)
 11707  0BAA  1283               	bcf	status, 5	;RP0=0, select bank0
 11708  0BAB  1303               	bcf	status, 6	;RP1=0, select bank0
 11709  0BAC  1906               	btfsc	(50/8),(50)&7
 11710  0BAD  2BAF               	goto	u471_21
 11711  0BAE  2BB0               	goto	u471_20
 11712  0BAF                     u471_21:
 11713  0BAF  2BC2               	goto	i1l5198
 11714  0BB0                     u471_20:
 11715                           	line	65
 11716                           	
 11717  0BB0                     i1l11432:	
 11718                           ;HMI.c: 64: {
 11719                           ;HMI.c: 65: UpDebounceCount++;
 11720  0BB0  3001               	movlw	(01h)
 11721  0BB1  00F0               	movwf	(??_Debounce+0)+0
 11722  0BB2  0870               	movf	(??_Debounce+0)+0,w
 11723  0BB3  07E0               	addwf	(_UpDebounceCount),f	;volatile
 11724                           	line	66
 11725                           	
 11726  0BB4                     i1l11434:	
 11727                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
 11728  0BB4  300A               	movlw	(0Ah)
 11729  0BB5  0260               	subwf	(_UpDebounceCount),w	;volatile
 11730  0BB6  1C03               	skipc
 11731  0BB7  2BB9               	goto	u472_21
 11732  0BB8  2BBA               	goto	u472_20
 11733  0BB9                     u472_21:
 11734  0BB9  2BC4               	goto	i1l5200
 11735  0BBA                     u472_20:
 11736                           	
 11737  0BBA                     i1l11436:	
 11738  0BBA  1F6D               	btfss	(_UpReleased/8),(_UpReleased)&7
 11739  0BBB  2BBD               	goto	u473_21
 11740  0BBC  2BBE               	goto	u473_20
 11741  0BBD                     u473_21:
 11742  0BBD  2BC4               	goto	i1l5200
 11743  0BBE                     u473_20:
 11744                           	line	68
 11745                           	
 11746  0BBE                     i1l11438:	
 11747                           ;HMI.c: 67: {
 11748                           ;HMI.c: 68: UpPressed = 1;
 11749  0BBE  16ED               	bsf	(_UpPressed/8),(_UpPressed)&7
 11750                           	line	69
 11751                           ;HMI.c: 69: UpReleased = 0;
 11752  0BBF  136D               	bcf	(_UpReleased/8),(_UpReleased)&7
 11753  0BC0  2BC4               	goto	i1l5200
 11754                           	line	70
 11755                           	
 11756  0BC1                     i1l5199:	
 11757                           	line	71
 11758                           ;HMI.c: 70: }
 11759                           ;HMI.c: 71: }
 11760  0BC1  2BC4               	goto	i1l5200
 11761                           	line	72
 11762                           	
 11763  0BC2                     i1l5198:	
 11764                           	line	74
 11765                           ;HMI.c: 72: else
 11766                           ;HMI.c: 73: {
 11767                           ;HMI.c: 74: UpDebounceCount = 0;
 11768  0BC2  01E0               	clrf	(_UpDebounceCount)	;volatile
 11769                           	line	75
 11770                           ;HMI.c: 75: UpReleased = 1;
 11771  0BC3  176D               	bsf	(_UpReleased/8),(_UpReleased)&7
 11772                           	line	76
 11773                           	
 11774  0BC4                     i1l5200:	
 11775                           	line	79
 11776                           ;HMI.c: 76: }
 11777                           ;HMI.c: 79: if(!RB3)
 11778  0BC4  1986               	btfsc	(51/8),(51)&7
 11779  0BC5  2BC7               	goto	u474_21
 11780  0BC6  2BC8               	goto	u474_20
 11781  0BC7                     u474_21:
 11782  0BC7  2BDA               	goto	i1l5201
 11783  0BC8                     u474_20:
 11784                           	line	81
 11785                           	
 11786  0BC8                     i1l11440:	
 11787                           ;HMI.c: 80: {
 11788                           ;HMI.c: 81: DownDebounceCount++;
 11789  0BC8  3001               	movlw	(01h)
 11790  0BC9  00F0               	movwf	(??_Debounce+0)+0
 11791  0BCA  0870               	movf	(??_Debounce+0)+0,w
 11792  0BCB  07DC               	addwf	(_DownDebounceCount),f	;volatile
 11793                           	line	82
 11794                           	
 11795  0BCC                     i1l11442:	
 11796                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
 11797  0BCC  300A               	movlw	(0Ah)
 11798  0BCD  025C               	subwf	(_DownDebounceCount),w	;volatile
 11799  0BCE  1C03               	skipc
 11800  0BCF  2BD1               	goto	u475_21
 11801  0BD0  2BD2               	goto	u475_20
 11802  0BD1                     u475_21:
 11803  0BD1  2BDC               	goto	i1l5203
 11804  0BD2                     u475_20:
 11805                           	
 11806  0BD2                     i1l11444:	
 11807  0BD2  1DEC               	btfss	(_DownReleased/8),(_DownReleased)&7
 11808  0BD3  2BD5               	goto	u476_21
 11809  0BD4  2BD6               	goto	u476_20
 11810  0BD5                     u476_21:
 11811  0BD5  2BDC               	goto	i1l5203
 11812  0BD6                     u476_20:
 11813                           	line	84
 11814                           	
 11815  0BD6                     i1l11446:	
 11816                           ;HMI.c: 83: {
 11817                           ;HMI.c: 84: DownPressed = 1;
 11818  0BD6  156C               	bsf	(_DownPressed/8),(_DownPressed)&7
 11819                           	line	85
 11820                           ;HMI.c: 85: DownReleased = 0;
 11821  0BD7  11EC               	bcf	(_DownReleased/8),(_DownReleased)&7
 11822  0BD8  2BDC               	goto	i1l5203
 11823                           	line	86
 11824                           	
 11825  0BD9                     i1l5202:	
 11826                           	line	87
 11827                           ;HMI.c: 86: }
 11828                           ;HMI.c: 87: }
 11829  0BD9  2BDC               	goto	i1l5203
 11830                           	line	88
 11831                           	
 11832  0BDA                     i1l5201:	
 11833                           	line	90
 11834                           ;HMI.c: 88: else
 11835                           ;HMI.c: 89: {
 11836                           ;HMI.c: 90: DownDebounceCount = 0;
 11837  0BDA  01DC               	clrf	(_DownDebounceCount)	;volatile
 11838                           	line	91
 11839                           ;HMI.c: 91: DownReleased = 1;
 11840  0BDB  15EC               	bsf	(_DownReleased/8),(_DownReleased)&7
 11841                           	line	92
 11842                           	
 11843  0BDC                     i1l5203:	
 11844                           	line	94
 11845                           ;HMI.c: 92: }
 11846                           ;HMI.c: 94: if(!RB4)
 11847  0BDC  1A06               	btfsc	(52/8),(52)&7
 11848  0BDD  2BDF               	goto	u477_21
 11849  0BDE  2BE0               	goto	u477_20
 11850  0BDF                     u477_21:
 11851  0BDF  2BF2               	goto	i1l5204
 11852  0BE0                     u477_20:
 11853                           	line	96
 11854                           	
 11855  0BE0                     i1l11448:	
 11856                           ;HMI.c: 95: {
 11857                           ;HMI.c: 96: LeftDebounceCount++;
 11858  0BE0  3001               	movlw	(01h)
 11859  0BE1  00F0               	movwf	(??_Debounce+0)+0
 11860  0BE2  0870               	movf	(??_Debounce+0)+0,w
 11861  0BE3  07DD               	addwf	(_LeftDebounceCount),f	;volatile
 11862                           	line	97
 11863                           	
 11864  0BE4                     i1l11450:	
 11865                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
 11866  0BE4  300A               	movlw	(0Ah)
 11867  0BE5  025D               	subwf	(_LeftDebounceCount),w	;volatile
 11868  0BE6  1C03               	skipc
 11869  0BE7  2BE9               	goto	u478_21
 11870  0BE8  2BEA               	goto	u478_20
 11871  0BE9                     u478_21:
 11872  0BE9  2BF4               	goto	i1l5206
 11873  0BEA                     u478_20:
 11874                           	
 11875  0BEA                     i1l11452:	
 11876  0BEA  1EEC               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 11877  0BEB  2BED               	goto	u479_21
 11878  0BEC  2BEE               	goto	u479_20
 11879  0BED                     u479_21:
 11880  0BED  2BF4               	goto	i1l5206
 11881  0BEE                     u479_20:
 11882                           	line	99
 11883                           	
 11884  0BEE                     i1l11454:	
 11885                           ;HMI.c: 98: {
 11886                           ;HMI.c: 99: LeftPressed = 1;
 11887  0BEE  166C               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 11888                           	line	100
 11889                           ;HMI.c: 100: LeftReleased = 0;
 11890  0BEF  12EC               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 11891  0BF0  2BF4               	goto	i1l5206
 11892                           	line	101
 11893                           	
 11894  0BF1                     i1l5205:	
 11895                           	line	102
 11896                           ;HMI.c: 101: }
 11897                           ;HMI.c: 102: }
 11898  0BF1  2BF4               	goto	i1l5206
 11899                           	line	103
 11900                           	
 11901  0BF2                     i1l5204:	
 11902                           	line	105
 11903                           ;HMI.c: 103: else
 11904                           ;HMI.c: 104: {
 11905                           ;HMI.c: 105: LeftDebounceCount = 0;
 11906  0BF2  01DD               	clrf	(_LeftDebounceCount)	;volatile
 11907                           	line	106
 11908                           ;HMI.c: 106: LeftReleased = 1;
 11909  0BF3  16EC               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 11910                           	line	107
 11911                           	
 11912  0BF4                     i1l5206:	
 11913                           	line	109
 11914                           ;HMI.c: 107: }
 11915                           ;HMI.c: 109: if(!RB5)
 11916  0BF4  1A86               	btfsc	(53/8),(53)&7
 11917  0BF5  2BF7               	goto	u480_21
 11918  0BF6  2BF8               	goto	u480_20
 11919  0BF7                     u480_21:
 11920  0BF7  2C0A               	goto	i1l5207
 11921  0BF8                     u480_20:
 11922                           	line	111
 11923                           	
 11924  0BF8                     i1l11456:	
 11925                           ;HMI.c: 110: {
 11926                           ;HMI.c: 111: RightDebounceCount++;
 11927  0BF8  3001               	movlw	(01h)
 11928  0BF9  00F0               	movwf	(??_Debounce+0)+0
 11929  0BFA  0870               	movf	(??_Debounce+0)+0,w
 11930  0BFB  07DE               	addwf	(_RightDebounceCount),f	;volatile
 11931                           	line	112
 11932                           	
 11933  0BFC                     i1l11458:	
 11934                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
 11935  0BFC  300A               	movlw	(0Ah)
 11936  0BFD  025E               	subwf	(_RightDebounceCount),w	;volatile
 11937  0BFE  1C03               	skipc
 11938  0BFF  2C01               	goto	u481_21
 11939  0C00  2C02               	goto	u481_20
 11940  0C01                     u481_21:
 11941  0C01  2C0C               	goto	i1l5209
 11942  0C02                     u481_20:
 11943                           	
 11944  0C02                     i1l11460:	
 11945  0C02  1E6D               	btfss	(_RightReleased/8),(_RightReleased)&7
 11946  0C03  2C05               	goto	u482_21
 11947  0C04  2C06               	goto	u482_20
 11948  0C05                     u482_21:
 11949  0C05  2C0C               	goto	i1l5209
 11950  0C06                     u482_20:
 11951                           	line	114
 11952                           	
 11953  0C06                     i1l11462:	
 11954                           ;HMI.c: 113: {
 11955                           ;HMI.c: 114: RightPressed = 1;
 11956  0C06  15ED               	bsf	(_RightPressed/8),(_RightPressed)&7
 11957                           	line	115
 11958                           ;HMI.c: 115: RightReleased = 0;
 11959  0C07  126D               	bcf	(_RightReleased/8),(_RightReleased)&7
 11960  0C08  2C0C               	goto	i1l5209
 11961                           	line	116
 11962                           	
 11963  0C09                     i1l5208:	
 11964                           	line	117
 11965                           ;HMI.c: 116: }
 11966                           ;HMI.c: 117: }
 11967  0C09  2C0C               	goto	i1l5209
 11968                           	line	118
 11969                           	
 11970  0C0A                     i1l5207:	
 11971                           	line	120
 11972                           ;HMI.c: 118: else
 11973                           ;HMI.c: 119: {
 11974                           ;HMI.c: 120: RightDebounceCount = 0;
 11975  0C0A  01DE               	clrf	(_RightDebounceCount)	;volatile
 11976                           	line	121
 11977                           ;HMI.c: 121: RightReleased = 1;
 11978  0C0B  166D               	bsf	(_RightReleased/8),(_RightReleased)&7
 11979                           	line	122
 11980                           	
 11981  0C0C                     i1l5209:	
 11982                           	line	124
 11983                           ;HMI.c: 122: }
 11984                           ;HMI.c: 124: if(!RB6)
 11985  0C0C  1B06               	btfsc	(54/8),(54)&7
 11986  0C0D  2C0F               	goto	u483_21
 11987  0C0E  2C10               	goto	u483_20
 11988  0C0F                     u483_21:
 11989  0C0F  2C22               	goto	i1l5210
 11990  0C10                     u483_20:
 11991                           	line	126
 11992                           	
 11993  0C10                     i1l11464:	
 11994                           ;HMI.c: 125: {
 11995                           ;HMI.c: 126: CenterDebounceCount++;
 11996  0C10  3001               	movlw	(01h)
 11997  0C11  00F0               	movwf	(??_Debounce+0)+0
 11998  0C12  0870               	movf	(??_Debounce+0)+0,w
 11999  0C13  07DB               	addwf	(_CenterDebounceCount),f	;volatile
 12000                           	line	127
 12001                           	
 12002  0C14                     i1l11466:	
 12003                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
 12004  0C14  300A               	movlw	(0Ah)
 12005  0C15  025B               	subwf	(_CenterDebounceCount),w	;volatile
 12006  0C16  1C03               	skipc
 12007  0C17  2C19               	goto	u484_21
 12008  0C18  2C1A               	goto	u484_20
 12009  0C19                     u484_21:
 12010  0C19  2C25               	goto	i1l5213
 12011  0C1A                     u484_20:
 12012                           	
 12013  0C1A                     i1l11468:	
 12014  0C1A  1CEC               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12015  0C1B  2C1D               	goto	u485_21
 12016  0C1C  2C1E               	goto	u485_20
 12017  0C1D                     u485_21:
 12018  0C1D  2C25               	goto	i1l5213
 12019  0C1E                     u485_20:
 12020                           	line	129
 12021                           	
 12022  0C1E                     i1l11470:	
 12023                           ;HMI.c: 128: {
 12024                           ;HMI.c: 129: CenterPressed = 1;
 12025  0C1E  146C               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 12026                           	line	130
 12027                           ;HMI.c: 130: CenterReleased = 0;
 12028  0C1F  10EC               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 12029  0C20  2C25               	goto	i1l5213
 12030                           	line	131
 12031                           	
 12032  0C21                     i1l5211:	
 12033                           	line	132
 12034                           ;HMI.c: 131: }
 12035                           ;HMI.c: 132: }
 12036  0C21  2C25               	goto	i1l5213
 12037                           	line	133
 12038                           	
 12039  0C22                     i1l5210:	
 12040                           	line	135
 12041                           ;HMI.c: 133: else
 12042                           ;HMI.c: 134: {
 12043                           ;HMI.c: 135: CenterDebounceCount = 0;
 12044  0C22  01DB               	clrf	(_CenterDebounceCount)	;volatile
 12045                           	line	136
 12046                           ;HMI.c: 136: CenterReleased = 1;
 12047  0C23  14EC               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 12048  0C24  2C25               	goto	i1l5213
 12049                           	line	137
 12050                           	
 12051  0C25                     i1l5212:	
 12052                           	line	138
 12053                           	
 12054  0C25                     i1l5213:	
 12055  0C25  0008               	return
 12056                           	opt stack 0
 12057                           GLOBAL	__end_of_Debounce
 12058  0C26                     	__end_of_Debounce:
 12059 ;; =============== function _Debounce ends ============
 12060                           
 12061                           	signat	_Debounce,88
 12062                           psect	text1177,local,class=CODE,delta=2
 12063                           global __ptext1177
 12064  0000                     __ptext1177:
 12065                           	global	btemp
 12066  007E                     	btemp set 07Eh
 12067                           
 12068                           	DABS	1,126,2	;btemp
 12069                           	global	wtemp0
 12070  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 24 13:47:50 2015

   __end_of_lcd_write_control 14AA               ??_UpdateDisplay 00C5                             pc 0002  
   __size_ofi1_lcd_set_cursor 0009                    i1_adc_read 14C8                            _GO 00FA  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
         ___wmul@multiplicand 00A2              i1___wmul@product 0074                           l700 1443  
                         l703 14F4                           l704 14F4                           l705 14F8  
                         l706 1515                           l690 087F                           l691 08B4  
                         l692 0885                           l693 088B                           l694 0891  
                         l695 0897                           l696 089D                           l689 08A1  
                         l697 08C3                           _GIE 005F                           _RB0 0030  
                         _RC0 0038                           _RB2 0032                           _RC1 0039  
                         _RB3 0033                           _RC2 003A                           _RB4 0034  
                         _RB5 0035                           _RE0 0048                           _RB6 0036  
                         _RE1 0049                           _RE2 004A                           _RX9 00C6  
                         _TX9 04C6                           _pos 00EA                           fsr0 0004  
                         indf 0000                  ___awmod@sign 00A6               ?_lcd_set_cursor 0070  
                        l1402 148D                          l1410 07FA                          l2210 1566  
                        l1411 07FA                          l2220 0944                          l1405 13E1  
                        l2221 0965                          l2213 0923                          l2214 0950  
                        l2222 094E                          l2230 0BA9                          l2223 0964  
                        l2215 0924                          l1408 07E3                          l2224 0965  
                        l2216 0963                          l2240 0D68                          l1409 07C4  
                        l2217 0926                          l2241 0D77                          l2233 0D34  
                        l2218 0928                          l2250 0E11                          l2242 0DF7  
                        l2234 0D79                          l2219 0937                          l2227 0B53  
                        l2251 0E12                          l2243 0D8B                          l2235 0D40  
                        l2228 0B9D                          l2252 0E12                          l2244 0E0A  
                        l2236 0D8A                          l1429 15E5                          l2229 0B71  
                        l2245 0D91                          l2237 0D4A                          l2246 0DA8  
                        l2238 0D54                          l2247 0DC3                          l2239 0D5E  
                        l2248 0DF4                          l2249 0DF5                          l1399 14A9  
                        l5230 16BB                          l4422 1617                          l5231 16CB  
                        l4423 1616                          l5224 16D1                          l5232 16CC  
                        l4424 1620                          l5240 05AD                          l5233 16E4  
                        l5225 16A9                          l4425 163F                          l5241 0602  
                        l5226 16E2                          l5234 16CF                          l5242 0613  
                        l5227 16AA                          l5243 06C2                          l5228 16AB  
                        l5244 0651                          l5229 16BA                          l5245 06B6  
                        l5246 06C2                          l4447 153D                          l3671 14B8  
                        l5239 06B8                          l3672 14B8                          l3680 0A34  
                        l2960 1459                          l3673 14BD                          l3681 0A53  
                        l3674 14C7                          l3682 0A66                          l2970 023A  
                        l2971 019B                          l2963 0063                          l2955 09D0  
                        l2964 023D                          l2972 0239                          l2956 09F1  
                        l3677 0A25                          l2973 01E9                          l2965 00B1  
                        l2957 0A0F                          l3678 0A2C                          l2966 023C  
                        l2974 0238                          l3679 0A4D                          l2975 0237  
                        l2967 00FF                          l2968 023B                          l2976 023D  
                        l2969 014D                          l7412 15EB                          l7420 08D2  
                        l6700 0CF9                          l7413 15F5                          l7421 08E3  
                        l6701 0D2D                          l7414 160A                          l7422 08E4  
                        l7430 1778                          l6710 07A9                          l7415 1611  
                        l7423 08FD                          l7431 1789                          l6711 06CB  
                        l7424 090B                          l7432 178A                          l6720 0713  
                        l6712 06DD                          l7425 0913                          l7433 179B  
                        l6721 071E                          l6713 06E4                          l7418 090C  
                        l7434 17A9                          l6722 0746                          l6714 06DF  
                        l7419 08DE                          l7435 17B1                          l6715 07BD  
                        l6723 073B                          l7428 17AA                          l7620 0ADD  
                        l6724 0758                          l6716 06E0                          l7429 1784  
                        l7621 0AE7                          l6725 079D                          l6717 06E1  
                        l7630 0B34                          l7622 0B23                          l6726 075D  
                        l6718 06F9                          l7623 0AFD                          l6727 07A8  
                        l6719 06E2                          l7624 0AF1                          l6728 07BC  
                        l7625 0B02                          l6729 07C2                          l7626 0B03  
                        l7627 0B14                          l7628 0B22                          l7629 0B2D  
                        l6686 1472                          l6694 0C53                          l6695 0C71  
                        l6696 0CA5                          l6699 0CDB                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 0832  
                        STR_2 0829                          STR_3 0844                          STR_4 084D  
                        STR_5 083B                          STR_6 086D                          STR_7 0871  
                        STR_8 085D                          STR_9 0869                          _BRGH 04C2  
                        _CREN 00C4                          u5010 1788                          u5011 1787  
                        u5020 1794                          u5100 0B0D                          u5021 1793  
                        u5005 1779                          u5101 0B0C                          u5040 17A8  
                        u5120 0B21                          u6000 0B51                          u5041 17A7  
                        u5025 1790                          u5121 0B20                          u5105 0B09  
                        u6001 0B50                          u4330 14F8                          u5130 0B27  
                        u5050 0AD4                          u6010 0B64                          u4331 14F7  
                        u5035 179C                          u5115 0B15                          u5051 0AD3  
                        u6011 0B63                          u5060 0AE1                          u6020 0B9D  
                        u5061 0AE0                          u6021 0B9C                          u6005 0B4D  
                        u5070 0AED                          u5071 0AEC                          u6015 0B60  
                        u4345 1507                          u6025 0B99                          u5090 0B01  
                        u5091 0B00                          u5085 0AF2                          u6037 0DB0  
                        u4550 16B5                          u4551 16B4                          u6047 0DCB  
                        u4560 16C8                          u4561 16C7                          u6057 0A41  
                        u4570 14BC                          u4650 1620                          u4571 14BB  
                        u4651 161F                          u6067 1489                          _RCIE 0465  
                        u5700 0A53                          _RCIF 0065                          u6077 14A4  
                        u5701 0A52                          u4910 1609                          u5710 0C34  
                        u4911 1608                          u6087 1441                          u5711 0C33  
                        u4920 08CE                          u5720 0CBC                          u5800 0113  
                        u4905 15FD                          u4921 08CD                          u6097 08B8  
                        u5721 0CBB                          u5801 0112                          u5810 0158  
                        u5730 0020                          u5811 0157                          u5731 001F  
                        u4940 08E2                          u5820 0161                          u5740 0029  
                        u5900 0739                          u4941 08E1                          u5821 0160  
                        u5741 0028                          u5901 0738                          u5830 01A6  
                        u5750 006E                          u5910 0745                          u4935 08D3  
                        u5831 01A5                          u5751 006D                          u5911 0744  
                        u4880 15EF                          u4960 08F5                          u5840 01AF  
                        u5760 0077                          u5920 074C                          u4881 15EE  
                        u4961 08F4                          u5841 01AE                          u5761 0076  
                        u5921 074B                          u5905 0735                          u5690 0A1E  
                        u5850 01F4                          u5770 00BC                          u5930 07A7  
                        _OERR 00C1                          u4955 08E5                          u5691 0A1D  
                        u5851 01F3                          u5771 00BB                          u5931 07A6  
                        u4980 090A                          u5860 01FD                          u5780 00C5  
                        u5940 07BB                          u4981 0909                          u4965 08F1  
                        u5861 01FC                          u5781 00C4                          u5941 07BA  
                        u4990 1774                          u5790 010A                          u5870 06D1  
                        u5950 07F9                          u4895 15F6                          u4975 08FE  
                        u4991 1773                          u5791 0109                          u5871 06D0  
                        u5951 07F8                          u5880 0709                          u5960 09CE  
                        u5881 0708                          u5961 09CD                          u5890 071C  
                        u5970 09F0                          u5891 071B                          u5971 09EF  
                        u5980 059E                          u5965 09CA                          u5990 05F1  
                        u5975 09EC                          u5991 05F0                          u5995 05ED  
                        _TMR0 0001                          _SPEN 00C7                          _TXIE 0464  
                        _WREN 0C62                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4           __size_of_ADCconvert 0229                          _Menu 16A5  
      __end_of_lcd_write_data 148E                          _isr1 0E15                          _main 0D2E  
                        _init 153E                          _test 00EC                          btemp 007E  
              _CenterReleased 0361                          start 0012                 ??_ReadButtons 0071  
            ??i1_readDistance 007A  __size_ofi1_lcd_write_control 0014       __end_ofi1_UpdateDisplay 0594  
                       ?_Menu 0070                         l11100 14EF                         l11102 14F2  
                       l11104 14FB                         l12000 00C5                         l11106 150E  
                       l12010 0158                         l12002 00FF                         l11108 1515  
                       l12020 01E9                         l12012 0161                         l12004 010A  
                       l12100 15C2                         l12022 01F4                         l12014 019B  
                       l12006 0113                         l12030 06D1                         l12110 15D3  
                       l12102 15C3                         l11240 151E                         l12024 01FD  
                       l12016 01A6                         l12008 014D                         l12040 0701  
                       l12032 06D8                         l12112 15D9                         l12104 15C6  
                       l12120 0928                         l12200 153E                         l11250 152A  
                       l11242 1520                         l11234 1516                         l12018 01AF  
                       l12050 0716                         l12042 0705                         l12034 06E3  
                       l12026 06C6                         l12114 15DF                         l12106 15C7  
                       l12130 0948                         l12122 0933                         l12210 155C  
                       l12202 154D                         l11252 152B                         l11244 1521  
                       l11236 1519                         l11260 16A8                         l11500 08C8  
                       l12060 073F                         l12052 071D                         l12044 0709  
                       l12036 06E4                         l12028 06CB                         l12108 15CD  
                       l12132 094C                         l12124 0937                         l12116 0914  
                       l12140 1444                         l12212 1560                         l12204 1552  
                       l12220 0B3B                         l12300 0DF7                         l11254 152E  
                       l11246 1524                         l11238 151D                         l11270 16C8  
                       l11262 16AB                         l11510 08E4                         l11502 08CE  
                       l12070 075D                         l12062 0746                         l12054 071E  
                       l12046 070D                         l12038 06F9                         l12134 094D  
                       l12126 0940                         l12118 0919                         l12142 1452  
                       l12150 09CF                         l12214 1564                         l12206 1556  
                       l12230 0B58                         l12222 0B40                         l12302 0E0A  
                       l11256 152F                         l11248 1527                         l11272 16CC  
                       l11264 16B1                         l11280 16E2                         l11512 08F5  
                       l11504 08D2                         l11520 090C                         l12072 0791  
                       l12064 074C                         l12056 073A                         l12048 0713  
                       l12080 07BD                         l12136 094F                         l12128 0944  
                       l12144 1459                         l12152 09D0                         l12160 0594  
                       l12216 1565                         l12208 155A                         l12240 0B8A  
                       l12232 0B64                         l12224 0B44                         l11258 1530  
                       l11282 16E4                         l11274 16CE                         l11266 16B5  
                       l11290 14C3                         l11522 0913                         l11514 08FB  
                       l11506 08D9                         l11530 177F                         l12082 07C2  
                       l12074 0798                         l12066 0753                         l12058 073B  
                       l12090 07C4                         l12138 0950                         l12154 09DD  
                       l12146 09BB                         l12170 05E2                         l12162 05AD  
                       l12242 0B90                         l12234 0B71                         l12226 0B52  
                       l12218 0B35                         l12250 0D34                         l11276 16D0  
                       l11268 16BB                         l11292 14C7                         l11284 14AD  
                       l11516 08FD                         l11508 08DE                         l11540 17A2  
                       l11532 1784                         l11524 176C                         l12076 079D  
                       l12068 0758                         l12084 13DA                         l12092 07DA  
                       l12156 09E3                         l12148 09C1                         l12180 062E  
                       l12172 05F1                         l12164 05B3                         l12244 0BA0  
                       l12236 0B7A                         l12228 0B53                         l12260 0D4A  
                       l12252 0D3A                         l11278 16D1                         l11286 14B1  
                       l11390 1621                         l11518 0904                         l11534 178A  
                       l11526 1774                         l11542 17AA                         l11550 0ADD  
                       l12078 07A9                         l12086 13DB                         l12094 07E3  
                       l12158 09F1                         l12190 0688                         l12182 0651  
                       l12174 0602                         l12166 05CB                         l12246 0BA9  
                       l12238 0B82                         l12270 0D64                         l12262 0D50  
                       l12254 0D3C                         l11288 14BD                         l11392 162F  
                       l11544 17B1                         l11536 1794                         l11528 1778  
                       l11560 0AF8                         l11552 0AE1                         l12088 07C3  
                       l12096 15BB                         l12192 0699                         l12184 0657  
                       l12176 0613                         l12168 05DC                         l12280 0D8B  
                       l12272 0D68                         l12264 0D54                         l12256 0D40  
                       l12248 0D2E                         l11394 163B                         l11386 1615  
                       l11490 15EF                         l11538 179B                         l11570 0B1B  
                       l11562 0AFD                         l11554 0AE7                         l11546 0ACD  
                       l12098 15BF                         l12194 06A4                         l12186 0671  
                       l12178 0619                         l12290 0DC3                         l12282 0D91  
                       l12274 0D73                         l12266 0D5A                         l12258 0D46  
                       l11396 163E                         l11388 1617                         l11492 15FC  
                       l11564 0B03                         l11556 0AED                         l11572 0B23  
                       l11548 0AD4                         l11900 08BA                         l12196 06B7  
                       l12188 0682                         l12292 0DD2                         l12284 0D9E  
                       l12276 0D78                         l12268 0D5E                         l11494 160A  
                       l11486 15E6                         l11574 0B27                         l11566 0B0D  
                       l11558 0AF1                         l11902 08C3                         l11910 143B  
                       l12198 06B8                         l12294 0DDD                         l12286 0DA8  
                       l12278 0D79                         l11496 1611                         l11488 15EB  
                       l11576 0B2D                         l11568 0B14                         l11912 143F  
                       l11904 1430                         l11920 149D                         l12296 0DE8  
                       l12288 0DB7                         l11498 08C4                         l11578 0B34  
                       l11906 1433                         l11914 1491                         l11922 1476  
                       l11930 145A                         l12298 0DF6                         l11908 1437  
                       l11916 1496                         l11924 147B                         l11940 0A2C  
                       l11932 0A13                         l11918 149C                         l11926 1481  
                       l11950 0A4D                         l11942 0A2F                         l11934 0A17  
                       l11928 1482                         l11960 0A62                         l11952 0A57  
                       l11944 0A30                         l11936 0A1E                         l11890 089D  
                       l11962 0A63                         l11954 0A5D                         l11946 0A3B  
                       l11938 0A25                         l11970 0C34                         l11892 089F  
                       l11956 0A60                         l11948 0A46                         l11972 0C53  
                       l11964 0C26                         l11980 0CBC                         l11894 08A0  
                       l11958 0A61                         l11966 0C2C                         l11982 0CDB  
                       l11974 0CA6                         l11990 0063          __size_of_calibrateIR 0052  
                       l11896 08A1                         l11888 087E                         l11968 0C30  
                       l11976 0CAE                         l11992 006E                         l11984 0015  
                       l11898 08B4                         l11978 0CB6                         l11994 0077  
                       l11986 0020                         l11996 00B1                         l11988 0029  
                       l11998 00BC                         ?_isr1 0070                         ?_main 0070  
                       ?_init 0070                         _EEADR 010D                         STR_10 0875  
                       STR_11 081A                         STR_12 081A                         STR_13 0861  
                       STR_14 0855                         STR_15 0865               __end_of___awmod 0B35  
                       _CARRY 0018     __size_ofi1_lcd_write_data 0013               __end_of___lwdiv 0914  
             __end_of___lwmod 17B2                         i1l703 14CD                         i1l704 14CD  
                       i1l705 14D1                         i1l706 14EE                         i1l690 16E7  
                       i1l691 171A                         i1l692 16ED                         i1l693 16F3  
                       i1l694 16F9                         i1l695 16FF                         i1l696 1705  
                       i1l689 1709                         i1l697 1725                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _SSPIF 0063                         _TXREG 0019  
      lcd_write_data@databyte 00A2            i1___lwmod@dividend 0022                i1___awmod@sign 0076  
             __end_of_scan360 0BAA                         _total 0059                 ?i1_ADCconvert 0070  
                       pclath 000A                   _turnlowByte 0069              __end_ofi1___wmul 1591  
             ?_lcd_write_data 0070             ?_adc_read_channel 0070                         status 0003  
         i1___wmul@multiplier 0070                         wtemp0 007E               __end_of_sprintf 07C3  
          __size_ofi1___awmod 0066              __end_of_Debounce 0C26            __size_ofi1___lwdiv 004E  
          __size_ofi1___lwmod 0046            ??_adc_read_channel 00A6              ?_readAvgDistance 0070  
                __end_of_Menu 16E5    __size_of_lcd_write_control 001C              _shortMenuStrings 01C7  
                __end_of_isr1 0F00                  __end_of_main 0E15                  __end_of_init 1567  
                 ?i1_adc_read 0070               rotate@direction 00A3                    i1sprintf@c 0036  
                  i1sprintf@f 0026                        ??_Menu 00A0                 ?_readDistance 00A8  
      readAvgDistance@fullval 00B0                        ??_isr1 004C                        ??_main 00E2  
                      ??_init 00A3            __size_ofi1_sprintf 0100           __end_of_ReadButtons 1672  
       i1readDistance@fullval 007C            i1_lcd_write_string 1591                        _ADCON0 001F  
                      _ADCON1 009F                ??i1_ADCconvert 0020                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _EECON1 018C  
                      _EECON2 018D              __end_of_adc_read 1516                        i1l2200 0EF4  
                      i1l2201 0E7F                        i1l1402 13F4                        i1l1410 15BA  
                      i1l2202 0E98                        i1l1411 15BA                        i1l2203 0EC6  
                      i1l2204 0EC2                        i1l1405 13CC                        i1l2205 0EE3  
                      i1l2206 0EF3                        i1l2207 0EF4                        i1l1408 15A9  
                      i1l1409 1592                        i1l2196 0E33                        i1l2197 0E32  
                      i1l2198 0E57                        i1l1399 141B                        i1l2199 0E57  
                      i1l5200 0BC4                        i1l5201 0BDA                        i1l5210 0C22  
                      i1l5202 0BD9                        i1l5211 0C21                        i1l5203 0BDC  
                      i1l5212 0C25                        i1l5204 0BF2                        i1l5220 1667  
                      i1l5213 0C25                        i1l5205 0BF1                        i1l5221 166F  
                      i1l5206 0BF4                        i1l5207 0C0A                        i1l5208 0C09  
                      i1l5216 164F                        i1l5240 0472                        i1l5209 0C0C  
                      i1l5217 1671                        i1l5241 04D5                        i1l5218 1657  
                      i1l5242 04E6                        i1l5219 165F                        i1l5243 0593  
                      i1l5244 0522                        i1l5245 0587                        i1l5246 0593  
                      i1l5239 0589                        i1l2960 142F                        i1l2970 0455  
                      i1l2971 03BA                        i1l2963 028A                        i1l2955 097B  
                      i1l2964 0458                        i1l2972 0454                        i1l2956 099C  
                      i1l2973 0406                        i1l2965 02D6                        i1l2957 09BA  
                      i1l5198 0BC2                        i1l2966 0457                        i1l2974 0453  
                      i1l5199 0BC1                        i1l2975 0452                        i1l2967 0322  
                      i1l2968 0456                        i1l2976 0458                        i1l2969 036E  
                      i1l7412 156A                        i1l7420 17BE                        i1l7413 1574  
                      i1l7421 17CF                        i1l7414 1589                        i1l7422 17D0  
                      i1l7430 1732                        i1l6710 0FE6                        i1l7415 1590  
                      i1l7423 17E9                        i1l7431 1743                        i1l6711 0F08  
                      i1l7424 17F7                        i1l7432 1744                        i1l6720 0F50  
                      i1l6712 0F1A                        i1l7425 17FF                        i1l7433 1755  
                      i1l6721 0F5B                        i1l6713 0F21                        i1l7418 17F8  
                      i1l7434 1763                        i1l6722 0F83                        i1l6714 0F1C  
                      i1l7419 17CA                        i1l7435 176B                        i1l6715 0FFA  
                      i1l6723 0F78                        i1l7428 1764                        i1l7620 0A75  
                      i1l6724 0F95                        i1l6716 0F1D                        i1l7429 173E  
                      i1l7621 0A7F                        i1l6725 0FDA                        i1l6717 0F1E  
                      i1l7630 0ACC                        i1l7622 0ABB                        i1l6726 0F9A  
                      i1l6718 0F36                        i1l7623 0A95                        i1l6727 0FE5  
                      i1l6719 0F1F                        i1l7624 0A89                        i1l6728 0FF9  
                      i1l7625 0A9A                        i1l6729 0FFF                        i1l7626 0A9B  
                      i1l7627 0AAC                        i1l7628 0ABA                        i1l7629 0AC5  
 __size_ofi1_adc_read_channel 0041           ?i1_lcd_write_string 0077                        u520_20 0252  
                      u440_20 0E37                        u520_21 0251                        u440_21 0E36  
                      u521_20 0295                        u441_20 0E3D                        u521_21 0294  
                      u441_21 0E3C                        u514_20 14D1                        u450_20 164B  
                      u530_20 03CE                        u522_20 029E                        u442_20 0E53  
                      u514_21 14D0                        u450_21 164A                        u530_21 03CD  
                      u522_21 029D                        u442_21 0E52                        u610_27 13F0  
                      u451_20 1653                        u531_20 0411                        u523_20 02E1  
                      u443_20 0E5B                        u451_21 1652                        u531_21 0410  
                      u523_21 02E0                        u443_21 0E5A                        u515_25 14DE  
                      u611_27 1416                        u452_20 165B                        u532_20 041A  
                      u524_20 02EA                        u540_20 0F89                        u516_20 15B9  
                      u444_20 0E7D                        u452_21 165A                        u532_21 0419  
                      u524_21 02E9                        u540_21 0F88                        u516_21 15B8  
                      u444_21 0E7C                        u612_27 171C                        u453_20 1663  
                      u525_20 032D                        u541_20 0FE4                        u517_20 0979  
                      u533_20 0463                        u445_20 0E96                        u453_21 1662  
                      u525_21 032C                        u541_21 0FE3                        u517_21 0978  
                      u445_21 0E95                        u517_25 0975                        u454_20 166B  
                      u526_20 0336                        u542_20 0FF8                        u518_20 099B  
                      u534_20 04C4                        u446_20 0EAF                        u438_20 0E19  
                      u454_21 166A                        u526_21 0335                        u542_21 0FF7  
                      u518_21 099A                        u534_21 04C3                        u446_21 0EAE  
                      u438_21 0E18                        u550_25 17D1                        u518_25 0997  
                      u534_25 04C0                        u471_20 0BB0                        u543_20 156E  
                      u551_20 17E1                        u527_20 0379                        u519_20 0249  
                      u535_20 0F0E                        u447_20 0EB4                        u439_20 0E2D  
                      u471_21 0BAF                        u543_21 156D                        u551_21 17E0  
                      u527_21 0378                        u519_21 0248                        u535_21 0F0D  
                      u447_21 0EB3                        u439_21 0E2C                        u551_25 17DD  
                      u480_20 0BF8                        u472_20 0BBA                        u560_20 0A6C  
                      u528_20 0382                        u536_20 0F46                        u448_20 0EDD  
                      u480_21 0BF7                        u472_21 0BB9                        u560_21 0A6B  
                      u528_21 0381                        u536_21 0F45                        u448_21 0EDC  
                      u544_25 1575                        u552_25 17EA                        u481_20 0C02  
                      u473_20 0BBE                        u553_20 17F6                        u561_20 0A79  
                      u529_20 03C5                        u537_20 0F59                        u449_20 0EE8  
                      u481_21 0C01                        u473_21 0BBD                        u553_21 17F5  
                      u561_21 0A78                        u529_21 03C4                        u537_21 0F58  
                      u449_21 0EE7                        u545_25 157C                        u482_20 0C06  
                      u474_20 0BC8                        u546_20 1588                        u554_20 172E  
                      u562_20 0A85                        u538_20 0F76                        u482_21 0C05  
                      u474_21 0BC7                        u546_21 1587                        u554_21 172D  
                      u562_21 0A84                        u538_21 0F75                        u538_25 0F72  
                      u483_20 0C10                        u475_20 0BD2                        u547_20 17BA  
                      u539_20 0F82                        u483_21 0C0F                        u475_21 0BD1  
                      u547_21 17B9                        u539_21 0F81                        u555_25 1733  
                      u563_25 0A8A                        u484_20 0C1A                        u476_20 0BD6  
                      u556_20 1742                        u564_20 0A99                        u484_21 0C19  
                      u476_21 0BD5                        u556_21 1741                        u564_21 0A98  
                      u548_25 17BF                        u485_20 0C1E                        u477_20 0BE0  
                      u549_20 17CE                        u557_20 174E                        u565_20 0AA5  
                      u485_21 0C1D                        u477_21 0BDF                        u549_21 17CD  
                      u557_21 174D                        u565_21 0AA4                        u557_25 174A  
                      u565_25 0AA1                        u478_20 0BEA                        u478_21 0BE9  
                      u558_25 1756                        u566_25 0AAD                        u479_20 0BEE  
                      u559_20 1762                        u567_20 0AB9                        u479_21 0BED  
                      u559_21 1761                        u567_21 0AB8                        u568_20 0ABF  
                      _TMR0IE 005D                        _TMR0IF 005A                  scan360@steps 00E0  
                      _SSPCON 0014                        _SSPBUF 0013                 i1sprintf@_val 0031  
               i1sprintf@flag 002F                 i1sprintf@prec 0030                    _UpReleased 036E  
            __end_of_lcd_init 15E6                        _adcVal 00E8               _UpDebounceCount 0060  
                      ___wmul 15E6                     ??___awmod 00A4                  _turnhighByte 0068  
            i1_lcd_set_cursor 13C4                  ??_ADCconvert 00AE                     ??___lwdiv 00AA  
                   ??___lwmod 00B2              __end_of_init_adc 1444          ??i1_lcd_write_string 0079  
              ??_readDistance 00AA               ___awmod@divisor 00A0      __end_of_lcd_write_string 07FB  
            ?i1_UpdateDisplay 0070               ___awmod@counter 00A5                        _rotate 0A10  
                      _rxfifo 01A0                        clrloop 13BD                        _txfifo 01B0  
                      _rxiptr 0064                        _rxoptr 0065                        _txiptr 006A  
                   ??_scan360 00DC                        _txoptr 006B             __end_ofi1___awmod 0ACD  
            __end_of_ser_init 153E             __end_ofi1___lwdiv 1800             __end_ofi1___lwmod 176C  
                      saved_w 007E                 main@shortwall 00E5                   _LeftPressed 0364  
                   ??_sprintf 00B9                   _DownPressed 0362             lcd_write_string@s 00A7  
         __size_ofi1_adc_read 0027            __end_of_ADCconvert 023E             __end_ofi1_sprintf 1000  
              __pcstackCOMMON 0070                  __pidataBANK0 07FB                  __pidataBANK3 13CD  
                 _ReadButtons 1640                     ?i1___wmul 0070              i1_lcd_write_data 13E2  
            ??_lcd_set_cursor 00A3                     ?_Debounce 0070                   i1sprintf@ap 002E  
                 i1sprintf@sp 0035                 _buttonPressed 0061           i1_lcd_write_control 1408  
                  __pbssBANK0 0051                    __pbssBANK1 00E8                    __pbssBANK3 0190  
           _DownDebounceCount 005C            _RightDebounceCount 005E                    __pmaintext 0D2E  
           robotTurn@distance 00A2                       ?___wmul 00A0                    __pintentry 0004  
        __end_ofi1_ADCconvert 0459          ?i1_lcd_write_control 0070         __end_of_UpdateDisplay 06C3  
                  __ptext1131 0B35                    __ptext1140 06C3                    __ptext1132 153E  
                  __ptext1141 0015                    __ptext1133 0594                    __ptext1150 0ACD  
                  __ptext1142 0CA6                    __ptext1134 09BB                    __ptext1151 176C  
                  __ptext1143 0C26                    __ptext1135 1444                    __ptext1160 0459  
                  __ptext1152 08C4                    __ptext1144 0A10                    __ptext1136 0914  
                  __ptext1161 0966                    __ptext1153 15E6                    __ptext1145 145A  
                  __ptext1137 15BB                    __ptext1170 1640                    __ptext1162 141C  
                  __ptext1154 1612                    __ptext1146 1473                    __ptext1138 07C3  
                  __ptext1171 0A67                    __ptext1163 1591                    __ptext1155 14AA  
                  __ptext1147 148E                    __ptext1139 13D7                    __ptext1172 1726  
                  __ptext1164 13C4                    __ptext1156 16A5                    __ptext1148 1430  
                  __ptext1173 17B2                    __ptext1165 0F00                    __ptext1157 1516  
                  __ptext1149 087B                    __ptext1174 1567                    __ptext1166 023E  
                  __ptext1158 14EF                    __ptext1175 14C8                    __ptext1167 13E2  
                  __ptext1159 0E15                    __ptext1176 0BAA                    __ptext1168 1408  
                  __ptext1177 0000                    __ptext1169 16E5                     ?_adc_read 00A0  
                     ?_rotate 00A3            __size_of_ser_putch 002E                    ??i1___wmul 0074  
          __size_of_robo_init 0019                       i1l11200 164B                       i1l11210 1656  
                     i1l11202 164C                       i1l11220 1664                       i1l11212 165B  
                     i1l11204 164E                       i1l11140 0E21                       i1l11230 166F  
                     i1l11222 1666                       i1l11214 165C                       i1l11206 1653  
                     i1l11150 0E3D                       i1l11142 0E27            __size_of_robotMove 0080  
                     i1l11232 1671                       i1l11224 166B                       i1l11216 165E  
                     i1l11208 1654                       i1l11160 0E5B                       i1l11152 0E45  
                     i1l11144 0E2D                       i1l11136 0E15                       i1l11226 166C  
                     i1l11218 1663                       i1l11170 0E7F                       i1l11162 0E5C  
                     i1l11154 0E49                       i1l11138 0E19                       i1l11146 0E33  
                     i1l11228 166E                       i1l11180 0EB9                       i1l11172 0E96  
                     i1l11164 0E65                       i1l11156 0E4D                       i1l11148 0E37  
                     i1l11430 0BAA                       i1l11190 0EE0                       i1l11182 0EC2  
                     i1l11174 0E98                       i1l11166 0E66                       i1l11158 0E53  
                     i1l11440 0BC8                       i1l11432 0BB0                       i1l11600 14D4  
                     i1l11192 0EE3                       i1l11176 0EAF                       i1l11184 0EC6  
                     i1l11168 0E7D                       i1l11450 0BE4                       i1l11442 0BCC  
                     i1l11434 0BB4                       i1l11602 14E7                       i1l11610 1410  
                     i1l11194 0EE8                       i1l11186 0EDD                       i1l11178 0EB4  
                     i1l11460 0C02                       i1l11452 0BEA                       i1l11444 0BD2  
                     i1l11436 0BBA                       i1l11604 14EE                       i1l11196 1640  
                     i1l11612 1411                       i1l11620 13EB                       i1l11700 0478  
                     i1l11188 0EDE                       i1l11470 0C1E                       i1l11462 0C06  
                     i1l11454 0BEE                       i1l11446 0BD6                       i1l11438 0BBE  
                     i1l11198 1645                       i1l11606 1409                       i1l11614 13E3  
                     i1l11622 13C5                       i1l11630 15A2                       i1l11710 04D5  
                     i1l11702 04A0                       i1l11464 0C10                       i1l11456 0BF8  
                     i1l11448 0BE0                       i1l11800 157B                       i1l11608 140E  
                     i1l11616 13E8                       i1l11624 13C6                       i1l11632 15A9  
                     i1l11640 097B                       i1l11720 0528                       i1l11712 04E6  
                     i1l11704 04AF                       i1l11466 0C14                       i1l11458 0BFC  
                     i1l11802 1589                       i1l11810 17BA                       i1l11618 13EA  
                     i1l11626 1591                       i1l11650 1428                       i1l11642 0988  
                     i1l11634 0966                       i1l11730 0577                       i1l11722 054A  
                     i1l11714 04EC                       i1l11706 04B5                       i1l11468 0C1A  
                     i1l11804 1590                       i1l11820 17E1                       i1l11812 17BE  
                     i1l11580 16E6                       i1l11660 028A                       i1l11740 0F0E  
                     i1l11628 1592                       i1l11652 142F                       i1l11644 098E  
                     i1l11636 096C                       i1l11732 0588                       i1l11724 0559  
                     i1l11716 0501                       i1l11708 04C4                       i1l11830 17FF  
                     i1l11822 17E7                       i1l11814 17C5                       i1l11806 17B2  
                     i1l11582 1705                       i1l11590 171A                       i1l11670 02EA  
                     i1l11662 0295                       i1l11654 023E                       i1l11750 0F3E  
                     i1l11742 0F15                       i1l11638 097A                       i1l11646 099C  
                     i1l11726 055F                       i1l11718 0522                       i1l11734 0589  
                     i1l11824 17E9                       i1l11816 17CA                       i1l11808 17B4  
                     i1l11840 173E                       i1l11832 1726                       i1l11592 171E  
                     i1l11584 1707                       i1l11680 0379                       i1l11672 0322  
                     i1l11664 029E                       i1l11656 0249                       i1l11760 0F53  
                     i1l11752 0F42                       i1l11744 0F20                       i1l11736 0F03  
                     i1l11648 141C                       i1l11728 056E                       i1l11826 17F0  
                     i1l11818 17D0                       i1l11842 1744                       i1l11834 172E  
                     i1l11850 1764                       i1l11594 1725                       i1l11586 1708  
                     i1l11690 0406                       i1l11682 0382                       i1l11674 032D  
                     i1l11666 02D6                       i1l11658 0252                       i1l11770 0F7C  
                     i1l11762 0F5A                       i1l11754 0F46                       i1l11746 0F21  
                     i1l11738 0F08                       i1l11596 14C8                       i1l11828 17F8  
                     i1l11852 176B                       i1l11844 174E                       i1l11836 1732  
                     i1l11860 0A79                       i1l11588 1709                       i1l11692 0411  
                     i1l11684 03BA                       i1l11676 0336                       i1l11668 02E1  
                     i1l11780 0F9A                       i1l11772 0F83                       i1l11764 0F5B  
                     i1l11756 0F4A                       i1l11748 0F36                       i1l11598 14CB  
                     i1l11846 1755                       i1l11838 1739                       i1l11870 0A95  
                     i1l11862 0A7F                       i1l11854 0A67                       i1l11694 041A  
                     i1l11686 03C5                       i1l11678 036E                       i1l11782 0FCE  
                     i1l11774 0F89                       i1l11766 0F77                       i1l11758 0F50  
                     i1l11790 0FFA                       i1l11848 175C                       i1l11872 0A9B  
                     i1l11864 0A85                       i1l11880 0ABB                       i1l11856 0A6C  
                     i1l11688 03CE                       i1l11792 0FFF                       i1l11784 0FD5  
                     i1l11776 0F90                       i1l11768 0F78                       i1l11696 0459  
                     i1l11794 1567                       i1l11882 0ABF                       i1l11874 0AA5  
                     i1l11866 0A89                       i1l11858 0A75                       i1l11786 0FDA  
                     i1l11778 0F95                       i1l11698 0472                       i1l11796 156A  
                     i1l11884 0AC5                       i1l11876 0AAC                       i1l11868 0A90  
                     i1l11788 0FE6                       i1l11798 156E                       i1l11886 0ACC  
                     i1l11878 0AB3            __size_of_robotTurn 0088                    ??_Debounce 0070  
            ??_lcd_write_data 00A0                     ?_lcd_init 0070                       _SSPSTAT 0094  
        __end_of_readDistance 145A                     ?_init_adc 0070                     ?_ser_init 0070  
               ??_calibrateIR 00A8                       ___awmod 0ACD         ??i1_lcd_write_control 0070  
             __size_of___wmul 002C                  ??i1_adc_read 0072                       ___lwdiv 08C4  
                     ___lwmod 176C     __size_of_adc_read_channel 0049                    ??_adc_read 00A2  
             __size_of_rotate 0057                       _scan360 0B35                       _dpowers 0810  
           i1___lwdiv@divisor 0076             i1___lwdiv@counter 007B      UpdateDisplay@serialInput 0070  
            ___awmod@dividend 00A2                       _lowByte 00EF                       _ser_tmp 0066  
                     _sprintf 06C3                    ??_lcd_init 00A3      __end_ofi1_lcd_set_cursor 13CD  
        end_of_initialization 16A1       i1lcd_set_cursor@address 0073                     _SCAN_FLAG 005F  
                     init_ram 13F9                    ??_init_adc 00A0            __end_ofi1_adc_read 14EF  
           __end_of_ser_putch 1640             __end_of_robo_init 1473             __end_of_robotMove 0CA6  
                _LeftReleased 0365             __end_of_robotTurn 0D2E                    ??_ser_init 00A0  
           i1_readAvgDistance 0966                       rotate@i 00A7            ?i1_readAvgDistance 0070  
    i1UpdateDisplay@adcOutput 003C                  _DownReleased 0363                 _RightReleased 036C  
       i1___wmul@multiplicand 0072      __size_of_readAvgDistance 0055             ?_lcd_write_string 00A7  
         ??i1_readAvgDistance 007E           __end_of_calibrateIR 0966            ??_lcd_write_string 00A9  
     __size_ofi1_readDistance 0014                   AT25256A@CS0 0038                   AT25256A@CS1 0039  
           adc_read@adc_value 00A4                     i1___awmod 0A67    __end_ofi1_adc_read_channel 1726  
                   i1___lwdiv 17B2                     i1___lwmod 1726                    _totalSteps 01C0  
                  main@choice 00E7                 ?_spi_transfer 0070      __end_ofi1_lcd_write_data 13F5  
   __end_ofi1_readAvgDistance 09BB                     Menu@input 00A0         __size_ofi1_ADCconvert 021B  
               _CenterPressed 0360                     i1_sprintf 0F00                  ?_ReadButtons 0070  
              __end_of___wmul 1612   __size_ofi1_lcd_write_string 002A             i1___lwmod@divisor 0020  
               __pbitbssBANK0 0360             i1___lwmod@counter 0025                __end_of_rotate 0A67  
         start_initialization 1672             __size_ofi1___wmul 002A         __size_of_readDistance 0016  
                  ?i1___awmod 0070      __size_ofi1_UpdateDisplay 013B                    ?i1___lwdiv 0076  
           __size_of_Debounce 007C                    ?i1___lwmod 0020                   rotate@steps 00A6  
                i1_ADCconvert 023E                ??_spi_transfer 00A0         lcd_set_cursor@address 00A3  
                   _UpPressed 036D                    ?i1_sprintf 0026                _RTC_FLAG_250MS 0368  
              _RTC_FLAG_500MS 0369                      ??___wmul 00A4                   _calibrateIR 0914  
                 __pdataBANK0 006E                   __pdataBANK3 01C2            i1___awmod@dividend 0072  
            _adc_read_channel 087B           i1lcd_write_string@s 0077                      ??_rotate 00A4  
                _readDistance 1444             __size_of_adc_read 0027             ??_readAvgDistance 00B0  
               __pcstackBANK0 0020                 __pcstackBANK1 00A0             __size_of_lcd_init 002B  
                 sprintf@_val 00BF                   sprintf@flag 00BD             robotMove@distance 00A2  
                 sprintf@prec 00BE    __size_ofi1_readAvgDistance 0055                  _current_step 006E  
            readAvgDistance@i 00B2             __size_of_init_adc 0014              ___lwdiv@dividend 00A8  
                    ?___awmod 00A0             __size_of_ser_init 0028                      ?___lwdiv 00A6  
                    ?___lwmod 00AE                     __pstrings 0800                     _dist_high 0053  
                    ?_scan360 00DA           readDistance@fullval 00AC                i1_readDistance 141C  
                 ??i1___awmod 0074              ___lwdiv@quotient 00AB                   ??i1___lwdiv 007A  
                 ??i1___lwmod 0024                      ?_sprintf 00B4             ?i1_lcd_set_cursor 0070  
     __size_of_lcd_set_cursor 000B             interrupt_function 0004        __size_of_UpdateDisplay 012F  
              ___wmul@product 00A4            ??i1_lcd_set_cursor 0073             ??i1_UpdateDisplay 0037  
                  ser_putch@c 00A1   __end_ofi1_lcd_write_control 141C                     _ser_putch 1612  
                 ??i1_sprintf 002B                     _robo_init 145A                     _robotMove 0C26  
                   _robotTurn 0CA6                  _RightPressed 036B          __size_of_ReadButtons 0032  
      __end_ofi1_readDistance 1430          __end_of_spi_transfer 14C8                   __stringbase 080F  
           ___wmul@multiplier 00A0                      i1___wmul 1567        UpdateDisplay@adcOutput 00CA  
            spi_transfer@data 00A2              spi_transfer@temp 00A1                      _Debounce 0BAA  
           _LeftDebounceCount 005D     __size_of_lcd_write_string 0038            scan360@lowestSteps 00DE  
           ?i1_lcd_write_data 0070       __size_of_lcd_write_data 001B            i1_adc_read_channel 16E5  
          ??i1_lcd_write_data 0070                    ?_ser_putch 0070       adc_read_channel@channel 00A7  
               _RTC_FLAG_10MS 0366                 _RTC_FLAG_50MS 036A                    ?_robo_init 0070  
                   init_fetch 13F5                    ?_robotMove 00A2                    ?_robotTurn 00A2  
           i1___awmod@divisor 0070             i1___awmod@counter 0075                    _ADCconvert 0015  
            __size_of___awmod 0068           ?i1_adc_read_channel 0070              __size_of___lwdiv 0050  
            __size_of___lwmod 0046      i1lcd_write_data@databyte 0072                 _UpdateDisplay 0594  
                    _adc_read 14EF               ?i1_readDistance 0078     i1adc_read_channel@channel 0077  
                 _currentMenu 0062              __size_of_scan360 0075               ___lwdiv@divisor 00A6  
             ___lwdiv@counter 00AD                   _menuStrings 01C2                      _highByte 00EE  
                    _lcd_init 15BB            i1readAvgDistance@i 0024                      _distance 0057  
                    _dist_low 0055              __size_of_sprintf 0100          ??i1_adc_read_channel 0076  
          i1___lwdiv@dividend 0078      __end_of_adc_read_channel 08C4     lcd_write_control@databyte 00A2  
               __size_of_Menu 0040                      _init_adc 1430                 __size_of_isr1 00EB  
               __size_of_main 00E7                 __size_of_init 0029           i1adc_read@adc_value 0074  
                    clear_ram 13BC                      _ser_init 1516      i1readAvgDistance@fullval 0022  
  __end_ofi1_lcd_write_string 15BB               _readAvgDistance 09BB                  ?_calibrateIR 0070  
              ?_UpdateDisplay 0070            i1___lwdiv@quotient 007C           _CenterDebounceCount 005B  
                _RTC_FLAG_1MS 0367            UpdateDisplay@F1223 0190                      intlevel1 0000  
              _lcd_set_cursor 13D7                     sprintf@ap 00BC                     sprintf@sp 00C3  
            ___lwmod@dividend 00B0                     stringcode 080A                   _serialInput 0067  
                 ??_ser_putch 00A0                   ??_robo_init 00A2         __size_of_spi_transfer 001E  
                 ??_robotMove 00A4                   ??_robotTurn 00A4                   ?_ADCconvert 0070  
           _lcd_write_control 148E              scan360@lowestVal 00DC   i1lcd_write_control@databyte 0072  
          ?_lcd_write_control 0070                    _OPTION_REG 0081                      sprintf@c 00C4  
                    sprintf@f 00B4               ___lwmod@divisor 00AE               ___lwmod@counter 00B3  
                    stringdir 080A               i1_UpdateDisplay 0459                      stringtab 0800  
         ??_lcd_write_control 00A0        __end_of_lcd_set_cursor 13E2              _lcd_write_string 07C3  
                _spi_transfer 14AA             _current_direction 0063                   _RTC_Counter 0051  
     __end_of_readAvgDistance 0A10                _lcd_write_data 1473  
