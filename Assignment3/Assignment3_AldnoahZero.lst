

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 13 16:05:50 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 31 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 31 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_rotate
    48                           	FNCALL	_init,_init_adc
    49                           	FNCALL	_init,_lcd_init
    50                           	FNCALL	_lcd_init,_lcd_write_control
    51                           	FNROOT	_main
    52                           	FNCALL	_isr1,___lwmod
    53                           	FNCALL	_isr1,_readAvgDistance
    54                           	FNCALL	_isr1,_ADCconvert
    55                           	FNCALL	_ADCconvert,___lwmod
    56                           	FNCALL	_ADCconvert,i1_lcd_write_control
    57                           	FNCALL	_ADCconvert,_sprintf
    58                           	FNCALL	_ADCconvert,_lcd_set_cursor
    59                           	FNCALL	_ADCconvert,_lcd_write_string
    60                           	FNCALL	_readAvgDistance,_adc_read_channel
    61                           	FNCALL	_readAvgDistance,___lwdiv
    62                           	FNCALL	_readAvgDistance,_sprintf
    63                           	FNCALL	_lcd_write_string,_lcd_write_data
    64                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    65                           	FNCALL	_sprintf,___lwdiv
    66                           	FNCALL	_sprintf,___lwmod
    67                           	FNCALL	_adc_read_channel,_adc_read
    68                           	FNCALL	intlevel1,_isr1
    69                           	global	intlevel1
    70                           	FNROOT	intlevel1
    71                           	global	_current_step
    72                           psect	idataBANK1,class=CODE,space=0,delta=2
    73                           global __pidataBANK1
    74  07FD                     __pidataBANK1:
    75                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
    76                           	line	21
    77                           
    78                           ;initializer for _current_step
    79  07FD  343C               	retlw	03Ch
    80                           	global	_dpowers
    81                           psect	strings,class=STRING,delta=2
    82                           global __pstrings
    83  0745                     __pstrings:
    84                           ;	global	stringdir,stringtab,__stringbase
    85  0745                     stringtab:
    86                           ;	String table - string pointers are 1 byte each
    87  0745                     stringcode:stringdir:
      + 0745                     stringdir:	
    88  0745  3007               movlw high(stringdir)
    89  0746  008A               movwf pclath
    90  0747  0804               movf fsr,w
    91  0748  0A84               incf fsr
    92  0749  0782               	addwf pc
    93  074A                     __stringbase:
    94  074A  3400               	retlw	0
    95                           psect	strings
    96                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
    97                           	line	350
    98  074B                     _dpowers:
    99  074B  3401               	retlw	01h
   100  074C  3400               	retlw	0
   101                           
   102  074D  340A               	retlw	0Ah
   103  074E  3400               	retlw	0
   104                           
   105  074F  3464               	retlw	064h
   106  0750  3400               	retlw	0
   107                           
   108  0751  34E8               	retlw	0E8h
   109  0752  3403               	retlw	03h
   110                           
   111  0753  3410               	retlw	010h
   112  0754  3427               	retlw	027h
   113                           
   114                           	global	_dpowers
   115                           	global	_RTC_Counter
   116                           	global	_pb0DebounceCount
   117                           	global	_pb1DebounceCount
   118                           	global	_pb2DebounceCount
   119                           	global	_pb3DebounceCount
   120                           	global	_RTC_FLAG_10MS
   121                           	global	_RTC_FLAG_1MS
   122                           	global	_RTC_FLAG_250MS
   123                           	global	_RTC_FLAG_500MS
   124                           	global	_RTC_FLAG_50MS
   125                           	global	_pb0Pressed
   126                           	global	_pb0Released
   127                           	global	_pb1Pressed
   128                           	global	_pb1Released
   129                           	global	_pb2Pressed
   130                           	global	_pb2Released
   131                           	global	_pb3Pressed
   132                           	global	_pb3Released
   133                           	global	ADCconvert@F1192
   134                           	global	readAvgDistance@F1184
   135                           	global	readDistance@F1189
   136                           	global	_current_direction
   137                           	global	_ADCON0
   138  001F                     _ADCON0	set	31
   139                           	global	_ADRESH
   140  001E                     _ADRESH	set	30
   141                           	global	_PORTA
   142  0005                     _PORTA	set	5
   143                           	global	_PORTC
   144  0007                     _PORTC	set	7
   145                           	global	_PORTD
   146  0008                     _PORTD	set	8
   147                           	global	_PORTE
   148  0009                     _PORTE	set	9
   149                           	global	_TMR0
   150  0001                     _TMR0	set	1
   151                           	global	_CARRY
   152  0018                     _CARRY	set	24
   153                           	global	_CHS0
   154  00FB                     _CHS0	set	251
   155                           	global	_CHS1
   156  00FC                     _CHS1	set	252
   157                           	global	_CHS2
   158  00FD                     _CHS2	set	253
   159                           	global	_GIE
   160  005F                     _GIE	set	95
   161                           	global	_GO
   162  00FA                     _GO	set	250
   163                           	global	_RB0
   164  0030                     _RB0	set	48
   165                           	global	_RB1
   166  0031                     _RB1	set	49
   167                           	global	_RB2
   168  0032                     _RB2	set	50
   169                           	global	_RB3
   170  0033                     _RB3	set	51
   171                           	global	_RB4
   172  0034                     _RB4	set	52
   173                           	global	_RB5
   174  0035                     _RB5	set	53
   175                           	global	_RE0
   176  0048                     _RE0	set	72
   177                           	global	_RE1
   178  0049                     _RE1	set	73
   179                           	global	_RE2
   180  004A                     _RE2	set	74
   181                           	global	_TMR0IE
   182  005D                     _TMR0IE	set	93
   183                           	global	_TMR0IF
   184  005A                     _TMR0IF	set	90
   185                           	global	_ADCON1
   186  009F                     _ADCON1	set	159
   187                           	global	_ADRESL
   188  009E                     _ADRESL	set	158
   189                           	global	_OPTION_REG
   190  0081                     _OPTION_REG	set	129
   191                           	global	_TRISA
   192  0085                     _TRISA	set	133
   193                           	global	_TRISB
   194  0086                     _TRISB	set	134
   195                           	global	_TRISC
   196  0087                     _TRISC	set	135
   197                           	global	_TRISD
   198  0088                     _TRISD	set	136
   199                           	global	_TRISE
   200  0089                     _TRISE	set	137
   201                           	global	_EEADR
   202  010D                     _EEADR	set	269
   203                           	global	_EEDATA
   204  010C                     _EEDATA	set	268
   205                           	global	_EECON1
   206  018C                     _EECON1	set	396
   207                           	global	_EECON2
   208  018D                     _EECON2	set	397
   209                           	global	_RD
   210  0C60                     _RD	set	3168
   211                           	global	_WR
   212  0C61                     _WR	set	3169
   213                           	global	_WREN
   214  0C62                     _WREN	set	3170
   215                           	
   216  0755                     STR_3:	
   217  0755  3444               	retlw	68	;'D'
   218  0756  3469               	retlw	105	;'i'
   219  0757  3473               	retlw	115	;'s'
   220  0758  3474               	retlw	116	;'t'
   221  0759  3461               	retlw	97	;'a'
   222  075A  346E               	retlw	110	;'n'
   223  075B  3463               	retlw	99	;'c'
   224  075C  3465               	retlw	101	;'e'
   225  075D  343A               	retlw	58	;':'
   226  075E  3420               	retlw	32	;' '
   227  075F  3425               	retlw	37	;'%'
   228  0760  3464               	retlw	100	;'d'
   229  0761  3463               	retlw	99	;'c'
   230  0762  346D               	retlw	109	;'m'
   231  0763  3400               	retlw	0
   232                           psect	strings
   233                           	
   234  0764                     STR_1:	
   235  0764  3441               	retlw	65	;'A'
   236  0765  3464               	retlw	100	;'d'
   237  0766  3463               	retlw	99	;'c'
   238  0767  3420               	retlw	32	;' '
   239  0768  3456               	retlw	86	;'V'
   240  0769  3461               	retlw	97	;'a'
   241  076A  346C               	retlw	108	;'l'
   242  076B  3475               	retlw	117	;'u'
   243  076C  3465               	retlw	101	;'e'
   244  076D  343A               	retlw	58	;':'
   245  076E  3420               	retlw	32	;' '
   246  076F  3425               	retlw	37	;'%'
   247  0770  3464               	retlw	100	;'d'
   248  0771  3400               	retlw	0
   249                           psect	strings
   250  0764                     STR_2	equ	STR_1+0
   251                           	file	"Assignment3_AldnoahZero.as"
   252                           	line	#
   253                           psect cinit,class=CODE,delta=2
   254                           global start_initialization
   255  07C4                     start_initialization:
   256                           
   257                           psect	bitbssBANK0,class=BANK0,bit,space=1
   258                           global __pbitbssBANK0
   259  0340                     __pbitbssBANK0:
   260  0340                     _RTC_FLAG_10MS:
   261  0340                            ds      1
   262                           
   263  0341                     _RTC_FLAG_1MS:
   264  0341                            ds      1
   265                           
   266  0342                     _RTC_FLAG_250MS:
   267  0342                            ds      1
   268                           
   269  0343                     _RTC_FLAG_500MS:
   270  0343                            ds      1
   271                           
   272  0344                     _RTC_FLAG_50MS:
   273  0344                            ds      1
   274                           
   275  0345                     _pb0Pressed:
   276  0345                            ds      1
   277                           
   278  0346                     _pb0Released:
   279  0346                            ds      1
   280                           
   281  0347                     _pb1Pressed:
   282  0347                            ds      1
   283                           
   284  0348                     _pb1Released:
   285  0348                            ds      1
   286                           
   287  0349                     _pb2Pressed:
   288  0349                            ds      1
   289                           
   290  034A                     _pb2Released:
   291  034A                            ds      1
   292                           
   293  034B                     _pb3Pressed:
   294  034B                            ds      1
   295                           
   296  034C                     _pb3Released:
   297  034C                            ds      1
   298                           
   299                           psect	bssBANK0,class=BANK0,space=1
   300                           global __pbssBANK0
   301  006A                     __pbssBANK0:
   302  006A                     _RTC_Counter:
   303  006A                            ds      2
   304                           
   305  006C                     _pb0DebounceCount:
   306  006C                            ds      1
   307                           
   308  006D                     _pb1DebounceCount:
   309  006D                            ds      1
   310                           
   311  006E                     _pb2DebounceCount:
   312  006E                            ds      1
   313                           
   314  006F                     _pb3DebounceCount:
   315  006F                            ds      1
   316                           
   317                           psect	bssBANK1,class=BANK1,space=1
   318                           global __pbssBANK1
   319  00A0                     __pbssBANK1:
   320  00A0                     ADCconvert@F1192:
   321  00A0                            ds      16
   322                           
   323  00B0                     readAvgDistance@F1184:
   324  00B0                            ds      16
   325                           
   326  00C0                     readDistance@F1189:
   327  00C0                            ds      16
   328                           
   329  00D0                     _current_direction:
   330  00D0                            ds      1
   331                           
   332                           psect	dataBANK1,class=BANK1,space=1
   333                           global __pdataBANK1
   334  00D6                     __pdataBANK1:
   335                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   336                           	line	21
   337  00D6                     _current_step:
   338  00D6                            ds      1
   339                           
   340                           psect clrtext,class=CODE,delta=2
   341                           global clear_ram
   342                           ;	Called with FSR containing the base address, and
   343                           ;	W with the last address+1
   344  0F86                     clear_ram:
   345  0F86  0064               	clrwdt			;clear the watchdog before getting into this loop
   346  0F87                     clrloop:
   347  0F87  0180               	clrf	indf		;clear RAM location pointed to by FSR
   348  0F88  0A84               	incf	fsr,f		;increment pointer
   349  0F89  0604               	xorwf	fsr,w		;XOR with final address
   350  0F8A  1903               	btfsc	status,2	;have we reached the end yet?
   351  0F8B  3400               	retlw	0		;all done for this memory range, return
   352  0F8C  0604               	xorwf	fsr,w		;XOR again to restore value
   353  0F8D  2F87               	goto	clrloop		;do the next byte
   354                           
   355                           ; Clear objects allocated to BITBANK0
   356                           psect cinit,class=CODE,delta=2
   357  07C4  01E8               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   358  07C5  01E9               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   359                           ; Clear objects allocated to BANK0
   360                           psect cinit,class=CODE,delta=2
   361  07C6  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   362  07C7  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   363  07C8  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   364  07C9  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   365  07CA  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   366  07CB  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   367                           ; Clear objects allocated to BANK1
   368                           psect cinit,class=CODE,delta=2
   369  07CC  1383               	bcf	status, 7	;select IRP bank0
   370  07CD  30A0               	movlw	low(__pbssBANK1)
   371  07CE  0084               	movwf	fsr
   372  07CF  30D1               	movlw	low((__pbssBANK1)+031h)
   373  07D0  120A  158A  2786   	fcall	clear_ram
              120A  118A         
   374                           ; Initialize objects allocated to BANK1
   375                           	global __pidataBANK1
   376                           psect cinit,class=CODE,delta=2
   377  07D5  1683               	bsf	status, 5	;RP0=1, select bank1
   378  07D6  1303               	bcf	status, 6	;RP1=0, select bank1
   379  07D7  120A  118A  27FD   	fcall	__pidataBANK1+0		;fetch initializer
              120A  118A         
   380  07DC  00D6               	movwf	__pdataBANK1+0&07fh		
   381                           psect cinit,class=CODE,delta=2
   382                           global end_of_initialization
   383                           
   384                           ;End of C runtime variable initialization code
   385                           
   386  07DD                     end_of_initialization:
   387  07DD  0183               clrf status
   388  07DE  120A  118A  2E18   ljmp _main	;jump to C main() function
   389                           psect	cstackBANK1,class=BANK1,space=1
   390                           global __pcstackBANK1
   391  00D1                     __pcstackBANK1:
   392                           	global	?_rotate
   393  00D1                     ?_rotate:	; 0 bytes @ 0x0
   394                           	global	??_init_adc
   395  00D1                     ??_init_adc:	; 0 bytes @ 0x0
   396                           	global	??_lcd_write_control
   397  00D1                     ??_lcd_write_control:	; 0 bytes @ 0x0
   398                           	global	rotate@direction
   399  00D1                     rotate@direction:	; 1 bytes @ 0x0
   400  00D1                     	ds	1
   401                           	global	??_rotate
   402  00D2                     ??_rotate:	; 0 bytes @ 0x1
   403  00D2                     	ds	1
   404                           	global	lcd_write_control@databyte
   405  00D3                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   406  00D3                     	ds	1
   407                           	global	??_lcd_init
   408  00D4                     ??_lcd_init:	; 0 bytes @ 0x3
   409                           	global	??_init
   410  00D4                     ??_init:	; 0 bytes @ 0x3
   411                           	global	rotate@steps
   412  00D4                     rotate@steps:	; 1 bytes @ 0x3
   413  00D4                     	ds	1
   414                           	global	??_main
   415  00D5                     ??_main:	; 0 bytes @ 0x4
   416  00D5                     	ds	1
   417                           psect	cstackCOMMON,class=COMMON,space=1
   418                           global __pcstackCOMMON
   419  0070                     __pcstackCOMMON:
   420                           	global	?_init_adc
   421  0070                     ?_init_adc:	; 0 bytes @ 0x0
   422                           	global	?_lcd_write_control
   423  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   424                           	global	?_lcd_write_data
   425  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   426                           	global	??_lcd_write_data
   427  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   428                           	global	?_lcd_set_cursor
   429  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   430                           	global	?_lcd_write_string
   431  0070                     ?_lcd_write_string:	; 0 bytes @ 0x0
   432                           	global	?_lcd_init
   433  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   434                           	global	?_isr1
   435  0070                     ?_isr1:	; 0 bytes @ 0x0
   436                           	global	?_init
   437  0070                     ?_init:	; 0 bytes @ 0x0
   438                           	global	?_main
   439  0070                     ?_main:	; 0 bytes @ 0x0
   440                           	global	?i1_lcd_write_control
   441  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   442                           	global	??i1_lcd_write_control
   443  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   444                           	global	?_adc_read_channel
   445  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   446                           	global	?_adc_read
   447  0070                     ?_adc_read:	; 2 bytes @ 0x0
   448                           	global	?___lwdiv
   449  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   450                           	global	___lwdiv@divisor
   451  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   452  0070                     	ds	2
   453                           	global	??_adc_read
   454  0072                     ??_adc_read:	; 0 bytes @ 0x2
   455                           	global	lcd_write_data@databyte
   456  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   457                           	global	i1lcd_write_control@databyte
   458  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   459                           	global	___lwdiv@dividend
   460  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   461  0072                     	ds	1
   462                           	global	??_lcd_set_cursor
   463  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   464                           	global	??_lcd_write_string
   465  0073                     ??_lcd_write_string:	; 0 bytes @ 0x3
   466                           	global	lcd_set_cursor@address
   467  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   468  0073                     	ds	1
   469                           	global	??___lwdiv
   470  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   471                           	global	lcd_write_string@s
   472  0074                     lcd_write_string@s:	; 1 bytes @ 0x4
   473                           	global	adc_read@adc_value
   474  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   475  0074                     	ds	1
   476                           	global	___lwdiv@quotient
   477  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   478  0075                     	ds	1
   479                           	global	??_adc_read_channel
   480  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   481  0076                     	ds	1
   482                           	global	adc_read_channel@channel
   483  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   484                           	global	___lwdiv@counter
   485  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   486  0077                     	ds	1
   487                           	global	?___lwmod
   488  0078                     ?___lwmod:	; 2 bytes @ 0x8
   489                           	global	___lwmod@divisor
   490  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   491  0078                     	ds	2
   492                           	global	___lwmod@dividend
   493  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   494  007A                     	ds	2
   495                           	global	??___lwmod
   496  007C                     ??___lwmod:	; 0 bytes @ 0xC
   497  007C                     	ds	1
   498                           	global	___lwmod@counter
   499  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   500  007D                     	ds	1
   501                           psect	cstackBANK0,class=BANK0,space=1
   502                           global __pcstackBANK0
   503  0020                     __pcstackBANK0:
   504                           	global	?_sprintf
   505  0020                     ?_sprintf:	; 2 bytes @ 0x0
   506                           	global	sprintf@f
   507  0020                     sprintf@f:	; 1 bytes @ 0x0
   508  0020                     	ds	3
   509                           	global	??_sprintf
   510  0023                     ??_sprintf:	; 0 bytes @ 0x3
   511  0023                     	ds	3
   512                           	global	sprintf@ap
   513  0026                     sprintf@ap:	; 1 bytes @ 0x6
   514  0026                     	ds	1
   515                           	global	sprintf@flag
   516  0027                     sprintf@flag:	; 1 bytes @ 0x7
   517  0027                     	ds	1
   518                           	global	sprintf@prec
   519  0028                     sprintf@prec:	; 1 bytes @ 0x8
   520  0028                     	ds	1
   521                           	global	sprintf@_val
   522  0029                     sprintf@_val:	; 4 bytes @ 0x9
   523  0029                     	ds	4
   524                           	global	sprintf@sp
   525  002D                     sprintf@sp:	; 1 bytes @ 0xD
   526  002D                     	ds	1
   527                           	global	sprintf@c
   528  002E                     sprintf@c:	; 1 bytes @ 0xE
   529  002E                     	ds	1
   530                           	global	?_readAvgDistance
   531  002F                     ?_readAvgDistance:	; 2 bytes @ 0xF
   532  002F                     	ds	2
   533                           	global	??_readAvgDistance
   534  0031                     ??_readAvgDistance:	; 0 bytes @ 0x11
   535  0031                     	ds	4
   536                           	global	readAvgDistance@adcOutput
   537  0035                     readAvgDistance@adcOutput:	; 16 bytes @ 0x15
   538  0035                     	ds	16
   539                           	global	readAvgDistance@fullval
   540  0045                     readAvgDistance@fullval:	; 2 bytes @ 0x25
   541  0045                     	ds	2
   542                           	global	readAvgDistance@averageval
   543  0047                     readAvgDistance@averageval:	; 2 bytes @ 0x27
   544  0047                     	ds	2
   545                           	global	readAvgDistance@i
   546  0049                     readAvgDistance@i:	; 2 bytes @ 0x29
   547  0049                     	ds	2
   548                           	global	?_ADCconvert
   549  004B                     ?_ADCconvert:	; 0 bytes @ 0x2B
   550                           	global	ADCconvert@adcVal
   551  004B                     ADCconvert@adcVal:	; 2 bytes @ 0x2B
   552  004B                     	ds	2
   553                           	global	??_ADCconvert
   554  004D                     ??_ADCconvert:	; 0 bytes @ 0x2D
   555  004D                     	ds	4
   556                           	global	ADCconvert@adcOutput
   557  0051                     ADCconvert@adcOutput:	; 16 bytes @ 0x31
   558  0051                     	ds	16
   559                           	global	ADCconvert@distance
   560  0061                     ADCconvert@distance:	; 2 bytes @ 0x41
   561  0061                     	ds	2
   562                           	global	??_isr1
   563  0063                     ??_isr1:	; 0 bytes @ 0x43
   564  0063                     	ds	5
   565 ;;Data sizes: Strings 29, constant 10, data 1, bss 55, persistent 0 stack 0
   566 ;;Auto spaces:   Size  Autos    Used
   567 ;; COMMON          14     14      14
   568 ;; BANK0           80     72      80
   569 ;; BANK1           80      5      55
   570 ;; BANK3           96      0       0
   571 ;; BANK2           96      0       0
   572                           
   573 ;;
   574 ;; Pointer list with targets:
   575                           
   576 ;; ?_readAvgDistance	unsigned int  size(1) Largest target is 0
   577 ;;
   578 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   579 ;;
   580 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   581 ;;
   582 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   583 ;;
   584 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   585 ;;		 -> STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[14]), 
   586 ;;
   587 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   588 ;;		 -> ADCconvert@adcOutput(BANK0[16]), readDistance@adcOutput(BANK0[16]), readAvgDistance@adcOutput(BANK0[16]), 
   589 ;;
   590 ;; ?_sprintf	int  size(1) Largest target is 0
   591 ;;
   592 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   593 ;;		 -> ?_sprintf(BANK0[2]), 
   594 ;;
   595 ;; S4646$_cp	PTR const unsigned char  size(1) Largest target is 0
   596 ;;
   597 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   598 ;;
   599 ;; lcd_write_string@s	PTR unsigned char  size(1) Largest target is 16
   600 ;;		 -> ADCconvert@adcOutput(BANK0[16]), readDistance@adcOutput(BANK0[16]), 
   601 ;;
   602                           
   603                           
   604 ;;
   605 ;; Critical Paths under _main in COMMON
   606 ;;
   607 ;;   None.
   608 ;;
   609 ;; Critical Paths under _isr1 in COMMON
   610 ;;
   611 ;;   _isr1->___lwmod
   612 ;;   _ADCconvert->___lwmod
   613 ;;   _lcd_write_string->_lcd_write_data
   614 ;;   _lcd_set_cursor->i1_lcd_write_control
   615 ;;   _sprintf->___lwmod
   616 ;;   _adc_read_channel->_adc_read
   617 ;;   ___lwmod->___lwdiv
   618 ;;
   619 ;; Critical Paths under _main in BANK0
   620 ;;
   621 ;;   None.
   622 ;;
   623 ;; Critical Paths under _isr1 in BANK0
   624 ;;
   625 ;;   _isr1->_ADCconvert
   626 ;;   _ADCconvert->_readAvgDistance
   627 ;;   _readAvgDistance->_sprintf
   628 ;;
   629 ;; Critical Paths under _main in BANK1
   630 ;;
   631 ;;   _main->_rotate
   632 ;;   _lcd_init->_lcd_write_control
   633 ;;
   634 ;; Critical Paths under _isr1 in BANK1
   635 ;;
   636 ;;   None.
   637 ;;
   638 ;; Critical Paths under _main in BANK3
   639 ;;
   640 ;;   None.
   641 ;;
   642 ;; Critical Paths under _isr1 in BANK3
   643 ;;
   644 ;;   None.
   645 ;;
   646 ;; Critical Paths under _main in BANK2
   647 ;;
   648 ;;   None.
   649 ;;
   650 ;; Critical Paths under _isr1 in BANK2
   651 ;;
   652 ;;   None.
   653                           
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   656 ;;
   657                           
   658 ;;
   659 ;;Call Graph Tables:
   660 ;;
   661 ;; ---------------------------------------------------------------------------------
   662 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (0) _main                                                 1     1      0     111
   665 ;;                                              4 BANK1      1     1      0
   666 ;;                               _init
   667 ;;                             _rotate
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (1) _init                                                 0     0      0      22
   670 ;;                           _init_adc
   671 ;;                           _lcd_init
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (2) _lcd_init                                             0     0      0      22
   674 ;;                  _lcd_write_control
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (1) _rotate                                               4     3      1      89
   677 ;;                                              0 BANK1      4     3      1
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (3) _lcd_write_control                                    3     3      0      22
   680 ;;                                              0 BANK1      3     3      0
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (2) _init_adc                                             1     1      0       0
   683 ;;                                              0 BANK1      1     1      0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; Estimated maximum stack depth 3
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (4) _isr1                                                 5     5      0    3386
   690 ;;                                             67 BANK0      5     5      0
   691 ;;                            ___lwmod
   692 ;;                    _readAvgDistance
   693 ;;                         _ADCconvert
   694 ;; ---------------------------------------------------------------------------------
   695 ;; (5) _ADCconvert                                          24    22      2    2075
   696 ;;                                             43 BANK0     24    22      2
   697 ;;                            ___lwmod
   698 ;;                i1_lcd_write_control
   699 ;;                            _sprintf
   700 ;;                     _lcd_set_cursor
   701 ;;                   _lcd_write_string
   702 ;;                    _readAvgDistance (ARG)
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (5) _readAvgDistance                                     28    26      2    1152
   705 ;;                                             15 BANK0     28    26      2
   706 ;;                   _adc_read_channel
   707 ;;                            ___lwdiv
   708 ;;                            _sprintf
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (6) _lcd_write_string                                     2     2      0      67
   711 ;;                                              3 COMMON     2     2      0
   712 ;;                     _lcd_write_data
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (6) _lcd_set_cursor                                       1     1      0      96
   715 ;;                                              3 COMMON     1     1      0
   716 ;;                i1_lcd_write_control
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (7) i1_lcd_write_control                                  3     3      0      73
   719 ;;                                              0 COMMON     3     3      0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (6) _sprintf                                             15    12      3     798
   722 ;;                                              0 BANK0     15    12      3
   723 ;;                            ___lwdiv
   724 ;;                            ___lwmod
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (7) _lcd_write_data                                       3     3      0      22
   727 ;;                                              0 COMMON     3     3      0
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (6) _adc_read_channel                                     2     2      0      46
   730 ;;                                              6 COMMON     2     2      0
   731 ;;                           _adc_read
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (7) ___lwmod                                              6     2      4     159
   734 ;;                                              8 COMMON     6     2      4
   735 ;;                            ___lwdiv (ARG)
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (7) ___lwdiv                                              8     4      4     162
   738 ;;                                              0 COMMON     8     4      4
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (7) _adc_read                                             6     4      2      24
   741 ;;                                              0 COMMON     6     4      2
   742 ;; ---------------------------------------------------------------------------------
   743 ;; Estimated maximum stack depth 7
   744 ;; ---------------------------------------------------------------------------------
   745                           
   746 ;; Call Graph Graphs:
   747                           
   748 ;; _main (ROOT)
   749 ;;   _init
   750 ;;     _init_adc
   751 ;;     _lcd_init
   752 ;;       _lcd_write_control
   753 ;;   _rotate
   754 ;;
   755 ;; _isr1 (ROOT)
   756 ;;   ___lwmod
   757 ;;     ___lwdiv (ARG)
   758 ;;   _readAvgDistance
   759 ;;     _adc_read_channel
   760 ;;       _adc_read
   761 ;;     ___lwdiv
   762 ;;     _sprintf
   763 ;;       ___lwdiv
   764 ;;       ___lwmod
   765 ;;         ___lwdiv (ARG)
   766 ;;   _ADCconvert
   767 ;;     ___lwmod
   768 ;;       ___lwdiv (ARG)
   769 ;;     i1_lcd_write_control
   770 ;;     _sprintf
   771 ;;       ___lwdiv
   772 ;;       ___lwmod
   773 ;;         ___lwdiv (ARG)
   774 ;;     _lcd_set_cursor
   775 ;;       i1_lcd_write_control
   776 ;;     _lcd_write_string
   777 ;;       _lcd_write_data
   778 ;;     _readAvgDistance (ARG)
   779 ;;       _adc_read_channel
   780 ;;         _adc_read
   781 ;;       ___lwdiv
   782 ;;       _sprintf
   783 ;;         ___lwdiv
   784 ;;         ___lwmod
   785 ;;           ___lwdiv (ARG)
   786 ;;
   787                           
   788 ;; Address spaces:
   789                           
   790 ;;Name               Size   Autos  Total    Cost      Usage
   791 ;;BANK3               60      0       0       9        0.0%
   792 ;;BITBANK3            60      0       0       8        0.0%
   793 ;;SFR3                 0      0       0       4        0.0%
   794 ;;BITSFR3              0      0       0       4        0.0%
   795 ;;BANK2               60      0       0      11        0.0%
   796 ;;BITBANK2            60      0       0      10        0.0%
   797 ;;SFR2                 0      0       0       5        0.0%
   798 ;;BITSFR2              0      0       0       5        0.0%
   799 ;;SFR1                 0      0       0       2        0.0%
   800 ;;BITSFR1              0      0       0       2        0.0%
   801 ;;BANK1               50      5      37       7       68.8%
   802 ;;BITBANK1            50      0       0       6        0.0%
   803 ;;CODE                 0      0       0       0        0.0%
   804 ;;DATA                 0      0      A0      12        0.0%
   805 ;;ABS                  0      0      95       3        0.0%
   806 ;;NULL                 0      0       0       0        0.0%
   807 ;;STACK                0      0       B       2        0.0%
   808 ;;BANK0               50     48      50       5      100.0%
   809 ;;BITBANK0            50      0       2       4        2.5%
   810 ;;SFR0                 0      0       0       1        0.0%
   811 ;;BITSFR0              0      0       0       1        0.0%
   812 ;;COMMON               E      E       E       1      100.0%
   813 ;;BITCOMMON            E      0       0       0        0.0%
   814 ;;EEDATA             100      0       0       0        0.0%
   815                           
   816                           	global	_main
   817                           psect	maintext,global,class=CODE,delta=2
   818                           global __pmaintext
   819  0618                     __pmaintext:
   820                           
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 207 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;		None               void
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 17F/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0
   839 ;;      Temps:          0       0       1       0       0
   840 ;;      Totals:         0       0       1       0       0
   841 ;;Total ram usage:        1 bytes
   842 ;; Hardware stack levels required when called:    7
   843 ;; This function calls:
   844 ;;		_init
   845 ;;		_rotate
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           psect	maintext
   851                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
   852                           	line	207
   853                           	global	__size_of_main
   854  005A                     	__size_of_main	equ	__end_of_main-_main
   855                           	
   856  0618                     _main:	
   857                           	opt	stack 1
   858                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   859                           	line	212
   860                           	
   861  0618                     l6838:	
   862                           ;Main.c: 212: init();
   863  0618  120A  158A  27D2   	fcall	_init
              120A  118A         
   864                           	line	214
   865                           	
   866  061D                     l6840:	
   867                           ;Main.c: 214: rotate(8, 0);
   868  061D  1683               	bsf	status, 5	;RP0=1, select bank1
   869  061E  1303               	bcf	status, 6	;RP1=0, select bank1
   870  061F  01D1               	clrf	(?_rotate)^080h
   871  0620  3008               	movlw	(08h)
   872  0621  120A  118A  2271   	fcall	_rotate
              120A  118A         
   873  0626  2E27               	goto	l6842
   874                           	line	217
   875                           ;Main.c: 217: while(1)
   876                           	
   877  0627                     l2179:	
   878                           	line	219
   879                           	
   880  0627                     l6842:	
   881                           ;Main.c: 218: {
   882                           ;Main.c: 219: if(pb0Pressed)
   883  0627  1283               	bcf	status, 5	;RP0=0, select bank0
   884  0628  1303               	bcf	status, 6	;RP1=0, select bank0
   885  0629  1EE8               	btfss	(_pb0Pressed/8),(_pb0Pressed)&7
   886  062A  2E2C               	goto	u3671
   887  062B  2E2D               	goto	u3670
   888  062C                     u3671:
   889  062C  2E31               	goto	l6848
   890  062D                     u3670:
   891                           	line	221
   892                           	
   893  062D                     l6844:	
   894                           ;Main.c: 220: {
   895                           ;Main.c: 221: pb0Pressed = 0;
   896  062D  12E8               	bcf	(_pb0Pressed/8),(_pb0Pressed)&7
   897                           	line	224
   898                           	
   899  062E                     l6846:	
   900                           ;Main.c: 224: RB1 ^= 0x01;
   901  062E  3002               	movlw	1<<((49)&7)
   902  062F  0686               	xorwf	((49)/8),f
   903  0630  2E31               	goto	l6848
   904                           	line	227
   905                           	
   906  0631                     l2180:	
   907                           	line	229
   908                           	
   909  0631                     l6848:	
   910                           ;Main.c: 227: }
   911                           ;Main.c: 229: if(pb1Pressed)
   912  0631  1FE8               	btfss	(_pb1Pressed/8),(_pb1Pressed)&7
   913  0632  2E34               	goto	u3681
   914  0633  2E35               	goto	u3680
   915  0634                     u3681:
   916  0634  2E42               	goto	l6854
   917  0635                     u3680:
   918                           	line	231
   919                           	
   920  0635                     l6850:	
   921                           ;Main.c: 230: {
   922                           ;Main.c: 231: pb1Pressed = 0;
   923  0635  13E8               	bcf	(_pb1Pressed/8),(_pb1Pressed)&7
   924                           	line	233
   925                           	
   926  0636                     l6852:	
   927                           ;Main.c: 233: rotate(2, 1);
   928  0636  1683               	bsf	status, 5	;RP0=1, select bank1
   929  0637  1303               	bcf	status, 6	;RP1=0, select bank1
   930  0638  01D1               	clrf	(?_rotate)^080h
   931  0639  1403               	bsf	status,0
   932  063A  0DD1               	rlf	(?_rotate)^080h,f
   933  063B  3002               	movlw	(02h)
   934  063C  120A  118A  2271   	fcall	_rotate
              120A  118A         
   935  0641  2E42               	goto	l6854
   936                           	line	234
   937                           	
   938  0642                     l2181:	
   939                           	line	236
   940                           	
   941  0642                     l6854:	
   942                           ;Main.c: 234: }
   943                           ;Main.c: 236: if(pb2Pressed)
   944  0642  1283               	bcf	status, 5	;RP0=0, select bank0
   945  0643  1303               	bcf	status, 6	;RP1=0, select bank0
   946  0644  1CE9               	btfss	(_pb2Pressed/8),(_pb2Pressed)&7
   947  0645  2E47               	goto	u3691
   948  0646  2E48               	goto	u3690
   949  0647                     u3691:
   950  0647  2E53               	goto	l6860
   951  0648                     u3690:
   952                           	line	238
   953                           	
   954  0648                     l6856:	
   955                           ;Main.c: 237: {
   956                           ;Main.c: 238: pb2Pressed = 0;
   957  0648  10E9               	bcf	(_pb2Pressed/8),(_pb2Pressed)&7
   958                           	line	240
   959                           	
   960  0649                     l6858:	
   961                           ;Main.c: 240: rotate(2, 0);
   962  0649  1683               	bsf	status, 5	;RP0=1, select bank1
   963  064A  1303               	bcf	status, 6	;RP1=0, select bank1
   964  064B  01D1               	clrf	(?_rotate)^080h
   965  064C  3002               	movlw	(02h)
   966  064D  120A  118A  2271   	fcall	_rotate
              120A  118A         
   967  0652  2E53               	goto	l6860
   968                           	line	241
   969                           	
   970  0653                     l2182:	
   971                           	line	243
   972                           	
   973  0653                     l6860:	
   974                           ;Main.c: 241: }
   975                           ;Main.c: 243: if(pb3Pressed)
   976  0653  1283               	bcf	status, 5	;RP0=0, select bank0
   977  0654  1303               	bcf	status, 6	;RP1=0, select bank0
   978  0655  1DE9               	btfss	(_pb3Pressed/8),(_pb3Pressed)&7
   979  0656  2E58               	goto	u3701
   980  0657  2E59               	goto	u3700
   981  0658                     u3701:
   982  0658  2E27               	goto	l6842
   983  0659                     u3700:
   984                           	line	245
   985                           	
   986  0659                     l6862:	
   987                           ;Main.c: 244: {
   988                           ;Main.c: 245: pb3Pressed = 0;
   989  0659  11E9               	bcf	(_pb3Pressed/8),(_pb3Pressed)&7
   990                           	line	247
   991                           	
   992  065A                     l6864:	
   993                           ;Main.c: 247: rotate(200, current_direction);
   994  065A  1683               	bsf	status, 5	;RP0=1, select bank1
   995  065B  1303               	bcf	status, 6	;RP1=0, select bank1
   996  065C  0850               	movf	(_current_direction)^080h,w
   997  065D  00D5               	movwf	(??_main+0)^080h+0
   998  065E  0855               	movf	(??_main+0)^080h+0,w
   999  065F  00D1               	movwf	(?_rotate)^080h
  1000  0660  30C8               	movlw	(0C8h)
  1001  0661  120A  118A  2271   	fcall	_rotate
              120A  118A         
  1002                           	line	248
  1003                           	
  1004  0666                     l6866:	
  1005                           ;Main.c: 248: current_direction ^= 0x01;
  1006  0666  3001               	movlw	(01h)
  1007  0667  1683               	bsf	status, 5	;RP0=1, select bank1
  1008  0668  1303               	bcf	status, 6	;RP1=0, select bank1
  1009  0669  00D5               	movwf	(??_main+0)^080h+0
  1010  066A  0855               	movf	(??_main+0)^080h+0,w
  1011  066B  06D0               	xorwf	(_current_direction)^080h,f
  1012  066C  2E27               	goto	l6842
  1013                           	line	249
  1014                           	
  1015  066D                     l2183:	
  1016  066D  2E27               	goto	l6842
  1017                           	line	250
  1018                           	
  1019  066E                     l2184:	
  1020                           	line	217
  1021  066E  2E27               	goto	l6842
  1022                           	
  1023  066F                     l2185:	
  1024                           	line	251
  1025                           	
  1026  066F                     l2186:	
  1027                           	global	start
  1028  066F  120A  118A  2812   	ljmp	start
  1029                           	opt stack 0
  1030                           GLOBAL	__end_of_main
  1031  0672                     	__end_of_main:
  1032 ;; =============== function _main ends ============
  1033                           
  1034                           	signat	_main,88
  1035                           	global	_init
  1036                           psect	text457,local,class=CODE,delta=2
  1037                           global __ptext457
  1038  0FD2                     __ptext457:
  1039                           
  1040 ;; *************** function _init *****************
  1041 ;; Defined at:
  1042 ;;		line 179 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;		None               void
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0
  1059 ;;      Totals:         0       0       0       0       0
  1060 ;;Total ram usage:        0 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    6
  1063 ;; This function calls:
  1064 ;;		_init_adc
  1065 ;;		_lcd_init
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           psect	text457
  1071                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1072                           	line	179
  1073                           	global	__size_of_init
  1074  0014                     	__size_of_init	equ	__end_of_init-_init
  1075                           	
  1076  0FD2                     _init:	
  1077                           	opt	stack 1
  1078                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1079                           	line	180
  1080                           	
  1081  0FD2                     l6826:	
  1082                           ;Main.c: 180: init_adc();
  1083  0FD2  120A  158A  27BE   	fcall	_init_adc
              120A  158A         
  1084                           	line	181
  1085                           ;Main.c: 181: lcd_init();
  1086  0FD7  120A  118A  2772   	fcall	_lcd_init
              120A  158A         
  1087                           	line	183
  1088                           	
  1089  0FDC                     l6828:	
  1090                           ;Main.c: 183: TRISB = 0b11111100;
  1091  0FDC  30FC               	movlw	(0FCh)
  1092  0FDD  1683               	bsf	status, 5	;RP0=1, select bank1
  1093  0FDE  1303               	bcf	status, 6	;RP1=0, select bank1
  1094  0FDF  0086               	movwf	(134)^080h	;volatile
  1095                           	line	186
  1096                           	
  1097  0FE0                     l6830:	
  1098                           ;Main.c: 186: TRISC = 0x00;
  1099  0FE0  0187               	clrf	(135)^080h	;volatile
  1100                           	line	189
  1101                           	
  1102  0FE1                     l6832:	
  1103                           ;Main.c: 189: OPTION_REG = 0b00000100;
  1104  0FE1  3004               	movlw	(04h)
  1105  0FE2  0081               	movwf	(129)^080h	;volatile
  1106                           	line	192
  1107                           	
  1108  0FE3                     l6834:	
  1109                           ;Main.c: 192: TMR0IE = 1;
  1110  0FE3  168B               	bsf	(93/8),(93)&7
  1111                           	line	195
  1112                           	
  1113  0FE4                     l6836:	
  1114                           ;Main.c: 195: (GIE = 1);
  1115  0FE4  178B               	bsf	(95/8),(95)&7
  1116                           	line	196
  1117                           	
  1118  0FE5                     l2176:	
  1119  0FE5  0008               	return
  1120                           	opt stack 0
  1121                           GLOBAL	__end_of_init
  1122  0FE6                     	__end_of_init:
  1123 ;; =============== function _init ends ============
  1124                           
  1125                           	signat	_init,88
  1126                           	global	_lcd_init
  1127                           psect	text458,local,class=CODE,delta=2
  1128                           global __ptext458
  1129  0772                     __ptext458:
  1130                           
  1131 ;; *************** function _lcd_init *****************
  1132 ;; Defined at:
  1133 ;;		line 101 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;		None               void
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    5
  1154 ;; This function calls:
  1155 ;;		_lcd_write_control
  1156 ;; This function is called by:
  1157 ;;		_init
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           psect	text458
  1161                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  1162                           	line	101
  1163                           	global	__size_of_lcd_init
  1164  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1165                           	
  1166  0772                     _lcd_init:	
  1167                           	opt	stack 1
  1168                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1169                           	line	105
  1170                           	
  1171  0772                     l6806:	
  1172                           ;lcd.c: 105: ADCON1 = 0b00000010;
  1173  0772  3002               	movlw	(02h)
  1174  0773  1683               	bsf	status, 5	;RP0=1, select bank1
  1175  0774  1303               	bcf	status, 6	;RP1=0, select bank1
  1176  0775  009F               	movwf	(159)^080h	;volatile
  1177                           	line	108
  1178                           	
  1179  0776                     l6808:	
  1180                           ;lcd.c: 108: PORTD = 0;
  1181  0776  1283               	bcf	status, 5	;RP0=0, select bank0
  1182  0777  1303               	bcf	status, 6	;RP1=0, select bank0
  1183  0778  0188               	clrf	(8)	;volatile
  1184                           	line	109
  1185                           	
  1186  0779                     l6810:	
  1187                           ;lcd.c: 109: PORTE = 0;
  1188  0779  0189               	clrf	(9)	;volatile
  1189                           	line	111
  1190                           	
  1191  077A                     l6812:	
  1192                           ;lcd.c: 111: TRISD = 0b00000000;
  1193  077A  1683               	bsf	status, 5	;RP0=1, select bank1
  1194  077B  1303               	bcf	status, 6	;RP1=0, select bank1
  1195  077C  0188               	clrf	(136)^080h	;volatile
  1196                           	line	112
  1197                           	
  1198  077D                     l6814:	
  1199                           ;lcd.c: 112: TRISE = 0b00000000;
  1200  077D  0189               	clrf	(137)^080h	;volatile
  1201                           	line	115
  1202                           	
  1203  077E                     l6816:	
  1204                           ;lcd.c: 115: lcd_write_control(0b00000001);
  1205  077E  3001               	movlw	(01h)
  1206  077F  120A  118A  27E1   	fcall	_lcd_write_control
              120A  118A         
  1207                           	line	116
  1208                           	
  1209  0784                     l6818:	
  1210                           ;lcd.c: 116: lcd_write_control(0b00111000);
  1211  0784  3038               	movlw	(038h)
  1212  0785  120A  118A  27E1   	fcall	_lcd_write_control
              120A  118A         
  1213                           	line	117
  1214                           	
  1215  078A                     l6820:	
  1216                           ;lcd.c: 117: lcd_write_control(0b00001100);
  1217  078A  300C               	movlw	(0Ch)
  1218  078B  120A  118A  27E1   	fcall	_lcd_write_control
              120A  118A         
  1219                           	line	118
  1220                           	
  1221  0790                     l6822:	
  1222                           ;lcd.c: 118: lcd_write_control(0b00000110);
  1223  0790  3006               	movlw	(06h)
  1224  0791  120A  118A  27E1   	fcall	_lcd_write_control
              120A  118A         
  1225                           	line	119
  1226                           	
  1227  0796                     l6824:	
  1228                           ;lcd.c: 119: lcd_write_control(0b00000010);
  1229  0796  3002               	movlw	(02h)
  1230  0797  120A  118A  27E1   	fcall	_lcd_write_control
              120A  118A         
  1231                           	line	121
  1232                           	
  1233  079C                     l1423:	
  1234  079C  0008               	return
  1235                           	opt stack 0
  1236                           GLOBAL	__end_of_lcd_init
  1237  079D                     	__end_of_lcd_init:
  1238 ;; =============== function _lcd_init ends ============
  1239                           
  1240                           	signat	_lcd_init,88
  1241                           	global	_rotate
  1242                           psect	text459,local,class=CODE,delta=2
  1243                           global __ptext459
  1244  0271                     __ptext459:
  1245                           
  1246 ;; *************** function _rotate *****************
  1247 ;; Defined at:
  1248 ;;		line 26 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  steps           1    wreg     unsigned char 
  1251 ;;  direction       1    0[BANK1 ] unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  steps           1    3[BANK1 ] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;		None               void
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       1       0       0
  1264 ;;      Locals:         0       0       1       0       0
  1265 ;;      Temps:          0       0       2       0       0
  1266 ;;      Totals:         0       0       4       0       0
  1267 ;;Total ram usage:        4 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    4
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           psect	text459
  1277                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  1278                           	line	26
  1279                           	global	__size_of_rotate
  1280  012B                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  1281                           	
  1282  0271                     _rotate:	
  1283                           	opt	stack 3
  1284                           ; Regs used in _rotate: [wreg-fsr0h+status,2+status,0]
  1285                           ;rotate@steps stored from wreg
  1286                           	line	29
  1287  0271  1683               	bsf	status, 5	;RP0=1, select bank1
  1288  0272  1303               	bcf	status, 6	;RP1=0, select bank1
  1289  0273  00D4               	movwf	(rotate@steps)^080h
  1290                           	
  1291  0274                     l6744:	
  1292                           ;steppermotor.c: 29: for(;steps!=0;--steps)
  1293  0274  08D4               	movf	(rotate@steps)^080h,f
  1294  0275  1D03               	skipz
  1295  0276  2A78               	goto	u3631
  1296  0277  2A79               	goto	u3630
  1297  0278                     u3631:
  1298  0278  2A7B               	goto	l6748
  1299  0279                     u3630:
  1300  0279  2B97               	goto	l6804
  1301                           	
  1302  027A                     l6746:	
  1303  027A  2B97               	goto	l6804
  1304                           	line	30
  1305                           	
  1306  027B                     l3611:	
  1307                           	line	31
  1308                           	
  1309  027B                     l6748:	
  1310                           ;steppermotor.c: 30: {
  1311                           ;steppermotor.c: 31: if (direction == 0)
  1312  027B  08D1               	movf	(rotate@direction)^080h,f
  1313  027C  1D03               	skipz
  1314  027D  2A7F               	goto	u3641
  1315  027E  2A80               	goto	u3640
  1316  027F                     u3641:
  1317  027F  2AFD               	goto	l6774
  1318  0280                     u3640:
  1319  0280  2AE0               	goto	l6772
  1320                           	line	33
  1321                           	
  1322  0281                     l6750:	
  1323                           ;steppermotor.c: 32: {
  1324                           ;steppermotor.c: 33: switch(current_step)
  1325  0281  2AE0               	goto	l6772
  1326                           	line	35
  1327                           ;steppermotor.c: 34: {
  1328                           ;steppermotor.c: 35: case 0b00111100: PORTC = 0b00101110; current_step = 0b00101110;
  1329                           	
  1330  0282                     l3615:	
  1331                           	
  1332  0282                     l6752:	
  1333  0282  302E               	movlw	(02Eh)
  1334  0283  1283               	bcf	status, 5	;RP0=0, select bank0
  1335  0284  1303               	bcf	status, 6	;RP1=0, select bank0
  1336  0285  0087               	movwf	(7)	;volatile
  1337  0286  302E               	movlw	(02Eh)
  1338  0287  1683               	bsf	status, 5	;RP0=1, select bank1
  1339  0288  1303               	bcf	status, 6	;RP1=0, select bank1
  1340  0289  00D2               	movwf	(??_rotate+0)^080h+0
  1341  028A  0852               	movf	(??_rotate+0)^080h+0,w
  1342  028B  00D6               	movwf	(_current_step)^080h
  1343                           	line	36
  1344                           ;steppermotor.c: 36: break;
  1345  028C  2B82               	goto	l6800
  1346                           	line	37
  1347                           ;steppermotor.c: 37: case 0b00101110: PORTC = 0b00101011; current_step = 0b00101011;
  1348                           	
  1349  028D                     l3617:	
  1350                           	
  1351  028D                     l6754:	
  1352  028D  302B               	movlw	(02Bh)
  1353  028E  1283               	bcf	status, 5	;RP0=0, select bank0
  1354  028F  1303               	bcf	status, 6	;RP1=0, select bank0
  1355  0290  0087               	movwf	(7)	;volatile
  1356  0291  302B               	movlw	(02Bh)
  1357  0292  1683               	bsf	status, 5	;RP0=1, select bank1
  1358  0293  1303               	bcf	status, 6	;RP1=0, select bank1
  1359  0294  00D2               	movwf	(??_rotate+0)^080h+0
  1360  0295  0852               	movf	(??_rotate+0)^080h+0,w
  1361  0296  00D6               	movwf	(_current_step)^080h
  1362                           	line	38
  1363                           ;steppermotor.c: 38: break;
  1364  0297  2B82               	goto	l6800
  1365                           	line	39
  1366                           ;steppermotor.c: 39: case 0b00101011: PORTC = 0b00100111; current_step = 0b00100111;
  1367                           	
  1368  0298                     l3618:	
  1369                           	
  1370  0298                     l6756:	
  1371  0298  3027               	movlw	(027h)
  1372  0299  1283               	bcf	status, 5	;RP0=0, select bank0
  1373  029A  1303               	bcf	status, 6	;RP1=0, select bank0
  1374  029B  0087               	movwf	(7)	;volatile
  1375  029C  3027               	movlw	(027h)
  1376  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  1377  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  1378  029F  00D2               	movwf	(??_rotate+0)^080h+0
  1379  02A0  0852               	movf	(??_rotate+0)^080h+0,w
  1380  02A1  00D6               	movwf	(_current_step)^080h
  1381                           	line	40
  1382                           ;steppermotor.c: 40: break;
  1383  02A2  2B82               	goto	l6800
  1384                           	line	41
  1385                           ;steppermotor.c: 41: case 0b00100111: PORTC = 0b00110101; current_step = 0b00110101;
  1386                           	
  1387  02A3                     l3619:	
  1388                           	
  1389  02A3                     l6758:	
  1390  02A3  3035               	movlw	(035h)
  1391  02A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1392  02A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1393  02A6  0087               	movwf	(7)	;volatile
  1394  02A7  3035               	movlw	(035h)
  1395  02A8  1683               	bsf	status, 5	;RP0=1, select bank1
  1396  02A9  1303               	bcf	status, 6	;RP1=0, select bank1
  1397  02AA  00D2               	movwf	(??_rotate+0)^080h+0
  1398  02AB  0852               	movf	(??_rotate+0)^080h+0,w
  1399  02AC  00D6               	movwf	(_current_step)^080h
  1400                           	line	42
  1401                           ;steppermotor.c: 42: break;
  1402  02AD  2B82               	goto	l6800
  1403                           	line	43
  1404                           ;steppermotor.c: 43: case 0b00110101: PORTC = 0b00010111; current_step = 0b00010111;
  1405                           	
  1406  02AE                     l3620:	
  1407                           	
  1408  02AE                     l6760:	
  1409  02AE  3017               	movlw	(017h)
  1410  02AF  1283               	bcf	status, 5	;RP0=0, select bank0
  1411  02B0  1303               	bcf	status, 6	;RP1=0, select bank0
  1412  02B1  0087               	movwf	(7)	;volatile
  1413  02B2  3017               	movlw	(017h)
  1414  02B3  1683               	bsf	status, 5	;RP0=1, select bank1
  1415  02B4  1303               	bcf	status, 6	;RP1=0, select bank1
  1416  02B5  00D2               	movwf	(??_rotate+0)^080h+0
  1417  02B6  0852               	movf	(??_rotate+0)^080h+0,w
  1418  02B7  00D6               	movwf	(_current_step)^080h
  1419                           	line	44
  1420                           ;steppermotor.c: 44: break;
  1421  02B8  2B82               	goto	l6800
  1422                           	line	45
  1423                           ;steppermotor.c: 45: case 0b00010111: PORTC = 0b00011011; current_step = 0b00011011;
  1424                           	
  1425  02B9                     l3621:	
  1426                           	
  1427  02B9                     l6762:	
  1428  02B9  301B               	movlw	(01Bh)
  1429  02BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1430  02BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1431  02BC  0087               	movwf	(7)	;volatile
  1432  02BD  301B               	movlw	(01Bh)
  1433  02BE  1683               	bsf	status, 5	;RP0=1, select bank1
  1434  02BF  1303               	bcf	status, 6	;RP1=0, select bank1
  1435  02C0  00D2               	movwf	(??_rotate+0)^080h+0
  1436  02C1  0852               	movf	(??_rotate+0)^080h+0,w
  1437  02C2  00D6               	movwf	(_current_step)^080h
  1438                           	line	46
  1439                           ;steppermotor.c: 46: break;
  1440  02C3  2B82               	goto	l6800
  1441                           	line	47
  1442                           ;steppermotor.c: 47: case 0b00011011: PORTC = 0b00011110; current_step = 0b00011110;
  1443                           	
  1444  02C4                     l3622:	
  1445                           	
  1446  02C4                     l6764:	
  1447  02C4  301E               	movlw	(01Eh)
  1448  02C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1449  02C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1450  02C7  0087               	movwf	(7)	;volatile
  1451  02C8  301E               	movlw	(01Eh)
  1452  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  1453  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  1454  02CB  00D2               	movwf	(??_rotate+0)^080h+0
  1455  02CC  0852               	movf	(??_rotate+0)^080h+0,w
  1456  02CD  00D6               	movwf	(_current_step)^080h
  1457                           	line	48
  1458                           ;steppermotor.c: 48: break;
  1459  02CE  2B82               	goto	l6800
  1460                           	line	49
  1461                           ;steppermotor.c: 49: case 0b00011110: PORTC = 0b00111100; current_step = 0b00111100;
  1462                           	
  1463  02CF                     l3623:	
  1464                           	
  1465  02CF                     l6766:	
  1466  02CF  303C               	movlw	(03Ch)
  1467  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  1468  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  1469  02D2  0087               	movwf	(7)	;volatile
  1470  02D3  303C               	movlw	(03Ch)
  1471  02D4  1683               	bsf	status, 5	;RP0=1, select bank1
  1472  02D5  1303               	bcf	status, 6	;RP1=0, select bank1
  1473  02D6  00D2               	movwf	(??_rotate+0)^080h+0
  1474  02D7  0852               	movf	(??_rotate+0)^080h+0,w
  1475  02D8  00D6               	movwf	(_current_step)^080h
  1476                           	line	50
  1477                           ;steppermotor.c: 50: break;
  1478  02D9  2B82               	goto	l6800
  1479                           	line	52
  1480                           ;steppermotor.c: 52: default: PORTC = 0b00111001;
  1481                           	
  1482  02DA                     l3624:	
  1483                           	
  1484  02DA                     l6768:	
  1485  02DA  3039               	movlw	(039h)
  1486  02DB  1283               	bcf	status, 5	;RP0=0, select bank0
  1487  02DC  1303               	bcf	status, 6	;RP1=0, select bank0
  1488  02DD  0087               	movwf	(7)	;volatile
  1489                           	line	53
  1490                           ;steppermotor.c: 53: break;
  1491  02DE  2B82               	goto	l6800
  1492                           	line	54
  1493                           	
  1494  02DF                     l6770:	
  1495                           ;steppermotor.c: 54: }
  1496  02DF  2B82               	goto	l6800
  1497                           	line	33
  1498                           	
  1499  02E0                     l3614:	
  1500                           	
  1501  02E0                     l6772:	
  1502  02E0  1683               	bsf	status, 5	;RP0=1, select bank1
  1503  02E1  1303               	bcf	status, 6	;RP1=0, select bank1
  1504  02E2  0856               	movf	(_current_step)^080h,w
  1505                           	; Switch size 1, requested type "space"
  1506                           ; Number of cases is 8, Range of values is 23 to 60
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte           25    13 (average)
  1510                           ; direct_byte          125    11 (fixed)
  1511                           ; jumptable            263     9 (fixed)
  1512                           ;	Chosen strategy is simple_byte
  1513                           
  1514                           	opt asmopt_off
  1515  02E3  3A17               	xorlw	23^0	; case 23
  1516  02E4  1903               	skipnz
  1517  02E5  2AB9               	goto	l6762
  1518  02E6  3A0C               	xorlw	27^23	; case 27
  1519  02E7  1903               	skipnz
  1520  02E8  2AC4               	goto	l6764
  1521  02E9  3A05               	xorlw	30^27	; case 30
  1522  02EA  1903               	skipnz
  1523  02EB  2ACF               	goto	l6766
  1524  02EC  3A39               	xorlw	39^30	; case 39
  1525  02ED  1903               	skipnz
  1526  02EE  2AA3               	goto	l6758
  1527  02EF  3A0C               	xorlw	43^39	; case 43
  1528  02F0  1903               	skipnz
  1529  02F1  2A98               	goto	l6756
  1530  02F2  3A05               	xorlw	46^43	; case 46
  1531  02F3  1903               	skipnz
  1532  02F4  2A8D               	goto	l6754
  1533  02F5  3A1B               	xorlw	53^46	; case 53
  1534  02F6  1903               	skipnz
  1535  02F7  2AAE               	goto	l6760
  1536  02F8  3A09               	xorlw	60^53	; case 60
  1537  02F9  1903               	skipnz
  1538  02FA  2A82               	goto	l6752
  1539  02FB  2ADA               	goto	l6768
  1540                           	opt asmopt_on
  1541                           
  1542                           	line	54
  1543                           	
  1544  02FC                     l3616:	
  1545                           	line	55
  1546                           ;steppermotor.c: 55: }
  1547  02FC  2B82               	goto	l6800
  1548                           	line	56
  1549                           	
  1550  02FD                     l3613:	
  1551                           	
  1552  02FD                     l6774:	
  1553                           ;steppermotor.c: 56: else if (direction == 1)
  1554  02FD  0851               	movf	(rotate@direction)^080h,w
  1555  02FE  3A01               	xorlw	01h
  1556  02FF  1D03               	skipz
  1557  0300  2B02               	goto	u3651
  1558  0301  2B03               	goto	u3650
  1559  0302                     u3651:
  1560  0302  2B82               	goto	l6800
  1561  0303                     u3650:
  1562  0303  2B63               	goto	l6798
  1563                           	line	58
  1564                           	
  1565  0304                     l6776:	
  1566                           ;steppermotor.c: 57: {
  1567                           ;steppermotor.c: 58: switch(current_step)
  1568  0304  2B63               	goto	l6798
  1569                           	line	60
  1570                           ;steppermotor.c: 59: {
  1571                           ;steppermotor.c: 60: case 0b00111100: PORTC = 0b00011110; current_step = 0b00011110;
  1572                           	
  1573  0305                     l3628:	
  1574                           	
  1575  0305                     l6778:	
  1576  0305  301E               	movlw	(01Eh)
  1577  0306  1283               	bcf	status, 5	;RP0=0, select bank0
  1578  0307  1303               	bcf	status, 6	;RP1=0, select bank0
  1579  0308  0087               	movwf	(7)	;volatile
  1580  0309  301E               	movlw	(01Eh)
  1581  030A  1683               	bsf	status, 5	;RP0=1, select bank1
  1582  030B  1303               	bcf	status, 6	;RP1=0, select bank1
  1583  030C  00D2               	movwf	(??_rotate+0)^080h+0
  1584  030D  0852               	movf	(??_rotate+0)^080h+0,w
  1585  030E  00D6               	movwf	(_current_step)^080h
  1586                           	line	61
  1587                           ;steppermotor.c: 61: break;
  1588  030F  2B82               	goto	l6800
  1589                           	line	62
  1590                           ;steppermotor.c: 62: case 0b00101110: PORTC = 0b00111100; current_step = 0b00111100;
  1591                           	
  1592  0310                     l3630:	
  1593                           	
  1594  0310                     l6780:	
  1595  0310  303C               	movlw	(03Ch)
  1596  0311  1283               	bcf	status, 5	;RP0=0, select bank0
  1597  0312  1303               	bcf	status, 6	;RP1=0, select bank0
  1598  0313  0087               	movwf	(7)	;volatile
  1599  0314  303C               	movlw	(03Ch)
  1600  0315  1683               	bsf	status, 5	;RP0=1, select bank1
  1601  0316  1303               	bcf	status, 6	;RP1=0, select bank1
  1602  0317  00D2               	movwf	(??_rotate+0)^080h+0
  1603  0318  0852               	movf	(??_rotate+0)^080h+0,w
  1604  0319  00D6               	movwf	(_current_step)^080h
  1605                           	line	63
  1606                           ;steppermotor.c: 63: break;
  1607  031A  2B82               	goto	l6800
  1608                           	line	64
  1609                           ;steppermotor.c: 64: case 0b00101011: PORTC = 0b00101110; current_step = 0b00101110;
  1610                           	
  1611  031B                     l3631:	
  1612                           	
  1613  031B                     l6782:	
  1614  031B  302E               	movlw	(02Eh)
  1615  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  1616  031D  1303               	bcf	status, 6	;RP1=0, select bank0
  1617  031E  0087               	movwf	(7)	;volatile
  1618  031F  302E               	movlw	(02Eh)
  1619  0320  1683               	bsf	status, 5	;RP0=1, select bank1
  1620  0321  1303               	bcf	status, 6	;RP1=0, select bank1
  1621  0322  00D2               	movwf	(??_rotate+0)^080h+0
  1622  0323  0852               	movf	(??_rotate+0)^080h+0,w
  1623  0324  00D6               	movwf	(_current_step)^080h
  1624                           	line	65
  1625                           ;steppermotor.c: 65: break;
  1626  0325  2B82               	goto	l6800
  1627                           	line	66
  1628                           ;steppermotor.c: 66: case 0b00100111: PORTC = 0b00101011; current_step = 0b00101011;
  1629                           	
  1630  0326                     l3632:	
  1631                           	
  1632  0326                     l6784:	
  1633  0326  302B               	movlw	(02Bh)
  1634  0327  1283               	bcf	status, 5	;RP0=0, select bank0
  1635  0328  1303               	bcf	status, 6	;RP1=0, select bank0
  1636  0329  0087               	movwf	(7)	;volatile
  1637  032A  302B               	movlw	(02Bh)
  1638  032B  1683               	bsf	status, 5	;RP0=1, select bank1
  1639  032C  1303               	bcf	status, 6	;RP1=0, select bank1
  1640  032D  00D2               	movwf	(??_rotate+0)^080h+0
  1641  032E  0852               	movf	(??_rotate+0)^080h+0,w
  1642  032F  00D6               	movwf	(_current_step)^080h
  1643                           	line	67
  1644                           ;steppermotor.c: 67: break;
  1645  0330  2B82               	goto	l6800
  1646                           	line	68
  1647                           ;steppermotor.c: 68: case 0b00110101: PORTC = 0b00100111; current_step = 0b00100111;
  1648                           	
  1649  0331                     l3633:	
  1650                           	
  1651  0331                     l6786:	
  1652  0331  3027               	movlw	(027h)
  1653  0332  1283               	bcf	status, 5	;RP0=0, select bank0
  1654  0333  1303               	bcf	status, 6	;RP1=0, select bank0
  1655  0334  0087               	movwf	(7)	;volatile
  1656  0335  3027               	movlw	(027h)
  1657  0336  1683               	bsf	status, 5	;RP0=1, select bank1
  1658  0337  1303               	bcf	status, 6	;RP1=0, select bank1
  1659  0338  00D2               	movwf	(??_rotate+0)^080h+0
  1660  0339  0852               	movf	(??_rotate+0)^080h+0,w
  1661  033A  00D6               	movwf	(_current_step)^080h
  1662                           	line	69
  1663                           ;steppermotor.c: 69: break;
  1664  033B  2B82               	goto	l6800
  1665                           	line	70
  1666                           ;steppermotor.c: 70: case 0b00010111: PORTC = 0b00110101; current_step = 0b00110101;
  1667                           	
  1668  033C                     l3634:	
  1669                           	
  1670  033C                     l6788:	
  1671  033C  3035               	movlw	(035h)
  1672  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  1673  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  1674  033F  0087               	movwf	(7)	;volatile
  1675  0340  3035               	movlw	(035h)
  1676  0341  1683               	bsf	status, 5	;RP0=1, select bank1
  1677  0342  1303               	bcf	status, 6	;RP1=0, select bank1
  1678  0343  00D2               	movwf	(??_rotate+0)^080h+0
  1679  0344  0852               	movf	(??_rotate+0)^080h+0,w
  1680  0345  00D6               	movwf	(_current_step)^080h
  1681                           	line	71
  1682                           ;steppermotor.c: 71: break;
  1683  0346  2B82               	goto	l6800
  1684                           	line	72
  1685                           ;steppermotor.c: 72: case 0b00011011: PORTC = 0b00010111; current_step = 0b00010111;
  1686                           	
  1687  0347                     l3635:	
  1688                           	
  1689  0347                     l6790:	
  1690  0347  3017               	movlw	(017h)
  1691  0348  1283               	bcf	status, 5	;RP0=0, select bank0
  1692  0349  1303               	bcf	status, 6	;RP1=0, select bank0
  1693  034A  0087               	movwf	(7)	;volatile
  1694  034B  3017               	movlw	(017h)
  1695  034C  1683               	bsf	status, 5	;RP0=1, select bank1
  1696  034D  1303               	bcf	status, 6	;RP1=0, select bank1
  1697  034E  00D2               	movwf	(??_rotate+0)^080h+0
  1698  034F  0852               	movf	(??_rotate+0)^080h+0,w
  1699  0350  00D6               	movwf	(_current_step)^080h
  1700                           	line	73
  1701                           ;steppermotor.c: 73: break;
  1702  0351  2B82               	goto	l6800
  1703                           	line	74
  1704                           ;steppermotor.c: 74: case 0b00011110: PORTC = 0b00011011; current_step = 0b00011011;
  1705                           	
  1706  0352                     l3636:	
  1707                           	
  1708  0352                     l6792:	
  1709  0352  301B               	movlw	(01Bh)
  1710  0353  1283               	bcf	status, 5	;RP0=0, select bank0
  1711  0354  1303               	bcf	status, 6	;RP1=0, select bank0
  1712  0355  0087               	movwf	(7)	;volatile
  1713  0356  301B               	movlw	(01Bh)
  1714  0357  1683               	bsf	status, 5	;RP0=1, select bank1
  1715  0358  1303               	bcf	status, 6	;RP1=0, select bank1
  1716  0359  00D2               	movwf	(??_rotate+0)^080h+0
  1717  035A  0852               	movf	(??_rotate+0)^080h+0,w
  1718  035B  00D6               	movwf	(_current_step)^080h
  1719                           	line	75
  1720                           ;steppermotor.c: 75: break;
  1721  035C  2B82               	goto	l6800
  1722                           	line	77
  1723                           ;steppermotor.c: 77: default: PORTC = 0b00111001;
  1724                           	
  1725  035D                     l3637:	
  1726                           	
  1727  035D                     l6794:	
  1728  035D  3039               	movlw	(039h)
  1729  035E  1283               	bcf	status, 5	;RP0=0, select bank0
  1730  035F  1303               	bcf	status, 6	;RP1=0, select bank0
  1731  0360  0087               	movwf	(7)	;volatile
  1732                           	line	78
  1733                           ;steppermotor.c: 78: break;
  1734  0361  2B82               	goto	l6800
  1735                           	line	79
  1736                           	
  1737  0362                     l6796:	
  1738                           ;steppermotor.c: 79: }
  1739  0362  2B82               	goto	l6800
  1740                           	line	58
  1741                           	
  1742  0363                     l3627:	
  1743                           	
  1744  0363                     l6798:	
  1745  0363  1683               	bsf	status, 5	;RP0=1, select bank1
  1746  0364  1303               	bcf	status, 6	;RP1=0, select bank1
  1747  0365  0856               	movf	(_current_step)^080h,w
  1748                           	; Switch size 1, requested type "space"
  1749                           ; Number of cases is 8, Range of values is 23 to 60
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte           25    13 (average)
  1753                           ; direct_byte          125    11 (fixed)
  1754                           ; jumptable            263     9 (fixed)
  1755                           ;	Chosen strategy is simple_byte
  1756                           
  1757                           	opt asmopt_off
  1758  0366  3A17               	xorlw	23^0	; case 23
  1759  0367  1903               	skipnz
  1760  0368  2B3C               	goto	l6788
  1761  0369  3A0C               	xorlw	27^23	; case 27
  1762  036A  1903               	skipnz
  1763  036B  2B47               	goto	l6790
  1764  036C  3A05               	xorlw	30^27	; case 30
  1765  036D  1903               	skipnz
  1766  036E  2B52               	goto	l6792
  1767  036F  3A39               	xorlw	39^30	; case 39
  1768  0370  1903               	skipnz
  1769  0371  2B26               	goto	l6784
  1770  0372  3A0C               	xorlw	43^39	; case 43
  1771  0373  1903               	skipnz
  1772  0374  2B1B               	goto	l6782
  1773  0375  3A05               	xorlw	46^43	; case 46
  1774  0376  1903               	skipnz
  1775  0377  2B10               	goto	l6780
  1776  0378  3A1B               	xorlw	53^46	; case 53
  1777  0379  1903               	skipnz
  1778  037A  2B31               	goto	l6786
  1779  037B  3A09               	xorlw	60^53	; case 60
  1780  037C  1903               	skipnz
  1781  037D  2B05               	goto	l6778
  1782  037E  2B5D               	goto	l6794
  1783                           	opt asmopt_on
  1784                           
  1785                           	line	79
  1786                           	
  1787  037F                     l3629:	
  1788                           	line	80
  1789                           ;steppermotor.c: 80: }
  1790  037F  2B82               	goto	l6800
  1791                           	line	81
  1792                           	
  1793  0380                     l3626:	
  1794  0380  2B82               	goto	l6800
  1795                           	line	84
  1796                           ;steppermotor.c: 81: else
  1797                           ;steppermotor.c: 82: {
  1798                           	
  1799  0381                     l3638:	
  1800  0381  2B82               	goto	l6800
  1801                           	
  1802  0382                     l3625:	
  1803                           	line	86
  1804                           	
  1805  0382                     l6800:	
  1806                           ;steppermotor.c: 84: }
  1807                           ;steppermotor.c: 86: _delay((unsigned long)((15)*(20000000/4000.0)));
  1808                           	opt asmopt_off
  1809  0382  3062               movlw	98
  1810  0383  1683               	bsf	status, 5	;RP0=1, select bank1
  1811  0384  1303               	bcf	status, 6	;RP1=0, select bank1
  1812  0385  00D3               movwf	((??_rotate+0)^080h+0+1),f
  1813  0386  3065               	movlw	101
  1814  0387  00D2               movwf	((??_rotate+0)^080h+0),f
  1815  0388                     u3717:
  1816  0388  0BD2               	decfsz	((??_rotate+0)^080h+0),f
  1817  0389  2B88               	goto	u3717
  1818  038A  0BD3               	decfsz	((??_rotate+0)^080h+0+1),f
  1819  038B  2B88               	goto	u3717
  1820  038C  2B8D               	nop2
  1821                           opt asmopt_on
  1822                           
  1823                           	line	29
  1824                           	
  1825  038D                     l6802:	
  1826  038D  3001               	movlw	low(01h)
  1827  038E  1683               	bsf	status, 5	;RP0=1, select bank1
  1828  038F  1303               	bcf	status, 6	;RP1=0, select bank1
  1829  0390  02D4               	subwf	(rotate@steps)^080h,f
  1830  0391  08D4               	movf	(rotate@steps)^080h,f
  1831  0392  1D03               	skipz
  1832  0393  2B95               	goto	u3661
  1833  0394  2B96               	goto	u3660
  1834  0395                     u3661:
  1835  0395  2A7B               	goto	l6748
  1836  0396                     u3660:
  1837  0396  2B97               	goto	l6804
  1838                           	
  1839  0397                     l3612:	
  1840                           	line	89
  1841                           	
  1842  0397                     l6804:	
  1843                           ;steppermotor.c: 87: }
  1844                           ;steppermotor.c: 89: PORTC = 0b00111001;
  1845  0397  3039               	movlw	(039h)
  1846  0398  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  0399  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  039A  0087               	movwf	(7)	;volatile
  1849                           	line	90
  1850                           	
  1851  039B                     l3639:	
  1852  039B  0008               	return
  1853                           	opt stack 0
  1854                           GLOBAL	__end_of_rotate
  1855  039C                     	__end_of_rotate:
  1856 ;; =============== function _rotate ends ============
  1857                           
  1858                           	signat	_rotate,8312
  1859                           	global	_lcd_write_control
  1860                           psect	text460,local,class=CODE,delta=2
  1861                           global __ptext460
  1862  07E1                     __ptext460:
  1863                           
  1864 ;; *************** function _lcd_write_control *****************
  1865 ;; Defined at:
  1866 ;;		line 18 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  databyte        1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  databyte        1    2[BANK1 ] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       0       0       0       0
  1881 ;;      Locals:         0       0       1       0       0
  1882 ;;      Temps:          0       0       2       0       0
  1883 ;;      Totals:         0       0       3       0       0
  1884 ;;Total ram usage:        3 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    4
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_lcd_init
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           psect	text460
  1894                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  1895                           	line	18
  1896                           	global	__size_of_lcd_write_control
  1897  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  1898                           	
  1899  07E1                     _lcd_write_control:	
  1900                           	opt	stack 1
  1901                           ; Regs used in _lcd_write_control: [wreg]
  1902                           ;lcd_write_control@databyte stored from wreg
  1903  07E1  1683               	bsf	status, 5	;RP0=1, select bank1
  1904  07E2  1303               	bcf	status, 6	;RP1=0, select bank1
  1905  07E3  00D3               	movwf	(lcd_write_control@databyte)^080h
  1906                           	line	19
  1907                           	
  1908  07E4                     l6736:	
  1909                           ;lcd.c: 19: RE2 = 0;
  1910  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1911  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1912  07E6  1109               	bcf	(74/8),(74)&7
  1913                           	line	20
  1914                           ;lcd.c: 20: RE1 = 0;
  1915  07E7  1089               	bcf	(73/8),(73)&7
  1916                           	line	21
  1917                           ;lcd.c: 21: RE0 = 0;
  1918  07E8  1009               	bcf	(72/8),(72)&7
  1919                           	line	22
  1920                           	
  1921  07E9                     l6738:	
  1922                           ;lcd.c: 22: PORTD = databyte;
  1923  07E9  1683               	bsf	status, 5	;RP0=1, select bank1
  1924  07EA  1303               	bcf	status, 6	;RP1=0, select bank1
  1925  07EB  0853               	movf	(lcd_write_control@databyte)^080h,w
  1926  07EC  1283               	bcf	status, 5	;RP0=0, select bank0
  1927  07ED  1303               	bcf	status, 6	;RP1=0, select bank0
  1928  07EE  0088               	movwf	(8)	;volatile
  1929                           	line	23
  1930                           	
  1931  07EF                     l6740:	
  1932                           ;lcd.c: 23: RE2 = 1;
  1933  07EF  1509               	bsf	(74/8),(74)&7
  1934                           	line	24
  1935                           	
  1936  07F0                     l6742:	
  1937                           ;lcd.c: 24: RE2 = 0;
  1938  07F0  1109               	bcf	(74/8),(74)&7
  1939                           	line	25
  1940                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  1941                           	opt asmopt_off
  1942  07F1  300D               movlw	13
  1943  07F2  1683               	bsf	status, 5	;RP0=1, select bank1
  1944  07F3  1303               	bcf	status, 6	;RP1=0, select bank1
  1945  07F4  00D2               movwf	((??_lcd_write_control+0)^080h+0+1),f
  1946  07F5  30FB               	movlw	251
  1947  07F6  00D1               movwf	((??_lcd_write_control+0)^080h+0),f
  1948  07F7                     u3727:
  1949  07F7  0BD1               	decfsz	((??_lcd_write_control+0)^080h+0),f
  1950  07F8  2FF7               	goto	u3727
  1951  07F9  0BD2               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  1952  07FA  2FF7               	goto	u3727
  1953  07FB  2FFC               	nop2
  1954                           opt asmopt_on
  1955                           
  1956                           	line	26
  1957                           	
  1958  07FC                     l1393:	
  1959  07FC  0008               	return
  1960                           	opt stack 0
  1961                           GLOBAL	__end_of_lcd_write_control
  1962  07FD                     	__end_of_lcd_write_control:
  1963 ;; =============== function _lcd_write_control ends ============
  1964                           
  1965                           	signat	_lcd_write_control,4216
  1966                           	global	_init_adc
  1967                           psect	text461,local,class=CODE,delta=2
  1968                           global __ptext461
  1969  0FBE                     __ptext461:
  1970                           
  1971 ;; *************** function _init_adc *****************
  1972 ;; Defined at:
  1973 ;;		line 46 in file "H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0
  1989 ;;      Temps:          0       0       1       0       0
  1990 ;;      Totals:         0       0       1       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_init
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           psect	text461
  2001                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  2002                           	line	46
  2003                           	global	__size_of_init_adc
  2004  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  2005                           	
  2006  0FBE                     _init_adc:	
  2007                           	opt	stack 2
  2008                           ; Regs used in _init_adc: [wreg+status,2]
  2009                           	line	48
  2010                           	
  2011  0FBE                     l6726:	
  2012                           ;adc.c: 48: PORTA = 0;
  2013  0FBE  1283               	bcf	status, 5	;RP0=0, select bank0
  2014  0FBF  1303               	bcf	status, 6	;RP1=0, select bank0
  2015  0FC0  0185               	clrf	(5)	;volatile
  2016                           	line	49
  2017                           	
  2018  0FC1                     l6728:	
  2019                           ;adc.c: 49: TRISA = 0b00111111;
  2020  0FC1  303F               	movlw	(03Fh)
  2021  0FC2  1683               	bsf	status, 5	;RP0=1, select bank1
  2022  0FC3  1303               	bcf	status, 6	;RP1=0, select bank1
  2023  0FC4  0085               	movwf	(133)^080h	;volatile
  2024                           	line	52
  2025                           	
  2026  0FC5                     l6730:	
  2027                           ;adc.c: 52: ADCON0 = 0b10100001;
  2028  0FC5  30A1               	movlw	(0A1h)
  2029  0FC6  1283               	bcf	status, 5	;RP0=0, select bank0
  2030  0FC7  1303               	bcf	status, 6	;RP1=0, select bank0
  2031  0FC8  009F               	movwf	(31)	;volatile
  2032                           	line	53
  2033                           	
  2034  0FC9                     l6732:	
  2035                           ;adc.c: 53: ADCON1 = 0b0000010;
  2036  0FC9  3002               	movlw	(02h)
  2037  0FCA  1683               	bsf	status, 5	;RP0=1, select bank1
  2038  0FCB  1303               	bcf	status, 6	;RP1=0, select bank1
  2039  0FCC  009F               	movwf	(159)^080h	;volatile
  2040                           	line	55
  2041                           	
  2042  0FCD                     l6734:	
  2043                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2044                           	opt asmopt_off
  2045  0FCD  3053               movlw	83
  2046  0FCE  00D1               movwf	(??_init_adc+0)^080h+0,f
  2047  0FCF                     u3737:
  2048  0FCF  0BD1               decfsz	(??_init_adc+0)^080h+0,f
  2049  0FD0  2FCF               	goto	u3737
  2050                           opt asmopt_on
  2051                           
  2052                           	line	57
  2053                           	
  2054  0FD1                     l700:	
  2055  0FD1  0008               	return
  2056                           	opt stack 0
  2057                           GLOBAL	__end_of_init_adc
  2058  0FD2                     	__end_of_init_adc:
  2059 ;; =============== function _init_adc ends ============
  2060                           
  2061                           	signat	_init_adc,88
  2062                           	global	_isr1
  2063                           psect	text462,local,class=CODE,delta=2
  2064                           global __ptext462
  2065  049A                     __ptext462:
  2066                           
  2067 ;; *************** function _isr1 *****************
  2068 ;; Defined at:
  2069 ;;		line 88 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;		None               void
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       5       0       0       0
  2086 ;;      Totals:         0       5       0       0       0
  2087 ;;Total ram usage:        5 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    3
  2090 ;; This function calls:
  2091 ;;		___lwmod
  2092 ;;		_readAvgDistance
  2093 ;;		_ADCconvert
  2094 ;; This function is called by:
  2095 ;;		Interrupt level 1
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           psect	text462
  2099                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2100                           	line	88
  2101                           	global	__size_of_isr1
  2102  00FD                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  2103                           	
  2104  049A                     _isr1:	
  2105                           	opt	stack 1
  2106                           ; Regs used in _isr1: [allreg]
  2107                           psect	intentry,class=CODE,delta=2
  2108                           global __pintentry
  2109  0004                     __pintentry:
  2110                           global interrupt_function
  2111  0004                     interrupt_function:
  2112                           	global saved_w
  2113  007E                     	saved_w	set	btemp+0
  2114  0004  00FE               	movwf	saved_w
  2115  0005  0E03               	swapf	status,w
  2116  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2117  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2118  0008  00E4               	movwf	(??_isr1+1)
  2119  0009  0804               	movf	fsr0,w
  2120  000A  00E5               	movwf	(??_isr1+2)
  2121  000B  080A               	movf	pclath,w
  2122  000C  00E6               	movwf	(??_isr1+3)
  2123  000D  087F               	movf	btemp+1,w
  2124  000E  00E7               	movwf	(??_isr1+4)
  2125  000F  120A  118A  2C9A   	ljmp	_isr1
  2126                           psect	text462
  2127                           	line	90
  2128                           	
  2129  049A                     i1l6426:	
  2130                           ;Main.c: 90: if(TMR0IF)
  2131  049A  1D0B               	btfss	(90/8),(90)&7
  2132  049B  2C9D               	goto	u296_21
  2133  049C  2C9E               	goto	u296_20
  2134  049D                     u296_21:
  2135  049D  2D8C               	goto	i1l2173
  2136  049E                     u296_20:
  2137                           	line	92
  2138                           	
  2139  049E                     i1l6428:	
  2140                           ;Main.c: 91: {
  2141                           ;Main.c: 92: TMR0IF = 0;
  2142  049E  110B               	bcf	(90/8),(90)&7
  2143                           	line	93
  2144                           	
  2145  049F                     i1l6430:	
  2146                           ;Main.c: 93: TMR0 = 100;
  2147  049F  3064               	movlw	(064h)
  2148  04A0  0081               	movwf	(1)	;volatile
  2149                           	line	95
  2150                           ;Main.c: 95: RTC_Counter++;
  2151  04A1  3001               	movlw	low(01h)
  2152  04A2  07EA               	addwf	(_RTC_Counter),f	;volatile
  2153  04A3  1803               	skipnc
  2154  04A4  0AEB               	incf	(_RTC_Counter+1),f	;volatile
  2155  04A5  3000               	movlw	high(01h)
  2156  04A6  07EB               	addwf	(_RTC_Counter+1),f	;volatile
  2157                           	line	97
  2158                           	
  2159  04A7                     i1l6432:	
  2160                           ;Main.c: 97: RTC_FLAG_1MS = 1;
  2161  04A7  14E8               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  2162                           	line	98
  2163                           	
  2164  04A8                     i1l6434:	
  2165                           ;Main.c: 98: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  2166  04A8  300A               	movlw	low(0Ah)
  2167  04A9  00F8               	movwf	(?___lwmod)
  2168  04AA  3000               	movlw	high(0Ah)
  2169  04AB  00F9               	movwf	((?___lwmod))+1
  2170  04AC  086B               	movf	(_RTC_Counter+1),w	;volatile
  2171  04AD  01FB               	clrf	1+(?___lwmod)+02h
  2172  04AE  07FB               	addwf	1+(?___lwmod)+02h
  2173  04AF  086A               	movf	(_RTC_Counter),w	;volatile
  2174  04B0  01FA               	clrf	0+(?___lwmod)+02h
  2175  04B1  07FA               	addwf	0+(?___lwmod)+02h
  2176                           
  2177  04B2  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2178  04B7  0879               	movf	((1+(?___lwmod))),w
  2179  04B8  0478               	iorwf	((0+(?___lwmod))),w
  2180  04B9  1D03               	skipz
  2181  04BA  2CBC               	goto	u297_21
  2182  04BB  2CBD               	goto	u297_20
  2183  04BC                     u297_21:
  2184  04BC  2CC1               	goto	i1l6438
  2185  04BD                     u297_20:
  2186                           	
  2187  04BD                     i1l6436:	
  2188  04BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2189  04BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2190  04BF  1468               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  2191  04C0  2CC1               	goto	i1l6438
  2192                           	
  2193  04C1                     i1l2157:	
  2194                           	line	99
  2195                           	
  2196  04C1                     i1l6438:	
  2197                           ;Main.c: 99: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  2198  04C1  3032               	movlw	low(032h)
  2199  04C2  00F8               	movwf	(?___lwmod)
  2200  04C3  3000               	movlw	high(032h)
  2201  04C4  00F9               	movwf	((?___lwmod))+1
  2202  04C5  1283               	bcf	status, 5	;RP0=0, select bank0
  2203  04C6  1303               	bcf	status, 6	;RP1=0, select bank0
  2204  04C7  086B               	movf	(_RTC_Counter+1),w	;volatile
  2205  04C8  01FB               	clrf	1+(?___lwmod)+02h
  2206  04C9  07FB               	addwf	1+(?___lwmod)+02h
  2207  04CA  086A               	movf	(_RTC_Counter),w	;volatile
  2208  04CB  01FA               	clrf	0+(?___lwmod)+02h
  2209  04CC  07FA               	addwf	0+(?___lwmod)+02h
  2210                           
  2211  04CD  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2212  04D2  0879               	movf	((1+(?___lwmod))),w
  2213  04D3  0478               	iorwf	((0+(?___lwmod))),w
  2214  04D4  1D03               	skipz
  2215  04D5  2CD7               	goto	u298_21
  2216  04D6  2CD8               	goto	u298_20
  2217  04D7                     u298_21:
  2218  04D7  2CDC               	goto	i1l6442
  2219  04D8                     u298_20:
  2220                           	
  2221  04D8                     i1l6440:	
  2222  04D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2223  04D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2224  04DA  1668               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  2225  04DB  2CDC               	goto	i1l6442
  2226                           	
  2227  04DC                     i1l2158:	
  2228                           	line	100
  2229                           	
  2230  04DC                     i1l6442:	
  2231                           ;Main.c: 100: if(RTC_Counter % 250 == 0)
  2232  04DC  30FA               	movlw	low(0FAh)
  2233  04DD  00F8               	movwf	(?___lwmod)
  2234  04DE  3000               	movlw	high(0FAh)
  2235  04DF  00F9               	movwf	((?___lwmod))+1
  2236  04E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2237  04E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2238  04E2  086B               	movf	(_RTC_Counter+1),w	;volatile
  2239  04E3  01FB               	clrf	1+(?___lwmod)+02h
  2240  04E4  07FB               	addwf	1+(?___lwmod)+02h
  2241  04E5  086A               	movf	(_RTC_Counter),w	;volatile
  2242  04E6  01FA               	clrf	0+(?___lwmod)+02h
  2243  04E7  07FA               	addwf	0+(?___lwmod)+02h
  2244                           
  2245  04E8  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2246  04ED  0879               	movf	((1+(?___lwmod))),w
  2247  04EE  0478               	iorwf	((0+(?___lwmod))),w
  2248  04EF  1D03               	skipz
  2249  04F0  2CF2               	goto	u299_21
  2250  04F1  2CF3               	goto	u299_20
  2251  04F2                     u299_21:
  2252  04F2  2D09               	goto	i1l6448
  2253  04F3                     u299_20:
  2254                           	line	102
  2255                           	
  2256  04F3                     i1l6444:	
  2257                           ;Main.c: 101: {
  2258                           ;Main.c: 102: ADCconvert(readAvgDistance());
  2259  04F3  120A  118A  2597   	fcall	_readAvgDistance
              120A  118A         
  2260  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2261  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2262  04FA  0830               	movf	(1+(?_readAvgDistance)),w
  2263  04FB  01CC               	clrf	(?_ADCconvert+1)
  2264  04FC  07CC               	addwf	(?_ADCconvert+1)
  2265  04FD  082F               	movf	(0+(?_readAvgDistance)),w
  2266  04FE  01CB               	clrf	(?_ADCconvert)
  2267  04FF  07CB               	addwf	(?_ADCconvert)
  2268                           
  2269  0500  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  2270                           	line	104
  2271                           	
  2272  0505                     i1l6446:	
  2273                           ;Main.c: 104: RTC_FLAG_250MS = 1;
  2274  0505  1283               	bcf	status, 5	;RP0=0, select bank0
  2275  0506  1303               	bcf	status, 6	;RP1=0, select bank0
  2276  0507  1568               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2277  0508  2D09               	goto	i1l6448
  2278                           	line	106
  2279                           	
  2280  0509                     i1l2159:	
  2281                           	line	107
  2282                           	
  2283  0509                     i1l6448:	
  2284                           ;Main.c: 106: }
  2285                           ;Main.c: 107: if(RTC_Counter % 500 == 0)
  2286  0509  30F4               	movlw	low(01F4h)
  2287  050A  00F8               	movwf	(?___lwmod)
  2288  050B  3001               	movlw	high(01F4h)
  2289  050C  00F9               	movwf	((?___lwmod))+1
  2290  050D  1283               	bcf	status, 5	;RP0=0, select bank0
  2291  050E  1303               	bcf	status, 6	;RP1=0, select bank0
  2292  050F  086B               	movf	(_RTC_Counter+1),w	;volatile
  2293  0510  01FB               	clrf	1+(?___lwmod)+02h
  2294  0511  07FB               	addwf	1+(?___lwmod)+02h
  2295  0512  086A               	movf	(_RTC_Counter),w	;volatile
  2296  0513  01FA               	clrf	0+(?___lwmod)+02h
  2297  0514  07FA               	addwf	0+(?___lwmod)+02h
  2298                           
  2299  0515  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2300  051A  0879               	movf	((1+(?___lwmod))),w
  2301  051B  0478               	iorwf	((0+(?___lwmod))),w
  2302  051C  1D03               	skipz
  2303  051D  2D1F               	goto	u300_21
  2304  051E  2D20               	goto	u300_20
  2305  051F                     u300_21:
  2306  051F  2D28               	goto	i1l6456
  2307  0520                     u300_20:
  2308                           	line	109
  2309                           	
  2310  0520                     i1l6450:	
  2311                           ;Main.c: 108: {
  2312                           ;Main.c: 109: RTC_FLAG_500MS = 1;
  2313  0520  1283               	bcf	status, 5	;RP0=0, select bank0
  2314  0521  1303               	bcf	status, 6	;RP1=0, select bank0
  2315  0522  15E8               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  2316                           	line	110
  2317                           	
  2318  0523                     i1l6452:	
  2319                           ;Main.c: 110: RTC_Counter = 0;
  2320  0523  01EA               	clrf	(_RTC_Counter)	;volatile
  2321  0524  01EB               	clrf	(_RTC_Counter+1)	;volatile
  2322                           	line	111
  2323                           	
  2324  0525                     i1l6454:	
  2325                           ;Main.c: 111: RB0 ^= 0x01;
  2326  0525  3001               	movlw	1<<((48)&7)
  2327  0526  0686               	xorwf	((48)/8),f
  2328  0527  2D28               	goto	i1l6456
  2329                           	line	112
  2330                           	
  2331  0528                     i1l2160:	
  2332                           	line	115
  2333                           	
  2334  0528                     i1l6456:	
  2335                           ;Main.c: 112: }
  2336                           ;Main.c: 115: if(!RB2)
  2337  0528  1283               	bcf	status, 5	;RP0=0, select bank0
  2338  0529  1303               	bcf	status, 6	;RP1=0, select bank0
  2339  052A  1906               	btfsc	(50/8),(50)&7
  2340  052B  2D2D               	goto	u301_21
  2341  052C  2D2E               	goto	u301_20
  2342  052D                     u301_21:
  2343  052D  2D40               	goto	i1l2161
  2344  052E                     u301_20:
  2345                           	line	117
  2346                           	
  2347  052E                     i1l6458:	
  2348                           ;Main.c: 116: {
  2349                           ;Main.c: 117: pb0DebounceCount++;
  2350  052E  3001               	movlw	(01h)
  2351  052F  00E3               	movwf	(??_isr1+0)+0
  2352  0530  0863               	movf	(??_isr1+0)+0,w
  2353  0531  07EC               	addwf	(_pb0DebounceCount),f	;volatile
  2354                           	line	118
  2355                           	
  2356  0532                     i1l6460:	
  2357                           ;Main.c: 118: if(pb0DebounceCount >= 10 & pb0Released)
  2358  0532  300A               	movlw	(0Ah)
  2359  0533  026C               	subwf	(_pb0DebounceCount),w	;volatile
  2360  0534  1C03               	skipc
  2361  0535  2D37               	goto	u302_21
  2362  0536  2D38               	goto	u302_20
  2363  0537                     u302_21:
  2364  0537  2D42               	goto	i1l2163
  2365  0538                     u302_20:
  2366                           	
  2367  0538                     i1l6462:	
  2368  0538  1F68               	btfss	(_pb0Released/8),(_pb0Released)&7
  2369  0539  2D3B               	goto	u303_21
  2370  053A  2D3C               	goto	u303_20
  2371  053B                     u303_21:
  2372  053B  2D42               	goto	i1l2163
  2373  053C                     u303_20:
  2374                           	line	120
  2375                           	
  2376  053C                     i1l6464:	
  2377                           ;Main.c: 119: {
  2378                           ;Main.c: 120: pb0Pressed = 1;
  2379  053C  16E8               	bsf	(_pb0Pressed/8),(_pb0Pressed)&7
  2380                           	line	121
  2381                           ;Main.c: 121: pb0Released = 0;
  2382  053D  1368               	bcf	(_pb0Released/8),(_pb0Released)&7
  2383  053E  2D42               	goto	i1l2163
  2384                           	line	122
  2385                           	
  2386  053F                     i1l2162:	
  2387                           	line	123
  2388                           ;Main.c: 122: }
  2389                           ;Main.c: 123: }
  2390  053F  2D42               	goto	i1l2163
  2391                           	line	124
  2392                           	
  2393  0540                     i1l2161:	
  2394                           	line	126
  2395                           ;Main.c: 124: else
  2396                           ;Main.c: 125: {
  2397                           ;Main.c: 126: pb0DebounceCount = 0;
  2398  0540  01EC               	clrf	(_pb0DebounceCount)	;volatile
  2399                           	line	127
  2400                           ;Main.c: 127: pb0Released = 1;
  2401  0541  1768               	bsf	(_pb0Released/8),(_pb0Released)&7
  2402                           	line	128
  2403                           	
  2404  0542                     i1l2163:	
  2405                           	line	131
  2406                           ;Main.c: 128: }
  2407                           ;Main.c: 131: if(!RB3)
  2408  0542  1986               	btfsc	(51/8),(51)&7
  2409  0543  2D45               	goto	u304_21
  2410  0544  2D46               	goto	u304_20
  2411  0545                     u304_21:
  2412  0545  2D58               	goto	i1l2164
  2413  0546                     u304_20:
  2414                           	line	133
  2415                           	
  2416  0546                     i1l6466:	
  2417                           ;Main.c: 132: {
  2418                           ;Main.c: 133: pb1DebounceCount++;
  2419  0546  3001               	movlw	(01h)
  2420  0547  00E3               	movwf	(??_isr1+0)+0
  2421  0548  0863               	movf	(??_isr1+0)+0,w
  2422  0549  07ED               	addwf	(_pb1DebounceCount),f	;volatile
  2423                           	line	134
  2424                           	
  2425  054A                     i1l6468:	
  2426                           ;Main.c: 134: if(pb1DebounceCount >= 10 & pb1Released)
  2427  054A  300A               	movlw	(0Ah)
  2428  054B  026D               	subwf	(_pb1DebounceCount),w	;volatile
  2429  054C  1C03               	skipc
  2430  054D  2D4F               	goto	u305_21
  2431  054E  2D50               	goto	u305_20
  2432  054F                     u305_21:
  2433  054F  2D5A               	goto	i1l2166
  2434  0550                     u305_20:
  2435                           	
  2436  0550                     i1l6470:	
  2437  0550  1C69               	btfss	(_pb1Released/8),(_pb1Released)&7
  2438  0551  2D53               	goto	u306_21
  2439  0552  2D54               	goto	u306_20
  2440  0553                     u306_21:
  2441  0553  2D5A               	goto	i1l2166
  2442  0554                     u306_20:
  2443                           	line	136
  2444                           	
  2445  0554                     i1l6472:	
  2446                           ;Main.c: 135: {
  2447                           ;Main.c: 136: pb1Pressed = 1;
  2448  0554  17E8               	bsf	(_pb1Pressed/8),(_pb1Pressed)&7
  2449                           	line	137
  2450                           ;Main.c: 137: pb1Released = 0;
  2451  0555  1069               	bcf	(_pb1Released/8),(_pb1Released)&7
  2452  0556  2D5A               	goto	i1l2166
  2453                           	line	138
  2454                           	
  2455  0557                     i1l2165:	
  2456                           	line	139
  2457                           ;Main.c: 138: }
  2458                           ;Main.c: 139: }
  2459  0557  2D5A               	goto	i1l2166
  2460                           	line	140
  2461                           	
  2462  0558                     i1l2164:	
  2463                           	line	142
  2464                           ;Main.c: 140: else
  2465                           ;Main.c: 141: {
  2466                           ;Main.c: 142: pb1DebounceCount = 0;
  2467  0558  01ED               	clrf	(_pb1DebounceCount)	;volatile
  2468                           	line	143
  2469                           ;Main.c: 143: pb1Released = 1;
  2470  0559  1469               	bsf	(_pb1Released/8),(_pb1Released)&7
  2471                           	line	144
  2472                           	
  2473  055A                     i1l2166:	
  2474                           	line	146
  2475                           ;Main.c: 144: }
  2476                           ;Main.c: 146: if(!RB4)
  2477  055A  1A06               	btfsc	(52/8),(52)&7
  2478  055B  2D5D               	goto	u307_21
  2479  055C  2D5E               	goto	u307_20
  2480  055D                     u307_21:
  2481  055D  2D70               	goto	i1l2167
  2482  055E                     u307_20:
  2483                           	line	148
  2484                           	
  2485  055E                     i1l6474:	
  2486                           ;Main.c: 147: {
  2487                           ;Main.c: 148: pb2DebounceCount++;
  2488  055E  3001               	movlw	(01h)
  2489  055F  00E3               	movwf	(??_isr1+0)+0
  2490  0560  0863               	movf	(??_isr1+0)+0,w
  2491  0561  07EE               	addwf	(_pb2DebounceCount),f	;volatile
  2492                           	line	149
  2493                           	
  2494  0562                     i1l6476:	
  2495                           ;Main.c: 149: if(pb2DebounceCount >= 10 & pb2Released)
  2496  0562  300A               	movlw	(0Ah)
  2497  0563  026E               	subwf	(_pb2DebounceCount),w	;volatile
  2498  0564  1C03               	skipc
  2499  0565  2D67               	goto	u308_21
  2500  0566  2D68               	goto	u308_20
  2501  0567                     u308_21:
  2502  0567  2D72               	goto	i1l2169
  2503  0568                     u308_20:
  2504                           	
  2505  0568                     i1l6478:	
  2506  0568  1D69               	btfss	(_pb2Released/8),(_pb2Released)&7
  2507  0569  2D6B               	goto	u309_21
  2508  056A  2D6C               	goto	u309_20
  2509  056B                     u309_21:
  2510  056B  2D72               	goto	i1l2169
  2511  056C                     u309_20:
  2512                           	line	151
  2513                           	
  2514  056C                     i1l6480:	
  2515                           ;Main.c: 150: {
  2516                           ;Main.c: 151: pb2Pressed = 1;
  2517  056C  14E9               	bsf	(_pb2Pressed/8),(_pb2Pressed)&7
  2518                           	line	152
  2519                           ;Main.c: 152: pb2Released = 0;
  2520  056D  1169               	bcf	(_pb2Released/8),(_pb2Released)&7
  2521  056E  2D72               	goto	i1l2169
  2522                           	line	153
  2523                           	
  2524  056F                     i1l2168:	
  2525                           	line	154
  2526                           ;Main.c: 153: }
  2527                           ;Main.c: 154: }
  2528  056F  2D72               	goto	i1l2169
  2529                           	line	155
  2530                           	
  2531  0570                     i1l2167:	
  2532                           	line	157
  2533                           ;Main.c: 155: else
  2534                           ;Main.c: 156: {
  2535                           ;Main.c: 157: pb2DebounceCount = 0;
  2536  0570  01EE               	clrf	(_pb2DebounceCount)	;volatile
  2537                           	line	158
  2538                           ;Main.c: 158: pb2Released = 1;
  2539  0571  1569               	bsf	(_pb2Released/8),(_pb2Released)&7
  2540                           	line	159
  2541                           	
  2542  0572                     i1l2169:	
  2543                           	line	161
  2544                           ;Main.c: 159: }
  2545                           ;Main.c: 161: if(!RB5)
  2546  0572  1A86               	btfsc	(53/8),(53)&7
  2547  0573  2D75               	goto	u310_21
  2548  0574  2D76               	goto	u310_20
  2549  0575                     u310_21:
  2550  0575  2D88               	goto	i1l2170
  2551  0576                     u310_20:
  2552                           	line	163
  2553                           	
  2554  0576                     i1l6482:	
  2555                           ;Main.c: 162: {
  2556                           ;Main.c: 163: pb3DebounceCount++;
  2557  0576  3001               	movlw	(01h)
  2558  0577  00E3               	movwf	(??_isr1+0)+0
  2559  0578  0863               	movf	(??_isr1+0)+0,w
  2560  0579  07EF               	addwf	(_pb3DebounceCount),f	;volatile
  2561                           	line	164
  2562                           	
  2563  057A                     i1l6484:	
  2564                           ;Main.c: 164: if(pb3DebounceCount >= 10 & pb3Released)
  2565  057A  300A               	movlw	(0Ah)
  2566  057B  026F               	subwf	(_pb3DebounceCount),w	;volatile
  2567  057C  1C03               	skipc
  2568  057D  2D7F               	goto	u311_21
  2569  057E  2D80               	goto	u311_20
  2570  057F                     u311_21:
  2571  057F  2D8C               	goto	i1l2173
  2572  0580                     u311_20:
  2573                           	
  2574  0580                     i1l6486:	
  2575  0580  1E69               	btfss	(_pb3Released/8),(_pb3Released)&7
  2576  0581  2D83               	goto	u312_21
  2577  0582  2D84               	goto	u312_20
  2578  0583                     u312_21:
  2579  0583  2D8C               	goto	i1l2173
  2580  0584                     u312_20:
  2581                           	line	166
  2582                           	
  2583  0584                     i1l6488:	
  2584                           ;Main.c: 165: {
  2585                           ;Main.c: 166: pb3Pressed = 1;
  2586  0584  15E9               	bsf	(_pb3Pressed/8),(_pb3Pressed)&7
  2587                           	line	167
  2588                           ;Main.c: 167: pb3Released = 0;
  2589  0585  1269               	bcf	(_pb3Released/8),(_pb3Released)&7
  2590  0586  2D8C               	goto	i1l2173
  2591                           	line	168
  2592                           	
  2593  0587                     i1l2171:	
  2594                           	line	169
  2595                           ;Main.c: 168: }
  2596                           ;Main.c: 169: }
  2597  0587  2D8C               	goto	i1l2173
  2598                           	line	170
  2599                           	
  2600  0588                     i1l2170:	
  2601                           	line	172
  2602                           ;Main.c: 170: else
  2603                           ;Main.c: 171: {
  2604                           ;Main.c: 172: pb3DebounceCount = 0;
  2605  0588  01EF               	clrf	(_pb3DebounceCount)	;volatile
  2606                           	line	173
  2607                           ;Main.c: 173: pb3Released = 1;
  2608  0589  1669               	bsf	(_pb3Released/8),(_pb3Released)&7
  2609  058A  2D8C               	goto	i1l2173
  2610                           	line	174
  2611                           	
  2612  058B                     i1l2172:	
  2613  058B  2D8C               	goto	i1l2173
  2614                           	line	175
  2615                           	
  2616  058C                     i1l2156:	
  2617                           	line	176
  2618                           	
  2619  058C                     i1l2173:	
  2620  058C  0867               	movf	(??_isr1+4),w
  2621  058D  00FF               	movwf	btemp+1
  2622  058E  0866               	movf	(??_isr1+3),w
  2623  058F  008A               	movwf	pclath
  2624  0590  0865               	movf	(??_isr1+2),w
  2625  0591  0084               	movwf	fsr0
  2626  0592  0E64               	swapf	(??_isr1+1)^00h,w
  2627  0593  0083               	movwf	status
  2628  0594  0EFE               	swapf	saved_w,f
  2629  0595  0E7E               	swapf	saved_w,w
  2630  0596  0009               	retfie
  2631                           	opt stack 0
  2632                           GLOBAL	__end_of_isr1
  2633  0597                     	__end_of_isr1:
  2634 ;; =============== function _isr1 ends ============
  2635                           
  2636                           	signat	_isr1,88
  2637                           	global	_ADCconvert
  2638                           psect	text463,local,class=CODE,delta=2
  2639                           global __ptext463
  2640  0015                     __ptext463:
  2641                           
  2642 ;; *************** function _ADCconvert *****************
  2643 ;; Defined at:
  2644 ;;		line 44 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  adcVal          2   43[BANK0 ] unsigned int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  adcOutput      16   49[BANK0 ] unsigned char [16]
  2649 ;;  distance        2   65[BANK0 ] unsigned int 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       2       0       0       0
  2660 ;;      Locals:         0      18       0       0       0
  2661 ;;      Temps:          0       4       0       0       0
  2662 ;;      Totals:         0      24       0       0       0
  2663 ;;Total ram usage:       24 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    2
  2666 ;; This function calls:
  2667 ;;		___lwmod
  2668 ;;		i1_lcd_write_control
  2669 ;;		_sprintf
  2670 ;;		_lcd_set_cursor
  2671 ;;		_lcd_write_string
  2672 ;; This function is called by:
  2673 ;;		_isr1
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           psect	text463
  2677                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  2678                           	line	44
  2679                           	global	__size_of_ADCconvert
  2680  025C                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  2681                           	
  2682  0015                     _ADCconvert:	
  2683                           	opt	stack 1
  2684                           ; Regs used in _ADCconvert: [allreg]
  2685                           	line	45
  2686                           	
  2687  0015                     i1l6514:	
  2688                           ;infrared.c: 45: char adcOutput[16] = "";
  2689  0015  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  2690  0016  0084               	movwf	fsr0
  2691  0017  30A0               	movlw	low(ADCconvert@F1192)
  2692  0018  1283               	bcf	status, 5	;RP0=0, select bank0
  2693  0019  1303               	bcf	status, 6	;RP1=0, select bank0
  2694  001A  00CD               	movwf	(??_ADCconvert+0)+0
  2695  001B  0804               	movf	fsr0,w
  2696  001C  00CE               	movwf	((??_ADCconvert+0)+0+1)
  2697  001D  3010               	movlw	16
  2698  001E  00CF               	movwf	((??_ADCconvert+0)+0+2)
  2699  001F                     u316_20:
  2700  001F  084D               	movf	(??_ADCconvert+0)+0,w
  2701  0020  0084               	movwf	fsr0
  2702  0021  1383               	bcf	status, 7	;select IRP bank1
  2703                           	
  2704  0022  0800               	movf	indf,w
  2705  0023  00D0               	movwf	((??_ADCconvert+0)+0+3)
  2706  0024  0ACD               	incf	(??_ADCconvert+0)+0,f
  2707  0025  084E               	movf	((??_ADCconvert+0)+0+1),w
  2708  0026  0084               	movwf	fsr0
  2709                           	
  2710  0027  0850               	movf	((??_ADCconvert+0)+0+3),w
  2711  0028  0080               	movwf	indf
  2712  0029  0ACE               	incf	((??_ADCconvert+0)+0+1),f
  2713  002A  0BCF               	decfsz	((??_ADCconvert+0)+0+2),f
  2714  002B  281F               	goto	u316_20
  2715                           	line	47
  2716                           	
  2717  002C                     i1l6516:	
  2718                           ;infrared.c: 46: unsigned int distance;
  2719                           ;infrared.c: 47: if (adcVal > 250)
  2720  002C  3000               	movlw	high(0FBh)
  2721  002D  024C               	subwf	(ADCconvert@adcVal+1),w
  2722  002E  30FB               	movlw	low(0FBh)
  2723  002F  1903               	skipnz
  2724  0030  024B               	subwf	(ADCconvert@adcVal),w
  2725  0031  1C03               	skipc
  2726  0032  2834               	goto	u317_21
  2727  0033  2835               	goto	u317_20
  2728  0034                     u317_21:
  2729  0034  283A               	goto	i1l6520
  2730  0035                     u317_20:
  2731                           	line	49
  2732                           	
  2733  0035                     i1l6518:	
  2734                           ;infrared.c: 48: {
  2735                           ;infrared.c: 49: distance = 20;
  2736  0035  3014               	movlw	low(014h)
  2737  0036  00E1               	movwf	(ADCconvert@distance)
  2738  0037  3000               	movlw	high(014h)
  2739  0038  00E2               	movwf	((ADCconvert@distance))+1
  2740                           	line	50
  2741                           ;infrared.c: 50: }
  2742  0039  2A4C               	goto	i1l2898
  2743                           	line	51
  2744                           	
  2745  003A                     i1l2897:	
  2746                           	
  2747  003A                     i1l6520:	
  2748                           ;infrared.c: 51: else if (adcVal < 250 && adcVal >= 190)
  2749  003A  3000               	movlw	high(0FAh)
  2750  003B  024C               	subwf	(ADCconvert@adcVal+1),w
  2751  003C  30FA               	movlw	low(0FAh)
  2752  003D  1903               	skipnz
  2753  003E  024B               	subwf	(ADCconvert@adcVal),w
  2754  003F  1803               	skipnc
  2755  0040  2842               	goto	u318_21
  2756  0041  2843               	goto	u318_20
  2757  0042                     u318_21:
  2758  0042  2866               	goto	i1l6526
  2759  0043                     u318_20:
  2760                           	
  2761  0043                     i1l6522:	
  2762  0043  3000               	movlw	high(0BEh)
  2763  0044  024C               	subwf	(ADCconvert@adcVal+1),w
  2764  0045  30BE               	movlw	low(0BEh)
  2765  0046  1903               	skipnz
  2766  0047  024B               	subwf	(ADCconvert@adcVal),w
  2767  0048  1C03               	skipc
  2768  0049  284B               	goto	u319_21
  2769  004A  284C               	goto	u319_20
  2770  004B                     u319_21:
  2771  004B  2866               	goto	i1l6526
  2772  004C                     u319_20:
  2773                           	line	53
  2774                           	
  2775  004C                     i1l6524:	
  2776                           ;infrared.c: 52: {
  2777                           ;infrared.c: 53: distance = 20+ (adcVal%100) ;
  2778  004C  3064               	movlw	low(064h)
  2779  004D  00F8               	movwf	(?___lwmod)
  2780  004E  3000               	movlw	high(064h)
  2781  004F  00F9               	movwf	((?___lwmod))+1
  2782  0050  084C               	movf	(ADCconvert@adcVal+1),w
  2783  0051  01FB               	clrf	1+(?___lwmod)+02h
  2784  0052  07FB               	addwf	1+(?___lwmod)+02h
  2785  0053  084B               	movf	(ADCconvert@adcVal),w
  2786  0054  01FA               	clrf	0+(?___lwmod)+02h
  2787  0055  07FA               	addwf	0+(?___lwmod)+02h
  2788                           
  2789  0056  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2790  005B  0878               	movf	(0+(?___lwmod)),w
  2791  005C  3E14               	addlw	low(014h)
  2792  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2793  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2794  005F  00E1               	movwf	(ADCconvert@distance)
  2795  0060  0879               	movf	(1+(?___lwmod)),w
  2796  0061  1803               	skipnc
  2797  0062  3E01               	addlw	1
  2798  0063  3E00               	addlw	high(014h)
  2799  0064  00E2               	movwf	1+(ADCconvert@distance)
  2800                           	line	54
  2801                           ;infrared.c: 54: }
  2802  0065  2A4C               	goto	i1l2898
  2803                           	line	55
  2804                           	
  2805  0066                     i1l2899:	
  2806                           	
  2807  0066                     i1l6526:	
  2808                           ;infrared.c: 55: else if (adcVal < 190 && adcVal >= 96)
  2809  0066  3000               	movlw	high(0BEh)
  2810  0067  024C               	subwf	(ADCconvert@adcVal+1),w
  2811  0068  30BE               	movlw	low(0BEh)
  2812  0069  1903               	skipnz
  2813  006A  024B               	subwf	(ADCconvert@adcVal),w
  2814  006B  1803               	skipnc
  2815  006C  286E               	goto	u320_21
  2816  006D  286F               	goto	u320_20
  2817  006E                     u320_21:
  2818  006E  2892               	goto	i1l6532
  2819  006F                     u320_20:
  2820                           	
  2821  006F                     i1l6528:	
  2822  006F  3000               	movlw	high(060h)
  2823  0070  024C               	subwf	(ADCconvert@adcVal+1),w
  2824  0071  3060               	movlw	low(060h)
  2825  0072  1903               	skipnz
  2826  0073  024B               	subwf	(ADCconvert@adcVal),w
  2827  0074  1C03               	skipc
  2828  0075  2877               	goto	u321_21
  2829  0076  2878               	goto	u321_20
  2830  0077                     u321_21:
  2831  0077  2892               	goto	i1l6532
  2832  0078                     u321_20:
  2833                           	line	57
  2834                           	
  2835  0078                     i1l6530:	
  2836                           ;infrared.c: 56: {
  2837                           ;infrared.c: 57: distance = 30+ (adcVal%100) ;
  2838  0078  3064               	movlw	low(064h)
  2839  0079  00F8               	movwf	(?___lwmod)
  2840  007A  3000               	movlw	high(064h)
  2841  007B  00F9               	movwf	((?___lwmod))+1
  2842  007C  084C               	movf	(ADCconvert@adcVal+1),w
  2843  007D  01FB               	clrf	1+(?___lwmod)+02h
  2844  007E  07FB               	addwf	1+(?___lwmod)+02h
  2845  007F  084B               	movf	(ADCconvert@adcVal),w
  2846  0080  01FA               	clrf	0+(?___lwmod)+02h
  2847  0081  07FA               	addwf	0+(?___lwmod)+02h
  2848                           
  2849  0082  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2850  0087  0878               	movf	(0+(?___lwmod)),w
  2851  0088  3E1E               	addlw	low(01Eh)
  2852  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  2853  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  2854  008B  00E1               	movwf	(ADCconvert@distance)
  2855  008C  0879               	movf	(1+(?___lwmod)),w
  2856  008D  1803               	skipnc
  2857  008E  3E01               	addlw	1
  2858  008F  3E00               	addlw	high(01Eh)
  2859  0090  00E2               	movwf	1+(ADCconvert@distance)
  2860                           	line	58
  2861                           ;infrared.c: 58: }
  2862  0091  2A4C               	goto	i1l2898
  2863                           	line	59
  2864                           	
  2865  0092                     i1l2901:	
  2866                           	
  2867  0092                     i1l6532:	
  2868                           ;infrared.c: 59: else if (adcVal < 190 && adcVal >= 96)
  2869  0092  3000               	movlw	high(0BEh)
  2870  0093  024C               	subwf	(ADCconvert@adcVal+1),w
  2871  0094  30BE               	movlw	low(0BEh)
  2872  0095  1903               	skipnz
  2873  0096  024B               	subwf	(ADCconvert@adcVal),w
  2874  0097  1803               	skipnc
  2875  0098  289A               	goto	u322_21
  2876  0099  289B               	goto	u322_20
  2877  009A                     u322_21:
  2878  009A  28BE               	goto	i1l6538
  2879  009B                     u322_20:
  2880                           	
  2881  009B                     i1l6534:	
  2882  009B  3000               	movlw	high(060h)
  2883  009C  024C               	subwf	(ADCconvert@adcVal+1),w
  2884  009D  3060               	movlw	low(060h)
  2885  009E  1903               	skipnz
  2886  009F  024B               	subwf	(ADCconvert@adcVal),w
  2887  00A0  1C03               	skipc
  2888  00A1  28A3               	goto	u323_21
  2889  00A2  28A4               	goto	u323_20
  2890  00A3                     u323_21:
  2891  00A3  28BE               	goto	i1l6538
  2892  00A4                     u323_20:
  2893                           	line	61
  2894                           	
  2895  00A4                     i1l6536:	
  2896                           ;infrared.c: 60: {
  2897                           ;infrared.c: 61: distance = 40+ (adcVal%100) ;
  2898  00A4  3064               	movlw	low(064h)
  2899  00A5  00F8               	movwf	(?___lwmod)
  2900  00A6  3000               	movlw	high(064h)
  2901  00A7  00F9               	movwf	((?___lwmod))+1
  2902  00A8  084C               	movf	(ADCconvert@adcVal+1),w
  2903  00A9  01FB               	clrf	1+(?___lwmod)+02h
  2904  00AA  07FB               	addwf	1+(?___lwmod)+02h
  2905  00AB  084B               	movf	(ADCconvert@adcVal),w
  2906  00AC  01FA               	clrf	0+(?___lwmod)+02h
  2907  00AD  07FA               	addwf	0+(?___lwmod)+02h
  2908                           
  2909  00AE  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2910  00B3  0878               	movf	(0+(?___lwmod)),w
  2911  00B4  3E28               	addlw	low(028h)
  2912  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2913  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2914  00B7  00E1               	movwf	(ADCconvert@distance)
  2915  00B8  0879               	movf	(1+(?___lwmod)),w
  2916  00B9  1803               	skipnc
  2917  00BA  3E01               	addlw	1
  2918  00BB  3E00               	addlw	high(028h)
  2919  00BC  00E2               	movwf	1+(ADCconvert@distance)
  2920                           	line	62
  2921                           ;infrared.c: 62: }
  2922  00BD  2A4C               	goto	i1l2898
  2923                           	line	63
  2924                           	
  2925  00BE                     i1l2903:	
  2926                           	
  2927  00BE                     i1l6538:	
  2928                           ;infrared.c: 63: else if (adcVal < 115 && adcVal >= 96)
  2929  00BE  3000               	movlw	high(073h)
  2930  00BF  024C               	subwf	(ADCconvert@adcVal+1),w
  2931  00C0  3073               	movlw	low(073h)
  2932  00C1  1903               	skipnz
  2933  00C2  024B               	subwf	(ADCconvert@adcVal),w
  2934  00C3  1803               	skipnc
  2935  00C4  28C6               	goto	u324_21
  2936  00C5  28C7               	goto	u324_20
  2937  00C6                     u324_21:
  2938  00C6  28EA               	goto	i1l6544
  2939  00C7                     u324_20:
  2940                           	
  2941  00C7                     i1l6540:	
  2942  00C7  3000               	movlw	high(060h)
  2943  00C8  024C               	subwf	(ADCconvert@adcVal+1),w
  2944  00C9  3060               	movlw	low(060h)
  2945  00CA  1903               	skipnz
  2946  00CB  024B               	subwf	(ADCconvert@adcVal),w
  2947  00CC  1C03               	skipc
  2948  00CD  28CF               	goto	u325_21
  2949  00CE  28D0               	goto	u325_20
  2950  00CF                     u325_21:
  2951  00CF  28EA               	goto	i1l6544
  2952  00D0                     u325_20:
  2953                           	line	65
  2954                           	
  2955  00D0                     i1l6542:	
  2956                           ;infrared.c: 64: {
  2957                           ;infrared.c: 65: distance = 50+ (adcVal%100) ;
  2958  00D0  3064               	movlw	low(064h)
  2959  00D1  00F8               	movwf	(?___lwmod)
  2960  00D2  3000               	movlw	high(064h)
  2961  00D3  00F9               	movwf	((?___lwmod))+1
  2962  00D4  084C               	movf	(ADCconvert@adcVal+1),w
  2963  00D5  01FB               	clrf	1+(?___lwmod)+02h
  2964  00D6  07FB               	addwf	1+(?___lwmod)+02h
  2965  00D7  084B               	movf	(ADCconvert@adcVal),w
  2966  00D8  01FA               	clrf	0+(?___lwmod)+02h
  2967  00D9  07FA               	addwf	0+(?___lwmod)+02h
  2968                           
  2969  00DA  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  2970  00DF  0878               	movf	(0+(?___lwmod)),w
  2971  00E0  3E32               	addlw	low(032h)
  2972  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2973  00E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2974  00E3  00E1               	movwf	(ADCconvert@distance)
  2975  00E4  0879               	movf	(1+(?___lwmod)),w
  2976  00E5  1803               	skipnc
  2977  00E6  3E01               	addlw	1
  2978  00E7  3E00               	addlw	high(032h)
  2979  00E8  00E2               	movwf	1+(ADCconvert@distance)
  2980                           	line	66
  2981                           ;infrared.c: 66: }
  2982  00E9  2A4C               	goto	i1l2898
  2983                           	line	67
  2984                           	
  2985  00EA                     i1l2905:	
  2986                           	
  2987  00EA                     i1l6544:	
  2988                           ;infrared.c: 67: else if (adcVal < 96 && adcVal >= 82)
  2989  00EA  3000               	movlw	high(060h)
  2990  00EB  024C               	subwf	(ADCconvert@adcVal+1),w
  2991  00EC  3060               	movlw	low(060h)
  2992  00ED  1903               	skipnz
  2993  00EE  024B               	subwf	(ADCconvert@adcVal),w
  2994  00EF  1803               	skipnc
  2995  00F0  28F2               	goto	u326_21
  2996  00F1  28F3               	goto	u326_20
  2997  00F2                     u326_21:
  2998  00F2  2916               	goto	i1l6550
  2999  00F3                     u326_20:
  3000                           	
  3001  00F3                     i1l6546:	
  3002  00F3  3000               	movlw	high(052h)
  3003  00F4  024C               	subwf	(ADCconvert@adcVal+1),w
  3004  00F5  3052               	movlw	low(052h)
  3005  00F6  1903               	skipnz
  3006  00F7  024B               	subwf	(ADCconvert@adcVal),w
  3007  00F8  1C03               	skipc
  3008  00F9  28FB               	goto	u327_21
  3009  00FA  28FC               	goto	u327_20
  3010  00FB                     u327_21:
  3011  00FB  2916               	goto	i1l6550
  3012  00FC                     u327_20:
  3013                           	line	69
  3014                           	
  3015  00FC                     i1l6548:	
  3016                           ;infrared.c: 68: {
  3017                           ;infrared.c: 69: distance = 60+ (adcVal%100) ;
  3018  00FC  3064               	movlw	low(064h)
  3019  00FD  00F8               	movwf	(?___lwmod)
  3020  00FE  3000               	movlw	high(064h)
  3021  00FF  00F9               	movwf	((?___lwmod))+1
  3022  0100  084C               	movf	(ADCconvert@adcVal+1),w
  3023  0101  01FB               	clrf	1+(?___lwmod)+02h
  3024  0102  07FB               	addwf	1+(?___lwmod)+02h
  3025  0103  084B               	movf	(ADCconvert@adcVal),w
  3026  0104  01FA               	clrf	0+(?___lwmod)+02h
  3027  0105  07FA               	addwf	0+(?___lwmod)+02h
  3028                           
  3029  0106  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3030  010B  0878               	movf	(0+(?___lwmod)),w
  3031  010C  3E3C               	addlw	low(03Ch)
  3032  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  3033  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  3034  010F  00E1               	movwf	(ADCconvert@distance)
  3035  0110  0879               	movf	(1+(?___lwmod)),w
  3036  0111  1803               	skipnc
  3037  0112  3E01               	addlw	1
  3038  0113  3E00               	addlw	high(03Ch)
  3039  0114  00E2               	movwf	1+(ADCconvert@distance)
  3040                           	line	70
  3041                           ;infrared.c: 70: }
  3042  0115  2A4C               	goto	i1l2898
  3043                           	line	71
  3044                           	
  3045  0116                     i1l2907:	
  3046                           	
  3047  0116                     i1l6550:	
  3048                           ;infrared.c: 71: else if (adcVal < 82 && adcVal >= 70)
  3049  0116  3000               	movlw	high(052h)
  3050  0117  024C               	subwf	(ADCconvert@adcVal+1),w
  3051  0118  3052               	movlw	low(052h)
  3052  0119  1903               	skipnz
  3053  011A  024B               	subwf	(ADCconvert@adcVal),w
  3054  011B  1803               	skipnc
  3055  011C  291E               	goto	u328_21
  3056  011D  291F               	goto	u328_20
  3057  011E                     u328_21:
  3058  011E  2942               	goto	i1l6556
  3059  011F                     u328_20:
  3060                           	
  3061  011F                     i1l6552:	
  3062  011F  3000               	movlw	high(046h)
  3063  0120  024C               	subwf	(ADCconvert@adcVal+1),w
  3064  0121  3046               	movlw	low(046h)
  3065  0122  1903               	skipnz
  3066  0123  024B               	subwf	(ADCconvert@adcVal),w
  3067  0124  1C03               	skipc
  3068  0125  2927               	goto	u329_21
  3069  0126  2928               	goto	u329_20
  3070  0127                     u329_21:
  3071  0127  2942               	goto	i1l6556
  3072  0128                     u329_20:
  3073                           	line	73
  3074                           	
  3075  0128                     i1l6554:	
  3076                           ;infrared.c: 72: {
  3077                           ;infrared.c: 73: distance = 70+ (adcVal%100) ;
  3078  0128  3064               	movlw	low(064h)
  3079  0129  00F8               	movwf	(?___lwmod)
  3080  012A  3000               	movlw	high(064h)
  3081  012B  00F9               	movwf	((?___lwmod))+1
  3082  012C  084C               	movf	(ADCconvert@adcVal+1),w
  3083  012D  01FB               	clrf	1+(?___lwmod)+02h
  3084  012E  07FB               	addwf	1+(?___lwmod)+02h
  3085  012F  084B               	movf	(ADCconvert@adcVal),w
  3086  0130  01FA               	clrf	0+(?___lwmod)+02h
  3087  0131  07FA               	addwf	0+(?___lwmod)+02h
  3088                           
  3089  0132  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3090  0137  0878               	movf	(0+(?___lwmod)),w
  3091  0138  3E46               	addlw	low(046h)
  3092  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  3093  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  3094  013B  00E1               	movwf	(ADCconvert@distance)
  3095  013C  0879               	movf	(1+(?___lwmod)),w
  3096  013D  1803               	skipnc
  3097  013E  3E01               	addlw	1
  3098  013F  3E00               	addlw	high(046h)
  3099  0140  00E2               	movwf	1+(ADCconvert@distance)
  3100                           	line	74
  3101                           ;infrared.c: 74: }
  3102  0141  2A4C               	goto	i1l2898
  3103                           	line	75
  3104                           	
  3105  0142                     i1l2909:	
  3106                           	
  3107  0142                     i1l6556:	
  3108                           ;infrared.c: 75: else if (adcVal < 70 && adcVal >= 64)
  3109  0142  3000               	movlw	high(046h)
  3110  0143  024C               	subwf	(ADCconvert@adcVal+1),w
  3111  0144  3046               	movlw	low(046h)
  3112  0145  1903               	skipnz
  3113  0146  024B               	subwf	(ADCconvert@adcVal),w
  3114  0147  1803               	skipnc
  3115  0148  294A               	goto	u330_21
  3116  0149  294B               	goto	u330_20
  3117  014A                     u330_21:
  3118  014A  296E               	goto	i1l6562
  3119  014B                     u330_20:
  3120                           	
  3121  014B                     i1l6558:	
  3122  014B  3000               	movlw	high(040h)
  3123  014C  024C               	subwf	(ADCconvert@adcVal+1),w
  3124  014D  3040               	movlw	low(040h)
  3125  014E  1903               	skipnz
  3126  014F  024B               	subwf	(ADCconvert@adcVal),w
  3127  0150  1C03               	skipc
  3128  0151  2953               	goto	u331_21
  3129  0152  2954               	goto	u331_20
  3130  0153                     u331_21:
  3131  0153  296E               	goto	i1l6562
  3132  0154                     u331_20:
  3133                           	line	77
  3134                           	
  3135  0154                     i1l6560:	
  3136                           ;infrared.c: 76: {
  3137                           ;infrared.c: 77: distance = 80+ (adcVal%100) ;
  3138  0154  3064               	movlw	low(064h)
  3139  0155  00F8               	movwf	(?___lwmod)
  3140  0156  3000               	movlw	high(064h)
  3141  0157  00F9               	movwf	((?___lwmod))+1
  3142  0158  084C               	movf	(ADCconvert@adcVal+1),w
  3143  0159  01FB               	clrf	1+(?___lwmod)+02h
  3144  015A  07FB               	addwf	1+(?___lwmod)+02h
  3145  015B  084B               	movf	(ADCconvert@adcVal),w
  3146  015C  01FA               	clrf	0+(?___lwmod)+02h
  3147  015D  07FA               	addwf	0+(?___lwmod)+02h
  3148                           
  3149  015E  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3150  0163  0878               	movf	(0+(?___lwmod)),w
  3151  0164  3E50               	addlw	low(050h)
  3152  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  3153  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  3154  0167  00E1               	movwf	(ADCconvert@distance)
  3155  0168  0879               	movf	(1+(?___lwmod)),w
  3156  0169  1803               	skipnc
  3157  016A  3E01               	addlw	1
  3158  016B  3E00               	addlw	high(050h)
  3159  016C  00E2               	movwf	1+(ADCconvert@distance)
  3160                           	line	78
  3161                           ;infrared.c: 78: }
  3162  016D  2A4C               	goto	i1l2898
  3163                           	line	79
  3164                           	
  3165  016E                     i1l2911:	
  3166                           	
  3167  016E                     i1l6562:	
  3168                           ;infrared.c: 79: else if (adcVal < 64 && adcVal >= 56)
  3169  016E  3000               	movlw	high(040h)
  3170  016F  024C               	subwf	(ADCconvert@adcVal+1),w
  3171  0170  3040               	movlw	low(040h)
  3172  0171  1903               	skipnz
  3173  0172  024B               	subwf	(ADCconvert@adcVal),w
  3174  0173  1803               	skipnc
  3175  0174  2976               	goto	u332_21
  3176  0175  2977               	goto	u332_20
  3177  0176                     u332_21:
  3178  0176  299A               	goto	i1l6568
  3179  0177                     u332_20:
  3180                           	
  3181  0177                     i1l6564:	
  3182  0177  3000               	movlw	high(038h)
  3183  0178  024C               	subwf	(ADCconvert@adcVal+1),w
  3184  0179  3038               	movlw	low(038h)
  3185  017A  1903               	skipnz
  3186  017B  024B               	subwf	(ADCconvert@adcVal),w
  3187  017C  1C03               	skipc
  3188  017D  297F               	goto	u333_21
  3189  017E  2980               	goto	u333_20
  3190  017F                     u333_21:
  3191  017F  299A               	goto	i1l6568
  3192  0180                     u333_20:
  3193                           	line	81
  3194                           	
  3195  0180                     i1l6566:	
  3196                           ;infrared.c: 80: {
  3197                           ;infrared.c: 81: distance = 90+ (adcVal%100) ;
  3198  0180  3064               	movlw	low(064h)
  3199  0181  00F8               	movwf	(?___lwmod)
  3200  0182  3000               	movlw	high(064h)
  3201  0183  00F9               	movwf	((?___lwmod))+1
  3202  0184  084C               	movf	(ADCconvert@adcVal+1),w
  3203  0185  01FB               	clrf	1+(?___lwmod)+02h
  3204  0186  07FB               	addwf	1+(?___lwmod)+02h
  3205  0187  084B               	movf	(ADCconvert@adcVal),w
  3206  0188  01FA               	clrf	0+(?___lwmod)+02h
  3207  0189  07FA               	addwf	0+(?___lwmod)+02h
  3208                           
  3209  018A  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3210  018F  0878               	movf	(0+(?___lwmod)),w
  3211  0190  3E5A               	addlw	low(05Ah)
  3212  0191  1283               	bcf	status, 5	;RP0=0, select bank0
  3213  0192  1303               	bcf	status, 6	;RP1=0, select bank0
  3214  0193  00E1               	movwf	(ADCconvert@distance)
  3215  0194  0879               	movf	(1+(?___lwmod)),w
  3216  0195  1803               	skipnc
  3217  0196  3E01               	addlw	1
  3218  0197  3E00               	addlw	high(05Ah)
  3219  0198  00E2               	movwf	1+(ADCconvert@distance)
  3220                           	line	82
  3221                           ;infrared.c: 82: }
  3222  0199  2A4C               	goto	i1l2898
  3223                           	line	83
  3224                           	
  3225  019A                     i1l2913:	
  3226                           	
  3227  019A                     i1l6568:	
  3228                           ;infrared.c: 83: else if (adcVal < 56 && adcVal >= 45)
  3229  019A  3000               	movlw	high(038h)
  3230  019B  024C               	subwf	(ADCconvert@adcVal+1),w
  3231  019C  3038               	movlw	low(038h)
  3232  019D  1903               	skipnz
  3233  019E  024B               	subwf	(ADCconvert@adcVal),w
  3234  019F  1803               	skipnc
  3235  01A0  29A2               	goto	u334_21
  3236  01A1  29A3               	goto	u334_20
  3237  01A2                     u334_21:
  3238  01A2  29C6               	goto	i1l6574
  3239  01A3                     u334_20:
  3240                           	
  3241  01A3                     i1l6570:	
  3242  01A3  3000               	movlw	high(02Dh)
  3243  01A4  024C               	subwf	(ADCconvert@adcVal+1),w
  3244  01A5  302D               	movlw	low(02Dh)
  3245  01A6  1903               	skipnz
  3246  01A7  024B               	subwf	(ADCconvert@adcVal),w
  3247  01A8  1C03               	skipc
  3248  01A9  29AB               	goto	u335_21
  3249  01AA  29AC               	goto	u335_20
  3250  01AB                     u335_21:
  3251  01AB  29C6               	goto	i1l6574
  3252  01AC                     u335_20:
  3253                           	line	85
  3254                           	
  3255  01AC                     i1l6572:	
  3256                           ;infrared.c: 84: {
  3257                           ;infrared.c: 85: distance = 100+ (adcVal%100) ;
  3258  01AC  3064               	movlw	low(064h)
  3259  01AD  00F8               	movwf	(?___lwmod)
  3260  01AE  3000               	movlw	high(064h)
  3261  01AF  00F9               	movwf	((?___lwmod))+1
  3262  01B0  084C               	movf	(ADCconvert@adcVal+1),w
  3263  01B1  01FB               	clrf	1+(?___lwmod)+02h
  3264  01B2  07FB               	addwf	1+(?___lwmod)+02h
  3265  01B3  084B               	movf	(ADCconvert@adcVal),w
  3266  01B4  01FA               	clrf	0+(?___lwmod)+02h
  3267  01B5  07FA               	addwf	0+(?___lwmod)+02h
  3268                           
  3269  01B6  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3270  01BB  0878               	movf	(0+(?___lwmod)),w
  3271  01BC  3E64               	addlw	low(064h)
  3272  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3273  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3274  01BF  00E1               	movwf	(ADCconvert@distance)
  3275  01C0  0879               	movf	(1+(?___lwmod)),w
  3276  01C1  1803               	skipnc
  3277  01C2  3E01               	addlw	1
  3278  01C3  3E00               	addlw	high(064h)
  3279  01C4  00E2               	movwf	1+(ADCconvert@distance)
  3280                           	line	86
  3281                           ;infrared.c: 86: }
  3282  01C5  2A4C               	goto	i1l2898
  3283                           	line	87
  3284                           	
  3285  01C6                     i1l2915:	
  3286                           	
  3287  01C6                     i1l6574:	
  3288                           ;infrared.c: 87: else if (adcVal < 45 && adcVal >= 40)
  3289  01C6  3000               	movlw	high(02Dh)
  3290  01C7  024C               	subwf	(ADCconvert@adcVal+1),w
  3291  01C8  302D               	movlw	low(02Dh)
  3292  01C9  1903               	skipnz
  3293  01CA  024B               	subwf	(ADCconvert@adcVal),w
  3294  01CB  1803               	skipnc
  3295  01CC  29CE               	goto	u336_21
  3296  01CD  29CF               	goto	u336_20
  3297  01CE                     u336_21:
  3298  01CE  29F2               	goto	i1l6580
  3299  01CF                     u336_20:
  3300                           	
  3301  01CF                     i1l6576:	
  3302  01CF  3000               	movlw	high(028h)
  3303  01D0  024C               	subwf	(ADCconvert@adcVal+1),w
  3304  01D1  3028               	movlw	low(028h)
  3305  01D2  1903               	skipnz
  3306  01D3  024B               	subwf	(ADCconvert@adcVal),w
  3307  01D4  1C03               	skipc
  3308  01D5  29D7               	goto	u337_21
  3309  01D6  29D8               	goto	u337_20
  3310  01D7                     u337_21:
  3311  01D7  29F2               	goto	i1l6580
  3312  01D8                     u337_20:
  3313                           	line	89
  3314                           	
  3315  01D8                     i1l6578:	
  3316                           ;infrared.c: 88: {
  3317                           ;infrared.c: 89: distance = 110+ (adcVal%100) ;
  3318  01D8  3064               	movlw	low(064h)
  3319  01D9  00F8               	movwf	(?___lwmod)
  3320  01DA  3000               	movlw	high(064h)
  3321  01DB  00F9               	movwf	((?___lwmod))+1
  3322  01DC  084C               	movf	(ADCconvert@adcVal+1),w
  3323  01DD  01FB               	clrf	1+(?___lwmod)+02h
  3324  01DE  07FB               	addwf	1+(?___lwmod)+02h
  3325  01DF  084B               	movf	(ADCconvert@adcVal),w
  3326  01E0  01FA               	clrf	0+(?___lwmod)+02h
  3327  01E1  07FA               	addwf	0+(?___lwmod)+02h
  3328                           
  3329  01E2  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3330  01E7  0878               	movf	(0+(?___lwmod)),w
  3331  01E8  3E6E               	addlw	low(06Eh)
  3332  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3333  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3334  01EB  00E1               	movwf	(ADCconvert@distance)
  3335  01EC  0879               	movf	(1+(?___lwmod)),w
  3336  01ED  1803               	skipnc
  3337  01EE  3E01               	addlw	1
  3338  01EF  3E00               	addlw	high(06Eh)
  3339  01F0  00E2               	movwf	1+(ADCconvert@distance)
  3340                           	line	90
  3341                           ;infrared.c: 90: }
  3342  01F1  2A4C               	goto	i1l2898
  3343                           	line	91
  3344                           	
  3345  01F2                     i1l2917:	
  3346                           	
  3347  01F2                     i1l6580:	
  3348                           ;infrared.c: 91: else if (adcVal < 40 && adcVal >= 33)
  3349  01F2  3000               	movlw	high(028h)
  3350  01F3  024C               	subwf	(ADCconvert@adcVal+1),w
  3351  01F4  3028               	movlw	low(028h)
  3352  01F5  1903               	skipnz
  3353  01F6  024B               	subwf	(ADCconvert@adcVal),w
  3354  01F7  1803               	skipnc
  3355  01F8  29FA               	goto	u338_21
  3356  01F9  29FB               	goto	u338_20
  3357  01FA                     u338_21:
  3358  01FA  2A1E               	goto	i1l6586
  3359  01FB                     u338_20:
  3360                           	
  3361  01FB                     i1l6582:	
  3362  01FB  3000               	movlw	high(021h)
  3363  01FC  024C               	subwf	(ADCconvert@adcVal+1),w
  3364  01FD  3021               	movlw	low(021h)
  3365  01FE  1903               	skipnz
  3366  01FF  024B               	subwf	(ADCconvert@adcVal),w
  3367  0200  1C03               	skipc
  3368  0201  2A03               	goto	u339_21
  3369  0202  2A04               	goto	u339_20
  3370  0203                     u339_21:
  3371  0203  2A1E               	goto	i1l6586
  3372  0204                     u339_20:
  3373                           	line	93
  3374                           	
  3375  0204                     i1l6584:	
  3376                           ;infrared.c: 92: {
  3377                           ;infrared.c: 93: distance = 120+ (adcVal%100) ;
  3378  0204  3064               	movlw	low(064h)
  3379  0205  00F8               	movwf	(?___lwmod)
  3380  0206  3000               	movlw	high(064h)
  3381  0207  00F9               	movwf	((?___lwmod))+1
  3382  0208  084C               	movf	(ADCconvert@adcVal+1),w
  3383  0209  01FB               	clrf	1+(?___lwmod)+02h
  3384  020A  07FB               	addwf	1+(?___lwmod)+02h
  3385  020B  084B               	movf	(ADCconvert@adcVal),w
  3386  020C  01FA               	clrf	0+(?___lwmod)+02h
  3387  020D  07FA               	addwf	0+(?___lwmod)+02h
  3388                           
  3389  020E  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3390  0213  0878               	movf	(0+(?___lwmod)),w
  3391  0214  3E78               	addlw	low(078h)
  3392  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  3393  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  3394  0217  00E1               	movwf	(ADCconvert@distance)
  3395  0218  0879               	movf	(1+(?___lwmod)),w
  3396  0219  1803               	skipnc
  3397  021A  3E01               	addlw	1
  3398  021B  3E00               	addlw	high(078h)
  3399  021C  00E2               	movwf	1+(ADCconvert@distance)
  3400                           	line	94
  3401                           ;infrared.c: 94: }
  3402  021D  2A4C               	goto	i1l2898
  3403                           	line	95
  3404                           	
  3405  021E                     i1l2919:	
  3406                           	
  3407  021E                     i1l6586:	
  3408                           ;infrared.c: 95: else if (adcVal < 33 )
  3409  021E  3000               	movlw	high(021h)
  3410  021F  024C               	subwf	(ADCconvert@adcVal+1),w
  3411  0220  3021               	movlw	low(021h)
  3412  0221  1903               	skipnz
  3413  0222  024B               	subwf	(ADCconvert@adcVal),w
  3414  0223  1803               	skipnc
  3415  0224  2A26               	goto	u340_21
  3416  0225  2A27               	goto	u340_20
  3417  0226                     u340_21:
  3418  0226  2A4C               	goto	i1l2898
  3419  0227                     u340_20:
  3420                           	line	97
  3421                           	
  3422  0227                     i1l6588:	
  3423                           ;infrared.c: 96: {
  3424                           ;infrared.c: 97: distance = 130 + (adcVal%100) ;
  3425  0227  3064               	movlw	low(064h)
  3426  0228  00F8               	movwf	(?___lwmod)
  3427  0229  3000               	movlw	high(064h)
  3428  022A  00F9               	movwf	((?___lwmod))+1
  3429  022B  084C               	movf	(ADCconvert@adcVal+1),w
  3430  022C  01FB               	clrf	1+(?___lwmod)+02h
  3431  022D  07FB               	addwf	1+(?___lwmod)+02h
  3432  022E  084B               	movf	(ADCconvert@adcVal),w
  3433  022F  01FA               	clrf	0+(?___lwmod)+02h
  3434  0230  07FA               	addwf	0+(?___lwmod)+02h
  3435                           
  3436  0231  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  3437  0236  0878               	movf	(0+(?___lwmod)),w
  3438  0237  3E82               	addlw	low(082h)
  3439  0238  1283               	bcf	status, 5	;RP0=0, select bank0
  3440  0239  1303               	bcf	status, 6	;RP1=0, select bank0
  3441  023A  00E1               	movwf	(ADCconvert@distance)
  3442  023B  0879               	movf	(1+(?___lwmod)),w
  3443  023C  1803               	skipnc
  3444  023D  3E01               	addlw	1
  3445  023E  3E00               	addlw	high(082h)
  3446  023F  00E2               	movwf	1+(ADCconvert@distance)
  3447  0240  2A4C               	goto	i1l2898
  3448                           	line	98
  3449                           	
  3450  0241                     i1l2921:	
  3451  0241  2A4C               	goto	i1l2898
  3452                           	line	102
  3453                           	
  3454  0242                     i1l2920:	
  3455  0242  2A4C               	goto	i1l2898
  3456                           	
  3457  0243                     i1l2918:	
  3458  0243  2A4C               	goto	i1l2898
  3459                           	
  3460  0244                     i1l2916:	
  3461  0244  2A4C               	goto	i1l2898
  3462                           	
  3463  0245                     i1l2914:	
  3464  0245  2A4C               	goto	i1l2898
  3465                           	
  3466  0246                     i1l2912:	
  3467  0246  2A4C               	goto	i1l2898
  3468                           	
  3469  0247                     i1l2910:	
  3470  0247  2A4C               	goto	i1l2898
  3471                           	
  3472  0248                     i1l2908:	
  3473  0248  2A4C               	goto	i1l2898
  3474                           	
  3475  0249                     i1l2906:	
  3476  0249  2A4C               	goto	i1l2898
  3477                           	
  3478  024A                     i1l2904:	
  3479  024A  2A4C               	goto	i1l2898
  3480                           	
  3481  024B                     i1l2902:	
  3482  024B  2A4C               	goto	i1l2898
  3483                           	
  3484  024C                     i1l2900:	
  3485                           	
  3486  024C                     i1l2898:	
  3487                           ;infrared.c: 98: }
  3488                           ;infrared.c: 102: lcd_write_control(0b00000001);
  3489  024C  3001               	movlw	(01h)
  3490  024D  120A  158A  27AA   	fcall	i1_lcd_write_control
              120A  118A         
  3491                           	line	103
  3492                           	
  3493  0252                     i1l6590:	
  3494                           ;infrared.c: 103: sprintf(adcOutput,"Distance: %dcm", distance);
  3495  0252  300B               	movlw	((STR_3-__stringbase))&0ffh
  3496  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  3497  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  3498  0255  00CD               	movwf	(??_ADCconvert+0)+0
  3499  0256  084D               	movf	(??_ADCconvert+0)+0,w
  3500  0257  00A0               	movwf	(?_sprintf)
  3501  0258  0862               	movf	(ADCconvert@distance+1),w
  3502  0259  01A2               	clrf	1+(?_sprintf)+01h
  3503  025A  07A2               	addwf	1+(?_sprintf)+01h
  3504  025B  0861               	movf	(ADCconvert@distance),w
  3505  025C  01A1               	clrf	0+(?_sprintf)+01h
  3506  025D  07A1               	addwf	0+(?_sprintf)+01h
  3507                           
  3508  025E  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  3509  025F  120A  118A  239C   	fcall	_sprintf
              120A  118A         
  3510                           	line	104
  3511                           	
  3512  0264                     i1l6592:	
  3513                           ;infrared.c: 104: lcd_set_cursor(0x40);
  3514  0264  3040               	movlw	(040h)
  3515  0265  120A  158A  278E   	fcall	_lcd_set_cursor
              120A  118A         
  3516                           	line	106
  3517                           	
  3518  026A                     i1l6594:	
  3519                           ;infrared.c: 106: lcd_write_string(adcOutput);
  3520  026A  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  3521  026B  120A  158A  27E6   	fcall	_lcd_write_string
              120A  118A         
  3522                           	line	107
  3523                           	
  3524  0270                     i1l2922:	
  3525  0270  0008               	return
  3526                           	opt stack 0
  3527                           GLOBAL	__end_of_ADCconvert
  3528  0271                     	__end_of_ADCconvert:
  3529 ;; =============== function _ADCconvert ends ============
  3530                           
  3531                           	signat	_ADCconvert,4216
  3532                           	global	_readAvgDistance
  3533                           psect	text464,local,class=CODE,delta=2
  3534                           global __ptext464
  3535  0597                     __ptext464:
  3536                           
  3537 ;; *************** function _readAvgDistance *****************
  3538 ;; Defined at:
  3539 ;;		line 10 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  i               2   41[BANK0 ] int 
  3544 ;;  adcOutput      16   21[BANK0 ] unsigned char [16]
  3545 ;;  averageval      2   39[BANK0 ] unsigned int 
  3546 ;;  fullval         2   37[BANK0 ] unsigned int 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  2   15[BANK0 ] unsigned int 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       2       0       0       0
  3557 ;;      Locals:         0      22       0       0       0
  3558 ;;      Temps:          0       4       0       0       0
  3559 ;;      Totals:         0      28       0       0       0
  3560 ;;Total ram usage:       28 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		_adc_read_channel
  3565 ;;		___lwdiv
  3566 ;;		_sprintf
  3567 ;; This function is called by:
  3568 ;;		_isr1
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           psect	text464
  3572                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  3573                           	line	10
  3574                           	global	__size_of_readAvgDistance
  3575  0081                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3576                           	
  3577  0597                     _readAvgDistance:	
  3578                           	opt	stack 1
  3579                           ; Regs used in _readAvgDistance: [allreg]
  3580                           	line	11
  3581                           	
  3582  0597                     i1l6490:	
  3583                           ;infrared.c: 11: unsigned int fullval = 0, averageval;
  3584  0597  1283               	bcf	status, 5	;RP0=0, select bank0
  3585  0598  1303               	bcf	status, 6	;RP1=0, select bank0
  3586  0599  01C5               	clrf	(readAvgDistance@fullval)
  3587  059A  01C6               	clrf	(readAvgDistance@fullval+1)
  3588                           	line	12
  3589                           	
  3590  059B                     i1l6492:	
  3591                           ;infrared.c: 12: char adcOutput[16] = "";
  3592  059B  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3593  059C  0084               	movwf	fsr0
  3594  059D  30B0               	movlw	low(readAvgDistance@F1184)
  3595  059E  00B1               	movwf	(??_readAvgDistance+0)+0
  3596  059F  0804               	movf	fsr0,w
  3597  05A0  00B2               	movwf	((??_readAvgDistance+0)+0+1)
  3598  05A1  3010               	movlw	16
  3599  05A2  00B3               	movwf	((??_readAvgDistance+0)+0+2)
  3600  05A3                     u313_20:
  3601  05A3  0831               	movf	(??_readAvgDistance+0)+0,w
  3602  05A4  0084               	movwf	fsr0
  3603  05A5  1383               	bcf	status, 7	;select IRP bank1
  3604                           	
  3605  05A6  0800               	movf	indf,w
  3606  05A7  00B4               	movwf	((??_readAvgDistance+0)+0+3)
  3607  05A8  0AB1               	incf	(??_readAvgDistance+0)+0,f
  3608  05A9  0832               	movf	((??_readAvgDistance+0)+0+1),w
  3609  05AA  0084               	movwf	fsr0
  3610                           	
  3611  05AB  0834               	movf	((??_readAvgDistance+0)+0+3),w
  3612  05AC  0080               	movwf	indf
  3613  05AD  0AB2               	incf	((??_readAvgDistance+0)+0+1),f
  3614  05AE  0BB3               	decfsz	((??_readAvgDistance+0)+0+2),f
  3615  05AF  2DA3               	goto	u313_20
  3616                           	line	14
  3617                           	
  3618  05B0                     i1l6494:	
  3619                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3620  05B0  01C9               	clrf	(readAvgDistance@i)
  3621  05B1  01CA               	clrf	(readAvgDistance@i+1)
  3622                           	
  3623  05B2                     i1l6496:	
  3624  05B2  084A               	movf	(readAvgDistance@i+1),w
  3625  05B3  3A80               	xorlw	80h
  3626  05B4  00FF               	movwf	btemp+1
  3627  05B5  3080               	movlw	(high(0Ah))^80h
  3628  05B6  027F               	subwf	btemp+1,w
  3629  05B7  1D03               	skipz
  3630  05B8  2DBB               	goto	u314_25
  3631  05B9  300A               	movlw	low(0Ah)
  3632  05BA  0249               	subwf	(readAvgDistance@i),w
  3633  05BB                     u314_25:
  3634                           
  3635  05BB  1C03               	skipc
  3636  05BC  2DBE               	goto	u314_21
  3637  05BD  2DBF               	goto	u314_20
  3638  05BE                     u314_21:
  3639  05BE  2DC1               	goto	i1l6500
  3640  05BF                     u314_20:
  3641  05BF  2DE5               	goto	i1l6506
  3642                           	
  3643  05C0                     i1l6498:	
  3644  05C0  2DE5               	goto	i1l6506
  3645                           	line	15
  3646                           	
  3647  05C1                     i1l2885:	
  3648                           	line	16
  3649                           	
  3650  05C1                     i1l6500:	
  3651                           ;infrared.c: 15: {
  3652                           ;infrared.c: 16: fullval += adc_read_channel(0);
  3653  05C1  3000               	movlw	(0)
  3654  05C2  120A  118A  2704   	fcall	_adc_read_channel
              120A  118A         
  3655  05C7  1283               	bcf	status, 5	;RP0=0, select bank0
  3656  05C8  1303               	bcf	status, 6	;RP1=0, select bank0
  3657  05C9  00B1               	movwf	(??_readAvgDistance+0)+0
  3658  05CA  01B2               	clrf	(??_readAvgDistance+0)+0+1
  3659  05CB  0831               	movf	0+(??_readAvgDistance+0)+0,w
  3660  05CC  07C5               	addwf	(readAvgDistance@fullval),f
  3661  05CD  1803               	skipnc
  3662  05CE  0AC6               	incf	(readAvgDistance@fullval+1),f
  3663  05CF  0832               	movf	1+(??_readAvgDistance+0)+0,w
  3664  05D0  07C6               	addwf	(readAvgDistance@fullval+1),f
  3665                           	line	14
  3666                           	
  3667  05D1                     i1l6502:	
  3668  05D1  3001               	movlw	low(01h)
  3669  05D2  07C9               	addwf	(readAvgDistance@i),f
  3670  05D3  1803               	skipnc
  3671  05D4  0ACA               	incf	(readAvgDistance@i+1),f
  3672  05D5  3000               	movlw	high(01h)
  3673  05D6  07CA               	addwf	(readAvgDistance@i+1),f
  3674                           	
  3675  05D7                     i1l6504:	
  3676  05D7  084A               	movf	(readAvgDistance@i+1),w
  3677  05D8  3A80               	xorlw	80h
  3678  05D9  00FF               	movwf	btemp+1
  3679  05DA  3080               	movlw	(high(0Ah))^80h
  3680  05DB  027F               	subwf	btemp+1,w
  3681  05DC  1D03               	skipz
  3682  05DD  2DE0               	goto	u315_25
  3683  05DE  300A               	movlw	low(0Ah)
  3684  05DF  0249               	subwf	(readAvgDistance@i),w
  3685  05E0                     u315_25:
  3686                           
  3687  05E0  1C03               	skipc
  3688  05E1  2DE3               	goto	u315_21
  3689  05E2  2DE4               	goto	u315_20
  3690  05E3                     u315_21:
  3691  05E3  2DC1               	goto	i1l6500
  3692  05E4                     u315_20:
  3693  05E4  2DE5               	goto	i1l6506
  3694                           	
  3695  05E5                     i1l2886:	
  3696                           	line	19
  3697                           	
  3698  05E5                     i1l6506:	
  3699                           ;infrared.c: 18: }
  3700                           ;infrared.c: 19: averageval = fullval / 10;
  3701  05E5  300A               	movlw	low(0Ah)
  3702  05E6  00F0               	movwf	(?___lwdiv)
  3703  05E7  3000               	movlw	high(0Ah)
  3704  05E8  00F1               	movwf	((?___lwdiv))+1
  3705  05E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3706  05EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3707  05EB  0846               	movf	(readAvgDistance@fullval+1),w
  3708  05EC  01F3               	clrf	1+(?___lwdiv)+02h
  3709  05ED  07F3               	addwf	1+(?___lwdiv)+02h
  3710  05EE  0845               	movf	(readAvgDistance@fullval),w
  3711  05EF  01F2               	clrf	0+(?___lwdiv)+02h
  3712  05F0  07F2               	addwf	0+(?___lwdiv)+02h
  3713                           
  3714  05F1  120A  118A  2672   	fcall	___lwdiv
              120A  118A         
  3715  05F6  0871               	movf	(1+(?___lwdiv)),w
  3716  05F7  1283               	bcf	status, 5	;RP0=0, select bank0
  3717  05F8  1303               	bcf	status, 6	;RP1=0, select bank0
  3718  05F9  01C8               	clrf	(readAvgDistance@averageval+1)
  3719  05FA  07C8               	addwf	(readAvgDistance@averageval+1)
  3720  05FB  0870               	movf	(0+(?___lwdiv)),w
  3721  05FC  01C7               	clrf	(readAvgDistance@averageval)
  3722  05FD  07C7               	addwf	(readAvgDistance@averageval)
  3723                           
  3724                           	line	20
  3725                           	
  3726  05FE                     i1l6508:	
  3727                           ;infrared.c: 20: sprintf(adcOutput,"Adc Value: %d", averageval);
  3728  05FE  301A               	movlw	((STR_1-__stringbase))&0ffh
  3729  05FF  00B1               	movwf	(??_readAvgDistance+0)+0
  3730  0600  0831               	movf	(??_readAvgDistance+0)+0,w
  3731  0601  00A0               	movwf	(?_sprintf)
  3732  0602  0848               	movf	(readAvgDistance@averageval+1),w
  3733  0603  01A2               	clrf	1+(?_sprintf)+01h
  3734  0604  07A2               	addwf	1+(?_sprintf)+01h
  3735  0605  0847               	movf	(readAvgDistance@averageval),w
  3736  0606  01A1               	clrf	0+(?_sprintf)+01h
  3737  0607  07A1               	addwf	0+(?_sprintf)+01h
  3738                           
  3739  0608  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3740  0609  120A  118A  239C   	fcall	_sprintf
              120A  118A         
  3741                           	line	24
  3742                           	
  3743  060E                     i1l6510:	
  3744                           ;infrared.c: 24: return averageval;
  3745  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  3746  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  3747  0610  0848               	movf	(readAvgDistance@averageval+1),w
  3748  0611  01B0               	clrf	(?_readAvgDistance+1)
  3749  0612  07B0               	addwf	(?_readAvgDistance+1)
  3750  0613  0847               	movf	(readAvgDistance@averageval),w
  3751  0614  01AF               	clrf	(?_readAvgDistance)
  3752  0615  07AF               	addwf	(?_readAvgDistance)
  3753                           
  3754  0616  2E17               	goto	i1l2887
  3755                           	
  3756  0617                     i1l6512:	
  3757                           	line	25
  3758                           	
  3759  0617                     i1l2887:	
  3760  0617  0008               	return
  3761                           	opt stack 0
  3762                           GLOBAL	__end_of_readAvgDistance
  3763  0618                     	__end_of_readAvgDistance:
  3764 ;; =============== function _readAvgDistance ends ============
  3765                           
  3766                           	signat	_readAvgDistance,90
  3767                           	global	_lcd_write_string
  3768                           psect	text465,local,class=CODE,delta=2
  3769                           global __ptext465
  3770  0FE6                     __ptext465:
  3771                           
  3772 ;; *************** function _lcd_write_string *****************
  3773 ;; Defined at:
  3774 ;;		line 48 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  s               1    wreg     PTR unsigned char 
  3777 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  s               1    4[COMMON] PTR unsigned char 
  3780 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;		None               void
  3783 ;; Registers used:
  3784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3790 ;;      Params:         0       0       0       0       0
  3791 ;;      Locals:         1       0       0       0       0
  3792 ;;      Temps:          1       0       0       0       0
  3793 ;;      Totals:         2       0       0       0       0
  3794 ;;Total ram usage:        2 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    1
  3797 ;; This function calls:
  3798 ;;		_lcd_write_data
  3799 ;; This function is called by:
  3800 ;;		_ADCconvert
  3801 ;;		_readDistance
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           psect	text465
  3805                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3806                           	line	48
  3807                           	global	__size_of_lcd_write_string
  3808  001A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3809                           	
  3810  0FE6                     _lcd_write_string:	
  3811                           	opt	stack 1
  3812                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3813                           ;lcd_write_string@s stored from wreg
  3814  0FE6  00F4               	movwf	(lcd_write_string@s)
  3815                           	line	50
  3816                           	
  3817  0FE7                     i1l6392:	
  3818                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3819  0FE7  2FF6               	goto	i1l6398
  3820                           	
  3821  0FE8                     i1l1403:	
  3822                           	
  3823  0FE8                     i1l6394:	
  3824  0FE8  0874               	movf	(lcd_write_string@s),w
  3825  0FE9  0084               	movwf	fsr0
  3826  0FEA  1383               	bcf	status, 7	;select IRP bank0
  3827  0FEB  0800               	movf	indf,w
  3828  0FEC  120A  158A  2797   	fcall	_lcd_write_data
              120A  158A         
  3829                           	
  3830  0FF1                     i1l6396:	
  3831  0FF1  3001               	movlw	(01h)
  3832  0FF2  00F3               	movwf	(??_lcd_write_string+0)+0
  3833  0FF3  0873               	movf	(??_lcd_write_string+0)+0,w
  3834  0FF4  07F4               	addwf	(lcd_write_string@s),f
  3835  0FF5  2FF6               	goto	i1l6398
  3836                           	
  3837  0FF6                     i1l1402:	
  3838                           	
  3839  0FF6                     i1l6398:	
  3840  0FF6  0874               	movf	(lcd_write_string@s),w
  3841  0FF7  0084               	movwf	fsr0
  3842  0FF8  1383               	bcf	status, 7	;select IRP bank0
  3843  0FF9  0880               	movf	indf,f
  3844  0FFA  1D03               	skipz
  3845  0FFB  2FFD               	goto	u292_21
  3846  0FFC  2FFE               	goto	u292_20
  3847  0FFD                     u292_21:
  3848  0FFD  2FE8               	goto	i1l6394
  3849  0FFE                     u292_20:
  3850  0FFE  2FFF               	goto	i1l1405
  3851                           	
  3852  0FFF                     i1l1404:	
  3853                           	line	51
  3854                           	
  3855  0FFF                     i1l1405:	
  3856  0FFF  0008               	return
  3857                           	opt stack 0
  3858                           GLOBAL	__end_of_lcd_write_string
  3859  1000                     	__end_of_lcd_write_string:
  3860 ;; =============== function _lcd_write_string ends ============
  3861                           
  3862                           	signat	_lcd_write_string,4216
  3863                           	global	_lcd_set_cursor
  3864                           psect	text466,local,class=CODE,delta=2
  3865                           global __ptext466
  3866  0F8E                     __ptext466:
  3867                           
  3868 ;; *************** function _lcd_set_cursor *****************
  3869 ;; Defined at:
  3870 ;;		line 42 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  address         1    wreg     unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  address         1    3[COMMON] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;		None               void
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         1       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0
  3887 ;;      Totals:         1       0       0       0       0
  3888 ;;Total ram usage:        1 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    1
  3891 ;; This function calls:
  3892 ;;		i1_lcd_write_control
  3893 ;; This function is called by:
  3894 ;;		_ADCconvert
  3895 ;;		_readDistance
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           psect	text466
  3899                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3900                           	line	42
  3901                           	global	__size_of_lcd_set_cursor
  3902  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3903                           	
  3904  0F8E                     _lcd_set_cursor:	
  3905                           	opt	stack 1
  3906                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3907                           ;lcd_set_cursor@address stored from wreg
  3908  0F8E  00F3               	movwf	(lcd_set_cursor@address)
  3909                           	line	43
  3910                           	
  3911  0F8F                     i1l6388:	
  3912                           ;lcd.c: 43: address |= 0b10000000;
  3913  0F8F  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3914                           	line	44
  3915                           	
  3916  0F90                     i1l6390:	
  3917                           ;lcd.c: 44: lcd_write_control(address);
  3918  0F90  0873               	movf	(lcd_set_cursor@address),w
  3919  0F91  120A  158A  27AA   	fcall	i1_lcd_write_control
              120A  158A         
  3920                           	line	45
  3921                           	
  3922  0F96                     i1l1399:	
  3923  0F96  0008               	return
  3924                           	opt stack 0
  3925                           GLOBAL	__end_of_lcd_set_cursor
  3926  0F97                     	__end_of_lcd_set_cursor:
  3927 ;; =============== function _lcd_set_cursor ends ============
  3928                           
  3929                           	signat	_lcd_set_cursor,4216
  3930                           	global	i1_lcd_write_control
  3931                           psect	text467,local,class=CODE,delta=2
  3932                           global __ptext467
  3933  0FAA                     __ptext467:
  3934                           
  3935 ;; *************** function i1_lcd_write_control *****************
  3936 ;; Defined at:
  3937 ;;		line 18 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  lcd_write_co    1    wreg     unsigned char 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;		None               void
  3944 ;; Registers used:
  3945 ;;		wreg
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3951 ;;      Params:         0       0       0       0       0
  3952 ;;      Locals:         1       0       0       0       0
  3953 ;;      Temps:          2       0       0       0       0
  3954 ;;      Totals:         3       0       0       0       0
  3955 ;;Total ram usage:        3 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_lcd_set_cursor
  3961 ;;		_ADCconvert
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           psect	text467
  3965                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3966                           	line	18
  3967                           	global	__size_ofi1_lcd_write_control
  3968  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  3969                           	
  3970  0FAA                     i1_lcd_write_control:	
  3971                           	opt	stack 1
  3972                           ; Regs used in i1_lcd_write_control: [wreg]
  3973                           ;i1lcd_write_control@databyte stored from wreg
  3974  0FAA  00F2               	movwf	(i1lcd_write_control@databyte)
  3975                           	line	19
  3976                           	
  3977  0FAB                     i1l6718:	
  3978                           ;lcd.c: 19: RE2 = 0;
  3979  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  3980  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  3981  0FAD  1109               	bcf	(74/8),(74)&7
  3982                           	line	20
  3983                           ;lcd.c: 20: RE1 = 0;
  3984  0FAE  1089               	bcf	(73/8),(73)&7
  3985                           	line	21
  3986                           ;lcd.c: 21: RE0 = 0;
  3987  0FAF  1009               	bcf	(72/8),(72)&7
  3988                           	line	22
  3989                           	
  3990  0FB0                     i1l6720:	
  3991                           ;lcd.c: 22: PORTD = databyte;
  3992  0FB0  0872               	movf	(i1lcd_write_control@databyte),w
  3993  0FB1  0088               	movwf	(8)	;volatile
  3994                           	line	23
  3995                           	
  3996  0FB2                     i1l6722:	
  3997                           ;lcd.c: 23: RE2 = 1;
  3998  0FB2  1509               	bsf	(74/8),(74)&7
  3999                           	line	24
  4000                           	
  4001  0FB3                     i1l6724:	
  4002                           ;lcd.c: 24: RE2 = 0;
  4003  0FB3  1109               	bcf	(74/8),(74)&7
  4004                           	line	25
  4005                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  4006                           	opt asmopt_off
  4007  0FB4  300D               movlw	13
  4008  0FB5  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  4009  0FB6  30FB               	movlw	251
  4010  0FB7  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  4011  0FB8                     u374_27:
  4012  0FB8  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  4013  0FB9  2FB8               	goto	u374_27
  4014  0FBA  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  4015  0FBB  2FB8               	goto	u374_27
  4016  0FBC  2FBD               	nop2
  4017                           opt asmopt_on
  4018                           
  4019                           	line	26
  4020                           	
  4021  0FBD                     i1l1393:	
  4022  0FBD  0008               	return
  4023                           	opt stack 0
  4024                           GLOBAL	__end_ofi1_lcd_write_control
  4025  0FBE                     	__end_ofi1_lcd_write_control:
  4026 ;; =============== function i1_lcd_write_control ends ============
  4027                           
  4028                           	signat	i1_lcd_write_control,88
  4029                           	global	_sprintf
  4030                           psect	text468,local,class=CODE,delta=2
  4031                           global __ptext468
  4032  039C                     __ptext468:
  4033                           
  4034 ;; *************** function _sprintf *****************
  4035 ;; Defined at:
  4036 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  sp              1    wreg     PTR unsigned char 
  4039 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), readAvgDistance@adcOutput(16), 
  4040 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  4041 ;;		 -> STR_3(15), STR_2(14), STR_1(14), 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  4044 ;;		 -> ADCconvert@adcOutput(16), readDistance@adcOutput(16), readAvgDistance@adcOutput(16), 
  4045 ;;  _val            4    9[BANK0 ] struct .
  4046 ;;  c               1   14[BANK0 ] char 
  4047 ;;  prec            1    8[BANK0 ] char 
  4048 ;;  flag            1    7[BANK0 ] unsigned char 
  4049 ;;  ap              1    6[BANK0 ] PTR void [1]
  4050 ;;		 -> ?_sprintf(2), 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    0[BANK0 ] int 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       3       0       0       0
  4061 ;;      Locals:         0       9       0       0       0
  4062 ;;      Temps:          0       3       0       0       0
  4063 ;;      Totals:         0      15       0       0       0
  4064 ;;Total ram usage:       15 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    1
  4067 ;; This function calls:
  4068 ;;		___lwdiv
  4069 ;;		___lwmod
  4070 ;; This function is called by:
  4071 ;;		_readAvgDistance
  4072 ;;		_ADCconvert
  4073 ;;		_readDistance
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           psect	text468
  4077                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4078                           	line	488
  4079                           	global	__size_of_sprintf
  4080  00FE                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4081                           	
  4082  039C                     _sprintf:	
  4083                           	opt	stack 1
  4084                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4085                           ;sprintf@sp stored from wreg
  4086                           	line	537
  4087  039C  1283               	bcf	status, 5	;RP0=0, select bank0
  4088  039D  1303               	bcf	status, 6	;RP1=0, select bank0
  4089  039E  00AD               	movwf	(sprintf@sp)
  4090                           	
  4091  039F                     i1l6596:	
  4092  039F  3021               	movlw	(?_sprintf+01h)&0ffh
  4093  03A0  00A3               	movwf	(??_sprintf+0)+0
  4094  03A1  0823               	movf	(??_sprintf+0)+0,w
  4095  03A2  00A6               	movwf	(sprintf@ap)
  4096                           	line	540
  4097  03A3  2C80               	goto	i1l6648
  4098                           	
  4099  03A4                     i1l3649:	
  4100                           	line	542
  4101                           	
  4102  03A4                     i1l6598:	
  4103  03A4  082E               	movf	(sprintf@c),w
  4104  03A5  3A25               	xorlw	025h
  4105  03A6  1903               	skipnz
  4106  03A7  2BA9               	goto	u341_21
  4107  03A8  2BAA               	goto	u341_20
  4108  03A9                     u341_21:
  4109  03A9  2BB6               	goto	i1l3650
  4110  03AA                     u341_20:
  4111                           	line	545
  4112                           	
  4113  03AA                     i1l6600:	
  4114  03AA  082E               	movf	(sprintf@c),w
  4115  03AB  00A3               	movwf	(??_sprintf+0)+0
  4116  03AC  082D               	movf	(sprintf@sp),w
  4117  03AD  0084               	movwf	fsr0
  4118  03AE  0823               	movf	(??_sprintf+0)+0,w
  4119  03AF  1383               	bcf	status, 7	;select IRP bank0
  4120  03B0  0080               	movwf	indf
  4121                           	
  4122  03B1                     i1l6602:	
  4123  03B1  3001               	movlw	(01h)
  4124  03B2  00A3               	movwf	(??_sprintf+0)+0
  4125  03B3  0823               	movf	(??_sprintf+0)+0,w
  4126  03B4  07AD               	addwf	(sprintf@sp),f
  4127                           	line	546
  4128  03B5  2C80               	goto	i1l6648
  4129                           	line	547
  4130                           	
  4131  03B6                     i1l3650:	
  4132                           	line	552
  4133  03B6  01A7               	clrf	(sprintf@flag)
  4134                           	line	638
  4135  03B7  2BBD               	goto	i1l6606
  4136                           	line	640
  4137                           	
  4138  03B8                     i1l3652:	
  4139                           	line	641
  4140  03B8  2C94               	goto	i1l6650
  4141                           	line	700
  4142                           	
  4143  03B9                     i1l3654:	
  4144  03B9  2BD2               	goto	i1l6608
  4145                           	line	701
  4146                           	
  4147  03BA                     i1l3655:	
  4148                           	line	702
  4149  03BA  2BD2               	goto	i1l6608
  4150                           	line	805
  4151                           	
  4152  03BB                     i1l3657:	
  4153                           	line	816
  4154  03BB  2C80               	goto	i1l6648
  4155                           	line	825
  4156                           	
  4157  03BC                     i1l6604:	
  4158  03BC  2BD2               	goto	i1l6608
  4159                           	line	638
  4160                           	
  4161  03BD                     i1l3651:	
  4162                           	
  4163  03BD                     i1l6606:	
  4164  03BD  3001               	movlw	01h
  4165  03BE  07A0               	addwf	(sprintf@f),f
  4166  03BF  30FF               	movlw	-01h
  4167  03C0  0720               	addwf	(sprintf@f),w
  4168  03C1  0084               	movwf	fsr0
  4169  03C2  120A  118A  2745   	fcall	stringdir
              120A  118A         
  4170  03C7  00AE               	movwf	(sprintf@c)
  4171                           	; Switch size 1, requested type "space"
  4172                           ; Number of cases is 3, Range of values is 0 to 105
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte           10     6 (average)
  4176                           ; jumptable            260     6 (fixed)
  4177                           ; rangetable           110     6 (fixed)
  4178                           ; spacedrange          218     9 (fixed)
  4179                           ; locatedrange         106     3 (fixed)
  4180                           ;	Chosen strategy is simple_byte
  4181                           
  4182                           	opt asmopt_off
  4183  03C8  3A00               	xorlw	0^0	; case 0
  4184  03C9  1903               	skipnz
  4185  03CA  2C94               	goto	i1l6650
  4186  03CB  3A64               	xorlw	100^0	; case 100
  4187  03CC  1903               	skipnz
  4188  03CD  2BD2               	goto	i1l6608
  4189  03CE  3A0D               	xorlw	105^100	; case 105
  4190  03CF  1903               	skipnz
  4191  03D0  2BD2               	goto	i1l6608
  4192  03D1  2C80               	goto	i1l6648
  4193                           	opt asmopt_on
  4194                           
  4195                           	line	825
  4196                           	
  4197  03D2                     i1l3656:	
  4198                           	line	1254
  4199                           	
  4200  03D2                     i1l6608:	
  4201  03D2  0826               	movf	(sprintf@ap),w
  4202  03D3  0084               	movwf	fsr0
  4203  03D4  1383               	bcf	status, 7	;select IRP bank0
  4204  03D5  0800               	movf	indf,w
  4205  03D6  00A9               	movwf	(sprintf@_val)
  4206  03D7  0A84               	incf	fsr0,f
  4207  03D8  0800               	movf	indf,w
  4208  03D9  00AA               	movwf	(sprintf@_val+1)
  4209                           	
  4210  03DA                     i1l6610:	
  4211  03DA  3002               	movlw	(02h)
  4212  03DB  00A3               	movwf	(??_sprintf+0)+0
  4213  03DC  0823               	movf	(??_sprintf+0)+0,w
  4214  03DD  07A6               	addwf	(sprintf@ap),f
  4215                           	line	1256
  4216                           	
  4217  03DE                     i1l6612:	
  4218  03DE  1FAA               	btfss	(sprintf@_val+1),7
  4219  03DF  2BE1               	goto	u342_21
  4220  03E0  2BE2               	goto	u342_20
  4221  03E1                     u342_21:
  4222  03E1  2BEC               	goto	i1l6618
  4223  03E2                     u342_20:
  4224                           	line	1257
  4225                           	
  4226  03E2                     i1l6614:	
  4227  03E2  3003               	movlw	(03h)
  4228  03E3  00A3               	movwf	(??_sprintf+0)+0
  4229  03E4  0823               	movf	(??_sprintf+0)+0,w
  4230  03E5  04A7               	iorwf	(sprintf@flag),f
  4231                           	line	1258
  4232                           	
  4233  03E6                     i1l6616:	
  4234  03E6  09A9               	comf	(sprintf@_val),f
  4235  03E7  09AA               	comf	(sprintf@_val+1),f
  4236  03E8  0AA9               	incf	(sprintf@_val),f
  4237  03E9  1903               	skipnz
  4238  03EA  0AAA               	incf	(sprintf@_val+1),f
  4239  03EB  2BEC               	goto	i1l6618
  4240                           	line	1259
  4241                           	
  4242  03EC                     i1l3658:	
  4243                           	line	1300
  4244                           	
  4245  03EC                     i1l6618:	
  4246  03EC  01AE               	clrf	(sprintf@c)
  4247  03ED  1403               	bsf	status,0
  4248  03EE  0DAE               	rlf	(sprintf@c),f
  4249                           	
  4250  03EF                     i1l6620:	
  4251  03EF  082E               	movf	(sprintf@c),w
  4252  03F0  3A05               	xorlw	05h
  4253  03F1  1D03               	skipz
  4254  03F2  2BF4               	goto	u343_21
  4255  03F3  2BF5               	goto	u343_20
  4256  03F4                     u343_21:
  4257  03F4  2BF7               	goto	i1l6624
  4258  03F5                     u343_20:
  4259  03F5  2C1F               	goto	i1l6632
  4260                           	
  4261  03F6                     i1l6622:	
  4262  03F6  2C1F               	goto	i1l6632
  4263                           	line	1301
  4264                           	
  4265  03F7                     i1l3659:	
  4266                           	
  4267  03F7                     i1l6624:	
  4268  03F7  082E               	movf	(sprintf@c),w
  4269  03F8  00A3               	movwf	(??_sprintf+0)+0
  4270  03F9  0723               	addwf	(??_sprintf+0)+0,w
  4271  03FA  3E01               	addlw	low((_dpowers-__stringbase))
  4272  03FB  0084               	movwf	fsr0
  4273  03FC  120A  118A  2745   	fcall	stringdir
              120A  118A         
  4274  0401  00A4               	movwf	(??_sprintf+1)+0
  4275  0402  120A  118A  2745   	fcall	stringdir
              120A  118A         
  4276  0407  00A5               	movwf	(??_sprintf+1)+0+1
  4277  0408  0825               	movf	1+(??_sprintf+1)+0,w
  4278  0409  022A               	subwf	(sprintf@_val+1),w
  4279  040A  1D03               	skipz
  4280  040B  2C0E               	goto	u344_25
  4281  040C  0824               	movf	0+(??_sprintf+1)+0,w
  4282  040D  0229               	subwf	(sprintf@_val),w
  4283  040E                     u344_25:
  4284  040E  1803               	skipnc
  4285  040F  2C11               	goto	u344_21
  4286  0410  2C12               	goto	u344_20
  4287  0411                     u344_21:
  4288  0411  2C14               	goto	i1l6628
  4289  0412                     u344_20:
  4290  0412  2C1F               	goto	i1l6632
  4291                           	line	1302
  4292                           	
  4293  0413                     i1l6626:	
  4294  0413  2C1F               	goto	i1l6632
  4295                           	
  4296  0414                     i1l3661:	
  4297                           	line	1300
  4298                           	
  4299  0414                     i1l6628:	
  4300  0414  3001               	movlw	(01h)
  4301  0415  00A3               	movwf	(??_sprintf+0)+0
  4302  0416  0823               	movf	(??_sprintf+0)+0,w
  4303  0417  07AE               	addwf	(sprintf@c),f
  4304                           	
  4305  0418                     i1l6630:	
  4306  0418  082E               	movf	(sprintf@c),w
  4307  0419  3A05               	xorlw	05h
  4308  041A  1D03               	skipz
  4309  041B  2C1D               	goto	u345_21
  4310  041C  2C1E               	goto	u345_20
  4311  041D                     u345_21:
  4312  041D  2BF7               	goto	i1l6624
  4313  041E                     u345_20:
  4314  041E  2C1F               	goto	i1l6632
  4315                           	
  4316  041F                     i1l3660:	
  4317                           	line	1433
  4318                           	
  4319  041F                     i1l6632:	
  4320  041F  0827               	movf	(sprintf@flag),w
  4321  0420  3903               	andlw	03h
  4322  0421  1903               	btfsc	status,2
  4323  0422  2C24               	goto	u346_21
  4324  0423  2C25               	goto	u346_20
  4325  0424                     u346_21:
  4326  0424  2C31               	goto	i1l6638
  4327  0425                     u346_20:
  4328                           	line	1434
  4329                           	
  4330  0425                     i1l6634:	
  4331  0425  302D               	movlw	(02Dh)
  4332  0426  00A3               	movwf	(??_sprintf+0)+0
  4333  0427  082D               	movf	(sprintf@sp),w
  4334  0428  0084               	movwf	fsr0
  4335  0429  0823               	movf	(??_sprintf+0)+0,w
  4336  042A  1383               	bcf	status, 7	;select IRP bank0
  4337  042B  0080               	movwf	indf
  4338                           	
  4339  042C                     i1l6636:	
  4340  042C  3001               	movlw	(01h)
  4341  042D  00A3               	movwf	(??_sprintf+0)+0
  4342  042E  0823               	movf	(??_sprintf+0)+0,w
  4343  042F  07AD               	addwf	(sprintf@sp),f
  4344  0430  2C31               	goto	i1l6638
  4345                           	
  4346  0431                     i1l3662:	
  4347                           	line	1467
  4348                           	
  4349  0431                     i1l6638:	
  4350  0431  082E               	movf	(sprintf@c),w
  4351  0432  00A3               	movwf	(??_sprintf+0)+0
  4352  0433  0823               	movf	(??_sprintf+0)+0,w
  4353  0434  00A8               	movwf	(sprintf@prec)
  4354                           	line	1469
  4355  0435  2C74               	goto	i1l6646
  4356                           	
  4357  0436                     i1l3664:	
  4358                           	line	1484
  4359                           	
  4360  0436                     i1l6640:	
  4361  0436  300A               	movlw	low(0Ah)
  4362  0437  00F8               	movwf	(?___lwmod)
  4363  0438  3000               	movlw	high(0Ah)
  4364  0439  00F9               	movwf	((?___lwmod))+1
  4365  043A  0828               	movf	(sprintf@prec),w
  4366  043B  00A3               	movwf	(??_sprintf+0)+0
  4367  043C  0723               	addwf	(??_sprintf+0)+0,w
  4368  043D  3E01               	addlw	low((_dpowers-__stringbase))
  4369  043E  0084               	movwf	fsr0
  4370  043F  120A  118A  2745   	fcall	stringdir
              120A  118A         
  4371  0444  00F0               	movwf	(?___lwdiv)
  4372  0445  120A  118A  2745   	fcall	stringdir
              120A  118A         
  4373  044A  00F1               	movwf	(?___lwdiv+1)
  4374  044B  082A               	movf	(sprintf@_val+1),w
  4375  044C  01F3               	clrf	1+(?___lwdiv)+02h
  4376  044D  07F3               	addwf	1+(?___lwdiv)+02h
  4377  044E  0829               	movf	(sprintf@_val),w
  4378  044F  01F2               	clrf	0+(?___lwdiv)+02h
  4379  0450  07F2               	addwf	0+(?___lwdiv)+02h
  4380                           
  4381  0451  120A  118A  2672   	fcall	___lwdiv
              120A  118A         
  4382  0456  0871               	movf	(1+(?___lwdiv)),w
  4383  0457  01FB               	clrf	1+(?___lwmod)+02h
  4384  0458  07FB               	addwf	1+(?___lwmod)+02h
  4385  0459  0870               	movf	(0+(?___lwdiv)),w
  4386  045A  01FA               	clrf	0+(?___lwmod)+02h
  4387  045B  07FA               	addwf	0+(?___lwmod)+02h
  4388                           
  4389  045C  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
  4390  0461  0878               	movf	(0+(?___lwmod)),w
  4391  0462  3E30               	addlw	030h
  4392  0463  1283               	bcf	status, 5	;RP0=0, select bank0
  4393  0464  1303               	bcf	status, 6	;RP1=0, select bank0
  4394  0465  00A4               	movwf	(??_sprintf+1)+0
  4395  0466  0824               	movf	(??_sprintf+1)+0,w
  4396  0467  00AE               	movwf	(sprintf@c)
  4397                           	line	1516
  4398                           	
  4399  0468                     i1l6642:	
  4400  0468  082E               	movf	(sprintf@c),w
  4401  0469  00A3               	movwf	(??_sprintf+0)+0
  4402  046A  082D               	movf	(sprintf@sp),w
  4403  046B  0084               	movwf	fsr0
  4404  046C  0823               	movf	(??_sprintf+0)+0,w
  4405  046D  1383               	bcf	status, 7	;select IRP bank0
  4406  046E  0080               	movwf	indf
  4407                           	
  4408  046F                     i1l6644:	
  4409  046F  3001               	movlw	(01h)
  4410  0470  00A3               	movwf	(??_sprintf+0)+0
  4411  0471  0823               	movf	(??_sprintf+0)+0,w
  4412  0472  07AD               	addwf	(sprintf@sp),f
  4413  0473  2C74               	goto	i1l6646
  4414                           	line	1517
  4415                           	
  4416  0474                     i1l3663:	
  4417                           	line	1469
  4418                           	
  4419  0474                     i1l6646:	
  4420  0474  30FF               	movlw	(-1)
  4421  0475  00A3               	movwf	(??_sprintf+0)+0
  4422  0476  0823               	movf	(??_sprintf+0)+0,w
  4423  0477  07A8               	addwf	(sprintf@prec),f
  4424  0478  0828               	movf	((sprintf@prec)),w
  4425  0479  3AFF               	xorlw	-1
  4426  047A  1D03               	skipz
  4427  047B  2C7D               	goto	u347_21
  4428  047C  2C7E               	goto	u347_20
  4429  047D                     u347_21:
  4430  047D  2C36               	goto	i1l6640
  4431  047E                     u347_20:
  4432  047E  2C80               	goto	i1l6648
  4433                           	
  4434  047F                     i1l3665:	
  4435  047F  2C80               	goto	i1l6648
  4436                           	line	1525
  4437                           	
  4438  0480                     i1l3648:	
  4439                           	line	540
  4440                           	
  4441  0480                     i1l6648:	
  4442  0480  3001               	movlw	01h
  4443  0481  07A0               	addwf	(sprintf@f),f
  4444  0482  30FF               	movlw	-01h
  4445  0483  0720               	addwf	(sprintf@f),w
  4446  0484  0084               	movwf	fsr0
  4447  0485  120A  118A  2745   	fcall	stringdir
              120A  118A         
  4448  048A  00A3               	movwf	(??_sprintf+0)+0
  4449  048B  0823               	movf	(??_sprintf+0)+0,w
  4450  048C  00AE               	movwf	(sprintf@c)
  4451  048D  08AE               	movf	((sprintf@c)),f
  4452  048E  1D03               	skipz
  4453  048F  2C91               	goto	u348_21
  4454  0490  2C92               	goto	u348_20
  4455  0491                     u348_21:
  4456  0491  2BA4               	goto	i1l6598
  4457  0492                     u348_20:
  4458  0492  2C94               	goto	i1l6650
  4459                           	
  4460  0493                     i1l3666:	
  4461  0493  2C94               	goto	i1l6650
  4462                           	line	1527
  4463                           	
  4464  0494                     i1l3653:	
  4465                           	line	1530
  4466                           	
  4467  0494                     i1l6650:	
  4468  0494  082D               	movf	(sprintf@sp),w
  4469  0495  0084               	movwf	fsr0
  4470  0496  1383               	bcf	status, 7	;select IRP bank0
  4471  0497  0180               	clrf	indf
  4472  0498  2C99               	goto	i1l3667
  4473                           	line	1532
  4474                           	
  4475  0499                     i1l6652:	
  4476                           	line	1533
  4477                           ;	Return value of _sprintf is never used
  4478                           	
  4479  0499                     i1l3667:	
  4480  0499  0008               	return
  4481                           	opt stack 0
  4482                           GLOBAL	__end_of_sprintf
  4483  049A                     	__end_of_sprintf:
  4484 ;; =============== function _sprintf ends ============
  4485                           
  4486                           	signat	_sprintf,4698
  4487                           	global	_lcd_write_data
  4488                           psect	text469,local,class=CODE,delta=2
  4489                           global __ptext469
  4490  0F97                     __ptext469:
  4491                           
  4492 ;; *************** function _lcd_write_data *****************
  4493 ;; Defined at:
  4494 ;;		line 30 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  databyte        1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  databyte        1    2[COMMON] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;		None               void
  4501 ;; Registers used:
  4502 ;;		wreg
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       0       0       0       0
  4509 ;;      Locals:         1       0       0       0       0
  4510 ;;      Temps:          2       0       0       0       0
  4511 ;;      Totals:         3       0       0       0       0
  4512 ;;Total ram usage:        3 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_lcd_write_string
  4518 ;;		_lcd_write_2_digit_bcd
  4519 ;;		_lcd_write_3_digit_bcd
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           psect	text469
  4523                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  4524                           	line	30
  4525                           	global	__size_of_lcd_write_data
  4526  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  4527                           	
  4528  0F97                     _lcd_write_data:	
  4529                           	opt	stack 1
  4530                           ; Regs used in _lcd_write_data: [wreg]
  4531                           ;lcd_write_data@databyte stored from wreg
  4532  0F97  00F2               	movwf	(lcd_write_data@databyte)
  4533                           	line	31
  4534                           	
  4535  0F98                     i1l6380:	
  4536                           ;lcd.c: 31: RE2 = 0;
  4537  0F98  1283               	bcf	status, 5	;RP0=0, select bank0
  4538  0F99  1303               	bcf	status, 6	;RP1=0, select bank0
  4539  0F9A  1109               	bcf	(74/8),(74)&7
  4540                           	line	32
  4541                           ;lcd.c: 32: RE1 = 0;
  4542  0F9B  1089               	bcf	(73/8),(73)&7
  4543                           	line	33
  4544                           ;lcd.c: 33: RE0 = 1;
  4545  0F9C  1409               	bsf	(72/8),(72)&7
  4546                           	line	34
  4547                           	
  4548  0F9D                     i1l6382:	
  4549                           ;lcd.c: 34: PORTD = databyte;
  4550  0F9D  0872               	movf	(lcd_write_data@databyte),w
  4551  0F9E  0088               	movwf	(8)	;volatile
  4552                           	line	35
  4553                           	
  4554  0F9F                     i1l6384:	
  4555                           ;lcd.c: 35: RE2 = 1;
  4556  0F9F  1509               	bsf	(74/8),(74)&7
  4557                           	line	36
  4558                           	
  4559  0FA0                     i1l6386:	
  4560                           ;lcd.c: 36: RE2 = 0;
  4561  0FA0  1109               	bcf	(74/8),(74)&7
  4562                           	line	37
  4563                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  4564                           	opt asmopt_off
  4565  0FA1  3007               movlw	7
  4566  0FA2  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  4567  0FA3  307D               	movlw	125
  4568  0FA4  00F0               movwf	((??_lcd_write_data+0)+0),f
  4569  0FA5                     u375_27:
  4570  0FA5  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  4571  0FA6  2FA5               	goto	u375_27
  4572  0FA7  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  4573  0FA8  2FA5               	goto	u375_27
  4574                           opt asmopt_on
  4575                           
  4576                           	line	38
  4577                           	
  4578  0FA9                     i1l1396:	
  4579  0FA9  0008               	return
  4580                           	opt stack 0
  4581                           GLOBAL	__end_of_lcd_write_data
  4582  0FAA                     	__end_of_lcd_write_data:
  4583 ;; =============== function _lcd_write_data ends ============
  4584                           
  4585                           	signat	_lcd_write_data,4216
  4586                           	global	_adc_read_channel
  4587                           psect	text470,local,class=CODE,delta=2
  4588                           global __ptext470
  4589  0704                     __ptext470:
  4590                           
  4591 ;; *************** function _adc_read_channel *****************
  4592 ;; Defined at:
  4593 ;;		line 5 in file "H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  channel         1    wreg     unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  channel         1    7[COMMON] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      unsigned char 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       0       0       0       0
  4608 ;;      Locals:         1       0       0       0       0
  4609 ;;      Temps:          1       0       0       0       0
  4610 ;;      Totals:         2       0       0       0       0
  4611 ;;Total ram usage:        2 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    1
  4614 ;; This function calls:
  4615 ;;		_adc_read
  4616 ;; This function is called by:
  4617 ;;		_readAvgDistance
  4618 ;;		_readDistance
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           psect	text470
  4622                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  4623                           	line	5
  4624                           	global	__size_of_adc_read_channel
  4625  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  4626                           	
  4627  0704                     _adc_read_channel:	
  4628                           	opt	stack 1
  4629                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4630                           ;adc_read_channel@channel stored from wreg
  4631  0704  00F7               	movwf	(adc_read_channel@channel)
  4632                           	line	6
  4633                           	
  4634  0705                     i1l6354:	
  4635                           ;adc.c: 6: switch(channel)
  4636  0705  2F28               	goto	i1l6362
  4637                           	line	8
  4638                           ;adc.c: 7: {
  4639                           ;adc.c: 8: case 0:
  4640                           	
  4641  0706                     i1l690:	
  4642                           	line	9
  4643                           ;adc.c: 9: CHS0 = 0;
  4644  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  4645  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  4646  0708  119F               	bcf	(251/8),(251)&7
  4647                           	line	10
  4648                           ;adc.c: 10: CHS1 = 0;
  4649  0709  121F               	bcf	(252/8),(252)&7
  4650                           	line	11
  4651                           ;adc.c: 11: CHS2 = 0;
  4652  070A  129F               	bcf	(253/8),(253)&7
  4653                           	line	12
  4654                           ;adc.c: 12: break;
  4655  070B  2F39               	goto	i1l6364
  4656                           	line	13
  4657                           ;adc.c: 13: case 1:
  4658                           	
  4659  070C                     i1l692:	
  4660                           	line	14
  4661                           ;adc.c: 14: CHS0 = 1;
  4662  070C  1283               	bcf	status, 5	;RP0=0, select bank0
  4663  070D  1303               	bcf	status, 6	;RP1=0, select bank0
  4664  070E  159F               	bsf	(251/8),(251)&7
  4665                           	line	15
  4666                           ;adc.c: 15: CHS1 = 0;
  4667  070F  121F               	bcf	(252/8),(252)&7
  4668                           	line	16
  4669                           ;adc.c: 16: CHS2 = 0;
  4670  0710  129F               	bcf	(253/8),(253)&7
  4671                           	line	17
  4672                           ;adc.c: 17: break;
  4673  0711  2F39               	goto	i1l6364
  4674                           	line	18
  4675                           ;adc.c: 18: case 2:
  4676                           	
  4677  0712                     i1l693:	
  4678                           	line	19
  4679                           ;adc.c: 19: CHS0 = 0;
  4680  0712  1283               	bcf	status, 5	;RP0=0, select bank0
  4681  0713  1303               	bcf	status, 6	;RP1=0, select bank0
  4682  0714  119F               	bcf	(251/8),(251)&7
  4683                           	line	20
  4684                           ;adc.c: 20: CHS1 = 1;
  4685  0715  161F               	bsf	(252/8),(252)&7
  4686                           	line	21
  4687                           ;adc.c: 21: CHS2 = 0;
  4688  0716  129F               	bcf	(253/8),(253)&7
  4689                           	line	22
  4690                           ;adc.c: 22: break;
  4691  0717  2F39               	goto	i1l6364
  4692                           	line	23
  4693                           ;adc.c: 23: case 3:
  4694                           	
  4695  0718                     i1l694:	
  4696                           	line	24
  4697                           ;adc.c: 24: CHS0 = 1;
  4698  0718  1283               	bcf	status, 5	;RP0=0, select bank0
  4699  0719  1303               	bcf	status, 6	;RP1=0, select bank0
  4700  071A  159F               	bsf	(251/8),(251)&7
  4701                           	line	25
  4702                           ;adc.c: 25: CHS1 = 1;
  4703  071B  161F               	bsf	(252/8),(252)&7
  4704                           	line	26
  4705                           ;adc.c: 26: CHS2 = 0;
  4706  071C  129F               	bcf	(253/8),(253)&7
  4707                           	line	27
  4708                           ;adc.c: 27: break;
  4709  071D  2F39               	goto	i1l6364
  4710                           	line	28
  4711                           ;adc.c: 28: case 4:
  4712                           	
  4713  071E                     i1l695:	
  4714                           	line	29
  4715                           ;adc.c: 29: CHS0 = 0;
  4716  071E  1283               	bcf	status, 5	;RP0=0, select bank0
  4717  071F  1303               	bcf	status, 6	;RP1=0, select bank0
  4718  0720  119F               	bcf	(251/8),(251)&7
  4719                           	line	30
  4720                           ;adc.c: 30: CHS1 = 0;
  4721  0721  121F               	bcf	(252/8),(252)&7
  4722                           	line	31
  4723                           ;adc.c: 31: CHS2 = 1;
  4724  0722  169F               	bsf	(253/8),(253)&7
  4725                           	line	32
  4726                           ;adc.c: 32: break;
  4727  0723  2F39               	goto	i1l6364
  4728                           	line	35
  4729                           ;adc.c: 35: default:
  4730                           	
  4731  0724                     i1l696:	
  4732                           	line	36
  4733                           	
  4734  0724                     i1l6356:	
  4735                           ;adc.c: 36: return 0;
  4736  0724  3000               	movlw	(0)
  4737  0725  2F44               	goto	i1l697
  4738                           	
  4739  0726                     i1l6358:	
  4740  0726  2F44               	goto	i1l697
  4741                           	line	37
  4742                           	
  4743  0727                     i1l6360:	
  4744                           ;adc.c: 37: }
  4745  0727  2F39               	goto	i1l6364
  4746                           	line	6
  4747                           	
  4748  0728                     i1l689:	
  4749                           	
  4750  0728                     i1l6362:	
  4751  0728  0877               	movf	(adc_read_channel@channel),w
  4752                           	; Switch size 1, requested type "space"
  4753                           ; Number of cases is 5, Range of values is 0 to 4
  4754                           ; switch strategies available:
  4755                           ; Name         Instructions Cycles
  4756                           ; simple_byte           16     9 (average)
  4757                           ; direct_byte           23     8 (fixed)
  4758                           ; jumptable            260     6 (fixed)
  4759                           ; rangetable             9     6 (fixed)
  4760                           ; spacedrange           16     9 (fixed)
  4761                           ; locatedrange           5     3 (fixed)
  4762                           ;	Chosen strategy is simple_byte
  4763                           
  4764                           	opt asmopt_off
  4765  0729  3A00               	xorlw	0^0	; case 0
  4766  072A  1903               	skipnz
  4767  072B  2F06               	goto	i1l690
  4768  072C  3A01               	xorlw	1^0	; case 1
  4769  072D  1903               	skipnz
  4770  072E  2F0C               	goto	i1l692
  4771  072F  3A03               	xorlw	2^1	; case 2
  4772  0730  1903               	skipnz
  4773  0731  2F12               	goto	i1l693
  4774  0732  3A01               	xorlw	3^2	; case 3
  4775  0733  1903               	skipnz
  4776  0734  2F18               	goto	i1l694
  4777  0735  3A07               	xorlw	4^3	; case 4
  4778  0736  1903               	skipnz
  4779  0737  2F1E               	goto	i1l695
  4780  0738  2F24               	goto	i1l6356
  4781                           	opt asmopt_on
  4782                           
  4783                           	line	37
  4784                           	
  4785  0739                     i1l691:	
  4786                           	line	39
  4787                           	
  4788  0739                     i1l6364:	
  4789                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  4790                           	opt asmopt_off
  4791  0739  3053               movlw	83
  4792  073A  00F6               movwf	(??_adc_read_channel+0)+0,f
  4793  073B                     u376_27:
  4794  073B  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  4795  073C  2F3B               	goto	u376_27
  4796                           opt asmopt_on
  4797                           
  4798                           	line	41
  4799                           	
  4800  073D                     i1l6366:	
  4801                           ;adc.c: 41: return adc_read();
  4802  073D  120A  118A  279D   	fcall	_adc_read
              120A  118A         
  4803  0742  0870               	movf	(0+(?_adc_read)),w
  4804  0743  2F44               	goto	i1l697
  4805                           	
  4806  0744                     i1l6368:	
  4807                           	line	43
  4808                           	
  4809  0744                     i1l697:	
  4810  0744  0008               	return
  4811                           	opt stack 0
  4812                           GLOBAL	__end_of_adc_read_channel
  4813  0745                     	__end_of_adc_read_channel:
  4814 ;; =============== function _adc_read_channel ends ============
  4815                           
  4816                           	signat	_adc_read_channel,4217
  4817                           	global	___lwmod
  4818                           psect	text471,local,class=CODE,delta=2
  4819                           global __ptext471
  4820  06C0                     __ptext471:
  4821                           
  4822 ;; *************** function ___lwmod *****************
  4823 ;; Defined at:
  4824 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  divisor         2    8[COMMON] unsigned int 
  4827 ;;  dividend        2   10[COMMON] unsigned int 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  counter         1   13[COMMON] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2    8[COMMON] unsigned int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4839 ;;      Params:         4       0       0       0       0
  4840 ;;      Locals:         1       0       0       0       0
  4841 ;;      Temps:          1       0       0       0       0
  4842 ;;      Totals:         6       0       0       0       0
  4843 ;;Total ram usage:        6 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_isr1
  4849 ;;		_ADCconvert
  4850 ;;		_sprintf
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           psect	text471
  4854                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4855                           	line	5
  4856                           	global	__size_of___lwmod
  4857  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4858                           	
  4859  06C0                     ___lwmod:	
  4860                           	opt	stack 1
  4861                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4862                           	line	8
  4863                           	
  4864  06C0                     i1l6696:	
  4865  06C0  0879               	movf	(___lwmod@divisor+1),w
  4866  06C1  0478               	iorwf	(___lwmod@divisor),w
  4867  06C2  1903               	skipnz
  4868  06C3  2EC5               	goto	u357_21
  4869  06C4  2EC6               	goto	u357_20
  4870  06C5                     u357_21:
  4871  06C5  2EFC               	goto	i1l6714
  4872  06C6                     u357_20:
  4873                           	line	9
  4874                           	
  4875  06C6                     i1l6698:	
  4876  06C6  01FD               	clrf	(___lwmod@counter)
  4877  06C7  1403               	bsf	status,0
  4878  06C8  0DFD               	rlf	(___lwmod@counter),f
  4879                           	line	10
  4880  06C9  2ED6               	goto	i1l6704
  4881                           	
  4882  06CA                     i1l4368:	
  4883                           	line	11
  4884                           	
  4885  06CA                     i1l6700:	
  4886  06CA  3001               	movlw	01h
  4887                           	
  4888  06CB                     u358_25:
  4889  06CB  1003               	clrc
  4890  06CC  0DF8               	rlf	(___lwmod@divisor),f
  4891  06CD  0DF9               	rlf	(___lwmod@divisor+1),f
  4892  06CE  3EFF               	addlw	-1
  4893  06CF  1D03               	skipz
  4894  06D0  2ECB               	goto	u358_25
  4895                           	line	12
  4896                           	
  4897  06D1                     i1l6702:	
  4898  06D1  3001               	movlw	(01h)
  4899  06D2  00FC               	movwf	(??___lwmod+0)+0
  4900  06D3  087C               	movf	(??___lwmod+0)+0,w
  4901  06D4  07FD               	addwf	(___lwmod@counter),f
  4902  06D5  2ED6               	goto	i1l6704
  4903                           	line	13
  4904                           	
  4905  06D6                     i1l4367:	
  4906                           	line	10
  4907                           	
  4908  06D6                     i1l6704:	
  4909  06D6  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  4910  06D7  2ED9               	goto	u359_21
  4911  06D8  2EDA               	goto	u359_20
  4912  06D9                     u359_21:
  4913  06D9  2ECA               	goto	i1l6700
  4914  06DA                     u359_20:
  4915  06DA  2EDC               	goto	i1l6706
  4916                           	
  4917  06DB                     i1l4369:	
  4918  06DB  2EDC               	goto	i1l6706
  4919                           	line	14
  4920                           	
  4921  06DC                     i1l4370:	
  4922                           	line	15
  4923                           	
  4924  06DC                     i1l6706:	
  4925  06DC  0879               	movf	(___lwmod@divisor+1),w
  4926  06DD  027B               	subwf	(___lwmod@dividend+1),w
  4927  06DE  1D03               	skipz
  4928  06DF  2EE2               	goto	u360_25
  4929  06E0  0878               	movf	(___lwmod@divisor),w
  4930  06E1  027A               	subwf	(___lwmod@dividend),w
  4931  06E2                     u360_25:
  4932  06E2  1C03               	skipc
  4933  06E3  2EE5               	goto	u360_21
  4934  06E4  2EE6               	goto	u360_20
  4935  06E5                     u360_21:
  4936  06E5  2EED               	goto	i1l6710
  4937  06E6                     u360_20:
  4938                           	line	16
  4939                           	
  4940  06E6                     i1l6708:	
  4941  06E6  0878               	movf	(___lwmod@divisor),w
  4942  06E7  02FA               	subwf	(___lwmod@dividend),f
  4943  06E8  0879               	movf	(___lwmod@divisor+1),w
  4944  06E9  1C03               	skipc
  4945  06EA  03FB               	decf	(___lwmod@dividend+1),f
  4946  06EB  02FB               	subwf	(___lwmod@dividend+1),f
  4947  06EC  2EED               	goto	i1l6710
  4948                           	
  4949  06ED                     i1l4371:	
  4950                           	line	17
  4951                           	
  4952  06ED                     i1l6710:	
  4953  06ED  3001               	movlw	01h
  4954                           	
  4955  06EE                     u361_25:
  4956  06EE  1003               	clrc
  4957  06EF  0CF9               	rrf	(___lwmod@divisor+1),f
  4958  06F0  0CF8               	rrf	(___lwmod@divisor),f
  4959  06F1  3EFF               	addlw	-1
  4960  06F2  1D03               	skipz
  4961  06F3  2EEE               	goto	u361_25
  4962                           	line	18
  4963                           	
  4964  06F4                     i1l6712:	
  4965  06F4  3001               	movlw	low(01h)
  4966  06F5  02FD               	subwf	(___lwmod@counter),f
  4967  06F6  1D03               	btfss	status,2
  4968  06F7  2EF9               	goto	u362_21
  4969  06F8  2EFA               	goto	u362_20
  4970  06F9                     u362_21:
  4971  06F9  2EDC               	goto	i1l6706
  4972  06FA                     u362_20:
  4973  06FA  2EFC               	goto	i1l6714
  4974                           	
  4975  06FB                     i1l4372:	
  4976  06FB  2EFC               	goto	i1l6714
  4977                           	line	19
  4978                           	
  4979  06FC                     i1l4366:	
  4980                           	line	20
  4981                           	
  4982  06FC                     i1l6714:	
  4983  06FC  087B               	movf	(___lwmod@dividend+1),w
  4984  06FD  01F9               	clrf	(?___lwmod+1)
  4985  06FE  07F9               	addwf	(?___lwmod+1)
  4986  06FF  087A               	movf	(___lwmod@dividend),w
  4987  0700  01F8               	clrf	(?___lwmod)
  4988  0701  07F8               	addwf	(?___lwmod)
  4989                           
  4990  0702  2F03               	goto	i1l4373
  4991                           	
  4992  0703                     i1l6716:	
  4993                           	line	21
  4994                           	
  4995  0703                     i1l4373:	
  4996  0703  0008               	return
  4997                           	opt stack 0
  4998                           GLOBAL	__end_of___lwmod
  4999  0704                     	__end_of___lwmod:
  5000 ;; =============== function ___lwmod ends ============
  5001                           
  5002                           	signat	___lwmod,8314
  5003                           	global	___lwdiv
  5004                           psect	text472,local,class=CODE,delta=2
  5005                           global __ptext472
  5006  0672                     __ptext472:
  5007                           
  5008 ;; *************** function ___lwdiv *****************
  5009 ;; Defined at:
  5010 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  divisor         2    0[COMMON] unsigned int 
  5013 ;;  dividend        2    2[COMMON] unsigned int 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  quotient        2    5[COMMON] unsigned int 
  5016 ;;  counter         1    7[COMMON] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  2    0[COMMON] unsigned int 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5026 ;;      Params:         4       0       0       0       0
  5027 ;;      Locals:         3       0       0       0       0
  5028 ;;      Temps:          1       0       0       0       0
  5029 ;;      Totals:         8       0       0       0       0
  5030 ;;Total ram usage:        8 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_readAvgDistance
  5036 ;;		_sprintf
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           psect	text472
  5040                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5041                           	line	5
  5042                           	global	__size_of___lwdiv
  5043  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5044                           	
  5045  0672                     ___lwdiv:	
  5046                           	opt	stack 1
  5047                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5048                           	line	9
  5049                           	
  5050  0672                     i1l6670:	
  5051  0672  01F5               	clrf	(___lwdiv@quotient)
  5052  0673  01F6               	clrf	(___lwdiv@quotient+1)
  5053                           	line	10
  5054                           	
  5055  0674                     i1l6672:	
  5056  0674  0871               	movf	(___lwdiv@divisor+1),w
  5057  0675  0470               	iorwf	(___lwdiv@divisor),w
  5058  0676  1903               	skipnz
  5059  0677  2E79               	goto	u350_21
  5060  0678  2E7A               	goto	u350_20
  5061  0679                     u350_21:
  5062  0679  2EB8               	goto	i1l6692
  5063  067A                     u350_20:
  5064                           	line	11
  5065                           	
  5066  067A                     i1l6674:	
  5067  067A  01F7               	clrf	(___lwdiv@counter)
  5068  067B  1403               	bsf	status,0
  5069  067C  0DF7               	rlf	(___lwdiv@counter),f
  5070                           	line	12
  5071  067D  2E8A               	goto	i1l6680
  5072                           	
  5073  067E                     i1l4358:	
  5074                           	line	13
  5075                           	
  5076  067E                     i1l6676:	
  5077  067E  3001               	movlw	01h
  5078                           	
  5079  067F                     u351_25:
  5080  067F  1003               	clrc
  5081  0680  0DF0               	rlf	(___lwdiv@divisor),f
  5082  0681  0DF1               	rlf	(___lwdiv@divisor+1),f
  5083  0682  3EFF               	addlw	-1
  5084  0683  1D03               	skipz
  5085  0684  2E7F               	goto	u351_25
  5086                           	line	14
  5087                           	
  5088  0685                     i1l6678:	
  5089  0685  3001               	movlw	(01h)
  5090  0686  00F4               	movwf	(??___lwdiv+0)+0
  5091  0687  0874               	movf	(??___lwdiv+0)+0,w
  5092  0688  07F7               	addwf	(___lwdiv@counter),f
  5093  0689  2E8A               	goto	i1l6680
  5094                           	line	15
  5095                           	
  5096  068A                     i1l4357:	
  5097                           	line	12
  5098                           	
  5099  068A                     i1l6680:	
  5100  068A  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  5101  068B  2E8D               	goto	u352_21
  5102  068C  2E8E               	goto	u352_20
  5103  068D                     u352_21:
  5104  068D  2E7E               	goto	i1l6676
  5105  068E                     u352_20:
  5106  068E  2E90               	goto	i1l6682
  5107                           	
  5108  068F                     i1l4359:	
  5109  068F  2E90               	goto	i1l6682
  5110                           	line	16
  5111                           	
  5112  0690                     i1l4360:	
  5113                           	line	17
  5114                           	
  5115  0690                     i1l6682:	
  5116  0690  3001               	movlw	01h
  5117                           	
  5118  0691                     u353_25:
  5119  0691  1003               	clrc
  5120  0692  0DF5               	rlf	(___lwdiv@quotient),f
  5121  0693  0DF6               	rlf	(___lwdiv@quotient+1),f
  5122  0694  3EFF               	addlw	-1
  5123  0695  1D03               	skipz
  5124  0696  2E91               	goto	u353_25
  5125                           	line	18
  5126  0697  0871               	movf	(___lwdiv@divisor+1),w
  5127  0698  0273               	subwf	(___lwdiv@dividend+1),w
  5128  0699  1D03               	skipz
  5129  069A  2E9D               	goto	u354_25
  5130  069B  0870               	movf	(___lwdiv@divisor),w
  5131  069C  0272               	subwf	(___lwdiv@dividend),w
  5132  069D                     u354_25:
  5133  069D  1C03               	skipc
  5134  069E  2EA0               	goto	u354_21
  5135  069F  2EA1               	goto	u354_20
  5136  06A0                     u354_21:
  5137  06A0  2EA9               	goto	i1l6688
  5138  06A1                     u354_20:
  5139                           	line	19
  5140                           	
  5141  06A1                     i1l6684:	
  5142  06A1  0870               	movf	(___lwdiv@divisor),w
  5143  06A2  02F2               	subwf	(___lwdiv@dividend),f
  5144  06A3  0871               	movf	(___lwdiv@divisor+1),w
  5145  06A4  1C03               	skipc
  5146  06A5  03F3               	decf	(___lwdiv@dividend+1),f
  5147  06A6  02F3               	subwf	(___lwdiv@dividend+1),f
  5148                           	line	20
  5149                           	
  5150  06A7                     i1l6686:	
  5151  06A7  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5152  06A8  2EA9               	goto	i1l6688
  5153                           	line	21
  5154                           	
  5155  06A9                     i1l4361:	
  5156                           	line	22
  5157                           	
  5158  06A9                     i1l6688:	
  5159  06A9  3001               	movlw	01h
  5160                           	
  5161  06AA                     u355_25:
  5162  06AA  1003               	clrc
  5163  06AB  0CF1               	rrf	(___lwdiv@divisor+1),f
  5164  06AC  0CF0               	rrf	(___lwdiv@divisor),f
  5165  06AD  3EFF               	addlw	-1
  5166  06AE  1D03               	skipz
  5167  06AF  2EAA               	goto	u355_25
  5168                           	line	23
  5169                           	
  5170  06B0                     i1l6690:	
  5171  06B0  3001               	movlw	low(01h)
  5172  06B1  02F7               	subwf	(___lwdiv@counter),f
  5173  06B2  1D03               	btfss	status,2
  5174  06B3  2EB5               	goto	u356_21
  5175  06B4  2EB6               	goto	u356_20
  5176  06B5                     u356_21:
  5177  06B5  2E90               	goto	i1l6682
  5178  06B6                     u356_20:
  5179  06B6  2EB8               	goto	i1l6692
  5180                           	
  5181  06B7                     i1l4362:	
  5182  06B7  2EB8               	goto	i1l6692
  5183                           	line	24
  5184                           	
  5185  06B8                     i1l4356:	
  5186                           	line	25
  5187                           	
  5188  06B8                     i1l6692:	
  5189  06B8  0876               	movf	(___lwdiv@quotient+1),w
  5190  06B9  01F1               	clrf	(?___lwdiv+1)
  5191  06BA  07F1               	addwf	(?___lwdiv+1)
  5192  06BB  0875               	movf	(___lwdiv@quotient),w
  5193  06BC  01F0               	clrf	(?___lwdiv)
  5194  06BD  07F0               	addwf	(?___lwdiv)
  5195                           
  5196  06BE  2EBF               	goto	i1l4363
  5197                           	
  5198  06BF                     i1l6694:	
  5199                           	line	26
  5200                           	
  5201  06BF                     i1l4363:	
  5202  06BF  0008               	return
  5203                           	opt stack 0
  5204                           GLOBAL	__end_of___lwdiv
  5205  06C0                     	__end_of___lwdiv:
  5206 ;; =============== function ___lwdiv ends ============
  5207                           
  5208                           	signat	___lwdiv,8314
  5209                           	global	_adc_read
  5210                           psect	text473,local,class=CODE,delta=2
  5211                           global __ptext473
  5212  079D                     __ptext473:
  5213                           
  5214 ;; *************** function _adc_read *****************
  5215 ;; Defined at:
  5216 ;;		line 61 in file "H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  2    0[COMMON] unsigned int 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         2       0       0       0       0
  5231 ;;      Locals:         2       0       0       0       0
  5232 ;;      Temps:          2       0       0       0       0
  5233 ;;      Totals:         6       0       0       0       0
  5234 ;;Total ram usage:        6 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_adc_read_channel
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           psect	text473
  5243                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  5244                           	line	61
  5245                           	global	__size_of_adc_read
  5246  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  5247                           	
  5248  079D                     _adc_read:	
  5249                           	opt	stack 1
  5250                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5251                           	line	64
  5252                           	
  5253  079D                     i1l6370:	
  5254                           ;adc.c: 62: volatile unsigned int adc_value;
  5255                           ;adc.c: 64: ADRESH = 0;
  5256  079D  1283               	bcf	status, 5	;RP0=0, select bank0
  5257  079E  1303               	bcf	status, 6	;RP1=0, select bank0
  5258  079F  019E               	clrf	(30)	;volatile
  5259                           	line	66
  5260                           	
  5261  07A0                     i1l6372:	
  5262                           ;adc.c: 66: GO = 1;
  5263  07A0  151F               	bsf	(250/8),(250)&7
  5264                           	line	67
  5265                           ;adc.c: 67: while(GO) continue;
  5266  07A1  2FA2               	goto	i1l703
  5267                           	
  5268  07A2                     i1l704:	
  5269                           	
  5270  07A2                     i1l703:	
  5271  07A2  191F               	btfsc	(250/8),(250)&7
  5272  07A3  2FA5               	goto	u290_21
  5273  07A4  2FA6               	goto	u290_20
  5274  07A5                     u290_21:
  5275  07A5  2FA2               	goto	i1l703
  5276  07A6                     u290_20:
  5277                           	
  5278  07A6                     i1l705:	
  5279                           	line	68
  5280                           # 68 "H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  5281  07A6  0000               nop ;#
  5282                           	line	69
  5283                           # 69 "H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  5284  07A7  0000               nop ;#
  5285                           	line	70
  5286                           # 70 "H:\Aldnoah.Zero\trunk\Assignment3\adc.c"
  5287  07A8  0000               nop ;#
  5288                           psect	text473
  5289                           	line	73
  5290                           	
  5291  07A9                     i1l6374:	
  5292                           ;adc.c: 73: adc_value = ADRESH;
  5293  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
  5294  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
  5295  07AB  081E               	movf	(30),w	;volatile
  5296  07AC  00F2               	movwf	(??_adc_read+0)+0
  5297  07AD  01F3               	clrf	(??_adc_read+0)+0+1
  5298  07AE  0872               	movf	0+(??_adc_read+0)+0,w
  5299  07AF  00F4               	movwf	(adc_read@adc_value)	;volatile
  5300  07B0  0873               	movf	1+(??_adc_read+0)+0,w
  5301  07B1  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  5302                           	line	74
  5303                           ;adc.c: 74: adc_value <<= 1;
  5304  07B2  3001               	movlw	01h
  5305                           	
  5306  07B3                     u291_25:
  5307  07B3  1003               	clrc
  5308  07B4  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  5309  07B5  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  5310  07B6  3EFF               	addlw	-1
  5311  07B7  1D03               	skipz
  5312  07B8  2FB3               	goto	u291_25
  5313                           	line	75
  5314                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  5315  07B9  1683               	bsf	status, 5	;RP0=1, select bank1
  5316  07BA  1303               	bcf	status, 6	;RP1=0, select bank1
  5317  07BB  081E               	movf	(158)^080h,w	;volatile
  5318                           	line	78
  5319                           	
  5320  07BC                     i1l6376:	
  5321                           ;adc.c: 78: return (adc_value);
  5322  07BC  0875               	movf	(adc_read@adc_value+1),w	;volatile
  5323  07BD  01F1               	clrf	(?_adc_read+1)
  5324  07BE  07F1               	addwf	(?_adc_read+1)
  5325  07BF  0874               	movf	(adc_read@adc_value),w	;volatile
  5326  07C0  01F0               	clrf	(?_adc_read)
  5327  07C1  07F0               	addwf	(?_adc_read)
  5328                           
  5329  07C2  2FC3               	goto	i1l706
  5330                           	
  5331  07C3                     i1l6378:	
  5332                           	line	79
  5333                           	
  5334  07C3                     i1l706:	
  5335  07C3  0008               	return
  5336                           	opt stack 0
  5337                           GLOBAL	__end_of_adc_read
  5338  07C4                     	__end_of_adc_read:
  5339 ;; =============== function _adc_read ends ============
  5340                           
  5341                           	signat	_adc_read,90
  5342                           psect	text474,local,class=CODE,delta=2
  5343                           global __ptext474
  5344  0000                     __ptext474:
  5345                           	global	btemp
  5346  007E                     	btemp set 07Eh
  5347                           
  5348                           	DABS	1,126,2	;btemp
  5349                           	global	wtemp0
  5350  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 13 16:05:50 2015

   __end_of_lcd_write_control 07FD                             pc 0002                            _GO 00FA  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
                         l700 0FD1                           _GIE 005F                           _RB0 0030  
                         _RB1 0031                           _RB2 0032                           _RB3 0033  
                         _RB4 0034                           _RB5 0035                           _RE0 0048  
                         _RE1 0049                           _RE2 004A                           fsr0 0004  
                         indf 0000               ?_lcd_set_cursor 0070                          l1423 079C  
                        l2180 0631                          l2181 0642                          l2182 0653  
                        l2183 066D                          l2176 0FE5                          l2184 066E  
                        l1393 07FC                          l2185 066F                          l2186 066F  
                        l2179 0627                          l3611 027B                          l3612 0397  
                        l3620 02AE                          l3613 02FD                          l3621 02B9  
                        l3630 0310                          l3614 02E0                          l3622 02C4  
                        l3631 031B                          l3623 02CF                          l3615 0282  
                        l3632 0326                          l3616 02FC                          l3624 02DA  
                        l3625 0382                          l3633 0331                          l3617 028D  
                        l3626 0380                          l3634 033C                          l3618 0298  
                        l3627 0363                          l3635 0347                          l3619 02A3  
                        l3636 0352                          l3628 0305                          l3629 037F  
                        l3637 035D                          l3638 0381                          l3639 039B  
                        l6800 0382                          l6730 0FC5                          l6802 038D  
                        l6810 0779                          l6732 0FC9                          l6740 07EF  
                        l6804 0397                          l6820 078A                          l6812 077A  
                        l6734 0FCD                          l6726 0FBE                          l6742 07F0  
                        l6750 0281                          l6822 0790                          l6814 077D  
                        l6806 0772                          l6830 0FE0                          l6728 0FC1  
                        l6736 07E4                          l6760 02AE                          l6752 0282  
                        l6744 0274                          l6824 0796                          l6816 077E  
                        l6808 0776                          l6832 0FE1                          l6840 061D  
                        l6738 07E9                          l6770 02DF                          l6762 02B9  
                        l6754 028D                          l6746 027A                          l6818 0784  
                        l6834 0FE3                          l6826 0FD2                          l6850 0635  
                        l6842 0627                          l6780 0310                          l6764 02C4  
                        l6756 0298                          l6772 02E0                          l6748 027B  
                        l6836 0FE4                          l6828 0FDC                          l6860 0653  
                        l6852 0636                          l6844 062D                          l6790 0347  
                        l6782 031B                          l6766 02CF                          l6758 02A3  
                        l6774 02FD                          l6862 0659                          l6854 0642  
                        l6846 062E                          l6838 0618                          l6792 0352  
                        l6784 0326                          l6776 0304                          l6768 02DA  
                        l6864 065A                          l6856 0648                          l6848 0631  
                        l6794 035D                          l6786 0331                          l6778 0305  
                        l6866 0666                          l6858 0649                          l6796 0362  
                        l6788 033C                          l6798 0363                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 0764  
                        STR_3 0755                          u3700 0659                          u3701 0658  
                        u3630 0279                          u3631 0278                          u3640 0280  
                        u3641 027F                          u3650 0303                          u3651 0302  
                        u3660 0396                          u3661 0395                          u3717 0388  
                        u3670 062D                          u3727 07F7                          u3671 062C  
                        u3680 0635                          u3737 0FCF                          u3681 0634  
                        u3690 0648                          u3691 0647                          _TMR0 0001  
                        _WREN 0C62           __size_of_ADCconvert 025C        __end_of_lcd_write_data 0FAA  
                        _isr1 049A                          _main 0618                          _init 0FD2  
                        btemp 007E                          start 0012  __size_ofi1_lcd_write_control 0014  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         _CARRY 0018               __end_of___lwdiv 06C0  
             __end_of___lwmod 0704                         i1l703 07A2                         i1l704 07A2  
                       i1l705 07A6                         i1l706 07C3                         i1l690 0706  
                       i1l691 0739                         i1l692 070C                         i1l693 0712  
                       i1l694 0718                         i1l695 071E                         i1l696 0724  
                       i1l689 0728                         i1l697 0744                         _PORTA 0005  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089        lcd_write_data@databyte 0072  
                       pclath 000A               ?_lcd_write_data 0070             ?_adc_read_channel 0070  
                       status 0003                         wtemp0 007E               __end_of_sprintf 049A  
          ??_adc_read_channel 0076              ?_readAvgDistance 002F    __size_of_lcd_write_control 001C  
                __end_of_isr1 0597                  __end_of_main 0672                  __end_of_init 0FE6  
             rotate@direction 00D1        readAvgDistance@fullval 0045                        ??_isr1 0063  
                      ??_main 00D5                        ??_init 00D4                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
            __end_of_adc_read 07C4                        i1l1402 0FF6                        i1l1403 0FE8  
                      i1l1404 0FFF                        i1l1405 0FFF                        i1l2160 0528  
                      i1l2161 0540                        i1l2170 0588                        i1l2162 053F  
                      i1l2171 0587                        i1l2163 0542                        i1l2156 058C  
                      i1l2172 058B                        i1l2164 0558                        i1l2165 0557  
                      i1l2157 04C1                        i1l2173 058C                        i1l2166 055A  
                      i1l2158 04DC                        i1l2167 0570                        i1l2159 0509  
                      i1l2168 056F                        i1l1393 0FBD                        i1l2169 0572  
                      i1l1396 0FA9                        i1l1399 0F96                        i1l2900 024C  
                      i1l2901 0092                        i1l2902 024B                        i1l2910 0247  
                      i1l2911 016E                        i1l2903 00BE                        i1l4360 0690  
                      i1l2904 024A                        i1l2912 0246                        i1l2920 0242  
                      i1l4361 06A9                        i1l2921 0241                        i1l2913 019A  
                      i1l2905 00EA                        i1l4362 06B7                        i1l4370 06DC  
                      i1l3650 03B6                        i1l2922 0270                        i1l2906 0249  
                      i1l2914 0245                        i1l4363 06BF                        i1l4371 06ED  
                      i1l3651 03BD                        i1l2915 01C6                        i1l2907 0116  
                      i1l4356 06B8                        i1l4372 06FB                        i1l3660 041F  
                      i1l3652 03B8                        i1l2908 0248                        i1l2916 0244  
                      i1l4357 068A                        i1l4373 0703                        i1l3653 0494  
                      i1l3661 0414                        i1l2917 01F2                        i1l2909 0142  
                      i1l4358 067E                        i1l4366 06FC                        i1l3662 0431  
                      i1l3654 03B9                        i1l2918 0243                        i1l4359 068F  
                      i1l4367 06D6                        i1l3663 0474                        i1l3655 03BA  
                      i1l2919 021E                        i1l4368 06CA                        i1l3648 0480  
                      i1l3664 0436                        i1l3656 03D2                        u300_20 0520  
                      i1l4369 06DB                        i1l3665 047F                        i1l3657 03BB  
                      i1l3649 03A4                        u300_21 051F                        i1l3666 0493  
                      i1l3658 03EC                        i1l3667 0499                        i1l3659 03F7  
                      i1l6500 05C1                        i1l2885 05C1                        i1l6510 060E  
                      i1l2886 05E5                        i1l6502 05D1                        i1l6430 049F  
                      i1l2887 0617                        i1l6360 0727                        i1l6600 03AA  
                      i1l6512 0617                        i1l6504 05D7                        i1l6520 003A  
                      u301_20 052E                        i1l6440 04D8                        i1l6432 04A7  
                      i1l2897 003A                        u301_21 052D                        i1l6370 079D  
                      i1l6362 0728                        i1l6354 0705                        i1l6610 03DA  
                      i1l6602 03B1                        i1l6506 05E5                        i1l6530 0078  
                      i1l6522 0043                        i1l2898 024C                        i1l6514 0015  
                      i1l6450 0520                        i1l6442 04DC                        i1l6434 04A8  
                      i1l6426 049A                        i1l2899 0066                        i1l6372 07A0  
                      i1l6700 06CA                        i1l6356 0724                        i1l6364 0739  
                      i1l6380 0F98                        i1l6620 03EF                        i1l6612 03DE  
                      i1l6604 03BC                        i1l6508 05FE                        i1l6540 00C7  
                      i1l6532 0092                        i1l6524 004C                        i1l6516 002C  
                      i1l6460 0532                        i1l6452 0523                        i1l6444 04F3  
                      i1l6436 04BD                        i1l6428 049E                        i1l6374 07A9  
                      i1l6710 06ED                        i1l6702 06D1                        i1l6366 073D  
                      i1l6358 0726                        i1l6382 0F9D                        i1l6630 0418  
                      i1l6622 03F6                        i1l6614 03E2                        i1l6606 03BD  
                      i1l6390 0F90                        i1l6550 0116                        i1l6542 00D0  
                      i1l6534 009B                        i1l6526 0066                        i1l6518 0035  
                      i1l6470 0550                        i1l6462 0538                        i1l6454 0525  
                      i1l6446 0505                        i1l6438 04C1                        i1l6376 07BC  
                      i1l6712 06F4                        i1l6704 06D6                        i1l6368 0744  
                      i1l6384 0F9F                        i1l6640 0436                        i1l6632 041F  
                      i1l6624 03F7                        i1l6616 03E6                        i1l6608 03D2  
                      i1l6720 0FB0                        i1l6392 0FE7                        i1l6560 0154  
                      i1l6552 011F                        i1l6544 00EA                        i1l6536 00A4  
                      i1l6528 006F                        u310_20 0576                        i1l6480 056C  
                      i1l6472 0554                        i1l6464 053C                        u302_20 0538  
                      i1l6456 0528                        i1l6448 0509                        u310_21 0575  
                      u302_21 0537                        i1l6378 07C3                        i1l6706 06DC  
                      i1l6714 06FC                        i1l6386 0FA0                        i1l6642 0468  
                      i1l6634 0425                        i1l6626 0413                        i1l6618 03EC  
                      i1l6650 0494                        i1l6722 0FB2                        i1l6394 0FE8  
                      i1l6490 0597                        i1l6570 01A3                        i1l6562 016E  
                      i1l6554 0128                        i1l6546 00F3                        i1l6538 00BE  
                      i1l6482 0576                        i1l6474 055E                        i1l6466 0546  
                      i1l6458 052E                        i1l6716 0703                        i1l6708 06E6  
                      i1l6652 0499                        i1l6644 046F                        i1l6636 042C  
                      i1l6628 0414                        i1l6724 0FB3                        i1l6388 0F8F  
                      i1l6396 0FF1                        i1l6492 059B                        i1l6580 01F2  
                      i1l6572 01AC                        i1l6564 0177                        i1l6556 0142  
                      i1l6548 00FC                        i1l6484 057A                        i1l6476 0562  
                      i1l6468 054A                        i1l6670 0672                        i1l6646 0474  
                      i1l6638 0431                        i1l6718 0FAB                        i1l6398 0FF6  
                      i1l6494 05B0                        i1l6590 0252                        i1l6582 01FB  
                      i1l6574 01C6                        i1l6566 0180                        i1l6558 014B  
                      i1l6486 0580                        i1l6478 0568                        i1l6680 068A  
                      i1l6672 0674                        i1l6648 0480                        i1l6496 05B2  
                      i1l6592 0264                        i1l6584 0204                        i1l6576 01CF  
                      i1l6568 019A                        i1l6488 0584                        u311_20 0580  
                      u303_20 053C                        u311_21 057F                        u303_21 053B  
                      i1l6690 06B0                        i1l6682 0690                        i1l6674 067A  
                      i1l6498 05C0                        i1l6594 026A                        i1l6586 021E  
                      i1l6578 01D8                        i1l6684 06A1                        i1l6676 067E  
                      i1l6692 06B8                        i1l6596 039F                        i1l6588 0227  
                      i1l6694 06BF                        i1l6686 06A7                        i1l6678 0685  
                      i1l6598 03A4                        i1l6688 06A9                        i1l6696 06C0  
                      u320_20 006F                        u312_20 0584                        u304_20 0546  
                      u320_21 006E                        u312_21 0583                        u304_21 0545  
                      i1l6698 06C6                        u313_20 05A3                        u321_20 0078  
                      u305_20 0550                        u321_21 0077                        u305_21 054F  
                      u314_20 05BF                        u330_20 014B                        u322_20 009B  
                      u306_20 0554                        u314_21 05BE                        u330_21 014A  
                      u322_21 009A                        u306_21 0553                        u314_25 05BB  
                      u315_20 05E4                        u331_20 0154                        u323_20 00A4  
                      u307_20 055E                        u315_21 05E3                        u331_21 0153  
                      u323_21 00A3                        u307_21 055D                        u315_25 05E0  
                      u340_20 0227                        u332_20 0177                        u324_20 00C7  
                      u316_20 001F                        u308_20 0568                        u340_21 0226  
                      u332_21 0176                        u324_21 00C6                        u308_21 0567  
                      u341_20 03AA                        u333_20 0180                        u325_20 00D0  
                      u317_20 0035                        u309_20 056C                        u341_21 03A9  
                      u333_21 017F                        u325_21 00CF                        u317_21 0034  
                      u309_21 056B                        u350_20 067A                        u342_20 03E2  
                      u334_20 01A3                        u326_20 00F3                        u318_20 0043  
                      u350_21 0679                        u342_21 03E1                        u334_21 01A2  
                      u326_21 00F2                        u318_21 0042                        u343_20 03F5  
                      u335_20 01AC                        u327_20 00FC                        u319_20 004C  
                      u343_21 03F4                        u335_21 01AB                        u327_21 00FB  
                      u319_21 004B                        u351_25 067F                        u352_20 068E  
                      u360_20 06E6                        u344_20 0412                        u336_20 01CF  
                      u328_20 011F                        u352_21 068D                        u360_21 06E5  
                      u344_21 0411                        u336_21 01CE                        u328_21 011E  
                      u360_25 06E2                        u344_25 040E                        u345_20 041E  
                      u337_20 01D8                        u329_20 0128                        u345_21 041D  
                      u337_21 01D7                        u329_21 0127                        u353_25 0691  
                      u361_25 06EE                        u290_20 07A6                        u354_20 06A1  
                      u362_20 06FA                        u346_20 0425                        u338_20 01FB  
                      u290_21 07A5                        u354_21 06A0                        u362_21 06F9  
                      u346_21 0424                        u338_21 01FA                        u354_25 069D  
                      u347_20 047E                        u339_20 0204                        u347_21 047D  
                      u339_21 0203                        u291_25 07B3                        u355_25 06AA  
                      u356_20 06B6                        u348_20 0492                        u292_20 0FFE  
                      u356_21 06B5                        u348_21 0491                        u292_21 0FFD  
                      u357_20 06C6                        u357_21 06C5                        u358_25 06CB  
                      u374_27 0FB8                        u359_20 06DA                        u359_21 06D9  
                      u375_27 0FA5                        u296_20 049E                        u296_21 049D  
                      u376_27 073B                        u297_20 04BD                        u297_21 04BC  
                      u298_20 04D8                        u298_21 04D7                        u299_20 04F3  
                      u299_21 04F2                        _TMR0IE 005D                        _TMR0IF 005A  
            _pb0DebounceCount 006C              __end_of_lcd_init 079D                  ??_ADCconvert 004D  
                   ??___lwdiv 0074                     ??___lwmod 007C              __end_of_init_adc 0FD2  
    __end_of_lcd_write_string 1000            ADCconvert@distance 0061                        _rotate 0271  
                      clrloop 0F87                        saved_w 007E                     ??_sprintf 0023  
           lcd_write_string@s 0074            __end_of_ADCconvert 0271                __pcstackCOMMON 0070  
                __pidataBANK1 07FD                    _pb0Pressed 0345                    _pb1Pressed 0347  
                  _pb2Pressed 0349                    _pb3Pressed 034B              ??_lcd_set_cursor 0073  
         i1_lcd_write_control 0FAA                    __pbssBANK0 006A                    __pbssBANK1 00A0  
            _pb1DebounceCount 006D                    __pmaintext 0618                    __pintentry 0004  
        ?i1_lcd_write_control 0070                     ?_adc_read 0070                       ?_rotate 00D1  
            ??_lcd_write_data 0070                     ?_lcd_init 0070           ADCconvert@adcOutput 0051  
                   ?_init_adc 0070         ??i1_lcd_write_control 0070                       ___lwdiv 0672  
                     ___lwmod 06C0     __size_of_adc_read_channel 0041                    ??_adc_read 0072  
             __size_of_rotate 012B                       _dpowers 074B                       _sprintf 039C  
                  ??_lcd_init 00D4          end_of_initialization 07DD                    ??_init_adc 00D1  
            _pb2DebounceCount 006E      __size_of_readAvgDistance 0081             ?_lcd_write_string 0070  
          ??_lcd_write_string 0073             adc_read@adc_value 0074          readAvgDistance@F1184 00B0  
    readAvgDistance@adcOutput 0035                   _pb0Released 0346                   _pb1Released 0348  
                 _pb2Released 034A                   _pb3Released 034C                 __pbitbssBANK0 0340  
              __end_of_rotate 039C           start_initialization 07C4                   rotate@steps 00D4  
            _pb3DebounceCount 006F         lcd_set_cursor@address 0073                _RTC_FLAG_250MS 0342  
              _RTC_FLAG_500MS 0343                   __pdataBANK1 00D6              _adc_read_channel 0704  
                    ??_rotate 00D2             __size_of_adc_read 0027             ??_readAvgDistance 0031  
               __pcstackBANK0 0020                 __pcstackBANK1 00D1             __size_of_lcd_init 002B  
                 sprintf@_val 0029                   sprintf@flag 0027                   sprintf@prec 0028  
                _current_step 00D6              readAvgDistance@i 0049             __size_of_init_adc 0014  
            ___lwdiv@dividend 0072                     __ptext460 07E1                     __ptext461 0FBE  
                   __ptext470 0704                     __ptext462 049A                     __ptext471 06C0  
                   __ptext463 0015                     __ptext472 0672                     __ptext464 0597  
                   __ptext473 079D                     __ptext465 0FE6                     __ptext457 0FD2  
                   __ptext474 0000                     __ptext466 0F8E                     __ptext458 0772  
                   __ptext467 0FAA                     __ptext459 0271                     __ptext468 039C  
                   __ptext469 0F97                      ?___lwdiv 0070                      ?___lwmod 0078  
                   __pstrings 0745              ___lwdiv@quotient 0075                      ?_sprintf 0020  
     __size_of_lcd_set_cursor 0009             interrupt_function 0004   __end_ofi1_lcd_write_control 0FBE  
   readAvgDistance@averageval 0047                   __stringbase 074A     __size_of_lcd_write_string 001A  
     __size_of_lcd_write_data 0013              ADCconvert@adcVal 004B       adc_read_channel@channel 0077  
               _RTC_FLAG_10MS 0340                 _RTC_FLAG_50MS 0344                    _ADCconvert 0015  
            __size_of___lwdiv 004E              __size_of___lwmod 0044                      _adc_read 079D  
             ___lwdiv@divisor 0070               ___lwdiv@counter 0077                      _lcd_init 0772  
            __size_of_sprintf 00FE      __end_of_adc_read_channel 0745     lcd_write_control@databyte 00D3  
                    _init_adc 0FBE                 __size_of_isr1 00FD                 __size_of_main 005A  
               __size_of_init 0014                      clear_ram 0F86               _readAvgDistance 0597  
             ADCconvert@F1192 00A0             readDistance@F1189 00C0                  _RTC_FLAG_1MS 0341  
                    intlevel1 0000                _lcd_set_cursor 0F8E                     sprintf@ap 0026  
                   sprintf@sp 002D              ___lwmod@dividend 007A                     stringcode 0745  
                 ?_ADCconvert 004B             _lcd_write_control 07E1   i1lcd_write_control@databyte 0072  
          ?_lcd_write_control 0070                    _OPTION_REG 0081                      sprintf@c 002E  
                    sprintf@f 0020               ___lwmod@divisor 0078               ___lwmod@counter 007D  
                    stringdir 0745                      stringtab 0745           ??_lcd_write_control 00D1  
      __end_of_lcd_set_cursor 0F97              _lcd_write_string 0FE6             _current_direction 00D0  
                 _RTC_Counter 006A       __end_of_readAvgDistance 0618                _lcd_write_data 0F97  
