

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Apr 29 15:30:01 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMove
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_main,_ChargeMode
    57                           	FNCALL	_robotMove,_ser_putch
    58                           	FNCALL	_robotMove,_robot_read
    59                           	FNCALL	_robotMove,_UpdateDisplay
    60                           	FNCALL	_scan360,_readAvgDistance
    61                           	FNCALL	_scan360,_rotate
    62                           	FNCALL	_scan360,_UpdateDisplay
    63                           	FNCALL	_ChargeMode,_ser_putch
    64                           	FNCALL	_ChargeMode,_UpdateDisplay
    65                           	FNCALL	_calibrateIR,_rotate
    66                           	FNCALL	_calibrateIR,_UpdateDisplay
    67                           	FNCALL	_readAvgDistance,_readDistance
    68                           	FNCALL	_readAvgDistance,___lwdiv
    69                           	FNCALL	_readAvgDistance,_ADCconvert
    70                           	FNCALL	_UpdateDisplay,_lcd_write_control
    71                           	FNCALL	_UpdateDisplay,_sprintf
    72                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    73                           	FNCALL	_UpdateDisplay,_lcd_write_string
    74                           	FNCALL	_UpdateDisplay,___awmod
    75                           	FNCALL	_init,_ser_init
    76                           	FNCALL	_init,_init_adc
    77                           	FNCALL	_init,_lcd_init
    78                           	FNCALL	_init,_robo_init
    79                           	FNCALL	_readDistance,_adc_read_channel
    80                           	FNCALL	_robot_read,_ser_putch
    81                           	FNCALL	_robot_read,_ser_getch
    82                           	FNCALL	_lcd_init,_lcd_write_control
    83                           	FNCALL	_lcd_write_string,_lcd_write_data
    84                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    85                           	FNCALL	_ser_getch,_ser_isrx
    86                           	FNCALL	_sprintf,___lwdiv
    87                           	FNCALL	_sprintf,___lwmod
    88                           	FNCALL	_ADCconvert,___wmul
    89                           	FNCALL	_ADCconvert,___lwdiv
    90                           	FNCALL	_robotTurn,_ser_putch
    91                           	FNCALL	_rotate,_spi_transfer
    92                           	FNCALL	_robo_init,_ser_putch
    93                           	FNCALL	_adc_read_channel,_adc_read
    94                           	FNROOT	_main
    95                           	FNCALL	_isr1,i1___lwmod
    96                           	FNCALL	_isr1,_ReadButtons
    97                           	FNCALL	_ReadButtons,_Debounce
    98                           	FNCALL	intlevel1,_isr1
    99                           	global	intlevel1
   100                           	FNROOT	intlevel1
   101                           	global	_menuStrings
   102                           	global	_shortMenuStrings
   103                           	global	_current_step
   104                           psect	idataBANK1,class=CODE,space=0,delta=2
   105                           global __pidataBANK1
   106  08DE                     __pidataBANK1:
   107                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   108                           	line	32
   109                           
   110                           ;initializer for _menuStrings
   111  08DE  3455               	retlw	(STR_1-__stringbase)&0ffh
   112  08DF  344C               	retlw	(STR_2-__stringbase)&0ffh
   113  08E0  3467               	retlw	(STR_3-__stringbase)&0ffh
   114  08E1  3470               	retlw	(STR_4-__stringbase)&0ffh
   115  08E2  345E               	retlw	(STR_5-__stringbase)&0ffh
   116  08E3  3443               	retlw	(STR_6-__stringbase)&0ffh
   117                           	line	33
   118                           
   119                           ;initializer for _shortMenuStrings
   120  08E4  3494               	retlw	(STR_7-__stringbase)&0ffh
   121  08E5  3498               	retlw	(STR_8-__stringbase)&0ffh
   122  08E6  3480               	retlw	(STR_9-__stringbase)&0ffh
   123  08E7  348C               	retlw	(STR_10-__stringbase)&0ffh
   124  08E8  349C               	retlw	(STR_11-__stringbase)&0ffh
   125  08E9  3490               	retlw	(STR_12-__stringbase)&0ffh
   126                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   127                           	line	30
   128                           
   129                           ;initializer for _current_step
   130  08EA  343C               	retlw	03Ch
   131                           	global	_dpowers
   132                           psect	strings,class=STRING,delta=2
   133                           global __pstrings
   134  0700                     __pstrings:
   135                           ;	global	stringdir,stringtab,__stringbase
   136  0700                     stringtab:
   137                           ;	String table - string pointers are 1 byte each
   138  0700  1BFF               	btfsc	(btemp+1),7
   139  0701  2F0A               	ljmp	stringcode
   140  0702  1383               	bcf	status,7
   141  0703  187F               	btfsc	(btemp+1),0
   142  0704  1783               	bsf	status,7
   143  0705  0800               	movf	indf,w
   144  0706  0A84               	incf fsr
   145  0707  1903               skipnz
   146  0708  0AFF               incf btemp+1
   147  0709  0008               	return
   148  070A                     stringcode:stringdir:
      + 070A                     stringdir:	
   149  070A  3007               movlw high(stringdir)
   150  070B  008A               movwf pclath
   151  070C  0804               movf fsr,w
   152  070D  0A84               incf fsr
   153  070E  0782               	addwf pc
   154  070F                     __stringbase:
   155  070F  3400               	retlw	0
   156                           psect	strings
   157                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   158                           	line	350
   159  0710                     _dpowers:
   160  0710  3401               	retlw	01h
   161  0711  3400               	retlw	0
   162                           
   163  0712  340A               	retlw	0Ah
   164  0713  3400               	retlw	0
   165                           
   166  0714  3464               	retlw	064h
   167  0715  3400               	retlw	0
   168                           
   169  0716  34E8               	retlw	0E8h
   170  0717  3403               	retlw	03h
   171                           
   172  0718  3410               	retlw	010h
   173  0719  3427               	retlw	027h
   174                           
   175                           	global	_dpowers
   176                           	global	_RTC_Counter
   177                           	global	_adcVal
   178                           	global	_BumpSensors
   179                           	global	_rxiptr
   180                           	global	_rxoptr
   181                           	global	_txiptr
   182                           	global	_txoptr
   183                           	global	UpdateDisplay@F1229
   184                           	global	_buttonPressed
   185                           	global	_CenterPressed
   186                           	global	_CenterReleased
   187                           	global	_DownPressed
   188                           	global	_DownReleased
   189                           	global	_LeftPressed
   190                           	global	_LeftReleased
   191                           	global	_RTC_FLAG_10MS
   192                           	global	_RTC_FLAG_1MS
   193                           	global	_RTC_FLAG_250MS
   194                           	global	_RTC_FLAG_500MS
   195                           	global	_RTC_FLAG_50MS
   196                           	global	_RightPressed
   197                           	global	_RightReleased
   198                           	global	_UpPressed
   199                           	global	_UpReleased
   200                           	global	_rxfifo
   201                           	global	_txfifo
   202                           	global	_distTravelled
   203                           	global	_dist_high
   204                           	global	_dist_low
   205                           	global	_distance
   206                           	global	_pos
   207                           	global	_test
   208                           	global	_total
   209                           	global	_totalSteps
   210                           	global	_CenterDebounceCount
   211                           	global	_DistHighByte
   212                           	global	_DistLowByte
   213                           	global	_DownDebounceCount
   214                           	global	_LeftDebounceCount
   215                           	global	_RightDebounceCount
   216                           	global	_UpDebounceCount
   217                           	global	_currentMenu
   218                           	global	_current_direction
   219                           	global	_highByte
   220                           	global	_lowByte
   221                           	global	_ser_tmp
   222                           	global	_serialInput
   223                           	global	_turnhighByte
   224                           	global	_turnlowByte
   225                           	global	_ADCON0
   226  001F                     _ADCON0	set	31
   227                           	global	_ADRESH
   228  001E                     _ADRESH	set	30
   229                           	global	_PORTA
   230  0005                     _PORTA	set	5
   231                           	global	_PORTC
   232  0007                     _PORTC	set	7
   233                           	global	_PORTD
   234  0008                     _PORTD	set	8
   235                           	global	_PORTE
   236  0009                     _PORTE	set	9
   237                           	global	_RCREG
   238  001A                     _RCREG	set	26
   239                           	global	_SSPBUF
   240  0013                     _SSPBUF	set	19
   241                           	global	_SSPCON
   242  0014                     _SSPCON	set	20
   243                           	global	_TMR0
   244  0001                     _TMR0	set	1
   245                           	global	_TXREG
   246  0019                     _TXREG	set	25
   247                           	global	AT25256A@CS0
   248  0038                     AT25256A@CS0	set	56
   249                           	global	AT25256A@CS1
   250  0039                     AT25256A@CS1	set	57
   251                           	global	_CARRY
   252  0018                     _CARRY	set	24
   253                           	global	_CHS0
   254  00FB                     _CHS0	set	251
   255                           	global	_CHS1
   256  00FC                     _CHS1	set	252
   257                           	global	_CHS2
   258  00FD                     _CHS2	set	253
   259                           	global	_CREN
   260  00C4                     _CREN	set	196
   261                           	global	_GIE
   262  005F                     _GIE	set	95
   263                           	global	_GO
   264  00FA                     _GO	set	250
   265                           	global	_OERR
   266  00C1                     _OERR	set	193
   267                           	global	_PEIE
   268  005E                     _PEIE	set	94
   269                           	global	_RB0
   270  0030                     _RB0	set	48
   271                           	global	_RB2
   272  0032                     _RB2	set	50
   273                           	global	_RB3
   274  0033                     _RB3	set	51
   275                           	global	_RB4
   276  0034                     _RB4	set	52
   277                           	global	_RB5
   278  0035                     _RB5	set	53
   279                           	global	_RB6
   280  0036                     _RB6	set	54
   281                           	global	_RC0
   282  0038                     _RC0	set	56
   283                           	global	_RC1
   284  0039                     _RC1	set	57
   285                           	global	_RC2
   286  003A                     _RC2	set	58
   287                           	global	_RCIF
   288  0065                     _RCIF	set	101
   289                           	global	_RE0
   290  0048                     _RE0	set	72
   291                           	global	_RE1
   292  0049                     _RE1	set	73
   293                           	global	_RE2
   294  004A                     _RE2	set	74
   295                           	global	_RX9
   296  00C6                     _RX9	set	198
   297                           	global	_SPEN
   298  00C7                     _SPEN	set	199
   299                           	global	_SSPIF
   300  0063                     _SSPIF	set	99
   301                           	global	_TMR0IE
   302  005D                     _TMR0IE	set	93
   303                           	global	_TMR0IF
   304  005A                     _TMR0IF	set	90
   305                           	global	_TXIF
   306  0064                     _TXIF	set	100
   307                           	global	_ADCON1
   308  009F                     _ADCON1	set	159
   309                           	global	_ADRESL
   310  009E                     _ADRESL	set	158
   311                           	global	_OPTION_REG
   312  0081                     _OPTION_REG	set	129
   313                           	global	_SPBRG
   314  0099                     _SPBRG	set	153
   315                           	global	_SSPSTAT
   316  0094                     _SSPSTAT	set	148
   317                           	global	_TRISA
   318  0085                     _TRISA	set	133
   319                           	global	_TRISB
   320  0086                     _TRISB	set	134
   321                           	global	_TRISC
   322  0087                     _TRISC	set	135
   323                           	global	_TRISD
   324  0088                     _TRISD	set	136
   325                           	global	_TRISE
   326  0089                     _TRISE	set	137
   327                           	global	_BRGH
   328  04C2                     _BRGH	set	1218
   329                           	global	_RCIE
   330  0465                     _RCIE	set	1125
   331                           	global	_SYNC
   332  04C4                     _SYNC	set	1220
   333                           	global	_TX9
   334  04C6                     _TX9	set	1222
   335                           	global	_TXEN
   336  04C5                     _TXEN	set	1221
   337                           	global	_TXIE
   338  0464                     _TXIE	set	1124
   339                           	global	_EEADR
   340  010D                     _EEADR	set	269
   341                           	global	_EEDATA
   342  010C                     _EEDATA	set	268
   343                           	global	_EECON1
   344  018C                     _EECON1	set	396
   345                           	global	_EECON2
   346  018D                     _EECON2	set	397
   347                           	global	_RD
   348  0C60                     _RD	set	3168
   349                           	global	_WR
   350  0C61                     _WR	set	3169
   351                           	global	_WREN
   352  0C62                     _WREN	set	3170
   353                           	
   354  071A                     STR_18:	
   355  071A  3420               	retlw	32	;' '
   356  071B  3443               	retlw	67	;'C'
   357  071C  3468               	retlw	104	;'h'
   358  071D  3461               	retlw	97	;'a'
   359  071E  3472               	retlw	114	;'r'
   360  071F  3467               	retlw	103	;'g'
   361  0720  3469               	retlw	105	;'i'
   362  0721  346E               	retlw	110	;'n'
   363  0722  3467               	retlw	103	;'g'
   364  0723  3420               	retlw	32	;' '
   365  0724  344D               	retlw	77	;'M'
   366  0725  346F               	retlw	111	;'o'
   367  0726  3464               	retlw	100	;'d'
   368  0727  3465               	retlw	101	;'e'
   369  0728  3420               	retlw	32	;' '
   370  0729  3400               	retlw	0
   371                           psect	strings
   372                           	
   373  072A                     STR_14:	
   374  072A  345A               	retlw	90	;'Z'
   375  072B  3465               	retlw	101	;'e'
   376  072C  3472               	retlw	114	;'r'
   377  072D  346F               	retlw	111	;'o'
   378  072E  3420               	retlw	32	;' '
   379  072F  3453               	retlw	83	;'S'
   380  0730  3474               	retlw	116	;'t'
   381  0731  3465               	retlw	101	;'e'
   382  0732  3470               	retlw	112	;'p'
   383  0733  345F               	retlw	95	;'_'
   384  0734  344D               	retlw	77	;'M'
   385  0735  346F               	retlw	111	;'o'
   386  0736  3474               	retlw	116	;'t'
   387  0737  346F               	retlw	111	;'o'
   388  0738  3472               	retlw	114	;'r'
   389  0739  3400               	retlw	0
   390                           psect	strings
   391                           	
   392  073A                     STR_13:	
   393  073A  3441               	retlw	65	;'A'
   394  073B  3444               	retlw	68	;'D'
   395  073C  3443               	retlw	67	;'C'
   396  073D  343A               	retlw	58	;':'
   397  073E  3425               	retlw	37	;'%'
   398  073F  3464               	retlw	100	;'d'
   399  0740  3420               	retlw	32	;' '
   400  0741  3444               	retlw	68	;'D'
   401  0742  3469               	retlw	105	;'i'
   402  0743  3473               	retlw	115	;'s'
   403  0744  3474               	retlw	116	;'t'
   404  0745  343A               	retlw	58	;':'
   405  0746  3425               	retlw	37	;'%'
   406  0747  3464               	retlw	100	;'d'
   407  0748  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  0749                     STR_19:	
   411  0749  3420               	retlw	32	;' '
   412  074A  3420               	retlw	32	;' '
   413  074B  3445               	retlw	69	;'E'
   414  074C  3458               	retlw	88	;'X'
   415  074D  3449               	retlw	73	;'I'
   416  074E  3454               	retlw	84	;'T'
   417  074F  3420               	retlw	32	;' '
   418  0750  3420               	retlw	32	;' '
   419  0751  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  0752                     STR_6:	
   423  0752  3420               	retlw	32	;' '
   424  0753  3443               	retlw	67	;'C'
   425  0754  3468               	retlw	104	;'h'
   426  0755  3461               	retlw	97	;'a'
   427  0756  3472               	retlw	114	;'r'
   428  0757  3467               	retlw	103	;'g'
   429  0758  3465               	retlw	101	;'e'
   430  0759  3420               	retlw	32	;' '
   431  075A  3400               	retlw	0
   432                           psect	strings
   433                           	
   434  075B                     STR_2:	
   435  075B  3453               	retlw	83	;'S'
   436  075C  3463               	retlw	99	;'c'
   437  075D  3461               	retlw	97	;'a'
   438  075E  346E               	retlw	110	;'n'
   439  075F  345F               	retlw	95	;'_'
   440  0760  3433               	retlw	51	;'3'
   441  0761  3436               	retlw	54	;'6'
   442  0762  3430               	retlw	48	;'0'
   443  0763  3400               	retlw	0
   444                           psect	strings
   445                           	
   446  0764                     STR_1:	
   447  0764  3443               	retlw	67	;'C'
   448  0765  3461               	retlw	97	;'a'
   449  0766  346C               	retlw	108	;'l'
   450  0767  3469               	retlw	105	;'i'
   451  0768  3462               	retlw	98	;'b'
   452  0769  345F               	retlw	95	;'_'
   453  076A  3449               	retlw	73	;'I'
   454  076B  3452               	retlw	82	;'R'
   455  076C  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  076D                     STR_5:	
   459  076D  3446               	retlw	70	;'F'
   460  076E  346C               	retlw	108	;'l'
   461  076F  3477               	retlw	119	;'w'
   462  0770  345F               	retlw	95	;'_'
   463  0771  3457               	retlw	87	;'W'
   464  0772  3461               	retlw	97	;'a'
   465  0773  346C               	retlw	108	;'l'
   466  0774  346C               	retlw	108	;'l'
   467  0775  3400               	retlw	0
   468                           psect	strings
   469                           	
   470  0776                     STR_3:	
   471  0776  3444               	retlw	68	;'D'
   472  0777  3472               	retlw	114	;'r'
   473  0778  3469               	retlw	105	;'i'
   474  0779  3476               	retlw	118	;'v'
   475  077A  3465               	retlw	101	;'e'
   476  077B  345F               	retlw	95	;'_'
   477  077C  3432               	retlw	50	;'2'
   478  077D  346D               	retlw	109	;'m'
   479  077E  3400               	retlw	0
   480                           psect	strings
   481                           	
   482  077F                     STR_4:	
   483  077F  3444               	retlw	68	;'D'
   484  0780  3472               	retlw	114	;'r'
   485  0781  3469               	retlw	105	;'i'
   486  0782  3476               	retlw	118	;'v'
   487  0783  3465               	retlw	101	;'e'
   488  0784  345F               	retlw	95	;'_'
   489  0785  344C               	retlw	76	;'L'
   490  0786  3400               	retlw	0
   491                           psect	strings
   492                           	
   493  0787                     STR_16:	
   494  0787  3443               	retlw	67	;'C'
   495  0788  344F               	retlw	79	;'O'
   496  0789  344E               	retlw	78	;'N'
   497  078A  3446               	retlw	70	;'F'
   498  078B  3449               	retlw	73	;'I'
   499  078C  3452               	retlw	82	;'R'
   500  078D  344D               	retlw	77	;'M'
   501  078E  3400               	retlw	0
   502                           psect	strings
   503                           	
   504  078F                     STR_9:	
   505  078F  3444               	retlw	68	;'D'
   506  0790  3472               	retlw	114	;'r'
   507  0791  3432               	retlw	50	;'2'
   508  0792  3400               	retlw	0
   509                           psect	strings
   510                           	
   511  0793                     STR_15:	
   512  0793  343C               	retlw	60	;'<'
   513  0794  343C               	retlw	60	;'<'
   514  0795  343C               	retlw	60	;'<'
   515  0796  3400               	retlw	0
   516                           psect	strings
   517                           	
   518  0797                     STR_17:	
   519  0797  343E               	retlw	62	;'>'
   520  0798  343E               	retlw	62	;'>'
   521  0799  343E               	retlw	62	;'>'
   522  079A  3400               	retlw	0
   523                           psect	strings
   524                           	
   525  079B                     STR_10:	
   526  079B  3444               	retlw	68	;'D'
   527  079C  3472               	retlw	114	;'r'
   528  079D  344C               	retlw	76	;'L'
   529  079E  3400               	retlw	0
   530                           psect	strings
   531                           	
   532  079F                     STR_12:	
   533  079F  3443               	retlw	67	;'C'
   534  07A0  3468               	retlw	104	;'h'
   535  07A1  3467               	retlw	103	;'g'
   536  07A2  3400               	retlw	0
   537                           psect	strings
   538                           	
   539  07A3                     STR_7:	
   540  07A3  3443               	retlw	67	;'C'
   541  07A4  3461               	retlw	97	;'a'
   542  07A5  346C               	retlw	108	;'l'
   543  07A6  3400               	retlw	0
   544                           psect	strings
   545                           	
   546  07A7                     STR_8:	
   547  07A7  3453               	retlw	83	;'S'
   548  07A8  3463               	retlw	99	;'c'
   549  07A9  346E               	retlw	110	;'n'
   550  07AA  3400               	retlw	0
   551                           psect	strings
   552                           	
   553  07AB                     STR_11:	
   554  07AB  3446               	retlw	70	;'F'
   555  07AC  346C               	retlw	108	;'l'
   556  07AD  3477               	retlw	119	;'w'
   557  07AE  3400               	retlw	0
   558                           psect	strings
   559                           	file	"Assignment3_AldnoahZero.as"
   560                           	line	#
   561                           psect cinit,class=CODE,delta=2
   562                           global start_initialization
   563  0ADB                     start_initialization:
   564                           
   565                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   566                           global __pbitbssCOMMON
   567  0380                     __pbitbssCOMMON:
   568  0380                     _CenterPressed:
   569  0380                            ds      1
   570                           
   571  0381                     _CenterReleased:
   572  0381                            ds      1
   573                           
   574  0382                     _DownPressed:
   575  0382                            ds      1
   576                           
   577  0383                     _DownReleased:
   578  0383                            ds      1
   579                           
   580  0384                     _LeftPressed:
   581  0384                            ds      1
   582                           
   583  0385                     _LeftReleased:
   584  0385                            ds      1
   585                           
   586  0386                     _RTC_FLAG_10MS:
   587  0386                            ds      1
   588                           
   589  0387                     _RTC_FLAG_1MS:
   590  0387                            ds      1
   591                           
   592  0388                     _RTC_FLAG_250MS:
   593  0388                            ds      1
   594                           
   595  0389                     _RTC_FLAG_500MS:
   596  0389                            ds      1
   597                           
   598  038A                     _RTC_FLAG_50MS:
   599  038A                            ds      1
   600                           
   601  038B                     _RightPressed:
   602  038B                            ds      1
   603                           
   604  038C                     _RightReleased:
   605  038C                            ds      1
   606                           
   607  038D                     _UpPressed:
   608  038D                            ds      1
   609                           
   610  038E                     _UpReleased:
   611  038E                            ds      1
   612                           
   613                           psect	bssCOMMON,class=COMMON,space=1
   614                           global __pbssCOMMON
   615  007D                     __pbssCOMMON:
   616  007D                     _buttonPressed:
   617  007D                            ds      1
   618                           
   619                           psect	bssBANK0,class=BANK0,space=1
   620                           global __pbssBANK0
   621  0067                     __pbssBANK0:
   622  0067                     _RTC_Counter:
   623  0067                            ds      2
   624                           
   625  0069                     _adcVal:
   626  0069                            ds      2
   627                           
   628  006B                     _BumpSensors:
   629  006B                            ds      1
   630                           
   631  006C                     _rxiptr:
   632  006C                            ds      1
   633                           
   634  006D                     _rxoptr:
   635  006D                            ds      1
   636                           
   637  006E                     _txiptr:
   638  006E                            ds      1
   639                           
   640  006F                     _txoptr:
   641  006F                            ds      1
   642                           
   643                           psect	bssBANK1,class=BANK1,space=1
   644                           global __pbssBANK1
   645  00A0                     __pbssBANK1:
   646  00A0                     _rxfifo:
   647  00A0                            ds      16
   648                           
   649  00B0                     _txfifo:
   650  00B0                            ds      16
   651                           
   652  00C0                     _distTravelled:
   653  00C0                            ds      2
   654                           
   655  00C2                     _dist_high:
   656  00C2                            ds      2
   657                           
   658  00C4                     _dist_low:
   659  00C4                            ds      2
   660                           
   661  00C6                     _distance:
   662  00C6                            ds      2
   663                           
   664  00C8                     _pos:
   665  00C8                            ds      2
   666                           
   667  00CA                     _test:
   668  00CA                            ds      2
   669                           
   670  00CC                     _total:
   671  00CC                            ds      2
   672                           
   673  00CE                     _totalSteps:
   674  00CE                            ds      2
   675                           
   676  00D0                     _CenterDebounceCount:
   677  00D0                            ds      1
   678                           
   679  00D1                     _DistHighByte:
   680  00D1                            ds      1
   681                           
   682  00D2                     _DistLowByte:
   683  00D2                            ds      1
   684                           
   685  00D3                     _DownDebounceCount:
   686  00D3                            ds      1
   687                           
   688  00D4                     _LeftDebounceCount:
   689  00D4                            ds      1
   690                           
   691  00D5                     _RightDebounceCount:
   692  00D5                            ds      1
   693                           
   694  00D6                     _UpDebounceCount:
   695  00D6                            ds      1
   696                           
   697  00D7                     _currentMenu:
   698  00D7                            ds      1
   699                           
   700  00D8                     _current_direction:
   701  00D8                            ds      1
   702                           
   703  00D9                     _highByte:
   704  00D9                            ds      1
   705                           
   706  00DA                     _lowByte:
   707  00DA                            ds      1
   708                           
   709  00DB                     _ser_tmp:
   710  00DB                            ds      1
   711                           
   712  00DC                     _serialInput:
   713  00DC                            ds      1
   714                           
   715  00DD                     _turnhighByte:
   716  00DD                            ds      1
   717                           
   718  00DE                     _turnlowByte:
   719  00DE                            ds      1
   720                           
   721                           psect	dataBANK1,class=BANK1,space=1
   722                           global __pdataBANK1
   723  00DF                     __pdataBANK1:
   724                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   725                           	line	32
   726  00DF                     _menuStrings:
   727  00DF                            ds      6
   728                           
   729                           psect	dataBANK1
   730                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   731                           	line	33
   732  00E5                     _shortMenuStrings:
   733  00E5                            ds      6
   734                           
   735                           psect	dataBANK1
   736                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   737                           	line	30
   738  00EB                     _current_step:
   739  00EB                            ds      1
   740                           
   741                           psect	bssBANK3,class=BANK3,space=1
   742                           global __pbssBANK3
   743  0190                     __pbssBANK3:
   744  0190                     UpdateDisplay@F1229:
   745  0190                            ds      16
   746                           
   747                           psect clrtext,class=CODE,delta=2
   748                           global clear_ram
   749                           ;	Called with FSR containing the base address, and
   750                           ;	W with the last address+1
   751  08CB                     clear_ram:
   752  08CB  0064               	clrwdt			;clear the watchdog before getting into this loop
   753  08CC                     clrloop:
   754  08CC  0180               	clrf	indf		;clear RAM location pointed to by FSR
   755  08CD  0A84               	incf	fsr,f		;increment pointer
   756  08CE  0604               	xorwf	fsr,w		;XOR with final address
   757  08CF  1903               	btfsc	status,2	;have we reached the end yet?
   758  08D0  3400               	retlw	0		;all done for this memory range, return
   759  08D1  0604               	xorwf	fsr,w		;XOR again to restore value
   760  08D2  28CC               	goto	clrloop		;do the next byte
   761                           
   762                           ; Clear objects allocated to BITCOMMON
   763                           psect cinit,class=CODE,delta=2
   764  0ADB  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   765  0ADC  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   766                           ; Clear objects allocated to COMMON
   767                           psect cinit,class=CODE,delta=2
   768  0ADD  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   769                           ; Clear objects allocated to BANK0
   770                           psect cinit,class=CODE,delta=2
   771  0ADE  1383               	bcf	status, 7	;select IRP bank0
   772  0ADF  3067               	movlw	low(__pbssBANK0)
   773  0AE0  0084               	movwf	fsr
   774  0AE1  3070               	movlw	low((__pbssBANK0)+09h)
   775  0AE2  120A  158A  20CB   	fcall	clear_ram
              120A  158A         
   776                           ; Clear objects allocated to BANK1
   777                           psect cinit,class=CODE,delta=2
   778  0AE7  30A0               	movlw	low(__pbssBANK1)
   779  0AE8  0084               	movwf	fsr
   780  0AE9  30DF               	movlw	low((__pbssBANK1)+03Fh)
   781  0AEA  120A  158A  20CB   	fcall	clear_ram
              120A  158A         
   782                           ; Clear objects allocated to BANK3
   783                           psect cinit,class=CODE,delta=2
   784  0AEF  1783               	bsf	status, 7	;select IRP bank2
   785  0AF0  3090               	movlw	low(__pbssBANK3)
   786  0AF1  0084               	movwf	fsr
   787  0AF2  30A0               	movlw	low((__pbssBANK3)+010h)
   788  0AF3  120A  158A  20CB   	fcall	clear_ram
              120A  158A         
   789                           global btemp
   790                           psect inittext,class=CODE,delta=2
   791                           global init_fetch,btemp
   792                           ;	Called with low address in FSR and high address in W
   793  08FE                     init_fetch:
   794  08FE  087E               	movf btemp,w
   795  08FF  008A               	movwf pclath
   796  0900  087F               	movf btemp+1,w
   797  0901  0082               	movwf pc
   798                           global init_ram
   799                           ;Called with:
   800                           ;	high address of idata address in btemp 
   801                           ;	low address of idata address in btemp+1 
   802                           ;	low address of data in FSR
   803                           ;	high address + 1 of data in btemp-1
   804  0902                     init_ram:
   805  0902  120A  158A  20FE   	fcall init_fetch
              120A  158A         
   806  0907  0080               	movwf indf,f
   807  0908  0A84               	incf fsr,f
   808  0909  0804               	movf fsr,w
   809  090A  067D               	xorwf btemp-1,w
   810  090B  1903               	btfsc status,2
   811  090C  3400               	retlw 0
   812  090D  0AFF               	incf btemp+1,f
   813  090E  1903               	btfsc status,2
   814  090F  0AFE               	incf btemp,f
   815  0910  2902               	goto init_ram
   816                           ; Initialize objects allocated to BANK1
   817                           psect cinit,class=CODE,delta=2
   818                           global init_ram, __pidataBANK1
   819  0AF8  1383               	bcf	status, 7	;select IRP bank0
   820  0AF9  30EC               	movlw low(__pdataBANK1+13)
   821  0AFA  00FD               	movwf btemp-1,f
   822  0AFB  3008               	movlw high(__pidataBANK1)
   823  0AFC  00FE               	movwf btemp,f
   824  0AFD  30DE               	movlw low(__pidataBANK1)
   825  0AFE  00FF               	movwf btemp+1,f
   826  0AFF  30DF               	movlw low(__pdataBANK1)
   827  0B00  0084               	movwf fsr,f
   828  0B01  120A  158A  2102   	fcall init_ram
              120A  158A         
   829                           psect cinit,class=CODE,delta=2
   830                           global end_of_initialization
   831                           
   832                           ;End of C runtime variable initialization code
   833                           
   834  0B06                     end_of_initialization:
   835  0B06  0183               clrf status
   836  0B07  120A  118A  2B90   ljmp _main	;jump to C main() function
   837                           psect	cstackCOMMON,class=COMMON,space=1
   838                           global __pcstackCOMMON
   839  0072                     __pcstackCOMMON:
   840                           	global	?_ser_init
   841  0072                     ?_ser_init:	; 0 bytes @ 0x0
   842                           	global	?_robo_init
   843  0072                     ?_robo_init:	; 0 bytes @ 0x0
   844                           	global	?_UpdateDisplay
   845  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   846                           	global	?_ser_putch
   847  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   848                           	global	?_readAvgDistance
   849  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   850                           	global	?_robot_read
   851  0072                     ?_robot_read:	; 0 bytes @ 0x0
   852                           	global	?_ADCconvert
   853  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   854                           	global	?_init_adc
   855  0072                     ?_init_adc:	; 0 bytes @ 0x0
   856                           	global	?_lcd_write_control
   857  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   858                           	global	?_lcd_write_data
   859  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   860                           	global	?_lcd_set_cursor
   861  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   862                           	global	?_lcd_init
   863  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   864                           	global	?_isr1
   865  0072                     ?_isr1:	; 0 bytes @ 0x0
   866                           	global	?_init
   867  0072                     ?_init:	; 0 bytes @ 0x0
   868                           	global	?_calibrateIR
   869  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   870                           	global	?_ChargeMode
   871  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   872                           	global	?_main
   873  0072                     ?_main:	; 0 bytes @ 0x0
   874                           	global	?_Debounce
   875  0072                     ?_Debounce:	; 0 bytes @ 0x0
   876                           	global	??_Debounce
   877  0072                     ??_Debounce:	; 0 bytes @ 0x0
   878                           	global	?_ser_isrx
   879  0072                     ?_ser_isrx:	; 1 bit 
   880                           	global	?_ReadButtons
   881  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   882                           	global	?_Menu
   883  0072                     ?_Menu:	; 1 bytes @ 0x0
   884                           	global	?_ser_getch
   885  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   886                           	global	?_adc_read_channel
   887  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   888                           	global	?_spi_transfer
   889  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   890                           	global	?i1___lwmod
   891  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   892                           	global	i1___lwmod@divisor
   893  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   894  0072                     	ds	1
   895                           	global	??_ReadButtons
   896  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   897  0073                     	ds	1
   898                           	global	i1___lwmod@dividend
   899  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   900  0074                     	ds	2
   901                           	global	??i1___lwmod
   902  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   903  0076                     	ds	1
   904                           	global	i1___lwmod@counter
   905  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   906  0077                     	ds	1
   907                           	global	??_isr1
   908  0078                     ??_isr1:	; 0 bytes @ 0x6
   909  0078                     	ds	5
   910                           psect	cstackBANK0,class=BANK0,space=1
   911                           global __pcstackBANK0
   912  0020                     __pcstackBANK0:
   913                           	global	??_ser_init
   914  0020                     ??_ser_init:	; 0 bytes @ 0x0
   915                           	global	??_ser_putch
   916  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   917                           	global	??_Menu
   918  0020                     ??_Menu:	; 0 bytes @ 0x0
   919                           	global	??_ser_getch
   920  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   921                           	global	??_init_adc
   922  0020                     ??_init_adc:	; 0 bytes @ 0x0
   923                           	global	??_lcd_write_control
   924  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   925                           	global	??_lcd_write_data
   926  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   927                           	global	??_spi_transfer
   928  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   929                           	global	??_ser_isrx
   930  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   931                           	global	?_adc_read
   932  0020                     ?_adc_read:	; 2 bytes @ 0x0
   933                           	global	?___wmul
   934  0020                     ?___wmul:	; 2 bytes @ 0x0
   935                           	global	?___awmod
   936  0020                     ?___awmod:	; 2 bytes @ 0x0
   937                           	global	Menu@BTN_input
   938  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   939                           	global	___wmul@multiplier
   940  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   941                           	global	___awmod@divisor
   942  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   943  0020                     	ds	1
   944                           	global	spi_transfer@temp
   945  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   946                           	global	ser_getch@c
   947  0021                     ser_getch@c:	; 1 bytes @ 0x1
   948                           	global	ser_putch@c
   949  0021                     ser_putch@c:	; 1 bytes @ 0x1
   950  0021                     	ds	1
   951                           	global	??_adc_read
   952  0022                     ??_adc_read:	; 0 bytes @ 0x2
   953                           	global	??_robo_init
   954  0022                     ??_robo_init:	; 0 bytes @ 0x2
   955                           	global	??_robot_read
   956  0022                     ??_robot_read:	; 0 bytes @ 0x2
   957                           	global	?_robotTurn
   958  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   959                           	global	lcd_write_control@databyte
   960  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   961                           	global	lcd_write_data@databyte
   962  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   963                           	global	spi_transfer@data
   964  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   965                           	global	robotTurn@distance
   966  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   967                           	global	___wmul@multiplicand
   968  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   969                           	global	___awmod@dividend
   970  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   971  0022                     	ds	1
   972                           	global	?_rotate
   973  0023                     ?_rotate:	; 0 bytes @ 0x3
   974                           	global	??_lcd_set_cursor
   975  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   976                           	global	??_lcd_init
   977  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   978                           	global	??_init
   979  0023                     ??_init:	; 0 bytes @ 0x3
   980                           	global	lcd_set_cursor@address
   981  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   982                           	global	rotate@numsteps
   983  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   984  0023                     	ds	1
   985                           	global	??_robotTurn
   986  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   987                           	global	??___wmul
   988  0024                     ??___wmul:	; 0 bytes @ 0x4
   989                           	global	??___awmod
   990  0024                     ??___awmod:	; 0 bytes @ 0x4
   991                           	global	adc_read@adc_value
   992  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   993                           	global	___wmul@product
   994  0024                     ___wmul@product:	; 2 bytes @ 0x4
   995  0024                     	ds	1
   996                           	global	rotate@direction
   997  0025                     rotate@direction:	; 1 bytes @ 0x5
   998                           	global	___awmod@counter
   999  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1000  0025                     	ds	1
  1001                           	global	??_rotate
  1002  0026                     ??_rotate:	; 0 bytes @ 0x6
  1003                           	global	??_adc_read_channel
  1004  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1005                           	global	?___lwdiv
  1006  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1007                           	global	___awmod@sign
  1008  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1009                           	global	___lwdiv@divisor
  1010  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1011  0026                     	ds	1
  1012                           	global	?_lcd_write_string
  1013  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1014                           	global	adc_read_channel@channel
  1015  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1016                           	global	lcd_write_string@s
  1017  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1018  0027                     	ds	1
  1019                           	global	?_readDistance
  1020  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1021                           	global	rotate@i
  1022  0028                     rotate@i:	; 2 bytes @ 0x8
  1023                           	global	___lwdiv@dividend
  1024  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1025  0028                     	ds	1
  1026                           	global	??_lcd_write_string
  1027  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1028  0029                     	ds	1
  1029                           	global	??_readDistance
  1030  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1031                           	global	??___lwdiv
  1032  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1033  002A                     	ds	1
  1034                           	global	___lwdiv@quotient
  1035  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1036  002B                     	ds	1
  1037                           	global	readDistance@fullval
  1038  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1039  002C                     	ds	1
  1040                           	global	___lwdiv@counter
  1041  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1042  002D                     	ds	1
  1043                           	global	??_ADCconvert
  1044  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1045                           	global	?___lwmod
  1046  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1047                           	global	___lwmod@divisor
  1048  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1049  002E                     	ds	2
  1050                           	global	??_readAvgDistance
  1051  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1052                           	global	readAvgDistance@fullval
  1053  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1054                           	global	___lwmod@dividend
  1055  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1056  0030                     	ds	2
  1057                           	global	??___lwmod
  1058  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1059                           	global	readAvgDistance@i
  1060  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1061  0032                     	ds	1
  1062                           	global	___lwmod@counter
  1063  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1064  0033                     	ds	1
  1065                           	global	?_sprintf
  1066  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1067                           	global	sprintf@f
  1068  0034                     sprintf@f:	; 1 bytes @ 0x14
  1069  0034                     	ds	5
  1070                           	global	??_sprintf
  1071  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1072  0039                     	ds	3
  1073                           	global	sprintf@ap
  1074  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1075  003C                     	ds	1
  1076                           	global	sprintf@flag
  1077  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1078  003D                     	ds	1
  1079                           	global	sprintf@prec
  1080  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1081  003E                     	ds	1
  1082                           	global	sprintf@_val
  1083  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1084  003F                     	ds	4
  1085                           	global	sprintf@sp
  1086  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1087  0043                     	ds	1
  1088                           	global	sprintf@c
  1089  0044                     sprintf@c:	; 1 bytes @ 0x24
  1090  0044                     	ds	1
  1091                           	global	??_UpdateDisplay
  1092  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1093  0045                     	ds	4
  1094                           	global	UpdateDisplay@adcOutput
  1095  0049                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x29
  1096  0049                     	ds	16
  1097                           	global	?_robotMove
  1098  0059                     ?_robotMove:	; 0 bytes @ 0x39
  1099                           	global	??_calibrateIR
  1100  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1101                           	global	??_ChargeMode
  1102  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1103                           	global	?_scan360
  1104  0059                     ?_scan360:	; 2 bytes @ 0x39
  1105                           	global	robotMove@distance
  1106  0059                     robotMove@distance:	; 2 bytes @ 0x39
  1107  0059                     	ds	2
  1108                           	global	??_robotMove
  1109  005B                     ??_robotMove:	; 0 bytes @ 0x3B
  1110                           	global	??_scan360
  1111  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1112                           	global	scan360@lowestVal
  1113  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1114  005B                     	ds	2
  1115                           	global	scan360@lowestSteps
  1116  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1117  005D                     	ds	2
  1118                           	global	scan360@steps
  1119  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1120  005F                     	ds	2
  1121                           	global	??_main
  1122  0061                     ??_main:	; 0 bytes @ 0x41
  1123  0061                     	ds	3
  1124                           	global	main@shortwall
  1125  0064                     main@shortwall:	; 2 bytes @ 0x44
  1126  0064                     	ds	2
  1127                           	global	main@choice
  1128  0066                     main@choice:	; 1 bytes @ 0x46
  1129  0066                     	ds	1
  1130 ;;Data sizes: Strings 149, constant 10, data 13, bss 89, persistent 0 stack 0
  1131 ;;Auto spaces:   Size  Autos    Used
  1132 ;; COMMON          14     11      14
  1133 ;; BANK0           80     71      80
  1134 ;; BANK1           80      0      76
  1135 ;; BANK3           96      0      16
  1136 ;; BANK2           96      0       0
  1137                           
  1138 ;;
  1139 ;; Pointer list with targets:
  1140                           
  1141 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1142 ;;
  1143 ;; ?___awmod	int  size(1) Largest target is 0
  1144 ;;
  1145 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1146 ;;
  1147 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1148 ;;
  1149 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1150 ;;
  1151 ;; ?_scan360	int  size(1) Largest target is 0
  1152 ;;
  1153 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1154 ;;
  1155 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1156 ;;
  1157 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1158 ;;		 -> STR_13(CODE[15]), 
  1159 ;;
  1160 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1161 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1162 ;;
  1163 ;; ?_sprintf	int  size(1) Largest target is 0
  1164 ;;
  1165 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1166 ;;		 -> ?_sprintf(BANK0[2]), 
  1167 ;;
  1168 ;; S8143$_cp	PTR const unsigned char  size(1) Largest target is 0
  1169 ;;
  1170 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1171 ;;
  1172 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1173 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1174 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1175 ;;
  1176 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1177 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1178 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1179 ;;
  1180 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1181 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1182 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), 
  1183 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1184 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1185 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1186 ;;
  1187                           
  1188                           
  1189 ;;
  1190 ;; Critical Paths under _main in COMMON
  1191 ;;
  1192 ;;   None.
  1193 ;;
  1194 ;; Critical Paths under _isr1 in COMMON
  1195 ;;
  1196 ;;   _isr1->i1___lwmod
  1197 ;;   _ReadButtons->_Debounce
  1198 ;;
  1199 ;; Critical Paths under _main in BANK0
  1200 ;;
  1201 ;;   _main->_scan360
  1202 ;;   _robotMove->_UpdateDisplay
  1203 ;;   _scan360->_UpdateDisplay
  1204 ;;   _ChargeMode->_UpdateDisplay
  1205 ;;   _calibrateIR->_UpdateDisplay
  1206 ;;   _readAvgDistance->_ADCconvert
  1207 ;;   _UpdateDisplay->_sprintf
  1208 ;;   _readDistance->_adc_read_channel
  1209 ;;   _robot_read->_ser_putch
  1210 ;;   _robot_read->_ser_getch
  1211 ;;   _lcd_init->_lcd_write_control
  1212 ;;   _lcd_write_string->___awmod
  1213 ;;   _lcd_set_cursor->_lcd_write_control
  1214 ;;   _sprintf->___lwmod
  1215 ;;   _ADCconvert->___lwdiv
  1216 ;;   _robotTurn->_ser_putch
  1217 ;;   _rotate->_spi_transfer
  1218 ;;   _robo_init->_ser_putch
  1219 ;;   _adc_read_channel->_adc_read
  1220 ;;   ___lwmod->___lwdiv
  1221 ;;   ___lwdiv->___wmul
  1222 ;;
  1223 ;; Critical Paths under _isr1 in BANK0
  1224 ;;
  1225 ;;   None.
  1226 ;;
  1227 ;; Critical Paths under _main in BANK1
  1228 ;;
  1229 ;;   None.
  1230 ;;
  1231 ;; Critical Paths under _isr1 in BANK1
  1232 ;;
  1233 ;;   None.
  1234 ;;
  1235 ;; Critical Paths under _main in BANK3
  1236 ;;
  1237 ;;   None.
  1238 ;;
  1239 ;; Critical Paths under _isr1 in BANK3
  1240 ;;
  1241 ;;   None.
  1242 ;;
  1243 ;; Critical Paths under _main in BANK2
  1244 ;;
  1245 ;;   None.
  1246 ;;
  1247 ;; Critical Paths under _isr1 in BANK2
  1248 ;;
  1249 ;;   None.
  1250                           
  1251 ;;
  1252 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1253 ;;
  1254                           
  1255 ;;
  1256 ;;Call Graph Tables:
  1257 ;;
  1258 ;; ---------------------------------------------------------------------------------
  1259 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (0) _main                                                 6     6      0    8338
  1262 ;;                                             65 BANK0      6     6      0
  1263 ;;                               _init
  1264 ;;                         _robot_read
  1265 ;;                    _readAvgDistance
  1266 ;;                      _UpdateDisplay
  1267 ;;                               _Menu
  1268 ;;                        _calibrateIR
  1269 ;;                            _scan360
  1270 ;;                             _rotate
  1271 ;;                          _robotMove
  1272 ;;                          _robotTurn
  1273 ;;                         _ChargeMode
  1274 ;; ---------------------------------------------------------------------------------
  1275 ;; (1) _robotMove                                            4     2      2    1394
  1276 ;;                                             57 BANK0      4     2      2
  1277 ;;                          _ser_putch
  1278 ;;                         _robot_read
  1279 ;;                      _UpdateDisplay
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; (1) _scan360                                              8     6      2    2074
  1282 ;;                                             57 BANK0      8     6      2
  1283 ;;                    _readAvgDistance
  1284 ;;                             _rotate
  1285 ;;                      _UpdateDisplay
  1286 ;; ---------------------------------------------------------------------------------
  1287 ;; (1) _ChargeMode                                           1     1      0    1305
  1288 ;;                                             57 BANK0      1     1      0
  1289 ;;                          _ser_putch
  1290 ;;                      _UpdateDisplay
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (1) _calibrateIR                                          0     0      0    1381
  1293 ;;                             _rotate
  1294 ;;                      _UpdateDisplay
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; (2) _readAvgDistance                                      4     4      0     555
  1297 ;;                                             16 BANK0      4     4      0
  1298 ;;                       _readDistance
  1299 ;;                            ___lwdiv
  1300 ;;                         _ADCconvert
  1301 ;; ---------------------------------------------------------------------------------
  1302 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1303 ;;                                             37 BANK0     20    20      0
  1304 ;;                  _lcd_write_control
  1305 ;;                            _sprintf
  1306 ;;                     _lcd_set_cursor
  1307 ;;                   _lcd_write_string
  1308 ;;                            ___awmod
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (1) _init                                                 1     1      0      44
  1311 ;;                                              3 BANK0      1     1      0
  1312 ;;                           _ser_init
  1313 ;;                           _init_adc
  1314 ;;                           _lcd_init
  1315 ;;                          _robo_init
  1316 ;; ---------------------------------------------------------------------------------
  1317 ;; (3) _readDistance                                         6     4      2      69
  1318 ;;                                              8 BANK0      6     4      2
  1319 ;;                   _adc_read_channel
  1320 ;; ---------------------------------------------------------------------------------
  1321 ;; (2) _robot_read                                           2     2      0      45
  1322 ;;                                              2 BANK0      2     2      0
  1323 ;;                          _ser_putch
  1324 ;;                          _ser_getch
  1325 ;; ---------------------------------------------------------------------------------
  1326 ;; (2) _lcd_init                                             0     0      0      22
  1327 ;;                  _lcd_write_control
  1328 ;; ---------------------------------------------------------------------------------
  1329 ;; (3) _lcd_write_string                                     2     0      2      67
  1330 ;;                                              7 BANK0      2     0      2
  1331 ;;                     _lcd_write_data
  1332 ;;                            ___awmod (ARG)
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1335 ;;                                              3 BANK0      1     1      0
  1336 ;;                  _lcd_write_control
  1337 ;; ---------------------------------------------------------------------------------
  1338 ;; (3) _ser_getch                                            2     2      0      23
  1339 ;;                                              0 BANK0      2     2      0
  1340 ;;                           _ser_isrx
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (3) _sprintf                                             17    12      5     798
  1343 ;;                                             20 BANK0     17    12      5
  1344 ;;                            ___lwdiv
  1345 ;;                            ___lwmod
  1346 ;; ---------------------------------------------------------------------------------
  1347 ;; (3) _ADCconvert                                           2     2      0     254
  1348 ;;                                             14 BANK0      2     2      0
  1349 ;;                             ___wmul
  1350 ;;                            ___lwdiv
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (1) _robotTurn                                            3     1      2      88
  1353 ;;                                              2 BANK0      3     1      2
  1354 ;;                          _ser_putch
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; (1) _rotate                                               7     4      3      98
  1357 ;;                                              3 BANK0      7     4      3
  1358 ;;                       _spi_transfer
  1359 ;; ---------------------------------------------------------------------------------
  1360 ;; (2) _robo_init                                            0     0      0      22
  1361 ;;                          _ser_putch
  1362 ;; ---------------------------------------------------------------------------------
  1363 ;; (4) _lcd_write_data                                       3     3      0      22
  1364 ;;                                              0 BANK0      3     3      0
  1365 ;; ---------------------------------------------------------------------------------
  1366 ;; (4) _lcd_write_control                                    3     3      0      22
  1367 ;;                                              0 BANK0      3     3      0
  1368 ;; ---------------------------------------------------------------------------------
  1369 ;; (2) _init_adc                                             1     1      0       0
  1370 ;;                                              0 BANK0      1     1      0
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (4) _adc_read_channel                                     2     2      0      46
  1373 ;;                                              6 BANK0      2     2      0
  1374 ;;                           _adc_read
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (3) ___awmod                                              7     3      4     296
  1377 ;;                                              0 BANK0      7     3      4
  1378 ;; ---------------------------------------------------------------------------------
  1379 ;; (4) ___lwmod                                              6     2      4     159
  1380 ;;                                             14 BANK0      6     2      4
  1381 ;;                            ___lwdiv (ARG)
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (4) ___lwdiv                                              8     4      4     162
  1384 ;;                                              6 BANK0      8     4      4
  1385 ;;                             ___wmul (ARG)
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (4) ___wmul                                               6     2      4      92
  1388 ;;                                              0 BANK0      6     2      4
  1389 ;; ---------------------------------------------------------------------------------
  1390 ;; (4) _ser_isrx                                             0     0      0       0
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (2) _spi_transfer                                         3     3      0      30
  1393 ;;                                              0 BANK0      3     3      0
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; (1) _Menu                                                 1     1      0      22
  1396 ;;                                              0 BANK0      1     1      0
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (2) _ser_putch                                            2     2      0      22
  1399 ;;                                              0 BANK0      2     2      0
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (2) _ser_init                                             1     1      0       0
  1402 ;;                                              0 BANK0      1     1      0
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (5) _adc_read                                             6     4      2      24
  1405 ;;                                              0 BANK0      6     4      2
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; Estimated maximum stack depth 5
  1408 ;; ---------------------------------------------------------------------------------
  1409 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1410 ;; ---------------------------------------------------------------------------------
  1411 ;; (6) _isr1                                                 5     5      0     521
  1412 ;;                                              6 COMMON     5     5      0
  1413 ;;                          i1___lwmod
  1414 ;;                        _ReadButtons
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (7) _ReadButtons                                          0     0      0       0
  1417 ;;                           _Debounce
  1418 ;; ---------------------------------------------------------------------------------
  1419 ;; (7) i1___lwmod                                            6     2      4     521
  1420 ;;                                              0 COMMON     6     2      4
  1421 ;; ---------------------------------------------------------------------------------
  1422 ;; (8) _Debounce                                             1     1      0       0
  1423 ;;                                              0 COMMON     1     1      0
  1424 ;; ---------------------------------------------------------------------------------
  1425 ;; Estimated maximum stack depth 8
  1426 ;; ---------------------------------------------------------------------------------
  1427                           
  1428 ;; Call Graph Graphs:
  1429                           
  1430 ;; _main (ROOT)
  1431 ;;   _init
  1432 ;;     _ser_init
  1433 ;;     _init_adc
  1434 ;;     _lcd_init
  1435 ;;       _lcd_write_control
  1436 ;;     _robo_init
  1437 ;;       _ser_putch
  1438 ;;   _robot_read
  1439 ;;     _ser_putch
  1440 ;;     _ser_getch
  1441 ;;       _ser_isrx
  1442 ;;   _readAvgDistance
  1443 ;;     _readDistance
  1444 ;;       _adc_read_channel
  1445 ;;         _adc_read
  1446 ;;     ___lwdiv
  1447 ;;       ___wmul (ARG)
  1448 ;;     _ADCconvert
  1449 ;;       ___wmul
  1450 ;;       ___lwdiv
  1451 ;;         ___wmul (ARG)
  1452 ;;   _UpdateDisplay
  1453 ;;     _lcd_write_control
  1454 ;;     _sprintf
  1455 ;;       ___lwdiv
  1456 ;;         ___wmul (ARG)
  1457 ;;       ___lwmod
  1458 ;;         ___lwdiv (ARG)
  1459 ;;           ___wmul (ARG)
  1460 ;;     _lcd_set_cursor
  1461 ;;       _lcd_write_control
  1462 ;;     _lcd_write_string
  1463 ;;       _lcd_write_data
  1464 ;;       ___awmod (ARG)
  1465 ;;     ___awmod
  1466 ;;   _Menu
  1467 ;;   _calibrateIR
  1468 ;;     _rotate
  1469 ;;       _spi_transfer
  1470 ;;     _UpdateDisplay
  1471 ;;       _lcd_write_control
  1472 ;;       _sprintf
  1473 ;;         ___lwdiv
  1474 ;;           ___wmul (ARG)
  1475 ;;         ___lwmod
  1476 ;;           ___lwdiv (ARG)
  1477 ;;             ___wmul (ARG)
  1478 ;;       _lcd_set_cursor
  1479 ;;         _lcd_write_control
  1480 ;;       _lcd_write_string
  1481 ;;         _lcd_write_data
  1482 ;;         ___awmod (ARG)
  1483 ;;       ___awmod
  1484 ;;   _scan360
  1485 ;;     _readAvgDistance
  1486 ;;       _readDistance
  1487 ;;         _adc_read_channel
  1488 ;;           _adc_read
  1489 ;;       ___lwdiv
  1490 ;;         ___wmul (ARG)
  1491 ;;       _ADCconvert
  1492 ;;         ___wmul
  1493 ;;         ___lwdiv
  1494 ;;           ___wmul (ARG)
  1495 ;;     _rotate
  1496 ;;       _spi_transfer
  1497 ;;     _UpdateDisplay
  1498 ;;       _lcd_write_control
  1499 ;;       _sprintf
  1500 ;;         ___lwdiv
  1501 ;;           ___wmul (ARG)
  1502 ;;         ___lwmod
  1503 ;;           ___lwdiv (ARG)
  1504 ;;             ___wmul (ARG)
  1505 ;;       _lcd_set_cursor
  1506 ;;         _lcd_write_control
  1507 ;;       _lcd_write_string
  1508 ;;         _lcd_write_data
  1509 ;;         ___awmod (ARG)
  1510 ;;       ___awmod
  1511 ;;   _rotate
  1512 ;;     _spi_transfer
  1513 ;;   _robotMove
  1514 ;;     _ser_putch
  1515 ;;     _robot_read
  1516 ;;       _ser_putch
  1517 ;;       _ser_getch
  1518 ;;         _ser_isrx
  1519 ;;     _UpdateDisplay
  1520 ;;       _lcd_write_control
  1521 ;;       _sprintf
  1522 ;;         ___lwdiv
  1523 ;;           ___wmul (ARG)
  1524 ;;         ___lwmod
  1525 ;;           ___lwdiv (ARG)
  1526 ;;             ___wmul (ARG)
  1527 ;;       _lcd_set_cursor
  1528 ;;         _lcd_write_control
  1529 ;;       _lcd_write_string
  1530 ;;         _lcd_write_data
  1531 ;;         ___awmod (ARG)
  1532 ;;       ___awmod
  1533 ;;   _robotTurn
  1534 ;;     _ser_putch
  1535 ;;   _ChargeMode
  1536 ;;     _ser_putch
  1537 ;;     _UpdateDisplay
  1538 ;;       _lcd_write_control
  1539 ;;       _sprintf
  1540 ;;         ___lwdiv
  1541 ;;           ___wmul (ARG)
  1542 ;;         ___lwmod
  1543 ;;           ___lwdiv (ARG)
  1544 ;;             ___wmul (ARG)
  1545 ;;       _lcd_set_cursor
  1546 ;;         _lcd_write_control
  1547 ;;       _lcd_write_string
  1548 ;;         _lcd_write_data
  1549 ;;         ___awmod (ARG)
  1550 ;;       ___awmod
  1551 ;;
  1552 ;; _isr1 (ROOT)
  1553 ;;   i1___lwmod
  1554 ;;   _ReadButtons
  1555 ;;     _Debounce
  1556 ;;
  1557                           
  1558 ;; Address spaces:
  1559                           
  1560 ;;Name               Size   Autos  Total    Cost      Usage
  1561 ;;BANK3               60      0      10       9       16.7%
  1562 ;;BITBANK3            60      0       0       8        0.0%
  1563 ;;SFR3                 0      0       0       4        0.0%
  1564 ;;BITSFR3              0      0       0       4        0.0%
  1565 ;;BANK2               60      0       0      11        0.0%
  1566 ;;BITBANK2            60      0       0      10        0.0%
  1567 ;;SFR2                 0      0       0       5        0.0%
  1568 ;;BITSFR2              0      0       0       5        0.0%
  1569 ;;SFR1                 0      0       0       2        0.0%
  1570 ;;BITSFR1              0      0       0       2        0.0%
  1571 ;;BANK1               50      0      4C       7       95.0%
  1572 ;;BITBANK1            50      0       0       6        0.0%
  1573 ;;CODE                 0      0       0       0        0.0%
  1574 ;;DATA                 0      0      C5      12        0.0%
  1575 ;;ABS                  0      0      BA       3        0.0%
  1576 ;;NULL                 0      0       0       0        0.0%
  1577 ;;STACK                0      0       B       2        0.0%
  1578 ;;BANK0               50     47      50       5      100.0%
  1579 ;;BITBANK0            50      0       0       4        0.0%
  1580 ;;SFR0                 0      0       0       1        0.0%
  1581 ;;BITSFR0              0      0       0       1        0.0%
  1582 ;;COMMON               E      B       E       1      100.0%
  1583 ;;BITCOMMON            E      0       2       0       14.3%
  1584 ;;EEDATA             100      0       0       0        0.0%
  1585                           
  1586                           	global	_main
  1587                           psect	maintext,global,class=CODE,delta=2
  1588                           global __pmaintext
  1589  0390                     __pmaintext:
  1590                           
  1591 ;; *************** function _main *****************
  1592 ;; Defined at:
  1593 ;;		line 297 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  shortwall       2   68[BANK0 ] int 
  1598 ;;  choice          1   70[BANK0 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;		None               void
  1601 ;; Registers used:
  1602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 17F/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       3       0       0       0
  1610 ;;      Temps:          0       3       0       0       0
  1611 ;;      Totals:         0       6       0       0       0
  1612 ;;Total ram usage:        6 bytes
  1613 ;; Hardware stack levels required when called:    8
  1614 ;; This function calls:
  1615 ;;		_init
  1616 ;;		_robot_read
  1617 ;;		_readAvgDistance
  1618 ;;		_UpdateDisplay
  1619 ;;		_Menu
  1620 ;;		_calibrateIR
  1621 ;;		_scan360
  1622 ;;		_rotate
  1623 ;;		_robotMove
  1624 ;;		_robotTurn
  1625 ;;		_ChargeMode
  1626 ;; This function is called by:
  1627 ;;		Startup code after reset
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           psect	maintext
  1631                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1632                           	line	297
  1633                           	global	__size_of_main
  1634  0105                     	__size_of_main	equ	__end_of_main-_main
  1635                           	
  1636  0390                     _main:	
  1637                           	opt	stack 0
  1638                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1639                           	line	298
  1640                           	
  1641  0390                     l11079:	
  1642                           ;Main.c: 298: unsigned char choice = 255;
  1643  0390  30FF               	movlw	(0FFh)
  1644  0391  1283               	bcf	status, 5	;RP0=0, select bank0
  1645  0392  1303               	bcf	status, 6	;RP1=0, select bank0
  1646  0393  00E1               	movwf	(??_main+0)+0
  1647  0394  0861               	movf	(??_main+0)+0,w
  1648  0395  00E6               	movwf	(main@choice)
  1649                           	line	299
  1650                           	
  1651  0396                     l11081:	
  1652                           ;Main.c: 299: int shortwall = 0;
  1653  0396  01E4               	clrf	(main@shortwall)
  1654  0397  01E5               	clrf	(main@shortwall+1)
  1655                           	line	303
  1656                           	
  1657  0398                     l11083:	
  1658                           ;Main.c: 303: init();
  1659  0398  120A  158A  22AC   	fcall	_init
              120A  118A         
  1660  039D  2B9E               	goto	l11085
  1661                           	line	308
  1662                           ;Main.c: 308: while(1)
  1663                           	
  1664  039E                     l2259:	
  1665                           	line	312
  1666                           	
  1667  039E                     l11085:	
  1668                           ;Main.c: 309: {
  1669                           ;Main.c: 312: if (RTC_FLAG_250MS == 1)
  1670  039E  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1671  039F  2BA1               	goto	u4611
  1672  03A0  2BA2               	goto	u4610
  1673  03A1                     u4611:
  1674  03A1  2BE4               	goto	l11117
  1675  03A2                     u4610:
  1676                           	line	314
  1677                           	
  1678  03A2                     l11087:	
  1679                           ;Main.c: 313: {
  1680                           ;Main.c: 314: RTC_FLAG_250MS = 0;
  1681  03A2  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1682                           	line	315
  1683                           	
  1684  03A3                     l11089:	
  1685                           ;Main.c: 315: robot_read();
  1686  03A3  120A  118A  27AF   	fcall	_robot_read
              120A  118A         
  1687                           	line	316
  1688                           	
  1689  03A8                     l11091:	
  1690                           ;Main.c: 316: readAvgDistance();
  1691  03A8  120A  158A  252C   	fcall	_readAvgDistance
              120A  118A         
  1692                           	line	317
  1693                           	
  1694  03AD                     l11093:	
  1695                           ;Main.c: 317: UpdateDisplay();
  1696  03AD  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1697  03B2  2BE4               	goto	l11117
  1698                           	line	318
  1699                           	
  1700  03B3                     l2260:	
  1701                           	line	320
  1702                           ;Main.c: 318: }
  1703                           ;Main.c: 320: switch (buttonPressed)
  1704  03B3  2BE4               	goto	l11117
  1705                           	line	322
  1706                           ;Main.c: 321: {
  1707                           ;Main.c: 322: case 1:
  1708                           	
  1709  03B4                     l2262:	
  1710                           	line	323
  1711                           	
  1712  03B4                     l11095:	
  1713                           ;Main.c: 323: Menu(1);
  1714  03B4  3001               	movlw	(01h)
  1715  03B5  120A  158A  2445   	fcall	_Menu
              120A  118A         
  1716                           	line	325
  1717                           	
  1718  03BA                     l11097:	
  1719                           ;Main.c: 325: buttonPressed = 0;
  1720  03BA  01FD               	clrf	(_buttonPressed)	;volatile
  1721                           	line	327
  1722                           ;Main.c: 327: break;
  1723  03BB  2C74               	goto	l11141
  1724                           	line	328
  1725                           ;Main.c: 328: case 2:
  1726                           	
  1727  03BC                     l2264:	
  1728                           	line	329
  1729                           	
  1730  03BC                     l11099:	
  1731                           ;Main.c: 329: Menu(2);
  1732  03BC  3002               	movlw	(02h)
  1733  03BD  120A  158A  2445   	fcall	_Menu
              120A  118A         
  1734                           	line	331
  1735                           	
  1736  03C2                     l11101:	
  1737                           ;Main.c: 331: buttonPressed = 0;
  1738  03C2  01FD               	clrf	(_buttonPressed)	;volatile
  1739                           	line	333
  1740                           ;Main.c: 333: break;
  1741  03C3  2C74               	goto	l11141
  1742                           	line	334
  1743                           ;Main.c: 334: case 3:
  1744                           	
  1745  03C4                     l2265:	
  1746                           	line	335
  1747                           	
  1748  03C4                     l11103:	
  1749                           ;Main.c: 335: Menu(3);
  1750  03C4  3003               	movlw	(03h)
  1751  03C5  120A  158A  2445   	fcall	_Menu
              120A  118A         
  1752                           	line	337
  1753                           	
  1754  03CA                     l11105:	
  1755                           ;Main.c: 337: buttonPressed = 0;
  1756  03CA  01FD               	clrf	(_buttonPressed)	;volatile
  1757                           	line	339
  1758                           ;Main.c: 339: break;
  1759  03CB  2C74               	goto	l11141
  1760                           	line	340
  1761                           ;Main.c: 340: case 4:
  1762                           	
  1763  03CC                     l2266:	
  1764                           	line	341
  1765                           	
  1766  03CC                     l11107:	
  1767                           ;Main.c: 341: Menu(4);
  1768  03CC  3004               	movlw	(04h)
  1769  03CD  120A  158A  2445   	fcall	_Menu
              120A  118A         
  1770                           	line	343
  1771                           	
  1772  03D2                     l11109:	
  1773                           ;Main.c: 343: buttonPressed = 0;
  1774  03D2  01FD               	clrf	(_buttonPressed)	;volatile
  1775                           	line	345
  1776                           ;Main.c: 345: break;
  1777  03D3  2C74               	goto	l11141
  1778                           	line	346
  1779                           ;Main.c: 346: case 5:
  1780                           	
  1781  03D4                     l2267:	
  1782                           	line	347
  1783                           	
  1784  03D4                     l11111:	
  1785                           ;Main.c: 347: choice = Menu(5);
  1786  03D4  3005               	movlw	(05h)
  1787  03D5  120A  158A  2445   	fcall	_Menu
              120A  118A         
  1788  03DA  1283               	bcf	status, 5	;RP0=0, select bank0
  1789  03DB  1303               	bcf	status, 6	;RP1=0, select bank0
  1790  03DC  00E1               	movwf	(??_main+0)+0
  1791  03DD  0861               	movf	(??_main+0)+0,w
  1792  03DE  00E6               	movwf	(main@choice)
  1793                           	line	349
  1794                           	
  1795  03DF                     l11113:	
  1796                           ;Main.c: 349: buttonPressed = 0;
  1797  03DF  01FD               	clrf	(_buttonPressed)	;volatile
  1798                           	line	351
  1799                           ;Main.c: 351: break;
  1800  03E0  2C74               	goto	l11141
  1801                           	line	352
  1802                           ;Main.c: 352: default:
  1803                           	
  1804  03E1                     l2268:	
  1805                           	line	353
  1806                           ;Main.c: 353: buttonPressed = 0;
  1807  03E1  01FD               	clrf	(_buttonPressed)	;volatile
  1808                           	line	354
  1809                           ;Main.c: 354: break;
  1810  03E2  2C74               	goto	l11141
  1811                           	line	355
  1812                           	
  1813  03E3                     l11115:	
  1814                           ;Main.c: 355: }
  1815  03E3  2C74               	goto	l11141
  1816                           	line	320
  1817                           	
  1818  03E4                     l2261:	
  1819                           	
  1820  03E4                     l11117:	
  1821  03E4  087D               	movf	(_buttonPressed),w	;volatile
  1822                           	; Switch size 1, requested type "space"
  1823                           ; Number of cases is 5, Range of values is 1 to 5
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           16     9 (average)
  1827                           ; direct_byte           26    11 (fixed)
  1828                           ; jumptable            263     9 (fixed)
  1829                           ;	Chosen strategy is simple_byte
  1830                           
  1831                           	opt asmopt_off
  1832  03E5  3A01               	xorlw	1^0	; case 1
  1833  03E6  1903               	skipnz
  1834  03E7  2BB4               	goto	l11095
  1835  03E8  3A03               	xorlw	2^1	; case 2
  1836  03E9  1903               	skipnz
  1837  03EA  2BBC               	goto	l11099
  1838  03EB  3A01               	xorlw	3^2	; case 3
  1839  03EC  1903               	skipnz
  1840  03ED  2BC4               	goto	l11103
  1841  03EE  3A07               	xorlw	4^3	; case 4
  1842  03EF  1903               	skipnz
  1843  03F0  2BCC               	goto	l11107
  1844  03F1  3A01               	xorlw	5^4	; case 5
  1845  03F2  1903               	skipnz
  1846  03F3  2BD4               	goto	l11111
  1847  03F4  2BE1               	goto	l2268
  1848                           	opt asmopt_on
  1849                           
  1850                           	line	355
  1851                           	
  1852  03F5                     l2263:	
  1853                           	line	358
  1854                           ;Main.c: 358: switch (choice)
  1855  03F5  2C74               	goto	l11141
  1856                           	line	360
  1857                           ;Main.c: 359: {
  1858                           ;Main.c: 360: case 0:
  1859                           	
  1860  03F6                     l2270:	
  1861                           	line	361
  1862                           	
  1863  03F6                     l11119:	
  1864                           ;Main.c: 361: calibrateIR();
  1865  03F6  120A  158A  2581   	fcall	_calibrateIR
              120A  118A         
  1866                           	line	362
  1867                           ;Main.c: 362: break;
  1868  03FB  2C8A               	goto	l11143
  1869                           	line	363
  1870                           ;Main.c: 363: case 1:
  1871                           	
  1872  03FC                     l2272:	
  1873                           	line	364
  1874                           	
  1875  03FC                     l11121:	
  1876                           ;Main.c: 364: shortwall = scan360();
  1877  03FC  120A  158A  2647   	fcall	_scan360
              120A  118A         
  1878  0401  1283               	bcf	status, 5	;RP0=0, select bank0
  1879  0402  1303               	bcf	status, 6	;RP1=0, select bank0
  1880  0403  085A               	movf	(1+(?_scan360)),w
  1881  0404  01E5               	clrf	(main@shortwall+1)
  1882  0405  07E5               	addwf	(main@shortwall+1)
  1883  0406  0859               	movf	(0+(?_scan360)),w
  1884  0407  01E4               	clrf	(main@shortwall)
  1885  0408  07E4               	addwf	(main@shortwall)
  1886                           
  1887                           	line	365
  1888                           	
  1889  0409                     l11123:	
  1890                           ;Main.c: 365: rotate((400 - shortwall), 0);
  1891  0409  0964               	comf	(main@shortwall),w
  1892  040A  00E1               	movwf	(??_main+0)+0
  1893  040B  0965               	comf	(main@shortwall+1),w
  1894  040C  00E2               	movwf	((??_main+0)+0+1)
  1895  040D  0AE1               	incf	(??_main+0)+0,f
  1896  040E  1903               	skipnz
  1897  040F  0AE2               	incf	((??_main+0)+0+1),f
  1898  0410  0861               	movf	0+(??_main+0)+0,w
  1899  0411  3E90               	addlw	low(0190h)
  1900  0412  00A3               	movwf	(?_rotate)
  1901  0413  0862               	movf	1+(??_main+0)+0,w
  1902  0414  1803               	skipnc
  1903  0415  3E01               	addlw	1
  1904  0416  3E01               	addlw	high(0190h)
  1905  0417  00A4               	movwf	1+(?_rotate)
  1906  0418  01A5               	clrf	0+(?_rotate)+02h
  1907  0419  120A  158A  24DC   	fcall	_rotate
              120A  118A         
  1908                           	line	366
  1909                           ;Main.c: 366: break;
  1910  041E  2C8A               	goto	l11143
  1911                           	line	367
  1912                           ;Main.c: 367: case 2:
  1913                           	
  1914  041F                     l2273:	
  1915                           	line	368
  1916                           	
  1917  041F                     l11125:	
  1918                           ;Main.c: 368: _delay((unsigned long)((100)*(20000000/4000.0)));
  1919                           	opt asmopt_off
  1920  041F  3003               movlw  3
  1921  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  1922  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  1923  0422  00E3               movwf	((??_main+0)+0+2),f
  1924  0423  308A               movlw	138
  1925  0424  00E2               movwf	((??_main+0)+0+1),f
  1926  0425  3056               	movlw	86
  1927  0426  00E1               movwf	((??_main+0)+0),f
  1928  0427                     u4627:
  1929  0427  0BE1               	decfsz	((??_main+0)+0),f
  1930  0428  2C27               	goto	u4627
  1931  0429  0BE2               	decfsz	((??_main+0)+0+1),f
  1932  042A  2C27               	goto	u4627
  1933  042B  0BE3               	decfsz	((??_main+0)+0+2),f
  1934  042C  2C27               	goto	u4627
  1935  042D  2C2E               	nop2
  1936                           opt asmopt_on
  1937                           
  1938                           	line	369
  1939                           	
  1940  042E                     l11127:	
  1941                           ;Main.c: 369: robotMove(200);
  1942  042E  30C8               	movlw	low(0C8h)
  1943  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  1944  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  1945  0431  00D9               	movwf	(?_robotMove)
  1946  0432  3000               	movlw	high(0C8h)
  1947  0433  00DA               	movwf	((?_robotMove))+1
  1948  0434  120A  158A  2759   	fcall	_robotMove
              120A  118A         
  1949                           	line	372
  1950                           ;Main.c: 372: break;
  1951  0439  2C8A               	goto	l11143
  1952                           	line	373
  1953                           ;Main.c: 373: case 3:
  1954                           	
  1955  043A                     l2274:	
  1956                           	line	374
  1957                           	
  1958  043A                     l11129:	
  1959                           ;Main.c: 374: _delay((unsigned long)((100)*(20000000/4000.0)));
  1960                           	opt asmopt_off
  1961  043A  3003               movlw  3
  1962  043B  1283               	bcf	status, 5	;RP0=0, select bank0
  1963  043C  1303               	bcf	status, 6	;RP1=0, select bank0
  1964  043D  00E3               movwf	((??_main+0)+0+2),f
  1965  043E  308A               movlw	138
  1966  043F  00E2               movwf	((??_main+0)+0+1),f
  1967  0440  3056               	movlw	86
  1968  0441  00E1               movwf	((??_main+0)+0),f
  1969  0442                     u4637:
  1970  0442  0BE1               	decfsz	((??_main+0)+0),f
  1971  0443  2C42               	goto	u4637
  1972  0444  0BE2               	decfsz	((??_main+0)+0+1),f
  1973  0445  2C42               	goto	u4637
  1974  0446  0BE3               	decfsz	((??_main+0)+0+2),f
  1975  0447  2C42               	goto	u4637
  1976  0448  2C49               	nop2
  1977                           opt asmopt_on
  1978                           
  1979                           	line	375
  1980                           	
  1981  0449                     l11131:	
  1982                           ;Main.c: 375: robotMove(1000);
  1983  0449  30E8               	movlw	low(03E8h)
  1984  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  1985  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  1986  044C  00D9               	movwf	(?_robotMove)
  1987  044D  3003               	movlw	high(03E8h)
  1988  044E  00DA               	movwf	((?_robotMove))+1
  1989  044F  120A  158A  2759   	fcall	_robotMove
              120A  118A         
  1990                           	line	376
  1991                           	
  1992  0454                     l11133:	
  1993                           ;Main.c: 376: robotTurn(-90);
  1994  0454  30A6               	movlw	low(-90)
  1995  0455  1283               	bcf	status, 5	;RP0=0, select bank0
  1996  0456  1303               	bcf	status, 6	;RP1=0, select bank0
  1997  0457  00A2               	movwf	(?_robotTurn)
  1998  0458  30FF               	movlw	high(-90)
  1999  0459  00A3               	movwf	((?_robotTurn))+1
  2000  045A  120A  118A  2671   	fcall	_robotTurn
              120A  118A         
  2001                           	line	377
  2002                           	
  2003  045F                     l11135:	
  2004                           ;Main.c: 377: robotMove(1000);
  2005  045F  30E8               	movlw	low(03E8h)
  2006  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  2007  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  2008  0462  00D9               	movwf	(?_robotMove)
  2009  0463  3003               	movlw	high(03E8h)
  2010  0464  00DA               	movwf	((?_robotMove))+1
  2011  0465  120A  158A  2759   	fcall	_robotMove
              120A  118A         
  2012                           	line	378
  2013                           ;Main.c: 378: break;
  2014  046A  2C8A               	goto	l11143
  2015                           	line	379
  2016                           ;Main.c: 379: case 4:
  2017                           	
  2018  046B                     l2275:	
  2019                           	line	381
  2020                           ;Main.c: 381: break;
  2021  046B  2C8A               	goto	l11143
  2022                           	line	383
  2023                           ;Main.c: 383: case 5:
  2024                           	
  2025  046C                     l2276:	
  2026                           	line	384
  2027                           	
  2028  046C                     l11137:	
  2029                           ;Main.c: 384: ChargeMode();
  2030  046C  120A  158A  23FF   	fcall	_ChargeMode
              120A  118A         
  2031                           	line	385
  2032                           ;Main.c: 385: break;
  2033  0471  2C8A               	goto	l11143
  2034                           	line	386
  2035                           ;Main.c: 386: default:
  2036                           	
  2037  0472                     l2277:	
  2038                           	line	388
  2039                           ;Main.c: 388: break;
  2040  0472  2C8A               	goto	l11143
  2041                           	line	389
  2042                           	
  2043  0473                     l11139:	
  2044                           ;Main.c: 389: }
  2045  0473  2C8A               	goto	l11143
  2046                           	line	358
  2047                           	
  2048  0474                     l2269:	
  2049                           	
  2050  0474                     l11141:	
  2051  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  2052  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  2053  0476  0866               	movf	(main@choice),w
  2054                           	; Switch size 1, requested type "space"
  2055                           ; Number of cases is 6, Range of values is 0 to 5
  2056                           ; switch strategies available:
  2057                           ; Name         Instructions Cycles
  2058                           ; simple_byte           19    10 (average)
  2059                           ; direct_byte           26     8 (fixed)
  2060                           ; jumptable            260     6 (fixed)
  2061                           ; rangetable            10     6 (fixed)
  2062                           ; spacedrange           18     9 (fixed)
  2063                           ; locatedrange           6     3 (fixed)
  2064                           ;	Chosen strategy is simple_byte
  2065                           
  2066                           	opt asmopt_off
  2067  0477  3A00               	xorlw	0^0	; case 0
  2068  0478  1903               	skipnz
  2069  0479  2BF6               	goto	l11119
  2070  047A  3A01               	xorlw	1^0	; case 1
  2071  047B  1903               	skipnz
  2072  047C  2BFC               	goto	l11121
  2073  047D  3A03               	xorlw	2^1	; case 2
  2074  047E  1903               	skipnz
  2075  047F  2C1F               	goto	l11125
  2076  0480  3A01               	xorlw	3^2	; case 3
  2077  0481  1903               	skipnz
  2078  0482  2C3A               	goto	l11129
  2079  0483  3A07               	xorlw	4^3	; case 4
  2080  0484  1903               	skipnz
  2081  0485  2C8A               	goto	l11143
  2082  0486  3A01               	xorlw	5^4	; case 5
  2083  0487  1903               	skipnz
  2084  0488  2C6C               	goto	l11137
  2085  0489  2C8A               	goto	l11143
  2086                           	opt asmopt_on
  2087                           
  2088                           	line	389
  2089                           	
  2090  048A                     l2271:	
  2091                           	line	390
  2092                           	
  2093  048A                     l11143:	
  2094                           ;Main.c: 390: choice = 255;
  2095  048A  30FF               	movlw	(0FFh)
  2096  048B  1283               	bcf	status, 5	;RP0=0, select bank0
  2097  048C  1303               	bcf	status, 6	;RP1=0, select bank0
  2098  048D  00E1               	movwf	(??_main+0)+0
  2099  048E  0861               	movf	(??_main+0)+0,w
  2100  048F  00E6               	movwf	(main@choice)
  2101  0490  2B9E               	goto	l11085
  2102                           	line	391
  2103                           	
  2104  0491                     l2278:	
  2105                           	line	308
  2106  0491  2B9E               	goto	l11085
  2107                           	
  2108  0492                     l2279:	
  2109                           	line	392
  2110                           	
  2111  0492                     l2280:	
  2112                           	global	start
  2113  0492  120A  118A  2812   	ljmp	start
  2114                           	opt stack 0
  2115                           GLOBAL	__end_of_main
  2116  0495                     	__end_of_main:
  2117 ;; =============== function _main ends ============
  2118                           
  2119                           	signat	_main,88
  2120                           	global	_robotMove
  2121                           psect	text900,local,class=CODE,delta=2
  2122                           global __ptext900
  2123  0F59                     __ptext900:
  2124                           
  2125 ;; *************** function _robotMove *****************
  2126 ;; Defined at:
  2127 ;;		line 40 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  distance        2   57[BANK0 ] int 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       2       0       0       0
  2142 ;;      Locals:         0       0       0       0       0
  2143 ;;      Temps:          0       2       0       0       0
  2144 ;;      Totals:         0       4       0       0       0
  2145 ;;Total ram usage:        4 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    6
  2148 ;; This function calls:
  2149 ;;		_ser_putch
  2150 ;;		_robot_read
  2151 ;;		_UpdateDisplay
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           psect	text900
  2157                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  2158                           	line	40
  2159                           	global	__size_of_robotMove
  2160  00A7                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  2161                           	
  2162  0F59                     _robotMove:	
  2163                           	opt	stack 1
  2164                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2165                           	line	41
  2166                           	
  2167  0F59                     l11057:	
  2168                           ;robot.c: 41: distTravelled =0;
  2169  0F59  1683               	bsf	status, 5	;RP0=1, select bank1
  2170  0F5A  1303               	bcf	status, 6	;RP1=0, select bank1
  2171  0F5B  01C0               	clrf	(_distTravelled)^080h
  2172  0F5C  01C1               	clrf	(_distTravelled+1)^080h
  2173                           	line	43
  2174                           	
  2175  0F5D                     l11059:	
  2176                           ;robot.c: 43: if (distance >= 0)
  2177  0F5D  1283               	bcf	status, 5	;RP0=0, select bank0
  2178  0F5E  1303               	bcf	status, 6	;RP1=0, select bank0
  2179  0F5F  1BDA               	btfsc	(robotMove@distance+1),7
  2180  0F60  2F62               	goto	u4581
  2181  0F61  2F63               	goto	u4580
  2182  0F62                     u4581:
  2183  0F62  2F82               	goto	l11063
  2184  0F63                     u4580:
  2185                           	line	45
  2186                           	
  2187  0F63                     l11061:	
  2188                           ;robot.c: 44: {
  2189                           ;robot.c: 45: ser_putch(137);
  2190  0F63  3089               	movlw	(089h)
  2191  0F64  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2192                           	line	47
  2193                           ;robot.c: 47: ser_putch(0);
  2194  0F69  3000               	movlw	(0)
  2195  0F6A  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2196                           	line	49
  2197                           ;robot.c: 49: ser_putch(50);
  2198  0F6F  3032               	movlw	(032h)
  2199  0F70  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2200                           	line	51
  2201                           ;robot.c: 51: ser_putch(128);
  2202  0F75  3080               	movlw	(080h)
  2203  0F76  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2204                           	line	53
  2205                           ;robot.c: 53: ser_putch(0);
  2206  0F7B  3000               	movlw	(0)
  2207  0F7C  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2208                           	line	54
  2209                           ;robot.c: 54: }
  2210  0F81  2FC8               	goto	l11075
  2211                           	line	55
  2212                           	
  2213  0F82                     l6011:	
  2214                           	line	57
  2215                           	
  2216  0F82                     l11063:	
  2217                           ;robot.c: 55: else
  2218                           ;robot.c: 56: {
  2219                           ;robot.c: 57: ser_putch(137);
  2220  0F82  3089               	movlw	(089h)
  2221  0F83  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2222                           	line	59
  2223                           ;robot.c: 59: ser_putch(0xff);
  2224  0F88  30FF               	movlw	(0FFh)
  2225  0F89  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2226                           	line	61
  2227                           ;robot.c: 61: ser_putch(0x38);
  2228  0F8E  3038               	movlw	(038h)
  2229  0F8F  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2230                           	line	63
  2231                           ;robot.c: 63: ser_putch(128);
  2232  0F94  3080               	movlw	(080h)
  2233  0F95  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2234                           	line	65
  2235                           ;robot.c: 65: ser_putch(0);
  2236  0F9A  3000               	movlw	(0)
  2237  0F9B  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2238  0FA0  2FC8               	goto	l11075
  2239                           	line	66
  2240                           	
  2241  0FA1                     l6012:	
  2242                           	line	69
  2243                           ;robot.c: 66: }
  2244                           ;robot.c: 69: while (distTravelled <= distance)
  2245  0FA1  2FC8               	goto	l11075
  2246                           	
  2247  0FA2                     l6014:	
  2248                           	line	71
  2249                           	
  2250  0FA2                     l11065:	
  2251                           ;robot.c: 70: {
  2252                           ;robot.c: 71: robot_read();
  2253  0FA2  120A  118A  27AF   	fcall	_robot_read
              120A  158A         
  2254                           	line	72
  2255                           	
  2256  0FA7                     l11067:	
  2257                           ;robot.c: 72: if (BumpSensors)
  2258  0FA7  1283               	bcf	status, 5	;RP0=0, select bank0
  2259  0FA8  1303               	bcf	status, 6	;RP1=0, select bank0
  2260  0FA9  086B               	movf	(_BumpSensors),w	;volatile
  2261  0FAA  1D03               	skipz
  2262  0FAB  2FAD               	goto	u4590
  2263  0FAC  2FAF               	goto	l11071
  2264  0FAD                     u4590:
  2265  0FAD  2FE1               	goto	l11077
  2266                           	line	73
  2267                           	
  2268  0FAE                     l11069:	
  2269                           ;robot.c: 73: break;
  2270  0FAE  2FE1               	goto	l11077
  2271                           	
  2272  0FAF                     l6015:	
  2273                           	line	74
  2274                           	
  2275  0FAF                     l11071:	
  2276                           ;robot.c: 74: distTravelled += DistLowByte;
  2277  0FAF  1683               	bsf	status, 5	;RP0=1, select bank1
  2278  0FB0  1303               	bcf	status, 6	;RP1=0, select bank1
  2279  0FB1  0852               	movf	(_DistLowByte)^080h,w	;volatile
  2280  0FB2  1283               	bcf	status, 5	;RP0=0, select bank0
  2281  0FB3  1303               	bcf	status, 6	;RP1=0, select bank0
  2282  0FB4  00DB               	movwf	(??_robotMove+0)+0
  2283  0FB5  01DC               	clrf	(??_robotMove+0)+0+1
  2284  0FB6  085B               	movf	0+(??_robotMove+0)+0,w
  2285  0FB7  1683               	bsf	status, 5	;RP0=1, select bank1
  2286  0FB8  1303               	bcf	status, 6	;RP1=0, select bank1
  2287  0FB9  07C0               	addwf	(_distTravelled)^080h,f
  2288  0FBA  1803               	skipnc
  2289  0FBB  0AC1               	incf	(_distTravelled+1)^080h,f
  2290  0FBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2291  0FBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2292  0FBE  085C               	movf	1+(??_robotMove+0)+0,w
  2293  0FBF  1683               	bsf	status, 5	;RP0=1, select bank1
  2294  0FC0  1303               	bcf	status, 6	;RP1=0, select bank1
  2295  0FC1  07C1               	addwf	(_distTravelled+1)^080h,f
  2296                           	line	75
  2297                           	
  2298  0FC2                     l11073:	
  2299                           ;robot.c: 75: UpdateDisplay();
  2300  0FC2  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2301  0FC7  2FC8               	goto	l11075
  2302                           	line	76
  2303                           	
  2304  0FC8                     l6013:	
  2305                           	line	69
  2306                           	
  2307  0FC8                     l11075:	
  2308  0FC8  1283               	bcf	status, 5	;RP0=0, select bank0
  2309  0FC9  1303               	bcf	status, 6	;RP1=0, select bank0
  2310  0FCA  085A               	movf	(robotMove@distance+1),w
  2311  0FCB  3A80               	xorlw	80h
  2312  0FCC  00DB               	movwf	(??_robotMove+0)+0
  2313  0FCD  1683               	bsf	status, 5	;RP0=1, select bank1
  2314  0FCE  1303               	bcf	status, 6	;RP1=0, select bank1
  2315  0FCF  0841               	movf	(_distTravelled+1)^080h,w
  2316  0FD0  3A80               	xorlw	80h
  2317  0FD1  1283               	bcf	status, 5	;RP0=0, select bank0
  2318  0FD2  1303               	bcf	status, 6	;RP1=0, select bank0
  2319  0FD3  025B               	subwf	(??_robotMove+0)+0,w
  2320  0FD4  1D03               	skipz
  2321  0FD5  2FDC               	goto	u4605
  2322  0FD6  1683               	bsf	status, 5	;RP0=1, select bank1
  2323  0FD7  1303               	bcf	status, 6	;RP1=0, select bank1
  2324  0FD8  0840               	movf	(_distTravelled)^080h,w
  2325  0FD9  1283               	bcf	status, 5	;RP0=0, select bank0
  2326  0FDA  1303               	bcf	status, 6	;RP1=0, select bank0
  2327  0FDB  0259               	subwf	(robotMove@distance),w
  2328  0FDC                     u4605:
  2329                           
  2330  0FDC  1803               	skipnc
  2331  0FDD  2FDF               	goto	u4601
  2332  0FDE  2FE0               	goto	u4600
  2333  0FDF                     u4601:
  2334  0FDF  2FA2               	goto	l11065
  2335  0FE0                     u4600:
  2336  0FE0  2FE1               	goto	l11077
  2337                           	
  2338  0FE1                     l6016:	
  2339                           	line	78
  2340                           	
  2341  0FE1                     l11077:	
  2342                           ;robot.c: 76: }
  2343                           ;robot.c: 78: ser_putch(137);
  2344  0FE1  3089               	movlw	(089h)
  2345  0FE2  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2346                           	line	80
  2347                           ;robot.c: 80: ser_putch(0);
  2348  0FE7  3000               	movlw	(0)
  2349  0FE8  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2350                           	line	82
  2351                           ;robot.c: 82: ser_putch(0);
  2352  0FED  3000               	movlw	(0)
  2353  0FEE  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2354                           	line	84
  2355                           ;robot.c: 84: ser_putch(0);
  2356  0FF3  3000               	movlw	(0)
  2357  0FF4  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2358                           	line	86
  2359                           ;robot.c: 86: ser_putch(0);
  2360  0FF9  3000               	movlw	(0)
  2361  0FFA  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2362                           	line	88
  2363                           	
  2364  0FFF                     l6017:	
  2365  0FFF  0008               	return
  2366                           	opt stack 0
  2367                           GLOBAL	__end_of_robotMove
  2368  1000                     	__end_of_robotMove:
  2369 ;; =============== function _robotMove ends ============
  2370                           
  2371                           	signat	_robotMove,4216
  2372                           	global	_scan360
  2373                           psect	text901,local,class=CODE,delta=2
  2374                           global __ptext901
  2375  0E47                     __ptext901:
  2376                           
  2377 ;; *************** function _scan360 *****************
  2378 ;; Defined at:
  2379 ;;		line 268 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  steps           2   63[BANK0 ] int 
  2384 ;;  lowestSteps     2   61[BANK0 ] int 
  2385 ;;  lowestVal       2   59[BANK0 ] int 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2   57[BANK0 ] int 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       2       0       0       0
  2396 ;;      Locals:         0       6       0       0       0
  2397 ;;      Temps:          0       0       0       0       0
  2398 ;;      Totals:         0       8       0       0       0
  2399 ;;Total ram usage:        8 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    7
  2402 ;; This function calls:
  2403 ;;		_readAvgDistance
  2404 ;;		_rotate
  2405 ;;		_UpdateDisplay
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           psect	text901
  2411                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2412                           	line	268
  2413                           	global	__size_of_scan360
  2414  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2415                           	
  2416  0E47                     _scan360:	
  2417                           	opt	stack 0
  2418                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2419                           	line	269
  2420                           	
  2421  0E47                     l11027:	
  2422                           ;Main.c: 269: int lowestVal = 0, lowestSteps = 0;
  2423  0E47  1283               	bcf	status, 5	;RP0=0, select bank0
  2424  0E48  1303               	bcf	status, 6	;RP1=0, select bank0
  2425  0E49  01DB               	clrf	(scan360@lowestVal)
  2426  0E4A  01DC               	clrf	(scan360@lowestVal+1)
  2427  0E4B  01DD               	clrf	(scan360@lowestSteps)
  2428  0E4C  01DE               	clrf	(scan360@lowestSteps+1)
  2429                           	line	271
  2430                           ;Main.c: 271: for (int steps = 0; steps < 400; steps++)
  2431  0E4D  01DF               	clrf	(scan360@steps)
  2432  0E4E  01E0               	clrf	(scan360@steps+1)
  2433                           	
  2434  0E4F                     l11029:	
  2435  0E4F  0860               	movf	(scan360@steps+1),w
  2436  0E50  3A80               	xorlw	80h
  2437  0E51  00FF               	movwf	btemp+1
  2438  0E52  3081               	movlw	(high(0190h))^80h
  2439  0E53  027F               	subwf	btemp+1,w
  2440  0E54  1D03               	skipz
  2441  0E55  2E58               	goto	u4545
  2442  0E56  3090               	movlw	low(0190h)
  2443  0E57  025F               	subwf	(scan360@steps),w
  2444  0E58                     u4545:
  2445                           
  2446  0E58  1C03               	skipc
  2447  0E59  2E5B               	goto	u4541
  2448  0E5A  2E5C               	goto	u4540
  2449  0E5B                     u4541:
  2450  0E5B  2E5E               	goto	l11033
  2451  0E5C                     u4540:
  2452  0E5C  2EB7               	goto	l11053
  2453                           	
  2454  0E5D                     l11031:	
  2455  0E5D  2EB7               	goto	l11053
  2456                           	line	272
  2457                           	
  2458  0E5E                     l2252:	
  2459                           	line	273
  2460                           	
  2461  0E5E                     l11033:	
  2462                           ;Main.c: 272: {
  2463                           ;Main.c: 273: readAvgDistance();
  2464  0E5E  120A  158A  252C   	fcall	_readAvgDistance
              120A  158A         
  2465                           	line	274
  2466                           	
  2467  0E63                     l11035:	
  2468                           ;Main.c: 274: if (adcVal > lowestVal)
  2469  0E63  1283               	bcf	status, 5	;RP0=0, select bank0
  2470  0E64  1303               	bcf	status, 6	;RP1=0, select bank0
  2471  0E65  086A               	movf	(_adcVal+1),w	;volatile
  2472  0E66  025C               	subwf	(scan360@lowestVal+1),w
  2473  0E67  1D03               	skipz
  2474  0E68  2E6B               	goto	u4555
  2475  0E69  0869               	movf	(_adcVal),w	;volatile
  2476  0E6A  025B               	subwf	(scan360@lowestVal),w
  2477  0E6B                     u4555:
  2478  0E6B  1803               	skipnc
  2479  0E6C  2E6E               	goto	u4551
  2480  0E6D  2E6F               	goto	u4550
  2481  0E6E                     u4551:
  2482  0E6E  2E7C               	goto	l11039
  2483  0E6F                     u4550:
  2484                           	line	276
  2485                           	
  2486  0E6F                     l11037:	
  2487                           ;Main.c: 275: {
  2488                           ;Main.c: 276: lowestVal = adcVal;
  2489  0E6F  086A               	movf	(_adcVal+1),w	;volatile
  2490  0E70  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  2491  0E71  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  2492  0E72  0869               	movf	(_adcVal),w	;volatile
  2493  0E73  01DB               	clrf	(scan360@lowestVal)	;volatile
  2494  0E74  07DB               	addwf	(scan360@lowestVal)	;volatile
  2495                           
  2496                           	line	277
  2497                           ;Main.c: 277: lowestSteps = steps;
  2498  0E75  0860               	movf	(scan360@steps+1),w
  2499  0E76  01DE               	clrf	(scan360@lowestSteps+1)
  2500  0E77  07DE               	addwf	(scan360@lowestSteps+1)
  2501  0E78  085F               	movf	(scan360@steps),w
  2502  0E79  01DD               	clrf	(scan360@lowestSteps)
  2503  0E7A  07DD               	addwf	(scan360@lowestSteps)
  2504                           
  2505  0E7B  2E7C               	goto	l11039
  2506                           	line	279
  2507                           	
  2508  0E7C                     l2254:	
  2509                           	line	280
  2510                           	
  2511  0E7C                     l11039:	
  2512                           ;Main.c: 279: }
  2513                           ;Main.c: 280: rotate(1, 1);
  2514  0E7C  3001               	movlw	low(01h)
  2515  0E7D  00A3               	movwf	(?_rotate)
  2516  0E7E  3000               	movlw	high(01h)
  2517  0E7F  00A4               	movwf	((?_rotate))+1
  2518  0E80  01A5               	clrf	0+(?_rotate)+02h
  2519  0E81  1403               	bsf	status,0
  2520  0E82  0DA5               	rlf	0+(?_rotate)+02h,f
  2521  0E83  120A  158A  24DC   	fcall	_rotate
              120A  158A         
  2522                           	line	282
  2523                           	
  2524  0E88                     l11041:	
  2525                           ;Main.c: 282: if (RTC_FLAG_250MS == 1)
  2526  0E88  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2527  0E89  2E8B               	goto	u4561
  2528  0E8A  2E8C               	goto	u4560
  2529  0E8B                     u4561:
  2530  0E8B  2E93               	goto	l11047
  2531  0E8C                     u4560:
  2532                           	line	284
  2533                           	
  2534  0E8C                     l11043:	
  2535                           ;Main.c: 283: {
  2536                           ;Main.c: 284: RTC_FLAG_250MS = 0;
  2537  0E8C  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2538                           	line	285
  2539                           	
  2540  0E8D                     l11045:	
  2541                           ;Main.c: 285: UpdateDisplay();
  2542  0E8D  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2543  0E92  2E93               	goto	l11047
  2544                           	line	286
  2545                           	
  2546  0E93                     l2255:	
  2547                           	line	287
  2548                           	
  2549  0E93                     l11047:	
  2550                           ;Main.c: 286: }
  2551                           ;Main.c: 287: test = lowestSteps;
  2552  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  2553  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  2554  0E95  085E               	movf	(scan360@lowestSteps+1),w
  2555  0E96  1683               	bsf	status, 5	;RP0=1, select bank1
  2556  0E97  1303               	bcf	status, 6	;RP1=0, select bank1
  2557  0E98  01CB               	clrf	(_test+1)^080h
  2558  0E99  07CB               	addwf	(_test+1)^080h
  2559  0E9A  1283               	bcf	status, 5	;RP0=0, select bank0
  2560  0E9B  1303               	bcf	status, 6	;RP1=0, select bank0
  2561  0E9C  085D               	movf	(scan360@lowestSteps),w
  2562  0E9D  1683               	bsf	status, 5	;RP0=1, select bank1
  2563  0E9E  1303               	bcf	status, 6	;RP1=0, select bank1
  2564  0E9F  01CA               	clrf	(_test)^080h
  2565  0EA0  07CA               	addwf	(_test)^080h
  2566                           
  2567                           	line	271
  2568                           	
  2569  0EA1                     l11049:	
  2570  0EA1  3001               	movlw	low(01h)
  2571  0EA2  1283               	bcf	status, 5	;RP0=0, select bank0
  2572  0EA3  1303               	bcf	status, 6	;RP1=0, select bank0
  2573  0EA4  07DF               	addwf	(scan360@steps),f
  2574  0EA5  1803               	skipnc
  2575  0EA6  0AE0               	incf	(scan360@steps+1),f
  2576  0EA7  3000               	movlw	high(01h)
  2577  0EA8  07E0               	addwf	(scan360@steps+1),f
  2578                           	
  2579  0EA9                     l11051:	
  2580  0EA9  0860               	movf	(scan360@steps+1),w
  2581  0EAA  3A80               	xorlw	80h
  2582  0EAB  00FF               	movwf	btemp+1
  2583  0EAC  3081               	movlw	(high(0190h))^80h
  2584  0EAD  027F               	subwf	btemp+1,w
  2585  0EAE  1D03               	skipz
  2586  0EAF  2EB2               	goto	u4575
  2587  0EB0  3090               	movlw	low(0190h)
  2588  0EB1  025F               	subwf	(scan360@steps),w
  2589  0EB2                     u4575:
  2590                           
  2591  0EB2  1C03               	skipc
  2592  0EB3  2EB5               	goto	u4571
  2593  0EB4  2EB6               	goto	u4570
  2594  0EB5                     u4571:
  2595  0EB5  2E5E               	goto	l11033
  2596  0EB6                     u4570:
  2597  0EB6  2EB7               	goto	l11053
  2598                           	
  2599  0EB7                     l2253:	
  2600                           	line	290
  2601                           	
  2602  0EB7                     l11053:	
  2603                           ;Main.c: 288: }
  2604                           ;Main.c: 290: return lowestSteps;
  2605  0EB7  1283               	bcf	status, 5	;RP0=0, select bank0
  2606  0EB8  1303               	bcf	status, 6	;RP1=0, select bank0
  2607  0EB9  085E               	movf	(scan360@lowestSteps+1),w
  2608  0EBA  01DA               	clrf	(?_scan360+1)
  2609  0EBB  07DA               	addwf	(?_scan360+1)
  2610  0EBC  085D               	movf	(scan360@lowestSteps),w
  2611  0EBD  01D9               	clrf	(?_scan360)
  2612  0EBE  07D9               	addwf	(?_scan360)
  2613                           
  2614  0EBF  2EC0               	goto	l2256
  2615                           	
  2616  0EC0                     l11055:	
  2617                           	line	291
  2618                           	
  2619  0EC0                     l2256:	
  2620  0EC0  0008               	return
  2621                           	opt stack 0
  2622                           GLOBAL	__end_of_scan360
  2623  0EC1                     	__end_of_scan360:
  2624 ;; =============== function _scan360 ends ============
  2625                           
  2626                           	signat	_scan360,90
  2627                           	global	_ChargeMode
  2628                           psect	text902,local,class=CODE,delta=2
  2629                           global __ptext902
  2630  0BFF                     __ptext902:
  2631                           
  2632 ;; *************** function _ChargeMode *****************
  2633 ;; Defined at:
  2634 ;;		line 214 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       1       0       0       0
  2651 ;;      Totals:         0       1       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    6
  2655 ;; This function calls:
  2656 ;;		_ser_putch
  2657 ;;		_UpdateDisplay
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           psect	text902
  2663                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2664                           	line	214
  2665                           	global	__size_of_ChargeMode
  2666  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2667                           	
  2668  0BFF                     _ChargeMode:	
  2669                           	opt	stack 1
  2670                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2671                           	line	216
  2672                           	
  2673  0BFF                     l11005:	
  2674                           ;Main.c: 216: currentMenu = 2;
  2675  0BFF  3002               	movlw	(02h)
  2676  0C00  1283               	bcf	status, 5	;RP0=0, select bank0
  2677  0C01  1303               	bcf	status, 6	;RP1=0, select bank0
  2678  0C02  00D9               	movwf	(??_ChargeMode+0)+0
  2679  0C03  0859               	movf	(??_ChargeMode+0)+0,w
  2680  0C04  1683               	bsf	status, 5	;RP0=1, select bank1
  2681  0C05  1303               	bcf	status, 6	;RP1=0, select bank1
  2682  0C06  00D7               	movwf	(_currentMenu)^080h	;volatile
  2683                           	line	217
  2684                           	
  2685  0C07                     l11007:	
  2686                           ;Main.c: 217: ser_putch(128);
  2687  0C07  3080               	movlw	(080h)
  2688  0C08  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2689  0C0D  2C0E               	goto	l11009
  2690                           	line	219
  2691                           ;Main.c: 219: while (1)
  2692                           	
  2693  0C0E                     l2237:	
  2694                           	line	221
  2695                           	
  2696  0C0E                     l11009:	
  2697                           ;Main.c: 220: {
  2698                           ;Main.c: 221: if (RTC_FLAG_250MS == 1)
  2699  0C0E  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2700  0C0F  2C11               	goto	u4531
  2701  0C10  2C12               	goto	u4530
  2702  0C11                     u4531:
  2703  0C11  2C31               	goto	l11025
  2704  0C12                     u4530:
  2705                           	line	223
  2706                           	
  2707  0C12                     l11011:	
  2708                           ;Main.c: 222: {
  2709                           ;Main.c: 223: RTC_FLAG_250MS = 0;
  2710  0C12  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2711                           	line	224
  2712                           	
  2713  0C13                     l11013:	
  2714                           ;Main.c: 224: UpdateDisplay();
  2715  0C13  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2716  0C18  2C31               	goto	l11025
  2717                           	line	225
  2718                           	
  2719  0C19                     l2238:	
  2720                           	line	226
  2721                           ;Main.c: 225: }
  2722                           ;Main.c: 226: switch (buttonPressed)
  2723  0C19  2C31               	goto	l11025
  2724                           	line	228
  2725                           ;Main.c: 227: {
  2726                           ;Main.c: 228: case 1:
  2727                           	
  2728  0C1A                     l2240:	
  2729                           	line	231
  2730                           ;Main.c: 231: buttonPressed = 0;
  2731  0C1A  01FD               	clrf	(_buttonPressed)	;volatile
  2732                           	line	233
  2733                           ;Main.c: 233: break;
  2734  0C1B  2C0E               	goto	l11009
  2735                           	line	234
  2736                           ;Main.c: 234: case 2:
  2737                           	
  2738  0C1C                     l2242:	
  2739                           	line	237
  2740                           ;Main.c: 237: buttonPressed = 0;
  2741  0C1C  01FD               	clrf	(_buttonPressed)	;volatile
  2742                           	line	239
  2743                           ;Main.c: 239: break;
  2744  0C1D  2C0E               	goto	l11009
  2745                           	line	240
  2746                           ;Main.c: 240: case 3:
  2747                           	
  2748  0C1E                     l2243:	
  2749                           	line	243
  2750                           ;Main.c: 243: buttonPressed = 0;
  2751  0C1E  01FD               	clrf	(_buttonPressed)	;volatile
  2752                           	line	245
  2753                           ;Main.c: 245: break;
  2754  0C1F  2C0E               	goto	l11009
  2755                           	line	246
  2756                           ;Main.c: 246: case 4:
  2757                           	
  2758  0C20                     l2244:	
  2759                           	line	249
  2760                           ;Main.c: 249: buttonPressed = 0;
  2761  0C20  01FD               	clrf	(_buttonPressed)	;volatile
  2762                           	line	251
  2763                           ;Main.c: 251: break;
  2764  0C21  2C0E               	goto	l11009
  2765                           	line	252
  2766                           ;Main.c: 252: case 5:
  2767                           	
  2768  0C22                     l2245:	
  2769                           	line	253
  2770                           	
  2771  0C22                     l11015:	
  2772                           ;Main.c: 253: ser_putch(132);
  2773  0C22  3084               	movlw	(084h)
  2774  0C23  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  2775                           	line	255
  2776                           	
  2777  0C28                     l11017:	
  2778                           ;Main.c: 255: buttonPressed = 0;
  2779  0C28  01FD               	clrf	(_buttonPressed)	;volatile
  2780                           	line	256
  2781                           	
  2782  0C29                     l11019:	
  2783                           ;Main.c: 256: currentMenu = 0;
  2784  0C29  1683               	bsf	status, 5	;RP0=1, select bank1
  2785  0C2A  1303               	bcf	status, 6	;RP1=0, select bank1
  2786  0C2B  01D7               	clrf	(_currentMenu)^080h	;volatile
  2787  0C2C  2C44               	goto	l2246
  2788                           	line	257
  2789                           	
  2790  0C2D                     l11021:	
  2791                           ;Main.c: 257: return;
  2792  0C2D  2C44               	goto	l2246
  2793                           	line	259
  2794                           ;Main.c: 259: default:
  2795                           	
  2796  0C2E                     l2247:	
  2797                           	line	260
  2798                           ;Main.c: 260: buttonPressed = 0;
  2799  0C2E  01FD               	clrf	(_buttonPressed)	;volatile
  2800                           	line	261
  2801                           ;Main.c: 261: break;
  2802  0C2F  2C0E               	goto	l11009
  2803                           	line	262
  2804                           	
  2805  0C30                     l11023:	
  2806                           ;Main.c: 262: }
  2807  0C30  2C0E               	goto	l11009
  2808                           	line	226
  2809                           	
  2810  0C31                     l2239:	
  2811                           	
  2812  0C31                     l11025:	
  2813  0C31  087D               	movf	(_buttonPressed),w	;volatile
  2814                           	; Switch size 1, requested type "space"
  2815                           ; Number of cases is 5, Range of values is 1 to 5
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           16     9 (average)
  2819                           ; direct_byte           26    11 (fixed)
  2820                           ; jumptable            263     9 (fixed)
  2821                           ;	Chosen strategy is simple_byte
  2822                           
  2823                           	opt asmopt_off
  2824  0C32  3A01               	xorlw	1^0	; case 1
  2825  0C33  1903               	skipnz
  2826  0C34  2C1A               	goto	l2240
  2827  0C35  3A03               	xorlw	2^1	; case 2
  2828  0C36  1903               	skipnz
  2829  0C37  2C1C               	goto	l2242
  2830  0C38  3A01               	xorlw	3^2	; case 3
  2831  0C39  1903               	skipnz
  2832  0C3A  2C1E               	goto	l2243
  2833  0C3B  3A07               	xorlw	4^3	; case 4
  2834  0C3C  1903               	skipnz
  2835  0C3D  2C20               	goto	l2244
  2836  0C3E  3A01               	xorlw	5^4	; case 5
  2837  0C3F  1903               	skipnz
  2838  0C40  2C22               	goto	l11015
  2839  0C41  2C2E               	goto	l2247
  2840                           	opt asmopt_on
  2841                           
  2842                           	line	262
  2843                           	
  2844  0C42                     l2241:	
  2845  0C42  2C0E               	goto	l11009
  2846                           	line	263
  2847                           	
  2848  0C43                     l2248:	
  2849                           	line	219
  2850  0C43  2C0E               	goto	l11009
  2851                           	
  2852  0C44                     l2249:	
  2853                           	line	264
  2854                           	
  2855  0C44                     l2246:	
  2856  0C44  0008               	return
  2857                           	opt stack 0
  2858                           GLOBAL	__end_of_ChargeMode
  2859  0C45                     	__end_of_ChargeMode:
  2860 ;; =============== function _ChargeMode ends ============
  2861                           
  2862                           	signat	_ChargeMode,88
  2863                           	global	_calibrateIR
  2864                           psect	text903,local,class=CODE,delta=2
  2865                           global __ptext903
  2866  0D81                     __ptext903:
  2867                           
  2868 ;; *************** function _calibrateIR *****************
  2869 ;; Defined at:
  2870 ;;		line 163 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    6
  2891 ;; This function calls:
  2892 ;;		_rotate
  2893 ;;		_UpdateDisplay
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           psect	text903
  2899                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2900                           	line	163
  2901                           	global	__size_of_calibrateIR
  2902  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2903                           	
  2904  0D81                     _calibrateIR:	
  2905                           	opt	stack 1
  2906                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2907                           	line	165
  2908                           	
  2909  0D81                     l10975:	
  2910                           ;Main.c: 165: currentMenu = 1;
  2911  0D81  1683               	bsf	status, 5	;RP0=1, select bank1
  2912  0D82  1303               	bcf	status, 6	;RP1=0, select bank1
  2913  0D83  01D7               	clrf	(_currentMenu)^080h	;volatile
  2914  0D84  1403               	bsf	status,0
  2915  0D85  0DD7               	rlf	(_currentMenu)^080h,f	;volatile
  2916                           	line	166
  2917                           	
  2918  0D86                     l10977:	
  2919                           ;Main.c: 166: rotate(8, 0);
  2920  0D86  3008               	movlw	low(08h)
  2921  0D87  1283               	bcf	status, 5	;RP0=0, select bank0
  2922  0D88  1303               	bcf	status, 6	;RP1=0, select bank0
  2923  0D89  00A3               	movwf	(?_rotate)
  2924  0D8A  3000               	movlw	high(08h)
  2925  0D8B  00A4               	movwf	((?_rotate))+1
  2926  0D8C  01A5               	clrf	0+(?_rotate)+02h
  2927  0D8D  120A  158A  24DC   	fcall	_rotate
              120A  158A         
  2928  0D92  2D93               	goto	l10979
  2929                           	line	167
  2930                           ;Main.c: 167: while (1)
  2931                           	
  2932  0D93                     l2222:	
  2933                           	line	169
  2934                           	
  2935  0D93                     l10979:	
  2936                           ;Main.c: 168: {
  2937                           ;Main.c: 169: if (RTC_FLAG_250MS == 1)
  2938  0D93  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2939  0D94  2D96               	goto	u4521
  2940  0D95  2D97               	goto	u4520
  2941  0D96                     u4521:
  2942  0D96  2DCB               	goto	l11003
  2943  0D97                     u4520:
  2944                           	line	171
  2945                           	
  2946  0D97                     l10981:	
  2947                           ;Main.c: 170: {
  2948                           ;Main.c: 171: RTC_FLAG_250MS = 0;
  2949  0D97  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2950                           	line	172
  2951                           	
  2952  0D98                     l10983:	
  2953                           ;Main.c: 172: UpdateDisplay();
  2954  0D98  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2955  0D9D  2DCB               	goto	l11003
  2956                           	line	173
  2957                           	
  2958  0D9E                     l2223:	
  2959                           	line	174
  2960                           ;Main.c: 173: }
  2961                           ;Main.c: 174: switch (buttonPressed)
  2962  0D9E  2DCB               	goto	l11003
  2963                           	line	176
  2964                           ;Main.c: 175: {
  2965                           ;Main.c: 176: case 1:
  2966                           	
  2967  0D9F                     l2225:	
  2968                           	line	179
  2969                           ;Main.c: 179: buttonPressed = 0;
  2970  0D9F  01FD               	clrf	(_buttonPressed)	;volatile
  2971                           	line	181
  2972                           ;Main.c: 181: break;
  2973  0DA0  2D93               	goto	l10979
  2974                           	line	182
  2975                           ;Main.c: 182: case 2:
  2976                           	
  2977  0DA1                     l2227:	
  2978                           	line	185
  2979                           ;Main.c: 185: buttonPressed = 0;
  2980  0DA1  01FD               	clrf	(_buttonPressed)	;volatile
  2981                           	line	187
  2982                           ;Main.c: 187: break;
  2983  0DA2  2D93               	goto	l10979
  2984                           	line	188
  2985                           ;Main.c: 188: case 3:
  2986                           	
  2987  0DA3                     l2228:	
  2988                           	line	189
  2989                           	
  2990  0DA3                     l10985:	
  2991                           ;Main.c: 189: rotate(1, 1);
  2992  0DA3  3001               	movlw	low(01h)
  2993  0DA4  1283               	bcf	status, 5	;RP0=0, select bank0
  2994  0DA5  1303               	bcf	status, 6	;RP1=0, select bank0
  2995  0DA6  00A3               	movwf	(?_rotate)
  2996  0DA7  3000               	movlw	high(01h)
  2997  0DA8  00A4               	movwf	((?_rotate))+1
  2998  0DA9  01A5               	clrf	0+(?_rotate)+02h
  2999  0DAA  1403               	bsf	status,0
  3000  0DAB  0DA5               	rlf	0+(?_rotate)+02h,f
  3001  0DAC  120A  158A  24DC   	fcall	_rotate
              120A  158A         
  3002                           	line	191
  3003                           	
  3004  0DB1                     l10987:	
  3005                           ;Main.c: 191: buttonPressed = 0;
  3006  0DB1  01FD               	clrf	(_buttonPressed)	;volatile
  3007                           	line	193
  3008                           ;Main.c: 193: break;
  3009  0DB2  2D93               	goto	l10979
  3010                           	line	194
  3011                           ;Main.c: 194: case 4:
  3012                           	
  3013  0DB3                     l2229:	
  3014                           	line	195
  3015                           	
  3016  0DB3                     l10989:	
  3017                           ;Main.c: 195: rotate(1, 0);
  3018  0DB3  3001               	movlw	low(01h)
  3019  0DB4  1283               	bcf	status, 5	;RP0=0, select bank0
  3020  0DB5  1303               	bcf	status, 6	;RP1=0, select bank0
  3021  0DB6  00A3               	movwf	(?_rotate)
  3022  0DB7  3000               	movlw	high(01h)
  3023  0DB8  00A4               	movwf	((?_rotate))+1
  3024  0DB9  01A5               	clrf	0+(?_rotate)+02h
  3025  0DBA  120A  158A  24DC   	fcall	_rotate
              120A  158A         
  3026                           	line	197
  3027                           	
  3028  0DBF                     l10991:	
  3029                           ;Main.c: 197: buttonPressed = 0;
  3030  0DBF  01FD               	clrf	(_buttonPressed)	;volatile
  3031                           	line	199
  3032                           ;Main.c: 199: break;
  3033  0DC0  2D93               	goto	l10979
  3034                           	line	200
  3035                           ;Main.c: 200: case 5:
  3036                           	
  3037  0DC1                     l2230:	
  3038                           	line	201
  3039                           	
  3040  0DC1                     l10993:	
  3041                           ;Main.c: 201: totalSteps = 0;
  3042  0DC1  1683               	bsf	status, 5	;RP0=1, select bank1
  3043  0DC2  1303               	bcf	status, 6	;RP1=0, select bank1
  3044  0DC3  01CE               	clrf	(_totalSteps)^080h
  3045  0DC4  01CF               	clrf	(_totalSteps+1)^080h
  3046                           	line	203
  3047                           	
  3048  0DC5                     l10995:	
  3049                           ;Main.c: 203: buttonPressed = 0;
  3050  0DC5  01FD               	clrf	(_buttonPressed)	;volatile
  3051                           	line	204
  3052                           	
  3053  0DC6                     l10997:	
  3054                           ;Main.c: 204: currentMenu = 0;
  3055  0DC6  01D7               	clrf	(_currentMenu)^080h	;volatile
  3056  0DC7  2DDE               	goto	l2231
  3057                           	line	205
  3058                           	
  3059  0DC8                     l10999:	
  3060                           ;Main.c: 205: return;
  3061  0DC8  2DDE               	goto	l2231
  3062                           	line	207
  3063                           ;Main.c: 207: default:
  3064                           	
  3065  0DC9                     l2232:	
  3066                           	line	209
  3067                           ;Main.c: 209: break;
  3068  0DC9  2D93               	goto	l10979
  3069                           	line	210
  3070                           	
  3071  0DCA                     l11001:	
  3072                           ;Main.c: 210: }
  3073  0DCA  2D93               	goto	l10979
  3074                           	line	174
  3075                           	
  3076  0DCB                     l2224:	
  3077                           	
  3078  0DCB                     l11003:	
  3079  0DCB  087D               	movf	(_buttonPressed),w	;volatile
  3080                           	; Switch size 1, requested type "space"
  3081                           ; Number of cases is 5, Range of values is 1 to 5
  3082                           ; switch strategies available:
  3083                           ; Name         Instructions Cycles
  3084                           ; simple_byte           16     9 (average)
  3085                           ; direct_byte           26    11 (fixed)
  3086                           ; jumptable            263     9 (fixed)
  3087                           ;	Chosen strategy is simple_byte
  3088                           
  3089                           	opt asmopt_off
  3090  0DCC  3A01               	xorlw	1^0	; case 1
  3091  0DCD  1903               	skipnz
  3092  0DCE  2D9F               	goto	l2225
  3093  0DCF  3A03               	xorlw	2^1	; case 2
  3094  0DD0  1903               	skipnz
  3095  0DD1  2DA1               	goto	l2227
  3096  0DD2  3A01               	xorlw	3^2	; case 3
  3097  0DD3  1903               	skipnz
  3098  0DD4  2DA3               	goto	l10985
  3099  0DD5  3A07               	xorlw	4^3	; case 4
  3100  0DD6  1903               	skipnz
  3101  0DD7  2DB3               	goto	l10989
  3102  0DD8  3A01               	xorlw	5^4	; case 5
  3103  0DD9  1903               	skipnz
  3104  0DDA  2DC1               	goto	l10993
  3105  0DDB  2D93               	goto	l10979
  3106                           	opt asmopt_on
  3107                           
  3108                           	line	210
  3109                           	
  3110  0DDC                     l2226:	
  3111  0DDC  2D93               	goto	l10979
  3112                           	line	211
  3113                           	
  3114  0DDD                     l2233:	
  3115                           	line	167
  3116  0DDD  2D93               	goto	l10979
  3117                           	
  3118  0DDE                     l2234:	
  3119                           	line	212
  3120                           	
  3121  0DDE                     l2231:	
  3122  0DDE  0008               	return
  3123                           	opt stack 0
  3124                           GLOBAL	__end_of_calibrateIR
  3125  0DDF                     	__end_of_calibrateIR:
  3126 ;; =============== function _calibrateIR ends ============
  3127                           
  3128                           	signat	_calibrateIR,88
  3129                           	global	_readAvgDistance
  3130                           psect	text904,local,class=CODE,delta=2
  3131                           global __ptext904
  3132  0D2C                     __ptext904:
  3133                           
  3134 ;; *************** function _readAvgDistance *****************
  3135 ;; Defined at:
  3136 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  i               2   18[BANK0 ] int 
  3141 ;;  fullval         2   16[BANK0 ] unsigned int 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         0       4       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         0       4       0       0       0
  3155 ;;Total ram usage:        4 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    6
  3158 ;; This function calls:
  3159 ;;		_readDistance
  3160 ;;		___lwdiv
  3161 ;;		_ADCconvert
  3162 ;; This function is called by:
  3163 ;;		_scan360
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           psect	text904
  3168                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3169                           	line	10
  3170                           	global	__size_of_readAvgDistance
  3171  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3172                           	
  3173  0D2C                     _readAvgDistance:	
  3174                           	opt	stack 0
  3175                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3176                           	line	11
  3177                           	
  3178  0D2C                     l10961:	
  3179                           ;infrared.c: 11: unsigned int fullval = 0;
  3180  0D2C  1283               	bcf	status, 5	;RP0=0, select bank0
  3181  0D2D  1303               	bcf	status, 6	;RP1=0, select bank0
  3182  0D2E  01B0               	clrf	(readAvgDistance@fullval)
  3183  0D2F  01B1               	clrf	(readAvgDistance@fullval+1)
  3184                           	line	14
  3185                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3186  0D30  01B2               	clrf	(readAvgDistance@i)
  3187  0D31  01B3               	clrf	(readAvgDistance@i+1)
  3188                           	
  3189  0D32                     l10963:	
  3190  0D32  0833               	movf	(readAvgDistance@i+1),w
  3191  0D33  3A80               	xorlw	80h
  3192  0D34  00FF               	movwf	btemp+1
  3193  0D35  3080               	movlw	(high(0Ah))^80h
  3194  0D36  027F               	subwf	btemp+1,w
  3195  0D37  1D03               	skipz
  3196  0D38  2D3B               	goto	u4505
  3197  0D39  300A               	movlw	low(0Ah)
  3198  0D3A  0232               	subwf	(readAvgDistance@i),w
  3199  0D3B                     u4505:
  3200                           
  3201  0D3B  1C03               	skipc
  3202  0D3C  2D3E               	goto	u4501
  3203  0D3D  2D3F               	goto	u4500
  3204  0D3E                     u4501:
  3205  0D3E  2D41               	goto	l10967
  3206  0D3F                     u4500:
  3207  0D3F  2D62               	goto	l10973
  3208                           	
  3209  0D40                     l10965:	
  3210  0D40  2D62               	goto	l10973
  3211                           	line	15
  3212                           	
  3213  0D41                     l2983:	
  3214                           	line	16
  3215                           	
  3216  0D41                     l10967:	
  3217                           ;infrared.c: 15: {
  3218                           ;infrared.c: 16: fullval += readDistance();
  3219  0D41  120A  158A  214F   	fcall	_readDistance
              120A  158A         
  3220  0D46  1283               	bcf	status, 5	;RP0=0, select bank0
  3221  0D47  1303               	bcf	status, 6	;RP1=0, select bank0
  3222  0D48  0828               	movf	(0+(?_readDistance)),w
  3223  0D49  07B0               	addwf	(readAvgDistance@fullval),f
  3224  0D4A  1803               	skipnc
  3225  0D4B  0AB1               	incf	(readAvgDistance@fullval+1),f
  3226  0D4C  0829               	movf	(1+(?_readDistance)),w
  3227  0D4D  07B1               	addwf	(readAvgDistance@fullval+1),f
  3228                           	line	14
  3229                           	
  3230  0D4E                     l10969:	
  3231  0D4E  3001               	movlw	low(01h)
  3232  0D4F  07B2               	addwf	(readAvgDistance@i),f
  3233  0D50  1803               	skipnc
  3234  0D51  0AB3               	incf	(readAvgDistance@i+1),f
  3235  0D52  3000               	movlw	high(01h)
  3236  0D53  07B3               	addwf	(readAvgDistance@i+1),f
  3237                           	
  3238  0D54                     l10971:	
  3239  0D54  0833               	movf	(readAvgDistance@i+1),w
  3240  0D55  3A80               	xorlw	80h
  3241  0D56  00FF               	movwf	btemp+1
  3242  0D57  3080               	movlw	(high(0Ah))^80h
  3243  0D58  027F               	subwf	btemp+1,w
  3244  0D59  1D03               	skipz
  3245  0D5A  2D5D               	goto	u4515
  3246  0D5B  300A               	movlw	low(0Ah)
  3247  0D5C  0232               	subwf	(readAvgDistance@i),w
  3248  0D5D                     u4515:
  3249                           
  3250  0D5D  1C03               	skipc
  3251  0D5E  2D60               	goto	u4511
  3252  0D5F  2D61               	goto	u4510
  3253  0D60                     u4511:
  3254  0D60  2D41               	goto	l10967
  3255  0D61                     u4510:
  3256  0D61  2D62               	goto	l10973
  3257                           	
  3258  0D62                     l2984:	
  3259                           	line	19
  3260                           	
  3261  0D62                     l10973:	
  3262                           ;infrared.c: 18: }
  3263                           ;infrared.c: 19: adcVal = fullval / 10;
  3264  0D62  300A               	movlw	low(0Ah)
  3265  0D63  1283               	bcf	status, 5	;RP0=0, select bank0
  3266  0D64  1303               	bcf	status, 6	;RP1=0, select bank0
  3267  0D65  00A6               	movwf	(?___lwdiv)
  3268  0D66  3000               	movlw	high(0Ah)
  3269  0D67  00A7               	movwf	((?___lwdiv))+1
  3270  0D68  0831               	movf	(readAvgDistance@fullval+1),w
  3271  0D69  01A9               	clrf	1+(?___lwdiv)+02h
  3272  0D6A  07A9               	addwf	1+(?___lwdiv)+02h
  3273  0D6B  0830               	movf	(readAvgDistance@fullval),w
  3274  0D6C  01A8               	clrf	0+(?___lwdiv)+02h
  3275  0D6D  07A8               	addwf	0+(?___lwdiv)+02h
  3276                           
  3277  0D6E  120A  158A  248C   	fcall	___lwdiv
              120A  158A         
  3278  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  3279  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  3280  0D75  0827               	movf	(1+(?___lwdiv)),w
  3281  0D76  01EA               	clrf	(_adcVal+1)	;volatile
  3282  0D77  07EA               	addwf	(_adcVal+1)	;volatile
  3283  0D78  0826               	movf	(0+(?___lwdiv)),w
  3284  0D79  01E9               	clrf	(_adcVal)	;volatile
  3285  0D7A  07E9               	addwf	(_adcVal)	;volatile
  3286                           
  3287                           	line	20
  3288                           ;infrared.c: 20: ADCconvert();
  3289  0D7B  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  3290                           	line	21
  3291                           	
  3292  0D80                     l2985:	
  3293  0D80  0008               	return
  3294                           	opt stack 0
  3295                           GLOBAL	__end_of_readAvgDistance
  3296  0D81                     	__end_of_readAvgDistance:
  3297 ;; =============== function _readAvgDistance ends ============
  3298                           
  3299                           	signat	_readAvgDistance,88
  3300                           	global	_UpdateDisplay
  3301                           psect	text905,local,class=CODE,delta=2
  3302                           global __ptext905
  3303  0238                     __ptext905:
  3304                           
  3305 ;; *************** function _UpdateDisplay *****************
  3306 ;; Defined at:
  3307 ;;		line 216 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  adcOutput      16   41[BANK0 ] unsigned char [16]
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       0       0       0       0
  3322 ;;      Locals:         0      16       0       0       0
  3323 ;;      Temps:          0       4       0       0       0
  3324 ;;      Totals:         0      20       0       0       0
  3325 ;;Total ram usage:       20 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    5
  3328 ;; This function calls:
  3329 ;;		_lcd_write_control
  3330 ;;		_sprintf
  3331 ;;		_lcd_set_cursor
  3332 ;;		_lcd_write_string
  3333 ;;		___awmod
  3334 ;; This function is called by:
  3335 ;;		_calibrateIR
  3336 ;;		_ChargeMode
  3337 ;;		_scan360
  3338 ;;		_main
  3339 ;;		_robotMove
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           psect	text905
  3343                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3344                           	line	216
  3345                           	global	__size_of_UpdateDisplay
  3346  0158                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3347                           	
  3348  0238                     _UpdateDisplay:	
  3349                           	opt	stack 1
  3350                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3351                           	line	217
  3352                           	
  3353  0238                     l10917:	
  3354                           ;HMI.c: 217: char adcOutput[16] = "";
  3355  0238  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3356  0239  0084               	movwf	fsr0
  3357  023A  3090               	movlw	low(UpdateDisplay@F1229)
  3358  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  3359  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  3360  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  3361  023E  0804               	movf	fsr0,w
  3362  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3363  0240  3010               	movlw	16
  3364  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3365  0242                     u4480:
  3366  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  3367  0243  0084               	movwf	fsr0
  3368  0244  1783               	bsf	status, 7	;select IRP bank3
  3369                           	
  3370  0245  0800               	movf	indf,w
  3371  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3372  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3373  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3374  0249  0084               	movwf	fsr0
  3375  024A  1383               	bcf	status, 7	;select IRP bank0
  3376                           	
  3377  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3378  024C  0080               	movwf	indf
  3379  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3380  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3381  024F  2A42               	goto	u4480
  3382                           	line	218
  3383                           ;HMI.c: 218: switch (currentMenu)
  3384  0250  2B82               	goto	l10959
  3385                           	line	221
  3386                           ;HMI.c: 219: {
  3387                           ;HMI.c: 221: case 0:
  3388                           	
  3389  0251                     l4542:	
  3390                           	line	224
  3391                           	
  3392  0251                     l10919:	
  3393                           ;HMI.c: 224: lcd_write_control(0b00000001);
  3394  0251  3001               	movlw	(01h)
  3395  0252  120A  158A  2125   	fcall	_lcd_write_control
              120A  118A         
  3396                           	line	226
  3397                           	
  3398  0257                     l10921:	
  3399                           ;HMI.c: 226: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  3400  0257  302B               	movlw	((STR_13-__stringbase))&0ffh
  3401  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  3402  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  3403  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  3404  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  3405  025C  00B4               	movwf	(?_sprintf)
  3406  025D  086B               	movf	(_BumpSensors),w	;volatile
  3407  025E  00C6               	movwf	(??_UpdateDisplay+1)+0
  3408  025F  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3409  0260  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3410  0261  00B5               	movwf	0+(?_sprintf)+01h
  3411  0262  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3412  0263  00B6               	movwf	1+(?_sprintf)+01h
  3413  0264  1683               	bsf	status, 5	;RP0=1, select bank1
  3414  0265  1303               	bcf	status, 6	;RP1=0, select bank1
  3415  0266  0841               	movf	(_distTravelled+1)^080h,w
  3416  0267  1283               	bcf	status, 5	;RP0=0, select bank0
  3417  0268  1303               	bcf	status, 6	;RP1=0, select bank0
  3418  0269  01B8               	clrf	1+(?_sprintf)+03h
  3419  026A  07B8               	addwf	1+(?_sprintf)+03h
  3420  026B  1683               	bsf	status, 5	;RP0=1, select bank1
  3421  026C  1303               	bcf	status, 6	;RP1=0, select bank1
  3422  026D  0840               	movf	(_distTravelled)^080h,w
  3423  026E  1283               	bcf	status, 5	;RP0=0, select bank0
  3424  026F  1303               	bcf	status, 6	;RP1=0, select bank0
  3425  0270  01B7               	clrf	0+(?_sprintf)+03h
  3426  0271  07B7               	addwf	0+(?_sprintf)+03h
  3427                           
  3428  0272  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3429  0273  120A  118A  2495   	fcall	_sprintf
              120A  118A         
  3430                           	line	229
  3431                           	
  3432  0278                     l10923:	
  3433                           ;HMI.c: 229: lcd_set_cursor(0x00);
  3434  0278  3000               	movlw	(0)
  3435  0279  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3436                           	line	230
  3437                           ;HMI.c: 230: lcd_write_string(adcOutput);
  3438  027E  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3439  027F  1283               	bcf	status, 5	;RP0=0, select bank0
  3440  0280  1303               	bcf	status, 6	;RP1=0, select bank0
  3441  0281  00A7               	movwf	(?_lcd_write_string)
  3442  0282  3000               	movlw	(0x0/2)
  3443  0283  00A8               	movwf	(?_lcd_write_string+1)
  3444  0284  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3445                           	line	232
  3446                           	
  3447  0289                     l10925:	
  3448                           ;HMI.c: 232: lcd_set_cursor(0x40);
  3449  0289  3040               	movlw	(040h)
  3450  028A  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3451                           	line	233
  3452                           	
  3453  028F                     l10927:	
  3454                           ;HMI.c: 233: if (pos > 0)
  3455  028F  1683               	bsf	status, 5	;RP0=1, select bank1
  3456  0290  1303               	bcf	status, 6	;RP1=0, select bank1
  3457  0291  0849               	movf	(_pos+1)^080h,w
  3458  0292  3A80               	xorlw	80h
  3459  0293  00FF               	movwf	btemp+1
  3460  0294  3080               	movlw	(high(01h))^80h
  3461  0295  027F               	subwf	btemp+1,w
  3462  0296  1D03               	skipz
  3463  0297  2A9A               	goto	u4495
  3464  0298  3001               	movlw	low(01h)
  3465  0299  0248               	subwf	(_pos)^080h,w
  3466  029A                     u4495:
  3467                           
  3468  029A  1C03               	skipc
  3469  029B  2A9D               	goto	u4491
  3470  029C  2A9E               	goto	u4490
  3471  029D                     u4491:
  3472  029D  2AB1               	goto	l10931
  3473  029E                     u4490:
  3474                           	line	234
  3475                           	
  3476  029E                     l10929:	
  3477                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  3478  029E  1683               	bsf	status, 5	;RP0=1, select bank1
  3479  029F  1303               	bcf	status, 6	;RP1=0, select bank1
  3480  02A0  0848               	movf	(_pos)^080h,w
  3481  02A1  3EFF               	addlw	0FFh
  3482  02A2  3EE5               	addlw	_shortMenuStrings&0ffh
  3483  02A3  0084               	movwf	fsr0
  3484  02A4  1383               	bcf	status, 7	;select IRP bank1
  3485  02A5  0800               	movf	indf,w
  3486  02A6  1283               	bcf	status, 5	;RP0=0, select bank0
  3487  02A7  1303               	bcf	status, 6	;RP1=0, select bank0
  3488  02A8  00A7               	movwf	(?_lcd_write_string)
  3489  02A9  3080               	movlw	80h
  3490  02AA  00A8               	movwf	(?_lcd_write_string+1)
  3491  02AB  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3492  02B0  2AC4               	goto	l10933
  3493                           	line	235
  3494                           	
  3495  02B1                     l4543:	
  3496                           	line	236
  3497                           	
  3498  02B1                     l10931:	
  3499                           ;HMI.c: 235: else
  3500                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  3501  02B1  1683               	bsf	status, 5	;RP0=1, select bank1
  3502  02B2  1303               	bcf	status, 6	;RP1=0, select bank1
  3503  02B3  0848               	movf	(_pos)^080h,w
  3504  02B4  3E05               	addlw	05h
  3505  02B5  3EE5               	addlw	_shortMenuStrings&0ffh
  3506  02B6  0084               	movwf	fsr0
  3507  02B7  1383               	bcf	status, 7	;select IRP bank1
  3508  02B8  0800               	movf	indf,w
  3509  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  3510  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  3511  02BB  00A7               	movwf	(?_lcd_write_string)
  3512  02BC  3080               	movlw	80h
  3513  02BD  00A8               	movwf	(?_lcd_write_string+1)
  3514  02BE  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3515  02C3  2AC4               	goto	l10933
  3516                           	
  3517  02C4                     l4544:	
  3518                           	line	237
  3519                           	
  3520  02C4                     l10933:	
  3521                           ;HMI.c: 237: lcd_set_cursor(0x44);
  3522  02C4  3044               	movlw	(044h)
  3523  02C5  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3524                           	line	238
  3525                           	
  3526  02CA                     l10935:	
  3527                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  3528  02CA  1683               	bsf	status, 5	;RP0=1, select bank1
  3529  02CB  1303               	bcf	status, 6	;RP1=0, select bank1
  3530  02CC  0848               	movf	(_pos)^080h,w
  3531  02CD  3EDF               	addlw	_menuStrings&0ffh
  3532  02CE  0084               	movwf	fsr0
  3533  02CF  1383               	bcf	status, 7	;select IRP bank1
  3534  02D0  0800               	movf	indf,w
  3535  02D1  1283               	bcf	status, 5	;RP0=0, select bank0
  3536  02D2  1303               	bcf	status, 6	;RP1=0, select bank0
  3537  02D3  00A7               	movwf	(?_lcd_write_string)
  3538  02D4  3080               	movlw	80h
  3539  02D5  00A8               	movwf	(?_lcd_write_string+1)
  3540  02D6  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3541                           	line	239
  3542                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  3543  02DB  304D               	movlw	(04Dh)
  3544  02DC  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3545                           	line	240
  3546                           	
  3547  02E1                     l10937:	
  3548                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  3549  02E1  3006               	movlw	low(06h)
  3550  02E2  1283               	bcf	status, 5	;RP0=0, select bank0
  3551  02E3  1303               	bcf	status, 6	;RP1=0, select bank0
  3552  02E4  00A0               	movwf	(?___awmod)
  3553  02E5  3000               	movlw	high(06h)
  3554  02E6  00A1               	movwf	((?___awmod))+1
  3555  02E7  1683               	bsf	status, 5	;RP0=1, select bank1
  3556  02E8  1303               	bcf	status, 6	;RP1=0, select bank1
  3557  02E9  0848               	movf	(_pos)^080h,w
  3558  02EA  3E01               	addlw	low(01h)
  3559  02EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3560  02EC  1303               	bcf	status, 6	;RP1=0, select bank0
  3561  02ED  00A2               	movwf	0+(?___awmod)+02h
  3562  02EE  1683               	bsf	status, 5	;RP0=1, select bank1
  3563  02EF  1303               	bcf	status, 6	;RP1=0, select bank1
  3564  02F0  0849               	movf	(_pos+1)^080h,w
  3565  02F1  1803               	skipnc
  3566  02F2  3E01               	addlw	1
  3567  02F3  3E00               	addlw	high(01h)
  3568  02F4  1283               	bcf	status, 5	;RP0=0, select bank0
  3569  02F5  1303               	bcf	status, 6	;RP1=0, select bank0
  3570  02F6  00A3               	movwf	1+0+(?___awmod)+02h
  3571  02F7  120A  158A  25DF   	fcall	___awmod
              120A  118A         
  3572  02FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3573  02FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3574  02FE  0820               	movf	(0+(?___awmod)),w
  3575  02FF  3EE5               	addlw	_shortMenuStrings&0ffh
  3576  0300  0084               	movwf	fsr0
  3577  0301  1383               	bcf	status, 7	;select IRP bank1
  3578  0302  0800               	movf	indf,w
  3579  0303  00A7               	movwf	(?_lcd_write_string)
  3580  0304  3080               	movlw	80h
  3581  0305  00A8               	movwf	(?_lcd_write_string+1)
  3582  0306  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3583                           	line	241
  3584                           ;HMI.c: 241: break;
  3585  030B  2B8F               	goto	l4549
  3586                           	line	242
  3587                           ;HMI.c: 242: case 1:
  3588                           	
  3589  030C                     l4546:	
  3590                           	line	243
  3591                           	
  3592  030C                     l10939:	
  3593                           ;HMI.c: 243: lcd_write_control(0b00000001);
  3594  030C  3001               	movlw	(01h)
  3595  030D  120A  158A  2125   	fcall	_lcd_write_control
              120A  118A         
  3596                           	line	245
  3597                           ;HMI.c: 245: lcd_set_cursor(0x00);
  3598  0312  3000               	movlw	(0)
  3599  0313  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3600                           	line	246
  3601                           	
  3602  0318                     l10941:	
  3603                           ;HMI.c: 246: lcd_write_string("Zero Step_Motor");
  3604  0318  301B               	movlw	low((STR_14-__stringbase))
  3605  0319  1283               	bcf	status, 5	;RP0=0, select bank0
  3606  031A  1303               	bcf	status, 6	;RP1=0, select bank0
  3607  031B  00A7               	movwf	(?_lcd_write_string)
  3608  031C  3080               	movlw	80h
  3609  031D  00A8               	movwf	(?_lcd_write_string+1)
  3610  031E  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3611                           	line	251
  3612                           	
  3613  0323                     l10943:	
  3614                           ;HMI.c: 251: lcd_set_cursor(0x40);
  3615  0323  3040               	movlw	(040h)
  3616  0324  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3617                           	line	253
  3618                           ;HMI.c: 253: lcd_write_string("<<<");
  3619  0329  3084               	movlw	low((STR_15-__stringbase))
  3620  032A  1283               	bcf	status, 5	;RP0=0, select bank0
  3621  032B  1303               	bcf	status, 6	;RP1=0, select bank0
  3622  032C  00A7               	movwf	(?_lcd_write_string)
  3623  032D  3080               	movlw	80h
  3624  032E  00A8               	movwf	(?_lcd_write_string+1)
  3625  032F  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3626                           	line	256
  3627                           	
  3628  0334                     l10945:	
  3629                           ;HMI.c: 256: lcd_set_cursor(0x44);
  3630  0334  3044               	movlw	(044h)
  3631  0335  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3632                           	line	257
  3633                           	
  3634  033A                     l10947:	
  3635                           ;HMI.c: 257: lcd_write_string("CONFIRM");
  3636  033A  3078               	movlw	low((STR_16-__stringbase))
  3637  033B  1283               	bcf	status, 5	;RP0=0, select bank0
  3638  033C  1303               	bcf	status, 6	;RP1=0, select bank0
  3639  033D  00A7               	movwf	(?_lcd_write_string)
  3640  033E  3080               	movlw	80h
  3641  033F  00A8               	movwf	(?_lcd_write_string+1)
  3642  0340  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3643                           	line	258
  3644                           ;HMI.c: 258: lcd_set_cursor(0x4D);
  3645  0345  304D               	movlw	(04Dh)
  3646  0346  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3647                           	line	259
  3648                           	
  3649  034B                     l10949:	
  3650                           ;HMI.c: 259: lcd_write_string(">>>");
  3651  034B  3088               	movlw	low((STR_17-__stringbase))
  3652  034C  1283               	bcf	status, 5	;RP0=0, select bank0
  3653  034D  1303               	bcf	status, 6	;RP1=0, select bank0
  3654  034E  00A7               	movwf	(?_lcd_write_string)
  3655  034F  3080               	movlw	80h
  3656  0350  00A8               	movwf	(?_lcd_write_string+1)
  3657  0351  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3658                           	line	260
  3659                           ;HMI.c: 260: break;
  3660  0356  2B8F               	goto	l4549
  3661                           	line	261
  3662                           ;HMI.c: 261: case 2:
  3663                           	
  3664  0357                     l4547:	
  3665                           	line	262
  3666                           	
  3667  0357                     l10951:	
  3668                           ;HMI.c: 262: lcd_write_control(0b00000001);
  3669  0357  3001               	movlw	(01h)
  3670  0358  120A  158A  2125   	fcall	_lcd_write_control
              120A  118A         
  3671                           	line	264
  3672                           ;HMI.c: 264: lcd_set_cursor(0x00);
  3673  035D  3000               	movlw	(0)
  3674  035E  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3675                           	line	265
  3676                           	
  3677  0363                     l10953:	
  3678                           ;HMI.c: 265: lcd_write_string(" Charging Mode ");
  3679  0363  300B               	movlw	low((STR_18-__stringbase))
  3680  0364  1283               	bcf	status, 5	;RP0=0, select bank0
  3681  0365  1303               	bcf	status, 6	;RP1=0, select bank0
  3682  0366  00A7               	movwf	(?_lcd_write_string)
  3683  0367  3080               	movlw	80h
  3684  0368  00A8               	movwf	(?_lcd_write_string+1)
  3685  0369  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3686                           	line	269
  3687                           	
  3688  036E                     l10955:	
  3689                           ;HMI.c: 269: lcd_set_cursor(0x44);
  3690  036E  3044               	movlw	(044h)
  3691  036F  120A  158A  20D3   	fcall	_lcd_set_cursor
              120A  118A         
  3692                           	line	270
  3693                           ;HMI.c: 270: lcd_write_string("  EXIT  ");
  3694  0374  303A               	movlw	low((STR_19-__stringbase))
  3695  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  3696  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  3697  0377  00A7               	movwf	(?_lcd_write_string)
  3698  0378  3080               	movlw	80h
  3699  0379  00A8               	movwf	(?_lcd_write_string+1)
  3700  037A  120A  158A  2280   	fcall	_lcd_write_string
              120A  118A         
  3701                           	line	272
  3702                           ;HMI.c: 272: break;
  3703  037F  2B8F               	goto	l4549
  3704                           	line	274
  3705                           ;HMI.c: 274: default:
  3706                           	
  3707  0380                     l4548:	
  3708                           	line	276
  3709                           ;HMI.c: 276: break;
  3710  0380  2B8F               	goto	l4549
  3711                           	line	279
  3712                           	
  3713  0381                     l10957:	
  3714                           ;HMI.c: 279: }
  3715  0381  2B8F               	goto	l4549
  3716                           	line	218
  3717                           	
  3718  0382                     l4541:	
  3719                           	
  3720  0382                     l10959:	
  3721  0382  1683               	bsf	status, 5	;RP0=1, select bank1
  3722  0383  1303               	bcf	status, 6	;RP1=0, select bank1
  3723  0384  0857               	movf	(_currentMenu)^080h,w	;volatile
  3724                           	; Switch size 1, requested type "space"
  3725                           ; Number of cases is 3, Range of values is 0 to 2
  3726                           ; switch strategies available:
  3727                           ; Name         Instructions Cycles
  3728                           ; simple_byte           10     6 (average)
  3729                           ; direct_byte           17     8 (fixed)
  3730                           ; jumptable            260     6 (fixed)
  3731                           ; rangetable             7     6 (fixed)
  3732                           ; spacedrange           12     9 (fixed)
  3733                           ; locatedrange           3     3 (fixed)
  3734                           ;	Chosen strategy is simple_byte
  3735                           
  3736                           	opt asmopt_off
  3737  0385  3A00               	xorlw	0^0	; case 0
  3738  0386  1903               	skipnz
  3739  0387  2A51               	goto	l10919
  3740  0388  3A01               	xorlw	1^0	; case 1
  3741  0389  1903               	skipnz
  3742  038A  2B0C               	goto	l10939
  3743  038B  3A03               	xorlw	2^1	; case 2
  3744  038C  1903               	skipnz
  3745  038D  2B57               	goto	l10951
  3746  038E  2B8F               	goto	l4549
  3747                           	opt asmopt_on
  3748                           
  3749                           	line	279
  3750                           	
  3751  038F                     l4545:	
  3752                           	line	280
  3753                           	
  3754  038F                     l4549:	
  3755  038F  0008               	return
  3756                           	opt stack 0
  3757                           GLOBAL	__end_of_UpdateDisplay
  3758  0390                     	__end_of_UpdateDisplay:
  3759 ;; =============== function _UpdateDisplay ends ============
  3760                           
  3761                           	signat	_UpdateDisplay,88
  3762                           	global	_init
  3763                           psect	text906,local,class=CODE,delta=2
  3764                           global __ptext906
  3765  0AAC                     __ptext906:
  3766                           
  3767 ;; *************** function _init *****************
  3768 ;; Defined at:
  3769 ;;		line 135 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0
  3785 ;;      Temps:          0       1       0       0       0
  3786 ;;      Totals:         0       1       0       0       0
  3787 ;;Total ram usage:        1 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    5
  3790 ;; This function calls:
  3791 ;;		_ser_init
  3792 ;;		_init_adc
  3793 ;;		_lcd_init
  3794 ;;		_robo_init
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           psect	text906
  3800                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3801                           	line	135
  3802                           	global	__size_of_init
  3803  002F                     	__size_of_init	equ	__end_of_init-_init
  3804                           	
  3805  0AAC                     _init:	
  3806                           	opt	stack 2
  3807                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3808                           	line	138
  3809                           	
  3810  0AAC                     l10891:	
  3811                           ;Main.c: 138: buttonPressed = 0;
  3812  0AAC  01FD               	clrf	(_buttonPressed)	;volatile
  3813                           	line	142
  3814                           	
  3815  0AAD                     l10893:	
  3816                           ;Main.c: 142: TRISC &= 0b10010000;
  3817  0AAD  3090               	movlw	(090h)
  3818  0AAE  1283               	bcf	status, 5	;RP0=0, select bank0
  3819  0AAF  1303               	bcf	status, 6	;RP1=0, select bank0
  3820  0AB0  00A3               	movwf	(??_init+0)+0
  3821  0AB1  0823               	movf	(??_init+0)+0,w
  3822  0AB2  1683               	bsf	status, 5	;RP0=1, select bank1
  3823  0AB3  1303               	bcf	status, 6	;RP1=0, select bank1
  3824  0AB4  0587               	andwf	(135)^080h,f	;volatile
  3825                           	line	144
  3826                           	
  3827  0AB5                     l10895:	
  3828                           ;Main.c: 144: SSPSTAT = 0b01000000;
  3829  0AB5  3040               	movlw	(040h)
  3830  0AB6  0094               	movwf	(148)^080h	;volatile
  3831                           	line	145
  3832                           	
  3833  0AB7                     l10897:	
  3834                           ;Main.c: 145: SSPCON = 0b10100001;
  3835  0AB7  30A1               	movlw	(0A1h)
  3836  0AB8  1283               	bcf	status, 5	;RP0=0, select bank0
  3837  0AB9  1303               	bcf	status, 6	;RP1=0, select bank0
  3838  0ABA  0094               	movwf	(20)	;volatile
  3839                           	line	147
  3840                           	
  3841  0ABB                     l10899:	
  3842                           ;Main.c: 147: OPTION_REG = 0b00000100;
  3843  0ABB  3004               	movlw	(04h)
  3844  0ABC  1683               	bsf	status, 5	;RP0=1, select bank1
  3845  0ABD  1303               	bcf	status, 6	;RP1=0, select bank1
  3846  0ABE  0081               	movwf	(129)^080h	;volatile
  3847                           	line	148
  3848                           	
  3849  0ABF                     l10901:	
  3850                           ;Main.c: 148: ser_init();
  3851  0ABF  120A  158A  21D8   	fcall	_ser_init
              120A  158A         
  3852                           	line	149
  3853                           	
  3854  0AC4                     l10903:	
  3855                           ;Main.c: 149: init_adc();
  3856  0AC4  120A  158A  2139   	fcall	_init_adc
              120A  158A         
  3857                           	line	150
  3858                           	
  3859  0AC9                     l10905:	
  3860                           ;Main.c: 150: lcd_init();
  3861  0AC9  120A  158A  2229   	fcall	_lcd_init
              120A  158A         
  3862                           	line	151
  3863                           	
  3864  0ACE                     l10907:	
  3865                           ;Main.c: 151: robo_init();
  3866  0ACE  120A  158A  217C   	fcall	_robo_init
              120A  158A         
  3867                           	line	152
  3868                           	
  3869  0AD3                     l10909:	
  3870                           ;Main.c: 152: TRISB = 0b11111100;
  3871  0AD3  30FC               	movlw	(0FCh)
  3872  0AD4  1683               	bsf	status, 5	;RP0=1, select bank1
  3873  0AD5  1303               	bcf	status, 6	;RP1=0, select bank1
  3874  0AD6  0086               	movwf	(134)^080h	;volatile
  3875                           	line	154
  3876                           	
  3877  0AD7                     l10911:	
  3878                           ;Main.c: 154: TMR0IE = 1;
  3879  0AD7  168B               	bsf	(93/8),(93)&7
  3880                           	line	155
  3881                           	
  3882  0AD8                     l10913:	
  3883                           ;Main.c: 155: PEIE=1;
  3884  0AD8  170B               	bsf	(94/8),(94)&7
  3885                           	line	157
  3886                           	
  3887  0AD9                     l10915:	
  3888                           ;Main.c: 157: (GIE = 1);
  3889  0AD9  178B               	bsf	(95/8),(95)&7
  3890                           	line	158
  3891                           	
  3892  0ADA                     l2219:	
  3893  0ADA  0008               	return
  3894                           	opt stack 0
  3895                           GLOBAL	__end_of_init
  3896  0ADB                     	__end_of_init:
  3897 ;; =============== function _init ends ============
  3898                           
  3899                           	signat	_init,88
  3900                           	global	_readDistance
  3901                           psect	text907,local,class=CODE,delta=2
  3902                           global __ptext907
  3903  094F                     __ptext907:
  3904                           
  3905 ;; *************** function _readDistance *****************
  3906 ;; Defined at:
  3907 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  fullval         2   12[BANK0 ] unsigned int 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2    8[BANK0 ] unsigned int 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       2       0       0       0
  3922 ;;      Locals:         0       2       0       0       0
  3923 ;;      Temps:          0       2       0       0       0
  3924 ;;      Totals:         0       6       0       0       0
  3925 ;;Total ram usage:        6 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    5
  3928 ;; This function calls:
  3929 ;;		_adc_read_channel
  3930 ;; This function is called by:
  3931 ;;		_readAvgDistance
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           psect	text907
  3935                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3936                           	line	24
  3937                           	global	__size_of_readDistance
  3938  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3939                           	
  3940  094F                     _readDistance:	
  3941                           	opt	stack 0
  3942                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3943                           	line	27
  3944                           	
  3945  094F                     l10885:	
  3946                           ;infrared.c: 25: unsigned int fullval ;
  3947                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3948  094F  3000               	movlw	(0)
  3949  0950  120A  158A  233A   	fcall	_adc_read_channel
              120A  158A         
  3950  0955  1283               	bcf	status, 5	;RP0=0, select bank0
  3951  0956  1303               	bcf	status, 6	;RP1=0, select bank0
  3952  0957  00AA               	movwf	(??_readDistance+0)+0
  3953  0958  01AB               	clrf	(??_readDistance+0)+0+1
  3954  0959  082A               	movf	0+(??_readDistance+0)+0,w
  3955  095A  00AC               	movwf	(readDistance@fullval)
  3956  095B  082B               	movf	1+(??_readDistance+0)+0,w
  3957  095C  00AD               	movwf	(readDistance@fullval+1)
  3958                           	line	29
  3959                           	
  3960  095D                     l10887:	
  3961                           ;infrared.c: 29: return fullval;
  3962  095D  082D               	movf	(readDistance@fullval+1),w
  3963  095E  01A9               	clrf	(?_readDistance+1)
  3964  095F  07A9               	addwf	(?_readDistance+1)
  3965  0960  082C               	movf	(readDistance@fullval),w
  3966  0961  01A8               	clrf	(?_readDistance)
  3967  0962  07A8               	addwf	(?_readDistance)
  3968                           
  3969  0963  2964               	goto	l2988
  3970                           	
  3971  0964                     l10889:	
  3972                           	line	30
  3973                           	
  3974  0964                     l2988:	
  3975  0964  0008               	return
  3976                           	opt stack 0
  3977                           GLOBAL	__end_of_readDistance
  3978  0965                     	__end_of_readDistance:
  3979 ;; =============== function _readDistance ends ============
  3980                           
  3981                           	signat	_readDistance,90
  3982                           	global	_robot_read
  3983                           psect	text908,local,class=CODE,delta=2
  3984                           global __ptext908
  3985  07AF                     __ptext908:
  3986                           
  3987 ;; *************** function _robot_read *****************
  3988 ;; Defined at:
  3989 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          0       2       0       0       0
  4006 ;;      Totals:         0       2       0       0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    5
  4010 ;; This function calls:
  4011 ;;		_ser_putch
  4012 ;;		_ser_getch
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;;		_robotMove
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           psect	text908
  4019                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4020                           	line	18
  4021                           	global	__size_of_robot_read
  4022  0051                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  4023                           	
  4024  07AF                     _robot_read:	
  4025                           	opt	stack 1
  4026                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4027                           	line	23
  4028                           	
  4029  07AF                     l10871:	
  4030                           ;robot.c: 23: ser_putch (142);
  4031  07AF  308E               	movlw	(08Eh)
  4032  07B0  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  4033                           	line	24
  4034                           ;robot.c: 24: ser_putch (7);
  4035  07B5  3007               	movlw	(07h)
  4036  07B6  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  4037                           	line	25
  4038                           	
  4039  07BB                     l10873:	
  4040                           ;robot.c: 25: _delay((unsigned long)((5)*(20000000/4000.0)));
  4041                           	opt asmopt_off
  4042  07BB  3021               movlw	33
  4043  07BC  1283               	bcf	status, 5	;RP0=0, select bank0
  4044  07BD  1303               	bcf	status, 6	;RP1=0, select bank0
  4045  07BE  00A3               movwf	((??_robot_read+0)+0+1),f
  4046  07BF  3076               	movlw	118
  4047  07C0  00A2               movwf	((??_robot_read+0)+0),f
  4048  07C1                     u4647:
  4049  07C1  0BA2               	decfsz	((??_robot_read+0)+0),f
  4050  07C2  2FC1               	goto	u4647
  4051  07C3  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4052  07C4  2FC1               	goto	u4647
  4053  07C5  0064               	clrwdt
  4054                           opt asmopt_on
  4055                           
  4056                           	line	26
  4057                           	
  4058  07C6                     l10875:	
  4059                           ;robot.c: 26: BumpSensors = ser_getch();
  4060  07C6  120A  158A  21B6   	fcall	_ser_getch
              120A  118A         
  4061  07CB  1283               	bcf	status, 5	;RP0=0, select bank0
  4062  07CC  1303               	bcf	status, 6	;RP1=0, select bank0
  4063  07CD  00A2               	movwf	(??_robot_read+0)+0
  4064  07CE  0822               	movf	(??_robot_read+0)+0,w
  4065  07CF  00EB               	movwf	(_BumpSensors)	;volatile
  4066                           	line	27
  4067                           	
  4068  07D0                     l10877:	
  4069                           ;robot.c: 27: ser_putch (142);
  4070  07D0  308E               	movlw	(08Eh)
  4071  07D1  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  4072                           	line	28
  4073                           	
  4074  07D6                     l10879:	
  4075                           ;robot.c: 28: ser_putch (19);
  4076  07D6  3013               	movlw	(013h)
  4077  07D7  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  4078                           	line	29
  4079                           ;robot.c: 29: _delay((unsigned long)((5)*(20000000/4000.0)));
  4080                           	opt asmopt_off
  4081  07DC  3021               movlw	33
  4082  07DD  1283               	bcf	status, 5	;RP0=0, select bank0
  4083  07DE  1303               	bcf	status, 6	;RP1=0, select bank0
  4084  07DF  00A3               movwf	((??_robot_read+0)+0+1),f
  4085  07E0  3076               	movlw	118
  4086  07E1  00A2               movwf	((??_robot_read+0)+0),f
  4087  07E2                     u4657:
  4088  07E2  0BA2               	decfsz	((??_robot_read+0)+0),f
  4089  07E3  2FE2               	goto	u4657
  4090  07E4  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4091  07E5  2FE2               	goto	u4657
  4092  07E6  0064               	clrwdt
  4093                           opt asmopt_on
  4094                           
  4095                           	line	30
  4096                           	
  4097  07E7                     l10881:	
  4098                           ;robot.c: 30: DistHighByte = ser_getch();
  4099  07E7  120A  158A  21B6   	fcall	_ser_getch
              120A  118A         
  4100  07EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4101  07ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4102  07EE  00A2               	movwf	(??_robot_read+0)+0
  4103  07EF  0822               	movf	(??_robot_read+0)+0,w
  4104  07F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4105  07F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4106  07F2  00D1               	movwf	(_DistHighByte)^080h	;volatile
  4107                           	line	31
  4108                           	
  4109  07F3                     l10883:	
  4110                           ;robot.c: 31: DistLowByte = ser_getch();
  4111  07F3  120A  158A  21B6   	fcall	_ser_getch
              120A  118A         
  4112  07F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4113  07F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4114  07FA  00A2               	movwf	(??_robot_read+0)+0
  4115  07FB  0822               	movf	(??_robot_read+0)+0,w
  4116  07FC  1683               	bsf	status, 5	;RP0=1, select bank1
  4117  07FD  1303               	bcf	status, 6	;RP1=0, select bank1
  4118  07FE  00D2               	movwf	(_DistLowByte)^080h	;volatile
  4119                           	line	33
  4120                           	
  4121  07FF                     l6008:	
  4122  07FF  0008               	return
  4123                           	opt stack 0
  4124                           GLOBAL	__end_of_robot_read
  4125  0800                     	__end_of_robot_read:
  4126 ;; =============== function _robot_read ends ============
  4127                           
  4128                           	signat	_robot_read,88
  4129                           	global	_lcd_init
  4130                           psect	text909,local,class=CODE,delta=2
  4131                           global __ptext909
  4132  0A29                     __ptext909:
  4133                           
  4134 ;; *************** function _lcd_init *****************
  4135 ;; Defined at:
  4136 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;		None               void
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0, pclath, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    4
  4157 ;; This function calls:
  4158 ;;		_lcd_write_control
  4159 ;; This function is called by:
  4160 ;;		_init
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           psect	text909
  4164                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4165                           	line	101
  4166                           	global	__size_of_lcd_init
  4167  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4168                           	
  4169  0A29                     _lcd_init:	
  4170                           	opt	stack 2
  4171                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4172                           	line	105
  4173                           	
  4174  0A29                     l10851:	
  4175                           ;lcd.c: 105: ADCON1 = 0b00000010;
  4176  0A29  3002               	movlw	(02h)
  4177  0A2A  1683               	bsf	status, 5	;RP0=1, select bank1
  4178  0A2B  1303               	bcf	status, 6	;RP1=0, select bank1
  4179  0A2C  009F               	movwf	(159)^080h	;volatile
  4180                           	line	108
  4181                           	
  4182  0A2D                     l10853:	
  4183                           ;lcd.c: 108: PORTD = 0;
  4184  0A2D  1283               	bcf	status, 5	;RP0=0, select bank0
  4185  0A2E  1303               	bcf	status, 6	;RP1=0, select bank0
  4186  0A2F  0188               	clrf	(8)	;volatile
  4187                           	line	109
  4188                           	
  4189  0A30                     l10855:	
  4190                           ;lcd.c: 109: PORTE = 0;
  4191  0A30  0189               	clrf	(9)	;volatile
  4192                           	line	111
  4193                           	
  4194  0A31                     l10857:	
  4195                           ;lcd.c: 111: TRISD = 0b00000000;
  4196  0A31  1683               	bsf	status, 5	;RP0=1, select bank1
  4197  0A32  1303               	bcf	status, 6	;RP1=0, select bank1
  4198  0A33  0188               	clrf	(136)^080h	;volatile
  4199                           	line	112
  4200                           	
  4201  0A34                     l10859:	
  4202                           ;lcd.c: 112: TRISE = 0b00000000;
  4203  0A34  0189               	clrf	(137)^080h	;volatile
  4204                           	line	115
  4205                           	
  4206  0A35                     l10861:	
  4207                           ;lcd.c: 115: lcd_write_control(0b00000001);
  4208  0A35  3001               	movlw	(01h)
  4209  0A36  120A  158A  2125   	fcall	_lcd_write_control
              120A  158A         
  4210                           	line	116
  4211                           	
  4212  0A3B                     l10863:	
  4213                           ;lcd.c: 116: lcd_write_control(0b00111000);
  4214  0A3B  3038               	movlw	(038h)
  4215  0A3C  120A  158A  2125   	fcall	_lcd_write_control
              120A  158A         
  4216                           	line	117
  4217                           	
  4218  0A41                     l10865:	
  4219                           ;lcd.c: 117: lcd_write_control(0b00001100);
  4220  0A41  300C               	movlw	(0Ch)
  4221  0A42  120A  158A  2125   	fcall	_lcd_write_control
              120A  158A         
  4222                           	line	118
  4223                           	
  4224  0A47                     l10867:	
  4225                           ;lcd.c: 118: lcd_write_control(0b00000110);
  4226  0A47  3006               	movlw	(06h)
  4227  0A48  120A  158A  2125   	fcall	_lcd_write_control
              120A  158A         
  4228                           	line	119
  4229                           	
  4230  0A4D                     l10869:	
  4231                           ;lcd.c: 119: lcd_write_control(0b00000010);
  4232  0A4D  3002               	movlw	(02h)
  4233  0A4E  120A  158A  2125   	fcall	_lcd_write_control
              120A  158A         
  4234                           	line	121
  4235                           	
  4236  0A53                     l1429:	
  4237  0A53  0008               	return
  4238                           	opt stack 0
  4239                           GLOBAL	__end_of_lcd_init
  4240  0A54                     	__end_of_lcd_init:
  4241 ;; =============== function _lcd_init ends ============
  4242                           
  4243                           	signat	_lcd_init,88
  4244                           	global	_lcd_write_string
  4245                           psect	text910,local,class=CODE,delta=2
  4246                           global __ptext910
  4247  0A80                     __ptext910:
  4248                           
  4249 ;; *************** function _lcd_write_string *****************
  4250 ;; Defined at:
  4251 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  s               2    7[BANK0 ] PTR unsigned char 
  4254 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  4255 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@adcOutput(16), STR_12(4), 
  4256 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  4257 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  4258 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         0       2       0       0       0
  4271 ;;      Locals:         0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0
  4273 ;;      Totals:         0       2       0       0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    4
  4277 ;; This function calls:
  4278 ;;		_lcd_write_data
  4279 ;; This function is called by:
  4280 ;;		_UpdateDisplay
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           psect	text910
  4284                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4285                           	line	48
  4286                           	global	__size_of_lcd_write_string
  4287  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4288                           	
  4289  0A80                     _lcd_write_string:	
  4290                           	opt	stack 1
  4291                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4292                           	line	50
  4293                           	
  4294  0A80                     l10843:	
  4295                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4296  0A80  2A9A               	goto	l10849
  4297                           	
  4298  0A81                     l1409:	
  4299                           	
  4300  0A81                     l10845:	
  4301  0A81  1283               	bcf	status, 5	;RP0=0, select bank0
  4302  0A82  1303               	bcf	status, 6	;RP1=0, select bank0
  4303  0A83  0828               	movf	(lcd_write_string@s+1),w
  4304  0A84  00FF               	movwf	btemp+1
  4305  0A85  0827               	movf	(lcd_write_string@s),w
  4306  0A86  0084               	movwf	fsr0
  4307  0A87  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4308  0A8C  120A  158A  20EB   	fcall	_lcd_write_data
              120A  158A         
  4309                           	
  4310  0A91                     l10847:	
  4311  0A91  3001               	movlw	low(01h)
  4312  0A92  1283               	bcf	status, 5	;RP0=0, select bank0
  4313  0A93  1303               	bcf	status, 6	;RP1=0, select bank0
  4314  0A94  07A7               	addwf	(lcd_write_string@s),f
  4315  0A95  1803               	skipnc
  4316  0A96  0AA8               	incf	(lcd_write_string@s+1),f
  4317  0A97  3000               	movlw	high(01h)
  4318  0A98  07A8               	addwf	(lcd_write_string@s+1),f
  4319  0A99  2A9A               	goto	l10849
  4320                           	
  4321  0A9A                     l1408:	
  4322                           	
  4323  0A9A                     l10849:	
  4324  0A9A  1283               	bcf	status, 5	;RP0=0, select bank0
  4325  0A9B  1303               	bcf	status, 6	;RP1=0, select bank0
  4326  0A9C  0828               	movf	(lcd_write_string@s+1),w
  4327  0A9D  00FF               	movwf	btemp+1
  4328  0A9E  0827               	movf	(lcd_write_string@s),w
  4329  0A9F  0084               	movwf	fsr0
  4330  0AA0  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4331  0AA5  3800               	iorlw	0
  4332  0AA6  1D03               	skipz
  4333  0AA7  2AA9               	goto	u4471
  4334  0AA8  2AAA               	goto	u4470
  4335  0AA9                     u4471:
  4336  0AA9  2A81               	goto	l10845
  4337  0AAA                     u4470:
  4338  0AAA  2AAB               	goto	l1411
  4339                           	
  4340  0AAB                     l1410:	
  4341                           	line	51
  4342                           	
  4343  0AAB                     l1411:	
  4344  0AAB  0008               	return
  4345                           	opt stack 0
  4346                           GLOBAL	__end_of_lcd_write_string
  4347  0AAC                     	__end_of_lcd_write_string:
  4348 ;; =============== function _lcd_write_string ends ============
  4349                           
  4350                           	signat	_lcd_write_string,4216
  4351                           	global	_lcd_set_cursor
  4352                           psect	text911,local,class=CODE,delta=2
  4353                           global __ptext911
  4354  08D3                     __ptext911:
  4355                           
  4356 ;; *************** function _lcd_set_cursor *****************
  4357 ;; Defined at:
  4358 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  address         1    wreg     unsigned char 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  address         1    3[BANK0 ] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;		None               void
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4372 ;;      Params:         0       0       0       0       0
  4373 ;;      Locals:         0       1       0       0       0
  4374 ;;      Temps:          0       0       0       0       0
  4375 ;;      Totals:         0       1       0       0       0
  4376 ;;Total ram usage:        1 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    4
  4379 ;; This function calls:
  4380 ;;		_lcd_write_control
  4381 ;; This function is called by:
  4382 ;;		_UpdateDisplay
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           psect	text911
  4386                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4387                           	line	42
  4388                           	global	__size_of_lcd_set_cursor
  4389  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4390                           	
  4391  08D3                     _lcd_set_cursor:	
  4392                           	opt	stack 1
  4393                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4394                           ;lcd_set_cursor@address stored from wreg
  4395  08D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4396  08D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4397  08D5  00A3               	movwf	(lcd_set_cursor@address)
  4398                           	line	43
  4399                           	
  4400  08D6                     l10839:	
  4401                           ;lcd.c: 43: address |= 0b10000000;
  4402  08D6  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4403                           	line	44
  4404                           	
  4405  08D7                     l10841:	
  4406                           ;lcd.c: 44: lcd_write_control(address);
  4407  08D7  0823               	movf	(lcd_set_cursor@address),w
  4408  08D8  120A  158A  2125   	fcall	_lcd_write_control
              120A  158A         
  4409                           	line	45
  4410                           	
  4411  08DD                     l1405:	
  4412  08DD  0008               	return
  4413                           	opt stack 0
  4414                           GLOBAL	__end_of_lcd_set_cursor
  4415  08DE                     	__end_of_lcd_set_cursor:
  4416 ;; =============== function _lcd_set_cursor ends ============
  4417                           
  4418                           	signat	_lcd_set_cursor,4216
  4419                           	global	_ser_getch
  4420                           psect	text912,local,class=CODE,delta=2
  4421                           global __ptext912
  4422  09B6                     __ptext912:
  4423                           
  4424 ;; *************** function _ser_getch *****************
  4425 ;; Defined at:
  4426 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  c               1    1[BANK0 ] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      unsigned char 
  4433 ;; Registers used:
  4434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4440 ;;      Params:         0       0       0       0       0
  4441 ;;      Locals:         0       1       0       0       0
  4442 ;;      Temps:          0       1       0       0       0
  4443 ;;      Totals:         0       2       0       0       0
  4444 ;;Total ram usage:        2 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    4
  4447 ;; This function calls:
  4448 ;;		_ser_isrx
  4449 ;; This function is called by:
  4450 ;;		_robot_read
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           psect	text912
  4454                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  4455                           	line	55
  4456                           	global	__size_of_ser_getch
  4457  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  4458                           	
  4459  09B6                     _ser_getch:	
  4460                           	opt	stack 1
  4461                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4462                           	line	58
  4463                           	
  4464  09B6                     l10823:	
  4465                           ;ser.c: 56: unsigned char c;
  4466                           ;ser.c: 58: while (ser_isrx()==0)
  4467  09B6  29B8               	goto	l10825
  4468                           	
  4469  09B7                     l6726:	
  4470                           	line	59
  4471                           ;ser.c: 59: continue;
  4472  09B7  29B8               	goto	l10825
  4473                           	
  4474  09B8                     l6725:	
  4475                           	line	58
  4476                           	
  4477  09B8                     l10825:	
  4478  09B8  120A  158A  2165   	fcall	_ser_isrx
              120A  158A         
  4479  09BD  1C03               	btfss	status,0
  4480  09BE  29C0               	goto	u4461
  4481  09BF  29C1               	goto	u4460
  4482  09C0                     u4461:
  4483  09C0  29B8               	goto	l10825
  4484  09C1                     u4460:
  4485                           	
  4486  09C1                     l6727:	
  4487                           	line	61
  4488                           ;ser.c: 61: GIE=0;
  4489  09C1  138B               	bcf	(95/8),(95)&7
  4490                           	line	62
  4491                           	
  4492  09C2                     l10827:	
  4493                           ;ser.c: 62: c=rxfifo[rxoptr];
  4494  09C2  1283               	bcf	status, 5	;RP0=0, select bank0
  4495  09C3  1303               	bcf	status, 6	;RP1=0, select bank0
  4496  09C4  086D               	movf	(_rxoptr),w
  4497  09C5  3EA0               	addlw	_rxfifo&0ffh
  4498  09C6  0084               	movwf	fsr0
  4499  09C7  1383               	bcf	status, 7	;select IRP bank1
  4500  09C8  0800               	movf	indf,w
  4501  09C9  00A0               	movwf	(??_ser_getch+0)+0
  4502  09CA  0820               	movf	(??_ser_getch+0)+0,w
  4503  09CB  00A1               	movwf	(ser_getch@c)
  4504                           	line	63
  4505                           	
  4506  09CC                     l10829:	
  4507                           ;ser.c: 63: ++rxoptr;
  4508  09CC  3001               	movlw	(01h)
  4509  09CD  00A0               	movwf	(??_ser_getch+0)+0
  4510  09CE  0820               	movf	(??_ser_getch+0)+0,w
  4511  09CF  07ED               	addwf	(_rxoptr),f	;volatile
  4512                           	line	64
  4513                           	
  4514  09D0                     l10831:	
  4515                           ;ser.c: 64: rxoptr &= (16-1);
  4516  09D0  300F               	movlw	(0Fh)
  4517  09D1  00A0               	movwf	(??_ser_getch+0)+0
  4518  09D2  0820               	movf	(??_ser_getch+0)+0,w
  4519  09D3  05ED               	andwf	(_rxoptr),f	;volatile
  4520                           	line	65
  4521                           	
  4522  09D4                     l10833:	
  4523                           ;ser.c: 65: GIE=1;
  4524  09D4  178B               	bsf	(95/8),(95)&7
  4525                           	line	66
  4526                           	
  4527  09D5                     l10835:	
  4528                           ;ser.c: 66: return c;
  4529  09D5  0821               	movf	(ser_getch@c),w
  4530  09D6  29D7               	goto	l6728
  4531                           	
  4532  09D7                     l10837:	
  4533                           	line	67
  4534                           	
  4535  09D7                     l6728:	
  4536  09D7  0008               	return
  4537                           	opt stack 0
  4538                           GLOBAL	__end_of_ser_getch
  4539  09D8                     	__end_of_ser_getch:
  4540 ;; =============== function _ser_getch ends ============
  4541                           
  4542                           	signat	_ser_getch,89
  4543                           	global	_sprintf
  4544                           psect	text913,local,class=CODE,delta=2
  4545                           global __ptext913
  4546  0495                     __ptext913:
  4547                           
  4548 ;; *************** function _sprintf *****************
  4549 ;; Defined at:
  4550 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  sp              1    wreg     PTR unsigned char 
  4553 ;;		 -> UpdateDisplay@adcOutput(16), 
  4554 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  4555 ;;		 -> STR_13(15), 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  4558 ;;		 -> UpdateDisplay@adcOutput(16), 
  4559 ;;  _val            4   31[BANK0 ] struct .
  4560 ;;  c               1   36[BANK0 ] char 
  4561 ;;  prec            1   30[BANK0 ] char 
  4562 ;;  flag            1   29[BANK0 ] unsigned char 
  4563 ;;  ap              1   28[BANK0 ] PTR void [1]
  4564 ;;		 -> ?_sprintf(2), 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2   20[BANK0 ] int 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       5       0       0       0
  4575 ;;      Locals:         0       9       0       0       0
  4576 ;;      Temps:          0       3       0       0       0
  4577 ;;      Totals:         0      17       0       0       0
  4578 ;;Total ram usage:       17 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    4
  4581 ;; This function calls:
  4582 ;;		___lwdiv
  4583 ;;		___lwmod
  4584 ;; This function is called by:
  4585 ;;		_UpdateDisplay
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           psect	text913
  4589                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4590                           	line	488
  4591                           	global	__size_of_sprintf
  4592  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4593                           	
  4594  0495                     _sprintf:	
  4595                           	opt	stack 1
  4596                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4597                           ;sprintf@sp stored from wreg
  4598                           	line	537
  4599  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  4600  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  4601  0497  00C3               	movwf	(sprintf@sp)
  4602                           	
  4603  0498                     l10765:	
  4604  0498  3035               	movlw	(?_sprintf+01h)&0ffh
  4605  0499  00B9               	movwf	(??_sprintf+0)+0
  4606  049A  0839               	movf	(??_sprintf+0)+0,w
  4607  049B  00BC               	movwf	(sprintf@ap)
  4608                           	line	540
  4609  049C  2D7B               	goto	l10817
  4610                           	
  4611  049D                     l6766:	
  4612                           	line	542
  4613                           	
  4614  049D                     l10767:	
  4615  049D  0844               	movf	(sprintf@c),w
  4616  049E  3A25               	xorlw	025h
  4617  049F  1903               	skipnz
  4618  04A0  2CA2               	goto	u4381
  4619  04A1  2CA3               	goto	u4380
  4620  04A2                     u4381:
  4621  04A2  2CAF               	goto	l6767
  4622  04A3                     u4380:
  4623                           	line	545
  4624                           	
  4625  04A3                     l10769:	
  4626  04A3  0844               	movf	(sprintf@c),w
  4627  04A4  00B9               	movwf	(??_sprintf+0)+0
  4628  04A5  0843               	movf	(sprintf@sp),w
  4629  04A6  0084               	movwf	fsr0
  4630  04A7  0839               	movf	(??_sprintf+0)+0,w
  4631  04A8  1383               	bcf	status, 7	;select IRP bank0
  4632  04A9  0080               	movwf	indf
  4633                           	
  4634  04AA                     l10771:	
  4635  04AA  3001               	movlw	(01h)
  4636  04AB  00B9               	movwf	(??_sprintf+0)+0
  4637  04AC  0839               	movf	(??_sprintf+0)+0,w
  4638  04AD  07C3               	addwf	(sprintf@sp),f
  4639                           	line	546
  4640  04AE  2D7B               	goto	l10817
  4641                           	line	547
  4642                           	
  4643  04AF                     l6767:	
  4644                           	line	552
  4645  04AF  01BD               	clrf	(sprintf@flag)
  4646                           	line	638
  4647  04B0  2CB6               	goto	l10775
  4648                           	line	640
  4649                           	
  4650  04B1                     l6769:	
  4651                           	line	641
  4652  04B1  2D8F               	goto	l10819
  4653                           	line	700
  4654                           	
  4655  04B2                     l6771:	
  4656  04B2  2CCB               	goto	l10777
  4657                           	line	701
  4658                           	
  4659  04B3                     l6772:	
  4660                           	line	702
  4661  04B3  2CCB               	goto	l10777
  4662                           	line	805
  4663                           	
  4664  04B4                     l6774:	
  4665                           	line	816
  4666  04B4  2D7B               	goto	l10817
  4667                           	line	825
  4668                           	
  4669  04B5                     l10773:	
  4670  04B5  2CCB               	goto	l10777
  4671                           	line	638
  4672                           	
  4673  04B6                     l6768:	
  4674                           	
  4675  04B6                     l10775:	
  4676  04B6  3001               	movlw	01h
  4677  04B7  07B4               	addwf	(sprintf@f),f
  4678  04B8  30FF               	movlw	-01h
  4679  04B9  0734               	addwf	(sprintf@f),w
  4680  04BA  0084               	movwf	fsr0
  4681  04BB  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4682  04C0  00C4               	movwf	(sprintf@c)
  4683                           	; Switch size 1, requested type "space"
  4684                           ; Number of cases is 3, Range of values is 0 to 105
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte           10     6 (average)
  4688                           ; jumptable            260     6 (fixed)
  4689                           ; rangetable           110     6 (fixed)
  4690                           ; spacedrange          218     9 (fixed)
  4691                           ; locatedrange         106     3 (fixed)
  4692                           ;	Chosen strategy is simple_byte
  4693                           
  4694                           	opt asmopt_off
  4695  04C1  3A00               	xorlw	0^0	; case 0
  4696  04C2  1903               	skipnz
  4697  04C3  2D8F               	goto	l10819
  4698  04C4  3A64               	xorlw	100^0	; case 100
  4699  04C5  1903               	skipnz
  4700  04C6  2CCB               	goto	l10777
  4701  04C7  3A0D               	xorlw	105^100	; case 105
  4702  04C8  1903               	skipnz
  4703  04C9  2CCB               	goto	l10777
  4704  04CA  2D7B               	goto	l10817
  4705                           	opt asmopt_on
  4706                           
  4707                           	line	825
  4708                           	
  4709  04CB                     l6773:	
  4710                           	line	1254
  4711                           	
  4712  04CB                     l10777:	
  4713  04CB  083C               	movf	(sprintf@ap),w
  4714  04CC  0084               	movwf	fsr0
  4715  04CD  1383               	bcf	status, 7	;select IRP bank0
  4716  04CE  0800               	movf	indf,w
  4717  04CF  00BF               	movwf	(sprintf@_val)
  4718  04D0  0A84               	incf	fsr0,f
  4719  04D1  0800               	movf	indf,w
  4720  04D2  00C0               	movwf	(sprintf@_val+1)
  4721                           	
  4722  04D3                     l10779:	
  4723  04D3  3002               	movlw	(02h)
  4724  04D4  00B9               	movwf	(??_sprintf+0)+0
  4725  04D5  0839               	movf	(??_sprintf+0)+0,w
  4726  04D6  07BC               	addwf	(sprintf@ap),f
  4727                           	line	1256
  4728                           	
  4729  04D7                     l10781:	
  4730  04D7  1FC0               	btfss	(sprintf@_val+1),7
  4731  04D8  2CDA               	goto	u4391
  4732  04D9  2CDB               	goto	u4390
  4733  04DA                     u4391:
  4734  04DA  2CE5               	goto	l10787
  4735  04DB                     u4390:
  4736                           	line	1257
  4737                           	
  4738  04DB                     l10783:	
  4739  04DB  3003               	movlw	(03h)
  4740  04DC  00B9               	movwf	(??_sprintf+0)+0
  4741  04DD  0839               	movf	(??_sprintf+0)+0,w
  4742  04DE  04BD               	iorwf	(sprintf@flag),f
  4743                           	line	1258
  4744                           	
  4745  04DF                     l10785:	
  4746  04DF  09BF               	comf	(sprintf@_val),f
  4747  04E0  09C0               	comf	(sprintf@_val+1),f
  4748  04E1  0ABF               	incf	(sprintf@_val),f
  4749  04E2  1903               	skipnz
  4750  04E3  0AC0               	incf	(sprintf@_val+1),f
  4751  04E4  2CE5               	goto	l10787
  4752                           	line	1259
  4753                           	
  4754  04E5                     l6775:	
  4755                           	line	1300
  4756                           	
  4757  04E5                     l10787:	
  4758  04E5  01C4               	clrf	(sprintf@c)
  4759  04E6  1403               	bsf	status,0
  4760  04E7  0DC4               	rlf	(sprintf@c),f
  4761                           	
  4762  04E8                     l10789:	
  4763  04E8  0844               	movf	(sprintf@c),w
  4764  04E9  3A05               	xorlw	05h
  4765  04EA  1D03               	skipz
  4766  04EB  2CED               	goto	u4401
  4767  04EC  2CEE               	goto	u4400
  4768  04ED                     u4401:
  4769  04ED  2CF0               	goto	l10793
  4770  04EE                     u4400:
  4771  04EE  2D18               	goto	l10801
  4772                           	
  4773  04EF                     l10791:	
  4774  04EF  2D18               	goto	l10801
  4775                           	line	1301
  4776                           	
  4777  04F0                     l6776:	
  4778                           	
  4779  04F0                     l10793:	
  4780  04F0  0844               	movf	(sprintf@c),w
  4781  04F1  00B9               	movwf	(??_sprintf+0)+0
  4782  04F2  0739               	addwf	(??_sprintf+0)+0,w
  4783  04F3  3E01               	addlw	low((_dpowers-__stringbase))
  4784  04F4  0084               	movwf	fsr0
  4785  04F5  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4786  04FA  00BA               	movwf	(??_sprintf+1)+0
  4787  04FB  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4788  0500  00BB               	movwf	(??_sprintf+1)+0+1
  4789  0501  083B               	movf	1+(??_sprintf+1)+0,w
  4790  0502  0240               	subwf	(sprintf@_val+1),w
  4791  0503  1D03               	skipz
  4792  0504  2D07               	goto	u4415
  4793  0505  083A               	movf	0+(??_sprintf+1)+0,w
  4794  0506  023F               	subwf	(sprintf@_val),w
  4795  0507                     u4415:
  4796  0507  1803               	skipnc
  4797  0508  2D0A               	goto	u4411
  4798  0509  2D0B               	goto	u4410
  4799  050A                     u4411:
  4800  050A  2D0D               	goto	l10797
  4801  050B                     u4410:
  4802  050B  2D18               	goto	l10801
  4803                           	line	1302
  4804                           	
  4805  050C                     l10795:	
  4806  050C  2D18               	goto	l10801
  4807                           	
  4808  050D                     l6778:	
  4809                           	line	1300
  4810                           	
  4811  050D                     l10797:	
  4812  050D  3001               	movlw	(01h)
  4813  050E  00B9               	movwf	(??_sprintf+0)+0
  4814  050F  0839               	movf	(??_sprintf+0)+0,w
  4815  0510  07C4               	addwf	(sprintf@c),f
  4816                           	
  4817  0511                     l10799:	
  4818  0511  0844               	movf	(sprintf@c),w
  4819  0512  3A05               	xorlw	05h
  4820  0513  1D03               	skipz
  4821  0514  2D16               	goto	u4421
  4822  0515  2D17               	goto	u4420
  4823  0516                     u4421:
  4824  0516  2CF0               	goto	l10793
  4825  0517                     u4420:
  4826  0517  2D18               	goto	l10801
  4827                           	
  4828  0518                     l6777:	
  4829                           	line	1433
  4830                           	
  4831  0518                     l10801:	
  4832  0518  083D               	movf	(sprintf@flag),w
  4833  0519  3903               	andlw	03h
  4834  051A  1903               	btfsc	status,2
  4835  051B  2D1D               	goto	u4431
  4836  051C  2D1E               	goto	u4430
  4837  051D                     u4431:
  4838  051D  2D2A               	goto	l10807
  4839  051E                     u4430:
  4840                           	line	1434
  4841                           	
  4842  051E                     l10803:	
  4843  051E  302D               	movlw	(02Dh)
  4844  051F  00B9               	movwf	(??_sprintf+0)+0
  4845  0520  0843               	movf	(sprintf@sp),w
  4846  0521  0084               	movwf	fsr0
  4847  0522  0839               	movf	(??_sprintf+0)+0,w
  4848  0523  1383               	bcf	status, 7	;select IRP bank0
  4849  0524  0080               	movwf	indf
  4850                           	
  4851  0525                     l10805:	
  4852  0525  3001               	movlw	(01h)
  4853  0526  00B9               	movwf	(??_sprintf+0)+0
  4854  0527  0839               	movf	(??_sprintf+0)+0,w
  4855  0528  07C3               	addwf	(sprintf@sp),f
  4856  0529  2D2A               	goto	l10807
  4857                           	
  4858  052A                     l6779:	
  4859                           	line	1467
  4860                           	
  4861  052A                     l10807:	
  4862  052A  0844               	movf	(sprintf@c),w
  4863  052B  00B9               	movwf	(??_sprintf+0)+0
  4864  052C  0839               	movf	(??_sprintf+0)+0,w
  4865  052D  00BE               	movwf	(sprintf@prec)
  4866                           	line	1469
  4867  052E  2D6F               	goto	l10815
  4868                           	
  4869  052F                     l6781:	
  4870                           	line	1484
  4871                           	
  4872  052F                     l10809:	
  4873  052F  300A               	movlw	low(0Ah)
  4874  0530  00AE               	movwf	(?___lwmod)
  4875  0531  3000               	movlw	high(0Ah)
  4876  0532  00AF               	movwf	((?___lwmod))+1
  4877  0533  083E               	movf	(sprintf@prec),w
  4878  0534  00B9               	movwf	(??_sprintf+0)+0
  4879  0535  0739               	addwf	(??_sprintf+0)+0,w
  4880  0536  3E01               	addlw	low((_dpowers-__stringbase))
  4881  0537  0084               	movwf	fsr0
  4882  0538  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4883  053D  00A6               	movwf	(?___lwdiv)
  4884  053E  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4885  0543  00A7               	movwf	(?___lwdiv+1)
  4886  0544  0840               	movf	(sprintf@_val+1),w
  4887  0545  01A9               	clrf	1+(?___lwdiv)+02h
  4888  0546  07A9               	addwf	1+(?___lwdiv)+02h
  4889  0547  083F               	movf	(sprintf@_val),w
  4890  0548  01A8               	clrf	0+(?___lwdiv)+02h
  4891  0549  07A8               	addwf	0+(?___lwdiv)+02h
  4892                           
  4893  054A  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  4894  054F  1283               	bcf	status, 5	;RP0=0, select bank0
  4895  0550  1303               	bcf	status, 6	;RP1=0, select bank0
  4896  0551  0827               	movf	(1+(?___lwdiv)),w
  4897  0552  01B1               	clrf	1+(?___lwmod)+02h
  4898  0553  07B1               	addwf	1+(?___lwmod)+02h
  4899  0554  0826               	movf	(0+(?___lwdiv)),w
  4900  0555  01B0               	clrf	0+(?___lwmod)+02h
  4901  0556  07B0               	addwf	0+(?___lwmod)+02h
  4902                           
  4903  0557  120A  158A  23B9   	fcall	___lwmod
              120A  118A         
  4904  055C  1283               	bcf	status, 5	;RP0=0, select bank0
  4905  055D  1303               	bcf	status, 6	;RP1=0, select bank0
  4906  055E  082E               	movf	(0+(?___lwmod)),w
  4907  055F  3E30               	addlw	030h
  4908  0560  00BA               	movwf	(??_sprintf+1)+0
  4909  0561  083A               	movf	(??_sprintf+1)+0,w
  4910  0562  00C4               	movwf	(sprintf@c)
  4911                           	line	1516
  4912                           	
  4913  0563                     l10811:	
  4914  0563  0844               	movf	(sprintf@c),w
  4915  0564  00B9               	movwf	(??_sprintf+0)+0
  4916  0565  0843               	movf	(sprintf@sp),w
  4917  0566  0084               	movwf	fsr0
  4918  0567  0839               	movf	(??_sprintf+0)+0,w
  4919  0568  1383               	bcf	status, 7	;select IRP bank0
  4920  0569  0080               	movwf	indf
  4921                           	
  4922  056A                     l10813:	
  4923  056A  3001               	movlw	(01h)
  4924  056B  00B9               	movwf	(??_sprintf+0)+0
  4925  056C  0839               	movf	(??_sprintf+0)+0,w
  4926  056D  07C3               	addwf	(sprintf@sp),f
  4927  056E  2D6F               	goto	l10815
  4928                           	line	1517
  4929                           	
  4930  056F                     l6780:	
  4931                           	line	1469
  4932                           	
  4933  056F                     l10815:	
  4934  056F  30FF               	movlw	(-1)
  4935  0570  00B9               	movwf	(??_sprintf+0)+0
  4936  0571  0839               	movf	(??_sprintf+0)+0,w
  4937  0572  07BE               	addwf	(sprintf@prec),f
  4938  0573  083E               	movf	((sprintf@prec)),w
  4939  0574  3AFF               	xorlw	-1
  4940  0575  1D03               	skipz
  4941  0576  2D78               	goto	u4441
  4942  0577  2D79               	goto	u4440
  4943  0578                     u4441:
  4944  0578  2D2F               	goto	l10809
  4945  0579                     u4440:
  4946  0579  2D7B               	goto	l10817
  4947                           	
  4948  057A                     l6782:	
  4949  057A  2D7B               	goto	l10817
  4950                           	line	1525
  4951                           	
  4952  057B                     l6765:	
  4953                           	line	540
  4954                           	
  4955  057B                     l10817:	
  4956  057B  3001               	movlw	01h
  4957  057C  07B4               	addwf	(sprintf@f),f
  4958  057D  30FF               	movlw	-01h
  4959  057E  0734               	addwf	(sprintf@f),w
  4960  057F  0084               	movwf	fsr0
  4961  0580  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4962  0585  00B9               	movwf	(??_sprintf+0)+0
  4963  0586  0839               	movf	(??_sprintf+0)+0,w
  4964  0587  00C4               	movwf	(sprintf@c)
  4965  0588  08C4               	movf	((sprintf@c)),f
  4966  0589  1D03               	skipz
  4967  058A  2D8C               	goto	u4451
  4968  058B  2D8D               	goto	u4450
  4969  058C                     u4451:
  4970  058C  2C9D               	goto	l10767
  4971  058D                     u4450:
  4972  058D  2D8F               	goto	l10819
  4973                           	
  4974  058E                     l6783:	
  4975  058E  2D8F               	goto	l10819
  4976                           	line	1527
  4977                           	
  4978  058F                     l6770:	
  4979                           	line	1530
  4980                           	
  4981  058F                     l10819:	
  4982  058F  0843               	movf	(sprintf@sp),w
  4983  0590  0084               	movwf	fsr0
  4984  0591  1383               	bcf	status, 7	;select IRP bank0
  4985  0592  0180               	clrf	indf
  4986  0593  2D94               	goto	l6784
  4987                           	line	1532
  4988                           	
  4989  0594                     l10821:	
  4990                           	line	1533
  4991                           ;	Return value of _sprintf is never used
  4992                           	
  4993  0594                     l6784:	
  4994  0594  0008               	return
  4995                           	opt stack 0
  4996                           GLOBAL	__end_of_sprintf
  4997  0595                     	__end_of_sprintf:
  4998 ;; =============== function _sprintf ends ============
  4999                           
  5000                           	signat	_sprintf,4698
  5001                           	global	_ADCconvert
  5002                           psect	text914,local,class=CODE,delta=2
  5003                           global __ptext914
  5004  0015                     __ptext914:
  5005                           
  5006 ;; *************** function _ADCconvert *****************
  5007 ;; Defined at:
  5008 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;		None               void
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0, pclath, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5022 ;;      Params:         0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0
  5024 ;;      Temps:          0       2       0       0       0
  5025 ;;      Totals:         0       2       0       0       0
  5026 ;;Total ram usage:        2 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    4
  5029 ;; This function calls:
  5030 ;;		___wmul
  5031 ;;		___lwdiv
  5032 ;; This function is called by:
  5033 ;;		_readAvgDistance
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           psect	text914
  5037                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  5038                           	line	33
  5039                           	global	__size_of_ADCconvert
  5040  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  5041                           	
  5042  0015                     _ADCconvert:	
  5043                           	opt	stack 1
  5044                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  5045                           	line	39
  5046                           	
  5047  0015                     l10723:	
  5048                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  5049  0015  3000               	movlw	high(0D5h)
  5050  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  5051  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  5052  0018  026A               	subwf	(_adcVal+1),w	;volatile
  5053  0019  30D5               	movlw	low(0D5h)
  5054  001A  1903               	skipnz
  5055  001B  0269               	subwf	(_adcVal),w	;volatile
  5056  001C  1C03               	skipc
  5057  001D  281F               	goto	u4241
  5058  001E  2820               	goto	u4240
  5059  001F                     u4241:
  5060  001F  2863               	goto	l10729
  5061  0020                     u4240:
  5062                           	
  5063  0020                     l10725:	
  5064  0020  3000               	movlw	high(0EAh)
  5065  0021  026A               	subwf	(_adcVal+1),w	;volatile
  5066  0022  30EA               	movlw	low(0EAh)
  5067  0023  1903               	skipnz
  5068  0024  0269               	subwf	(_adcVal),w	;volatile
  5069  0025  1803               	skipnc
  5070  0026  2828               	goto	u4251
  5071  0027  2829               	goto	u4250
  5072  0028                     u4251:
  5073  0028  2863               	goto	l10729
  5074  0029                     u4250:
  5075                           	line	41
  5076                           	
  5077  0029                     l10727:	
  5078                           ;infrared.c: 40: {
  5079                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  5080  0029  3015               	movlw	low(015h)
  5081  002A  00A6               	movwf	(?___lwdiv)
  5082  002B  3000               	movlw	high(015h)
  5083  002C  00A7               	movwf	((?___lwdiv))+1
  5084  002D  0969               	comf	(_adcVal),w	;volatile
  5085  002E  00AE               	movwf	(??_ADCconvert+0)+0
  5086  002F  096A               	comf	(_adcVal+1),w	;volatile
  5087  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5088  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  5089  0032  1903               	skipnz
  5090  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5091  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  5092  0035  3EEA               	addlw	low(0EAh)
  5093  0036  00A0               	movwf	(?___wmul)
  5094  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  5095  0038  1803               	skipnc
  5096  0039  3E01               	addlw	1
  5097  003A  3E00               	addlw	high(0EAh)
  5098  003B  00A1               	movwf	1+(?___wmul)
  5099  003C  3005               	movlw	low(05h)
  5100  003D  00A2               	movwf	0+(?___wmul)+02h
  5101  003E  3000               	movlw	high(05h)
  5102  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  5103  0040  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5104  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  5105  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  5106  0047  0821               	movf	(1+(?___wmul)),w
  5107  0048  01A9               	clrf	1+(?___lwdiv)+02h
  5108  0049  07A9               	addwf	1+(?___lwdiv)+02h
  5109  004A  0820               	movf	(0+(?___wmul)),w
  5110  004B  01A8               	clrf	0+(?___lwdiv)+02h
  5111  004C  07A8               	addwf	0+(?___lwdiv)+02h
  5112                           
  5113  004D  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5114  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  5115  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  5116  0054  0826               	movf	(0+(?___lwdiv)),w
  5117  0055  3E0F               	addlw	low(0Fh)
  5118  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  5119  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  5120  0058  00C6               	movwf	(_distance)^080h	;volatile
  5121  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  5122  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  5123  005B  0827               	movf	(1+(?___lwdiv)),w
  5124  005C  1803               	skipnc
  5125  005D  3E01               	addlw	1
  5126  005E  3E00               	addlw	high(0Fh)
  5127  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  5128  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  5129  0061  00C7               	movwf	1+(_distance)^080h	;volatile
  5130                           	line	42
  5131                           ;infrared.c: 42: }
  5132  0062  2A37               	goto	l3004
  5133                           	line	43
  5134                           	
  5135  0063                     l2991:	
  5136                           	
  5137  0063                     l10729:	
  5138                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  5139  0063  3000               	movlw	high(0AAh)
  5140  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  5141  0065  026A               	subwf	(_adcVal+1),w	;volatile
  5142  0066  30AA               	movlw	low(0AAh)
  5143  0067  1903               	skipnz
  5144  0068  0269               	subwf	(_adcVal),w	;volatile
  5145  0069  1C03               	skipc
  5146  006A  286C               	goto	u4261
  5147  006B  286D               	goto	u4260
  5148  006C                     u4261:
  5149  006C  28B0               	goto	l10735
  5150  006D                     u4260:
  5151                           	
  5152  006D                     l10731:	
  5153  006D  3000               	movlw	high(0D5h)
  5154  006E  026A               	subwf	(_adcVal+1),w	;volatile
  5155  006F  30D5               	movlw	low(0D5h)
  5156  0070  1903               	skipnz
  5157  0071  0269               	subwf	(_adcVal),w	;volatile
  5158  0072  1803               	skipnc
  5159  0073  2875               	goto	u4271
  5160  0074  2876               	goto	u4270
  5161  0075                     u4271:
  5162  0075  28B0               	goto	l10735
  5163  0076                     u4270:
  5164                           	line	45
  5165                           	
  5166  0076                     l10733:	
  5167                           ;infrared.c: 44: {
  5168                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  5169  0076  302B               	movlw	low(02Bh)
  5170  0077  00A6               	movwf	(?___lwdiv)
  5171  0078  3000               	movlw	high(02Bh)
  5172  0079  00A7               	movwf	((?___lwdiv))+1
  5173  007A  0969               	comf	(_adcVal),w	;volatile
  5174  007B  00AE               	movwf	(??_ADCconvert+0)+0
  5175  007C  096A               	comf	(_adcVal+1),w	;volatile
  5176  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5177  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  5178  007F  1903               	skipnz
  5179  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5180  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  5181  0082  3ED5               	addlw	low(0D5h)
  5182  0083  00A0               	movwf	(?___wmul)
  5183  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  5184  0085  1803               	skipnc
  5185  0086  3E01               	addlw	1
  5186  0087  3E00               	addlw	high(0D5h)
  5187  0088  00A1               	movwf	1+(?___wmul)
  5188  0089  300A               	movlw	low(0Ah)
  5189  008A  00A2               	movwf	0+(?___wmul)+02h
  5190  008B  3000               	movlw	high(0Ah)
  5191  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  5192  008D  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5193  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  5194  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  5195  0094  0821               	movf	(1+(?___wmul)),w
  5196  0095  01A9               	clrf	1+(?___lwdiv)+02h
  5197  0096  07A9               	addwf	1+(?___lwdiv)+02h
  5198  0097  0820               	movf	(0+(?___wmul)),w
  5199  0098  01A8               	clrf	0+(?___lwdiv)+02h
  5200  0099  07A8               	addwf	0+(?___lwdiv)+02h
  5201                           
  5202  009A  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5203  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  5204  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  5205  00A1  0826               	movf	(0+(?___lwdiv)),w
  5206  00A2  3E14               	addlw	low(014h)
  5207  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  5208  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  5209  00A5  00C6               	movwf	(_distance)^080h	;volatile
  5210  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  5211  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  5212  00A8  0827               	movf	(1+(?___lwdiv)),w
  5213  00A9  1803               	skipnc
  5214  00AA  3E01               	addlw	1
  5215  00AB  3E00               	addlw	high(014h)
  5216  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  5217  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  5218  00AE  00C7               	movwf	1+(_distance)^080h	;volatile
  5219                           	line	46
  5220                           ;infrared.c: 46: }
  5221  00AF  2A37               	goto	l3004
  5222                           	line	47
  5223                           	
  5224  00B0                     l2993:	
  5225                           	
  5226  00B0                     l10735:	
  5227                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  5228  00B0  3000               	movlw	high(080h)
  5229  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  5230  00B2  026A               	subwf	(_adcVal+1),w	;volatile
  5231  00B3  3080               	movlw	low(080h)
  5232  00B4  1903               	skipnz
  5233  00B5  0269               	subwf	(_adcVal),w	;volatile
  5234  00B6  1C03               	skipc
  5235  00B7  28B9               	goto	u4281
  5236  00B8  28BA               	goto	u4280
  5237  00B9                     u4281:
  5238  00B9  28FD               	goto	l10741
  5239  00BA                     u4280:
  5240                           	
  5241  00BA                     l10737:	
  5242  00BA  3000               	movlw	high(0AAh)
  5243  00BB  026A               	subwf	(_adcVal+1),w	;volatile
  5244  00BC  30AA               	movlw	low(0AAh)
  5245  00BD  1903               	skipnz
  5246  00BE  0269               	subwf	(_adcVal),w	;volatile
  5247  00BF  1803               	skipnc
  5248  00C0  28C2               	goto	u4291
  5249  00C1  28C3               	goto	u4290
  5250  00C2                     u4291:
  5251  00C2  28FD               	goto	l10741
  5252  00C3                     u4290:
  5253                           	line	49
  5254                           	
  5255  00C3                     l10739:	
  5256                           ;infrared.c: 48: {
  5257                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  5258  00C3  302A               	movlw	low(02Ah)
  5259  00C4  00A6               	movwf	(?___lwdiv)
  5260  00C5  3000               	movlw	high(02Ah)
  5261  00C6  00A7               	movwf	((?___lwdiv))+1
  5262  00C7  0969               	comf	(_adcVal),w	;volatile
  5263  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  5264  00C9  096A               	comf	(_adcVal+1),w	;volatile
  5265  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5266  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  5267  00CC  1903               	skipnz
  5268  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5269  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  5270  00CF  3EAA               	addlw	low(0AAh)
  5271  00D0  00A0               	movwf	(?___wmul)
  5272  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  5273  00D2  1803               	skipnc
  5274  00D3  3E01               	addlw	1
  5275  00D4  3E00               	addlw	high(0AAh)
  5276  00D5  00A1               	movwf	1+(?___wmul)
  5277  00D6  300A               	movlw	low(0Ah)
  5278  00D7  00A2               	movwf	0+(?___wmul)+02h
  5279  00D8  3000               	movlw	high(0Ah)
  5280  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  5281  00DA  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5282  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  5283  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  5284  00E1  0821               	movf	(1+(?___wmul)),w
  5285  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  5286  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  5287  00E4  0820               	movf	(0+(?___wmul)),w
  5288  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  5289  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  5290                           
  5291  00E7  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5292  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  5293  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  5294  00EE  0826               	movf	(0+(?___lwdiv)),w
  5295  00EF  3E1E               	addlw	low(01Eh)
  5296  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  5297  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  5298  00F2  00C6               	movwf	(_distance)^080h	;volatile
  5299  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  5300  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  5301  00F5  0827               	movf	(1+(?___lwdiv)),w
  5302  00F6  1803               	skipnc
  5303  00F7  3E01               	addlw	1
  5304  00F8  3E00               	addlw	high(01Eh)
  5305  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  5306  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  5307  00FB  00C7               	movwf	1+(_distance)^080h	;volatile
  5308                           	line	50
  5309                           ;infrared.c: 50: }
  5310  00FC  2A37               	goto	l3004
  5311                           	line	51
  5312                           	
  5313  00FD                     l2995:	
  5314                           	
  5315  00FD                     l10741:	
  5316                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  5317  00FD  3000               	movlw	high(06Bh)
  5318  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  5319  00FF  026A               	subwf	(_adcVal+1),w	;volatile
  5320  0100  306B               	movlw	low(06Bh)
  5321  0101  1903               	skipnz
  5322  0102  0269               	subwf	(_adcVal),w	;volatile
  5323  0103  1C03               	skipc
  5324  0104  2906               	goto	u4301
  5325  0105  2907               	goto	u4300
  5326  0106                     u4301:
  5327  0106  294A               	goto	l10747
  5328  0107                     u4300:
  5329                           	
  5330  0107                     l10743:	
  5331  0107  3000               	movlw	high(080h)
  5332  0108  026A               	subwf	(_adcVal+1),w	;volatile
  5333  0109  3080               	movlw	low(080h)
  5334  010A  1903               	skipnz
  5335  010B  0269               	subwf	(_adcVal),w	;volatile
  5336  010C  1803               	skipnc
  5337  010D  290F               	goto	u4311
  5338  010E  2910               	goto	u4310
  5339  010F                     u4311:
  5340  010F  294A               	goto	l10747
  5341  0110                     u4310:
  5342                           	line	53
  5343                           	
  5344  0110                     l10745:	
  5345                           ;infrared.c: 52: {
  5346                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  5347  0110  3015               	movlw	low(015h)
  5348  0111  00A6               	movwf	(?___lwdiv)
  5349  0112  3000               	movlw	high(015h)
  5350  0113  00A7               	movwf	((?___lwdiv))+1
  5351  0114  0969               	comf	(_adcVal),w	;volatile
  5352  0115  00AE               	movwf	(??_ADCconvert+0)+0
  5353  0116  096A               	comf	(_adcVal+1),w	;volatile
  5354  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5355  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  5356  0119  1903               	skipnz
  5357  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5358  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  5359  011C  3E80               	addlw	low(080h)
  5360  011D  00A0               	movwf	(?___wmul)
  5361  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  5362  011F  1803               	skipnc
  5363  0120  3E01               	addlw	1
  5364  0121  3E00               	addlw	high(080h)
  5365  0122  00A1               	movwf	1+(?___wmul)
  5366  0123  300A               	movlw	low(0Ah)
  5367  0124  00A2               	movwf	0+(?___wmul)+02h
  5368  0125  3000               	movlw	high(0Ah)
  5369  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  5370  0127  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5371  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  5372  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  5373  012E  0821               	movf	(1+(?___wmul)),w
  5374  012F  01A9               	clrf	1+(?___lwdiv)+02h
  5375  0130  07A9               	addwf	1+(?___lwdiv)+02h
  5376  0131  0820               	movf	(0+(?___wmul)),w
  5377  0132  01A8               	clrf	0+(?___lwdiv)+02h
  5378  0133  07A8               	addwf	0+(?___lwdiv)+02h
  5379                           
  5380  0134  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5381  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  5382  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  5383  013B  0826               	movf	(0+(?___lwdiv)),w
  5384  013C  3E28               	addlw	low(028h)
  5385  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  5386  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  5387  013F  00C6               	movwf	(_distance)^080h	;volatile
  5388  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  5389  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  5390  0142  0827               	movf	(1+(?___lwdiv)),w
  5391  0143  1803               	skipnc
  5392  0144  3E01               	addlw	1
  5393  0145  3E00               	addlw	high(028h)
  5394  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  5395  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  5396  0148  00C7               	movwf	1+(_distance)^080h	;volatile
  5397                           	line	54
  5398                           ;infrared.c: 54: }
  5399  0149  2A37               	goto	l3004
  5400                           	line	55
  5401                           	
  5402  014A                     l2997:	
  5403                           	
  5404  014A                     l10747:	
  5405                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  5406  014A  3000               	movlw	high(04Dh)
  5407  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  5408  014C  026A               	subwf	(_adcVal+1),w	;volatile
  5409  014D  304D               	movlw	low(04Dh)
  5410  014E  1903               	skipnz
  5411  014F  0269               	subwf	(_adcVal),w	;volatile
  5412  0150  1C03               	skipc
  5413  0151  2953               	goto	u4321
  5414  0152  2954               	goto	u4320
  5415  0153                     u4321:
  5416  0153  2997               	goto	l10753
  5417  0154                     u4320:
  5418                           	
  5419  0154                     l10749:	
  5420  0154  3000               	movlw	high(06Bh)
  5421  0155  026A               	subwf	(_adcVal+1),w	;volatile
  5422  0156  306B               	movlw	low(06Bh)
  5423  0157  1903               	skipnz
  5424  0158  0269               	subwf	(_adcVal),w	;volatile
  5425  0159  1803               	skipnc
  5426  015A  295C               	goto	u4331
  5427  015B  295D               	goto	u4330
  5428  015C                     u4331:
  5429  015C  2997               	goto	l10753
  5430  015D                     u4330:
  5431                           	line	57
  5432                           	
  5433  015D                     l10751:	
  5434                           ;infrared.c: 56: {
  5435                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  5436  015D  301E               	movlw	low(01Eh)
  5437  015E  00A6               	movwf	(?___lwdiv)
  5438  015F  3000               	movlw	high(01Eh)
  5439  0160  00A7               	movwf	((?___lwdiv))+1
  5440  0161  0969               	comf	(_adcVal),w	;volatile
  5441  0162  00AE               	movwf	(??_ADCconvert+0)+0
  5442  0163  096A               	comf	(_adcVal+1),w	;volatile
  5443  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5444  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  5445  0166  1903               	skipnz
  5446  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5447  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  5448  0169  3E6B               	addlw	low(06Bh)
  5449  016A  00A0               	movwf	(?___wmul)
  5450  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  5451  016C  1803               	skipnc
  5452  016D  3E01               	addlw	1
  5453  016E  3E00               	addlw	high(06Bh)
  5454  016F  00A1               	movwf	1+(?___wmul)
  5455  0170  300A               	movlw	low(0Ah)
  5456  0171  00A2               	movwf	0+(?___wmul)+02h
  5457  0172  3000               	movlw	high(0Ah)
  5458  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  5459  0174  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5460  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  5461  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  5462  017B  0821               	movf	(1+(?___wmul)),w
  5463  017C  01A9               	clrf	1+(?___lwdiv)+02h
  5464  017D  07A9               	addwf	1+(?___lwdiv)+02h
  5465  017E  0820               	movf	(0+(?___wmul)),w
  5466  017F  01A8               	clrf	0+(?___lwdiv)+02h
  5467  0180  07A8               	addwf	0+(?___lwdiv)+02h
  5468                           
  5469  0181  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5470  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  5471  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  5472  0188  0826               	movf	(0+(?___lwdiv)),w
  5473  0189  3E32               	addlw	low(032h)
  5474  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  5475  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  5476  018C  00C6               	movwf	(_distance)^080h	;volatile
  5477  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  5478  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  5479  018F  0827               	movf	(1+(?___lwdiv)),w
  5480  0190  1803               	skipnc
  5481  0191  3E01               	addlw	1
  5482  0192  3E00               	addlw	high(032h)
  5483  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  5484  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  5485  0195  00C7               	movwf	1+(_distance)^080h	;volatile
  5486                           	line	58
  5487                           ;infrared.c: 58: }
  5488  0196  2A37               	goto	l3004
  5489                           	line	59
  5490                           	
  5491  0197                     l2999:	
  5492                           	
  5493  0197                     l10753:	
  5494                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  5495  0197  3000               	movlw	high(038h)
  5496  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  5497  0199  026A               	subwf	(_adcVal+1),w	;volatile
  5498  019A  3038               	movlw	low(038h)
  5499  019B  1903               	skipnz
  5500  019C  0269               	subwf	(_adcVal),w	;volatile
  5501  019D  1C03               	skipc
  5502  019E  29A0               	goto	u4341
  5503  019F  29A1               	goto	u4340
  5504  01A0                     u4341:
  5505  01A0  29E4               	goto	l10759
  5506  01A1                     u4340:
  5507                           	
  5508  01A1                     l10755:	
  5509  01A1  3000               	movlw	high(04Dh)
  5510  01A2  026A               	subwf	(_adcVal+1),w	;volatile
  5511  01A3  304D               	movlw	low(04Dh)
  5512  01A4  1903               	skipnz
  5513  01A5  0269               	subwf	(_adcVal),w	;volatile
  5514  01A6  1803               	skipnc
  5515  01A7  29A9               	goto	u4351
  5516  01A8  29AA               	goto	u4350
  5517  01A9                     u4351:
  5518  01A9  29E4               	goto	l10759
  5519  01AA                     u4350:
  5520                           	line	61
  5521                           	
  5522  01AA                     l10757:	
  5523                           ;infrared.c: 60: {
  5524                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  5525  01AA  3015               	movlw	low(015h)
  5526  01AB  00A6               	movwf	(?___lwdiv)
  5527  01AC  3000               	movlw	high(015h)
  5528  01AD  00A7               	movwf	((?___lwdiv))+1
  5529  01AE  0969               	comf	(_adcVal),w	;volatile
  5530  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  5531  01B0  096A               	comf	(_adcVal+1),w	;volatile
  5532  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5533  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  5534  01B3  1903               	skipnz
  5535  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5536  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  5537  01B6  3E4D               	addlw	low(04Dh)
  5538  01B7  00A0               	movwf	(?___wmul)
  5539  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  5540  01B9  1803               	skipnc
  5541  01BA  3E01               	addlw	1
  5542  01BB  3E00               	addlw	high(04Dh)
  5543  01BC  00A1               	movwf	1+(?___wmul)
  5544  01BD  300A               	movlw	low(0Ah)
  5545  01BE  00A2               	movwf	0+(?___wmul)+02h
  5546  01BF  3000               	movlw	high(0Ah)
  5547  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  5548  01C1  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5549  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  5550  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  5551  01C8  0821               	movf	(1+(?___wmul)),w
  5552  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  5553  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  5554  01CB  0820               	movf	(0+(?___wmul)),w
  5555  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  5556  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  5557                           
  5558  01CE  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5559  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  5560  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  5561  01D5  0826               	movf	(0+(?___lwdiv)),w
  5562  01D6  3E3C               	addlw	low(03Ch)
  5563  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  5564  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  5565  01D9  00C6               	movwf	(_distance)^080h	;volatile
  5566  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  5567  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  5568  01DC  0827               	movf	(1+(?___lwdiv)),w
  5569  01DD  1803               	skipnc
  5570  01DE  3E01               	addlw	1
  5571  01DF  3E00               	addlw	high(03Ch)
  5572  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  5573  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  5574  01E2  00C7               	movwf	1+(_distance)^080h	;volatile
  5575                           	line	62
  5576                           ;infrared.c: 62: }
  5577  01E3  2A37               	goto	l3004
  5578                           	line	63
  5579                           	
  5580  01E4                     l3001:	
  5581                           	
  5582  01E4                     l10759:	
  5583                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  5584  01E4  3000               	movlw	high(02Bh)
  5585  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  5586  01E6  026A               	subwf	(_adcVal+1),w	;volatile
  5587  01E7  302B               	movlw	low(02Bh)
  5588  01E8  1903               	skipnz
  5589  01E9  0269               	subwf	(_adcVal),w	;volatile
  5590  01EA  1C03               	skipc
  5591  01EB  29ED               	goto	u4361
  5592  01EC  29EE               	goto	u4360
  5593  01ED                     u4361:
  5594  01ED  2A37               	goto	l3004
  5595  01EE                     u4360:
  5596                           	
  5597  01EE                     l10761:	
  5598  01EE  3000               	movlw	high(038h)
  5599  01EF  026A               	subwf	(_adcVal+1),w	;volatile
  5600  01F0  3038               	movlw	low(038h)
  5601  01F1  1903               	skipnz
  5602  01F2  0269               	subwf	(_adcVal),w	;volatile
  5603  01F3  1803               	skipnc
  5604  01F4  29F6               	goto	u4371
  5605  01F5  29F7               	goto	u4370
  5606  01F6                     u4371:
  5607  01F6  2A37               	goto	l3004
  5608  01F7                     u4370:
  5609                           	line	65
  5610                           	
  5611  01F7                     l10763:	
  5612                           ;infrared.c: 64: {
  5613                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5614  01F7  300D               	movlw	low(0Dh)
  5615  01F8  00A6               	movwf	(?___lwdiv)
  5616  01F9  3000               	movlw	high(0Dh)
  5617  01FA  00A7               	movwf	((?___lwdiv))+1
  5618  01FB  0969               	comf	(_adcVal),w	;volatile
  5619  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  5620  01FD  096A               	comf	(_adcVal+1),w	;volatile
  5621  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5622  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  5623  0200  1903               	skipnz
  5624  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5625  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  5626  0203  3E38               	addlw	low(038h)
  5627  0204  00A0               	movwf	(?___wmul)
  5628  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  5629  0206  1803               	skipnc
  5630  0207  3E01               	addlw	1
  5631  0208  3E00               	addlw	high(038h)
  5632  0209  00A1               	movwf	1+(?___wmul)
  5633  020A  300A               	movlw	low(0Ah)
  5634  020B  00A2               	movwf	0+(?___wmul)+02h
  5635  020C  3000               	movlw	high(0Ah)
  5636  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  5637  020E  120A  158A  2254   	fcall	___wmul
              120A  118A         
  5638  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  5639  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  5640  0215  0821               	movf	(1+(?___wmul)),w
  5641  0216  01A9               	clrf	1+(?___lwdiv)+02h
  5642  0217  07A9               	addwf	1+(?___lwdiv)+02h
  5643  0218  0820               	movf	(0+(?___wmul)),w
  5644  0219  01A8               	clrf	0+(?___lwdiv)+02h
  5645  021A  07A8               	addwf	0+(?___lwdiv)+02h
  5646                           
  5647  021B  120A  158A  248C   	fcall	___lwdiv
              120A  118A         
  5648  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  5649  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  5650  0222  0826               	movf	(0+(?___lwdiv)),w
  5651  0223  3E46               	addlw	low(046h)
  5652  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  5653  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  5654  0226  00C6               	movwf	(_distance)^080h	;volatile
  5655  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  5656  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  5657  0229  0827               	movf	(1+(?___lwdiv)),w
  5658  022A  1803               	skipnc
  5659  022B  3E01               	addlw	1
  5660  022C  3E00               	addlw	high(046h)
  5661  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  5662  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  5663  022F  00C7               	movwf	1+(_distance)^080h	;volatile
  5664  0230  2A37               	goto	l3004
  5665                           	line	66
  5666                           	
  5667  0231                     l3003:	
  5668  0231  2A37               	goto	l3004
  5669                           	line	67
  5670                           	
  5671  0232                     l3002:	
  5672  0232  2A37               	goto	l3004
  5673                           	
  5674  0233                     l3000:	
  5675  0233  2A37               	goto	l3004
  5676                           	
  5677  0234                     l2998:	
  5678  0234  2A37               	goto	l3004
  5679                           	
  5680  0235                     l2996:	
  5681  0235  2A37               	goto	l3004
  5682                           	
  5683  0236                     l2994:	
  5684  0236  2A37               	goto	l3004
  5685                           	
  5686  0237                     l2992:	
  5687                           	
  5688  0237                     l3004:	
  5689  0237  0008               	return
  5690                           	opt stack 0
  5691                           GLOBAL	__end_of_ADCconvert
  5692  0238                     	__end_of_ADCconvert:
  5693 ;; =============== function _ADCconvert ends ============
  5694                           
  5695                           	signat	_ADCconvert,88
  5696                           	global	_robotTurn
  5697                           psect	text915,local,class=CODE,delta=2
  5698                           global __ptext915
  5699  0671                     __ptext915:
  5700                           
  5701 ;; *************** function _robotTurn *****************
  5702 ;; Defined at:
  5703 ;;		line 91 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  distance        2    2[BANK0 ] int 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;		None               void
  5710 ;; Registers used:
  5711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5717 ;;      Params:         0       2       0       0       0
  5718 ;;      Locals:         0       0       0       0       0
  5719 ;;      Temps:          0       1       0       0       0
  5720 ;;      Totals:         0       3       0       0       0
  5721 ;;Total ram usage:        3 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    4
  5724 ;; This function calls:
  5725 ;;		_ser_putch
  5726 ;; This function is called by:
  5727 ;;		_main
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           psect	text915
  5731                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5732                           	line	91
  5733                           	global	__size_of_robotTurn
  5734  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5735                           	
  5736  0671                     _robotTurn:	
  5737                           	opt	stack 3
  5738                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5739                           	line	94
  5740                           	
  5741  0671                     l10713:	
  5742                           ;robot.c: 94: turnlowByte = (unsigned char) (distance) ;
  5743  0671  1283               	bcf	status, 5	;RP0=0, select bank0
  5744  0672  1303               	bcf	status, 6	;RP1=0, select bank0
  5745  0673  0822               	movf	(robotTurn@distance),w
  5746  0674  00A4               	movwf	(??_robotTurn+0)+0
  5747  0675  0824               	movf	(??_robotTurn+0)+0,w
  5748  0676  1683               	bsf	status, 5	;RP0=1, select bank1
  5749  0677  1303               	bcf	status, 6	;RP1=0, select bank1
  5750  0678  00DE               	movwf	(_turnlowByte)^080h
  5751                           	line	95
  5752                           	
  5753  0679                     l10715:	
  5754                           ;robot.c: 95: turnhighByte = (unsigned char) (distance >> 8);
  5755  0679  1283               	bcf	status, 5	;RP0=0, select bank0
  5756  067A  1303               	bcf	status, 6	;RP1=0, select bank0
  5757  067B  0823               	movf	(robotTurn@distance+1),w
  5758  067C  00A4               	movwf	(??_robotTurn+0)+0
  5759  067D  0824               	movf	(??_robotTurn+0)+0,w
  5760  067E  1683               	bsf	status, 5	;RP0=1, select bank1
  5761  067F  1303               	bcf	status, 6	;RP1=0, select bank1
  5762  0680  00DD               	movwf	(_turnhighByte)^080h
  5763                           	line	96
  5764                           	
  5765  0681                     l10717:	
  5766                           ;robot.c: 96: if (distance >= 0)
  5767  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  5768  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  5769  0683  1BA3               	btfsc	(robotTurn@distance+1),7
  5770  0684  2E86               	goto	u4231
  5771  0685  2E87               	goto	u4230
  5772  0686                     u4231:
  5773  0686  2EA6               	goto	l10721
  5774  0687                     u4230:
  5775                           	line	98
  5776                           	
  5777  0687                     l10719:	
  5778                           ;robot.c: 97: {
  5779                           ;robot.c: 98: ser_putch(137);
  5780  0687  3089               	movlw	(089h)
  5781  0688  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5782                           	line	100
  5783                           ;robot.c: 100: ser_putch(0);
  5784  068D  3000               	movlw	(0)
  5785  068E  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5786                           	line	102
  5787                           ;robot.c: 102: ser_putch(100);
  5788  0693  3064               	movlw	(064h)
  5789  0694  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5790                           	line	104
  5791                           ;robot.c: 104: ser_putch(0);
  5792  0699  3000               	movlw	(0)
  5793  069A  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5794                           	line	106
  5795                           ;robot.c: 106: ser_putch(1);
  5796  069F  3001               	movlw	(01h)
  5797  06A0  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5798                           	line	107
  5799                           ;robot.c: 107: }
  5800  06A5  2EC4               	goto	l6021
  5801                           	line	108
  5802                           	
  5803  06A6                     l6020:	
  5804                           	line	110
  5805                           	
  5806  06A6                     l10721:	
  5807                           ;robot.c: 108: else
  5808                           ;robot.c: 109: {
  5809                           ;robot.c: 110: ser_putch(137);
  5810  06A6  3089               	movlw	(089h)
  5811  06A7  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5812                           	line	112
  5813                           ;robot.c: 112: ser_putch(0);
  5814  06AC  3000               	movlw	(0)
  5815  06AD  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5816                           	line	114
  5817                           ;robot.c: 114: ser_putch(100);
  5818  06B2  3064               	movlw	(064h)
  5819  06B3  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5820                           	line	116
  5821                           ;robot.c: 116: ser_putch(255);
  5822  06B8  30FF               	movlw	(0FFh)
  5823  06B9  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5824                           	line	118
  5825                           ;robot.c: 118: ser_putch(255);
  5826  06BE  30FF               	movlw	(0FFh)
  5827  06BF  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5828                           	line	119
  5829                           	
  5830  06C4                     l6021:	
  5831                           	line	120
  5832                           ;robot.c: 119: }
  5833                           ;robot.c: 120: ser_putch(157);
  5834  06C4  309D               	movlw	(09Dh)
  5835  06C5  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5836                           	line	122
  5837                           ;robot.c: 122: ser_putch(turnhighByte);
  5838  06CA  1683               	bsf	status, 5	;RP0=1, select bank1
  5839  06CB  1303               	bcf	status, 6	;RP1=0, select bank1
  5840  06CC  085D               	movf	(_turnhighByte)^080h,w
  5841  06CD  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5842                           	line	124
  5843                           ;robot.c: 124: ser_putch(turnlowByte);
  5844  06D2  1683               	bsf	status, 5	;RP0=1, select bank1
  5845  06D3  1303               	bcf	status, 6	;RP1=0, select bank1
  5846  06D4  085E               	movf	(_turnlowByte)^080h,w
  5847  06D5  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5848                           	line	126
  5849                           ;robot.c: 126: ser_putch(137);
  5850  06DA  3089               	movlw	(089h)
  5851  06DB  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5852                           	line	128
  5853                           ;robot.c: 128: ser_putch(0);
  5854  06E0  3000               	movlw	(0)
  5855  06E1  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5856                           	line	130
  5857                           ;robot.c: 130: ser_putch(0);
  5858  06E6  3000               	movlw	(0)
  5859  06E7  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5860                           	line	132
  5861                           ;robot.c: 132: ser_putch(0);
  5862  06EC  3000               	movlw	(0)
  5863  06ED  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5864                           	line	134
  5865                           ;robot.c: 134: ser_putch(0);
  5866  06F2  3000               	movlw	(0)
  5867  06F3  120A  158A  2195   	fcall	_ser_putch
              120A  118A         
  5868                           	line	135
  5869                           	
  5870  06F8                     l6022:	
  5871  06F8  0008               	return
  5872                           	opt stack 0
  5873                           GLOBAL	__end_of_robotTurn
  5874  06F9                     	__end_of_robotTurn:
  5875 ;; =============== function _robotTurn ends ============
  5876                           
  5877                           	signat	_robotTurn,4216
  5878                           	global	_rotate
  5879                           psect	text916,local,class=CODE,delta=2
  5880                           global __ptext916
  5881  0CDC                     __ptext916:
  5882                           
  5883 ;; *************** function _rotate *****************
  5884 ;; Defined at:
  5885 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5888 ;;  direction       1    5[BANK0 ] unsigned char 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  i               2    8[BANK0 ] unsigned int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;		None               void
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0, pclath, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5900 ;;      Params:         0       3       0       0       0
  5901 ;;      Locals:         0       2       0       0       0
  5902 ;;      Temps:          0       2       0       0       0
  5903 ;;      Totals:         0       7       0       0       0
  5904 ;;Total ram usage:        7 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    4
  5907 ;; This function calls:
  5908 ;;		_spi_transfer
  5909 ;; This function is called by:
  5910 ;;		_calibrateIR
  5911 ;;		_scan360
  5912 ;;		_main
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           psect	text916
  5916                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5917                           	line	48
  5918                           	global	__size_of_rotate
  5919  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5920                           	
  5921  0CDC                     _rotate:	
  5922                           	opt	stack 3
  5923                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5924                           	line	50
  5925                           	
  5926  0CDC                     l10685:	
  5927                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5928  0CDC  1283               	bcf	status, 5	;RP0=0, select bank0
  5929  0CDD  1303               	bcf	status, 6	;RP1=0, select bank0
  5930  0CDE  1407               	bsf	(56/8),(56)&7
  5931  0CDF  1487               	bsf	(57/8),(57)&7
  5932                           	line	51
  5933                           	
  5934  0CE0                     l10687:	
  5935                           ;steppermotor.c: 51: if (direction == 0)
  5936  0CE0  08A5               	movf	(rotate@direction),f
  5937  0CE1  1D03               	skipz
  5938  0CE2  2CE4               	goto	u4211
  5939  0CE3  2CE5               	goto	u4210
  5940  0CE4                     u4211:
  5941  0CE4  2CEC               	goto	l10691
  5942  0CE5                     u4210:
  5943                           	line	52
  5944                           	
  5945  0CE5                     l10689:	
  5946                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5947  0CE5  300F               	movlw	(0Fh)
  5948  0CE6  120A  158A  2111   	fcall	_spi_transfer
              120A  158A         
  5949  0CEB  2CF3               	goto	l10693
  5950                           	line	53
  5951                           	
  5952  0CEC                     l3705:	
  5953                           	line	54
  5954                           	
  5955  0CEC                     l10691:	
  5956                           ;steppermotor.c: 53: else
  5957                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5958  0CEC  300D               	movlw	(0Dh)
  5959  0CED  120A  158A  2111   	fcall	_spi_transfer
              120A  158A         
  5960  0CF2  2CF3               	goto	l10693
  5961                           	
  5962  0CF3                     l3706:	
  5963                           	line	55
  5964                           	
  5965  0CF3                     l10693:	
  5966                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5967  0CF3  1283               	bcf	status, 5	;RP0=0, select bank0
  5968  0CF4  1303               	bcf	status, 6	;RP1=0, select bank0
  5969  0CF5  1007               	bcf	(56/8),(56)&7
  5970                           	
  5971  0CF6                     l10695:	
  5972  0CF6  1087               	bcf	(57/8),(57)&7
  5973                           	line	56
  5974                           	
  5975  0CF7                     l10697:	
  5976                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5977  0CF7  01A8               	clrf	(rotate@i)
  5978  0CF8  01A9               	clrf	(rotate@i+1)
  5979  0CF9  2D10               	goto	l3707
  5980                           	line	57
  5981                           	
  5982  0CFA                     l3708:	
  5983                           	line	58
  5984                           ;steppermotor.c: 57: {
  5985                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5986  0CFA  1507               	bsf	(58/8),(58)&7
  5987  0CFB  0000               	nop
  5988  0CFC  1283               	bcf	status, 5	;RP0=0, select bank0
  5989  0CFD  1303               	bcf	status, 6	;RP1=0, select bank0
  5990  0CFE  1107               	bcf	(58/8),(58)&7
  5991                           	line	59
  5992                           	
  5993  0CFF                     l10699:	
  5994                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5995                           	opt asmopt_off
  5996  0CFF  3062               movlw	98
  5997  0D00  00A7               movwf	((??_rotate+0)+0+1),f
  5998  0D01  3065               	movlw	101
  5999  0D02  00A6               movwf	((??_rotate+0)+0),f
  6000  0D03                     u4667:
  6001  0D03  0BA6               	decfsz	((??_rotate+0)+0),f
  6002  0D04  2D03               	goto	u4667
  6003  0D05  0BA7               	decfsz	((??_rotate+0)+0+1),f
  6004  0D06  2D03               	goto	u4667
  6005  0D07  2D08               	nop2
  6006                           opt asmopt_on
  6007                           
  6008                           	line	56
  6009  0D08  3001               	movlw	low(01h)
  6010  0D09  1283               	bcf	status, 5	;RP0=0, select bank0
  6011  0D0A  1303               	bcf	status, 6	;RP1=0, select bank0
  6012  0D0B  07A8               	addwf	(rotate@i),f
  6013  0D0C  1803               	skipnc
  6014  0D0D  0AA9               	incf	(rotate@i+1),f
  6015  0D0E  3000               	movlw	high(01h)
  6016  0D0F  07A9               	addwf	(rotate@i+1),f
  6017                           	
  6018  0D10                     l3707:	
  6019  0D10  0824               	movf	(rotate@numsteps+1),w
  6020  0D11  0229               	subwf	(rotate@i+1),w
  6021  0D12  1D03               	skipz
  6022  0D13  2D16               	goto	u4225
  6023  0D14  0823               	movf	(rotate@numsteps),w
  6024  0D15  0228               	subwf	(rotate@i),w
  6025  0D16                     u4225:
  6026  0D16  1C03               	skipc
  6027  0D17  2D19               	goto	u4221
  6028  0D18  2D1A               	goto	u4220
  6029  0D19                     u4221:
  6030  0D19  2CFA               	goto	l3708
  6031  0D1A                     u4220:
  6032                           	
  6033  0D1A                     l3709:	
  6034                           	line	61
  6035                           ;steppermotor.c: 60: }
  6036                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  6037  0D1A  1407               	bsf	(56/8),(56)&7
  6038  0D1B  1487               	bsf	(57/8),(57)&7
  6039                           	line	62
  6040                           	
  6041  0D1C                     l10701:	
  6042                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  6043  0D1C  3000               	movlw	(0)
  6044  0D1D  120A  158A  2111   	fcall	_spi_transfer
              120A  158A         
  6045                           	line	63
  6046                           	
  6047  0D22                     l10703:	
  6048                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  6049  0D22  1283               	bcf	status, 5	;RP0=0, select bank0
  6050  0D23  1303               	bcf	status, 6	;RP1=0, select bank0
  6051  0D24  1007               	bcf	(56/8),(56)&7
  6052                           	
  6053  0D25                     l10705:	
  6054  0D25  1087               	bcf	(57/8),(57)&7
  6055                           	line	64
  6056                           	
  6057  0D26                     l10707:	
  6058                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  6059  0D26  1507               	bsf	(58/8),(58)&7
  6060                           	
  6061  0D27                     l10709:	
  6062  0D27  0000               	nop
  6063                           	
  6064  0D28                     l10711:	
  6065  0D28  1283               	bcf	status, 5	;RP0=0, select bank0
  6066  0D29  1303               	bcf	status, 6	;RP1=0, select bank0
  6067  0D2A  1107               	bcf	(58/8),(58)&7
  6068                           	line	65
  6069                           	
  6070  0D2B                     l3710:	
  6071  0D2B  0008               	return
  6072                           	opt stack 0
  6073                           GLOBAL	__end_of_rotate
  6074  0D2C                     	__end_of_rotate:
  6075 ;; =============== function _rotate ends ============
  6076                           
  6077                           	signat	_rotate,8312
  6078                           	global	_robo_init
  6079                           psect	text917,local,class=CODE,delta=2
  6080                           global __ptext917
  6081  097C                     __ptext917:
  6082                           
  6083 ;; *************** function _robo_init *****************
  6084 ;; Defined at:
  6085 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;		None               void
  6092 ;; Registers used:
  6093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6099 ;;      Params:         0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    4
  6106 ;; This function calls:
  6107 ;;		_ser_putch
  6108 ;; This function is called by:
  6109 ;;		_init
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           psect	text917
  6113                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6114                           	line	10
  6115                           	global	__size_of_robo_init
  6116  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  6117                           	
  6118  097C                     _robo_init:	
  6119                           	opt	stack 2
  6120                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6121                           	line	11
  6122                           	
  6123  097C                     l10683:	
  6124                           ;robot.c: 11: ser_putch(128);
  6125  097C  3080               	movlw	(080h)
  6126  097D  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  6127                           	line	12
  6128                           ;robot.c: 12: ser_putch(132);
  6129  0982  3084               	movlw	(084h)
  6130  0983  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  6131                           	line	13
  6132                           ;robot.c: 13: ser_putch(150);
  6133  0988  3096               	movlw	(096h)
  6134  0989  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  6135                           	line	14
  6136                           ;robot.c: 14: ser_putch(0);
  6137  098E  3000               	movlw	(0)
  6138  098F  120A  158A  2195   	fcall	_ser_putch
              120A  158A         
  6139                           	line	15
  6140                           	
  6141  0994                     l6005:	
  6142  0994  0008               	return
  6143                           	opt stack 0
  6144                           GLOBAL	__end_of_robo_init
  6145  0995                     	__end_of_robo_init:
  6146 ;; =============== function _robo_init ends ============
  6147                           
  6148                           	signat	_robo_init,88
  6149                           	global	_lcd_write_data
  6150                           psect	text918,local,class=CODE,delta=2
  6151                           global __ptext918
  6152  08EB                     __ptext918:
  6153                           
  6154 ;; *************** function _lcd_write_data *****************
  6155 ;; Defined at:
  6156 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  databyte        1    wreg     unsigned char 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  databyte        1    2[BANK0 ] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6170 ;;      Params:         0       0       0       0       0
  6171 ;;      Locals:         0       1       0       0       0
  6172 ;;      Temps:          0       2       0       0       0
  6173 ;;      Totals:         0       3       0       0       0
  6174 ;;Total ram usage:        3 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    3
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_lcd_write_string
  6181 ;;		_lcd_write_2_digit_bcd
  6182 ;;		_lcd_write_3_digit_bcd
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           psect	text918
  6186                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6187                           	line	30
  6188                           	global	__size_of_lcd_write_data
  6189  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6190                           	
  6191  08EB                     _lcd_write_data:	
  6192                           	opt	stack 1
  6193                           ; Regs used in _lcd_write_data: [wreg]
  6194                           ;lcd_write_data@databyte stored from wreg
  6195  08EB  1283               	bcf	status, 5	;RP0=0, select bank0
  6196  08EC  1303               	bcf	status, 6	;RP1=0, select bank0
  6197  08ED  00A2               	movwf	(lcd_write_data@databyte)
  6198                           	line	31
  6199                           	
  6200  08EE                     l10675:	
  6201                           ;lcd.c: 31: RE2 = 0;
  6202  08EE  1109               	bcf	(74/8),(74)&7
  6203                           	line	32
  6204                           ;lcd.c: 32: RE1 = 0;
  6205  08EF  1089               	bcf	(73/8),(73)&7
  6206                           	line	33
  6207                           ;lcd.c: 33: RE0 = 1;
  6208  08F0  1409               	bsf	(72/8),(72)&7
  6209                           	line	34
  6210                           	
  6211  08F1                     l10677:	
  6212                           ;lcd.c: 34: PORTD = databyte;
  6213  08F1  0822               	movf	(lcd_write_data@databyte),w
  6214  08F2  0088               	movwf	(8)	;volatile
  6215                           	line	35
  6216                           	
  6217  08F3                     l10679:	
  6218                           ;lcd.c: 35: RE2 = 1;
  6219  08F3  1509               	bsf	(74/8),(74)&7
  6220                           	line	36
  6221                           	
  6222  08F4                     l10681:	
  6223                           ;lcd.c: 36: RE2 = 0;
  6224  08F4  1109               	bcf	(74/8),(74)&7
  6225                           	line	37
  6226                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  6227                           	opt asmopt_off
  6228  08F5  3007               movlw	7
  6229  08F6  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  6230  08F7  307D               	movlw	125
  6231  08F8  00A0               movwf	((??_lcd_write_data+0)+0),f
  6232  08F9                     u4677:
  6233  08F9  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  6234  08FA  28F9               	goto	u4677
  6235  08FB  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  6236  08FC  28F9               	goto	u4677
  6237                           opt asmopt_on
  6238                           
  6239                           	line	38
  6240                           	
  6241  08FD                     l1402:	
  6242  08FD  0008               	return
  6243                           	opt stack 0
  6244                           GLOBAL	__end_of_lcd_write_data
  6245  08FE                     	__end_of_lcd_write_data:
  6246 ;; =============== function _lcd_write_data ends ============
  6247                           
  6248                           	signat	_lcd_write_data,4216
  6249                           	global	_lcd_write_control
  6250                           psect	text919,local,class=CODE,delta=2
  6251                           global __ptext919
  6252  0925                     __ptext919:
  6253                           
  6254 ;; *************** function _lcd_write_control *****************
  6255 ;; Defined at:
  6256 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  databyte        1    wreg     unsigned char 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  databyte        1    2[BANK0 ] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;		None               void
  6263 ;; Registers used:
  6264 ;;		wreg
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6270 ;;      Params:         0       0       0       0       0
  6271 ;;      Locals:         0       1       0       0       0
  6272 ;;      Temps:          0       2       0       0       0
  6273 ;;      Totals:         0       3       0       0       0
  6274 ;;Total ram usage:        3 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    3
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_lcd_set_cursor
  6281 ;;		_lcd_init
  6282 ;;		_UpdateDisplay
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           psect	text919
  6286                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6287                           	line	18
  6288                           	global	__size_of_lcd_write_control
  6289  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  6290                           	
  6291  0925                     _lcd_write_control:	
  6292                           	opt	stack 1
  6293                           ; Regs used in _lcd_write_control: [wreg]
  6294                           ;lcd_write_control@databyte stored from wreg
  6295  0925  1283               	bcf	status, 5	;RP0=0, select bank0
  6296  0926  1303               	bcf	status, 6	;RP1=0, select bank0
  6297  0927  00A2               	movwf	(lcd_write_control@databyte)
  6298                           	line	19
  6299                           	
  6300  0928                     l10667:	
  6301                           ;lcd.c: 19: RE2 = 0;
  6302  0928  1109               	bcf	(74/8),(74)&7
  6303                           	line	20
  6304                           ;lcd.c: 20: RE1 = 0;
  6305  0929  1089               	bcf	(73/8),(73)&7
  6306                           	line	21
  6307                           ;lcd.c: 21: RE0 = 0;
  6308  092A  1009               	bcf	(72/8),(72)&7
  6309                           	line	22
  6310                           	
  6311  092B                     l10669:	
  6312                           ;lcd.c: 22: PORTD = databyte;
  6313  092B  0822               	movf	(lcd_write_control@databyte),w
  6314  092C  0088               	movwf	(8)	;volatile
  6315                           	line	23
  6316                           	
  6317  092D                     l10671:	
  6318                           ;lcd.c: 23: RE2 = 1;
  6319  092D  1509               	bsf	(74/8),(74)&7
  6320                           	line	24
  6321                           	
  6322  092E                     l10673:	
  6323                           ;lcd.c: 24: RE2 = 0;
  6324  092E  1109               	bcf	(74/8),(74)&7
  6325                           	line	25
  6326                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  6327                           	opt asmopt_off
  6328  092F  300D               movlw	13
  6329  0930  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  6330  0931  30FB               	movlw	251
  6331  0932  00A0               movwf	((??_lcd_write_control+0)+0),f
  6332  0933                     u4687:
  6333  0933  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  6334  0934  2933               	goto	u4687
  6335  0935  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  6336  0936  2933               	goto	u4687
  6337  0937  2938               	nop2
  6338                           opt asmopt_on
  6339                           
  6340                           	line	26
  6341                           	
  6342  0938                     l1399:	
  6343  0938  0008               	return
  6344                           	opt stack 0
  6345                           GLOBAL	__end_of_lcd_write_control
  6346  0939                     	__end_of_lcd_write_control:
  6347 ;; =============== function _lcd_write_control ends ============
  6348                           
  6349                           	signat	_lcd_write_control,4216
  6350                           	global	_init_adc
  6351                           psect	text920,local,class=CODE,delta=2
  6352                           global __ptext920
  6353  0939                     __ptext920:
  6354                           
  6355 ;; *************** function _init_adc *****************
  6356 ;; Defined at:
  6357 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;		None
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;		None               void
  6364 ;; Registers used:
  6365 ;;		wreg, status,2
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6371 ;;      Params:         0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0
  6373 ;;      Temps:          0       1       0       0       0
  6374 ;;      Totals:         0       1       0       0       0
  6375 ;;Total ram usage:        1 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    3
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_init
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           psect	text920
  6385                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6386                           	line	46
  6387                           	global	__size_of_init_adc
  6388  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6389                           	
  6390  0939                     _init_adc:	
  6391                           	opt	stack 3
  6392                           ; Regs used in _init_adc: [wreg+status,2]
  6393                           	line	48
  6394                           	
  6395  0939                     l10657:	
  6396                           ;adc.c: 48: PORTA = 0;
  6397  0939  1283               	bcf	status, 5	;RP0=0, select bank0
  6398  093A  1303               	bcf	status, 6	;RP1=0, select bank0
  6399  093B  0185               	clrf	(5)	;volatile
  6400                           	line	49
  6401                           	
  6402  093C                     l10659:	
  6403                           ;adc.c: 49: TRISA = 0b00111111;
  6404  093C  303F               	movlw	(03Fh)
  6405  093D  1683               	bsf	status, 5	;RP0=1, select bank1
  6406  093E  1303               	bcf	status, 6	;RP1=0, select bank1
  6407  093F  0085               	movwf	(133)^080h	;volatile
  6408                           	line	52
  6409                           	
  6410  0940                     l10661:	
  6411                           ;adc.c: 52: ADCON0 = 0b10100001;
  6412  0940  30A1               	movlw	(0A1h)
  6413  0941  1283               	bcf	status, 5	;RP0=0, select bank0
  6414  0942  1303               	bcf	status, 6	;RP1=0, select bank0
  6415  0943  009F               	movwf	(31)	;volatile
  6416                           	line	53
  6417                           	
  6418  0944                     l10663:	
  6419                           ;adc.c: 53: ADCON1 = 0b0000010;
  6420  0944  3002               	movlw	(02h)
  6421  0945  1683               	bsf	status, 5	;RP0=1, select bank1
  6422  0946  1303               	bcf	status, 6	;RP1=0, select bank1
  6423  0947  009F               	movwf	(159)^080h	;volatile
  6424                           	line	55
  6425                           	
  6426  0948                     l10665:	
  6427                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6428                           	opt asmopt_off
  6429  0948  3053               movlw	83
  6430  0949  1283               	bcf	status, 5	;RP0=0, select bank0
  6431  094A  1303               	bcf	status, 6	;RP1=0, select bank0
  6432  094B  00A0               movwf	(??_init_adc+0)+0,f
  6433  094C                     u4697:
  6434  094C  0BA0               decfsz	(??_init_adc+0)+0,f
  6435  094D  294C               	goto	u4697
  6436                           opt asmopt_on
  6437                           
  6438                           	line	57
  6439                           	
  6440  094E                     l700:	
  6441  094E  0008               	return
  6442                           	opt stack 0
  6443                           GLOBAL	__end_of_init_adc
  6444  094F                     	__end_of_init_adc:
  6445 ;; =============== function _init_adc ends ============
  6446                           
  6447                           	signat	_init_adc,88
  6448                           	global	_adc_read_channel
  6449                           psect	text921,local,class=CODE,delta=2
  6450                           global __ptext921
  6451  0B3A                     __ptext921:
  6452                           
  6453 ;; *************** function _adc_read_channel *****************
  6454 ;; Defined at:
  6455 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  channel         1    wreg     unsigned char 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  channel         1    7[BANK0 ] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      unsigned char 
  6462 ;; Registers used:
  6463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6469 ;;      Params:         0       0       0       0       0
  6470 ;;      Locals:         0       1       0       0       0
  6471 ;;      Temps:          0       1       0       0       0
  6472 ;;      Totals:         0       2       0       0       0
  6473 ;;Total ram usage:        2 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    4
  6476 ;; This function calls:
  6477 ;;		_adc_read
  6478 ;; This function is called by:
  6479 ;;		_readDistance
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           psect	text921
  6483                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6484                           	line	5
  6485                           	global	__size_of_adc_read_channel
  6486  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6487                           	
  6488  0B3A                     _adc_read_channel:	
  6489                           	opt	stack 0
  6490                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6491                           ;adc_read_channel@channel stored from wreg
  6492  0B3A  1283               	bcf	status, 5	;RP0=0, select bank0
  6493  0B3B  1303               	bcf	status, 6	;RP1=0, select bank0
  6494  0B3C  00A7               	movwf	(adc_read_channel@channel)
  6495                           	line	6
  6496                           	
  6497  0B3D                     l10641:	
  6498                           ;adc.c: 6: switch(channel)
  6499  0B3D  2B56               	goto	l10649
  6500                           	line	8
  6501                           ;adc.c: 7: {
  6502                           ;adc.c: 8: case 0:
  6503                           	
  6504  0B3E                     l690:	
  6505                           	line	9
  6506                           ;adc.c: 9: CHS0 = 0;
  6507  0B3E  119F               	bcf	(251/8),(251)&7
  6508                           	line	10
  6509                           ;adc.c: 10: CHS1 = 0;
  6510  0B3F  121F               	bcf	(252/8),(252)&7
  6511                           	line	11
  6512                           ;adc.c: 11: CHS2 = 0;
  6513  0B40  129F               	bcf	(253/8),(253)&7
  6514                           	line	12
  6515                           ;adc.c: 12: break;
  6516  0B41  2B67               	goto	l10651
  6517                           	line	13
  6518                           ;adc.c: 13: case 1:
  6519                           	
  6520  0B42                     l692:	
  6521                           	line	14
  6522                           ;adc.c: 14: CHS0 = 1;
  6523  0B42  159F               	bsf	(251/8),(251)&7
  6524                           	line	15
  6525                           ;adc.c: 15: CHS1 = 0;
  6526  0B43  121F               	bcf	(252/8),(252)&7
  6527                           	line	16
  6528                           ;adc.c: 16: CHS2 = 0;
  6529  0B44  129F               	bcf	(253/8),(253)&7
  6530                           	line	17
  6531                           ;adc.c: 17: break;
  6532  0B45  2B67               	goto	l10651
  6533                           	line	18
  6534                           ;adc.c: 18: case 2:
  6535                           	
  6536  0B46                     l693:	
  6537                           	line	19
  6538                           ;adc.c: 19: CHS0 = 0;
  6539  0B46  119F               	bcf	(251/8),(251)&7
  6540                           	line	20
  6541                           ;adc.c: 20: CHS1 = 1;
  6542  0B47  161F               	bsf	(252/8),(252)&7
  6543                           	line	21
  6544                           ;adc.c: 21: CHS2 = 0;
  6545  0B48  129F               	bcf	(253/8),(253)&7
  6546                           	line	22
  6547                           ;adc.c: 22: break;
  6548  0B49  2B67               	goto	l10651
  6549                           	line	23
  6550                           ;adc.c: 23: case 3:
  6551                           	
  6552  0B4A                     l694:	
  6553                           	line	24
  6554                           ;adc.c: 24: CHS0 = 1;
  6555  0B4A  159F               	bsf	(251/8),(251)&7
  6556                           	line	25
  6557                           ;adc.c: 25: CHS1 = 1;
  6558  0B4B  161F               	bsf	(252/8),(252)&7
  6559                           	line	26
  6560                           ;adc.c: 26: CHS2 = 0;
  6561  0B4C  129F               	bcf	(253/8),(253)&7
  6562                           	line	27
  6563                           ;adc.c: 27: break;
  6564  0B4D  2B67               	goto	l10651
  6565                           	line	28
  6566                           ;adc.c: 28: case 4:
  6567                           	
  6568  0B4E                     l695:	
  6569                           	line	29
  6570                           ;adc.c: 29: CHS0 = 0;
  6571  0B4E  119F               	bcf	(251/8),(251)&7
  6572                           	line	30
  6573                           ;adc.c: 30: CHS1 = 0;
  6574  0B4F  121F               	bcf	(252/8),(252)&7
  6575                           	line	31
  6576                           ;adc.c: 31: CHS2 = 1;
  6577  0B50  169F               	bsf	(253/8),(253)&7
  6578                           	line	32
  6579                           ;adc.c: 32: break;
  6580  0B51  2B67               	goto	l10651
  6581                           	line	35
  6582                           ;adc.c: 35: default:
  6583                           	
  6584  0B52                     l696:	
  6585                           	line	36
  6586                           	
  6587  0B52                     l10643:	
  6588                           ;adc.c: 36: return 0;
  6589  0B52  3000               	movlw	(0)
  6590  0B53  2B74               	goto	l697
  6591                           	
  6592  0B54                     l10645:	
  6593  0B54  2B74               	goto	l697
  6594                           	line	37
  6595                           	
  6596  0B55                     l10647:	
  6597                           ;adc.c: 37: }
  6598  0B55  2B67               	goto	l10651
  6599                           	line	6
  6600                           	
  6601  0B56                     l689:	
  6602                           	
  6603  0B56                     l10649:	
  6604  0B56  0827               	movf	(adc_read_channel@channel),w
  6605                           	; Switch size 1, requested type "space"
  6606                           ; Number of cases is 5, Range of values is 0 to 4
  6607                           ; switch strategies available:
  6608                           ; Name         Instructions Cycles
  6609                           ; simple_byte           16     9 (average)
  6610                           ; direct_byte           23     8 (fixed)
  6611                           ; jumptable            260     6 (fixed)
  6612                           ; rangetable             9     6 (fixed)
  6613                           ; spacedrange           16     9 (fixed)
  6614                           ; locatedrange           5     3 (fixed)
  6615                           ;	Chosen strategy is simple_byte
  6616                           
  6617                           	opt asmopt_off
  6618  0B57  3A00               	xorlw	0^0	; case 0
  6619  0B58  1903               	skipnz
  6620  0B59  2B3E               	goto	l690
  6621  0B5A  3A01               	xorlw	1^0	; case 1
  6622  0B5B  1903               	skipnz
  6623  0B5C  2B42               	goto	l692
  6624  0B5D  3A03               	xorlw	2^1	; case 2
  6625  0B5E  1903               	skipnz
  6626  0B5F  2B46               	goto	l693
  6627  0B60  3A01               	xorlw	3^2	; case 3
  6628  0B61  1903               	skipnz
  6629  0B62  2B4A               	goto	l694
  6630  0B63  3A07               	xorlw	4^3	; case 4
  6631  0B64  1903               	skipnz
  6632  0B65  2B4E               	goto	l695
  6633  0B66  2B52               	goto	l10643
  6634                           	opt asmopt_on
  6635                           
  6636                           	line	37
  6637                           	
  6638  0B67                     l691:	
  6639                           	line	39
  6640                           	
  6641  0B67                     l10651:	
  6642                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6643                           	opt asmopt_off
  6644  0B67  3053               movlw	83
  6645  0B68  00A6               movwf	(??_adc_read_channel+0)+0,f
  6646  0B69                     u4707:
  6647  0B69  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6648  0B6A  2B69               	goto	u4707
  6649                           opt asmopt_on
  6650                           
  6651                           	line	41
  6652                           	
  6653  0B6B                     l10653:	
  6654                           ;adc.c: 41: return adc_read();
  6655  0B6B  120A  158A  2200   	fcall	_adc_read
              120A  158A         
  6656  0B70  1283               	bcf	status, 5	;RP0=0, select bank0
  6657  0B71  1303               	bcf	status, 6	;RP1=0, select bank0
  6658  0B72  0820               	movf	(0+(?_adc_read)),w
  6659  0B73  2B74               	goto	l697
  6660                           	
  6661  0B74                     l10655:	
  6662                           	line	43
  6663                           	
  6664  0B74                     l697:	
  6665  0B74  0008               	return
  6666                           	opt stack 0
  6667                           GLOBAL	__end_of_adc_read_channel
  6668  0B75                     	__end_of_adc_read_channel:
  6669 ;; =============== function _adc_read_channel ends ============
  6670                           
  6671                           	signat	_adc_read_channel,4217
  6672                           	global	___awmod
  6673                           psect	text922,local,class=CODE,delta=2
  6674                           global __ptext922
  6675  0DDF                     __ptext922:
  6676                           
  6677 ;; *************** function ___awmod *****************
  6678 ;; Defined at:
  6679 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  divisor         2    0[BANK0 ] int 
  6682 ;;  dividend        2    2[BANK0 ] int 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  sign            1    6[BANK0 ] unsigned char 
  6685 ;;  counter         1    5[BANK0 ] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  2    0[BANK0 ] int 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6695 ;;      Params:         0       4       0       0       0
  6696 ;;      Locals:         0       2       0       0       0
  6697 ;;      Temps:          0       1       0       0       0
  6698 ;;      Totals:         0       7       0       0       0
  6699 ;;Total ram usage:        7 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    3
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_UpdateDisplay
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           psect	text922
  6709                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6710                           	line	5
  6711                           	global	__size_of___awmod
  6712  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6713                           	
  6714  0DDF                     ___awmod:	
  6715                           	opt	stack 2
  6716                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6717                           	line	8
  6718                           	
  6719  0DDF                     l10585:	
  6720  0DDF  1283               	bcf	status, 5	;RP0=0, select bank0
  6721  0DE0  1303               	bcf	status, 6	;RP1=0, select bank0
  6722  0DE1  01A6               	clrf	(___awmod@sign)
  6723                           	line	9
  6724  0DE2  1FA3               	btfss	(___awmod@dividend+1),7
  6725  0DE3  2DE5               	goto	u4061
  6726  0DE4  2DE6               	goto	u4060
  6727  0DE5                     u4061:
  6728  0DE5  2DEF               	goto	l10589
  6729  0DE6                     u4060:
  6730                           	line	10
  6731                           	
  6732  0DE6                     l10587:	
  6733  0DE6  09A2               	comf	(___awmod@dividend),f
  6734  0DE7  09A3               	comf	(___awmod@dividend+1),f
  6735  0DE8  0AA2               	incf	(___awmod@dividend),f
  6736  0DE9  1903               	skipnz
  6737  0DEA  0AA3               	incf	(___awmod@dividend+1),f
  6738                           	line	11
  6739  0DEB  01A6               	clrf	(___awmod@sign)
  6740  0DEC  1403               	bsf	status,0
  6741  0DED  0DA6               	rlf	(___awmod@sign),f
  6742  0DEE  2DEF               	goto	l10589
  6743                           	line	12
  6744                           	
  6745  0DEF                     l7675:	
  6746                           	line	13
  6747                           	
  6748  0DEF                     l10589:	
  6749  0DEF  1FA1               	btfss	(___awmod@divisor+1),7
  6750  0DF0  2DF2               	goto	u4071
  6751  0DF1  2DF3               	goto	u4070
  6752  0DF2                     u4071:
  6753  0DF2  2DF9               	goto	l10593
  6754  0DF3                     u4070:
  6755                           	line	14
  6756                           	
  6757  0DF3                     l10591:	
  6758  0DF3  09A0               	comf	(___awmod@divisor),f
  6759  0DF4  09A1               	comf	(___awmod@divisor+1),f
  6760  0DF5  0AA0               	incf	(___awmod@divisor),f
  6761  0DF6  1903               	skipnz
  6762  0DF7  0AA1               	incf	(___awmod@divisor+1),f
  6763  0DF8  2DF9               	goto	l10593
  6764                           	
  6765  0DF9                     l7676:	
  6766                           	line	15
  6767                           	
  6768  0DF9                     l10593:	
  6769  0DF9  0821               	movf	(___awmod@divisor+1),w
  6770  0DFA  0420               	iorwf	(___awmod@divisor),w
  6771  0DFB  1903               	skipnz
  6772  0DFC  2DFE               	goto	u4081
  6773  0DFD  2DFF               	goto	u4080
  6774  0DFE                     u4081:
  6775  0DFE  2E35               	goto	l10611
  6776  0DFF                     u4080:
  6777                           	line	16
  6778                           	
  6779  0DFF                     l10595:	
  6780  0DFF  01A5               	clrf	(___awmod@counter)
  6781  0E00  1403               	bsf	status,0
  6782  0E01  0DA5               	rlf	(___awmod@counter),f
  6783                           	line	17
  6784  0E02  2E0F               	goto	l10601
  6785                           	
  6786  0E03                     l7679:	
  6787                           	line	18
  6788                           	
  6789  0E03                     l10597:	
  6790  0E03  3001               	movlw	01h
  6791                           	
  6792  0E04                     u4095:
  6793  0E04  1003               	clrc
  6794  0E05  0DA0               	rlf	(___awmod@divisor),f
  6795  0E06  0DA1               	rlf	(___awmod@divisor+1),f
  6796  0E07  3EFF               	addlw	-1
  6797  0E08  1D03               	skipz
  6798  0E09  2E04               	goto	u4095
  6799                           	line	19
  6800                           	
  6801  0E0A                     l10599:	
  6802  0E0A  3001               	movlw	(01h)
  6803  0E0B  00A4               	movwf	(??___awmod+0)+0
  6804  0E0C  0824               	movf	(??___awmod+0)+0,w
  6805  0E0D  07A5               	addwf	(___awmod@counter),f
  6806  0E0E  2E0F               	goto	l10601
  6807                           	line	20
  6808                           	
  6809  0E0F                     l7678:	
  6810                           	line	17
  6811                           	
  6812  0E0F                     l10601:	
  6813  0E0F  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6814  0E10  2E12               	goto	u4101
  6815  0E11  2E13               	goto	u4100
  6816  0E12                     u4101:
  6817  0E12  2E03               	goto	l10597
  6818  0E13                     u4100:
  6819  0E13  2E15               	goto	l10603
  6820                           	
  6821  0E14                     l7680:	
  6822  0E14  2E15               	goto	l10603
  6823                           	line	21
  6824                           	
  6825  0E15                     l7681:	
  6826                           	line	22
  6827                           	
  6828  0E15                     l10603:	
  6829  0E15  0821               	movf	(___awmod@divisor+1),w
  6830  0E16  0223               	subwf	(___awmod@dividend+1),w
  6831  0E17  1D03               	skipz
  6832  0E18  2E1B               	goto	u4115
  6833  0E19  0820               	movf	(___awmod@divisor),w
  6834  0E1A  0222               	subwf	(___awmod@dividend),w
  6835  0E1B                     u4115:
  6836  0E1B  1C03               	skipc
  6837  0E1C  2E1E               	goto	u4111
  6838  0E1D  2E1F               	goto	u4110
  6839  0E1E                     u4111:
  6840  0E1E  2E26               	goto	l10607
  6841  0E1F                     u4110:
  6842                           	line	23
  6843                           	
  6844  0E1F                     l10605:	
  6845  0E1F  0820               	movf	(___awmod@divisor),w
  6846  0E20  02A2               	subwf	(___awmod@dividend),f
  6847  0E21  0821               	movf	(___awmod@divisor+1),w
  6848  0E22  1C03               	skipc
  6849  0E23  03A3               	decf	(___awmod@dividend+1),f
  6850  0E24  02A3               	subwf	(___awmod@dividend+1),f
  6851  0E25  2E26               	goto	l10607
  6852                           	
  6853  0E26                     l7682:	
  6854                           	line	24
  6855                           	
  6856  0E26                     l10607:	
  6857  0E26  3001               	movlw	01h
  6858                           	
  6859  0E27                     u4125:
  6860  0E27  1003               	clrc
  6861  0E28  0CA1               	rrf	(___awmod@divisor+1),f
  6862  0E29  0CA0               	rrf	(___awmod@divisor),f
  6863  0E2A  3EFF               	addlw	-1
  6864  0E2B  1D03               	skipz
  6865  0E2C  2E27               	goto	u4125
  6866                           	line	25
  6867                           	
  6868  0E2D                     l10609:	
  6869  0E2D  3001               	movlw	low(01h)
  6870  0E2E  02A5               	subwf	(___awmod@counter),f
  6871  0E2F  1D03               	btfss	status,2
  6872  0E30  2E32               	goto	u4131
  6873  0E31  2E33               	goto	u4130
  6874  0E32                     u4131:
  6875  0E32  2E15               	goto	l10603
  6876  0E33                     u4130:
  6877  0E33  2E35               	goto	l10611
  6878                           	
  6879  0E34                     l7683:	
  6880  0E34  2E35               	goto	l10611
  6881                           	line	26
  6882                           	
  6883  0E35                     l7677:	
  6884                           	line	27
  6885                           	
  6886  0E35                     l10611:	
  6887  0E35  0826               	movf	(___awmod@sign),w
  6888  0E36  1D03               	skipz
  6889  0E37  2E39               	goto	u4140
  6890  0E38  2E3F               	goto	l10615
  6891  0E39                     u4140:
  6892                           	line	28
  6893                           	
  6894  0E39                     l10613:	
  6895  0E39  09A2               	comf	(___awmod@dividend),f
  6896  0E3A  09A3               	comf	(___awmod@dividend+1),f
  6897  0E3B  0AA2               	incf	(___awmod@dividend),f
  6898  0E3C  1903               	skipnz
  6899  0E3D  0AA3               	incf	(___awmod@dividend+1),f
  6900  0E3E  2E3F               	goto	l10615
  6901                           	
  6902  0E3F                     l7684:	
  6903                           	line	29
  6904                           	
  6905  0E3F                     l10615:	
  6906  0E3F  0823               	movf	(___awmod@dividend+1),w
  6907  0E40  01A1               	clrf	(?___awmod+1)
  6908  0E41  07A1               	addwf	(?___awmod+1)
  6909  0E42  0822               	movf	(___awmod@dividend),w
  6910  0E43  01A0               	clrf	(?___awmod)
  6911  0E44  07A0               	addwf	(?___awmod)
  6912                           
  6913  0E45  2E46               	goto	l7685
  6914                           	
  6915  0E46                     l10617:	
  6916                           	line	30
  6917                           	
  6918  0E46                     l7685:	
  6919  0E46  0008               	return
  6920                           	opt stack 0
  6921                           GLOBAL	__end_of___awmod
  6922  0E47                     	__end_of___awmod:
  6923 ;; =============== function ___awmod ends ============
  6924                           
  6925                           	signat	___awmod,8314
  6926                           	global	___lwmod
  6927                           psect	text923,local,class=CODE,delta=2
  6928                           global __ptext923
  6929  0BB9                     __ptext923:
  6930                           
  6931 ;; *************** function ___lwmod *****************
  6932 ;; Defined at:
  6933 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  divisor         2   14[BANK0 ] unsigned int 
  6936 ;;  dividend        2   16[BANK0 ] unsigned int 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  counter         1   19[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  2   14[BANK0 ] unsigned int 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6948 ;;      Params:         0       4       0       0       0
  6949 ;;      Locals:         0       1       0       0       0
  6950 ;;      Temps:          0       1       0       0       0
  6951 ;;      Totals:         0       6       0       0       0
  6952 ;;Total ram usage:        6 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    3
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_sprintf
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           psect	text923
  6962                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6963                           	line	5
  6964                           	global	__size_of___lwmod
  6965  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6966                           	
  6967  0BB9                     ___lwmod:	
  6968                           	opt	stack 1
  6969                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6970                           	line	8
  6971                           	
  6972  0BB9                     l10563:	
  6973  0BB9  1283               	bcf	status, 5	;RP0=0, select bank0
  6974  0BBA  1303               	bcf	status, 6	;RP1=0, select bank0
  6975  0BBB  082F               	movf	(___lwmod@divisor+1),w
  6976  0BBC  042E               	iorwf	(___lwmod@divisor),w
  6977  0BBD  1903               	skipnz
  6978  0BBE  2BC0               	goto	u4001
  6979  0BBF  2BC1               	goto	u4000
  6980  0BC0                     u4001:
  6981  0BC0  2BF7               	goto	l10581
  6982  0BC1                     u4000:
  6983                           	line	9
  6984                           	
  6985  0BC1                     l10565:	
  6986  0BC1  01B3               	clrf	(___lwmod@counter)
  6987  0BC2  1403               	bsf	status,0
  6988  0BC3  0DB3               	rlf	(___lwmod@counter),f
  6989                           	line	10
  6990  0BC4  2BD1               	goto	l10571
  6991                           	
  6992  0BC5                     l7485:	
  6993                           	line	11
  6994                           	
  6995  0BC5                     l10567:	
  6996  0BC5  3001               	movlw	01h
  6997                           	
  6998  0BC6                     u4015:
  6999  0BC6  1003               	clrc
  7000  0BC7  0DAE               	rlf	(___lwmod@divisor),f
  7001  0BC8  0DAF               	rlf	(___lwmod@divisor+1),f
  7002  0BC9  3EFF               	addlw	-1
  7003  0BCA  1D03               	skipz
  7004  0BCB  2BC6               	goto	u4015
  7005                           	line	12
  7006                           	
  7007  0BCC                     l10569:	
  7008  0BCC  3001               	movlw	(01h)
  7009  0BCD  00B2               	movwf	(??___lwmod+0)+0
  7010  0BCE  0832               	movf	(??___lwmod+0)+0,w
  7011  0BCF  07B3               	addwf	(___lwmod@counter),f
  7012  0BD0  2BD1               	goto	l10571
  7013                           	line	13
  7014                           	
  7015  0BD1                     l7484:	
  7016                           	line	10
  7017                           	
  7018  0BD1                     l10571:	
  7019  0BD1  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  7020  0BD2  2BD4               	goto	u4021
  7021  0BD3  2BD5               	goto	u4020
  7022  0BD4                     u4021:
  7023  0BD4  2BC5               	goto	l10567
  7024  0BD5                     u4020:
  7025  0BD5  2BD7               	goto	l10573
  7026                           	
  7027  0BD6                     l7486:	
  7028  0BD6  2BD7               	goto	l10573
  7029                           	line	14
  7030                           	
  7031  0BD7                     l7487:	
  7032                           	line	15
  7033                           	
  7034  0BD7                     l10573:	
  7035  0BD7  082F               	movf	(___lwmod@divisor+1),w
  7036  0BD8  0231               	subwf	(___lwmod@dividend+1),w
  7037  0BD9  1D03               	skipz
  7038  0BDA  2BDD               	goto	u4035
  7039  0BDB  082E               	movf	(___lwmod@divisor),w
  7040  0BDC  0230               	subwf	(___lwmod@dividend),w
  7041  0BDD                     u4035:
  7042  0BDD  1C03               	skipc
  7043  0BDE  2BE0               	goto	u4031
  7044  0BDF  2BE1               	goto	u4030
  7045  0BE0                     u4031:
  7046  0BE0  2BE8               	goto	l10577
  7047  0BE1                     u4030:
  7048                           	line	16
  7049                           	
  7050  0BE1                     l10575:	
  7051  0BE1  082E               	movf	(___lwmod@divisor),w
  7052  0BE2  02B0               	subwf	(___lwmod@dividend),f
  7053  0BE3  082F               	movf	(___lwmod@divisor+1),w
  7054  0BE4  1C03               	skipc
  7055  0BE5  03B1               	decf	(___lwmod@dividend+1),f
  7056  0BE6  02B1               	subwf	(___lwmod@dividend+1),f
  7057  0BE7  2BE8               	goto	l10577
  7058                           	
  7059  0BE8                     l7488:	
  7060                           	line	17
  7061                           	
  7062  0BE8                     l10577:	
  7063  0BE8  3001               	movlw	01h
  7064                           	
  7065  0BE9                     u4045:
  7066  0BE9  1003               	clrc
  7067  0BEA  0CAF               	rrf	(___lwmod@divisor+1),f
  7068  0BEB  0CAE               	rrf	(___lwmod@divisor),f
  7069  0BEC  3EFF               	addlw	-1
  7070  0BED  1D03               	skipz
  7071  0BEE  2BE9               	goto	u4045
  7072                           	line	18
  7073                           	
  7074  0BEF                     l10579:	
  7075  0BEF  3001               	movlw	low(01h)
  7076  0BF0  02B3               	subwf	(___lwmod@counter),f
  7077  0BF1  1D03               	btfss	status,2
  7078  0BF2  2BF4               	goto	u4051
  7079  0BF3  2BF5               	goto	u4050
  7080  0BF4                     u4051:
  7081  0BF4  2BD7               	goto	l10573
  7082  0BF5                     u4050:
  7083  0BF5  2BF7               	goto	l10581
  7084                           	
  7085  0BF6                     l7489:	
  7086  0BF6  2BF7               	goto	l10581
  7087                           	line	19
  7088                           	
  7089  0BF7                     l7483:	
  7090                           	line	20
  7091                           	
  7092  0BF7                     l10581:	
  7093  0BF7  0831               	movf	(___lwmod@dividend+1),w
  7094  0BF8  01AF               	clrf	(?___lwmod+1)
  7095  0BF9  07AF               	addwf	(?___lwmod+1)
  7096  0BFA  0830               	movf	(___lwmod@dividend),w
  7097  0BFB  01AE               	clrf	(?___lwmod)
  7098  0BFC  07AE               	addwf	(?___lwmod)
  7099                           
  7100  0BFD  2BFE               	goto	l7490
  7101                           	
  7102  0BFE                     l10583:	
  7103                           	line	21
  7104                           	
  7105  0BFE                     l7490:	
  7106  0BFE  0008               	return
  7107                           	opt stack 0
  7108                           GLOBAL	__end_of___lwmod
  7109  0BFF                     	__end_of___lwmod:
  7110 ;; =============== function ___lwmod ends ============
  7111                           
  7112                           	signat	___lwmod,8314
  7113                           	global	___lwdiv
  7114                           psect	text924,local,class=CODE,delta=2
  7115                           global __ptext924
  7116  0C8C                     __ptext924:
  7117                           
  7118 ;; *************** function ___lwdiv *****************
  7119 ;; Defined at:
  7120 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  divisor         2    6[BANK0 ] unsigned int 
  7123 ;;  dividend        2    8[BANK0 ] unsigned int 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  quotient        2   11[BANK0 ] unsigned int 
  7126 ;;  counter         1   13[BANK0 ] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  2    6[BANK0 ] unsigned int 
  7129 ;; Registers used:
  7130 ;;		wreg, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         0       4       0       0       0
  7137 ;;      Locals:         0       3       0       0       0
  7138 ;;      Temps:          0       1       0       0       0
  7139 ;;      Totals:         0       8       0       0       0
  7140 ;;Total ram usage:        8 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    3
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_readAvgDistance
  7147 ;;		_ADCconvert
  7148 ;;		_sprintf
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           psect	text924
  7152                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7153                           	line	5
  7154                           	global	__size_of___lwdiv
  7155  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7156                           	
  7157  0C8C                     ___lwdiv:	
  7158                           	opt	stack 1
  7159                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7160                           	line	9
  7161                           	
  7162  0C8C                     l10537:	
  7163  0C8C  1283               	bcf	status, 5	;RP0=0, select bank0
  7164  0C8D  1303               	bcf	status, 6	;RP1=0, select bank0
  7165  0C8E  01AB               	clrf	(___lwdiv@quotient)
  7166  0C8F  01AC               	clrf	(___lwdiv@quotient+1)
  7167                           	line	10
  7168                           	
  7169  0C90                     l10539:	
  7170  0C90  0827               	movf	(___lwdiv@divisor+1),w
  7171  0C91  0426               	iorwf	(___lwdiv@divisor),w
  7172  0C92  1903               	skipnz
  7173  0C93  2C95               	goto	u3931
  7174  0C94  2C96               	goto	u3930
  7175  0C95                     u3931:
  7176  0C95  2CD4               	goto	l10559
  7177  0C96                     u3930:
  7178                           	line	11
  7179                           	
  7180  0C96                     l10541:	
  7181  0C96  01AD               	clrf	(___lwdiv@counter)
  7182  0C97  1403               	bsf	status,0
  7183  0C98  0DAD               	rlf	(___lwdiv@counter),f
  7184                           	line	12
  7185  0C99  2CA6               	goto	l10547
  7186                           	
  7187  0C9A                     l7475:	
  7188                           	line	13
  7189                           	
  7190  0C9A                     l10543:	
  7191  0C9A  3001               	movlw	01h
  7192                           	
  7193  0C9B                     u3945:
  7194  0C9B  1003               	clrc
  7195  0C9C  0DA6               	rlf	(___lwdiv@divisor),f
  7196  0C9D  0DA7               	rlf	(___lwdiv@divisor+1),f
  7197  0C9E  3EFF               	addlw	-1
  7198  0C9F  1D03               	skipz
  7199  0CA0  2C9B               	goto	u3945
  7200                           	line	14
  7201                           	
  7202  0CA1                     l10545:	
  7203  0CA1  3001               	movlw	(01h)
  7204  0CA2  00AA               	movwf	(??___lwdiv+0)+0
  7205  0CA3  082A               	movf	(??___lwdiv+0)+0,w
  7206  0CA4  07AD               	addwf	(___lwdiv@counter),f
  7207  0CA5  2CA6               	goto	l10547
  7208                           	line	15
  7209                           	
  7210  0CA6                     l7474:	
  7211                           	line	12
  7212                           	
  7213  0CA6                     l10547:	
  7214  0CA6  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  7215  0CA7  2CA9               	goto	u3951
  7216  0CA8  2CAA               	goto	u3950
  7217  0CA9                     u3951:
  7218  0CA9  2C9A               	goto	l10543
  7219  0CAA                     u3950:
  7220  0CAA  2CAC               	goto	l10549
  7221                           	
  7222  0CAB                     l7476:	
  7223  0CAB  2CAC               	goto	l10549
  7224                           	line	16
  7225                           	
  7226  0CAC                     l7477:	
  7227                           	line	17
  7228                           	
  7229  0CAC                     l10549:	
  7230  0CAC  3001               	movlw	01h
  7231                           	
  7232  0CAD                     u3965:
  7233  0CAD  1003               	clrc
  7234  0CAE  0DAB               	rlf	(___lwdiv@quotient),f
  7235  0CAF  0DAC               	rlf	(___lwdiv@quotient+1),f
  7236  0CB0  3EFF               	addlw	-1
  7237  0CB1  1D03               	skipz
  7238  0CB2  2CAD               	goto	u3965
  7239                           	line	18
  7240  0CB3  0827               	movf	(___lwdiv@divisor+1),w
  7241  0CB4  0229               	subwf	(___lwdiv@dividend+1),w
  7242  0CB5  1D03               	skipz
  7243  0CB6  2CB9               	goto	u3975
  7244  0CB7  0826               	movf	(___lwdiv@divisor),w
  7245  0CB8  0228               	subwf	(___lwdiv@dividend),w
  7246  0CB9                     u3975:
  7247  0CB9  1C03               	skipc
  7248  0CBA  2CBC               	goto	u3971
  7249  0CBB  2CBD               	goto	u3970
  7250  0CBC                     u3971:
  7251  0CBC  2CC5               	goto	l10555
  7252  0CBD                     u3970:
  7253                           	line	19
  7254                           	
  7255  0CBD                     l10551:	
  7256  0CBD  0826               	movf	(___lwdiv@divisor),w
  7257  0CBE  02A8               	subwf	(___lwdiv@dividend),f
  7258  0CBF  0827               	movf	(___lwdiv@divisor+1),w
  7259  0CC0  1C03               	skipc
  7260  0CC1  03A9               	decf	(___lwdiv@dividend+1),f
  7261  0CC2  02A9               	subwf	(___lwdiv@dividend+1),f
  7262                           	line	20
  7263                           	
  7264  0CC3                     l10553:	
  7265  0CC3  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7266  0CC4  2CC5               	goto	l10555
  7267                           	line	21
  7268                           	
  7269  0CC5                     l7478:	
  7270                           	line	22
  7271                           	
  7272  0CC5                     l10555:	
  7273  0CC5  3001               	movlw	01h
  7274                           	
  7275  0CC6                     u3985:
  7276  0CC6  1003               	clrc
  7277  0CC7  0CA7               	rrf	(___lwdiv@divisor+1),f
  7278  0CC8  0CA6               	rrf	(___lwdiv@divisor),f
  7279  0CC9  3EFF               	addlw	-1
  7280  0CCA  1D03               	skipz
  7281  0CCB  2CC6               	goto	u3985
  7282                           	line	23
  7283                           	
  7284  0CCC                     l10557:	
  7285  0CCC  3001               	movlw	low(01h)
  7286  0CCD  02AD               	subwf	(___lwdiv@counter),f
  7287  0CCE  1D03               	btfss	status,2
  7288  0CCF  2CD1               	goto	u3991
  7289  0CD0  2CD2               	goto	u3990
  7290  0CD1                     u3991:
  7291  0CD1  2CAC               	goto	l10549
  7292  0CD2                     u3990:
  7293  0CD2  2CD4               	goto	l10559
  7294                           	
  7295  0CD3                     l7479:	
  7296  0CD3  2CD4               	goto	l10559
  7297                           	line	24
  7298                           	
  7299  0CD4                     l7473:	
  7300                           	line	25
  7301                           	
  7302  0CD4                     l10559:	
  7303  0CD4  082C               	movf	(___lwdiv@quotient+1),w
  7304  0CD5  01A7               	clrf	(?___lwdiv+1)
  7305  0CD6  07A7               	addwf	(?___lwdiv+1)
  7306  0CD7  082B               	movf	(___lwdiv@quotient),w
  7307  0CD8  01A6               	clrf	(?___lwdiv)
  7308  0CD9  07A6               	addwf	(?___lwdiv)
  7309                           
  7310  0CDA  2CDB               	goto	l7480
  7311                           	
  7312  0CDB                     l10561:	
  7313                           	line	26
  7314                           	
  7315  0CDB                     l7480:	
  7316  0CDB  0008               	return
  7317                           	opt stack 0
  7318                           GLOBAL	__end_of___lwdiv
  7319  0CDC                     	__end_of___lwdiv:
  7320 ;; =============== function ___lwdiv ends ============
  7321                           
  7322                           	signat	___lwdiv,8314
  7323                           	global	___wmul
  7324                           psect	text925,local,class=CODE,delta=2
  7325                           global __ptext925
  7326  0A54                     __ptext925:
  7327                           
  7328 ;; *************** function ___wmul *****************
  7329 ;; Defined at:
  7330 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7333 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  product         2    4[BANK0 ] unsigned int 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2    0[BANK0 ] unsigned int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7345 ;;      Params:         0       4       0       0       0
  7346 ;;      Locals:         0       2       0       0       0
  7347 ;;      Temps:          0       0       0       0       0
  7348 ;;      Totals:         0       6       0       0       0
  7349 ;;Total ram usage:        6 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    3
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		_ADCconvert
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           psect	text925
  7359                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7360                           	line	3
  7361                           	global	__size_of___wmul
  7362  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7363                           	
  7364  0A54                     ___wmul:	
  7365                           	opt	stack 1
  7366                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7367                           	line	4
  7368                           	
  7369  0A54                     l10525:	
  7370  0A54  1283               	bcf	status, 5	;RP0=0, select bank0
  7371  0A55  1303               	bcf	status, 6	;RP1=0, select bank0
  7372  0A56  01A4               	clrf	(___wmul@product)
  7373  0A57  01A5               	clrf	(___wmul@product+1)
  7374  0A58  2A59               	goto	l10527
  7375                           	line	6
  7376                           	
  7377  0A59                     l7467:	
  7378                           	line	7
  7379                           	
  7380  0A59                     l10527:	
  7381  0A59  1C20               	btfss	(___wmul@multiplier),(0)&7
  7382  0A5A  2A5C               	goto	u3891
  7383  0A5B  2A5D               	goto	u3890
  7384  0A5C                     u3891:
  7385  0A5C  2A63               	goto	l7468
  7386  0A5D                     u3890:
  7387                           	line	8
  7388                           	
  7389  0A5D                     l10529:	
  7390  0A5D  0822               	movf	(___wmul@multiplicand),w
  7391  0A5E  07A4               	addwf	(___wmul@product),f
  7392  0A5F  1803               	skipnc
  7393  0A60  0AA5               	incf	(___wmul@product+1),f
  7394  0A61  0823               	movf	(___wmul@multiplicand+1),w
  7395  0A62  07A5               	addwf	(___wmul@product+1),f
  7396                           	
  7397  0A63                     l7468:	
  7398                           	line	9
  7399  0A63  3001               	movlw	01h
  7400                           	
  7401  0A64                     u3905:
  7402  0A64  1003               	clrc
  7403  0A65  0DA2               	rlf	(___wmul@multiplicand),f
  7404  0A66  0DA3               	rlf	(___wmul@multiplicand+1),f
  7405  0A67  3EFF               	addlw	-1
  7406  0A68  1D03               	skipz
  7407  0A69  2A64               	goto	u3905
  7408                           	line	10
  7409                           	
  7410  0A6A                     l10531:	
  7411  0A6A  3001               	movlw	01h
  7412                           	
  7413  0A6B                     u3915:
  7414  0A6B  1003               	clrc
  7415  0A6C  0CA1               	rrf	(___wmul@multiplier+1),f
  7416  0A6D  0CA0               	rrf	(___wmul@multiplier),f
  7417  0A6E  3EFF               	addlw	-1
  7418  0A6F  1D03               	skipz
  7419  0A70  2A6B               	goto	u3915
  7420                           	line	11
  7421  0A71  0821               	movf	((___wmul@multiplier+1)),w
  7422  0A72  0420               	iorwf	((___wmul@multiplier)),w
  7423  0A73  1D03               	skipz
  7424  0A74  2A76               	goto	u3921
  7425  0A75  2A77               	goto	u3920
  7426  0A76                     u3921:
  7427  0A76  2A59               	goto	l10527
  7428  0A77                     u3920:
  7429  0A77  2A78               	goto	l10533
  7430                           	
  7431  0A78                     l7469:	
  7432                           	line	12
  7433                           	
  7434  0A78                     l10533:	
  7435  0A78  0825               	movf	(___wmul@product+1),w
  7436  0A79  01A1               	clrf	(?___wmul+1)
  7437  0A7A  07A1               	addwf	(?___wmul+1)
  7438  0A7B  0824               	movf	(___wmul@product),w
  7439  0A7C  01A0               	clrf	(?___wmul)
  7440  0A7D  07A0               	addwf	(?___wmul)
  7441                           
  7442  0A7E  2A7F               	goto	l7470
  7443                           	
  7444  0A7F                     l10535:	
  7445                           	line	13
  7446                           	
  7447  0A7F                     l7470:	
  7448  0A7F  0008               	return
  7449                           	opt stack 0
  7450                           GLOBAL	__end_of___wmul
  7451  0A80                     	__end_of___wmul:
  7452 ;; =============== function ___wmul ends ============
  7453                           
  7454                           	signat	___wmul,8314
  7455                           	global	_ser_isrx
  7456                           psect	text926,local,class=CODE,delta=2
  7457                           global __ptext926
  7458  0965                     __ptext926:
  7459                           
  7460 ;; *************** function _ser_isrx *****************
  7461 ;; Defined at:
  7462 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;		None
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;		None
  7467 ;; Return value:  Size  Location     Type
  7468 ;;		None               void
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7476 ;;      Params:         0       0       0       0       0
  7477 ;;      Locals:         0       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0
  7479 ;;      Totals:         0       0       0       0       0
  7480 ;;Total ram usage:        0 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    3
  7483 ;; This function calls:
  7484 ;;		Nothing
  7485 ;; This function is called by:
  7486 ;;		_ser_getch
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           psect	text926
  7490                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7491                           	line	45
  7492                           	global	__size_of_ser_isrx
  7493  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  7494                           	
  7495  0965                     _ser_isrx:	
  7496                           	opt	stack 1
  7497                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  7498                           	line	46
  7499                           	
  7500  0965                     l10477:	
  7501                           ;ser.c: 46: if(OERR) {
  7502  0965  1283               	bcf	status, 5	;RP0=0, select bank0
  7503  0966  1303               	bcf	status, 6	;RP1=0, select bank0
  7504  0967  1C98               	btfss	(193/8),(193)&7
  7505  0968  296A               	goto	u3821
  7506  0969  296B               	goto	u3820
  7507  096A                     u3821:
  7508  096A  2970               	goto	l10485
  7509  096B                     u3820:
  7510                           	line	47
  7511                           	
  7512  096B                     l10479:	
  7513                           ;ser.c: 47: CREN = 0;
  7514  096B  1218               	bcf	(196/8),(196)&7
  7515                           	line	48
  7516                           ;ser.c: 48: CREN = 1;
  7517  096C  1618               	bsf	(196/8),(196)&7
  7518                           	line	49
  7519                           	
  7520  096D                     l10481:	
  7521                           ;ser.c: 49: return 0;
  7522  096D  1003               	clrc
  7523                           	
  7524  096E  297B               	goto	l6722
  7525                           	
  7526  096F                     l10483:	
  7527  096F  297B               	goto	l6722
  7528                           	line	50
  7529                           	
  7530  0970                     l6721:	
  7531                           	line	51
  7532                           	
  7533  0970                     l10485:	
  7534                           ;ser.c: 50: }
  7535                           ;ser.c: 51: return (rxiptr!=rxoptr);
  7536  0970  086C               	movf	(_rxiptr),w	;volatile
  7537  0971  066D               	xorwf	(_rxoptr),w	;volatile
  7538  0972  1D03               	skipz
  7539  0973  2975               	goto	u3831
  7540  0974  2976               	goto	u3830
  7541  0975                     u3831:
  7542  0975  2978               	goto	l10489
  7543  0976                     u3830:
  7544                           	
  7545  0976                     l10487:	
  7546  0976  1003               	clrc
  7547                           	
  7548  0977  297B               	goto	l6722
  7549                           	
  7550  0978                     l10161:	
  7551                           	
  7552  0978                     l10489:	
  7553  0978  1403               	setc
  7554                           	
  7555  0979  297B               	goto	l6722
  7556                           	
  7557  097A                     l10163:	
  7558  097A  297B               	goto	l6722
  7559                           	
  7560  097B                     l10491:	
  7561                           	line	52
  7562                           	
  7563  097B                     l6722:	
  7564  097B  0008               	return
  7565                           	opt stack 0
  7566                           GLOBAL	__end_of_ser_isrx
  7567  097C                     	__end_of_ser_isrx:
  7568 ;; =============== function _ser_isrx ends ============
  7569                           
  7570                           	signat	_ser_isrx,88
  7571                           	global	_spi_transfer
  7572                           psect	text927,local,class=CODE,delta=2
  7573                           global __ptext927
  7574  0911                     __ptext927:
  7575                           
  7576 ;; *************** function _spi_transfer *****************
  7577 ;; Defined at:
  7578 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  data            1    wreg     unsigned char 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  data            1    2[BANK0 ] unsigned char 
  7583 ;;  temp            1    1[BANK0 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7593 ;;      Params:         0       0       0       0       0
  7594 ;;      Locals:         0       2       0       0       0
  7595 ;;      Temps:          0       1       0       0       0
  7596 ;;      Totals:         0       3       0       0       0
  7597 ;;Total ram usage:        3 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    3
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_rotate
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           psect	text927
  7607                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7608                           	line	34
  7609                           	global	__size_of_spi_transfer
  7610  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7611                           	
  7612  0911                     _spi_transfer:	
  7613                           	opt	stack 3
  7614                           ; Regs used in _spi_transfer: [wreg]
  7615                           ;spi_transfer@data stored from wreg
  7616  0911  1283               	bcf	status, 5	;RP0=0, select bank0
  7617  0912  1303               	bcf	status, 6	;RP1=0, select bank0
  7618  0913  00A2               	movwf	(spi_transfer@data)
  7619                           	line	35
  7620                           	
  7621  0914                     l10363:	
  7622                           ;steppermotor.c: 35: unsigned char temp = 0;
  7623  0914  01A1               	clrf	(spi_transfer@temp)
  7624                           	line	37
  7625                           ;steppermotor.c: 37: SSPIF = 0;
  7626  0915  118C               	bcf	(99/8),(99)&7
  7627                           	line	38
  7628                           	
  7629  0916                     l10365:	
  7630                           ;steppermotor.c: 38: SSPBUF = data;
  7631  0916  0822               	movf	(spi_transfer@data),w
  7632  0917  0093               	movwf	(19)	;volatile
  7633                           	line	40
  7634                           ;steppermotor.c: 40: while (SSPIF == 0);
  7635  0918  2919               	goto	l3699
  7636                           	
  7637  0919                     l3700:	
  7638                           	
  7639  0919                     l3699:	
  7640  0919  1D8C               	btfss	(99/8),(99)&7
  7641  091A  291C               	goto	u3621
  7642  091B  291D               	goto	u3620
  7643  091C                     u3621:
  7644  091C  2919               	goto	l3699
  7645  091D                     u3620:
  7646  091D  291E               	goto	l10367
  7647                           	
  7648  091E                     l3701:	
  7649                           	line	41
  7650                           	
  7651  091E                     l10367:	
  7652                           ;steppermotor.c: 41: temp = SSPBUF;
  7653  091E  0813               	movf	(19),w	;volatile
  7654  091F  00A0               	movwf	(??_spi_transfer+0)+0
  7655  0920  0820               	movf	(??_spi_transfer+0)+0,w
  7656  0921  00A1               	movwf	(spi_transfer@temp)
  7657                           	line	42
  7658                           	
  7659  0922                     l10369:	
  7660                           ;steppermotor.c: 42: SSPIF = 0;
  7661  0922  118C               	bcf	(99/8),(99)&7
  7662  0923  2924               	goto	l3702
  7663                           	line	44
  7664                           	
  7665  0924                     l10371:	
  7666                           	line	45
  7667                           ;steppermotor.c: 44: return temp;
  7668                           ;	Return value of _spi_transfer is never used
  7669                           	
  7670  0924                     l3702:	
  7671  0924  0008               	return
  7672                           	opt stack 0
  7673                           GLOBAL	__end_of_spi_transfer
  7674  0925                     	__end_of_spi_transfer:
  7675 ;; =============== function _spi_transfer ends ============
  7676                           
  7677                           	signat	_spi_transfer,4217
  7678                           	global	_Menu
  7679                           psect	text928,local,class=CODE,delta=2
  7680                           global __ptext928
  7681  0C45                     __ptext928:
  7682                           
  7683 ;; *************** function _Menu *****************
  7684 ;; Defined at:
  7685 ;;		line 181 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  BTN_input       1    wreg     unsigned char 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  BTN_input       1    0[BANK0 ] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      unsigned char 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7699 ;;      Params:         0       0       0       0       0
  7700 ;;      Locals:         0       1       0       0       0
  7701 ;;      Temps:          0       0       0       0       0
  7702 ;;      Totals:         0       1       0       0       0
  7703 ;;Total ram usage:        1 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    3
  7706 ;; This function calls:
  7707 ;;		Nothing
  7708 ;; This function is called by:
  7709 ;;		_main
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           psect	text928
  7713                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7714                           	line	181
  7715                           	global	__size_of_Menu
  7716  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7717                           	
  7718  0C45                     _Menu:	
  7719                           	opt	stack 4
  7720                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7721                           ;Menu@BTN_input stored from wreg
  7722  0C45  1283               	bcf	status, 5	;RP0=0, select bank0
  7723  0C46  1303               	bcf	status, 6	;RP1=0, select bank0
  7724  0C47  00A0               	movwf	(Menu@BTN_input)
  7725                           	line	182
  7726                           	
  7727  0C48                     l10339:	
  7728                           ;HMI.c: 182: switch (BTN_input)
  7729  0C48  2C77               	goto	l10357
  7730                           	line	184
  7731                           ;HMI.c: 183: {
  7732                           ;HMI.c: 184: case 1:
  7733                           	
  7734  0C49                     l4527:	
  7735                           	line	186
  7736                           ;HMI.c: 186: break;
  7737  0C49  2C89               	goto	l10359
  7738                           	line	187
  7739                           ;HMI.c: 187: case 2:
  7740                           	
  7741  0C4A                     l4529:	
  7742                           	line	189
  7743                           ;HMI.c: 189: break;
  7744  0C4A  2C89               	goto	l10359
  7745                           	line	190
  7746                           ;HMI.c: 190: case 3:
  7747                           	
  7748  0C4B                     l4530:	
  7749                           	line	191
  7750                           	
  7751  0C4B                     l10341:	
  7752                           ;HMI.c: 191: pos--;
  7753  0C4B  30FF               	movlw	low(-1)
  7754  0C4C  1683               	bsf	status, 5	;RP0=1, select bank1
  7755  0C4D  1303               	bcf	status, 6	;RP1=0, select bank1
  7756  0C4E  07C8               	addwf	(_pos)^080h,f
  7757  0C4F  1803               	skipnc
  7758  0C50  0AC9               	incf	(_pos+1)^080h,f
  7759  0C51  30FF               	movlw	high(-1)
  7760  0C52  07C9               	addwf	(_pos+1)^080h,f
  7761                           	line	192
  7762                           	
  7763  0C53                     l10343:	
  7764                           ;HMI.c: 192: if (pos < 0)
  7765  0C53  1FC9               	btfss	(_pos+1)^080h,7
  7766  0C54  2C56               	goto	u3601
  7767  0C55  2C57               	goto	u3600
  7768  0C56                     u3601:
  7769  0C56  2C89               	goto	l10359
  7770  0C57                     u3600:
  7771                           	line	193
  7772                           	
  7773  0C57                     l10345:	
  7774                           ;HMI.c: 193: pos = 6 - 1;
  7775  0C57  3005               	movlw	low(05h)
  7776  0C58  00C8               	movwf	(_pos)^080h
  7777  0C59  3000               	movlw	high(05h)
  7778  0C5A  00C9               	movwf	((_pos)^080h)+1
  7779  0C5B  2C89               	goto	l10359
  7780                           	
  7781  0C5C                     l4531:	
  7782                           	line	195
  7783                           ;HMI.c: 195: break;
  7784  0C5C  2C89               	goto	l10359
  7785                           	line	196
  7786                           ;HMI.c: 196: case 4:
  7787                           	
  7788  0C5D                     l4532:	
  7789                           	line	197
  7790                           	
  7791  0C5D                     l10347:	
  7792                           ;HMI.c: 197: pos++;
  7793  0C5D  3001               	movlw	low(01h)
  7794  0C5E  1683               	bsf	status, 5	;RP0=1, select bank1
  7795  0C5F  1303               	bcf	status, 6	;RP1=0, select bank1
  7796  0C60  07C8               	addwf	(_pos)^080h,f
  7797  0C61  1803               	skipnc
  7798  0C62  0AC9               	incf	(_pos+1)^080h,f
  7799  0C63  3000               	movlw	high(01h)
  7800  0C64  07C9               	addwf	(_pos+1)^080h,f
  7801                           	line	198
  7802                           ;HMI.c: 198: if (pos == 6)
  7803  0C65  3006               	movlw	06h
  7804  0C66  0648               	xorwf	(_pos)^080h,w
  7805  0C67  0449               	iorwf	(_pos+1)^080h,w
  7806  0C68  1D03               	skipz
  7807  0C69  2C6B               	goto	u3611
  7808  0C6A  2C6C               	goto	u3610
  7809  0C6B                     u3611:
  7810  0C6B  2C89               	goto	l10359
  7811  0C6C                     u3610:
  7812                           	line	199
  7813                           	
  7814  0C6C                     l10349:	
  7815                           ;HMI.c: 199: pos = 0;
  7816  0C6C  01C8               	clrf	(_pos)^080h
  7817  0C6D  01C9               	clrf	(_pos+1)^080h
  7818  0C6E  2C89               	goto	l10359
  7819                           	
  7820  0C6F                     l4533:	
  7821                           	line	201
  7822                           ;HMI.c: 201: break;
  7823  0C6F  2C89               	goto	l10359
  7824                           	line	202
  7825                           ;HMI.c: 202: case 5:
  7826                           	
  7827  0C70                     l4534:	
  7828                           	line	203
  7829                           	
  7830  0C70                     l10351:	
  7831                           ;HMI.c: 203: return pos;
  7832  0C70  1683               	bsf	status, 5	;RP0=1, select bank1
  7833  0C71  1303               	bcf	status, 6	;RP1=0, select bank1
  7834  0C72  0848               	movf	(_pos)^080h,w
  7835  0C73  2C8B               	goto	l4535
  7836                           	
  7837  0C74                     l10353:	
  7838  0C74  2C8B               	goto	l4535
  7839                           	line	206
  7840                           ;HMI.c: 206: default:
  7841                           	
  7842  0C75                     l4536:	
  7843                           	line	208
  7844                           ;HMI.c: 208: break;
  7845  0C75  2C89               	goto	l10359
  7846                           	line	209
  7847                           	
  7848  0C76                     l10355:	
  7849                           ;HMI.c: 209: }
  7850  0C76  2C89               	goto	l10359
  7851                           	line	182
  7852                           	
  7853  0C77                     l4526:	
  7854                           	
  7855  0C77                     l10357:	
  7856  0C77  1283               	bcf	status, 5	;RP0=0, select bank0
  7857  0C78  0820               	movf	(Menu@BTN_input),w
  7858                           	; Switch size 1, requested type "space"
  7859                           ; Number of cases is 5, Range of values is 1 to 5
  7860                           ; switch strategies available:
  7861                           ; Name         Instructions Cycles
  7862                           ; simple_byte           16     9 (average)
  7863                           ; direct_byte           26    11 (fixed)
  7864                           ; jumptable            263     9 (fixed)
  7865                           ;	Chosen strategy is simple_byte
  7866                           
  7867                           	opt asmopt_off
  7868  0C79  3A01               	xorlw	1^0	; case 1
  7869  0C7A  1903               	skipnz
  7870  0C7B  2C89               	goto	l10359
  7871  0C7C  3A03               	xorlw	2^1	; case 2
  7872  0C7D  1903               	skipnz
  7873  0C7E  2C89               	goto	l10359
  7874  0C7F  3A01               	xorlw	3^2	; case 3
  7875  0C80  1903               	skipnz
  7876  0C81  2C4B               	goto	l10341
  7877  0C82  3A07               	xorlw	4^3	; case 4
  7878  0C83  1903               	skipnz
  7879  0C84  2C5D               	goto	l10347
  7880  0C85  3A01               	xorlw	5^4	; case 5
  7881  0C86  1903               	skipnz
  7882  0C87  2C70               	goto	l10351
  7883  0C88  2C89               	goto	l10359
  7884                           	opt asmopt_on
  7885                           
  7886                           	line	209
  7887                           	
  7888  0C89                     l4528:	
  7889                           	line	210
  7890                           	
  7891  0C89                     l10359:	
  7892                           ;HMI.c: 210: return 255;
  7893  0C89  30FF               	movlw	(0FFh)
  7894  0C8A  2C8B               	goto	l4535
  7895                           	
  7896  0C8B                     l10361:	
  7897                           	line	211
  7898                           	
  7899  0C8B                     l4535:	
  7900  0C8B  0008               	return
  7901                           	opt stack 0
  7902                           GLOBAL	__end_of_Menu
  7903  0C8C                     	__end_of_Menu:
  7904 ;; =============== function _Menu ends ============
  7905                           
  7906                           	signat	_Menu,4217
  7907                           	global	_ser_putch
  7908                           psect	text929,local,class=CODE,delta=2
  7909                           global __ptext929
  7910  0995                     __ptext929:
  7911                           
  7912 ;; *************** function _ser_putch *****************
  7913 ;; Defined at:
  7914 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  c               1    wreg     unsigned char 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  c               1    1[BANK0 ] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;		None               void
  7921 ;; Registers used:
  7922 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7928 ;;      Params:         0       0       0       0       0
  7929 ;;      Locals:         0       1       0       0       0
  7930 ;;      Temps:          0       1       0       0       0
  7931 ;;      Totals:         0       2       0       0       0
  7932 ;;Total ram usage:        2 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    3
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_ChargeMode
  7939 ;;		_robo_init
  7940 ;;		_robot_read
  7941 ;;		_robotMove
  7942 ;;		_robotTurn
  7943 ;;		_ser_puts
  7944 ;;		_ser_puts2
  7945 ;;		_ser_puthex
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           psect	text929
  7949                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7950                           	line	70
  7951                           	global	__size_of_ser_putch
  7952  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7953                           	
  7954  0995                     _ser_putch:	
  7955                           	opt	stack 3
  7956                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7957                           ;ser_putch@c stored from wreg
  7958  0995  1283               	bcf	status, 5	;RP0=0, select bank0
  7959  0996  1303               	bcf	status, 6	;RP1=0, select bank0
  7960  0997  00A1               	movwf	(ser_putch@c)
  7961                           	line	71
  7962                           	
  7963  0998                     l10327:	
  7964                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  7965  0998  299A               	goto	l10329
  7966                           	
  7967  0999                     l6732:	
  7968                           	line	72
  7969                           ;ser.c: 72: continue;
  7970  0999  299A               	goto	l10329
  7971                           	
  7972  099A                     l6731:	
  7973                           	line	71
  7974                           	
  7975  099A                     l10329:	
  7976  099A  086E               	movf	(_txiptr),w	;volatile
  7977  099B  3E01               	addlw	01h
  7978  099C  390F               	andlw	0Fh
  7979  099D  066F               	xorwf	(_txoptr),w	;volatile
  7980  099E  1903               	skipnz
  7981  099F  29A1               	goto	u3591
  7982  09A0  29A2               	goto	u3590
  7983  09A1                     u3591:
  7984  09A1  299A               	goto	l10329
  7985  09A2                     u3590:
  7986                           	
  7987  09A2                     l6733:	
  7988                           	line	73
  7989                           ;ser.c: 73: GIE=0;
  7990  09A2  138B               	bcf	(95/8),(95)&7
  7991                           	line	74
  7992                           	
  7993  09A3                     l10331:	
  7994                           ;ser.c: 74: txfifo[txiptr] = c;
  7995  09A3  0821               	movf	(ser_putch@c),w
  7996  09A4  00A0               	movwf	(??_ser_putch+0)+0
  7997  09A5  086E               	movf	(_txiptr),w
  7998  09A6  3EB0               	addlw	_txfifo&0ffh
  7999  09A7  0084               	movwf	fsr0
  8000  09A8  0820               	movf	(??_ser_putch+0)+0,w
  8001  09A9  1383               	bcf	status, 7	;select IRP bank1
  8002  09AA  0080               	movwf	indf
  8003                           	line	75
  8004                           	
  8005  09AB                     l10333:	
  8006                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  8007  09AB  086E               	movf	(_txiptr),w	;volatile
  8008  09AC  3E01               	addlw	01h
  8009  09AD  390F               	andlw	0Fh
  8010  09AE  00A0               	movwf	(??_ser_putch+0)+0
  8011  09AF  0820               	movf	(??_ser_putch+0)+0,w
  8012  09B0  00EE               	movwf	(_txiptr)	;volatile
  8013                           	line	76
  8014                           	
  8015  09B1                     l10335:	
  8016                           ;ser.c: 76: TXIE=1;
  8017  09B1  1683               	bsf	status, 5	;RP0=1, select bank1
  8018  09B2  1303               	bcf	status, 6	;RP1=0, select bank1
  8019  09B3  160C               	bsf	(1124/8)^080h,(1124)&7
  8020                           	line	77
  8021                           	
  8022  09B4                     l10337:	
  8023                           ;ser.c: 77: GIE=1;
  8024  09B4  178B               	bsf	(95/8),(95)&7
  8025                           	line	78
  8026                           	
  8027  09B5                     l6734:	
  8028  09B5  0008               	return
  8029                           	opt stack 0
  8030                           GLOBAL	__end_of_ser_putch
  8031  09B6                     	__end_of_ser_putch:
  8032 ;; =============== function _ser_putch ends ============
  8033                           
  8034                           	signat	_ser_putch,4216
  8035                           	global	_ser_init
  8036                           psect	text930,local,class=CODE,delta=2
  8037                           global __ptext930
  8038  09D8                     __ptext930:
  8039                           
  8040 ;; *************** function _ser_init *****************
  8041 ;; Defined at:
  8042 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;		None               void
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8056 ;;      Params:         0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0
  8058 ;;      Temps:          0       1       0       0       0
  8059 ;;      Totals:         0       1       0       0       0
  8060 ;;Total ram usage:        1 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    3
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_init
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           psect	text930
  8070                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  8071                           	line	113
  8072                           	global	__size_of_ser_init
  8073  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  8074                           	
  8075  09D8                     _ser_init:	
  8076                           	opt	stack 3
  8077                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  8078                           	line	114
  8079                           	
  8080  09D8                     l10301:	
  8081                           ;ser.c: 114: TRISC |= 0b10000000;
  8082  09D8  1683               	bsf	status, 5	;RP0=1, select bank1
  8083  09D9  1303               	bcf	status, 6	;RP1=0, select bank1
  8084  09DA  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  8085                           	line	115
  8086                           	
  8087  09DB                     l10303:	
  8088                           ;ser.c: 115: TRISC &= 0b10111111;
  8089  09DB  30BF               	movlw	(0BFh)
  8090  09DC  1283               	bcf	status, 5	;RP0=0, select bank0
  8091  09DD  1303               	bcf	status, 6	;RP1=0, select bank0
  8092  09DE  00A0               	movwf	(??_ser_init+0)+0
  8093  09DF  0820               	movf	(??_ser_init+0)+0,w
  8094  09E0  1683               	bsf	status, 5	;RP0=1, select bank1
  8095  09E1  1303               	bcf	status, 6	;RP1=0, select bank1
  8096  09E2  0587               	andwf	(135)^080h,f	;volatile
  8097                           	line	116
  8098                           	
  8099  09E3                     l10305:	
  8100                           ;ser.c: 116: BRGH=1;
  8101  09E3  1518               	bsf	(1218/8)^080h,(1218)&7
  8102                           	line	118
  8103                           	
  8104  09E4                     l10307:	
  8105                           ;ser.c: 118: SPBRG=20;
  8106  09E4  3014               	movlw	(014h)
  8107  09E5  0099               	movwf	(153)^080h	;volatile
  8108                           	line	121
  8109                           	
  8110  09E6                     l10309:	
  8111                           ;ser.c: 121: TX9=0;
  8112  09E6  1318               	bcf	(1222/8)^080h,(1222)&7
  8113                           	line	122
  8114                           	
  8115  09E7                     l10311:	
  8116                           ;ser.c: 122: RX9=0;
  8117  09E7  1283               	bcf	status, 5	;RP0=0, select bank0
  8118  09E8  1303               	bcf	status, 6	;RP1=0, select bank0
  8119  09E9  1318               	bcf	(198/8),(198)&7
  8120                           	line	124
  8121                           	
  8122  09EA                     l10313:	
  8123                           ;ser.c: 124: SYNC=0;
  8124  09EA  1683               	bsf	status, 5	;RP0=1, select bank1
  8125  09EB  1303               	bcf	status, 6	;RP1=0, select bank1
  8126  09EC  1218               	bcf	(1220/8)^080h,(1220)&7
  8127                           	line	125
  8128                           	
  8129  09ED                     l10315:	
  8130                           ;ser.c: 125: SPEN=1;
  8131  09ED  1283               	bcf	status, 5	;RP0=0, select bank0
  8132  09EE  1303               	bcf	status, 6	;RP1=0, select bank0
  8133  09EF  1798               	bsf	(199/8),(199)&7
  8134                           	line	126
  8135                           	
  8136  09F0                     l10317:	
  8137                           ;ser.c: 126: CREN=1;
  8138  09F0  1618               	bsf	(196/8),(196)&7
  8139                           	line	127
  8140                           	
  8141  09F1                     l10319:	
  8142                           ;ser.c: 127: TXIE=0;
  8143  09F1  1683               	bsf	status, 5	;RP0=1, select bank1
  8144  09F2  1303               	bcf	status, 6	;RP1=0, select bank1
  8145  09F3  120C               	bcf	(1124/8)^080h,(1124)&7
  8146                           	line	128
  8147                           	
  8148  09F4                     l10321:	
  8149                           ;ser.c: 128: RCIE=1;
  8150  09F4  168C               	bsf	(1125/8)^080h,(1125)&7
  8151                           	line	129
  8152                           	
  8153  09F5                     l10323:	
  8154                           ;ser.c: 129: TXEN=1;
  8155  09F5  1698               	bsf	(1221/8)^080h,(1221)&7
  8156                           	line	132
  8157                           	
  8158  09F6                     l10325:	
  8159                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  8160  09F6  3000               	movlw	(0)
  8161  09F7  1283               	bcf	status, 5	;RP0=0, select bank0
  8162  09F8  1303               	bcf	status, 6	;RP1=0, select bank0
  8163  09F9  00EF               	movwf	(_txoptr)	;volatile
  8164  09FA  00EE               	movwf	(_txiptr)	;volatile
  8165  09FB  00ED               	movwf	(_rxoptr)	;volatile
  8166  09FC  00A0               	movwf	(??_ser_init+0)+0
  8167  09FD  0820               	movf	(??_ser_init+0)+0,w
  8168  09FE  00EC               	movwf	(_rxiptr)	;volatile
  8169                           	line	133
  8170                           	
  8171  09FF                     l6756:	
  8172  09FF  0008               	return
  8173                           	opt stack 0
  8174                           GLOBAL	__end_of_ser_init
  8175  0A00                     	__end_of_ser_init:
  8176 ;; =============== function _ser_init ends ============
  8177                           
  8178                           	signat	_ser_init,88
  8179                           	global	_adc_read
  8180                           psect	text931,local,class=CODE,delta=2
  8181                           global __ptext931
  8182  0A00                     __ptext931:
  8183                           
  8184 ;; *************** function _adc_read *****************
  8185 ;; Defined at:
  8186 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;		None
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  2    0[BANK0 ] unsigned int 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8200 ;;      Params:         0       2       0       0       0
  8201 ;;      Locals:         0       2       0       0       0
  8202 ;;      Temps:          0       2       0       0       0
  8203 ;;      Totals:         0       6       0       0       0
  8204 ;;Total ram usage:        6 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    3
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_adc_read_channel
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           psect	text931
  8214                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8215                           	line	61
  8216                           	global	__size_of_adc_read
  8217  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  8218                           	
  8219  0A00                     _adc_read:	
  8220                           	opt	stack 0
  8221                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  8222                           	line	64
  8223                           	
  8224  0A00                     l10173:	
  8225                           ;adc.c: 62: volatile unsigned int adc_value;
  8226                           ;adc.c: 64: ADRESH = 0;
  8227  0A00  1283               	bcf	status, 5	;RP0=0, select bank0
  8228  0A01  1303               	bcf	status, 6	;RP1=0, select bank0
  8229  0A02  019E               	clrf	(30)	;volatile
  8230                           	line	66
  8231                           	
  8232  0A03                     l10175:	
  8233                           ;adc.c: 66: GO = 1;
  8234  0A03  151F               	bsf	(250/8),(250)&7
  8235                           	line	67
  8236                           ;adc.c: 67: while(GO) continue;
  8237  0A04  2A05               	goto	l703
  8238                           	
  8239  0A05                     l704:	
  8240                           	
  8241  0A05                     l703:	
  8242  0A05  191F               	btfsc	(250/8),(250)&7
  8243  0A06  2A08               	goto	u3381
  8244  0A07  2A09               	goto	u3380
  8245  0A08                     u3381:
  8246  0A08  2A05               	goto	l703
  8247  0A09                     u3380:
  8248                           	
  8249  0A09                     l705:	
  8250                           	line	68
  8251                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8252  0A09  0000               nop ;#
  8253                           	line	69
  8254                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8255  0A0A  0000               nop ;#
  8256                           	line	70
  8257                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8258  0A0B  0000               nop ;#
  8259                           psect	text931
  8260                           	line	73
  8261                           	
  8262  0A0C                     l10177:	
  8263                           ;adc.c: 73: adc_value = ADRESH;
  8264  0A0C  1283               	bcf	status, 5	;RP0=0, select bank0
  8265  0A0D  1303               	bcf	status, 6	;RP1=0, select bank0
  8266  0A0E  081E               	movf	(30),w	;volatile
  8267  0A0F  00A2               	movwf	(??_adc_read+0)+0
  8268  0A10  01A3               	clrf	(??_adc_read+0)+0+1
  8269  0A11  0822               	movf	0+(??_adc_read+0)+0,w
  8270  0A12  00A4               	movwf	(adc_read@adc_value)	;volatile
  8271  0A13  0823               	movf	1+(??_adc_read+0)+0,w
  8272  0A14  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  8273                           	line	74
  8274                           ;adc.c: 74: adc_value <<= 1;
  8275  0A15  3001               	movlw	01h
  8276                           	
  8277  0A16                     u3395:
  8278  0A16  1003               	clrc
  8279  0A17  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  8280  0A18  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  8281  0A19  3EFF               	addlw	-1
  8282  0A1A  1D03               	skipz
  8283  0A1B  2A16               	goto	u3395
  8284                           	line	75
  8285                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  8286  0A1C  1683               	bsf	status, 5	;RP0=1, select bank1
  8287  0A1D  1303               	bcf	status, 6	;RP1=0, select bank1
  8288  0A1E  081E               	movf	(158)^080h,w	;volatile
  8289                           	line	78
  8290                           	
  8291  0A1F                     l10179:	
  8292                           ;adc.c: 78: return (adc_value);
  8293  0A1F  1283               	bcf	status, 5	;RP0=0, select bank0
  8294  0A20  1303               	bcf	status, 6	;RP1=0, select bank0
  8295  0A21  0825               	movf	(adc_read@adc_value+1),w	;volatile
  8296  0A22  01A1               	clrf	(?_adc_read+1)
  8297  0A23  07A1               	addwf	(?_adc_read+1)
  8298  0A24  0824               	movf	(adc_read@adc_value),w	;volatile
  8299  0A25  01A0               	clrf	(?_adc_read)
  8300  0A26  07A0               	addwf	(?_adc_read)
  8301                           
  8302  0A27  2A28               	goto	l706
  8303                           	
  8304  0A28                     l10181:	
  8305                           	line	79
  8306                           	
  8307  0A28                     l706:	
  8308  0A28  0008               	return
  8309                           	opt stack 0
  8310                           GLOBAL	__end_of_adc_read
  8311  0A29                     	__end_of_adc_read:
  8312 ;; =============== function _adc_read ends ============
  8313                           
  8314                           	signat	_adc_read,90
  8315                           	global	_isr1
  8316                           psect	text932,local,class=CODE,delta=2
  8317                           global __ptext932
  8318  0595                     __ptext932:
  8319                           
  8320 ;; *************** function _isr1 *****************
  8321 ;; Defined at:
  8322 ;;		line 93 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;		None               void
  8329 ;; Registers used:
  8330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8336 ;;      Params:         0       0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0
  8338 ;;      Temps:          5       0       0       0       0
  8339 ;;      Totals:         5       0       0       0       0
  8340 ;;Total ram usage:        5 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:    2
  8343 ;; This function calls:
  8344 ;;		i1___lwmod
  8345 ;;		_ReadButtons
  8346 ;; This function is called by:
  8347 ;;		Interrupt level 1
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           psect	text932
  8351                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  8352                           	line	93
  8353                           	global	__size_of_isr1
  8354  00DC                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  8355                           	
  8356  0595                     _isr1:	
  8357                           	opt	stack 0
  8358                           ; Regs used in _isr1: [allreg]
  8359                           psect	intentry,class=CODE,delta=2
  8360                           global __pintentry
  8361  0004                     __pintentry:
  8362                           global interrupt_function
  8363  0004                     interrupt_function:
  8364                           	global saved_w
  8365  007E                     	saved_w	set	btemp+0
  8366  0004  00FE               	movwf	saved_w
  8367  0005  0E03               	swapf	status,w
  8368  0006  00F9               	movwf	(??_isr1+1)
  8369  0007  0804               	movf	fsr0,w
  8370  0008  00FA               	movwf	(??_isr1+2)
  8371  0009  080A               	movf	pclath,w
  8372  000A  00FB               	movwf	(??_isr1+3)
  8373  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  8374  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  8375  000D  087F               	movf	btemp+1,w
  8376  000E  00FC               	movwf	(??_isr1+4)
  8377  000F  120A  118A  2D95   	ljmp	_isr1
  8378                           psect	text932
  8379                           	line	97
  8380                           	
  8381  0595                     i1l10209:	
  8382                           ;Main.c: 97: if(TMR0IF)
  8383  0595  1D0B               	btfss	(90/8),(90)&7
  8384  0596  2D98               	goto	u343_21
  8385  0597  2D99               	goto	u343_20
  8386  0598                     u343_21:
  8387  0598  2E18               	goto	i1l10239
  8388  0599                     u343_20:
  8389                           	line	99
  8390                           	
  8391  0599                     i1l10211:	
  8392                           ;Main.c: 98: {
  8393                           ;Main.c: 99: TMR0IF = 0;
  8394  0599  110B               	bcf	(90/8),(90)&7
  8395                           	line	100
  8396                           	
  8397  059A                     i1l10213:	
  8398                           ;Main.c: 100: TMR0 = 100;
  8399  059A  3064               	movlw	(064h)
  8400  059B  0081               	movwf	(1)	;volatile
  8401                           	line	102
  8402                           ;Main.c: 102: RTC_Counter++;
  8403  059C  3001               	movlw	low(01h)
  8404  059D  07E7               	addwf	(_RTC_Counter),f	;volatile
  8405  059E  1803               	skipnc
  8406  059F  0AE8               	incf	(_RTC_Counter+1),f	;volatile
  8407  05A0  3000               	movlw	high(01h)
  8408  05A1  07E8               	addwf	(_RTC_Counter+1),f	;volatile
  8409                           	line	104
  8410                           	
  8411  05A2                     i1l10215:	
  8412                           ;Main.c: 104: RTC_FLAG_1MS = 1;
  8413  05A2  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  8414                           	line	105
  8415                           	
  8416  05A3                     i1l10217:	
  8417                           ;Main.c: 105: if(RTC_Counter % 10 == 0)
  8418  05A3  300A               	movlw	low(0Ah)
  8419  05A4  00F2               	movwf	(?i1___lwmod)
  8420  05A5  3000               	movlw	high(0Ah)
  8421  05A6  00F3               	movwf	((?i1___lwmod))+1
  8422  05A7  0868               	movf	(_RTC_Counter+1),w	;volatile
  8423  05A8  01F5               	clrf	1+(?i1___lwmod)+02h
  8424  05A9  07F5               	addwf	1+(?i1___lwmod)+02h
  8425  05AA  0867               	movf	(_RTC_Counter),w	;volatile
  8426  05AB  01F4               	clrf	0+(?i1___lwmod)+02h
  8427  05AC  07F4               	addwf	0+(?i1___lwmod)+02h
  8428                           
  8429  05AD  120A  158A  2375   	fcall	i1___lwmod
              120A  118A         
  8430  05B2  0873               	movf	((1+(?i1___lwmod))),w
  8431  05B3  0472               	iorwf	((0+(?i1___lwmod))),w
  8432  05B4  1D03               	skipz
  8433  05B5  2DB7               	goto	u344_21
  8434  05B6  2DB8               	goto	u344_20
  8435  05B7                     u344_21:
  8436  05B7  2DBA               	goto	i1l10221
  8437  05B8                     u344_20:
  8438                           	line	107
  8439                           	
  8440  05B8                     i1l10219:	
  8441                           ;Main.c: 106: {
  8442                           ;Main.c: 107: RTC_FLAG_10MS = 1;
  8443  05B8  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  8444  05B9  2DBA               	goto	i1l10221
  8445                           	line	110
  8446                           	
  8447  05BA                     i1l2207:	
  8448                           	line	111
  8449                           	
  8450  05BA                     i1l10221:	
  8451                           ;Main.c: 110: }
  8452                           ;Main.c: 111: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  8453  05BA  3032               	movlw	low(032h)
  8454  05BB  00F2               	movwf	(?i1___lwmod)
  8455  05BC  3000               	movlw	high(032h)
  8456  05BD  00F3               	movwf	((?i1___lwmod))+1
  8457  05BE  1283               	bcf	status, 5	;RP0=0, select bank0
  8458  05BF  1303               	bcf	status, 6	;RP1=0, select bank0
  8459  05C0  0868               	movf	(_RTC_Counter+1),w	;volatile
  8460  05C1  01F5               	clrf	1+(?i1___lwmod)+02h
  8461  05C2  07F5               	addwf	1+(?i1___lwmod)+02h
  8462  05C3  0867               	movf	(_RTC_Counter),w	;volatile
  8463  05C4  01F4               	clrf	0+(?i1___lwmod)+02h
  8464  05C5  07F4               	addwf	0+(?i1___lwmod)+02h
  8465                           
  8466  05C6  120A  158A  2375   	fcall	i1___lwmod
              120A  118A         
  8467  05CB  0873               	movf	((1+(?i1___lwmod))),w
  8468  05CC  0472               	iorwf	((0+(?i1___lwmod))),w
  8469  05CD  1D03               	skipz
  8470  05CE  2DD0               	goto	u345_21
  8471  05CF  2DD1               	goto	u345_20
  8472  05D0                     u345_21:
  8473  05D0  2DD3               	goto	i1l10225
  8474  05D1                     u345_20:
  8475                           	
  8476  05D1                     i1l10223:	
  8477  05D1  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  8478  05D2  2DD3               	goto	i1l10225
  8479                           	
  8480  05D3                     i1l2208:	
  8481                           	line	112
  8482                           	
  8483  05D3                     i1l10225:	
  8484                           ;Main.c: 112: if(RTC_Counter % 250 == 0)
  8485  05D3  30FA               	movlw	low(0FAh)
  8486  05D4  00F2               	movwf	(?i1___lwmod)
  8487  05D5  3000               	movlw	high(0FAh)
  8488  05D6  00F3               	movwf	((?i1___lwmod))+1
  8489  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
  8490  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
  8491  05D9  0868               	movf	(_RTC_Counter+1),w	;volatile
  8492  05DA  01F5               	clrf	1+(?i1___lwmod)+02h
  8493  05DB  07F5               	addwf	1+(?i1___lwmod)+02h
  8494  05DC  0867               	movf	(_RTC_Counter),w	;volatile
  8495  05DD  01F4               	clrf	0+(?i1___lwmod)+02h
  8496  05DE  07F4               	addwf	0+(?i1___lwmod)+02h
  8497                           
  8498  05DF  120A  158A  2375   	fcall	i1___lwmod
              120A  118A         
  8499  05E4  0873               	movf	((1+(?i1___lwmod))),w
  8500  05E5  0472               	iorwf	((0+(?i1___lwmod))),w
  8501  05E6  1D03               	skipz
  8502  05E7  2DE9               	goto	u346_21
  8503  05E8  2DEA               	goto	u346_20
  8504  05E9                     u346_21:
  8505  05E9  2DEC               	goto	i1l10229
  8506  05EA                     u346_20:
  8507                           	line	115
  8508                           	
  8509  05EA                     i1l10227:	
  8510                           ;Main.c: 113: {
  8511                           ;Main.c: 115: RTC_FLAG_250MS = 1;
  8512  05EA  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  8513  05EB  2DEC               	goto	i1l10229
  8514                           	line	117
  8515                           	
  8516  05EC                     i1l2209:	
  8517                           	line	118
  8518                           	
  8519  05EC                     i1l10229:	
  8520                           ;Main.c: 117: }
  8521                           ;Main.c: 118: if(RTC_Counter % 500 == 0)
  8522  05EC  30F4               	movlw	low(01F4h)
  8523  05ED  00F2               	movwf	(?i1___lwmod)
  8524  05EE  3001               	movlw	high(01F4h)
  8525  05EF  00F3               	movwf	((?i1___lwmod))+1
  8526  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  8527  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  8528  05F2  0868               	movf	(_RTC_Counter+1),w	;volatile
  8529  05F3  01F5               	clrf	1+(?i1___lwmod)+02h
  8530  05F4  07F5               	addwf	1+(?i1___lwmod)+02h
  8531  05F5  0867               	movf	(_RTC_Counter),w	;volatile
  8532  05F6  01F4               	clrf	0+(?i1___lwmod)+02h
  8533  05F7  07F4               	addwf	0+(?i1___lwmod)+02h
  8534                           
  8535  05F8  120A  158A  2375   	fcall	i1___lwmod
              120A  118A         
  8536  05FD  0873               	movf	((1+(?i1___lwmod))),w
  8537  05FE  0472               	iorwf	((0+(?i1___lwmod))),w
  8538  05FF  1D03               	skipz
  8539  0600  2E02               	goto	u347_21
  8540  0601  2E03               	goto	u347_20
  8541  0602                     u347_21:
  8542  0602  2E09               	goto	i1l10235
  8543  0603                     u347_20:
  8544                           	line	120
  8545                           	
  8546  0603                     i1l10231:	
  8547                           ;Main.c: 119: {
  8548                           ;Main.c: 120: RTC_FLAG_500MS = 1;
  8549  0603  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  8550                           	line	121
  8551                           	
  8552  0604                     i1l10233:	
  8553                           ;Main.c: 121: RB0 ^= 0x01;
  8554  0604  1283               	bcf	status, 5	;RP0=0, select bank0
  8555  0605  1303               	bcf	status, 6	;RP1=0, select bank0
  8556  0606  3001               	movlw	1<<((48)&7)
  8557  0607  0686               	xorwf	((48)/8),f
  8558  0608  2E09               	goto	i1l10235
  8559                           	line	123
  8560                           	
  8561  0609                     i1l2210:	
  8562                           	line	124
  8563                           	
  8564  0609                     i1l10235:	
  8565                           ;Main.c: 123: }
  8566                           ;Main.c: 124: if (buttonPressed == 0)
  8567  0609  08FD               	movf	(_buttonPressed),f
  8568  060A  1D03               	skipz	;volatile
  8569  060B  2E0D               	goto	u348_21
  8570  060C  2E0E               	goto	u348_20
  8571  060D                     u348_21:
  8572  060D  2E18               	goto	i1l10239
  8573  060E                     u348_20:
  8574                           	line	127
  8575                           	
  8576  060E                     i1l10237:	
  8577                           ;Main.c: 125: {
  8578                           ;Main.c: 127: buttonPressed = ReadButtons();
  8579  060E  120A  158A  230A   	fcall	_ReadButtons
              120A  118A         
  8580  0613  00F8               	movwf	(??_isr1+0)+0
  8581  0614  0878               	movf	(??_isr1+0)+0,w
  8582  0615  00FD               	movwf	(_buttonPressed)	;volatile
  8583  0616  2E18               	goto	i1l10239
  8584                           	line	129
  8585                           	
  8586  0617                     i1l2211:	
  8587  0617  2E18               	goto	i1l10239
  8588                           	line	130
  8589                           	
  8590  0618                     i1l2206:	
  8591                           	line	131
  8592                           	
  8593  0618                     i1l10239:	
  8594                           ;Main.c: 129: }
  8595                           ;Main.c: 130: }
  8596                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  8597  0618  1283               	bcf	status, 5	;RP0=0, select bank0
  8598  0619  1303               	bcf	status, 6	;RP1=0, select bank0
  8599  061A  1E8C               	btfss	(101/8),(101)&7
  8600  061B  2E1D               	goto	u349_21
  8601  061C  2E1E               	goto	u349_20
  8602  061D                     u349_21:
  8603  061D  2E40               	goto	i1l10249
  8604  061E                     u349_20:
  8605                           	
  8606  061E                     i1l10241:	
  8607  061E  081A               	movf	(26),w	;volatile
  8608  061F  00F8               	movwf	(??_isr1+0)+0
  8609  0620  086C               	movf	(_rxiptr),w
  8610  0621  3EA0               	addlw	_rxfifo&0ffh
  8611  0622  0084               	movwf	fsr0
  8612  0623  0878               	movf	(??_isr1+0)+0,w
  8613  0624  1383               	bcf	status, 7	;select IRP bank1
  8614  0625  0080               	movwf	indf
  8615                           	
  8616  0626                     i1l10243:	
  8617  0626  086C               	movf	(_rxiptr),w	;volatile
  8618  0627  3E01               	addlw	01h
  8619  0628  390F               	andlw	0Fh
  8620  0629  00F8               	movwf	(??_isr1+0)+0
  8621  062A  0878               	movf	(??_isr1+0)+0,w
  8622  062B  1683               	bsf	status, 5	;RP0=1, select bank1
  8623  062C  1303               	bcf	status, 6	;RP1=0, select bank1
  8624  062D  00DB               	movwf	(_ser_tmp)^080h
  8625                           	
  8626  062E                     i1l10245:	
  8627  062E  085B               	movf	(_ser_tmp)^080h,w
  8628  062F  1283               	bcf	status, 5	;RP0=0, select bank0
  8629  0630  1303               	bcf	status, 6	;RP1=0, select bank0
  8630  0631  066D               	xorwf	(_rxoptr),w	;volatile
  8631  0632  1903               	skipnz
  8632  0633  2E35               	goto	u350_21
  8633  0634  2E36               	goto	u350_20
  8634  0635                     u350_21:
  8635  0635  2E40               	goto	i1l10249
  8636  0636                     u350_20:
  8637                           	
  8638  0636                     i1l10247:	
  8639  0636  1683               	bsf	status, 5	;RP0=1, select bank1
  8640  0637  1303               	bcf	status, 6	;RP1=0, select bank1
  8641  0638  085B               	movf	(_ser_tmp)^080h,w
  8642  0639  00F8               	movwf	(??_isr1+0)+0
  8643  063A  0878               	movf	(??_isr1+0)+0,w
  8644  063B  1283               	bcf	status, 5	;RP0=0, select bank0
  8645  063C  1303               	bcf	status, 6	;RP1=0, select bank0
  8646  063D  00EC               	movwf	(_rxiptr)	;volatile
  8647  063E  2E40               	goto	i1l10249
  8648                           	
  8649  063F                     i1l2213:	
  8650  063F  2E40               	goto	i1l10249
  8651                           	
  8652  0640                     i1l2212:	
  8653                           	
  8654  0640                     i1l10249:	
  8655  0640  1E0C               	btfss	(100/8),(100)&7
  8656  0641  2E43               	goto	u351_21
  8657  0642  2E44               	goto	u351_20
  8658  0643                     u351_21:
  8659  0643  2E65               	goto	i1l2216
  8660  0644                     u351_20:
  8661                           	
  8662  0644                     i1l10251:	
  8663  0644  1683               	bsf	status, 5	;RP0=1, select bank1
  8664  0645  1303               	bcf	status, 6	;RP1=0, select bank1
  8665  0646  1E0C               	btfss	(1124/8)^080h,(1124)&7
  8666  0647  2E49               	goto	u352_21
  8667  0648  2E4A               	goto	u352_20
  8668  0649                     u352_21:
  8669  0649  2E65               	goto	i1l2216
  8670  064A                     u352_20:
  8671                           	
  8672  064A                     i1l10253:	
  8673  064A  1283               	bcf	status, 5	;RP0=0, select bank0
  8674  064B  1303               	bcf	status, 6	;RP1=0, select bank0
  8675  064C  086F               	movf	(_txoptr),w
  8676  064D  3EB0               	addlw	_txfifo&0ffh
  8677  064E  0084               	movwf	fsr0
  8678  064F  1383               	bcf	status, 7	;select IRP bank1
  8679  0650  0800               	movf	indf,w
  8680  0651  0099               	movwf	(25)	;volatile
  8681                           	
  8682  0652                     i1l10255:	
  8683  0652  3001               	movlw	(01h)
  8684  0653  00F8               	movwf	(??_isr1+0)+0
  8685  0654  0878               	movf	(??_isr1+0)+0,w
  8686  0655  07EF               	addwf	(_txoptr),f	;volatile
  8687                           	
  8688  0656                     i1l10257:	
  8689  0656  300F               	movlw	(0Fh)
  8690  0657  00F8               	movwf	(??_isr1+0)+0
  8691  0658  0878               	movf	(??_isr1+0)+0,w
  8692  0659  05EF               	andwf	(_txoptr),f	;volatile
  8693                           	
  8694  065A                     i1l10259:	
  8695  065A  086F               	movf	(_txoptr),w	;volatile
  8696  065B  066E               	xorwf	(_txiptr),w	;volatile
  8697  065C  1D03               	skipz
  8698  065D  2E5F               	goto	u353_21
  8699  065E  2E60               	goto	u353_20
  8700  065F                     u353_21:
  8701  065F  2E65               	goto	i1l2216
  8702  0660                     u353_20:
  8703                           	
  8704  0660                     i1l10261:	
  8705  0660  1683               	bsf	status, 5	;RP0=1, select bank1
  8706  0661  1303               	bcf	status, 6	;RP1=0, select bank1
  8707  0662  120C               	bcf	(1124/8)^080h,(1124)&7
  8708  0663  2E65               	goto	i1l2216
  8709                           	
  8710  0664                     i1l2215:	
  8711  0664  2E65               	goto	i1l2216
  8712                           	
  8713  0665                     i1l2214:	
  8714                           	line	132
  8715                           	
  8716  0665                     i1l2216:	
  8717  0665  087C               	movf	(??_isr1+4),w
  8718  0666  1283               	bcf	status, 5	;RP0=0, select bank0
  8719  0667  00FF               	movwf	btemp+1
  8720  0668  087B               	movf	(??_isr1+3),w
  8721  0669  008A               	movwf	pclath
  8722  066A  087A               	movf	(??_isr1+2),w
  8723  066B  0084               	movwf	fsr0
  8724  066C  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
  8725  066D  0083               	movwf	status
  8726  066E  0EFE               	swapf	saved_w,f
  8727  066F  0E7E               	swapf	saved_w,w
  8728  0670  0009               	retfie
  8729                           	opt stack 0
  8730                           GLOBAL	__end_of_isr1
  8731  0671                     	__end_of_isr1:
  8732 ;; =============== function _isr1 ends ============
  8733                           
  8734                           	signat	_isr1,88
  8735                           	global	_ReadButtons
  8736                           psect	text933,local,class=CODE,delta=2
  8737                           global __ptext933
  8738  0B0A                     __ptext933:
  8739                           
  8740 ;; *************** function _ReadButtons *****************
  8741 ;; Defined at:
  8742 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      unsigned char 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0, pclath, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8756 ;;      Params:         0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0
  8759 ;;      Totals:         0       0       0       0       0
  8760 ;;Total ram usage:        0 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    1
  8763 ;; This function calls:
  8764 ;;		_Debounce
  8765 ;; This function is called by:
  8766 ;;		_isr1
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           psect	text933
  8770                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8771                           	line	141
  8772                           	global	__size_of_ReadButtons
  8773  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8774                           	
  8775  0B0A                     _ReadButtons:	
  8776                           	opt	stack 0
  8777                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8778                           	line	143
  8779                           	
  8780  0B0A                     i1l10263:	
  8781                           ;HMI.c: 143: Debounce();
  8782  0B0A  120A  158A  26C1   	fcall	_Debounce
              120A  158A         
  8783                           	line	145
  8784                           	
  8785  0B0F                     i1l10265:	
  8786                           ;HMI.c: 145: if(UpPressed)
  8787  0B0F  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  8788  0B10  2B12               	goto	u354_21
  8789  0B11  2B13               	goto	u354_20
  8790  0B12                     u354_21:
  8791  0B12  2B17               	goto	i1l4518
  8792  0B13                     u354_20:
  8793                           	line	147
  8794                           	
  8795  0B13                     i1l10267:	
  8796                           ;HMI.c: 146: {
  8797                           ;HMI.c: 147: UpPressed = 0;
  8798  0B13  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  8799                           	line	148
  8800                           	
  8801  0B14                     i1l10269:	
  8802                           ;HMI.c: 148: return 1;
  8803  0B14  3001               	movlw	(01h)
  8804  0B15  2B39               	goto	i1l4519
  8805                           	
  8806  0B16                     i1l10271:	
  8807  0B16  2B39               	goto	i1l4519
  8808                           	line	150
  8809                           	
  8810  0B17                     i1l4518:	
  8811                           	line	152
  8812                           ;HMI.c: 150: }
  8813                           ;HMI.c: 152: if(DownPressed)
  8814  0B17  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8815  0B18  2B1A               	goto	u355_21
  8816  0B19  2B1B               	goto	u355_20
  8817  0B1A                     u355_21:
  8818  0B1A  2B1F               	goto	i1l4520
  8819  0B1B                     u355_20:
  8820                           	line	154
  8821                           	
  8822  0B1B                     i1l10273:	
  8823                           ;HMI.c: 153: {
  8824                           ;HMI.c: 154: DownPressed = 0;
  8825  0B1B  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8826                           	line	155
  8827                           	
  8828  0B1C                     i1l10275:	
  8829                           ;HMI.c: 155: return 2;
  8830  0B1C  3002               	movlw	(02h)
  8831  0B1D  2B39               	goto	i1l4519
  8832                           	
  8833  0B1E                     i1l10277:	
  8834  0B1E  2B39               	goto	i1l4519
  8835                           	line	157
  8836                           	
  8837  0B1F                     i1l4520:	
  8838                           	line	158
  8839                           ;HMI.c: 157: }
  8840                           ;HMI.c: 158: if(LeftPressed)
  8841  0B1F  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8842  0B20  2B22               	goto	u356_21
  8843  0B21  2B23               	goto	u356_20
  8844  0B22                     u356_21:
  8845  0B22  2B27               	goto	i1l4521
  8846  0B23                     u356_20:
  8847                           	line	160
  8848                           	
  8849  0B23                     i1l10279:	
  8850                           ;HMI.c: 159: {
  8851                           ;HMI.c: 160: LeftPressed = 0;
  8852  0B23  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8853                           	line	161
  8854                           	
  8855  0B24                     i1l10281:	
  8856                           ;HMI.c: 161: return 3;
  8857  0B24  3003               	movlw	(03h)
  8858  0B25  2B39               	goto	i1l4519
  8859                           	
  8860  0B26                     i1l10283:	
  8861  0B26  2B39               	goto	i1l4519
  8862                           	line	163
  8863                           	
  8864  0B27                     i1l4521:	
  8865                           	line	164
  8866                           ;HMI.c: 163: }
  8867                           ;HMI.c: 164: if(RightPressed)
  8868  0B27  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
  8869  0B28  2B2A               	goto	u357_21
  8870  0B29  2B2B               	goto	u357_20
  8871  0B2A                     u357_21:
  8872  0B2A  2B2F               	goto	i1l4522
  8873  0B2B                     u357_20:
  8874                           	line	166
  8875                           	
  8876  0B2B                     i1l10285:	
  8877                           ;HMI.c: 165: {
  8878                           ;HMI.c: 166: RightPressed = 0;
  8879  0B2B  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
  8880                           	line	167
  8881                           	
  8882  0B2C                     i1l10287:	
  8883                           ;HMI.c: 167: return 4;
  8884  0B2C  3004               	movlw	(04h)
  8885  0B2D  2B39               	goto	i1l4519
  8886                           	
  8887  0B2E                     i1l10289:	
  8888  0B2E  2B39               	goto	i1l4519
  8889                           	line	169
  8890                           	
  8891  0B2F                     i1l4522:	
  8892                           	line	171
  8893                           ;HMI.c: 169: }
  8894                           ;HMI.c: 171: if(CenterPressed)
  8895  0B2F  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8896  0B30  2B32               	goto	u358_21
  8897  0B31  2B33               	goto	u358_20
  8898  0B32                     u358_21:
  8899  0B32  2B37               	goto	i1l10297
  8900  0B33                     u358_20:
  8901                           	line	173
  8902                           	
  8903  0B33                     i1l10291:	
  8904                           ;HMI.c: 172: {
  8905                           ;HMI.c: 173: CenterPressed = 0;
  8906  0B33  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8907                           	line	174
  8908                           	
  8909  0B34                     i1l10293:	
  8910                           ;HMI.c: 174: return 5;
  8911  0B34  3005               	movlw	(05h)
  8912  0B35  2B39               	goto	i1l4519
  8913                           	
  8914  0B36                     i1l10295:	
  8915  0B36  2B39               	goto	i1l4519
  8916                           	line	176
  8917                           	
  8918  0B37                     i1l4523:	
  8919                           	line	177
  8920                           	
  8921  0B37                     i1l10297:	
  8922                           ;HMI.c: 176: }
  8923                           ;HMI.c: 177: return 0;
  8924  0B37  3000               	movlw	(0)
  8925  0B38  2B39               	goto	i1l4519
  8926                           	
  8927  0B39                     i1l10299:	
  8928                           	line	178
  8929                           	
  8930  0B39                     i1l4519:	
  8931  0B39  0008               	return
  8932                           	opt stack 0
  8933                           GLOBAL	__end_of_ReadButtons
  8934  0B3A                     	__end_of_ReadButtons:
  8935 ;; =============== function _ReadButtons ends ============
  8936                           
  8937                           	signat	_ReadButtons,89
  8938                           	global	i1___lwmod
  8939                           psect	text934,local,class=CODE,delta=2
  8940                           global __ptext934
  8941  0B75                     __ptext934:
  8942                           
  8943 ;; *************** function i1___lwmod *****************
  8944 ;; Defined at:
  8945 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  __lwmod         2    0[COMMON] unsigned int 
  8948 ;;  __lwmod         2    2[COMMON] unsigned int 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  __lwmod         1    5[COMMON] unsigned char 
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  2    0[COMMON] unsigned int 
  8953 ;; Registers used:
  8954 ;;		wreg, status,2, status,0
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8960 ;;      Params:         4       0       0       0       0
  8961 ;;      Locals:         1       0       0       0       0
  8962 ;;      Temps:          1       0       0       0       0
  8963 ;;      Totals:         6       0       0       0       0
  8964 ;;Total ram usage:        6 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_isr1
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           psect	text934
  8973                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8974                           	line	5
  8975                           	global	__size_ofi1___lwmod
  8976  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8977                           	
  8978  0B75                     i1___lwmod:	
  8979                           	opt	stack 1
  8980                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8981                           	line	8
  8982                           	
  8983  0B75                     i1l10619:	
  8984  0B75  0873               	movf	(i1___lwmod@divisor+1),w
  8985  0B76  0472               	iorwf	(i1___lwmod@divisor),w
  8986  0B77  1903               	skipnz
  8987  0B78  2B7A               	goto	u415_21
  8988  0B79  2B7B               	goto	u415_20
  8989  0B7A                     u415_21:
  8990  0B7A  2BB1               	goto	i1l10637
  8991  0B7B                     u415_20:
  8992                           	line	9
  8993                           	
  8994  0B7B                     i1l10621:	
  8995  0B7B  01F7               	clrf	(i1___lwmod@counter)
  8996  0B7C  1403               	bsf	status,0
  8997  0B7D  0DF7               	rlf	(i1___lwmod@counter),f
  8998                           	line	10
  8999  0B7E  2B8B               	goto	i1l10627
  9000                           	
  9001  0B7F                     i1l7485:	
  9002                           	line	11
  9003                           	
  9004  0B7F                     i1l10623:	
  9005  0B7F  3001               	movlw	01h
  9006                           	
  9007  0B80                     u416_25:
  9008  0B80  1003               	clrc
  9009  0B81  0DF2               	rlf	(i1___lwmod@divisor),f
  9010  0B82  0DF3               	rlf	(i1___lwmod@divisor+1),f
  9011  0B83  3EFF               	addlw	-1
  9012  0B84  1D03               	skipz
  9013  0B85  2B80               	goto	u416_25
  9014                           	line	12
  9015                           	
  9016  0B86                     i1l10625:	
  9017  0B86  3001               	movlw	(01h)
  9018  0B87  00F6               	movwf	(??i1___lwmod+0)+0
  9019  0B88  0876               	movf	(??i1___lwmod+0)+0,w
  9020  0B89  07F7               	addwf	(i1___lwmod@counter),f
  9021  0B8A  2B8B               	goto	i1l10627
  9022                           	line	13
  9023                           	
  9024  0B8B                     i1l7484:	
  9025                           	line	10
  9026                           	
  9027  0B8B                     i1l10627:	
  9028  0B8B  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  9029  0B8C  2B8E               	goto	u417_21
  9030  0B8D  2B8F               	goto	u417_20
  9031  0B8E                     u417_21:
  9032  0B8E  2B7F               	goto	i1l10623
  9033  0B8F                     u417_20:
  9034  0B8F  2B91               	goto	i1l10629
  9035                           	
  9036  0B90                     i1l7486:	
  9037  0B90  2B91               	goto	i1l10629
  9038                           	line	14
  9039                           	
  9040  0B91                     i1l7487:	
  9041                           	line	15
  9042                           	
  9043  0B91                     i1l10629:	
  9044  0B91  0873               	movf	(i1___lwmod@divisor+1),w
  9045  0B92  0275               	subwf	(i1___lwmod@dividend+1),w
  9046  0B93  1D03               	skipz
  9047  0B94  2B97               	goto	u418_25
  9048  0B95  0872               	movf	(i1___lwmod@divisor),w
  9049  0B96  0274               	subwf	(i1___lwmod@dividend),w
  9050  0B97                     u418_25:
  9051  0B97  1C03               	skipc
  9052  0B98  2B9A               	goto	u418_21
  9053  0B99  2B9B               	goto	u418_20
  9054  0B9A                     u418_21:
  9055  0B9A  2BA2               	goto	i1l10633
  9056  0B9B                     u418_20:
  9057                           	line	16
  9058                           	
  9059  0B9B                     i1l10631:	
  9060  0B9B  0872               	movf	(i1___lwmod@divisor),w
  9061  0B9C  02F4               	subwf	(i1___lwmod@dividend),f
  9062  0B9D  0873               	movf	(i1___lwmod@divisor+1),w
  9063  0B9E  1C03               	skipc
  9064  0B9F  03F5               	decf	(i1___lwmod@dividend+1),f
  9065  0BA0  02F5               	subwf	(i1___lwmod@dividend+1),f
  9066  0BA1  2BA2               	goto	i1l10633
  9067                           	
  9068  0BA2                     i1l7488:	
  9069                           	line	17
  9070                           	
  9071  0BA2                     i1l10633:	
  9072  0BA2  3001               	movlw	01h
  9073                           	
  9074  0BA3                     u419_25:
  9075  0BA3  1003               	clrc
  9076  0BA4  0CF3               	rrf	(i1___lwmod@divisor+1),f
  9077  0BA5  0CF2               	rrf	(i1___lwmod@divisor),f
  9078  0BA6  3EFF               	addlw	-1
  9079  0BA7  1D03               	skipz
  9080  0BA8  2BA3               	goto	u419_25
  9081                           	line	18
  9082                           	
  9083  0BA9                     i1l10635:	
  9084  0BA9  3001               	movlw	low(01h)
  9085  0BAA  02F7               	subwf	(i1___lwmod@counter),f
  9086  0BAB  1D03               	btfss	status,2
  9087  0BAC  2BAE               	goto	u420_21
  9088  0BAD  2BAF               	goto	u420_20
  9089  0BAE                     u420_21:
  9090  0BAE  2B91               	goto	i1l10629
  9091  0BAF                     u420_20:
  9092  0BAF  2BB1               	goto	i1l10637
  9093                           	
  9094  0BB0                     i1l7489:	
  9095  0BB0  2BB1               	goto	i1l10637
  9096                           	line	19
  9097                           	
  9098  0BB1                     i1l7483:	
  9099                           	line	20
  9100                           	
  9101  0BB1                     i1l10637:	
  9102  0BB1  0875               	movf	(i1___lwmod@dividend+1),w
  9103  0BB2  01F3               	clrf	(?i1___lwmod+1)
  9104  0BB3  07F3               	addwf	(?i1___lwmod+1)
  9105  0BB4  0874               	movf	(i1___lwmod@dividend),w
  9106  0BB5  01F2               	clrf	(?i1___lwmod)
  9107  0BB6  07F2               	addwf	(?i1___lwmod)
  9108                           
  9109  0BB7  2BB8               	goto	i1l7490
  9110                           	
  9111  0BB8                     i1l10639:	
  9112                           	line	21
  9113                           	
  9114  0BB8                     i1l7490:	
  9115  0BB8  0008               	return
  9116                           	opt stack 0
  9117                           GLOBAL	__end_ofi1___lwmod
  9118  0BB9                     	__end_ofi1___lwmod:
  9119 ;; =============== function i1___lwmod ends ============
  9120                           
  9121                           	signat	i1___lwmod,90
  9122                           	global	_Debounce
  9123                           psect	text935,local,class=CODE,delta=2
  9124                           global __ptext935
  9125  0EC1                     __ptext935:
  9126                           
  9127 ;; *************** function _Debounce *****************
  9128 ;; Defined at:
  9129 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;		None               void
  9136 ;; Registers used:
  9137 ;;		wreg, status,2, status,0
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9143 ;;      Params:         0       0       0       0       0
  9144 ;;      Locals:         0       0       0       0       0
  9145 ;;      Temps:          1       0       0       0       0
  9146 ;;      Totals:         1       0       0       0       0
  9147 ;;Total ram usage:        1 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_ReadButtons
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           psect	text935
  9156                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  9157                           	line	61
  9158                           	global	__size_of_Debounce
  9159  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  9160                           	
  9161  0EC1                     _Debounce:	
  9162                           	opt	stack 0
  9163                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  9164                           	line	63
  9165                           	
  9166  0EC1                     i1l10435:	
  9167                           ;HMI.c: 63: if(!RB2)
  9168  0EC1  1283               	bcf	status, 5	;RP0=0, select bank0
  9169  0EC2  1303               	bcf	status, 6	;RP1=0, select bank0
  9170  0EC3  1906               	btfsc	(50/8),(50)&7
  9171  0EC4  2EC6               	goto	u367_21
  9172  0EC5  2EC7               	goto	u367_20
  9173  0EC6                     u367_21:
  9174  0EC6  2EDB               	goto	i1l4500
  9175  0EC7                     u367_20:
  9176                           	line	65
  9177                           	
  9178  0EC7                     i1l10437:	
  9179                           ;HMI.c: 64: {
  9180                           ;HMI.c: 65: UpDebounceCount++;
  9181  0EC7  3001               	movlw	(01h)
  9182  0EC8  00F2               	movwf	(??_Debounce+0)+0
  9183  0EC9  0872               	movf	(??_Debounce+0)+0,w
  9184  0ECA  1683               	bsf	status, 5	;RP0=1, select bank1
  9185  0ECB  1303               	bcf	status, 6	;RP1=0, select bank1
  9186  0ECC  07D6               	addwf	(_UpDebounceCount)^080h,f	;volatile
  9187                           	line	66
  9188                           	
  9189  0ECD                     i1l10439:	
  9190                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  9191  0ECD  300A               	movlw	(0Ah)
  9192  0ECE  0256               	subwf	(_UpDebounceCount)^080h,w	;volatile
  9193  0ECF  1C03               	skipc
  9194  0ED0  2ED2               	goto	u368_21
  9195  0ED1  2ED3               	goto	u368_20
  9196  0ED2                     u368_21:
  9197  0ED2  2EDF               	goto	i1l4502
  9198  0ED3                     u368_20:
  9199                           	
  9200  0ED3                     i1l10441:	
  9201  0ED3  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
  9202  0ED4  2ED6               	goto	u369_21
  9203  0ED5  2ED7               	goto	u369_20
  9204  0ED6                     u369_21:
  9205  0ED6  2EDF               	goto	i1l4502
  9206  0ED7                     u369_20:
  9207                           	line	68
  9208                           	
  9209  0ED7                     i1l10443:	
  9210                           ;HMI.c: 67: {
  9211                           ;HMI.c: 68: UpPressed = 1;
  9212  0ED7  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
  9213                           	line	69
  9214                           ;HMI.c: 69: UpReleased = 0;
  9215  0ED8  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
  9216  0ED9  2EDF               	goto	i1l4502
  9217                           	line	70
  9218                           	
  9219  0EDA                     i1l4501:	
  9220                           	line	71
  9221                           ;HMI.c: 70: }
  9222                           ;HMI.c: 71: }
  9223  0EDA  2EDF               	goto	i1l4502
  9224                           	line	72
  9225                           	
  9226  0EDB                     i1l4500:	
  9227                           	line	74
  9228                           ;HMI.c: 72: else
  9229                           ;HMI.c: 73: {
  9230                           ;HMI.c: 74: UpDebounceCount = 0;
  9231  0EDB  1683               	bsf	status, 5	;RP0=1, select bank1
  9232  0EDC  1303               	bcf	status, 6	;RP1=0, select bank1
  9233  0EDD  01D6               	clrf	(_UpDebounceCount)^080h	;volatile
  9234                           	line	75
  9235                           ;HMI.c: 75: UpReleased = 1;
  9236  0EDE  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
  9237                           	line	76
  9238                           	
  9239  0EDF                     i1l4502:	
  9240                           	line	79
  9241                           ;HMI.c: 76: }
  9242                           ;HMI.c: 79: if(!RB3)
  9243  0EDF  1283               	bcf	status, 5	;RP0=0, select bank0
  9244  0EE0  1303               	bcf	status, 6	;RP1=0, select bank0
  9245  0EE1  1986               	btfsc	(51/8),(51)&7
  9246  0EE2  2EE4               	goto	u370_21
  9247  0EE3  2EE5               	goto	u370_20
  9248  0EE4                     u370_21:
  9249  0EE4  2EF9               	goto	i1l4503
  9250  0EE5                     u370_20:
  9251                           	line	81
  9252                           	
  9253  0EE5                     i1l10445:	
  9254                           ;HMI.c: 80: {
  9255                           ;HMI.c: 81: DownDebounceCount++;
  9256  0EE5  3001               	movlw	(01h)
  9257  0EE6  00F2               	movwf	(??_Debounce+0)+0
  9258  0EE7  0872               	movf	(??_Debounce+0)+0,w
  9259  0EE8  1683               	bsf	status, 5	;RP0=1, select bank1
  9260  0EE9  1303               	bcf	status, 6	;RP1=0, select bank1
  9261  0EEA  07D3               	addwf	(_DownDebounceCount)^080h,f	;volatile
  9262                           	line	82
  9263                           	
  9264  0EEB                     i1l10447:	
  9265                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  9266  0EEB  300A               	movlw	(0Ah)
  9267  0EEC  0253               	subwf	(_DownDebounceCount)^080h,w	;volatile
  9268  0EED  1C03               	skipc
  9269  0EEE  2EF0               	goto	u371_21
  9270  0EEF  2EF1               	goto	u371_20
  9271  0EF0                     u371_21:
  9272  0EF0  2EFD               	goto	i1l4505
  9273  0EF1                     u371_20:
  9274                           	
  9275  0EF1                     i1l10449:	
  9276  0EF1  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  9277  0EF2  2EF4               	goto	u372_21
  9278  0EF3  2EF5               	goto	u372_20
  9279  0EF4                     u372_21:
  9280  0EF4  2EFD               	goto	i1l4505
  9281  0EF5                     u372_20:
  9282                           	line	84
  9283                           	
  9284  0EF5                     i1l10451:	
  9285                           ;HMI.c: 83: {
  9286                           ;HMI.c: 84: DownPressed = 1;
  9287  0EF5  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  9288                           	line	85
  9289                           ;HMI.c: 85: DownReleased = 0;
  9290  0EF6  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  9291  0EF7  2EFD               	goto	i1l4505
  9292                           	line	86
  9293                           	
  9294  0EF8                     i1l4504:	
  9295                           	line	87
  9296                           ;HMI.c: 86: }
  9297                           ;HMI.c: 87: }
  9298  0EF8  2EFD               	goto	i1l4505
  9299                           	line	88
  9300                           	
  9301  0EF9                     i1l4503:	
  9302                           	line	90
  9303                           ;HMI.c: 88: else
  9304                           ;HMI.c: 89: {
  9305                           ;HMI.c: 90: DownDebounceCount = 0;
  9306  0EF9  1683               	bsf	status, 5	;RP0=1, select bank1
  9307  0EFA  1303               	bcf	status, 6	;RP1=0, select bank1
  9308  0EFB  01D3               	clrf	(_DownDebounceCount)^080h	;volatile
  9309                           	line	91
  9310                           ;HMI.c: 91: DownReleased = 1;
  9311  0EFC  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  9312                           	line	92
  9313                           	
  9314  0EFD                     i1l4505:	
  9315                           	line	94
  9316                           ;HMI.c: 92: }
  9317                           ;HMI.c: 94: if(!RB4)
  9318  0EFD  1283               	bcf	status, 5	;RP0=0, select bank0
  9319  0EFE  1303               	bcf	status, 6	;RP1=0, select bank0
  9320  0EFF  1A06               	btfsc	(52/8),(52)&7
  9321  0F00  2F02               	goto	u373_21
  9322  0F01  2F03               	goto	u373_20
  9323  0F02                     u373_21:
  9324  0F02  2F17               	goto	i1l4506
  9325  0F03                     u373_20:
  9326                           	line	96
  9327                           	
  9328  0F03                     i1l10453:	
  9329                           ;HMI.c: 95: {
  9330                           ;HMI.c: 96: LeftDebounceCount++;
  9331  0F03  3001               	movlw	(01h)
  9332  0F04  00F2               	movwf	(??_Debounce+0)+0
  9333  0F05  0872               	movf	(??_Debounce+0)+0,w
  9334  0F06  1683               	bsf	status, 5	;RP0=1, select bank1
  9335  0F07  1303               	bcf	status, 6	;RP1=0, select bank1
  9336  0F08  07D4               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  9337                           	line	97
  9338                           	
  9339  0F09                     i1l10455:	
  9340                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  9341  0F09  300A               	movlw	(0Ah)
  9342  0F0A  0254               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  9343  0F0B  1C03               	skipc
  9344  0F0C  2F0E               	goto	u374_21
  9345  0F0D  2F0F               	goto	u374_20
  9346  0F0E                     u374_21:
  9347  0F0E  2F1B               	goto	i1l4508
  9348  0F0F                     u374_20:
  9349                           	
  9350  0F0F                     i1l10457:	
  9351  0F0F  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  9352  0F10  2F12               	goto	u375_21
  9353  0F11  2F13               	goto	u375_20
  9354  0F12                     u375_21:
  9355  0F12  2F1B               	goto	i1l4508
  9356  0F13                     u375_20:
  9357                           	line	99
  9358                           	
  9359  0F13                     i1l10459:	
  9360                           ;HMI.c: 98: {
  9361                           ;HMI.c: 99: LeftPressed = 1;
  9362  0F13  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  9363                           	line	100
  9364                           ;HMI.c: 100: LeftReleased = 0;
  9365  0F14  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  9366  0F15  2F1B               	goto	i1l4508
  9367                           	line	101
  9368                           	
  9369  0F16                     i1l4507:	
  9370                           	line	102
  9371                           ;HMI.c: 101: }
  9372                           ;HMI.c: 102: }
  9373  0F16  2F1B               	goto	i1l4508
  9374                           	line	103
  9375                           	
  9376  0F17                     i1l4506:	
  9377                           	line	105
  9378                           ;HMI.c: 103: else
  9379                           ;HMI.c: 104: {
  9380                           ;HMI.c: 105: LeftDebounceCount = 0;
  9381  0F17  1683               	bsf	status, 5	;RP0=1, select bank1
  9382  0F18  1303               	bcf	status, 6	;RP1=0, select bank1
  9383  0F19  01D4               	clrf	(_LeftDebounceCount)^080h	;volatile
  9384                           	line	106
  9385                           ;HMI.c: 106: LeftReleased = 1;
  9386  0F1A  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  9387                           	line	107
  9388                           	
  9389  0F1B                     i1l4508:	
  9390                           	line	109
  9391                           ;HMI.c: 107: }
  9392                           ;HMI.c: 109: if(!RB5)
  9393  0F1B  1283               	bcf	status, 5	;RP0=0, select bank0
  9394  0F1C  1303               	bcf	status, 6	;RP1=0, select bank0
  9395  0F1D  1A86               	btfsc	(53/8),(53)&7
  9396  0F1E  2F20               	goto	u376_21
  9397  0F1F  2F21               	goto	u376_20
  9398  0F20                     u376_21:
  9399  0F20  2F35               	goto	i1l4509
  9400  0F21                     u376_20:
  9401                           	line	111
  9402                           	
  9403  0F21                     i1l10461:	
  9404                           ;HMI.c: 110: {
  9405                           ;HMI.c: 111: RightDebounceCount++;
  9406  0F21  3001               	movlw	(01h)
  9407  0F22  00F2               	movwf	(??_Debounce+0)+0
  9408  0F23  0872               	movf	(??_Debounce+0)+0,w
  9409  0F24  1683               	bsf	status, 5	;RP0=1, select bank1
  9410  0F25  1303               	bcf	status, 6	;RP1=0, select bank1
  9411  0F26  07D5               	addwf	(_RightDebounceCount)^080h,f	;volatile
  9412                           	line	112
  9413                           	
  9414  0F27                     i1l10463:	
  9415                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  9416  0F27  300A               	movlw	(0Ah)
  9417  0F28  0255               	subwf	(_RightDebounceCount)^080h,w	;volatile
  9418  0F29  1C03               	skipc
  9419  0F2A  2F2C               	goto	u377_21
  9420  0F2B  2F2D               	goto	u377_20
  9421  0F2C                     u377_21:
  9422  0F2C  2F39               	goto	i1l4511
  9423  0F2D                     u377_20:
  9424                           	
  9425  0F2D                     i1l10465:	
  9426  0F2D  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
  9427  0F2E  2F30               	goto	u378_21
  9428  0F2F  2F31               	goto	u378_20
  9429  0F30                     u378_21:
  9430  0F30  2F39               	goto	i1l4511
  9431  0F31                     u378_20:
  9432                           	line	114
  9433                           	
  9434  0F31                     i1l10467:	
  9435                           ;HMI.c: 113: {
  9436                           ;HMI.c: 114: RightPressed = 1;
  9437  0F31  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
  9438                           	line	115
  9439                           ;HMI.c: 115: RightReleased = 0;
  9440  0F32  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
  9441  0F33  2F39               	goto	i1l4511
  9442                           	line	116
  9443                           	
  9444  0F34                     i1l4510:	
  9445                           	line	117
  9446                           ;HMI.c: 116: }
  9447                           ;HMI.c: 117: }
  9448  0F34  2F39               	goto	i1l4511
  9449                           	line	118
  9450                           	
  9451  0F35                     i1l4509:	
  9452                           	line	120
  9453                           ;HMI.c: 118: else
  9454                           ;HMI.c: 119: {
  9455                           ;HMI.c: 120: RightDebounceCount = 0;
  9456  0F35  1683               	bsf	status, 5	;RP0=1, select bank1
  9457  0F36  1303               	bcf	status, 6	;RP1=0, select bank1
  9458  0F37  01D5               	clrf	(_RightDebounceCount)^080h	;volatile
  9459                           	line	121
  9460                           ;HMI.c: 121: RightReleased = 1;
  9461  0F38  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
  9462                           	line	122
  9463                           	
  9464  0F39                     i1l4511:	
  9465                           	line	124
  9466                           ;HMI.c: 122: }
  9467                           ;HMI.c: 124: if(!RB6)
  9468  0F39  1283               	bcf	status, 5	;RP0=0, select bank0
  9469  0F3A  1303               	bcf	status, 6	;RP1=0, select bank0
  9470  0F3B  1B06               	btfsc	(54/8),(54)&7
  9471  0F3C  2F3E               	goto	u379_21
  9472  0F3D  2F3F               	goto	u379_20
  9473  0F3E                     u379_21:
  9474  0F3E  2F53               	goto	i1l4512
  9475  0F3F                     u379_20:
  9476                           	line	126
  9477                           	
  9478  0F3F                     i1l10469:	
  9479                           ;HMI.c: 125: {
  9480                           ;HMI.c: 126: CenterDebounceCount++;
  9481  0F3F  3001               	movlw	(01h)
  9482  0F40  00F2               	movwf	(??_Debounce+0)+0
  9483  0F41  0872               	movf	(??_Debounce+0)+0,w
  9484  0F42  1683               	bsf	status, 5	;RP0=1, select bank1
  9485  0F43  1303               	bcf	status, 6	;RP1=0, select bank1
  9486  0F44  07D0               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  9487                           	line	127
  9488                           	
  9489  0F45                     i1l10471:	
  9490                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  9491  0F45  300A               	movlw	(0Ah)
  9492  0F46  0250               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  9493  0F47  1C03               	skipc
  9494  0F48  2F4A               	goto	u380_21
  9495  0F49  2F4B               	goto	u380_20
  9496  0F4A                     u380_21:
  9497  0F4A  2F58               	goto	i1l4515
  9498  0F4B                     u380_20:
  9499                           	
  9500  0F4B                     i1l10473:	
  9501  0F4B  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  9502  0F4C  2F4E               	goto	u381_21
  9503  0F4D  2F4F               	goto	u381_20
  9504  0F4E                     u381_21:
  9505  0F4E  2F58               	goto	i1l4515
  9506  0F4F                     u381_20:
  9507                           	line	129
  9508                           	
  9509  0F4F                     i1l10475:	
  9510                           ;HMI.c: 128: {
  9511                           ;HMI.c: 129: CenterPressed = 1;
  9512  0F4F  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  9513                           	line	130
  9514                           ;HMI.c: 130: CenterReleased = 0;
  9515  0F50  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  9516  0F51  2F58               	goto	i1l4515
  9517                           	line	131
  9518                           	
  9519  0F52                     i1l4513:	
  9520                           	line	132
  9521                           ;HMI.c: 131: }
  9522                           ;HMI.c: 132: }
  9523  0F52  2F58               	goto	i1l4515
  9524                           	line	133
  9525                           	
  9526  0F53                     i1l4512:	
  9527                           	line	135
  9528                           ;HMI.c: 133: else
  9529                           ;HMI.c: 134: {
  9530                           ;HMI.c: 135: CenterDebounceCount = 0;
  9531  0F53  1683               	bsf	status, 5	;RP0=1, select bank1
  9532  0F54  1303               	bcf	status, 6	;RP1=0, select bank1
  9533  0F55  01D0               	clrf	(_CenterDebounceCount)^080h	;volatile
  9534                           	line	136
  9535                           ;HMI.c: 136: CenterReleased = 1;
  9536  0F56  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  9537  0F57  2F58               	goto	i1l4515
  9538                           	line	137
  9539                           	
  9540  0F58                     i1l4514:	
  9541                           	line	138
  9542                           	
  9543  0F58                     i1l4515:	
  9544  0F58  0008               	return
  9545                           	opt stack 0
  9546                           GLOBAL	__end_of_Debounce
  9547  0F59                     	__end_of_Debounce:
  9548 ;; =============== function _Debounce ends ============
  9549                           
  9550                           	signat	_Debounce,88
  9551                           psect	text936,local,class=CODE,delta=2
  9552                           global __ptext936
  9553  0000                     __ptext936:
  9554                           	global	btemp
  9555  007E                     	btemp set 07Eh
  9556                           
  9557                           	DABS	1,126,2	;btemp
  9558                           	global	wtemp0
  9559  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Apr 29 15:30:01 2015

 __end_of_lcd_write_control 0939             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 094E  
                       l703 0A05                         l704 0A05                         l705 0A09  
                       l706 0A28                         l690 0B3E                         l691 0B67  
                       l692 0B42                         l693 0B46                         l694 0B4A  
                       l695 0B4E                         l696 0B52                         l689 0B56  
                       l697 0B74                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _pos 00C8                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026             ?_lcd_set_cursor 0072  
                      l3000 0233                        l3001 01E4                        l1402 08FD  
                      l3002 0232                        l1410 0AAB                        l3003 0231  
                      l1411 0AAB                        l3004 0237                        l1405 08DD  
                      l2230 0DC1                        l2222 0D93                        l2231 0DDE  
                      l2223 0D9E                        l1408 0A9A                        l2224 0DCB  
                      l2232 0DC9                        l2240 0C1A                        l1409 0A81  
                      l2233 0DDD                        l2225 0D9F                        l2241 0C42  
                      l2234 0DDE                        l2226 0DDC                        l2242 0C1C  
                      l2219 0ADA                        l2227 0DA1                        l2243 0C1E  
                      l2228 0DA3                        l2244 0C20                        l2252 0E5E  
                      l2260 03B3                        l1429 0A53                        l2229 0DB3  
                      l2245 0C22                        l2237 0C0E                        l2253 0EB7  
                      l2261 03E4                        l2246 0C44                        l2238 0C19  
                      l2254 0E7C                        l2270 03F6                        l2262 03B4  
                      l2239 0C31                        l2247 0C2E                        l2255 0E93  
                      l2271 048A                        l2263 03F5                        l2248 0C43  
                      l2256 0EC0                        l2280 0492                        l2272 03FC  
                      l2264 03BC                        l2249 0C44                        l2273 041F  
                      l2265 03C4                        l2274 043A                        l2266 03CC  
                      l2275 046B                        l2267 03D4                        l2259 039E  
                      l2276 046C                        l2268 03E1                        l2269 0474  
                      l2277 0472                        l2278 0491                        l1399 0938  
                      l2279 0492                        l6011 0F82                        l3700 0919  
                      l6020 06A6                        l6012 0FA1                        l3701 091E  
                      l6005 0994                        l6021 06C4                        l6013 0FC8  
                      l3702 0924                        l3710 0D2B                        l6022 06F8  
                      l6014 0FA2                        l6015 0FAF                        l6008 07FF  
                      l6016 0FE1                        l3705 0CEC                        l6017 0FFF  
                      l4530 0C4B                        l3706 0CF3                        l4531 0C5C  
                      l3707 0D10                        l4532 0C5D                        l3708 0CFA  
                      l4533 0C6F                        l3709 0D1A                        l4541 0382  
                      l4526 0C77                        l4534 0C70                        l4542 0251  
                      l4535 0C8B                        l4527 0C49                        l4543 02B1  
                      l4528 0C89                        l4536 0C75                        l4544 02C4  
                      l4529 0C4A                        l4545 038F                        l4546 030C  
                      l4547 0357                        l4548 0380                        l4549 038F  
                      l2991 0063                        l2983 0D41                        l2992 0237  
                      l2984 0D62                        l2993 00B0                        l2985 0D80  
                      l2994 0236                        l3699 0919                        l2995 00FD  
                      l2996 0235                        l2988 0964                        l2997 014A  
                      l2998 0234                        l2999 0197                        l6721 0970  
                      l6722 097B                        l6731 099A                        l6732 0999  
                      l6733 09A2                        l6725 09B8                        l6734 09B5  
                      l7470 0A7F                        l6726 09B7                        l6727 09C1  
                      l7480 0CDB                        l6728 09D7                        l7473 0CD4  
                      l7474 0CA6                        l7490 0BFE                        l6770 058F  
                      l7467 0A59                        l7475 0C9A                        l7483 0BF7  
                      l6771 04B2                        l6756 09FF                        l7468 0A63  
                      l7476 0CAB                        l7484 0BD1                        l6780 056F  
                      l6772 04B3                        l7469 0A78                        l7477 0CAC  
                      l7485 0BC5                        l6765 057B                        l6781 052F  
                      l6773 04CB                        l7478 0CC5                        l7486 0BD6  
                      l6782 057A                        l6774 04B4                        l6766 049D  
                      l7479 0CD3                        l7487 0BD7                        l6783 058E  
                      l6775 04E5                        l6767 04AF                        l7488 0BE8  
                      l7680 0E14                        l6784 0594                        l6776 04F0  
                      l6768 04B6                        l7489 0BF6                        l7681 0E15  
                      l6777 0518                        l6769 04B1                        l7682 0E26  
                      l6778 050D                        l7683 0E34                        l7675 0DEF  
                      l6779 052A                        l7684 0E3F                        l7676 0DF9  
                      l7685 0E46                        l7677 0E35                        l7678 0E0F  
                      l7679 0E03                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0764                        STR_2 075B  
                      STR_3 0776                        STR_4 077F                        STR_5 076D  
                      STR_6 0752                        STR_7 07A3                        STR_8 07A7  
                      STR_9 078F                        _BRGH 04C2                        _CREN 00C4  
                      u4000 0BC1                        u4001 0BC0                        u4020 0BD5  
                      u4100 0E13                        u4021 0BD4                        u4101 0E12  
                      u4030 0BE1                        u4110 0E1F                        u4031 0BE0  
                      u4015 0BC6                        u4111 0E1E                        u4050 0BF5  
                      u4130 0E33                        u4210 0CE5                        u4051 0BF4  
                      u4035 0BDD                        u4131 0E32                        u4115 0E1B  
                      u4211 0CE4                        u4140 0E39                        u4060 0DE6  
                      u4220 0D1A                        u4300 0107                        u4045 0BE9  
                      u4125 0E27                        u4061 0DE5                        u4221 0D19  
                      u4301 0106                        u4070 0DF3                        u4230 0687  
                      u4310 0110                        u4071 0DF2                        u4231 0686  
                      u4311 010F                        u3600 0C57                        u4080 0DFF  
                      u4320 0154                        u4240 0020                        u4400 04EE  
                      u3601 0C56                        u4081 0DFE                        u4225 0D16  
                      u4321 0153                        u4241 001F                        u4401 04ED  
                      u3610 0C6C                        u4330 015D                        u4250 0029  
                      u4410 050B                        u3611 0C6B                        u4331 015C  
                      u4251 0028                        u4411 050A                        u3380 0A09  
                      u3620 091D                        u4340 01A1                        u4260 006D  
                      u4420 0517                        u4500 0D3F                        u3381 0A08  
                      u3621 091C                        u4341 01A0                        u4261 006C  
                      u4421 0516                        u4501 0D3E                        u4350 01AA  
                      u4270 0076                        u4430 051E                        u4510 0D61  
                      u4095 0E04                        u4351 01A9                        u4271 0075  
                      u4431 051D                        u4415 0507                        u4511 0D60  
                      u4360 01EE                        u4280 00BA                        u4440 0579  
                      u4520 0D97                        u4600 0FE0                        u4361 01ED  
                      u4281 00B9                        u4441 0578                        u4505 0D3B  
                      u4521 0D96                        u4601 0FDF                        u4370 01F7  
                      u4290 00C3                        u4450 058D                        u4530 0C12  
                      u4610 03A2                        u3395 0A16                        u4371 01F6  
                      u4291 00C2                        u4451 058C                        u4515 0D5D  
                      u4531 0C11                        u4611 03A1                        _PEIE 005E  
                      u3820 096B                        u4380 04A3                        u4460 09C1  
                      u4540 0E5C                        u3821 096A                        u4381 04A2  
                      u4461 09C0                        u4541 0E5B                        u4605 0FDC  
                      u3590 09A2                        u3830 0976                        u4390 04DB  
                      u4470 0AAA                        u4550 0E6F                        u3591 09A1  
                      u3831 0975                        u4391 04DA                        u4471 0AA9  
                      u4551 0E6E                        u3920 0A77                        u4480 0242  
                      u4560 0E8C                        u3921 0A76                        u3905 0A64  
                      u4561 0E8B                        u4545 0E58                        u3930 0C96  
                      u4490 029E                        u4570 0EB6                        u3915 0A6B  
                      u3931 0C95                        u4707 0B69                        u4491 029D  
                      u4571 0EB5                        u4555 0E6B                        u4627 0427  
                      _RCIE 0465                        u4580 0F63                        _RCIF 0065  
                      u4581 0F62                        u4637 0442                        u3950 0CAA  
                      u4590 0FAD                        u3951 0CA9                        u4647 07C1  
                      u4495 029A                        u4575 0EB2                        u3945 0C9B  
                      u4657 07E2                        u3890 0A5D                        u3970 0CBD  
                      u3891 0A5C                        u3971 0CBC                        u4667 0D03  
                      u3965 0CAD                        u4677 08F9                        u3990 0CD2  
                      u3991 0CD1                        u3975 0CB9                        u4687 0933  
                      u3985 0CC6                        u4697 094C                        _OERR 00C1  
                      _TMR0 0001                  _ChargeMode 0BFF                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 0C45      __end_of_lcd_write_data 08FE                        _isr1 0595  
                      _main 0390                        _init 0AAC                        _test 00CA  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073                       ?_Menu 0072                       l11001 0DCA  
                     l11003 0DCB                       l11011 0C12                       l10301 09D8  
                     l11021 0C2D                       l11013 0C13                       l11005 0BFF  
                     l11101 03C2                       l10311 09E7                       l10303 09DB  
                     l11023 0C30                       l11015 0C22                       l11007 0C07  
                     l11031 0E5D                       l11111 03D4                       l11103 03C4  
                     l10321 09F4                       l10313 09EA                       l10305 09E3  
                     l10161 0978                       l11017 0C28                       l11025 0C31  
                     l11009 0C0E                       l11041 0E88                       l11033 0E5E  
                     l11121 03FC                       l11113 03DF                       l11105 03CA  
                     l10323 09F5                       l10315 09ED                       l10307 09E4  
                     l10331 09A3                       l10163 097A                       l11019 0C29  
                     l11051 0EA9                       l11043 0E8C                       l11035 0E63  
                     l11027 0E47                       l11131 0449                       l11123 0409  
                     l11115 03E3                       l11107 03CC                       l10181 0A28  
                     l10173 0A00                       l10325 09F6                       l10317 09F0  
                     l10309 09E6                       l10333 09AB                       l10341 0C4B  
                     l11045 0E8D                       l11037 0E6F                       l11053 0EB7  
                     l11029 0E4F                       l11061 0F63                       l11133 0454  
                     l11125 041F                       l11109 03D2                       l11141 0474  
                     l11117 03E4                       l10175 0A03                       l10319 09F1  
                     l10335 09B1                       l10327 0998                       l10351 0C70  
                     l10343 0C53                       l11055 0EC0                       l11047 0E93  
                     l11039 0E7C                       l11071 0FAF                       l11063 0F82  
                     l11135 045F                       l11127 042E                       l11143 048A  
                     l11119 03F6                       l10177 0A0C                       l10337 09B4  
                     l10329 099A                       l10361 0C8B                       l10353 0C74  
                     l10345 0C57                       l10601 0E0F                       l11049 0EA1  
                     l11073 0FC2                       l11065 0FA2                       l11057 0F59  
                     l11137 046C                       l11129 043A                       l11081 0396  
                     l10179 0A1F                       l10355 0C76                       l10347 0C5D  
                     l10339 0C48                       l10371 0924                       l10363 0914  
                     l10531 0A6A                       l10603 0E15                       l10611 0E35  
                     l11067 0FA7                       l11075 0FC8                       l11059 0F5D  
                     l11139 0473                       l11091 03A8                       l11083 0398  
                     l10349 0C6C                       l10357 0C77                       l10365 0916  
                     l10533 0A78                       l10525 0A54                       l10541 0C96  
                     l10613 0E39                       l10605 0E1F                       l10701 0D1C  
                     l11069 0FAE                       l11077 0FE1                       l11093 03AD  
                     l11085 039E                       l10359 0C89                       l10367 091E  
                     l10535 0A7F                       l10527 0A59                       l10551 0CBD  
                     l10543 0C9A                       l10615 0E3F                       l10607 0E26  
                     l10711 0D28                       l10703 0D22                       l11095 03B4  
                     l11087 03A2                       l11079 0390                       l10369 0922  
                     l10481 096D                       l10529 0A5D                       l10561 0CDB  
                     l10553 0CC3                       l10545 0CA1                       l10537 0C8C  
                     l10617 0E46                       l10609 0E2D                       l10641 0B3D  
                     l10705 0D25                       l10721 06A6                       l10713 0671  
                     l10801 0518                       l11097 03BA                       l11089 03A3  
                     l10491 097B                       l10483 096F                       l10555 0CC5  
                     l10547 0CA6                       l10539 0C90                       l10571 0BD1  
                     l10563 0BB9                       l10643 0B52                       l10651 0B67  
                     l10707 0D26                       l10715 0679                       l10731 006D  
                     l10723 0015                       l10811 0563                       l10803 051E  
                     l11099 03BC                       l10485 0970                       l10477 0965  
                     l10557 0CCC                       l10549 0CAC                       l10573 0BD7  
                     l10565 0BC1                       l10581 0BF7                       l10653 0B6B  
                     l10645 0B54                       l10661 0940                       l10709 0D27  
                     l10717 0681                       l10741 00FD                       l10733 0076  
                     l10725 0020                       l10821 0594                       l10813 056A  
                     l10805 0525                       l10901 0ABF                       l10487 0976  
                     l10479 096B                       l10559 0CD4                       l10583 0BFE  
                     l10575 0BE1                       l10567 0BC5                       l10591 0DF3  
                     l10655 0B74                       l10647 0B55                       l10663 0944  
                     l10671 092D                       l10719 0687                       l10751 015D  
                     l10743 0107                       l10735 00B0                       l10727 0029  
                     l10815 056F                       l10807 052A                       l10831 09D0  
                     l10823 09B6                       l10911 0AD7                       l10903 0AC4  
                     l10489 0978                       l10577 0BE8                       l10569 0BCC  
                     l10593 0DF9                       l10585 0DDF                       l10649 0B56  
                     l10665 0948                       l10657 0939                       l10673 092E  
                     l10681 08F4                       l10761 01EE                       l10753 0197  
                     l10745 0110                       l10737 00BA                       l10729 0063  
                     l10809 052F                       l10817 057B                       l10833 09D4  
                     l10825 09B8                       l10841 08D7                       l10913 0AD8  
                     l10905 0AC9                       l10921 0257                       l10579 0BEF  
                     l10595 0DFF                       l10587 0DE6                       l10659 093C  
                     l10667 0928                       l10675 08EE                       l10683 097C  
                     l10691 0CEC                       l10763 01F7                       l10755 01A1  
                     l10747 014A                       l10739 00C3                       l10819 058F  
                     l10771 04AA                       l10835 09D5                       l10827 09C2  
                     l10843 0A80                       l10851 0A29                       l10915 0AD9  
                     l10907 0ACE                       l10931 02B1                       l10923 0278  
                     l10597 0E03                       l10589 0DEF                       l10669 092B  
                     l10677 08F1                       l10693 0CF3                       l10685 0CDC  
                     l10757 01AA                       l10749 0154                       l10781 04D7  
                     l10773 04B5                       l10765 0498                       l10837 09D7  
                     l10829 09CC                       l10845 0A81                       l10861 0A35  
                     l10853 0A2D                       l10909 0AD3                       l10941 0318  
                     l10933 02C4                       l10925 0289                       l10917 0238  
                     l10599 0E0A                       l10679 08F3                       l10695 0CF6  
                     l10687 0CE0                       l10759 01E4                       l10791 04EF  
                     l10783 04DB                       l10775 04B6                       l10767 049D  
                     l10839 08D6                       l10847 0A91                       l10863 0A3B  
                     l10855 0A30                       l10871 07AF                       l10951 0357  
                     l10943 0323                       l10935 02CA                       l10927 028F  
                     l10919 0251                       l10697 0CF7                       l10689 0CE5  
                     l10793 04F0                       l10785 04DF                       l10777 04CB  
                     l10769 04A3                       l10849 0A9A                       l10865 0A41  
                     l10857 0A31                       l10881 07E7                       l10873 07BB  
                     l10953 0363                       l10945 0334                       l10937 02E1  
                     l10929 029E                       l10961 0D2C                       l10699 0CFF  
                     l10795 050C                       l10787 04E5                       l10779 04D3  
                     l10867 0A47                       l10859 0A34                       l10883 07F3  
                     l10875 07C6                       l10891 0AAC                       l10955 036E  
                     l10947 033A                       l10939 030C                       l10971 0D54  
                     l10963 0D32                       l10797 050D                       l10789 04E8  
                     l10869 0A4D                       l10877 07D0                       l10885 094F  
                     l10893 0AAD                       l10957 0381                       l10949 034B  
                     l10965 0D40                       l10973 0D62                       l10981 0D97  
                     l10799 0511                       l10879 07D6                       l10887 095D  
                     l10895 0AB5                       l10959 0382                       l10967 0D41  
                     l10991 0DBF                       l10983 0D98                       l10975 0D81  
                     l10889 0964                       l10897 0AB7                       l10969 0D4E  
                     l10993 0DC1                       l10985 0DA3                       l10977 0D86  
                     l10899 0ABB                       l10995 0DC5                       l10987 0DB1  
                     l10979 0D93                       l10997 0DC6                       l10989 0DB3  
                     l10999 0DC8        __size_of_calibrateIR 005E                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072                       _EEADR 010D  
                     STR_10 079B                       STR_11 07AB                       STR_12 079F  
                     STR_13 073A                       STR_14 072A                       STR_15 0793  
                     STR_16 0787                       STR_17 0797                       STR_18 071A  
                     STR_19 0749             __end_of___awmod 0E47                       _CARRY 0018  
           __end_of___lwdiv 0CDC             __end_of___lwmod 0BFF                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
    lcd_write_data@databyte 0022          i1___lwmod@dividend 0074             __end_of_scan360 0EC1  
                     _total 00CC              __pbitbssCOMMON 0380                       pclath 000A  
               _turnlowByte 00DE             ?_lcd_write_data 0072           ?_adc_read_channel 0072  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0595  
          __end_of_Debounce 0F59          __size_ofi1___lwmod 0044          ??_adc_read_channel 0026  
          ?_readAvgDistance 0072                __end_of_Menu 0C8C  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00E5                __end_of_isr1 0671                __end_of_main 0495  
              __end_of_init 0ADB             rotate@direction 0025                      ??_Menu 0020  
             ?_readDistance 0028      readAvgDistance@fullval 0030                      ??_isr1 0078  
                    ??_main 0061                      ??_init 0023         __end_of_ReadButtons 0B3A  
             Menu@BTN_input 0020                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            __end_of_adc_read 0A29  
               ?_ChargeMode 0072                      i1l2210 0609                      i1l2211 0617  
                    i1l2212 0640                      i1l2213 063F                      i1l2214 0665  
                    i1l2206 0618                      i1l2215 0664                      i1l2207 05BA  
                    i1l2216 0665                      i1l2208 05D3                      i1l2209 05EC  
                    i1l4500 0EDB                      i1l4501 0EDA                      i1l4510 0F34  
                    i1l4502 0EDF                      i1l4511 0F39                      i1l4503 0EF9  
                    i1l4512 0F53                      i1l4504 0EF8                      i1l4520 0B1F  
                    i1l4513 0F52                      i1l4505 0EFD                      i1l4521 0B27  
                    i1l4514 0F58                      i1l4506 0F17                      i1l4522 0B2F  
                    i1l4515 0F58                      i1l4507 0F16                      i1l4523 0B37  
                    i1l4508 0F1B                      i1l4509 0F35                      i1l4518 0B17  
                    i1l4519 0B39                      i1l7490 0BB8                      i1l7483 0BB1  
                    i1l7484 0B8B                      i1l7485 0B7F                      i1l7486 0B90  
                    i1l7487 0B91                      i1l7488 0BA2                      i1l7489 0BB0  
                    u420_20 0BAF                      u420_21 0BAE                      u350_20 0636  
                    u350_21 0635                      u415_20 0B7B                      u351_20 0644  
                    u343_20 0599                      u415_21 0B7A                      u351_21 0643  
                    u343_21 0598                      u352_20 064A                      u344_20 05B8  
                    u352_21 0649                      u344_21 05B7                      u416_25 0B80  
                    u417_20 0B8F                      u353_20 0660                      u345_20 05D1  
                    u417_21 0B8E                      u353_21 065F                      u345_21 05D0  
                    u370_20 0EE5                      u418_20 0B9B                      u354_20 0B13  
                    u346_20 05EA                      u370_21 0EE4                      u418_21 0B9A  
                    u354_21 0B12                      u346_21 05E9                      u418_25 0B97  
                    u371_20 0EF1                      u355_20 0B1B                      u347_20 0603  
                    u371_21 0EF0                      u355_21 0B1A                      u347_21 0602  
                    u419_25 0BA3                      u380_20 0F4B                      u372_20 0EF5  
                    u356_20 0B23                      u348_20 060E                      u380_21 0F4A  
                    u372_21 0EF4                      u356_21 0B22                      u348_21 060D  
                    u381_20 0F4F                      u373_20 0F03                      u357_20 0B2B  
                    u349_20 061E                      u381_21 0F4E                      u373_21 0F02  
                    u357_21 0B2A                      u349_21 061D                      u374_20 0F0F  
                    u358_20 0B33                      u374_21 0F0E                      u358_21 0B32  
               _DistLowByte 00D2                      u375_20 0F13                      u367_20 0EC7  
                    u375_21 0F12                      u367_21 0EC6                      u376_20 0F21  
                    u368_20 0ED3                      u376_21 0F20                      u368_21 0ED2  
                    u377_20 0F2D                      u369_20 0ED7                      u377_21 0F2C  
                    u369_21 0ED6                      u378_20 0F31                      u378_21 0F30  
                    u379_20 0F3F                      u379_21 0F3E                      _TMR0IE 005D  
                    _TMR0IF 005A                scan360@steps 005F                      _SSPCON 0014  
                    _SSPBUF 0013                  _UpReleased 038E            __end_of_lcd_init 0A54  
                    _adcVal 0069             _UpDebounceCount 00D6                      ___wmul 0A54  
                 ??___awmod 0024                _turnhighByte 00DD                ??_ADCconvert 002E  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 094F  
            ??_readDistance 002A             ___awmod@divisor 0020    __end_of_lcd_write_string 0AAC  
           ___awmod@counter 0025                      _rotate 0CDC                      _rxfifo 00A0  
                    clrloop 08CC                      _txfifo 00B0                      _rxiptr 006C  
                    _rxoptr 006D                 _BumpSensors 006B                      _txiptr 006E  
                 ??_scan360 005B                      _txoptr 006F            __end_of_ser_init 0A00  
          __end_of_ser_isrx 097C           __end_ofi1___lwmod 0BB9                      saved_w 007E  
             main@shortwall 0064                 _LeftPressed 0384                   ??_sprintf 0039  
               _DownPressed 0382           lcd_write_string@s 0027          __end_of_ADCconvert 0238  
            __pcstackCOMMON 0072                __pidataBANK1 08DE                 _ReadButtons 0B0A  
       __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 007D                  __pbssBANK0 0067                  __pbssBANK1 00A0  
                __pbssBANK3 0190           _DownDebounceCount 00D3          _RightDebounceCount 00D5  
                __pmaintext 0390           robotTurn@distance 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00D1       __end_of_UpdateDisplay 0390  
        __size_of_ser_getch 0022                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 0021          __size_of_robo_init 0019                     i1l10211 0599  
                   i1l10221 05BA                     i1l10213 059A                     i1l10231 0603  
                   i1l10223 05D1                     i1l10215 05A2                     i1l10241 061E  
                   i1l10233 0604                     i1l10225 05D3                     i1l10217 05A3  
                   i1l10209 0595                     i1l10251 0644                     i1l10243 0626  
                   i1l10235 0609                     i1l10227 05EA                     i1l10219 05B8  
                   i1l10261 0660                     i1l10253 064A                     i1l10245 062E  
                   i1l10237 060E                     i1l10229 05EC          __size_of_robotMove 00A7  
                   i1l10271 0B16                     i1l10263 0B0A                     i1l10255 0652  
                   i1l10247 0636                     i1l10239 0618                     i1l10441 0ED3  
                   i1l10281 0B24                     i1l10273 0B1B                     i1l10265 0B0F  
                   i1l10257 0656                     i1l10249 0640                     i1l10451 0EF5  
                   i1l10443 0ED7                     i1l10435 0EC1                     i1l10291 0B33  
                   i1l10283 0B26                     i1l10275 0B1C                     i1l10267 0B13  
                   i1l10259 065A                     i1l10461 0F21                     i1l10453 0F03  
                   i1l10445 0EE5                     i1l10437 0EC7                     i1l10621 0B7B  
                   i1l10293 0B34                     i1l10285 0B2B                     i1l10277 0B1E  
                   i1l10269 0B14                     i1l10471 0F45                     i1l10463 0F27  
                   i1l10455 0F09                     i1l10447 0EEB                     i1l10439 0ECD  
                   i1l10631 0B9B                     i1l10623 0B7F                     i1l10295 0B36  
                   i1l10287 0B2C                     i1l10279 0B23                     i1l10473 0F4B  
                   i1l10465 0F2D                     i1l10457 0F0F                     i1l10449 0EF1  
                   i1l10633 0BA2                     i1l10625 0B86                     i1l10297 0B37  
                   i1l10289 0B2E                     i1l10475 0F4F                     i1l10467 0F31  
                   i1l10459 0F13                     i1l10635 0BA9                     i1l10627 0B8B  
                   i1l10619 0B75                     i1l10299 0B39                     i1l10469 0F3F  
                   i1l10629 0B91                     i1l10637 0BB1                     i1l10639 0BB8  
        __size_of_robotTurn 0088                  ??_Debounce 0072            ??_lcd_write_data 0020  
                 ?_lcd_init 0072                     _SSPSTAT 0094        __end_of_readDistance 0965  
                 ?_init_adc 0072                   ?_ser_init 0072                   ?_ser_isrx 0072  
             ??_calibrateIR 0059                     ___awmod 0DDF             __size_of___wmul 002C  
                   ___lwdiv 0C8C                     ___lwmod 0BB9   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 0E47  
                   _dpowers 0710            ___awmod@dividend 0022                     _lowByte 00DA  
                   _ser_tmp 00DB                     _sprintf 0495                  ??_lcd_init 0023  
      end_of_initialization 0B06                ??_ChargeMode 0059           __end_of_ser_getch 09D8  
                   init_ram 0902                  ??_init_adc 0020           __end_of_ser_putch 09B6  
         __end_of_robo_init 0995           __end_of_robotMove 1000                _LeftReleased 0385  
         __end_of_robotTurn 06F9                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038C  
  __size_of_readAvgDistance 0055                  _robot_read 07AF           ?_lcd_write_string 0027  
        __end_of_ChargeMode 0C45         __end_of_calibrateIR 0DDF          ??_lcd_write_string 0029  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
                 i1___lwmod 0B75                  _totalSteps 00CE                  main@choice 0066  
             ?_spi_transfer 0072               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 0A80           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 0D2C         start_initialization 0ADB       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038D              _RTC_FLAG_250MS 0388  
            _RTC_FLAG_500MS 0389                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 0D81                 __pdataBANK1 00DF            _adc_read_channel 0B3A  
               ?_robot_read 0072                    ??_rotate 0026                _readDistance 094F  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020           __size_of_lcd_init 002B                 sprintf@_val 003F  
               sprintf@flag 003D           robotMove@distance 0059                 sprintf@prec 003E  
              _current_step 00EB            readAvgDistance@i 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                    ?___awmod 0020                   __ptext900 0F59  
                 __ptext901 0E47                   __ptext910 0A80                   __ptext902 0BFF  
                 __ptext911 08D3                   __ptext903 0D81                   __ptext920 0939  
                 __ptext912 09B6                   __ptext904 0D2C                   __ptext921 0B3A  
                 __ptext913 0495                   __ptext905 0238                   __ptext930 09D8  
                 __ptext922 0DDF                   __ptext914 0015                   __ptext906 0AAC  
                 __ptext931 0A00                   __ptext923 0BB9                   __ptext915 0671  
                 __ptext907 094F                   __ptext932 0595                   __ptext924 0C8C  
                 __ptext916 0CDC                   __ptext908 07AF                   __ptext933 0B0A  
                 __ptext925 0A54                   __ptext917 097C                   __ptext909 0A29  
                 __ptext934 0B75                   __ptext926 0965                   __ptext918 08EB  
                 __ptext935 0EC1                   __ptext927 0911                   __ptext919 0925  
                 __ptext936 0000                   __ptext928 0C45                   __ptext929 0995  
         __size_of_ser_init 0028           __size_of_ser_isrx 0017                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 0700                   _dist_high 00C2  
                  ?_scan360 0059         readDistance@fullval 002C                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
   __size_of_lcd_set_cursor 000B           interrupt_function 0004      __size_of_UpdateDisplay 0158  
            ___wmul@product 0024         __size_of_robot_read 0051                  ser_putch@c 0021  
                 _ser_getch 09B6                   _ser_putch 0995                   _robo_init 097C  
                 _robotMove 0F59                   _robotTurn 0671                _RightPressed 038B  
      __size_of_ReadButtons 0030        __end_of_spi_transfer 0925                 __stringbase 070F  
         ___wmul@multiplier 0020      UpdateDisplay@adcOutput 0049            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 0EC1           _LeftDebounceCount 00D4  
 __size_of_lcd_write_string 002C          scan360@lowestSteps 005D     __size_of_lcd_write_data 0013  
                ?_ser_getch 0072                  ?_ser_putch 0072     adc_read_channel@channel 0027  
             _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 038A                  ?_robo_init 0072  
                 init_fetch 08FE                  ?_robotMove 0059                  ?_robotTurn 0022  
                _ADCconvert 0015            __size_of___awmod 0068            __size_of___lwdiv 0050  
          __size_of___lwmod 0046               _UpdateDisplay 0238                    _adc_read 0A00  
               _currentMenu 00D7            __size_of_scan360 007A             ___lwdiv@divisor 0026  
           ___lwdiv@counter 002D                 _menuStrings 00DF                    _highByte 00D9  
                  _lcd_init 0A29                    _distance 00C6                    _dist_low 00C4  
          __size_of_sprintf 0100    __end_of_adc_read_channel 0B75   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 0939               __size_of_isr1 00DC  
             __size_of_main 0105               __size_of_init 002F                    clear_ram 08CB  
                  _ser_init 09D8                    _ser_isrx 0965             _readAvgDistance 0D2C  
              ?_calibrateIR 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
       _CenterDebounceCount 00D0                _RTC_FLAG_1MS 0387          UpdateDisplay@F1229 0190  
                  intlevel1 0000              _lcd_set_cursor 08D3                   sprintf@ap 003C  
                 sprintf@sp 0043            ___lwmod@dividend 0030          __end_of_robot_read 0800  
                 stringcode 070A                 ??_ser_getch 0020                 _serialInput 00DC  
               ??_ser_putch 0020               _distTravelled 00C0                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotMove 005B                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 0925            scan360@lowestVal 005B  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0044  
                  sprintf@f 0034             ___lwmod@divisor 002E             ___lwmod@counter 0033  
                  stringdir 070A                    stringtab 0700         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 08DE            _lcd_write_string 0A80                _spi_transfer 0911  
         _current_direction 00D8                 _RTC_Counter 0067     __end_of_readAvgDistance 0D81  
            _lcd_write_data 08EB  
