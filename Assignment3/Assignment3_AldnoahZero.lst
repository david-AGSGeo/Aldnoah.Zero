

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 17 11:31:54 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 34 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 34 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_Menu
    48                           	FNCALL	_init,_init_adc
    49                           	FNCALL	_init,_lcd_init
    50                           	FNCALL	_init,_ser_init
    51                           	FNCALL	_lcd_init,_lcd_write_control
    52                           	FNROOT	_main
    53                           	FNCALL	_isr1,___lwmod
    54                           	FNCALL	_isr1,_readAvgDistance
    55                           	FNCALL	_isr1,_UpdateDisplay
    56                           	FNCALL	_isr1,_ReadButtons
    57                           	FNCALL	_UpdateDisplay,i1_lcd_write_control
    58                           	FNCALL	_UpdateDisplay,_sprintf
    59                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    60                           	FNCALL	_UpdateDisplay,_lcd_write_string
    61                           	FNCALL	_UpdateDisplay,___awmod
    62                           	FNCALL	_readAvgDistance,_readDistance
    63                           	FNCALL	_readAvgDistance,___lwdiv
    64                           	FNCALL	_readAvgDistance,_ADCconvert
    65                           	FNCALL	_readDistance,_adc_read_channel
    66                           	FNCALL	_lcd_write_string,_lcd_write_data
    67                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    68                           	FNCALL	_sprintf,___lwdiv
    69                           	FNCALL	_sprintf,___lwmod
    70                           	FNCALL	_ADCconvert,___lwmod
    71                           	FNCALL	_ReadButtons,_Debounce
    72                           	FNCALL	_adc_read_channel,_adc_read
    73                           	FNCALL	intlevel1,_isr1
    74                           	global	intlevel1
    75                           	FNROOT	intlevel1
    76                           	global	_menuStrings
    77                           	global	_shortMenuStrings
    78                           	global	_current_step
    79                           psect	idataBANK0,class=CODE,space=0,delta=2
    80                           global __pidataBANK0
    81  07F2                     __pidataBANK0:
    82                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
    83                           	line	34
    84                           
    85                           ;initializer for _menuStrings
    86  07F2  341A               	retlw	(STR_1-__stringbase)&0ffh
    87  07F3  3421               	retlw	(STR_2-__stringbase)&0ffh
    88  07F4  3428               	retlw	(STR_3-__stringbase)&0ffh
    89  07F5  342F               	retlw	(STR_4-__stringbase)&0ffh
    90  07F6  3436               	retlw	(STR_5-__stringbase)&0ffh
    91                           	line	35
    92                           
    93                           ;initializer for _shortMenuStrings
    94  07F7  343D               	retlw	(STR_6-__stringbase)&0ffh
    95  07F8  3441               	retlw	(STR_7-__stringbase)&0ffh
    96  07F9  3445               	retlw	(STR_8-__stringbase)&0ffh
    97  07FA  3449               	retlw	(STR_9-__stringbase)&0ffh
    98  07FB  344D               	retlw	(STR_10-__stringbase)&0ffh
    99                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   100                           	line	21
   101                           
   102                           ;initializer for _current_step
   103  07FC  343C               	retlw	03Ch
   104                           	global	_dpowers
   105                           psect	strings,class=STRING,delta=2
   106                           global __pstrings
   107  0600                     __pstrings:
   108                           ;	global	stringdir,stringtab,__stringbase
   109  0600                     stringtab:
   110                           ;	String table - string pointers are 1 byte each
   111  0600  1BFF               	btfsc	(btemp+1),7
   112  0601  2E0A               	ljmp	stringcode
   113  0602  1383               	bcf	status,7
   114  0603  187F               	btfsc	(btemp+1),0
   115  0604  1783               	bsf	status,7
   116  0605  0800               	movf	indf,w
   117  0606  0A84               	incf fsr
   118  0607  1903               skipnz
   119  0608  0AFF               incf btemp+1
   120  0609  0008               	return
   121  060A                     stringcode:stringdir:
      + 060A                     stringdir:	
   122  060A  3006               movlw high(stringdir)
   123  060B  008A               movwf pclath
   124  060C  0804               movf fsr,w
   125  060D  0A84               incf fsr
   126  060E  0782               	addwf pc
   127  060F                     __stringbase:
   128  060F  3400               	retlw	0
   129                           psect	strings
   130                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   131                           	line	350
   132  0610                     _dpowers:
   133  0610  3401               	retlw	01h
   134  0611  3400               	retlw	0
   135                           
   136  0612  340A               	retlw	0Ah
   137  0613  3400               	retlw	0
   138                           
   139  0614  3464               	retlw	064h
   140  0615  3400               	retlw	0
   141                           
   142  0616  34E8               	retlw	0E8h
   143  0617  3403               	retlw	03h
   144                           
   145  0618  3410               	retlw	010h
   146  0619  3427               	retlw	027h
   147                           
   148                           	global	_dpowers
   149                           	global	_RTC_Counter
   150                           	global	_adcVal
   151                           	global	_distance
   152                           	global	_pos
   153                           	global	_CenterDebounceCount
   154                           	global	_DownDebounceCount
   155                           	global	_LeftDebounceCount
   156                           	global	_RightDebounceCount
   157                           	global	_UpDebounceCount
   158                           	global	_buttonPressed
   159                           	global	_current_direction
   160                           	global	_rxiptr
   161                           	global	_rxoptr
   162                           	global	_ser_tmp
   163                           	global	_txiptr
   164                           	global	_txoptr
   165                           	global	_CenterPressed
   166                           	global	_CenterReleased
   167                           	global	_DownPressed
   168                           	global	_DownReleased
   169                           	global	_LeftPressed
   170                           	global	_LeftReleased
   171                           	global	_RTC_FLAG_10MS
   172                           	global	_RTC_FLAG_1MS
   173                           	global	_RTC_FLAG_250MS
   174                           	global	_RTC_FLAG_500MS
   175                           	global	_RTC_FLAG_50MS
   176                           	global	_RightPressed
   177                           	global	_RightReleased
   178                           	global	_UpPressed
   179                           	global	_UpReleased
   180                           	global	UpdateDisplay@F1206
   181                           	global	_rxfifo
   182                           	global	_txfifo
   183                           	global	_ADCON0
   184  001F                     _ADCON0	set	31
   185                           	global	_ADRESH
   186  001E                     _ADRESH	set	30
   187                           	global	_PORTA
   188  0005                     _PORTA	set	5
   189                           	global	_PORTC
   190  0007                     _PORTC	set	7
   191                           	global	_PORTD
   192  0008                     _PORTD	set	8
   193                           	global	_PORTE
   194  0009                     _PORTE	set	9
   195                           	global	_RCREG
   196  001A                     _RCREG	set	26
   197                           	global	_TMR0
   198  0001                     _TMR0	set	1
   199                           	global	_TXREG
   200  0019                     _TXREG	set	25
   201                           	global	_CARRY
   202  0018                     _CARRY	set	24
   203                           	global	_CHS0
   204  00FB                     _CHS0	set	251
   205                           	global	_CHS1
   206  00FC                     _CHS1	set	252
   207                           	global	_CHS2
   208  00FD                     _CHS2	set	253
   209                           	global	_CREN
   210  00C4                     _CREN	set	196
   211                           	global	_GIE
   212  005F                     _GIE	set	95
   213                           	global	_GO
   214  00FA                     _GO	set	250
   215                           	global	_OERR
   216  00C1                     _OERR	set	193
   217                           	global	_RB0
   218  0030                     _RB0	set	48
   219                           	global	_RB1
   220  0031                     _RB1	set	49
   221                           	global	_RB2
   222  0032                     _RB2	set	50
   223                           	global	_RB3
   224  0033                     _RB3	set	51
   225                           	global	_RB4
   226  0034                     _RB4	set	52
   227                           	global	_RB5
   228  0035                     _RB5	set	53
   229                           	global	_RB6
   230  0036                     _RB6	set	54
   231                           	global	_RCIF
   232  0065                     _RCIF	set	101
   233                           	global	_RE0
   234  0048                     _RE0	set	72
   235                           	global	_RE1
   236  0049                     _RE1	set	73
   237                           	global	_RE2
   238  004A                     _RE2	set	74
   239                           	global	_RX9
   240  00C6                     _RX9	set	198
   241                           	global	_SPEN
   242  00C7                     _SPEN	set	199
   243                           	global	_TMR0IE
   244  005D                     _TMR0IE	set	93
   245                           	global	_TMR0IF
   246  005A                     _TMR0IF	set	90
   247                           	global	_TXIF
   248  0064                     _TXIF	set	100
   249                           	global	_ADCON1
   250  009F                     _ADCON1	set	159
   251                           	global	_ADRESL
   252  009E                     _ADRESL	set	158
   253                           	global	_OPTION_REG
   254  0081                     _OPTION_REG	set	129
   255                           	global	_SPBRG
   256  0099                     _SPBRG	set	153
   257                           	global	_TRISA
   258  0085                     _TRISA	set	133
   259                           	global	_TRISB
   260  0086                     _TRISB	set	134
   261                           	global	_TRISC
   262  0087                     _TRISC	set	135
   263                           	global	_TRISD
   264  0088                     _TRISD	set	136
   265                           	global	_TRISE
   266  0089                     _TRISE	set	137
   267                           	global	_BRGH
   268  04C2                     _BRGH	set	1218
   269                           	global	_RCIE
   270  0465                     _RCIE	set	1125
   271                           	global	_SYNC
   272  04C4                     _SYNC	set	1220
   273                           	global	_TX9
   274  04C6                     _TX9	set	1222
   275                           	global	_TXEN
   276  04C5                     _TXEN	set	1221
   277                           	global	_TXIE
   278  0464                     _TXIE	set	1124
   279                           	global	_EEADR
   280  010D                     _EEADR	set	269
   281                           	global	_EEDATA
   282  010C                     _EEDATA	set	268
   283                           	global	_EECON1
   284  018C                     _EECON1	set	396
   285                           	global	_EECON2
   286  018D                     _EECON2	set	397
   287                           	global	_RD
   288  0C60                     _RD	set	3168
   289                           	global	_WR
   290  0C61                     _WR	set	3169
   291                           	global	_WREN
   292  0C62                     _WREN	set	3170
   293                           	
   294  061A                     STR_11:	
   295  061A  3441               	retlw	65	;'A'
   296  061B  3444               	retlw	68	;'D'
   297  061C  3443               	retlw	67	;'C'
   298  061D  343A               	retlw	58	;':'
   299  061E  3425               	retlw	37	;'%'
   300  061F  3464               	retlw	100	;'d'
   301  0620  3420               	retlw	32	;' '
   302  0621  3444               	retlw	68	;'D'
   303  0622  3469               	retlw	105	;'i'
   304  0623  3473               	retlw	115	;'s'
   305  0624  3474               	retlw	116	;'t'
   306  0625  343A               	retlw	58	;':'
   307  0626  3425               	retlw	37	;'%'
   308  0627  3464               	retlw	100	;'d'
   309  0628  3400               	retlw	0
   310                           psect	strings
   311                           	
   312  0629                     STR_1:	
   313  0629  3454               	retlw	84	;'T'
   314  062A  3468               	retlw	104	;'h'
   315  062B  3469               	retlw	105	;'i'
   316  062C  346E               	retlw	110	;'n'
   317  062D  3467               	retlw	103	;'g'
   318  062E  3431               	retlw	49	;'1'
   319  062F  3400               	retlw	0
   320                           psect	strings
   321                           	
   322  0630                     STR_2:	
   323  0630  3454               	retlw	84	;'T'
   324  0631  3468               	retlw	104	;'h'
   325  0632  3469               	retlw	105	;'i'
   326  0633  346E               	retlw	110	;'n'
   327  0634  3467               	retlw	103	;'g'
   328  0635  3432               	retlw	50	;'2'
   329  0636  3400               	retlw	0
   330                           psect	strings
   331                           	
   332  0637                     STR_3:	
   333  0637  3454               	retlw	84	;'T'
   334  0638  3468               	retlw	104	;'h'
   335  0639  3469               	retlw	105	;'i'
   336  063A  346E               	retlw	110	;'n'
   337  063B  3467               	retlw	103	;'g'
   338  063C  3433               	retlw	51	;'3'
   339  063D  3400               	retlw	0
   340                           psect	strings
   341                           	
   342  063E                     STR_4:	
   343  063E  3454               	retlw	84	;'T'
   344  063F  3468               	retlw	104	;'h'
   345  0640  3469               	retlw	105	;'i'
   346  0641  346E               	retlw	110	;'n'
   347  0642  3467               	retlw	103	;'g'
   348  0643  3434               	retlw	52	;'4'
   349  0644  3400               	retlw	0
   350                           psect	strings
   351                           	
   352  0645                     STR_5:	
   353  0645  3454               	retlw	84	;'T'
   354  0646  3468               	retlw	104	;'h'
   355  0647  3469               	retlw	105	;'i'
   356  0648  346E               	retlw	110	;'n'
   357  0649  3467               	retlw	103	;'g'
   358  064A  3435               	retlw	53	;'5'
   359  064B  3400               	retlw	0
   360                           psect	strings
   361                           	
   362  064C                     STR_6:	
   363  064C  3454               	retlw	84	;'T'
   364  064D  3468               	retlw	104	;'h'
   365  064E  3431               	retlw	49	;'1'
   366  064F  3400               	retlw	0
   367                           psect	strings
   368                           	
   369  0650                     STR_7:	
   370  0650  3454               	retlw	84	;'T'
   371  0651  3468               	retlw	104	;'h'
   372  0652  3432               	retlw	50	;'2'
   373  0653  3400               	retlw	0
   374                           psect	strings
   375                           	
   376  0654                     STR_8:	
   377  0654  3454               	retlw	84	;'T'
   378  0655  3468               	retlw	104	;'h'
   379  0656  3433               	retlw	51	;'3'
   380  0657  3400               	retlw	0
   381                           psect	strings
   382                           	
   383  0658                     STR_9:	
   384  0658  3454               	retlw	84	;'T'
   385  0659  3468               	retlw	104	;'h'
   386  065A  3434               	retlw	52	;'4'
   387  065B  3400               	retlw	0
   388                           psect	strings
   389                           	
   390  065C                     STR_10:	
   391  065C  3454               	retlw	84	;'T'
   392  065D  3468               	retlw	104	;'h'
   393  065E  3435               	retlw	53	;'5'
   394  065F  3400               	retlw	0
   395                           psect	strings
   396                           	file	"Assignment3_AldnoahZero.as"
   397                           	line	#
   398                           psect cinit,class=CODE,delta=2
   399                           global start_initialization
   400  0EF7                     start_initialization:
   401                           
   402                           psect	bitbssBANK0,class=BANK0,bit,space=1
   403                           global __pbitbssBANK0
   404  02F0                     __pbitbssBANK0:
   405  02F0                     _CenterPressed:
   406  02F0                            ds      1
   407                           
   408  02F1                     _CenterReleased:
   409  02F1                            ds      1
   410                           
   411  02F2                     _DownPressed:
   412  02F2                            ds      1
   413                           
   414  02F3                     _DownReleased:
   415  02F3                            ds      1
   416                           
   417  02F4                     _LeftPressed:
   418  02F4                            ds      1
   419                           
   420  02F5                     _LeftReleased:
   421  02F5                            ds      1
   422                           
   423  02F6                     _RTC_FLAG_10MS:
   424  02F6                            ds      1
   425                           
   426  02F7                     _RTC_FLAG_1MS:
   427  02F7                            ds      1
   428                           
   429  02F8                     _RTC_FLAG_250MS:
   430  02F8                            ds      1
   431                           
   432  02F9                     _RTC_FLAG_500MS:
   433  02F9                            ds      1
   434                           
   435  02FA                     _RTC_FLAG_50MS:
   436  02FA                            ds      1
   437                           
   438  02FB                     _RightPressed:
   439  02FB                            ds      1
   440                           
   441  02FC                     _RightReleased:
   442  02FC                            ds      1
   443                           
   444  02FD                     _UpPressed:
   445  02FD                            ds      1
   446                           
   447  02FE                     _UpReleased:
   448  02FE                            ds      1
   449                           
   450                           psect	bssBANK0,class=BANK0,space=1
   451                           global __pbssBANK0
   452  004A                     __pbssBANK0:
   453  004A                     _RTC_Counter:
   454  004A                            ds      2
   455                           
   456  004C                     _adcVal:
   457  004C                            ds      2
   458                           
   459  004E                     _distance:
   460  004E                            ds      2
   461                           
   462  0050                     _pos:
   463  0050                            ds      2
   464                           
   465  0052                     _CenterDebounceCount:
   466  0052                            ds      1
   467                           
   468  0053                     _DownDebounceCount:
   469  0053                            ds      1
   470                           
   471  0054                     _LeftDebounceCount:
   472  0054                            ds      1
   473                           
   474  0055                     _RightDebounceCount:
   475  0055                            ds      1
   476                           
   477  0056                     _UpDebounceCount:
   478  0056                            ds      1
   479                           
   480  0057                     _buttonPressed:
   481  0057                            ds      1
   482                           
   483  0058                     _current_direction:
   484  0058                            ds      1
   485                           
   486  0059                     _rxiptr:
   487  0059                            ds      1
   488                           
   489  005A                     _rxoptr:
   490  005A                            ds      1
   491                           
   492  005B                     _ser_tmp:
   493  005B                            ds      1
   494                           
   495  005C                     _txiptr:
   496  005C                            ds      1
   497                           
   498  005D                     _txoptr:
   499  005D                            ds      1
   500                           
   501                           psect	dataBANK0,class=BANK0,space=1
   502                           global __pdataBANK0
   503  0060                     __pdataBANK0:
   504                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   505                           	line	34
   506  0060                     _menuStrings:
   507  0060                            ds      5
   508                           
   509                           psect	dataBANK0
   510                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   511                           	line	35
   512  0065                     _shortMenuStrings:
   513  0065                            ds      5
   514                           
   515                           psect	dataBANK0
   516                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   517                           	line	21
   518  006A                     _current_step:
   519  006A                            ds      1
   520                           
   521                           psect	bssBANK1,class=BANK1,space=1
   522                           global __pbssBANK1
   523  00A0                     __pbssBANK1:
   524  00A0                     UpdateDisplay@F1206:
   525  00A0                            ds      16
   526                           
   527  00B0                     _rxfifo:
   528  00B0                            ds      16
   529                           
   530  00C0                     _txfifo:
   531  00C0                            ds      16
   532                           
   533                           psect clrtext,class=CODE,delta=2
   534                           global clear_ram
   535                           ;	Called with FSR containing the base address, and
   536                           ;	W with the last address+1
   537  0E50                     clear_ram:
   538  0E50  0064               	clrwdt			;clear the watchdog before getting into this loop
   539  0E51                     clrloop:
   540  0E51  0180               	clrf	indf		;clear RAM location pointed to by FSR
   541  0E52  0A84               	incf	fsr,f		;increment pointer
   542  0E53  0604               	xorwf	fsr,w		;XOR with final address
   543  0E54  1903               	btfsc	status,2	;have we reached the end yet?
   544  0E55  3400               	retlw	0		;all done for this memory range, return
   545  0E56  0604               	xorwf	fsr,w		;XOR again to restore value
   546  0E57  2E51               	goto	clrloop		;do the next byte
   547                           
   548                           ; Clear objects allocated to BITBANK0
   549                           psect cinit,class=CODE,delta=2
   550  0EF7  01DE               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   551  0EF8  01DF               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   552                           ; Clear objects allocated to BANK0
   553                           psect cinit,class=CODE,delta=2
   554  0EF9  1383               	bcf	status, 7	;select IRP bank0
   555  0EFA  304A               	movlw	low(__pbssBANK0)
   556  0EFB  0084               	movwf	fsr
   557  0EFC  305E               	movlw	low((__pbssBANK0)+014h)
   558  0EFD  120A  158A  2650   	fcall	clear_ram
              120A  158A         
   559                           ; Clear objects allocated to BANK1
   560                           psect cinit,class=CODE,delta=2
   561  0F02  30A0               	movlw	low(__pbssBANK1)
   562  0F03  0084               	movwf	fsr
   563  0F04  30D0               	movlw	low((__pbssBANK1)+030h)
   564  0F05  120A  158A  2650   	fcall	clear_ram
              120A  158A         
   565                           global btemp
   566                           psect inittext,class=CODE,delta=2
   567                           global init_fetch,btemp
   568                           ;	Called with low address in FSR and high address in W
   569  0E74                     init_fetch:
   570  0E74  087E               	movf btemp,w
   571  0E75  008A               	movwf pclath
   572  0E76  087F               	movf btemp+1,w
   573  0E77  0082               	movwf pc
   574                           global init_ram
   575                           ;Called with:
   576                           ;	high address of idata address in btemp 
   577                           ;	low address of idata address in btemp+1 
   578                           ;	low address of data in FSR
   579                           ;	high address + 1 of data in btemp-1
   580  0E78                     init_ram:
   581  0E78  120A  158A  2674   	fcall init_fetch
              120A  158A         
   582  0E7D  0080               	movwf indf,f
   583  0E7E  0A84               	incf fsr,f
   584  0E7F  0804               	movf fsr,w
   585  0E80  067D               	xorwf btemp-1,w
   586  0E81  1903               	btfsc status,2
   587  0E82  3400               	retlw 0
   588  0E83  0AFF               	incf btemp+1,f
   589  0E84  1903               	btfsc status,2
   590  0E85  0AFE               	incf btemp,f
   591  0E86  2E78               	goto init_ram
   592                           ; Initialize objects allocated to BANK0
   593                           psect cinit,class=CODE,delta=2
   594                           global init_ram, __pidataBANK0
   595  0F0A  306B               	movlw low(__pdataBANK0+11)
   596  0F0B  00FD               	movwf btemp-1,f
   597  0F0C  3007               	movlw high(__pidataBANK0)
   598  0F0D  00FE               	movwf btemp,f
   599  0F0E  30F2               	movlw low(__pidataBANK0)
   600  0F0F  00FF               	movwf btemp+1,f
   601  0F10  3060               	movlw low(__pdataBANK0)
   602  0F11  0084               	movwf fsr,f
   603  0F12  120A  158A  2678   	fcall init_ram
              120A  158A         
   604                           psect cinit,class=CODE,delta=2
   605                           global end_of_initialization
   606                           
   607                           ;End of C runtime variable initialization code
   608                           
   609  0F17                     end_of_initialization:
   610  0F17  0183               clrf status
   611  0F18  120A  118A  2EC0   ljmp _main	;jump to C main() function
   612                           psect	cstackBANK1,class=BANK1,space=1
   613                           global __pcstackBANK1
   614  00D0                     __pcstackBANK1:
   615                           	global	??_ser_init
   616  00D0                     ??_ser_init:	; 0 bytes @ 0x0
   617                           	global	??_Menu
   618  00D0                     ??_Menu:	; 0 bytes @ 0x0
   619                           	global	??_init_adc
   620  00D0                     ??_init_adc:	; 0 bytes @ 0x0
   621                           	global	??_lcd_write_control
   622  00D0                     ??_lcd_write_control:	; 0 bytes @ 0x0
   623                           	global	Menu@input
   624  00D0                     Menu@input:	; 1 bytes @ 0x0
   625  00D0                     	ds	2
   626                           	global	lcd_write_control@databyte
   627  00D2                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   628  00D2                     	ds	1
   629                           	global	??_lcd_init
   630  00D3                     ??_lcd_init:	; 0 bytes @ 0x3
   631                           	global	??_init
   632  00D3                     ??_init:	; 0 bytes @ 0x3
   633                           	global	??_main
   634  00D3                     ??_main:	; 0 bytes @ 0x3
   635                           psect	cstackCOMMON,class=COMMON,space=1
   636                           global __pcstackCOMMON
   637  0070                     __pcstackCOMMON:
   638                           	global	?_readAvgDistance
   639  0070                     ?_readAvgDistance:	; 0 bytes @ 0x0
   640                           	global	?_UpdateDisplay
   641  0070                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   642                           	global	?_ser_init
   643  0070                     ?_ser_init:	; 0 bytes @ 0x0
   644                           	global	?_Menu
   645  0070                     ?_Menu:	; 0 bytes @ 0x0
   646                           	global	?_ADCconvert
   647  0070                     ?_ADCconvert:	; 0 bytes @ 0x0
   648                           	global	?_init_adc
   649  0070                     ?_init_adc:	; 0 bytes @ 0x0
   650                           	global	?_lcd_write_control
   651  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   652                           	global	?_lcd_write_data
   653  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   654                           	global	??_lcd_write_data
   655  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   656                           	global	?_lcd_set_cursor
   657  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   658                           	global	?_lcd_init
   659  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   660                           	global	?_isr1
   661  0070                     ?_isr1:	; 0 bytes @ 0x0
   662                           	global	?_init
   663  0070                     ?_init:	; 0 bytes @ 0x0
   664                           	global	?_main
   665  0070                     ?_main:	; 0 bytes @ 0x0
   666                           	global	?_Debounce
   667  0070                     ?_Debounce:	; 0 bytes @ 0x0
   668                           	global	??_Debounce
   669  0070                     ??_Debounce:	; 0 bytes @ 0x0
   670                           	global	?i1_lcd_write_control
   671  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   672                           	global	??i1_lcd_write_control
   673  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   674                           	global	?_ReadButtons
   675  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
   676                           	global	?_adc_read_channel
   677  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   678                           	global	?_adc_read
   679  0070                     ?_adc_read:	; 2 bytes @ 0x0
   680                           	global	?___lwdiv
   681  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   682                           	global	?___awmod
   683  0070                     ?___awmod:	; 2 bytes @ 0x0
   684                           	global	___lwdiv@divisor
   685  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   686                           	global	___awmod@divisor
   687  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   688  0070                     	ds	1
   689                           	global	??_ReadButtons
   690  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
   691  0071                     	ds	1
   692                           	global	??_adc_read
   693  0072                     ??_adc_read:	; 0 bytes @ 0x2
   694                           	global	lcd_write_data@databyte
   695  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   696                           	global	i1lcd_write_control@databyte
   697  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   698                           	global	___lwdiv@dividend
   699  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   700                           	global	___awmod@dividend
   701  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   702  0072                     	ds	1
   703                           	global	??_lcd_set_cursor
   704  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   705                           	global	lcd_set_cursor@address
   706  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   707  0073                     	ds	1
   708                           	global	??___lwdiv
   709  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   710                           	global	??___awmod
   711  0074                     ??___awmod:	; 0 bytes @ 0x4
   712                           	global	adc_read@adc_value
   713  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   714  0074                     	ds	1
   715                           	global	___awmod@counter
   716  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   717                           	global	___lwdiv@quotient
   718  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   719  0075                     	ds	1
   720                           	global	??_adc_read_channel
   721  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   722                           	global	___awmod@sign
   723  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   724  0076                     	ds	1
   725                           	global	?_lcd_write_string
   726  0077                     ?_lcd_write_string:	; 0 bytes @ 0x7
   727                           	global	adc_read_channel@channel
   728  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   729                           	global	___lwdiv@counter
   730  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   731                           	global	lcd_write_string@s
   732  0077                     lcd_write_string@s:	; 2 bytes @ 0x7
   733  0077                     	ds	1
   734                           	global	?_readDistance
   735  0078                     ?_readDistance:	; 2 bytes @ 0x8
   736                           	global	?___lwmod
   737  0078                     ?___lwmod:	; 2 bytes @ 0x8
   738                           	global	___lwmod@divisor
   739  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   740  0078                     	ds	1
   741                           	global	??_lcd_write_string
   742  0079                     ??_lcd_write_string:	; 0 bytes @ 0x9
   743  0079                     	ds	1
   744                           	global	??_readDistance
   745  007A                     ??_readDistance:	; 0 bytes @ 0xA
   746                           	global	___lwmod@dividend
   747  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   748  007A                     	ds	2
   749                           	global	??___lwmod
   750  007C                     ??___lwmod:	; 0 bytes @ 0xC
   751                           	global	readDistance@fullval
   752  007C                     readDistance@fullval:	; 2 bytes @ 0xC
   753  007C                     	ds	1
   754                           	global	___lwmod@counter
   755  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   756  007D                     	ds	1
   757                           	global	??_readAvgDistance
   758  007E                     ??_readAvgDistance:	; 0 bytes @ 0xE
   759                           	global	??_ADCconvert
   760  007E                     ??_ADCconvert:	; 0 bytes @ 0xE
   761                           psect	cstackBANK0,class=BANK0,space=1
   762                           global __pcstackBANK0
   763  0020                     __pcstackBANK0:
   764                           	global	?_sprintf
   765  0020                     ?_sprintf:	; 2 bytes @ 0x0
   766                           	global	sprintf@f
   767  0020                     sprintf@f:	; 1 bytes @ 0x0
   768                           	global	readAvgDistance@fullval
   769  0020                     readAvgDistance@fullval:	; 2 bytes @ 0x0
   770  0020                     	ds	2
   771                           	global	readAvgDistance@i
   772  0022                     readAvgDistance@i:	; 2 bytes @ 0x2
   773  0022                     	ds	3
   774                           	global	??_sprintf
   775  0025                     ??_sprintf:	; 0 bytes @ 0x5
   776  0025                     	ds	3
   777                           	global	sprintf@ap
   778  0028                     sprintf@ap:	; 1 bytes @ 0x8
   779  0028                     	ds	1
   780                           	global	sprintf@flag
   781  0029                     sprintf@flag:	; 1 bytes @ 0x9
   782  0029                     	ds	1
   783                           	global	sprintf@prec
   784  002A                     sprintf@prec:	; 1 bytes @ 0xA
   785  002A                     	ds	1
   786                           	global	sprintf@_val
   787  002B                     sprintf@_val:	; 4 bytes @ 0xB
   788  002B                     	ds	4
   789                           	global	sprintf@sp
   790  002F                     sprintf@sp:	; 1 bytes @ 0xF
   791  002F                     	ds	1
   792                           	global	sprintf@c
   793  0030                     sprintf@c:	; 1 bytes @ 0x10
   794  0030                     	ds	1
   795                           	global	??_UpdateDisplay
   796  0031                     ??_UpdateDisplay:	; 0 bytes @ 0x11
   797  0031                     	ds	4
   798                           	global	UpdateDisplay@adcOutput
   799  0035                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x15
   800  0035                     	ds	16
   801                           	global	??_isr1
   802  0045                     ??_isr1:	; 0 bytes @ 0x25
   803  0045                     	ds	5
   804 ;;Data sizes: Strings 70, constant 10, data 11, bss 68, persistent 0 stack 0
   805 ;;Auto spaces:   Size  Autos    Used
   806 ;; COMMON          14     14      14
   807 ;; BANK0           80     42      75
   808 ;; BANK1           80      3      51
   809 ;; BANK3           96      0       0
   810 ;; BANK2           96      0       0
   811                           
   812 ;;
   813 ;; Pointer list with targets:
   814                           
   815 ;; ?___awmod	int  size(1) Largest target is 0
   816 ;;
   817 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
   818 ;;
   819 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   820 ;;
   821 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   822 ;;
   823 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   824 ;;
   825 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   826 ;;		 -> STR_11(CODE[15]), 
   827 ;;
   828 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   829 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
   830 ;;
   831 ;; ?_sprintf	int  size(1) Largest target is 0
   832 ;;
   833 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   834 ;;		 -> ?_sprintf(BANK0[2]), 
   835 ;;
   836 ;; S6353$_cp	PTR const unsigned char  size(1) Largest target is 0
   837 ;;
   838 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   839 ;;
   840 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
   841 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
   842 ;;		 -> STR_6(CODE[4]), 
   843 ;;
   844 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 7
   845 ;;		 -> STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 
   846 ;;		 -> STR_1(CODE[7]), 
   847 ;;
   848 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
   849 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
   850 ;;		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[7]), STR_4(CODE[7]), 
   851 ;;		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 
   852 ;;
   853                           
   854                           
   855 ;;
   856 ;; Critical Paths under _main in COMMON
   857 ;;
   858 ;;   None.
   859 ;;
   860 ;; Critical Paths under _isr1 in COMMON
   861 ;;
   862 ;;   _isr1->___lwmod
   863 ;;   _readAvgDistance->_readDistance
   864 ;;   _readDistance->_adc_read_channel
   865 ;;   _lcd_write_string->___awmod
   866 ;;   _lcd_set_cursor->i1_lcd_write_control
   867 ;;   _sprintf->___lwmod
   868 ;;   _ADCconvert->___lwmod
   869 ;;   _ReadButtons->_Debounce
   870 ;;   _adc_read_channel->_adc_read
   871 ;;   ___lwmod->___lwdiv
   872 ;;
   873 ;; Critical Paths under _main in BANK0
   874 ;;
   875 ;;   None.
   876 ;;
   877 ;; Critical Paths under _isr1 in BANK0
   878 ;;
   879 ;;   _isr1->_UpdateDisplay
   880 ;;   _UpdateDisplay->_sprintf
   881 ;;
   882 ;; Critical Paths under _main in BANK1
   883 ;;
   884 ;;   _lcd_init->_lcd_write_control
   885 ;;
   886 ;; Critical Paths under _isr1 in BANK1
   887 ;;
   888 ;;   None.
   889 ;;
   890 ;; Critical Paths under _main in BANK3
   891 ;;
   892 ;;   None.
   893 ;;
   894 ;; Critical Paths under _isr1 in BANK3
   895 ;;
   896 ;;   None.
   897 ;;
   898 ;; Critical Paths under _main in BANK2
   899 ;;
   900 ;;   None.
   901 ;;
   902 ;; Critical Paths under _isr1 in BANK2
   903 ;;
   904 ;;   None.
   905                           
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   908 ;;
   909                           
   910 ;;
   911 ;;Call Graph Tables:
   912 ;;
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (0) _main                                                 0     0      0      44
   917 ;;                               _init
   918 ;;                               _Menu
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (1) _init                                                 0     0      0      22
   921 ;;                           _init_adc
   922 ;;                           _lcd_init
   923 ;;                           _ser_init
   924 ;; ---------------------------------------------------------------------------------
   925 ;; (2) _lcd_init                                             0     0      0      22
   926 ;;                  _lcd_write_control
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (3) _lcd_write_control                                    3     3      0      22
   929 ;;                                              0 BANK1      3     3      0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (2) _init_adc                                             1     1      0       0
   932 ;;                                              0 BANK1      1     1      0
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (1) _Menu                                                 1     1      0      22
   935 ;;                                              0 BANK1      1     1      0
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (2) _ser_init                                             1     1      0       0
   938 ;;                                              0 BANK1      1     1      0
   939 ;; ---------------------------------------------------------------------------------
   940 ;; Estimated maximum stack depth 3
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (4) _isr1                                                 5     5      0    2004
   945 ;;                                             37 BANK0      5     5      0
   946 ;;                            ___lwmod
   947 ;;                    _readAvgDistance
   948 ;;                      _UpdateDisplay
   949 ;;                        _ReadButtons
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (5) _UpdateDisplay                                       20    20      0    1385
   952 ;;                                             17 BANK0     20    20      0
   953 ;;                i1_lcd_write_control
   954 ;;                            _sprintf
   955 ;;                     _lcd_set_cursor
   956 ;;                   _lcd_write_string
   957 ;;                            ___awmod
   958 ;; ---------------------------------------------------------------------------------
   959 ;; (5) _readAvgDistance                                      4     4      0     460
   960 ;;                                              0 BANK0      4     4      0
   961 ;;                       _readDistance
   962 ;;                            ___lwdiv
   963 ;;                         _ADCconvert
   964 ;; ---------------------------------------------------------------------------------
   965 ;; (6) _readDistance                                         6     4      2      69
   966 ;;                                              8 COMMON     6     4      2
   967 ;;                   _adc_read_channel
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (6) _lcd_write_string                                     2     0      2      67
   970 ;;                                              7 COMMON     2     0      2
   971 ;;                     _lcd_write_data
   972 ;;                            ___awmod (ARG)
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (6) _lcd_set_cursor                                       1     1      0      96
   975 ;;                                              3 COMMON     1     1      0
   976 ;;                i1_lcd_write_control
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (7) i1_lcd_write_control                                  3     3      0      73
   979 ;;                                              0 COMMON     3     3      0
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (6) _sprintf                                             17    12      5     798
   982 ;;                                              0 BANK0     17    12      5
   983 ;;                            ___lwdiv
   984 ;;                            ___lwmod
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (6) _ADCconvert                                           0     0      0     159
   987 ;;                            ___lwmod
   988 ;; ---------------------------------------------------------------------------------
   989 ;; (5) _ReadButtons                                          0     0      0       0
   990 ;;                           _Debounce
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (7) _lcd_write_data                                       3     3      0      22
   993 ;;                                              0 COMMON     3     3      0
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (7) _adc_read_channel                                     2     2      0      46
   996 ;;                                              6 COMMON     2     2      0
   997 ;;                           _adc_read
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (6) ___awmod                                              7     3      4     296
  1000 ;;                                              0 COMMON     7     3      4
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (7) ___lwmod                                              6     2      4     159
  1003 ;;                                              8 COMMON     6     2      4
  1004 ;;                            ___lwdiv (ARG)
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (7) ___lwdiv                                              8     4      4     162
  1007 ;;                                              0 COMMON     8     4      4
  1008 ;; ---------------------------------------------------------------------------------
  1009 ;; (6) _Debounce                                             1     1      0       0
  1010 ;;                                              0 COMMON     1     1      0
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (8) _adc_read                                             6     4      2      24
  1013 ;;                                              0 COMMON     6     4      2
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; Estimated maximum stack depth 8
  1016 ;; ---------------------------------------------------------------------------------
  1017                           
  1018 ;; Call Graph Graphs:
  1019                           
  1020 ;; _main (ROOT)
  1021 ;;   _init
  1022 ;;     _init_adc
  1023 ;;     _lcd_init
  1024 ;;       _lcd_write_control
  1025 ;;     _ser_init
  1026 ;;   _Menu
  1027 ;;
  1028 ;; _isr1 (ROOT)
  1029 ;;   ___lwmod
  1030 ;;     ___lwdiv (ARG)
  1031 ;;   _readAvgDistance
  1032 ;;     _readDistance
  1033 ;;       _adc_read_channel
  1034 ;;         _adc_read
  1035 ;;     ___lwdiv
  1036 ;;     _ADCconvert
  1037 ;;       ___lwmod
  1038 ;;         ___lwdiv (ARG)
  1039 ;;   _UpdateDisplay
  1040 ;;     i1_lcd_write_control
  1041 ;;     _sprintf
  1042 ;;       ___lwdiv
  1043 ;;       ___lwmod
  1044 ;;         ___lwdiv (ARG)
  1045 ;;     _lcd_set_cursor
  1046 ;;       i1_lcd_write_control
  1047 ;;     _lcd_write_string
  1048 ;;       _lcd_write_data
  1049 ;;       ___awmod (ARG)
  1050 ;;     ___awmod
  1051 ;;   _ReadButtons
  1052 ;;     _Debounce
  1053 ;;
  1054                           
  1055 ;; Address spaces:
  1056                           
  1057 ;;Name               Size   Autos  Total    Cost      Usage
  1058 ;;BANK3               60      0       0       9        0.0%
  1059 ;;BITBANK3            60      0       0       8        0.0%
  1060 ;;SFR3                 0      0       0       4        0.0%
  1061 ;;BITSFR3              0      0       0       4        0.0%
  1062 ;;BANK2               60      0       0      11        0.0%
  1063 ;;BITBANK2            60      0       0      10        0.0%
  1064 ;;SFR2                 0      0       0       5        0.0%
  1065 ;;BITSFR2              0      0       0       5        0.0%
  1066 ;;SFR1                 0      0       0       2        0.0%
  1067 ;;BITSFR1              0      0       0       2        0.0%
  1068 ;;BANK1               50      3      33       7       63.8%
  1069 ;;BITBANK1            50      0       0       6        0.0%
  1070 ;;CODE                 0      0       0       0        0.0%
  1071 ;;DATA                 0      0      99      12        0.0%
  1072 ;;ABS                  0      0      8C       3        0.0%
  1073 ;;NULL                 0      0       0       0        0.0%
  1074 ;;STACK                0      0       D       2        0.0%
  1075 ;;BANK0               50     2A      4B       5       93.8%
  1076 ;;BITBANK0            50      0       2       4        2.5%
  1077 ;;SFR0                 0      0       0       1        0.0%
  1078 ;;BITSFR0              0      0       0       1        0.0%
  1079 ;;COMMON               E      E       E       1      100.0%
  1080 ;;BITCOMMON            E      0       0       0        0.0%
  1081 ;;EEDATA             100      0       0       0        0.0%
  1082                           
  1083                           	global	_main
  1084                           psect	maintext,global,class=CODE,delta=2
  1085                           global __pmaintext
  1086  06C0                     __pmaintext:
  1087                           
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 140 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;		None               void
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 17F/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0
  1107 ;;      Totals:         0       0       0       0       0
  1108 ;;Total ram usage:        0 bytes
  1109 ;; Hardware stack levels required when called:    8
  1110 ;; This function calls:
  1111 ;;		_init
  1112 ;;		_Menu
  1113 ;; This function is called by:
  1114 ;;		Startup code after reset
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           psect	maintext
  1118                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1119                           	line	140
  1120                           	global	__size_of_main
  1121  005D                     	__size_of_main	equ	__end_of_main-_main
  1122                           	
  1123  06C0                     _main:	
  1124                           	opt	stack 0
  1125                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1126                           	line	145
  1127                           	
  1128  06C0                     l8827:	
  1129                           ;Main.c: 145: init();
  1130  06C0  120A  158A  26C3   	fcall	_init
              120A  118A         
  1131  06C5  2F05               	goto	l8861
  1132                           	line	151
  1133                           ;Main.c: 151: while(1)
  1134                           	
  1135  06C6                     l2172:	
  1136                           	line	154
  1137                           ;Main.c: 152: {
  1138                           ;Main.c: 154: switch (buttonPressed)
  1139  06C6  2F05               	goto	l8861
  1140                           	line	156
  1141                           ;Main.c: 155: {
  1142                           ;Main.c: 156: case 1:
  1143                           	
  1144  06C7                     l2174:	
  1145                           	line	157
  1146                           	
  1147  06C7                     l8829:	
  1148                           ;Main.c: 157: Menu(1);
  1149  06C7  3001               	movlw	(01h)
  1150  06C8  120A  118A  2660   	fcall	_Menu
              120A  118A         
  1151                           	line	158
  1152                           	
  1153  06CD                     l8831:	
  1154                           ;Main.c: 158: RB1 ^= 0x01;
  1155  06CD  1283               	bcf	status, 5	;RP0=0, select bank0
  1156  06CE  1303               	bcf	status, 6	;RP1=0, select bank0
  1157  06CF  3002               	movlw	1<<((49)&7)
  1158  06D0  0686               	xorwf	((49)/8),f
  1159                           	line	159
  1160                           	
  1161  06D1                     l8833:	
  1162                           ;Main.c: 159: buttonPressed = 0;
  1163  06D1  01D7               	clrf	(_buttonPressed)	;volatile
  1164                           	line	161
  1165                           ;Main.c: 161: break;
  1166  06D2  2F05               	goto	l8861
  1167                           	line	162
  1168                           ;Main.c: 162: case 2:
  1169                           	
  1170  06D3                     l2176:	
  1171                           	line	163
  1172                           	
  1173  06D3                     l8835:	
  1174                           ;Main.c: 163: Menu(2);
  1175  06D3  3002               	movlw	(02h)
  1176  06D4  120A  118A  2660   	fcall	_Menu
              120A  118A         
  1177                           	line	164
  1178                           	
  1179  06D9                     l8837:	
  1180                           ;Main.c: 164: RB1 ^= 0x01;
  1181  06D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1182  06DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1183  06DB  3002               	movlw	1<<((49)&7)
  1184  06DC  0686               	xorwf	((49)/8),f
  1185                           	line	165
  1186                           	
  1187  06DD                     l8839:	
  1188                           ;Main.c: 165: buttonPressed = 0;
  1189  06DD  01D7               	clrf	(_buttonPressed)	;volatile
  1190                           	line	167
  1191                           ;Main.c: 167: break;
  1192  06DE  2F05               	goto	l8861
  1193                           	line	168
  1194                           ;Main.c: 168: case 3:
  1195                           	
  1196  06DF                     l2177:	
  1197                           	line	169
  1198                           	
  1199  06DF                     l8841:	
  1200                           ;Main.c: 169: Menu(3);
  1201  06DF  3003               	movlw	(03h)
  1202  06E0  120A  118A  2660   	fcall	_Menu
              120A  118A         
  1203                           	line	170
  1204                           	
  1205  06E5                     l8843:	
  1206                           ;Main.c: 170: RB1 ^= 0x01;
  1207  06E5  1283               	bcf	status, 5	;RP0=0, select bank0
  1208  06E6  1303               	bcf	status, 6	;RP1=0, select bank0
  1209  06E7  3002               	movlw	1<<((49)&7)
  1210  06E8  0686               	xorwf	((49)/8),f
  1211                           	line	171
  1212                           	
  1213  06E9                     l8845:	
  1214                           ;Main.c: 171: buttonPressed = 0;
  1215  06E9  01D7               	clrf	(_buttonPressed)	;volatile
  1216                           	line	173
  1217                           ;Main.c: 173: break;
  1218  06EA  2F05               	goto	l8861
  1219                           	line	174
  1220                           ;Main.c: 174: case 4:
  1221                           	
  1222  06EB                     l2178:	
  1223                           	line	175
  1224                           	
  1225  06EB                     l8847:	
  1226                           ;Main.c: 175: Menu(4);
  1227  06EB  3004               	movlw	(04h)
  1228  06EC  120A  118A  2660   	fcall	_Menu
              120A  118A         
  1229                           	line	176
  1230                           	
  1231  06F1                     l8849:	
  1232                           ;Main.c: 176: RB1 ^= 0x01;
  1233  06F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1234  06F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1235  06F3  3002               	movlw	1<<((49)&7)
  1236  06F4  0686               	xorwf	((49)/8),f
  1237                           	line	177
  1238                           	
  1239  06F5                     l8851:	
  1240                           ;Main.c: 177: buttonPressed = 0;
  1241  06F5  01D7               	clrf	(_buttonPressed)	;volatile
  1242                           	line	179
  1243                           ;Main.c: 179: break;
  1244  06F6  2F05               	goto	l8861
  1245                           	line	180
  1246                           ;Main.c: 180: case 5:
  1247                           	
  1248  06F7                     l2179:	
  1249                           	line	181
  1250                           	
  1251  06F7                     l8853:	
  1252                           ;Main.c: 181: Menu(5);
  1253  06F7  3005               	movlw	(05h)
  1254  06F8  120A  118A  2660   	fcall	_Menu
              120A  118A         
  1255                           	line	182
  1256                           	
  1257  06FD                     l8855:	
  1258                           ;Main.c: 182: RB1 ^= 0x01;
  1259  06FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1260  06FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1261  06FF  3002               	movlw	1<<((49)&7)
  1262  0700  0686               	xorwf	((49)/8),f
  1263                           	line	183
  1264                           	
  1265  0701                     l8857:	
  1266                           ;Main.c: 183: buttonPressed = 0;
  1267  0701  01D7               	clrf	(_buttonPressed)	;volatile
  1268                           	line	185
  1269                           ;Main.c: 185: break;
  1270  0702  2F05               	goto	l8861
  1271                           	line	186
  1272                           ;Main.c: 186: default:
  1273                           	
  1274  0703                     l2180:	
  1275                           	line	188
  1276                           ;Main.c: 188: break;
  1277  0703  2F05               	goto	l8861
  1278                           	line	189
  1279                           	
  1280  0704                     l8859:	
  1281                           ;Main.c: 189: }
  1282  0704  2F05               	goto	l8861
  1283                           	line	154
  1284                           	
  1285  0705                     l2173:	
  1286                           	
  1287  0705                     l8861:	
  1288  0705  1283               	bcf	status, 5	;RP0=0, select bank0
  1289  0706  1303               	bcf	status, 6	;RP1=0, select bank0
  1290  0707  0857               	movf	(_buttonPressed),w	;volatile
  1291                           	; Switch size 1, requested type "space"
  1292                           ; Number of cases is 5, Range of values is 1 to 5
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte           16     9 (average)
  1296                           ; direct_byte           26    11 (fixed)
  1297                           ; jumptable            263     9 (fixed)
  1298                           ;	Chosen strategy is simple_byte
  1299                           
  1300                           	opt asmopt_off
  1301  0708  3A01               	xorlw	1^0	; case 1
  1302  0709  1903               	skipnz
  1303  070A  2EC7               	goto	l8829
  1304  070B  3A03               	xorlw	2^1	; case 2
  1305  070C  1903               	skipnz
  1306  070D  2ED3               	goto	l8835
  1307  070E  3A01               	xorlw	3^2	; case 3
  1308  070F  1903               	skipnz
  1309  0710  2EDF               	goto	l8841
  1310  0711  3A07               	xorlw	4^3	; case 4
  1311  0712  1903               	skipnz
  1312  0713  2EEB               	goto	l8847
  1313  0714  3A01               	xorlw	5^4	; case 5
  1314  0715  1903               	skipnz
  1315  0716  2EF7               	goto	l8853
  1316  0717  2F05               	goto	l8861
  1317                           	opt asmopt_on
  1318                           
  1319                           	line	189
  1320                           	
  1321  0718                     l2175:	
  1322  0718  2F05               	goto	l8861
  1323                           	line	255
  1324                           	
  1325  0719                     l2181:	
  1326                           	line	151
  1327  0719  2F05               	goto	l8861
  1328                           	
  1329  071A                     l2182:	
  1330                           	line	256
  1331                           	
  1332  071A                     l2183:	
  1333                           	global	start
  1334  071A  120A  118A  2812   	ljmp	start
  1335                           	opt stack 0
  1336                           GLOBAL	__end_of_main
  1337  071D                     	__end_of_main:
  1338 ;; =============== function _main ends ============
  1339                           
  1340                           	signat	_main,88
  1341                           	global	_init
  1342                           psect	text579,local,class=CODE,delta=2
  1343                           global __ptext579
  1344  0EC3                     __ptext579:
  1345                           
  1346 ;; *************** function _init *****************
  1347 ;; Defined at:
  1348 ;;		line 111 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;		None               void
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    7
  1369 ;; This function calls:
  1370 ;;		_init_adc
  1371 ;;		_lcd_init
  1372 ;;		_ser_init
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           psect	text579
  1378                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1379                           	line	111
  1380                           	global	__size_of_init
  1381  0018                     	__size_of_init	equ	__end_of_init-_init
  1382                           	
  1383  0EC3                     _init:	
  1384                           	opt	stack 0
  1385                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1386                           	line	112
  1387                           	
  1388  0EC3                     l8817:	
  1389                           ;Main.c: 112: init_adc();
  1390  0EC3  120A  158A  26AF   	fcall	_init_adc
              120A  158A         
  1391                           	line	113
  1392                           ;Main.c: 113: lcd_init();
  1393  0EC8  120A  158A  2794   	fcall	_lcd_init
              120A  158A         
  1394                           	line	114
  1395                           ;Main.c: 114: ser_init();
  1396  0ECD  120A  158A  2742   	fcall	_ser_init
              120A  158A         
  1397                           	line	116
  1398                           	
  1399  0ED2                     l8819:	
  1400                           ;Main.c: 116: TRISB = 0b11111100;
  1401  0ED2  30FC               	movlw	(0FCh)
  1402  0ED3  1683               	bsf	status, 5	;RP0=1, select bank1
  1403  0ED4  1303               	bcf	status, 6	;RP1=0, select bank1
  1404  0ED5  0086               	movwf	(134)^080h	;volatile
  1405                           	line	122
  1406                           	
  1407  0ED6                     l8821:	
  1408                           ;Main.c: 122: OPTION_REG = 0b00000100;
  1409  0ED6  3004               	movlw	(04h)
  1410  0ED7  0081               	movwf	(129)^080h	;volatile
  1411                           	line	125
  1412                           	
  1413  0ED8                     l8823:	
  1414                           ;Main.c: 125: TMR0IE = 1;
  1415  0ED8  168B               	bsf	(93/8),(93)&7
  1416                           	line	128
  1417                           	
  1418  0ED9                     l8825:	
  1419                           ;Main.c: 128: (GIE = 1);
  1420  0ED9  178B               	bsf	(95/8),(95)&7
  1421                           	line	129
  1422                           	
  1423  0EDA                     l2169:	
  1424  0EDA  0008               	return
  1425                           	opt stack 0
  1426                           GLOBAL	__end_of_init
  1427  0EDB                     	__end_of_init:
  1428 ;; =============== function _init ends ============
  1429                           
  1430                           	signat	_init,88
  1431                           	global	_lcd_init
  1432                           psect	text580,local,class=CODE,delta=2
  1433                           global __ptext580
  1434  0F94                     __ptext580:
  1435                           
  1436 ;; *************** function _lcd_init *****************
  1437 ;; Defined at:
  1438 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    6
  1459 ;; This function calls:
  1460 ;;		_lcd_write_control
  1461 ;; This function is called by:
  1462 ;;		_init
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           psect	text580
  1466                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1467                           	line	101
  1468                           	global	__size_of_lcd_init
  1469  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1470                           	
  1471  0F94                     _lcd_init:	
  1472                           	opt	stack 0
  1473                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1474                           	line	105
  1475                           	
  1476  0F94                     l8797:	
  1477                           ;lcd.c: 105: ADCON1 = 0b00000010;
  1478  0F94  3002               	movlw	(02h)
  1479  0F95  1683               	bsf	status, 5	;RP0=1, select bank1
  1480  0F96  1303               	bcf	status, 6	;RP1=0, select bank1
  1481  0F97  009F               	movwf	(159)^080h	;volatile
  1482                           	line	108
  1483                           	
  1484  0F98                     l8799:	
  1485                           ;lcd.c: 108: PORTD = 0;
  1486  0F98  1283               	bcf	status, 5	;RP0=0, select bank0
  1487  0F99  1303               	bcf	status, 6	;RP1=0, select bank0
  1488  0F9A  0188               	clrf	(8)	;volatile
  1489                           	line	109
  1490                           	
  1491  0F9B                     l8801:	
  1492                           ;lcd.c: 109: PORTE = 0;
  1493  0F9B  0189               	clrf	(9)	;volatile
  1494                           	line	111
  1495                           	
  1496  0F9C                     l8803:	
  1497                           ;lcd.c: 111: TRISD = 0b00000000;
  1498  0F9C  1683               	bsf	status, 5	;RP0=1, select bank1
  1499  0F9D  1303               	bcf	status, 6	;RP1=0, select bank1
  1500  0F9E  0188               	clrf	(136)^080h	;volatile
  1501                           	line	112
  1502                           	
  1503  0F9F                     l8805:	
  1504                           ;lcd.c: 112: TRISE = 0b00000000;
  1505  0F9F  0189               	clrf	(137)^080h	;volatile
  1506                           	line	115
  1507                           	
  1508  0FA0                     l8807:	
  1509                           ;lcd.c: 115: lcd_write_control(0b00000001);
  1510  0FA0  3001               	movlw	(01h)
  1511  0FA1  120A  158A  26DB   	fcall	_lcd_write_control
              120A  158A         
  1512                           	line	116
  1513                           	
  1514  0FA6                     l8809:	
  1515                           ;lcd.c: 116: lcd_write_control(0b00111000);
  1516  0FA6  3038               	movlw	(038h)
  1517  0FA7  120A  158A  26DB   	fcall	_lcd_write_control
              120A  158A         
  1518                           	line	117
  1519                           	
  1520  0FAC                     l8811:	
  1521                           ;lcd.c: 117: lcd_write_control(0b00001100);
  1522  0FAC  300C               	movlw	(0Ch)
  1523  0FAD  120A  158A  26DB   	fcall	_lcd_write_control
              120A  158A         
  1524                           	line	118
  1525                           	
  1526  0FB2                     l8813:	
  1527                           ;lcd.c: 118: lcd_write_control(0b00000110);
  1528  0FB2  3006               	movlw	(06h)
  1529  0FB3  120A  158A  26DB   	fcall	_lcd_write_control
              120A  158A         
  1530                           	line	119
  1531                           	
  1532  0FB8                     l8815:	
  1533                           ;lcd.c: 119: lcd_write_control(0b00000010);
  1534  0FB8  3002               	movlw	(02h)
  1535  0FB9  120A  158A  26DB   	fcall	_lcd_write_control
              120A  158A         
  1536                           	line	121
  1537                           	
  1538  0FBE                     l1423:	
  1539  0FBE  0008               	return
  1540                           	opt stack 0
  1541                           GLOBAL	__end_of_lcd_init
  1542  0FBF                     	__end_of_lcd_init:
  1543 ;; =============== function _lcd_init ends ============
  1544                           
  1545                           	signat	_lcd_init,88
  1546                           	global	_lcd_write_control
  1547                           psect	text581,local,class=CODE,delta=2
  1548                           global __ptext581
  1549  0EDB                     __ptext581:
  1550                           
  1551 ;; *************** function _lcd_write_control *****************
  1552 ;; Defined at:
  1553 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  databyte        1    wreg     unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  databyte        1    2[BANK1 ] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;		None               void
  1560 ;; Registers used:
  1561 ;;		wreg
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         0       0       0       0       0
  1568 ;;      Locals:         0       0       1       0       0
  1569 ;;      Temps:          0       0       2       0       0
  1570 ;;      Totals:         0       0       3       0       0
  1571 ;;Total ram usage:        3 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    5
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_lcd_init
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           psect	text581
  1581                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1582                           	line	18
  1583                           	global	__size_of_lcd_write_control
  1584  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  1585                           	
  1586  0EDB                     _lcd_write_control:	
  1587                           	opt	stack 0
  1588                           ; Regs used in _lcd_write_control: [wreg]
  1589                           ;lcd_write_control@databyte stored from wreg
  1590  0EDB  1683               	bsf	status, 5	;RP0=1, select bank1
  1591  0EDC  1303               	bcf	status, 6	;RP1=0, select bank1
  1592  0EDD  00D2               	movwf	(lcd_write_control@databyte)^080h
  1593                           	line	19
  1594                           	
  1595  0EDE                     l8789:	
  1596                           ;lcd.c: 19: RE2 = 0;
  1597  0EDE  1283               	bcf	status, 5	;RP0=0, select bank0
  1598  0EDF  1303               	bcf	status, 6	;RP1=0, select bank0
  1599  0EE0  1109               	bcf	(74/8),(74)&7
  1600                           	line	20
  1601                           ;lcd.c: 20: RE1 = 0;
  1602  0EE1  1089               	bcf	(73/8),(73)&7
  1603                           	line	21
  1604                           ;lcd.c: 21: RE0 = 0;
  1605  0EE2  1009               	bcf	(72/8),(72)&7
  1606                           	line	22
  1607                           	
  1608  0EE3                     l8791:	
  1609                           ;lcd.c: 22: PORTD = databyte;
  1610  0EE3  1683               	bsf	status, 5	;RP0=1, select bank1
  1611  0EE4  1303               	bcf	status, 6	;RP1=0, select bank1
  1612  0EE5  0852               	movf	(lcd_write_control@databyte)^080h,w
  1613  0EE6  1283               	bcf	status, 5	;RP0=0, select bank0
  1614  0EE7  1303               	bcf	status, 6	;RP1=0, select bank0
  1615  0EE8  0088               	movwf	(8)	;volatile
  1616                           	line	23
  1617                           	
  1618  0EE9                     l8793:	
  1619                           ;lcd.c: 23: RE2 = 1;
  1620  0EE9  1509               	bsf	(74/8),(74)&7
  1621                           	line	24
  1622                           	
  1623  0EEA                     l8795:	
  1624                           ;lcd.c: 24: RE2 = 0;
  1625  0EEA  1109               	bcf	(74/8),(74)&7
  1626                           	line	25
  1627                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  1628                           	opt asmopt_off
  1629  0EEB  300D               movlw	13
  1630  0EEC  1683               	bsf	status, 5	;RP0=1, select bank1
  1631  0EED  1303               	bcf	status, 6	;RP1=0, select bank1
  1632  0EEE  00D1               movwf	((??_lcd_write_control+0)^080h+0+1),f
  1633  0EEF  30FB               	movlw	251
  1634  0EF0  00D0               movwf	((??_lcd_write_control+0)^080h+0),f
  1635  0EF1                     u4207:
  1636  0EF1  0BD0               	decfsz	((??_lcd_write_control+0)^080h+0),f
  1637  0EF2  2EF1               	goto	u4207
  1638  0EF3  0BD1               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  1639  0EF4  2EF1               	goto	u4207
  1640  0EF5  2EF6               	nop2
  1641                           opt asmopt_on
  1642                           
  1643                           	line	26
  1644                           	
  1645  0EF6                     l1393:	
  1646  0EF6  0008               	return
  1647                           	opt stack 0
  1648                           GLOBAL	__end_of_lcd_write_control
  1649  0EF7                     	__end_of_lcd_write_control:
  1650 ;; =============== function _lcd_write_control ends ============
  1651                           
  1652                           	signat	_lcd_write_control,4216
  1653                           	global	_init_adc
  1654                           psect	text582,local,class=CODE,delta=2
  1655                           global __ptext582
  1656  0EAF                     __ptext582:
  1657                           
  1658 ;; *************** function _init_adc *****************
  1659 ;; Defined at:
  1660 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0
  1676 ;;      Temps:          0       0       1       0       0
  1677 ;;      Totals:         0       0       1       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    5
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_init
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           psect	text582
  1688                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  1689                           	line	46
  1690                           	global	__size_of_init_adc
  1691  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  1692                           	
  1693  0EAF                     _init_adc:	
  1694                           	opt	stack 1
  1695                           ; Regs used in _init_adc: [wreg+status,2]
  1696                           	line	48
  1697                           	
  1698  0EAF                     l8779:	
  1699                           ;adc.c: 48: PORTA = 0;
  1700  0EAF  1283               	bcf	status, 5	;RP0=0, select bank0
  1701  0EB0  1303               	bcf	status, 6	;RP1=0, select bank0
  1702  0EB1  0185               	clrf	(5)	;volatile
  1703                           	line	49
  1704                           	
  1705  0EB2                     l8781:	
  1706                           ;adc.c: 49: TRISA = 0b00111111;
  1707  0EB2  303F               	movlw	(03Fh)
  1708  0EB3  1683               	bsf	status, 5	;RP0=1, select bank1
  1709  0EB4  1303               	bcf	status, 6	;RP1=0, select bank1
  1710  0EB5  0085               	movwf	(133)^080h	;volatile
  1711                           	line	52
  1712                           	
  1713  0EB6                     l8783:	
  1714                           ;adc.c: 52: ADCON0 = 0b10100001;
  1715  0EB6  30A1               	movlw	(0A1h)
  1716  0EB7  1283               	bcf	status, 5	;RP0=0, select bank0
  1717  0EB8  1303               	bcf	status, 6	;RP1=0, select bank0
  1718  0EB9  009F               	movwf	(31)	;volatile
  1719                           	line	53
  1720                           	
  1721  0EBA                     l8785:	
  1722                           ;adc.c: 53: ADCON1 = 0b0000010;
  1723  0EBA  3002               	movlw	(02h)
  1724  0EBB  1683               	bsf	status, 5	;RP0=1, select bank1
  1725  0EBC  1303               	bcf	status, 6	;RP1=0, select bank1
  1726  0EBD  009F               	movwf	(159)^080h	;volatile
  1727                           	line	55
  1728                           	
  1729  0EBE                     l8787:	
  1730                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  1731                           	opt asmopt_off
  1732  0EBE  3053               movlw	83
  1733  0EBF  00D0               movwf	(??_init_adc+0)^080h+0,f
  1734  0EC0                     u4217:
  1735  0EC0  0BD0               decfsz	(??_init_adc+0)^080h+0,f
  1736  0EC1  2EC0               	goto	u4217
  1737                           opt asmopt_on
  1738                           
  1739                           	line	57
  1740                           	
  1741  0EC2                     l700:	
  1742  0EC2  0008               	return
  1743                           	opt stack 0
  1744                           GLOBAL	__end_of_init_adc
  1745  0EC3                     	__end_of_init_adc:
  1746 ;; =============== function _init_adc ends ============
  1747                           
  1748                           	signat	_init_adc,88
  1749                           	global	_Menu
  1750                           psect	text583,local,class=CODE,delta=2
  1751                           global __ptext583
  1752  0660                     __ptext583:
  1753                           
  1754 ;; *************** function _Menu *****************
  1755 ;; Defined at:
  1756 ;;		line 182 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  input           1    wreg     unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  input           1    0[BANK1 ] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       0       1       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         0       0       1       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    5
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           psect	text583
  1784                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  1785                           	line	182
  1786                           	global	__size_of_Menu
  1787  0060                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  1788                           	
  1789  0660                     _Menu:	
  1790                           	opt	stack 2
  1791                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  1792                           ;Menu@input stored from wreg
  1793  0660  1683               	bsf	status, 5	;RP0=1, select bank1
  1794  0661  1303               	bcf	status, 6	;RP1=0, select bank1
  1795  0662  00D0               	movwf	(Menu@input)^080h
  1796                           	line	183
  1797                           	
  1798  0663                     l8349:	
  1799                           ;HMI.c: 183: switch (input)
  1800  0663  2EAC               	goto	l8367
  1801                           	line	185
  1802                           ;HMI.c: 184: {
  1803                           ;HMI.c: 185: case 1:
  1804                           	
  1805  0664                     l5122:	
  1806                           	line	187
  1807                           ;HMI.c: 187: break;
  1808  0664  2EBF               	goto	l5139
  1809                           	line	188
  1810                           ;HMI.c: 188: case 2:
  1811                           	
  1812  0665                     l5124:	
  1813                           	line	190
  1814                           ;HMI.c: 190: break;
  1815  0665  2EBF               	goto	l5139
  1816                           	line	191
  1817                           ;HMI.c: 191: case 3:
  1818                           	
  1819  0666                     l5125:	
  1820                           	line	192
  1821                           	
  1822  0666                     l8351:	
  1823                           ;HMI.c: 192: pos--;
  1824  0666  30FF               	movlw	low(-1)
  1825  0667  1283               	bcf	status, 5	;RP0=0, select bank0
  1826  0668  1303               	bcf	status, 6	;RP1=0, select bank0
  1827  0669  07D0               	addwf	(_pos),f
  1828  066A  1803               	skipnc
  1829  066B  0AD1               	incf	(_pos+1),f
  1830  066C  30FF               	movlw	high(-1)
  1831  066D  07D1               	addwf	(_pos+1),f
  1832                           	line	193
  1833                           	
  1834  066E                     l8353:	
  1835                           ;HMI.c: 193: if (pos < 0)
  1836  066E  1FD1               	btfss	(_pos+1),7
  1837  066F  2E71               	goto	u3361
  1838  0670  2E72               	goto	u3360
  1839  0671                     u3361:
  1840  0671  2EBF               	goto	l5139
  1841  0672                     u3360:
  1842                           	line	194
  1843                           	
  1844  0672                     l8355:	
  1845                           ;HMI.c: 194: pos = 5 - 1;
  1846  0672  3004               	movlw	low(04h)
  1847  0673  00D0               	movwf	(_pos)
  1848  0674  3000               	movlw	high(04h)
  1849  0675  00D1               	movwf	((_pos))+1
  1850  0676  2EBF               	goto	l5139
  1851                           	
  1852  0677                     l5126:	
  1853                           	line	196
  1854                           ;HMI.c: 196: break;
  1855  0677  2EBF               	goto	l5139
  1856                           	line	197
  1857                           ;HMI.c: 197: case 4:
  1858                           	
  1859  0678                     l5127:	
  1860                           	line	198
  1861                           	
  1862  0678                     l8357:	
  1863                           ;HMI.c: 198: pos++;
  1864  0678  3001               	movlw	low(01h)
  1865  0679  1283               	bcf	status, 5	;RP0=0, select bank0
  1866  067A  07D0               	addwf	(_pos),f
  1867  067B  1803               	skipnc
  1868  067C  0AD1               	incf	(_pos+1),f
  1869  067D  3000               	movlw	high(01h)
  1870  067E  07D1               	addwf	(_pos+1),f
  1871                           	line	199
  1872                           ;HMI.c: 199: if (pos == 5)
  1873  067F  3005               	movlw	05h
  1874  0680  0650               	xorwf	(_pos),w
  1875  0681  0451               	iorwf	(_pos+1),w
  1876  0682  1D03               	skipz
  1877  0683  2E85               	goto	u3371
  1878  0684  2E86               	goto	u3370
  1879  0685                     u3371:
  1880  0685  2EBF               	goto	l5139
  1881  0686                     u3370:
  1882                           	line	200
  1883                           	
  1884  0686                     l8359:	
  1885                           ;HMI.c: 200: pos = 0;
  1886  0686  01D0               	clrf	(_pos)
  1887  0687  01D1               	clrf	(_pos+1)
  1888  0688  2EBF               	goto	l5139
  1889                           	
  1890  0689                     l5128:	
  1891                           	line	202
  1892                           ;HMI.c: 202: break;
  1893  0689  2EBF               	goto	l5139
  1894                           	line	203
  1895                           ;HMI.c: 203: case 5:
  1896                           	
  1897  068A                     l5129:	
  1898                           	line	204
  1899                           ;HMI.c: 204: switch (pos)
  1900  068A  2E92               	goto	l8363
  1901                           	line	206
  1902                           ;HMI.c: 205: {
  1903                           ;HMI.c: 206: case 0:
  1904                           	
  1905  068B                     l5131:	
  1906                           	line	208
  1907                           ;HMI.c: 208: break;
  1908  068B  2EBF               	goto	l5139
  1909                           	line	209
  1910                           ;HMI.c: 209: case 1:
  1911                           	
  1912  068C                     l5133:	
  1913                           	line	211
  1914                           ;HMI.c: 211: break;
  1915  068C  2EBF               	goto	l5139
  1916                           	line	212
  1917                           ;HMI.c: 212: case 2:
  1918                           	
  1919  068D                     l5134:	
  1920                           	line	214
  1921                           ;HMI.c: 214: break;
  1922  068D  2EBF               	goto	l5139
  1923                           	line	215
  1924                           ;HMI.c: 215: case 3:
  1925                           	
  1926  068E                     l5135:	
  1927                           	line	217
  1928                           ;HMI.c: 217: break;
  1929  068E  2EBF               	goto	l5139
  1930                           	line	218
  1931                           ;HMI.c: 218: case 4:
  1932                           	
  1933  068F                     l5136:	
  1934                           	line	220
  1935                           ;HMI.c: 220: break;
  1936  068F  2EBF               	goto	l5139
  1937                           	line	221
  1938                           ;HMI.c: 221: default:
  1939                           	
  1940  0690                     l5137:	
  1941                           	line	222
  1942                           ;HMI.c: 222: break;
  1943  0690  2EBF               	goto	l5139
  1944                           	line	223
  1945                           	
  1946  0691                     l8361:	
  1947                           ;HMI.c: 223: }
  1948  0691  2EBF               	goto	l5139
  1949                           	line	204
  1950                           	
  1951  0692                     l5130:	
  1952                           	
  1953  0692                     l8363:	
  1954                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1955                           ; Switch size 1, requested type "space"
  1956                           ; Number of cases is 1, Range of values is 0 to 0
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte            4     3 (average)
  1960                           ; direct_byte           11     8 (fixed)
  1961                           ; jumptable            260     6 (fixed)
  1962                           ; rangetable             5     6 (fixed)
  1963                           ; spacedrange            8     9 (fixed)
  1964                           ; locatedrange           1     3 (fixed)
  1965                           ;	Chosen strategy is simple_byte
  1966                           
  1967  0692  1283               	bcf	status, 5	;RP0=0, select bank0
  1968  0693  0851               	movf (_pos+1),w
  1969                           	opt asmopt_off
  1970  0694  3A00               	xorlw	0^0	; case 0
  1971  0695  1903               	skipnz
  1972  0696  2E98               	goto	l8883
  1973  0697  2EBF               	goto	l5139
  1974                           	opt asmopt_on
  1975                           	
  1976  0698                     l8883:	
  1977                           ; Switch size 1, requested type "space"
  1978                           ; Number of cases is 5, Range of values is 0 to 4
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte           16     9 (average)
  1982                           ; direct_byte           23     8 (fixed)
  1983                           ; jumptable            260     6 (fixed)
  1984                           ; rangetable             9     6 (fixed)
  1985                           ; spacedrange           16     9 (fixed)
  1986                           ; locatedrange           5     3 (fixed)
  1987                           ;	Chosen strategy is simple_byte
  1988                           
  1989  0698  0850               	movf (_pos),w
  1990                           	opt asmopt_off
  1991  0699  3A00               	xorlw	0^0	; case 0
  1992  069A  1903               	skipnz
  1993  069B  2EBF               	goto	l5139
  1994  069C  3A01               	xorlw	1^0	; case 1
  1995  069D  1903               	skipnz
  1996  069E  2EBF               	goto	l5139
  1997  069F  3A03               	xorlw	2^1	; case 2
  1998  06A0  1903               	skipnz
  1999  06A1  2EBF               	goto	l5139
  2000  06A2  3A01               	xorlw	3^2	; case 3
  2001  06A3  1903               	skipnz
  2002  06A4  2EBF               	goto	l5139
  2003  06A5  3A07               	xorlw	4^3	; case 4
  2004  06A6  1903               	skipnz
  2005  06A7  2EBF               	goto	l5139
  2006  06A8  2EBF               	goto	l5139
  2007                           	opt asmopt_on
  2008                           
  2009                           	line	223
  2010                           	
  2011  06A9                     l5132:	
  2012                           	line	224
  2013                           ;HMI.c: 224: break;
  2014  06A9  2EBF               	goto	l5139
  2015                           	line	226
  2016                           ;HMI.c: 226: default:
  2017                           	
  2018  06AA                     l5138:	
  2019                           	line	228
  2020                           ;HMI.c: 228: break;
  2021  06AA  2EBF               	goto	l5139
  2022                           	line	229
  2023                           	
  2024  06AB                     l8365:	
  2025                           ;HMI.c: 229: }
  2026  06AB  2EBF               	goto	l5139
  2027                           	line	183
  2028                           	
  2029  06AC                     l5121:	
  2030                           	
  2031  06AC                     l8367:	
  2032  06AC  1683               	bsf	status, 5	;RP0=1, select bank1
  2033  06AD  1303               	bcf	status, 6	;RP1=0, select bank1
  2034  06AE  0850               	movf	(Menu@input)^080h,w
  2035                           	; Switch size 1, requested type "space"
  2036                           ; Number of cases is 5, Range of values is 1 to 5
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte           16     9 (average)
  2040                           ; direct_byte           26    11 (fixed)
  2041                           ; jumptable            263     9 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043                           
  2044                           	opt asmopt_off
  2045  06AF  3A01               	xorlw	1^0	; case 1
  2046  06B0  1903               	skipnz
  2047  06B1  2EBF               	goto	l5139
  2048  06B2  3A03               	xorlw	2^1	; case 2
  2049  06B3  1903               	skipnz
  2050  06B4  2EBF               	goto	l5139
  2051  06B5  3A01               	xorlw	3^2	; case 3
  2052  06B6  1903               	skipnz
  2053  06B7  2E66               	goto	l8351
  2054  06B8  3A07               	xorlw	4^3	; case 4
  2055  06B9  1903               	skipnz
  2056  06BA  2E78               	goto	l8357
  2057  06BB  3A01               	xorlw	5^4	; case 5
  2058  06BC  1903               	skipnz
  2059  06BD  2E92               	goto	l8363
  2060  06BE  2EBF               	goto	l5139
  2061                           	opt asmopt_on
  2062                           
  2063                           	line	229
  2064                           	
  2065  06BF                     l5123:	
  2066                           	line	230
  2067                           	
  2068  06BF                     l5139:	
  2069  06BF  0008               	return
  2070                           	opt stack 0
  2071                           GLOBAL	__end_of_Menu
  2072  06C0                     	__end_of_Menu:
  2073 ;; =============== function _Menu ends ============
  2074                           
  2075                           	signat	_Menu,4216
  2076                           	global	_ser_init
  2077                           psect	text584,local,class=CODE,delta=2
  2078                           global __ptext584
  2079  0F42                     __ptext584:
  2080                           
  2081 ;; *************** function _ser_init *****************
  2082 ;; Defined at:
  2083 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       0       1       0       0
  2100 ;;      Totals:         0       0       1       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    5
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_init
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           psect	text584
  2111                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  2112                           	line	113
  2113                           	global	__size_of_ser_init
  2114  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  2115                           	
  2116  0F42                     _ser_init:	
  2117                           	opt	stack 1
  2118                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  2119                           	line	114
  2120                           	
  2121  0F42                     l8323:	
  2122                           ;ser.c: 114: TRISC |= 0b10000000;
  2123  0F42  1683               	bsf	status, 5	;RP0=1, select bank1
  2124  0F43  1303               	bcf	status, 6	;RP1=0, select bank1
  2125  0F44  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  2126                           	line	115
  2127                           	
  2128  0F45                     l8325:	
  2129                           ;ser.c: 115: TRISC &= 0b10111111;
  2130  0F45  30BF               	movlw	(0BFh)
  2131  0F46  00D0               	movwf	(??_ser_init+0)^080h+0
  2132  0F47  0850               	movf	(??_ser_init+0)^080h+0,w
  2133  0F48  0587               	andwf	(135)^080h,f	;volatile
  2134                           	line	116
  2135                           	
  2136  0F49                     l8327:	
  2137                           ;ser.c: 116: BRGH=1;
  2138  0F49  1518               	bsf	(1218/8)^080h,(1218)&7
  2139                           	line	118
  2140                           	
  2141  0F4A                     l8329:	
  2142                           ;ser.c: 118: SPBRG=20;
  2143  0F4A  3014               	movlw	(014h)
  2144  0F4B  0099               	movwf	(153)^080h	;volatile
  2145                           	line	121
  2146                           	
  2147  0F4C                     l8331:	
  2148                           ;ser.c: 121: TX9=0;
  2149  0F4C  1318               	bcf	(1222/8)^080h,(1222)&7
  2150                           	line	122
  2151                           	
  2152  0F4D                     l8333:	
  2153                           ;ser.c: 122: RX9=0;
  2154  0F4D  1283               	bcf	status, 5	;RP0=0, select bank0
  2155  0F4E  1303               	bcf	status, 6	;RP1=0, select bank0
  2156  0F4F  1318               	bcf	(198/8),(198)&7
  2157                           	line	124
  2158                           	
  2159  0F50                     l8335:	
  2160                           ;ser.c: 124: SYNC=0;
  2161  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  2162  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  2163  0F52  1218               	bcf	(1220/8)^080h,(1220)&7
  2164                           	line	125
  2165                           	
  2166  0F53                     l8337:	
  2167                           ;ser.c: 125: SPEN=1;
  2168  0F53  1283               	bcf	status, 5	;RP0=0, select bank0
  2169  0F54  1303               	bcf	status, 6	;RP1=0, select bank0
  2170  0F55  1798               	bsf	(199/8),(199)&7
  2171                           	line	126
  2172                           	
  2173  0F56                     l8339:	
  2174                           ;ser.c: 126: CREN=1;
  2175  0F56  1618               	bsf	(196/8),(196)&7
  2176                           	line	127
  2177                           	
  2178  0F57                     l8341:	
  2179                           ;ser.c: 127: TXIE=0;
  2180  0F57  1683               	bsf	status, 5	;RP0=1, select bank1
  2181  0F58  1303               	bcf	status, 6	;RP1=0, select bank1
  2182  0F59  120C               	bcf	(1124/8)^080h,(1124)&7
  2183                           	line	128
  2184                           	
  2185  0F5A                     l8343:	
  2186                           ;ser.c: 128: RCIE=1;
  2187  0F5A  168C               	bsf	(1125/8)^080h,(1125)&7
  2188                           	line	129
  2189                           	
  2190  0F5B                     l8345:	
  2191                           ;ser.c: 129: TXEN=1;
  2192  0F5B  1698               	bsf	(1221/8)^080h,(1221)&7
  2193                           	line	132
  2194                           	
  2195  0F5C                     l8347:	
  2196                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  2197  0F5C  3000               	movlw	(0)
  2198  0F5D  1283               	bcf	status, 5	;RP0=0, select bank0
  2199  0F5E  1303               	bcf	status, 6	;RP1=0, select bank0
  2200  0F5F  00DD               	movwf	(_txoptr)	;volatile
  2201  0F60  00DC               	movwf	(_txiptr)	;volatile
  2202  0F61  00DA               	movwf	(_rxoptr)	;volatile
  2203  0F62  1683               	bsf	status, 5	;RP0=1, select bank1
  2204  0F63  1303               	bcf	status, 6	;RP1=0, select bank1
  2205  0F64  00D0               	movwf	(??_ser_init+0)^080h+0
  2206  0F65  0850               	movf	(??_ser_init+0)^080h+0,w
  2207  0F66  1283               	bcf	status, 5	;RP0=0, select bank0
  2208  0F67  1303               	bcf	status, 6	;RP1=0, select bank0
  2209  0F68  00D9               	movwf	(_rxiptr)	;volatile
  2210                           	line	133
  2211                           	
  2212  0F69                     l4362:	
  2213  0F69  0008               	return
  2214                           	opt stack 0
  2215                           GLOBAL	__end_of_ser_init
  2216  0F6A                     	__end_of_ser_init:
  2217 ;; =============== function _ser_init ends ============
  2218                           
  2219                           	signat	_ser_init,88
  2220                           	global	_isr1
  2221                           psect	text585,local,class=CODE,delta=2
  2222                           global __ptext585
  2223  0337                     __ptext585:
  2224                           
  2225 ;; *************** function _isr1 *****************
  2226 ;; Defined at:
  2227 ;;		line 75 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;		None               void
  2234 ;; Registers used:
  2235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0
  2243 ;;      Temps:          0       5       0       0       0
  2244 ;;      Totals:         0       5       0       0       0
  2245 ;;Total ram usage:        5 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    4
  2248 ;; This function calls:
  2249 ;;		___lwmod
  2250 ;;		_readAvgDistance
  2251 ;;		_UpdateDisplay
  2252 ;;		_ReadButtons
  2253 ;; This function is called by:
  2254 ;;		Interrupt level 1
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           psect	text585
  2258                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2259                           	line	75
  2260                           	global	__size_of_isr1
  2261  00E8                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  2262                           	
  2263  0337                     _isr1:	
  2264                           	opt	stack 0
  2265                           ; Regs used in _isr1: [allreg]
  2266                           psect	intentry,class=CODE,delta=2
  2267                           global __pintentry
  2268  0004                     __pintentry:
  2269                           global interrupt_function
  2270  0004                     interrupt_function:
  2271                           	global saved_w
  2272  007E                     	saved_w	set	btemp+0
  2273  0004  00FE               	movwf	saved_w
  2274  0005  0E03               	swapf	status,w
  2275  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2276  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2277  0008  00C6               	movwf	(??_isr1+1)
  2278  0009  0804               	movf	fsr0,w
  2279  000A  00C7               	movwf	(??_isr1+2)
  2280  000B  080A               	movf	pclath,w
  2281  000C  00C8               	movwf	(??_isr1+3)
  2282  000D  087F               	movf	btemp+1,w
  2283  000E  00C9               	movwf	(??_isr1+4)
  2284  000F  120A  118A  2B37   	ljmp	_isr1
  2285                           psect	text585
  2286                           	line	77
  2287                           	
  2288  0337                     i1l8189:	
  2289                           ;Main.c: 77: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  2290  0337  1E8C               	btfss	(101/8),(101)&7
  2291  0338  2B3A               	goto	u316_21
  2292  0339  2B3B               	goto	u316_20
  2293  033A                     u316_21:
  2294  033A  2B55               	goto	i1l8199
  2295  033B                     u316_20:
  2296                           	
  2297  033B                     i1l8191:	
  2298  033B  081A               	movf	(26),w	;volatile
  2299  033C  00C5               	movwf	(??_isr1+0)+0
  2300  033D  0859               	movf	(_rxiptr),w
  2301  033E  3EB0               	addlw	_rxfifo&0ffh
  2302  033F  0084               	movwf	fsr0
  2303  0340  0845               	movf	(??_isr1+0)+0,w
  2304  0341  1383               	bcf	status, 7	;select IRP bank1
  2305  0342  0080               	movwf	indf
  2306                           	
  2307  0343                     i1l8193:	
  2308  0343  0859               	movf	(_rxiptr),w	;volatile
  2309  0344  3E01               	addlw	01h
  2310  0345  390F               	andlw	0Fh
  2311  0346  00C5               	movwf	(??_isr1+0)+0
  2312  0347  0845               	movf	(??_isr1+0)+0,w
  2313  0348  00DB               	movwf	(_ser_tmp)
  2314                           	
  2315  0349                     i1l8195:	
  2316  0349  085B               	movf	(_ser_tmp),w
  2317  034A  065A               	xorwf	(_rxoptr),w	;volatile
  2318  034B  1903               	skipnz
  2319  034C  2B4E               	goto	u317_21
  2320  034D  2B4F               	goto	u317_20
  2321  034E                     u317_21:
  2322  034E  2B55               	goto	i1l8199
  2323  034F                     u317_20:
  2324                           	
  2325  034F                     i1l8197:	
  2326  034F  085B               	movf	(_ser_tmp),w
  2327  0350  00C5               	movwf	(??_isr1+0)+0
  2328  0351  0845               	movf	(??_isr1+0)+0,w
  2329  0352  00D9               	movwf	(_rxiptr)	;volatile
  2330  0353  2B55               	goto	i1l8199
  2331                           	
  2332  0354                     i1l2157:	
  2333  0354  2B55               	goto	i1l8199
  2334                           	
  2335  0355                     i1l2156:	
  2336                           	
  2337  0355                     i1l8199:	
  2338  0355  1E0C               	btfss	(100/8),(100)&7
  2339  0356  2B58               	goto	u318_21
  2340  0357  2B59               	goto	u318_20
  2341  0358                     u318_21:
  2342  0358  2B79               	goto	i1l2158
  2343  0359                     u318_20:
  2344                           	
  2345  0359                     i1l8201:	
  2346  0359  1683               	bsf	status, 5	;RP0=1, select bank1
  2347  035A  1303               	bcf	status, 6	;RP1=0, select bank1
  2348  035B  1E0C               	btfss	(1124/8)^080h,(1124)&7
  2349  035C  2B5E               	goto	u319_21
  2350  035D  2B5F               	goto	u319_20
  2351  035E                     u319_21:
  2352  035E  2B79               	goto	i1l2158
  2353  035F                     u319_20:
  2354                           	
  2355  035F                     i1l8203:	
  2356  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  2357  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  2358  0361  085D               	movf	(_txoptr),w
  2359  0362  3EC0               	addlw	_txfifo&0ffh
  2360  0363  0084               	movwf	fsr0
  2361  0364  1383               	bcf	status, 7	;select IRP bank1
  2362  0365  0800               	movf	indf,w
  2363  0366  0099               	movwf	(25)	;volatile
  2364                           	
  2365  0367                     i1l8205:	
  2366  0367  3001               	movlw	(01h)
  2367  0368  00C5               	movwf	(??_isr1+0)+0
  2368  0369  0845               	movf	(??_isr1+0)+0,w
  2369  036A  07DD               	addwf	(_txoptr),f	;volatile
  2370                           	
  2371  036B                     i1l8207:	
  2372  036B  300F               	movlw	(0Fh)
  2373  036C  00C5               	movwf	(??_isr1+0)+0
  2374  036D  0845               	movf	(??_isr1+0)+0,w
  2375  036E  05DD               	andwf	(_txoptr),f	;volatile
  2376                           	
  2377  036F                     i1l8209:	
  2378  036F  085D               	movf	(_txoptr),w	;volatile
  2379  0370  065C               	xorwf	(_txiptr),w	;volatile
  2380  0371  1D03               	skipz
  2381  0372  2B74               	goto	u320_21
  2382  0373  2B75               	goto	u320_20
  2383  0374                     u320_21:
  2384  0374  2B79               	goto	i1l2158
  2385  0375                     u320_20:
  2386                           	
  2387  0375                     i1l8211:	
  2388  0375  1683               	bsf	status, 5	;RP0=1, select bank1
  2389  0376  1303               	bcf	status, 6	;RP1=0, select bank1
  2390  0377  120C               	bcf	(1124/8)^080h,(1124)&7
  2391  0378  2B79               	goto	i1l2158
  2392                           	
  2393  0379                     i1l2159:	
  2394                           	
  2395  0379                     i1l2158:	
  2396                           	line	79
  2397                           ;Main.c: 79: if(TMR0IF)
  2398  0379  1D0B               	btfss	(90/8),(90)&7
  2399  037A  2B7C               	goto	u321_21
  2400  037B  2B7D               	goto	u321_20
  2401  037C                     u321_21:
  2402  037C  2C13               	goto	i1l2166
  2403  037D                     u321_20:
  2404                           	line	81
  2405                           	
  2406  037D                     i1l8213:	
  2407                           ;Main.c: 80: {
  2408                           ;Main.c: 81: TMR0IF = 0;
  2409  037D  110B               	bcf	(90/8),(90)&7
  2410                           	line	82
  2411                           	
  2412  037E                     i1l8215:	
  2413                           ;Main.c: 82: TMR0 = 100;
  2414  037E  3064               	movlw	(064h)
  2415  037F  1283               	bcf	status, 5	;RP0=0, select bank0
  2416  0380  0081               	movwf	(1)	;volatile
  2417                           	line	84
  2418                           ;Main.c: 84: RTC_Counter++;
  2419  0381  3001               	movlw	low(01h)
  2420  0382  07CA               	addwf	(_RTC_Counter),f	;volatile
  2421  0383  1803               	skipnc
  2422  0384  0ACB               	incf	(_RTC_Counter+1),f	;volatile
  2423  0385  3000               	movlw	high(01h)
  2424  0386  07CB               	addwf	(_RTC_Counter+1),f	;volatile
  2425                           	line	86
  2426                           	
  2427  0387                     i1l8217:	
  2428                           ;Main.c: 86: RTC_FLAG_1MS = 1;
  2429  0387  17DE               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  2430                           	line	87
  2431                           	
  2432  0388                     i1l8219:	
  2433                           ;Main.c: 87: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  2434  0388  300A               	movlw	low(0Ah)
  2435  0389  00F8               	movwf	(?___lwmod)
  2436  038A  3000               	movlw	high(0Ah)
  2437  038B  00F9               	movwf	((?___lwmod))+1
  2438  038C  084B               	movf	(_RTC_Counter+1),w	;volatile
  2439  038D  01FB               	clrf	1+(?___lwmod)+02h
  2440  038E  07FB               	addwf	1+(?___lwmod)+02h
  2441  038F  084A               	movf	(_RTC_Counter),w	;volatile
  2442  0390  01FA               	clrf	0+(?___lwmod)+02h
  2443  0391  07FA               	addwf	0+(?___lwmod)+02h
  2444                           
  2445  0392  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  2446  0397  0879               	movf	((1+(?___lwmod))),w
  2447  0398  0478               	iorwf	((0+(?___lwmod))),w
  2448  0399  1D03               	skipz
  2449  039A  2B9C               	goto	u322_21
  2450  039B  2B9D               	goto	u322_20
  2451  039C                     u322_21:
  2452  039C  2BA1               	goto	i1l8223
  2453  039D                     u322_20:
  2454                           	
  2455  039D                     i1l8221:	
  2456  039D  1283               	bcf	status, 5	;RP0=0, select bank0
  2457  039E  1303               	bcf	status, 6	;RP1=0, select bank0
  2458  039F  175E               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  2459  03A0  2BA1               	goto	i1l8223
  2460                           	
  2461  03A1                     i1l2161:	
  2462                           	line	88
  2463                           	
  2464  03A1                     i1l8223:	
  2465                           ;Main.c: 88: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  2466  03A1  3032               	movlw	low(032h)
  2467  03A2  00F8               	movwf	(?___lwmod)
  2468  03A3  3000               	movlw	high(032h)
  2469  03A4  00F9               	movwf	((?___lwmod))+1
  2470  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2471  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2472  03A7  084B               	movf	(_RTC_Counter+1),w	;volatile
  2473  03A8  01FB               	clrf	1+(?___lwmod)+02h
  2474  03A9  07FB               	addwf	1+(?___lwmod)+02h
  2475  03AA  084A               	movf	(_RTC_Counter),w	;volatile
  2476  03AB  01FA               	clrf	0+(?___lwmod)+02h
  2477  03AC  07FA               	addwf	0+(?___lwmod)+02h
  2478                           
  2479  03AD  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  2480  03B2  0879               	movf	((1+(?___lwmod))),w
  2481  03B3  0478               	iorwf	((0+(?___lwmod))),w
  2482  03B4  1D03               	skipz
  2483  03B5  2BB7               	goto	u323_21
  2484  03B6  2BB8               	goto	u323_20
  2485  03B7                     u323_21:
  2486  03B7  2BBC               	goto	i1l8227
  2487  03B8                     u323_20:
  2488                           	
  2489  03B8                     i1l8225:	
  2490  03B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2491  03B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2492  03BA  155F               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  2493  03BB  2BBC               	goto	i1l8227
  2494                           	
  2495  03BC                     i1l2162:	
  2496                           	line	89
  2497                           	
  2498  03BC                     i1l8227:	
  2499                           ;Main.c: 89: if(RTC_Counter % 250 == 0)
  2500  03BC  30FA               	movlw	low(0FAh)
  2501  03BD  00F8               	movwf	(?___lwmod)
  2502  03BE  3000               	movlw	high(0FAh)
  2503  03BF  00F9               	movwf	((?___lwmod))+1
  2504  03C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2505  03C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2506  03C2  084B               	movf	(_RTC_Counter+1),w	;volatile
  2507  03C3  01FB               	clrf	1+(?___lwmod)+02h
  2508  03C4  07FB               	addwf	1+(?___lwmod)+02h
  2509  03C5  084A               	movf	(_RTC_Counter),w	;volatile
  2510  03C6  01FA               	clrf	0+(?___lwmod)+02h
  2511  03C7  07FA               	addwf	0+(?___lwmod)+02h
  2512                           
  2513  03C8  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  2514  03CD  0879               	movf	((1+(?___lwmod))),w
  2515  03CE  0478               	iorwf	((0+(?___lwmod))),w
  2516  03CF  1D03               	skipz
  2517  03D0  2BD2               	goto	u324_21
  2518  03D1  2BD3               	goto	u324_20
  2519  03D2                     u324_21:
  2520  03D2  2BE1               	goto	i1l8233
  2521  03D3                     u324_20:
  2522                           	line	91
  2523                           	
  2524  03D3                     i1l8229:	
  2525                           ;Main.c: 90: {
  2526                           ;Main.c: 91: readAvgDistance();
  2527  03D3  120A  118A  271D   	fcall	_readAvgDistance
              120A  118A         
  2528                           	line	92
  2529                           ;Main.c: 92: UpdateDisplay();
  2530  03D8  120A  118A  241F   	fcall	_UpdateDisplay
              120A  118A         
  2531                           	line	93
  2532                           	
  2533  03DD                     i1l8231:	
  2534                           ;Main.c: 93: RTC_FLAG_250MS = 1;
  2535  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2536  03DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2537  03DF  145F               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2538  03E0  2BE1               	goto	i1l8233
  2539                           	line	95
  2540                           	
  2541  03E1                     i1l2163:	
  2542                           	line	96
  2543                           	
  2544  03E1                     i1l8233:	
  2545                           ;Main.c: 95: }
  2546                           ;Main.c: 96: if(RTC_Counter % 500 == 0)
  2547  03E1  30F4               	movlw	low(01F4h)
  2548  03E2  00F8               	movwf	(?___lwmod)
  2549  03E3  3001               	movlw	high(01F4h)
  2550  03E4  00F9               	movwf	((?___lwmod))+1
  2551  03E5  1283               	bcf	status, 5	;RP0=0, select bank0
  2552  03E6  1303               	bcf	status, 6	;RP1=0, select bank0
  2553  03E7  084B               	movf	(_RTC_Counter+1),w	;volatile
  2554  03E8  01FB               	clrf	1+(?___lwmod)+02h
  2555  03E9  07FB               	addwf	1+(?___lwmod)+02h
  2556  03EA  084A               	movf	(_RTC_Counter),w	;volatile
  2557  03EB  01FA               	clrf	0+(?___lwmod)+02h
  2558  03EC  07FA               	addwf	0+(?___lwmod)+02h
  2559                           
  2560  03ED  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  2561  03F2  0879               	movf	((1+(?___lwmod))),w
  2562  03F3  0478               	iorwf	((0+(?___lwmod))),w
  2563  03F4  1D03               	skipz
  2564  03F5  2BF7               	goto	u325_21
  2565  03F6  2BF8               	goto	u325_20
  2566  03F7                     u325_21:
  2567  03F7  2C00               	goto	i1l8241
  2568  03F8                     u325_20:
  2569                           	line	98
  2570                           	
  2571  03F8                     i1l8235:	
  2572                           ;Main.c: 97: {
  2573                           ;Main.c: 98: RTC_FLAG_500MS = 1;
  2574  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2575  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2576  03FA  14DF               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  2577                           	line	99
  2578                           	
  2579  03FB                     i1l8237:	
  2580                           ;Main.c: 99: RTC_Counter = 0;
  2581  03FB  01CA               	clrf	(_RTC_Counter)	;volatile
  2582  03FC  01CB               	clrf	(_RTC_Counter+1)	;volatile
  2583                           	line	100
  2584                           	
  2585  03FD                     i1l8239:	
  2586                           ;Main.c: 100: RB0 ^= 0x01;
  2587  03FD  3001               	movlw	1<<((48)&7)
  2588  03FE  0686               	xorwf	((48)/8),f
  2589  03FF  2C00               	goto	i1l8241
  2590                           	line	101
  2591                           	
  2592  0400                     i1l2164:	
  2593                           	line	103
  2594                           	
  2595  0400                     i1l8241:	
  2596                           ;Main.c: 101: }
  2597                           ;Main.c: 103: if (buttonPressed == 0)
  2598  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  2599  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  2600  0402  08D7               	movf	(_buttonPressed),f
  2601  0403  1D03               	skipz	;volatile
  2602  0404  2C06               	goto	u326_21
  2603  0405  2C07               	goto	u326_20
  2604  0406                     u326_21:
  2605  0406  2C13               	goto	i1l2166
  2606  0407                     u326_20:
  2607                           	line	105
  2608                           	
  2609  0407                     i1l8243:	
  2610                           ;Main.c: 104: {
  2611                           ;Main.c: 105: buttonPressed = ReadButtons();
  2612  0407  120A  118A  27C0   	fcall	_ReadButtons
              120A  118A         
  2613  040C  1283               	bcf	status, 5	;RP0=0, select bank0
  2614  040D  1303               	bcf	status, 6	;RP1=0, select bank0
  2615  040E  00C5               	movwf	(??_isr1+0)+0
  2616  040F  0845               	movf	(??_isr1+0)+0,w
  2617  0410  00D7               	movwf	(_buttonPressed)	;volatile
  2618  0411  2C13               	goto	i1l2166
  2619                           	line	106
  2620                           	
  2621  0412                     i1l2165:	
  2622  0412  2C13               	goto	i1l2166
  2623                           	line	107
  2624                           	
  2625  0413                     i1l2160:	
  2626                           	line	108
  2627                           	
  2628  0413                     i1l2166:	
  2629  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  0414  0849               	movf	(??_isr1+4),w
  2631  0415  00FF               	movwf	btemp+1
  2632  0416  0848               	movf	(??_isr1+3),w
  2633  0417  008A               	movwf	pclath
  2634  0418  0847               	movf	(??_isr1+2),w
  2635  0419  0084               	movwf	fsr0
  2636  041A  0E46               	swapf	(??_isr1+1)^00h,w
  2637  041B  0083               	movwf	status
  2638  041C  0EFE               	swapf	saved_w,f
  2639  041D  0E7E               	swapf	saved_w,w
  2640  041E  0009               	retfie
  2641                           	opt stack 0
  2642                           GLOBAL	__end_of_isr1
  2643  041F                     	__end_of_isr1:
  2644 ;; =============== function _isr1 ends ============
  2645                           
  2646                           	signat	_isr1,88
  2647                           	global	_UpdateDisplay
  2648                           psect	text586,local,class=CODE,delta=2
  2649                           global __ptext586
  2650  041F                     __ptext586:
  2651                           
  2652 ;; *************** function _UpdateDisplay *****************
  2653 ;; Defined at:
  2654 ;;		line 233 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  adcOutput      16   21[BANK0 ] unsigned char [16]
  2659 ;; Return value:  Size  Location     Type
  2660 ;;		None               void
  2661 ;; Registers used:
  2662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       0       0       0       0
  2669 ;;      Locals:         0      16       0       0       0
  2670 ;;      Temps:          0       4       0       0       0
  2671 ;;      Totals:         0      20       0       0       0
  2672 ;;Total ram usage:       20 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    2
  2675 ;; This function calls:
  2676 ;;		i1_lcd_write_control
  2677 ;;		_sprintf
  2678 ;;		_lcd_set_cursor
  2679 ;;		_lcd_write_string
  2680 ;;		___awmod
  2681 ;; This function is called by:
  2682 ;;		_isr1
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           psect	text586
  2686                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  2687                           	line	233
  2688                           	global	__size_of_UpdateDisplay
  2689  00B7                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  2690                           	
  2691  041F                     _UpdateDisplay:	
  2692                           	opt	stack 1
  2693                           ; Regs used in _UpdateDisplay: [allreg]
  2694                           	line	234
  2695                           	
  2696  041F                     i1l8261:	
  2697                           ;HMI.c: 234: char adcOutput[16] = "";
  2698  041F  3035               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2699  0420  0084               	movwf	fsr0
  2700  0421  30A0               	movlw	low(UpdateDisplay@F1206)
  2701  0422  1283               	bcf	status, 5	;RP0=0, select bank0
  2702  0423  1303               	bcf	status, 6	;RP1=0, select bank0
  2703  0424  00B1               	movwf	(??_UpdateDisplay+0)+0
  2704  0425  0804               	movf	fsr0,w
  2705  0426  00B2               	movwf	((??_UpdateDisplay+0)+0+1)
  2706  0427  3010               	movlw	16
  2707  0428  00B3               	movwf	((??_UpdateDisplay+0)+0+2)
  2708  0429                     u329_20:
  2709  0429  0831               	movf	(??_UpdateDisplay+0)+0,w
  2710  042A  0084               	movwf	fsr0
  2711  042B  1383               	bcf	status, 7	;select IRP bank1
  2712                           	
  2713  042C  0800               	movf	indf,w
  2714  042D  00B4               	movwf	((??_UpdateDisplay+0)+0+3)
  2715  042E  0AB1               	incf	(??_UpdateDisplay+0)+0,f
  2716  042F  0832               	movf	((??_UpdateDisplay+0)+0+1),w
  2717  0430  0084               	movwf	fsr0
  2718                           	
  2719  0431  0834               	movf	((??_UpdateDisplay+0)+0+3),w
  2720  0432  0080               	movwf	indf
  2721  0433  0AB2               	incf	((??_UpdateDisplay+0)+0+1),f
  2722  0434  0BB3               	decfsz	((??_UpdateDisplay+0)+0+2),f
  2723  0435  2C29               	goto	u329_20
  2724                           	line	235
  2725                           	
  2726  0436                     i1l8263:	
  2727                           ;HMI.c: 235: lcd_write_control(0b00000001);
  2728  0436  3001               	movlw	(01h)
  2729  0437  120A  158A  2687   	fcall	i1_lcd_write_control
              120A  118A         
  2730                           	line	236
  2731                           	
  2732  043C                     i1l8265:	
  2733                           ;HMI.c: 236: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distance);
  2734  043C  300B               	movlw	((STR_11-__stringbase))&0ffh
  2735  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  2736  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  2737  043F  00B1               	movwf	(??_UpdateDisplay+0)+0
  2738  0440  0831               	movf	(??_UpdateDisplay+0)+0,w
  2739  0441  00A0               	movwf	(?_sprintf)
  2740  0442  084D               	movf	(_adcVal+1),w	;volatile
  2741  0443  01A2               	clrf	1+(?_sprintf)+01h
  2742  0444  07A2               	addwf	1+(?_sprintf)+01h
  2743  0445  084C               	movf	(_adcVal),w	;volatile
  2744  0446  01A1               	clrf	0+(?_sprintf)+01h
  2745  0447  07A1               	addwf	0+(?_sprintf)+01h
  2746                           
  2747  0448  084F               	movf	(_distance+1),w	;volatile
  2748  0449  01A4               	clrf	1+(?_sprintf)+03h
  2749  044A  07A4               	addwf	1+(?_sprintf)+03h
  2750  044B  084E               	movf	(_distance),w	;volatile
  2751  044C  01A3               	clrf	0+(?_sprintf)+03h
  2752  044D  07A3               	addwf	0+(?_sprintf)+03h
  2753                           
  2754  044E  3035               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2755  044F  120A  118A  2239   	fcall	_sprintf
              120A  118A         
  2756                           	line	237
  2757                           	
  2758  0454                     i1l8267:	
  2759                           ;HMI.c: 237: lcd_set_cursor(0x00);
  2760  0454  3000               	movlw	(0)
  2761  0455  120A  158A  2658   	fcall	_lcd_set_cursor
              120A  118A         
  2762                           	line	238
  2763                           	
  2764  045A                     i1l8269:	
  2765                           ;HMI.c: 238: lcd_write_string(adcOutput);
  2766  045A  3035               	movlw	(UpdateDisplay@adcOutput&0ffh)
  2767  045B  00F7               	movwf	(?_lcd_write_string)
  2768  045C  3000               	movlw	(0x0/2)
  2769  045D  00F8               	movwf	(?_lcd_write_string+1)
  2770  045E  120A  158A  276A   	fcall	_lcd_write_string
              120A  118A         
  2771                           	line	243
  2772                           	
  2773  0463                     i1l8271:	
  2774                           ;HMI.c: 243: lcd_set_cursor(0x40);
  2775  0463  3040               	movlw	(040h)
  2776  0464  120A  158A  2658   	fcall	_lcd_set_cursor
              120A  118A         
  2777                           	line	244
  2778                           	
  2779  0469                     i1l8273:	
  2780                           ;HMI.c: 244: if (pos > 0)
  2781  0469  1283               	bcf	status, 5	;RP0=0, select bank0
  2782  046A  1303               	bcf	status, 6	;RP1=0, select bank0
  2783  046B  0851               	movf	(_pos+1),w
  2784  046C  3A80               	xorlw	80h
  2785  046D  00FF               	movwf	btemp+1
  2786  046E  3080               	movlw	(high(01h))^80h
  2787  046F  027F               	subwf	btemp+1,w
  2788  0470  1D03               	skipz
  2789  0471  2C74               	goto	u330_25
  2790  0472  3001               	movlw	low(01h)
  2791  0473  0250               	subwf	(_pos),w
  2792  0474                     u330_25:
  2793                           
  2794  0474  1C03               	skipc
  2795  0475  2C77               	goto	u330_21
  2796  0476  2C78               	goto	u330_20
  2797  0477                     u330_21:
  2798  0477  2C89               	goto	i1l8277
  2799  0478                     u330_20:
  2800                           	line	245
  2801                           	
  2802  0478                     i1l8275:	
  2803                           ;HMI.c: 245: lcd_write_string(shortMenuStrings[pos - 1]);
  2804  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  2805  0479  1303               	bcf	status, 6	;RP1=0, select bank0
  2806  047A  0850               	movf	(_pos),w
  2807  047B  3EFF               	addlw	0FFh
  2808  047C  3E65               	addlw	_shortMenuStrings&0ffh
  2809  047D  0084               	movwf	fsr0
  2810  047E  1383               	bcf	status, 7	;select IRP bank0
  2811  047F  0800               	movf	indf,w
  2812  0480  00F7               	movwf	(?_lcd_write_string)
  2813  0481  3080               	movlw	80h
  2814  0482  00F8               	movwf	(?_lcd_write_string+1)
  2815  0483  120A  158A  276A   	fcall	_lcd_write_string
              120A  118A         
  2816  0488  2C9A               	goto	i1l8279
  2817                           	line	246
  2818                           	
  2819  0489                     i1l5144:	
  2820                           	line	247
  2821                           	
  2822  0489                     i1l8277:	
  2823                           ;HMI.c: 246: else
  2824                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  2825  0489  1283               	bcf	status, 5	;RP0=0, select bank0
  2826  048A  1303               	bcf	status, 6	;RP1=0, select bank0
  2827  048B  0850               	movf	(_pos),w
  2828  048C  3E04               	addlw	04h
  2829  048D  3E65               	addlw	_shortMenuStrings&0ffh
  2830  048E  0084               	movwf	fsr0
  2831  048F  1383               	bcf	status, 7	;select IRP bank0
  2832  0490  0800               	movf	indf,w
  2833  0491  00F7               	movwf	(?_lcd_write_string)
  2834  0492  3080               	movlw	80h
  2835  0493  00F8               	movwf	(?_lcd_write_string+1)
  2836  0494  120A  158A  276A   	fcall	_lcd_write_string
              120A  118A         
  2837  0499  2C9A               	goto	i1l8279
  2838                           	
  2839  049A                     i1l5145:	
  2840                           	line	248
  2841                           	
  2842  049A                     i1l8279:	
  2843                           ;HMI.c: 248: lcd_set_cursor(0x44);
  2844  049A  3044               	movlw	(044h)
  2845  049B  120A  158A  2658   	fcall	_lcd_set_cursor
              120A  118A         
  2846                           	line	249
  2847                           	
  2848  04A0                     i1l8281:	
  2849                           ;HMI.c: 249: lcd_write_string(menuStrings[pos]);
  2850  04A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2851  04A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2852  04A2  0850               	movf	(_pos),w
  2853  04A3  3E60               	addlw	_menuStrings&0ffh
  2854  04A4  0084               	movwf	fsr0
  2855  04A5  1383               	bcf	status, 7	;select IRP bank0
  2856  04A6  0800               	movf	indf,w
  2857  04A7  00F7               	movwf	(?_lcd_write_string)
  2858  04A8  3080               	movlw	80h
  2859  04A9  00F8               	movwf	(?_lcd_write_string+1)
  2860  04AA  120A  158A  276A   	fcall	_lcd_write_string
              120A  118A         
  2861                           	line	250
  2862                           ;HMI.c: 250: lcd_set_cursor(0x4D);
  2863  04AF  304D               	movlw	(04Dh)
  2864  04B0  120A  158A  2658   	fcall	_lcd_set_cursor
              120A  118A         
  2865                           	line	251
  2866                           	
  2867  04B5                     i1l8283:	
  2868                           ;HMI.c: 251: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  2869  04B5  3005               	movlw	low(05h)
  2870  04B6  00F0               	movwf	(?___awmod)
  2871  04B7  3000               	movlw	high(05h)
  2872  04B8  00F1               	movwf	((?___awmod))+1
  2873  04B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2874  04BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2875  04BB  0850               	movf	(_pos),w
  2876  04BC  3E01               	addlw	low(01h)
  2877  04BD  00F2               	movwf	0+(?___awmod)+02h
  2878  04BE  0851               	movf	(_pos+1),w
  2879  04BF  1803               	skipnc
  2880  04C0  3E01               	addlw	1
  2881  04C1  3E00               	addlw	high(01h)
  2882  04C2  00F3               	movwf	1+0+(?___awmod)+02h
  2883  04C3  120A  118A  2552   	fcall	___awmod
              120A  118A         
  2884  04C8  0870               	movf	(0+(?___awmod)),w
  2885  04C9  3E65               	addlw	_shortMenuStrings&0ffh
  2886  04CA  0084               	movwf	fsr0
  2887  04CB  1383               	bcf	status, 7	;select IRP bank0
  2888  04CC  0800               	movf	indf,w
  2889  04CD  00F7               	movwf	(?_lcd_write_string)
  2890  04CE  3080               	movlw	80h
  2891  04CF  00F8               	movwf	(?_lcd_write_string+1)
  2892  04D0  120A  158A  276A   	fcall	_lcd_write_string
              120A  118A         
  2893                           	line	252
  2894                           	
  2895  04D5                     i1l5146:	
  2896  04D5  0008               	return
  2897                           	opt stack 0
  2898                           GLOBAL	__end_of_UpdateDisplay
  2899  04D6                     	__end_of_UpdateDisplay:
  2900 ;; =============== function _UpdateDisplay ends ============
  2901                           
  2902                           	signat	_UpdateDisplay,88
  2903                           	global	_readAvgDistance
  2904                           psect	text587,local,class=CODE,delta=2
  2905                           global __ptext587
  2906  071D                     __ptext587:
  2907                           
  2908 ;; *************** function _readAvgDistance *****************
  2909 ;; Defined at:
  2910 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  i               2    2[BANK0 ] int 
  2915 ;;  fullval         2    0[BANK0 ] unsigned int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;		None               void
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       0       0       0       0
  2926 ;;      Locals:         0       4       0       0       0
  2927 ;;      Temps:          0       0       0       0       0
  2928 ;;      Totals:         0       4       0       0       0
  2929 ;;Total ram usage:        4 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		_readDistance
  2934 ;;		___lwdiv
  2935 ;;		_ADCconvert
  2936 ;; This function is called by:
  2937 ;;		_isr1
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           psect	text587
  2941                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2942                           	line	10
  2943                           	global	__size_of_readAvgDistance
  2944  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2945                           	
  2946  071D                     _readAvgDistance:	
  2947                           	opt	stack 0
  2948                           ; Regs used in _readAvgDistance: [allreg]
  2949                           	line	11
  2950                           	
  2951  071D                     i1l8245:	
  2952                           ;infrared.c: 11: unsigned int fullval = 0;
  2953  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  2954  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  2955  071F  01A0               	clrf	(readAvgDistance@fullval)
  2956  0720  01A1               	clrf	(readAvgDistance@fullval+1)
  2957                           	line	14
  2958                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2959  0721  01A2               	clrf	(readAvgDistance@i)
  2960  0722  01A3               	clrf	(readAvgDistance@i+1)
  2961                           	
  2962  0723                     i1l8247:	
  2963  0723  0823               	movf	(readAvgDistance@i+1),w
  2964  0724  3A80               	xorlw	80h
  2965  0725  00FF               	movwf	btemp+1
  2966  0726  3080               	movlw	(high(0Ah))^80h
  2967  0727  027F               	subwf	btemp+1,w
  2968  0728  1D03               	skipz
  2969  0729  2F2C               	goto	u327_25
  2970  072A  300A               	movlw	low(0Ah)
  2971  072B  0222               	subwf	(readAvgDistance@i),w
  2972  072C                     u327_25:
  2973                           
  2974  072C  1C03               	skipc
  2975  072D  2F2F               	goto	u327_21
  2976  072E  2F30               	goto	u327_20
  2977  072F                     u327_21:
  2978  072F  2F32               	goto	i1l8251
  2979  0730                     u327_20:
  2980  0730  2F53               	goto	i1l8257
  2981                           	
  2982  0731                     i1l8249:	
  2983  0731  2F53               	goto	i1l8257
  2984                           	line	15
  2985                           	
  2986  0732                     i1l2878:	
  2987                           	line	16
  2988                           	
  2989  0732                     i1l8251:	
  2990                           ;infrared.c: 15: {
  2991                           ;infrared.c: 16: fullval += readDistance();
  2992  0732  120A  158A  269B   	fcall	_readDistance
              120A  118A         
  2993  0737  0878               	movf	(0+(?_readDistance)),w
  2994  0738  1283               	bcf	status, 5	;RP0=0, select bank0
  2995  0739  1303               	bcf	status, 6	;RP1=0, select bank0
  2996  073A  07A0               	addwf	(readAvgDistance@fullval),f
  2997  073B  1803               	skipnc
  2998  073C  0AA1               	incf	(readAvgDistance@fullval+1),f
  2999  073D  0879               	movf	(1+(?_readDistance)),w
  3000  073E  07A1               	addwf	(readAvgDistance@fullval+1),f
  3001                           	line	14
  3002                           	
  3003  073F                     i1l8253:	
  3004  073F  3001               	movlw	low(01h)
  3005  0740  07A2               	addwf	(readAvgDistance@i),f
  3006  0741  1803               	skipnc
  3007  0742  0AA3               	incf	(readAvgDistance@i+1),f
  3008  0743  3000               	movlw	high(01h)
  3009  0744  07A3               	addwf	(readAvgDistance@i+1),f
  3010                           	
  3011  0745                     i1l8255:	
  3012  0745  0823               	movf	(readAvgDistance@i+1),w
  3013  0746  3A80               	xorlw	80h
  3014  0747  00FF               	movwf	btemp+1
  3015  0748  3080               	movlw	(high(0Ah))^80h
  3016  0749  027F               	subwf	btemp+1,w
  3017  074A  1D03               	skipz
  3018  074B  2F4E               	goto	u328_25
  3019  074C  300A               	movlw	low(0Ah)
  3020  074D  0222               	subwf	(readAvgDistance@i),w
  3021  074E                     u328_25:
  3022                           
  3023  074E  1C03               	skipc
  3024  074F  2F51               	goto	u328_21
  3025  0750  2F52               	goto	u328_20
  3026  0751                     u328_21:
  3027  0751  2F32               	goto	i1l8251
  3028  0752                     u328_20:
  3029  0752  2F53               	goto	i1l8257
  3030                           	
  3031  0753                     i1l2879:	
  3032                           	line	19
  3033                           	
  3034  0753                     i1l8257:	
  3035                           ;infrared.c: 18: }
  3036                           ;infrared.c: 19: adcVal = fullval / 10;
  3037  0753  300A               	movlw	low(0Ah)
  3038  0754  00F0               	movwf	(?___lwdiv)
  3039  0755  3000               	movlw	high(0Ah)
  3040  0756  00F1               	movwf	((?___lwdiv))+1
  3041  0757  1283               	bcf	status, 5	;RP0=0, select bank0
  3042  0758  1303               	bcf	status, 6	;RP1=0, select bank0
  3043  0759  0821               	movf	(readAvgDistance@fullval+1),w
  3044  075A  01F3               	clrf	1+(?___lwdiv)+02h
  3045  075B  07F3               	addwf	1+(?___lwdiv)+02h
  3046  075C  0820               	movf	(readAvgDistance@fullval),w
  3047  075D  01F2               	clrf	0+(?___lwdiv)+02h
  3048  075E  07F2               	addwf	0+(?___lwdiv)+02h
  3049                           
  3050  075F  120A  118A  2772   	fcall	___lwdiv
              120A  118A         
  3051  0764  0871               	movf	(1+(?___lwdiv)),w
  3052  0765  1283               	bcf	status, 5	;RP0=0, select bank0
  3053  0766  1303               	bcf	status, 6	;RP1=0, select bank0
  3054  0767  01CD               	clrf	(_adcVal+1)	;volatile
  3055  0768  07CD               	addwf	(_adcVal+1)	;volatile
  3056  0769  0870               	movf	(0+(?___lwdiv)),w
  3057  076A  01CC               	clrf	(_adcVal)	;volatile
  3058  076B  07CC               	addwf	(_adcVal)	;volatile
  3059                           
  3060                           	line	20
  3061                           	
  3062  076C                     i1l8259:	
  3063                           ;infrared.c: 20: ADCconvert();
  3064  076C  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  3065                           	line	21
  3066                           	
  3067  0771                     i1l2880:	
  3068  0771  0008               	return
  3069                           	opt stack 0
  3070                           GLOBAL	__end_of_readAvgDistance
  3071  0772                     	__end_of_readAvgDistance:
  3072 ;; =============== function _readAvgDistance ends ============
  3073                           
  3074                           	signat	_readAvgDistance,88
  3075                           	global	_readDistance
  3076                           psect	text588,local,class=CODE,delta=2
  3077                           global __ptext588
  3078  0E9B                     __ptext588:
  3079                           
  3080 ;; *************** function _readDistance *****************
  3081 ;; Defined at:
  3082 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  fullval         2   12[COMMON] unsigned int 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2    8[COMMON] unsigned int 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         2       0       0       0       0
  3097 ;;      Locals:         2       0       0       0       0
  3098 ;;      Temps:          2       0       0       0       0
  3099 ;;      Totals:         6       0       0       0       0
  3100 ;;Total ram usage:        6 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    2
  3103 ;; This function calls:
  3104 ;;		_adc_read_channel
  3105 ;; This function is called by:
  3106 ;;		_readAvgDistance
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           psect	text588
  3110                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3111                           	line	24
  3112                           	global	__size_of_readDistance
  3113  0014                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3114                           	
  3115  0E9B                     _readDistance:	
  3116                           	opt	stack 0
  3117                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3118                           	line	27
  3119                           	
  3120  0E9B                     i1l8373:	
  3121                           ;infrared.c: 25: unsigned int fullval ;
  3122                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3123  0E9B  3000               	movlw	(0)
  3124  0E9C  120A  158A  27BF   	fcall	_adc_read_channel
              120A  158A         
  3125  0EA1  00FA               	movwf	(??_readDistance+0)+0
  3126  0EA2  01FB               	clrf	(??_readDistance+0)+0+1
  3127  0EA3  087A               	movf	0+(??_readDistance+0)+0,w
  3128  0EA4  00FC               	movwf	(readDistance@fullval)
  3129  0EA5  087B               	movf	1+(??_readDistance+0)+0,w
  3130  0EA6  00FD               	movwf	(readDistance@fullval+1)
  3131                           	line	29
  3132                           	
  3133  0EA7                     i1l8375:	
  3134                           ;infrared.c: 29: return fullval;
  3135  0EA7  087D               	movf	(readDistance@fullval+1),w
  3136  0EA8  01F9               	clrf	(?_readDistance+1)
  3137  0EA9  07F9               	addwf	(?_readDistance+1)
  3138  0EAA  087C               	movf	(readDistance@fullval),w
  3139  0EAB  01F8               	clrf	(?_readDistance)
  3140  0EAC  07F8               	addwf	(?_readDistance)
  3141                           
  3142  0EAD  2EAE               	goto	i1l2883
  3143                           	
  3144  0EAE                     i1l8377:	
  3145                           	line	30
  3146                           	
  3147  0EAE                     i1l2883:	
  3148  0EAE  0008               	return
  3149                           	opt stack 0
  3150                           GLOBAL	__end_of_readDistance
  3151  0EAF                     	__end_of_readDistance:
  3152 ;; =============== function _readDistance ends ============
  3153                           
  3154                           	signat	_readDistance,90
  3155                           	global	_lcd_write_string
  3156                           psect	text589,local,class=CODE,delta=2
  3157                           global __ptext589
  3158  0F6A                     __ptext589:
  3159                           
  3160 ;; *************** function _lcd_write_string *****************
  3161 ;; Defined at:
  3162 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  s               2    7[COMMON] PTR unsigned char 
  3165 ;;		 -> UpdateDisplay@adcOutput(16), STR_10(4), STR_9(4), STR_8(4), 
  3166 ;;		 -> STR_7(4), STR_6(4), STR_5(7), STR_4(7), 
  3167 ;;		 -> STR_3(7), STR_2(7), STR_1(7), 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         2       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0
  3182 ;;      Totals:         2       0       0       0       0
  3183 ;;Total ram usage:        2 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    1
  3186 ;; This function calls:
  3187 ;;		_lcd_write_data
  3188 ;; This function is called by:
  3189 ;;		_UpdateDisplay
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           psect	text589
  3193                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3194                           	line	48
  3195                           	global	__size_of_lcd_write_string
  3196  002A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3197                           	
  3198  0F6A                     _lcd_write_string:	
  3199                           	opt	stack 1
  3200                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3201                           	line	50
  3202                           	
  3203  0F6A                     i1l8155:	
  3204                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3205  0F6A  2F82               	goto	i1l8161
  3206                           	
  3207  0F6B                     i1l1403:	
  3208                           	
  3209  0F6B                     i1l8157:	
  3210  0F6B  0878               	movf	(lcd_write_string@s+1),w
  3211  0F6C  1283               	bcf	status, 5	;RP0=0, select bank0
  3212  0F6D  1303               	bcf	status, 6	;RP1=0, select bank0
  3213  0F6E  00FF               	movwf	btemp+1
  3214  0F6F  0877               	movf	(lcd_write_string@s),w
  3215  0F70  0084               	movwf	fsr0
  3216  0F71  120A  118A  2600   	fcall	stringtab
              120A  158A         
  3217  0F76  120A  158A  2661   	fcall	_lcd_write_data
              120A  158A         
  3218                           	
  3219  0F7B                     i1l8159:	
  3220  0F7B  3001               	movlw	low(01h)
  3221  0F7C  07F7               	addwf	(lcd_write_string@s),f
  3222  0F7D  1803               	skipnc
  3223  0F7E  0AF8               	incf	(lcd_write_string@s+1),f
  3224  0F7F  3000               	movlw	high(01h)
  3225  0F80  07F8               	addwf	(lcd_write_string@s+1),f
  3226  0F81  2F82               	goto	i1l8161
  3227                           	
  3228  0F82                     i1l1402:	
  3229                           	
  3230  0F82                     i1l8161:	
  3231  0F82  0878               	movf	(lcd_write_string@s+1),w
  3232  0F83  1283               	bcf	status, 5	;RP0=0, select bank0
  3233  0F84  1303               	bcf	status, 6	;RP1=0, select bank0
  3234  0F85  00FF               	movwf	btemp+1
  3235  0F86  0877               	movf	(lcd_write_string@s),w
  3236  0F87  0084               	movwf	fsr0
  3237  0F88  120A  118A  2600   	fcall	stringtab
              120A  158A         
  3238  0F8D  3800               	iorlw	0
  3239  0F8E  1D03               	skipz
  3240  0F8F  2F91               	goto	u312_21
  3241  0F90  2F92               	goto	u312_20
  3242  0F91                     u312_21:
  3243  0F91  2F6B               	goto	i1l8157
  3244  0F92                     u312_20:
  3245  0F92  2F93               	goto	i1l1405
  3246                           	
  3247  0F93                     i1l1404:	
  3248                           	line	51
  3249                           	
  3250  0F93                     i1l1405:	
  3251  0F93  0008               	return
  3252                           	opt stack 0
  3253                           GLOBAL	__end_of_lcd_write_string
  3254  0F94                     	__end_of_lcd_write_string:
  3255 ;; =============== function _lcd_write_string ends ============
  3256                           
  3257                           	signat	_lcd_write_string,4216
  3258                           	global	_lcd_set_cursor
  3259                           psect	text590,local,class=CODE,delta=2
  3260                           global __ptext590
  3261  0E58                     __ptext590:
  3262                           
  3263 ;; *************** function _lcd_set_cursor *****************
  3264 ;; Defined at:
  3265 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  address         1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  address         1    3[COMMON] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;		None               void
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, pclath, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         1       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0
  3282 ;;      Totals:         1       0       0       0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    1
  3286 ;; This function calls:
  3287 ;;		i1_lcd_write_control
  3288 ;; This function is called by:
  3289 ;;		_UpdateDisplay
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           psect	text590
  3293                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3294                           	line	42
  3295                           	global	__size_of_lcd_set_cursor
  3296  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3297                           	
  3298  0E58                     _lcd_set_cursor:	
  3299                           	opt	stack 1
  3300                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3301                           ;lcd_set_cursor@address stored from wreg
  3302  0E58  00F3               	movwf	(lcd_set_cursor@address)
  3303                           	line	43
  3304                           	
  3305  0E59                     i1l8151:	
  3306                           ;lcd.c: 43: address |= 0b10000000;
  3307  0E59  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3308                           	line	44
  3309                           	
  3310  0E5A                     i1l8153:	
  3311                           ;lcd.c: 44: lcd_write_control(address);
  3312  0E5A  0873               	movf	(lcd_set_cursor@address),w
  3313  0E5B  120A  158A  2687   	fcall	i1_lcd_write_control
              120A  158A         
  3314                           	line	45
  3315                           	
  3316  0E60                     i1l1399:	
  3317  0E60  0008               	return
  3318                           	opt stack 0
  3319                           GLOBAL	__end_of_lcd_set_cursor
  3320  0E61                     	__end_of_lcd_set_cursor:
  3321 ;; =============== function _lcd_set_cursor ends ============
  3322                           
  3323                           	signat	_lcd_set_cursor,4216
  3324                           	global	i1_lcd_write_control
  3325                           psect	text591,local,class=CODE,delta=2
  3326                           global __ptext591
  3327  0E87                     __ptext591:
  3328                           
  3329 ;; *************** function i1_lcd_write_control *****************
  3330 ;; Defined at:
  3331 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  lcd_write_co    1    wreg     unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		wreg
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         0       0       0       0       0
  3346 ;;      Locals:         1       0       0       0       0
  3347 ;;      Temps:          2       0       0       0       0
  3348 ;;      Totals:         3       0       0       0       0
  3349 ;;Total ram usage:        3 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_lcd_set_cursor
  3355 ;;		_UpdateDisplay
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           psect	text591
  3359                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3360                           	line	18
  3361                           	global	__size_ofi1_lcd_write_control
  3362  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  3363                           	
  3364  0E87                     i1_lcd_write_control:	
  3365                           	opt	stack 1
  3366                           ; Regs used in i1_lcd_write_control: [wreg]
  3367                           ;i1lcd_write_control@databyte stored from wreg
  3368  0E87  00F2               	movwf	(i1lcd_write_control@databyte)
  3369                           	line	19
  3370                           	
  3371  0E88                     i1l8771:	
  3372                           ;lcd.c: 19: RE2 = 0;
  3373  0E88  1283               	bcf	status, 5	;RP0=0, select bank0
  3374  0E89  1303               	bcf	status, 6	;RP1=0, select bank0
  3375  0E8A  1109               	bcf	(74/8),(74)&7
  3376                           	line	20
  3377                           ;lcd.c: 20: RE1 = 0;
  3378  0E8B  1089               	bcf	(73/8),(73)&7
  3379                           	line	21
  3380                           ;lcd.c: 21: RE0 = 0;
  3381  0E8C  1009               	bcf	(72/8),(72)&7
  3382                           	line	22
  3383                           	
  3384  0E8D                     i1l8773:	
  3385                           ;lcd.c: 22: PORTD = databyte;
  3386  0E8D  0872               	movf	(i1lcd_write_control@databyte),w
  3387  0E8E  0088               	movwf	(8)	;volatile
  3388                           	line	23
  3389                           	
  3390  0E8F                     i1l8775:	
  3391                           ;lcd.c: 23: RE2 = 1;
  3392  0E8F  1509               	bsf	(74/8),(74)&7
  3393                           	line	24
  3394                           	
  3395  0E90                     i1l8777:	
  3396                           ;lcd.c: 24: RE2 = 0;
  3397  0E90  1109               	bcf	(74/8),(74)&7
  3398                           	line	25
  3399                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  3400                           	opt asmopt_off
  3401  0E91  300D               movlw	13
  3402  0E92  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  3403  0E93  30FB               	movlw	251
  3404  0E94  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  3405  0E95                     u422_27:
  3406  0E95  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  3407  0E96  2E95               	goto	u422_27
  3408  0E97  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  3409  0E98  2E95               	goto	u422_27
  3410  0E99  2E9A               	nop2
  3411                           opt asmopt_on
  3412                           
  3413                           	line	26
  3414                           	
  3415  0E9A                     i1l1393:	
  3416  0E9A  0008               	return
  3417                           	opt stack 0
  3418                           GLOBAL	__end_ofi1_lcd_write_control
  3419  0E9B                     	__end_ofi1_lcd_write_control:
  3420 ;; =============== function i1_lcd_write_control ends ============
  3421                           
  3422                           	signat	i1_lcd_write_control,88
  3423                           	global	_sprintf
  3424                           psect	text592,local,class=CODE,delta=2
  3425                           global __ptext592
  3426  0239                     __ptext592:
  3427                           
  3428 ;; *************** function _sprintf *****************
  3429 ;; Defined at:
  3430 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  sp              1    wreg     PTR unsigned char 
  3433 ;;		 -> UpdateDisplay@adcOutput(16), 
  3434 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3435 ;;		 -> STR_11(15), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  3438 ;;		 -> UpdateDisplay@adcOutput(16), 
  3439 ;;  _val            4   11[BANK0 ] struct .
  3440 ;;  c               1   16[BANK0 ] char 
  3441 ;;  prec            1   10[BANK0 ] char 
  3442 ;;  flag            1    9[BANK0 ] unsigned char 
  3443 ;;  ap              1    8[BANK0 ] PTR void [1]
  3444 ;;		 -> ?_sprintf(2), 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2    0[BANK0 ] int 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         0       5       0       0       0
  3455 ;;      Locals:         0       9       0       0       0
  3456 ;;      Temps:          0       3       0       0       0
  3457 ;;      Totals:         0      17       0       0       0
  3458 ;;Total ram usage:       17 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    1
  3461 ;; This function calls:
  3462 ;;		___lwdiv
  3463 ;;		___lwmod
  3464 ;; This function is called by:
  3465 ;;		_UpdateDisplay
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           psect	text592
  3469                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  3470                           	line	488
  3471                           	global	__size_of_sprintf
  3472  00FE                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3473                           	
  3474  0239                     _sprintf:	
  3475                           	opt	stack 1
  3476                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3477                           ;sprintf@sp stored from wreg
  3478                           	line	537
  3479  0239  1283               	bcf	status, 5	;RP0=0, select bank0
  3480  023A  1303               	bcf	status, 6	;RP1=0, select bank0
  3481  023B  00AF               	movwf	(sprintf@sp)
  3482                           	
  3483  023C                     i1l8631:	
  3484  023C  3021               	movlw	(?_sprintf+01h)&0ffh
  3485  023D  00A5               	movwf	(??_sprintf+0)+0
  3486  023E  0825               	movf	(??_sprintf+0)+0,w
  3487  023F  00A8               	movwf	(sprintf@ap)
  3488                           	line	540
  3489  0240  2B1D               	goto	i1l8683
  3490                           	
  3491  0241                     i1l5156:	
  3492                           	line	542
  3493                           	
  3494  0241                     i1l8633:	
  3495  0241  0830               	movf	(sprintf@c),w
  3496  0242  3A25               	xorlw	025h
  3497  0243  1903               	skipnz
  3498  0244  2A46               	goto	u390_21
  3499  0245  2A47               	goto	u390_20
  3500  0246                     u390_21:
  3501  0246  2A53               	goto	i1l5157
  3502  0247                     u390_20:
  3503                           	line	545
  3504                           	
  3505  0247                     i1l8635:	
  3506  0247  0830               	movf	(sprintf@c),w
  3507  0248  00A5               	movwf	(??_sprintf+0)+0
  3508  0249  082F               	movf	(sprintf@sp),w
  3509  024A  0084               	movwf	fsr0
  3510  024B  0825               	movf	(??_sprintf+0)+0,w
  3511  024C  1383               	bcf	status, 7	;select IRP bank0
  3512  024D  0080               	movwf	indf
  3513                           	
  3514  024E                     i1l8637:	
  3515  024E  3001               	movlw	(01h)
  3516  024F  00A5               	movwf	(??_sprintf+0)+0
  3517  0250  0825               	movf	(??_sprintf+0)+0,w
  3518  0251  07AF               	addwf	(sprintf@sp),f
  3519                           	line	546
  3520  0252  2B1D               	goto	i1l8683
  3521                           	line	547
  3522                           	
  3523  0253                     i1l5157:	
  3524                           	line	552
  3525  0253  01A9               	clrf	(sprintf@flag)
  3526                           	line	638
  3527  0254  2A5A               	goto	i1l8641
  3528                           	line	640
  3529                           	
  3530  0255                     i1l5159:	
  3531                           	line	641
  3532  0255  2B31               	goto	i1l8685
  3533                           	line	700
  3534                           	
  3535  0256                     i1l5161:	
  3536  0256  2A6F               	goto	i1l8643
  3537                           	line	701
  3538                           	
  3539  0257                     i1l5162:	
  3540                           	line	702
  3541  0257  2A6F               	goto	i1l8643
  3542                           	line	805
  3543                           	
  3544  0258                     i1l5164:	
  3545                           	line	816
  3546  0258  2B1D               	goto	i1l8683
  3547                           	line	825
  3548                           	
  3549  0259                     i1l8639:	
  3550  0259  2A6F               	goto	i1l8643
  3551                           	line	638
  3552                           	
  3553  025A                     i1l5158:	
  3554                           	
  3555  025A                     i1l8641:	
  3556  025A  3001               	movlw	01h
  3557  025B  07A0               	addwf	(sprintf@f),f
  3558  025C  30FF               	movlw	-01h
  3559  025D  0720               	addwf	(sprintf@f),w
  3560  025E  0084               	movwf	fsr0
  3561  025F  120A  118A  260A   	fcall	stringdir
              120A  118A         
  3562  0264  00B0               	movwf	(sprintf@c)
  3563                           	; Switch size 1, requested type "space"
  3564                           ; Number of cases is 3, Range of values is 0 to 105
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte           10     6 (average)
  3568                           ; jumptable            260     6 (fixed)
  3569                           ; rangetable           110     6 (fixed)
  3570                           ; spacedrange          218     9 (fixed)
  3571                           ; locatedrange         106     3 (fixed)
  3572                           ;	Chosen strategy is simple_byte
  3573                           
  3574                           	opt asmopt_off
  3575  0265  3A00               	xorlw	0^0	; case 0
  3576  0266  1903               	skipnz
  3577  0267  2B31               	goto	i1l8685
  3578  0268  3A64               	xorlw	100^0	; case 100
  3579  0269  1903               	skipnz
  3580  026A  2A6F               	goto	i1l8643
  3581  026B  3A0D               	xorlw	105^100	; case 105
  3582  026C  1903               	skipnz
  3583  026D  2A6F               	goto	i1l8643
  3584  026E  2B1D               	goto	i1l8683
  3585                           	opt asmopt_on
  3586                           
  3587                           	line	825
  3588                           	
  3589  026F                     i1l5163:	
  3590                           	line	1254
  3591                           	
  3592  026F                     i1l8643:	
  3593  026F  0828               	movf	(sprintf@ap),w
  3594  0270  0084               	movwf	fsr0
  3595  0271  1383               	bcf	status, 7	;select IRP bank0
  3596  0272  0800               	movf	indf,w
  3597  0273  00AB               	movwf	(sprintf@_val)
  3598  0274  0A84               	incf	fsr0,f
  3599  0275  0800               	movf	indf,w
  3600  0276  00AC               	movwf	(sprintf@_val+1)
  3601                           	
  3602  0277                     i1l8645:	
  3603  0277  3002               	movlw	(02h)
  3604  0278  00A5               	movwf	(??_sprintf+0)+0
  3605  0279  0825               	movf	(??_sprintf+0)+0,w
  3606  027A  07A8               	addwf	(sprintf@ap),f
  3607                           	line	1256
  3608                           	
  3609  027B                     i1l8647:	
  3610  027B  1FAC               	btfss	(sprintf@_val+1),7
  3611  027C  2A7E               	goto	u391_21
  3612  027D  2A7F               	goto	u391_20
  3613  027E                     u391_21:
  3614  027E  2A89               	goto	i1l8653
  3615  027F                     u391_20:
  3616                           	line	1257
  3617                           	
  3618  027F                     i1l8649:	
  3619  027F  3003               	movlw	(03h)
  3620  0280  00A5               	movwf	(??_sprintf+0)+0
  3621  0281  0825               	movf	(??_sprintf+0)+0,w
  3622  0282  04A9               	iorwf	(sprintf@flag),f
  3623                           	line	1258
  3624                           	
  3625  0283                     i1l8651:	
  3626  0283  09AB               	comf	(sprintf@_val),f
  3627  0284  09AC               	comf	(sprintf@_val+1),f
  3628  0285  0AAB               	incf	(sprintf@_val),f
  3629  0286  1903               	skipnz
  3630  0287  0AAC               	incf	(sprintf@_val+1),f
  3631  0288  2A89               	goto	i1l8653
  3632                           	line	1259
  3633                           	
  3634  0289                     i1l5165:	
  3635                           	line	1300
  3636                           	
  3637  0289                     i1l8653:	
  3638  0289  01B0               	clrf	(sprintf@c)
  3639  028A  1403               	bsf	status,0
  3640  028B  0DB0               	rlf	(sprintf@c),f
  3641                           	
  3642  028C                     i1l8655:	
  3643  028C  0830               	movf	(sprintf@c),w
  3644  028D  3A05               	xorlw	05h
  3645  028E  1D03               	skipz
  3646  028F  2A91               	goto	u392_21
  3647  0290  2A92               	goto	u392_20
  3648  0291                     u392_21:
  3649  0291  2A94               	goto	i1l8659
  3650  0292                     u392_20:
  3651  0292  2ABC               	goto	i1l8667
  3652                           	
  3653  0293                     i1l8657:	
  3654  0293  2ABC               	goto	i1l8667
  3655                           	line	1301
  3656                           	
  3657  0294                     i1l5166:	
  3658                           	
  3659  0294                     i1l8659:	
  3660  0294  0830               	movf	(sprintf@c),w
  3661  0295  00A5               	movwf	(??_sprintf+0)+0
  3662  0296  0725               	addwf	(??_sprintf+0)+0,w
  3663  0297  3E01               	addlw	low((_dpowers-__stringbase))
  3664  0298  0084               	movwf	fsr0
  3665  0299  120A  118A  260A   	fcall	stringdir
              120A  118A         
  3666  029E  00A6               	movwf	(??_sprintf+1)+0
  3667  029F  120A  118A  260A   	fcall	stringdir
              120A  118A         
  3668  02A4  00A7               	movwf	(??_sprintf+1)+0+1
  3669  02A5  0827               	movf	1+(??_sprintf+1)+0,w
  3670  02A6  022C               	subwf	(sprintf@_val+1),w
  3671  02A7  1D03               	skipz
  3672  02A8  2AAB               	goto	u393_25
  3673  02A9  0826               	movf	0+(??_sprintf+1)+0,w
  3674  02AA  022B               	subwf	(sprintf@_val),w
  3675  02AB                     u393_25:
  3676  02AB  1803               	skipnc
  3677  02AC  2AAE               	goto	u393_21
  3678  02AD  2AAF               	goto	u393_20
  3679  02AE                     u393_21:
  3680  02AE  2AB1               	goto	i1l8663
  3681  02AF                     u393_20:
  3682  02AF  2ABC               	goto	i1l8667
  3683                           	line	1302
  3684                           	
  3685  02B0                     i1l8661:	
  3686  02B0  2ABC               	goto	i1l8667
  3687                           	
  3688  02B1                     i1l5168:	
  3689                           	line	1300
  3690                           	
  3691  02B1                     i1l8663:	
  3692  02B1  3001               	movlw	(01h)
  3693  02B2  00A5               	movwf	(??_sprintf+0)+0
  3694  02B3  0825               	movf	(??_sprintf+0)+0,w
  3695  02B4  07B0               	addwf	(sprintf@c),f
  3696                           	
  3697  02B5                     i1l8665:	
  3698  02B5  0830               	movf	(sprintf@c),w
  3699  02B6  3A05               	xorlw	05h
  3700  02B7  1D03               	skipz
  3701  02B8  2ABA               	goto	u394_21
  3702  02B9  2ABB               	goto	u394_20
  3703  02BA                     u394_21:
  3704  02BA  2A94               	goto	i1l8659
  3705  02BB                     u394_20:
  3706  02BB  2ABC               	goto	i1l8667
  3707                           	
  3708  02BC                     i1l5167:	
  3709                           	line	1433
  3710                           	
  3711  02BC                     i1l8667:	
  3712  02BC  0829               	movf	(sprintf@flag),w
  3713  02BD  3903               	andlw	03h
  3714  02BE  1903               	btfsc	status,2
  3715  02BF  2AC1               	goto	u395_21
  3716  02C0  2AC2               	goto	u395_20
  3717  02C1                     u395_21:
  3718  02C1  2ACE               	goto	i1l8673
  3719  02C2                     u395_20:
  3720                           	line	1434
  3721                           	
  3722  02C2                     i1l8669:	
  3723  02C2  302D               	movlw	(02Dh)
  3724  02C3  00A5               	movwf	(??_sprintf+0)+0
  3725  02C4  082F               	movf	(sprintf@sp),w
  3726  02C5  0084               	movwf	fsr0
  3727  02C6  0825               	movf	(??_sprintf+0)+0,w
  3728  02C7  1383               	bcf	status, 7	;select IRP bank0
  3729  02C8  0080               	movwf	indf
  3730                           	
  3731  02C9                     i1l8671:	
  3732  02C9  3001               	movlw	(01h)
  3733  02CA  00A5               	movwf	(??_sprintf+0)+0
  3734  02CB  0825               	movf	(??_sprintf+0)+0,w
  3735  02CC  07AF               	addwf	(sprintf@sp),f
  3736  02CD  2ACE               	goto	i1l8673
  3737                           	
  3738  02CE                     i1l5169:	
  3739                           	line	1467
  3740                           	
  3741  02CE                     i1l8673:	
  3742  02CE  0830               	movf	(sprintf@c),w
  3743  02CF  00A5               	movwf	(??_sprintf+0)+0
  3744  02D0  0825               	movf	(??_sprintf+0)+0,w
  3745  02D1  00AA               	movwf	(sprintf@prec)
  3746                           	line	1469
  3747  02D2  2B11               	goto	i1l8681
  3748                           	
  3749  02D3                     i1l5171:	
  3750                           	line	1484
  3751                           	
  3752  02D3                     i1l8675:	
  3753  02D3  300A               	movlw	low(0Ah)
  3754  02D4  00F8               	movwf	(?___lwmod)
  3755  02D5  3000               	movlw	high(0Ah)
  3756  02D6  00F9               	movwf	((?___lwmod))+1
  3757  02D7  082A               	movf	(sprintf@prec),w
  3758  02D8  00A5               	movwf	(??_sprintf+0)+0
  3759  02D9  0725               	addwf	(??_sprintf+0)+0,w
  3760  02DA  3E01               	addlw	low((_dpowers-__stringbase))
  3761  02DB  0084               	movwf	fsr0
  3762  02DC  120A  118A  260A   	fcall	stringdir
              120A  118A         
  3763  02E1  00F0               	movwf	(?___lwdiv)
  3764  02E2  120A  118A  260A   	fcall	stringdir
              120A  118A         
  3765  02E7  00F1               	movwf	(?___lwdiv+1)
  3766  02E8  082C               	movf	(sprintf@_val+1),w
  3767  02E9  01F3               	clrf	1+(?___lwdiv)+02h
  3768  02EA  07F3               	addwf	1+(?___lwdiv)+02h
  3769  02EB  082B               	movf	(sprintf@_val),w
  3770  02EC  01F2               	clrf	0+(?___lwdiv)+02h
  3771  02ED  07F2               	addwf	0+(?___lwdiv)+02h
  3772                           
  3773  02EE  120A  118A  2772   	fcall	___lwdiv
              120A  118A         
  3774  02F3  0871               	movf	(1+(?___lwdiv)),w
  3775  02F4  01FB               	clrf	1+(?___lwmod)+02h
  3776  02F5  07FB               	addwf	1+(?___lwmod)+02h
  3777  02F6  0870               	movf	(0+(?___lwdiv)),w
  3778  02F7  01FA               	clrf	0+(?___lwmod)+02h
  3779  02F8  07FA               	addwf	0+(?___lwmod)+02h
  3780                           
  3781  02F9  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  3782  02FE  0878               	movf	(0+(?___lwmod)),w
  3783  02FF  3E30               	addlw	030h
  3784  0300  1283               	bcf	status, 5	;RP0=0, select bank0
  3785  0301  1303               	bcf	status, 6	;RP1=0, select bank0
  3786  0302  00A6               	movwf	(??_sprintf+1)+0
  3787  0303  0826               	movf	(??_sprintf+1)+0,w
  3788  0304  00B0               	movwf	(sprintf@c)
  3789                           	line	1516
  3790                           	
  3791  0305                     i1l8677:	
  3792  0305  0830               	movf	(sprintf@c),w
  3793  0306  00A5               	movwf	(??_sprintf+0)+0
  3794  0307  082F               	movf	(sprintf@sp),w
  3795  0308  0084               	movwf	fsr0
  3796  0309  0825               	movf	(??_sprintf+0)+0,w
  3797  030A  1383               	bcf	status, 7	;select IRP bank0
  3798  030B  0080               	movwf	indf
  3799                           	
  3800  030C                     i1l8679:	
  3801  030C  3001               	movlw	(01h)
  3802  030D  00A5               	movwf	(??_sprintf+0)+0
  3803  030E  0825               	movf	(??_sprintf+0)+0,w
  3804  030F  07AF               	addwf	(sprintf@sp),f
  3805  0310  2B11               	goto	i1l8681
  3806                           	line	1517
  3807                           	
  3808  0311                     i1l5170:	
  3809                           	line	1469
  3810                           	
  3811  0311                     i1l8681:	
  3812  0311  30FF               	movlw	(-1)
  3813  0312  00A5               	movwf	(??_sprintf+0)+0
  3814  0313  0825               	movf	(??_sprintf+0)+0,w
  3815  0314  07AA               	addwf	(sprintf@prec),f
  3816  0315  082A               	movf	((sprintf@prec)),w
  3817  0316  3AFF               	xorlw	-1
  3818  0317  1D03               	skipz
  3819  0318  2B1A               	goto	u396_21
  3820  0319  2B1B               	goto	u396_20
  3821  031A                     u396_21:
  3822  031A  2AD3               	goto	i1l8675
  3823  031B                     u396_20:
  3824  031B  2B1D               	goto	i1l8683
  3825                           	
  3826  031C                     i1l5172:	
  3827  031C  2B1D               	goto	i1l8683
  3828                           	line	1525
  3829                           	
  3830  031D                     i1l5155:	
  3831                           	line	540
  3832                           	
  3833  031D                     i1l8683:	
  3834  031D  3001               	movlw	01h
  3835  031E  07A0               	addwf	(sprintf@f),f
  3836  031F  30FF               	movlw	-01h
  3837  0320  0720               	addwf	(sprintf@f),w
  3838  0321  0084               	movwf	fsr0
  3839  0322  120A  118A  260A   	fcall	stringdir
              120A  118A         
  3840  0327  00A5               	movwf	(??_sprintf+0)+0
  3841  0328  0825               	movf	(??_sprintf+0)+0,w
  3842  0329  00B0               	movwf	(sprintf@c)
  3843  032A  08B0               	movf	((sprintf@c)),f
  3844  032B  1D03               	skipz
  3845  032C  2B2E               	goto	u397_21
  3846  032D  2B2F               	goto	u397_20
  3847  032E                     u397_21:
  3848  032E  2A41               	goto	i1l8633
  3849  032F                     u397_20:
  3850  032F  2B31               	goto	i1l8685
  3851                           	
  3852  0330                     i1l5173:	
  3853  0330  2B31               	goto	i1l8685
  3854                           	line	1527
  3855                           	
  3856  0331                     i1l5160:	
  3857                           	line	1530
  3858                           	
  3859  0331                     i1l8685:	
  3860  0331  082F               	movf	(sprintf@sp),w
  3861  0332  0084               	movwf	fsr0
  3862  0333  1383               	bcf	status, 7	;select IRP bank0
  3863  0334  0180               	clrf	indf
  3864  0335  2B36               	goto	i1l5174
  3865                           	line	1532
  3866                           	
  3867  0336                     i1l8687:	
  3868                           	line	1533
  3869                           ;	Return value of _sprintf is never used
  3870                           	
  3871  0336                     i1l5174:	
  3872  0336  0008               	return
  3873                           	opt stack 0
  3874                           GLOBAL	__end_of_sprintf
  3875  0337                     	__end_of_sprintf:
  3876 ;; =============== function _sprintf ends ============
  3877                           
  3878                           	signat	_sprintf,4698
  3879                           	global	_ADCconvert
  3880                           psect	text593,local,class=CODE,delta=2
  3881                           global __ptext593
  3882  0015                     __ptext593:
  3883                           
  3884 ;; *************** function _ADCconvert *****************
  3885 ;; Defined at:
  3886 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0
  3903 ;;      Totals:         0       0       0       0       0
  3904 ;;Total ram usage:        0 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    1
  3907 ;; This function calls:
  3908 ;;		___lwmod
  3909 ;; This function is called by:
  3910 ;;		_readAvgDistance
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           psect	text593
  3914                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3915                           	line	33
  3916                           	global	__size_of_ADCconvert
  3917  0224                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  3918                           	
  3919  0015                     _ADCconvert:	
  3920                           	opt	stack 1
  3921                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  3922                           	line	35
  3923                           	
  3924  0015                     i1l8379:	
  3925                           ;infrared.c: 35: if (adcVal > 250)
  3926  0015  3000               	movlw	high(0FBh)
  3927  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  3928  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  3929  0018  024D               	subwf	(_adcVal+1),w	;volatile
  3930  0019  30FB               	movlw	low(0FBh)
  3931  001A  1903               	skipnz
  3932  001B  024C               	subwf	(_adcVal),w	;volatile
  3933  001C  1C03               	skipc
  3934  001D  281F               	goto	u338_21
  3935  001E  2820               	goto	u338_20
  3936  001F                     u338_21:
  3937  001F  2825               	goto	i1l8383
  3938  0020                     u338_20:
  3939                           	line	37
  3940                           	
  3941  0020                     i1l8381:	
  3942                           ;infrared.c: 36: {
  3943                           ;infrared.c: 37: distance = 20;
  3944  0020  3014               	movlw	low(014h)
  3945  0021  00CE               	movwf	(_distance)	;volatile
  3946  0022  3000               	movlw	high(014h)
  3947  0023  00CF               	movwf	((_distance))+1	;volatile
  3948                           	line	38
  3949                           ;infrared.c: 38: }
  3950  0024  2A38               	goto	i1l2911
  3951                           	line	39
  3952                           	
  3953  0025                     i1l2886:	
  3954                           	
  3955  0025                     i1l8383:	
  3956                           ;infrared.c: 39: else if (adcVal < 250 && adcVal >= 190)
  3957  0025  3000               	movlw	high(0FAh)
  3958  0026  024D               	subwf	(_adcVal+1),w	;volatile
  3959  0027  30FA               	movlw	low(0FAh)
  3960  0028  1903               	skipnz
  3961  0029  024C               	subwf	(_adcVal),w	;volatile
  3962  002A  1803               	skipnc
  3963  002B  282D               	goto	u339_21
  3964  002C  282E               	goto	u339_20
  3965  002D                     u339_21:
  3966  002D  2851               	goto	i1l8389
  3967  002E                     u339_20:
  3968                           	
  3969  002E                     i1l8385:	
  3970  002E  3000               	movlw	high(0BEh)
  3971  002F  024D               	subwf	(_adcVal+1),w	;volatile
  3972  0030  30BE               	movlw	low(0BEh)
  3973  0031  1903               	skipnz
  3974  0032  024C               	subwf	(_adcVal),w	;volatile
  3975  0033  1C03               	skipc
  3976  0034  2836               	goto	u340_21
  3977  0035  2837               	goto	u340_20
  3978  0036                     u340_21:
  3979  0036  2851               	goto	i1l8389
  3980  0037                     u340_20:
  3981                           	line	41
  3982                           	
  3983  0037                     i1l8387:	
  3984                           ;infrared.c: 40: {
  3985                           ;infrared.c: 41: distance = 20+ (adcVal%100) ;
  3986  0037  3064               	movlw	low(064h)
  3987  0038  00F8               	movwf	(?___lwmod)
  3988  0039  3000               	movlw	high(064h)
  3989  003A  00F9               	movwf	((?___lwmod))+1
  3990  003B  084D               	movf	(_adcVal+1),w	;volatile
  3991  003C  01FB               	clrf	1+(?___lwmod)+02h
  3992  003D  07FB               	addwf	1+(?___lwmod)+02h
  3993  003E  084C               	movf	(_adcVal),w	;volatile
  3994  003F  01FA               	clrf	0+(?___lwmod)+02h
  3995  0040  07FA               	addwf	0+(?___lwmod)+02h
  3996                           
  3997  0041  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  3998  0046  0878               	movf	(0+(?___lwmod)),w
  3999  0047  3E14               	addlw	low(014h)
  4000  0048  1283               	bcf	status, 5	;RP0=0, select bank0
  4001  0049  1303               	bcf	status, 6	;RP1=0, select bank0
  4002  004A  00CE               	movwf	(_distance)	;volatile
  4003  004B  0879               	movf	(1+(?___lwmod)),w
  4004  004C  1803               	skipnc
  4005  004D  3E01               	addlw	1
  4006  004E  3E00               	addlw	high(014h)
  4007  004F  00CF               	movwf	1+(_distance)	;volatile
  4008                           	line	42
  4009                           ;infrared.c: 42: }
  4010  0050  2A38               	goto	i1l2911
  4011                           	line	43
  4012                           	
  4013  0051                     i1l2888:	
  4014                           	
  4015  0051                     i1l8389:	
  4016                           ;infrared.c: 43: else if (adcVal < 190 && adcVal >= 96)
  4017  0051  3000               	movlw	high(0BEh)
  4018  0052  024D               	subwf	(_adcVal+1),w	;volatile
  4019  0053  30BE               	movlw	low(0BEh)
  4020  0054  1903               	skipnz
  4021  0055  024C               	subwf	(_adcVal),w	;volatile
  4022  0056  1803               	skipnc
  4023  0057  2859               	goto	u341_21
  4024  0058  285A               	goto	u341_20
  4025  0059                     u341_21:
  4026  0059  287D               	goto	i1l8395
  4027  005A                     u341_20:
  4028                           	
  4029  005A                     i1l8391:	
  4030  005A  3000               	movlw	high(060h)
  4031  005B  024D               	subwf	(_adcVal+1),w	;volatile
  4032  005C  3060               	movlw	low(060h)
  4033  005D  1903               	skipnz
  4034  005E  024C               	subwf	(_adcVal),w	;volatile
  4035  005F  1C03               	skipc
  4036  0060  2862               	goto	u342_21
  4037  0061  2863               	goto	u342_20
  4038  0062                     u342_21:
  4039  0062  287D               	goto	i1l8395
  4040  0063                     u342_20:
  4041                           	line	45
  4042                           	
  4043  0063                     i1l8393:	
  4044                           ;infrared.c: 44: {
  4045                           ;infrared.c: 45: distance = 30+ (adcVal%100) ;
  4046  0063  3064               	movlw	low(064h)
  4047  0064  00F8               	movwf	(?___lwmod)
  4048  0065  3000               	movlw	high(064h)
  4049  0066  00F9               	movwf	((?___lwmod))+1
  4050  0067  084D               	movf	(_adcVal+1),w	;volatile
  4051  0068  01FB               	clrf	1+(?___lwmod)+02h
  4052  0069  07FB               	addwf	1+(?___lwmod)+02h
  4053  006A  084C               	movf	(_adcVal),w	;volatile
  4054  006B  01FA               	clrf	0+(?___lwmod)+02h
  4055  006C  07FA               	addwf	0+(?___lwmod)+02h
  4056                           
  4057  006D  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4058  0072  0878               	movf	(0+(?___lwmod)),w
  4059  0073  3E1E               	addlw	low(01Eh)
  4060  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  4061  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  4062  0076  00CE               	movwf	(_distance)	;volatile
  4063  0077  0879               	movf	(1+(?___lwmod)),w
  4064  0078  1803               	skipnc
  4065  0079  3E01               	addlw	1
  4066  007A  3E00               	addlw	high(01Eh)
  4067  007B  00CF               	movwf	1+(_distance)	;volatile
  4068                           	line	46
  4069                           ;infrared.c: 46: }
  4070  007C  2A38               	goto	i1l2911
  4071                           	line	47
  4072                           	
  4073  007D                     i1l2890:	
  4074                           	
  4075  007D                     i1l8395:	
  4076                           ;infrared.c: 47: else if (adcVal < 190 && adcVal >= 96)
  4077  007D  3000               	movlw	high(0BEh)
  4078  007E  024D               	subwf	(_adcVal+1),w	;volatile
  4079  007F  30BE               	movlw	low(0BEh)
  4080  0080  1903               	skipnz
  4081  0081  024C               	subwf	(_adcVal),w	;volatile
  4082  0082  1803               	skipnc
  4083  0083  2885               	goto	u343_21
  4084  0084  2886               	goto	u343_20
  4085  0085                     u343_21:
  4086  0085  28A9               	goto	i1l8401
  4087  0086                     u343_20:
  4088                           	
  4089  0086                     i1l8397:	
  4090  0086  3000               	movlw	high(060h)
  4091  0087  024D               	subwf	(_adcVal+1),w	;volatile
  4092  0088  3060               	movlw	low(060h)
  4093  0089  1903               	skipnz
  4094  008A  024C               	subwf	(_adcVal),w	;volatile
  4095  008B  1C03               	skipc
  4096  008C  288E               	goto	u344_21
  4097  008D  288F               	goto	u344_20
  4098  008E                     u344_21:
  4099  008E  28A9               	goto	i1l8401
  4100  008F                     u344_20:
  4101                           	line	49
  4102                           	
  4103  008F                     i1l8399:	
  4104                           ;infrared.c: 48: {
  4105                           ;infrared.c: 49: distance = 40+ (adcVal%100) ;
  4106  008F  3064               	movlw	low(064h)
  4107  0090  00F8               	movwf	(?___lwmod)
  4108  0091  3000               	movlw	high(064h)
  4109  0092  00F9               	movwf	((?___lwmod))+1
  4110  0093  084D               	movf	(_adcVal+1),w	;volatile
  4111  0094  01FB               	clrf	1+(?___lwmod)+02h
  4112  0095  07FB               	addwf	1+(?___lwmod)+02h
  4113  0096  084C               	movf	(_adcVal),w	;volatile
  4114  0097  01FA               	clrf	0+(?___lwmod)+02h
  4115  0098  07FA               	addwf	0+(?___lwmod)+02h
  4116                           
  4117  0099  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4118  009E  0878               	movf	(0+(?___lwmod)),w
  4119  009F  3E28               	addlw	low(028h)
  4120  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4121  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4122  00A2  00CE               	movwf	(_distance)	;volatile
  4123  00A3  0879               	movf	(1+(?___lwmod)),w
  4124  00A4  1803               	skipnc
  4125  00A5  3E01               	addlw	1
  4126  00A6  3E00               	addlw	high(028h)
  4127  00A7  00CF               	movwf	1+(_distance)	;volatile
  4128                           	line	50
  4129                           ;infrared.c: 50: }
  4130  00A8  2A38               	goto	i1l2911
  4131                           	line	51
  4132                           	
  4133  00A9                     i1l2892:	
  4134                           	
  4135  00A9                     i1l8401:	
  4136                           ;infrared.c: 51: else if (adcVal < 115 && adcVal >= 96)
  4137  00A9  3000               	movlw	high(073h)
  4138  00AA  024D               	subwf	(_adcVal+1),w	;volatile
  4139  00AB  3073               	movlw	low(073h)
  4140  00AC  1903               	skipnz
  4141  00AD  024C               	subwf	(_adcVal),w	;volatile
  4142  00AE  1803               	skipnc
  4143  00AF  28B1               	goto	u345_21
  4144  00B0  28B2               	goto	u345_20
  4145  00B1                     u345_21:
  4146  00B1  28D5               	goto	i1l8407
  4147  00B2                     u345_20:
  4148                           	
  4149  00B2                     i1l8403:	
  4150  00B2  3000               	movlw	high(060h)
  4151  00B3  024D               	subwf	(_adcVal+1),w	;volatile
  4152  00B4  3060               	movlw	low(060h)
  4153  00B5  1903               	skipnz
  4154  00B6  024C               	subwf	(_adcVal),w	;volatile
  4155  00B7  1C03               	skipc
  4156  00B8  28BA               	goto	u346_21
  4157  00B9  28BB               	goto	u346_20
  4158  00BA                     u346_21:
  4159  00BA  28D5               	goto	i1l8407
  4160  00BB                     u346_20:
  4161                           	line	53
  4162                           	
  4163  00BB                     i1l8405:	
  4164                           ;infrared.c: 52: {
  4165                           ;infrared.c: 53: distance = 50+ (adcVal%100) ;
  4166  00BB  3064               	movlw	low(064h)
  4167  00BC  00F8               	movwf	(?___lwmod)
  4168  00BD  3000               	movlw	high(064h)
  4169  00BE  00F9               	movwf	((?___lwmod))+1
  4170  00BF  084D               	movf	(_adcVal+1),w	;volatile
  4171  00C0  01FB               	clrf	1+(?___lwmod)+02h
  4172  00C1  07FB               	addwf	1+(?___lwmod)+02h
  4173  00C2  084C               	movf	(_adcVal),w	;volatile
  4174  00C3  01FA               	clrf	0+(?___lwmod)+02h
  4175  00C4  07FA               	addwf	0+(?___lwmod)+02h
  4176                           
  4177  00C5  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4178  00CA  0878               	movf	(0+(?___lwmod)),w
  4179  00CB  3E32               	addlw	low(032h)
  4180  00CC  1283               	bcf	status, 5	;RP0=0, select bank0
  4181  00CD  1303               	bcf	status, 6	;RP1=0, select bank0
  4182  00CE  00CE               	movwf	(_distance)	;volatile
  4183  00CF  0879               	movf	(1+(?___lwmod)),w
  4184  00D0  1803               	skipnc
  4185  00D1  3E01               	addlw	1
  4186  00D2  3E00               	addlw	high(032h)
  4187  00D3  00CF               	movwf	1+(_distance)	;volatile
  4188                           	line	54
  4189                           ;infrared.c: 54: }
  4190  00D4  2A38               	goto	i1l2911
  4191                           	line	55
  4192                           	
  4193  00D5                     i1l2894:	
  4194                           	
  4195  00D5                     i1l8407:	
  4196                           ;infrared.c: 55: else if (adcVal < 96 && adcVal >= 82)
  4197  00D5  3000               	movlw	high(060h)
  4198  00D6  024D               	subwf	(_adcVal+1),w	;volatile
  4199  00D7  3060               	movlw	low(060h)
  4200  00D8  1903               	skipnz
  4201  00D9  024C               	subwf	(_adcVal),w	;volatile
  4202  00DA  1803               	skipnc
  4203  00DB  28DD               	goto	u347_21
  4204  00DC  28DE               	goto	u347_20
  4205  00DD                     u347_21:
  4206  00DD  2901               	goto	i1l8413
  4207  00DE                     u347_20:
  4208                           	
  4209  00DE                     i1l8409:	
  4210  00DE  3000               	movlw	high(052h)
  4211  00DF  024D               	subwf	(_adcVal+1),w	;volatile
  4212  00E0  3052               	movlw	low(052h)
  4213  00E1  1903               	skipnz
  4214  00E2  024C               	subwf	(_adcVal),w	;volatile
  4215  00E3  1C03               	skipc
  4216  00E4  28E6               	goto	u348_21
  4217  00E5  28E7               	goto	u348_20
  4218  00E6                     u348_21:
  4219  00E6  2901               	goto	i1l8413
  4220  00E7                     u348_20:
  4221                           	line	57
  4222                           	
  4223  00E7                     i1l8411:	
  4224                           ;infrared.c: 56: {
  4225                           ;infrared.c: 57: distance = 60+ (adcVal%100) ;
  4226  00E7  3064               	movlw	low(064h)
  4227  00E8  00F8               	movwf	(?___lwmod)
  4228  00E9  3000               	movlw	high(064h)
  4229  00EA  00F9               	movwf	((?___lwmod))+1
  4230  00EB  084D               	movf	(_adcVal+1),w	;volatile
  4231  00EC  01FB               	clrf	1+(?___lwmod)+02h
  4232  00ED  07FB               	addwf	1+(?___lwmod)+02h
  4233  00EE  084C               	movf	(_adcVal),w	;volatile
  4234  00EF  01FA               	clrf	0+(?___lwmod)+02h
  4235  00F0  07FA               	addwf	0+(?___lwmod)+02h
  4236                           
  4237  00F1  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4238  00F6  0878               	movf	(0+(?___lwmod)),w
  4239  00F7  3E3C               	addlw	low(03Ch)
  4240  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4241  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4242  00FA  00CE               	movwf	(_distance)	;volatile
  4243  00FB  0879               	movf	(1+(?___lwmod)),w
  4244  00FC  1803               	skipnc
  4245  00FD  3E01               	addlw	1
  4246  00FE  3E00               	addlw	high(03Ch)
  4247  00FF  00CF               	movwf	1+(_distance)	;volatile
  4248                           	line	58
  4249                           ;infrared.c: 58: }
  4250  0100  2A38               	goto	i1l2911
  4251                           	line	59
  4252                           	
  4253  0101                     i1l2896:	
  4254                           	
  4255  0101                     i1l8413:	
  4256                           ;infrared.c: 59: else if (adcVal < 82 && adcVal >= 70)
  4257  0101  3000               	movlw	high(052h)
  4258  0102  024D               	subwf	(_adcVal+1),w	;volatile
  4259  0103  3052               	movlw	low(052h)
  4260  0104  1903               	skipnz
  4261  0105  024C               	subwf	(_adcVal),w	;volatile
  4262  0106  1803               	skipnc
  4263  0107  2909               	goto	u349_21
  4264  0108  290A               	goto	u349_20
  4265  0109                     u349_21:
  4266  0109  292D               	goto	i1l8419
  4267  010A                     u349_20:
  4268                           	
  4269  010A                     i1l8415:	
  4270  010A  3000               	movlw	high(046h)
  4271  010B  024D               	subwf	(_adcVal+1),w	;volatile
  4272  010C  3046               	movlw	low(046h)
  4273  010D  1903               	skipnz
  4274  010E  024C               	subwf	(_adcVal),w	;volatile
  4275  010F  1C03               	skipc
  4276  0110  2912               	goto	u350_21
  4277  0111  2913               	goto	u350_20
  4278  0112                     u350_21:
  4279  0112  292D               	goto	i1l8419
  4280  0113                     u350_20:
  4281                           	line	61
  4282                           	
  4283  0113                     i1l8417:	
  4284                           ;infrared.c: 60: {
  4285                           ;infrared.c: 61: distance = 70+ (adcVal%100) ;
  4286  0113  3064               	movlw	low(064h)
  4287  0114  00F8               	movwf	(?___lwmod)
  4288  0115  3000               	movlw	high(064h)
  4289  0116  00F9               	movwf	((?___lwmod))+1
  4290  0117  084D               	movf	(_adcVal+1),w	;volatile
  4291  0118  01FB               	clrf	1+(?___lwmod)+02h
  4292  0119  07FB               	addwf	1+(?___lwmod)+02h
  4293  011A  084C               	movf	(_adcVal),w	;volatile
  4294  011B  01FA               	clrf	0+(?___lwmod)+02h
  4295  011C  07FA               	addwf	0+(?___lwmod)+02h
  4296                           
  4297  011D  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4298  0122  0878               	movf	(0+(?___lwmod)),w
  4299  0123  3E46               	addlw	low(046h)
  4300  0124  1283               	bcf	status, 5	;RP0=0, select bank0
  4301  0125  1303               	bcf	status, 6	;RP1=0, select bank0
  4302  0126  00CE               	movwf	(_distance)	;volatile
  4303  0127  0879               	movf	(1+(?___lwmod)),w
  4304  0128  1803               	skipnc
  4305  0129  3E01               	addlw	1
  4306  012A  3E00               	addlw	high(046h)
  4307  012B  00CF               	movwf	1+(_distance)	;volatile
  4308                           	line	62
  4309                           ;infrared.c: 62: }
  4310  012C  2A38               	goto	i1l2911
  4311                           	line	63
  4312                           	
  4313  012D                     i1l2898:	
  4314                           	
  4315  012D                     i1l8419:	
  4316                           ;infrared.c: 63: else if (adcVal < 70 && adcVal >= 64)
  4317  012D  3000               	movlw	high(046h)
  4318  012E  024D               	subwf	(_adcVal+1),w	;volatile
  4319  012F  3046               	movlw	low(046h)
  4320  0130  1903               	skipnz
  4321  0131  024C               	subwf	(_adcVal),w	;volatile
  4322  0132  1803               	skipnc
  4323  0133  2935               	goto	u351_21
  4324  0134  2936               	goto	u351_20
  4325  0135                     u351_21:
  4326  0135  2959               	goto	i1l8425
  4327  0136                     u351_20:
  4328                           	
  4329  0136                     i1l8421:	
  4330  0136  3000               	movlw	high(040h)
  4331  0137  024D               	subwf	(_adcVal+1),w	;volatile
  4332  0138  3040               	movlw	low(040h)
  4333  0139  1903               	skipnz
  4334  013A  024C               	subwf	(_adcVal),w	;volatile
  4335  013B  1C03               	skipc
  4336  013C  293E               	goto	u352_21
  4337  013D  293F               	goto	u352_20
  4338  013E                     u352_21:
  4339  013E  2959               	goto	i1l8425
  4340  013F                     u352_20:
  4341                           	line	65
  4342                           	
  4343  013F                     i1l8423:	
  4344                           ;infrared.c: 64: {
  4345                           ;infrared.c: 65: distance = 80+ (adcVal%100) ;
  4346  013F  3064               	movlw	low(064h)
  4347  0140  00F8               	movwf	(?___lwmod)
  4348  0141  3000               	movlw	high(064h)
  4349  0142  00F9               	movwf	((?___lwmod))+1
  4350  0143  084D               	movf	(_adcVal+1),w	;volatile
  4351  0144  01FB               	clrf	1+(?___lwmod)+02h
  4352  0145  07FB               	addwf	1+(?___lwmod)+02h
  4353  0146  084C               	movf	(_adcVal),w	;volatile
  4354  0147  01FA               	clrf	0+(?___lwmod)+02h
  4355  0148  07FA               	addwf	0+(?___lwmod)+02h
  4356                           
  4357  0149  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4358  014E  0878               	movf	(0+(?___lwmod)),w
  4359  014F  3E50               	addlw	low(050h)
  4360  0150  1283               	bcf	status, 5	;RP0=0, select bank0
  4361  0151  1303               	bcf	status, 6	;RP1=0, select bank0
  4362  0152  00CE               	movwf	(_distance)	;volatile
  4363  0153  0879               	movf	(1+(?___lwmod)),w
  4364  0154  1803               	skipnc
  4365  0155  3E01               	addlw	1
  4366  0156  3E00               	addlw	high(050h)
  4367  0157  00CF               	movwf	1+(_distance)	;volatile
  4368                           	line	66
  4369                           ;infrared.c: 66: }
  4370  0158  2A38               	goto	i1l2911
  4371                           	line	67
  4372                           	
  4373  0159                     i1l2900:	
  4374                           	
  4375  0159                     i1l8425:	
  4376                           ;infrared.c: 67: else if (adcVal < 64 && adcVal >= 56)
  4377  0159  3000               	movlw	high(040h)
  4378  015A  024D               	subwf	(_adcVal+1),w	;volatile
  4379  015B  3040               	movlw	low(040h)
  4380  015C  1903               	skipnz
  4381  015D  024C               	subwf	(_adcVal),w	;volatile
  4382  015E  1803               	skipnc
  4383  015F  2961               	goto	u353_21
  4384  0160  2962               	goto	u353_20
  4385  0161                     u353_21:
  4386  0161  2985               	goto	i1l8431
  4387  0162                     u353_20:
  4388                           	
  4389  0162                     i1l8427:	
  4390  0162  3000               	movlw	high(038h)
  4391  0163  024D               	subwf	(_adcVal+1),w	;volatile
  4392  0164  3038               	movlw	low(038h)
  4393  0165  1903               	skipnz
  4394  0166  024C               	subwf	(_adcVal),w	;volatile
  4395  0167  1C03               	skipc
  4396  0168  296A               	goto	u354_21
  4397  0169  296B               	goto	u354_20
  4398  016A                     u354_21:
  4399  016A  2985               	goto	i1l8431
  4400  016B                     u354_20:
  4401                           	line	69
  4402                           	
  4403  016B                     i1l8429:	
  4404                           ;infrared.c: 68: {
  4405                           ;infrared.c: 69: distance = 90+ (adcVal%100) ;
  4406  016B  3064               	movlw	low(064h)
  4407  016C  00F8               	movwf	(?___lwmod)
  4408  016D  3000               	movlw	high(064h)
  4409  016E  00F9               	movwf	((?___lwmod))+1
  4410  016F  084D               	movf	(_adcVal+1),w	;volatile
  4411  0170  01FB               	clrf	1+(?___lwmod)+02h
  4412  0171  07FB               	addwf	1+(?___lwmod)+02h
  4413  0172  084C               	movf	(_adcVal),w	;volatile
  4414  0173  01FA               	clrf	0+(?___lwmod)+02h
  4415  0174  07FA               	addwf	0+(?___lwmod)+02h
  4416                           
  4417  0175  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4418  017A  0878               	movf	(0+(?___lwmod)),w
  4419  017B  3E5A               	addlw	low(05Ah)
  4420  017C  1283               	bcf	status, 5	;RP0=0, select bank0
  4421  017D  1303               	bcf	status, 6	;RP1=0, select bank0
  4422  017E  00CE               	movwf	(_distance)	;volatile
  4423  017F  0879               	movf	(1+(?___lwmod)),w
  4424  0180  1803               	skipnc
  4425  0181  3E01               	addlw	1
  4426  0182  3E00               	addlw	high(05Ah)
  4427  0183  00CF               	movwf	1+(_distance)	;volatile
  4428                           	line	70
  4429                           ;infrared.c: 70: }
  4430  0184  2A38               	goto	i1l2911
  4431                           	line	71
  4432                           	
  4433  0185                     i1l2902:	
  4434                           	
  4435  0185                     i1l8431:	
  4436                           ;infrared.c: 71: else if (adcVal < 56 && adcVal >= 45)
  4437  0185  3000               	movlw	high(038h)
  4438  0186  024D               	subwf	(_adcVal+1),w	;volatile
  4439  0187  3038               	movlw	low(038h)
  4440  0188  1903               	skipnz
  4441  0189  024C               	subwf	(_adcVal),w	;volatile
  4442  018A  1803               	skipnc
  4443  018B  298D               	goto	u355_21
  4444  018C  298E               	goto	u355_20
  4445  018D                     u355_21:
  4446  018D  29B1               	goto	i1l8437
  4447  018E                     u355_20:
  4448                           	
  4449  018E                     i1l8433:	
  4450  018E  3000               	movlw	high(02Dh)
  4451  018F  024D               	subwf	(_adcVal+1),w	;volatile
  4452  0190  302D               	movlw	low(02Dh)
  4453  0191  1903               	skipnz
  4454  0192  024C               	subwf	(_adcVal),w	;volatile
  4455  0193  1C03               	skipc
  4456  0194  2996               	goto	u356_21
  4457  0195  2997               	goto	u356_20
  4458  0196                     u356_21:
  4459  0196  29B1               	goto	i1l8437
  4460  0197                     u356_20:
  4461                           	line	73
  4462                           	
  4463  0197                     i1l8435:	
  4464                           ;infrared.c: 72: {
  4465                           ;infrared.c: 73: distance = 100+ (adcVal%100) ;
  4466  0197  3064               	movlw	low(064h)
  4467  0198  00F8               	movwf	(?___lwmod)
  4468  0199  3000               	movlw	high(064h)
  4469  019A  00F9               	movwf	((?___lwmod))+1
  4470  019B  084D               	movf	(_adcVal+1),w	;volatile
  4471  019C  01FB               	clrf	1+(?___lwmod)+02h
  4472  019D  07FB               	addwf	1+(?___lwmod)+02h
  4473  019E  084C               	movf	(_adcVal),w	;volatile
  4474  019F  01FA               	clrf	0+(?___lwmod)+02h
  4475  01A0  07FA               	addwf	0+(?___lwmod)+02h
  4476                           
  4477  01A1  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4478  01A6  0878               	movf	(0+(?___lwmod)),w
  4479  01A7  3E64               	addlw	low(064h)
  4480  01A8  1283               	bcf	status, 5	;RP0=0, select bank0
  4481  01A9  1303               	bcf	status, 6	;RP1=0, select bank0
  4482  01AA  00CE               	movwf	(_distance)	;volatile
  4483  01AB  0879               	movf	(1+(?___lwmod)),w
  4484  01AC  1803               	skipnc
  4485  01AD  3E01               	addlw	1
  4486  01AE  3E00               	addlw	high(064h)
  4487  01AF  00CF               	movwf	1+(_distance)	;volatile
  4488                           	line	74
  4489                           ;infrared.c: 74: }
  4490  01B0  2A38               	goto	i1l2911
  4491                           	line	75
  4492                           	
  4493  01B1                     i1l2904:	
  4494                           	
  4495  01B1                     i1l8437:	
  4496                           ;infrared.c: 75: else if (adcVal < 45 && adcVal >= 40)
  4497  01B1  3000               	movlw	high(02Dh)
  4498  01B2  024D               	subwf	(_adcVal+1),w	;volatile
  4499  01B3  302D               	movlw	low(02Dh)
  4500  01B4  1903               	skipnz
  4501  01B5  024C               	subwf	(_adcVal),w	;volatile
  4502  01B6  1803               	skipnc
  4503  01B7  29B9               	goto	u357_21
  4504  01B8  29BA               	goto	u357_20
  4505  01B9                     u357_21:
  4506  01B9  29DD               	goto	i1l8443
  4507  01BA                     u357_20:
  4508                           	
  4509  01BA                     i1l8439:	
  4510  01BA  3000               	movlw	high(028h)
  4511  01BB  024D               	subwf	(_adcVal+1),w	;volatile
  4512  01BC  3028               	movlw	low(028h)
  4513  01BD  1903               	skipnz
  4514  01BE  024C               	subwf	(_adcVal),w	;volatile
  4515  01BF  1C03               	skipc
  4516  01C0  29C2               	goto	u358_21
  4517  01C1  29C3               	goto	u358_20
  4518  01C2                     u358_21:
  4519  01C2  29DD               	goto	i1l8443
  4520  01C3                     u358_20:
  4521                           	line	77
  4522                           	
  4523  01C3                     i1l8441:	
  4524                           ;infrared.c: 76: {
  4525                           ;infrared.c: 77: distance = 110+ (adcVal%100) ;
  4526  01C3  3064               	movlw	low(064h)
  4527  01C4  00F8               	movwf	(?___lwmod)
  4528  01C5  3000               	movlw	high(064h)
  4529  01C6  00F9               	movwf	((?___lwmod))+1
  4530  01C7  084D               	movf	(_adcVal+1),w	;volatile
  4531  01C8  01FB               	clrf	1+(?___lwmod)+02h
  4532  01C9  07FB               	addwf	1+(?___lwmod)+02h
  4533  01CA  084C               	movf	(_adcVal),w	;volatile
  4534  01CB  01FA               	clrf	0+(?___lwmod)+02h
  4535  01CC  07FA               	addwf	0+(?___lwmod)+02h
  4536                           
  4537  01CD  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4538  01D2  0878               	movf	(0+(?___lwmod)),w
  4539  01D3  3E6E               	addlw	low(06Eh)
  4540  01D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4541  01D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4542  01D6  00CE               	movwf	(_distance)	;volatile
  4543  01D7  0879               	movf	(1+(?___lwmod)),w
  4544  01D8  1803               	skipnc
  4545  01D9  3E01               	addlw	1
  4546  01DA  3E00               	addlw	high(06Eh)
  4547  01DB  00CF               	movwf	1+(_distance)	;volatile
  4548                           	line	78
  4549                           ;infrared.c: 78: }
  4550  01DC  2A38               	goto	i1l2911
  4551                           	line	79
  4552                           	
  4553  01DD                     i1l2906:	
  4554                           	
  4555  01DD                     i1l8443:	
  4556                           ;infrared.c: 79: else if (adcVal < 40 && adcVal >= 33)
  4557  01DD  3000               	movlw	high(028h)
  4558  01DE  024D               	subwf	(_adcVal+1),w	;volatile
  4559  01DF  3028               	movlw	low(028h)
  4560  01E0  1903               	skipnz
  4561  01E1  024C               	subwf	(_adcVal),w	;volatile
  4562  01E2  1803               	skipnc
  4563  01E3  29E5               	goto	u359_21
  4564  01E4  29E6               	goto	u359_20
  4565  01E5                     u359_21:
  4566  01E5  2A09               	goto	i1l8449
  4567  01E6                     u359_20:
  4568                           	
  4569  01E6                     i1l8445:	
  4570  01E6  3000               	movlw	high(021h)
  4571  01E7  024D               	subwf	(_adcVal+1),w	;volatile
  4572  01E8  3021               	movlw	low(021h)
  4573  01E9  1903               	skipnz
  4574  01EA  024C               	subwf	(_adcVal),w	;volatile
  4575  01EB  1C03               	skipc
  4576  01EC  29EE               	goto	u360_21
  4577  01ED  29EF               	goto	u360_20
  4578  01EE                     u360_21:
  4579  01EE  2A09               	goto	i1l8449
  4580  01EF                     u360_20:
  4581                           	line	81
  4582                           	
  4583  01EF                     i1l8447:	
  4584                           ;infrared.c: 80: {
  4585                           ;infrared.c: 81: distance = 120+ (adcVal%100) ;
  4586  01EF  3064               	movlw	low(064h)
  4587  01F0  00F8               	movwf	(?___lwmod)
  4588  01F1  3000               	movlw	high(064h)
  4589  01F2  00F9               	movwf	((?___lwmod))+1
  4590  01F3  084D               	movf	(_adcVal+1),w	;volatile
  4591  01F4  01FB               	clrf	1+(?___lwmod)+02h
  4592  01F5  07FB               	addwf	1+(?___lwmod)+02h
  4593  01F6  084C               	movf	(_adcVal),w	;volatile
  4594  01F7  01FA               	clrf	0+(?___lwmod)+02h
  4595  01F8  07FA               	addwf	0+(?___lwmod)+02h
  4596                           
  4597  01F9  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4598  01FE  0878               	movf	(0+(?___lwmod)),w
  4599  01FF  3E78               	addlw	low(078h)
  4600  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  4601  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  4602  0202  00CE               	movwf	(_distance)	;volatile
  4603  0203  0879               	movf	(1+(?___lwmod)),w
  4604  0204  1803               	skipnc
  4605  0205  3E01               	addlw	1
  4606  0206  3E00               	addlw	high(078h)
  4607  0207  00CF               	movwf	1+(_distance)	;volatile
  4608                           	line	82
  4609                           ;infrared.c: 82: }
  4610  0208  2A38               	goto	i1l2911
  4611                           	line	83
  4612                           	
  4613  0209                     i1l2908:	
  4614                           	
  4615  0209                     i1l8449:	
  4616                           ;infrared.c: 83: else if (adcVal < 33 )
  4617  0209  3000               	movlw	high(021h)
  4618  020A  024D               	subwf	(_adcVal+1),w	;volatile
  4619  020B  3021               	movlw	low(021h)
  4620  020C  1903               	skipnz
  4621  020D  024C               	subwf	(_adcVal),w	;volatile
  4622  020E  1803               	skipnc
  4623  020F  2A11               	goto	u361_21
  4624  0210  2A12               	goto	u361_20
  4625  0211                     u361_21:
  4626  0211  2A38               	goto	i1l2911
  4627  0212                     u361_20:
  4628                           	line	85
  4629                           	
  4630  0212                     i1l8451:	
  4631                           ;infrared.c: 84: {
  4632                           ;infrared.c: 85: distance = 130 + (adcVal%100) ;
  4633  0212  3064               	movlw	low(064h)
  4634  0213  00F8               	movwf	(?___lwmod)
  4635  0214  3000               	movlw	high(064h)
  4636  0215  00F9               	movwf	((?___lwmod))+1
  4637  0216  084D               	movf	(_adcVal+1),w	;volatile
  4638  0217  01FB               	clrf	1+(?___lwmod)+02h
  4639  0218  07FB               	addwf	1+(?___lwmod)+02h
  4640  0219  084C               	movf	(_adcVal),w	;volatile
  4641  021A  01FA               	clrf	0+(?___lwmod)+02h
  4642  021B  07FA               	addwf	0+(?___lwmod)+02h
  4643                           
  4644  021C  120A  118A  25B8   	fcall	___lwmod
              120A  118A         
  4645  0221  0878               	movf	(0+(?___lwmod)),w
  4646  0222  3E82               	addlw	low(082h)
  4647  0223  1283               	bcf	status, 5	;RP0=0, select bank0
  4648  0224  1303               	bcf	status, 6	;RP1=0, select bank0
  4649  0225  00CE               	movwf	(_distance)	;volatile
  4650  0226  0879               	movf	(1+(?___lwmod)),w
  4651  0227  1803               	skipnc
  4652  0228  3E01               	addlw	1
  4653  0229  3E00               	addlw	high(082h)
  4654  022A  00CF               	movwf	1+(_distance)	;volatile
  4655  022B  2A38               	goto	i1l2911
  4656                           	line	86
  4657                           	
  4658  022C                     i1l2910:	
  4659  022C  2A38               	goto	i1l2911
  4660                           	line	96
  4661                           	
  4662  022D                     i1l2909:	
  4663  022D  2A38               	goto	i1l2911
  4664                           	
  4665  022E                     i1l2907:	
  4666  022E  2A38               	goto	i1l2911
  4667                           	
  4668  022F                     i1l2905:	
  4669  022F  2A38               	goto	i1l2911
  4670                           	
  4671  0230                     i1l2903:	
  4672  0230  2A38               	goto	i1l2911
  4673                           	
  4674  0231                     i1l2901:	
  4675  0231  2A38               	goto	i1l2911
  4676                           	
  4677  0232                     i1l2899:	
  4678  0232  2A38               	goto	i1l2911
  4679                           	
  4680  0233                     i1l2897:	
  4681  0233  2A38               	goto	i1l2911
  4682                           	
  4683  0234                     i1l2895:	
  4684  0234  2A38               	goto	i1l2911
  4685                           	
  4686  0235                     i1l2893:	
  4687  0235  2A38               	goto	i1l2911
  4688                           	
  4689  0236                     i1l2891:	
  4690  0236  2A38               	goto	i1l2911
  4691                           	
  4692  0237                     i1l2889:	
  4693  0237  2A38               	goto	i1l2911
  4694                           	
  4695  0238                     i1l2887:	
  4696                           	
  4697  0238                     i1l2911:	
  4698  0238  0008               	return
  4699                           	opt stack 0
  4700                           GLOBAL	__end_of_ADCconvert
  4701  0239                     	__end_of_ADCconvert:
  4702 ;; =============== function _ADCconvert ends ============
  4703                           
  4704                           	signat	_ADCconvert,88
  4705                           	global	_ReadButtons
  4706                           psect	text594,local,class=CODE,delta=2
  4707                           global __ptext594
  4708  07C0                     __ptext594:
  4709                           
  4710 ;; *************** function _ReadButtons *****************
  4711 ;; Defined at:
  4712 ;;		line 143 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      unsigned char 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    1
  4733 ;; This function calls:
  4734 ;;		_Debounce
  4735 ;; This function is called by:
  4736 ;;		_isr1
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           psect	text594
  4740                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4741                           	line	143
  4742                           	global	__size_of_ReadButtons
  4743  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  4744                           	
  4745  07C0                     _ReadButtons:	
  4746                           	opt	stack 2
  4747                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  4748                           	line	144
  4749                           	
  4750  07C0                     i1l8285:	
  4751                           ;HMI.c: 144: Debounce();
  4752  07C0  120A  118A  24D6   	fcall	_Debounce
              120A  118A         
  4753                           	line	146
  4754                           	
  4755  07C5                     i1l8287:	
  4756                           ;HMI.c: 146: if(UpPressed)
  4757  07C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4758  07C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4759  07C7  1EDF               	btfss	(_UpPressed/8),(_UpPressed)&7
  4760  07C8  2FCA               	goto	u331_21
  4761  07C9  2FCB               	goto	u331_20
  4762  07CA                     u331_21:
  4763  07CA  2FCF               	goto	i1l5113
  4764  07CB                     u331_20:
  4765                           	line	148
  4766                           	
  4767  07CB                     i1l8289:	
  4768                           ;HMI.c: 147: {
  4769                           ;HMI.c: 148: UpPressed = 0;
  4770  07CB  12DF               	bcf	(_UpPressed/8),(_UpPressed)&7
  4771                           	line	149
  4772                           	
  4773  07CC                     i1l8291:	
  4774                           ;HMI.c: 149: return 1;
  4775  07CC  3001               	movlw	(01h)
  4776  07CD  2FF1               	goto	i1l5114
  4777                           	
  4778  07CE                     i1l8293:	
  4779  07CE  2FF1               	goto	i1l5114
  4780                           	line	151
  4781                           	
  4782  07CF                     i1l5113:	
  4783                           	line	153
  4784                           ;HMI.c: 151: }
  4785                           ;HMI.c: 153: if(DownPressed)
  4786  07CF  1D5E               	btfss	(_DownPressed/8),(_DownPressed)&7
  4787  07D0  2FD2               	goto	u332_21
  4788  07D1  2FD3               	goto	u332_20
  4789  07D2                     u332_21:
  4790  07D2  2FD7               	goto	i1l5115
  4791  07D3                     u332_20:
  4792                           	line	155
  4793                           	
  4794  07D3                     i1l8295:	
  4795                           ;HMI.c: 154: {
  4796                           ;HMI.c: 155: DownPressed = 0;
  4797  07D3  115E               	bcf	(_DownPressed/8),(_DownPressed)&7
  4798                           	line	156
  4799                           	
  4800  07D4                     i1l8297:	
  4801                           ;HMI.c: 156: return 2;
  4802  07D4  3002               	movlw	(02h)
  4803  07D5  2FF1               	goto	i1l5114
  4804                           	
  4805  07D6                     i1l8299:	
  4806  07D6  2FF1               	goto	i1l5114
  4807                           	line	158
  4808                           	
  4809  07D7                     i1l5115:	
  4810                           	line	159
  4811                           ;HMI.c: 158: }
  4812                           ;HMI.c: 159: if(LeftPressed)
  4813  07D7  1E5E               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  4814  07D8  2FDA               	goto	u333_21
  4815  07D9  2FDB               	goto	u333_20
  4816  07DA                     u333_21:
  4817  07DA  2FDF               	goto	i1l5116
  4818  07DB                     u333_20:
  4819                           	line	161
  4820                           	
  4821  07DB                     i1l8301:	
  4822                           ;HMI.c: 160: {
  4823                           ;HMI.c: 161: LeftPressed = 0;
  4824  07DB  125E               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  4825                           	line	162
  4826                           	
  4827  07DC                     i1l8303:	
  4828                           ;HMI.c: 162: return 3;
  4829  07DC  3003               	movlw	(03h)
  4830  07DD  2FF1               	goto	i1l5114
  4831                           	
  4832  07DE                     i1l8305:	
  4833  07DE  2FF1               	goto	i1l5114
  4834                           	line	164
  4835                           	
  4836  07DF                     i1l5116:	
  4837                           	line	165
  4838                           ;HMI.c: 164: }
  4839                           ;HMI.c: 165: if(RightPressed)
  4840  07DF  1DDF               	btfss	(_RightPressed/8),(_RightPressed)&7
  4841  07E0  2FE2               	goto	u334_21
  4842  07E1  2FE3               	goto	u334_20
  4843  07E2                     u334_21:
  4844  07E2  2FE7               	goto	i1l5117
  4845  07E3                     u334_20:
  4846                           	line	167
  4847                           	
  4848  07E3                     i1l8307:	
  4849                           ;HMI.c: 166: {
  4850                           ;HMI.c: 167: RightPressed = 0;
  4851  07E3  11DF               	bcf	(_RightPressed/8),(_RightPressed)&7
  4852                           	line	168
  4853                           	
  4854  07E4                     i1l8309:	
  4855                           ;HMI.c: 168: return 4;
  4856  07E4  3004               	movlw	(04h)
  4857  07E5  2FF1               	goto	i1l5114
  4858                           	
  4859  07E6                     i1l8311:	
  4860  07E6  2FF1               	goto	i1l5114
  4861                           	line	170
  4862                           	
  4863  07E7                     i1l5117:	
  4864                           	line	172
  4865                           ;HMI.c: 170: }
  4866                           ;HMI.c: 172: if(CenterPressed)
  4867  07E7  1C5E               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  4868  07E8  2FEA               	goto	u335_21
  4869  07E9  2FEB               	goto	u335_20
  4870  07EA                     u335_21:
  4871  07EA  2FEF               	goto	i1l8319
  4872  07EB                     u335_20:
  4873                           	line	174
  4874                           	
  4875  07EB                     i1l8313:	
  4876                           ;HMI.c: 173: {
  4877                           ;HMI.c: 174: CenterPressed = 0;
  4878  07EB  105E               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  4879                           	line	175
  4880                           	
  4881  07EC                     i1l8315:	
  4882                           ;HMI.c: 175: return 5;
  4883  07EC  3005               	movlw	(05h)
  4884  07ED  2FF1               	goto	i1l5114
  4885                           	
  4886  07EE                     i1l8317:	
  4887  07EE  2FF1               	goto	i1l5114
  4888                           	line	177
  4889                           	
  4890  07EF                     i1l5118:	
  4891                           	line	178
  4892                           	
  4893  07EF                     i1l8319:	
  4894                           ;HMI.c: 177: }
  4895                           ;HMI.c: 178: return 0;
  4896  07EF  3000               	movlw	(0)
  4897  07F0  2FF1               	goto	i1l5114
  4898                           	
  4899  07F1                     i1l8321:	
  4900                           	line	179
  4901                           	
  4902  07F1                     i1l5114:	
  4903  07F1  0008               	return
  4904                           	opt stack 0
  4905                           GLOBAL	__end_of_ReadButtons
  4906  07F2                     	__end_of_ReadButtons:
  4907 ;; =============== function _ReadButtons ends ============
  4908                           
  4909                           	signat	_ReadButtons,89
  4910                           	global	_lcd_write_data
  4911                           psect	text595,local,class=CODE,delta=2
  4912                           global __ptext595
  4913  0E61                     __ptext595:
  4914                           
  4915 ;; *************** function _lcd_write_data *****************
  4916 ;; Defined at:
  4917 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  databyte        1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  databyte        1    2[COMMON] unsigned char 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;		None               void
  4924 ;; Registers used:
  4925 ;;		wreg
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4931 ;;      Params:         0       0       0       0       0
  4932 ;;      Locals:         1       0       0       0       0
  4933 ;;      Temps:          2       0       0       0       0
  4934 ;;      Totals:         3       0       0       0       0
  4935 ;;Total ram usage:        3 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_lcd_write_string
  4941 ;;		_lcd_write_2_digit_bcd
  4942 ;;		_lcd_write_3_digit_bcd
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           psect	text595
  4946                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4947                           	line	30
  4948                           	global	__size_of_lcd_write_data
  4949  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  4950                           	
  4951  0E61                     _lcd_write_data:	
  4952                           	opt	stack 1
  4953                           ; Regs used in _lcd_write_data: [wreg]
  4954                           ;lcd_write_data@databyte stored from wreg
  4955  0E61  00F2               	movwf	(lcd_write_data@databyte)
  4956                           	line	31
  4957                           	
  4958  0E62                     i1l8143:	
  4959                           ;lcd.c: 31: RE2 = 0;
  4960  0E62  1283               	bcf	status, 5	;RP0=0, select bank0
  4961  0E63  1303               	bcf	status, 6	;RP1=0, select bank0
  4962  0E64  1109               	bcf	(74/8),(74)&7
  4963                           	line	32
  4964                           ;lcd.c: 32: RE1 = 0;
  4965  0E65  1089               	bcf	(73/8),(73)&7
  4966                           	line	33
  4967                           ;lcd.c: 33: RE0 = 1;
  4968  0E66  1409               	bsf	(72/8),(72)&7
  4969                           	line	34
  4970                           	
  4971  0E67                     i1l8145:	
  4972                           ;lcd.c: 34: PORTD = databyte;
  4973  0E67  0872               	movf	(lcd_write_data@databyte),w
  4974  0E68  0088               	movwf	(8)	;volatile
  4975                           	line	35
  4976                           	
  4977  0E69                     i1l8147:	
  4978                           ;lcd.c: 35: RE2 = 1;
  4979  0E69  1509               	bsf	(74/8),(74)&7
  4980                           	line	36
  4981                           	
  4982  0E6A                     i1l8149:	
  4983                           ;lcd.c: 36: RE2 = 0;
  4984  0E6A  1109               	bcf	(74/8),(74)&7
  4985                           	line	37
  4986                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  4987                           	opt asmopt_off
  4988  0E6B  3007               movlw	7
  4989  0E6C  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  4990  0E6D  307D               	movlw	125
  4991  0E6E  00F0               movwf	((??_lcd_write_data+0)+0),f
  4992  0E6F                     u423_27:
  4993  0E6F  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  4994  0E70  2E6F               	goto	u423_27
  4995  0E71  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  4996  0E72  2E6F               	goto	u423_27
  4997                           opt asmopt_on
  4998                           
  4999                           	line	38
  5000                           	
  5001  0E73                     i1l1396:	
  5002  0E73  0008               	return
  5003                           	opt stack 0
  5004                           GLOBAL	__end_of_lcd_write_data
  5005  0E74                     	__end_of_lcd_write_data:
  5006 ;; =============== function _lcd_write_data ends ============
  5007                           
  5008                           	signat	_lcd_write_data,4216
  5009                           	global	_adc_read_channel
  5010                           psect	text596,local,class=CODE,delta=2
  5011                           global __ptext596
  5012  0FBF                     __ptext596:
  5013                           
  5014 ;; *************** function _adc_read_channel *****************
  5015 ;; Defined at:
  5016 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  channel         1    wreg     unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  channel         1    7[COMMON] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      unsigned char 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5030 ;;      Params:         0       0       0       0       0
  5031 ;;      Locals:         1       0       0       0       0
  5032 ;;      Temps:          1       0       0       0       0
  5033 ;;      Totals:         2       0       0       0       0
  5034 ;;Total ram usage:        2 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    1
  5037 ;; This function calls:
  5038 ;;		_adc_read
  5039 ;; This function is called by:
  5040 ;;		_readDistance
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           psect	text596
  5044                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5045                           	line	5
  5046                           	global	__size_of_adc_read_channel
  5047  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5048                           	
  5049  0FBF                     _adc_read_channel:	
  5050                           	opt	stack 0
  5051                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5052                           ;adc_read_channel@channel stored from wreg
  5053  0FBF  00F7               	movwf	(adc_read_channel@channel)
  5054                           	line	6
  5055                           	
  5056  0FC0                     i1l8117:	
  5057                           ;adc.c: 6: switch(channel)
  5058  0FC0  2FE3               	goto	i1l8125
  5059                           	line	8
  5060                           ;adc.c: 7: {
  5061                           ;adc.c: 8: case 0:
  5062                           	
  5063  0FC1                     i1l690:	
  5064                           	line	9
  5065                           ;adc.c: 9: CHS0 = 0;
  5066  0FC1  1283               	bcf	status, 5	;RP0=0, select bank0
  5067  0FC2  1303               	bcf	status, 6	;RP1=0, select bank0
  5068  0FC3  119F               	bcf	(251/8),(251)&7
  5069                           	line	10
  5070                           ;adc.c: 10: CHS1 = 0;
  5071  0FC4  121F               	bcf	(252/8),(252)&7
  5072                           	line	11
  5073                           ;adc.c: 11: CHS2 = 0;
  5074  0FC5  129F               	bcf	(253/8),(253)&7
  5075                           	line	12
  5076                           ;adc.c: 12: break;
  5077  0FC6  2FF4               	goto	i1l8127
  5078                           	line	13
  5079                           ;adc.c: 13: case 1:
  5080                           	
  5081  0FC7                     i1l692:	
  5082                           	line	14
  5083                           ;adc.c: 14: CHS0 = 1;
  5084  0FC7  1283               	bcf	status, 5	;RP0=0, select bank0
  5085  0FC8  1303               	bcf	status, 6	;RP1=0, select bank0
  5086  0FC9  159F               	bsf	(251/8),(251)&7
  5087                           	line	15
  5088                           ;adc.c: 15: CHS1 = 0;
  5089  0FCA  121F               	bcf	(252/8),(252)&7
  5090                           	line	16
  5091                           ;adc.c: 16: CHS2 = 0;
  5092  0FCB  129F               	bcf	(253/8),(253)&7
  5093                           	line	17
  5094                           ;adc.c: 17: break;
  5095  0FCC  2FF4               	goto	i1l8127
  5096                           	line	18
  5097                           ;adc.c: 18: case 2:
  5098                           	
  5099  0FCD                     i1l693:	
  5100                           	line	19
  5101                           ;adc.c: 19: CHS0 = 0;
  5102  0FCD  1283               	bcf	status, 5	;RP0=0, select bank0
  5103  0FCE  1303               	bcf	status, 6	;RP1=0, select bank0
  5104  0FCF  119F               	bcf	(251/8),(251)&7
  5105                           	line	20
  5106                           ;adc.c: 20: CHS1 = 1;
  5107  0FD0  161F               	bsf	(252/8),(252)&7
  5108                           	line	21
  5109                           ;adc.c: 21: CHS2 = 0;
  5110  0FD1  129F               	bcf	(253/8),(253)&7
  5111                           	line	22
  5112                           ;adc.c: 22: break;
  5113  0FD2  2FF4               	goto	i1l8127
  5114                           	line	23
  5115                           ;adc.c: 23: case 3:
  5116                           	
  5117  0FD3                     i1l694:	
  5118                           	line	24
  5119                           ;adc.c: 24: CHS0 = 1;
  5120  0FD3  1283               	bcf	status, 5	;RP0=0, select bank0
  5121  0FD4  1303               	bcf	status, 6	;RP1=0, select bank0
  5122  0FD5  159F               	bsf	(251/8),(251)&7
  5123                           	line	25
  5124                           ;adc.c: 25: CHS1 = 1;
  5125  0FD6  161F               	bsf	(252/8),(252)&7
  5126                           	line	26
  5127                           ;adc.c: 26: CHS2 = 0;
  5128  0FD7  129F               	bcf	(253/8),(253)&7
  5129                           	line	27
  5130                           ;adc.c: 27: break;
  5131  0FD8  2FF4               	goto	i1l8127
  5132                           	line	28
  5133                           ;adc.c: 28: case 4:
  5134                           	
  5135  0FD9                     i1l695:	
  5136                           	line	29
  5137                           ;adc.c: 29: CHS0 = 0;
  5138  0FD9  1283               	bcf	status, 5	;RP0=0, select bank0
  5139  0FDA  1303               	bcf	status, 6	;RP1=0, select bank0
  5140  0FDB  119F               	bcf	(251/8),(251)&7
  5141                           	line	30
  5142                           ;adc.c: 30: CHS1 = 0;
  5143  0FDC  121F               	bcf	(252/8),(252)&7
  5144                           	line	31
  5145                           ;adc.c: 31: CHS2 = 1;
  5146  0FDD  169F               	bsf	(253/8),(253)&7
  5147                           	line	32
  5148                           ;adc.c: 32: break;
  5149  0FDE  2FF4               	goto	i1l8127
  5150                           	line	35
  5151                           ;adc.c: 35: default:
  5152                           	
  5153  0FDF                     i1l696:	
  5154                           	line	36
  5155                           	
  5156  0FDF                     i1l8119:	
  5157                           ;adc.c: 36: return 0;
  5158  0FDF  3000               	movlw	(0)
  5159  0FE0  2FFF               	goto	i1l697
  5160                           	
  5161  0FE1                     i1l8121:	
  5162  0FE1  2FFF               	goto	i1l697
  5163                           	line	37
  5164                           	
  5165  0FE2                     i1l8123:	
  5166                           ;adc.c: 37: }
  5167  0FE2  2FF4               	goto	i1l8127
  5168                           	line	6
  5169                           	
  5170  0FE3                     i1l689:	
  5171                           	
  5172  0FE3                     i1l8125:	
  5173  0FE3  0877               	movf	(adc_read_channel@channel),w
  5174                           	; Switch size 1, requested type "space"
  5175                           ; Number of cases is 5, Range of values is 0 to 4
  5176                           ; switch strategies available:
  5177                           ; Name         Instructions Cycles
  5178                           ; simple_byte           16     9 (average)
  5179                           ; direct_byte           23     8 (fixed)
  5180                           ; jumptable            260     6 (fixed)
  5181                           ; rangetable             9     6 (fixed)
  5182                           ; spacedrange           16     9 (fixed)
  5183                           ; locatedrange           5     3 (fixed)
  5184                           ;	Chosen strategy is simple_byte
  5185                           
  5186                           	opt asmopt_off
  5187  0FE4  3A00               	xorlw	0^0	; case 0
  5188  0FE5  1903               	skipnz
  5189  0FE6  2FC1               	goto	i1l690
  5190  0FE7  3A01               	xorlw	1^0	; case 1
  5191  0FE8  1903               	skipnz
  5192  0FE9  2FC7               	goto	i1l692
  5193  0FEA  3A03               	xorlw	2^1	; case 2
  5194  0FEB  1903               	skipnz
  5195  0FEC  2FCD               	goto	i1l693
  5196  0FED  3A01               	xorlw	3^2	; case 3
  5197  0FEE  1903               	skipnz
  5198  0FEF  2FD3               	goto	i1l694
  5199  0FF0  3A07               	xorlw	4^3	; case 4
  5200  0FF1  1903               	skipnz
  5201  0FF2  2FD9               	goto	i1l695
  5202  0FF3  2FDF               	goto	i1l8119
  5203                           	opt asmopt_on
  5204                           
  5205                           	line	37
  5206                           	
  5207  0FF4                     i1l691:	
  5208                           	line	39
  5209                           	
  5210  0FF4                     i1l8127:	
  5211                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5212                           	opt asmopt_off
  5213  0FF4  3053               movlw	83
  5214  0FF5  00F6               movwf	(??_adc_read_channel+0)+0,f
  5215  0FF6                     u424_27:
  5216  0FF6  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  5217  0FF7  2FF6               	goto	u424_27
  5218                           opt asmopt_on
  5219                           
  5220                           	line	41
  5221                           	
  5222  0FF8                     i1l8129:	
  5223                           ;adc.c: 41: return adc_read();
  5224  0FF8  120A  158A  271B   	fcall	_adc_read
              120A  158A         
  5225  0FFD  0870               	movf	(0+(?_adc_read)),w
  5226  0FFE  2FFF               	goto	i1l697
  5227                           	
  5228  0FFF                     i1l8131:	
  5229                           	line	43
  5230                           	
  5231  0FFF                     i1l697:	
  5232  0FFF  0008               	return
  5233                           	opt stack 0
  5234                           GLOBAL	__end_of_adc_read_channel
  5235  1000                     	__end_of_adc_read_channel:
  5236 ;; =============== function _adc_read_channel ends ============
  5237                           
  5238                           	signat	_adc_read_channel,4217
  5239                           	global	___awmod
  5240                           psect	text597,local,class=CODE,delta=2
  5241                           global __ptext597
  5242  0552                     __ptext597:
  5243                           
  5244 ;; *************** function ___awmod *****************
  5245 ;; Defined at:
  5246 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  divisor         2    0[COMMON] int 
  5249 ;;  dividend        2    2[COMMON] int 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  sign            1    6[COMMON] unsigned char 
  5252 ;;  counter         1    5[COMMON] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  2    0[COMMON] int 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5262 ;;      Params:         4       0       0       0       0
  5263 ;;      Locals:         2       0       0       0       0
  5264 ;;      Temps:          1       0       0       0       0
  5265 ;;      Totals:         7       0       0       0       0
  5266 ;;Total ram usage:        7 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_UpdateDisplay
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           psect	text597
  5275                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5276                           	line	5
  5277                           	global	__size_of___awmod
  5278  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5279                           	
  5280  0552                     ___awmod:	
  5281                           	opt	stack 2
  5282                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5283                           	line	8
  5284                           	
  5285  0552                     i1l8737:	
  5286  0552  01F6               	clrf	(___awmod@sign)
  5287                           	line	9
  5288  0553  1FF3               	btfss	(___awmod@dividend+1),7
  5289  0554  2D56               	goto	u411_21
  5290  0555  2D57               	goto	u411_20
  5291  0556                     u411_21:
  5292  0556  2D60               	goto	i1l8741
  5293  0557                     u411_20:
  5294                           	line	10
  5295                           	
  5296  0557                     i1l8739:	
  5297  0557  09F2               	comf	(___awmod@dividend),f
  5298  0558  09F3               	comf	(___awmod@dividend+1),f
  5299  0559  0AF2               	incf	(___awmod@dividend),f
  5300  055A  1903               	skipnz
  5301  055B  0AF3               	incf	(___awmod@dividend+1),f
  5302                           	line	11
  5303  055C  01F6               	clrf	(___awmod@sign)
  5304  055D  1403               	bsf	status,0
  5305  055E  0DF6               	rlf	(___awmod@sign),f
  5306  055F  2D60               	goto	i1l8741
  5307                           	line	12
  5308                           	
  5309  0560                     i1l6065:	
  5310                           	line	13
  5311                           	
  5312  0560                     i1l8741:	
  5313  0560  1FF1               	btfss	(___awmod@divisor+1),7
  5314  0561  2D63               	goto	u412_21
  5315  0562  2D64               	goto	u412_20
  5316  0563                     u412_21:
  5317  0563  2D6A               	goto	i1l8745
  5318  0564                     u412_20:
  5319                           	line	14
  5320                           	
  5321  0564                     i1l8743:	
  5322  0564  09F0               	comf	(___awmod@divisor),f
  5323  0565  09F1               	comf	(___awmod@divisor+1),f
  5324  0566  0AF0               	incf	(___awmod@divisor),f
  5325  0567  1903               	skipnz
  5326  0568  0AF1               	incf	(___awmod@divisor+1),f
  5327  0569  2D6A               	goto	i1l8745
  5328                           	
  5329  056A                     i1l6066:	
  5330                           	line	15
  5331                           	
  5332  056A                     i1l8745:	
  5333  056A  0871               	movf	(___awmod@divisor+1),w
  5334  056B  0470               	iorwf	(___awmod@divisor),w
  5335  056C  1903               	skipnz
  5336  056D  2D6F               	goto	u413_21
  5337  056E  2D70               	goto	u413_20
  5338  056F                     u413_21:
  5339  056F  2DA6               	goto	i1l8763
  5340  0570                     u413_20:
  5341                           	line	16
  5342                           	
  5343  0570                     i1l8747:	
  5344  0570  01F5               	clrf	(___awmod@counter)
  5345  0571  1403               	bsf	status,0
  5346  0572  0DF5               	rlf	(___awmod@counter),f
  5347                           	line	17
  5348  0573  2D80               	goto	i1l8753
  5349                           	
  5350  0574                     i1l6069:	
  5351                           	line	18
  5352                           	
  5353  0574                     i1l8749:	
  5354  0574  3001               	movlw	01h
  5355                           	
  5356  0575                     u414_25:
  5357  0575  1003               	clrc
  5358  0576  0DF0               	rlf	(___awmod@divisor),f
  5359  0577  0DF1               	rlf	(___awmod@divisor+1),f
  5360  0578  3EFF               	addlw	-1
  5361  0579  1D03               	skipz
  5362  057A  2D75               	goto	u414_25
  5363                           	line	19
  5364                           	
  5365  057B                     i1l8751:	
  5366  057B  3001               	movlw	(01h)
  5367  057C  00F4               	movwf	(??___awmod+0)+0
  5368  057D  0874               	movf	(??___awmod+0)+0,w
  5369  057E  07F5               	addwf	(___awmod@counter),f
  5370  057F  2D80               	goto	i1l8753
  5371                           	line	20
  5372                           	
  5373  0580                     i1l6068:	
  5374                           	line	17
  5375                           	
  5376  0580                     i1l8753:	
  5377  0580  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  5378  0581  2D83               	goto	u415_21
  5379  0582  2D84               	goto	u415_20
  5380  0583                     u415_21:
  5381  0583  2D74               	goto	i1l8749
  5382  0584                     u415_20:
  5383  0584  2D86               	goto	i1l8755
  5384                           	
  5385  0585                     i1l6070:	
  5386  0585  2D86               	goto	i1l8755
  5387                           	line	21
  5388                           	
  5389  0586                     i1l6071:	
  5390                           	line	22
  5391                           	
  5392  0586                     i1l8755:	
  5393  0586  0871               	movf	(___awmod@divisor+1),w
  5394  0587  0273               	subwf	(___awmod@dividend+1),w
  5395  0588  1D03               	skipz
  5396  0589  2D8C               	goto	u416_25
  5397  058A  0870               	movf	(___awmod@divisor),w
  5398  058B  0272               	subwf	(___awmod@dividend),w
  5399  058C                     u416_25:
  5400  058C  1C03               	skipc
  5401  058D  2D8F               	goto	u416_21
  5402  058E  2D90               	goto	u416_20
  5403  058F                     u416_21:
  5404  058F  2D97               	goto	i1l8759
  5405  0590                     u416_20:
  5406                           	line	23
  5407                           	
  5408  0590                     i1l8757:	
  5409  0590  0870               	movf	(___awmod@divisor),w
  5410  0591  02F2               	subwf	(___awmod@dividend),f
  5411  0592  0871               	movf	(___awmod@divisor+1),w
  5412  0593  1C03               	skipc
  5413  0594  03F3               	decf	(___awmod@dividend+1),f
  5414  0595  02F3               	subwf	(___awmod@dividend+1),f
  5415  0596  2D97               	goto	i1l8759
  5416                           	
  5417  0597                     i1l6072:	
  5418                           	line	24
  5419                           	
  5420  0597                     i1l8759:	
  5421  0597  3001               	movlw	01h
  5422                           	
  5423  0598                     u417_25:
  5424  0598  1003               	clrc
  5425  0599  0CF1               	rrf	(___awmod@divisor+1),f
  5426  059A  0CF0               	rrf	(___awmod@divisor),f
  5427  059B  3EFF               	addlw	-1
  5428  059C  1D03               	skipz
  5429  059D  2D98               	goto	u417_25
  5430                           	line	25
  5431                           	
  5432  059E                     i1l8761:	
  5433  059E  3001               	movlw	low(01h)
  5434  059F  02F5               	subwf	(___awmod@counter),f
  5435  05A0  1D03               	btfss	status,2
  5436  05A1  2DA3               	goto	u418_21
  5437  05A2  2DA4               	goto	u418_20
  5438  05A3                     u418_21:
  5439  05A3  2D86               	goto	i1l8755
  5440  05A4                     u418_20:
  5441  05A4  2DA6               	goto	i1l8763
  5442                           	
  5443  05A5                     i1l6073:	
  5444  05A5  2DA6               	goto	i1l8763
  5445                           	line	26
  5446                           	
  5447  05A6                     i1l6067:	
  5448                           	line	27
  5449                           	
  5450  05A6                     i1l8763:	
  5451  05A6  0876               	movf	(___awmod@sign),w
  5452  05A7  1D03               	skipz
  5453  05A8  2DAA               	goto	u419_20
  5454  05A9  2DB0               	goto	i1l8767
  5455  05AA                     u419_20:
  5456                           	line	28
  5457                           	
  5458  05AA                     i1l8765:	
  5459  05AA  09F2               	comf	(___awmod@dividend),f
  5460  05AB  09F3               	comf	(___awmod@dividend+1),f
  5461  05AC  0AF2               	incf	(___awmod@dividend),f
  5462  05AD  1903               	skipnz
  5463  05AE  0AF3               	incf	(___awmod@dividend+1),f
  5464  05AF  2DB0               	goto	i1l8767
  5465                           	
  5466  05B0                     i1l6074:	
  5467                           	line	29
  5468                           	
  5469  05B0                     i1l8767:	
  5470  05B0  0873               	movf	(___awmod@dividend+1),w
  5471  05B1  01F1               	clrf	(?___awmod+1)
  5472  05B2  07F1               	addwf	(?___awmod+1)
  5473  05B3  0872               	movf	(___awmod@dividend),w
  5474  05B4  01F0               	clrf	(?___awmod)
  5475  05B5  07F0               	addwf	(?___awmod)
  5476                           
  5477  05B6  2DB7               	goto	i1l6075
  5478                           	
  5479  05B7                     i1l8769:	
  5480                           	line	30
  5481                           	
  5482  05B7                     i1l6075:	
  5483  05B7  0008               	return
  5484                           	opt stack 0
  5485                           GLOBAL	__end_of___awmod
  5486  05B8                     	__end_of___awmod:
  5487 ;; =============== function ___awmod ends ============
  5488                           
  5489                           	signat	___awmod,8314
  5490                           	global	___lwmod
  5491                           psect	text598,local,class=CODE,delta=2
  5492                           global __ptext598
  5493  05B8                     __ptext598:
  5494                           
  5495 ;; *************** function ___lwmod *****************
  5496 ;; Defined at:
  5497 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  divisor         2    8[COMMON] unsigned int 
  5500 ;;  dividend        2   10[COMMON] unsigned int 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  counter         1   13[COMMON] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  2    8[COMMON] unsigned int 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5512 ;;      Params:         4       0       0       0       0
  5513 ;;      Locals:         1       0       0       0       0
  5514 ;;      Temps:          1       0       0       0       0
  5515 ;;      Totals:         6       0       0       0       0
  5516 ;;Total ram usage:        6 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_isr1
  5522 ;;		_ADCconvert
  5523 ;;		_sprintf
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           psect	text598
  5527                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  5528                           	line	5
  5529                           	global	__size_of___lwmod
  5530  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  5531                           	
  5532  05B8                     ___lwmod:	
  5533                           	opt	stack 1
  5534                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5535                           	line	8
  5536                           	
  5537  05B8                     i1l8715:	
  5538  05B8  0879               	movf	(___lwmod@divisor+1),w
  5539  05B9  0478               	iorwf	(___lwmod@divisor),w
  5540  05BA  1903               	skipnz
  5541  05BB  2DBD               	goto	u405_21
  5542  05BC  2DBE               	goto	u405_20
  5543  05BD                     u405_21:
  5544  05BD  2DF4               	goto	i1l8733
  5545  05BE                     u405_20:
  5546                           	line	9
  5547                           	
  5548  05BE                     i1l8717:	
  5549  05BE  01FD               	clrf	(___lwmod@counter)
  5550  05BF  1403               	bsf	status,0
  5551  05C0  0DFD               	rlf	(___lwmod@counter),f
  5552                           	line	10
  5553  05C1  2DCE               	goto	i1l8723
  5554                           	
  5555  05C2                     i1l5875:	
  5556                           	line	11
  5557                           	
  5558  05C2                     i1l8719:	
  5559  05C2  3001               	movlw	01h
  5560                           	
  5561  05C3                     u406_25:
  5562  05C3  1003               	clrc
  5563  05C4  0DF8               	rlf	(___lwmod@divisor),f
  5564  05C5  0DF9               	rlf	(___lwmod@divisor+1),f
  5565  05C6  3EFF               	addlw	-1
  5566  05C7  1D03               	skipz
  5567  05C8  2DC3               	goto	u406_25
  5568                           	line	12
  5569                           	
  5570  05C9                     i1l8721:	
  5571  05C9  3001               	movlw	(01h)
  5572  05CA  00FC               	movwf	(??___lwmod+0)+0
  5573  05CB  087C               	movf	(??___lwmod+0)+0,w
  5574  05CC  07FD               	addwf	(___lwmod@counter),f
  5575  05CD  2DCE               	goto	i1l8723
  5576                           	line	13
  5577                           	
  5578  05CE                     i1l5874:	
  5579                           	line	10
  5580                           	
  5581  05CE                     i1l8723:	
  5582  05CE  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  5583  05CF  2DD1               	goto	u407_21
  5584  05D0  2DD2               	goto	u407_20
  5585  05D1                     u407_21:
  5586  05D1  2DC2               	goto	i1l8719
  5587  05D2                     u407_20:
  5588  05D2  2DD4               	goto	i1l8725
  5589                           	
  5590  05D3                     i1l5876:	
  5591  05D3  2DD4               	goto	i1l8725
  5592                           	line	14
  5593                           	
  5594  05D4                     i1l5877:	
  5595                           	line	15
  5596                           	
  5597  05D4                     i1l8725:	
  5598  05D4  0879               	movf	(___lwmod@divisor+1),w
  5599  05D5  027B               	subwf	(___lwmod@dividend+1),w
  5600  05D6  1D03               	skipz
  5601  05D7  2DDA               	goto	u408_25
  5602  05D8  0878               	movf	(___lwmod@divisor),w
  5603  05D9  027A               	subwf	(___lwmod@dividend),w
  5604  05DA                     u408_25:
  5605  05DA  1C03               	skipc
  5606  05DB  2DDD               	goto	u408_21
  5607  05DC  2DDE               	goto	u408_20
  5608  05DD                     u408_21:
  5609  05DD  2DE5               	goto	i1l8729
  5610  05DE                     u408_20:
  5611                           	line	16
  5612                           	
  5613  05DE                     i1l8727:	
  5614  05DE  0878               	movf	(___lwmod@divisor),w
  5615  05DF  02FA               	subwf	(___lwmod@dividend),f
  5616  05E0  0879               	movf	(___lwmod@divisor+1),w
  5617  05E1  1C03               	skipc
  5618  05E2  03FB               	decf	(___lwmod@dividend+1),f
  5619  05E3  02FB               	subwf	(___lwmod@dividend+1),f
  5620  05E4  2DE5               	goto	i1l8729
  5621                           	
  5622  05E5                     i1l5878:	
  5623                           	line	17
  5624                           	
  5625  05E5                     i1l8729:	
  5626  05E5  3001               	movlw	01h
  5627                           	
  5628  05E6                     u409_25:
  5629  05E6  1003               	clrc
  5630  05E7  0CF9               	rrf	(___lwmod@divisor+1),f
  5631  05E8  0CF8               	rrf	(___lwmod@divisor),f
  5632  05E9  3EFF               	addlw	-1
  5633  05EA  1D03               	skipz
  5634  05EB  2DE6               	goto	u409_25
  5635                           	line	18
  5636                           	
  5637  05EC                     i1l8731:	
  5638  05EC  3001               	movlw	low(01h)
  5639  05ED  02FD               	subwf	(___lwmod@counter),f
  5640  05EE  1D03               	btfss	status,2
  5641  05EF  2DF1               	goto	u410_21
  5642  05F0  2DF2               	goto	u410_20
  5643  05F1                     u410_21:
  5644  05F1  2DD4               	goto	i1l8725
  5645  05F2                     u410_20:
  5646  05F2  2DF4               	goto	i1l8733
  5647                           	
  5648  05F3                     i1l5879:	
  5649  05F3  2DF4               	goto	i1l8733
  5650                           	line	19
  5651                           	
  5652  05F4                     i1l5873:	
  5653                           	line	20
  5654                           	
  5655  05F4                     i1l8733:	
  5656  05F4  087B               	movf	(___lwmod@dividend+1),w
  5657  05F5  01F9               	clrf	(?___lwmod+1)
  5658  05F6  07F9               	addwf	(?___lwmod+1)
  5659  05F7  087A               	movf	(___lwmod@dividend),w
  5660  05F8  01F8               	clrf	(?___lwmod)
  5661  05F9  07F8               	addwf	(?___lwmod)
  5662                           
  5663  05FA  2DFB               	goto	i1l5880
  5664                           	
  5665  05FB                     i1l8735:	
  5666                           	line	21
  5667                           	
  5668  05FB                     i1l5880:	
  5669  05FB  0008               	return
  5670                           	opt stack 0
  5671                           GLOBAL	__end_of___lwmod
  5672  05FC                     	__end_of___lwmod:
  5673 ;; =============== function ___lwmod ends ============
  5674                           
  5675                           	signat	___lwmod,8314
  5676                           	global	___lwdiv
  5677                           psect	text599,local,class=CODE,delta=2
  5678                           global __ptext599
  5679  0772                     __ptext599:
  5680                           
  5681 ;; *************** function ___lwdiv *****************
  5682 ;; Defined at:
  5683 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  divisor         2    0[COMMON] unsigned int 
  5686 ;;  dividend        2    2[COMMON] unsigned int 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  quotient        2    5[COMMON] unsigned int 
  5689 ;;  counter         1    7[COMMON] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  2    0[COMMON] unsigned int 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5699 ;;      Params:         4       0       0       0       0
  5700 ;;      Locals:         3       0       0       0       0
  5701 ;;      Temps:          1       0       0       0       0
  5702 ;;      Totals:         8       0       0       0       0
  5703 ;;Total ram usage:        8 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_readAvgDistance
  5709 ;;		_sprintf
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           psect	text599
  5713                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5714                           	line	5
  5715                           	global	__size_of___lwdiv
  5716  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5717                           	
  5718  0772                     ___lwdiv:	
  5719                           	opt	stack 1
  5720                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5721                           	line	9
  5722                           	
  5723  0772                     i1l8689:	
  5724  0772  01F5               	clrf	(___lwdiv@quotient)
  5725  0773  01F6               	clrf	(___lwdiv@quotient+1)
  5726                           	line	10
  5727                           	
  5728  0774                     i1l8691:	
  5729  0774  0871               	movf	(___lwdiv@divisor+1),w
  5730  0775  0470               	iorwf	(___lwdiv@divisor),w
  5731  0776  1903               	skipnz
  5732  0777  2F79               	goto	u398_21
  5733  0778  2F7A               	goto	u398_20
  5734  0779                     u398_21:
  5735  0779  2FB8               	goto	i1l8711
  5736  077A                     u398_20:
  5737                           	line	11
  5738                           	
  5739  077A                     i1l8693:	
  5740  077A  01F7               	clrf	(___lwdiv@counter)
  5741  077B  1403               	bsf	status,0
  5742  077C  0DF7               	rlf	(___lwdiv@counter),f
  5743                           	line	12
  5744  077D  2F8A               	goto	i1l8699
  5745                           	
  5746  077E                     i1l5865:	
  5747                           	line	13
  5748                           	
  5749  077E                     i1l8695:	
  5750  077E  3001               	movlw	01h
  5751                           	
  5752  077F                     u399_25:
  5753  077F  1003               	clrc
  5754  0780  0DF0               	rlf	(___lwdiv@divisor),f
  5755  0781  0DF1               	rlf	(___lwdiv@divisor+1),f
  5756  0782  3EFF               	addlw	-1
  5757  0783  1D03               	skipz
  5758  0784  2F7F               	goto	u399_25
  5759                           	line	14
  5760                           	
  5761  0785                     i1l8697:	
  5762  0785  3001               	movlw	(01h)
  5763  0786  00F4               	movwf	(??___lwdiv+0)+0
  5764  0787  0874               	movf	(??___lwdiv+0)+0,w
  5765  0788  07F7               	addwf	(___lwdiv@counter),f
  5766  0789  2F8A               	goto	i1l8699
  5767                           	line	15
  5768                           	
  5769  078A                     i1l5864:	
  5770                           	line	12
  5771                           	
  5772  078A                     i1l8699:	
  5773  078A  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  5774  078B  2F8D               	goto	u400_21
  5775  078C  2F8E               	goto	u400_20
  5776  078D                     u400_21:
  5777  078D  2F7E               	goto	i1l8695
  5778  078E                     u400_20:
  5779  078E  2F90               	goto	i1l8701
  5780                           	
  5781  078F                     i1l5866:	
  5782  078F  2F90               	goto	i1l8701
  5783                           	line	16
  5784                           	
  5785  0790                     i1l5867:	
  5786                           	line	17
  5787                           	
  5788  0790                     i1l8701:	
  5789  0790  3001               	movlw	01h
  5790                           	
  5791  0791                     u401_25:
  5792  0791  1003               	clrc
  5793  0792  0DF5               	rlf	(___lwdiv@quotient),f
  5794  0793  0DF6               	rlf	(___lwdiv@quotient+1),f
  5795  0794  3EFF               	addlw	-1
  5796  0795  1D03               	skipz
  5797  0796  2F91               	goto	u401_25
  5798                           	line	18
  5799  0797  0871               	movf	(___lwdiv@divisor+1),w
  5800  0798  0273               	subwf	(___lwdiv@dividend+1),w
  5801  0799  1D03               	skipz
  5802  079A  2F9D               	goto	u402_25
  5803  079B  0870               	movf	(___lwdiv@divisor),w
  5804  079C  0272               	subwf	(___lwdiv@dividend),w
  5805  079D                     u402_25:
  5806  079D  1C03               	skipc
  5807  079E  2FA0               	goto	u402_21
  5808  079F  2FA1               	goto	u402_20
  5809  07A0                     u402_21:
  5810  07A0  2FA9               	goto	i1l8707
  5811  07A1                     u402_20:
  5812                           	line	19
  5813                           	
  5814  07A1                     i1l8703:	
  5815  07A1  0870               	movf	(___lwdiv@divisor),w
  5816  07A2  02F2               	subwf	(___lwdiv@dividend),f
  5817  07A3  0871               	movf	(___lwdiv@divisor+1),w
  5818  07A4  1C03               	skipc
  5819  07A5  03F3               	decf	(___lwdiv@dividend+1),f
  5820  07A6  02F3               	subwf	(___lwdiv@dividend+1),f
  5821                           	line	20
  5822                           	
  5823  07A7                     i1l8705:	
  5824  07A7  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5825  07A8  2FA9               	goto	i1l8707
  5826                           	line	21
  5827                           	
  5828  07A9                     i1l5868:	
  5829                           	line	22
  5830                           	
  5831  07A9                     i1l8707:	
  5832  07A9  3001               	movlw	01h
  5833                           	
  5834  07AA                     u403_25:
  5835  07AA  1003               	clrc
  5836  07AB  0CF1               	rrf	(___lwdiv@divisor+1),f
  5837  07AC  0CF0               	rrf	(___lwdiv@divisor),f
  5838  07AD  3EFF               	addlw	-1
  5839  07AE  1D03               	skipz
  5840  07AF  2FAA               	goto	u403_25
  5841                           	line	23
  5842                           	
  5843  07B0                     i1l8709:	
  5844  07B0  3001               	movlw	low(01h)
  5845  07B1  02F7               	subwf	(___lwdiv@counter),f
  5846  07B2  1D03               	btfss	status,2
  5847  07B3  2FB5               	goto	u404_21
  5848  07B4  2FB6               	goto	u404_20
  5849  07B5                     u404_21:
  5850  07B5  2F90               	goto	i1l8701
  5851  07B6                     u404_20:
  5852  07B6  2FB8               	goto	i1l8711
  5853                           	
  5854  07B7                     i1l5869:	
  5855  07B7  2FB8               	goto	i1l8711
  5856                           	line	24
  5857                           	
  5858  07B8                     i1l5863:	
  5859                           	line	25
  5860                           	
  5861  07B8                     i1l8711:	
  5862  07B8  0876               	movf	(___lwdiv@quotient+1),w
  5863  07B9  01F1               	clrf	(?___lwdiv+1)
  5864  07BA  07F1               	addwf	(?___lwdiv+1)
  5865  07BB  0875               	movf	(___lwdiv@quotient),w
  5866  07BC  01F0               	clrf	(?___lwdiv)
  5867  07BD  07F0               	addwf	(?___lwdiv)
  5868                           
  5869  07BE  2FBF               	goto	i1l5870
  5870                           	
  5871  07BF                     i1l8713:	
  5872                           	line	26
  5873                           	
  5874  07BF                     i1l5870:	
  5875  07BF  0008               	return
  5876                           	opt stack 0
  5877                           GLOBAL	__end_of___lwdiv
  5878  07C0                     	__end_of___lwdiv:
  5879 ;; =============== function ___lwdiv ends ============
  5880                           
  5881                           	signat	___lwdiv,8314
  5882                           	global	_Debounce
  5883                           psect	text600,local,class=CODE,delta=2
  5884                           global __ptext600
  5885  04D6                     __ptext600:
  5886                           
  5887 ;; *************** function _Debounce *****************
  5888 ;; Defined at:
  5889 ;;		line 63 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;		None               void
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5903 ;;      Params:         0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0
  5905 ;;      Temps:          1       0       0       0       0
  5906 ;;      Totals:         1       0       0       0       0
  5907 ;;Total ram usage:        1 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_ReadButtons
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           psect	text600
  5916                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  5917                           	line	63
  5918                           	global	__size_of_Debounce
  5919  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  5920                           	
  5921  04D6                     _Debounce:	
  5922                           	opt	stack 2
  5923                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  5924                           	line	65
  5925                           	
  5926  04D6                     i1l8589:	
  5927                           ;HMI.c: 65: if(!RB2)
  5928  04D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5929  04D7  1303               	bcf	status, 6	;RP1=0, select bank0
  5930  04D8  1906               	btfsc	(50/8),(50)&7
  5931  04D9  2CDB               	goto	u375_21
  5932  04DA  2CDC               	goto	u375_20
  5933  04DB                     u375_21:
  5934  04DB  2CEE               	goto	i1l5095
  5935  04DC                     u375_20:
  5936                           	line	67
  5937                           	
  5938  04DC                     i1l8591:	
  5939                           ;HMI.c: 66: {
  5940                           ;HMI.c: 67: UpDebounceCount++;
  5941  04DC  3001               	movlw	(01h)
  5942  04DD  00F0               	movwf	(??_Debounce+0)+0
  5943  04DE  0870               	movf	(??_Debounce+0)+0,w
  5944  04DF  07D6               	addwf	(_UpDebounceCount),f	;volatile
  5945                           	line	68
  5946                           	
  5947  04E0                     i1l8593:	
  5948                           ;HMI.c: 68: if(UpDebounceCount >= 10 & UpReleased)
  5949  04E0  300A               	movlw	(0Ah)
  5950  04E1  0256               	subwf	(_UpDebounceCount),w	;volatile
  5951  04E2  1C03               	skipc
  5952  04E3  2CE5               	goto	u376_21
  5953  04E4  2CE6               	goto	u376_20
  5954  04E5                     u376_21:
  5955  04E5  2CF0               	goto	i1l5097
  5956  04E6                     u376_20:
  5957                           	
  5958  04E6                     i1l8595:	
  5959  04E6  1F5F               	btfss	(_UpReleased/8),(_UpReleased)&7
  5960  04E7  2CE9               	goto	u377_21
  5961  04E8  2CEA               	goto	u377_20
  5962  04E9                     u377_21:
  5963  04E9  2CF0               	goto	i1l5097
  5964  04EA                     u377_20:
  5965                           	line	70
  5966                           	
  5967  04EA                     i1l8597:	
  5968                           ;HMI.c: 69: {
  5969                           ;HMI.c: 70: UpPressed = 1;
  5970  04EA  16DF               	bsf	(_UpPressed/8),(_UpPressed)&7
  5971                           	line	71
  5972                           ;HMI.c: 71: UpReleased = 0;
  5973  04EB  135F               	bcf	(_UpReleased/8),(_UpReleased)&7
  5974  04EC  2CF0               	goto	i1l5097
  5975                           	line	72
  5976                           	
  5977  04ED                     i1l5096:	
  5978                           	line	73
  5979                           ;HMI.c: 72: }
  5980                           ;HMI.c: 73: }
  5981  04ED  2CF0               	goto	i1l5097
  5982                           	line	74
  5983                           	
  5984  04EE                     i1l5095:	
  5985                           	line	76
  5986                           ;HMI.c: 74: else
  5987                           ;HMI.c: 75: {
  5988                           ;HMI.c: 76: UpDebounceCount = 0;
  5989  04EE  01D6               	clrf	(_UpDebounceCount)	;volatile
  5990                           	line	77
  5991                           ;HMI.c: 77: UpReleased = 1;
  5992  04EF  175F               	bsf	(_UpReleased/8),(_UpReleased)&7
  5993                           	line	78
  5994                           	
  5995  04F0                     i1l5097:	
  5996                           	line	81
  5997                           ;HMI.c: 78: }
  5998                           ;HMI.c: 81: if(!RB3)
  5999  04F0  1986               	btfsc	(51/8),(51)&7
  6000  04F1  2CF3               	goto	u378_21
  6001  04F2  2CF4               	goto	u378_20
  6002  04F3                     u378_21:
  6003  04F3  2D06               	goto	i1l5098
  6004  04F4                     u378_20:
  6005                           	line	83
  6006                           	
  6007  04F4                     i1l8599:	
  6008                           ;HMI.c: 82: {
  6009                           ;HMI.c: 83: DownDebounceCount++;
  6010  04F4  3001               	movlw	(01h)
  6011  04F5  00F0               	movwf	(??_Debounce+0)+0
  6012  04F6  0870               	movf	(??_Debounce+0)+0,w
  6013  04F7  07D3               	addwf	(_DownDebounceCount),f	;volatile
  6014                           	line	84
  6015                           	
  6016  04F8                     i1l8601:	
  6017                           ;HMI.c: 84: if(DownDebounceCount >= 10 & DownReleased)
  6018  04F8  300A               	movlw	(0Ah)
  6019  04F9  0253               	subwf	(_DownDebounceCount),w	;volatile
  6020  04FA  1C03               	skipc
  6021  04FB  2CFD               	goto	u379_21
  6022  04FC  2CFE               	goto	u379_20
  6023  04FD                     u379_21:
  6024  04FD  2D08               	goto	i1l5100
  6025  04FE                     u379_20:
  6026                           	
  6027  04FE                     i1l8603:	
  6028  04FE  1DDE               	btfss	(_DownReleased/8),(_DownReleased)&7
  6029  04FF  2D01               	goto	u380_21
  6030  0500  2D02               	goto	u380_20
  6031  0501                     u380_21:
  6032  0501  2D08               	goto	i1l5100
  6033  0502                     u380_20:
  6034                           	line	86
  6035                           	
  6036  0502                     i1l8605:	
  6037                           ;HMI.c: 85: {
  6038                           ;HMI.c: 86: DownPressed = 1;
  6039  0502  155E               	bsf	(_DownPressed/8),(_DownPressed)&7
  6040                           	line	87
  6041                           ;HMI.c: 87: DownReleased = 0;
  6042  0503  11DE               	bcf	(_DownReleased/8),(_DownReleased)&7
  6043  0504  2D08               	goto	i1l5100
  6044                           	line	88
  6045                           	
  6046  0505                     i1l5099:	
  6047                           	line	89
  6048                           ;HMI.c: 88: }
  6049                           ;HMI.c: 89: }
  6050  0505  2D08               	goto	i1l5100
  6051                           	line	90
  6052                           	
  6053  0506                     i1l5098:	
  6054                           	line	92
  6055                           ;HMI.c: 90: else
  6056                           ;HMI.c: 91: {
  6057                           ;HMI.c: 92: DownDebounceCount = 0;
  6058  0506  01D3               	clrf	(_DownDebounceCount)	;volatile
  6059                           	line	93
  6060                           ;HMI.c: 93: DownReleased = 1;
  6061  0507  15DE               	bsf	(_DownReleased/8),(_DownReleased)&7
  6062                           	line	94
  6063                           	
  6064  0508                     i1l5100:	
  6065                           	line	96
  6066                           ;HMI.c: 94: }
  6067                           ;HMI.c: 96: if(!RB4)
  6068  0508  1A06               	btfsc	(52/8),(52)&7
  6069  0509  2D0B               	goto	u381_21
  6070  050A  2D0C               	goto	u381_20
  6071  050B                     u381_21:
  6072  050B  2D1E               	goto	i1l5101
  6073  050C                     u381_20:
  6074                           	line	98
  6075                           	
  6076  050C                     i1l8607:	
  6077                           ;HMI.c: 97: {
  6078                           ;HMI.c: 98: LeftDebounceCount++;
  6079  050C  3001               	movlw	(01h)
  6080  050D  00F0               	movwf	(??_Debounce+0)+0
  6081  050E  0870               	movf	(??_Debounce+0)+0,w
  6082  050F  07D4               	addwf	(_LeftDebounceCount),f	;volatile
  6083                           	line	99
  6084                           	
  6085  0510                     i1l8609:	
  6086                           ;HMI.c: 99: if(LeftDebounceCount >= 10 & LeftReleased)
  6087  0510  300A               	movlw	(0Ah)
  6088  0511  0254               	subwf	(_LeftDebounceCount),w	;volatile
  6089  0512  1C03               	skipc
  6090  0513  2D15               	goto	u382_21
  6091  0514  2D16               	goto	u382_20
  6092  0515                     u382_21:
  6093  0515  2D20               	goto	i1l5103
  6094  0516                     u382_20:
  6095                           	
  6096  0516                     i1l8611:	
  6097  0516  1EDE               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  6098  0517  2D19               	goto	u383_21
  6099  0518  2D1A               	goto	u383_20
  6100  0519                     u383_21:
  6101  0519  2D20               	goto	i1l5103
  6102  051A                     u383_20:
  6103                           	line	101
  6104                           	
  6105  051A                     i1l8613:	
  6106                           ;HMI.c: 100: {
  6107                           ;HMI.c: 101: LeftPressed = 1;
  6108  051A  165E               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  6109                           	line	102
  6110                           ;HMI.c: 102: LeftReleased = 0;
  6111  051B  12DE               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  6112  051C  2D20               	goto	i1l5103
  6113                           	line	103
  6114                           	
  6115  051D                     i1l5102:	
  6116                           	line	104
  6117                           ;HMI.c: 103: }
  6118                           ;HMI.c: 104: }
  6119  051D  2D20               	goto	i1l5103
  6120                           	line	105
  6121                           	
  6122  051E                     i1l5101:	
  6123                           	line	107
  6124                           ;HMI.c: 105: else
  6125                           ;HMI.c: 106: {
  6126                           ;HMI.c: 107: LeftDebounceCount = 0;
  6127  051E  01D4               	clrf	(_LeftDebounceCount)	;volatile
  6128                           	line	108
  6129                           ;HMI.c: 108: LeftReleased = 1;
  6130  051F  16DE               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  6131                           	line	109
  6132                           	
  6133  0520                     i1l5103:	
  6134                           	line	111
  6135                           ;HMI.c: 109: }
  6136                           ;HMI.c: 111: if(!RB5)
  6137  0520  1A86               	btfsc	(53/8),(53)&7
  6138  0521  2D23               	goto	u384_21
  6139  0522  2D24               	goto	u384_20
  6140  0523                     u384_21:
  6141  0523  2D36               	goto	i1l5104
  6142  0524                     u384_20:
  6143                           	line	113
  6144                           	
  6145  0524                     i1l8615:	
  6146                           ;HMI.c: 112: {
  6147                           ;HMI.c: 113: RightDebounceCount++;
  6148  0524  3001               	movlw	(01h)
  6149  0525  00F0               	movwf	(??_Debounce+0)+0
  6150  0526  0870               	movf	(??_Debounce+0)+0,w
  6151  0527  07D5               	addwf	(_RightDebounceCount),f	;volatile
  6152                           	line	114
  6153                           	
  6154  0528                     i1l8617:	
  6155                           ;HMI.c: 114: if(RightDebounceCount >= 10 & RightReleased)
  6156  0528  300A               	movlw	(0Ah)
  6157  0529  0255               	subwf	(_RightDebounceCount),w	;volatile
  6158  052A  1C03               	skipc
  6159  052B  2D2D               	goto	u385_21
  6160  052C  2D2E               	goto	u385_20
  6161  052D                     u385_21:
  6162  052D  2D38               	goto	i1l5106
  6163  052E                     u385_20:
  6164                           	
  6165  052E                     i1l8619:	
  6166  052E  1E5F               	btfss	(_RightReleased/8),(_RightReleased)&7
  6167  052F  2D31               	goto	u386_21
  6168  0530  2D32               	goto	u386_20
  6169  0531                     u386_21:
  6170  0531  2D38               	goto	i1l5106
  6171  0532                     u386_20:
  6172                           	line	116
  6173                           	
  6174  0532                     i1l8621:	
  6175                           ;HMI.c: 115: {
  6176                           ;HMI.c: 116: RightPressed = 1;
  6177  0532  15DF               	bsf	(_RightPressed/8),(_RightPressed)&7
  6178                           	line	117
  6179                           ;HMI.c: 117: RightReleased = 0;
  6180  0533  125F               	bcf	(_RightReleased/8),(_RightReleased)&7
  6181  0534  2D38               	goto	i1l5106
  6182                           	line	118
  6183                           	
  6184  0535                     i1l5105:	
  6185                           	line	119
  6186                           ;HMI.c: 118: }
  6187                           ;HMI.c: 119: }
  6188  0535  2D38               	goto	i1l5106
  6189                           	line	120
  6190                           	
  6191  0536                     i1l5104:	
  6192                           	line	122
  6193                           ;HMI.c: 120: else
  6194                           ;HMI.c: 121: {
  6195                           ;HMI.c: 122: RightDebounceCount = 0;
  6196  0536  01D5               	clrf	(_RightDebounceCount)	;volatile
  6197                           	line	123
  6198                           ;HMI.c: 123: RightReleased = 1;
  6199  0537  165F               	bsf	(_RightReleased/8),(_RightReleased)&7
  6200                           	line	124
  6201                           	
  6202  0538                     i1l5106:	
  6203                           	line	126
  6204                           ;HMI.c: 124: }
  6205                           ;HMI.c: 126: if(!RB6)
  6206  0538  1B06               	btfsc	(54/8),(54)&7
  6207  0539  2D3B               	goto	u387_21
  6208  053A  2D3C               	goto	u387_20
  6209  053B                     u387_21:
  6210  053B  2D4E               	goto	i1l5107
  6211  053C                     u387_20:
  6212                           	line	128
  6213                           	
  6214  053C                     i1l8623:	
  6215                           ;HMI.c: 127: {
  6216                           ;HMI.c: 128: CenterDebounceCount++;
  6217  053C  3001               	movlw	(01h)
  6218  053D  00F0               	movwf	(??_Debounce+0)+0
  6219  053E  0870               	movf	(??_Debounce+0)+0,w
  6220  053F  07D2               	addwf	(_CenterDebounceCount),f	;volatile
  6221                           	line	129
  6222                           	
  6223  0540                     i1l8625:	
  6224                           ;HMI.c: 129: if(CenterDebounceCount >= 10 & CenterReleased)
  6225  0540  300A               	movlw	(0Ah)
  6226  0541  0252               	subwf	(_CenterDebounceCount),w	;volatile
  6227  0542  1C03               	skipc
  6228  0543  2D45               	goto	u388_21
  6229  0544  2D46               	goto	u388_20
  6230  0545                     u388_21:
  6231  0545  2D51               	goto	i1l5110
  6232  0546                     u388_20:
  6233                           	
  6234  0546                     i1l8627:	
  6235  0546  1CDE               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  6236  0547  2D49               	goto	u389_21
  6237  0548  2D4A               	goto	u389_20
  6238  0549                     u389_21:
  6239  0549  2D51               	goto	i1l5110
  6240  054A                     u389_20:
  6241                           	line	131
  6242                           	
  6243  054A                     i1l8629:	
  6244                           ;HMI.c: 130: {
  6245                           ;HMI.c: 131: CenterPressed = 1;
  6246  054A  145E               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  6247                           	line	132
  6248                           ;HMI.c: 132: CenterReleased = 0;
  6249  054B  10DE               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  6250  054C  2D51               	goto	i1l5110
  6251                           	line	133
  6252                           	
  6253  054D                     i1l5108:	
  6254                           	line	134
  6255                           ;HMI.c: 133: }
  6256                           ;HMI.c: 134: }
  6257  054D  2D51               	goto	i1l5110
  6258                           	line	135
  6259                           	
  6260  054E                     i1l5107:	
  6261                           	line	137
  6262                           ;HMI.c: 135: else
  6263                           ;HMI.c: 136: {
  6264                           ;HMI.c: 137: CenterDebounceCount = 0;
  6265  054E  01D2               	clrf	(_CenterDebounceCount)	;volatile
  6266                           	line	138
  6267                           ;HMI.c: 138: CenterReleased = 1;
  6268  054F  14DE               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  6269  0550  2D51               	goto	i1l5110
  6270                           	line	139
  6271                           	
  6272  0551                     i1l5109:	
  6273                           	line	140
  6274                           	
  6275  0551                     i1l5110:	
  6276  0551  0008               	return
  6277                           	opt stack 0
  6278                           GLOBAL	__end_of_Debounce
  6279  0552                     	__end_of_Debounce:
  6280 ;; =============== function _Debounce ends ============
  6281                           
  6282                           	signat	_Debounce,88
  6283                           	global	_adc_read
  6284                           psect	text601,local,class=CODE,delta=2
  6285                           global __ptext601
  6286  0F1B                     __ptext601:
  6287                           
  6288 ;; *************** function _adc_read *****************
  6289 ;; Defined at:
  6290 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  2    0[COMMON] unsigned int 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         2       0       0       0       0
  6305 ;;      Locals:         2       0       0       0       0
  6306 ;;      Temps:          2       0       0       0       0
  6307 ;;      Totals:         6       0       0       0       0
  6308 ;;Total ram usage:        6 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_adc_read_channel
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           psect	text601
  6317                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6318                           	line	61
  6319                           	global	__size_of_adc_read
  6320  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  6321                           	
  6322  0F1B                     _adc_read:	
  6323                           	opt	stack 0
  6324                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  6325                           	line	64
  6326                           	
  6327  0F1B                     i1l8133:	
  6328                           ;adc.c: 62: volatile unsigned int adc_value;
  6329                           ;adc.c: 64: ADRESH = 0;
  6330  0F1B  1283               	bcf	status, 5	;RP0=0, select bank0
  6331  0F1C  1303               	bcf	status, 6	;RP1=0, select bank0
  6332  0F1D  019E               	clrf	(30)	;volatile
  6333                           	line	66
  6334                           	
  6335  0F1E                     i1l8135:	
  6336                           ;adc.c: 66: GO = 1;
  6337  0F1E  151F               	bsf	(250/8),(250)&7
  6338                           	line	67
  6339                           ;adc.c: 67: while(GO) continue;
  6340  0F1F  2F20               	goto	i1l703
  6341                           	
  6342  0F20                     i1l704:	
  6343                           	
  6344  0F20                     i1l703:	
  6345  0F20  191F               	btfsc	(250/8),(250)&7
  6346  0F21  2F23               	goto	u310_21
  6347  0F22  2F24               	goto	u310_20
  6348  0F23                     u310_21:
  6349  0F23  2F20               	goto	i1l703
  6350  0F24                     u310_20:
  6351                           	
  6352  0F24                     i1l705:	
  6353                           	line	68
  6354                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  6355  0F24  0000               nop ;#
  6356                           	line	69
  6357                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  6358  0F25  0000               nop ;#
  6359                           	line	70
  6360                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  6361  0F26  0000               nop ;#
  6362                           psect	text601
  6363                           	line	73
  6364                           	
  6365  0F27                     i1l8137:	
  6366                           ;adc.c: 73: adc_value = ADRESH;
  6367  0F27  1283               	bcf	status, 5	;RP0=0, select bank0
  6368  0F28  1303               	bcf	status, 6	;RP1=0, select bank0
  6369  0F29  081E               	movf	(30),w	;volatile
  6370  0F2A  00F2               	movwf	(??_adc_read+0)+0
  6371  0F2B  01F3               	clrf	(??_adc_read+0)+0+1
  6372  0F2C  0872               	movf	0+(??_adc_read+0)+0,w
  6373  0F2D  00F4               	movwf	(adc_read@adc_value)	;volatile
  6374  0F2E  0873               	movf	1+(??_adc_read+0)+0,w
  6375  0F2F  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  6376                           	line	74
  6377                           ;adc.c: 74: adc_value <<= 1;
  6378  0F30  3001               	movlw	01h
  6379                           	
  6380  0F31                     u311_25:
  6381  0F31  1003               	clrc
  6382  0F32  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  6383  0F33  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  6384  0F34  3EFF               	addlw	-1
  6385  0F35  1D03               	skipz
  6386  0F36  2F31               	goto	u311_25
  6387                           	line	75
  6388                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  6389  0F37  1683               	bsf	status, 5	;RP0=1, select bank1
  6390  0F38  1303               	bcf	status, 6	;RP1=0, select bank1
  6391  0F39  081E               	movf	(158)^080h,w	;volatile
  6392                           	line	78
  6393                           	
  6394  0F3A                     i1l8139:	
  6395                           ;adc.c: 78: return (adc_value);
  6396  0F3A  0875               	movf	(adc_read@adc_value+1),w	;volatile
  6397  0F3B  01F1               	clrf	(?_adc_read+1)
  6398  0F3C  07F1               	addwf	(?_adc_read+1)
  6399  0F3D  0874               	movf	(adc_read@adc_value),w	;volatile
  6400  0F3E  01F0               	clrf	(?_adc_read)
  6401  0F3F  07F0               	addwf	(?_adc_read)
  6402                           
  6403  0F40  2F41               	goto	i1l706
  6404                           	
  6405  0F41                     i1l8141:	
  6406                           	line	79
  6407                           	
  6408  0F41                     i1l706:	
  6409  0F41  0008               	return
  6410                           	opt stack 0
  6411                           GLOBAL	__end_of_adc_read
  6412  0F42                     	__end_of_adc_read:
  6413 ;; =============== function _adc_read ends ============
  6414                           
  6415                           	signat	_adc_read,90
  6416                           psect	text602,local,class=CODE,delta=2
  6417                           global __ptext602
  6418  0000                     __ptext602:
  6419                           	global	btemp
  6420  007E                     	btemp set 07Eh
  6421                           
  6422                           	DABS	1,126,2	;btemp
  6423                           	global	wtemp0
  6424  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 17 11:31:54 2015

   __end_of_lcd_write_control 0EF7               ??_UpdateDisplay 0031                             pc 0002  
                          _GO 00FA                            _RD 0C60                            _WR 0C61  
                          fsr 0004                           l700 0EC2                           _GIE 005F  
                         _RB0 0030                           _RB1 0031                           _RB2 0032  
                         _RB3 0033                           _RB4 0034                           _RB5 0035  
                         _RE0 0048                           _RB6 0036                           _RE1 0049  
                         _RE2 004A                           _RX9 00C6                           _TX9 04C6  
                         _pos 0050                           fsr0 0004                           indf 0000  
                ___awmod@sign 0076               ?_lcd_set_cursor 0070                          l1423 0FBE  
                        l2180 0703                          l2172 06C6                          l2181 0719  
                        l2173 0705                          l2182 071A                          l2174 06C7  
                        l2183 071A                          l2175 0718                          l2176 06D3  
                        l1393 0EF6                          l2169 0EDA                          l2177 06DF  
                        l2178 06EB                          l2179 06F7                          l5121 06AC  
                        l5130 0692                          l5122 0664                          l5123 06BF  
                        l5131 068B                          l5132 06A9                          l5124 0665  
                        l5133 068C                          l5125 0666                          l5134 068D  
                        l5126 0677                          l5135 068E                          l5127 0678  
                        l5136 068F                          l5128 0689                          l5137 0690  
                        l5129 068A                          l4362 0F69                          l5138 06AA  
                        l5139 06BF                          l8331 0F4C                          l8323 0F42  
                        l8341 0F57                          l8333 0F4D                          l8325 0F45  
                        l8343 0F5A                          l8335 0F50                          l8327 0F49  
                        l8351 0666                          l8345 0F5B                          l8337 0F53  
                        l8329 0F4A                          l8361 0691                          l8353 066E  
                        l8347 0F5C                          l8339 0F56                          l8363 0692  
                        l8355 0672                          l8365 06AB                          l8357 0678  
                        l8349 0663                          l8359 0686                          l8367 06AC  
                        l8801 0F9B                          l8811 0FAC                          l8803 0F9C  
                        l8813 0FB2                          l8805 0F9F                          l8821 0ED6  
                        l8815 0FB8                          l8807 0FA0                          l8823 0ED8  
                        l8831 06CD                          l8809 0FA6                          l8825 0ED9  
                        l8817 0EC3                          l8841 06DF                          l8833 06D1  
                        l8819 0ED2                          l8851 06F5                          l8843 06E5  
                        l8835 06D3                          l8827 06C0                          l8781 0EB2  
                        l8853 06F7                          l8845 06E9                          l8837 06D9  
                        l8829 06C7                          l8861 0705                          _CHS0 00FB  
                        l8783 0EB6                          l8791 0EE3                          l8855 06FD  
                        l8847 06EB                          l8839 06DD                          _CHS1 00FC  
                        _CHS2 00FD                          l8785 0EBA                          l8793 0EE9  
                        l8857 0701                          l8849 06F1                          l8883 0698  
                        l8787 0EBE                          l8779 0EAF                          l8795 0EEA  
                        l8859 0704                          l8789 0EDE                          l8797 0F94  
                        l8799 0F98                          STR_1 0629                          STR_2 0630  
                        STR_3 0637                          STR_4 063E                          STR_5 0645  
                        STR_6 064C                          STR_7 0650                          STR_8 0654  
                        STR_9 0658                          _BRGH 04C2                          _CREN 00C4  
                        u4207 0EF1                          u3360 0672                          u3361 0671  
                        u4217 0EC0                          u3370 0686                          u3371 0685  
                        _RCIE 0465                          _RCIF 0065                          _OERR 00C1  
                        _TMR0 0001                          _SPEN 00C7                          _TXIE 0464  
                        _WREN 0C62                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4           __size_of_ADCconvert 0224                          _Menu 0660  
      __end_of_lcd_write_data 0E74                          _isr1 0337                          _main 06C0  
                        _init 0EC3                          btemp 007E                _CenterReleased 02F1  
                        start 0012                 ??_ReadButtons 0071  __size_ofi1_lcd_write_control 0014  
                       ?_Menu 0070                         ?_isr1 0070                         ?_main 0070  
                       ?_init 0070                         _EEADR 010D                         STR_10 065C  
                       STR_11 061A               __end_of___awmod 05B8                         _CARRY 0018  
             __end_of___lwdiv 07C0               __end_of___lwmod 05FC                         i1l703 0F20  
                       i1l704 0F20                         i1l705 0F24                         i1l706 0F41  
                       i1l690 0FC1                         i1l691 0FF4                         i1l692 0FC7  
                       i1l693 0FCD                         i1l694 0FD3                         i1l695 0FD9  
                       i1l696 0FDF                         i1l689 0FE3                         i1l697 0FFF  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
      lcd_write_data@databyte 0072                         pclath 000A               ?_lcd_write_data 0070  
           ?_adc_read_channel 0070                         status 0003                         wtemp0 007E  
             __end_of_sprintf 0337              __end_of_Debounce 0552            ??_adc_read_channel 0076  
            ?_readAvgDistance 0070                  __end_of_Menu 06C0    __size_of_lcd_write_control 001C  
            _shortMenuStrings 0065                  __end_of_isr1 041F                  __end_of_main 071D  
                __end_of_init 0EDB                        ??_Menu 00D0                 ?_readDistance 0078  
      readAvgDistance@fullval 0020                        ??_isr1 0045                        ??_main 00D3  
                      ??_init 00D3           __end_of_ReadButtons 07F2                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
            __end_of_adc_read 0F42                        i1l1402 0F82                        i1l1403 0F6B  
                      i1l1404 0F93                        i1l1405 0F93                        i1l2160 0413  
                      i1l2161 03A1                        i1l2162 03BC                        i1l2163 03E1  
                      i1l2164 0400                        i1l2156 0355                        i1l2165 0412  
                      i1l2157 0354                        i1l2166 0413                        i1l2158 0379  
                      i1l2159 0379                        i1l1393 0E9A                        i1l5100 0508  
                      i1l1396 0E73                        i1l5101 051E                        i1l5110 0551  
                      i1l5102 051D                        i1l5103 0520                        i1l1399 0E60  
                      i1l5104 0536                        i1l5105 0535                        i1l5113 07CF  
                      i1l5106 0538                        i1l5114 07F1                        i1l5107 054E  
                      i1l5115 07D7                        i1l5108 054D                        i1l5116 07DF  
                      i1l2900 0159                        i1l5109 0551                        i1l5117 07E7  
                      i1l2901 0231                        i1l5118 07EF                        i1l2910 022C  
                      i1l2902 0185                        i1l2903 0230                        i1l2911 0238  
                      i1l2904 01B1                        i1l5160 0331                        i1l5144 0489  
                      i1l2905 022F                        i1l5161 0256                        i1l5145 049A  
                      i1l2906 01DD                        i1l5170 0311                        i1l5162 0257  
                      i1l5146 04D5                        i1l2907 022E                        i1l5155 031D  
                      i1l5171 02D3                        i1l5163 026F                        i1l2908 0209  
                      i1l5172 031C                        i1l5164 0258                        i1l5156 0241  
                      i1l2909 022D                        i1l5173 0330                        i1l5165 0289  
                      i1l5157 0253                        i1l6070 0585                        i1l5174 0336  
                      i1l5166 0294                        i1l5158 025A                        i1l5095 04EE  
                      i1l6071 0586                        i1l5167 02BC                        i1l5159 0255  
                      i1l5096 04ED                        i1l6072 0597                        i1l5168 02B1  
                      i1l2880 0771                        i1l5097 04F0                        i1l6073 05A5  
                      i1l6065 0560                        i1l5169 02CE                        i1l5098 0506  
                      i1l6074 05B0                        i1l6066 056A                        i1l2890 007D  
                      i1l5099 0505                        i1l6075 05B7                        i1l6067 05A6  
                      i1l2891 0236                        i1l2883 0EAE                        i1l6068 0580  
                      i1l2892 00A9                        i1l6069 0574                        i1l2893 0235  
                      i1l2894 00D5                        i1l2886 0025                        i1l2878 0732  
                      i1l2887 0238                        i1l2895 0234                        i1l2879 0753  
                      i1l2896 0101                        i1l2888 0051                        i1l8121 0FE1  
                      i1l2889 0237                        i1l2897 0233                        i1l8201 0359  
                      i1l2898 012D                        i1l8131 0FFF                        i1l8123 0FE2  
                      i1l2899 0232                        i1l8211 0375                        i1l8203 035F  
                      i1l8141 0F41                        i1l8133 0F1B                        i1l8125 0FE3  
                      i1l8117 0FC0                        i1l8301 07DB                        i1l8221 039D  
                      i1l8213 037D                        i1l8205 0367                        i1l8135 0F1E  
                      i1l8119 0FDF                        i1l8127 0FF4                        i1l8143 0E62  
                      i1l8311 07E6                        i1l8303 07DC                        i1l8151 0E59  
                      i1l8231 03DD                        i1l8223 03A1                        i1l8215 037E  
                      i1l8207 036B                        u310_20 0F24                        i1l8137 0F27  
                      u310_21 0F23                        i1l8129 0FF8                        i1l8145 0E67  
                      i1l8321 07F1                        i1l8313 07EB                        i1l8305 07DE  
                      i1l8401 00A9                        i1l8153 0E5A                        i1l8161 0F82  
                      i1l8241 0400                        i1l8233 03E1                        i1l8225 03B8  
                      i1l8217 0387                        i1l8209 036F                        i1l8139 0F3A  
                      i1l8147 0E69                        i1l8315 07EC                        i1l8307 07E3  
                      i1l8411 00E7                        i1l8403 00B2                        i1l8155 0F6A  
                      i1l8251 0732                        i1l8243 0407                        i1l8235 03F8  
                      i1l8227 03BC                        i1l8219 0388                        i1l8149 0E6A  
                      i1l8317 07EE                        i1l8309 07E4                        i1l8421 0136  
                      i1l8413 0101                        i1l8405 00BB                        i1l8157 0F6B  
                      i1l8253 073F                        i1l8245 071D                        i1l8261 041F  
                      i1l8237 03FB                        i1l8229 03D3                        i1l5870 07BF  
                      i1l5863 07B8                        i1l8319 07EF                        i1l8431 0185  
                      i1l8423 013F                        i1l8415 010A                        i1l8407 00D5  
                      i1l8159 0F7B                        i1l8255 0745                        i1l8247 0723  
                      i1l8271 0463                        i1l8263 0436                        i1l8239 03FD  
                      i1l8191 033B                        i1l5864 078A                        i1l5880 05FB  
                      i1l8601 04F8                        i1l5865 077E                        i1l5873 05F4  
                      i1l8441 01C3                        i1l8433 018E                        i1l8425 0159  
                      i1l8417 0113                        i1l8409 00DE                        i1l8249 0731  
                      i1l8257 0753                        i1l8281 04A0                        i1l8273 0469  
                      i1l8265 043C                        i1l8193 0343                        i1l5866 078F  
                      i1l5874 05CE                        i1l8611 0516                        i1l8603 04FE  
                      i1l5867 0790                        i1l5875 05C2                        i1l8291 07CC  
                      i1l8451 0212                        i1l8443 01DD                        i1l8435 0197  
                      i1l8427 0162                        i1l8419 012D                        i1l8259 076C  
                      i1l8283 04B5                        i1l8275 0478                        i1l8267 0454  
                      i1l8195 0349                        i1l5868 07A9                        i1l5876 05D3  
                      u311_25 0F31                        i1l8621 0532                        i1l8613 051A  
                      i1l8605 0502                        i1l5869 07B7                        i1l8701 0790  
                      i1l5877 05D4                        i1l8293 07CE                        i1l8285 07C0  
                      i1l8445 01E6                        i1l8437 01B1                        i1l8429 016B  
                      i1l8381 0020                        i1l8373 0E9B                        i1l8277 0489  
                      i1l8269 045A                        i1l8197 034F                        i1l8189 0337  
                      i1l5878 05E5                        i1l8623 053C                        i1l8615 0524  
                      i1l8607 050C                        i1l8703 07A1                        i1l8711 07B8  
                      i1l5879 05F3                        i1l8295 07D3                        i1l8287 07C5  
                      i1l8447 01EF                        i1l8439 01BA                        i1l8391 005A  
                      i1l8383 0025                        i1l8631 023C                        i1l8375 0EA7  
                      i1l8279 049A                        i1l8199 0355                        u400_20 078E  
                      u312_20 0F92                        u320_20 0375                        i1l8625 0540  
                      i1l8617 0528                        i1l8609 0510                        i1l8713 07BF  
                      i1l8705 07A7                        u400_21 078D                        i1l8721 05C9  
                      i1l8297 07D4                        i1l8289 07CB                        i1l8449 0209  
                      i1l8393 0063                        i1l8385 002E                        i1l8641 025A  
                      i1l8633 0241                        u312_21 0F91                        i1l8377 0EAE  
                      u320_21 0374                        i1l8627 0546                        i1l8619 052E  
                      i1l8707 07A9                        i1l8731 05EC                        i1l8723 05CE  
                      i1l8715 05B8                        i1l8299 07D6                        i1l8395 007D  
                      i1l8387 0037                        i1l8379 0015                        i1l8651 0283  
                      i1l8643 026F                        i1l8635 0247                        i1l8629 054A  
                      i1l8709 07B0                        i1l8725 05D4                        i1l8717 05BE  
                      i1l8733 05F4                        i1l8741 0560                        i1l8397 0086  
                      i1l8389 0051                        i1l8661 02B0                        i1l8653 0289  
                      i1l8645 0277                        i1l8637 024E                        i1l8591 04DC  
                      i1l8735 05FB                        i1l8727 05DE                        i1l8719 05C2  
                      i1l8751 057B                        i1l8743 0564                        i1l8399 008F  
                      i1l8671 02C9                        i1l8663 02B1                        i1l8655 028C  
                      i1l8647 027B                        i1l8639 0259                        u321_20 037D  
                      i1l8593 04E0                        i1l8729 05E5                        i1l8761 059E  
                      i1l8753 0580                        i1l8745 056A                        i1l8737 0552  
                      i1l8681 0311                        i1l8673 02CE                        i1l8665 02B5  
                      i1l8657 0293                        i1l8649 027F                        u321_21 037C  
                      i1l8595 04E6                        i1l8691 0774                        i1l8755 0586  
                      i1l8747 0570                        i1l8763 05A6                        i1l8739 0557  
                      i1l8675 02D3                        i1l8667 02BC                        i1l8659 0294  
                      i1l8683 031D                        i1l8771 0E88                        i1l8597 04EA  
                      i1l8589 04D6                        u401_25 0791                        i1l8693 077A  
                      i1l8765 05AA                        i1l8757 0590                        i1l8749 0574  
                      i1l8677 0305                        i1l8669 02C2                        i1l8685 0331  
                      i1l8773 0E8D                        i1l8599 04F4                        i1l8695 077E  
                      i1l8767 05B0                        i1l8759 0597                        i1l8687 0336  
                      i1l8679 030C                        i1l8775 0E8F                        u402_20 07A1  
                      u410_20 05F2                        u330_20 0478                        u322_20 039D  
                      u402_21 07A0                        i1l8697 0785                        i1l8689 0772  
                      u410_21 05F1                        i1l8769 05B7                        i1l8777 0E90  
                      u330_21 0477                        u322_21 039C                        i1l8699 078A  
                      u402_25 079D                        u330_25 0474                        u411_20 0557  
                      u331_20 07CB                        u323_20 03B8                        u411_21 0556  
                      u331_21 07CA                        u323_21 03B7                        u403_25 07AA  
                      u404_20 07B6                        u412_20 0564                        u332_20 07D3  
                      u340_20 0037                        u324_20 03D3                        u316_20 033B  
                      u404_21 07B5                        u412_21 0563                        u332_21 07D2  
                      u340_21 0036                        u324_21 03D2                        u316_21 033A  
                      u405_20 05BE                        u413_20 0570                        u333_20 07DB  
                      u341_20 005A                        u325_20 03F8                        u317_20 034F  
                      u405_21 05BD                        u413_21 056F                        u333_21 07DA  
                      u341_21 0059                        u325_21 03F7                        u317_21 034E  
                      u334_20 07E3                        u350_20 0113                        u342_20 0063  
                      u326_20 0407                        u318_20 0359                        u334_21 07E2  
                      u350_21 0112                        u342_21 0062                        u326_21 0406  
                      u318_21 0358                        u406_25 05C3                        u414_25 0575  
                      u422_27 0E95                        u407_20 05D2                        u415_20 0584  
                      u335_20 07EB                        u351_20 0136                        u343_20 0086  
                      u327_20 0730                        u319_20 035F                        u407_21 05D1  
                      u415_21 0583                        u335_21 07EA                        u351_21 0135  
                      u343_21 0085                        u327_21 072F                        u319_21 035E  
                      u327_25 072C                        u423_27 0E6F                        u408_20 05DE  
                      u416_20 0590                        u360_20 01EF                        u352_20 013F  
                      u344_20 008F                        u328_20 0752                        u408_21 05DD  
                      u416_21 058F                        u360_21 01EE                        u352_21 013E  
                      u344_21 008E                        u328_21 0751                        u408_25 05DA  
                      u416_25 058C                        u328_25 074E                        u424_27 0FF6  
                      u361_20 0212                        u353_20 0162                        u345_20 00B2  
                      u329_20 0429                        u361_21 0211                        u353_21 0161  
                      u345_21 00B1                        u409_25 05E6                        u417_25 0598  
                      u418_20 05A4                        u354_20 016B                        u346_20 00BB  
                      u338_20 0020                        u418_21 05A3                        u354_21 016A  
                      u346_21 00BA                        u338_21 001F                        u419_20 05AA  
                      u355_20 018E                        u347_20 00DE                        u339_20 002E  
                      u355_21 018D                        u347_21 00DD                        u339_21 002D  
                      u380_20 0502                        u356_20 0197                        u348_20 00E7  
                      u380_21 0501                        u356_21 0196                        u348_21 00E6  
                      u381_20 050C                        u357_20 01BA                        u349_20 010A  
                      u381_21 050B                        u357_21 01B9                        u349_21 0109  
                      u382_20 0516                        u358_20 01C3                        u390_20 0247  
                      u382_21 0515                        u358_21 01C2                        u390_21 0246  
                      u383_20 051A                        u375_20 04DC                        u359_20 01E6  
                      u391_20 027F                        u383_21 0519                        u375_21 04DB  
                      u359_21 01E5                        u391_21 027E                        u384_20 0524  
                      u376_20 04E6                        u392_20 0292                        u384_21 0523  
                      u376_21 04E5                        u392_21 0291                        u385_20 052E  
                      u377_20 04EA                        u393_20 02AF                        u385_21 052D  
                      u377_21 04E9                        u393_21 02AE                        u393_25 02AB  
                      u386_20 0532                        u378_20 04F4                        u394_20 02BB  
                      u386_21 0531                        u378_21 04F3                        u394_21 02BA  
                      u387_20 053C                        u379_20 04FE                        u395_20 02C2  
                      u387_21 053B                        u379_21 04FD                        u395_21 02C1  
                      u388_20 0546                        u396_20 031B                        u388_21 0545  
                      u396_21 031A                        u389_20 054A                        u397_20 032F  
                      u389_21 0549                        u397_21 032E                        u398_20 077A  
                      u398_21 0779                        u399_25 077F                        _TMR0IE 005D  
                      _TMR0IF 005A                    _UpReleased 02FE              __end_of_lcd_init 0FBF  
                      _adcVal 004C               _UpDebounceCount 0056                     ??___awmod 0074  
                ??_ADCconvert 007E                     ??___lwdiv 0074                     ??___lwmod 007C  
            __end_of_init_adc 0EC3                ??_readDistance 007A               ___awmod@divisor 0070  
    __end_of_lcd_write_string 0F94               ___awmod@counter 0075                        _rxfifo 00B0  
                      clrloop 0E51                        _txfifo 00C0                        _rxiptr 0059  
                      _rxoptr 005A                        _txiptr 005C                        _txoptr 005D  
            __end_of_ser_init 0F6A                        saved_w 007E                   _LeftPressed 02F4  
                   ??_sprintf 0025                   _DownPressed 02F2             lcd_write_string@s 0077  
          __end_of_ADCconvert 0239                __pcstackCOMMON 0070                  __pidataBANK0 07F2  
                 _ReadButtons 07C0              ??_lcd_set_cursor 0073                     ?_Debounce 0070  
               _buttonPressed 0057           i1_lcd_write_control 0E87                    __pbssBANK0 004A  
                  __pbssBANK1 00A0             _DownDebounceCount 0053            _RightDebounceCount 0055  
                  __pmaintext 06C0                    __pintentry 0004          ?i1_lcd_write_control 0070  
       __end_of_UpdateDisplay 04D6                     ?_adc_read 0070                    ??_Debounce 0070  
            ??_lcd_write_data 0070                     ?_lcd_init 0070          __end_of_readDistance 0EAF  
                   ?_init_adc 0070                     ?_ser_init 0070                       ___awmod 0552  
       ??i1_lcd_write_control 0070                       ___lwdiv 0772                       ___lwmod 05B8  
   __size_of_adc_read_channel 0041                    ??_adc_read 0072                       _dpowers 0610  
            ___awmod@dividend 0072                       _ser_tmp 005B                       _sprintf 0239  
                  ??_lcd_init 00D3          end_of_initialization 0F17                       init_ram 0E78  
                  ??_init_adc 00D0                  _LeftReleased 02F5                    ??_ser_init 00D0  
                _DownReleased 02F3                 _RightReleased 02FC      __size_of_readAvgDistance 0055  
           ?_lcd_write_string 0077            ??_lcd_write_string 0079             adc_read@adc_value 0074  
                   Menu@input 00D0                 _CenterPressed 02F0                  ?_ReadButtons 0070  
               __pbitbssBANK0 02F0           start_initialization 0EF7         __size_of_readDistance 0014  
           __size_of_Debounce 007C         lcd_set_cursor@address 0073                     _UpPressed 02FD  
              _RTC_FLAG_250MS 02F8                _RTC_FLAG_500MS 02F9                   __pdataBANK0 0060  
            _adc_read_channel 0FBF                  _readDistance 0E9B             __size_of_adc_read 0027  
           ??_readAvgDistance 007E                 __pcstackBANK0 0020                 __pcstackBANK1 00D0  
           __size_of_lcd_init 002B                   sprintf@_val 002B                   sprintf@flag 0029  
                 sprintf@prec 002A                  _current_step 006A              readAvgDistance@i 0022  
           __size_of_init_adc 0014              ___lwdiv@dividend 0072                     __ptext600 04D6  
                   __ptext601 0F1B                     __ptext602 0000                      ?___awmod 0070  
                   __ptext580 0F94                     __ptext581 0EDB                     __ptext590 0E58  
                   __ptext582 0EAF                     __ptext591 0E87                     __ptext583 0660  
                   __ptext592 0239                     __ptext584 0F42                     __ptext593 0015  
                   __ptext585 0337                     __ptext594 07C0                     __ptext586 041F  
                   __ptext595 0E61                     __ptext587 071D                     __ptext579 0EC3  
                   __ptext596 0FBF                     __ptext588 0E9B                     __ptext597 0552  
                   __ptext589 0F6A                     __ptext598 05B8                     __ptext599 0772  
           __size_of_ser_init 0028                      ?___lwdiv 0070                      ?___lwmod 0078  
                   __pstrings 0600           readDistance@fullval 007C              ___lwdiv@quotient 0075  
                    ?_sprintf 0020       __size_of_lcd_set_cursor 0009             interrupt_function 0004  
      __size_of_UpdateDisplay 00B7   __end_ofi1_lcd_write_control 0E9B                  _RightPressed 02FB  
        __size_of_ReadButtons 0032                   __stringbase 060F        UpdateDisplay@adcOutput 0035  
                    _Debounce 04D6             _LeftDebounceCount 0054     __size_of_lcd_write_string 002A  
     __size_of_lcd_write_data 0013       adc_read_channel@channel 0077                 _RTC_FLAG_10MS 02F6  
               _RTC_FLAG_50MS 02FA                     init_fetch 0E74                    _ADCconvert 0015  
            __size_of___awmod 0066              __size_of___lwdiv 004E              __size_of___lwmod 0044  
               _UpdateDisplay 041F                      _adc_read 0F1B               ___lwdiv@divisor 0070  
             ___lwdiv@counter 0077                   _menuStrings 0060                      _lcd_init 0F94  
                    _distance 004E              __size_of_sprintf 00FE      __end_of_adc_read_channel 1000  
   lcd_write_control@databyte 00D2                 __size_of_Menu 0060                      _init_adc 0EAF  
               __size_of_isr1 00E8                 __size_of_main 005D                 __size_of_init 0018  
                    clear_ram 0E50                      _ser_init 0F42               _readAvgDistance 071D  
              ?_UpdateDisplay 0070           _CenterDebounceCount 0052                  _RTC_FLAG_1MS 02F7  
          UpdateDisplay@F1206 00A0                      intlevel1 0000                _lcd_set_cursor 0E58  
                   sprintf@ap 0028                     sprintf@sp 002F              ___lwmod@dividend 007A  
                   stringcode 060A                   ?_ADCconvert 0070             _lcd_write_control 0EDB  
 i1lcd_write_control@databyte 0072            ?_lcd_write_control 0070                    _OPTION_REG 0081  
                    sprintf@c 0030                      sprintf@f 0020               ___lwmod@divisor 0078  
             ___lwmod@counter 007D                      stringdir 060A                      stringtab 0600  
         ??_lcd_write_control 00D0        __end_of_lcd_set_cursor 0E61              _lcd_write_string 0F6A  
           _current_direction 0058                   _RTC_Counter 004A       __end_of_readAvgDistance 0772  
              _lcd_write_data 0E61  
