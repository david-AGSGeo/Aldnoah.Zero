

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed May 20 13:16:51 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robotLoadSong
    48                           	FNCALL	_main,_robot_read
    49                           	FNCALL	_main,_readAvgDistance
    50                           	FNCALL	_main,_UpdateDisplay
    51                           	FNCALL	_main,_Menu
    52                           	FNCALL	_main,_calibrateIR
    53                           	FNCALL	_main,_ser_putch
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotTurnSpeed
    56                           	FNCALL	_main,_Init_Follow_IR
    57                           	FNCALL	_main,_robotFollow
    58                           	FNCALL	_main,_RobotDrive
    59                           	FNCALL	_main,_rotate
    60                           	FNCALL	_main,_robot_turnRight
    61                           	FNCALL	_main,_ChargeMode
    62                           	FNCALL	_Init_Follow_IR,_calibrateIR
    63                           	FNCALL	_Init_Follow_IR,_rotate
    64                           	FNCALL	_ChargeMode,_ser_putch
    65                           	FNCALL	_ChargeMode,_RobotBattRead
    66                           	FNCALL	_ChargeMode,_UpdateDisplay
    67                           	FNCALL	_robot_turnRight,_RobotDrive
    68                           	FNCALL	_robot_turnRight,_readAvgDistance
    69                           	FNCALL	_robot_turnRight,_ser_putch
    70                           	FNCALL	_robot_turnRight,_robot_read
    71                           	FNCALL	_robot_turnRight,_UpdateDisplay
    72                           	FNCALL	_robot_turnRight,___wmul
    73                           	FNCALL	_robot_turnRight,___awdiv
    74                           	FNCALL	_robot_turnRight,_abs
    75                           	FNCALL	_robotFollow,_RobotDrive
    76                           	FNCALL	_robotFollow,_readAvgDistance
    77                           	FNCALL	_robotFollow,_rotate
    78                           	FNCALL	_robotFollow,_robot_read
    79                           	FNCALL	_robotFollow,_UpdateDisplay
    80                           	FNCALL	_robotTurnSpeed,_robotTurn
    81                           	FNCALL	_robotTurnSpeed,_robot_read
    82                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    83                           	FNCALL	_robotTurnSpeed,_abs
    84                           	FNCALL	_robotMoveSpeed,_RobotDrive
    85                           	FNCALL	_robotMoveSpeed,_robot_read
    86                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    87                           	FNCALL	_robotMoveSpeed,_abs
    88                           	FNCALL	_calibrateIR,_rotate
    89                           	FNCALL	_calibrateIR,_UpdateDisplay
    90                           	FNCALL	_UpdateDisplay,_lcd_write_control
    91                           	FNCALL	_UpdateDisplay,_sprintf
    92                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    93                           	FNCALL	_UpdateDisplay,_lcd_write_string
    94                           	FNCALL	_UpdateDisplay,___awmod
    95                           	FNCALL	_readAvgDistance,_readDistance
    96                           	FNCALL	_readAvgDistance,___lwdiv
    97                           	FNCALL	_readAvgDistance,_ADCconvert
    98                           	FNCALL	_init,_ser_init
    99                           	FNCALL	_init,_init_adc
   100                           	FNCALL	_init,_lcd_init
   101                           	FNCALL	_init,_robo_init
   102                           	FNCALL	_readDistance,_adc_read_channel
   103                           	FNCALL	_RobotBattRead,_ser_putch
   104                           	FNCALL	_RobotBattRead,_ser_getch
   105                           	FNCALL	_robot_read,_ser_putch
   106                           	FNCALL	_robot_read,_ser_getch
   107                           	FNCALL	_lcd_init,_lcd_write_control
   108                           	FNCALL	_lcd_write_string,_lcd_write_data
   109                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   110                           	FNCALL	_abs,___wmul
   111                           	FNCALL	_robotTurn,_ser_putch
   112                           	FNCALL	_ser_getch,_ser_isrx
   113                           	FNCALL	_sprintf,___lwdiv
   114                           	FNCALL	_sprintf,___lwmod
   115                           	FNCALL	_ADCconvert,___wmul
   116                           	FNCALL	_ADCconvert,___lwdiv
   117                           	FNCALL	_rotate,_spi_transfer
   118                           	FNCALL	_RobotDrive,_ser_putch
   119                           	FNCALL	_robotLoadSong,_ser_putch
   120                           	FNCALL	_robo_init,_ser_putch
   121                           	FNCALL	_adc_read_channel,_adc_read
   122                           	FNROOT	_main
   123                           	FNCALL	_isr1,i1___lwmod
   124                           	FNCALL	_isr1,_ReadButtons
   125                           	FNCALL	_ReadButtons,_Debounce
   126                           	FNCALL	intlevel1,_isr1
   127                           	global	intlevel1
   128                           	FNROOT	intlevel1
   129                           	global	_menuStrings
   130                           	global	_shortMenuStrings
   131                           	global	_current_step
   132                           psect	idataBANK1,class=CODE,space=0,delta=2
   133                           global __pidataBANK1
   134  1FF3                     __pidataBANK1:
   135                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   136                           	line	49
   137                           
   138                           ;initializer for _menuStrings
   139  1FF3  3453               	retlw	(STR_1-__stringbase)&0ffh
   140  1FF4  344A               	retlw	(STR_2-__stringbase)&0ffh
   141  1FF5  3465               	retlw	(STR_3-__stringbase)&0ffh
   142  1FF6  346E               	retlw	(STR_4-__stringbase)&0ffh
   143  1FF7  345C               	retlw	(STR_5-__stringbase)&0ffh
   144  1FF8  3441               	retlw	(STR_6-__stringbase)&0ffh
   145                           	line	50
   146                           
   147                           ;initializer for _shortMenuStrings
   148  1FF9  3497               	retlw	(STR_7-__stringbase)&0ffh
   149  1FFA  349B               	retlw	(STR_8-__stringbase)&0ffh
   150  1FFB  3483               	retlw	(STR_9-__stringbase)&0ffh
   151  1FFC  348F               	retlw	(STR_10-__stringbase)&0ffh
   152  1FFD  349F               	retlw	(STR_11-__stringbase)&0ffh
   153  1FFE  3493               	retlw	(STR_12-__stringbase)&0ffh
   154                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   155                           	line	45
   156                           
   157                           ;initializer for _current_step
   158  1FFF  343C               	retlw	03Ch
   159                           	global	_dpowers
   160                           psect	strings,class=STRING,delta=2
   161                           global __pstrings
   162  0800                     __pstrings:
   163                           ;	global	stringdir,stringtab,__stringbase
   164  0800                     stringtab:
   165                           ;	String table - string pointers are 1 byte each
   166  0800  1BFF               	btfsc	(btemp+1),7
   167  0801  280A               	ljmp	stringcode
   168  0802  1383               	bcf	status,7
   169  0803  187F               	btfsc	(btemp+1),0
   170  0804  1783               	bsf	status,7
   171  0805  0800               	movf	indf,w
   172  0806  0A84               	incf fsr
   173  0807  1903               skipnz
   174  0808  0AFF               incf btemp+1
   175  0809  0008               	return
   176  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   177  080A  3008               movlw high(stringdir)
   178  080B  008A               movwf pclath
   179  080C  0804               movf fsr,w
   180  080D  0A84               incf fsr
   181  080E  0782               	addwf pc
   182  080F                     __stringbase:
   183  080F  3400               	retlw	0
   184                           psect	strings
   185                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   186                           	line	350
   187  0810                     _dpowers:
   188  0810  3401               	retlw	01h
   189  0811  3400               	retlw	0
   190                           
   191  0812  340A               	retlw	0Ah
   192  0813  3400               	retlw	0
   193                           
   194  0814  3464               	retlw	064h
   195  0815  3400               	retlw	0
   196                           
   197  0816  34E8               	retlw	0E8h
   198  0817  3403               	retlw	03h
   199                           
   200  0818  3410               	retlw	010h
   201  0819  3427               	retlw	027h
   202                           
   203                           	global	_dpowers
   204                           	global	_adcVal
   205                           	global	_BumpSensors
   206                           	global	_DistHighByte
   207                           	global	_DistLowByte
   208                           	global	_VwallSensor
   209                           	global	UpdateDisplay@F1261
   210                           	global	_txfifo
   211                           	global	_buttonPressed
   212                           	global	_CenterPressed
   213                           	global	_CenterReleased
   214                           	global	_DownPressed
   215                           	global	_DownReleased
   216                           	global	_LeftPressed
   217                           	global	_LeftReleased
   218                           	global	_RTC_FLAG_1MS
   219                           	global	_RTC_FLAG_250MS
   220                           	global	_RTC_FLAG_500MS
   221                           	global	_RightPressed
   222                           	global	_RightReleased
   223                           	global	_UpPressed
   224                           	global	_UpReleased
   225                           	global	_rxfifo
   226                           	global	_BattCharge
   227                           	global	_BattState
   228                           	global	_Disp1
   229                           	global	_Disp2
   230                           	global	_IRdistance
   231                           	global	_RTC_Counter
   232                           	global	_TotalDistTravelled
   233                           	global	_angleTurned
   234                           	global	_distTravelled
   235                           	global	_dist_high
   236                           	global	_dist_low
   237                           	global	_pos
   238                           	global	_total
   239                           	global	_totalSteps
   240                           	global	_AngleHighByte
   241                           	global	_AngleLowByte
   242                           	global	_CenterDebounceCount
   243                           	global	_CliffSensors
   244                           	global	_DownDebounceCount
   245                           	global	_LeftDebounceCount
   246                           	global	_ROBOTerror
   247                           	global	_RightDebounceCount
   248                           	global	_UpDebounceCount
   249                           	global	_currentMenu
   250                           	global	_highByte
   251                           	global	_lowByte
   252                           	global	_rxiptr
   253                           	global	_rxoptr
   254                           	global	_ser_tmp
   255                           	global	_turnhighByte
   256                           	global	_turnlowByte
   257                           	global	_txiptr
   258                           	global	_txoptr
   259                           	global	_ADCON0
   260  001F                     _ADCON0	set	31
   261                           	global	_ADRESH
   262  001E                     _ADRESH	set	30
   263                           	global	_PORTA
   264  0005                     _PORTA	set	5
   265                           	global	_PORTD
   266  0008                     _PORTD	set	8
   267                           	global	_PORTE
   268  0009                     _PORTE	set	9
   269                           	global	_RCREG
   270  001A                     _RCREG	set	26
   271                           	global	_SSPBUF
   272  0013                     _SSPBUF	set	19
   273                           	global	_SSPCON
   274  0014                     _SSPCON	set	20
   275                           	global	_TMR0
   276  0001                     _TMR0	set	1
   277                           	global	_TXREG
   278  0019                     _TXREG	set	25
   279                           	global	AT25256A@CS0
   280  0038                     AT25256A@CS0	set	56
   281                           	global	AT25256A@CS1
   282  0039                     AT25256A@CS1	set	57
   283                           	global	_CARRY
   284  0018                     _CARRY	set	24
   285                           	global	_CHS0
   286  00FB                     _CHS0	set	251
   287                           	global	_CHS1
   288  00FC                     _CHS1	set	252
   289                           	global	_CHS2
   290  00FD                     _CHS2	set	253
   291                           	global	_CREN
   292  00C4                     _CREN	set	196
   293                           	global	_GIE
   294  005F                     _GIE	set	95
   295                           	global	_GO
   296  00FA                     _GO	set	250
   297                           	global	_OERR
   298  00C1                     _OERR	set	193
   299                           	global	_PEIE
   300  005E                     _PEIE	set	94
   301                           	global	_RB0
   302  0030                     _RB0	set	48
   303                           	global	_RB2
   304  0032                     _RB2	set	50
   305                           	global	_RB3
   306  0033                     _RB3	set	51
   307                           	global	_RB4
   308  0034                     _RB4	set	52
   309                           	global	_RB5
   310  0035                     _RB5	set	53
   311                           	global	_RB6
   312  0036                     _RB6	set	54
   313                           	global	_RC0
   314  0038                     _RC0	set	56
   315                           	global	_RC1
   316  0039                     _RC1	set	57
   317                           	global	_RC2
   318  003A                     _RC2	set	58
   319                           	global	_RCIF
   320  0065                     _RCIF	set	101
   321                           	global	_RE0
   322  0048                     _RE0	set	72
   323                           	global	_RE1
   324  0049                     _RE1	set	73
   325                           	global	_RE2
   326  004A                     _RE2	set	74
   327                           	global	_RX9
   328  00C6                     _RX9	set	198
   329                           	global	_SPEN
   330  00C7                     _SPEN	set	199
   331                           	global	_SSPIF
   332  0063                     _SSPIF	set	99
   333                           	global	_TMR0IE
   334  005D                     _TMR0IE	set	93
   335                           	global	_TMR0IF
   336  005A                     _TMR0IF	set	90
   337                           	global	_TXIF
   338  0064                     _TXIF	set	100
   339                           	global	_ADCON1
   340  009F                     _ADCON1	set	159
   341                           	global	_ADRESL
   342  009E                     _ADRESL	set	158
   343                           	global	_OPTION_REG
   344  0081                     _OPTION_REG	set	129
   345                           	global	_SPBRG
   346  0099                     _SPBRG	set	153
   347                           	global	_SSPSTAT
   348  0094                     _SSPSTAT	set	148
   349                           	global	_TRISA
   350  0085                     _TRISA	set	133
   351                           	global	_TRISB
   352  0086                     _TRISB	set	134
   353                           	global	_TRISC
   354  0087                     _TRISC	set	135
   355                           	global	_TRISD
   356  0088                     _TRISD	set	136
   357                           	global	_TRISE
   358  0089                     _TRISE	set	137
   359                           	global	_BRGH
   360  04C2                     _BRGH	set	1218
   361                           	global	_RCIE
   362  0465                     _RCIE	set	1125
   363                           	global	_SYNC
   364  04C4                     _SYNC	set	1220
   365                           	global	_TX9
   366  04C6                     _TX9	set	1222
   367                           	global	_TXEN
   368  04C5                     _TXEN	set	1221
   369                           	global	_TXIE
   370  0464                     _TXIE	set	1124
   371                           	global	_EEADR
   372  010D                     _EEADR	set	269
   373                           	global	_EEDATA
   374  010C                     _EEDATA	set	268
   375                           	global	_EECON1
   376  018C                     _EECON1	set	396
   377                           	global	_EECON2
   378  018D                     _EECON2	set	397
   379                           	global	_RD
   380  0C60                     _RD	set	3168
   381                           	global	_WR
   382  0C61                     _WR	set	3169
   383                           	global	_WREN
   384  0C62                     _WREN	set	3170
   385                           	
   386  081A                     STR_18:	
   387  081A  3420               	retlw	32	;' '
   388  081B  3443               	retlw	67	;'C'
   389  081C  3468               	retlw	104	;'h'
   390  081D  3461               	retlw	97	;'a'
   391  081E  3472               	retlw	114	;'r'
   392  081F  3467               	retlw	103	;'g'
   393  0820  3469               	retlw	105	;'i'
   394  0821  346E               	retlw	110	;'n'
   395  0822  3467               	retlw	103	;'g'
   396  0823  3420               	retlw	32	;' '
   397  0824  344D               	retlw	77	;'M'
   398  0825  346F               	retlw	111	;'o'
   399  0826  3464               	retlw	100	;'d'
   400  0827  3465               	retlw	101	;'e'
   401  0828  3420               	retlw	32	;' '
   402  0829  3400               	retlw	0
   403                           psect	strings
   404                           	
   405  082A                     STR_14:	
   406  082A  345A               	retlw	90	;'Z'
   407  082B  3465               	retlw	101	;'e'
   408  082C  3472               	retlw	114	;'r'
   409  082D  346F               	retlw	111	;'o'
   410  082E  3420               	retlw	32	;' '
   411  082F  3453               	retlw	83	;'S'
   412  0830  3474               	retlw	116	;'t'
   413  0831  3465               	retlw	101	;'e'
   414  0832  3470               	retlw	112	;'p'
   415  0833  345F               	retlw	95	;'_'
   416  0834  344D               	retlw	77	;'M'
   417  0835  346F               	retlw	111	;'o'
   418  0836  3474               	retlw	116	;'t'
   419  0837  346F               	retlw	111	;'o'
   420  0838  3472               	retlw	114	;'r'
   421  0839  3400               	retlw	0
   422                           psect	strings
   423                           	
   424  083A                     STR_13:	
   425  083A  3449               	retlw	73	;'I'
   426  083B  3452               	retlw	82	;'R'
   427  083C  343A               	retlw	58	;':'
   428  083D  3425               	retlw	37	;'%'
   429  083E  3464               	retlw	100	;'d'
   430  083F  3463               	retlw	99	;'c'
   431  0840  346D               	retlw	109	;'m'
   432  0841  3420               	retlw	32	;' '
   433  0842  3444               	retlw	68	;'D'
   434  0843  343A               	retlw	58	;':'
   435  0844  3425               	retlw	37	;'%'
   436  0845  3464               	retlw	100	;'d'
   437  0846  3400               	retlw	0
   438                           psect	strings
   439                           	
   440  0847                     STR_26:	
   441  0847  3420               	retlw	32	;' '
   442  0848  3420               	retlw	32	;' '
   443  0849  3445               	retlw	69	;'E'
   444  084A  3458               	retlw	88	;'X'
   445  084B  3449               	retlw	73	;'I'
   446  084C  3454               	retlw	84	;'T'
   447  084D  3420               	retlw	32	;' '
   448  084E  3420               	retlw	32	;' '
   449  084F  3400               	retlw	0
   450                           psect	strings
   451                           	
   452  0850                     STR_6:	
   453  0850  3420               	retlw	32	;' '
   454  0851  3443               	retlw	67	;'C'
   455  0852  3468               	retlw	104	;'h'
   456  0853  3461               	retlw	97	;'a'
   457  0854  3472               	retlw	114	;'r'
   458  0855  3467               	retlw	103	;'g'
   459  0856  3465               	retlw	101	;'e'
   460  0857  3420               	retlw	32	;' '
   461  0858  3400               	retlw	0
   462                           psect	strings
   463                           	
   464  0859                     STR_2:	
   465  0859  3453               	retlw	83	;'S'
   466  085A  3463               	retlw	99	;'c'
   467  085B  3461               	retlw	97	;'a'
   468  085C  346E               	retlw	110	;'n'
   469  085D  345F               	retlw	95	;'_'
   470  085E  3433               	retlw	51	;'3'
   471  085F  3436               	retlw	54	;'6'
   472  0860  3430               	retlw	48	;'0'
   473  0861  3400               	retlw	0
   474                           psect	strings
   475                           	
   476  0862                     STR_1:	
   477  0862  3443               	retlw	67	;'C'
   478  0863  3461               	retlw	97	;'a'
   479  0864  346C               	retlw	108	;'l'
   480  0865  3469               	retlw	105	;'i'
   481  0866  3462               	retlw	98	;'b'
   482  0867  345F               	retlw	95	;'_'
   483  0868  3449               	retlw	73	;'I'
   484  0869  3452               	retlw	82	;'R'
   485  086A  3400               	retlw	0
   486                           psect	strings
   487                           	
   488  086B                     STR_5:	
   489  086B  3446               	retlw	70	;'F'
   490  086C  346C               	retlw	108	;'l'
   491  086D  3477               	retlw	119	;'w'
   492  086E  345F               	retlw	95	;'_'
   493  086F  3457               	retlw	87	;'W'
   494  0870  3461               	retlw	97	;'a'
   495  0871  346C               	retlw	108	;'l'
   496  0872  346C               	retlw	108	;'l'
   497  0873  3400               	retlw	0
   498                           psect	strings
   499                           	
   500  0874                     STR_3:	
   501  0874  3444               	retlw	68	;'D'
   502  0875  3472               	retlw	114	;'r'
   503  0876  3469               	retlw	105	;'i'
   504  0877  3476               	retlw	118	;'v'
   505  0878  3465               	retlw	101	;'e'
   506  0879  345F               	retlw	95	;'_'
   507  087A  3432               	retlw	50	;'2'
   508  087B  346D               	retlw	109	;'m'
   509  087C  3400               	retlw	0
   510                           psect	strings
   511                           	
   512  087D                     STR_4:	
   513  087D  3444               	retlw	68	;'D'
   514  087E  3472               	retlw	114	;'r'
   515  087F  3469               	retlw	105	;'i'
   516  0880  3476               	retlw	118	;'v'
   517  0881  3465               	retlw	101	;'e'
   518  0882  345F               	retlw	95	;'_'
   519  0883  344C               	retlw	76	;'L'
   520  0884  3400               	retlw	0
   521                           psect	strings
   522                           	
   523  0885                     STR_16:	
   524  0885  3443               	retlw	67	;'C'
   525  0886  344F               	retlw	79	;'O'
   526  0887  344E               	retlw	78	;'N'
   527  0888  3446               	retlw	70	;'F'
   528  0889  3449               	retlw	73	;'I'
   529  088A  3452               	retlw	82	;'R'
   530  088B  344D               	retlw	77	;'M'
   531  088C  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  088D                     STR_19:	
   535  088D  3425               	retlw	37	;'%'
   536  088E  3464               	retlw	100	;'d'
   537  088F  346D               	retlw	109	;'m'
   538  0890  3456               	retlw	86	;'V'
   539  0891  3400               	retlw	0
   540                           psect	strings
   541                           	
   542  0892                     STR_9:	
   543  0892  3444               	retlw	68	;'D'
   544  0893  3472               	retlw	114	;'r'
   545  0894  3432               	retlw	50	;'2'
   546  0895  3400               	retlw	0
   547                           psect	strings
   548                           	
   549  0896                     STR_15:	
   550  0896  343C               	retlw	60	;'<'
   551  0897  343C               	retlw	60	;'<'
   552  0898  343C               	retlw	60	;'<'
   553  0899  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  089A                     STR_17:	
   557  089A  343E               	retlw	62	;'>'
   558  089B  343E               	retlw	62	;'>'
   559  089C  343E               	retlw	62	;'>'
   560  089D  3400               	retlw	0
   561                           psect	strings
   562                           	
   563  089E                     STR_10:	
   564  089E  3444               	retlw	68	;'D'
   565  089F  3472               	retlw	114	;'r'
   566  08A0  344C               	retlw	76	;'L'
   567  08A1  3400               	retlw	0
   568                           psect	strings
   569                           	
   570  08A2                     STR_12:	
   571  08A2  3443               	retlw	67	;'C'
   572  08A3  3468               	retlw	104	;'h'
   573  08A4  3467               	retlw	103	;'g'
   574  08A5  3400               	retlw	0
   575                           psect	strings
   576                           	
   577  08A6                     STR_7:	
   578  08A6  3443               	retlw	67	;'C'
   579  08A7  3461               	retlw	97	;'a'
   580  08A8  346C               	retlw	108	;'l'
   581  08A9  3400               	retlw	0
   582                           psect	strings
   583                           	
   584  08AA                     STR_8:	
   585  08AA  3453               	retlw	83	;'S'
   586  08AB  3463               	retlw	99	;'c'
   587  08AC  346E               	retlw	110	;'n'
   588  08AD  3400               	retlw	0
   589                           psect	strings
   590                           	
   591  08AE                     STR_11:	
   592  08AE  3446               	retlw	70	;'F'
   593  08AF  346C               	retlw	108	;'l'
   594  08B0  3477               	retlw	119	;'w'
   595  08B1  3400               	retlw	0
   596                           psect	strings
   597                           	
   598  08B2                     STR_22:	
   599  08B2  3446               	retlw	70	;'F'
   600  08B3  3443               	retlw	67	;'C'
   601  08B4  3400               	retlw	0
   602                           psect	strings
   603                           	
   604  08B5                     STR_20:	
   605  08B5  344E               	retlw	78	;'N'
   606  08B6  3443               	retlw	67	;'C'
   607  08B7  3400               	retlw	0
   608                           psect	strings
   609                           	
   610  08B8                     STR_21:	
   611  08B8  3452               	retlw	82	;'R'
   612  08B9  3443               	retlw	67	;'C'
   613  08BA  3400               	retlw	0
   614                           psect	strings
   615                           	
   616  08BB                     STR_23:	
   617  08BB  3454               	retlw	84	;'T'
   618  08BC  3443               	retlw	67	;'C'
   619  08BD  3400               	retlw	0
   620                           psect	strings
   621                           	
   622  08BE                     STR_24:	
   623  08BE  3457               	retlw	87	;'W'
   624  08BF  3461               	retlw	97	;'a'
   625  08C0  3400               	retlw	0
   626                           psect	strings
   627  08B2                     STR_25	equ	STR_22+0
   628                           	file	"Assignment3_AldnoahZero.as"
   629                           	line	#
   630                           psect cinit,class=CODE,delta=2
   631                           global start_initialization
   632  122C                     start_initialization:
   633                           
   634                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   635                           global __pbitbssCOMMON
   636  0380                     __pbitbssCOMMON:
   637  0380                     _CenterPressed:
   638  0380                            ds      1
   639                           
   640  0381                     _CenterReleased:
   641  0381                            ds      1
   642                           
   643  0382                     _DownPressed:
   644  0382                            ds      1
   645                           
   646  0383                     _DownReleased:
   647  0383                            ds      1
   648                           
   649  0384                     _LeftPressed:
   650  0384                            ds      1
   651                           
   652  0385                     _LeftReleased:
   653  0385                            ds      1
   654                           
   655  0386                     _RTC_FLAG_1MS:
   656  0386                            ds      1
   657                           
   658  0387                     _RTC_FLAG_250MS:
   659  0387                            ds      1
   660                           
   661  0388                     _RTC_FLAG_500MS:
   662  0388                            ds      1
   663                           
   664  0389                     _RightPressed:
   665  0389                            ds      1
   666                           
   667  038A                     _RightReleased:
   668  038A                            ds      1
   669                           
   670  038B                     _UpPressed:
   671  038B                            ds      1
   672                           
   673  038C                     _UpReleased:
   674  038C                            ds      1
   675                           
   676                           psect	bssCOMMON,class=COMMON,space=1
   677                           global __pbssCOMMON
   678  007D                     __pbssCOMMON:
   679  007D                     _buttonPressed:
   680  007D                            ds      1
   681                           
   682                           psect	bssBANK0,class=BANK0,space=1
   683                           global __pbssBANK0
   684  006A                     __pbssBANK0:
   685  006A                     _adcVal:
   686  006A                            ds      2
   687                           
   688  006C                     _BumpSensors:
   689  006C                            ds      1
   690                           
   691  006D                     _DistHighByte:
   692  006D                            ds      1
   693                           
   694  006E                     _DistLowByte:
   695  006E                            ds      1
   696                           
   697  006F                     _VwallSensor:
   698  006F                            ds      1
   699                           
   700                           psect	bssBANK1,class=BANK1,space=1
   701                           global __pbssBANK1
   702  00A0                     __pbssBANK1:
   703  00A0                     _rxfifo:
   704  00A0                            ds      16
   705                           
   706  00B0                     _BattCharge:
   707  00B0                            ds      2
   708                           
   709  00B2                     _BattState:
   710  00B2                            ds      2
   711                           
   712  00B4                     _Disp1:
   713  00B4                            ds      2
   714                           
   715  00B6                     _Disp2:
   716  00B6                            ds      2
   717                           
   718  00B8                     _IRdistance:
   719  00B8                            ds      2
   720                           
   721  00BA                     _RTC_Counter:
   722  00BA                            ds      2
   723                           
   724  00BC                     _TotalDistTravelled:
   725  00BC                            ds      2
   726                           
   727  00BE                     _angleTurned:
   728  00BE                            ds      2
   729                           
   730  00C0                     _distTravelled:
   731  00C0                            ds      2
   732                           
   733  00C2                     _dist_high:
   734  00C2                            ds      2
   735                           
   736  00C4                     _dist_low:
   737  00C4                            ds      2
   738                           
   739  00C6                     _pos:
   740  00C6                            ds      2
   741                           
   742  00C8                     _total:
   743  00C8                            ds      2
   744                           
   745  00CA                     _totalSteps:
   746  00CA                            ds      2
   747                           
   748  00CC                     _AngleHighByte:
   749  00CC                            ds      1
   750                           
   751  00CD                     _AngleLowByte:
   752  00CD                            ds      1
   753                           
   754  00CE                     _CenterDebounceCount:
   755  00CE                            ds      1
   756                           
   757  00CF                     _CliffSensors:
   758  00CF                            ds      1
   759                           
   760  00D0                     _DownDebounceCount:
   761  00D0                            ds      1
   762                           
   763  00D1                     _LeftDebounceCount:
   764  00D1                            ds      1
   765                           
   766  00D2                     _ROBOTerror:
   767  00D2                            ds      1
   768                           
   769  00D3                     _RightDebounceCount:
   770  00D3                            ds      1
   771                           
   772  00D4                     _UpDebounceCount:
   773  00D4                            ds      1
   774                           
   775  00D5                     _currentMenu:
   776  00D5                            ds      1
   777                           
   778  00D6                     _highByte:
   779  00D6                            ds      1
   780                           
   781  00D7                     _lowByte:
   782  00D7                            ds      1
   783                           
   784  00D8                     _rxiptr:
   785  00D8                            ds      1
   786                           
   787  00D9                     _rxoptr:
   788  00D9                            ds      1
   789                           
   790  00DA                     _ser_tmp:
   791  00DA                            ds      1
   792                           
   793  00DB                     _turnhighByte:
   794  00DB                            ds      1
   795                           
   796  00DC                     _turnlowByte:
   797  00DC                            ds      1
   798                           
   799  00DD                     _txiptr:
   800  00DD                            ds      1
   801                           
   802  00DE                     _txoptr:
   803  00DE                            ds      1
   804                           
   805                           psect	dataBANK1,class=BANK1,space=1
   806                           global __pdataBANK1
   807  00DF                     __pdataBANK1:
   808                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   809                           	line	49
   810  00DF                     _menuStrings:
   811  00DF                            ds      6
   812                           
   813                           psect	dataBANK1
   814                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   815                           	line	50
   816  00E5                     _shortMenuStrings:
   817  00E5                            ds      6
   818                           
   819                           psect	dataBANK1
   820                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   821                           	line	45
   822  00EB                     _current_step:
   823  00EB                            ds      1
   824                           
   825                           psect	bssBANK3,class=BANK3,space=1
   826                           global __pbssBANK3
   827  0190                     __pbssBANK3:
   828  0190                     UpdateDisplay@F1261:
   829  0190                            ds      16
   830                           
   831  01A0                     _txfifo:
   832  01A0                            ds      16
   833                           
   834                           psect clrtext,class=CODE,delta=2
   835                           global clear_ram
   836                           ;	Called with FSR containing the base address, and
   837                           ;	W with the last address+1
   838  1FE0                     clear_ram:
   839  1FE0  0064               	clrwdt			;clear the watchdog before getting into this loop
   840  1FE1                     clrloop:
   841  1FE1  0180               	clrf	indf		;clear RAM location pointed to by FSR
   842  1FE2  0A84               	incf	fsr,f		;increment pointer
   843  1FE3  0604               	xorwf	fsr,w		;XOR with final address
   844  1FE4  1903               	btfsc	status,2	;have we reached the end yet?
   845  1FE5  3400               	retlw	0		;all done for this memory range, return
   846  1FE6  0604               	xorwf	fsr,w		;XOR again to restore value
   847  1FE7  2FE1               	goto	clrloop		;do the next byte
   848                           
   849                           ; Clear objects allocated to BITCOMMON
   850                           psect cinit,class=CODE,delta=2
   851  122C  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   852  122D  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   853                           ; Clear objects allocated to COMMON
   854                           psect cinit,class=CODE,delta=2
   855  122E  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   856                           ; Clear objects allocated to BANK0
   857                           psect cinit,class=CODE,delta=2
   858  122F  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   859  1230  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   860  1231  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   861  1232  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   862  1233  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   863  1234  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   864                           ; Clear objects allocated to BANK1
   865                           psect cinit,class=CODE,delta=2
   866  1235  1383               	bcf	status, 7	;select IRP bank0
   867  1236  30A0               	movlw	low(__pbssBANK1)
   868  1237  0084               	movwf	fsr
   869  1238  30DF               	movlw	low((__pbssBANK1)+03Fh)
   870  1239  160A  158A  27E0   	fcall	clear_ram
              160A  118A         
   871                           ; Clear objects allocated to BANK3
   872                           psect cinit,class=CODE,delta=2
   873  123E  1783               	bsf	status, 7	;select IRP bank2
   874  123F  3090               	movlw	low(__pbssBANK3)
   875  1240  0084               	movwf	fsr
   876  1241  30B0               	movlw	low((__pbssBANK3)+020h)
   877  1242  160A  158A  27E0   	fcall	clear_ram
              160A  118A         
   878                           global btemp
   879                           psect inittext,class=CODE,delta=2
   880                           global init_fetch,btemp
   881                           ;	Called with low address in FSR and high address in W
   882  1018                     init_fetch:
   883  1018  087E               	movf btemp,w
   884  1019  008A               	movwf pclath
   885  101A  087F               	movf btemp+1,w
   886  101B  0082               	movwf pc
   887                           global init_ram
   888                           ;Called with:
   889                           ;	high address of idata address in btemp 
   890                           ;	low address of idata address in btemp+1 
   891                           ;	low address of data in FSR
   892                           ;	high address + 1 of data in btemp-1
   893  101C                     init_ram:
   894  101C  160A  118A  2018   	fcall init_fetch
              160A  118A         
   895  1021  0080               	movwf indf,f
   896  1022  0A84               	incf fsr,f
   897  1023  0804               	movf fsr,w
   898  1024  067D               	xorwf btemp-1,w
   899  1025  1903               	btfsc status,2
   900  1026  3400               	retlw 0
   901  1027  0AFF               	incf btemp+1,f
   902  1028  1903               	btfsc status,2
   903  1029  0AFE               	incf btemp,f
   904  102A  281C               	goto init_ram
   905                           ; Initialize objects allocated to BANK1
   906                           psect cinit,class=CODE,delta=2
   907                           global init_ram, __pidataBANK1
   908  1247  1383               	bcf	status, 7	;select IRP bank0
   909  1248  30EC               	movlw low(__pdataBANK1+13)
   910  1249  00FD               	movwf btemp-1,f
   911  124A  301F               	movlw high(__pidataBANK1)
   912  124B  00FE               	movwf btemp,f
   913  124C  30F3               	movlw low(__pidataBANK1)
   914  124D  00FF               	movwf btemp+1,f
   915  124E  30DF               	movlw low(__pdataBANK1)
   916  124F  0084               	movwf fsr,f
   917  1250  160A  118A  201C   	fcall init_ram
              160A  118A         
   918                           psect cinit,class=CODE,delta=2
   919                           global end_of_initialization
   920                           
   921                           ;End of C runtime variable initialization code
   922                           
   923  1255                     end_of_initialization:
   924  1255  0183               clrf status
   925  1256  120A  118A  2A6C   ljmp _main	;jump to C main() function
   926                           psect	cstackCOMMON,class=COMMON,space=1
   927                           global __pcstackCOMMON
   928  0072                     __pcstackCOMMON:
   929                           	global	?_ser_init
   930  0072                     ?_ser_init:	; 0 bytes @ 0x0
   931                           	global	?_robo_init
   932  0072                     ?_robo_init:	; 0 bytes @ 0x0
   933                           	global	?_robotLoadSong
   934  0072                     ?_robotLoadSong:	; 0 bytes @ 0x0
   935                           	global	?_robot_read
   936  0072                     ?_robot_read:	; 0 bytes @ 0x0
   937                           	global	?_readAvgDistance
   938  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   939                           	global	?_UpdateDisplay
   940  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   941                           	global	?_calibrateIR
   942  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   943                           	global	?_ser_putch
   944  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   945                           	global	?_Init_Follow_IR
   946  0072                     ?_Init_Follow_IR:	; 0 bytes @ 0x0
   947                           	global	?_ChargeMode
   948  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   949                           	global	?_RobotBattRead
   950  0072                     ?_RobotBattRead:	; 0 bytes @ 0x0
   951                           	global	?_ADCconvert
   952  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   953                           	global	?_init_adc
   954  0072                     ?_init_adc:	; 0 bytes @ 0x0
   955                           	global	?_lcd_write_control
   956  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   957                           	global	?_lcd_write_data
   958  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   959                           	global	?_lcd_set_cursor
   960  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   961                           	global	?_lcd_init
   962  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   963                           	global	?_isr1
   964  0072                     ?_isr1:	; 0 bytes @ 0x0
   965                           	global	?_init
   966  0072                     ?_init:	; 0 bytes @ 0x0
   967                           	global	?_main
   968  0072                     ?_main:	; 0 bytes @ 0x0
   969                           	global	?_Debounce
   970  0072                     ?_Debounce:	; 0 bytes @ 0x0
   971                           	global	??_Debounce
   972  0072                     ??_Debounce:	; 0 bytes @ 0x0
   973                           	global	?_ser_isrx
   974  0072                     ?_ser_isrx:	; 1 bit 
   975                           	global	?_ReadButtons
   976  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   977                           	global	?_Menu
   978  0072                     ?_Menu:	; 1 bytes @ 0x0
   979                           	global	?_ser_getch
   980  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   981                           	global	?_adc_read_channel
   982  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   983                           	global	?_spi_transfer
   984  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   985                           	global	?i1___lwmod
   986  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   987                           	global	i1___lwmod@divisor
   988  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   989  0072                     	ds	1
   990                           	global	??_ReadButtons
   991  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   992  0073                     	ds	1
   993                           	global	i1___lwmod@dividend
   994  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   995  0074                     	ds	2
   996                           	global	??i1___lwmod
   997  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   998  0076                     	ds	1
   999                           	global	i1___lwmod@counter
  1000  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
  1001  0077                     	ds	1
  1002                           	global	??_isr1
  1003  0078                     ??_isr1:	; 0 bytes @ 0x6
  1004  0078                     	ds	5
  1005                           psect	cstackBANK0,class=BANK0,space=1
  1006                           global __pcstackBANK0
  1007  0020                     __pcstackBANK0:
  1008                           	global	??_ser_init
  1009  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1010                           	global	??_Menu
  1011  0020                     ??_Menu:	; 0 bytes @ 0x0
  1012                           	global	??_ser_putch
  1013  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1014                           	global	??_ser_getch
  1015  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1016                           	global	??_init_adc
  1017  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1018                           	global	??_lcd_write_control
  1019  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1020                           	global	??_lcd_write_data
  1021  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1022                           	global	??_spi_transfer
  1023  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1024                           	global	??_ser_isrx
  1025  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1026                           	global	?_adc_read
  1027  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1028                           	global	?___wmul
  1029  0020                     ?___wmul:	; 2 bytes @ 0x0
  1030                           	global	?___awmod
  1031  0020                     ?___awmod:	; 2 bytes @ 0x0
  1032                           	global	Menu@BTN_input
  1033  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1034                           	global	___wmul@multiplier
  1035  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1036                           	global	___awmod@divisor
  1037  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1038  0020                     	ds	1
  1039                           	global	spi_transfer@temp
  1040  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1041                           	global	ser_getch@c
  1042  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1043                           	global	ser_putch@c
  1044  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1045  0021                     	ds	1
  1046                           	global	??_adc_read
  1047  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1048                           	global	??_robo_init
  1049  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1050                           	global	??_robotLoadSong
  1051  0022                     ??_robotLoadSong:	; 0 bytes @ 0x2
  1052                           	global	??_robot_read
  1053  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1054                           	global	??_RobotBattRead
  1055  0022                     ??_RobotBattRead:	; 0 bytes @ 0x2
  1056                           	global	?_robotTurn
  1057  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1058                           	global	lcd_write_control@databyte
  1059  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1060                           	global	lcd_write_data@databyte
  1061  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1062                           	global	spi_transfer@data
  1063  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1064                           	global	robotTurn@angle
  1065  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1066                           	global	___wmul@multiplicand
  1067  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1068                           	global	___awmod@dividend
  1069  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1070  0022                     	ds	1
  1071                           	global	?_rotate
  1072  0023                     ?_rotate:	; 0 bytes @ 0x3
  1073                           	global	??_lcd_set_cursor
  1074  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1075                           	global	??_lcd_init
  1076  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1077                           	global	??_init
  1078  0023                     ??_init:	; 0 bytes @ 0x3
  1079                           	global	lcd_set_cursor@address
  1080  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1081                           	global	robot_read@readType
  1082  0023                     robot_read@readType:	; 1 bytes @ 0x3
  1083                           	global	rotate@numsteps
  1084  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1085  0023                     	ds	1
  1086                           	global	??_robotTurn
  1087  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1088                           	global	??___wmul
  1089  0024                     ??___wmul:	; 0 bytes @ 0x4
  1090                           	global	??___awmod
  1091  0024                     ??___awmod:	; 0 bytes @ 0x4
  1092                           	global	adc_read@adc_value
  1093  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1094                           	global	RobotBattRead@temp1
  1095  0024                     RobotBattRead@temp1:	; 2 bytes @ 0x4
  1096                           	global	___wmul@product
  1097  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1098  0024                     	ds	1
  1099                           	global	rotate@direction
  1100  0025                     rotate@direction:	; 1 bytes @ 0x5
  1101                           	global	___awmod@counter
  1102  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1103  0025                     	ds	1
  1104                           	global	??_rotate
  1105  0026                     ??_rotate:	; 0 bytes @ 0x6
  1106                           	global	??_adc_read_channel
  1107  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1108                           	global	?_abs
  1109  0026                     ?_abs:	; 2 bytes @ 0x6
  1110                           	global	?___lwdiv
  1111  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1112                           	global	?___awdiv
  1113  0026                     ?___awdiv:	; 2 bytes @ 0x6
  1114                           	global	___awmod@sign
  1115  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1116                           	global	abs@v
  1117  0026                     abs@v:	; 2 bytes @ 0x6
  1118                           	global	___lwdiv@divisor
  1119  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1120                           	global	___awdiv@divisor
  1121  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
  1122  0026                     	ds	1
  1123                           	global	?_lcd_write_string
  1124  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1125                           	global	adc_read_channel@channel
  1126  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1127                           	global	lcd_write_string@s
  1128  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1129  0027                     	ds	1
  1130                           	global	??_abs
  1131  0028                     ??_abs:	; 0 bytes @ 0x8
  1132                           	global	?_readDistance
  1133  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1134                           	global	rotate@i
  1135  0028                     rotate@i:	; 2 bytes @ 0x8
  1136                           	global	___lwdiv@dividend
  1137  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1138                           	global	___awdiv@dividend
  1139  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
  1140  0028                     	ds	1
  1141                           	global	??_lcd_write_string
  1142  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1143  0029                     	ds	1
  1144                           	global	??_readDistance
  1145  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1146                           	global	??___lwdiv
  1147  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1148                           	global	??___awdiv
  1149  002A                     ??___awdiv:	; 0 bytes @ 0xA
  1150  002A                     	ds	1
  1151                           	global	___awdiv@counter
  1152  002B                     ___awdiv@counter:	; 1 bytes @ 0xB
  1153                           	global	___lwdiv@quotient
  1154  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1155  002B                     	ds	1
  1156                           	global	___awdiv@sign
  1157  002C                     ___awdiv@sign:	; 1 bytes @ 0xC
  1158                           	global	readDistance@readVal
  1159  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1160  002C                     	ds	1
  1161                           	global	___lwdiv@counter
  1162  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1163                           	global	___awdiv@quotient
  1164  002D                     ___awdiv@quotient:	; 2 bytes @ 0xD
  1165  002D                     	ds	1
  1166                           	global	??_ADCconvert
  1167  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1168                           	global	?___lwmod
  1169  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1170                           	global	___lwmod@divisor
  1171  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1172  002E                     	ds	1
  1173                           	global	?_RobotDrive
  1174  002F                     ?_RobotDrive:	; 0 bytes @ 0xF
  1175                           	global	RobotDrive@speed
  1176  002F                     RobotDrive@speed:	; 2 bytes @ 0xF
  1177  002F                     	ds	1
  1178                           	global	??_readAvgDistance
  1179  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1180                           	global	readAvgDistance@fullval
  1181  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1182                           	global	___lwmod@dividend
  1183  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1184  0030                     	ds	1
  1185                           	global	RobotDrive@radius
  1186  0031                     RobotDrive@radius:	; 2 bytes @ 0x11
  1187  0031                     	ds	1
  1188                           	global	??___lwmod
  1189  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1190                           	global	readAvgDistance@j
  1191  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1192  0032                     	ds	1
  1193                           	global	??_RobotDrive
  1194  0033                     ??_RobotDrive:	; 0 bytes @ 0x13
  1195                           	global	___lwmod@counter
  1196  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1197  0033                     	ds	1
  1198                           	global	?_sprintf
  1199  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1200                           	global	RobotDrive@speedlowByte
  1201  0034                     RobotDrive@speedlowByte:	; 1 bytes @ 0x14
  1202                           	global	sprintf@f
  1203  0034                     sprintf@f:	; 1 bytes @ 0x14
  1204                           	global	readAvgDistance@tempIR
  1205  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1206  0034                     	ds	1
  1207                           	global	RobotDrive@speedhighByte
  1208  0035                     RobotDrive@speedhighByte:	; 1 bytes @ 0x15
  1209  0035                     	ds	1
  1210                           	global	RobotDrive@radiuslowByte
  1211  0036                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x16
  1212                           	global	readAvgDistance@i
  1213  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1214  0036                     	ds	1
  1215                           	global	RobotDrive@radiushighByte
  1216  0037                     RobotDrive@radiushighByte:	; 1 bytes @ 0x17
  1217  0037                     	ds	2
  1218                           	global	??_sprintf
  1219  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1220  0039                     	ds	3
  1221                           	global	sprintf@ap
  1222  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1223  003C                     	ds	1
  1224                           	global	sprintf@flag
  1225  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1226  003D                     	ds	1
  1227                           	global	sprintf@prec
  1228  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1229  003E                     	ds	1
  1230                           	global	sprintf@_val
  1231  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1232  003F                     	ds	4
  1233                           	global	sprintf@sp
  1234  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1235  0043                     	ds	1
  1236                           	global	sprintf@c
  1237  0044                     sprintf@c:	; 1 bytes @ 0x24
  1238  0044                     	ds	1
  1239                           	global	??_UpdateDisplay
  1240  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1241  0045                     	ds	4
  1242                           	global	UpdateDisplay@LCDOutput
  1243  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1244  0049                     	ds	16
  1245                           	global	??_calibrateIR
  1246  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1247                           	global	?_robotMoveSpeed
  1248  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1249                           	global	?_robotTurnSpeed
  1250  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1251                           	global	??_Init_Follow_IR
  1252  0059                     ??_Init_Follow_IR:	; 0 bytes @ 0x39
  1253                           	global	?_robotFollow
  1254  0059                     ?_robotFollow:	; 0 bytes @ 0x39
  1255                           	global	?_robot_turnRight
  1256  0059                     ?_robot_turnRight:	; 0 bytes @ 0x39
  1257                           	global	??_ChargeMode
  1258  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1259                           	global	robotFollow@speed
  1260  0059                     robotFollow@speed:	; 2 bytes @ 0x39
  1261                           	global	robot_turnRight@speed
  1262  0059                     robot_turnRight@speed:	; 2 bytes @ 0x39
  1263                           	global	robotMoveSpeed@distance
  1264  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1265                           	global	robotTurnSpeed@angle
  1266  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1267  0059                     	ds	2
  1268                           	global	robotFollow@AdcTarget
  1269  005B                     robotFollow@AdcTarget:	; 2 bytes @ 0x3B
  1270                           	global	robot_turnRight@AdcTarget
  1271  005B                     robot_turnRight@AdcTarget:	; 2 bytes @ 0x3B
  1272                           	global	robotMoveSpeed@speed
  1273  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1274                           	global	robotTurnSpeed@speed
  1275  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1276  005B                     	ds	2
  1277                           	global	??_robotMoveSpeed
  1278  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1279                           	global	??_robotTurnSpeed
  1280  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1281                           	global	??_robotFollow
  1282  005D                     ??_robotFollow:	; 0 bytes @ 0x3D
  1283                           	global	??_robot_turnRight
  1284  005D                     ??_robot_turnRight:	; 0 bytes @ 0x3D
  1285  005D                     	ds	3
  1286                           	global	robot_turnRight@temp1
  1287  0060                     robot_turnRight@temp1:	; 2 bytes @ 0x40
  1288                           	global	robotMoveSpeed@temp1
  1289  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1290                           	global	robotTurnSpeed@temp1
  1291  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1292  0060                     	ds	1
  1293                           	global	robotFollow@temp1
  1294  0061                     robotFollow@temp1:	; 2 bytes @ 0x41
  1295  0061                     	ds	2
  1296                           	global	robotFollow@hysterysis
  1297  0063                     robotFollow@hysterysis:	; 1 bytes @ 0x43
  1298  0063                     	ds	1
  1299                           	global	??_main
  1300  0064                     ??_main:	; 0 bytes @ 0x44
  1301  0064                     	ds	3
  1302                           	global	main@shortwall
  1303  0067                     main@shortwall:	; 2 bytes @ 0x47
  1304  0067                     	ds	2
  1305                           	global	main@choice
  1306  0069                     main@choice:	; 1 bytes @ 0x49
  1307  0069                     	ds	1
  1308 ;;Data sizes: Strings 167, constant 10, data 13, bss 102, persistent 0 stack 0
  1309 ;;Auto spaces:   Size  Autos    Used
  1310 ;; COMMON          14     11      14
  1311 ;; BANK0           80     74      80
  1312 ;; BANK1           80      0      76
  1313 ;; BANK3           96      0      32
  1314 ;; BANK2           96      0       0
  1315                           
  1316 ;;
  1317 ;; Pointer list with targets:
  1318                           
  1319 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1320 ;;
  1321 ;; ?_abs	int  size(1) Largest target is 0
  1322 ;;
  1323 ;; ?___awdiv	int  size(1) Largest target is 0
  1324 ;;
  1325 ;; ?___awmod	int  size(1) Largest target is 0
  1326 ;;
  1327 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1328 ;;
  1329 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1330 ;;
  1331 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1332 ;;
  1333 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1334 ;;
  1335 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1336 ;;
  1337 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1338 ;;		 -> STR_19(CODE[5]), STR_13(CODE[13]), 
  1339 ;;
  1340 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1341 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1342 ;;
  1343 ;; ?_sprintf	int  size(1) Largest target is 0
  1344 ;;
  1345 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1346 ;;		 -> ?_sprintf(BANK0[2]), 
  1347 ;;
  1348 ;; S8260$_cp	PTR const unsigned char  size(1) Largest target is 0
  1349 ;;
  1350 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1351 ;;
  1352 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1353 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1354 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1355 ;;
  1356 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1357 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1358 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1359 ;;
  1360 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1361 ;;		 -> STR_26(CODE[9]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
  1362 ;;		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_18(CODE[16]), 
  1363 ;;		 -> STR_17(CODE[4]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[16]), 
  1364 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1365 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1366 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1367 ;;		 -> STR_1(CODE[9]), 
  1368 ;;
  1369                           
  1370                           
  1371 ;;
  1372 ;; Critical Paths under _main in COMMON
  1373 ;;
  1374 ;;   None.
  1375 ;;
  1376 ;; Critical Paths under _isr1 in COMMON
  1377 ;;
  1378 ;;   _isr1->i1___lwmod
  1379 ;;   _ReadButtons->_Debounce
  1380 ;;
  1381 ;; Critical Paths under _main in BANK0
  1382 ;;
  1383 ;;   _main->_robotFollow
  1384 ;;   _ChargeMode->_UpdateDisplay
  1385 ;;   _robot_turnRight->_UpdateDisplay
  1386 ;;   _robotFollow->_UpdateDisplay
  1387 ;;   _robotTurnSpeed->_UpdateDisplay
  1388 ;;   _robotMoveSpeed->_UpdateDisplay
  1389 ;;   _calibrateIR->_UpdateDisplay
  1390 ;;   _UpdateDisplay->_sprintf
  1391 ;;   _readAvgDistance->_ADCconvert
  1392 ;;   _readDistance->_adc_read_channel
  1393 ;;   _RobotBattRead->_ser_putch
  1394 ;;   _RobotBattRead->_ser_getch
  1395 ;;   _robot_read->_ser_putch
  1396 ;;   _robot_read->_ser_getch
  1397 ;;   _lcd_init->_lcd_write_control
  1398 ;;   _lcd_write_string->___awmod
  1399 ;;   _lcd_set_cursor->_lcd_write_control
  1400 ;;   _abs->___wmul
  1401 ;;   _robotTurn->_ser_putch
  1402 ;;   _sprintf->___lwmod
  1403 ;;   _ADCconvert->___lwdiv
  1404 ;;   _rotate->_spi_transfer
  1405 ;;   _RobotDrive->___awdiv
  1406 ;;   _robotLoadSong->_ser_putch
  1407 ;;   _robo_init->_ser_putch
  1408 ;;   _adc_read_channel->_adc_read
  1409 ;;   ___awdiv->___wmul
  1410 ;;   ___lwmod->___lwdiv
  1411 ;;   ___lwdiv->___wmul
  1412 ;;
  1413 ;; Critical Paths under _isr1 in BANK0
  1414 ;;
  1415 ;;   None.
  1416 ;;
  1417 ;; Critical Paths under _main in BANK1
  1418 ;;
  1419 ;;   None.
  1420 ;;
  1421 ;; Critical Paths under _isr1 in BANK1
  1422 ;;
  1423 ;;   None.
  1424 ;;
  1425 ;; Critical Paths under _main in BANK3
  1426 ;;
  1427 ;;   None.
  1428 ;;
  1429 ;; Critical Paths under _isr1 in BANK3
  1430 ;;
  1431 ;;   None.
  1432 ;;
  1433 ;; Critical Paths under _main in BANK2
  1434 ;;
  1435 ;;   None.
  1436 ;;
  1437 ;; Critical Paths under _isr1 in BANK2
  1438 ;;
  1439 ;;   None.
  1440                           
  1441 ;;
  1442 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1443 ;;
  1444                           
  1445 ;;
  1446 ;;Call Graph Tables:
  1447 ;;
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1450 ;; ---------------------------------------------------------------------------------
  1451 ;; (0) _main                                                 6     6      0   16803
  1452 ;;                                             68 BANK0      6     6      0
  1453 ;;                               _init
  1454 ;;                      _robotLoadSong
  1455 ;;                         _robot_read
  1456 ;;                    _readAvgDistance
  1457 ;;                      _UpdateDisplay
  1458 ;;                               _Menu
  1459 ;;                        _calibrateIR
  1460 ;;                          _ser_putch
  1461 ;;                     _robotMoveSpeed
  1462 ;;                     _robotTurnSpeed
  1463 ;;                     _Init_Follow_IR
  1464 ;;                        _robotFollow
  1465 ;;                         _RobotDrive
  1466 ;;                             _rotate
  1467 ;;                    _robot_turnRight
  1468 ;;                         _ChargeMode
  1469 ;; ---------------------------------------------------------------------------------
  1470 ;; (1) _Init_Follow_IR                                       3     3      0    1567
  1471 ;;                                             57 BANK0      3     3      0
  1472 ;;                        _calibrateIR
  1473 ;;                             _rotate
  1474 ;; ---------------------------------------------------------------------------------
  1475 ;; (1) _ChargeMode                                           1     1      0    1442
  1476 ;;                                             57 BANK0      1     1      0
  1477 ;;                          _ser_putch
  1478 ;;                      _RobotBattRead
  1479 ;;                      _UpdateDisplay
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (1) _robot_turnRight                                      9     5      4    3264
  1482 ;;                                             57 BANK0      9     5      4
  1483 ;;                         _RobotDrive
  1484 ;;                    _readAvgDistance
  1485 ;;                          _ser_putch
  1486 ;;                         _robot_read
  1487 ;;                      _UpdateDisplay
  1488 ;;                             ___wmul
  1489 ;;                            ___awdiv
  1490 ;;                                _abs
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (1) _robotFollow                                         11     7      4    2831
  1493 ;;                                             57 BANK0     11     7      4
  1494 ;;                         _RobotDrive
  1495 ;;                    _readAvgDistance
  1496 ;;                             _rotate
  1497 ;;                         _robot_read
  1498 ;;                      _UpdateDisplay
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; (1) _robotTurnSpeed                                       9     5      4    1776
  1501 ;;                                             57 BANK0      9     5      4
  1502 ;;                          _robotTurn
  1503 ;;                         _robot_read
  1504 ;;                      _UpdateDisplay
  1505 ;;                                _abs
  1506 ;; ---------------------------------------------------------------------------------
  1507 ;; (1) _robotMoveSpeed                                       9     5      4    1933
  1508 ;;                                             57 BANK0      9     5      4
  1509 ;;                         _RobotDrive
  1510 ;;                         _robot_read
  1511 ;;                      _UpdateDisplay
  1512 ;;                                _abs
  1513 ;; ---------------------------------------------------------------------------------
  1514 ;; (2) _calibrateIR                                          0     0      0    1447
  1515 ;;                             _rotate
  1516 ;;                      _UpdateDisplay
  1517 ;; ---------------------------------------------------------------------------------
  1518 ;; (2) _UpdateDisplay                                       20    20      0    1327
  1519 ;;                                             37 BANK0     20    20      0
  1520 ;;                  _lcd_write_control
  1521 ;;                            _sprintf
  1522 ;;                     _lcd_set_cursor
  1523 ;;                   _lcd_write_string
  1524 ;;                            ___awmod
  1525 ;; ---------------------------------------------------------------------------------
  1526 ;; (2) _readAvgDistance                                      8     8      0     625
  1527 ;;                                             16 BANK0      8     8      0
  1528 ;;                       _readDistance
  1529 ;;                            ___lwdiv
  1530 ;;                         _ADCconvert
  1531 ;; ---------------------------------------------------------------------------------
  1532 ;; (1) _init                                                 1     1      0      44
  1533 ;;                                              3 BANK0      1     1      0
  1534 ;;                           _ser_init
  1535 ;;                           _init_adc
  1536 ;;                           _lcd_init
  1537 ;;                          _robo_init
  1538 ;; ---------------------------------------------------------------------------------
  1539 ;; (3) _readDistance                                         6     4      2      69
  1540 ;;                                              8 BANK0      6     4      2
  1541 ;;                   _adc_read_channel
  1542 ;; ---------------------------------------------------------------------------------
  1543 ;; (2) _RobotBattRead                                        4     4      0      93
  1544 ;;                                              2 BANK0      4     4      0
  1545 ;;                          _ser_putch
  1546 ;;                          _ser_getch
  1547 ;; ---------------------------------------------------------------------------------
  1548 ;; (2) _robot_read                                           2     2      0     133
  1549 ;;                                              2 BANK0      2     2      0
  1550 ;;                          _ser_putch
  1551 ;;                          _ser_getch
  1552 ;; ---------------------------------------------------------------------------------
  1553 ;; (2) _lcd_init                                             0     0      0      22
  1554 ;;                  _lcd_write_control
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (3) _lcd_write_string                                     2     0      2      67
  1557 ;;                                              7 BANK0      2     0      2
  1558 ;;                     _lcd_write_data
  1559 ;;                            ___awmod (ARG)
  1560 ;; ---------------------------------------------------------------------------------
  1561 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1562 ;;                                              3 BANK0      1     1      0
  1563 ;;                  _lcd_write_control
  1564 ;; ---------------------------------------------------------------------------------
  1565 ;; (2) _abs                                                  4     2      2     158
  1566 ;;                                              6 BANK0      4     2      2
  1567 ;;                             ___wmul
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (2) _robotTurn                                            2     0      2      66
  1570 ;;                                              2 BANK0      2     0      2
  1571 ;;                          _ser_putch
  1572 ;; ---------------------------------------------------------------------------------
  1573 ;; (3) _ser_getch                                            2     2      0      23
  1574 ;;                                              0 BANK0      2     2      0
  1575 ;;                           _ser_isrx
  1576 ;; ---------------------------------------------------------------------------------
  1577 ;; (3) _sprintf                                             17    12      5     798
  1578 ;;                                             20 BANK0     17    12      5
  1579 ;;                            ___lwdiv
  1580 ;;                            ___lwmod
  1581 ;; ---------------------------------------------------------------------------------
  1582 ;; (3) _ADCconvert                                           2     2      0     254
  1583 ;;                                             14 BANK0      2     2      0
  1584 ;;                             ___wmul
  1585 ;;                            ___lwdiv
  1586 ;; ---------------------------------------------------------------------------------
  1587 ;; (1) _rotate                                               7     4      3     120
  1588 ;;                                              3 BANK0      7     4      3
  1589 ;;                       _spi_transfer
  1590 ;; ---------------------------------------------------------------------------------
  1591 ;; (2) _RobotDrive                                           9     5      4     202
  1592 ;;                                             15 BANK0      9     5      4
  1593 ;;                          _ser_putch
  1594 ;;                            ___awdiv (ARG)
  1595 ;;                             ___wmul (ARG)
  1596 ;; ---------------------------------------------------------------------------------
  1597 ;; (1) _robotLoadSong                                        0     0      0      22
  1598 ;;                          _ser_putch
  1599 ;; ---------------------------------------------------------------------------------
  1600 ;; (2) _robo_init                                            0     0      0      22
  1601 ;;                          _ser_putch
  1602 ;; ---------------------------------------------------------------------------------
  1603 ;; (4) _lcd_write_data                                       3     3      0      22
  1604 ;;                                              0 BANK0      3     3      0
  1605 ;; ---------------------------------------------------------------------------------
  1606 ;; (4) _lcd_write_control                                    3     3      0      22
  1607 ;;                                              0 BANK0      3     3      0
  1608 ;; ---------------------------------------------------------------------------------
  1609 ;; (2) _init_adc                                             1     1      0       0
  1610 ;;                                              0 BANK0      1     1      0
  1611 ;; ---------------------------------------------------------------------------------
  1612 ;; (4) _adc_read_channel                                     2     2      0      46
  1613 ;;                                              6 BANK0      2     2      0
  1614 ;;                           _adc_read
  1615 ;; ---------------------------------------------------------------------------------
  1616 ;; (3) ___awmod                                              7     3      4     296
  1617 ;;                                              0 BANK0      7     3      4
  1618 ;; ---------------------------------------------------------------------------------
  1619 ;; (2) ___awdiv                                              9     5      4     300
  1620 ;;                                              6 BANK0      9     5      4
  1621 ;;                             ___wmul (ARG)
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (4) ___lwmod                                              6     2      4     159
  1624 ;;                                             14 BANK0      6     2      4
  1625 ;;                            ___lwdiv (ARG)
  1626 ;; ---------------------------------------------------------------------------------
  1627 ;; (4) ___lwdiv                                              8     4      4     162
  1628 ;;                                              6 BANK0      8     4      4
  1629 ;;                             ___wmul (ARG)
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (3) ___wmul                                               6     2      4      92
  1632 ;;                                              0 BANK0      6     2      4
  1633 ;; ---------------------------------------------------------------------------------
  1634 ;; (4) _ser_isrx                                             0     0      0       0
  1635 ;; ---------------------------------------------------------------------------------
  1636 ;; (2) _spi_transfer                                         3     3      0      30
  1637 ;;                                              0 BANK0      3     3      0
  1638 ;; ---------------------------------------------------------------------------------
  1639 ;; (3) _ser_putch                                            2     2      0      22
  1640 ;;                                              0 BANK0      2     2      0
  1641 ;; ---------------------------------------------------------------------------------
  1642 ;; (1) _Menu                                                 1     1      0      22
  1643 ;;                                              0 BANK0      1     1      0
  1644 ;; ---------------------------------------------------------------------------------
  1645 ;; (2) _ser_init                                             1     1      0       0
  1646 ;;                                              0 BANK0      1     1      0
  1647 ;; ---------------------------------------------------------------------------------
  1648 ;; (5) _adc_read                                             6     4      2      24
  1649 ;;                                              0 BANK0      6     4      2
  1650 ;; ---------------------------------------------------------------------------------
  1651 ;; Estimated maximum stack depth 5
  1652 ;; ---------------------------------------------------------------------------------
  1653 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1654 ;; ---------------------------------------------------------------------------------
  1655 ;; (6) _isr1                                                 5     5      0     521
  1656 ;;                                              6 COMMON     5     5      0
  1657 ;;                          i1___lwmod
  1658 ;;                        _ReadButtons
  1659 ;; ---------------------------------------------------------------------------------
  1660 ;; (7) _ReadButtons                                          0     0      0       0
  1661 ;;                           _Debounce
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (7) i1___lwmod                                            6     2      4     521
  1664 ;;                                              0 COMMON     6     2      4
  1665 ;; ---------------------------------------------------------------------------------
  1666 ;; (8) _Debounce                                             1     1      0       0
  1667 ;;                                              0 COMMON     1     1      0
  1668 ;; ---------------------------------------------------------------------------------
  1669 ;; Estimated maximum stack depth 8
  1670 ;; ---------------------------------------------------------------------------------
  1671                           
  1672 ;; Call Graph Graphs:
  1673                           
  1674 ;; _main (ROOT)
  1675 ;;   _init
  1676 ;;     _ser_init
  1677 ;;     _init_adc
  1678 ;;     _lcd_init
  1679 ;;       _lcd_write_control
  1680 ;;     _robo_init
  1681 ;;       _ser_putch
  1682 ;;   _robotLoadSong
  1683 ;;     _ser_putch
  1684 ;;   _robot_read
  1685 ;;     _ser_putch
  1686 ;;     _ser_getch
  1687 ;;       _ser_isrx
  1688 ;;   _readAvgDistance
  1689 ;;     _readDistance
  1690 ;;       _adc_read_channel
  1691 ;;         _adc_read
  1692 ;;     ___lwdiv
  1693 ;;       ___wmul (ARG)
  1694 ;;     _ADCconvert
  1695 ;;       ___wmul
  1696 ;;       ___lwdiv
  1697 ;;         ___wmul (ARG)
  1698 ;;   _UpdateDisplay
  1699 ;;     _lcd_write_control
  1700 ;;     _sprintf
  1701 ;;       ___lwdiv
  1702 ;;         ___wmul (ARG)
  1703 ;;       ___lwmod
  1704 ;;         ___lwdiv (ARG)
  1705 ;;           ___wmul (ARG)
  1706 ;;     _lcd_set_cursor
  1707 ;;       _lcd_write_control
  1708 ;;     _lcd_write_string
  1709 ;;       _lcd_write_data
  1710 ;;       ___awmod (ARG)
  1711 ;;     ___awmod
  1712 ;;   _Menu
  1713 ;;   _calibrateIR
  1714 ;;     _rotate
  1715 ;;       _spi_transfer
  1716 ;;     _UpdateDisplay
  1717 ;;       _lcd_write_control
  1718 ;;       _sprintf
  1719 ;;         ___lwdiv
  1720 ;;           ___wmul (ARG)
  1721 ;;         ___lwmod
  1722 ;;           ___lwdiv (ARG)
  1723 ;;             ___wmul (ARG)
  1724 ;;       _lcd_set_cursor
  1725 ;;         _lcd_write_control
  1726 ;;       _lcd_write_string
  1727 ;;         _lcd_write_data
  1728 ;;         ___awmod (ARG)
  1729 ;;       ___awmod
  1730 ;;   _ser_putch
  1731 ;;   _robotMoveSpeed
  1732 ;;     _RobotDrive
  1733 ;;       _ser_putch
  1734 ;;       ___awdiv (ARG)
  1735 ;;         ___wmul (ARG)
  1736 ;;       ___wmul (ARG)
  1737 ;;     _robot_read
  1738 ;;       _ser_putch
  1739 ;;       _ser_getch
  1740 ;;         _ser_isrx
  1741 ;;     _UpdateDisplay
  1742 ;;       _lcd_write_control
  1743 ;;       _sprintf
  1744 ;;         ___lwdiv
  1745 ;;           ___wmul (ARG)
  1746 ;;         ___lwmod
  1747 ;;           ___lwdiv (ARG)
  1748 ;;             ___wmul (ARG)
  1749 ;;       _lcd_set_cursor
  1750 ;;         _lcd_write_control
  1751 ;;       _lcd_write_string
  1752 ;;         _lcd_write_data
  1753 ;;         ___awmod (ARG)
  1754 ;;       ___awmod
  1755 ;;     _abs
  1756 ;;       ___wmul
  1757 ;;   _robotTurnSpeed
  1758 ;;     _robotTurn
  1759 ;;       _ser_putch
  1760 ;;     _robot_read
  1761 ;;       _ser_putch
  1762 ;;       _ser_getch
  1763 ;;         _ser_isrx
  1764 ;;     _UpdateDisplay
  1765 ;;       _lcd_write_control
  1766 ;;       _sprintf
  1767 ;;         ___lwdiv
  1768 ;;           ___wmul (ARG)
  1769 ;;         ___lwmod
  1770 ;;           ___lwdiv (ARG)
  1771 ;;             ___wmul (ARG)
  1772 ;;       _lcd_set_cursor
  1773 ;;         _lcd_write_control
  1774 ;;       _lcd_write_string
  1775 ;;         _lcd_write_data
  1776 ;;         ___awmod (ARG)
  1777 ;;       ___awmod
  1778 ;;     _abs
  1779 ;;       ___wmul
  1780 ;;   _Init_Follow_IR
  1781 ;;     _calibrateIR
  1782 ;;       _rotate
  1783 ;;         _spi_transfer
  1784 ;;       _UpdateDisplay
  1785 ;;         _lcd_write_control
  1786 ;;         _sprintf
  1787 ;;           ___lwdiv
  1788 ;;             ___wmul (ARG)
  1789 ;;           ___lwmod
  1790 ;;             ___lwdiv (ARG)
  1791 ;;               ___wmul (ARG)
  1792 ;;         _lcd_set_cursor
  1793 ;;           _lcd_write_control
  1794 ;;         _lcd_write_string
  1795 ;;           _lcd_write_data
  1796 ;;           ___awmod (ARG)
  1797 ;;         ___awmod
  1798 ;;     _rotate
  1799 ;;       _spi_transfer
  1800 ;;   _robotFollow
  1801 ;;     _RobotDrive
  1802 ;;       _ser_putch
  1803 ;;       ___awdiv (ARG)
  1804 ;;         ___wmul (ARG)
  1805 ;;       ___wmul (ARG)
  1806 ;;     _readAvgDistance
  1807 ;;       _readDistance
  1808 ;;         _adc_read_channel
  1809 ;;           _adc_read
  1810 ;;       ___lwdiv
  1811 ;;         ___wmul (ARG)
  1812 ;;       _ADCconvert
  1813 ;;         ___wmul
  1814 ;;         ___lwdiv
  1815 ;;           ___wmul (ARG)
  1816 ;;     _rotate
  1817 ;;       _spi_transfer
  1818 ;;     _robot_read
  1819 ;;       _ser_putch
  1820 ;;       _ser_getch
  1821 ;;         _ser_isrx
  1822 ;;     _UpdateDisplay
  1823 ;;       _lcd_write_control
  1824 ;;       _sprintf
  1825 ;;         ___lwdiv
  1826 ;;           ___wmul (ARG)
  1827 ;;         ___lwmod
  1828 ;;           ___lwdiv (ARG)
  1829 ;;             ___wmul (ARG)
  1830 ;;       _lcd_set_cursor
  1831 ;;         _lcd_write_control
  1832 ;;       _lcd_write_string
  1833 ;;         _lcd_write_data
  1834 ;;         ___awmod (ARG)
  1835 ;;       ___awmod
  1836 ;;   _RobotDrive
  1837 ;;     _ser_putch
  1838 ;;     ___awdiv (ARG)
  1839 ;;       ___wmul (ARG)
  1840 ;;     ___wmul (ARG)
  1841 ;;   _rotate
  1842 ;;     _spi_transfer
  1843 ;;   _robot_turnRight
  1844 ;;     _RobotDrive
  1845 ;;       _ser_putch
  1846 ;;       ___awdiv (ARG)
  1847 ;;         ___wmul (ARG)
  1848 ;;       ___wmul (ARG)
  1849 ;;     _readAvgDistance
  1850 ;;       _readDistance
  1851 ;;         _adc_read_channel
  1852 ;;           _adc_read
  1853 ;;       ___lwdiv
  1854 ;;         ___wmul (ARG)
  1855 ;;       _ADCconvert
  1856 ;;         ___wmul
  1857 ;;         ___lwdiv
  1858 ;;           ___wmul (ARG)
  1859 ;;     _ser_putch
  1860 ;;     _robot_read
  1861 ;;       _ser_putch
  1862 ;;       _ser_getch
  1863 ;;         _ser_isrx
  1864 ;;     _UpdateDisplay
  1865 ;;       _lcd_write_control
  1866 ;;       _sprintf
  1867 ;;         ___lwdiv
  1868 ;;           ___wmul (ARG)
  1869 ;;         ___lwmod
  1870 ;;           ___lwdiv (ARG)
  1871 ;;             ___wmul (ARG)
  1872 ;;       _lcd_set_cursor
  1873 ;;         _lcd_write_control
  1874 ;;       _lcd_write_string
  1875 ;;         _lcd_write_data
  1876 ;;         ___awmod (ARG)
  1877 ;;       ___awmod
  1878 ;;     ___wmul
  1879 ;;     ___awdiv
  1880 ;;       ___wmul (ARG)
  1881 ;;     _abs
  1882 ;;       ___wmul
  1883 ;;   _ChargeMode
  1884 ;;     _ser_putch
  1885 ;;     _RobotBattRead
  1886 ;;       _ser_putch
  1887 ;;       _ser_getch
  1888 ;;         _ser_isrx
  1889 ;;     _UpdateDisplay
  1890 ;;       _lcd_write_control
  1891 ;;       _sprintf
  1892 ;;         ___lwdiv
  1893 ;;           ___wmul (ARG)
  1894 ;;         ___lwmod
  1895 ;;           ___lwdiv (ARG)
  1896 ;;             ___wmul (ARG)
  1897 ;;       _lcd_set_cursor
  1898 ;;         _lcd_write_control
  1899 ;;       _lcd_write_string
  1900 ;;         _lcd_write_data
  1901 ;;         ___awmod (ARG)
  1902 ;;       ___awmod
  1903 ;;
  1904 ;; _isr1 (ROOT)
  1905 ;;   i1___lwmod
  1906 ;;   _ReadButtons
  1907 ;;     _Debounce
  1908 ;;
  1909                           
  1910 ;; Address spaces:
  1911                           
  1912 ;;Name               Size   Autos  Total    Cost      Usage
  1913 ;;BANK3               60      0      20       9       33.3%
  1914 ;;BITBANK3            60      0       0       8        0.0%
  1915 ;;SFR3                 0      0       0       4        0.0%
  1916 ;;BITSFR3              0      0       0       4        0.0%
  1917 ;;BANK2               60      0       0      11        0.0%
  1918 ;;BITBANK2            60      0       0      10        0.0%
  1919 ;;SFR2                 0      0       0       5        0.0%
  1920 ;;BITSFR2              0      0       0       5        0.0%
  1921 ;;SFR1                 0      0       0       2        0.0%
  1922 ;;BITSFR1              0      0       0       2        0.0%
  1923 ;;BANK1               50      0      4C       7       95.0%
  1924 ;;BITBANK1            50      0       0       6        0.0%
  1925 ;;CODE                 0      0       0       0        0.0%
  1926 ;;DATA                 0      0      D5      12        0.0%
  1927 ;;ABS                  0      0      CA       3        0.0%
  1928 ;;NULL                 0      0       0       0        0.0%
  1929 ;;STACK                0      0       B       2        0.0%
  1930 ;;BANK0               50     4A      50       5      100.0%
  1931 ;;BITBANK0            50      0       0       4        0.0%
  1932 ;;SFR0                 0      0       0       1        0.0%
  1933 ;;BITSFR0              0      0       0       1        0.0%
  1934 ;;COMMON               E      B       E       1      100.0%
  1935 ;;BITCOMMON            E      0       2       0       14.3%
  1936 ;;EEDATA             100      0       0       0        0.0%
  1937                           
  1938                           	global	_main
  1939                           psect	maintext,global,class=CODE,delta=2
  1940                           global __pmaintext
  1941  026C                     __pmaintext:
  1942                           
  1943 ;; *************** function _main *****************
  1944 ;; Defined at:
  1945 ;;		line 170 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  shortwall       2   71[BANK0 ] int 
  1950 ;;  choice          1   73[BANK0 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 17F/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0       3       0       0       0
  1962 ;;      Temps:          0       3       0       0       0
  1963 ;;      Totals:         0       6       0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels required when called:    8
  1966 ;; This function calls:
  1967 ;;		_init
  1968 ;;		_robotLoadSong
  1969 ;;		_robot_read
  1970 ;;		_readAvgDistance
  1971 ;;		_UpdateDisplay
  1972 ;;		_Menu
  1973 ;;		_calibrateIR
  1974 ;;		_ser_putch
  1975 ;;		_robotMoveSpeed
  1976 ;;		_robotTurnSpeed
  1977 ;;		_Init_Follow_IR
  1978 ;;		_robotFollow
  1979 ;;		_RobotDrive
  1980 ;;		_rotate
  1981 ;;		_robot_turnRight
  1982 ;;		_ChargeMode
  1983 ;; This function is called by:
  1984 ;;		Startup code after reset
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           psect	maintext
  1988                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1989                           	line	170
  1990                           	global	__size_of_main
  1991  0233                     	__size_of_main	equ	__end_of_main-_main
  1992                           	
  1993  026C                     _main:	
  1994                           	opt	stack 0
  1995                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1996                           	line	171
  1997                           	
  1998  026C                     l11824:	
  1999                           ;Main.c: 171: unsigned char choice = 255;
  2000  026C  30FF               	movlw	(0FFh)
  2001  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  2002  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  2003  026F  00E4               	movwf	(??_main+0)+0
  2004  0270  0864               	movf	(??_main+0)+0,w
  2005  0271  00E9               	movwf	(main@choice)
  2006                           	line	172
  2007                           	
  2008  0272                     l11826:	
  2009                           ;Main.c: 172: int shortwall = 0;
  2010  0272  01E7               	clrf	(main@shortwall)
  2011  0273  01E8               	clrf	(main@shortwall+1)
  2012                           	line	175
  2013                           	
  2014  0274                     l11828:	
  2015                           ;Main.c: 175: init();
  2016  0274  160A  118A  2259   	fcall	_init
              120A  118A         
  2017                           	line	176
  2018                           	
  2019  0279                     l11830:	
  2020                           ;Main.c: 176: robotLoadSong();
  2021  0279  160A  118A  2125   	fcall	_robotLoadSong
              120A  118A         
  2022  027E  2A7F               	goto	l11832
  2023                           	line	178
  2024                           ;Main.c: 178: while(1)
  2025                           	
  2026  027F                     l2248:	
  2027                           	line	180
  2028                           	
  2029  027F                     l11832:	
  2030                           ;Main.c: 179: {
  2031                           ;Main.c: 180: if (RTC_FLAG_250MS == 1)
  2032  027F  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2033  0280  2A82               	goto	u5331
  2034  0281  2A83               	goto	u5330
  2035  0282                     u5331:
  2036  0282  2A95               	goto	l11842
  2037  0283                     u5330:
  2038                           	line	182
  2039                           	
  2040  0283                     l11834:	
  2041                           ;Main.c: 181: {
  2042                           ;Main.c: 182: RTC_FLAG_250MS = 0;
  2043  0283  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2044                           	line	183
  2045                           	
  2046  0284                     l11836:	
  2047                           ;Main.c: 183: robot_read(2);
  2048  0284  3002               	movlw	(02h)
  2049  0285  120A  118A  26C2   	fcall	_robot_read
              120A  118A         
  2050                           	line	184
  2051                           	
  2052  028A                     l11838:	
  2053                           ;Main.c: 184: readAvgDistance();
  2054  028A  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2055                           	line	185
  2056                           	
  2057  028F                     l11840:	
  2058                           ;Main.c: 185: UpdateDisplay();
  2059  028F  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  2060  0294  2A95               	goto	l11842
  2061                           	line	186
  2062                           	
  2063  0295                     l2249:	
  2064                           	line	187
  2065                           	
  2066  0295                     l11842:	
  2067                           ;Main.c: 186: }
  2068                           ;Main.c: 187: if (buttonPressed)
  2069  0295  087D               	movf	(_buttonPressed),w	;volatile
  2070  0296  1D03               	skipz
  2071  0297  2A99               	goto	u5340
  2072  0298  2C7E               	goto	l11910
  2073  0299                     u5340:
  2074                           	line	190
  2075                           	
  2076  0299                     l11844:	
  2077                           ;Main.c: 189: {
  2078                           ;Main.c: 190: choice = Menu(buttonPressed);
  2079  0299  087D               	movf	(_buttonPressed),w	;volatile
  2080  029A  160A  118A  23B0   	fcall	_Menu
              120A  118A         
  2081  029F  1283               	bcf	status, 5	;RP0=0, select bank0
  2082  02A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2083  02A1  00E4               	movwf	(??_main+0)+0
  2084  02A2  0864               	movf	(??_main+0)+0,w
  2085  02A3  00E9               	movwf	(main@choice)
  2086                           	line	191
  2087                           	
  2088  02A4                     l11846:	
  2089                           ;Main.c: 191: buttonPressed = 0;
  2090  02A4  01FD               	clrf	(_buttonPressed)	;volatile
  2091  02A5  2C7E               	goto	l11910
  2092                           	line	192
  2093                           	
  2094  02A6                     l2250:	
  2095                           	line	196
  2096                           ;Main.c: 192: }
  2097                           ;Main.c: 196: switch (choice)
  2098  02A6  2C7E               	goto	l11910
  2099                           	line	198
  2100                           ;Main.c: 197: {
  2101                           ;Main.c: 198: case 0:
  2102                           	
  2103  02A7                     l2252:	
  2104                           	line	199
  2105                           	
  2106  02A7                     l11848:	
  2107                           ;Main.c: 199: calibrateIR();
  2108  02A7  160A  118A  2511   	fcall	_calibrateIR
              120A  118A         
  2109                           	line	200
  2110                           ;Main.c: 200: break;
  2111  02AC  2C94               	goto	l11912
  2112                           	line	201
  2113                           ;Main.c: 201: case 1:
  2114                           	
  2115  02AD                     l2254:	
  2116                           	line	206
  2117                           	
  2118  02AD                     l11850:	
  2119                           ;Main.c: 206: ser_putch(141);
  2120  02AD  308D               	movlw	(08Dh)
  2121  02AE  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  2122                           	line	208
  2123                           ;Main.c: 208: ser_putch(0);
  2124  02B3  3000               	movlw	(0)
  2125  02B4  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  2126                           	line	209
  2127                           ;Main.c: 209: break;
  2128  02B9  2C94               	goto	l11912
  2129                           	line	210
  2130                           ;Main.c: 210: case 2:
  2131                           	
  2132  02BA                     l2255:	
  2133                           	line	212
  2134                           	
  2135  02BA                     l11852:	
  2136                           ;Main.c: 212: robotMoveSpeed(-200,-200);
  2137  02BA  3038               	movlw	low(-200)
  2138  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2139  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2140  02BD  00D9               	movwf	(?_robotMoveSpeed)
  2141  02BE  30FF               	movlw	high(-200)
  2142  02BF  00DA               	movwf	((?_robotMoveSpeed))+1
  2143  02C0  3038               	movlw	low(-200)
  2144  02C1  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2145  02C2  30FF               	movlw	high(-200)
  2146  02C3  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2147  02C4  120A  158A  2265   	fcall	_robotMoveSpeed
              120A  118A         
  2148                           	line	213
  2149                           ;Main.c: 213: break;
  2150  02C9  2C94               	goto	l11912
  2151                           	line	214
  2152                           ;Main.c: 214: case 3:
  2153                           	
  2154  02CA                     l2256:	
  2155                           	line	216
  2156                           	
  2157  02CA                     l11854:	
  2158                           ;Main.c: 216: robotTurnSpeed(-70,400);
  2159  02CA  30BA               	movlw	low(-70)
  2160  02CB  1283               	bcf	status, 5	;RP0=0, select bank0
  2161  02CC  1303               	bcf	status, 6	;RP1=0, select bank0
  2162  02CD  00D9               	movwf	(?_robotTurnSpeed)
  2163  02CE  30FF               	movlw	high(-70)
  2164  02CF  00DA               	movwf	((?_robotTurnSpeed))+1
  2165  02D0  3090               	movlw	low(0190h)
  2166  02D1  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2167  02D2  3001               	movlw	high(0190h)
  2168  02D3  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2169  02D4  120A  158A  21BD   	fcall	_robotTurnSpeed
              120A  118A         
  2170                           	line	217
  2171                           	
  2172  02D9                     l11856:	
  2173                           ;Main.c: 217: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2174                           	opt asmopt_off
  2175  02D9  301A               movlw  26
  2176  02DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2177  02DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2178  02DC  00E6               movwf	((??_main+0)+0+2),f
  2179  02DD  305E               movlw	94
  2180  02DE  00E5               movwf	((??_main+0)+0+1),f
  2181  02DF  3086               	movlw	134
  2182  02E0  00E4               movwf	((??_main+0)+0),f
  2183  02E1                     u5367:
  2184  02E1  0BE4               	decfsz	((??_main+0)+0),f
  2185  02E2  2AE1               	goto	u5367
  2186  02E3  0BE5               	decfsz	((??_main+0)+0+1),f
  2187  02E4  2AE1               	goto	u5367
  2188  02E5  0BE6               	decfsz	((??_main+0)+0+2),f
  2189  02E6  2AE1               	goto	u5367
  2190  02E7  0064               	clrwdt
  2191                           opt asmopt_on
  2192                           
  2193                           	line	218
  2194                           	
  2195  02E8                     l11858:	
  2196                           ;Main.c: 218: robotTurnSpeed(-80,400);
  2197  02E8  30B0               	movlw	low(-80)
  2198  02E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2199  02EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2200  02EB  00D9               	movwf	(?_robotTurnSpeed)
  2201  02EC  30FF               	movlw	high(-80)
  2202  02ED  00DA               	movwf	((?_robotTurnSpeed))+1
  2203  02EE  3090               	movlw	low(0190h)
  2204  02EF  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2205  02F0  3001               	movlw	high(0190h)
  2206  02F1  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2207  02F2  120A  158A  21BD   	fcall	_robotTurnSpeed
              120A  118A         
  2208                           	line	219
  2209                           ;Main.c: 219: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2210                           	opt asmopt_off
  2211  02F7  301A               movlw  26
  2212  02F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2213  02F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2214  02FA  00E6               movwf	((??_main+0)+0+2),f
  2215  02FB  305E               movlw	94
  2216  02FC  00E5               movwf	((??_main+0)+0+1),f
  2217  02FD  3086               	movlw	134
  2218  02FE  00E4               movwf	((??_main+0)+0),f
  2219  02FF                     u5377:
  2220  02FF  0BE4               	decfsz	((??_main+0)+0),f
  2221  0300  2AFF               	goto	u5377
  2222  0301  0BE5               	decfsz	((??_main+0)+0+1),f
  2223  0302  2AFF               	goto	u5377
  2224  0303  0BE6               	decfsz	((??_main+0)+0+2),f
  2225  0304  2AFF               	goto	u5377
  2226  0305  0064               	clrwdt
  2227                           opt asmopt_on
  2228                           
  2229                           	line	220
  2230                           	
  2231  0306                     l11860:	
  2232                           ;Main.c: 220: robotTurnSpeed(-90,400);
  2233  0306  30A6               	movlw	low(-90)
  2234  0307  1283               	bcf	status, 5	;RP0=0, select bank0
  2235  0308  1303               	bcf	status, 6	;RP1=0, select bank0
  2236  0309  00D9               	movwf	(?_robotTurnSpeed)
  2237  030A  30FF               	movlw	high(-90)
  2238  030B  00DA               	movwf	((?_robotTurnSpeed))+1
  2239  030C  3090               	movlw	low(0190h)
  2240  030D  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2241  030E  3001               	movlw	high(0190h)
  2242  030F  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2243  0310  120A  158A  21BD   	fcall	_robotTurnSpeed
              120A  118A         
  2244                           	line	221
  2245                           	
  2246  0315                     l11862:	
  2247                           ;Main.c: 221: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2248                           	opt asmopt_off
  2249  0315  301A               movlw  26
  2250  0316  1283               	bcf	status, 5	;RP0=0, select bank0
  2251  0317  1303               	bcf	status, 6	;RP1=0, select bank0
  2252  0318  00E6               movwf	((??_main+0)+0+2),f
  2253  0319  305E               movlw	94
  2254  031A  00E5               movwf	((??_main+0)+0+1),f
  2255  031B  3086               	movlw	134
  2256  031C  00E4               movwf	((??_main+0)+0),f
  2257  031D                     u5387:
  2258  031D  0BE4               	decfsz	((??_main+0)+0),f
  2259  031E  2B1D               	goto	u5387
  2260  031F  0BE5               	decfsz	((??_main+0)+0+1),f
  2261  0320  2B1D               	goto	u5387
  2262  0321  0BE6               	decfsz	((??_main+0)+0+2),f
  2263  0322  2B1D               	goto	u5387
  2264  0323  0064               	clrwdt
  2265                           opt asmopt_on
  2266                           
  2267                           	line	222
  2268                           ;Main.c: 222: robotTurnSpeed(-100,400);
  2269  0324  309C               	movlw	low(-100)
  2270  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  2271  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  2272  0327  00D9               	movwf	(?_robotTurnSpeed)
  2273  0328  30FF               	movlw	high(-100)
  2274  0329  00DA               	movwf	((?_robotTurnSpeed))+1
  2275  032A  3090               	movlw	low(0190h)
  2276  032B  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2277  032C  3001               	movlw	high(0190h)
  2278  032D  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2279  032E  120A  158A  21BD   	fcall	_robotTurnSpeed
              120A  118A         
  2280                           	line	223
  2281                           ;Main.c: 223: break;
  2282  0333  2C94               	goto	l11912
  2283                           	line	224
  2284                           ;Main.c: 224: case 4:
  2285                           	
  2286  0334                     l2257:	
  2287                           	line	225
  2288                           	
  2289  0334                     l11864:	
  2290                           ;Main.c: 225: Init_Follow_IR();
  2291  0334  160A  118A  20B1   	fcall	_Init_Follow_IR
              120A  118A         
  2292                           	line	226
  2293                           ;Main.c: 226: while (ROBOTerror != 1)
  2294  0339  2C6C               	goto	l11904
  2295                           	
  2296  033A                     l2259:	
  2297                           	line	228
  2298                           ;Main.c: 227: {
  2299                           ;Main.c: 228: switch (ROBOTerror)
  2300  033A  2C55               	goto	l11902
  2301                           	line	230
  2302                           ;Main.c: 229: {
  2303                           ;Main.c: 230: case 0:
  2304                           	
  2305  033B                     l2261:	
  2306                           	line	231
  2307                           	
  2308  033B                     l11866:	
  2309                           ;Main.c: 231: readAvgDistance();
  2310  033B  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2311                           	line	232
  2312                           ;Main.c: 232: robotFollow(200, adcVal);
  2313  0340  30C8               	movlw	low(0C8h)
  2314  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  2315  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  2316  0343  00D9               	movwf	(?_robotFollow)
  2317  0344  3000               	movlw	high(0C8h)
  2318  0345  00DA               	movwf	((?_robotFollow))+1
  2319  0346  086B               	movf	(_adcVal+1),w	;volatile
  2320  0347  01DC               	clrf	1+(?_robotFollow)+02h
  2321  0348  07DC               	addwf	1+(?_robotFollow)+02h
  2322  0349  086A               	movf	(_adcVal),w	;volatile
  2323  034A  01DB               	clrf	0+(?_robotFollow)+02h
  2324  034B  07DB               	addwf	0+(?_robotFollow)+02h
  2325                           
  2326  034C  120A  158A  2446   	fcall	_robotFollow
              120A  118A         
  2327                           	line	233
  2328                           ;Main.c: 233: break;
  2329  0351  2C6C               	goto	l11904
  2330                           	line	234
  2331                           ;Main.c: 234: case 1:
  2332                           	
  2333  0352                     l2263:	
  2334                           	line	235
  2335                           	
  2336  0352                     l11868:	
  2337                           ;Main.c: 235: ROBOTerror = 1;
  2338  0352  1683               	bsf	status, 5	;RP0=1, select bank1
  2339  0353  1303               	bcf	status, 6	;RP1=0, select bank1
  2340  0354  01D2               	clrf	(_ROBOTerror)^080h
  2341  0355  1403               	bsf	status,0
  2342  0356  0DD2               	rlf	(_ROBOTerror)^080h,f
  2343                           	line	236
  2344                           ;Main.c: 236: break;
  2345  0357  2C6C               	goto	l11904
  2346                           	line	237
  2347                           ;Main.c: 237: case 2:
  2348                           	
  2349  0358                     l2264:	
  2350                           	line	238
  2351                           	
  2352  0358                     l11870:	
  2353                           ;Main.c: 238: ROBOTerror = 1;
  2354  0358  01D2               	clrf	(_ROBOTerror)^080h
  2355  0359  1403               	bsf	status,0
  2356  035A  0DD2               	rlf	(_ROBOTerror)^080h,f
  2357                           	line	239
  2358                           ;Main.c: 239: break;
  2359  035B  2C6C               	goto	l11904
  2360                           	line	240
  2361                           ;Main.c: 240: case 3:
  2362                           	
  2363  035C                     l2265:	
  2364                           	line	241
  2365                           ;Main.c: 241: ROBOTerror = 0;
  2366  035C  01D2               	clrf	(_ROBOTerror)^080h
  2367                           	line	242
  2368                           	
  2369  035D                     l11872:	
  2370                           ;Main.c: 242: RobotDrive(-200, 0x7FFF);
  2371  035D  3038               	movlw	low(-200)
  2372  035E  1283               	bcf	status, 5	;RP0=0, select bank0
  2373  035F  1303               	bcf	status, 6	;RP1=0, select bank0
  2374  0360  00AF               	movwf	(?_RobotDrive)
  2375  0361  30FF               	movlw	high(-200)
  2376  0362  00B0               	movwf	((?_RobotDrive))+1
  2377  0363  30FF               	movlw	low(07FFFh)
  2378  0364  00B1               	movwf	0+(?_RobotDrive)+02h
  2379  0365  307F               	movlw	high(07FFFh)
  2380  0366  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  2381  0367  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  2382                           	line	243
  2383                           	
  2384  036C                     l11874:	
  2385                           ;Main.c: 243: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2386                           	opt asmopt_off
  2387  036C  301A               movlw  26
  2388  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  2389  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  2390  036F  00E6               movwf	((??_main+0)+0+2),f
  2391  0370  305E               movlw	94
  2392  0371  00E5               movwf	((??_main+0)+0+1),f
  2393  0372  3086               	movlw	134
  2394  0373  00E4               movwf	((??_main+0)+0),f
  2395  0374                     u5397:
  2396  0374  0BE4               	decfsz	((??_main+0)+0),f
  2397  0375  2B74               	goto	u5397
  2398  0376  0BE5               	decfsz	((??_main+0)+0+1),f
  2399  0377  2B74               	goto	u5397
  2400  0378  0BE6               	decfsz	((??_main+0)+0+2),f
  2401  0379  2B74               	goto	u5397
  2402  037A  0064               	clrwdt
  2403                           opt asmopt_on
  2404                           
  2405                           	line	244
  2406                           	
  2407  037B                     l11876:	
  2408                           ;Main.c: 244: robotMoveSpeed(-200,-200);
  2409  037B  3038               	movlw	low(-200)
  2410  037C  1283               	bcf	status, 5	;RP0=0, select bank0
  2411  037D  1303               	bcf	status, 6	;RP1=0, select bank0
  2412  037E  00D9               	movwf	(?_robotMoveSpeed)
  2413  037F  30FF               	movlw	high(-200)
  2414  0380  00DA               	movwf	((?_robotMoveSpeed))+1
  2415  0381  3038               	movlw	low(-200)
  2416  0382  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2417  0383  30FF               	movlw	high(-200)
  2418  0384  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2419  0385  120A  158A  2265   	fcall	_robotMoveSpeed
              120A  118A         
  2420                           	line	245
  2421                           	
  2422  038A                     l11878:	
  2423                           ;Main.c: 245: robotTurnSpeed(-angleTurned,400);
  2424  038A  1683               	bsf	status, 5	;RP0=1, select bank1
  2425  038B  1303               	bcf	status, 6	;RP1=0, select bank1
  2426  038C  093E               	comf	(_angleTurned)^080h,w
  2427  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  2428  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  2429  038F  00E4               	movwf	(??_main+0)+0
  2430  0390  1683               	bsf	status, 5	;RP0=1, select bank1
  2431  0391  1303               	bcf	status, 6	;RP1=0, select bank1
  2432  0392  093F               	comf	(_angleTurned+1)^080h,w
  2433  0393  1283               	bcf	status, 5	;RP0=0, select bank0
  2434  0394  1303               	bcf	status, 6	;RP1=0, select bank0
  2435  0395  00E5               	movwf	((??_main+0)+0+1)
  2436  0396  0AE4               	incf	(??_main+0)+0,f
  2437  0397  1903               	skipnz
  2438  0398  0AE5               	incf	((??_main+0)+0+1),f
  2439  0399  0864               	movf	0+(??_main+0)+0,w
  2440  039A  00D9               	movwf	(?_robotTurnSpeed)
  2441  039B  0865               	movf	1+(??_main+0)+0,w
  2442  039C  00DA               	movwf	(?_robotTurnSpeed+1)
  2443  039D  3090               	movlw	low(0190h)
  2444  039E  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2445  039F  3001               	movlw	high(0190h)
  2446  03A0  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2447  03A1  120A  158A  21BD   	fcall	_robotTurnSpeed
              120A  118A         
  2448                           	line	246
  2449                           	
  2450  03A6                     l11880:	
  2451                           ;Main.c: 246: robotMoveSpeed(300,200);
  2452  03A6  302C               	movlw	low(012Ch)
  2453  03A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2454  03A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2455  03A9  00D9               	movwf	(?_robotMoveSpeed)
  2456  03AA  3001               	movlw	high(012Ch)
  2457  03AB  00DA               	movwf	((?_robotMoveSpeed))+1
  2458  03AC  30C8               	movlw	low(0C8h)
  2459  03AD  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2460  03AE  3000               	movlw	high(0C8h)
  2461  03AF  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2462  03B0  120A  158A  2265   	fcall	_robotMoveSpeed
              120A  118A         
  2463                           	line	247
  2464                           	
  2465  03B5                     l11882:	
  2466                           ;Main.c: 247: readAvgDistance();
  2467  03B5  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2468                           	line	248
  2469                           	
  2470  03BA                     l11884:	
  2471                           ;Main.c: 248: robotFollow(200, adcVal - 10);
  2472  03BA  30C8               	movlw	low(0C8h)
  2473  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2474  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2475  03BD  00D9               	movwf	(?_robotFollow)
  2476  03BE  3000               	movlw	high(0C8h)
  2477  03BF  00DA               	movwf	((?_robotFollow))+1
  2478  03C0  086A               	movf	(_adcVal),w	;volatile
  2479  03C1  3EF6               	addlw	low(-10)
  2480  03C2  00DB               	movwf	0+(?_robotFollow)+02h
  2481  03C3  086B               	movf	(_adcVal+1),w	;volatile
  2482  03C4  1803               	skipnc
  2483  03C5  3E01               	addlw	1
  2484  03C6  3EFF               	addlw	high(-10)
  2485  03C7  00DC               	movwf	1+0+(?_robotFollow)+02h
  2486  03C8  120A  158A  2446   	fcall	_robotFollow
              120A  118A         
  2487                           	line	249
  2488                           ;Main.c: 249: break;
  2489  03CD  2C6C               	goto	l11904
  2490                           	line	250
  2491                           ;Main.c: 250: case 10:
  2492                           	
  2493  03CE                     l2266:	
  2494                           	line	252
  2495                           	
  2496  03CE                     l11886:	
  2497                           ;Main.c: 252: robotTurnSpeed(80,400);
  2498  03CE  3050               	movlw	low(050h)
  2499  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2500  03D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2501  03D1  00D9               	movwf	(?_robotTurnSpeed)
  2502  03D2  3000               	movlw	high(050h)
  2503  03D3  00DA               	movwf	((?_robotTurnSpeed))+1
  2504  03D4  3090               	movlw	low(0190h)
  2505  03D5  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2506  03D6  3001               	movlw	high(0190h)
  2507  03D7  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2508  03D8  120A  158A  21BD   	fcall	_robotTurnSpeed
              120A  118A         
  2509                           	line	254
  2510                           ;Main.c: 254: readAvgDistance();
  2511  03DD  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2512                           	line	255
  2513                           ;Main.c: 255: robotFollow(200, adcVal - 10);
  2514  03E2  30C8               	movlw	low(0C8h)
  2515  03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  2516  03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  2517  03E5  00D9               	movwf	(?_robotFollow)
  2518  03E6  3000               	movlw	high(0C8h)
  2519  03E7  00DA               	movwf	((?_robotFollow))+1
  2520  03E8  086A               	movf	(_adcVal),w	;volatile
  2521  03E9  3EF6               	addlw	low(-10)
  2522  03EA  00DB               	movwf	0+(?_robotFollow)+02h
  2523  03EB  086B               	movf	(_adcVal+1),w	;volatile
  2524  03EC  1803               	skipnc
  2525  03ED  3E01               	addlw	1
  2526  03EE  3EFF               	addlw	high(-10)
  2527  03EF  00DC               	movwf	1+0+(?_robotFollow)+02h
  2528  03F0  120A  158A  2446   	fcall	_robotFollow
              120A  118A         
  2529                           	line	256
  2530                           ;Main.c: 256: break;
  2531  03F5  2C6C               	goto	l11904
  2532                           	line	257
  2533                           ;Main.c: 257: case 11:
  2534                           	
  2535  03F6                     l2267:	
  2536                           	line	259
  2537                           	
  2538  03F6                     l11888:	
  2539                           ;Main.c: 259: rotate(25, 0);
  2540  03F6  3019               	movlw	low(019h)
  2541  03F7  1283               	bcf	status, 5	;RP0=0, select bank0
  2542  03F8  1303               	bcf	status, 6	;RP1=0, select bank0
  2543  03F9  00A3               	movwf	(?_rotate)
  2544  03FA  3000               	movlw	high(019h)
  2545  03FB  00A4               	movwf	((?_rotate))+1
  2546  03FC  01A5               	clrf	0+(?_rotate)+02h
  2547  03FD  160A  118A  2442   	fcall	_rotate
              120A  118A         
  2548                           	line	260
  2549                           	
  2550  0402                     l11890:	
  2551                           ;Main.c: 260: readAvgDistance();
  2552  0402  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2553                           	line	261
  2554                           	
  2555  0407                     l11892:	
  2556                           ;Main.c: 261: robot_turnRight(200, adcVal);
  2557  0407  30C8               	movlw	low(0C8h)
  2558  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  2559  0409  1303               	bcf	status, 6	;RP1=0, select bank0
  2560  040A  00D9               	movwf	(?_robot_turnRight)
  2561  040B  3000               	movlw	high(0C8h)
  2562  040C  00DA               	movwf	((?_robot_turnRight))+1
  2563  040D  086B               	movf	(_adcVal+1),w	;volatile
  2564  040E  01DC               	clrf	1+(?_robot_turnRight)+02h
  2565  040F  07DC               	addwf	1+(?_robot_turnRight)+02h
  2566  0410  086A               	movf	(_adcVal),w	;volatile
  2567  0411  01DB               	clrf	0+(?_robot_turnRight)+02h
  2568  0412  07DB               	addwf	0+(?_robot_turnRight)+02h
  2569                           
  2570  0413  120A  118A  2015   	fcall	_robot_turnRight
              120A  118A         
  2571                           	line	262
  2572                           ;Main.c: 262: rotate(25, 1);
  2573  0418  3019               	movlw	low(019h)
  2574  0419  1283               	bcf	status, 5	;RP0=0, select bank0
  2575  041A  1303               	bcf	status, 6	;RP1=0, select bank0
  2576  041B  00A3               	movwf	(?_rotate)
  2577  041C  3000               	movlw	high(019h)
  2578  041D  00A4               	movwf	((?_rotate))+1
  2579  041E  01A5               	clrf	0+(?_rotate)+02h
  2580  041F  1403               	bsf	status,0
  2581  0420  0DA5               	rlf	0+(?_rotate)+02h,f
  2582  0421  160A  118A  2442   	fcall	_rotate
              120A  118A         
  2583                           	line	263
  2584                           	
  2585  0426                     l11894:	
  2586                           ;Main.c: 263: readAvgDistance();
  2587  0426  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2588                           	line	264
  2589                           	
  2590  042B                     l11896:	
  2591                           ;Main.c: 264: robotFollow(200, adcVal);
  2592  042B  30C8               	movlw	low(0C8h)
  2593  042C  1283               	bcf	status, 5	;RP0=0, select bank0
  2594  042D  1303               	bcf	status, 6	;RP1=0, select bank0
  2595  042E  00D9               	movwf	(?_robotFollow)
  2596  042F  3000               	movlw	high(0C8h)
  2597  0430  00DA               	movwf	((?_robotFollow))+1
  2598  0431  086B               	movf	(_adcVal+1),w	;volatile
  2599  0432  01DC               	clrf	1+(?_robotFollow)+02h
  2600  0433  07DC               	addwf	1+(?_robotFollow)+02h
  2601  0434  086A               	movf	(_adcVal),w	;volatile
  2602  0435  01DB               	clrf	0+(?_robotFollow)+02h
  2603  0436  07DB               	addwf	0+(?_robotFollow)+02h
  2604                           
  2605  0437  120A  158A  2446   	fcall	_robotFollow
              120A  118A         
  2606                           	line	276
  2607                           ;Main.c: 276: break;
  2608  043C  2C6C               	goto	l11904
  2609                           	line	277
  2610                           ;Main.c: 277: default:
  2611                           	
  2612  043D                     l2268:	
  2613                           	line	278
  2614                           	
  2615  043D                     l11898:	
  2616                           ;Main.c: 278: readAvgDistance();
  2617  043D  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  2618                           	line	279
  2619                           ;Main.c: 279: robotFollow(200, adcVal);
  2620  0442  30C8               	movlw	low(0C8h)
  2621  0443  1283               	bcf	status, 5	;RP0=0, select bank0
  2622  0444  1303               	bcf	status, 6	;RP1=0, select bank0
  2623  0445  00D9               	movwf	(?_robotFollow)
  2624  0446  3000               	movlw	high(0C8h)
  2625  0447  00DA               	movwf	((?_robotFollow))+1
  2626  0448  086B               	movf	(_adcVal+1),w	;volatile
  2627  0449  01DC               	clrf	1+(?_robotFollow)+02h
  2628  044A  07DC               	addwf	1+(?_robotFollow)+02h
  2629  044B  086A               	movf	(_adcVal),w	;volatile
  2630  044C  01DB               	clrf	0+(?_robotFollow)+02h
  2631  044D  07DB               	addwf	0+(?_robotFollow)+02h
  2632                           
  2633  044E  120A  158A  2446   	fcall	_robotFollow
              120A  118A         
  2634                           	line	280
  2635                           ;Main.c: 280: break;
  2636  0453  2C6C               	goto	l11904
  2637                           	line	282
  2638                           	
  2639  0454                     l11900:	
  2640                           ;Main.c: 282: }
  2641  0454  2C6C               	goto	l11904
  2642                           	line	228
  2643                           	
  2644  0455                     l2260:	
  2645                           	
  2646  0455                     l11902:	
  2647  0455  1683               	bsf	status, 5	;RP0=1, select bank1
  2648  0456  1303               	bcf	status, 6	;RP1=0, select bank1
  2649  0457  0852               	movf	(_ROBOTerror)^080h,w
  2650                           	; Switch size 1, requested type "space"
  2651                           ; Number of cases is 6, Range of values is 0 to 11
  2652                           ; switch strategies available:
  2653                           ; Name         Instructions Cycles
  2654                           ; simple_byte           19    10 (average)
  2655                           ; direct_byte           44     8 (fixed)
  2656                           ; jumptable            260     6 (fixed)
  2657                           ; rangetable            16     6 (fixed)
  2658                           ; spacedrange           30     9 (fixed)
  2659                           ; locatedrange          12     3 (fixed)
  2660                           ;	Chosen strategy is simple_byte
  2661                           
  2662                           	opt asmopt_off
  2663  0458  3A00               	xorlw	0^0	; case 0
  2664  0459  1903               	skipnz
  2665  045A  2B3B               	goto	l11866
  2666  045B  3A01               	xorlw	1^0	; case 1
  2667  045C  1903               	skipnz
  2668  045D  2B52               	goto	l11868
  2669  045E  3A03               	xorlw	2^1	; case 2
  2670  045F  1903               	skipnz
  2671  0460  2B58               	goto	l11870
  2672  0461  3A01               	xorlw	3^2	; case 3
  2673  0462  1903               	skipnz
  2674  0463  2B5C               	goto	l2265
  2675  0464  3A09               	xorlw	10^3	; case 10
  2676  0465  1903               	skipnz
  2677  0466  2BCE               	goto	l11886
  2678  0467  3A01               	xorlw	11^10	; case 11
  2679  0468  1903               	skipnz
  2680  0469  2BF6               	goto	l11888
  2681  046A  2C3D               	goto	l11898
  2682                           	opt asmopt_on
  2683                           
  2684                           	line	282
  2685                           	
  2686  046B                     l2262:	
  2687  046B  2C6C               	goto	l11904
  2688                           	line	283
  2689                           	
  2690  046C                     l2258:	
  2691                           	line	226
  2692                           	
  2693  046C                     l11904:	
  2694  046C  1683               	bsf	status, 5	;RP0=1, select bank1
  2695  046D  1303               	bcf	status, 6	;RP1=0, select bank1
  2696  046E  0852               	movf	(_ROBOTerror)^080h,w
  2697  046F  3A01               	xorlw	01h
  2698  0470  1D03               	skipz
  2699  0471  2C73               	goto	u5351
  2700  0472  2C74               	goto	u5350
  2701  0473                     u5351:
  2702  0473  2C55               	goto	l11902
  2703  0474                     u5350:
  2704                           	
  2705  0474                     l2269:	
  2706                           	line	284
  2707                           ;Main.c: 283: }
  2708                           ;Main.c: 284: ROBOTerror = 0;
  2709  0474  01D2               	clrf	(_ROBOTerror)^080h
  2710                           	line	285
  2711                           ;Main.c: 285: break;
  2712  0475  2C94               	goto	l11912
  2713                           	line	287
  2714                           ;Main.c: 287: case 5:
  2715                           	
  2716  0476                     l2270:	
  2717                           	line	288
  2718                           	
  2719  0476                     l11906:	
  2720                           ;Main.c: 288: ChargeMode();
  2721  0476  160A  118A  23F7   	fcall	_ChargeMode
              120A  118A         
  2722                           	line	289
  2723                           ;Main.c: 289: break;
  2724  047B  2C94               	goto	l11912
  2725                           	line	290
  2726                           ;Main.c: 290: default:
  2727                           	
  2728  047C                     l2271:	
  2729                           	line	292
  2730                           ;Main.c: 292: break;
  2731  047C  2C94               	goto	l11912
  2732                           	line	293
  2733                           	
  2734  047D                     l11908:	
  2735                           ;Main.c: 293: }
  2736  047D  2C94               	goto	l11912
  2737                           	line	196
  2738                           	
  2739  047E                     l2251:	
  2740                           	
  2741  047E                     l11910:	
  2742  047E  1283               	bcf	status, 5	;RP0=0, select bank0
  2743  047F  1303               	bcf	status, 6	;RP1=0, select bank0
  2744  0480  0869               	movf	(main@choice),w
  2745                           	; Switch size 1, requested type "space"
  2746                           ; Number of cases is 6, Range of values is 0 to 5
  2747                           ; switch strategies available:
  2748                           ; Name         Instructions Cycles
  2749                           ; simple_byte           19    10 (average)
  2750                           ; direct_byte           26     8 (fixed)
  2751                           ; jumptable            260     6 (fixed)
  2752                           ; rangetable            10     6 (fixed)
  2753                           ; spacedrange           18     9 (fixed)
  2754                           ; locatedrange           6     3 (fixed)
  2755                           ;	Chosen strategy is simple_byte
  2756                           
  2757                           	opt asmopt_off
  2758  0481  3A00               	xorlw	0^0	; case 0
  2759  0482  1903               	skipnz
  2760  0483  2AA7               	goto	l11848
  2761  0484  3A01               	xorlw	1^0	; case 1
  2762  0485  1903               	skipnz
  2763  0486  2AAD               	goto	l11850
  2764  0487  3A03               	xorlw	2^1	; case 2
  2765  0488  1903               	skipnz
  2766  0489  2ABA               	goto	l11852
  2767  048A  3A01               	xorlw	3^2	; case 3
  2768  048B  1903               	skipnz
  2769  048C  2ACA               	goto	l11854
  2770  048D  3A07               	xorlw	4^3	; case 4
  2771  048E  1903               	skipnz
  2772  048F  2B34               	goto	l11864
  2773  0490  3A01               	xorlw	5^4	; case 5
  2774  0491  1903               	skipnz
  2775  0492  2C76               	goto	l11906
  2776  0493  2C94               	goto	l11912
  2777                           	opt asmopt_on
  2778                           
  2779                           	line	293
  2780                           	
  2781  0494                     l2253:	
  2782                           	line	294
  2783                           	
  2784  0494                     l11912:	
  2785                           ;Main.c: 294: choice = 255;
  2786  0494  30FF               	movlw	(0FFh)
  2787  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  2788  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  2789  0497  00E4               	movwf	(??_main+0)+0
  2790  0498  0864               	movf	(??_main+0)+0,w
  2791  0499  00E9               	movwf	(main@choice)
  2792  049A  2A7F               	goto	l11832
  2793                           	line	295
  2794                           	
  2795  049B                     l2272:	
  2796                           	line	178
  2797  049B  2A7F               	goto	l11832
  2798                           	
  2799  049C                     l2273:	
  2800                           	line	296
  2801                           	
  2802  049C                     l2274:	
  2803                           	global	start
  2804  049C  120A  118A  2812   	ljmp	start
  2805                           	opt stack 0
  2806                           GLOBAL	__end_of_main
  2807  049F                     	__end_of_main:
  2808 ;; =============== function _main ends ============
  2809                           
  2810                           	signat	_main,88
  2811                           	global	_Init_Follow_IR
  2812                           psect	text1062,local,class=CODE,delta=2
  2813                           global __ptext1062
  2814  10B1                     __ptext1062:
  2815                           
  2816 ;; *************** function _Init_Follow_IR *****************
  2817 ;; Defined at:
  2818 ;;		line 299 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0
  2834 ;;      Temps:          0       3       0       0       0
  2835 ;;      Totals:         0       3       0       0       0
  2836 ;;Total ram usage:        3 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    7
  2839 ;; This function calls:
  2840 ;;		_calibrateIR
  2841 ;;		_rotate
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           psect	text1062
  2847                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2848                           	line	299
  2849                           	global	__size_of_Init_Follow_IR
  2850  0021                     	__size_of_Init_Follow_IR	equ	__end_of_Init_Follow_IR-_Init_Follow_IR
  2851                           	
  2852  10B1                     _Init_Follow_IR:	
  2853                           	opt	stack 0
  2854                           ; Regs used in _Init_Follow_IR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2855                           	line	300
  2856                           	
  2857  10B1                     l11818:	
  2858                           ;Main.c: 300: calibrateIR();
  2859  10B1  160A  118A  2511   	fcall	_calibrateIR
              160A  118A         
  2860                           	line	301
  2861                           	
  2862  10B6                     l11820:	
  2863                           ;Main.c: 301: _delay((unsigned long)((500)*(20000000/4000.0)));
  2864                           	opt asmopt_off
  2865  10B6  300D               movlw  13
  2866  10B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2867  10B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2868  10B9  00DB               movwf	((??_Init_Follow_IR+0)+0+2),f
  2869  10BA  30AF               movlw	175
  2870  10BB  00DA               movwf	((??_Init_Follow_IR+0)+0+1),f
  2871  10BC  30C1               	movlw	193
  2872  10BD  00D9               movwf	((??_Init_Follow_IR+0)+0),f
  2873  10BE                     u5407:
  2874  10BE  0BD9               	decfsz	((??_Init_Follow_IR+0)+0),f
  2875  10BF  28BE               	goto	u5407
  2876  10C0  0BDA               	decfsz	((??_Init_Follow_IR+0)+0+1),f
  2877  10C1  28BE               	goto	u5407
  2878  10C2  0BDB               	decfsz	((??_Init_Follow_IR+0)+0+2),f
  2879  10C3  28BE               	goto	u5407
  2880  10C4  0064               	clrwdt
  2881                           opt asmopt_on
  2882                           
  2883                           	line	302
  2884                           	
  2885  10C5                     l11822:	
  2886                           ;Main.c: 302: rotate(25, 0);
  2887  10C5  3019               	movlw	low(019h)
  2888  10C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2889  10C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2890  10C8  00A3               	movwf	(?_rotate)
  2891  10C9  3000               	movlw	high(019h)
  2892  10CA  00A4               	movwf	((?_rotate))+1
  2893  10CB  01A5               	clrf	0+(?_rotate)+02h
  2894  10CC  160A  118A  2442   	fcall	_rotate
              160A  118A         
  2895                           	line	303
  2896                           	
  2897  10D1                     l2277:	
  2898  10D1  0008               	return
  2899                           	opt stack 0
  2900                           GLOBAL	__end_of_Init_Follow_IR
  2901  10D2                     	__end_of_Init_Follow_IR:
  2902 ;; =============== function _Init_Follow_IR ends ============
  2903                           
  2904                           	signat	_Init_Follow_IR,88
  2905                           	global	_ChargeMode
  2906                           psect	text1063,local,class=CODE,delta=2
  2907                           global __ptext1063
  2908  13F7                     __ptext1063:
  2909                           
  2910 ;; *************** function _ChargeMode *****************
  2911 ;; Defined at:
  2912 ;;		line 358 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;		None               void
  2919 ;; Registers used:
  2920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2926 ;;      Params:         0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0
  2928 ;;      Temps:          0       1       0       0       0
  2929 ;;      Totals:         0       1       0       0       0
  2930 ;;Total ram usage:        1 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    6
  2933 ;; This function calls:
  2934 ;;		_ser_putch
  2935 ;;		_RobotBattRead
  2936 ;;		_UpdateDisplay
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           psect	text1063
  2942                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2943                           	line	358
  2944                           	global	__size_of_ChargeMode
  2945  004B                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2946                           	
  2947  13F7                     _ChargeMode:	
  2948                           	opt	stack 1
  2949                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2950                           	line	360
  2951                           	
  2952  13F7                     l11796:	
  2953                           ;Main.c: 360: currentMenu = 2;
  2954  13F7  3002               	movlw	(02h)
  2955  13F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2956  13F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2957  13FA  00D9               	movwf	(??_ChargeMode+0)+0
  2958  13FB  0859               	movf	(??_ChargeMode+0)+0,w
  2959  13FC  1683               	bsf	status, 5	;RP0=1, select bank1
  2960  13FD  1303               	bcf	status, 6	;RP1=0, select bank1
  2961  13FE  00D5               	movwf	(_currentMenu)^080h	;volatile
  2962                           	line	361
  2963                           	
  2964  13FF                     l11798:	
  2965                           ;Main.c: 361: ser_putch(128);
  2966  13FF  3080               	movlw	(080h)
  2967  1400  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  2968  1405  2C06               	goto	l11800
  2969                           	line	363
  2970                           ;Main.c: 363: while (1)
  2971                           	
  2972  1406                     l2298:	
  2973                           	line	365
  2974                           	
  2975  1406                     l11800:	
  2976                           ;Main.c: 364: {
  2977                           ;Main.c: 365: if (RTC_FLAG_250MS == 1)
  2978  1406  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2979  1407  2C09               	goto	u5321
  2980  1408  2C0A               	goto	u5320
  2981  1409                     u5321:
  2982  1409  2C2E               	goto	l11816
  2983  140A                     u5320:
  2984                           	line	367
  2985                           	
  2986  140A                     l11802:	
  2987                           ;Main.c: 366: {
  2988                           ;Main.c: 367: RTC_FLAG_250MS = 0;
  2989  140A  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2990                           	line	368
  2991                           	
  2992  140B                     l11804:	
  2993                           ;Main.c: 368: RobotBattRead();
  2994  140B  160A  118A  26E5   	fcall	_RobotBattRead
              160A  118A         
  2995                           	line	369
  2996                           ;Main.c: 369: UpdateDisplay();
  2997  1410  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  2998  1415  2C2E               	goto	l11816
  2999                           	line	370
  3000                           	
  3001  1416                     l2299:	
  3002                           	line	371
  3003                           ;Main.c: 370: }
  3004                           ;Main.c: 371: switch (buttonPressed)
  3005  1416  2C2E               	goto	l11816
  3006                           	line	373
  3007                           ;Main.c: 372: {
  3008                           ;Main.c: 373: case 1:
  3009                           	
  3010  1417                     l2301:	
  3011                           	line	374
  3012                           ;Main.c: 374: buttonPressed = 0;
  3013  1417  01FD               	clrf	(_buttonPressed)	;volatile
  3014                           	line	375
  3015                           ;Main.c: 375: break;
  3016  1418  2C06               	goto	l11800
  3017                           	line	376
  3018                           ;Main.c: 376: case 2:
  3019                           	
  3020  1419                     l2303:	
  3021                           	line	377
  3022                           ;Main.c: 377: buttonPressed = 0;
  3023  1419  01FD               	clrf	(_buttonPressed)	;volatile
  3024                           	line	378
  3025                           ;Main.c: 378: break;
  3026  141A  2C06               	goto	l11800
  3027                           	line	379
  3028                           ;Main.c: 379: case 3:
  3029                           	
  3030  141B                     l2304:	
  3031                           	line	380
  3032                           ;Main.c: 380: buttonPressed = 0;
  3033  141B  01FD               	clrf	(_buttonPressed)	;volatile
  3034                           	line	381
  3035                           ;Main.c: 381: break;
  3036  141C  2C06               	goto	l11800
  3037                           	line	382
  3038                           ;Main.c: 382: case 4:
  3039                           	
  3040  141D                     l2305:	
  3041                           	line	383
  3042                           ;Main.c: 383: buttonPressed = 0;
  3043  141D  01FD               	clrf	(_buttonPressed)	;volatile
  3044                           	line	384
  3045                           ;Main.c: 384: break;
  3046  141E  2C06               	goto	l11800
  3047                           	line	385
  3048                           ;Main.c: 385: case 5:
  3049                           	
  3050  141F                     l2306:	
  3051                           	line	386
  3052                           	
  3053  141F                     l11806:	
  3054                           ;Main.c: 386: ser_putch(132);
  3055  141F  3084               	movlw	(084h)
  3056  1420  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  3057                           	line	387
  3058                           	
  3059  1425                     l11808:	
  3060                           ;Main.c: 387: buttonPressed = 0;
  3061  1425  01FD               	clrf	(_buttonPressed)	;volatile
  3062                           	line	388
  3063                           	
  3064  1426                     l11810:	
  3065                           ;Main.c: 388: currentMenu = 0;
  3066  1426  1683               	bsf	status, 5	;RP0=1, select bank1
  3067  1427  1303               	bcf	status, 6	;RP1=0, select bank1
  3068  1428  01D5               	clrf	(_currentMenu)^080h	;volatile
  3069  1429  2C41               	goto	l2307
  3070                           	line	389
  3071                           	
  3072  142A                     l11812:	
  3073                           ;Main.c: 389: return;
  3074  142A  2C41               	goto	l2307
  3075                           	line	390
  3076                           ;Main.c: 390: default:
  3077                           	
  3078  142B                     l2308:	
  3079                           	line	391
  3080                           ;Main.c: 391: buttonPressed = 0;
  3081  142B  01FD               	clrf	(_buttonPressed)	;volatile
  3082                           	line	392
  3083                           ;Main.c: 392: break;
  3084  142C  2C06               	goto	l11800
  3085                           	line	393
  3086                           	
  3087  142D                     l11814:	
  3088                           ;Main.c: 393: }
  3089  142D  2C06               	goto	l11800
  3090                           	line	371
  3091                           	
  3092  142E                     l2300:	
  3093                           	
  3094  142E                     l11816:	
  3095  142E  087D               	movf	(_buttonPressed),w	;volatile
  3096                           	; Switch size 1, requested type "space"
  3097                           ; Number of cases is 5, Range of values is 1 to 5
  3098                           ; switch strategies available:
  3099                           ; Name         Instructions Cycles
  3100                           ; simple_byte           16     9 (average)
  3101                           ; direct_byte           26    11 (fixed)
  3102                           ; jumptable            263     9 (fixed)
  3103                           ;	Chosen strategy is simple_byte
  3104                           
  3105                           	opt asmopt_off
  3106  142F  3A01               	xorlw	1^0	; case 1
  3107  1430  1903               	skipnz
  3108  1431  2C17               	goto	l2301
  3109  1432  3A03               	xorlw	2^1	; case 2
  3110  1433  1903               	skipnz
  3111  1434  2C19               	goto	l2303
  3112  1435  3A01               	xorlw	3^2	; case 3
  3113  1436  1903               	skipnz
  3114  1437  2C1B               	goto	l2304
  3115  1438  3A07               	xorlw	4^3	; case 4
  3116  1439  1903               	skipnz
  3117  143A  2C1D               	goto	l2305
  3118  143B  3A01               	xorlw	5^4	; case 5
  3119  143C  1903               	skipnz
  3120  143D  2C1F               	goto	l11806
  3121  143E  2C2B               	goto	l2308
  3122                           	opt asmopt_on
  3123                           
  3124                           	line	393
  3125                           	
  3126  143F                     l2302:	
  3127  143F  2C06               	goto	l11800
  3128                           	line	394
  3129                           	
  3130  1440                     l2309:	
  3131                           	line	363
  3132  1440  2C06               	goto	l11800
  3133                           	
  3134  1441                     l2310:	
  3135                           	line	395
  3136                           	
  3137  1441                     l2307:	
  3138  1441  0008               	return
  3139                           	opt stack 0
  3140                           GLOBAL	__end_of_ChargeMode
  3141  1442                     	__end_of_ChargeMode:
  3142 ;; =============== function _ChargeMode ends ============
  3143                           
  3144                           	signat	_ChargeMode,88
  3145                           	global	_robot_turnRight
  3146                           psect	text1064,local,class=CODE,delta=2
  3147                           global __ptext1064
  3148  0015                     __ptext1064:
  3149                           
  3150 ;; *************** function _robot_turnRight *****************
  3151 ;; Defined at:
  3152 ;;		line 257 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  speed           2   57[BANK0 ] int 
  3155 ;;  AdcTarget       2   59[BANK0 ] int 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  temp1           2   64[BANK0 ] int 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         0       4       0       0       0
  3168 ;;      Locals:         0       2       0       0       0
  3169 ;;      Temps:          0       3       0       0       0
  3170 ;;      Totals:         0       9       0       0       0
  3171 ;;Total ram usage:        9 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    7
  3174 ;; This function calls:
  3175 ;;		_RobotDrive
  3176 ;;		_readAvgDistance
  3177 ;;		_ser_putch
  3178 ;;		_robot_read
  3179 ;;		_UpdateDisplay
  3180 ;;		___wmul
  3181 ;;		___awdiv
  3182 ;;		_abs
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;;		_RightTurn
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           psect	text1064
  3189                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3190                           	line	257
  3191                           	global	__size_of_robot_turnRight
  3192  0257                     	__size_of_robot_turnRight	equ	__end_of_robot_turnRight-_robot_turnRight
  3193                           	
  3194  0015                     _robot_turnRight:	
  3195                           	opt	stack 0
  3196                           ; Regs used in _robot_turnRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3197                           	line	258
  3198                           	
  3199  0015                     l11698:	
  3200                           ;robot.c: 258: angleTurned = 0;
  3201  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  3202  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  3203  0017  01BE               	clrf	(_angleTurned)^080h
  3204  0018  01BF               	clrf	(_angleTurned+1)^080h
  3205                           	line	260
  3206                           	
  3207  0019                     l11700:	
  3208                           ;robot.c: 259: int temp1;
  3209                           ;robot.c: 260: RobotDrive(speed, 0x7FFF);
  3210  0019  1283               	bcf	status, 5	;RP0=0, select bank0
  3211  001A  1303               	bcf	status, 6	;RP1=0, select bank0
  3212  001B  085A               	movf	(robot_turnRight@speed+1),w
  3213  001C  01B0               	clrf	(?_RobotDrive+1)
  3214  001D  07B0               	addwf	(?_RobotDrive+1)
  3215  001E  0859               	movf	(robot_turnRight@speed),w
  3216  001F  01AF               	clrf	(?_RobotDrive)
  3217  0020  07AF               	addwf	(?_RobotDrive)
  3218                           
  3219  0021  30FF               	movlw	low(07FFFh)
  3220  0022  00B1               	movwf	0+(?_RobotDrive)+02h
  3221  0023  307F               	movlw	high(07FFFh)
  3222  0024  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3223  0025  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  3224                           	line	261
  3225                           	
  3226  002A                     l11702:	
  3227                           ;robot.c: 261: ROBOTerror = 0;
  3228  002A  1683               	bsf	status, 5	;RP0=1, select bank1
  3229  002B  1303               	bcf	status, 6	;RP1=0, select bank1
  3230  002C  01D2               	clrf	(_ROBOTerror)^080h
  3231  002D  282E               	goto	l11704
  3232                           	line	264
  3233                           ;robot.c: 264: while (1)
  3234                           	
  3235  002E                     l6126:	
  3236                           	line	266
  3237                           	
  3238  002E                     l11704:	
  3239                           ;robot.c: 265: {
  3240                           ;robot.c: 266: readAvgDistance();
  3241  002E  160A  118A  2667   	fcall	_readAvgDistance
              120A  118A         
  3242                           	line	267
  3243                           	
  3244  0033                     l11706:	
  3245                           ;robot.c: 267: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 15))
  3246  0033  1283               	bcf	status, 5	;RP0=0, select bank0
  3247  0034  1303               	bcf	status, 6	;RP1=0, select bank0
  3248  0035  086B               	movf	(_adcVal+1),w	;volatile
  3249  0036  025C               	subwf	(robot_turnRight@AdcTarget+1),w
  3250  0037  1D03               	skipz
  3251  0038  283B               	goto	u5195
  3252  0039  086A               	movf	(_adcVal),w	;volatile
  3253  003A  025B               	subwf	(robot_turnRight@AdcTarget),w
  3254  003B                     u5195:
  3255  003B  1803               	skipnc
  3256  003C  283E               	goto	u5191
  3257  003D  283F               	goto	u5190
  3258  003E                     u5191:
  3259  003E  2861               	goto	l11712
  3260  003F                     u5190:
  3261                           	
  3262  003F                     l11708:	
  3263  003F  085B               	movf	(robot_turnRight@AdcTarget),w
  3264  0040  3E0F               	addlw	low(0Fh)
  3265  0041  00DD               	movwf	(??_robot_turnRight+0)+0
  3266  0042  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3267  0043  1803               	skipnc
  3268  0044  3E01               	addlw	1
  3269  0045  3E00               	addlw	high(0Fh)
  3270  0046  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3271  0047  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3272  0048  026B               	subwf	(_adcVal+1),w	;volatile
  3273  0049  1D03               	skipz
  3274  004A  284D               	goto	u5205
  3275  004B  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3276  004C  026A               	subwf	(_adcVal),w	;volatile
  3277  004D                     u5205:
  3278  004D  1803               	skipnc
  3279  004E  2850               	goto	u5201
  3280  004F  2851               	goto	u5200
  3281  0050                     u5201:
  3282  0050  2861               	goto	l11712
  3283  0051                     u5200:
  3284                           	line	269
  3285                           	
  3286  0051                     l11710:	
  3287                           ;robot.c: 268: {
  3288                           ;robot.c: 269: RobotDrive(speed, 1700);
  3289  0051  085A               	movf	(robot_turnRight@speed+1),w
  3290  0052  01B0               	clrf	(?_RobotDrive+1)
  3291  0053  07B0               	addwf	(?_RobotDrive+1)
  3292  0054  0859               	movf	(robot_turnRight@speed),w
  3293  0055  01AF               	clrf	(?_RobotDrive)
  3294  0056  07AF               	addwf	(?_RobotDrive)
  3295                           
  3296  0057  30A4               	movlw	low(06A4h)
  3297  0058  00B1               	movwf	0+(?_RobotDrive)+02h
  3298  0059  3006               	movlw	high(06A4h)
  3299  005A  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3300  005B  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  3301                           	line	270
  3302                           ;robot.c: 270: }
  3303  0060  28D7               	goto	l6128
  3304                           	line	271
  3305                           	
  3306  0061                     l6127:	
  3307                           	
  3308  0061                     l11712:	
  3309                           ;robot.c: 271: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - 15))
  3310  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  3311  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  3312  0063  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3313  0064  026B               	subwf	(_adcVal+1),w	;volatile
  3314  0065  1D03               	skipz
  3315  0066  2869               	goto	u5215
  3316  0067  085B               	movf	(robot_turnRight@AdcTarget),w
  3317  0068  026A               	subwf	(_adcVal),w	;volatile
  3318  0069                     u5215:
  3319  0069  1803               	skipnc
  3320  006A  286C               	goto	u5211
  3321  006B  286D               	goto	u5210
  3322  006C                     u5211:
  3323  006C  288F               	goto	l11718
  3324  006D                     u5210:
  3325                           	
  3326  006D                     l11714:	
  3327  006D  085B               	movf	(robot_turnRight@AdcTarget),w
  3328  006E  3EF1               	addlw	low(0FFF1h)
  3329  006F  00DD               	movwf	(??_robot_turnRight+0)+0
  3330  0070  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3331  0071  1803               	skipnc
  3332  0072  3E01               	addlw	1
  3333  0073  3EFF               	addlw	high(0FFF1h)
  3334  0074  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3335  0075  086B               	movf	(_adcVal+1),w	;volatile
  3336  0076  025E               	subwf	1+(??_robot_turnRight+0)+0,w
  3337  0077  1D03               	skipz
  3338  0078  287B               	goto	u5225
  3339  0079  086A               	movf	(_adcVal),w	;volatile
  3340  007A  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3341  007B                     u5225:
  3342  007B  1803               	skipnc
  3343  007C  287E               	goto	u5221
  3344  007D  287F               	goto	u5220
  3345  007E                     u5221:
  3346  007E  288F               	goto	l11718
  3347  007F                     u5220:
  3348                           	line	273
  3349                           	
  3350  007F                     l11716:	
  3351                           ;robot.c: 272: {
  3352                           ;robot.c: 273: RobotDrive(speed, -1700);
  3353  007F  085A               	movf	(robot_turnRight@speed+1),w
  3354  0080  01B0               	clrf	(?_RobotDrive+1)
  3355  0081  07B0               	addwf	(?_RobotDrive+1)
  3356  0082  0859               	movf	(robot_turnRight@speed),w
  3357  0083  01AF               	clrf	(?_RobotDrive)
  3358  0084  07AF               	addwf	(?_RobotDrive)
  3359                           
  3360  0085  305C               	movlw	low(-1700)
  3361  0086  00B1               	movwf	0+(?_RobotDrive)+02h
  3362  0087  30F9               	movlw	high(-1700)
  3363  0088  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3364  0089  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  3365                           	line	274
  3366                           ;robot.c: 274: }
  3367  008E  28D7               	goto	l6128
  3368                           	line	275
  3369                           	
  3370  008F                     l6129:	
  3371                           	
  3372  008F                     l11718:	
  3373                           ;robot.c: 275: else if (adcVal <= (AdcTarget - 50) || adcVal >= (AdcTarget + 15))
  3374  008F  1283               	bcf	status, 5	;RP0=0, select bank0
  3375  0090  1303               	bcf	status, 6	;RP1=0, select bank0
  3376  0091  085B               	movf	(robot_turnRight@AdcTarget),w
  3377  0092  3ECE               	addlw	low(0FFCEh)
  3378  0093  00DD               	movwf	(??_robot_turnRight+0)+0
  3379  0094  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3380  0095  1803               	skipnc
  3381  0096  3E01               	addlw	1
  3382  0097  3EFF               	addlw	high(0FFCEh)
  3383  0098  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3384  0099  086B               	movf	(_adcVal+1),w	;volatile
  3385  009A  025E               	subwf	1+(??_robot_turnRight+0)+0,w
  3386  009B  1D03               	skipz
  3387  009C  289F               	goto	u5235
  3388  009D  086A               	movf	(_adcVal),w	;volatile
  3389  009E  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3390  009F                     u5235:
  3391  009F  1803               	skipnc
  3392  00A0  28A2               	goto	u5231
  3393  00A1  28A3               	goto	u5230
  3394  00A2                     u5231:
  3395  00A2  28B6               	goto	l11722
  3396  00A3                     u5230:
  3397                           	
  3398  00A3                     l11720:	
  3399  00A3  085B               	movf	(robot_turnRight@AdcTarget),w
  3400  00A4  3E0F               	addlw	low(0Fh)
  3401  00A5  00DD               	movwf	(??_robot_turnRight+0)+0
  3402  00A6  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3403  00A7  1803               	skipnc
  3404  00A8  3E01               	addlw	1
  3405  00A9  3E00               	addlw	high(0Fh)
  3406  00AA  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3407  00AB  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3408  00AC  026B               	subwf	(_adcVal+1),w	;volatile
  3409  00AD  1D03               	skipz
  3410  00AE  28B1               	goto	u5245
  3411  00AF  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3412  00B0  026A               	subwf	(_adcVal),w	;volatile
  3413  00B1                     u5245:
  3414  00B1  1C03               	skipc
  3415  00B2  28B4               	goto	u5241
  3416  00B3  28B5               	goto	u5240
  3417  00B4                     u5241:
  3418  00B4  28C4               	goto	l11726
  3419  00B5                     u5240:
  3420  00B5  28B6               	goto	l11722
  3421                           	
  3422  00B6                     l6133:	
  3423                           	line	282
  3424                           	
  3425  00B6                     l11722:	
  3426                           ;robot.c: 276: {
  3427                           ;robot.c: 282: ser_putch(141);
  3428  00B6  308D               	movlw	(08Dh)
  3429  00B7  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  3430                           	line	283
  3431                           ;robot.c: 283: ser_putch(0);
  3432  00BC  3000               	movlw	(0)
  3433  00BD  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  3434                           	line	284
  3435                           ;robot.c: 284: break;
  3436  00C2  2975               	goto	l11758
  3437                           	line	286
  3438                           	
  3439  00C3                     l11724:	
  3440                           ;robot.c: 286: }
  3441  00C3  28D7               	goto	l6128
  3442                           	line	288
  3443                           	
  3444  00C4                     l6131:	
  3445                           	line	290
  3446                           	
  3447  00C4                     l11726:	
  3448                           ;robot.c: 288: else
  3449                           ;robot.c: 289: {
  3450                           ;robot.c: 290: RobotDrive(speed, 0x7FFF);
  3451  00C4  1283               	bcf	status, 5	;RP0=0, select bank0
  3452  00C5  1303               	bcf	status, 6	;RP1=0, select bank0
  3453  00C6  085A               	movf	(robot_turnRight@speed+1),w
  3454  00C7  01B0               	clrf	(?_RobotDrive+1)
  3455  00C8  07B0               	addwf	(?_RobotDrive+1)
  3456  00C9  0859               	movf	(robot_turnRight@speed),w
  3457  00CA  01AF               	clrf	(?_RobotDrive)
  3458  00CB  07AF               	addwf	(?_RobotDrive)
  3459                           
  3460  00CC  30FF               	movlw	low(07FFFh)
  3461  00CD  00B1               	movwf	0+(?_RobotDrive)+02h
  3462  00CE  307F               	movlw	high(07FFFh)
  3463  00CF  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3464  00D0  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  3465  00D5  28D7               	goto	l6128
  3466                           	line	291
  3467                           	
  3468  00D6                     l6135:	
  3469  00D6  28D7               	goto	l6128
  3470                           	
  3471  00D7                     l6130:	
  3472                           	
  3473  00D7                     l6128:	
  3474                           	line	292
  3475                           ;robot.c: 291: }
  3476                           ;robot.c: 292: robot_read(2);
  3477  00D7  3002               	movlw	(02h)
  3478  00D8  120A  118A  26C2   	fcall	_robot_read
              120A  118A         
  3479                           	line	293
  3480                           	
  3481  00DD                     l11728:	
  3482                           ;robot.c: 293: if (BumpSensors)
  3483  00DD  1283               	bcf	status, 5	;RP0=0, select bank0
  3484  00DE  1303               	bcf	status, 6	;RP1=0, select bank0
  3485  00DF  086C               	movf	(_BumpSensors),w	;volatile
  3486  00E0  1D03               	skipz
  3487  00E1  28E3               	goto	u5250
  3488  00E2  28E9               	goto	l11732
  3489  00E3                     u5250:
  3490                           	line	295
  3491                           	
  3492  00E3                     l11730:	
  3493                           ;robot.c: 294: {
  3494                           ;robot.c: 295: ROBOTerror = 1;
  3495  00E3  1683               	bsf	status, 5	;RP0=1, select bank1
  3496  00E4  1303               	bcf	status, 6	;RP1=0, select bank1
  3497  00E5  01D2               	clrf	(_ROBOTerror)^080h
  3498  00E6  1403               	bsf	status,0
  3499  00E7  0DD2               	rlf	(_ROBOTerror)^080h,f
  3500                           	line	296
  3501                           ;robot.c: 296: break;
  3502  00E8  2975               	goto	l11758
  3503                           	line	297
  3504                           	
  3505  00E9                     l6136:	
  3506                           	line	298
  3507                           	
  3508  00E9                     l11732:	
  3509                           ;robot.c: 297: }
  3510                           ;robot.c: 298: if (VwallSensor)
  3511  00E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3512  00EA  086F               	movf	(_VwallSensor),w	;volatile
  3513  00EB  1D03               	skipz
  3514  00EC  28EE               	goto	u5260
  3515  00ED  28F5               	goto	l11736
  3516  00EE                     u5260:
  3517                           	line	300
  3518                           	
  3519  00EE                     l11734:	
  3520                           ;robot.c: 299: {
  3521                           ;robot.c: 300: ROBOTerror = 2;
  3522  00EE  3002               	movlw	(02h)
  3523  00EF  00DD               	movwf	(??_robot_turnRight+0)+0
  3524  00F0  085D               	movf	(??_robot_turnRight+0)+0,w
  3525  00F1  1683               	bsf	status, 5	;RP0=1, select bank1
  3526  00F2  1303               	bcf	status, 6	;RP1=0, select bank1
  3527  00F3  00D2               	movwf	(_ROBOTerror)^080h
  3528                           	line	301
  3529                           ;robot.c: 301: break;
  3530  00F4  2975               	goto	l11758
  3531                           	line	302
  3532                           	
  3533  00F5                     l6137:	
  3534                           	line	303
  3535                           	
  3536  00F5                     l11736:	
  3537                           ;robot.c: 302: }
  3538                           ;robot.c: 303: if (CliffSensors)
  3539  00F5  1683               	bsf	status, 5	;RP0=1, select bank1
  3540  00F6  1303               	bcf	status, 6	;RP1=0, select bank1
  3541  00F7  084F               	movf	(_CliffSensors)^080h,w	;volatile
  3542  00F8  1D03               	skipz
  3543  00F9  28FB               	goto	u5270
  3544  00FA  2904               	goto	l11740
  3545  00FB                     u5270:
  3546                           	line	305
  3547                           	
  3548  00FB                     l11738:	
  3549                           ;robot.c: 304: {
  3550                           ;robot.c: 305: ROBOTerror = 3;
  3551  00FB  3003               	movlw	(03h)
  3552  00FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3553  00FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3554  00FE  00DD               	movwf	(??_robot_turnRight+0)+0
  3555  00FF  085D               	movf	(??_robot_turnRight+0)+0,w
  3556  0100  1683               	bsf	status, 5	;RP0=1, select bank1
  3557  0101  1303               	bcf	status, 6	;RP1=0, select bank1
  3558  0102  00D2               	movwf	(_ROBOTerror)^080h
  3559                           	line	306
  3560                           ;robot.c: 306: break;
  3561  0103  2975               	goto	l11758
  3562                           	line	307
  3563                           	
  3564  0104                     l6138:	
  3565                           	line	308
  3566                           	
  3567  0104                     l11740:	
  3568                           ;robot.c: 307: }
  3569                           ;robot.c: 308: temp1 = DistHighByte;
  3570  0104  1283               	bcf	status, 5	;RP0=0, select bank0
  3571  0105  1303               	bcf	status, 6	;RP1=0, select bank0
  3572  0106  086D               	movf	(_DistHighByte),w	;volatile
  3573  0107  00DD               	movwf	(??_robot_turnRight+0)+0
  3574  0108  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3575  0109  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3576  010A  00E0               	movwf	(robot_turnRight@temp1)
  3577  010B  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3578  010C  00E1               	movwf	(robot_turnRight@temp1+1)
  3579                           	line	309
  3580                           	
  3581  010D                     l11742:	
  3582                           ;robot.c: 309: temp1 = temp1 << 8;
  3583  010D  0861               	movf	(robot_turnRight@temp1+1),w
  3584  010E  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3585  010F  0860               	movf	(robot_turnRight@temp1),w
  3586  0110  00DD               	movwf	(??_robot_turnRight+0)+0
  3587  0111  085D               	movf	(??_robot_turnRight+0)+0,w
  3588  0112  00DE               	movwf	(??_robot_turnRight+0)+1
  3589  0113  01DD               	clrf	(??_robot_turnRight+0)+0
  3590  0114  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3591  0115  00E0               	movwf	(robot_turnRight@temp1)
  3592  0116  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3593  0117  00E1               	movwf	(robot_turnRight@temp1+1)
  3594                           	line	310
  3595                           	
  3596  0118                     l11744:	
  3597                           ;robot.c: 310: temp1 += DistLowByte;
  3598  0118  086E               	movf	(_DistLowByte),w	;volatile
  3599  0119  00DD               	movwf	(??_robot_turnRight+0)+0
  3600  011A  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3601  011B  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3602  011C  07E0               	addwf	(robot_turnRight@temp1),f
  3603  011D  1803               	skipnc
  3604  011E  0AE1               	incf	(robot_turnRight@temp1+1),f
  3605  011F  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3606  0120  07E1               	addwf	(robot_turnRight@temp1+1),f
  3607                           	line	311
  3608                           	
  3609  0121                     l11746:	
  3610                           ;robot.c: 311: distTravelled += temp1;
  3611  0121  0860               	movf	(robot_turnRight@temp1),w
  3612  0122  1683               	bsf	status, 5	;RP0=1, select bank1
  3613  0123  1303               	bcf	status, 6	;RP1=0, select bank1
  3614  0124  07C0               	addwf	(_distTravelled)^080h,f
  3615  0125  1803               	skipnc
  3616  0126  0AC1               	incf	(_distTravelled+1)^080h,f
  3617  0127  1283               	bcf	status, 5	;RP0=0, select bank0
  3618  0128  1303               	bcf	status, 6	;RP1=0, select bank0
  3619  0129  0861               	movf	(robot_turnRight@temp1+1),w
  3620  012A  1683               	bsf	status, 5	;RP0=1, select bank1
  3621  012B  1303               	bcf	status, 6	;RP1=0, select bank1
  3622  012C  07C1               	addwf	(_distTravelled+1)^080h,f
  3623                           	line	312
  3624                           	
  3625  012D                     l11748:	
  3626                           ;robot.c: 312: TotalDistTravelled += temp1;
  3627  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  3628  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  3629  012F  0860               	movf	(robot_turnRight@temp1),w
  3630  0130  1683               	bsf	status, 5	;RP0=1, select bank1
  3631  0131  1303               	bcf	status, 6	;RP1=0, select bank1
  3632  0132  07BC               	addwf	(_TotalDistTravelled)^080h,f
  3633  0133  1803               	skipnc
  3634  0134  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  3635  0135  1283               	bcf	status, 5	;RP0=0, select bank0
  3636  0136  1303               	bcf	status, 6	;RP1=0, select bank0
  3637  0137  0861               	movf	(robot_turnRight@temp1+1),w
  3638  0138  1683               	bsf	status, 5	;RP0=1, select bank1
  3639  0139  1303               	bcf	status, 6	;RP1=0, select bank1
  3640  013A  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  3641                           	line	313
  3642                           	
  3643  013B                     l11750:	
  3644                           ;robot.c: 313: temp1 = AngleHighByte;
  3645  013B  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  3646  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  3647  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  3648  013E  00DD               	movwf	(??_robot_turnRight+0)+0
  3649  013F  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3650  0140  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3651  0141  00E0               	movwf	(robot_turnRight@temp1)
  3652  0142  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3653  0143  00E1               	movwf	(robot_turnRight@temp1+1)
  3654                           	line	314
  3655                           	
  3656  0144                     l11752:	
  3657                           ;robot.c: 314: temp1 = temp1 << 8;
  3658  0144  0861               	movf	(robot_turnRight@temp1+1),w
  3659  0145  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3660  0146  0860               	movf	(robot_turnRight@temp1),w
  3661  0147  00DD               	movwf	(??_robot_turnRight+0)+0
  3662  0148  085D               	movf	(??_robot_turnRight+0)+0,w
  3663  0149  00DE               	movwf	(??_robot_turnRight+0)+1
  3664  014A  01DD               	clrf	(??_robot_turnRight+0)+0
  3665  014B  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3666  014C  00E0               	movwf	(robot_turnRight@temp1)
  3667  014D  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3668  014E  00E1               	movwf	(robot_turnRight@temp1+1)
  3669                           	line	315
  3670                           ;robot.c: 315: temp1 += AngleLowByte;
  3671  014F  1683               	bsf	status, 5	;RP0=1, select bank1
  3672  0150  1303               	bcf	status, 6	;RP1=0, select bank1
  3673  0151  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  3674  0152  1283               	bcf	status, 5	;RP0=0, select bank0
  3675  0153  1303               	bcf	status, 6	;RP1=0, select bank0
  3676  0154  00DD               	movwf	(??_robot_turnRight+0)+0
  3677  0155  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3678  0156  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3679  0157  07E0               	addwf	(robot_turnRight@temp1),f
  3680  0158  1803               	skipnc
  3681  0159  0AE1               	incf	(robot_turnRight@temp1+1),f
  3682  015A  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3683  015B  07E1               	addwf	(robot_turnRight@temp1+1),f
  3684                           	line	316
  3685                           ;robot.c: 316: angleTurned += temp1;
  3686  015C  0860               	movf	(robot_turnRight@temp1),w
  3687  015D  1683               	bsf	status, 5	;RP0=1, select bank1
  3688  015E  1303               	bcf	status, 6	;RP1=0, select bank1
  3689  015F  07BE               	addwf	(_angleTurned)^080h,f
  3690  0160  1803               	skipnc
  3691  0161  0ABF               	incf	(_angleTurned+1)^080h,f
  3692  0162  1283               	bcf	status, 5	;RP0=0, select bank0
  3693  0163  1303               	bcf	status, 6	;RP1=0, select bank0
  3694  0164  0861               	movf	(robot_turnRight@temp1+1),w
  3695  0165  1683               	bsf	status, 5	;RP0=1, select bank1
  3696  0166  1303               	bcf	status, 6	;RP1=0, select bank1
  3697  0167  07BF               	addwf	(_angleTurned+1)^080h,f
  3698                           	line	317
  3699                           	
  3700  0168                     l11754:	
  3701                           ;robot.c: 317: Disp2 = angleTurned;
  3702  0168  083F               	movf	(_angleTurned+1)^080h,w
  3703  0169  01B7               	clrf	(_Disp2+1)^080h
  3704  016A  07B7               	addwf	(_Disp2+1)^080h
  3705  016B  083E               	movf	(_angleTurned)^080h,w
  3706  016C  01B6               	clrf	(_Disp2)^080h
  3707  016D  07B6               	addwf	(_Disp2)^080h
  3708                           
  3709                           	line	318
  3710                           	
  3711  016E                     l11756:	
  3712                           ;robot.c: 318: UpdateDisplay();
  3713  016E  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3714  0173  282E               	goto	l11704
  3715                           	line	319
  3716                           	
  3717  0174                     l6139:	
  3718                           	line	264
  3719  0174  282E               	goto	l11704
  3720                           	
  3721  0175                     l6134:	
  3722                           	line	320
  3723                           	
  3724  0175                     l11758:	
  3725                           ;robot.c: 319: }
  3726                           ;robot.c: 320: RobotDrive((speed * 3/4), -400);
  3727  0175  3004               	movlw	low(04h)
  3728  0176  1283               	bcf	status, 5	;RP0=0, select bank0
  3729  0177  1303               	bcf	status, 6	;RP1=0, select bank0
  3730  0178  00A6               	movwf	(?___awdiv)
  3731  0179  3000               	movlw	high(04h)
  3732  017A  00A7               	movwf	((?___awdiv))+1
  3733  017B  085A               	movf	(robot_turnRight@speed+1),w
  3734  017C  01A1               	clrf	(?___wmul+1)
  3735  017D  07A1               	addwf	(?___wmul+1)
  3736  017E  0859               	movf	(robot_turnRight@speed),w
  3737  017F  01A0               	clrf	(?___wmul)
  3738  0180  07A0               	addwf	(?___wmul)
  3739                           
  3740  0181  3003               	movlw	low(03h)
  3741  0182  00A2               	movwf	0+(?___wmul)+02h
  3742  0183  3000               	movlw	high(03h)
  3743  0184  00A3               	movwf	(0+(?___wmul)+02h)+1
  3744  0185  160A  118A  217B   	fcall	___wmul
              120A  118A         
  3745  018A  1283               	bcf	status, 5	;RP0=0, select bank0
  3746  018B  1303               	bcf	status, 6	;RP1=0, select bank0
  3747  018C  0821               	movf	(1+(?___wmul)),w
  3748  018D  01A9               	clrf	1+(?___awdiv)+02h
  3749  018E  07A9               	addwf	1+(?___awdiv)+02h
  3750  018F  0820               	movf	(0+(?___wmul)),w
  3751  0190  01A8               	clrf	0+(?___awdiv)+02h
  3752  0191  07A8               	addwf	0+(?___awdiv)+02h
  3753                           
  3754  0192  160A  118A  25F1   	fcall	___awdiv
              120A  118A         
  3755  0197  1283               	bcf	status, 5	;RP0=0, select bank0
  3756  0198  1303               	bcf	status, 6	;RP1=0, select bank0
  3757  0199  0827               	movf	(1+(?___awdiv)),w
  3758  019A  01B0               	clrf	(?_RobotDrive+1)
  3759  019B  07B0               	addwf	(?_RobotDrive+1)
  3760  019C  0826               	movf	(0+(?___awdiv)),w
  3761  019D  01AF               	clrf	(?_RobotDrive)
  3762  019E  07AF               	addwf	(?_RobotDrive)
  3763                           
  3764  019F  3070               	movlw	low(-400)
  3765  01A0  00B1               	movwf	0+(?_RobotDrive)+02h
  3766  01A1  30FE               	movlw	high(-400)
  3767  01A2  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3768  01A3  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  3769                           	line	321
  3770                           	
  3771  01A8                     l11760:	
  3772                           ;robot.c: 321: angleTurned = 0;
  3773  01A8  1683               	bsf	status, 5	;RP0=1, select bank1
  3774  01A9  1303               	bcf	status, 6	;RP1=0, select bank1
  3775  01AA  01BE               	clrf	(_angleTurned)^080h
  3776  01AB  01BF               	clrf	(_angleTurned+1)^080h
  3777                           	line	322
  3778                           ;robot.c: 322: while (abs(angleTurned) < abs(-70))
  3779  01AC  2A13               	goto	l11788
  3780                           	
  3781  01AD                     l6141:	
  3782                           	line	324
  3783                           	
  3784  01AD                     l11762:	
  3785                           ;robot.c: 323: {
  3786                           ;robot.c: 324: robot_read(1);
  3787  01AD  3001               	movlw	(01h)
  3788  01AE  120A  118A  26C2   	fcall	_robot_read
              120A  118A         
  3789                           	line	325
  3790                           	
  3791  01B3                     l11764:	
  3792                           ;robot.c: 325: if (BumpSensors)
  3793  01B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3794  01B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3795  01B5  086C               	movf	(_BumpSensors),w	;volatile
  3796  01B6  1D03               	skipz
  3797  01B7  29B9               	goto	u5280
  3798  01B8  29BF               	goto	l11768
  3799  01B9                     u5280:
  3800                           	line	327
  3801                           	
  3802  01B9                     l11766:	
  3803                           ;robot.c: 326: {
  3804                           ;robot.c: 327: ROBOTerror = 1;
  3805  01B9  1683               	bsf	status, 5	;RP0=1, select bank1
  3806  01BA  1303               	bcf	status, 6	;RP1=0, select bank1
  3807  01BB  01D2               	clrf	(_ROBOTerror)^080h
  3808  01BC  1403               	bsf	status,0
  3809  01BD  0DD2               	rlf	(_ROBOTerror)^080h,f
  3810                           	line	328
  3811                           ;robot.c: 328: break;
  3812  01BE  2A46               	goto	l11790
  3813                           	line	329
  3814                           	
  3815  01BF                     l6142:	
  3816                           	line	330
  3817                           	
  3818  01BF                     l11768:	
  3819                           ;robot.c: 329: }
  3820                           ;robot.c: 330: if (VwallSensor)
  3821  01BF  1283               	bcf	status, 5	;RP0=0, select bank0
  3822  01C0  086F               	movf	(_VwallSensor),w	;volatile
  3823  01C1  1D03               	skipz
  3824  01C2  29C4               	goto	u5290
  3825  01C3  29CB               	goto	l11772
  3826  01C4                     u5290:
  3827                           	line	332
  3828                           	
  3829  01C4                     l11770:	
  3830                           ;robot.c: 331: {
  3831                           ;robot.c: 332: ROBOTerror = 2;
  3832  01C4  3002               	movlw	(02h)
  3833  01C5  00DD               	movwf	(??_robot_turnRight+0)+0
  3834  01C6  085D               	movf	(??_robot_turnRight+0)+0,w
  3835  01C7  1683               	bsf	status, 5	;RP0=1, select bank1
  3836  01C8  1303               	bcf	status, 6	;RP1=0, select bank1
  3837  01C9  00D2               	movwf	(_ROBOTerror)^080h
  3838                           	line	333
  3839                           ;robot.c: 333: break;
  3840  01CA  2A46               	goto	l11790
  3841                           	line	334
  3842                           	
  3843  01CB                     l6144:	
  3844                           	line	335
  3845                           	
  3846  01CB                     l11772:	
  3847                           ;robot.c: 334: }
  3848                           ;robot.c: 335: if (CliffSensors)
  3849  01CB  1683               	bsf	status, 5	;RP0=1, select bank1
  3850  01CC  1303               	bcf	status, 6	;RP1=0, select bank1
  3851  01CD  084F               	movf	(_CliffSensors)^080h,w	;volatile
  3852  01CE  1D03               	skipz
  3853  01CF  29D1               	goto	u5300
  3854  01D0  29DA               	goto	l11776
  3855  01D1                     u5300:
  3856                           	line	337
  3857                           	
  3858  01D1                     l11774:	
  3859                           ;robot.c: 336: {
  3860                           ;robot.c: 337: ROBOTerror = 3;
  3861  01D1  3003               	movlw	(03h)
  3862  01D2  1283               	bcf	status, 5	;RP0=0, select bank0
  3863  01D3  1303               	bcf	status, 6	;RP1=0, select bank0
  3864  01D4  00DD               	movwf	(??_robot_turnRight+0)+0
  3865  01D5  085D               	movf	(??_robot_turnRight+0)+0,w
  3866  01D6  1683               	bsf	status, 5	;RP0=1, select bank1
  3867  01D7  1303               	bcf	status, 6	;RP1=0, select bank1
  3868  01D8  00D2               	movwf	(_ROBOTerror)^080h
  3869                           	line	338
  3870                           ;robot.c: 338: break;
  3871  01D9  2A46               	goto	l11790
  3872                           	line	339
  3873                           	
  3874  01DA                     l6145:	
  3875                           	line	340
  3876                           	
  3877  01DA                     l11776:	
  3878                           ;robot.c: 339: }
  3879                           ;robot.c: 340: temp1 = AngleHighByte;
  3880  01DA  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  3881  01DB  1283               	bcf	status, 5	;RP0=0, select bank0
  3882  01DC  1303               	bcf	status, 6	;RP1=0, select bank0
  3883  01DD  00DD               	movwf	(??_robot_turnRight+0)+0
  3884  01DE  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3885  01DF  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3886  01E0  00E0               	movwf	(robot_turnRight@temp1)
  3887  01E1  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3888  01E2  00E1               	movwf	(robot_turnRight@temp1+1)
  3889                           	line	341
  3890                           	
  3891  01E3                     l11778:	
  3892                           ;robot.c: 341: temp1 = temp1 << 8;
  3893  01E3  0861               	movf	(robot_turnRight@temp1+1),w
  3894  01E4  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3895  01E5  0860               	movf	(robot_turnRight@temp1),w
  3896  01E6  00DD               	movwf	(??_robot_turnRight+0)+0
  3897  01E7  085D               	movf	(??_robot_turnRight+0)+0,w
  3898  01E8  00DE               	movwf	(??_robot_turnRight+0)+1
  3899  01E9  01DD               	clrf	(??_robot_turnRight+0)+0
  3900  01EA  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3901  01EB  00E0               	movwf	(robot_turnRight@temp1)
  3902  01EC  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3903  01ED  00E1               	movwf	(robot_turnRight@temp1+1)
  3904                           	line	342
  3905                           	
  3906  01EE                     l11780:	
  3907                           ;robot.c: 342: temp1 += AngleLowByte;
  3908  01EE  1683               	bsf	status, 5	;RP0=1, select bank1
  3909  01EF  1303               	bcf	status, 6	;RP1=0, select bank1
  3910  01F0  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  3911  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  3912  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  3913  01F3  00DD               	movwf	(??_robot_turnRight+0)+0
  3914  01F4  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3915  01F5  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3916  01F6  07E0               	addwf	(robot_turnRight@temp1),f
  3917  01F7  1803               	skipnc
  3918  01F8  0AE1               	incf	(robot_turnRight@temp1+1),f
  3919  01F9  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3920  01FA  07E1               	addwf	(robot_turnRight@temp1+1),f
  3921                           	line	343
  3922                           	
  3923  01FB                     l11782:	
  3924                           ;robot.c: 343: angleTurned += temp1;
  3925  01FB  0860               	movf	(robot_turnRight@temp1),w
  3926  01FC  1683               	bsf	status, 5	;RP0=1, select bank1
  3927  01FD  1303               	bcf	status, 6	;RP1=0, select bank1
  3928  01FE  07BE               	addwf	(_angleTurned)^080h,f
  3929  01FF  1803               	skipnc
  3930  0200  0ABF               	incf	(_angleTurned+1)^080h,f
  3931  0201  1283               	bcf	status, 5	;RP0=0, select bank0
  3932  0202  1303               	bcf	status, 6	;RP1=0, select bank0
  3933  0203  0861               	movf	(robot_turnRight@temp1+1),w
  3934  0204  1683               	bsf	status, 5	;RP0=1, select bank1
  3935  0205  1303               	bcf	status, 6	;RP1=0, select bank1
  3936  0206  07BF               	addwf	(_angleTurned+1)^080h,f
  3937                           	line	344
  3938                           	
  3939  0207                     l11784:	
  3940                           ;robot.c: 344: Disp2 = angleTurned;
  3941  0207  083F               	movf	(_angleTurned+1)^080h,w
  3942  0208  01B7               	clrf	(_Disp2+1)^080h
  3943  0209  07B7               	addwf	(_Disp2+1)^080h
  3944  020A  083E               	movf	(_angleTurned)^080h,w
  3945  020B  01B6               	clrf	(_Disp2)^080h
  3946  020C  07B6               	addwf	(_Disp2)^080h
  3947                           
  3948                           	line	345
  3949                           	
  3950  020D                     l11786:	
  3951                           ;robot.c: 345: UpdateDisplay();
  3952  020D  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3953  0212  2A13               	goto	l11788
  3954                           	line	346
  3955                           	
  3956  0213                     l6140:	
  3957                           	line	322
  3958                           	
  3959  0213                     l11788:	
  3960  0213  1683               	bsf	status, 5	;RP0=1, select bank1
  3961  0214  1303               	bcf	status, 6	;RP1=0, select bank1
  3962  0215  083F               	movf	(_angleTurned+1)^080h,w
  3963  0216  1283               	bcf	status, 5	;RP0=0, select bank0
  3964  0217  1303               	bcf	status, 6	;RP1=0, select bank0
  3965  0218  01A7               	clrf	(?_abs+1)
  3966  0219  07A7               	addwf	(?_abs+1)
  3967  021A  1683               	bsf	status, 5	;RP0=1, select bank1
  3968  021B  1303               	bcf	status, 6	;RP1=0, select bank1
  3969  021C  083E               	movf	(_angleTurned)^080h,w
  3970  021D  1283               	bcf	status, 5	;RP0=0, select bank0
  3971  021E  1303               	bcf	status, 6	;RP1=0, select bank0
  3972  021F  01A6               	clrf	(?_abs)
  3973  0220  07A6               	addwf	(?_abs)
  3974                           
  3975  0221  160A  118A  22B8   	fcall	_abs
              120A  118A         
  3976  0226  1283               	bcf	status, 5	;RP0=0, select bank0
  3977  0227  1303               	bcf	status, 6	;RP1=0, select bank0
  3978  0228  0826               	movf	(0+?_abs),w
  3979  0229  00DD               	movwf	(??_robot_turnRight+0)+0
  3980  022A  0827               	movf	(1+?_abs),w
  3981  022B  00DE               	movwf	((??_robot_turnRight+0)+0+1)
  3982  022C  30BA               	movlw	low(-70)
  3983  022D  00A6               	movwf	(?_abs)
  3984  022E  30FF               	movlw	high(-70)
  3985  022F  00A7               	movwf	((?_abs))+1
  3986  0230  160A  118A  22B8   	fcall	_abs
              120A  118A         
  3987  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  3988  0236  1303               	bcf	status, 6	;RP1=0, select bank0
  3989  0237  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3990  0238  3A80               	xorlw	80h
  3991  0239  00DF               	movwf	(??_robot_turnRight+2)+0
  3992  023A  0827               	movf	(1+(?_abs)),w
  3993  023B  3A80               	xorlw	80h
  3994  023C  025F               	subwf	(??_robot_turnRight+2)+0,w
  3995  023D  1D03               	skipz
  3996  023E  2A41               	goto	u5315
  3997  023F  0826               	movf	(0+(?_abs)),w
  3998  0240  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3999  0241                     u5315:
  4000                           
  4001  0241  1C03               	skipc
  4002  0242  2A44               	goto	u5311
  4003  0243  2A45               	goto	u5310
  4004  0244                     u5311:
  4005  0244  29AD               	goto	l11762
  4006  0245                     u5310:
  4007  0245  2A46               	goto	l11790
  4008                           	
  4009  0246                     l6143:	
  4010                           	line	347
  4011                           	
  4012  0246                     l11790:	
  4013                           ;robot.c: 346: }
  4014                           ;robot.c: 347: RobotDrive(0, 0x7FFF);
  4015  0246  3000               	movlw	low(0)
  4016  0247  1283               	bcf	status, 5	;RP0=0, select bank0
  4017  0248  1303               	bcf	status, 6	;RP1=0, select bank0
  4018  0249  00AF               	movwf	(?_RobotDrive)
  4019  024A  3000               	movlw	high(0)
  4020  024B  00B0               	movwf	((?_RobotDrive))+1
  4021  024C  30FF               	movlw	low(07FFFh)
  4022  024D  00B1               	movwf	0+(?_RobotDrive)+02h
  4023  024E  307F               	movlw	high(07FFFh)
  4024  024F  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4025  0250  160A  118A  22ED   	fcall	_RobotDrive
              120A  118A         
  4026                           	line	348
  4027                           	
  4028  0255                     l11792:	
  4029                           ;robot.c: 348: Disp2 = ROBOTerror;
  4030  0255  1683               	bsf	status, 5	;RP0=1, select bank1
  4031  0256  1303               	bcf	status, 6	;RP1=0, select bank1
  4032  0257  0852               	movf	(_ROBOTerror)^080h,w
  4033  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  4034  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  4035  025A  00DD               	movwf	(??_robot_turnRight+0)+0
  4036  025B  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4037  025C  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4038  025D  1683               	bsf	status, 5	;RP0=1, select bank1
  4039  025E  1303               	bcf	status, 6	;RP1=0, select bank1
  4040  025F  00B6               	movwf	(_Disp2)^080h
  4041  0260  1283               	bcf	status, 5	;RP0=0, select bank0
  4042  0261  1303               	bcf	status, 6	;RP1=0, select bank0
  4043  0262  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4044  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  4045  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  4046  0265  00B7               	movwf	(_Disp2+1)^080h
  4047                           	line	349
  4048                           	
  4049  0266                     l11794:	
  4050                           ;robot.c: 349: UpdateDisplay();
  4051  0266  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  4052                           	line	352
  4053                           	
  4054  026B                     l6146:	
  4055  026B  0008               	return
  4056                           	opt stack 0
  4057                           GLOBAL	__end_of_robot_turnRight
  4058  026C                     	__end_of_robot_turnRight:
  4059 ;; =============== function _robot_turnRight ends ============
  4060                           
  4061                           	signat	_robot_turnRight,8312
  4062                           	global	_robotFollow
  4063                           psect	text1065,local,class=CODE,delta=2
  4064                           global __ptext1065
  4065  0C46                     __ptext1065:
  4066                           
  4067 ;; *************** function _robotFollow *****************
  4068 ;; Defined at:
  4069 ;;		line 181 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  speed           2   57[BANK0 ] int 
  4072 ;;  AdcTarget       2   59[BANK0 ] int 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  temp1           2   65[BANK0 ] int 
  4075 ;;  hysterysis      1   67[BANK0 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;		None               void
  4078 ;; Registers used:
  4079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4085 ;;      Params:         0       4       0       0       0
  4086 ;;      Locals:         0       3       0       0       0
  4087 ;;      Temps:          0       4       0       0       0
  4088 ;;      Totals:         0      11       0       0       0
  4089 ;;Total ram usage:       11 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    7
  4092 ;; This function calls:
  4093 ;;		_RobotDrive
  4094 ;;		_readAvgDistance
  4095 ;;		_rotate
  4096 ;;		_robot_read
  4097 ;;		_UpdateDisplay
  4098 ;; This function is called by:
  4099 ;;		_main
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           psect	text1065
  4103                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4104                           	line	181
  4105                           	global	__size_of_robotFollow
  4106  01C5                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  4107                           	
  4108  0C46                     _robotFollow:	
  4109                           	opt	stack 0
  4110                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4111                           	line	182
  4112                           	
  4113  0C46                     l11616:	
  4114                           ;robot.c: 182: distTravelled = 0;
  4115  0C46  1683               	bsf	status, 5	;RP0=1, select bank1
  4116  0C47  1303               	bcf	status, 6	;RP1=0, select bank1
  4117  0C48  01C0               	clrf	(_distTravelled)^080h
  4118  0C49  01C1               	clrf	(_distTravelled+1)^080h
  4119                           	line	184
  4120                           	
  4121  0C4A                     l11618:	
  4122                           ;robot.c: 183: int temp1;
  4123                           ;robot.c: 184: unsigned char hysterysis = 20;
  4124  0C4A  3014               	movlw	(014h)
  4125  0C4B  1283               	bcf	status, 5	;RP0=0, select bank0
  4126  0C4C  1303               	bcf	status, 6	;RP1=0, select bank0
  4127  0C4D  00DD               	movwf	(??_robotFollow+0)+0
  4128  0C4E  085D               	movf	(??_robotFollow+0)+0,w
  4129  0C4F  00E3               	movwf	(robotFollow@hysterysis)
  4130                           	line	185
  4131                           	
  4132  0C50                     l11620:	
  4133                           ;robot.c: 185: RobotDrive(speed, 0x7FFF);
  4134  0C50  085A               	movf	(robotFollow@speed+1),w
  4135  0C51  01B0               	clrf	(?_RobotDrive+1)
  4136  0C52  07B0               	addwf	(?_RobotDrive+1)
  4137  0C53  0859               	movf	(robotFollow@speed),w
  4138  0C54  01AF               	clrf	(?_RobotDrive)
  4139  0C55  07AF               	addwf	(?_RobotDrive)
  4140                           
  4141  0C56  30FF               	movlw	low(07FFFh)
  4142  0C57  00B1               	movwf	0+(?_RobotDrive)+02h
  4143  0C58  307F               	movlw	high(07FFFh)
  4144  0C59  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4145  0C5A  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  4146                           	line	186
  4147                           	
  4148  0C5F                     l11622:	
  4149                           ;robot.c: 186: ROBOTerror = 0;
  4150  0C5F  1683               	bsf	status, 5	;RP0=1, select bank1
  4151  0C60  1303               	bcf	status, 6	;RP1=0, select bank1
  4152  0C61  01D2               	clrf	(_ROBOTerror)^080h
  4153  0C62  2C63               	goto	l11624
  4154                           	line	189
  4155                           ;robot.c: 189: while (1)
  4156                           	
  4157  0C63                     l6105:	
  4158                           	line	193
  4159                           	
  4160  0C63                     l11624:	
  4161                           ;robot.c: 190: {
  4162                           ;robot.c: 193: if (AdcTarget > 100)
  4163  0C63  1283               	bcf	status, 5	;RP0=0, select bank0
  4164  0C64  1303               	bcf	status, 6	;RP1=0, select bank0
  4165  0C65  085C               	movf	(robotFollow@AdcTarget+1),w
  4166  0C66  3A80               	xorlw	80h
  4167  0C67  00FF               	movwf	btemp+1
  4168  0C68  3080               	movlw	(high(065h))^80h
  4169  0C69  027F               	subwf	btemp+1,w
  4170  0C6A  1D03               	skipz
  4171  0C6B  2C6E               	goto	u5075
  4172  0C6C  3065               	movlw	low(065h)
  4173  0C6D  025B               	subwf	(robotFollow@AdcTarget),w
  4174  0C6E                     u5075:
  4175                           
  4176  0C6E  1C03               	skipc
  4177  0C6F  2C71               	goto	u5071
  4178  0C70  2C72               	goto	u5070
  4179  0C71                     u5071:
  4180  0C71  2C7B               	goto	l11628
  4181  0C72                     u5070:
  4182                           	line	194
  4183                           	
  4184  0C72                     l11626:	
  4185                           ;robot.c: 194: AdcTarget--;
  4186  0C72  30FF               	movlw	low(-1)
  4187  0C73  1283               	bcf	status, 5	;RP0=0, select bank0
  4188  0C74  1303               	bcf	status, 6	;RP1=0, select bank0
  4189  0C75  07DB               	addwf	(robotFollow@AdcTarget),f
  4190  0C76  1803               	skipnc
  4191  0C77  0ADC               	incf	(robotFollow@AdcTarget+1),f
  4192  0C78  30FF               	movlw	high(-1)
  4193  0C79  07DC               	addwf	(robotFollow@AdcTarget+1),f
  4194  0C7A  2C7B               	goto	l11628
  4195                           	
  4196  0C7B                     l6106:	
  4197                           	line	195
  4198                           	
  4199  0C7B                     l11628:	
  4200                           ;robot.c: 195: if (AdcTarget < 100)
  4201  0C7B  1283               	bcf	status, 5	;RP0=0, select bank0
  4202  0C7C  1303               	bcf	status, 6	;RP1=0, select bank0
  4203  0C7D  085C               	movf	(robotFollow@AdcTarget+1),w
  4204  0C7E  3A80               	xorlw	80h
  4205  0C7F  00FF               	movwf	btemp+1
  4206  0C80  3080               	movlw	(high(064h))^80h
  4207  0C81  027F               	subwf	btemp+1,w
  4208  0C82  1D03               	skipz
  4209  0C83  2C86               	goto	u5085
  4210  0C84  3064               	movlw	low(064h)
  4211  0C85  025B               	subwf	(robotFollow@AdcTarget),w
  4212  0C86                     u5085:
  4213                           
  4214  0C86  1803               	skipnc
  4215  0C87  2C89               	goto	u5081
  4216  0C88  2C8A               	goto	u5080
  4217  0C89                     u5081:
  4218  0C89  2C93               	goto	l11632
  4219  0C8A                     u5080:
  4220                           	line	196
  4221                           	
  4222  0C8A                     l11630:	
  4223                           ;robot.c: 196: AdcTarget++;
  4224  0C8A  3001               	movlw	low(01h)
  4225  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  4226  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  4227  0C8D  07DB               	addwf	(robotFollow@AdcTarget),f
  4228  0C8E  1803               	skipnc
  4229  0C8F  0ADC               	incf	(robotFollow@AdcTarget+1),f
  4230  0C90  3000               	movlw	high(01h)
  4231  0C91  07DC               	addwf	(robotFollow@AdcTarget+1),f
  4232  0C92  2C93               	goto	l11632
  4233                           	
  4234  0C93                     l6107:	
  4235                           	line	197
  4236                           	
  4237  0C93                     l11632:	
  4238                           ;robot.c: 197: readAvgDistance();
  4239  0C93  160A  118A  2667   	fcall	_readAvgDistance
              120A  158A         
  4240                           	line	198
  4241                           	
  4242  0C98                     l11634:	
  4243                           ;robot.c: 198: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + hysterysis))
  4244  0C98  1283               	bcf	status, 5	;RP0=0, select bank0
  4245  0C99  1303               	bcf	status, 6	;RP1=0, select bank0
  4246  0C9A  086B               	movf	(_adcVal+1),w	;volatile
  4247  0C9B  025C               	subwf	(robotFollow@AdcTarget+1),w
  4248  0C9C  1D03               	skipz
  4249  0C9D  2CA0               	goto	u5095
  4250  0C9E  086A               	movf	(_adcVal),w	;volatile
  4251  0C9F  025B               	subwf	(robotFollow@AdcTarget),w
  4252  0CA0                     u5095:
  4253  0CA0  1803               	skipnc
  4254  0CA1  2CA3               	goto	u5091
  4255  0CA2  2CA4               	goto	u5090
  4256  0CA3                     u5091:
  4257  0CA3  2CC5               	goto	l11640
  4258  0CA4                     u5090:
  4259                           	
  4260  0CA4                     l11636:	
  4261  0CA4  0863               	movf	(robotFollow@hysterysis),w
  4262  0CA5  075B               	addwf	(robotFollow@AdcTarget),w
  4263  0CA6  00DD               	movwf	(??_robotFollow+0)+0
  4264  0CA7  085C               	movf	(robotFollow@AdcTarget+1),w
  4265  0CA8  1803               	skipnc
  4266  0CA9  0A5C               	incf	(robotFollow@AdcTarget+1),w
  4267  0CAA  00DE               	movwf	((??_robotFollow+0)+0)+1
  4268  0CAB  085E               	movf	1+(??_robotFollow+0)+0,w
  4269  0CAC  026B               	subwf	(_adcVal+1),w	;volatile
  4270  0CAD  1D03               	skipz
  4271  0CAE  2CB1               	goto	u5105
  4272  0CAF  085D               	movf	0+(??_robotFollow+0)+0,w
  4273  0CB0  026A               	subwf	(_adcVal),w	;volatile
  4274  0CB1                     u5105:
  4275  0CB1  1803               	skipnc
  4276  0CB2  2CB4               	goto	u5101
  4277  0CB3  2CB5               	goto	u5100
  4278  0CB4                     u5101:
  4279  0CB4  2CC5               	goto	l11640
  4280  0CB5                     u5100:
  4281                           	line	200
  4282                           	
  4283  0CB5                     l11638:	
  4284                           ;robot.c: 199: {
  4285                           ;robot.c: 200: RobotDrive(speed, 1700);
  4286  0CB5  085A               	movf	(robotFollow@speed+1),w
  4287  0CB6  01B0               	clrf	(?_RobotDrive+1)
  4288  0CB7  07B0               	addwf	(?_RobotDrive+1)
  4289  0CB8  0859               	movf	(robotFollow@speed),w
  4290  0CB9  01AF               	clrf	(?_RobotDrive)
  4291  0CBA  07AF               	addwf	(?_RobotDrive)
  4292                           
  4293  0CBB  30A4               	movlw	low(06A4h)
  4294  0CBC  00B1               	movwf	0+(?_RobotDrive)+02h
  4295  0CBD  3006               	movlw	high(06A4h)
  4296  0CBE  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4297  0CBF  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  4298                           	line	201
  4299                           ;robot.c: 201: }
  4300  0CC4  2D74               	goto	l6109
  4301                           	line	202
  4302                           	
  4303  0CC5                     l6108:	
  4304                           	
  4305  0CC5                     l11640:	
  4306                           ;robot.c: 202: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - hysterysis))
  4307  0CC5  1283               	bcf	status, 5	;RP0=0, select bank0
  4308  0CC6  1303               	bcf	status, 6	;RP1=0, select bank0
  4309  0CC7  085C               	movf	(robotFollow@AdcTarget+1),w
  4310  0CC8  026B               	subwf	(_adcVal+1),w	;volatile
  4311  0CC9  1D03               	skipz
  4312  0CCA  2CCD               	goto	u5115
  4313  0CCB  085B               	movf	(robotFollow@AdcTarget),w
  4314  0CCC  026A               	subwf	(_adcVal),w	;volatile
  4315  0CCD                     u5115:
  4316  0CCD  1803               	skipnc
  4317  0CCE  2CD0               	goto	u5111
  4318  0CCF  2CD1               	goto	u5110
  4319  0CD0                     u5111:
  4320  0CD0  2CFB               	goto	l11646
  4321  0CD1                     u5110:
  4322                           	
  4323  0CD1                     l11642:	
  4324  0CD1  0863               	movf	(robotFollow@hysterysis),w
  4325  0CD2  00DD               	movwf	(??_robotFollow+0)+0
  4326  0CD3  01DE               	clrf	(??_robotFollow+0)+0+1
  4327  0CD4  09DD               	comf	(??_robotFollow+0)+0,f
  4328  0CD5  09DE               	comf	(??_robotFollow+0)+1,f
  4329  0CD6  0ADD               	incf	(??_robotFollow+0)+0,f
  4330  0CD7  1903               	skipnz
  4331  0CD8  0ADE               	incf	(??_robotFollow+0)+1,f
  4332  0CD9  085B               	movf	(robotFollow@AdcTarget),w
  4333  0CDA  075D               	addwf	0+(??_robotFollow+0)+0,w
  4334  0CDB  00DF               	movwf	(??_robotFollow+2)+0
  4335  0CDC  085C               	movf	(robotFollow@AdcTarget+1),w
  4336  0CDD  1803               	skipnc
  4337  0CDE  0A5C               	incf	(robotFollow@AdcTarget+1),w
  4338  0CDF  075E               	addwf	1+(??_robotFollow+0)+0,w
  4339  0CE0  00E0               	movwf	1+(??_robotFollow+2)+0
  4340  0CE1  086B               	movf	(_adcVal+1),w	;volatile
  4341  0CE2  0260               	subwf	1+(??_robotFollow+2)+0,w
  4342  0CE3  1D03               	skipz
  4343  0CE4  2CE7               	goto	u5125
  4344  0CE5  086A               	movf	(_adcVal),w	;volatile
  4345  0CE6  025F               	subwf	0+(??_robotFollow+2)+0,w
  4346  0CE7                     u5125:
  4347  0CE7  1803               	skipnc
  4348  0CE8  2CEA               	goto	u5121
  4349  0CE9  2CEB               	goto	u5120
  4350  0CEA                     u5121:
  4351  0CEA  2CFB               	goto	l11646
  4352  0CEB                     u5120:
  4353                           	line	204
  4354                           	
  4355  0CEB                     l11644:	
  4356                           ;robot.c: 203: {
  4357                           ;robot.c: 204: RobotDrive(speed, -1700);
  4358  0CEB  085A               	movf	(robotFollow@speed+1),w
  4359  0CEC  01B0               	clrf	(?_RobotDrive+1)
  4360  0CED  07B0               	addwf	(?_RobotDrive+1)
  4361  0CEE  0859               	movf	(robotFollow@speed),w
  4362  0CEF  01AF               	clrf	(?_RobotDrive)
  4363  0CF0  07AF               	addwf	(?_RobotDrive)
  4364                           
  4365  0CF1  305C               	movlw	low(-1700)
  4366  0CF2  00B1               	movwf	0+(?_RobotDrive)+02h
  4367  0CF3  30F9               	movlw	high(-1700)
  4368  0CF4  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4369  0CF5  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  4370                           	line	205
  4371                           ;robot.c: 205: }
  4372  0CFA  2D74               	goto	l6109
  4373                           	line	206
  4374                           	
  4375  0CFB                     l6110:	
  4376                           	
  4377  0CFB                     l11646:	
  4378                           ;robot.c: 206: else if (adcVal <= (AdcTarget - hysterysis) || adcVal >= (AdcTarget + hys
                                 terysis))
  4379  0CFB  1283               	bcf	status, 5	;RP0=0, select bank0
  4380  0CFC  1303               	bcf	status, 6	;RP1=0, select bank0
  4381  0CFD  0863               	movf	(robotFollow@hysterysis),w
  4382  0CFE  00DD               	movwf	(??_robotFollow+0)+0
  4383  0CFF  01DE               	clrf	(??_robotFollow+0)+0+1
  4384  0D00  09DD               	comf	(??_robotFollow+0)+0,f
  4385  0D01  09DE               	comf	(??_robotFollow+0)+1,f
  4386  0D02  0ADD               	incf	(??_robotFollow+0)+0,f
  4387  0D03  1903               	skipnz
  4388  0D04  0ADE               	incf	(??_robotFollow+0)+1,f
  4389  0D05  085B               	movf	(robotFollow@AdcTarget),w
  4390  0D06  075D               	addwf	0+(??_robotFollow+0)+0,w
  4391  0D07  00DF               	movwf	(??_robotFollow+2)+0
  4392  0D08  085C               	movf	(robotFollow@AdcTarget+1),w
  4393  0D09  1803               	skipnc
  4394  0D0A  0A5C               	incf	(robotFollow@AdcTarget+1),w
  4395  0D0B  075E               	addwf	1+(??_robotFollow+0)+0,w
  4396  0D0C  00E0               	movwf	1+(??_robotFollow+2)+0
  4397  0D0D  086B               	movf	(_adcVal+1),w	;volatile
  4398  0D0E  0260               	subwf	1+(??_robotFollow+2)+0,w
  4399  0D0F  1D03               	skipz
  4400  0D10  2D13               	goto	u5135
  4401  0D11  086A               	movf	(_adcVal),w	;volatile
  4402  0D12  025F               	subwf	0+(??_robotFollow+2)+0,w
  4403  0D13                     u5135:
  4404  0D13  1803               	skipnc
  4405  0D14  2D16               	goto	u5131
  4406  0D15  2D17               	goto	u5130
  4407  0D16                     u5131:
  4408  0D16  2D29               	goto	l11650
  4409  0D17                     u5130:
  4410                           	
  4411  0D17                     l11648:	
  4412  0D17  0863               	movf	(robotFollow@hysterysis),w
  4413  0D18  075B               	addwf	(robotFollow@AdcTarget),w
  4414  0D19  00DD               	movwf	(??_robotFollow+0)+0
  4415  0D1A  085C               	movf	(robotFollow@AdcTarget+1),w
  4416  0D1B  1803               	skipnc
  4417  0D1C  0A5C               	incf	(robotFollow@AdcTarget+1),w
  4418  0D1D  00DE               	movwf	((??_robotFollow+0)+0)+1
  4419  0D1E  085E               	movf	1+(??_robotFollow+0)+0,w
  4420  0D1F  026B               	subwf	(_adcVal+1),w	;volatile
  4421  0D20  1D03               	skipz
  4422  0D21  2D24               	goto	u5145
  4423  0D22  085D               	movf	0+(??_robotFollow+0)+0,w
  4424  0D23  026A               	subwf	(_adcVal),w	;volatile
  4425  0D24                     u5145:
  4426  0D24  1C03               	skipc
  4427  0D25  2D27               	goto	u5141
  4428  0D26  2D28               	goto	u5140
  4429  0D27                     u5141:
  4430  0D27  2D62               	goto	l11664
  4431  0D28                     u5140:
  4432  0D28  2D29               	goto	l11650
  4433                           	
  4434  0D29                     l6114:	
  4435                           	line	208
  4436                           	
  4437  0D29                     l11650:	
  4438                           ;robot.c: 207: {
  4439                           ;robot.c: 208: rotate(10,1);
  4440  0D29  300A               	movlw	low(0Ah)
  4441  0D2A  00A3               	movwf	(?_rotate)
  4442  0D2B  3000               	movlw	high(0Ah)
  4443  0D2C  00A4               	movwf	((?_rotate))+1
  4444  0D2D  01A5               	clrf	0+(?_rotate)+02h
  4445  0D2E  1403               	bsf	status,0
  4446  0D2F  0DA5               	rlf	0+(?_rotate)+02h,f
  4447  0D30  160A  118A  2442   	fcall	_rotate
              120A  158A         
  4448                           	line	209
  4449                           	
  4450  0D35                     l11652:	
  4451                           ;robot.c: 209: readAvgDistance();
  4452  0D35  160A  118A  2667   	fcall	_readAvgDistance
              120A  158A         
  4453                           	line	210
  4454                           	
  4455  0D3A                     l11654:	
  4456                           ;robot.c: 210: rotate(10,0);
  4457  0D3A  300A               	movlw	low(0Ah)
  4458  0D3B  1283               	bcf	status, 5	;RP0=0, select bank0
  4459  0D3C  1303               	bcf	status, 6	;RP1=0, select bank0
  4460  0D3D  00A3               	movwf	(?_rotate)
  4461  0D3E  3000               	movlw	high(0Ah)
  4462  0D3F  00A4               	movwf	((?_rotate))+1
  4463  0D40  01A5               	clrf	0+(?_rotate)+02h
  4464  0D41  160A  118A  2442   	fcall	_rotate
              120A  158A         
  4465                           	line	211
  4466                           	
  4467  0D46                     l11656:	
  4468                           ;robot.c: 211: if (adcVal < 50)
  4469  0D46  3000               	movlw	high(032h)
  4470  0D47  1283               	bcf	status, 5	;RP0=0, select bank0
  4471  0D48  1303               	bcf	status, 6	;RP1=0, select bank0
  4472  0D49  026B               	subwf	(_adcVal+1),w	;volatile
  4473  0D4A  3032               	movlw	low(032h)
  4474  0D4B  1903               	skipnz
  4475  0D4C  026A               	subwf	(_adcVal),w	;volatile
  4476  0D4D  1803               	skipnc
  4477  0D4E  2D50               	goto	u5151
  4478  0D4F  2D51               	goto	u5150
  4479  0D50                     u5151:
  4480  0D50  2D58               	goto	l11660
  4481  0D51                     u5150:
  4482                           	line	212
  4483                           	
  4484  0D51                     l11658:	
  4485                           ;robot.c: 212: ROBOTerror = 11;
  4486  0D51  300B               	movlw	(0Bh)
  4487  0D52  00DD               	movwf	(??_robotFollow+0)+0
  4488  0D53  085D               	movf	(??_robotFollow+0)+0,w
  4489  0D54  1683               	bsf	status, 5	;RP0=1, select bank1
  4490  0D55  1303               	bcf	status, 6	;RP1=0, select bank1
  4491  0D56  00D2               	movwf	(_ROBOTerror)^080h
  4492  0D57  2DE5               	goto	l11692
  4493                           	line	213
  4494                           	
  4495  0D58                     l6115:	
  4496                           	line	214
  4497                           	
  4498  0D58                     l11660:	
  4499                           ;robot.c: 213: else
  4500                           ;robot.c: 214: ROBOTerror = 10;
  4501  0D58  300A               	movlw	(0Ah)
  4502  0D59  1283               	bcf	status, 5	;RP0=0, select bank0
  4503  0D5A  00DD               	movwf	(??_robotFollow+0)+0
  4504  0D5B  085D               	movf	(??_robotFollow+0)+0,w
  4505  0D5C  1683               	bsf	status, 5	;RP0=1, select bank1
  4506  0D5D  1303               	bcf	status, 6	;RP1=0, select bank1
  4507  0D5E  00D2               	movwf	(_ROBOTerror)^080h
  4508  0D5F  2DE5               	goto	l11692
  4509                           	
  4510  0D60                     l6116:	
  4511                           	line	216
  4512                           ;robot.c: 216: break;
  4513  0D60  2DE5               	goto	l11692
  4514                           	line	217
  4515                           	
  4516  0D61                     l11662:	
  4517                           ;robot.c: 217: }
  4518  0D61  2D74               	goto	l6109
  4519                           	line	218
  4520                           	
  4521  0D62                     l6112:	
  4522                           	line	220
  4523                           	
  4524  0D62                     l11664:	
  4525                           ;robot.c: 218: else
  4526                           ;robot.c: 219: {
  4527                           ;robot.c: 220: RobotDrive(speed, 0x7FFF);
  4528  0D62  1283               	bcf	status, 5	;RP0=0, select bank0
  4529  0D63  085A               	movf	(robotFollow@speed+1),w
  4530  0D64  01B0               	clrf	(?_RobotDrive+1)
  4531  0D65  07B0               	addwf	(?_RobotDrive+1)
  4532  0D66  0859               	movf	(robotFollow@speed),w
  4533  0D67  01AF               	clrf	(?_RobotDrive)
  4534  0D68  07AF               	addwf	(?_RobotDrive)
  4535                           
  4536  0D69  30FF               	movlw	low(07FFFh)
  4537  0D6A  00B1               	movwf	0+(?_RobotDrive)+02h
  4538  0D6B  307F               	movlw	high(07FFFh)
  4539  0D6C  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4540  0D6D  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  4541  0D72  2D74               	goto	l6109
  4542                           	line	221
  4543                           	
  4544  0D73                     l6118:	
  4545  0D73  2D74               	goto	l6109
  4546                           	
  4547  0D74                     l6111:	
  4548                           	
  4549  0D74                     l6109:	
  4550                           	line	222
  4551                           ;robot.c: 221: }
  4552                           ;robot.c: 222: robot_read(0);
  4553  0D74  3000               	movlw	(0)
  4554  0D75  120A  118A  26C2   	fcall	_robot_read
              120A  158A         
  4555                           	line	223
  4556                           	
  4557  0D7A                     l11666:	
  4558                           ;robot.c: 223: if (BumpSensors)
  4559  0D7A  1283               	bcf	status, 5	;RP0=0, select bank0
  4560  0D7B  1303               	bcf	status, 6	;RP1=0, select bank0
  4561  0D7C  086C               	movf	(_BumpSensors),w	;volatile
  4562  0D7D  1D03               	skipz
  4563  0D7E  2D80               	goto	u5160
  4564  0D7F  2D86               	goto	l11670
  4565  0D80                     u5160:
  4566                           	line	225
  4567                           	
  4568  0D80                     l11668:	
  4569                           ;robot.c: 224: {
  4570                           ;robot.c: 225: ROBOTerror = 1;
  4571  0D80  1683               	bsf	status, 5	;RP0=1, select bank1
  4572  0D81  1303               	bcf	status, 6	;RP1=0, select bank1
  4573  0D82  01D2               	clrf	(_ROBOTerror)^080h
  4574  0D83  1403               	bsf	status,0
  4575  0D84  0DD2               	rlf	(_ROBOTerror)^080h,f
  4576                           	line	226
  4577                           ;robot.c: 226: break;
  4578  0D85  2DE5               	goto	l11692
  4579                           	line	227
  4580                           	
  4581  0D86                     l6119:	
  4582                           	line	228
  4583                           	
  4584  0D86                     l11670:	
  4585                           ;robot.c: 227: }
  4586                           ;robot.c: 228: if (VwallSensor)
  4587  0D86  1283               	bcf	status, 5	;RP0=0, select bank0
  4588  0D87  086F               	movf	(_VwallSensor),w	;volatile
  4589  0D88  1D03               	skipz
  4590  0D89  2D8B               	goto	u5170
  4591  0D8A  2D92               	goto	l11674
  4592  0D8B                     u5170:
  4593                           	line	230
  4594                           	
  4595  0D8B                     l11672:	
  4596                           ;robot.c: 229: {
  4597                           ;robot.c: 230: ROBOTerror = 2;
  4598  0D8B  3002               	movlw	(02h)
  4599  0D8C  00DD               	movwf	(??_robotFollow+0)+0
  4600  0D8D  085D               	movf	(??_robotFollow+0)+0,w
  4601  0D8E  1683               	bsf	status, 5	;RP0=1, select bank1
  4602  0D8F  1303               	bcf	status, 6	;RP1=0, select bank1
  4603  0D90  00D2               	movwf	(_ROBOTerror)^080h
  4604                           	line	231
  4605                           ;robot.c: 231: break;
  4606  0D91  2DE5               	goto	l11692
  4607                           	line	232
  4608                           	
  4609  0D92                     l6120:	
  4610                           	line	233
  4611                           	
  4612  0D92                     l11674:	
  4613                           ;robot.c: 232: }
  4614                           ;robot.c: 233: if (CliffSensors)
  4615  0D92  1683               	bsf	status, 5	;RP0=1, select bank1
  4616  0D93  1303               	bcf	status, 6	;RP1=0, select bank1
  4617  0D94  084F               	movf	(_CliffSensors)^080h,w	;volatile
  4618  0D95  1D03               	skipz
  4619  0D96  2D98               	goto	u5180
  4620  0D97  2DA1               	goto	l11678
  4621  0D98                     u5180:
  4622                           	line	235
  4623                           	
  4624  0D98                     l11676:	
  4625                           ;robot.c: 234: {
  4626                           ;robot.c: 235: ROBOTerror = 3;
  4627  0D98  3003               	movlw	(03h)
  4628  0D99  1283               	bcf	status, 5	;RP0=0, select bank0
  4629  0D9A  1303               	bcf	status, 6	;RP1=0, select bank0
  4630  0D9B  00DD               	movwf	(??_robotFollow+0)+0
  4631  0D9C  085D               	movf	(??_robotFollow+0)+0,w
  4632  0D9D  1683               	bsf	status, 5	;RP0=1, select bank1
  4633  0D9E  1303               	bcf	status, 6	;RP1=0, select bank1
  4634  0D9F  00D2               	movwf	(_ROBOTerror)^080h
  4635                           	line	236
  4636                           ;robot.c: 236: break;
  4637  0DA0  2DE5               	goto	l11692
  4638                           	line	237
  4639                           	
  4640  0DA1                     l6121:	
  4641                           	line	238
  4642                           	
  4643  0DA1                     l11678:	
  4644                           ;robot.c: 237: }
  4645                           ;robot.c: 238: temp1 = DistHighByte;
  4646  0DA1  1283               	bcf	status, 5	;RP0=0, select bank0
  4647  0DA2  1303               	bcf	status, 6	;RP1=0, select bank0
  4648  0DA3  086D               	movf	(_DistHighByte),w	;volatile
  4649  0DA4  00DD               	movwf	(??_robotFollow+0)+0
  4650  0DA5  01DE               	clrf	(??_robotFollow+0)+0+1
  4651  0DA6  085D               	movf	0+(??_robotFollow+0)+0,w
  4652  0DA7  00E1               	movwf	(robotFollow@temp1)
  4653  0DA8  085E               	movf	1+(??_robotFollow+0)+0,w
  4654  0DA9  00E2               	movwf	(robotFollow@temp1+1)
  4655                           	line	239
  4656                           	
  4657  0DAA                     l11680:	
  4658                           ;robot.c: 239: temp1 = temp1 << 8;
  4659  0DAA  0862               	movf	(robotFollow@temp1+1),w
  4660  0DAB  00DE               	movwf	(??_robotFollow+0)+0+1
  4661  0DAC  0861               	movf	(robotFollow@temp1),w
  4662  0DAD  00DD               	movwf	(??_robotFollow+0)+0
  4663  0DAE  085D               	movf	(??_robotFollow+0)+0,w
  4664  0DAF  00DE               	movwf	(??_robotFollow+0)+1
  4665  0DB0  01DD               	clrf	(??_robotFollow+0)+0
  4666  0DB1  085D               	movf	0+(??_robotFollow+0)+0,w
  4667  0DB2  00E1               	movwf	(robotFollow@temp1)
  4668  0DB3  085E               	movf	1+(??_robotFollow+0)+0,w
  4669  0DB4  00E2               	movwf	(robotFollow@temp1+1)
  4670                           	line	240
  4671                           	
  4672  0DB5                     l11682:	
  4673                           ;robot.c: 240: temp1 += DistLowByte;
  4674  0DB5  086E               	movf	(_DistLowByte),w	;volatile
  4675  0DB6  00DD               	movwf	(??_robotFollow+0)+0
  4676  0DB7  01DE               	clrf	(??_robotFollow+0)+0+1
  4677  0DB8  085D               	movf	0+(??_robotFollow+0)+0,w
  4678  0DB9  07E1               	addwf	(robotFollow@temp1),f
  4679  0DBA  1803               	skipnc
  4680  0DBB  0AE2               	incf	(robotFollow@temp1+1),f
  4681  0DBC  085E               	movf	1+(??_robotFollow+0)+0,w
  4682  0DBD  07E2               	addwf	(robotFollow@temp1+1),f
  4683                           	line	241
  4684                           	
  4685  0DBE                     l11684:	
  4686                           ;robot.c: 241: distTravelled += temp1;
  4687  0DBE  0861               	movf	(robotFollow@temp1),w
  4688  0DBF  1683               	bsf	status, 5	;RP0=1, select bank1
  4689  0DC0  1303               	bcf	status, 6	;RP1=0, select bank1
  4690  0DC1  07C0               	addwf	(_distTravelled)^080h,f
  4691  0DC2  1803               	skipnc
  4692  0DC3  0AC1               	incf	(_distTravelled+1)^080h,f
  4693  0DC4  1283               	bcf	status, 5	;RP0=0, select bank0
  4694  0DC5  1303               	bcf	status, 6	;RP1=0, select bank0
  4695  0DC6  0862               	movf	(robotFollow@temp1+1),w
  4696  0DC7  1683               	bsf	status, 5	;RP0=1, select bank1
  4697  0DC8  1303               	bcf	status, 6	;RP1=0, select bank1
  4698  0DC9  07C1               	addwf	(_distTravelled+1)^080h,f
  4699                           	line	242
  4700                           	
  4701  0DCA                     l11686:	
  4702                           ;robot.c: 242: TotalDistTravelled += temp1;
  4703  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
  4704  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
  4705  0DCC  0861               	movf	(robotFollow@temp1),w
  4706  0DCD  1683               	bsf	status, 5	;RP0=1, select bank1
  4707  0DCE  1303               	bcf	status, 6	;RP1=0, select bank1
  4708  0DCF  07BC               	addwf	(_TotalDistTravelled)^080h,f
  4709  0DD0  1803               	skipnc
  4710  0DD1  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  4711  0DD2  1283               	bcf	status, 5	;RP0=0, select bank0
  4712  0DD3  1303               	bcf	status, 6	;RP1=0, select bank0
  4713  0DD4  0862               	movf	(robotFollow@temp1+1),w
  4714  0DD5  1683               	bsf	status, 5	;RP0=1, select bank1
  4715  0DD6  1303               	bcf	status, 6	;RP1=0, select bank1
  4716  0DD7  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  4717                           	line	244
  4718                           	
  4719  0DD8                     l11688:	
  4720                           ;robot.c: 244: Disp2 = distTravelled;
  4721  0DD8  0841               	movf	(_distTravelled+1)^080h,w
  4722  0DD9  01B7               	clrf	(_Disp2+1)^080h
  4723  0DDA  07B7               	addwf	(_Disp2+1)^080h
  4724  0DDB  0840               	movf	(_distTravelled)^080h,w
  4725  0DDC  01B6               	clrf	(_Disp2)^080h
  4726  0DDD  07B6               	addwf	(_Disp2)^080h
  4727                           
  4728                           	line	245
  4729                           	
  4730  0DDE                     l11690:	
  4731                           ;robot.c: 245: UpdateDisplay();
  4732  0DDE  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4733  0DE3  2C63               	goto	l11624
  4734                           	line	246
  4735                           	
  4736  0DE4                     l6122:	
  4737                           	line	189
  4738  0DE4  2C63               	goto	l11624
  4739                           	
  4740  0DE5                     l6117:	
  4741                           	line	247
  4742                           	
  4743  0DE5                     l11692:	
  4744                           ;robot.c: 246: }
  4745                           ;robot.c: 247: RobotDrive(0, 0x7FFF);
  4746  0DE5  3000               	movlw	low(0)
  4747  0DE6  1283               	bcf	status, 5	;RP0=0, select bank0
  4748  0DE7  1303               	bcf	status, 6	;RP1=0, select bank0
  4749  0DE8  00AF               	movwf	(?_RobotDrive)
  4750  0DE9  3000               	movlw	high(0)
  4751  0DEA  00B0               	movwf	((?_RobotDrive))+1
  4752  0DEB  30FF               	movlw	low(07FFFh)
  4753  0DEC  00B1               	movwf	0+(?_RobotDrive)+02h
  4754  0DED  307F               	movlw	high(07FFFh)
  4755  0DEE  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4756  0DEF  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  4757                           	line	248
  4758                           	
  4759  0DF4                     l11694:	
  4760                           ;robot.c: 248: Disp2 = ROBOTerror;
  4761  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  4762  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  4763  0DF6  0852               	movf	(_ROBOTerror)^080h,w
  4764  0DF7  1283               	bcf	status, 5	;RP0=0, select bank0
  4765  0DF8  1303               	bcf	status, 6	;RP1=0, select bank0
  4766  0DF9  00DD               	movwf	(??_robotFollow+0)+0
  4767  0DFA  01DE               	clrf	(??_robotFollow+0)+0+1
  4768  0DFB  085D               	movf	0+(??_robotFollow+0)+0,w
  4769  0DFC  1683               	bsf	status, 5	;RP0=1, select bank1
  4770  0DFD  1303               	bcf	status, 6	;RP1=0, select bank1
  4771  0DFE  00B6               	movwf	(_Disp2)^080h
  4772  0DFF  1283               	bcf	status, 5	;RP0=0, select bank0
  4773  0E00  1303               	bcf	status, 6	;RP1=0, select bank0
  4774  0E01  085E               	movf	1+(??_robotFollow+0)+0,w
  4775  0E02  1683               	bsf	status, 5	;RP0=1, select bank1
  4776  0E03  1303               	bcf	status, 6	;RP1=0, select bank1
  4777  0E04  00B7               	movwf	(_Disp2+1)^080h
  4778                           	line	249
  4779                           	
  4780  0E05                     l11696:	
  4781                           ;robot.c: 249: UpdateDisplay();
  4782  0E05  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4783                           	line	252
  4784                           	
  4785  0E0A                     l6123:	
  4786  0E0A  0008               	return
  4787                           	opt stack 0
  4788                           GLOBAL	__end_of_robotFollow
  4789  0E0B                     	__end_of_robotFollow:
  4790 ;; =============== function _robotFollow ends ============
  4791                           
  4792                           	signat	_robotFollow,8312
  4793                           	global	_robotTurnSpeed
  4794                           psect	text1066,local,class=CODE,delta=2
  4795                           global __ptext1066
  4796  09BD                     __ptext1066:
  4797                           
  4798 ;; *************** function _robotTurnSpeed *****************
  4799 ;; Defined at:
  4800 ;;		line 405 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  angle           2   57[BANK0 ] int 
  4803 ;;  speed           2   59[BANK0 ] int 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  temp1           2   64[BANK0 ] int 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;		None               void
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4815 ;;      Params:         0       4       0       0       0
  4816 ;;      Locals:         0       2       0       0       0
  4817 ;;      Temps:          0       3       0       0       0
  4818 ;;      Totals:         0       9       0       0       0
  4819 ;;Total ram usage:        9 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    6
  4822 ;; This function calls:
  4823 ;;		_robotTurn
  4824 ;;		_robot_read
  4825 ;;		_UpdateDisplay
  4826 ;;		_abs
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           psect	text1066
  4832                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4833                           	line	405
  4834                           	global	__size_of_robotTurnSpeed
  4835  00A8                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  4836                           	
  4837  09BD                     _robotTurnSpeed:	
  4838                           	opt	stack 1
  4839                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4840                           	line	406
  4841                           	
  4842  09BD                     l11588:	
  4843                           ;robot.c: 406: angleTurned = 0;
  4844  09BD  1683               	bsf	status, 5	;RP0=1, select bank1
  4845  09BE  1303               	bcf	status, 6	;RP1=0, select bank1
  4846  09BF  01BE               	clrf	(_angleTurned)^080h
  4847  09C0  01BF               	clrf	(_angleTurned+1)^080h
  4848                           	line	407
  4849                           ;robot.c: 407: int temp1 = 0;
  4850  09C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4851  09C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4852  09C3  01E0               	clrf	(robotTurnSpeed@temp1)
  4853  09C4  01E1               	clrf	(robotTurnSpeed@temp1+1)
  4854                           	line	409
  4855                           	
  4856  09C5                     l11590:	
  4857                           ;robot.c: 409: robotTurn(angle);
  4858  09C5  085A               	movf	(robotTurnSpeed@angle+1),w
  4859  09C6  01A3               	clrf	(?_robotTurn+1)
  4860  09C7  07A3               	addwf	(?_robotTurn+1)
  4861  09C8  0859               	movf	(robotTurnSpeed@angle),w
  4862  09C9  01A2               	clrf	(?_robotTurn)
  4863  09CA  07A2               	addwf	(?_robotTurn)
  4864                           
  4865  09CB  160A  118A  257D   	fcall	_robotTurn
              120A  158A         
  4866                           	line	412
  4867                           ;robot.c: 412: while (abs(angleTurned) < abs(angle))
  4868  09D0  2A24               	goto	l11612
  4869                           	
  4870  09D1                     l6159:	
  4871                           	line	414
  4872                           	
  4873  09D1                     l11592:	
  4874                           ;robot.c: 413: {
  4875                           ;robot.c: 414: robot_read(1);
  4876  09D1  3001               	movlw	(01h)
  4877  09D2  120A  118A  26C2   	fcall	_robot_read
              120A  158A         
  4878                           	line	415
  4879                           	
  4880  09D7                     l11594:	
  4881                           ;robot.c: 415: if (BumpSensors || VwallSensor)
  4882  09D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4883  09D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4884  09D9  08EC               	movf	(_BumpSensors),f
  4885  09DA  1D03               	skipz	;volatile
  4886  09DB  29DD               	goto	u5041
  4887  09DC  29DE               	goto	u5040
  4888  09DD                     u5041:
  4889  09DD  29E3               	goto	l11598
  4890  09DE                     u5040:
  4891                           	
  4892  09DE                     l11596:	
  4893  09DE  086F               	movf	(_VwallSensor),w	;volatile
  4894  09DF  1D03               	skipz
  4895  09E0  29E2               	goto	u5050
  4896  09E1  29E9               	goto	l11600
  4897  09E2                     u5050:
  4898  09E2  29E3               	goto	l11598
  4899                           	
  4900  09E3                     l6162:	
  4901                           	line	417
  4902                           	
  4903  09E3                     l11598:	
  4904                           ;robot.c: 416: {
  4905                           ;robot.c: 417: ROBOTerror = 1;
  4906  09E3  1683               	bsf	status, 5	;RP0=1, select bank1
  4907  09E4  1303               	bcf	status, 6	;RP1=0, select bank1
  4908  09E5  01D2               	clrf	(_ROBOTerror)^080h
  4909  09E6  1403               	bsf	status,0
  4910  09E7  0DD2               	rlf	(_ROBOTerror)^080h,f
  4911                           	line	418
  4912                           ;robot.c: 418: break;
  4913  09E8  2A59               	goto	l11614
  4914                           	line	419
  4915                           	
  4916  09E9                     l6160:	
  4917                           	line	420
  4918                           	
  4919  09E9                     l11600:	
  4920                           ;robot.c: 419: }
  4921                           ;robot.c: 420: temp1 = AngleHighByte;
  4922  09E9  1683               	bsf	status, 5	;RP0=1, select bank1
  4923  09EA  1303               	bcf	status, 6	;RP1=0, select bank1
  4924  09EB  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  4925  09EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4926  09ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4927  09EE  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4928  09EF  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4929  09F0  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4930  09F1  00E0               	movwf	(robotTurnSpeed@temp1)
  4931  09F2  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4932  09F3  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4933                           	line	421
  4934                           	
  4935  09F4                     l11602:	
  4936                           ;robot.c: 421: temp1 = temp1 << 8;
  4937  09F4  0861               	movf	(robotTurnSpeed@temp1+1),w
  4938  09F5  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  4939  09F6  0860               	movf	(robotTurnSpeed@temp1),w
  4940  09F7  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4941  09F8  085D               	movf	(??_robotTurnSpeed+0)+0,w
  4942  09F9  00DE               	movwf	(??_robotTurnSpeed+0)+1
  4943  09FA  01DD               	clrf	(??_robotTurnSpeed+0)+0
  4944  09FB  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4945  09FC  00E0               	movwf	(robotTurnSpeed@temp1)
  4946  09FD  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4947  09FE  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4948                           	line	422
  4949                           	
  4950  09FF                     l11604:	
  4951                           ;robot.c: 422: temp1 += AngleLowByte;
  4952  09FF  1683               	bsf	status, 5	;RP0=1, select bank1
  4953  0A00  1303               	bcf	status, 6	;RP1=0, select bank1
  4954  0A01  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  4955  0A02  1283               	bcf	status, 5	;RP0=0, select bank0
  4956  0A03  1303               	bcf	status, 6	;RP1=0, select bank0
  4957  0A04  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4958  0A05  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4959  0A06  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4960  0A07  07E0               	addwf	(robotTurnSpeed@temp1),f
  4961  0A08  1803               	skipnc
  4962  0A09  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  4963  0A0A  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4964  0A0B  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  4965                           	line	423
  4966                           	
  4967  0A0C                     l11606:	
  4968                           ;robot.c: 423: angleTurned += temp1;
  4969  0A0C  0860               	movf	(robotTurnSpeed@temp1),w
  4970  0A0D  1683               	bsf	status, 5	;RP0=1, select bank1
  4971  0A0E  1303               	bcf	status, 6	;RP1=0, select bank1
  4972  0A0F  07BE               	addwf	(_angleTurned)^080h,f
  4973  0A10  1803               	skipnc
  4974  0A11  0ABF               	incf	(_angleTurned+1)^080h,f
  4975  0A12  1283               	bcf	status, 5	;RP0=0, select bank0
  4976  0A13  1303               	bcf	status, 6	;RP1=0, select bank0
  4977  0A14  0861               	movf	(robotTurnSpeed@temp1+1),w
  4978  0A15  1683               	bsf	status, 5	;RP0=1, select bank1
  4979  0A16  1303               	bcf	status, 6	;RP1=0, select bank1
  4980  0A17  07BF               	addwf	(_angleTurned+1)^080h,f
  4981                           	line	424
  4982                           	
  4983  0A18                     l11608:	
  4984                           ;robot.c: 424: Disp2 = angleTurned;
  4985  0A18  083F               	movf	(_angleTurned+1)^080h,w
  4986  0A19  01B7               	clrf	(_Disp2+1)^080h
  4987  0A1A  07B7               	addwf	(_Disp2+1)^080h
  4988  0A1B  083E               	movf	(_angleTurned)^080h,w
  4989  0A1C  01B6               	clrf	(_Disp2)^080h
  4990  0A1D  07B6               	addwf	(_Disp2)^080h
  4991                           
  4992                           	line	425
  4993                           	
  4994  0A1E                     l11610:	
  4995                           ;robot.c: 425: UpdateDisplay();
  4996  0A1E  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4997  0A23  2A24               	goto	l11612
  4998                           	line	426
  4999                           	
  5000  0A24                     l6158:	
  5001                           	line	412
  5002                           	
  5003  0A24                     l11612:	
  5004  0A24  1683               	bsf	status, 5	;RP0=1, select bank1
  5005  0A25  1303               	bcf	status, 6	;RP1=0, select bank1
  5006  0A26  083F               	movf	(_angleTurned+1)^080h,w
  5007  0A27  1283               	bcf	status, 5	;RP0=0, select bank0
  5008  0A28  1303               	bcf	status, 6	;RP1=0, select bank0
  5009  0A29  01A7               	clrf	(?_abs+1)
  5010  0A2A  07A7               	addwf	(?_abs+1)
  5011  0A2B  1683               	bsf	status, 5	;RP0=1, select bank1
  5012  0A2C  1303               	bcf	status, 6	;RP1=0, select bank1
  5013  0A2D  083E               	movf	(_angleTurned)^080h,w
  5014  0A2E  1283               	bcf	status, 5	;RP0=0, select bank0
  5015  0A2F  1303               	bcf	status, 6	;RP1=0, select bank0
  5016  0A30  01A6               	clrf	(?_abs)
  5017  0A31  07A6               	addwf	(?_abs)
  5018                           
  5019  0A32  160A  118A  22B8   	fcall	_abs
              120A  158A         
  5020  0A37  1283               	bcf	status, 5	;RP0=0, select bank0
  5021  0A38  1303               	bcf	status, 6	;RP1=0, select bank0
  5022  0A39  0826               	movf	(0+?_abs),w
  5023  0A3A  00DD               	movwf	(??_robotTurnSpeed+0)+0
  5024  0A3B  0827               	movf	(1+?_abs),w
  5025  0A3C  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  5026  0A3D  085A               	movf	(robotTurnSpeed@angle+1),w
  5027  0A3E  01A7               	clrf	(?_abs+1)
  5028  0A3F  07A7               	addwf	(?_abs+1)
  5029  0A40  0859               	movf	(robotTurnSpeed@angle),w
  5030  0A41  01A6               	clrf	(?_abs)
  5031  0A42  07A6               	addwf	(?_abs)
  5032                           
  5033  0A43  160A  118A  22B8   	fcall	_abs
              120A  158A         
  5034  0A48  1283               	bcf	status, 5	;RP0=0, select bank0
  5035  0A49  1303               	bcf	status, 6	;RP1=0, select bank0
  5036  0A4A  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  5037  0A4B  3A80               	xorlw	80h
  5038  0A4C  00DF               	movwf	(??_robotTurnSpeed+2)+0
  5039  0A4D  0827               	movf	(1+(?_abs)),w
  5040  0A4E  3A80               	xorlw	80h
  5041  0A4F  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  5042  0A50  1D03               	skipz
  5043  0A51  2A54               	goto	u5065
  5044  0A52  0826               	movf	(0+(?_abs)),w
  5045  0A53  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  5046  0A54                     u5065:
  5047                           
  5048  0A54  1C03               	skipc
  5049  0A55  2A57               	goto	u5061
  5050  0A56  2A58               	goto	u5060
  5051  0A57                     u5061:
  5052  0A57  29D1               	goto	l11592
  5053  0A58                     u5060:
  5054  0A58  2A59               	goto	l11614
  5055                           	
  5056  0A59                     l6163:	
  5057                           	line	428
  5058                           	
  5059  0A59                     l11614:	
  5060                           ;robot.c: 426: }
  5061                           ;robot.c: 428: robotTurn(0);
  5062  0A59  3000               	movlw	low(0)
  5063  0A5A  1283               	bcf	status, 5	;RP0=0, select bank0
  5064  0A5B  1303               	bcf	status, 6	;RP1=0, select bank0
  5065  0A5C  00A2               	movwf	(?_robotTurn)
  5066  0A5D  3000               	movlw	high(0)
  5067  0A5E  00A3               	movwf	((?_robotTurn))+1
  5068  0A5F  160A  118A  257D   	fcall	_robotTurn
              120A  158A         
  5069                           	line	429
  5070                           	
  5071  0A64                     l6164:	
  5072  0A64  0008               	return
  5073                           	opt stack 0
  5074                           GLOBAL	__end_of_robotTurnSpeed
  5075  0A65                     	__end_of_robotTurnSpeed:
  5076 ;; =============== function _robotTurnSpeed ends ============
  5077                           
  5078                           	signat	_robotTurnSpeed,8312
  5079                           	global	_robotMoveSpeed
  5080                           psect	text1067,local,class=CODE,delta=2
  5081                           global __ptext1067
  5082  0A65                     __ptext1067:
  5083                           
  5084 ;; *************** function _robotMoveSpeed *****************
  5085 ;; Defined at:
  5086 ;;		line 357 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  distance        2   57[BANK0 ] int 
  5089 ;;  speed           2   59[BANK0 ] int 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  temp1           2   64[BANK0 ] int 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       4       0       0       0
  5102 ;;      Locals:         0       2       0       0       0
  5103 ;;      Temps:          0       3       0       0       0
  5104 ;;      Totals:         0       9       0       0       0
  5105 ;;Total ram usage:        9 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    6
  5108 ;; This function calls:
  5109 ;;		_RobotDrive
  5110 ;;		_robot_read
  5111 ;;		_UpdateDisplay
  5112 ;;		_abs
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           psect	text1067
  5118                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5119                           	line	357
  5120                           	global	__size_of_robotMoveSpeed
  5121  00E1                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  5122                           	
  5123  0A65                     _robotMoveSpeed:	
  5124                           	opt	stack 1
  5125                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5126                           	line	358
  5127                           	
  5128  0A65                     l11548:	
  5129                           ;robot.c: 358: distTravelled = 0;
  5130  0A65  1683               	bsf	status, 5	;RP0=1, select bank1
  5131  0A66  1303               	bcf	status, 6	;RP1=0, select bank1
  5132  0A67  01C0               	clrf	(_distTravelled)^080h
  5133  0A68  01C1               	clrf	(_distTravelled+1)^080h
  5134                           	line	360
  5135                           	
  5136  0A69                     l11550:	
  5137                           ;robot.c: 359: int temp1;
  5138                           ;robot.c: 360: RobotDrive(speed, 0x7FFF);
  5139  0A69  1283               	bcf	status, 5	;RP0=0, select bank0
  5140  0A6A  1303               	bcf	status, 6	;RP1=0, select bank0
  5141  0A6B  085C               	movf	(robotMoveSpeed@speed+1),w
  5142  0A6C  01B0               	clrf	(?_RobotDrive+1)
  5143  0A6D  07B0               	addwf	(?_RobotDrive+1)
  5144  0A6E  085B               	movf	(robotMoveSpeed@speed),w
  5145  0A6F  01AF               	clrf	(?_RobotDrive)
  5146  0A70  07AF               	addwf	(?_RobotDrive)
  5147                           
  5148  0A71  30FF               	movlw	low(07FFFh)
  5149  0A72  00B1               	movwf	0+(?_RobotDrive)+02h
  5150  0A73  307F               	movlw	high(07FFFh)
  5151  0A74  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5152  0A75  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  5153                           	line	363
  5154                           ;robot.c: 363: while (abs(distTravelled) < abs(distance))
  5155  0A7A  2AEB               	goto	l11580
  5156                           	
  5157  0A7B                     l6150:	
  5158                           	line	365
  5159                           	
  5160  0A7B                     l11552:	
  5161                           ;robot.c: 364: {
  5162                           ;robot.c: 365: robot_read(0);
  5163  0A7B  3000               	movlw	(0)
  5164  0A7C  120A  118A  26C2   	fcall	_robot_read
              120A  158A         
  5165                           	line	366
  5166                           	
  5167  0A81                     l11554:	
  5168                           ;robot.c: 366: if (BumpSensors)
  5169  0A81  1283               	bcf	status, 5	;RP0=0, select bank0
  5170  0A82  1303               	bcf	status, 6	;RP1=0, select bank0
  5171  0A83  086C               	movf	(_BumpSensors),w	;volatile
  5172  0A84  1D03               	skipz
  5173  0A85  2A87               	goto	u5000
  5174  0A86  2A8D               	goto	l11558
  5175  0A87                     u5000:
  5176                           	line	368
  5177                           	
  5178  0A87                     l11556:	
  5179                           ;robot.c: 367: {
  5180                           ;robot.c: 368: ROBOTerror = 1;
  5181  0A87  1683               	bsf	status, 5	;RP0=1, select bank1
  5182  0A88  1303               	bcf	status, 6	;RP1=0, select bank1
  5183  0A89  01D2               	clrf	(_ROBOTerror)^080h
  5184  0A8A  1403               	bsf	status,0
  5185  0A8B  0DD2               	rlf	(_ROBOTerror)^080h,f
  5186                           	line	369
  5187                           ;robot.c: 369: break;
  5188  0A8C  2B20               	goto	l11582
  5189                           	line	370
  5190                           	
  5191  0A8D                     l6151:	
  5192                           	line	371
  5193                           	
  5194  0A8D                     l11558:	
  5195                           ;robot.c: 370: }
  5196                           ;robot.c: 371: if (VwallSensor)
  5197  0A8D  1283               	bcf	status, 5	;RP0=0, select bank0
  5198  0A8E  086F               	movf	(_VwallSensor),w	;volatile
  5199  0A8F  1D03               	skipz
  5200  0A90  2A92               	goto	u5010
  5201  0A91  2A99               	goto	l11562
  5202  0A92                     u5010:
  5203                           	line	373
  5204                           	
  5205  0A92                     l11560:	
  5206                           ;robot.c: 372: {
  5207                           ;robot.c: 373: ROBOTerror = 2;
  5208  0A92  3002               	movlw	(02h)
  5209  0A93  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5210  0A94  085D               	movf	(??_robotMoveSpeed+0)+0,w
  5211  0A95  1683               	bsf	status, 5	;RP0=1, select bank1
  5212  0A96  1303               	bcf	status, 6	;RP1=0, select bank1
  5213  0A97  00D2               	movwf	(_ROBOTerror)^080h
  5214                           	line	374
  5215                           ;robot.c: 374: break;
  5216  0A98  2B20               	goto	l11582
  5217                           	line	375
  5218                           	
  5219  0A99                     l6153:	
  5220                           	line	376
  5221                           	
  5222  0A99                     l11562:	
  5223                           ;robot.c: 375: }
  5224                           ;robot.c: 376: if (CliffSensors)
  5225  0A99  1683               	bsf	status, 5	;RP0=1, select bank1
  5226  0A9A  1303               	bcf	status, 6	;RP1=0, select bank1
  5227  0A9B  084F               	movf	(_CliffSensors)^080h,w	;volatile
  5228  0A9C  1D03               	skipz
  5229  0A9D  2A9F               	goto	u5020
  5230  0A9E  2AA8               	goto	l11566
  5231  0A9F                     u5020:
  5232                           	line	378
  5233                           	
  5234  0A9F                     l11564:	
  5235                           ;robot.c: 377: {
  5236                           ;robot.c: 378: ROBOTerror = 3;
  5237  0A9F  3003               	movlw	(03h)
  5238  0AA0  1283               	bcf	status, 5	;RP0=0, select bank0
  5239  0AA1  1303               	bcf	status, 6	;RP1=0, select bank0
  5240  0AA2  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5241  0AA3  085D               	movf	(??_robotMoveSpeed+0)+0,w
  5242  0AA4  1683               	bsf	status, 5	;RP0=1, select bank1
  5243  0AA5  1303               	bcf	status, 6	;RP1=0, select bank1
  5244  0AA6  00D2               	movwf	(_ROBOTerror)^080h
  5245                           	line	379
  5246                           ;robot.c: 379: break;
  5247  0AA7  2B20               	goto	l11582
  5248                           	line	380
  5249                           	
  5250  0AA8                     l6154:	
  5251                           	line	381
  5252                           	
  5253  0AA8                     l11566:	
  5254                           ;robot.c: 380: }
  5255                           ;robot.c: 381: temp1 = DistHighByte;
  5256  0AA8  1283               	bcf	status, 5	;RP0=0, select bank0
  5257  0AA9  1303               	bcf	status, 6	;RP1=0, select bank0
  5258  0AAA  086D               	movf	(_DistHighByte),w	;volatile
  5259  0AAB  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5260  0AAC  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  5261  0AAD  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5262  0AAE  00E0               	movwf	(robotMoveSpeed@temp1)
  5263  0AAF  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5264  0AB0  00E1               	movwf	(robotMoveSpeed@temp1+1)
  5265                           	line	382
  5266                           	
  5267  0AB1                     l11568:	
  5268                           ;robot.c: 382: temp1 = temp1 << 8;
  5269  0AB1  0861               	movf	(robotMoveSpeed@temp1+1),w
  5270  0AB2  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  5271  0AB3  0860               	movf	(robotMoveSpeed@temp1),w
  5272  0AB4  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5273  0AB5  085D               	movf	(??_robotMoveSpeed+0)+0,w
  5274  0AB6  00DE               	movwf	(??_robotMoveSpeed+0)+1
  5275  0AB7  01DD               	clrf	(??_robotMoveSpeed+0)+0
  5276  0AB8  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5277  0AB9  00E0               	movwf	(robotMoveSpeed@temp1)
  5278  0ABA  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5279  0ABB  00E1               	movwf	(robotMoveSpeed@temp1+1)
  5280                           	line	383
  5281                           	
  5282  0ABC                     l11570:	
  5283                           ;robot.c: 383: temp1 += DistLowByte;
  5284  0ABC  086E               	movf	(_DistLowByte),w	;volatile
  5285  0ABD  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5286  0ABE  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  5287  0ABF  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5288  0AC0  07E0               	addwf	(robotMoveSpeed@temp1),f
  5289  0AC1  1803               	skipnc
  5290  0AC2  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  5291  0AC3  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5292  0AC4  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  5293                           	line	384
  5294                           	
  5295  0AC5                     l11572:	
  5296                           ;robot.c: 384: distTravelled += temp1;
  5297  0AC5  0860               	movf	(robotMoveSpeed@temp1),w
  5298  0AC6  1683               	bsf	status, 5	;RP0=1, select bank1
  5299  0AC7  1303               	bcf	status, 6	;RP1=0, select bank1
  5300  0AC8  07C0               	addwf	(_distTravelled)^080h,f
  5301  0AC9  1803               	skipnc
  5302  0ACA  0AC1               	incf	(_distTravelled+1)^080h,f
  5303  0ACB  1283               	bcf	status, 5	;RP0=0, select bank0
  5304  0ACC  1303               	bcf	status, 6	;RP1=0, select bank0
  5305  0ACD  0861               	movf	(robotMoveSpeed@temp1+1),w
  5306  0ACE  1683               	bsf	status, 5	;RP0=1, select bank1
  5307  0ACF  1303               	bcf	status, 6	;RP1=0, select bank1
  5308  0AD0  07C1               	addwf	(_distTravelled+1)^080h,f
  5309                           	line	385
  5310                           	
  5311  0AD1                     l11574:	
  5312                           ;robot.c: 385: TotalDistTravelled += temp1;
  5313  0AD1  1283               	bcf	status, 5	;RP0=0, select bank0
  5314  0AD2  1303               	bcf	status, 6	;RP1=0, select bank0
  5315  0AD3  0860               	movf	(robotMoveSpeed@temp1),w
  5316  0AD4  1683               	bsf	status, 5	;RP0=1, select bank1
  5317  0AD5  1303               	bcf	status, 6	;RP1=0, select bank1
  5318  0AD6  07BC               	addwf	(_TotalDistTravelled)^080h,f
  5319  0AD7  1803               	skipnc
  5320  0AD8  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  5321  0AD9  1283               	bcf	status, 5	;RP0=0, select bank0
  5322  0ADA  1303               	bcf	status, 6	;RP1=0, select bank0
  5323  0ADB  0861               	movf	(robotMoveSpeed@temp1+1),w
  5324  0ADC  1683               	bsf	status, 5	;RP0=1, select bank1
  5325  0ADD  1303               	bcf	status, 6	;RP1=0, select bank1
  5326  0ADE  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  5327                           	line	386
  5328                           	
  5329  0ADF                     l11576:	
  5330                           ;robot.c: 386: Disp2 = distTravelled;
  5331  0ADF  0841               	movf	(_distTravelled+1)^080h,w
  5332  0AE0  01B7               	clrf	(_Disp2+1)^080h
  5333  0AE1  07B7               	addwf	(_Disp2+1)^080h
  5334  0AE2  0840               	movf	(_distTravelled)^080h,w
  5335  0AE3  01B6               	clrf	(_Disp2)^080h
  5336  0AE4  07B6               	addwf	(_Disp2)^080h
  5337                           
  5338                           	line	387
  5339                           	
  5340  0AE5                     l11578:	
  5341                           ;robot.c: 387: UpdateDisplay();
  5342  0AE5  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5343  0AEA  2AEB               	goto	l11580
  5344                           	line	393
  5345                           	
  5346  0AEB                     l6149:	
  5347                           	line	363
  5348                           	
  5349  0AEB                     l11580:	
  5350  0AEB  1683               	bsf	status, 5	;RP0=1, select bank1
  5351  0AEC  1303               	bcf	status, 6	;RP1=0, select bank1
  5352  0AED  0841               	movf	(_distTravelled+1)^080h,w
  5353  0AEE  1283               	bcf	status, 5	;RP0=0, select bank0
  5354  0AEF  1303               	bcf	status, 6	;RP1=0, select bank0
  5355  0AF0  01A7               	clrf	(?_abs+1)
  5356  0AF1  07A7               	addwf	(?_abs+1)
  5357  0AF2  1683               	bsf	status, 5	;RP0=1, select bank1
  5358  0AF3  1303               	bcf	status, 6	;RP1=0, select bank1
  5359  0AF4  0840               	movf	(_distTravelled)^080h,w
  5360  0AF5  1283               	bcf	status, 5	;RP0=0, select bank0
  5361  0AF6  1303               	bcf	status, 6	;RP1=0, select bank0
  5362  0AF7  01A6               	clrf	(?_abs)
  5363  0AF8  07A6               	addwf	(?_abs)
  5364                           
  5365  0AF9  160A  118A  22B8   	fcall	_abs
              120A  158A         
  5366  0AFE  1283               	bcf	status, 5	;RP0=0, select bank0
  5367  0AFF  1303               	bcf	status, 6	;RP1=0, select bank0
  5368  0B00  0826               	movf	(0+?_abs),w
  5369  0B01  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5370  0B02  0827               	movf	(1+?_abs),w
  5371  0B03  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  5372  0B04  085A               	movf	(robotMoveSpeed@distance+1),w
  5373  0B05  01A7               	clrf	(?_abs+1)
  5374  0B06  07A7               	addwf	(?_abs+1)
  5375  0B07  0859               	movf	(robotMoveSpeed@distance),w
  5376  0B08  01A6               	clrf	(?_abs)
  5377  0B09  07A6               	addwf	(?_abs)
  5378                           
  5379  0B0A  160A  118A  22B8   	fcall	_abs
              120A  158A         
  5380  0B0F  1283               	bcf	status, 5	;RP0=0, select bank0
  5381  0B10  1303               	bcf	status, 6	;RP1=0, select bank0
  5382  0B11  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5383  0B12  3A80               	xorlw	80h
  5384  0B13  00DF               	movwf	(??_robotMoveSpeed+2)+0
  5385  0B14  0827               	movf	(1+(?_abs)),w
  5386  0B15  3A80               	xorlw	80h
  5387  0B16  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  5388  0B17  1D03               	skipz
  5389  0B18  2B1B               	goto	u5035
  5390  0B19  0826               	movf	(0+(?_abs)),w
  5391  0B1A  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  5392  0B1B                     u5035:
  5393                           
  5394  0B1B  1C03               	skipc
  5395  0B1C  2B1E               	goto	u5031
  5396  0B1D  2B1F               	goto	u5030
  5397  0B1E                     u5031:
  5398  0B1E  2A7B               	goto	l11552
  5399  0B1F                     u5030:
  5400  0B1F  2B20               	goto	l11582
  5401                           	
  5402  0B20                     l6152:	
  5403                           	line	394
  5404                           	
  5405  0B20                     l11582:	
  5406                           ;robot.c: 393: }
  5407                           ;robot.c: 394: Disp2 = ROBOTerror;
  5408  0B20  1683               	bsf	status, 5	;RP0=1, select bank1
  5409  0B21  1303               	bcf	status, 6	;RP1=0, select bank1
  5410  0B22  0852               	movf	(_ROBOTerror)^080h,w
  5411  0B23  1283               	bcf	status, 5	;RP0=0, select bank0
  5412  0B24  1303               	bcf	status, 6	;RP1=0, select bank0
  5413  0B25  00DD               	movwf	(??_robotMoveSpeed+0)+0
  5414  0B26  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  5415  0B27  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  5416  0B28  1683               	bsf	status, 5	;RP0=1, select bank1
  5417  0B29  1303               	bcf	status, 6	;RP1=0, select bank1
  5418  0B2A  00B6               	movwf	(_Disp2)^080h
  5419  0B2B  1283               	bcf	status, 5	;RP0=0, select bank0
  5420  0B2C  1303               	bcf	status, 6	;RP1=0, select bank0
  5421  0B2D  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  5422  0B2E  1683               	bsf	status, 5	;RP0=1, select bank1
  5423  0B2F  1303               	bcf	status, 6	;RP1=0, select bank1
  5424  0B30  00B7               	movwf	(_Disp2+1)^080h
  5425                           	line	395
  5426                           	
  5427  0B31                     l11584:	
  5428                           ;robot.c: 395: UpdateDisplay();
  5429  0B31  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5430                           	line	396
  5431                           	
  5432  0B36                     l11586:	
  5433                           ;robot.c: 396: RobotDrive(0, 0x7FFF);
  5434  0B36  3000               	movlw	low(0)
  5435  0B37  1283               	bcf	status, 5	;RP0=0, select bank0
  5436  0B38  1303               	bcf	status, 6	;RP1=0, select bank0
  5437  0B39  00AF               	movwf	(?_RobotDrive)
  5438  0B3A  3000               	movlw	high(0)
  5439  0B3B  00B0               	movwf	((?_RobotDrive))+1
  5440  0B3C  30FF               	movlw	low(07FFFh)
  5441  0B3D  00B1               	movwf	0+(?_RobotDrive)+02h
  5442  0B3E  307F               	movlw	high(07FFFh)
  5443  0B3F  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5444  0B40  160A  118A  22ED   	fcall	_RobotDrive
              120A  158A         
  5445                           	line	398
  5446                           	
  5447  0B45                     l6155:	
  5448  0B45  0008               	return
  5449                           	opt stack 0
  5450                           GLOBAL	__end_of_robotMoveSpeed
  5451  0B46                     	__end_of_robotMoveSpeed:
  5452 ;; =============== function _robotMoveSpeed ends ============
  5453                           
  5454                           	signat	_robotMoveSpeed,8312
  5455                           	global	_calibrateIR
  5456                           psect	text1068,local,class=CODE,delta=2
  5457                           global __ptext1068
  5458  1511                     __ptext1068:
  5459                           
  5460 ;; *************** function _calibrateIR *****************
  5461 ;; Defined at:
  5462 ;;		line 316 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;		None               void
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5476 ;;      Params:         0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0
  5479 ;;      Totals:         0       0       0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    6
  5483 ;; This function calls:
  5484 ;;		_rotate
  5485 ;;		_UpdateDisplay
  5486 ;; This function is called by:
  5487 ;;		_main
  5488 ;;		_Init_Follow_IR
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           psect	text1068
  5492                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5493                           	line	316
  5494                           	global	__size_of_calibrateIR
  5495  006C                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  5496                           	
  5497  1511                     _calibrateIR:	
  5498                           	opt	stack 0
  5499                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5500                           	line	317
  5501                           	
  5502  1511                     l11516:	
  5503                           ;Main.c: 317: currentMenu = 1;
  5504  1511  1683               	bsf	status, 5	;RP0=1, select bank1
  5505  1512  1303               	bcf	status, 6	;RP1=0, select bank1
  5506  1513  01D5               	clrf	(_currentMenu)^080h	;volatile
  5507  1514  1403               	bsf	status,0
  5508  1515  0DD5               	rlf	(_currentMenu)^080h,f	;volatile
  5509                           	line	318
  5510                           	
  5511  1516                     l11518:	
  5512                           ;Main.c: 318: rotate(8, 0);
  5513  1516  3008               	movlw	low(08h)
  5514  1517  1283               	bcf	status, 5	;RP0=0, select bank0
  5515  1518  1303               	bcf	status, 6	;RP1=0, select bank0
  5516  1519  00A3               	movwf	(?_rotate)
  5517  151A  3000               	movlw	high(08h)
  5518  151B  00A4               	movwf	((?_rotate))+1
  5519  151C  01A5               	clrf	0+(?_rotate)+02h
  5520  151D  160A  118A  2442   	fcall	_rotate
              160A  118A         
  5521                           	line	319
  5522                           	
  5523  1522                     l11520:	
  5524                           ;Main.c: 319: rotate(8, 1);
  5525  1522  3008               	movlw	low(08h)
  5526  1523  1283               	bcf	status, 5	;RP0=0, select bank0
  5527  1524  1303               	bcf	status, 6	;RP1=0, select bank0
  5528  1525  00A3               	movwf	(?_rotate)
  5529  1526  3000               	movlw	high(08h)
  5530  1527  00A4               	movwf	((?_rotate))+1
  5531  1528  01A5               	clrf	0+(?_rotate)+02h
  5532  1529  1403               	bsf	status,0
  5533  152A  0DA5               	rlf	0+(?_rotate)+02h,f
  5534  152B  160A  118A  2442   	fcall	_rotate
              160A  118A         
  5535  1530  2D31               	goto	l11522
  5536                           	line	320
  5537                           ;Main.c: 320: while (1)
  5538                           	
  5539  1531                     l2283:	
  5540                           	line	322
  5541                           	
  5542  1531                     l11522:	
  5543                           ;Main.c: 321: {
  5544                           ;Main.c: 322: if (RTC_FLAG_250MS == 1)
  5545  1531  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5546  1532  2D34               	goto	u4991
  5547  1533  2D35               	goto	u4990
  5548  1534                     u4991:
  5549  1534  2D69               	goto	l11546
  5550  1535                     u4990:
  5551                           	line	324
  5552                           	
  5553  1535                     l11524:	
  5554                           ;Main.c: 323: {
  5555                           ;Main.c: 324: RTC_FLAG_250MS = 0;
  5556  1535  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5557                           	line	325
  5558                           	
  5559  1536                     l11526:	
  5560                           ;Main.c: 325: UpdateDisplay();
  5561  1536  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  5562  153B  2D69               	goto	l11546
  5563                           	line	326
  5564                           	
  5565  153C                     l2284:	
  5566                           	line	327
  5567                           ;Main.c: 326: }
  5568                           ;Main.c: 327: switch (buttonPressed)
  5569  153C  2D69               	goto	l11546
  5570                           	line	329
  5571                           ;Main.c: 328: {
  5572                           ;Main.c: 329: case 1:
  5573                           	
  5574  153D                     l2286:	
  5575                           	line	330
  5576                           ;Main.c: 330: buttonPressed = 0;
  5577  153D  01FD               	clrf	(_buttonPressed)	;volatile
  5578                           	line	331
  5579                           ;Main.c: 331: break;
  5580  153E  2D31               	goto	l11522
  5581                           	line	332
  5582                           ;Main.c: 332: case 2:
  5583                           	
  5584  153F                     l2288:	
  5585                           	line	333
  5586                           ;Main.c: 333: buttonPressed = 0;
  5587  153F  01FD               	clrf	(_buttonPressed)	;volatile
  5588                           	line	334
  5589                           ;Main.c: 334: break;
  5590  1540  2D31               	goto	l11522
  5591                           	line	335
  5592                           ;Main.c: 335: case 3:
  5593                           	
  5594  1541                     l2289:	
  5595                           	line	336
  5596                           	
  5597  1541                     l11528:	
  5598                           ;Main.c: 336: rotate(1, 1);
  5599  1541  3001               	movlw	low(01h)
  5600  1542  1283               	bcf	status, 5	;RP0=0, select bank0
  5601  1543  1303               	bcf	status, 6	;RP1=0, select bank0
  5602  1544  00A3               	movwf	(?_rotate)
  5603  1545  3000               	movlw	high(01h)
  5604  1546  00A4               	movwf	((?_rotate))+1
  5605  1547  01A5               	clrf	0+(?_rotate)+02h
  5606  1548  1403               	bsf	status,0
  5607  1549  0DA5               	rlf	0+(?_rotate)+02h,f
  5608  154A  160A  118A  2442   	fcall	_rotate
              160A  118A         
  5609                           	line	337
  5610                           	
  5611  154F                     l11530:	
  5612                           ;Main.c: 337: buttonPressed = 0;
  5613  154F  01FD               	clrf	(_buttonPressed)	;volatile
  5614                           	line	338
  5615                           ;Main.c: 338: break;
  5616  1550  2D31               	goto	l11522
  5617                           	line	339
  5618                           ;Main.c: 339: case 4:
  5619                           	
  5620  1551                     l2290:	
  5621                           	line	340
  5622                           	
  5623  1551                     l11532:	
  5624                           ;Main.c: 340: rotate(1, 0);
  5625  1551  3001               	movlw	low(01h)
  5626  1552  1283               	bcf	status, 5	;RP0=0, select bank0
  5627  1553  1303               	bcf	status, 6	;RP1=0, select bank0
  5628  1554  00A3               	movwf	(?_rotate)
  5629  1555  3000               	movlw	high(01h)
  5630  1556  00A4               	movwf	((?_rotate))+1
  5631  1557  01A5               	clrf	0+(?_rotate)+02h
  5632  1558  160A  118A  2442   	fcall	_rotate
              160A  118A         
  5633                           	line	341
  5634                           	
  5635  155D                     l11534:	
  5636                           ;Main.c: 341: buttonPressed = 0;
  5637  155D  01FD               	clrf	(_buttonPressed)	;volatile
  5638                           	line	342
  5639                           ;Main.c: 342: break;
  5640  155E  2D31               	goto	l11522
  5641                           	line	343
  5642                           ;Main.c: 343: case 5:
  5643                           	
  5644  155F                     l2291:	
  5645                           	line	345
  5646                           	
  5647  155F                     l11536:	
  5648                           ;Main.c: 345: totalSteps = 0;
  5649  155F  1683               	bsf	status, 5	;RP0=1, select bank1
  5650  1560  1303               	bcf	status, 6	;RP1=0, select bank1
  5651  1561  01CA               	clrf	(_totalSteps)^080h
  5652  1562  01CB               	clrf	(_totalSteps+1)^080h
  5653                           	line	346
  5654                           	
  5655  1563                     l11538:	
  5656                           ;Main.c: 346: buttonPressed = 0;
  5657  1563  01FD               	clrf	(_buttonPressed)	;volatile
  5658                           	line	347
  5659                           	
  5660  1564                     l11540:	
  5661                           ;Main.c: 347: currentMenu = 0;
  5662  1564  01D5               	clrf	(_currentMenu)^080h	;volatile
  5663  1565  2D7C               	goto	l2292
  5664                           	line	348
  5665                           	
  5666  1566                     l11542:	
  5667                           ;Main.c: 348: return;
  5668  1566  2D7C               	goto	l2292
  5669                           	line	349
  5670                           ;Main.c: 349: default:
  5671                           	
  5672  1567                     l2293:	
  5673                           	line	350
  5674                           ;Main.c: 350: break;
  5675  1567  2D31               	goto	l11522
  5676                           	line	351
  5677                           	
  5678  1568                     l11544:	
  5679                           ;Main.c: 351: }
  5680  1568  2D31               	goto	l11522
  5681                           	line	327
  5682                           	
  5683  1569                     l2285:	
  5684                           	
  5685  1569                     l11546:	
  5686  1569  087D               	movf	(_buttonPressed),w	;volatile
  5687                           	; Switch size 1, requested type "space"
  5688                           ; Number of cases is 5, Range of values is 1 to 5
  5689                           ; switch strategies available:
  5690                           ; Name         Instructions Cycles
  5691                           ; simple_byte           16     9 (average)
  5692                           ; direct_byte           26    11 (fixed)
  5693                           ; jumptable            263     9 (fixed)
  5694                           ;	Chosen strategy is simple_byte
  5695                           
  5696                           	opt asmopt_off
  5697  156A  3A01               	xorlw	1^0	; case 1
  5698  156B  1903               	skipnz
  5699  156C  2D3D               	goto	l2286
  5700  156D  3A03               	xorlw	2^1	; case 2
  5701  156E  1903               	skipnz
  5702  156F  2D3F               	goto	l2288
  5703  1570  3A01               	xorlw	3^2	; case 3
  5704  1571  1903               	skipnz
  5705  1572  2D41               	goto	l11528
  5706  1573  3A07               	xorlw	4^3	; case 4
  5707  1574  1903               	skipnz
  5708  1575  2D51               	goto	l11532
  5709  1576  3A01               	xorlw	5^4	; case 5
  5710  1577  1903               	skipnz
  5711  1578  2D5F               	goto	l11536
  5712  1579  2D31               	goto	l11522
  5713                           	opt asmopt_on
  5714                           
  5715                           	line	351
  5716                           	
  5717  157A                     l2287:	
  5718  157A  2D31               	goto	l11522
  5719                           	line	352
  5720                           	
  5721  157B                     l2294:	
  5722                           	line	320
  5723  157B  2D31               	goto	l11522
  5724                           	
  5725  157C                     l2295:	
  5726                           	line	353
  5727                           	
  5728  157C                     l2292:	
  5729  157C  0008               	return
  5730                           	opt stack 0
  5731                           GLOBAL	__end_of_calibrateIR
  5732  157D                     	__end_of_calibrateIR:
  5733 ;; =============== function _calibrateIR ends ============
  5734                           
  5735                           	signat	_calibrateIR,88
  5736                           	global	_UpdateDisplay
  5737                           psect	text1069,local,class=CODE,delta=2
  5738                           global __ptext1069
  5739  0E0B                     __ptext1069:
  5740                           
  5741 ;; *************** function _UpdateDisplay *****************
  5742 ;; Defined at:
  5743 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  5748 ;; Return value:  Size  Location     Type
  5749 ;;		None               void
  5750 ;; Registers used:
  5751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         0      16       0       0       0
  5759 ;;      Temps:          0       4       0       0       0
  5760 ;;      Totals:         0      20       0       0       0
  5761 ;;Total ram usage:       20 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    5
  5764 ;; This function calls:
  5765 ;;		_lcd_write_control
  5766 ;;		_sprintf
  5767 ;;		_lcd_set_cursor
  5768 ;;		_lcd_write_string
  5769 ;;		___awmod
  5770 ;; This function is called by:
  5771 ;;		_main
  5772 ;;		_calibrateIR
  5773 ;;		_ChargeMode
  5774 ;;		_robotFollow
  5775 ;;		_robot_turnRight
  5776 ;;		_robotMoveSpeed
  5777 ;;		_robotTurnSpeed
  5778 ;;		_scan360
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           psect	text1069
  5782                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  5783                           	line	236
  5784                           	global	__size_of_UpdateDisplay
  5785  01F5                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  5786                           	
  5787  0E0B                     _UpdateDisplay:	
  5788                           	opt	stack 1
  5789                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5790                           	line	237
  5791                           	
  5792  0E0B                     l11446:	
  5793                           ;HMI.c: 237: char LCDOutput[16] = "";
  5794  0E0B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  5795  0E0C  0084               	movwf	fsr0
  5796  0E0D  3090               	movlw	low(UpdateDisplay@F1261)
  5797  0E0E  1283               	bcf	status, 5	;RP0=0, select bank0
  5798  0E0F  1303               	bcf	status, 6	;RP1=0, select bank0
  5799  0E10  00C5               	movwf	(??_UpdateDisplay+0)+0
  5800  0E11  0804               	movf	fsr0,w
  5801  0E12  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  5802  0E13  3010               	movlw	16
  5803  0E14  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  5804  0E15                     u4970:
  5805  0E15  0845               	movf	(??_UpdateDisplay+0)+0,w
  5806  0E16  0084               	movwf	fsr0
  5807  0E17  1783               	bsf	status, 7	;select IRP bank3
  5808                           	
  5809  0E18  0800               	movf	indf,w
  5810  0E19  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  5811  0E1A  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  5812  0E1B  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  5813  0E1C  0084               	movwf	fsr0
  5814  0E1D  1383               	bcf	status, 7	;select IRP bank0
  5815                           	
  5816  0E1E  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  5817  0E1F  0080               	movwf	indf
  5818  0E20  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  5819  0E21  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  5820  0E22  2E15               	goto	u4970
  5821                           	line	238
  5822                           ;HMI.c: 238: switch (currentMenu)
  5823  0E23  2FF2               	goto	l11510
  5824                           	line	240
  5825                           ;HMI.c: 239: {
  5826                           ;HMI.c: 240: case 0:
  5827                           	
  5828  0E24                     l4577:	
  5829                           	line	241
  5830                           	
  5831  0E24                     l11448:	
  5832                           ;HMI.c: 241: lcd_write_control(0b00000001);
  5833  0E24  3001               	movlw	(01h)
  5834  0E25  160A  118A  203F   	fcall	_lcd_write_control
              120A  158A         
  5835                           	line	242
  5836                           	
  5837  0E2A                     l11450:	
  5838                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  5839  0E2A  302B               	movlw	((STR_13-__stringbase))&0ffh
  5840  0E2B  1283               	bcf	status, 5	;RP0=0, select bank0
  5841  0E2C  1303               	bcf	status, 6	;RP1=0, select bank0
  5842  0E2D  00C5               	movwf	(??_UpdateDisplay+0)+0
  5843  0E2E  0845               	movf	(??_UpdateDisplay+0)+0,w
  5844  0E2F  00B4               	movwf	(?_sprintf)
  5845  0E30  1683               	bsf	status, 5	;RP0=1, select bank1
  5846  0E31  1303               	bcf	status, 6	;RP1=0, select bank1
  5847  0E32  0835               	movf	(_Disp1+1)^080h,w
  5848  0E33  1283               	bcf	status, 5	;RP0=0, select bank0
  5849  0E34  1303               	bcf	status, 6	;RP1=0, select bank0
  5850  0E35  01B6               	clrf	1+(?_sprintf)+01h
  5851  0E36  07B6               	addwf	1+(?_sprintf)+01h
  5852  0E37  1683               	bsf	status, 5	;RP0=1, select bank1
  5853  0E38  1303               	bcf	status, 6	;RP1=0, select bank1
  5854  0E39  0834               	movf	(_Disp1)^080h,w
  5855  0E3A  1283               	bcf	status, 5	;RP0=0, select bank0
  5856  0E3B  1303               	bcf	status, 6	;RP1=0, select bank0
  5857  0E3C  01B5               	clrf	0+(?_sprintf)+01h
  5858  0E3D  07B5               	addwf	0+(?_sprintf)+01h
  5859                           
  5860  0E3E  1683               	bsf	status, 5	;RP0=1, select bank1
  5861  0E3F  1303               	bcf	status, 6	;RP1=0, select bank1
  5862  0E40  0837               	movf	(_Disp2+1)^080h,w
  5863  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  5864  0E42  1303               	bcf	status, 6	;RP1=0, select bank0
  5865  0E43  01B8               	clrf	1+(?_sprintf)+03h
  5866  0E44  07B8               	addwf	1+(?_sprintf)+03h
  5867  0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  5868  0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  5869  0E47  0836               	movf	(_Disp2)^080h,w
  5870  0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  5871  0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  5872  0E4A  01B7               	clrf	0+(?_sprintf)+03h
  5873  0E4B  07B7               	addwf	0+(?_sprintf)+03h
  5874                           
  5875  0E4C  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  5876  0E4D  120A  158A  2346   	fcall	_sprintf
              120A  158A         
  5877                           	line	243
  5878                           	
  5879  0E52                     l11452:	
  5880                           ;HMI.c: 243: lcd_set_cursor(0x00);
  5881  0E52  3000               	movlw	(0)
  5882  0E53  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  5883                           	line	244
  5884                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  5885  0E58  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  5886  0E59  1283               	bcf	status, 5	;RP0=0, select bank0
  5887  0E5A  1303               	bcf	status, 6	;RP1=0, select bank0
  5888  0E5B  00A7               	movwf	(?_lcd_write_string)
  5889  0E5C  3000               	movlw	(0x0/2)
  5890  0E5D  00A8               	movwf	(?_lcd_write_string+1)
  5891  0E5E  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  5892                           	line	245
  5893                           	
  5894  0E63                     l11454:	
  5895                           ;HMI.c: 245: lcd_set_cursor(0x40);
  5896  0E63  3040               	movlw	(040h)
  5897  0E64  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  5898                           	line	246
  5899                           	
  5900  0E69                     l11456:	
  5901                           ;HMI.c: 246: if (pos > 0)
  5902  0E69  1683               	bsf	status, 5	;RP0=1, select bank1
  5903  0E6A  1303               	bcf	status, 6	;RP1=0, select bank1
  5904  0E6B  0847               	movf	(_pos+1)^080h,w
  5905  0E6C  3A80               	xorlw	80h
  5906  0E6D  00FF               	movwf	btemp+1
  5907  0E6E  3080               	movlw	(high(01h))^80h
  5908  0E6F  027F               	subwf	btemp+1,w
  5909  0E70  1D03               	skipz
  5910  0E71  2E74               	goto	u4985
  5911  0E72  3001               	movlw	low(01h)
  5912  0E73  0246               	subwf	(_pos)^080h,w
  5913  0E74                     u4985:
  5914                           
  5915  0E74  1C03               	skipc
  5916  0E75  2E77               	goto	u4981
  5917  0E76  2E78               	goto	u4980
  5918  0E77                     u4981:
  5919  0E77  2E8B               	goto	l11460
  5920  0E78                     u4980:
  5921                           	line	247
  5922                           	
  5923  0E78                     l11458:	
  5924                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  5925  0E78  1683               	bsf	status, 5	;RP0=1, select bank1
  5926  0E79  1303               	bcf	status, 6	;RP1=0, select bank1
  5927  0E7A  0846               	movf	(_pos)^080h,w
  5928  0E7B  3EFF               	addlw	0FFh
  5929  0E7C  3EE5               	addlw	_shortMenuStrings&0ffh
  5930  0E7D  0084               	movwf	fsr0
  5931  0E7E  1383               	bcf	status, 7	;select IRP bank1
  5932  0E7F  0800               	movf	indf,w
  5933  0E80  1283               	bcf	status, 5	;RP0=0, select bank0
  5934  0E81  1303               	bcf	status, 6	;RP1=0, select bank0
  5935  0E82  00A7               	movwf	(?_lcd_write_string)
  5936  0E83  3080               	movlw	80h
  5937  0E84  00A8               	movwf	(?_lcd_write_string+1)
  5938  0E85  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  5939  0E8A  2E9E               	goto	l11462
  5940                           	line	248
  5941                           	
  5942  0E8B                     l4578:	
  5943                           	line	249
  5944                           	
  5945  0E8B                     l11460:	
  5946                           ;HMI.c: 248: else
  5947                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  5948  0E8B  1683               	bsf	status, 5	;RP0=1, select bank1
  5949  0E8C  1303               	bcf	status, 6	;RP1=0, select bank1
  5950  0E8D  0846               	movf	(_pos)^080h,w
  5951  0E8E  3E05               	addlw	05h
  5952  0E8F  3EE5               	addlw	_shortMenuStrings&0ffh
  5953  0E90  0084               	movwf	fsr0
  5954  0E91  1383               	bcf	status, 7	;select IRP bank1
  5955  0E92  0800               	movf	indf,w
  5956  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  5957  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  5958  0E95  00A7               	movwf	(?_lcd_write_string)
  5959  0E96  3080               	movlw	80h
  5960  0E97  00A8               	movwf	(?_lcd_write_string+1)
  5961  0E98  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  5962  0E9D  2E9E               	goto	l11462
  5963                           	
  5964  0E9E                     l4579:	
  5965                           	line	250
  5966                           	
  5967  0E9E                     l11462:	
  5968                           ;HMI.c: 250: lcd_set_cursor(0x44);
  5969  0E9E  3044               	movlw	(044h)
  5970  0E9F  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  5971                           	line	251
  5972                           	
  5973  0EA4                     l11464:	
  5974                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  5975  0EA4  1683               	bsf	status, 5	;RP0=1, select bank1
  5976  0EA5  1303               	bcf	status, 6	;RP1=0, select bank1
  5977  0EA6  0846               	movf	(_pos)^080h,w
  5978  0EA7  3EDF               	addlw	_menuStrings&0ffh
  5979  0EA8  0084               	movwf	fsr0
  5980  0EA9  1383               	bcf	status, 7	;select IRP bank1
  5981  0EAA  0800               	movf	indf,w
  5982  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5983  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5984  0EAD  00A7               	movwf	(?_lcd_write_string)
  5985  0EAE  3080               	movlw	80h
  5986  0EAF  00A8               	movwf	(?_lcd_write_string+1)
  5987  0EB0  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  5988                           	line	252
  5989                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  5990  0EB5  304D               	movlw	(04Dh)
  5991  0EB6  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  5992                           	line	253
  5993                           	
  5994  0EBB                     l11466:	
  5995                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  5996  0EBB  3006               	movlw	low(06h)
  5997  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  5998  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  5999  0EBE  00A0               	movwf	(?___awmod)
  6000  0EBF  3000               	movlw	high(06h)
  6001  0EC0  00A1               	movwf	((?___awmod))+1
  6002  0EC1  1683               	bsf	status, 5	;RP0=1, select bank1
  6003  0EC2  1303               	bcf	status, 6	;RP1=0, select bank1
  6004  0EC3  0846               	movf	(_pos)^080h,w
  6005  0EC4  3E01               	addlw	low(01h)
  6006  0EC5  1283               	bcf	status, 5	;RP0=0, select bank0
  6007  0EC6  1303               	bcf	status, 6	;RP1=0, select bank0
  6008  0EC7  00A2               	movwf	0+(?___awmod)+02h
  6009  0EC8  1683               	bsf	status, 5	;RP0=1, select bank1
  6010  0EC9  1303               	bcf	status, 6	;RP1=0, select bank1
  6011  0ECA  0847               	movf	(_pos+1)^080h,w
  6012  0ECB  1803               	skipnc
  6013  0ECC  3E01               	addlw	1
  6014  0ECD  3E00               	addlw	high(01h)
  6015  0ECE  1283               	bcf	status, 5	;RP0=0, select bank0
  6016  0ECF  1303               	bcf	status, 6	;RP1=0, select bank0
  6017  0ED0  00A3               	movwf	1+0+(?___awmod)+02h
  6018  0ED1  160A  118A  24A9   	fcall	___awmod
              120A  158A         
  6019  0ED6  1283               	bcf	status, 5	;RP0=0, select bank0
  6020  0ED7  1303               	bcf	status, 6	;RP1=0, select bank0
  6021  0ED8  0820               	movf	(0+(?___awmod)),w
  6022  0ED9  3EE5               	addlw	_shortMenuStrings&0ffh
  6023  0EDA  0084               	movwf	fsr0
  6024  0EDB  1383               	bcf	status, 7	;select IRP bank1
  6025  0EDC  0800               	movf	indf,w
  6026  0EDD  00A7               	movwf	(?_lcd_write_string)
  6027  0EDE  3080               	movlw	80h
  6028  0EDF  00A8               	movwf	(?_lcd_write_string+1)
  6029  0EE0  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6030                           	line	254
  6031                           ;HMI.c: 254: break;
  6032  0EE5  2FFF               	goto	l4592
  6033                           	line	255
  6034                           ;HMI.c: 255: case 1:
  6035                           	
  6036  0EE6                     l4581:	
  6037                           	line	256
  6038                           	
  6039  0EE6                     l11468:	
  6040                           ;HMI.c: 256: lcd_write_control(0b00000001);
  6041  0EE6  3001               	movlw	(01h)
  6042  0EE7  160A  118A  203F   	fcall	_lcd_write_control
              120A  158A         
  6043                           	line	257
  6044                           ;HMI.c: 257: lcd_set_cursor(0x00);
  6045  0EEC  3000               	movlw	(0)
  6046  0EED  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6047                           	line	258
  6048                           	
  6049  0EF2                     l11470:	
  6050                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  6051  0EF2  301B               	movlw	low((STR_14-__stringbase))
  6052  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  6053  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  6054  0EF5  00A7               	movwf	(?_lcd_write_string)
  6055  0EF6  3080               	movlw	80h
  6056  0EF7  00A8               	movwf	(?_lcd_write_string+1)
  6057  0EF8  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6058                           	line	259
  6059                           	
  6060  0EFD                     l11472:	
  6061                           ;HMI.c: 259: lcd_set_cursor(0x40);
  6062  0EFD  3040               	movlw	(040h)
  6063  0EFE  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6064                           	line	260
  6065                           ;HMI.c: 260: lcd_write_string("<<<");
  6066  0F03  3087               	movlw	low((STR_15-__stringbase))
  6067  0F04  1283               	bcf	status, 5	;RP0=0, select bank0
  6068  0F05  1303               	bcf	status, 6	;RP1=0, select bank0
  6069  0F06  00A7               	movwf	(?_lcd_write_string)
  6070  0F07  3080               	movlw	80h
  6071  0F08  00A8               	movwf	(?_lcd_write_string+1)
  6072  0F09  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6073                           	line	261
  6074                           	
  6075  0F0E                     l11474:	
  6076                           ;HMI.c: 261: lcd_set_cursor(0x44);
  6077  0F0E  3044               	movlw	(044h)
  6078  0F0F  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6079                           	line	262
  6080                           	
  6081  0F14                     l11476:	
  6082                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  6083  0F14  3076               	movlw	low((STR_16-__stringbase))
  6084  0F15  1283               	bcf	status, 5	;RP0=0, select bank0
  6085  0F16  1303               	bcf	status, 6	;RP1=0, select bank0
  6086  0F17  00A7               	movwf	(?_lcd_write_string)
  6087  0F18  3080               	movlw	80h
  6088  0F19  00A8               	movwf	(?_lcd_write_string+1)
  6089  0F1A  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6090                           	line	263
  6091                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  6092  0F1F  304D               	movlw	(04Dh)
  6093  0F20  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6094                           	line	264
  6095                           	
  6096  0F25                     l11478:	
  6097                           ;HMI.c: 264: lcd_write_string(">>>");
  6098  0F25  308B               	movlw	low((STR_17-__stringbase))
  6099  0F26  1283               	bcf	status, 5	;RP0=0, select bank0
  6100  0F27  1303               	bcf	status, 6	;RP1=0, select bank0
  6101  0F28  00A7               	movwf	(?_lcd_write_string)
  6102  0F29  3080               	movlw	80h
  6103  0F2A  00A8               	movwf	(?_lcd_write_string+1)
  6104  0F2B  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6105                           	line	265
  6106                           ;HMI.c: 265: break;
  6107  0F30  2FFF               	goto	l4592
  6108                           	line	266
  6109                           ;HMI.c: 266: case 2:
  6110                           	
  6111  0F31                     l4582:	
  6112                           	line	267
  6113                           	
  6114  0F31                     l11480:	
  6115                           ;HMI.c: 267: lcd_write_control(0b00000001);
  6116  0F31  3001               	movlw	(01h)
  6117  0F32  160A  118A  203F   	fcall	_lcd_write_control
              120A  158A         
  6118                           	line	268
  6119                           ;HMI.c: 268: lcd_set_cursor(0x00);
  6120  0F37  3000               	movlw	(0)
  6121  0F38  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6122                           	line	269
  6123                           	
  6124  0F3D                     l11482:	
  6125                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  6126  0F3D  300B               	movlw	low((STR_18-__stringbase))
  6127  0F3E  1283               	bcf	status, 5	;RP0=0, select bank0
  6128  0F3F  1303               	bcf	status, 6	;RP1=0, select bank0
  6129  0F40  00A7               	movwf	(?_lcd_write_string)
  6130  0F41  3080               	movlw	80h
  6131  0F42  00A8               	movwf	(?_lcd_write_string+1)
  6132  0F43  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6133                           	line	270
  6134                           	
  6135  0F48                     l11484:	
  6136                           ;HMI.c: 270: lcd_set_cursor(0x40);
  6137  0F48  3040               	movlw	(040h)
  6138  0F49  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6139                           	line	271
  6140                           ;HMI.c: 271: sprintf(LCDOutput,"%dmV", BattCharge);
  6141  0F4E  307E               	movlw	((STR_19-__stringbase))&0ffh
  6142  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  6143  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  6144  0F51  00C5               	movwf	(??_UpdateDisplay+0)+0
  6145  0F52  0845               	movf	(??_UpdateDisplay+0)+0,w
  6146  0F53  00B4               	movwf	(?_sprintf)
  6147  0F54  1683               	bsf	status, 5	;RP0=1, select bank1
  6148  0F55  1303               	bcf	status, 6	;RP1=0, select bank1
  6149  0F56  0831               	movf	(_BattCharge+1)^080h,w
  6150  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  6151  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  6152  0F59  01B6               	clrf	1+(?_sprintf)+01h
  6153  0F5A  07B6               	addwf	1+(?_sprintf)+01h
  6154  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  6155  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  6156  0F5D  0830               	movf	(_BattCharge)^080h,w
  6157  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  6158  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  6159  0F60  01B5               	clrf	0+(?_sprintf)+01h
  6160  0F61  07B5               	addwf	0+(?_sprintf)+01h
  6161                           
  6162  0F62  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6163  0F63  120A  158A  2346   	fcall	_sprintf
              120A  158A         
  6164                           	line	272
  6165                           ;HMI.c: 272: lcd_write_string(LCDOutput);
  6166  0F68  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  6167  0F69  1283               	bcf	status, 5	;RP0=0, select bank0
  6168  0F6A  1303               	bcf	status, 6	;RP1=0, select bank0
  6169  0F6B  00A7               	movwf	(?_lcd_write_string)
  6170  0F6C  3000               	movlw	(0x0/2)
  6171  0F6D  00A8               	movwf	(?_lcd_write_string+1)
  6172  0F6E  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6173                           	line	273
  6174                           	
  6175  0F73                     l11486:	
  6176                           ;HMI.c: 273: lcd_set_cursor(0x4D);
  6177  0F73  304D               	movlw	(04Dh)
  6178  0F74  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6179                           	line	274
  6180                           ;HMI.c: 274: switch(BattState)
  6181  0F79  2FC3               	goto	l11502
  6182                           	line	276
  6183                           ;HMI.c: 275: {
  6184                           ;HMI.c: 276: case 0:
  6185                           	
  6186  0F7A                     l4584:	
  6187                           	line	277
  6188                           	
  6189  0F7A                     l11488:	
  6190                           ;HMI.c: 277: lcd_write_string("NC");
  6191  0F7A  30A6               	movlw	low((STR_20-__stringbase))
  6192  0F7B  1283               	bcf	status, 5	;RP0=0, select bank0
  6193  0F7C  1303               	bcf	status, 6	;RP1=0, select bank0
  6194  0F7D  00A7               	movwf	(?_lcd_write_string)
  6195  0F7E  3080               	movlw	80h
  6196  0F7F  00A8               	movwf	(?_lcd_write_string+1)
  6197  0F80  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6198                           	line	278
  6199                           ;HMI.c: 278: break;
  6200  0F85  2FDE               	goto	l11504
  6201                           	line	279
  6202                           ;HMI.c: 279: case 1:
  6203                           	
  6204  0F86                     l4586:	
  6205                           	line	280
  6206                           	
  6207  0F86                     l11490:	
  6208                           ;HMI.c: 280: lcd_write_string("RC");
  6209  0F86  30A9               	movlw	low((STR_21-__stringbase))
  6210  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  6211  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  6212  0F89  00A7               	movwf	(?_lcd_write_string)
  6213  0F8A  3080               	movlw	80h
  6214  0F8B  00A8               	movwf	(?_lcd_write_string+1)
  6215  0F8C  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6216                           	line	281
  6217                           ;HMI.c: 281: break;
  6218  0F91  2FDE               	goto	l11504
  6219                           	line	282
  6220                           ;HMI.c: 282: case 2:
  6221                           	
  6222  0F92                     l4587:	
  6223                           	line	283
  6224                           	
  6225  0F92                     l11492:	
  6226                           ;HMI.c: 283: lcd_write_string("FC");
  6227  0F92  30A3               	movlw	low((STR_22-__stringbase))
  6228  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  6229  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  6230  0F95  00A7               	movwf	(?_lcd_write_string)
  6231  0F96  3080               	movlw	80h
  6232  0F97  00A8               	movwf	(?_lcd_write_string+1)
  6233  0F98  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6234                           	line	284
  6235                           ;HMI.c: 284: break;
  6236  0F9D  2FDE               	goto	l11504
  6237                           	line	285
  6238                           ;HMI.c: 285: case 3:
  6239                           	
  6240  0F9E                     l4588:	
  6241                           	line	286
  6242                           	
  6243  0F9E                     l11494:	
  6244                           ;HMI.c: 286: lcd_write_string("TC");
  6245  0F9E  30AC               	movlw	low((STR_23-__stringbase))
  6246  0F9F  1283               	bcf	status, 5	;RP0=0, select bank0
  6247  0FA0  1303               	bcf	status, 6	;RP1=0, select bank0
  6248  0FA1  00A7               	movwf	(?_lcd_write_string)
  6249  0FA2  3080               	movlw	80h
  6250  0FA3  00A8               	movwf	(?_lcd_write_string+1)
  6251  0FA4  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6252                           	line	287
  6253                           ;HMI.c: 287: break;
  6254  0FA9  2FDE               	goto	l11504
  6255                           	line	288
  6256                           ;HMI.c: 288: case 4:
  6257                           	
  6258  0FAA                     l4589:	
  6259                           	line	289
  6260                           	
  6261  0FAA                     l11496:	
  6262                           ;HMI.c: 289: lcd_write_string("Wa");
  6263  0FAA  30AF               	movlw	low((STR_24-__stringbase))
  6264  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6265  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6266  0FAD  00A7               	movwf	(?_lcd_write_string)
  6267  0FAE  3080               	movlw	80h
  6268  0FAF  00A8               	movwf	(?_lcd_write_string+1)
  6269  0FB0  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6270                           	line	290
  6271                           ;HMI.c: 290: break;
  6272  0FB5  2FDE               	goto	l11504
  6273                           	line	291
  6274                           ;HMI.c: 291: case 5:
  6275                           	
  6276  0FB6                     l4590:	
  6277                           	line	292
  6278                           	
  6279  0FB6                     l11498:	
  6280                           ;HMI.c: 292: lcd_write_string("FC");
  6281  0FB6  30A3               	movlw	low((STR_25-__stringbase))
  6282  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  6283  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  6284  0FB9  00A7               	movwf	(?_lcd_write_string)
  6285  0FBA  3080               	movlw	80h
  6286  0FBB  00A8               	movwf	(?_lcd_write_string+1)
  6287  0FBC  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6288                           	line	293
  6289                           ;HMI.c: 293: break;
  6290  0FC1  2FDE               	goto	l11504
  6291                           	line	294
  6292                           	
  6293  0FC2                     l11500:	
  6294                           ;HMI.c: 294: }
  6295  0FC2  2FDE               	goto	l11504
  6296                           	line	274
  6297                           	
  6298  0FC3                     l4583:	
  6299                           	
  6300  0FC3                     l11502:	
  6301                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6302                           ; Switch size 1, requested type "space"
  6303                           ; Number of cases is 1, Range of values is 0 to 0
  6304                           ; switch strategies available:
  6305                           ; Name         Instructions Cycles
  6306                           ; simple_byte            4     3 (average)
  6307                           ; direct_byte           11     8 (fixed)
  6308                           ; jumptable            260     6 (fixed)
  6309                           ; rangetable             5     6 (fixed)
  6310                           ; spacedrange            8     9 (fixed)
  6311                           ; locatedrange           1     3 (fixed)
  6312                           ;	Chosen strategy is simple_byte
  6313                           
  6314  0FC3  1683               	bsf	status, 5	;RP0=1, select bank1
  6315  0FC4  1303               	bcf	status, 6	;RP1=0, select bank1
  6316  0FC5  0833               	movf (_BattState+1)^080h,w
  6317                           	opt asmopt_off
  6318  0FC6  3A00               	xorlw	0^0	; case 0
  6319  0FC7  1903               	skipnz
  6320  0FC8  2FCA               	goto	l11934
  6321  0FC9  2FDE               	goto	l11504
  6322                           	opt asmopt_on
  6323                           	
  6324  0FCA                     l11934:	
  6325                           ; Switch size 1, requested type "space"
  6326                           ; Number of cases is 6, Range of values is 0 to 5
  6327                           ; switch strategies available:
  6328                           ; Name         Instructions Cycles
  6329                           ; simple_byte           19    10 (average)
  6330                           ; direct_byte           26     8 (fixed)
  6331                           ; jumptable            260     6 (fixed)
  6332                           ; rangetable            10     6 (fixed)
  6333                           ; spacedrange           18     9 (fixed)
  6334                           ; locatedrange           6     3 (fixed)
  6335                           ;	Chosen strategy is simple_byte
  6336                           
  6337  0FCA  0832               	movf (_BattState)^080h,w
  6338                           	opt asmopt_off
  6339  0FCB  3A00               	xorlw	0^0	; case 0
  6340  0FCC  1903               	skipnz
  6341  0FCD  2F7A               	goto	l11488
  6342  0FCE  3A01               	xorlw	1^0	; case 1
  6343  0FCF  1903               	skipnz
  6344  0FD0  2F86               	goto	l11490
  6345  0FD1  3A03               	xorlw	2^1	; case 2
  6346  0FD2  1903               	skipnz
  6347  0FD3  2F92               	goto	l11492
  6348  0FD4  3A01               	xorlw	3^2	; case 3
  6349  0FD5  1903               	skipnz
  6350  0FD6  2F9E               	goto	l11494
  6351  0FD7  3A07               	xorlw	4^3	; case 4
  6352  0FD8  1903               	skipnz
  6353  0FD9  2FAA               	goto	l11496
  6354  0FDA  3A01               	xorlw	5^4	; case 5
  6355  0FDB  1903               	skipnz
  6356  0FDC  2FB6               	goto	l11498
  6357  0FDD  2FDE               	goto	l11504
  6358                           	opt asmopt_on
  6359                           
  6360                           	line	294
  6361                           	
  6362  0FDE                     l4585:	
  6363                           	line	296
  6364                           	
  6365  0FDE                     l11504:	
  6366                           ;HMI.c: 296: lcd_set_cursor(0x44);
  6367  0FDE  3044               	movlw	(044h)
  6368  0FDF  160A  158A  27E8   	fcall	_lcd_set_cursor
              120A  158A         
  6369                           	line	297
  6370                           	
  6371  0FE4                     l11506:	
  6372                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  6373  0FE4  3038               	movlw	low((STR_26-__stringbase))
  6374  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  6375  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  6376  0FE7  00A7               	movwf	(?_lcd_write_string)
  6377  0FE8  3080               	movlw	80h
  6378  0FE9  00A8               	movwf	(?_lcd_write_string+1)
  6379  0FEA  160A  118A  21D3   	fcall	_lcd_write_string
              120A  158A         
  6380                           	line	298
  6381                           ;HMI.c: 298: break;
  6382  0FEF  2FFF               	goto	l4592
  6383                           	line	299
  6384                           ;HMI.c: 299: default:
  6385                           	
  6386  0FF0                     l4591:	
  6387                           	line	300
  6388                           ;HMI.c: 300: break;
  6389  0FF0  2FFF               	goto	l4592
  6390                           	line	301
  6391                           	
  6392  0FF1                     l11508:	
  6393                           ;HMI.c: 301: }
  6394  0FF1  2FFF               	goto	l4592
  6395                           	line	238
  6396                           	
  6397  0FF2                     l4576:	
  6398                           	
  6399  0FF2                     l11510:	
  6400  0FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  6401  0FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  6402  0FF4  0855               	movf	(_currentMenu)^080h,w	;volatile
  6403                           	; Switch size 1, requested type "space"
  6404                           ; Number of cases is 3, Range of values is 0 to 2
  6405                           ; switch strategies available:
  6406                           ; Name         Instructions Cycles
  6407                           ; simple_byte           10     6 (average)
  6408                           ; direct_byte           17     8 (fixed)
  6409                           ; jumptable            260     6 (fixed)
  6410                           ; rangetable             7     6 (fixed)
  6411                           ; spacedrange           12     9 (fixed)
  6412                           ; locatedrange           3     3 (fixed)
  6413                           ;	Chosen strategy is simple_byte
  6414                           
  6415                           	opt asmopt_off
  6416  0FF5  3A00               	xorlw	0^0	; case 0
  6417  0FF6  1903               	skipnz
  6418  0FF7  2E24               	goto	l11448
  6419  0FF8  3A01               	xorlw	1^0	; case 1
  6420  0FF9  1903               	skipnz
  6421  0FFA  2EE6               	goto	l11468
  6422  0FFB  3A03               	xorlw	2^1	; case 2
  6423  0FFC  1903               	skipnz
  6424  0FFD  2F31               	goto	l11480
  6425  0FFE  2FFF               	goto	l4592
  6426                           	opt asmopt_on
  6427                           
  6428                           	line	301
  6429                           	
  6430  0FFF                     l4580:	
  6431                           	line	302
  6432                           	
  6433  0FFF                     l4592:	
  6434  0FFF  0008               	return
  6435                           	opt stack 0
  6436                           GLOBAL	__end_of_UpdateDisplay
  6437  1000                     	__end_of_UpdateDisplay:
  6438 ;; =============== function _UpdateDisplay ends ============
  6439                           
  6440                           	signat	_UpdateDisplay,88
  6441                           	global	_readAvgDistance
  6442                           psect	text1070,local,class=CODE,delta=2
  6443                           global __ptext1070
  6444  1667                     __ptext1070:
  6445                           
  6446 ;; *************** function _readAvgDistance *****************
  6447 ;; Defined at:
  6448 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  i               2   22[BANK0 ] int 
  6453 ;;  tempIR          2   20[BANK0 ] unsigned int 
  6454 ;;  j               2   18[BANK0 ] int 
  6455 ;;  fullval         2   16[BANK0 ] unsigned int 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;		None               void
  6458 ;; Registers used:
  6459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6465 ;;      Params:         0       0       0       0       0
  6466 ;;      Locals:         0       8       0       0       0
  6467 ;;      Temps:          0       0       0       0       0
  6468 ;;      Totals:         0       8       0       0       0
  6469 ;;Total ram usage:        8 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    6
  6472 ;; This function calls:
  6473 ;;		_readDistance
  6474 ;;		___lwdiv
  6475 ;;		_ADCconvert
  6476 ;; This function is called by:
  6477 ;;		_main
  6478 ;;		_robotFollow
  6479 ;;		_robot_turnRight
  6480 ;;		_RightTurn
  6481 ;;		_scan360
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           psect	text1070
  6485                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6486                           	line	28
  6487                           	global	__size_of_readAvgDistance
  6488  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  6489                           	
  6490  1667                     _readAvgDistance:	
  6491                           	opt	stack 0
  6492                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6493                           	line	29
  6494                           	
  6495  1667                     l11428:	
  6496                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  6497  1667  1283               	bcf	status, 5	;RP0=0, select bank0
  6498  1668  1303               	bcf	status, 6	;RP1=0, select bank0
  6499  1669  01B0               	clrf	(readAvgDistance@fullval)
  6500  166A  01B1               	clrf	(readAvgDistance@fullval+1)
  6501  166B  01B4               	clrf	(readAvgDistance@tempIR)
  6502  166C  01B5               	clrf	(readAvgDistance@tempIR+1)
  6503                           	line	30
  6504                           ;infrared.c: 30: int j = 0;
  6505  166D  01B2               	clrf	(readAvgDistance@j)
  6506  166E  01B3               	clrf	(readAvgDistance@j+1)
  6507                           	line	32
  6508                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  6509  166F  01B6               	clrf	(readAvgDistance@i)
  6510  1670  01B7               	clrf	(readAvgDistance@i+1)
  6511                           	
  6512  1671                     l11430:	
  6513  1671  0837               	movf	(readAvgDistance@i+1),w
  6514  1672  3A80               	xorlw	80h
  6515  1673  00FF               	movwf	btemp+1
  6516  1674  3080               	movlw	(high(08h))^80h
  6517  1675  027F               	subwf	btemp+1,w
  6518  1676  1D03               	skipz
  6519  1677  2E7A               	goto	u4945
  6520  1678  3008               	movlw	low(08h)
  6521  1679  0236               	subwf	(readAvgDistance@i),w
  6522  167A                     u4945:
  6523                           
  6524  167A  1C03               	skipc
  6525  167B  2E7D               	goto	u4941
  6526  167C  2E7E               	goto	u4940
  6527  167D                     u4941:
  6528  167D  2E80               	goto	l11434
  6529  167E                     u4940:
  6530  167E  2EB6               	goto	l11442
  6531                           	
  6532  167F                     l11432:	
  6533  167F  2EB6               	goto	l11442
  6534                           	line	33
  6535                           	
  6536  1680                     l3024:	
  6537                           	line	34
  6538                           	
  6539  1680                     l11434:	
  6540                           ;infrared.c: 33: {
  6541                           ;infrared.c: 34: tempIR = readDistance();
  6542  1680  160A  118A  2069   	fcall	_readDistance
              160A  118A         
  6543  1685  1283               	bcf	status, 5	;RP0=0, select bank0
  6544  1686  1303               	bcf	status, 6	;RP1=0, select bank0
  6545  1687  0829               	movf	(1+(?_readDistance)),w
  6546  1688  01B5               	clrf	(readAvgDistance@tempIR+1)
  6547  1689  07B5               	addwf	(readAvgDistance@tempIR+1)
  6548  168A  0828               	movf	(0+(?_readDistance)),w
  6549  168B  01B4               	clrf	(readAvgDistance@tempIR)
  6550  168C  07B4               	addwf	(readAvgDistance@tempIR)
  6551                           
  6552                           	line	35
  6553                           	
  6554  168D                     l11436:	
  6555                           ;infrared.c: 35: if (tempIR <= 1000)
  6556  168D  3003               	movlw	high(03E9h)
  6557  168E  0235               	subwf	(readAvgDistance@tempIR+1),w
  6558  168F  30E9               	movlw	low(03E9h)
  6559  1690  1903               	skipnz
  6560  1691  0234               	subwf	(readAvgDistance@tempIR),w
  6561  1692  1803               	skipnc
  6562  1693  2E95               	goto	u4951
  6563  1694  2E96               	goto	u4950
  6564  1695                     u4951:
  6565  1695  2EA2               	goto	l3026
  6566  1696                     u4950:
  6567                           	line	37
  6568                           	
  6569  1696                     l11438:	
  6570                           ;infrared.c: 36: {
  6571                           ;infrared.c: 37: fullval += tempIR;
  6572  1696  0834               	movf	(readAvgDistance@tempIR),w
  6573  1697  07B0               	addwf	(readAvgDistance@fullval),f
  6574  1698  1803               	skipnc
  6575  1699  0AB1               	incf	(readAvgDistance@fullval+1),f
  6576  169A  0835               	movf	(readAvgDistance@tempIR+1),w
  6577  169B  07B1               	addwf	(readAvgDistance@fullval+1),f
  6578                           	line	38
  6579                           ;infrared.c: 38: j++;
  6580  169C  3001               	movlw	low(01h)
  6581  169D  07B2               	addwf	(readAvgDistance@j),f
  6582  169E  1803               	skipnc
  6583  169F  0AB3               	incf	(readAvgDistance@j+1),f
  6584  16A0  3000               	movlw	high(01h)
  6585  16A1  07B3               	addwf	(readAvgDistance@j+1),f
  6586                           	line	39
  6587                           	
  6588  16A2                     l3026:	
  6589                           	line	32
  6590  16A2  3001               	movlw	low(01h)
  6591  16A3  07B6               	addwf	(readAvgDistance@i),f
  6592  16A4  1803               	skipnc
  6593  16A5  0AB7               	incf	(readAvgDistance@i+1),f
  6594  16A6  3000               	movlw	high(01h)
  6595  16A7  07B7               	addwf	(readAvgDistance@i+1),f
  6596                           	
  6597  16A8                     l11440:	
  6598  16A8  0837               	movf	(readAvgDistance@i+1),w
  6599  16A9  3A80               	xorlw	80h
  6600  16AA  00FF               	movwf	btemp+1
  6601  16AB  3080               	movlw	(high(08h))^80h
  6602  16AC  027F               	subwf	btemp+1,w
  6603  16AD  1D03               	skipz
  6604  16AE  2EB1               	goto	u4965
  6605  16AF  3008               	movlw	low(08h)
  6606  16B0  0236               	subwf	(readAvgDistance@i),w
  6607  16B1                     u4965:
  6608                           
  6609  16B1  1C03               	skipc
  6610  16B2  2EB4               	goto	u4961
  6611  16B3  2EB5               	goto	u4960
  6612  16B4                     u4961:
  6613  16B4  2E80               	goto	l11434
  6614  16B5                     u4960:
  6615  16B5  2EB6               	goto	l11442
  6616                           	
  6617  16B6                     l3025:	
  6618                           	line	41
  6619                           	
  6620  16B6                     l11442:	
  6621                           ;infrared.c: 39: }
  6622                           ;infrared.c: 40: }
  6623                           ;infrared.c: 41: adcVal = fullval / j;
  6624  16B6  1283               	bcf	status, 5	;RP0=0, select bank0
  6625  16B7  1303               	bcf	status, 6	;RP1=0, select bank0
  6626  16B8  0833               	movf	(readAvgDistance@j+1),w
  6627  16B9  01A7               	clrf	(?___lwdiv+1)
  6628  16BA  07A7               	addwf	(?___lwdiv+1)
  6629  16BB  0832               	movf	(readAvgDistance@j),w
  6630  16BC  01A6               	clrf	(?___lwdiv)
  6631  16BD  07A6               	addwf	(?___lwdiv)
  6632                           
  6633  16BE  0831               	movf	(readAvgDistance@fullval+1),w
  6634  16BF  01A9               	clrf	1+(?___lwdiv)+02h
  6635  16C0  07A9               	addwf	1+(?___lwdiv)+02h
  6636  16C1  0830               	movf	(readAvgDistance@fullval),w
  6637  16C2  01A8               	clrf	0+(?___lwdiv)+02h
  6638  16C3  07A8               	addwf	0+(?___lwdiv)+02h
  6639                           
  6640  16C4  120A  158A  20C6   	fcall	___lwdiv
              160A  118A         
  6641  16C9  1283               	bcf	status, 5	;RP0=0, select bank0
  6642  16CA  1303               	bcf	status, 6	;RP1=0, select bank0
  6643  16CB  0827               	movf	(1+(?___lwdiv)),w
  6644  16CC  01EB               	clrf	(_adcVal+1)	;volatile
  6645  16CD  07EB               	addwf	(_adcVal+1)	;volatile
  6646  16CE  0826               	movf	(0+(?___lwdiv)),w
  6647  16CF  01EA               	clrf	(_adcVal)	;volatile
  6648  16D0  07EA               	addwf	(_adcVal)	;volatile
  6649                           
  6650                           	line	42
  6651                           ;infrared.c: 42: ADCconvert();
  6652  16D1  120A  118A  249F   	fcall	_ADCconvert
              160A  118A         
  6653                           	line	43
  6654                           	
  6655  16D6                     l11444:	
  6656                           ;infrared.c: 43: Disp1 = adcVal;
  6657  16D6  1283               	bcf	status, 5	;RP0=0, select bank0
  6658  16D7  1303               	bcf	status, 6	;RP1=0, select bank0
  6659  16D8  086B               	movf	(_adcVal+1),w	;volatile
  6660  16D9  1683               	bsf	status, 5	;RP0=1, select bank1
  6661  16DA  1303               	bcf	status, 6	;RP1=0, select bank1
  6662  16DB  01B5               	clrf	(_Disp1+1)^080h	;volatile
  6663  16DC  07B5               	addwf	(_Disp1+1)^080h	;volatile
  6664  16DD  1283               	bcf	status, 5	;RP0=0, select bank0
  6665  16DE  1303               	bcf	status, 6	;RP1=0, select bank0
  6666  16DF  086A               	movf	(_adcVal),w	;volatile
  6667  16E0  1683               	bsf	status, 5	;RP0=1, select bank1
  6668  16E1  1303               	bcf	status, 6	;RP1=0, select bank1
  6669  16E2  01B4               	clrf	(_Disp1)^080h	;volatile
  6670  16E3  07B4               	addwf	(_Disp1)^080h	;volatile
  6671                           
  6672                           	line	44
  6673                           	
  6674  16E4                     l3027:	
  6675  16E4  0008               	return
  6676                           	opt stack 0
  6677                           GLOBAL	__end_of_readAvgDistance
  6678  16E5                     	__end_of_readAvgDistance:
  6679 ;; =============== function _readAvgDistance ends ============
  6680                           
  6681                           	signat	_readAvgDistance,88
  6682                           	global	_init
  6683                           psect	text1071,local,class=CODE,delta=2
  6684                           global __ptext1071
  6685  1259                     __ptext1071:
  6686                           
  6687 ;; *************** function _init *****************
  6688 ;; Defined at:
  6689 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;		None               void
  6696 ;; Registers used:
  6697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6703 ;;      Params:         0       0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0
  6705 ;;      Temps:          0       1       0       0       0
  6706 ;;      Totals:         0       1       0       0       0
  6707 ;;Total ram usage:        1 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    5
  6710 ;; This function calls:
  6711 ;;		_ser_init
  6712 ;;		_init_adc
  6713 ;;		_lcd_init
  6714 ;;		_robo_init
  6715 ;; This function is called by:
  6716 ;;		_main
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           psect	text1071
  6720                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  6721                           	line	137
  6722                           	global	__size_of_init
  6723  002F                     	__size_of_init	equ	__end_of_init-_init
  6724                           	
  6725  1259                     _init:	
  6726                           	opt	stack 2
  6727                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6728                           	line	138
  6729                           	
  6730  1259                     l11402:	
  6731                           ;Main.c: 138: buttonPressed = 0;
  6732  1259  01FD               	clrf	(_buttonPressed)	;volatile
  6733                           	line	140
  6734                           	
  6735  125A                     l11404:	
  6736                           ;Main.c: 140: TRISB = 0b11111100;
  6737  125A  30FC               	movlw	(0FCh)
  6738  125B  1683               	bsf	status, 5	;RP0=1, select bank1
  6739  125C  1303               	bcf	status, 6	;RP1=0, select bank1
  6740  125D  0086               	movwf	(134)^080h	;volatile
  6741                           	line	141
  6742                           	
  6743  125E                     l11406:	
  6744                           ;Main.c: 141: TRISC &= 0b10010000;
  6745  125E  3090               	movlw	(090h)
  6746  125F  1283               	bcf	status, 5	;RP0=0, select bank0
  6747  1260  1303               	bcf	status, 6	;RP1=0, select bank0
  6748  1261  00A3               	movwf	(??_init+0)+0
  6749  1262  0823               	movf	(??_init+0)+0,w
  6750  1263  1683               	bsf	status, 5	;RP0=1, select bank1
  6751  1264  1303               	bcf	status, 6	;RP1=0, select bank1
  6752  1265  0587               	andwf	(135)^080h,f	;volatile
  6753                           	line	144
  6754                           	
  6755  1266                     l11408:	
  6756                           ;Main.c: 144: SSPSTAT = 0b01000000;
  6757  1266  3040               	movlw	(040h)
  6758  1267  0094               	movwf	(148)^080h	;volatile
  6759                           	line	145
  6760                           	
  6761  1268                     l11410:	
  6762                           ;Main.c: 145: SSPCON = 0b10100001;
  6763  1268  30A1               	movlw	(0A1h)
  6764  1269  1283               	bcf	status, 5	;RP0=0, select bank0
  6765  126A  1303               	bcf	status, 6	;RP1=0, select bank0
  6766  126B  0094               	movwf	(20)	;volatile
  6767                           	line	148
  6768                           	
  6769  126C                     l11412:	
  6770                           ;Main.c: 148: OPTION_REG = 0b00000100;
  6771  126C  3004               	movlw	(04h)
  6772  126D  1683               	bsf	status, 5	;RP0=1, select bank1
  6773  126E  1303               	bcf	status, 6	;RP1=0, select bank1
  6774  126F  0081               	movwf	(129)^080h	;volatile
  6775                           	line	151
  6776                           	
  6777  1270                     l11414:	
  6778                           ;Main.c: 151: ser_init();
  6779  1270  160A  118A  20FB   	fcall	_ser_init
              160A  118A         
  6780                           	line	152
  6781                           	
  6782  1275                     l11416:	
  6783                           ;Main.c: 152: init_adc();
  6784  1275  160A  118A  2053   	fcall	_init_adc
              160A  118A         
  6785                           	line	153
  6786                           	
  6787  127A                     l11418:	
  6788                           ;Main.c: 153: lcd_init();
  6789  127A  160A  118A  2150   	fcall	_lcd_init
              160A  118A         
  6790                           	line	154
  6791                           	
  6792  127F                     l11420:	
  6793                           ;Main.c: 154: robo_init();
  6794  127F  160A  118A  2098   	fcall	_robo_init
              160A  118A         
  6795                           	line	158
  6796                           	
  6797  1284                     l11422:	
  6798                           ;Main.c: 158: TMR0IE = 1;
  6799  1284  168B               	bsf	(93/8),(93)&7
  6800                           	line	160
  6801                           	
  6802  1285                     l11424:	
  6803                           ;Main.c: 160: PEIE=1;
  6804  1285  170B               	bsf	(94/8),(94)&7
  6805                           	line	162
  6806                           	
  6807  1286                     l11426:	
  6808                           ;Main.c: 162: (GIE = 1);
  6809  1286  178B               	bsf	(95/8),(95)&7
  6810                           	line	163
  6811                           	
  6812  1287                     l2245:	
  6813  1287  0008               	return
  6814                           	opt stack 0
  6815                           GLOBAL	__end_of_init
  6816  1288                     	__end_of_init:
  6817 ;; =============== function _init ends ============
  6818                           
  6819                           	signat	_init,88
  6820                           	global	_readDistance
  6821                           psect	text1072,local,class=CODE,delta=2
  6822                           global __ptext1072
  6823  1069                     __ptext1072:
  6824                           
  6825 ;; *************** function _readDistance *****************
  6826 ;; Defined at:
  6827 ;;		line 78 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  readVal         2   12[BANK0 ] unsigned int 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  2    8[BANK0 ] unsigned int 
  6834 ;; Registers used:
  6835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6841 ;;      Params:         0       2       0       0       0
  6842 ;;      Locals:         0       2       0       0       0
  6843 ;;      Temps:          0       2       0       0       0
  6844 ;;      Totals:         0       6       0       0       0
  6845 ;;Total ram usage:        6 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    5
  6848 ;; This function calls:
  6849 ;;		_adc_read_channel
  6850 ;; This function is called by:
  6851 ;;		_readAvgDistance
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           psect	text1072
  6855                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6856                           	line	78
  6857                           	global	__size_of_readDistance
  6858  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  6859                           	
  6860  1069                     _readDistance:	
  6861                           	opt	stack 0
  6862                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6863                           	line	81
  6864                           	
  6865  1069                     l11396:	
  6866                           ;infrared.c: 79: unsigned int readVal;
  6867                           ;infrared.c: 81: readVal = adc_read_channel(0);
  6868  1069  3000               	movlw	(0)
  6869  106A  120A  118A  27C4   	fcall	_adc_read_channel
              160A  118A         
  6870  106F  1283               	bcf	status, 5	;RP0=0, select bank0
  6871  1070  1303               	bcf	status, 6	;RP1=0, select bank0
  6872  1071  00AA               	movwf	(??_readDistance+0)+0
  6873  1072  01AB               	clrf	(??_readDistance+0)+0+1
  6874  1073  082A               	movf	0+(??_readDistance+0)+0,w
  6875  1074  00AC               	movwf	(readDistance@readVal)
  6876  1075  082B               	movf	1+(??_readDistance+0)+0,w
  6877  1076  00AD               	movwf	(readDistance@readVal+1)
  6878                           	line	83
  6879                           	
  6880  1077                     l11398:	
  6881                           ;infrared.c: 83: return readVal;
  6882  1077  082D               	movf	(readDistance@readVal+1),w
  6883  1078  01A9               	clrf	(?_readDistance+1)
  6884  1079  07A9               	addwf	(?_readDistance+1)
  6885  107A  082C               	movf	(readDistance@readVal),w
  6886  107B  01A8               	clrf	(?_readDistance)
  6887  107C  07A8               	addwf	(?_readDistance)
  6888                           
  6889  107D  287E               	goto	l3030
  6890                           	
  6891  107E                     l11400:	
  6892                           	line	84
  6893                           	
  6894  107E                     l3030:	
  6895  107E  0008               	return
  6896                           	opt stack 0
  6897                           GLOBAL	__end_of_readDistance
  6898  107F                     	__end_of_readDistance:
  6899 ;; =============== function _readDistance ends ============
  6900                           
  6901                           	signat	_readDistance,90
  6902                           	global	_RobotBattRead
  6903                           psect	text1073,local,class=CODE,delta=2
  6904                           global __ptext1073
  6905  16E5                     __ptext1073:
  6906                           
  6907 ;; *************** function _RobotBattRead *****************
  6908 ;; Defined at:
  6909 ;;		line 432 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  temp1           2    4[BANK0 ] int 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;		None               void
  6916 ;; Registers used:
  6917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6923 ;;      Params:         0       0       0       0       0
  6924 ;;      Locals:         0       2       0       0       0
  6925 ;;      Temps:          0       2       0       0       0
  6926 ;;      Totals:         0       4       0       0       0
  6927 ;;Total ram usage:        4 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    5
  6930 ;; This function calls:
  6931 ;;		_ser_putch
  6932 ;;		_ser_getch
  6933 ;; This function is called by:
  6934 ;;		_ChargeMode
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           psect	text1073
  6938                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6939                           	line	432
  6940                           	global	__size_of_RobotBattRead
  6941  0083                     	__size_of_RobotBattRead	equ	__end_of_RobotBattRead-_RobotBattRead
  6942                           	
  6943  16E5                     _RobotBattRead:	
  6944                           	opt	stack 1
  6945                           ; Regs used in _RobotBattRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6946                           	line	433
  6947                           	
  6948  16E5                     l11368:	
  6949                           ;robot.c: 433: int temp1 = 0;
  6950  16E5  1283               	bcf	status, 5	;RP0=0, select bank0
  6951  16E6  1303               	bcf	status, 6	;RP1=0, select bank0
  6952  16E7  01A4               	clrf	(RobotBattRead@temp1)
  6953  16E8  01A5               	clrf	(RobotBattRead@temp1+1)
  6954                           	line	434
  6955                           	
  6956  16E9                     l11370:	
  6957                           ;robot.c: 434: ser_putch(142);
  6958  16E9  308E               	movlw	(08Eh)
  6959  16EA  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  6960                           	line	435
  6961                           	
  6962  16EF                     l11372:	
  6963                           ;robot.c: 435: ser_putch(25);
  6964  16EF  3019               	movlw	(019h)
  6965  16F0  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  6966                           	line	436
  6967                           	
  6968  16F5                     l11374:	
  6969                           ;robot.c: 436: _delay((unsigned long)((5)*(20000000/4000.0)));
  6970                           	opt asmopt_off
  6971  16F5  3021               movlw	33
  6972  16F6  1283               	bcf	status, 5	;RP0=0, select bank0
  6973  16F7  1303               	bcf	status, 6	;RP1=0, select bank0
  6974  16F8  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  6975  16F9  3076               	movlw	118
  6976  16FA  00A2               movwf	((??_RobotBattRead+0)+0),f
  6977  16FB                     u5417:
  6978  16FB  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  6979  16FC  2EFB               	goto	u5417
  6980  16FD  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  6981  16FE  2EFB               	goto	u5417
  6982  16FF  0064               	clrwdt
  6983                           opt asmopt_on
  6984                           
  6985                           	line	437
  6986                           	
  6987  1700                     l11376:	
  6988                           ;robot.c: 437: DistHighByte = ser_getch();
  6989  1700  160A  118A  21A7   	fcall	_ser_getch
              160A  118A         
  6990  1705  1283               	bcf	status, 5	;RP0=0, select bank0
  6991  1706  1303               	bcf	status, 6	;RP1=0, select bank0
  6992  1707  00A2               	movwf	(??_RobotBattRead+0)+0
  6993  1708  0822               	movf	(??_RobotBattRead+0)+0,w
  6994  1709  00ED               	movwf	(_DistHighByte)	;volatile
  6995                           	line	438
  6996                           	
  6997  170A                     l11378:	
  6998                           ;robot.c: 438: DistLowByte = ser_getch();
  6999  170A  160A  118A  21A7   	fcall	_ser_getch
              160A  118A         
  7000  170F  1283               	bcf	status, 5	;RP0=0, select bank0
  7001  1710  1303               	bcf	status, 6	;RP1=0, select bank0
  7002  1711  00A2               	movwf	(??_RobotBattRead+0)+0
  7003  1712  0822               	movf	(??_RobotBattRead+0)+0,w
  7004  1713  00EE               	movwf	(_DistLowByte)	;volatile
  7005                           	line	439
  7006                           	
  7007  1714                     l11380:	
  7008                           ;robot.c: 439: ser_putch(142);
  7009  1714  308E               	movlw	(08Eh)
  7010  1715  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7011                           	line	440
  7012                           	
  7013  171A                     l11382:	
  7014                           ;robot.c: 440: ser_putch(21);
  7015  171A  3015               	movlw	(015h)
  7016  171B  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7017                           	line	441
  7018                           	
  7019  1720                     l11384:	
  7020                           ;robot.c: 441: _delay((unsigned long)((5)*(20000000/4000.0)));
  7021                           	opt asmopt_off
  7022  1720  3021               movlw	33
  7023  1721  1283               	bcf	status, 5	;RP0=0, select bank0
  7024  1722  1303               	bcf	status, 6	;RP1=0, select bank0
  7025  1723  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  7026  1724  3076               	movlw	118
  7027  1725  00A2               movwf	((??_RobotBattRead+0)+0),f
  7028  1726                     u5427:
  7029  1726  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  7030  1727  2F26               	goto	u5427
  7031  1728  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  7032  1729  2F26               	goto	u5427
  7033  172A  0064               	clrwdt
  7034                           opt asmopt_on
  7035                           
  7036                           	line	442
  7037                           	
  7038  172B                     l11386:	
  7039                           ;robot.c: 442: BattState = ser_getch();
  7040  172B  160A  118A  21A7   	fcall	_ser_getch
              160A  118A         
  7041  1730  1283               	bcf	status, 5	;RP0=0, select bank0
  7042  1731  1303               	bcf	status, 6	;RP1=0, select bank0
  7043  1732  00A2               	movwf	(??_RobotBattRead+0)+0
  7044  1733  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7045  1734  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7046  1735  1683               	bsf	status, 5	;RP0=1, select bank1
  7047  1736  1303               	bcf	status, 6	;RP1=0, select bank1
  7048  1737  00B2               	movwf	(_BattState)^080h
  7049  1738  1283               	bcf	status, 5	;RP0=0, select bank0
  7050  1739  1303               	bcf	status, 6	;RP1=0, select bank0
  7051  173A  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7052  173B  1683               	bsf	status, 5	;RP0=1, select bank1
  7053  173C  1303               	bcf	status, 6	;RP1=0, select bank1
  7054  173D  00B3               	movwf	(_BattState+1)^080h
  7055                           	line	445
  7056                           	
  7057  173E                     l11388:	
  7058                           ;robot.c: 445: temp1 = DistHighByte;
  7059  173E  1283               	bcf	status, 5	;RP0=0, select bank0
  7060  173F  1303               	bcf	status, 6	;RP1=0, select bank0
  7061  1740  086D               	movf	(_DistHighByte),w	;volatile
  7062  1741  00A2               	movwf	(??_RobotBattRead+0)+0
  7063  1742  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7064  1743  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7065  1744  00A4               	movwf	(RobotBattRead@temp1)
  7066  1745  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7067  1746  00A5               	movwf	(RobotBattRead@temp1+1)
  7068                           	line	446
  7069                           	
  7070  1747                     l11390:	
  7071                           ;robot.c: 446: temp1 = temp1 << 8;
  7072  1747  0825               	movf	(RobotBattRead@temp1+1),w
  7073  1748  00A3               	movwf	(??_RobotBattRead+0)+0+1
  7074  1749  0824               	movf	(RobotBattRead@temp1),w
  7075  174A  00A2               	movwf	(??_RobotBattRead+0)+0
  7076  174B  0822               	movf	(??_RobotBattRead+0)+0,w
  7077  174C  00A3               	movwf	(??_RobotBattRead+0)+1
  7078  174D  01A2               	clrf	(??_RobotBattRead+0)+0
  7079  174E  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7080  174F  00A4               	movwf	(RobotBattRead@temp1)
  7081  1750  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7082  1751  00A5               	movwf	(RobotBattRead@temp1+1)
  7083                           	line	447
  7084                           	
  7085  1752                     l11392:	
  7086                           ;robot.c: 447: temp1 += DistLowByte;
  7087  1752  086E               	movf	(_DistLowByte),w	;volatile
  7088  1753  00A2               	movwf	(??_RobotBattRead+0)+0
  7089  1754  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7090  1755  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7091  1756  07A4               	addwf	(RobotBattRead@temp1),f
  7092  1757  1803               	skipnc
  7093  1758  0AA5               	incf	(RobotBattRead@temp1+1),f
  7094  1759  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7095  175A  07A5               	addwf	(RobotBattRead@temp1+1),f
  7096                           	line	448
  7097                           	
  7098  175B                     l11394:	
  7099                           ;robot.c: 448: BattCharge = temp1;
  7100  175B  0825               	movf	(RobotBattRead@temp1+1),w
  7101  175C  1683               	bsf	status, 5	;RP0=1, select bank1
  7102  175D  1303               	bcf	status, 6	;RP1=0, select bank1
  7103  175E  01B1               	clrf	(_BattCharge+1)^080h
  7104  175F  07B1               	addwf	(_BattCharge+1)^080h
  7105  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  7106  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  7107  1762  0824               	movf	(RobotBattRead@temp1),w
  7108  1763  1683               	bsf	status, 5	;RP0=1, select bank1
  7109  1764  1303               	bcf	status, 6	;RP1=0, select bank1
  7110  1765  01B0               	clrf	(_BattCharge)^080h
  7111  1766  07B0               	addwf	(_BattCharge)^080h
  7112                           
  7113                           	line	449
  7114                           	
  7115  1767                     l6167:	
  7116  1767  0008               	return
  7117                           	opt stack 0
  7118                           GLOBAL	__end_of_RobotBattRead
  7119  1768                     	__end_of_RobotBattRead:
  7120 ;; =============== function _RobotBattRead ends ============
  7121                           
  7122                           	signat	_RobotBattRead,88
  7123                           	global	_robot_read
  7124                           psect	text1074,local,class=CODE,delta=2
  7125                           global __ptext1074
  7126  06C2                     __ptext1074:
  7127                           
  7128 ;; *************** function _robot_read *****************
  7129 ;; Defined at:
  7130 ;;		line 52 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  readType        1    wreg     unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  readType        1    3[BANK0 ] unsigned char 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;		None               void
  7137 ;; Registers used:
  7138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7144 ;;      Params:         0       0       0       0       0
  7145 ;;      Locals:         0       1       0       0       0
  7146 ;;      Temps:          0       1       0       0       0
  7147 ;;      Totals:         0       2       0       0       0
  7148 ;;Total ram usage:        2 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    5
  7151 ;; This function calls:
  7152 ;;		_ser_putch
  7153 ;;		_ser_getch
  7154 ;; This function is called by:
  7155 ;;		_main
  7156 ;;		_robotFollow
  7157 ;;		_robot_turnRight
  7158 ;;		_robotMoveSpeed
  7159 ;;		_robotTurnSpeed
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           psect	text1074
  7163                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7164                           	line	52
  7165                           	global	__size_of_robot_read
  7166  0102                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  7167                           	
  7168  06C2                     _robot_read:	
  7169                           	opt	stack 1
  7170                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7171                           ;robot_read@readType stored from wreg
  7172  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
  7173  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
  7174  06C4  00A3               	movwf	(robot_read@readType)
  7175                           	line	53
  7176                           	
  7177  06C5                     l11352:	
  7178                           ;robot.c: 53: ser_putch(142);
  7179  06C5  308E               	movlw	(08Eh)
  7180  06C6  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7181                           	line	54
  7182                           ;robot.c: 54: ser_putch(10);
  7183  06CB  300A               	movlw	(0Ah)
  7184  06CC  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7185                           	line	56
  7186                           ;robot.c: 56: CliffSensors = ser_getch();
  7187  06D1  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7188  06D6  1283               	bcf	status, 5	;RP0=0, select bank0
  7189  06D7  1303               	bcf	status, 6	;RP1=0, select bank0
  7190  06D8  00A2               	movwf	(??_robot_read+0)+0
  7191  06D9  0822               	movf	(??_robot_read+0)+0,w
  7192  06DA  1683               	bsf	status, 5	;RP0=1, select bank1
  7193  06DB  1303               	bcf	status, 6	;RP1=0, select bank1
  7194  06DC  00CF               	movwf	(_CliffSensors)^080h	;volatile
  7195                           	line	58
  7196                           ;robot.c: 58: ser_putch(142);
  7197  06DD  308E               	movlw	(08Eh)
  7198  06DE  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7199                           	line	59
  7200                           ;robot.c: 59: ser_putch(11);
  7201  06E3  300B               	movlw	(0Bh)
  7202  06E4  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7203                           	line	61
  7204                           ;robot.c: 61: CliffSensors += ser_getch();
  7205  06E9  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7206  06EE  1283               	bcf	status, 5	;RP0=0, select bank0
  7207  06EF  1303               	bcf	status, 6	;RP1=0, select bank0
  7208  06F0  00A2               	movwf	(??_robot_read+0)+0
  7209  06F1  0822               	movf	(??_robot_read+0)+0,w
  7210  06F2  1683               	bsf	status, 5	;RP0=1, select bank1
  7211  06F3  1303               	bcf	status, 6	;RP1=0, select bank1
  7212  06F4  07CF               	addwf	(_CliffSensors)^080h,f	;volatile
  7213                           	line	65
  7214                           ;robot.c: 65: ser_putch(142);
  7215  06F5  308E               	movlw	(08Eh)
  7216  06F6  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7217                           	line	66
  7218                           ;robot.c: 66: ser_putch(7);
  7219  06FB  3007               	movlw	(07h)
  7220  06FC  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7221                           	line	68
  7222                           ;robot.c: 68: BumpSensors = ser_getch();
  7223  0701  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7224  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  7225  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  7226  0708  00A2               	movwf	(??_robot_read+0)+0
  7227  0709  0822               	movf	(??_robot_read+0)+0,w
  7228  070A  00EC               	movwf	(_BumpSensors)	;volatile
  7229                           	line	70
  7230                           ;robot.c: 70: ser_putch(142);
  7231  070B  308E               	movlw	(08Eh)
  7232  070C  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7233                           	line	71
  7234                           ;robot.c: 71: ser_putch(13);
  7235  0711  300D               	movlw	(0Dh)
  7236  0712  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7237                           	line	73
  7238                           ;robot.c: 73: VwallSensor = ser_getch();
  7239  0717  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7240  071C  1283               	bcf	status, 5	;RP0=0, select bank0
  7241  071D  1303               	bcf	status, 6	;RP1=0, select bank0
  7242  071E  00A2               	movwf	(??_robot_read+0)+0
  7243  071F  0822               	movf	(??_robot_read+0)+0,w
  7244  0720  00EF               	movwf	(_VwallSensor)	;volatile
  7245                           	line	77
  7246                           	
  7247  0721                     l11354:	
  7248                           ;robot.c: 77: if (readType == 0)
  7249  0721  08A3               	movf	(robot_read@readType),f
  7250  0722  1D03               	skipz
  7251  0723  2F25               	goto	u4911
  7252  0724  2F26               	goto	u4910
  7253  0725                     u4911:
  7254  0725  2F47               	goto	l11358
  7255  0726                     u4910:
  7256                           	line	79
  7257                           	
  7258  0726                     l11356:	
  7259                           ;robot.c: 78: {
  7260                           ;robot.c: 79: ser_putch(142);
  7261  0726  308E               	movlw	(08Eh)
  7262  0727  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7263                           	line	80
  7264                           ;robot.c: 80: ser_putch(19);
  7265  072C  3013               	movlw	(013h)
  7266  072D  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7267                           	line	82
  7268                           ;robot.c: 82: DistHighByte = ser_getch();
  7269  0732  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7270  0737  1283               	bcf	status, 5	;RP0=0, select bank0
  7271  0738  1303               	bcf	status, 6	;RP1=0, select bank0
  7272  0739  00A2               	movwf	(??_robot_read+0)+0
  7273  073A  0822               	movf	(??_robot_read+0)+0,w
  7274  073B  00ED               	movwf	(_DistHighByte)	;volatile
  7275                           	line	83
  7276                           ;robot.c: 83: DistLowByte = ser_getch();
  7277  073C  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7278  0741  1283               	bcf	status, 5	;RP0=0, select bank0
  7279  0742  1303               	bcf	status, 6	;RP1=0, select bank0
  7280  0743  00A2               	movwf	(??_robot_read+0)+0
  7281  0744  0822               	movf	(??_robot_read+0)+0,w
  7282  0745  00EE               	movwf	(_DistLowByte)	;volatile
  7283                           	line	84
  7284                           ;robot.c: 84: }
  7285  0746  2FC3               	goto	l6092
  7286                           	line	85
  7287                           	
  7288  0747                     l6085:	
  7289                           	
  7290  0747                     l11358:	
  7291                           ;robot.c: 85: else if (readType == 1)
  7292  0747  0823               	movf	(robot_read@readType),w
  7293  0748  3A01               	xorlw	01h
  7294  0749  1D03               	skipz
  7295  074A  2F4C               	goto	u4921
  7296  074B  2F4D               	goto	u4920
  7297  074C                     u4921:
  7298  074C  2F72               	goto	l11362
  7299  074D                     u4920:
  7300                           	line	87
  7301                           	
  7302  074D                     l11360:	
  7303                           ;robot.c: 86: {
  7304                           ;robot.c: 87: ser_putch(142);
  7305  074D  308E               	movlw	(08Eh)
  7306  074E  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7307                           	line	88
  7308                           ;robot.c: 88: ser_putch(20);
  7309  0753  3014               	movlw	(014h)
  7310  0754  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7311                           	line	90
  7312                           ;robot.c: 90: AngleHighByte = ser_getch();
  7313  0759  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7314  075E  1283               	bcf	status, 5	;RP0=0, select bank0
  7315  075F  1303               	bcf	status, 6	;RP1=0, select bank0
  7316  0760  00A2               	movwf	(??_robot_read+0)+0
  7317  0761  0822               	movf	(??_robot_read+0)+0,w
  7318  0762  1683               	bsf	status, 5	;RP0=1, select bank1
  7319  0763  1303               	bcf	status, 6	;RP1=0, select bank1
  7320  0764  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7321                           	line	91
  7322                           ;robot.c: 91: AngleLowByte = ser_getch();
  7323  0765  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7324  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  7325  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  7326  076C  00A2               	movwf	(??_robot_read+0)+0
  7327  076D  0822               	movf	(??_robot_read+0)+0,w
  7328  076E  1683               	bsf	status, 5	;RP0=1, select bank1
  7329  076F  1303               	bcf	status, 6	;RP1=0, select bank1
  7330  0770  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7331                           	line	92
  7332                           ;robot.c: 92: }
  7333  0771  2FC3               	goto	l6092
  7334                           	line	93
  7335                           	
  7336  0772                     l6087:	
  7337                           	
  7338  0772                     l11362:	
  7339                           ;robot.c: 93: else if (readType == 2)
  7340  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  7341  0773  0823               	movf	(robot_read@readType),w
  7342  0774  3A02               	xorlw	02h
  7343  0775  1D03               	skipz
  7344  0776  2F78               	goto	u4931
  7345  0777  2F79               	goto	u4930
  7346  0778                     u4931:
  7347  0778  2FC3               	goto	l6092
  7348  0779                     u4930:
  7349                           	line	96
  7350                           	
  7351  0779                     l11364:	
  7352                           ;robot.c: 94: {
  7353                           ;robot.c: 96: ser_putch(142);
  7354  0779  308E               	movlw	(08Eh)
  7355  077A  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7356                           	line	97
  7357                           ;robot.c: 97: ser_putch(19);
  7358  077F  3013               	movlw	(013h)
  7359  0780  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7360                           	line	99
  7361                           ;robot.c: 99: DistHighByte = ser_getch();
  7362  0785  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7363  078A  1283               	bcf	status, 5	;RP0=0, select bank0
  7364  078B  1303               	bcf	status, 6	;RP1=0, select bank0
  7365  078C  00A2               	movwf	(??_robot_read+0)+0
  7366  078D  0822               	movf	(??_robot_read+0)+0,w
  7367  078E  00ED               	movwf	(_DistHighByte)	;volatile
  7368                           	line	100
  7369                           ;robot.c: 100: DistLowByte = ser_getch();
  7370  078F  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7371  0794  1283               	bcf	status, 5	;RP0=0, select bank0
  7372  0795  1303               	bcf	status, 6	;RP1=0, select bank0
  7373  0796  00A2               	movwf	(??_robot_read+0)+0
  7374  0797  0822               	movf	(??_robot_read+0)+0,w
  7375  0798  00EE               	movwf	(_DistLowByte)	;volatile
  7376                           	line	101
  7377                           ;robot.c: 101: ser_putch(142);
  7378  0799  308E               	movlw	(08Eh)
  7379  079A  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7380                           	line	102
  7381                           ;robot.c: 102: ser_putch(20);
  7382  079F  3014               	movlw	(014h)
  7383  07A0  160A  118A  21FF   	fcall	_ser_putch
              120A  118A         
  7384                           	line	104
  7385                           ;robot.c: 104: AngleHighByte = ser_getch();
  7386  07A5  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7387  07AA  1283               	bcf	status, 5	;RP0=0, select bank0
  7388  07AB  1303               	bcf	status, 6	;RP1=0, select bank0
  7389  07AC  00A2               	movwf	(??_robot_read+0)+0
  7390  07AD  0822               	movf	(??_robot_read+0)+0,w
  7391  07AE  1683               	bsf	status, 5	;RP0=1, select bank1
  7392  07AF  1303               	bcf	status, 6	;RP1=0, select bank1
  7393  07B0  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7394                           	line	105
  7395                           ;robot.c: 105: AngleLowByte = ser_getch();
  7396  07B1  160A  118A  21A7   	fcall	_ser_getch
              120A  118A         
  7397  07B6  1283               	bcf	status, 5	;RP0=0, select bank0
  7398  07B7  1303               	bcf	status, 6	;RP1=0, select bank0
  7399  07B8  00A2               	movwf	(??_robot_read+0)+0
  7400  07B9  0822               	movf	(??_robot_read+0)+0,w
  7401  07BA  1683               	bsf	status, 5	;RP0=1, select bank1
  7402  07BB  1303               	bcf	status, 6	;RP1=0, select bank1
  7403  07BC  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7404                           	line	106
  7405                           ;robot.c: 106: }
  7406  07BD  2FC3               	goto	l6092
  7407                           	line	107
  7408                           	
  7409  07BE                     l6089:	
  7410  07BE  2FC3               	goto	l6092
  7411                           	
  7412  07BF                     l11366:	
  7413  07BF  2FC3               	goto	l6092
  7414                           	line	110
  7415                           ;robot.c: 108: {
  7416                           	
  7417  07C0                     l6091:	
  7418  07C0  2FC3               	goto	l6092
  7419                           	line	111
  7420                           	
  7421  07C1                     l6090:	
  7422  07C1  2FC3               	goto	l6092
  7423                           	
  7424  07C2                     l6088:	
  7425  07C2  2FC3               	goto	l6092
  7426                           	
  7427  07C3                     l6086:	
  7428                           	
  7429  07C3                     l6092:	
  7430  07C3  0008               	return
  7431                           	opt stack 0
  7432                           GLOBAL	__end_of_robot_read
  7433  07C4                     	__end_of_robot_read:
  7434 ;; =============== function _robot_read ends ============
  7435                           
  7436                           	signat	_robot_read,4216
  7437                           	global	_lcd_init
  7438                           psect	text1075,local,class=CODE,delta=2
  7439                           global __ptext1075
  7440  1150                     __ptext1075:
  7441                           
  7442 ;; *************** function _lcd_init *****************
  7443 ;; Defined at:
  7444 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;		None               void
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0, pclath, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7458 ;;      Params:         0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0
  7461 ;;      Totals:         0       0       0       0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    4
  7465 ;; This function calls:
  7466 ;;		_lcd_write_control
  7467 ;; This function is called by:
  7468 ;;		_init
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           psect	text1075
  7472                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7473                           	line	101
  7474                           	global	__size_of_lcd_init
  7475  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7476                           	
  7477  1150                     _lcd_init:	
  7478                           	opt	stack 2
  7479                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7480                           	line	105
  7481                           	
  7482  1150                     l11332:	
  7483                           ;lcd.c: 105: ADCON1 = 0b00000010;
  7484  1150  3002               	movlw	(02h)
  7485  1151  1683               	bsf	status, 5	;RP0=1, select bank1
  7486  1152  1303               	bcf	status, 6	;RP1=0, select bank1
  7487  1153  009F               	movwf	(159)^080h	;volatile
  7488                           	line	108
  7489                           	
  7490  1154                     l11334:	
  7491                           ;lcd.c: 108: PORTD = 0;
  7492  1154  1283               	bcf	status, 5	;RP0=0, select bank0
  7493  1155  1303               	bcf	status, 6	;RP1=0, select bank0
  7494  1156  0188               	clrf	(8)	;volatile
  7495                           	line	109
  7496                           	
  7497  1157                     l11336:	
  7498                           ;lcd.c: 109: PORTE = 0;
  7499  1157  0189               	clrf	(9)	;volatile
  7500                           	line	111
  7501                           	
  7502  1158                     l11338:	
  7503                           ;lcd.c: 111: TRISD = 0b00000000;
  7504  1158  1683               	bsf	status, 5	;RP0=1, select bank1
  7505  1159  1303               	bcf	status, 6	;RP1=0, select bank1
  7506  115A  0188               	clrf	(136)^080h	;volatile
  7507                           	line	112
  7508                           	
  7509  115B                     l11340:	
  7510                           ;lcd.c: 112: TRISE = 0b00000000;
  7511  115B  0189               	clrf	(137)^080h	;volatile
  7512                           	line	115
  7513                           	
  7514  115C                     l11342:	
  7515                           ;lcd.c: 115: lcd_write_control(0b00000001);
  7516  115C  3001               	movlw	(01h)
  7517  115D  160A  118A  203F   	fcall	_lcd_write_control
              160A  118A         
  7518                           	line	116
  7519                           	
  7520  1162                     l11344:	
  7521                           ;lcd.c: 116: lcd_write_control(0b00111000);
  7522  1162  3038               	movlw	(038h)
  7523  1163  160A  118A  203F   	fcall	_lcd_write_control
              160A  118A         
  7524                           	line	117
  7525                           	
  7526  1168                     l11346:	
  7527                           ;lcd.c: 117: lcd_write_control(0b00001100);
  7528  1168  300C               	movlw	(0Ch)
  7529  1169  160A  118A  203F   	fcall	_lcd_write_control
              160A  118A         
  7530                           	line	118
  7531                           	
  7532  116E                     l11348:	
  7533                           ;lcd.c: 118: lcd_write_control(0b00000110);
  7534  116E  3006               	movlw	(06h)
  7535  116F  160A  118A  203F   	fcall	_lcd_write_control
              160A  118A         
  7536                           	line	119
  7537                           	
  7538  1174                     l11350:	
  7539                           ;lcd.c: 119: lcd_write_control(0b00000010);
  7540  1174  3002               	movlw	(02h)
  7541  1175  160A  118A  203F   	fcall	_lcd_write_control
              160A  118A         
  7542                           	line	121
  7543                           	
  7544  117A                     l1429:	
  7545  117A  0008               	return
  7546                           	opt stack 0
  7547                           GLOBAL	__end_of_lcd_init
  7548  117B                     	__end_of_lcd_init:
  7549 ;; =============== function _lcd_init ends ============
  7550                           
  7551                           	signat	_lcd_init,88
  7552                           	global	_lcd_write_string
  7553                           psect	text1076,local,class=CODE,delta=2
  7554                           global __ptext1076
  7555  11D3                     __ptext1076:
  7556                           
  7557 ;; *************** function _lcd_write_string *****************
  7558 ;; Defined at:
  7559 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  s               2    7[BANK0 ] PTR unsigned char 
  7562 ;;		 -> STR_26(9), STR_25(3), STR_24(3), STR_23(3), 
  7563 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_18(16), 
  7564 ;;		 -> STR_17(4), STR_16(8), STR_15(4), STR_14(16), 
  7565 ;;		 -> UpdateDisplay@LCDOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  7566 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  7567 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  7568 ;;		 -> STR_1(9), 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;		None               void
  7573 ;; Registers used:
  7574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7580 ;;      Params:         0       2       0       0       0
  7581 ;;      Locals:         0       0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0
  7583 ;;      Totals:         0       2       0       0       0
  7584 ;;Total ram usage:        2 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    4
  7587 ;; This function calls:
  7588 ;;		_lcd_write_data
  7589 ;; This function is called by:
  7590 ;;		_UpdateDisplay
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           psect	text1076
  7594                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7595                           	line	48
  7596                           	global	__size_of_lcd_write_string
  7597  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  7598                           	
  7599  11D3                     _lcd_write_string:	
  7600                           	opt	stack 1
  7601                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7602                           	line	50
  7603                           	
  7604  11D3                     l11324:	
  7605                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  7606  11D3  29ED               	goto	l11330
  7607                           	
  7608  11D4                     l1409:	
  7609                           	
  7610  11D4                     l11326:	
  7611  11D4  1283               	bcf	status, 5	;RP0=0, select bank0
  7612  11D5  1303               	bcf	status, 6	;RP1=0, select bank0
  7613  11D6  0828               	movf	(lcd_write_string@s+1),w
  7614  11D7  00FF               	movwf	btemp+1
  7615  11D8  0827               	movf	(lcd_write_string@s),w
  7616  11D9  0084               	movwf	fsr0
  7617  11DA  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7618  11DF  160A  118A  2005   	fcall	_lcd_write_data
              160A  118A         
  7619                           	
  7620  11E4                     l11328:	
  7621  11E4  3001               	movlw	low(01h)
  7622  11E5  1283               	bcf	status, 5	;RP0=0, select bank0
  7623  11E6  1303               	bcf	status, 6	;RP1=0, select bank0
  7624  11E7  07A7               	addwf	(lcd_write_string@s),f
  7625  11E8  1803               	skipnc
  7626  11E9  0AA8               	incf	(lcd_write_string@s+1),f
  7627  11EA  3000               	movlw	high(01h)
  7628  11EB  07A8               	addwf	(lcd_write_string@s+1),f
  7629  11EC  29ED               	goto	l11330
  7630                           	
  7631  11ED                     l1408:	
  7632                           	
  7633  11ED                     l11330:	
  7634  11ED  1283               	bcf	status, 5	;RP0=0, select bank0
  7635  11EE  1303               	bcf	status, 6	;RP1=0, select bank0
  7636  11EF  0828               	movf	(lcd_write_string@s+1),w
  7637  11F0  00FF               	movwf	btemp+1
  7638  11F1  0827               	movf	(lcd_write_string@s),w
  7639  11F2  0084               	movwf	fsr0
  7640  11F3  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7641  11F8  3800               	iorlw	0
  7642  11F9  1D03               	skipz
  7643  11FA  29FC               	goto	u4901
  7644  11FB  29FD               	goto	u4900
  7645  11FC                     u4901:
  7646  11FC  29D4               	goto	l11326
  7647  11FD                     u4900:
  7648  11FD  29FE               	goto	l1411
  7649                           	
  7650  11FE                     l1410:	
  7651                           	line	51
  7652                           	
  7653  11FE                     l1411:	
  7654  11FE  0008               	return
  7655                           	opt stack 0
  7656                           GLOBAL	__end_of_lcd_write_string
  7657  11FF                     	__end_of_lcd_write_string:
  7658 ;; =============== function _lcd_write_string ends ============
  7659                           
  7660                           	signat	_lcd_write_string,4216
  7661                           	global	_lcd_set_cursor
  7662                           psect	text1077,local,class=CODE,delta=2
  7663                           global __ptext1077
  7664  1FE8                     __ptext1077:
  7665                           
  7666 ;; *************** function _lcd_set_cursor *****************
  7667 ;; Defined at:
  7668 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  address         1    wreg     unsigned char 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  address         1    3[BANK0 ] unsigned char 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;		None               void
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0, pclath, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7682 ;;      Params:         0       0       0       0       0
  7683 ;;      Locals:         0       1       0       0       0
  7684 ;;      Temps:          0       0       0       0       0
  7685 ;;      Totals:         0       1       0       0       0
  7686 ;;Total ram usage:        1 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    4
  7689 ;; This function calls:
  7690 ;;		_lcd_write_control
  7691 ;; This function is called by:
  7692 ;;		_UpdateDisplay
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           psect	text1077
  7696                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7697                           	line	42
  7698                           	global	__size_of_lcd_set_cursor
  7699  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  7700                           	
  7701  1FE8                     _lcd_set_cursor:	
  7702                           	opt	stack 1
  7703                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  7704                           ;lcd_set_cursor@address stored from wreg
  7705  1FE8  1283               	bcf	status, 5	;RP0=0, select bank0
  7706  1FE9  1303               	bcf	status, 6	;RP1=0, select bank0
  7707  1FEA  00A3               	movwf	(lcd_set_cursor@address)
  7708                           	line	43
  7709                           	
  7710  1FEB                     l11320:	
  7711                           ;lcd.c: 43: address |= 0b10000000;
  7712  1FEB  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  7713                           	line	44
  7714                           	
  7715  1FEC                     l11322:	
  7716                           ;lcd.c: 44: lcd_write_control(address);
  7717  1FEC  0823               	movf	(lcd_set_cursor@address),w
  7718  1FED  160A  118A  203F   	fcall	_lcd_write_control
              160A  158A         
  7719                           	line	45
  7720                           	
  7721  1FF2                     l1405:	
  7722  1FF2  0008               	return
  7723                           	opt stack 0
  7724                           GLOBAL	__end_of_lcd_set_cursor
  7725  1FF3                     	__end_of_lcd_set_cursor:
  7726 ;; =============== function _lcd_set_cursor ends ============
  7727                           
  7728                           	signat	_lcd_set_cursor,4216
  7729                           	global	_abs
  7730                           psect	text1078,local,class=CODE,delta=2
  7731                           global __ptext1078
  7732  12B8                     __ptext1078:
  7733                           
  7734 ;; *************** function _abs *****************
  7735 ;; Defined at:
  7736 ;;		line 454 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  v               2    6[BANK0 ] int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2    6[BANK0 ] int 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         0       2       0       0       0
  7751 ;;      Locals:         0       0       0       0       0
  7752 ;;      Temps:          0       2       0       0       0
  7753 ;;      Totals:         0       4       0       0       0
  7754 ;;Total ram usage:        4 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    4
  7757 ;; This function calls:
  7758 ;;		___wmul
  7759 ;; This function is called by:
  7760 ;;		_robot_turnRight
  7761 ;;		_robotMoveSpeed
  7762 ;;		_robotTurnSpeed
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           psect	text1078
  7766                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7767                           	line	454
  7768                           	global	__size_of_abs
  7769  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  7770                           	
  7771  12B8                     _abs:	
  7772                           	opt	stack 2
  7773                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7774                           	line	455
  7775                           	
  7776  12B8                     l11316:	
  7777                           ;robot.c: 455: return (v * ((v > 0) - (v < 0)));
  7778  12B8  3000               	movlw	0
  7779  12B9  1283               	bcf	status, 5	;RP0=0, select bank0
  7780  12BA  1303               	bcf	status, 6	;RP1=0, select bank0
  7781  12BB  1BA7               	btfsc	(abs@v+1),7
  7782  12BC  3001               	movlw	1
  7783  12BD  00A8               	movwf	(??_abs+0)+0
  7784  12BE  01A9               	clrf	(??_abs+0)+0+1
  7785  12BF  09A8               	comf	(??_abs+0)+0,f
  7786  12C0  09A9               	comf	(??_abs+0)+1,f
  7787  12C1  0AA8               	incf	(??_abs+0)+0,f
  7788  12C2  1903               	skipnz
  7789  12C3  0AA9               	incf	(??_abs+0)+1,f
  7790  12C4  0827               	movf	(abs@v+1),w
  7791  12C5  3A80               	xorlw	80h
  7792  12C6  00FF               	movwf	btemp+1
  7793  12C7  3080               	movlw	(high(01h))^80h
  7794  12C8  027F               	subwf	btemp+1,w
  7795  12C9  1D03               	skipz
  7796  12CA  2ACD               	goto	u4895
  7797  12CB  3001               	movlw	low(01h)
  7798  12CC  0226               	subwf	(abs@v),w
  7799  12CD                     u4895:
  7800                           
  7801  12CD  3000               	movlw	0
  7802  12CE  1803               	skipnc
  7803  12CF  3001               	movlw	1
  7804  12D0  1283               	bcf	status, 5	;RP0=0, select bank0
  7805  12D1  1303               	bcf	status, 6	;RP1=0, select bank0
  7806  12D2  0728               	addwf	0+(??_abs+0)+0,w
  7807  12D3  00A0               	movwf	(?___wmul)
  7808  12D4  0829               	movf	1+(??_abs+0)+0,w
  7809  12D5  1803               	skipnc
  7810  12D6  0A29               	incf	1+(??_abs+0)+0,w
  7811  12D7  00A1               	movwf	((?___wmul))+1
  7812  12D8  0827               	movf	(abs@v+1),w
  7813  12D9  01A3               	clrf	1+(?___wmul)+02h
  7814  12DA  07A3               	addwf	1+(?___wmul)+02h
  7815  12DB  0826               	movf	(abs@v),w
  7816  12DC  01A2               	clrf	0+(?___wmul)+02h
  7817  12DD  07A2               	addwf	0+(?___wmul)+02h
  7818                           
  7819  12DE  160A  118A  217B   	fcall	___wmul
              160A  118A         
  7820  12E3  1283               	bcf	status, 5	;RP0=0, select bank0
  7821  12E4  1303               	bcf	status, 6	;RP1=0, select bank0
  7822  12E5  0821               	movf	(1+(?___wmul)),w
  7823  12E6  01A7               	clrf	(?_abs+1)
  7824  12E7  07A7               	addwf	(?_abs+1)
  7825  12E8  0820               	movf	(0+(?___wmul)),w
  7826  12E9  01A6               	clrf	(?_abs)
  7827  12EA  07A6               	addwf	(?_abs)
  7828                           
  7829  12EB  2AEC               	goto	l6170
  7830                           	
  7831  12EC                     l11318:	
  7832                           	line	456
  7833                           	
  7834  12EC                     l6170:	
  7835  12EC  0008               	return
  7836                           	opt stack 0
  7837                           GLOBAL	__end_of_abs
  7838  12ED                     	__end_of_abs:
  7839 ;; =============== function _abs ends ============
  7840                           
  7841                           	signat	_abs,4218
  7842                           	global	_robotTurn
  7843                           psect	text1079,local,class=CODE,delta=2
  7844                           global __ptext1079
  7845  157D                     __ptext1079:
  7846                           
  7847 ;; *************** function _robotTurn *****************
  7848 ;; Defined at:
  7849 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  angle           2    2[BANK0 ] int 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;		None               void
  7856 ;; Registers used:
  7857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7863 ;;      Params:         0       2       0       0       0
  7864 ;;      Locals:         0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0
  7866 ;;      Totals:         0       2       0       0       0
  7867 ;;Total ram usage:        2 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    4
  7870 ;; This function calls:
  7871 ;;		_ser_putch
  7872 ;; This function is called by:
  7873 ;;		_robotTurnSpeed
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           psect	text1079
  7877                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7878                           	line	137
  7879                           	global	__size_of_robotTurn
  7880  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  7881                           	
  7882  157D                     _robotTurn:	
  7883                           	opt	stack 2
  7884                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7885                           	line	139
  7886                           	
  7887  157D                     l11308:	
  7888                           ;robot.c: 139: if (angle > 0)
  7889  157D  1283               	bcf	status, 5	;RP0=0, select bank0
  7890  157E  1303               	bcf	status, 6	;RP1=0, select bank0
  7891  157F  0823               	movf	(robotTurn@angle+1),w
  7892  1580  3A80               	xorlw	80h
  7893  1581  00FF               	movwf	btemp+1
  7894  1582  3080               	movlw	(high(01h))^80h
  7895  1583  027F               	subwf	btemp+1,w
  7896  1584  1D03               	skipz
  7897  1585  2D88               	goto	u4875
  7898  1586  3001               	movlw	low(01h)
  7899  1587  0222               	subwf	(robotTurn@angle),w
  7900  1588                     u4875:
  7901                           
  7902  1588  1C03               	skipc
  7903  1589  2D8B               	goto	u4871
  7904  158A  2D8C               	goto	u4870
  7905  158B                     u4871:
  7906  158B  2DAB               	goto	l6098
  7907  158C                     u4870:
  7908                           	line	141
  7909                           	
  7910  158C                     l11310:	
  7911                           ;robot.c: 140: {
  7912                           ;robot.c: 141: ser_putch(137);
  7913  158C  3089               	movlw	(089h)
  7914  158D  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7915                           	line	143
  7916                           ;robot.c: 143: ser_putch(0);
  7917  1592  3000               	movlw	(0)
  7918  1593  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7919                           	line	145
  7920                           ;robot.c: 145: ser_putch(200);
  7921  1598  30C8               	movlw	(0C8h)
  7922  1599  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7923                           	line	147
  7924                           ;robot.c: 147: ser_putch(0);
  7925  159E  3000               	movlw	(0)
  7926  159F  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7927                           	line	149
  7928                           ;robot.c: 149: ser_putch(1);
  7929  15A4  3001               	movlw	(01h)
  7930  15A5  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7931                           	line	150
  7932                           ;robot.c: 150: }
  7933  15AA  2DF0               	goto	l6102
  7934                           	line	151
  7935                           	
  7936  15AB                     l6098:	
  7937                           ;robot.c: 151: else if (angle < 0)
  7938  15AB  1283               	bcf	status, 5	;RP0=0, select bank0
  7939  15AC  1303               	bcf	status, 6	;RP1=0, select bank0
  7940  15AD  1FA3               	btfss	(robotTurn@angle+1),7
  7941  15AE  2DB0               	goto	u4881
  7942  15AF  2DB1               	goto	u4880
  7943  15B0                     u4881:
  7944  15B0  2DD0               	goto	l11314
  7945  15B1                     u4880:
  7946                           	line	153
  7947                           	
  7948  15B1                     l11312:	
  7949                           ;robot.c: 152: {
  7950                           ;robot.c: 153: ser_putch(137);
  7951  15B1  3089               	movlw	(089h)
  7952  15B2  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7953                           	line	155
  7954                           ;robot.c: 155: ser_putch(0);
  7955  15B7  3000               	movlw	(0)
  7956  15B8  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7957                           	line	157
  7958                           ;robot.c: 157: ser_putch(200);
  7959  15BD  30C8               	movlw	(0C8h)
  7960  15BE  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7961                           	line	159
  7962                           ;robot.c: 159: ser_putch(255);
  7963  15C3  30FF               	movlw	(0FFh)
  7964  15C4  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7965                           	line	161
  7966                           ;robot.c: 161: ser_putch(255);
  7967  15C9  30FF               	movlw	(0FFh)
  7968  15CA  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7969                           	line	162
  7970                           ;robot.c: 162: }
  7971  15CF  2DF0               	goto	l6102
  7972                           	line	163
  7973                           	
  7974  15D0                     l6100:	
  7975                           	line	165
  7976                           	
  7977  15D0                     l11314:	
  7978                           ;robot.c: 163: else
  7979                           ;robot.c: 164: {
  7980                           ;robot.c: 165: ser_putch(137);
  7981  15D0  3089               	movlw	(089h)
  7982  15D1  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7983                           	line	167
  7984                           ;robot.c: 167: ser_putch(0);
  7985  15D6  3000               	movlw	(0)
  7986  15D7  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7987                           	line	169
  7988                           ;robot.c: 169: ser_putch(0);
  7989  15DC  3000               	movlw	(0)
  7990  15DD  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7991                           	line	171
  7992                           ;robot.c: 171: ser_putch(0);
  7993  15E2  3000               	movlw	(0)
  7994  15E3  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7995                           	line	173
  7996                           ;robot.c: 173: ser_putch(0);
  7997  15E8  3000               	movlw	(0)
  7998  15E9  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  7999  15EE  2DF0               	goto	l6102
  8000                           	line	174
  8001                           	
  8002  15EF                     l6101:	
  8003  15EF  2DF0               	goto	l6102
  8004                           	
  8005  15F0                     l6099:	
  8006                           	line	175
  8007                           	
  8008  15F0                     l6102:	
  8009  15F0  0008               	return
  8010                           	opt stack 0
  8011                           GLOBAL	__end_of_robotTurn
  8012  15F1                     	__end_of_robotTurn:
  8013 ;; =============== function _robotTurn ends ============
  8014                           
  8015                           	signat	_robotTurn,4216
  8016                           	global	_ser_getch
  8017                           psect	text1080,local,class=CODE,delta=2
  8018                           global __ptext1080
  8019  11A7                     __ptext1080:
  8020                           
  8021 ;; *************** function _ser_getch *****************
  8022 ;; Defined at:
  8023 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  c               1    1[BANK0 ] unsigned char 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      unsigned char 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8037 ;;      Params:         0       0       0       0       0
  8038 ;;      Locals:         0       1       0       0       0
  8039 ;;      Temps:          0       1       0       0       0
  8040 ;;      Totals:         0       2       0       0       0
  8041 ;;Total ram usage:        2 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    4
  8044 ;; This function calls:
  8045 ;;		_ser_isrx
  8046 ;; This function is called by:
  8047 ;;		_robot_read
  8048 ;;		_RobotBattRead
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           psect	text1080
  8052                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  8053                           	line	55
  8054                           	global	__size_of_ser_getch
  8055  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  8056                           	
  8057  11A7                     _ser_getch:	
  8058                           	opt	stack 1
  8059                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8060                           	line	58
  8061                           	
  8062  11A7                     l11292:	
  8063                           ;ser.c: 56: unsigned char c;
  8064                           ;ser.c: 58: while (ser_isrx()==0)
  8065  11A7  29A9               	goto	l11294
  8066                           	
  8067  11A8                     l6877:	
  8068                           	line	59
  8069                           ;ser.c: 59: continue;
  8070  11A8  29A9               	goto	l11294
  8071                           	
  8072  11A9                     l6876:	
  8073                           	line	58
  8074                           	
  8075  11A9                     l11294:	
  8076  11A9  160A  118A  207F   	fcall	_ser_isrx
              160A  118A         
  8077  11AE  1C03               	btfss	status,0
  8078  11AF  29B1               	goto	u4861
  8079  11B0  29B2               	goto	u4860
  8080  11B1                     u4861:
  8081  11B1  29A9               	goto	l11294
  8082  11B2                     u4860:
  8083                           	
  8084  11B2                     l6878:	
  8085                           	line	61
  8086                           ;ser.c: 61: GIE=0;
  8087  11B2  138B               	bcf	(95/8),(95)&7
  8088                           	line	62
  8089                           	
  8090  11B3                     l11296:	
  8091                           ;ser.c: 62: c=rxfifo[rxoptr];
  8092  11B3  1683               	bsf	status, 5	;RP0=1, select bank1
  8093  11B4  1303               	bcf	status, 6	;RP1=0, select bank1
  8094  11B5  0859               	movf	(_rxoptr)^080h,w
  8095  11B6  3EA0               	addlw	_rxfifo&0ffh
  8096  11B7  0084               	movwf	fsr0
  8097  11B8  1383               	bcf	status, 7	;select IRP bank1
  8098  11B9  0800               	movf	indf,w
  8099  11BA  1283               	bcf	status, 5	;RP0=0, select bank0
  8100  11BB  1303               	bcf	status, 6	;RP1=0, select bank0
  8101  11BC  00A0               	movwf	(??_ser_getch+0)+0
  8102  11BD  0820               	movf	(??_ser_getch+0)+0,w
  8103  11BE  00A1               	movwf	(ser_getch@c)
  8104                           	line	63
  8105                           	
  8106  11BF                     l11298:	
  8107                           ;ser.c: 63: ++rxoptr;
  8108  11BF  3001               	movlw	(01h)
  8109  11C0  00A0               	movwf	(??_ser_getch+0)+0
  8110  11C1  0820               	movf	(??_ser_getch+0)+0,w
  8111  11C2  1683               	bsf	status, 5	;RP0=1, select bank1
  8112  11C3  1303               	bcf	status, 6	;RP1=0, select bank1
  8113  11C4  07D9               	addwf	(_rxoptr)^080h,f	;volatile
  8114                           	line	64
  8115                           	
  8116  11C5                     l11300:	
  8117                           ;ser.c: 64: rxoptr &= (16-1);
  8118  11C5  300F               	movlw	(0Fh)
  8119  11C6  1283               	bcf	status, 5	;RP0=0, select bank0
  8120  11C7  1303               	bcf	status, 6	;RP1=0, select bank0
  8121  11C8  00A0               	movwf	(??_ser_getch+0)+0
  8122  11C9  0820               	movf	(??_ser_getch+0)+0,w
  8123  11CA  1683               	bsf	status, 5	;RP0=1, select bank1
  8124  11CB  1303               	bcf	status, 6	;RP1=0, select bank1
  8125  11CC  05D9               	andwf	(_rxoptr)^080h,f	;volatile
  8126                           	line	65
  8127                           	
  8128  11CD                     l11302:	
  8129                           ;ser.c: 65: GIE=1;
  8130  11CD  178B               	bsf	(95/8),(95)&7
  8131                           	line	66
  8132                           	
  8133  11CE                     l11304:	
  8134                           ;ser.c: 66: return c;
  8135  11CE  1283               	bcf	status, 5	;RP0=0, select bank0
  8136  11CF  1303               	bcf	status, 6	;RP1=0, select bank0
  8137  11D0  0821               	movf	(ser_getch@c),w
  8138  11D1  29D2               	goto	l6879
  8139                           	
  8140  11D2                     l11306:	
  8141                           	line	67
  8142                           	
  8143  11D2                     l6879:	
  8144  11D2  0008               	return
  8145                           	opt stack 0
  8146                           GLOBAL	__end_of_ser_getch
  8147  11D3                     	__end_of_ser_getch:
  8148 ;; =============== function _ser_getch ends ============
  8149                           
  8150                           	signat	_ser_getch,89
  8151                           	global	_sprintf
  8152                           psect	text1081,local,class=CODE,delta=2
  8153                           global __ptext1081
  8154  0B46                     __ptext1081:
  8155                           
  8156 ;; *************** function _sprintf *****************
  8157 ;; Defined at:
  8158 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  sp              1    wreg     PTR unsigned char 
  8161 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8162 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  8163 ;;		 -> STR_19(5), STR_13(13), 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  8166 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8167 ;;  _val            4   31[BANK0 ] struct .
  8168 ;;  c               1   36[BANK0 ] char 
  8169 ;;  prec            1   30[BANK0 ] char 
  8170 ;;  flag            1   29[BANK0 ] unsigned char 
  8171 ;;  ap              1   28[BANK0 ] PTR void [1]
  8172 ;;		 -> ?_sprintf(2), 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2   20[BANK0 ] int 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8182 ;;      Params:         0       5       0       0       0
  8183 ;;      Locals:         0       9       0       0       0
  8184 ;;      Temps:          0       3       0       0       0
  8185 ;;      Totals:         0      17       0       0       0
  8186 ;;Total ram usage:       17 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    4
  8189 ;; This function calls:
  8190 ;;		___lwdiv
  8191 ;;		___lwmod
  8192 ;; This function is called by:
  8193 ;;		_UpdateDisplay
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           psect	text1081
  8197                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  8198                           	line	488
  8199                           	global	__size_of_sprintf
  8200  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  8201                           	
  8202  0B46                     _sprintf:	
  8203                           	opt	stack 1
  8204                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8205                           ;sprintf@sp stored from wreg
  8206                           	line	537
  8207  0B46  1283               	bcf	status, 5	;RP0=0, select bank0
  8208  0B47  1303               	bcf	status, 6	;RP1=0, select bank0
  8209  0B48  00C3               	movwf	(sprintf@sp)
  8210                           	
  8211  0B49                     l11234:	
  8212  0B49  3035               	movlw	(?_sprintf+01h)&0ffh
  8213  0B4A  00B9               	movwf	(??_sprintf+0)+0
  8214  0B4B  0839               	movf	(??_sprintf+0)+0,w
  8215  0B4C  00BC               	movwf	(sprintf@ap)
  8216                           	line	540
  8217  0B4D  2C2C               	goto	l11286
  8218                           	
  8219  0B4E                     l6917:	
  8220                           	line	542
  8221                           	
  8222  0B4E                     l11236:	
  8223  0B4E  0844               	movf	(sprintf@c),w
  8224  0B4F  3A25               	xorlw	025h
  8225  0B50  1903               	skipnz
  8226  0B51  2B53               	goto	u4781
  8227  0B52  2B54               	goto	u4780
  8228  0B53                     u4781:
  8229  0B53  2B60               	goto	l6918
  8230  0B54                     u4780:
  8231                           	line	545
  8232                           	
  8233  0B54                     l11238:	
  8234  0B54  0844               	movf	(sprintf@c),w
  8235  0B55  00B9               	movwf	(??_sprintf+0)+0
  8236  0B56  0843               	movf	(sprintf@sp),w
  8237  0B57  0084               	movwf	fsr0
  8238  0B58  0839               	movf	(??_sprintf+0)+0,w
  8239  0B59  1383               	bcf	status, 7	;select IRP bank0
  8240  0B5A  0080               	movwf	indf
  8241                           	
  8242  0B5B                     l11240:	
  8243  0B5B  3001               	movlw	(01h)
  8244  0B5C  00B9               	movwf	(??_sprintf+0)+0
  8245  0B5D  0839               	movf	(??_sprintf+0)+0,w
  8246  0B5E  07C3               	addwf	(sprintf@sp),f
  8247                           	line	546
  8248  0B5F  2C2C               	goto	l11286
  8249                           	line	547
  8250                           	
  8251  0B60                     l6918:	
  8252                           	line	552
  8253  0B60  01BD               	clrf	(sprintf@flag)
  8254                           	line	638
  8255  0B61  2B67               	goto	l11244
  8256                           	line	640
  8257                           	
  8258  0B62                     l6920:	
  8259                           	line	641
  8260  0B62  2C40               	goto	l11288
  8261                           	line	700
  8262                           	
  8263  0B63                     l6922:	
  8264  0B63  2B7C               	goto	l11246
  8265                           	line	701
  8266                           	
  8267  0B64                     l6923:	
  8268                           	line	702
  8269  0B64  2B7C               	goto	l11246
  8270                           	line	805
  8271                           	
  8272  0B65                     l6925:	
  8273                           	line	816
  8274  0B65  2C2C               	goto	l11286
  8275                           	line	825
  8276                           	
  8277  0B66                     l11242:	
  8278  0B66  2B7C               	goto	l11246
  8279                           	line	638
  8280                           	
  8281  0B67                     l6919:	
  8282                           	
  8283  0B67                     l11244:	
  8284  0B67  3001               	movlw	01h
  8285  0B68  07B4               	addwf	(sprintf@f),f
  8286  0B69  30FF               	movlw	-01h
  8287  0B6A  0734               	addwf	(sprintf@f),w
  8288  0B6B  0084               	movwf	fsr0
  8289  0B6C  120A  158A  200A   	fcall	stringdir
              120A  158A         
  8290  0B71  00C4               	movwf	(sprintf@c)
  8291                           	; Switch size 1, requested type "space"
  8292                           ; Number of cases is 3, Range of values is 0 to 105
  8293                           ; switch strategies available:
  8294                           ; Name         Instructions Cycles
  8295                           ; simple_byte           10     6 (average)
  8296                           ; jumptable            260     6 (fixed)
  8297                           ; rangetable           110     6 (fixed)
  8298                           ; spacedrange          218     9 (fixed)
  8299                           ; locatedrange         106     3 (fixed)
  8300                           ;	Chosen strategy is simple_byte
  8301                           
  8302                           	opt asmopt_off
  8303  0B72  3A00               	xorlw	0^0	; case 0
  8304  0B73  1903               	skipnz
  8305  0B74  2C40               	goto	l11288
  8306  0B75  3A64               	xorlw	100^0	; case 100
  8307  0B76  1903               	skipnz
  8308  0B77  2B7C               	goto	l11246
  8309  0B78  3A0D               	xorlw	105^100	; case 105
  8310  0B79  1903               	skipnz
  8311  0B7A  2B7C               	goto	l11246
  8312  0B7B  2C2C               	goto	l11286
  8313                           	opt asmopt_on
  8314                           
  8315                           	line	825
  8316                           	
  8317  0B7C                     l6924:	
  8318                           	line	1254
  8319                           	
  8320  0B7C                     l11246:	
  8321  0B7C  083C               	movf	(sprintf@ap),w
  8322  0B7D  0084               	movwf	fsr0
  8323  0B7E  1383               	bcf	status, 7	;select IRP bank0
  8324  0B7F  0800               	movf	indf,w
  8325  0B80  00BF               	movwf	(sprintf@_val)
  8326  0B81  0A84               	incf	fsr0,f
  8327  0B82  0800               	movf	indf,w
  8328  0B83  00C0               	movwf	(sprintf@_val+1)
  8329                           	
  8330  0B84                     l11248:	
  8331  0B84  3002               	movlw	(02h)
  8332  0B85  00B9               	movwf	(??_sprintf+0)+0
  8333  0B86  0839               	movf	(??_sprintf+0)+0,w
  8334  0B87  07BC               	addwf	(sprintf@ap),f
  8335                           	line	1256
  8336                           	
  8337  0B88                     l11250:	
  8338  0B88  1FC0               	btfss	(sprintf@_val+1),7
  8339  0B89  2B8B               	goto	u4791
  8340  0B8A  2B8C               	goto	u4790
  8341  0B8B                     u4791:
  8342  0B8B  2B96               	goto	l11256
  8343  0B8C                     u4790:
  8344                           	line	1257
  8345                           	
  8346  0B8C                     l11252:	
  8347  0B8C  3003               	movlw	(03h)
  8348  0B8D  00B9               	movwf	(??_sprintf+0)+0
  8349  0B8E  0839               	movf	(??_sprintf+0)+0,w
  8350  0B8F  04BD               	iorwf	(sprintf@flag),f
  8351                           	line	1258
  8352                           	
  8353  0B90                     l11254:	
  8354  0B90  09BF               	comf	(sprintf@_val),f
  8355  0B91  09C0               	comf	(sprintf@_val+1),f
  8356  0B92  0ABF               	incf	(sprintf@_val),f
  8357  0B93  1903               	skipnz
  8358  0B94  0AC0               	incf	(sprintf@_val+1),f
  8359  0B95  2B96               	goto	l11256
  8360                           	line	1259
  8361                           	
  8362  0B96                     l6926:	
  8363                           	line	1300
  8364                           	
  8365  0B96                     l11256:	
  8366  0B96  01C4               	clrf	(sprintf@c)
  8367  0B97  1403               	bsf	status,0
  8368  0B98  0DC4               	rlf	(sprintf@c),f
  8369                           	
  8370  0B99                     l11258:	
  8371  0B99  0844               	movf	(sprintf@c),w
  8372  0B9A  3A05               	xorlw	05h
  8373  0B9B  1D03               	skipz
  8374  0B9C  2B9E               	goto	u4801
  8375  0B9D  2B9F               	goto	u4800
  8376  0B9E                     u4801:
  8377  0B9E  2BA1               	goto	l11262
  8378  0B9F                     u4800:
  8379  0B9F  2BC9               	goto	l11270
  8380                           	
  8381  0BA0                     l11260:	
  8382  0BA0  2BC9               	goto	l11270
  8383                           	line	1301
  8384                           	
  8385  0BA1                     l6927:	
  8386                           	
  8387  0BA1                     l11262:	
  8388  0BA1  0844               	movf	(sprintf@c),w
  8389  0BA2  00B9               	movwf	(??_sprintf+0)+0
  8390  0BA3  0739               	addwf	(??_sprintf+0)+0,w
  8391  0BA4  3E01               	addlw	low((_dpowers-__stringbase))
  8392  0BA5  0084               	movwf	fsr0
  8393  0BA6  120A  158A  200A   	fcall	stringdir
              120A  158A         
  8394  0BAB  00BA               	movwf	(??_sprintf+1)+0
  8395  0BAC  120A  158A  200A   	fcall	stringdir
              120A  158A         
  8396  0BB1  00BB               	movwf	(??_sprintf+1)+0+1
  8397  0BB2  083B               	movf	1+(??_sprintf+1)+0,w
  8398  0BB3  0240               	subwf	(sprintf@_val+1),w
  8399  0BB4  1D03               	skipz
  8400  0BB5  2BB8               	goto	u4815
  8401  0BB6  083A               	movf	0+(??_sprintf+1)+0,w
  8402  0BB7  023F               	subwf	(sprintf@_val),w
  8403  0BB8                     u4815:
  8404  0BB8  1803               	skipnc
  8405  0BB9  2BBB               	goto	u4811
  8406  0BBA  2BBC               	goto	u4810
  8407  0BBB                     u4811:
  8408  0BBB  2BBE               	goto	l11266
  8409  0BBC                     u4810:
  8410  0BBC  2BC9               	goto	l11270
  8411                           	line	1302
  8412                           	
  8413  0BBD                     l11264:	
  8414  0BBD  2BC9               	goto	l11270
  8415                           	
  8416  0BBE                     l6929:	
  8417                           	line	1300
  8418                           	
  8419  0BBE                     l11266:	
  8420  0BBE  3001               	movlw	(01h)
  8421  0BBF  00B9               	movwf	(??_sprintf+0)+0
  8422  0BC0  0839               	movf	(??_sprintf+0)+0,w
  8423  0BC1  07C4               	addwf	(sprintf@c),f
  8424                           	
  8425  0BC2                     l11268:	
  8426  0BC2  0844               	movf	(sprintf@c),w
  8427  0BC3  3A05               	xorlw	05h
  8428  0BC4  1D03               	skipz
  8429  0BC5  2BC7               	goto	u4821
  8430  0BC6  2BC8               	goto	u4820
  8431  0BC7                     u4821:
  8432  0BC7  2BA1               	goto	l11262
  8433  0BC8                     u4820:
  8434  0BC8  2BC9               	goto	l11270
  8435                           	
  8436  0BC9                     l6928:	
  8437                           	line	1433
  8438                           	
  8439  0BC9                     l11270:	
  8440  0BC9  083D               	movf	(sprintf@flag),w
  8441  0BCA  3903               	andlw	03h
  8442  0BCB  1903               	btfsc	status,2
  8443  0BCC  2BCE               	goto	u4831
  8444  0BCD  2BCF               	goto	u4830
  8445  0BCE                     u4831:
  8446  0BCE  2BDB               	goto	l11276
  8447  0BCF                     u4830:
  8448                           	line	1434
  8449                           	
  8450  0BCF                     l11272:	
  8451  0BCF  302D               	movlw	(02Dh)
  8452  0BD0  00B9               	movwf	(??_sprintf+0)+0
  8453  0BD1  0843               	movf	(sprintf@sp),w
  8454  0BD2  0084               	movwf	fsr0
  8455  0BD3  0839               	movf	(??_sprintf+0)+0,w
  8456  0BD4  1383               	bcf	status, 7	;select IRP bank0
  8457  0BD5  0080               	movwf	indf
  8458                           	
  8459  0BD6                     l11274:	
  8460  0BD6  3001               	movlw	(01h)
  8461  0BD7  00B9               	movwf	(??_sprintf+0)+0
  8462  0BD8  0839               	movf	(??_sprintf+0)+0,w
  8463  0BD9  07C3               	addwf	(sprintf@sp),f
  8464  0BDA  2BDB               	goto	l11276
  8465                           	
  8466  0BDB                     l6930:	
  8467                           	line	1467
  8468                           	
  8469  0BDB                     l11276:	
  8470  0BDB  0844               	movf	(sprintf@c),w
  8471  0BDC  00B9               	movwf	(??_sprintf+0)+0
  8472  0BDD  0839               	movf	(??_sprintf+0)+0,w
  8473  0BDE  00BE               	movwf	(sprintf@prec)
  8474                           	line	1469
  8475  0BDF  2C20               	goto	l11284
  8476                           	
  8477  0BE0                     l6932:	
  8478                           	line	1484
  8479                           	
  8480  0BE0                     l11278:	
  8481  0BE0  300A               	movlw	low(0Ah)
  8482  0BE1  00AE               	movwf	(?___lwmod)
  8483  0BE2  3000               	movlw	high(0Ah)
  8484  0BE3  00AF               	movwf	((?___lwmod))+1
  8485  0BE4  083E               	movf	(sprintf@prec),w
  8486  0BE5  00B9               	movwf	(??_sprintf+0)+0
  8487  0BE6  0739               	addwf	(??_sprintf+0)+0,w
  8488  0BE7  3E01               	addlw	low((_dpowers-__stringbase))
  8489  0BE8  0084               	movwf	fsr0
  8490  0BE9  120A  158A  200A   	fcall	stringdir
              120A  158A         
  8491  0BEE  00A6               	movwf	(?___lwdiv)
  8492  0BEF  120A  158A  200A   	fcall	stringdir
              120A  158A         
  8493  0BF4  00A7               	movwf	(?___lwdiv+1)
  8494  0BF5  0840               	movf	(sprintf@_val+1),w
  8495  0BF6  01A9               	clrf	1+(?___lwdiv)+02h
  8496  0BF7  07A9               	addwf	1+(?___lwdiv)+02h
  8497  0BF8  083F               	movf	(sprintf@_val),w
  8498  0BF9  01A8               	clrf	0+(?___lwdiv)+02h
  8499  0BFA  07A8               	addwf	0+(?___lwdiv)+02h
  8500                           
  8501  0BFB  120A  158A  20C6   	fcall	___lwdiv
              120A  158A         
  8502  0C00  1283               	bcf	status, 5	;RP0=0, select bank0
  8503  0C01  1303               	bcf	status, 6	;RP1=0, select bank0
  8504  0C02  0827               	movf	(1+(?___lwdiv)),w
  8505  0C03  01B1               	clrf	1+(?___lwmod)+02h
  8506  0C04  07B1               	addwf	1+(?___lwmod)+02h
  8507  0C05  0826               	movf	(0+(?___lwdiv)),w
  8508  0C06  01B0               	clrf	0+(?___lwmod)+02h
  8509  0C07  07B0               	addwf	0+(?___lwmod)+02h
  8510                           
  8511  0C08  160A  118A  236A   	fcall	___lwmod
              120A  158A         
  8512  0C0D  1283               	bcf	status, 5	;RP0=0, select bank0
  8513  0C0E  1303               	bcf	status, 6	;RP1=0, select bank0
  8514  0C0F  082E               	movf	(0+(?___lwmod)),w
  8515  0C10  3E30               	addlw	030h
  8516  0C11  00BA               	movwf	(??_sprintf+1)+0
  8517  0C12  083A               	movf	(??_sprintf+1)+0,w
  8518  0C13  00C4               	movwf	(sprintf@c)
  8519                           	line	1516
  8520                           	
  8521  0C14                     l11280:	
  8522  0C14  0844               	movf	(sprintf@c),w
  8523  0C15  00B9               	movwf	(??_sprintf+0)+0
  8524  0C16  0843               	movf	(sprintf@sp),w
  8525  0C17  0084               	movwf	fsr0
  8526  0C18  0839               	movf	(??_sprintf+0)+0,w
  8527  0C19  1383               	bcf	status, 7	;select IRP bank0
  8528  0C1A  0080               	movwf	indf
  8529                           	
  8530  0C1B                     l11282:	
  8531  0C1B  3001               	movlw	(01h)
  8532  0C1C  00B9               	movwf	(??_sprintf+0)+0
  8533  0C1D  0839               	movf	(??_sprintf+0)+0,w
  8534  0C1E  07C3               	addwf	(sprintf@sp),f
  8535  0C1F  2C20               	goto	l11284
  8536                           	line	1517
  8537                           	
  8538  0C20                     l6931:	
  8539                           	line	1469
  8540                           	
  8541  0C20                     l11284:	
  8542  0C20  30FF               	movlw	(-1)
  8543  0C21  00B9               	movwf	(??_sprintf+0)+0
  8544  0C22  0839               	movf	(??_sprintf+0)+0,w
  8545  0C23  07BE               	addwf	(sprintf@prec),f
  8546  0C24  083E               	movf	((sprintf@prec)),w
  8547  0C25  3AFF               	xorlw	-1
  8548  0C26  1D03               	skipz
  8549  0C27  2C29               	goto	u4841
  8550  0C28  2C2A               	goto	u4840
  8551  0C29                     u4841:
  8552  0C29  2BE0               	goto	l11278
  8553  0C2A                     u4840:
  8554  0C2A  2C2C               	goto	l11286
  8555                           	
  8556  0C2B                     l6933:	
  8557  0C2B  2C2C               	goto	l11286
  8558                           	line	1525
  8559                           	
  8560  0C2C                     l6916:	
  8561                           	line	540
  8562                           	
  8563  0C2C                     l11286:	
  8564  0C2C  3001               	movlw	01h
  8565  0C2D  07B4               	addwf	(sprintf@f),f
  8566  0C2E  30FF               	movlw	-01h
  8567  0C2F  0734               	addwf	(sprintf@f),w
  8568  0C30  0084               	movwf	fsr0
  8569  0C31  120A  158A  200A   	fcall	stringdir
              120A  158A         
  8570  0C36  00B9               	movwf	(??_sprintf+0)+0
  8571  0C37  0839               	movf	(??_sprintf+0)+0,w
  8572  0C38  00C4               	movwf	(sprintf@c)
  8573  0C39  08C4               	movf	((sprintf@c)),f
  8574  0C3A  1D03               	skipz
  8575  0C3B  2C3D               	goto	u4851
  8576  0C3C  2C3E               	goto	u4850
  8577  0C3D                     u4851:
  8578  0C3D  2B4E               	goto	l11236
  8579  0C3E                     u4850:
  8580  0C3E  2C40               	goto	l11288
  8581                           	
  8582  0C3F                     l6934:	
  8583  0C3F  2C40               	goto	l11288
  8584                           	line	1527
  8585                           	
  8586  0C40                     l6921:	
  8587                           	line	1530
  8588                           	
  8589  0C40                     l11288:	
  8590  0C40  0843               	movf	(sprintf@sp),w
  8591  0C41  0084               	movwf	fsr0
  8592  0C42  1383               	bcf	status, 7	;select IRP bank0
  8593  0C43  0180               	clrf	indf
  8594  0C44  2C45               	goto	l6935
  8595                           	line	1532
  8596                           	
  8597  0C45                     l11290:	
  8598                           	line	1533
  8599                           ;	Return value of _sprintf is never used
  8600                           	
  8601  0C45                     l6935:	
  8602  0C45  0008               	return
  8603                           	opt stack 0
  8604                           GLOBAL	__end_of_sprintf
  8605  0C46                     	__end_of_sprintf:
  8606 ;; =============== function _sprintf ends ============
  8607                           
  8608                           	signat	_sprintf,4698
  8609                           	global	_ADCconvert
  8610                           psect	text1082,local,class=CODE,delta=2
  8611                           global __ptext1082
  8612  049F                     __ptext1082:
  8613                           
  8614 ;; *************** function _ADCconvert *****************
  8615 ;; Defined at:
  8616 ;;		line 89 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;		None               void
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8630 ;;      Params:         0       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0
  8632 ;;      Temps:          0       2       0       0       0
  8633 ;;      Totals:         0       2       0       0       0
  8634 ;;Total ram usage:        2 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    4
  8637 ;; This function calls:
  8638 ;;		___wmul
  8639 ;;		___lwdiv
  8640 ;; This function is called by:
  8641 ;;		_readAvgDistance
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           psect	text1082
  8645                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  8646                           	line	89
  8647                           	global	__size_of_ADCconvert
  8648  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  8649                           	
  8650  049F                     _ADCconvert:	
  8651                           	opt	stack 1
  8652                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  8653                           	line	95
  8654                           	
  8655  049F                     l11192:	
  8656                           ;infrared.c: 95: if (adcVal >= 213 && adcVal < 234)
  8657  049F  3000               	movlw	high(0D5h)
  8658  04A0  1283               	bcf	status, 5	;RP0=0, select bank0
  8659  04A1  1303               	bcf	status, 6	;RP1=0, select bank0
  8660  04A2  026B               	subwf	(_adcVal+1),w	;volatile
  8661  04A3  30D5               	movlw	low(0D5h)
  8662  04A4  1903               	skipnz
  8663  04A5  026A               	subwf	(_adcVal),w	;volatile
  8664  04A6  1C03               	skipc
  8665  04A7  2CA9               	goto	u4641
  8666  04A8  2CAA               	goto	u4640
  8667  04A9                     u4641:
  8668  04A9  2CED               	goto	l11198
  8669  04AA                     u4640:
  8670                           	
  8671  04AA                     l11194:	
  8672  04AA  3000               	movlw	high(0EAh)
  8673  04AB  026B               	subwf	(_adcVal+1),w	;volatile
  8674  04AC  30EA               	movlw	low(0EAh)
  8675  04AD  1903               	skipnz
  8676  04AE  026A               	subwf	(_adcVal),w	;volatile
  8677  04AF  1803               	skipnc
  8678  04B0  2CB2               	goto	u4651
  8679  04B1  2CB3               	goto	u4650
  8680  04B2                     u4651:
  8681  04B2  2CED               	goto	l11198
  8682  04B3                     u4650:
  8683                           	line	97
  8684                           	
  8685  04B3                     l11196:	
  8686                           ;infrared.c: 96: {
  8687                           ;infrared.c: 97: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  8688  04B3  3015               	movlw	low(015h)
  8689  04B4  00A6               	movwf	(?___lwdiv)
  8690  04B5  3000               	movlw	high(015h)
  8691  04B6  00A7               	movwf	((?___lwdiv))+1
  8692  04B7  096A               	comf	(_adcVal),w	;volatile
  8693  04B8  00AE               	movwf	(??_ADCconvert+0)+0
  8694  04B9  096B               	comf	(_adcVal+1),w	;volatile
  8695  04BA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8696  04BB  0AAE               	incf	(??_ADCconvert+0)+0,f
  8697  04BC  1903               	skipnz
  8698  04BD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8699  04BE  082E               	movf	0+(??_ADCconvert+0)+0,w
  8700  04BF  3EEA               	addlw	low(0EAh)
  8701  04C0  00A0               	movwf	(?___wmul)
  8702  04C1  082F               	movf	1+(??_ADCconvert+0)+0,w
  8703  04C2  1803               	skipnc
  8704  04C3  3E01               	addlw	1
  8705  04C4  3E00               	addlw	high(0EAh)
  8706  04C5  00A1               	movwf	1+(?___wmul)
  8707  04C6  3005               	movlw	low(05h)
  8708  04C7  00A2               	movwf	0+(?___wmul)+02h
  8709  04C8  3000               	movlw	high(05h)
  8710  04C9  00A3               	movwf	(0+(?___wmul)+02h)+1
  8711  04CA  160A  118A  217B   	fcall	___wmul
              120A  118A         
  8712  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  8713  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  8714  04D1  0821               	movf	(1+(?___wmul)),w
  8715  04D2  01A9               	clrf	1+(?___lwdiv)+02h
  8716  04D3  07A9               	addwf	1+(?___lwdiv)+02h
  8717  04D4  0820               	movf	(0+(?___wmul)),w
  8718  04D5  01A8               	clrf	0+(?___lwdiv)+02h
  8719  04D6  07A8               	addwf	0+(?___lwdiv)+02h
  8720                           
  8721  04D7  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  8722  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
  8723  04DD  1303               	bcf	status, 6	;RP1=0, select bank0
  8724  04DE  0826               	movf	(0+(?___lwdiv)),w
  8725  04DF  3E0F               	addlw	low(0Fh)
  8726  04E0  1683               	bsf	status, 5	;RP0=1, select bank1
  8727  04E1  1303               	bcf	status, 6	;RP1=0, select bank1
  8728  04E2  00B8               	movwf	(_IRdistance)^080h	;volatile
  8729  04E3  1283               	bcf	status, 5	;RP0=0, select bank0
  8730  04E4  1303               	bcf	status, 6	;RP1=0, select bank0
  8731  04E5  0827               	movf	(1+(?___lwdiv)),w
  8732  04E6  1803               	skipnc
  8733  04E7  3E01               	addlw	1
  8734  04E8  3E00               	addlw	high(0Fh)
  8735  04E9  1683               	bsf	status, 5	;RP0=1, select bank1
  8736  04EA  1303               	bcf	status, 6	;RP1=0, select bank1
  8737  04EB  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8738                           	line	98
  8739                           ;infrared.c: 98: }
  8740  04EC  2EC1               	goto	l3046
  8741                           	line	99
  8742                           	
  8743  04ED                     l3033:	
  8744                           	
  8745  04ED                     l11198:	
  8746                           ;infrared.c: 99: else if (adcVal >= 170 && adcVal < 213)
  8747  04ED  3000               	movlw	high(0AAh)
  8748  04EE  1283               	bcf	status, 5	;RP0=0, select bank0
  8749  04EF  026B               	subwf	(_adcVal+1),w	;volatile
  8750  04F0  30AA               	movlw	low(0AAh)
  8751  04F1  1903               	skipnz
  8752  04F2  026A               	subwf	(_adcVal),w	;volatile
  8753  04F3  1C03               	skipc
  8754  04F4  2CF6               	goto	u4661
  8755  04F5  2CF7               	goto	u4660
  8756  04F6                     u4661:
  8757  04F6  2D3A               	goto	l11204
  8758  04F7                     u4660:
  8759                           	
  8760  04F7                     l11200:	
  8761  04F7  3000               	movlw	high(0D5h)
  8762  04F8  026B               	subwf	(_adcVal+1),w	;volatile
  8763  04F9  30D5               	movlw	low(0D5h)
  8764  04FA  1903               	skipnz
  8765  04FB  026A               	subwf	(_adcVal),w	;volatile
  8766  04FC  1803               	skipnc
  8767  04FD  2CFF               	goto	u4671
  8768  04FE  2D00               	goto	u4670
  8769  04FF                     u4671:
  8770  04FF  2D3A               	goto	l11204
  8771  0500                     u4670:
  8772                           	line	101
  8773                           	
  8774  0500                     l11202:	
  8775                           ;infrared.c: 100: {
  8776                           ;infrared.c: 101: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  8777  0500  302B               	movlw	low(02Bh)
  8778  0501  00A6               	movwf	(?___lwdiv)
  8779  0502  3000               	movlw	high(02Bh)
  8780  0503  00A7               	movwf	((?___lwdiv))+1
  8781  0504  096A               	comf	(_adcVal),w	;volatile
  8782  0505  00AE               	movwf	(??_ADCconvert+0)+0
  8783  0506  096B               	comf	(_adcVal+1),w	;volatile
  8784  0507  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8785  0508  0AAE               	incf	(??_ADCconvert+0)+0,f
  8786  0509  1903               	skipnz
  8787  050A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8788  050B  082E               	movf	0+(??_ADCconvert+0)+0,w
  8789  050C  3ED5               	addlw	low(0D5h)
  8790  050D  00A0               	movwf	(?___wmul)
  8791  050E  082F               	movf	1+(??_ADCconvert+0)+0,w
  8792  050F  1803               	skipnc
  8793  0510  3E01               	addlw	1
  8794  0511  3E00               	addlw	high(0D5h)
  8795  0512  00A1               	movwf	1+(?___wmul)
  8796  0513  300A               	movlw	low(0Ah)
  8797  0514  00A2               	movwf	0+(?___wmul)+02h
  8798  0515  3000               	movlw	high(0Ah)
  8799  0516  00A3               	movwf	(0+(?___wmul)+02h)+1
  8800  0517  160A  118A  217B   	fcall	___wmul
              120A  118A         
  8801  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  8802  051D  1303               	bcf	status, 6	;RP1=0, select bank0
  8803  051E  0821               	movf	(1+(?___wmul)),w
  8804  051F  01A9               	clrf	1+(?___lwdiv)+02h
  8805  0520  07A9               	addwf	1+(?___lwdiv)+02h
  8806  0521  0820               	movf	(0+(?___wmul)),w
  8807  0522  01A8               	clrf	0+(?___lwdiv)+02h
  8808  0523  07A8               	addwf	0+(?___lwdiv)+02h
  8809                           
  8810  0524  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  8811  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  8812  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  8813  052B  0826               	movf	(0+(?___lwdiv)),w
  8814  052C  3E14               	addlw	low(014h)
  8815  052D  1683               	bsf	status, 5	;RP0=1, select bank1
  8816  052E  1303               	bcf	status, 6	;RP1=0, select bank1
  8817  052F  00B8               	movwf	(_IRdistance)^080h	;volatile
  8818  0530  1283               	bcf	status, 5	;RP0=0, select bank0
  8819  0531  1303               	bcf	status, 6	;RP1=0, select bank0
  8820  0532  0827               	movf	(1+(?___lwdiv)),w
  8821  0533  1803               	skipnc
  8822  0534  3E01               	addlw	1
  8823  0535  3E00               	addlw	high(014h)
  8824  0536  1683               	bsf	status, 5	;RP0=1, select bank1
  8825  0537  1303               	bcf	status, 6	;RP1=0, select bank1
  8826  0538  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8827                           	line	102
  8828                           ;infrared.c: 102: }
  8829  0539  2EC1               	goto	l3046
  8830                           	line	103
  8831                           	
  8832  053A                     l3035:	
  8833                           	
  8834  053A                     l11204:	
  8835                           ;infrared.c: 103: else if (adcVal >= 128 && adcVal < 170)
  8836  053A  3000               	movlw	high(080h)
  8837  053B  1283               	bcf	status, 5	;RP0=0, select bank0
  8838  053C  026B               	subwf	(_adcVal+1),w	;volatile
  8839  053D  3080               	movlw	low(080h)
  8840  053E  1903               	skipnz
  8841  053F  026A               	subwf	(_adcVal),w	;volatile
  8842  0540  1C03               	skipc
  8843  0541  2D43               	goto	u4681
  8844  0542  2D44               	goto	u4680
  8845  0543                     u4681:
  8846  0543  2D87               	goto	l11210
  8847  0544                     u4680:
  8848                           	
  8849  0544                     l11206:	
  8850  0544  3000               	movlw	high(0AAh)
  8851  0545  026B               	subwf	(_adcVal+1),w	;volatile
  8852  0546  30AA               	movlw	low(0AAh)
  8853  0547  1903               	skipnz
  8854  0548  026A               	subwf	(_adcVal),w	;volatile
  8855  0549  1803               	skipnc
  8856  054A  2D4C               	goto	u4691
  8857  054B  2D4D               	goto	u4690
  8858  054C                     u4691:
  8859  054C  2D87               	goto	l11210
  8860  054D                     u4690:
  8861                           	line	105
  8862                           	
  8863  054D                     l11208:	
  8864                           ;infrared.c: 104: {
  8865                           ;infrared.c: 105: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  8866  054D  302A               	movlw	low(02Ah)
  8867  054E  00A6               	movwf	(?___lwdiv)
  8868  054F  3000               	movlw	high(02Ah)
  8869  0550  00A7               	movwf	((?___lwdiv))+1
  8870  0551  096A               	comf	(_adcVal),w	;volatile
  8871  0552  00AE               	movwf	(??_ADCconvert+0)+0
  8872  0553  096B               	comf	(_adcVal+1),w	;volatile
  8873  0554  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8874  0555  0AAE               	incf	(??_ADCconvert+0)+0,f
  8875  0556  1903               	skipnz
  8876  0557  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8877  0558  082E               	movf	0+(??_ADCconvert+0)+0,w
  8878  0559  3EAA               	addlw	low(0AAh)
  8879  055A  00A0               	movwf	(?___wmul)
  8880  055B  082F               	movf	1+(??_ADCconvert+0)+0,w
  8881  055C  1803               	skipnc
  8882  055D  3E01               	addlw	1
  8883  055E  3E00               	addlw	high(0AAh)
  8884  055F  00A1               	movwf	1+(?___wmul)
  8885  0560  300A               	movlw	low(0Ah)
  8886  0561  00A2               	movwf	0+(?___wmul)+02h
  8887  0562  3000               	movlw	high(0Ah)
  8888  0563  00A3               	movwf	(0+(?___wmul)+02h)+1
  8889  0564  160A  118A  217B   	fcall	___wmul
              120A  118A         
  8890  0569  1283               	bcf	status, 5	;RP0=0, select bank0
  8891  056A  1303               	bcf	status, 6	;RP1=0, select bank0
  8892  056B  0821               	movf	(1+(?___wmul)),w
  8893  056C  01A9               	clrf	1+(?___lwdiv)+02h
  8894  056D  07A9               	addwf	1+(?___lwdiv)+02h
  8895  056E  0820               	movf	(0+(?___wmul)),w
  8896  056F  01A8               	clrf	0+(?___lwdiv)+02h
  8897  0570  07A8               	addwf	0+(?___lwdiv)+02h
  8898                           
  8899  0571  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  8900  0576  1283               	bcf	status, 5	;RP0=0, select bank0
  8901  0577  1303               	bcf	status, 6	;RP1=0, select bank0
  8902  0578  0826               	movf	(0+(?___lwdiv)),w
  8903  0579  3E1E               	addlw	low(01Eh)
  8904  057A  1683               	bsf	status, 5	;RP0=1, select bank1
  8905  057B  1303               	bcf	status, 6	;RP1=0, select bank1
  8906  057C  00B8               	movwf	(_IRdistance)^080h	;volatile
  8907  057D  1283               	bcf	status, 5	;RP0=0, select bank0
  8908  057E  1303               	bcf	status, 6	;RP1=0, select bank0
  8909  057F  0827               	movf	(1+(?___lwdiv)),w
  8910  0580  1803               	skipnc
  8911  0581  3E01               	addlw	1
  8912  0582  3E00               	addlw	high(01Eh)
  8913  0583  1683               	bsf	status, 5	;RP0=1, select bank1
  8914  0584  1303               	bcf	status, 6	;RP1=0, select bank1
  8915  0585  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  8916                           	line	106
  8917                           ;infrared.c: 106: }
  8918  0586  2EC1               	goto	l3046
  8919                           	line	107
  8920                           	
  8921  0587                     l3037:	
  8922                           	
  8923  0587                     l11210:	
  8924                           ;infrared.c: 107: else if (adcVal >= 107 && adcVal < 128)
  8925  0587  3000               	movlw	high(06Bh)
  8926  0588  1283               	bcf	status, 5	;RP0=0, select bank0
  8927  0589  026B               	subwf	(_adcVal+1),w	;volatile
  8928  058A  306B               	movlw	low(06Bh)
  8929  058B  1903               	skipnz
  8930  058C  026A               	subwf	(_adcVal),w	;volatile
  8931  058D  1C03               	skipc
  8932  058E  2D90               	goto	u4701
  8933  058F  2D91               	goto	u4700
  8934  0590                     u4701:
  8935  0590  2DD4               	goto	l11216
  8936  0591                     u4700:
  8937                           	
  8938  0591                     l11212:	
  8939  0591  3000               	movlw	high(080h)
  8940  0592  026B               	subwf	(_adcVal+1),w	;volatile
  8941  0593  3080               	movlw	low(080h)
  8942  0594  1903               	skipnz
  8943  0595  026A               	subwf	(_adcVal),w	;volatile
  8944  0596  1803               	skipnc
  8945  0597  2D99               	goto	u4711
  8946  0598  2D9A               	goto	u4710
  8947  0599                     u4711:
  8948  0599  2DD4               	goto	l11216
  8949  059A                     u4710:
  8950                           	line	109
  8951                           	
  8952  059A                     l11214:	
  8953                           ;infrared.c: 108: {
  8954                           ;infrared.c: 109: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  8955  059A  3015               	movlw	low(015h)
  8956  059B  00A6               	movwf	(?___lwdiv)
  8957  059C  3000               	movlw	high(015h)
  8958  059D  00A7               	movwf	((?___lwdiv))+1
  8959  059E  096A               	comf	(_adcVal),w	;volatile
  8960  059F  00AE               	movwf	(??_ADCconvert+0)+0
  8961  05A0  096B               	comf	(_adcVal+1),w	;volatile
  8962  05A1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8963  05A2  0AAE               	incf	(??_ADCconvert+0)+0,f
  8964  05A3  1903               	skipnz
  8965  05A4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8966  05A5  082E               	movf	0+(??_ADCconvert+0)+0,w
  8967  05A6  3E80               	addlw	low(080h)
  8968  05A7  00A0               	movwf	(?___wmul)
  8969  05A8  082F               	movf	1+(??_ADCconvert+0)+0,w
  8970  05A9  1803               	skipnc
  8971  05AA  3E01               	addlw	1
  8972  05AB  3E00               	addlw	high(080h)
  8973  05AC  00A1               	movwf	1+(?___wmul)
  8974  05AD  300A               	movlw	low(0Ah)
  8975  05AE  00A2               	movwf	0+(?___wmul)+02h
  8976  05AF  3000               	movlw	high(0Ah)
  8977  05B0  00A3               	movwf	(0+(?___wmul)+02h)+1
  8978  05B1  160A  118A  217B   	fcall	___wmul
              120A  118A         
  8979  05B6  1283               	bcf	status, 5	;RP0=0, select bank0
  8980  05B7  1303               	bcf	status, 6	;RP1=0, select bank0
  8981  05B8  0821               	movf	(1+(?___wmul)),w
  8982  05B9  01A9               	clrf	1+(?___lwdiv)+02h
  8983  05BA  07A9               	addwf	1+(?___lwdiv)+02h
  8984  05BB  0820               	movf	(0+(?___wmul)),w
  8985  05BC  01A8               	clrf	0+(?___lwdiv)+02h
  8986  05BD  07A8               	addwf	0+(?___lwdiv)+02h
  8987                           
  8988  05BE  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  8989  05C3  1283               	bcf	status, 5	;RP0=0, select bank0
  8990  05C4  1303               	bcf	status, 6	;RP1=0, select bank0
  8991  05C5  0826               	movf	(0+(?___lwdiv)),w
  8992  05C6  3E28               	addlw	low(028h)
  8993  05C7  1683               	bsf	status, 5	;RP0=1, select bank1
  8994  05C8  1303               	bcf	status, 6	;RP1=0, select bank1
  8995  05C9  00B8               	movwf	(_IRdistance)^080h	;volatile
  8996  05CA  1283               	bcf	status, 5	;RP0=0, select bank0
  8997  05CB  1303               	bcf	status, 6	;RP1=0, select bank0
  8998  05CC  0827               	movf	(1+(?___lwdiv)),w
  8999  05CD  1803               	skipnc
  9000  05CE  3E01               	addlw	1
  9001  05CF  3E00               	addlw	high(028h)
  9002  05D0  1683               	bsf	status, 5	;RP0=1, select bank1
  9003  05D1  1303               	bcf	status, 6	;RP1=0, select bank1
  9004  05D2  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9005                           	line	110
  9006                           ;infrared.c: 110: }
  9007  05D3  2EC1               	goto	l3046
  9008                           	line	111
  9009                           	
  9010  05D4                     l3039:	
  9011                           	
  9012  05D4                     l11216:	
  9013                           ;infrared.c: 111: else if (adcVal >= 77 && adcVal < 107)
  9014  05D4  3000               	movlw	high(04Dh)
  9015  05D5  1283               	bcf	status, 5	;RP0=0, select bank0
  9016  05D6  026B               	subwf	(_adcVal+1),w	;volatile
  9017  05D7  304D               	movlw	low(04Dh)
  9018  05D8  1903               	skipnz
  9019  05D9  026A               	subwf	(_adcVal),w	;volatile
  9020  05DA  1C03               	skipc
  9021  05DB  2DDD               	goto	u4721
  9022  05DC  2DDE               	goto	u4720
  9023  05DD                     u4721:
  9024  05DD  2E21               	goto	l11222
  9025  05DE                     u4720:
  9026                           	
  9027  05DE                     l11218:	
  9028  05DE  3000               	movlw	high(06Bh)
  9029  05DF  026B               	subwf	(_adcVal+1),w	;volatile
  9030  05E0  306B               	movlw	low(06Bh)
  9031  05E1  1903               	skipnz
  9032  05E2  026A               	subwf	(_adcVal),w	;volatile
  9033  05E3  1803               	skipnc
  9034  05E4  2DE6               	goto	u4731
  9035  05E5  2DE7               	goto	u4730
  9036  05E6                     u4731:
  9037  05E6  2E21               	goto	l11222
  9038  05E7                     u4730:
  9039                           	line	113
  9040                           	
  9041  05E7                     l11220:	
  9042                           ;infrared.c: 112: {
  9043                           ;infrared.c: 113: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  9044  05E7  301E               	movlw	low(01Eh)
  9045  05E8  00A6               	movwf	(?___lwdiv)
  9046  05E9  3000               	movlw	high(01Eh)
  9047  05EA  00A7               	movwf	((?___lwdiv))+1
  9048  05EB  096A               	comf	(_adcVal),w	;volatile
  9049  05EC  00AE               	movwf	(??_ADCconvert+0)+0
  9050  05ED  096B               	comf	(_adcVal+1),w	;volatile
  9051  05EE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9052  05EF  0AAE               	incf	(??_ADCconvert+0)+0,f
  9053  05F0  1903               	skipnz
  9054  05F1  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9055  05F2  082E               	movf	0+(??_ADCconvert+0)+0,w
  9056  05F3  3E6B               	addlw	low(06Bh)
  9057  05F4  00A0               	movwf	(?___wmul)
  9058  05F5  082F               	movf	1+(??_ADCconvert+0)+0,w
  9059  05F6  1803               	skipnc
  9060  05F7  3E01               	addlw	1
  9061  05F8  3E00               	addlw	high(06Bh)
  9062  05F9  00A1               	movwf	1+(?___wmul)
  9063  05FA  300A               	movlw	low(0Ah)
  9064  05FB  00A2               	movwf	0+(?___wmul)+02h
  9065  05FC  3000               	movlw	high(0Ah)
  9066  05FD  00A3               	movwf	(0+(?___wmul)+02h)+1
  9067  05FE  160A  118A  217B   	fcall	___wmul
              120A  118A         
  9068  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  9069  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  9070  0605  0821               	movf	(1+(?___wmul)),w
  9071  0606  01A9               	clrf	1+(?___lwdiv)+02h
  9072  0607  07A9               	addwf	1+(?___lwdiv)+02h
  9073  0608  0820               	movf	(0+(?___wmul)),w
  9074  0609  01A8               	clrf	0+(?___lwdiv)+02h
  9075  060A  07A8               	addwf	0+(?___lwdiv)+02h
  9076                           
  9077  060B  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  9078  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  9079  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  9080  0612  0826               	movf	(0+(?___lwdiv)),w
  9081  0613  3E32               	addlw	low(032h)
  9082  0614  1683               	bsf	status, 5	;RP0=1, select bank1
  9083  0615  1303               	bcf	status, 6	;RP1=0, select bank1
  9084  0616  00B8               	movwf	(_IRdistance)^080h	;volatile
  9085  0617  1283               	bcf	status, 5	;RP0=0, select bank0
  9086  0618  1303               	bcf	status, 6	;RP1=0, select bank0
  9087  0619  0827               	movf	(1+(?___lwdiv)),w
  9088  061A  1803               	skipnc
  9089  061B  3E01               	addlw	1
  9090  061C  3E00               	addlw	high(032h)
  9091  061D  1683               	bsf	status, 5	;RP0=1, select bank1
  9092  061E  1303               	bcf	status, 6	;RP1=0, select bank1
  9093  061F  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9094                           	line	114
  9095                           ;infrared.c: 114: }
  9096  0620  2EC1               	goto	l3046
  9097                           	line	115
  9098                           	
  9099  0621                     l3041:	
  9100                           	
  9101  0621                     l11222:	
  9102                           ;infrared.c: 115: else if (adcVal >= 56 && adcVal < 77)
  9103  0621  3000               	movlw	high(038h)
  9104  0622  1283               	bcf	status, 5	;RP0=0, select bank0
  9105  0623  026B               	subwf	(_adcVal+1),w	;volatile
  9106  0624  3038               	movlw	low(038h)
  9107  0625  1903               	skipnz
  9108  0626  026A               	subwf	(_adcVal),w	;volatile
  9109  0627  1C03               	skipc
  9110  0628  2E2A               	goto	u4741
  9111  0629  2E2B               	goto	u4740
  9112  062A                     u4741:
  9113  062A  2E6E               	goto	l11228
  9114  062B                     u4740:
  9115                           	
  9116  062B                     l11224:	
  9117  062B  3000               	movlw	high(04Dh)
  9118  062C  026B               	subwf	(_adcVal+1),w	;volatile
  9119  062D  304D               	movlw	low(04Dh)
  9120  062E  1903               	skipnz
  9121  062F  026A               	subwf	(_adcVal),w	;volatile
  9122  0630  1803               	skipnc
  9123  0631  2E33               	goto	u4751
  9124  0632  2E34               	goto	u4750
  9125  0633                     u4751:
  9126  0633  2E6E               	goto	l11228
  9127  0634                     u4750:
  9128                           	line	117
  9129                           	
  9130  0634                     l11226:	
  9131                           ;infrared.c: 116: {
  9132                           ;infrared.c: 117: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  9133  0634  3015               	movlw	low(015h)
  9134  0635  00A6               	movwf	(?___lwdiv)
  9135  0636  3000               	movlw	high(015h)
  9136  0637  00A7               	movwf	((?___lwdiv))+1
  9137  0638  096A               	comf	(_adcVal),w	;volatile
  9138  0639  00AE               	movwf	(??_ADCconvert+0)+0
  9139  063A  096B               	comf	(_adcVal+1),w	;volatile
  9140  063B  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9141  063C  0AAE               	incf	(??_ADCconvert+0)+0,f
  9142  063D  1903               	skipnz
  9143  063E  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9144  063F  082E               	movf	0+(??_ADCconvert+0)+0,w
  9145  0640  3E4D               	addlw	low(04Dh)
  9146  0641  00A0               	movwf	(?___wmul)
  9147  0642  082F               	movf	1+(??_ADCconvert+0)+0,w
  9148  0643  1803               	skipnc
  9149  0644  3E01               	addlw	1
  9150  0645  3E00               	addlw	high(04Dh)
  9151  0646  00A1               	movwf	1+(?___wmul)
  9152  0647  300A               	movlw	low(0Ah)
  9153  0648  00A2               	movwf	0+(?___wmul)+02h
  9154  0649  3000               	movlw	high(0Ah)
  9155  064A  00A3               	movwf	(0+(?___wmul)+02h)+1
  9156  064B  160A  118A  217B   	fcall	___wmul
              120A  118A         
  9157  0650  1283               	bcf	status, 5	;RP0=0, select bank0
  9158  0651  1303               	bcf	status, 6	;RP1=0, select bank0
  9159  0652  0821               	movf	(1+(?___wmul)),w
  9160  0653  01A9               	clrf	1+(?___lwdiv)+02h
  9161  0654  07A9               	addwf	1+(?___lwdiv)+02h
  9162  0655  0820               	movf	(0+(?___wmul)),w
  9163  0656  01A8               	clrf	0+(?___lwdiv)+02h
  9164  0657  07A8               	addwf	0+(?___lwdiv)+02h
  9165                           
  9166  0658  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  9167  065D  1283               	bcf	status, 5	;RP0=0, select bank0
  9168  065E  1303               	bcf	status, 6	;RP1=0, select bank0
  9169  065F  0826               	movf	(0+(?___lwdiv)),w
  9170  0660  3E3C               	addlw	low(03Ch)
  9171  0661  1683               	bsf	status, 5	;RP0=1, select bank1
  9172  0662  1303               	bcf	status, 6	;RP1=0, select bank1
  9173  0663  00B8               	movwf	(_IRdistance)^080h	;volatile
  9174  0664  1283               	bcf	status, 5	;RP0=0, select bank0
  9175  0665  1303               	bcf	status, 6	;RP1=0, select bank0
  9176  0666  0827               	movf	(1+(?___lwdiv)),w
  9177  0667  1803               	skipnc
  9178  0668  3E01               	addlw	1
  9179  0669  3E00               	addlw	high(03Ch)
  9180  066A  1683               	bsf	status, 5	;RP0=1, select bank1
  9181  066B  1303               	bcf	status, 6	;RP1=0, select bank1
  9182  066C  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9183                           	line	118
  9184                           ;infrared.c: 118: }
  9185  066D  2EC1               	goto	l3046
  9186                           	line	119
  9187                           	
  9188  066E                     l3043:	
  9189                           	
  9190  066E                     l11228:	
  9191                           ;infrared.c: 119: else if (adcVal >= 43 && adcVal < 56)
  9192  066E  3000               	movlw	high(02Bh)
  9193  066F  1283               	bcf	status, 5	;RP0=0, select bank0
  9194  0670  026B               	subwf	(_adcVal+1),w	;volatile
  9195  0671  302B               	movlw	low(02Bh)
  9196  0672  1903               	skipnz
  9197  0673  026A               	subwf	(_adcVal),w	;volatile
  9198  0674  1C03               	skipc
  9199  0675  2E77               	goto	u4761
  9200  0676  2E78               	goto	u4760
  9201  0677                     u4761:
  9202  0677  2EC1               	goto	l3046
  9203  0678                     u4760:
  9204                           	
  9205  0678                     l11230:	
  9206  0678  3000               	movlw	high(038h)
  9207  0679  026B               	subwf	(_adcVal+1),w	;volatile
  9208  067A  3038               	movlw	low(038h)
  9209  067B  1903               	skipnz
  9210  067C  026A               	subwf	(_adcVal),w	;volatile
  9211  067D  1803               	skipnc
  9212  067E  2E80               	goto	u4771
  9213  067F  2E81               	goto	u4770
  9214  0680                     u4771:
  9215  0680  2EC1               	goto	l3046
  9216  0681                     u4770:
  9217                           	line	121
  9218                           	
  9219  0681                     l11232:	
  9220                           ;infrared.c: 120: {
  9221                           ;infrared.c: 121: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  9222  0681  300D               	movlw	low(0Dh)
  9223  0682  00A6               	movwf	(?___lwdiv)
  9224  0683  3000               	movlw	high(0Dh)
  9225  0684  00A7               	movwf	((?___lwdiv))+1
  9226  0685  096A               	comf	(_adcVal),w	;volatile
  9227  0686  00AE               	movwf	(??_ADCconvert+0)+0
  9228  0687  096B               	comf	(_adcVal+1),w	;volatile
  9229  0688  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9230  0689  0AAE               	incf	(??_ADCconvert+0)+0,f
  9231  068A  1903               	skipnz
  9232  068B  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9233  068C  082E               	movf	0+(??_ADCconvert+0)+0,w
  9234  068D  3E38               	addlw	low(038h)
  9235  068E  00A0               	movwf	(?___wmul)
  9236  068F  082F               	movf	1+(??_ADCconvert+0)+0,w
  9237  0690  1803               	skipnc
  9238  0691  3E01               	addlw	1
  9239  0692  3E00               	addlw	high(038h)
  9240  0693  00A1               	movwf	1+(?___wmul)
  9241  0694  300A               	movlw	low(0Ah)
  9242  0695  00A2               	movwf	0+(?___wmul)+02h
  9243  0696  3000               	movlw	high(0Ah)
  9244  0697  00A3               	movwf	(0+(?___wmul)+02h)+1
  9245  0698  160A  118A  217B   	fcall	___wmul
              120A  118A         
  9246  069D  1283               	bcf	status, 5	;RP0=0, select bank0
  9247  069E  1303               	bcf	status, 6	;RP1=0, select bank0
  9248  069F  0821               	movf	(1+(?___wmul)),w
  9249  06A0  01A9               	clrf	1+(?___lwdiv)+02h
  9250  06A1  07A9               	addwf	1+(?___lwdiv)+02h
  9251  06A2  0820               	movf	(0+(?___wmul)),w
  9252  06A3  01A8               	clrf	0+(?___lwdiv)+02h
  9253  06A4  07A8               	addwf	0+(?___lwdiv)+02h
  9254                           
  9255  06A5  120A  158A  20C6   	fcall	___lwdiv
              120A  118A         
  9256  06AA  1283               	bcf	status, 5	;RP0=0, select bank0
  9257  06AB  1303               	bcf	status, 6	;RP1=0, select bank0
  9258  06AC  0826               	movf	(0+(?___lwdiv)),w
  9259  06AD  3E46               	addlw	low(046h)
  9260  06AE  1683               	bsf	status, 5	;RP0=1, select bank1
  9261  06AF  1303               	bcf	status, 6	;RP1=0, select bank1
  9262  06B0  00B8               	movwf	(_IRdistance)^080h	;volatile
  9263  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  9264  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  9265  06B3  0827               	movf	(1+(?___lwdiv)),w
  9266  06B4  1803               	skipnc
  9267  06B5  3E01               	addlw	1
  9268  06B6  3E00               	addlw	high(046h)
  9269  06B7  1683               	bsf	status, 5	;RP0=1, select bank1
  9270  06B8  1303               	bcf	status, 6	;RP1=0, select bank1
  9271  06B9  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9272  06BA  2EC1               	goto	l3046
  9273                           	line	122
  9274                           	
  9275  06BB                     l3045:	
  9276  06BB  2EC1               	goto	l3046
  9277                           	line	123
  9278                           	
  9279  06BC                     l3044:	
  9280  06BC  2EC1               	goto	l3046
  9281                           	
  9282  06BD                     l3042:	
  9283  06BD  2EC1               	goto	l3046
  9284                           	
  9285  06BE                     l3040:	
  9286  06BE  2EC1               	goto	l3046
  9287                           	
  9288  06BF                     l3038:	
  9289  06BF  2EC1               	goto	l3046
  9290                           	
  9291  06C0                     l3036:	
  9292  06C0  2EC1               	goto	l3046
  9293                           	
  9294  06C1                     l3034:	
  9295                           	
  9296  06C1                     l3046:	
  9297  06C1  0008               	return
  9298                           	opt stack 0
  9299                           GLOBAL	__end_of_ADCconvert
  9300  06C2                     	__end_of_ADCconvert:
  9301 ;; =============== function _ADCconvert ends ============
  9302                           
  9303                           	signat	_ADCconvert,88
  9304                           	global	_rotate
  9305                           psect	text1083,local,class=CODE,delta=2
  9306                           global __ptext1083
  9307  1442                     __ptext1083:
  9308                           
  9309 ;; *************** function _rotate *****************
  9310 ;; Defined at:
  9311 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  numsteps        2    3[BANK0 ] unsigned int 
  9314 ;;  direction       1    5[BANK0 ] unsigned char 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  i               2    8[BANK0 ] unsigned int 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;		None               void
  9319 ;; Registers used:
  9320 ;;		wreg, status,2, status,0, pclath, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9326 ;;      Params:         0       3       0       0       0
  9327 ;;      Locals:         0       2       0       0       0
  9328 ;;      Temps:          0       2       0       0       0
  9329 ;;      Totals:         0       7       0       0       0
  9330 ;;Total ram usage:        7 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:    4
  9333 ;; This function calls:
  9334 ;;		_spi_transfer
  9335 ;; This function is called by:
  9336 ;;		_main
  9337 ;;		_Init_Follow_IR
  9338 ;;		_calibrateIR
  9339 ;;		_robotFollow
  9340 ;;		_RightTurn
  9341 ;;		_scan360
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           psect	text1083
  9345                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9346                           	line	66
  9347                           	global	__size_of_rotate
  9348  0067                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  9349                           	
  9350  1442                     _rotate:	
  9351                           	opt	stack 3
  9352                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  9353                           	line	68
  9354                           	
  9355  1442                     l11160:	
  9356                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  9357  1442  1283               	bcf	status, 5	;RP0=0, select bank0
  9358  1443  1303               	bcf	status, 6	;RP1=0, select bank0
  9359  1444  1407               	bsf	(56/8),(56)&7
  9360  1445  1487               	bsf	(57/8),(57)&7
  9361                           	line	69
  9362                           	
  9363  1446                     l11162:	
  9364                           ;steppermotor.c: 69: if (direction == 0)
  9365  1446  08A5               	movf	(rotate@direction),f
  9366  1447  1D03               	skipz
  9367  1448  2C4A               	goto	u4611
  9368  1449  2C4B               	goto	u4610
  9369  144A                     u4611:
  9370  144A  2C52               	goto	l11166
  9371  144B                     u4610:
  9372                           	line	70
  9373                           	
  9374  144B                     l11164:	
  9375                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  9376  144B  300B               	movlw	(0Bh)
  9377  144C  160A  118A  202B   	fcall	_spi_transfer
              160A  118A         
  9378  1451  2C59               	goto	l11168
  9379                           	line	71
  9380                           	
  9381  1452                     l3749:	
  9382                           	line	72
  9383                           	
  9384  1452                     l11166:	
  9385                           ;steppermotor.c: 71: else
  9386                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  9387  1452  3009               	movlw	(09h)
  9388  1453  160A  118A  202B   	fcall	_spi_transfer
              160A  118A         
  9389  1458  2C59               	goto	l11168
  9390                           	
  9391  1459                     l3750:	
  9392                           	line	73
  9393                           	
  9394  1459                     l11168:	
  9395                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  9396  1459  1283               	bcf	status, 5	;RP0=0, select bank0
  9397  145A  1303               	bcf	status, 6	;RP1=0, select bank0
  9398  145B  1007               	bcf	(56/8),(56)&7
  9399                           	
  9400  145C                     l11170:	
  9401  145C  1087               	bcf	(57/8),(57)&7
  9402                           	line	74
  9403                           	
  9404  145D                     l11172:	
  9405                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  9406  145D  01A8               	clrf	(rotate@i)
  9407  145E  01A9               	clrf	(rotate@i+1)
  9408  145F  2C8D               	goto	l3751
  9409                           	line	75
  9410                           	
  9411  1460                     l3752:	
  9412                           	line	76
  9413                           ;steppermotor.c: 75: {
  9414                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  9415  1460  1507               	bsf	(58/8),(58)&7
  9416  1461  0000               	nop
  9417  1462  1283               	bcf	status, 5	;RP0=0, select bank0
  9418  1463  1303               	bcf	status, 6	;RP1=0, select bank0
  9419  1464  1107               	bcf	(58/8),(58)&7
  9420                           	line	77
  9421                           	
  9422  1465                     l11174:	
  9423                           ;steppermotor.c: 77: if (direction)
  9424  1465  0825               	movf	(rotate@direction),w
  9425  1466  1D03               	skipz
  9426  1467  2C69               	goto	u4620
  9427  1468  2C72               	goto	l11178
  9428  1469                     u4620:
  9429                           	line	78
  9430                           	
  9431  1469                     l11176:	
  9432                           ;steppermotor.c: 78: totalSteps++;
  9433  1469  3001               	movlw	low(01h)
  9434  146A  1683               	bsf	status, 5	;RP0=1, select bank1
  9435  146B  1303               	bcf	status, 6	;RP1=0, select bank1
  9436  146C  07CA               	addwf	(_totalSteps)^080h,f
  9437  146D  1803               	skipnc
  9438  146E  0ACB               	incf	(_totalSteps+1)^080h,f
  9439  146F  3000               	movlw	high(01h)
  9440  1470  07CB               	addwf	(_totalSteps+1)^080h,f
  9441  1471  2C7A               	goto	l3754
  9442                           	line	79
  9443                           	
  9444  1472                     l3753:	
  9445                           	line	80
  9446                           	
  9447  1472                     l11178:	
  9448                           ;steppermotor.c: 79: else
  9449                           ;steppermotor.c: 80: totalSteps--;
  9450  1472  30FF               	movlw	low(-1)
  9451  1473  1683               	bsf	status, 5	;RP0=1, select bank1
  9452  1474  1303               	bcf	status, 6	;RP1=0, select bank1
  9453  1475  07CA               	addwf	(_totalSteps)^080h,f
  9454  1476  1803               	skipnc
  9455  1477  0ACB               	incf	(_totalSteps+1)^080h,f
  9456  1478  30FF               	movlw	high(-1)
  9457  1479  07CB               	addwf	(_totalSteps+1)^080h,f
  9458                           	
  9459  147A                     l3754:	
  9460                           	line	81
  9461                           ;steppermotor.c: 81: _delay((unsigned long)((15)*(20000000/4000.0)));
  9462                           	opt asmopt_off
  9463  147A  3062               movlw	98
  9464  147B  1283               	bcf	status, 5	;RP0=0, select bank0
  9465  147C  1303               	bcf	status, 6	;RP1=0, select bank0
  9466  147D  00A7               movwf	((??_rotate+0)+0+1),f
  9467  147E  3065               	movlw	101
  9468  147F  00A6               movwf	((??_rotate+0)+0),f
  9469  1480                     u5437:
  9470  1480  0BA6               	decfsz	((??_rotate+0)+0),f
  9471  1481  2C80               	goto	u5437
  9472  1482  0BA7               	decfsz	((??_rotate+0)+0+1),f
  9473  1483  2C80               	goto	u5437
  9474  1484  2C85               	nop2
  9475                           opt asmopt_on
  9476                           
  9477                           	line	74
  9478  1485  3001               	movlw	low(01h)
  9479  1486  1283               	bcf	status, 5	;RP0=0, select bank0
  9480  1487  1303               	bcf	status, 6	;RP1=0, select bank0
  9481  1488  07A8               	addwf	(rotate@i),f
  9482  1489  1803               	skipnc
  9483  148A  0AA9               	incf	(rotate@i+1),f
  9484  148B  3000               	movlw	high(01h)
  9485  148C  07A9               	addwf	(rotate@i+1),f
  9486                           	
  9487  148D                     l3751:	
  9488  148D  0824               	movf	(rotate@numsteps+1),w
  9489  148E  0229               	subwf	(rotate@i+1),w
  9490  148F  1D03               	skipz
  9491  1490  2C93               	goto	u4635
  9492  1491  0823               	movf	(rotate@numsteps),w
  9493  1492  0228               	subwf	(rotate@i),w
  9494  1493                     u4635:
  9495  1493  1C03               	skipc
  9496  1494  2C96               	goto	u4631
  9497  1495  2C97               	goto	u4630
  9498  1496                     u4631:
  9499  1496  2C60               	goto	l3752
  9500  1497                     u4630:
  9501                           	
  9502  1497                     l3755:	
  9503                           	line	83
  9504                           ;steppermotor.c: 82: }
  9505                           ;steppermotor.c: 83: RC0 = 1; RC1 = 1;;
  9506  1497  1407               	bsf	(56/8),(56)&7
  9507  1498  1487               	bsf	(57/8),(57)&7
  9508                           	line	84
  9509                           	
  9510  1499                     l11180:	
  9511                           ;steppermotor.c: 84: spi_transfer(0b00000000);
  9512  1499  3000               	movlw	(0)
  9513  149A  160A  118A  202B   	fcall	_spi_transfer
              160A  118A         
  9514                           	line	85
  9515                           	
  9516  149F                     l11182:	
  9517                           ;steppermotor.c: 85: RC0 = 0; RC1 = 0;;
  9518  149F  1283               	bcf	status, 5	;RP0=0, select bank0
  9519  14A0  1303               	bcf	status, 6	;RP1=0, select bank0
  9520  14A1  1007               	bcf	(56/8),(56)&7
  9521                           	
  9522  14A2                     l11184:	
  9523  14A2  1087               	bcf	(57/8),(57)&7
  9524                           	line	86
  9525                           	
  9526  14A3                     l11186:	
  9527                           ;steppermotor.c: 86: RC2 = 1; _nop(); RC2 = 0;;
  9528  14A3  1507               	bsf	(58/8),(58)&7
  9529                           	
  9530  14A4                     l11188:	
  9531  14A4  0000               	nop
  9532                           	
  9533  14A5                     l11190:	
  9534  14A5  1283               	bcf	status, 5	;RP0=0, select bank0
  9535  14A6  1303               	bcf	status, 6	;RP1=0, select bank0
  9536  14A7  1107               	bcf	(58/8),(58)&7
  9537                           	line	87
  9538                           	
  9539  14A8                     l3756:	
  9540  14A8  0008               	return
  9541                           	opt stack 0
  9542                           GLOBAL	__end_of_rotate
  9543  14A9                     	__end_of_rotate:
  9544 ;; =============== function _rotate ends ============
  9545                           
  9546                           	signat	_rotate,8312
  9547                           	global	_RobotDrive
  9548                           psect	text1084,local,class=CODE,delta=2
  9549                           global __ptext1084
  9550  12ED                     __ptext1084:
  9551                           
  9552 ;; *************** function _RobotDrive *****************
  9553 ;; Defined at:
  9554 ;;		line 116 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  speed           2   15[BANK0 ] int 
  9557 ;;  radius          2   17[BANK0 ] int 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  radiushighBy    1   23[BANK0 ] unsigned char 
  9560 ;;  radiuslowByt    1   22[BANK0 ] unsigned char 
  9561 ;;  speedhighByt    1   21[BANK0 ] unsigned char 
  9562 ;;  speedlowByte    1   20[BANK0 ] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;		None               void
  9565 ;; Registers used:
  9566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9572 ;;      Params:         0       4       0       0       0
  9573 ;;      Locals:         0       4       0       0       0
  9574 ;;      Temps:          0       1       0       0       0
  9575 ;;      Totals:         0       9       0       0       0
  9576 ;;Total ram usage:        9 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; Hardware stack levels required when called:    4
  9579 ;; This function calls:
  9580 ;;		_ser_putch
  9581 ;; This function is called by:
  9582 ;;		_main
  9583 ;;		_robotFollow
  9584 ;;		_robot_turnRight
  9585 ;;		_robotMoveSpeed
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           psect	text1084
  9589                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9590                           	line	116
  9591                           	global	__size_of_RobotDrive
  9592  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  9593                           	
  9594  12ED                     _RobotDrive:	
  9595                           	opt	stack 2
  9596                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9597                           	line	118
  9598                           	
  9599  12ED                     l11144:	
  9600                           ;robot.c: 118: unsigned char speedlowByte = (unsigned char)(speed);
  9601  12ED  1283               	bcf	status, 5	;RP0=0, select bank0
  9602  12EE  1303               	bcf	status, 6	;RP1=0, select bank0
  9603  12EF  082F               	movf	(RobotDrive@speed),w
  9604  12F0  00B3               	movwf	(??_RobotDrive+0)+0
  9605  12F1  0833               	movf	(??_RobotDrive+0)+0,w
  9606  12F2  00B4               	movwf	(RobotDrive@speedlowByte)
  9607                           	line	119
  9608                           	
  9609  12F3                     l11146:	
  9610                           ;robot.c: 119: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  9611  12F3  0830               	movf	(RobotDrive@speed+1),w
  9612  12F4  00B3               	movwf	(??_RobotDrive+0)+0
  9613  12F5  0833               	movf	(??_RobotDrive+0)+0,w
  9614  12F6  00B5               	movwf	(RobotDrive@speedhighByte)
  9615                           	line	120
  9616                           	
  9617  12F7                     l11148:	
  9618                           ;robot.c: 120: unsigned char radiuslowByte = (unsigned char)(radius);
  9619  12F7  0831               	movf	(RobotDrive@radius),w
  9620  12F8  00B3               	movwf	(??_RobotDrive+0)+0
  9621  12F9  0833               	movf	(??_RobotDrive+0)+0,w
  9622  12FA  00B6               	movwf	(RobotDrive@radiuslowByte)
  9623                           	line	121
  9624                           ;robot.c: 121: unsigned char radiushighByte = (unsigned char)(radius >> 8);
  9625  12FB  0832               	movf	(RobotDrive@radius+1),w
  9626  12FC  00B3               	movwf	(??_RobotDrive+0)+0
  9627  12FD  0833               	movf	(??_RobotDrive+0)+0,w
  9628  12FE  00B7               	movwf	(RobotDrive@radiushighByte)
  9629                           	line	123
  9630                           	
  9631  12FF                     l11150:	
  9632                           ;robot.c: 123: ser_putch(137);
  9633  12FF  3089               	movlw	(089h)
  9634  1300  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9635                           	line	125
  9636                           	
  9637  1305                     l11152:	
  9638                           ;robot.c: 125: ser_putch(speedhighByte);
  9639  1305  1283               	bcf	status, 5	;RP0=0, select bank0
  9640  1306  1303               	bcf	status, 6	;RP1=0, select bank0
  9641  1307  0835               	movf	(RobotDrive@speedhighByte),w
  9642  1308  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9643                           	line	127
  9644                           	
  9645  130D                     l11154:	
  9646                           ;robot.c: 127: ser_putch(speedlowByte);
  9647  130D  1283               	bcf	status, 5	;RP0=0, select bank0
  9648  130E  1303               	bcf	status, 6	;RP1=0, select bank0
  9649  130F  0834               	movf	(RobotDrive@speedlowByte),w
  9650  1310  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9651                           	line	129
  9652                           	
  9653  1315                     l11156:	
  9654                           ;robot.c: 129: ser_putch(radiushighByte);
  9655  1315  1283               	bcf	status, 5	;RP0=0, select bank0
  9656  1316  1303               	bcf	status, 6	;RP1=0, select bank0
  9657  1317  0837               	movf	(RobotDrive@radiushighByte),w
  9658  1318  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9659                           	line	131
  9660                           	
  9661  131D                     l11158:	
  9662                           ;robot.c: 131: ser_putch(radiuslowByte);
  9663  131D  1283               	bcf	status, 5	;RP0=0, select bank0
  9664  131E  1303               	bcf	status, 6	;RP1=0, select bank0
  9665  131F  0836               	movf	(RobotDrive@radiuslowByte),w
  9666  1320  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9667                           	line	132
  9668                           	
  9669  1325                     l6095:	
  9670  1325  0008               	return
  9671                           	opt stack 0
  9672                           GLOBAL	__end_of_RobotDrive
  9673  1326                     	__end_of_RobotDrive:
  9674 ;; =============== function _RobotDrive ends ============
  9675                           
  9676                           	signat	_RobotDrive,8312
  9677                           	global	_robotLoadSong
  9678                           psect	text1085,local,class=CODE,delta=2
  9679                           global __ptext1085
  9680  1125                     __ptext1085:
  9681                           
  9682 ;; *************** function _robotLoadSong *****************
  9683 ;; Defined at:
  9684 ;;		line 460 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;		None
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;		None               void
  9691 ;; Registers used:
  9692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9698 ;;      Params:         0       0       0       0       0
  9699 ;;      Locals:         0       0       0       0       0
  9700 ;;      Temps:          0       0       0       0       0
  9701 ;;      Totals:         0       0       0       0       0
  9702 ;;Total ram usage:        0 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:    4
  9705 ;; This function calls:
  9706 ;;		_ser_putch
  9707 ;; This function is called by:
  9708 ;;		_main
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           psect	text1085
  9712                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9713                           	line	460
  9714                           	global	__size_of_robotLoadSong
  9715  002B                     	__size_of_robotLoadSong	equ	__end_of_robotLoadSong-_robotLoadSong
  9716                           	
  9717  1125                     _robotLoadSong:	
  9718                           	opt	stack 3
  9719                           ; Regs used in _robotLoadSong: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9720                           	line	461
  9721                           	
  9722  1125                     l11142:	
  9723                           ;robot.c: 461: ser_putch(140);
  9724  1125  308C               	movlw	(08Ch)
  9725  1126  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9726                           	line	462
  9727                           ;robot.c: 462: ser_putch(0);
  9728  112B  3000               	movlw	(0)
  9729  112C  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9730                           	line	463
  9731                           ;robot.c: 463: ser_putch(2);
  9732  1131  3002               	movlw	(02h)
  9733  1132  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9734                           	line	464
  9735                           ;robot.c: 464: ser_putch(72);
  9736  1137  3048               	movlw	(048h)
  9737  1138  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9738                           	line	465
  9739                           ;robot.c: 465: ser_putch(16);
  9740  113D  3010               	movlw	(010h)
  9741  113E  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9742                           	line	466
  9743                           ;robot.c: 466: ser_putch(84);
  9744  1143  3054               	movlw	(054h)
  9745  1144  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9746                           	line	467
  9747                           ;robot.c: 467: ser_putch(16);
  9748  1149  3010               	movlw	(010h)
  9749  114A  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9750                           	line	468
  9751                           	
  9752  114F                     l6173:	
  9753  114F  0008               	return
  9754                           	opt stack 0
  9755                           GLOBAL	__end_of_robotLoadSong
  9756  1150                     	__end_of_robotLoadSong:
  9757 ;; =============== function _robotLoadSong ends ============
  9758                           
  9759                           	signat	_robotLoadSong,88
  9760                           	global	_robo_init
  9761                           psect	text1086,local,class=CODE,delta=2
  9762                           global __ptext1086
  9763  1098                     __ptext1086:
  9764                           
  9765 ;; *************** function _robo_init *****************
  9766 ;; Defined at:
  9767 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;		None
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;		None
  9772 ;; Return value:  Size  Location     Type
  9773 ;;		None               void
  9774 ;; Registers used:
  9775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9781 ;;      Params:         0       0       0       0       0
  9782 ;;      Locals:         0       0       0       0       0
  9783 ;;      Temps:          0       0       0       0       0
  9784 ;;      Totals:         0       0       0       0       0
  9785 ;;Total ram usage:        0 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    4
  9788 ;; This function calls:
  9789 ;;		_ser_putch
  9790 ;; This function is called by:
  9791 ;;		_init
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           psect	text1086
  9795                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9796                           	line	42
  9797                           	global	__size_of_robo_init
  9798  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  9799                           	
  9800  1098                     _robo_init:	
  9801                           	opt	stack 2
  9802                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9803                           	line	43
  9804                           	
  9805  1098                     l11140:	
  9806                           ;robot.c: 43: ser_putch(128);
  9807  1098  3080               	movlw	(080h)
  9808  1099  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9809                           	line	44
  9810                           ;robot.c: 44: ser_putch(132);
  9811  109E  3084               	movlw	(084h)
  9812  109F  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9813                           	line	45
  9814                           ;robot.c: 45: ser_putch(150);
  9815  10A4  3096               	movlw	(096h)
  9816  10A5  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9817                           	line	46
  9818                           ;robot.c: 46: ser_putch(0);
  9819  10AA  3000               	movlw	(0)
  9820  10AB  160A  118A  21FF   	fcall	_ser_putch
              160A  118A         
  9821                           	line	47
  9822                           	
  9823  10B0                     l6082:	
  9824  10B0  0008               	return
  9825                           	opt stack 0
  9826                           GLOBAL	__end_of_robo_init
  9827  10B1                     	__end_of_robo_init:
  9828 ;; =============== function _robo_init ends ============
  9829                           
  9830                           	signat	_robo_init,88
  9831                           	global	_lcd_write_data
  9832                           psect	text1087,local,class=CODE,delta=2
  9833                           global __ptext1087
  9834  1005                     __ptext1087:
  9835                           
  9836 ;; *************** function _lcd_write_data *****************
  9837 ;; Defined at:
  9838 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  databyte        1    wreg     unsigned char 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  databyte        1    2[BANK0 ] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;		None               void
  9845 ;; Registers used:
  9846 ;;		wreg
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9852 ;;      Params:         0       0       0       0       0
  9853 ;;      Locals:         0       1       0       0       0
  9854 ;;      Temps:          0       2       0       0       0
  9855 ;;      Totals:         0       3       0       0       0
  9856 ;;Total ram usage:        3 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; Hardware stack levels required when called:    3
  9859 ;; This function calls:
  9860 ;;		Nothing
  9861 ;; This function is called by:
  9862 ;;		_lcd_write_string
  9863 ;;		_lcd_write_2_digit_bcd
  9864 ;;		_lcd_write_3_digit_bcd
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           psect	text1087
  9868                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9869                           	line	30
  9870                           	global	__size_of_lcd_write_data
  9871  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  9872                           	
  9873  1005                     _lcd_write_data:	
  9874                           	opt	stack 1
  9875                           ; Regs used in _lcd_write_data: [wreg]
  9876                           ;lcd_write_data@databyte stored from wreg
  9877  1005  1283               	bcf	status, 5	;RP0=0, select bank0
  9878  1006  1303               	bcf	status, 6	;RP1=0, select bank0
  9879  1007  00A2               	movwf	(lcd_write_data@databyte)
  9880                           	line	31
  9881                           	
  9882  1008                     l11132:	
  9883                           ;lcd.c: 31: RE2 = 0;
  9884  1008  1109               	bcf	(74/8),(74)&7
  9885                           	line	32
  9886                           ;lcd.c: 32: RE1 = 0;
  9887  1009  1089               	bcf	(73/8),(73)&7
  9888                           	line	33
  9889                           ;lcd.c: 33: RE0 = 1;
  9890  100A  1409               	bsf	(72/8),(72)&7
  9891                           	line	34
  9892                           	
  9893  100B                     l11134:	
  9894                           ;lcd.c: 34: PORTD = databyte;
  9895  100B  0822               	movf	(lcd_write_data@databyte),w
  9896  100C  0088               	movwf	(8)	;volatile
  9897                           	line	35
  9898                           	
  9899  100D                     l11136:	
  9900                           ;lcd.c: 35: RE2 = 1;
  9901  100D  1509               	bsf	(74/8),(74)&7
  9902                           	line	36
  9903                           	
  9904  100E                     l11138:	
  9905                           ;lcd.c: 36: RE2 = 0;
  9906  100E  1109               	bcf	(74/8),(74)&7
  9907                           	line	37
  9908                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  9909                           	opt asmopt_off
  9910  100F  3007               movlw	7
  9911  1010  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  9912  1011  307D               	movlw	125
  9913  1012  00A0               movwf	((??_lcd_write_data+0)+0),f
  9914  1013                     u5447:
  9915  1013  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  9916  1014  2813               	goto	u5447
  9917  1015  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  9918  1016  2813               	goto	u5447
  9919                           opt asmopt_on
  9920                           
  9921                           	line	38
  9922                           	
  9923  1017                     l1402:	
  9924  1017  0008               	return
  9925                           	opt stack 0
  9926                           GLOBAL	__end_of_lcd_write_data
  9927  1018                     	__end_of_lcd_write_data:
  9928 ;; =============== function _lcd_write_data ends ============
  9929                           
  9930                           	signat	_lcd_write_data,4216
  9931                           	global	_lcd_write_control
  9932                           psect	text1088,local,class=CODE,delta=2
  9933                           global __ptext1088
  9934  103F                     __ptext1088:
  9935                           
  9936 ;; *************** function _lcd_write_control *****************
  9937 ;; Defined at:
  9938 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  databyte        1    wreg     unsigned char 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  databyte        1    2[BANK0 ] unsigned char 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;		None               void
  9945 ;; Registers used:
  9946 ;;		wreg
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9952 ;;      Params:         0       0       0       0       0
  9953 ;;      Locals:         0       1       0       0       0
  9954 ;;      Temps:          0       2       0       0       0
  9955 ;;      Totals:         0       3       0       0       0
  9956 ;;Total ram usage:        3 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    3
  9959 ;; This function calls:
  9960 ;;		Nothing
  9961 ;; This function is called by:
  9962 ;;		_lcd_set_cursor
  9963 ;;		_lcd_init
  9964 ;;		_UpdateDisplay
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           psect	text1088
  9968                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  9969                           	line	18
  9970                           	global	__size_of_lcd_write_control
  9971  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  9972                           	
  9973  103F                     _lcd_write_control:	
  9974                           	opt	stack 1
  9975                           ; Regs used in _lcd_write_control: [wreg]
  9976                           ;lcd_write_control@databyte stored from wreg
  9977  103F  1283               	bcf	status, 5	;RP0=0, select bank0
  9978  1040  1303               	bcf	status, 6	;RP1=0, select bank0
  9979  1041  00A2               	movwf	(lcd_write_control@databyte)
  9980                           	line	19
  9981                           	
  9982  1042                     l11124:	
  9983                           ;lcd.c: 19: RE2 = 0;
  9984  1042  1109               	bcf	(74/8),(74)&7
  9985                           	line	20
  9986                           ;lcd.c: 20: RE1 = 0;
  9987  1043  1089               	bcf	(73/8),(73)&7
  9988                           	line	21
  9989                           ;lcd.c: 21: RE0 = 0;
  9990  1044  1009               	bcf	(72/8),(72)&7
  9991                           	line	22
  9992                           	
  9993  1045                     l11126:	
  9994                           ;lcd.c: 22: PORTD = databyte;
  9995  1045  0822               	movf	(lcd_write_control@databyte),w
  9996  1046  0088               	movwf	(8)	;volatile
  9997                           	line	23
  9998                           	
  9999  1047                     l11128:	
 10000                           ;lcd.c: 23: RE2 = 1;
 10001  1047  1509               	bsf	(74/8),(74)&7
 10002                           	line	24
 10003                           	
 10004  1048                     l11130:	
 10005                           ;lcd.c: 24: RE2 = 0;
 10006  1048  1109               	bcf	(74/8),(74)&7
 10007                           	line	25
 10008                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
 10009                           	opt asmopt_off
 10010  1049  300D               movlw	13
 10011  104A  00A1               movwf	((??_lcd_write_control+0)+0+1),f
 10012  104B  30FB               	movlw	251
 10013  104C  00A0               movwf	((??_lcd_write_control+0)+0),f
 10014  104D                     u5457:
 10015  104D  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
 10016  104E  284D               	goto	u5457
 10017  104F  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
 10018  1050  284D               	goto	u5457
 10019  1051  2852               	nop2
 10020                           opt asmopt_on
 10021                           
 10022                           	line	26
 10023                           	
 10024  1052                     l1399:	
 10025  1052  0008               	return
 10026                           	opt stack 0
 10027                           GLOBAL	__end_of_lcd_write_control
 10028  1053                     	__end_of_lcd_write_control:
 10029 ;; =============== function _lcd_write_control ends ============
 10030                           
 10031                           	signat	_lcd_write_control,4216
 10032                           	global	_init_adc
 10033                           psect	text1089,local,class=CODE,delta=2
 10034                           global __ptext1089
 10035  1053                     __ptext1089:
 10036                           
 10037 ;; *************** function _init_adc *****************
 10038 ;; Defined at:
 10039 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;		None
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;		None
 10044 ;; Return value:  Size  Location     Type
 10045 ;;		None               void
 10046 ;; Registers used:
 10047 ;;		wreg, status,2
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10053 ;;      Params:         0       0       0       0       0
 10054 ;;      Locals:         0       0       0       0       0
 10055 ;;      Temps:          0       1       0       0       0
 10056 ;;      Totals:         0       1       0       0       0
 10057 ;;Total ram usage:        1 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:    3
 10060 ;; This function calls:
 10061 ;;		Nothing
 10062 ;; This function is called by:
 10063 ;;		_init
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           psect	text1089
 10067                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10068                           	line	61
 10069                           	global	__size_of_init_adc
 10070  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 10071                           	
 10072  1053                     _init_adc:	
 10073                           	opt	stack 3
 10074                           ; Regs used in _init_adc: [wreg+status,2]
 10075                           	line	63
 10076                           	
 10077  1053                     l11114:	
 10078                           ;adc.c: 63: PORTA = 0;
 10079  1053  1283               	bcf	status, 5	;RP0=0, select bank0
 10080  1054  1303               	bcf	status, 6	;RP1=0, select bank0
 10081  1055  0185               	clrf	(5)	;volatile
 10082                           	line	64
 10083                           	
 10084  1056                     l11116:	
 10085                           ;adc.c: 64: TRISA = 0b00111111;
 10086  1056  303F               	movlw	(03Fh)
 10087  1057  1683               	bsf	status, 5	;RP0=1, select bank1
 10088  1058  1303               	bcf	status, 6	;RP1=0, select bank1
 10089  1059  0085               	movwf	(133)^080h	;volatile
 10090                           	line	67
 10091                           	
 10092  105A                     l11118:	
 10093                           ;adc.c: 67: ADCON0 = 0b10100001;
 10094  105A  30A1               	movlw	(0A1h)
 10095  105B  1283               	bcf	status, 5	;RP0=0, select bank0
 10096  105C  1303               	bcf	status, 6	;RP1=0, select bank0
 10097  105D  009F               	movwf	(31)	;volatile
 10098                           	line	68
 10099                           	
 10100  105E                     l11120:	
 10101                           ;adc.c: 68: ADCON1 = 0b0000010;
 10102  105E  3002               	movlw	(02h)
 10103  105F  1683               	bsf	status, 5	;RP0=1, select bank1
 10104  1060  1303               	bcf	status, 6	;RP1=0, select bank1
 10105  1061  009F               	movwf	(159)^080h	;volatile
 10106                           	line	70
 10107                           	
 10108  1062                     l11122:	
 10109                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10110                           	opt asmopt_off
 10111  1062  3053               movlw	83
 10112  1063  1283               	bcf	status, 5	;RP0=0, select bank0
 10113  1064  1303               	bcf	status, 6	;RP1=0, select bank0
 10114  1065  00A0               movwf	(??_init_adc+0)+0,f
 10115  1066                     u5467:
 10116  1066  0BA0               decfsz	(??_init_adc+0)+0,f
 10117  1067  2866               	goto	u5467
 10118                           opt asmopt_on
 10119                           
 10120                           	line	72
 10121                           	
 10122  1068                     l700:	
 10123  1068  0008               	return
 10124                           	opt stack 0
 10125                           GLOBAL	__end_of_init_adc
 10126  1069                     	__end_of_init_adc:
 10127 ;; =============== function _init_adc ends ============
 10128                           
 10129                           	signat	_init_adc,88
 10130                           	global	_adc_read_channel
 10131                           psect	text1090,local,class=CODE,delta=2
 10132                           global __ptext1090
 10133  07C4                     __ptext1090:
 10134                           
 10135 ;; *************** function _adc_read_channel *****************
 10136 ;; Defined at:
 10137 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  channel         1    wreg     unsigned char 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  channel         1    7[BANK0 ] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      unsigned char 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10151 ;;      Params:         0       0       0       0       0
 10152 ;;      Locals:         0       1       0       0       0
 10153 ;;      Temps:          0       1       0       0       0
 10154 ;;      Totals:         0       2       0       0       0
 10155 ;;Total ram usage:        2 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    4
 10158 ;; This function calls:
 10159 ;;		_adc_read
 10160 ;; This function is called by:
 10161 ;;		_readDistance
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           psect	text1090
 10165                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10166                           	line	20
 10167                           	global	__size_of_adc_read_channel
 10168  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
 10169                           	
 10170  07C4                     _adc_read_channel:	
 10171                           	opt	stack 0
 10172                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10173                           ;adc_read_channel@channel stored from wreg
 10174  07C4  1283               	bcf	status, 5	;RP0=0, select bank0
 10175  07C5  1303               	bcf	status, 6	;RP1=0, select bank0
 10176  07C6  00A7               	movwf	(adc_read_channel@channel)
 10177                           	line	21
 10178                           	
 10179  07C7                     l11098:	
 10180                           ;adc.c: 21: switch(channel)
 10181  07C7  2FE0               	goto	l11106
 10182                           	line	23
 10183                           ;adc.c: 22: {
 10184                           ;adc.c: 23: case 0:
 10185                           	
 10186  07C8                     l690:	
 10187                           	line	24
 10188                           ;adc.c: 24: CHS0 = 0;
 10189  07C8  119F               	bcf	(251/8),(251)&7
 10190                           	line	25
 10191                           ;adc.c: 25: CHS1 = 0;
 10192  07C9  121F               	bcf	(252/8),(252)&7
 10193                           	line	26
 10194                           ;adc.c: 26: CHS2 = 0;
 10195  07CA  129F               	bcf	(253/8),(253)&7
 10196                           	line	27
 10197                           ;adc.c: 27: break;
 10198  07CB  2FF1               	goto	l11108
 10199                           	line	28
 10200                           ;adc.c: 28: case 1:
 10201                           	
 10202  07CC                     l692:	
 10203                           	line	29
 10204                           ;adc.c: 29: CHS0 = 1;
 10205  07CC  159F               	bsf	(251/8),(251)&7
 10206                           	line	30
 10207                           ;adc.c: 30: CHS1 = 0;
 10208  07CD  121F               	bcf	(252/8),(252)&7
 10209                           	line	31
 10210                           ;adc.c: 31: CHS2 = 0;
 10211  07CE  129F               	bcf	(253/8),(253)&7
 10212                           	line	32
 10213                           ;adc.c: 32: break;
 10214  07CF  2FF1               	goto	l11108
 10215                           	line	33
 10216                           ;adc.c: 33: case 2:
 10217                           	
 10218  07D0                     l693:	
 10219                           	line	34
 10220                           ;adc.c: 34: CHS0 = 0;
 10221  07D0  119F               	bcf	(251/8),(251)&7
 10222                           	line	35
 10223                           ;adc.c: 35: CHS1 = 1;
 10224  07D1  161F               	bsf	(252/8),(252)&7
 10225                           	line	36
 10226                           ;adc.c: 36: CHS2 = 0;
 10227  07D2  129F               	bcf	(253/8),(253)&7
 10228                           	line	37
 10229                           ;adc.c: 37: break;
 10230  07D3  2FF1               	goto	l11108
 10231                           	line	38
 10232                           ;adc.c: 38: case 3:
 10233                           	
 10234  07D4                     l694:	
 10235                           	line	39
 10236                           ;adc.c: 39: CHS0 = 1;
 10237  07D4  159F               	bsf	(251/8),(251)&7
 10238                           	line	40
 10239                           ;adc.c: 40: CHS1 = 1;
 10240  07D5  161F               	bsf	(252/8),(252)&7
 10241                           	line	41
 10242                           ;adc.c: 41: CHS2 = 0;
 10243  07D6  129F               	bcf	(253/8),(253)&7
 10244                           	line	42
 10245                           ;adc.c: 42: break;
 10246  07D7  2FF1               	goto	l11108
 10247                           	line	43
 10248                           ;adc.c: 43: case 4:
 10249                           	
 10250  07D8                     l695:	
 10251                           	line	44
 10252                           ;adc.c: 44: CHS0 = 0;
 10253  07D8  119F               	bcf	(251/8),(251)&7
 10254                           	line	45
 10255                           ;adc.c: 45: CHS1 = 0;
 10256  07D9  121F               	bcf	(252/8),(252)&7
 10257                           	line	46
 10258                           ;adc.c: 46: CHS2 = 1;
 10259  07DA  169F               	bsf	(253/8),(253)&7
 10260                           	line	47
 10261                           ;adc.c: 47: break;
 10262  07DB  2FF1               	goto	l11108
 10263                           	line	50
 10264                           ;adc.c: 50: default:
 10265                           	
 10266  07DC                     l696:	
 10267                           	line	51
 10268                           	
 10269  07DC                     l11100:	
 10270                           ;adc.c: 51: return 0;
 10271  07DC  3000               	movlw	(0)
 10272  07DD  2FFE               	goto	l697
 10273                           	
 10274  07DE                     l11102:	
 10275  07DE  2FFE               	goto	l697
 10276                           	line	52
 10277                           	
 10278  07DF                     l11104:	
 10279                           ;adc.c: 52: }
 10280  07DF  2FF1               	goto	l11108
 10281                           	line	21
 10282                           	
 10283  07E0                     l689:	
 10284                           	
 10285  07E0                     l11106:	
 10286  07E0  0827               	movf	(adc_read_channel@channel),w
 10287                           	; Switch size 1, requested type "space"
 10288                           ; Number of cases is 5, Range of values is 0 to 4
 10289                           ; switch strategies available:
 10290                           ; Name         Instructions Cycles
 10291                           ; simple_byte           16     9 (average)
 10292                           ; direct_byte           23     8 (fixed)
 10293                           ; jumptable            260     6 (fixed)
 10294                           ; rangetable             9     6 (fixed)
 10295                           ; spacedrange           16     9 (fixed)
 10296                           ; locatedrange           5     3 (fixed)
 10297                           ;	Chosen strategy is simple_byte
 10298                           
 10299                           	opt asmopt_off
 10300  07E1  3A00               	xorlw	0^0	; case 0
 10301  07E2  1903               	skipnz
 10302  07E3  2FC8               	goto	l690
 10303  07E4  3A01               	xorlw	1^0	; case 1
 10304  07E5  1903               	skipnz
 10305  07E6  2FCC               	goto	l692
 10306  07E7  3A03               	xorlw	2^1	; case 2
 10307  07E8  1903               	skipnz
 10308  07E9  2FD0               	goto	l693
 10309  07EA  3A01               	xorlw	3^2	; case 3
 10310  07EB  1903               	skipnz
 10311  07EC  2FD4               	goto	l694
 10312  07ED  3A07               	xorlw	4^3	; case 4
 10313  07EE  1903               	skipnz
 10314  07EF  2FD8               	goto	l695
 10315  07F0  2FDC               	goto	l11100
 10316                           	opt asmopt_on
 10317                           
 10318                           	line	52
 10319                           	
 10320  07F1                     l691:	
 10321                           	line	54
 10322                           	
 10323  07F1                     l11108:	
 10324                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10325                           	opt asmopt_off
 10326  07F1  3053               movlw	83
 10327  07F2  00A6               movwf	(??_adc_read_channel+0)+0,f
 10328  07F3                     u5477:
 10329  07F3  0BA6               decfsz	(??_adc_read_channel+0)+0,f
 10330  07F4  2FF3               	goto	u5477
 10331                           opt asmopt_on
 10332                           
 10333                           	line	56
 10334                           	
 10335  07F5                     l11110:	
 10336                           ;adc.c: 56: return adc_read();
 10337  07F5  160A  118A  20D2   	fcall	_adc_read
              120A  118A         
 10338  07FA  1283               	bcf	status, 5	;RP0=0, select bank0
 10339  07FB  1303               	bcf	status, 6	;RP1=0, select bank0
 10340  07FC  0820               	movf	(0+(?_adc_read)),w
 10341  07FD  2FFE               	goto	l697
 10342                           	
 10343  07FE                     l11112:	
 10344                           	line	58
 10345                           	
 10346  07FE                     l697:	
 10347  07FE  0008               	return
 10348                           	opt stack 0
 10349                           GLOBAL	__end_of_adc_read_channel
 10350  07FF                     	__end_of_adc_read_channel:
 10351 ;; =============== function _adc_read_channel ends ============
 10352                           
 10353                           	signat	_adc_read_channel,4217
 10354                           	global	___awmod
 10355                           psect	text1091,local,class=CODE,delta=2
 10356                           global __ptext1091
 10357  14A9                     __ptext1091:
 10358                           
 10359 ;; *************** function ___awmod *****************
 10360 ;; Defined at:
 10361 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  divisor         2    0[BANK0 ] int 
 10364 ;;  dividend        2    2[BANK0 ] int 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;  sign            1    6[BANK0 ] unsigned char 
 10367 ;;  counter         1    5[BANK0 ] unsigned char 
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  2    0[BANK0 ] int 
 10370 ;; Registers used:
 10371 ;;		wreg, status,2, status,0
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10377 ;;      Params:         0       4       0       0       0
 10378 ;;      Locals:         0       2       0       0       0
 10379 ;;      Temps:          0       1       0       0       0
 10380 ;;      Totals:         0       7       0       0       0
 10381 ;;Total ram usage:        7 bytes
 10382 ;; Hardware stack levels used:    1
 10383 ;; Hardware stack levels required when called:    3
 10384 ;; This function calls:
 10385 ;;		Nothing
 10386 ;; This function is called by:
 10387 ;;		_UpdateDisplay
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           psect	text1091
 10391                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10392                           	line	5
 10393                           	global	__size_of___awmod
 10394  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 10395                           	
 10396  14A9                     ___awmod:	
 10397                           	opt	stack 2
 10398                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10399                           	line	8
 10400                           	
 10401  14A9                     l11042:	
 10402  14A9  1283               	bcf	status, 5	;RP0=0, select bank0
 10403  14AA  1303               	bcf	status, 6	;RP1=0, select bank0
 10404  14AB  01A6               	clrf	(___awmod@sign)
 10405                           	line	9
 10406  14AC  1FA3               	btfss	(___awmod@dividend+1),7
 10407  14AD  2CAF               	goto	u4461
 10408  14AE  2CB0               	goto	u4460
 10409  14AF                     u4461:
 10410  14AF  2CB9               	goto	l11046
 10411  14B0                     u4460:
 10412                           	line	10
 10413                           	
 10414  14B0                     l11044:	
 10415  14B0  09A2               	comf	(___awmod@dividend),f
 10416  14B1  09A3               	comf	(___awmod@dividend+1),f
 10417  14B2  0AA2               	incf	(___awmod@dividend),f
 10418  14B3  1903               	skipnz
 10419  14B4  0AA3               	incf	(___awmod@dividend+1),f
 10420                           	line	11
 10421  14B5  01A6               	clrf	(___awmod@sign)
 10422  14B6  1403               	bsf	status,0
 10423  14B7  0DA6               	rlf	(___awmod@sign),f
 10424  14B8  2CB9               	goto	l11046
 10425                           	line	12
 10426                           	
 10427  14B9                     l7826:	
 10428                           	line	13
 10429                           	
 10430  14B9                     l11046:	
 10431  14B9  1FA1               	btfss	(___awmod@divisor+1),7
 10432  14BA  2CBC               	goto	u4471
 10433  14BB  2CBD               	goto	u4470
 10434  14BC                     u4471:
 10435  14BC  2CC3               	goto	l11050
 10436  14BD                     u4470:
 10437                           	line	14
 10438                           	
 10439  14BD                     l11048:	
 10440  14BD  09A0               	comf	(___awmod@divisor),f
 10441  14BE  09A1               	comf	(___awmod@divisor+1),f
 10442  14BF  0AA0               	incf	(___awmod@divisor),f
 10443  14C0  1903               	skipnz
 10444  14C1  0AA1               	incf	(___awmod@divisor+1),f
 10445  14C2  2CC3               	goto	l11050
 10446                           	
 10447  14C3                     l7827:	
 10448                           	line	15
 10449                           	
 10450  14C3                     l11050:	
 10451  14C3  0821               	movf	(___awmod@divisor+1),w
 10452  14C4  0420               	iorwf	(___awmod@divisor),w
 10453  14C5  1903               	skipnz
 10454  14C6  2CC8               	goto	u4481
 10455  14C7  2CC9               	goto	u4480
 10456  14C8                     u4481:
 10457  14C8  2CFF               	goto	l11068
 10458  14C9                     u4480:
 10459                           	line	16
 10460                           	
 10461  14C9                     l11052:	
 10462  14C9  01A5               	clrf	(___awmod@counter)
 10463  14CA  1403               	bsf	status,0
 10464  14CB  0DA5               	rlf	(___awmod@counter),f
 10465                           	line	17
 10466  14CC  2CD9               	goto	l11058
 10467                           	
 10468  14CD                     l7830:	
 10469                           	line	18
 10470                           	
 10471  14CD                     l11054:	
 10472  14CD  3001               	movlw	01h
 10473                           	
 10474  14CE                     u4495:
 10475  14CE  1003               	clrc
 10476  14CF  0DA0               	rlf	(___awmod@divisor),f
 10477  14D0  0DA1               	rlf	(___awmod@divisor+1),f
 10478  14D1  3EFF               	addlw	-1
 10479  14D2  1D03               	skipz
 10480  14D3  2CCE               	goto	u4495
 10481                           	line	19
 10482                           	
 10483  14D4                     l11056:	
 10484  14D4  3001               	movlw	(01h)
 10485  14D5  00A4               	movwf	(??___awmod+0)+0
 10486  14D6  0824               	movf	(??___awmod+0)+0,w
 10487  14D7  07A5               	addwf	(___awmod@counter),f
 10488  14D8  2CD9               	goto	l11058
 10489                           	line	20
 10490                           	
 10491  14D9                     l7829:	
 10492                           	line	17
 10493                           	
 10494  14D9                     l11058:	
 10495  14D9  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 10496  14DA  2CDC               	goto	u4501
 10497  14DB  2CDD               	goto	u4500
 10498  14DC                     u4501:
 10499  14DC  2CCD               	goto	l11054
 10500  14DD                     u4500:
 10501  14DD  2CDF               	goto	l11060
 10502                           	
 10503  14DE                     l7831:	
 10504  14DE  2CDF               	goto	l11060
 10505                           	line	21
 10506                           	
 10507  14DF                     l7832:	
 10508                           	line	22
 10509                           	
 10510  14DF                     l11060:	
 10511  14DF  0821               	movf	(___awmod@divisor+1),w
 10512  14E0  0223               	subwf	(___awmod@dividend+1),w
 10513  14E1  1D03               	skipz
 10514  14E2  2CE5               	goto	u4515
 10515  14E3  0820               	movf	(___awmod@divisor),w
 10516  14E4  0222               	subwf	(___awmod@dividend),w
 10517  14E5                     u4515:
 10518  14E5  1C03               	skipc
 10519  14E6  2CE8               	goto	u4511
 10520  14E7  2CE9               	goto	u4510
 10521  14E8                     u4511:
 10522  14E8  2CF0               	goto	l11064
 10523  14E9                     u4510:
 10524                           	line	23
 10525                           	
 10526  14E9                     l11062:	
 10527  14E9  0820               	movf	(___awmod@divisor),w
 10528  14EA  02A2               	subwf	(___awmod@dividend),f
 10529  14EB  0821               	movf	(___awmod@divisor+1),w
 10530  14EC  1C03               	skipc
 10531  14ED  03A3               	decf	(___awmod@dividend+1),f
 10532  14EE  02A3               	subwf	(___awmod@dividend+1),f
 10533  14EF  2CF0               	goto	l11064
 10534                           	
 10535  14F0                     l7833:	
 10536                           	line	24
 10537                           	
 10538  14F0                     l11064:	
 10539  14F0  3001               	movlw	01h
 10540                           	
 10541  14F1                     u4525:
 10542  14F1  1003               	clrc
 10543  14F2  0CA1               	rrf	(___awmod@divisor+1),f
 10544  14F3  0CA0               	rrf	(___awmod@divisor),f
 10545  14F4  3EFF               	addlw	-1
 10546  14F5  1D03               	skipz
 10547  14F6  2CF1               	goto	u4525
 10548                           	line	25
 10549                           	
 10550  14F7                     l11066:	
 10551  14F7  3001               	movlw	low(01h)
 10552  14F8  02A5               	subwf	(___awmod@counter),f
 10553  14F9  1D03               	btfss	status,2
 10554  14FA  2CFC               	goto	u4531
 10555  14FB  2CFD               	goto	u4530
 10556  14FC                     u4531:
 10557  14FC  2CDF               	goto	l11060
 10558  14FD                     u4530:
 10559  14FD  2CFF               	goto	l11068
 10560                           	
 10561  14FE                     l7834:	
 10562  14FE  2CFF               	goto	l11068
 10563                           	line	26
 10564                           	
 10565  14FF                     l7828:	
 10566                           	line	27
 10567                           	
 10568  14FF                     l11068:	
 10569  14FF  0826               	movf	(___awmod@sign),w
 10570  1500  1D03               	skipz
 10571  1501  2D03               	goto	u4540
 10572  1502  2D09               	goto	l11072
 10573  1503                     u4540:
 10574                           	line	28
 10575                           	
 10576  1503                     l11070:	
 10577  1503  09A2               	comf	(___awmod@dividend),f
 10578  1504  09A3               	comf	(___awmod@dividend+1),f
 10579  1505  0AA2               	incf	(___awmod@dividend),f
 10580  1506  1903               	skipnz
 10581  1507  0AA3               	incf	(___awmod@dividend+1),f
 10582  1508  2D09               	goto	l11072
 10583                           	
 10584  1509                     l7835:	
 10585                           	line	29
 10586                           	
 10587  1509                     l11072:	
 10588  1509  0823               	movf	(___awmod@dividend+1),w
 10589  150A  01A1               	clrf	(?___awmod+1)
 10590  150B  07A1               	addwf	(?___awmod+1)
 10591  150C  0822               	movf	(___awmod@dividend),w
 10592  150D  01A0               	clrf	(?___awmod)
 10593  150E  07A0               	addwf	(?___awmod)
 10594                           
 10595  150F  2D10               	goto	l7836
 10596                           	
 10597  1510                     l11074:	
 10598                           	line	30
 10599                           	
 10600  1510                     l7836:	
 10601  1510  0008               	return
 10602                           	opt stack 0
 10603                           GLOBAL	__end_of___awmod
 10604  1511                     	__end_of___awmod:
 10605 ;; =============== function ___awmod ends ============
 10606                           
 10607                           	signat	___awmod,8314
 10608                           	global	___awdiv
 10609                           psect	text1092,local,class=CODE,delta=2
 10610                           global __ptext1092
 10611  15F1                     __ptext1092:
 10612                           
 10613 ;; *************** function ___awdiv *****************
 10614 ;; Defined at:
 10615 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  divisor         2    6[BANK0 ] int 
 10618 ;;  dividend        2    8[BANK0 ] int 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  quotient        2   13[BANK0 ] int 
 10621 ;;  sign            1   12[BANK0 ] unsigned char 
 10622 ;;  counter         1   11[BANK0 ] unsigned char 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  2    6[BANK0 ] int 
 10625 ;; Registers used:
 10626 ;;		wreg, status,2, status,0
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10632 ;;      Params:         0       4       0       0       0
 10633 ;;      Locals:         0       4       0       0       0
 10634 ;;      Temps:          0       1       0       0       0
 10635 ;;      Totals:         0       9       0       0       0
 10636 ;;Total ram usage:        9 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    3
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_robot_turnRight
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           psect	text1092
 10646                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 10647                           	line	5
 10648                           	global	__size_of___awdiv
 10649  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 10650                           	
 10651  15F1                     ___awdiv:	
 10652                           	opt	stack 3
 10653                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10654                           	line	9
 10655                           	
 10656  15F1                     l11002:	
 10657  15F1  1283               	bcf	status, 5	;RP0=0, select bank0
 10658  15F2  1303               	bcf	status, 6	;RP1=0, select bank0
 10659  15F3  01AC               	clrf	(___awdiv@sign)
 10660                           	line	10
 10661  15F4  1FA7               	btfss	(___awdiv@divisor+1),7
 10662  15F5  2DF7               	goto	u4361
 10663  15F6  2DF8               	goto	u4360
 10664  15F7                     u4361:
 10665  15F7  2E01               	goto	l11006
 10666  15F8                     u4360:
 10667                           	line	11
 10668                           	
 10669  15F8                     l11004:	
 10670  15F8  09A6               	comf	(___awdiv@divisor),f
 10671  15F9  09A7               	comf	(___awdiv@divisor+1),f
 10672  15FA  0AA6               	incf	(___awdiv@divisor),f
 10673  15FB  1903               	skipnz
 10674  15FC  0AA7               	incf	(___awdiv@divisor+1),f
 10675                           	line	12
 10676  15FD  01AC               	clrf	(___awdiv@sign)
 10677  15FE  1403               	bsf	status,0
 10678  15FF  0DAC               	rlf	(___awdiv@sign),f
 10679  1600  2E01               	goto	l11006
 10680                           	line	13
 10681                           	
 10682  1601                     l7758:	
 10683                           	line	14
 10684                           	
 10685  1601                     l11006:	
 10686  1601  1FA9               	btfss	(___awdiv@dividend+1),7
 10687  1602  2E04               	goto	u4371
 10688  1603  2E05               	goto	u4370
 10689  1604                     u4371:
 10690  1604  2E0F               	goto	l11012
 10691  1605                     u4370:
 10692                           	line	15
 10693                           	
 10694  1605                     l11008:	
 10695  1605  09A8               	comf	(___awdiv@dividend),f
 10696  1606  09A9               	comf	(___awdiv@dividend+1),f
 10697  1607  0AA8               	incf	(___awdiv@dividend),f
 10698  1608  1903               	skipnz
 10699  1609  0AA9               	incf	(___awdiv@dividend+1),f
 10700                           	line	16
 10701                           	
 10702  160A                     l11010:	
 10703  160A  3001               	movlw	(01h)
 10704  160B  00AA               	movwf	(??___awdiv+0)+0
 10705  160C  082A               	movf	(??___awdiv+0)+0,w
 10706  160D  06AC               	xorwf	(___awdiv@sign),f
 10707  160E  2E0F               	goto	l11012
 10708                           	line	17
 10709                           	
 10710  160F                     l7759:	
 10711                           	line	18
 10712                           	
 10713  160F                     l11012:	
 10714  160F  01AD               	clrf	(___awdiv@quotient)
 10715  1610  01AE               	clrf	(___awdiv@quotient+1)
 10716                           	line	19
 10717                           	
 10718  1611                     l11014:	
 10719  1611  0827               	movf	(___awdiv@divisor+1),w
 10720  1612  0426               	iorwf	(___awdiv@divisor),w
 10721  1613  1903               	skipnz
 10722  1614  2E16               	goto	u4381
 10723  1615  2E17               	goto	u4380
 10724  1616                     u4381:
 10725  1616  2E55               	goto	l11034
 10726  1617                     u4380:
 10727                           	line	20
 10728                           	
 10729  1617                     l11016:	
 10730  1617  01AB               	clrf	(___awdiv@counter)
 10731  1618  1403               	bsf	status,0
 10732  1619  0DAB               	rlf	(___awdiv@counter),f
 10733                           	line	21
 10734  161A  2E27               	goto	l11022
 10735                           	
 10736  161B                     l7762:	
 10737                           	line	22
 10738                           	
 10739  161B                     l11018:	
 10740  161B  3001               	movlw	01h
 10741                           	
 10742  161C                     u4395:
 10743  161C  1003               	clrc
 10744  161D  0DA6               	rlf	(___awdiv@divisor),f
 10745  161E  0DA7               	rlf	(___awdiv@divisor+1),f
 10746  161F  3EFF               	addlw	-1
 10747  1620  1D03               	skipz
 10748  1621  2E1C               	goto	u4395
 10749                           	line	23
 10750                           	
 10751  1622                     l11020:	
 10752  1622  3001               	movlw	(01h)
 10753  1623  00AA               	movwf	(??___awdiv+0)+0
 10754  1624  082A               	movf	(??___awdiv+0)+0,w
 10755  1625  07AB               	addwf	(___awdiv@counter),f
 10756  1626  2E27               	goto	l11022
 10757                           	line	24
 10758                           	
 10759  1627                     l7761:	
 10760                           	line	21
 10761                           	
 10762  1627                     l11022:	
 10763  1627  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
 10764  1628  2E2A               	goto	u4401
 10765  1629  2E2B               	goto	u4400
 10766  162A                     u4401:
 10767  162A  2E1B               	goto	l11018
 10768  162B                     u4400:
 10769  162B  2E2D               	goto	l11024
 10770                           	
 10771  162C                     l7763:	
 10772  162C  2E2D               	goto	l11024
 10773                           	line	25
 10774                           	
 10775  162D                     l7764:	
 10776                           	line	26
 10777                           	
 10778  162D                     l11024:	
 10779  162D  3001               	movlw	01h
 10780                           	
 10781  162E                     u4415:
 10782  162E  1003               	clrc
 10783  162F  0DAD               	rlf	(___awdiv@quotient),f
 10784  1630  0DAE               	rlf	(___awdiv@quotient+1),f
 10785  1631  3EFF               	addlw	-1
 10786  1632  1D03               	skipz
 10787  1633  2E2E               	goto	u4415
 10788                           	line	27
 10789  1634  0827               	movf	(___awdiv@divisor+1),w
 10790  1635  0229               	subwf	(___awdiv@dividend+1),w
 10791  1636  1D03               	skipz
 10792  1637  2E3A               	goto	u4425
 10793  1638  0826               	movf	(___awdiv@divisor),w
 10794  1639  0228               	subwf	(___awdiv@dividend),w
 10795  163A                     u4425:
 10796  163A  1C03               	skipc
 10797  163B  2E3D               	goto	u4421
 10798  163C  2E3E               	goto	u4420
 10799  163D                     u4421:
 10800  163D  2E46               	goto	l11030
 10801  163E                     u4420:
 10802                           	line	28
 10803                           	
 10804  163E                     l11026:	
 10805  163E  0826               	movf	(___awdiv@divisor),w
 10806  163F  02A8               	subwf	(___awdiv@dividend),f
 10807  1640  0827               	movf	(___awdiv@divisor+1),w
 10808  1641  1C03               	skipc
 10809  1642  03A9               	decf	(___awdiv@dividend+1),f
 10810  1643  02A9               	subwf	(___awdiv@dividend+1),f
 10811                           	line	29
 10812                           	
 10813  1644                     l11028:	
 10814  1644  142D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 10815  1645  2E46               	goto	l11030
 10816                           	line	30
 10817                           	
 10818  1646                     l7765:	
 10819                           	line	31
 10820                           	
 10821  1646                     l11030:	
 10822  1646  3001               	movlw	01h
 10823                           	
 10824  1647                     u4435:
 10825  1647  1003               	clrc
 10826  1648  0CA7               	rrf	(___awdiv@divisor+1),f
 10827  1649  0CA6               	rrf	(___awdiv@divisor),f
 10828  164A  3EFF               	addlw	-1
 10829  164B  1D03               	skipz
 10830  164C  2E47               	goto	u4435
 10831                           	line	32
 10832                           	
 10833  164D                     l11032:	
 10834  164D  3001               	movlw	low(01h)
 10835  164E  02AB               	subwf	(___awdiv@counter),f
 10836  164F  1D03               	btfss	status,2
 10837  1650  2E52               	goto	u4441
 10838  1651  2E53               	goto	u4440
 10839  1652                     u4441:
 10840  1652  2E2D               	goto	l11024
 10841  1653                     u4440:
 10842  1653  2E55               	goto	l11034
 10843                           	
 10844  1654                     l7766:	
 10845  1654  2E55               	goto	l11034
 10846                           	line	33
 10847                           	
 10848  1655                     l7760:	
 10849                           	line	34
 10850                           	
 10851  1655                     l11034:	
 10852  1655  082C               	movf	(___awdiv@sign),w
 10853  1656  1D03               	skipz
 10854  1657  2E59               	goto	u4450
 10855  1658  2E5F               	goto	l11038
 10856  1659                     u4450:
 10857                           	line	35
 10858                           	
 10859  1659                     l11036:	
 10860  1659  09AD               	comf	(___awdiv@quotient),f
 10861  165A  09AE               	comf	(___awdiv@quotient+1),f
 10862  165B  0AAD               	incf	(___awdiv@quotient),f
 10863  165C  1903               	skipnz
 10864  165D  0AAE               	incf	(___awdiv@quotient+1),f
 10865  165E  2E5F               	goto	l11038
 10866                           	
 10867  165F                     l7767:	
 10868                           	line	36
 10869                           	
 10870  165F                     l11038:	
 10871  165F  082E               	movf	(___awdiv@quotient+1),w
 10872  1660  01A7               	clrf	(?___awdiv+1)
 10873  1661  07A7               	addwf	(?___awdiv+1)
 10874  1662  082D               	movf	(___awdiv@quotient),w
 10875  1663  01A6               	clrf	(?___awdiv)
 10876  1664  07A6               	addwf	(?___awdiv)
 10877                           
 10878  1665  2E66               	goto	l7768
 10879                           	
 10880  1666                     l11040:	
 10881                           	line	37
 10882                           	
 10883  1666                     l7768:	
 10884  1666  0008               	return
 10885                           	opt stack 0
 10886                           GLOBAL	__end_of___awdiv
 10887  1667                     	__end_of___awdiv:
 10888 ;; =============== function ___awdiv ends ============
 10889                           
 10890                           	signat	___awdiv,8314
 10891                           	global	___lwmod
 10892                           psect	text1093,local,class=CODE,delta=2
 10893                           global __ptext1093
 10894  136A                     __ptext1093:
 10895                           
 10896 ;; *************** function ___lwmod *****************
 10897 ;; Defined at:
 10898 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  divisor         2   14[BANK0 ] unsigned int 
 10901 ;;  dividend        2   16[BANK0 ] unsigned int 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  counter         1   19[BANK0 ] unsigned char 
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  2   14[BANK0 ] unsigned int 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10913 ;;      Params:         0       4       0       0       0
 10914 ;;      Locals:         0       1       0       0       0
 10915 ;;      Temps:          0       1       0       0       0
 10916 ;;      Totals:         0       6       0       0       0
 10917 ;;Total ram usage:        6 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    3
 10920 ;; This function calls:
 10921 ;;		Nothing
 10922 ;; This function is called by:
 10923 ;;		_sprintf
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           psect	text1093
 10927                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10928                           	line	5
 10929                           	global	__size_of___lwmod
 10930  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 10931                           	
 10932  136A                     ___lwmod:	
 10933                           	opt	stack 1
 10934                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10935                           	line	8
 10936                           	
 10937  136A                     l10980:	
 10938  136A  1283               	bcf	status, 5	;RP0=0, select bank0
 10939  136B  1303               	bcf	status, 6	;RP1=0, select bank0
 10940  136C  082F               	movf	(___lwmod@divisor+1),w
 10941  136D  042E               	iorwf	(___lwmod@divisor),w
 10942  136E  1903               	skipnz
 10943  136F  2B71               	goto	u4301
 10944  1370  2B72               	goto	u4300
 10945  1371                     u4301:
 10946  1371  2BA8               	goto	l10998
 10947  1372                     u4300:
 10948                           	line	9
 10949                           	
 10950  1372                     l10982:	
 10951  1372  01B3               	clrf	(___lwmod@counter)
 10952  1373  1403               	bsf	status,0
 10953  1374  0DB3               	rlf	(___lwmod@counter),f
 10954                           	line	10
 10955  1375  2B82               	goto	l10988
 10956                           	
 10957  1376                     l7636:	
 10958                           	line	11
 10959                           	
 10960  1376                     l10984:	
 10961  1376  3001               	movlw	01h
 10962                           	
 10963  1377                     u4315:
 10964  1377  1003               	clrc
 10965  1378  0DAE               	rlf	(___lwmod@divisor),f
 10966  1379  0DAF               	rlf	(___lwmod@divisor+1),f
 10967  137A  3EFF               	addlw	-1
 10968  137B  1D03               	skipz
 10969  137C  2B77               	goto	u4315
 10970                           	line	12
 10971                           	
 10972  137D                     l10986:	
 10973  137D  3001               	movlw	(01h)
 10974  137E  00B2               	movwf	(??___lwmod+0)+0
 10975  137F  0832               	movf	(??___lwmod+0)+0,w
 10976  1380  07B3               	addwf	(___lwmod@counter),f
 10977  1381  2B82               	goto	l10988
 10978                           	line	13
 10979                           	
 10980  1382                     l7635:	
 10981                           	line	10
 10982                           	
 10983  1382                     l10988:	
 10984  1382  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 10985  1383  2B85               	goto	u4321
 10986  1384  2B86               	goto	u4320
 10987  1385                     u4321:
 10988  1385  2B76               	goto	l10984
 10989  1386                     u4320:
 10990  1386  2B88               	goto	l10990
 10991                           	
 10992  1387                     l7637:	
 10993  1387  2B88               	goto	l10990
 10994                           	line	14
 10995                           	
 10996  1388                     l7638:	
 10997                           	line	15
 10998                           	
 10999  1388                     l10990:	
 11000  1388  082F               	movf	(___lwmod@divisor+1),w
 11001  1389  0231               	subwf	(___lwmod@dividend+1),w
 11002  138A  1D03               	skipz
 11003  138B  2B8E               	goto	u4335
 11004  138C  082E               	movf	(___lwmod@divisor),w
 11005  138D  0230               	subwf	(___lwmod@dividend),w
 11006  138E                     u4335:
 11007  138E  1C03               	skipc
 11008  138F  2B91               	goto	u4331
 11009  1390  2B92               	goto	u4330
 11010  1391                     u4331:
 11011  1391  2B99               	goto	l10994
 11012  1392                     u4330:
 11013                           	line	16
 11014                           	
 11015  1392                     l10992:	
 11016  1392  082E               	movf	(___lwmod@divisor),w
 11017  1393  02B0               	subwf	(___lwmod@dividend),f
 11018  1394  082F               	movf	(___lwmod@divisor+1),w
 11019  1395  1C03               	skipc
 11020  1396  03B1               	decf	(___lwmod@dividend+1),f
 11021  1397  02B1               	subwf	(___lwmod@dividend+1),f
 11022  1398  2B99               	goto	l10994
 11023                           	
 11024  1399                     l7639:	
 11025                           	line	17
 11026                           	
 11027  1399                     l10994:	
 11028  1399  3001               	movlw	01h
 11029                           	
 11030  139A                     u4345:
 11031  139A  1003               	clrc
 11032  139B  0CAF               	rrf	(___lwmod@divisor+1),f
 11033  139C  0CAE               	rrf	(___lwmod@divisor),f
 11034  139D  3EFF               	addlw	-1
 11035  139E  1D03               	skipz
 11036  139F  2B9A               	goto	u4345
 11037                           	line	18
 11038                           	
 11039  13A0                     l10996:	
 11040  13A0  3001               	movlw	low(01h)
 11041  13A1  02B3               	subwf	(___lwmod@counter),f
 11042  13A2  1D03               	btfss	status,2
 11043  13A3  2BA5               	goto	u4351
 11044  13A4  2BA6               	goto	u4350
 11045  13A5                     u4351:
 11046  13A5  2B88               	goto	l10990
 11047  13A6                     u4350:
 11048  13A6  2BA8               	goto	l10998
 11049                           	
 11050  13A7                     l7640:	
 11051  13A7  2BA8               	goto	l10998
 11052                           	line	19
 11053                           	
 11054  13A8                     l7634:	
 11055                           	line	20
 11056                           	
 11057  13A8                     l10998:	
 11058  13A8  0831               	movf	(___lwmod@dividend+1),w
 11059  13A9  01AF               	clrf	(?___lwmod+1)
 11060  13AA  07AF               	addwf	(?___lwmod+1)
 11061  13AB  0830               	movf	(___lwmod@dividend),w
 11062  13AC  01AE               	clrf	(?___lwmod)
 11063  13AD  07AE               	addwf	(?___lwmod)
 11064                           
 11065  13AE  2BAF               	goto	l7641
 11066                           	
 11067  13AF                     l11000:	
 11068                           	line	21
 11069                           	
 11070  13AF                     l7641:	
 11071  13AF  0008               	return
 11072                           	opt stack 0
 11073                           GLOBAL	__end_of___lwmod
 11074  13B0                     	__end_of___lwmod:
 11075 ;; =============== function ___lwmod ends ============
 11076                           
 11077                           	signat	___lwmod,8314
 11078                           	global	___lwdiv
 11079                           psect	text1094,local,class=CODE,delta=2
 11080                           global __ptext1094
 11081  08C6                     __ptext1094:
 11082                           
 11083 ;; *************** function ___lwdiv *****************
 11084 ;; Defined at:
 11085 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  divisor         2    6[BANK0 ] unsigned int 
 11088 ;;  dividend        2    8[BANK0 ] unsigned int 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  quotient        2   11[BANK0 ] unsigned int 
 11091 ;;  counter         1   13[BANK0 ] unsigned char 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2    6[BANK0 ] unsigned int 
 11094 ;; Registers used:
 11095 ;;		wreg, status,2, status,0
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11101 ;;      Params:         0       4       0       0       0
 11102 ;;      Locals:         0       3       0       0       0
 11103 ;;      Temps:          0       1       0       0       0
 11104 ;;      Totals:         0       8       0       0       0
 11105 ;;Total ram usage:        8 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    3
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_readAvgDistance
 11112 ;;		_ADCconvert
 11113 ;;		_sprintf
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           psect	text1094
 11117                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11118                           	line	5
 11119                           	global	__size_of___lwdiv
 11120  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 11121                           	
 11122  08C6                     ___lwdiv:	
 11123                           	opt	stack 1
 11124                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11125                           	line	9
 11126                           	
 11127  08C6                     l10954:	
 11128  08C6  1283               	bcf	status, 5	;RP0=0, select bank0
 11129  08C7  1303               	bcf	status, 6	;RP1=0, select bank0
 11130  08C8  01AB               	clrf	(___lwdiv@quotient)
 11131  08C9  01AC               	clrf	(___lwdiv@quotient+1)
 11132                           	line	10
 11133                           	
 11134  08CA                     l10956:	
 11135  08CA  0827               	movf	(___lwdiv@divisor+1),w
 11136  08CB  0426               	iorwf	(___lwdiv@divisor),w
 11137  08CC  1903               	skipnz
 11138  08CD  28CF               	goto	u4231
 11139  08CE  28D0               	goto	u4230
 11140  08CF                     u4231:
 11141  08CF  290E               	goto	l10976
 11142  08D0                     u4230:
 11143                           	line	11
 11144                           	
 11145  08D0                     l10958:	
 11146  08D0  01AD               	clrf	(___lwdiv@counter)
 11147  08D1  1403               	bsf	status,0
 11148  08D2  0DAD               	rlf	(___lwdiv@counter),f
 11149                           	line	12
 11150  08D3  28E0               	goto	l10964
 11151                           	
 11152  08D4                     l7626:	
 11153                           	line	13
 11154                           	
 11155  08D4                     l10960:	
 11156  08D4  3001               	movlw	01h
 11157                           	
 11158  08D5                     u4245:
 11159  08D5  1003               	clrc
 11160  08D6  0DA6               	rlf	(___lwdiv@divisor),f
 11161  08D7  0DA7               	rlf	(___lwdiv@divisor+1),f
 11162  08D8  3EFF               	addlw	-1
 11163  08D9  1D03               	skipz
 11164  08DA  28D5               	goto	u4245
 11165                           	line	14
 11166                           	
 11167  08DB                     l10962:	
 11168  08DB  3001               	movlw	(01h)
 11169  08DC  00AA               	movwf	(??___lwdiv+0)+0
 11170  08DD  082A               	movf	(??___lwdiv+0)+0,w
 11171  08DE  07AD               	addwf	(___lwdiv@counter),f
 11172  08DF  28E0               	goto	l10964
 11173                           	line	15
 11174                           	
 11175  08E0                     l7625:	
 11176                           	line	12
 11177                           	
 11178  08E0                     l10964:	
 11179  08E0  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 11180  08E1  28E3               	goto	u4251
 11181  08E2  28E4               	goto	u4250
 11182  08E3                     u4251:
 11183  08E3  28D4               	goto	l10960
 11184  08E4                     u4250:
 11185  08E4  28E6               	goto	l10966
 11186                           	
 11187  08E5                     l7627:	
 11188  08E5  28E6               	goto	l10966
 11189                           	line	16
 11190                           	
 11191  08E6                     l7628:	
 11192                           	line	17
 11193                           	
 11194  08E6                     l10966:	
 11195  08E6  3001               	movlw	01h
 11196                           	
 11197  08E7                     u4265:
 11198  08E7  1003               	clrc
 11199  08E8  0DAB               	rlf	(___lwdiv@quotient),f
 11200  08E9  0DAC               	rlf	(___lwdiv@quotient+1),f
 11201  08EA  3EFF               	addlw	-1
 11202  08EB  1D03               	skipz
 11203  08EC  28E7               	goto	u4265
 11204                           	line	18
 11205  08ED  0827               	movf	(___lwdiv@divisor+1),w
 11206  08EE  0229               	subwf	(___lwdiv@dividend+1),w
 11207  08EF  1D03               	skipz
 11208  08F0  28F3               	goto	u4275
 11209  08F1  0826               	movf	(___lwdiv@divisor),w
 11210  08F2  0228               	subwf	(___lwdiv@dividend),w
 11211  08F3                     u4275:
 11212  08F3  1C03               	skipc
 11213  08F4  28F6               	goto	u4271
 11214  08F5  28F7               	goto	u4270
 11215  08F6                     u4271:
 11216  08F6  28FF               	goto	l10972
 11217  08F7                     u4270:
 11218                           	line	19
 11219                           	
 11220  08F7                     l10968:	
 11221  08F7  0826               	movf	(___lwdiv@divisor),w
 11222  08F8  02A8               	subwf	(___lwdiv@dividend),f
 11223  08F9  0827               	movf	(___lwdiv@divisor+1),w
 11224  08FA  1C03               	skipc
 11225  08FB  03A9               	decf	(___lwdiv@dividend+1),f
 11226  08FC  02A9               	subwf	(___lwdiv@dividend+1),f
 11227                           	line	20
 11228                           	
 11229  08FD                     l10970:	
 11230  08FD  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 11231  08FE  28FF               	goto	l10972
 11232                           	line	21
 11233                           	
 11234  08FF                     l7629:	
 11235                           	line	22
 11236                           	
 11237  08FF                     l10972:	
 11238  08FF  3001               	movlw	01h
 11239                           	
 11240  0900                     u4285:
 11241  0900  1003               	clrc
 11242  0901  0CA7               	rrf	(___lwdiv@divisor+1),f
 11243  0902  0CA6               	rrf	(___lwdiv@divisor),f
 11244  0903  3EFF               	addlw	-1
 11245  0904  1D03               	skipz
 11246  0905  2900               	goto	u4285
 11247                           	line	23
 11248                           	
 11249  0906                     l10974:	
 11250  0906  3001               	movlw	low(01h)
 11251  0907  02AD               	subwf	(___lwdiv@counter),f
 11252  0908  1D03               	btfss	status,2
 11253  0909  290B               	goto	u4291
 11254  090A  290C               	goto	u4290
 11255  090B                     u4291:
 11256  090B  28E6               	goto	l10966
 11257  090C                     u4290:
 11258  090C  290E               	goto	l10976
 11259                           	
 11260  090D                     l7630:	
 11261  090D  290E               	goto	l10976
 11262                           	line	24
 11263                           	
 11264  090E                     l7624:	
 11265                           	line	25
 11266                           	
 11267  090E                     l10976:	
 11268  090E  082C               	movf	(___lwdiv@quotient+1),w
 11269  090F  01A7               	clrf	(?___lwdiv+1)
 11270  0910  07A7               	addwf	(?___lwdiv+1)
 11271  0911  082B               	movf	(___lwdiv@quotient),w
 11272  0912  01A6               	clrf	(?___lwdiv)
 11273  0913  07A6               	addwf	(?___lwdiv)
 11274                           
 11275  0914  2915               	goto	l7631
 11276                           	
 11277  0915                     l10978:	
 11278                           	line	26
 11279                           	
 11280  0915                     l7631:	
 11281  0915  0008               	return
 11282                           	opt stack 0
 11283                           GLOBAL	__end_of___lwdiv
 11284  0916                     	__end_of___lwdiv:
 11285 ;; =============== function ___lwdiv ends ============
 11286                           
 11287                           	signat	___lwdiv,8314
 11288                           	global	___wmul
 11289                           psect	text1095,local,class=CODE,delta=2
 11290                           global __ptext1095
 11291  117B                     __ptext1095:
 11292                           
 11293 ;; *************** function ___wmul *****************
 11294 ;; Defined at:
 11295 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11298 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  product         2    4[BANK0 ] unsigned int 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  2    0[BANK0 ] unsigned int 
 11303 ;; Registers used:
 11304 ;;		wreg, status,2, status,0
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11310 ;;      Params:         0       4       0       0       0
 11311 ;;      Locals:         0       2       0       0       0
 11312 ;;      Temps:          0       0       0       0       0
 11313 ;;      Totals:         0       6       0       0       0
 11314 ;;Total ram usage:        6 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    3
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		_ADCconvert
 11321 ;;		_robot_turnRight
 11322 ;;		_abs
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           psect	text1095
 11326                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11327                           	line	3
 11328                           	global	__size_of___wmul
 11329  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 11330                           	
 11331  117B                     ___wmul:	
 11332                           	opt	stack 2
 11333                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11334                           	line	4
 11335                           	
 11336  117B                     l10942:	
 11337  117B  1283               	bcf	status, 5	;RP0=0, select bank0
 11338  117C  1303               	bcf	status, 6	;RP1=0, select bank0
 11339  117D  01A4               	clrf	(___wmul@product)
 11340  117E  01A5               	clrf	(___wmul@product+1)
 11341  117F  2980               	goto	l10944
 11342                           	line	6
 11343                           	
 11344  1180                     l7618:	
 11345                           	line	7
 11346                           	
 11347  1180                     l10944:	
 11348  1180  1C20               	btfss	(___wmul@multiplier),(0)&7
 11349  1181  2983               	goto	u4191
 11350  1182  2984               	goto	u4190
 11351  1183                     u4191:
 11352  1183  298A               	goto	l7619
 11353  1184                     u4190:
 11354                           	line	8
 11355                           	
 11356  1184                     l10946:	
 11357  1184  0822               	movf	(___wmul@multiplicand),w
 11358  1185  07A4               	addwf	(___wmul@product),f
 11359  1186  1803               	skipnc
 11360  1187  0AA5               	incf	(___wmul@product+1),f
 11361  1188  0823               	movf	(___wmul@multiplicand+1),w
 11362  1189  07A5               	addwf	(___wmul@product+1),f
 11363                           	
 11364  118A                     l7619:	
 11365                           	line	9
 11366  118A  3001               	movlw	01h
 11367                           	
 11368  118B                     u4205:
 11369  118B  1003               	clrc
 11370  118C  0DA2               	rlf	(___wmul@multiplicand),f
 11371  118D  0DA3               	rlf	(___wmul@multiplicand+1),f
 11372  118E  3EFF               	addlw	-1
 11373  118F  1D03               	skipz
 11374  1190  298B               	goto	u4205
 11375                           	line	10
 11376                           	
 11377  1191                     l10948:	
 11378  1191  3001               	movlw	01h
 11379                           	
 11380  1192                     u4215:
 11381  1192  1003               	clrc
 11382  1193  0CA1               	rrf	(___wmul@multiplier+1),f
 11383  1194  0CA0               	rrf	(___wmul@multiplier),f
 11384  1195  3EFF               	addlw	-1
 11385  1196  1D03               	skipz
 11386  1197  2992               	goto	u4215
 11387                           	line	11
 11388  1198  0821               	movf	((___wmul@multiplier+1)),w
 11389  1199  0420               	iorwf	((___wmul@multiplier)),w
 11390  119A  1D03               	skipz
 11391  119B  299D               	goto	u4221
 11392  119C  299E               	goto	u4220
 11393  119D                     u4221:
 11394  119D  2980               	goto	l10944
 11395  119E                     u4220:
 11396  119E  299F               	goto	l10950
 11397                           	
 11398  119F                     l7620:	
 11399                           	line	12
 11400                           	
 11401  119F                     l10950:	
 11402  119F  0825               	movf	(___wmul@product+1),w
 11403  11A0  01A1               	clrf	(?___wmul+1)
 11404  11A1  07A1               	addwf	(?___wmul+1)
 11405  11A2  0824               	movf	(___wmul@product),w
 11406  11A3  01A0               	clrf	(?___wmul)
 11407  11A4  07A0               	addwf	(?___wmul)
 11408                           
 11409  11A5  29A6               	goto	l7621
 11410                           	
 11411  11A6                     l10952:	
 11412                           	line	13
 11413                           	
 11414  11A6                     l7621:	
 11415  11A6  0008               	return
 11416                           	opt stack 0
 11417                           GLOBAL	__end_of___wmul
 11418  11A7                     	__end_of___wmul:
 11419 ;; =============== function ___wmul ends ============
 11420                           
 11421                           	signat	___wmul,8314
 11422                           	global	_ser_isrx
 11423                           psect	text1096,local,class=CODE,delta=2
 11424                           global __ptext1096
 11425  107F                     __ptext1096:
 11426                           
 11427 ;; *************** function _ser_isrx *****************
 11428 ;; Defined at:
 11429 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;		None
 11432 ;; Auto vars:     Size  Location     Type
 11433 ;;		None
 11434 ;; Return value:  Size  Location     Type
 11435 ;;		None               void
 11436 ;; Registers used:
 11437 ;;		wreg, status,2, status,0
 11438 ;; Tracked objects:
 11439 ;;		On entry : 0/0
 11440 ;;		On exit  : 0/0
 11441 ;;		Unchanged: 0/0
 11442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11443 ;;      Params:         0       0       0       0       0
 11444 ;;      Locals:         0       0       0       0       0
 11445 ;;      Temps:          0       0       0       0       0
 11446 ;;      Totals:         0       0       0       0       0
 11447 ;;Total ram usage:        0 bytes
 11448 ;; Hardware stack levels used:    1
 11449 ;; Hardware stack levels required when called:    3
 11450 ;; This function calls:
 11451 ;;		Nothing
 11452 ;; This function is called by:
 11453 ;;		_ser_getch
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           psect	text1096
 11457                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11458                           	line	45
 11459                           	global	__size_of_ser_isrx
 11460  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11461                           	
 11462  107F                     _ser_isrx:	
 11463                           	opt	stack 1
 11464                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11465                           	line	46
 11466                           	
 11467  107F                     l10894:	
 11468                           ;ser.c: 46: if(OERR) {
 11469  107F  1283               	bcf	status, 5	;RP0=0, select bank0
 11470  1080  1303               	bcf	status, 6	;RP1=0, select bank0
 11471  1081  1C98               	btfss	(193/8),(193)&7
 11472  1082  2884               	goto	u4121
 11473  1083  2885               	goto	u4120
 11474  1084                     u4121:
 11475  1084  288A               	goto	l10902
 11476  1085                     u4120:
 11477                           	line	47
 11478                           	
 11479  1085                     l10896:	
 11480                           ;ser.c: 47: CREN = 0;
 11481  1085  1218               	bcf	(196/8),(196)&7
 11482                           	line	48
 11483                           ;ser.c: 48: CREN = 1;
 11484  1086  1618               	bsf	(196/8),(196)&7
 11485                           	line	49
 11486                           	
 11487  1087                     l10898:	
 11488                           ;ser.c: 49: return 0;
 11489  1087  1003               	clrc
 11490                           	
 11491  1088  2897               	goto	l6873
 11492                           	
 11493  1089                     l10900:	
 11494  1089  2897               	goto	l6873
 11495                           	line	50
 11496                           	
 11497  108A                     l6872:	
 11498                           	line	51
 11499                           	
 11500  108A                     l10902:	
 11501                           ;ser.c: 50: }
 11502                           ;ser.c: 51: return (rxiptr!=rxoptr);
 11503  108A  1683               	bsf	status, 5	;RP0=1, select bank1
 11504  108B  1303               	bcf	status, 6	;RP1=0, select bank1
 11505  108C  0858               	movf	(_rxiptr)^080h,w	;volatile
 11506  108D  0659               	xorwf	(_rxoptr)^080h,w	;volatile
 11507  108E  1D03               	skipz
 11508  108F  2891               	goto	u4131
 11509  1090  2892               	goto	u4130
 11510  1091                     u4131:
 11511  1091  2894               	goto	l10906
 11512  1092                     u4130:
 11513                           	
 11514  1092                     l10904:	
 11515  1092  1003               	clrc
 11516                           	
 11517  1093  2897               	goto	l6873
 11518                           	
 11519  1094                     l10622:	
 11520                           	
 11521  1094                     l10906:	
 11522  1094  1403               	setc
 11523                           	
 11524  1095  2897               	goto	l6873
 11525                           	
 11526  1096                     l10624:	
 11527  1096  2897               	goto	l6873
 11528                           	
 11529  1097                     l10908:	
 11530                           	line	52
 11531                           	
 11532  1097                     l6873:	
 11533  1097  0008               	return
 11534                           	opt stack 0
 11535                           GLOBAL	__end_of_ser_isrx
 11536  1098                     	__end_of_ser_isrx:
 11537 ;; =============== function _ser_isrx ends ============
 11538                           
 11539                           	signat	_ser_isrx,88
 11540                           	global	_spi_transfer
 11541                           psect	text1097,local,class=CODE,delta=2
 11542                           global __ptext1097
 11543  102B                     __ptext1097:
 11544                           
 11545 ;; *************** function _spi_transfer *****************
 11546 ;; Defined at:
 11547 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  data            1    wreg     unsigned char 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  data            1    2[BANK0 ] unsigned char 
 11552 ;;  temp            1    1[BANK0 ] unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      unsigned char 
 11555 ;; Registers used:
 11556 ;;		wreg
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11562 ;;      Params:         0       0       0       0       0
 11563 ;;      Locals:         0       2       0       0       0
 11564 ;;      Temps:          0       1       0       0       0
 11565 ;;      Totals:         0       3       0       0       0
 11566 ;;Total ram usage:        3 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    3
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_rotate
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           psect	text1097
 11576                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11577                           	line	50
 11578                           	global	__size_of_spi_transfer
 11579  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 11580                           	
 11581  102B                     _spi_transfer:	
 11582                           	opt	stack 3
 11583                           ; Regs used in _spi_transfer: [wreg]
 11584                           ;spi_transfer@data stored from wreg
 11585  102B  1283               	bcf	status, 5	;RP0=0, select bank0
 11586  102C  1303               	bcf	status, 6	;RP1=0, select bank0
 11587  102D  00A2               	movwf	(spi_transfer@data)
 11588                           	line	51
 11589                           	
 11590  102E                     l10842:	
 11591                           ;steppermotor.c: 51: unsigned char temp = 0;
 11592  102E  01A1               	clrf	(spi_transfer@temp)
 11593                           	line	53
 11594                           ;steppermotor.c: 53: SSPIF = 0;
 11595  102F  118C               	bcf	(99/8),(99)&7
 11596                           	line	54
 11597                           	
 11598  1030                     l10844:	
 11599                           ;steppermotor.c: 54: SSPBUF = data;
 11600  1030  0822               	movf	(spi_transfer@data),w
 11601  1031  0093               	movwf	(19)	;volatile
 11602                           	line	56
 11603                           ;steppermotor.c: 56: while (SSPIF == 0);
 11604  1032  2833               	goto	l3743
 11605                           	
 11606  1033                     l3744:	
 11607                           	
 11608  1033                     l3743:	
 11609  1033  1D8C               	btfss	(99/8),(99)&7
 11610  1034  2836               	goto	u3961
 11611  1035  2837               	goto	u3960
 11612  1036                     u3961:
 11613  1036  2833               	goto	l3743
 11614  1037                     u3960:
 11615  1037  2838               	goto	l10846
 11616                           	
 11617  1038                     l3745:	
 11618                           	line	57
 11619                           	
 11620  1038                     l10846:	
 11621                           ;steppermotor.c: 57: temp = SSPBUF;
 11622  1038  0813               	movf	(19),w	;volatile
 11623  1039  00A0               	movwf	(??_spi_transfer+0)+0
 11624  103A  0820               	movf	(??_spi_transfer+0)+0,w
 11625  103B  00A1               	movwf	(spi_transfer@temp)
 11626                           	line	58
 11627                           	
 11628  103C                     l10848:	
 11629                           ;steppermotor.c: 58: SSPIF = 0;
 11630  103C  118C               	bcf	(99/8),(99)&7
 11631  103D  283E               	goto	l3746
 11632                           	line	60
 11633                           	
 11634  103E                     l10850:	
 11635                           	line	61
 11636                           ;steppermotor.c: 60: return temp;
 11637                           ;	Return value of _spi_transfer is never used
 11638                           	
 11639  103E                     l3746:	
 11640  103E  0008               	return
 11641                           	opt stack 0
 11642                           GLOBAL	__end_of_spi_transfer
 11643  103F                     	__end_of_spi_transfer:
 11644 ;; =============== function _spi_transfer ends ============
 11645                           
 11646                           	signat	_spi_transfer,4217
 11647                           	global	_ser_putch
 11648                           psect	text1098,local,class=CODE,delta=2
 11649                           global __ptext1098
 11650  11FF                     __ptext1098:
 11651                           
 11652 ;; *************** function _ser_putch *****************
 11653 ;; Defined at:
 11654 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;  c               1    wreg     unsigned char 
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  c               1    1[BANK0 ] unsigned char 
 11659 ;; Return value:  Size  Location     Type
 11660 ;;		None               void
 11661 ;; Registers used:
 11662 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11663 ;; Tracked objects:
 11664 ;;		On entry : 0/0
 11665 ;;		On exit  : 0/0
 11666 ;;		Unchanged: 0/0
 11667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11668 ;;      Params:         0       0       0       0       0
 11669 ;;      Locals:         0       1       0       0       0
 11670 ;;      Temps:          0       1       0       0       0
 11671 ;;      Totals:         0       2       0       0       0
 11672 ;;Total ram usage:        2 bytes
 11673 ;; Hardware stack levels used:    1
 11674 ;; Hardware stack levels required when called:    3
 11675 ;; This function calls:
 11676 ;;		Nothing
 11677 ;; This function is called by:
 11678 ;;		_main
 11679 ;;		_ChargeMode
 11680 ;;		_robo_init
 11681 ;;		_robot_read
 11682 ;;		_RobotDrive
 11683 ;;		_robotTurn
 11684 ;;		_robot_turnRight
 11685 ;;		_RobotBattRead
 11686 ;;		_robotLoadSong
 11687 ;;		_ser_puts
 11688 ;;		_ser_puts2
 11689 ;;		_ser_puthex
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           psect	text1098
 11693                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11694                           	line	70
 11695                           	global	__size_of_ser_putch
 11696  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 11697                           	
 11698  11FF                     _ser_putch:	
 11699                           	opt	stack 2
 11700                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 11701                           ;ser_putch@c stored from wreg
 11702  11FF  1283               	bcf	status, 5	;RP0=0, select bank0
 11703  1200  1303               	bcf	status, 6	;RP1=0, select bank0
 11704  1201  00A1               	movwf	(ser_putch@c)
 11705                           	line	71
 11706                           	
 11707  1202                     l10800:	
 11708                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 11709  1202  2A04               	goto	l10802
 11710                           	
 11711  1203                     l6883:	
 11712                           	line	72
 11713                           ;ser.c: 72: continue;
 11714  1203  2A04               	goto	l10802
 11715                           	
 11716  1204                     l6882:	
 11717                           	line	71
 11718                           	
 11719  1204                     l10802:	
 11720  1204  1683               	bsf	status, 5	;RP0=1, select bank1
 11721  1205  1303               	bcf	status, 6	;RP1=0, select bank1
 11722  1206  085D               	movf	(_txiptr)^080h,w	;volatile
 11723  1207  3E01               	addlw	01h
 11724  1208  390F               	andlw	0Fh
 11725  1209  065E               	xorwf	(_txoptr)^080h,w	;volatile
 11726  120A  1903               	skipnz
 11727  120B  2A0D               	goto	u3911
 11728  120C  2A0E               	goto	u3910
 11729  120D                     u3911:
 11730  120D  2A04               	goto	l10802
 11731  120E                     u3910:
 11732                           	
 11733  120E                     l6884:	
 11734                           	line	73
 11735                           ;ser.c: 73: GIE=0;
 11736  120E  138B               	bcf	(95/8),(95)&7
 11737                           	line	74
 11738                           	
 11739  120F                     l10804:	
 11740                           ;ser.c: 74: txfifo[txiptr] = c;
 11741  120F  1283               	bcf	status, 5	;RP0=0, select bank0
 11742  1210  1303               	bcf	status, 6	;RP1=0, select bank0
 11743  1211  0821               	movf	(ser_putch@c),w
 11744  1212  00A0               	movwf	(??_ser_putch+0)+0
 11745  1213  1683               	bsf	status, 5	;RP0=1, select bank1
 11746  1214  1303               	bcf	status, 6	;RP1=0, select bank1
 11747  1215  085D               	movf	(_txiptr)^080h,w
 11748  1216  3EA0               	addlw	_txfifo&0ffh
 11749  1217  0084               	movwf	fsr0
 11750  1218  1283               	bcf	status, 5	;RP0=0, select bank0
 11751  1219  1303               	bcf	status, 6	;RP1=0, select bank0
 11752  121A  0820               	movf	(??_ser_putch+0)+0,w
 11753  121B  1783               	bsf	status, 7	;select IRP bank3
 11754  121C  0080               	movwf	indf
 11755                           	line	75
 11756                           	
 11757  121D                     l10806:	
 11758                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 11759  121D  1683               	bsf	status, 5	;RP0=1, select bank1
 11760  121E  1303               	bcf	status, 6	;RP1=0, select bank1
 11761  121F  085D               	movf	(_txiptr)^080h,w	;volatile
 11762  1220  3E01               	addlw	01h
 11763  1221  390F               	andlw	0Fh
 11764  1222  1283               	bcf	status, 5	;RP0=0, select bank0
 11765  1223  1303               	bcf	status, 6	;RP1=0, select bank0
 11766  1224  00A0               	movwf	(??_ser_putch+0)+0
 11767  1225  0820               	movf	(??_ser_putch+0)+0,w
 11768  1226  1683               	bsf	status, 5	;RP0=1, select bank1
 11769  1227  1303               	bcf	status, 6	;RP1=0, select bank1
 11770  1228  00DD               	movwf	(_txiptr)^080h	;volatile
 11771                           	line	76
 11772                           	
 11773  1229                     l10808:	
 11774                           ;ser.c: 76: TXIE=1;
 11775  1229  160C               	bsf	(1124/8)^080h,(1124)&7
 11776                           	line	77
 11777                           	
 11778  122A                     l10810:	
 11779                           ;ser.c: 77: GIE=1;
 11780  122A  178B               	bsf	(95/8),(95)&7
 11781                           	line	78
 11782                           	
 11783  122B                     l6885:	
 11784  122B  0008               	return
 11785                           	opt stack 0
 11786                           GLOBAL	__end_of_ser_putch
 11787  122C                     	__end_of_ser_putch:
 11788 ;; =============== function _ser_putch ends ============
 11789                           
 11790                           	signat	_ser_putch,4216
 11791                           	global	_Menu
 11792                           psect	text1099,local,class=CODE,delta=2
 11793                           global __ptext1099
 11794  13B0                     __ptext1099:
 11795                           
 11796 ;; *************** function _Menu *****************
 11797 ;; Defined at:
 11798 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  BTN_input       1    wreg     unsigned char 
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 11803 ;; Return value:  Size  Location     Type
 11804 ;;                  1    wreg      unsigned char 
 11805 ;; Registers used:
 11806 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11812 ;;      Params:         0       0       0       0       0
 11813 ;;      Locals:         0       1       0       0       0
 11814 ;;      Temps:          0       0       0       0       0
 11815 ;;      Totals:         0       1       0       0       0
 11816 ;;Total ram usage:        1 bytes
 11817 ;; Hardware stack levels used:    1
 11818 ;; Hardware stack levels required when called:    3
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_main
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           psect	text1099
 11826                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11827                           	line	201
 11828                           	global	__size_of_Menu
 11829  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 11830                           	
 11831  13B0                     _Menu:	
 11832                           	opt	stack 4
 11833                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 11834                           ;Menu@BTN_input stored from wreg
 11835  13B0  1283               	bcf	status, 5	;RP0=0, select bank0
 11836  13B1  1303               	bcf	status, 6	;RP1=0, select bank0
 11837  13B2  00A0               	movwf	(Menu@BTN_input)
 11838                           	line	202
 11839                           	
 11840  13B3                     l10776:	
 11841                           ;HMI.c: 202: switch (BTN_input)
 11842  13B3  2BE2               	goto	l10794
 11843                           	line	204
 11844                           ;HMI.c: 203: {
 11845                           ;HMI.c: 204: case 1:
 11846                           	
 11847  13B4                     l4562:	
 11848                           	line	206
 11849                           ;HMI.c: 206: break;
 11850  13B4  2BF4               	goto	l10796
 11851                           	line	207
 11852                           ;HMI.c: 207: case 2:
 11853                           	
 11854  13B5                     l4564:	
 11855                           	line	209
 11856                           ;HMI.c: 209: break;
 11857  13B5  2BF4               	goto	l10796
 11858                           	line	210
 11859                           ;HMI.c: 210: case 3:
 11860                           	
 11861  13B6                     l4565:	
 11862                           	line	211
 11863                           	
 11864  13B6                     l10778:	
 11865                           ;HMI.c: 211: pos--;
 11866  13B6  30FF               	movlw	low(-1)
 11867  13B7  1683               	bsf	status, 5	;RP0=1, select bank1
 11868  13B8  1303               	bcf	status, 6	;RP1=0, select bank1
 11869  13B9  07C6               	addwf	(_pos)^080h,f
 11870  13BA  1803               	skipnc
 11871  13BB  0AC7               	incf	(_pos+1)^080h,f
 11872  13BC  30FF               	movlw	high(-1)
 11873  13BD  07C7               	addwf	(_pos+1)^080h,f
 11874                           	line	212
 11875                           	
 11876  13BE                     l10780:	
 11877                           ;HMI.c: 212: if (pos < 0)
 11878  13BE  1FC7               	btfss	(_pos+1)^080h,7
 11879  13BF  2BC1               	goto	u3891
 11880  13C0  2BC2               	goto	u3890
 11881  13C1                     u3891:
 11882  13C1  2BF4               	goto	l10796
 11883  13C2                     u3890:
 11884                           	line	213
 11885                           	
 11886  13C2                     l10782:	
 11887                           ;HMI.c: 213: pos = 6 - 1;
 11888  13C2  3005               	movlw	low(05h)
 11889  13C3  00C6               	movwf	(_pos)^080h
 11890  13C4  3000               	movlw	high(05h)
 11891  13C5  00C7               	movwf	((_pos)^080h)+1
 11892  13C6  2BF4               	goto	l10796
 11893                           	
 11894  13C7                     l4566:	
 11895                           	line	215
 11896                           ;HMI.c: 215: break;
 11897  13C7  2BF4               	goto	l10796
 11898                           	line	216
 11899                           ;HMI.c: 216: case 4:
 11900                           	
 11901  13C8                     l4567:	
 11902                           	line	217
 11903                           	
 11904  13C8                     l10784:	
 11905                           ;HMI.c: 217: pos++;
 11906  13C8  3001               	movlw	low(01h)
 11907  13C9  1683               	bsf	status, 5	;RP0=1, select bank1
 11908  13CA  1303               	bcf	status, 6	;RP1=0, select bank1
 11909  13CB  07C6               	addwf	(_pos)^080h,f
 11910  13CC  1803               	skipnc
 11911  13CD  0AC7               	incf	(_pos+1)^080h,f
 11912  13CE  3000               	movlw	high(01h)
 11913  13CF  07C7               	addwf	(_pos+1)^080h,f
 11914                           	line	218
 11915                           ;HMI.c: 218: if (pos == 6)
 11916  13D0  3006               	movlw	06h
 11917  13D1  0646               	xorwf	(_pos)^080h,w
 11918  13D2  0447               	iorwf	(_pos+1)^080h,w
 11919  13D3  1D03               	skipz
 11920  13D4  2BD6               	goto	u3901
 11921  13D5  2BD7               	goto	u3900
 11922  13D6                     u3901:
 11923  13D6  2BF4               	goto	l10796
 11924  13D7                     u3900:
 11925                           	line	219
 11926                           	
 11927  13D7                     l10786:	
 11928                           ;HMI.c: 219: pos = 0;
 11929  13D7  01C6               	clrf	(_pos)^080h
 11930  13D8  01C7               	clrf	(_pos+1)^080h
 11931  13D9  2BF4               	goto	l10796
 11932                           	
 11933  13DA                     l4568:	
 11934                           	line	221
 11935                           ;HMI.c: 221: break;
 11936  13DA  2BF4               	goto	l10796
 11937                           	line	222
 11938                           ;HMI.c: 222: case 5:
 11939                           	
 11940  13DB                     l4569:	
 11941                           	line	223
 11942                           	
 11943  13DB                     l10788:	
 11944                           ;HMI.c: 223: return pos;
 11945  13DB  1683               	bsf	status, 5	;RP0=1, select bank1
 11946  13DC  1303               	bcf	status, 6	;RP1=0, select bank1
 11947  13DD  0846               	movf	(_pos)^080h,w
 11948  13DE  2BF6               	goto	l4570
 11949                           	
 11950  13DF                     l10790:	
 11951  13DF  2BF6               	goto	l4570
 11952                           	line	226
 11953                           ;HMI.c: 226: default:
 11954                           	
 11955  13E0                     l4571:	
 11956                           	line	228
 11957                           ;HMI.c: 228: break;
 11958  13E0  2BF4               	goto	l10796
 11959                           	line	229
 11960                           	
 11961  13E1                     l10792:	
 11962                           ;HMI.c: 229: }
 11963  13E1  2BF4               	goto	l10796
 11964                           	line	202
 11965                           	
 11966  13E2                     l4561:	
 11967                           	
 11968  13E2                     l10794:	
 11969  13E2  1283               	bcf	status, 5	;RP0=0, select bank0
 11970  13E3  0820               	movf	(Menu@BTN_input),w
 11971                           	; Switch size 1, requested type "space"
 11972                           ; Number of cases is 5, Range of values is 1 to 5
 11973                           ; switch strategies available:
 11974                           ; Name         Instructions Cycles
 11975                           ; simple_byte           16     9 (average)
 11976                           ; direct_byte           26    11 (fixed)
 11977                           ; jumptable            263     9 (fixed)
 11978                           ;	Chosen strategy is simple_byte
 11979                           
 11980                           	opt asmopt_off
 11981  13E4  3A01               	xorlw	1^0	; case 1
 11982  13E5  1903               	skipnz
 11983  13E6  2BF4               	goto	l10796
 11984  13E7  3A03               	xorlw	2^1	; case 2
 11985  13E8  1903               	skipnz
 11986  13E9  2BF4               	goto	l10796
 11987  13EA  3A01               	xorlw	3^2	; case 3
 11988  13EB  1903               	skipnz
 11989  13EC  2BB6               	goto	l10778
 11990  13ED  3A07               	xorlw	4^3	; case 4
 11991  13EE  1903               	skipnz
 11992  13EF  2BC8               	goto	l10784
 11993  13F0  3A01               	xorlw	5^4	; case 5
 11994  13F1  1903               	skipnz
 11995  13F2  2BDB               	goto	l10788
 11996  13F3  2BF4               	goto	l10796
 11997                           	opt asmopt_on
 11998                           
 11999                           	line	229
 12000                           	
 12001  13F4                     l4563:	
 12002                           	line	230
 12003                           	
 12004  13F4                     l10796:	
 12005                           ;HMI.c: 230: return 255;
 12006  13F4  30FF               	movlw	(0FFh)
 12007  13F5  2BF6               	goto	l4570
 12008                           	
 12009  13F6                     l10798:	
 12010                           	line	231
 12011                           	
 12012  13F6                     l4570:	
 12013  13F6  0008               	return
 12014                           	opt stack 0
 12015                           GLOBAL	__end_of_Menu
 12016  13F7                     	__end_of_Menu:
 12017 ;; =============== function _Menu ends ============
 12018                           
 12019                           	signat	_Menu,4217
 12020                           	global	_ser_init
 12021                           psect	text1100,local,class=CODE,delta=2
 12022                           global __ptext1100
 12023  10FB                     __ptext1100:
 12024                           
 12025 ;; *************** function _ser_init *****************
 12026 ;; Defined at:
 12027 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;		None
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;		None               void
 12034 ;; Registers used:
 12035 ;;		wreg, status,2, status,0
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12041 ;;      Params:         0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0
 12043 ;;      Temps:          0       1       0       0       0
 12044 ;;      Totals:         0       1       0       0       0
 12045 ;;Total ram usage:        1 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    3
 12048 ;; This function calls:
 12049 ;;		Nothing
 12050 ;; This function is called by:
 12051 ;;		_init
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           psect	text1100
 12055                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 12056                           	line	113
 12057                           	global	__size_of_ser_init
 12058  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 12059                           	
 12060  10FB                     _ser_init:	
 12061                           	opt	stack 3
 12062                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 12063                           	line	114
 12064                           	
 12065  10FB                     l10750:	
 12066                           ;ser.c: 114: TRISC |= 0b10000000;
 12067  10FB  1683               	bsf	status, 5	;RP0=1, select bank1
 12068  10FC  1303               	bcf	status, 6	;RP1=0, select bank1
 12069  10FD  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 12070                           	line	115
 12071                           	
 12072  10FE                     l10752:	
 12073                           ;ser.c: 115: TRISC &= 0b10111111;
 12074  10FE  30BF               	movlw	(0BFh)
 12075  10FF  1283               	bcf	status, 5	;RP0=0, select bank0
 12076  1100  1303               	bcf	status, 6	;RP1=0, select bank0
 12077  1101  00A0               	movwf	(??_ser_init+0)+0
 12078  1102  0820               	movf	(??_ser_init+0)+0,w
 12079  1103  1683               	bsf	status, 5	;RP0=1, select bank1
 12080  1104  1303               	bcf	status, 6	;RP1=0, select bank1
 12081  1105  0587               	andwf	(135)^080h,f	;volatile
 12082                           	line	116
 12083                           	
 12084  1106                     l10754:	
 12085                           ;ser.c: 116: BRGH=1;
 12086  1106  1518               	bsf	(1218/8)^080h,(1218)&7
 12087                           	line	118
 12088                           	
 12089  1107                     l10756:	
 12090                           ;ser.c: 118: SPBRG=20;
 12091  1107  3014               	movlw	(014h)
 12092  1108  0099               	movwf	(153)^080h	;volatile
 12093                           	line	121
 12094                           	
 12095  1109                     l10758:	
 12096                           ;ser.c: 121: TX9=0;
 12097  1109  1318               	bcf	(1222/8)^080h,(1222)&7
 12098                           	line	122
 12099                           	
 12100  110A                     l10760:	
 12101                           ;ser.c: 122: RX9=0;
 12102  110A  1283               	bcf	status, 5	;RP0=0, select bank0
 12103  110B  1303               	bcf	status, 6	;RP1=0, select bank0
 12104  110C  1318               	bcf	(198/8),(198)&7
 12105                           	line	124
 12106                           	
 12107  110D                     l10762:	
 12108                           ;ser.c: 124: SYNC=0;
 12109  110D  1683               	bsf	status, 5	;RP0=1, select bank1
 12110  110E  1303               	bcf	status, 6	;RP1=0, select bank1
 12111  110F  1218               	bcf	(1220/8)^080h,(1220)&7
 12112                           	line	125
 12113                           	
 12114  1110                     l10764:	
 12115                           ;ser.c: 125: SPEN=1;
 12116  1110  1283               	bcf	status, 5	;RP0=0, select bank0
 12117  1111  1303               	bcf	status, 6	;RP1=0, select bank0
 12118  1112  1798               	bsf	(199/8),(199)&7
 12119                           	line	126
 12120                           	
 12121  1113                     l10766:	
 12122                           ;ser.c: 126: CREN=1;
 12123  1113  1618               	bsf	(196/8),(196)&7
 12124                           	line	127
 12125                           	
 12126  1114                     l10768:	
 12127                           ;ser.c: 127: TXIE=0;
 12128  1114  1683               	bsf	status, 5	;RP0=1, select bank1
 12129  1115  1303               	bcf	status, 6	;RP1=0, select bank1
 12130  1116  120C               	bcf	(1124/8)^080h,(1124)&7
 12131                           	line	128
 12132                           	
 12133  1117                     l10770:	
 12134                           ;ser.c: 128: RCIE=1;
 12135  1117  168C               	bsf	(1125/8)^080h,(1125)&7
 12136                           	line	129
 12137                           	
 12138  1118                     l10772:	
 12139                           ;ser.c: 129: TXEN=1;
 12140  1118  1698               	bsf	(1221/8)^080h,(1221)&7
 12141                           	line	132
 12142                           	
 12143  1119                     l10774:	
 12144                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 12145  1119  3000               	movlw	(0)
 12146  111A  00DE               	movwf	(_txoptr)^080h	;volatile
 12147  111B  00DD               	movwf	(_txiptr)^080h	;volatile
 12148  111C  00D9               	movwf	(_rxoptr)^080h	;volatile
 12149  111D  1283               	bcf	status, 5	;RP0=0, select bank0
 12150  111E  1303               	bcf	status, 6	;RP1=0, select bank0
 12151  111F  00A0               	movwf	(??_ser_init+0)+0
 12152  1120  0820               	movf	(??_ser_init+0)+0,w
 12153  1121  1683               	bsf	status, 5	;RP0=1, select bank1
 12154  1122  1303               	bcf	status, 6	;RP1=0, select bank1
 12155  1123  00D8               	movwf	(_rxiptr)^080h	;volatile
 12156                           	line	133
 12157                           	
 12158  1124                     l6907:	
 12159  1124  0008               	return
 12160                           	opt stack 0
 12161                           GLOBAL	__end_of_ser_init
 12162  1125                     	__end_of_ser_init:
 12163 ;; =============== function _ser_init ends ============
 12164                           
 12165                           	signat	_ser_init,88
 12166                           	global	_adc_read
 12167                           psect	text1101,local,class=CODE,delta=2
 12168                           global __ptext1101
 12169  10D2                     __ptext1101:
 12170                           
 12171 ;; *************** function _adc_read *****************
 12172 ;; Defined at:
 12173 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;		None
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  2    0[BANK0 ] unsigned int 
 12180 ;; Registers used:
 12181 ;;		wreg, status,2, status,0
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12187 ;;      Params:         0       2       0       0       0
 12188 ;;      Locals:         0       2       0       0       0
 12189 ;;      Temps:          0       2       0       0       0
 12190 ;;      Totals:         0       6       0       0       0
 12191 ;;Total ram usage:        6 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:    3
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_adc_read_channel
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           psect	text1101
 12201                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 12202                           	line	76
 12203                           	global	__size_of_adc_read
 12204  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 12205                           	
 12206  10D2                     _adc_read:	
 12207                           	opt	stack 0
 12208                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 12209                           	line	79
 12210                           	
 12211  10D2                     l10630:	
 12212                           ;adc.c: 77: volatile unsigned int adc_value;
 12213                           ;adc.c: 79: ADRESH = 0;
 12214  10D2  1283               	bcf	status, 5	;RP0=0, select bank0
 12215  10D3  1303               	bcf	status, 6	;RP1=0, select bank0
 12216  10D4  019E               	clrf	(30)	;volatile
 12217                           	line	81
 12218                           	
 12219  10D5                     l10632:	
 12220                           ;adc.c: 81: GO = 1;
 12221  10D5  151F               	bsf	(250/8),(250)&7
 12222                           	line	82
 12223                           ;adc.c: 82: while(GO) continue;
 12224  10D6  28D7               	goto	l703
 12225                           	
 12226  10D7                     l704:	
 12227                           	
 12228  10D7                     l703:	
 12229  10D7  191F               	btfsc	(250/8),(250)&7
 12230  10D8  28DA               	goto	u3701
 12231  10D9  28DB               	goto	u3700
 12232  10DA                     u3701:
 12233  10DA  28D7               	goto	l703
 12234  10DB                     u3700:
 12235                           	
 12236  10DB                     l705:	
 12237                           	line	83
 12238                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12239  10DB  0000               nop ;#
 12240                           	line	84
 12241                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12242  10DC  0000               nop ;#
 12243                           	line	85
 12244                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12245  10DD  0000               nop ;#
 12246                           psect	text1101
 12247                           	line	88
 12248                           	
 12249  10DE                     l10634:	
 12250                           ;adc.c: 88: adc_value = ADRESH;
 12251  10DE  1283               	bcf	status, 5	;RP0=0, select bank0
 12252  10DF  1303               	bcf	status, 6	;RP1=0, select bank0
 12253  10E0  081E               	movf	(30),w	;volatile
 12254  10E1  00A2               	movwf	(??_adc_read+0)+0
 12255  10E2  01A3               	clrf	(??_adc_read+0)+0+1
 12256  10E3  0822               	movf	0+(??_adc_read+0)+0,w
 12257  10E4  00A4               	movwf	(adc_read@adc_value)	;volatile
 12258  10E5  0823               	movf	1+(??_adc_read+0)+0,w
 12259  10E6  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 12260                           	line	89
 12261                           ;adc.c: 89: adc_value <<= 1;
 12262  10E7  3001               	movlw	01h
 12263                           	
 12264  10E8                     u3715:
 12265  10E8  1003               	clrc
 12266  10E9  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 12267  10EA  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 12268  10EB  3EFF               	addlw	-1
 12269  10EC  1D03               	skipz
 12270  10ED  28E8               	goto	u3715
 12271                           	line	90
 12272                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 12273  10EE  1683               	bsf	status, 5	;RP0=1, select bank1
 12274  10EF  1303               	bcf	status, 6	;RP1=0, select bank1
 12275  10F0  081E               	movf	(158)^080h,w	;volatile
 12276                           	line	93
 12277                           	
 12278  10F1                     l10636:	
 12279                           ;adc.c: 93: return (adc_value);
 12280  10F1  1283               	bcf	status, 5	;RP0=0, select bank0
 12281  10F2  1303               	bcf	status, 6	;RP1=0, select bank0
 12282  10F3  0825               	movf	(adc_read@adc_value+1),w	;volatile
 12283  10F4  01A1               	clrf	(?_adc_read+1)
 12284  10F5  07A1               	addwf	(?_adc_read+1)
 12285  10F6  0824               	movf	(adc_read@adc_value),w	;volatile
 12286  10F7  01A0               	clrf	(?_adc_read)
 12287  10F8  07A0               	addwf	(?_adc_read)
 12288                           
 12289  10F9  28FA               	goto	l706
 12290                           	
 12291  10FA                     l10638:	
 12292                           	line	94
 12293                           	
 12294  10FA                     l706:	
 12295  10FA  0008               	return
 12296                           	opt stack 0
 12297                           GLOBAL	__end_of_adc_read
 12298  10FB                     	__end_of_adc_read:
 12299 ;; =============== function _adc_read ends ============
 12300                           
 12301                           	signat	_adc_read,90
 12302                           	global	_isr1
 12303                           psect	text1102,local,class=CODE,delta=2
 12304                           global __ptext1102
 12305  0916                     __ptext1102:
 12306                           
 12307 ;; *************** function _isr1 *****************
 12308 ;; Defined at:
 12309 ;;		line 107 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;		None
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;		None               void
 12316 ;; Registers used:
 12317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12323 ;;      Params:         0       0       0       0       0
 12324 ;;      Locals:         0       0       0       0       0
 12325 ;;      Temps:          5       0       0       0       0
 12326 ;;      Totals:         5       0       0       0       0
 12327 ;;Total ram usage:        5 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; Hardware stack levels required when called:    2
 12330 ;; This function calls:
 12331 ;;		i1___lwmod
 12332 ;;		_ReadButtons
 12333 ;; This function is called by:
 12334 ;;		Interrupt level 1
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           psect	text1102
 12338                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 12339                           	line	107
 12340                           	global	__size_of_isr1
 12341  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 12342                           	
 12343  0916                     _isr1:	
 12344                           	opt	stack 0
 12345                           ; Regs used in _isr1: [allreg]
 12346                           psect	intentry,class=CODE,delta=2
 12347                           global __pintentry
 12348  0004                     __pintentry:
 12349                           global interrupt_function
 12350  0004                     interrupt_function:
 12351                           	global saved_w
 12352  007E                     	saved_w	set	btemp+0
 12353  0004  00FE               	movwf	saved_w
 12354  0005  0E03               	swapf	status,w
 12355  0006  00F9               	movwf	(??_isr1+1)
 12356  0007  0804               	movf	fsr0,w
 12357  0008  00FA               	movwf	(??_isr1+2)
 12358  0009  080A               	movf	pclath,w
 12359  000A  00FB               	movwf	(??_isr1+3)
 12360  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 12361  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 12362  000D  087F               	movf	btemp+1,w
 12363  000E  00FC               	movwf	(??_isr1+4)
 12364  000F  120A  158A  2916   	ljmp	_isr1
 12365                           psect	text1102
 12366                           	line	108
 12367                           	
 12368  0916                     i1l10666:	
 12369                           ;Main.c: 108: if(TMR0IF)
 12370  0916  1D0B               	btfss	(90/8),(90)&7
 12371  0917  2919               	goto	u375_21
 12372  0918  291A               	goto	u375_20
 12373  0919                     u375_21:
 12374  0919  2969               	goto	i1l10688
 12375  091A                     u375_20:
 12376                           	line	110
 12377                           	
 12378  091A                     i1l10668:	
 12379                           ;Main.c: 109: {
 12380                           ;Main.c: 110: TMR0IF = 0;
 12381  091A  110B               	bcf	(90/8),(90)&7
 12382                           	line	111
 12383                           	
 12384  091B                     i1l10670:	
 12385                           ;Main.c: 111: TMR0 = 100;
 12386  091B  3064               	movlw	(064h)
 12387  091C  0081               	movwf	(1)	;volatile
 12388                           	line	113
 12389                           ;Main.c: 113: RTC_Counter++;
 12390  091D  3001               	movlw	low(01h)
 12391  091E  1683               	bsf	status, 5	;RP0=1, select bank1
 12392  091F  1303               	bcf	status, 6	;RP1=0, select bank1
 12393  0920  07BA               	addwf	(_RTC_Counter)^080h,f	;volatile
 12394  0921  1803               	skipnc
 12395  0922  0ABB               	incf	(_RTC_Counter+1)^080h,f	;volatile
 12396  0923  3000               	movlw	high(01h)
 12397  0924  07BB               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 12398                           	line	116
 12399                           	
 12400  0925                     i1l10672:	
 12401                           ;Main.c: 116: RTC_FLAG_1MS = 1;
 12402  0925  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 12403                           	line	117
 12404                           	
 12405  0926                     i1l10674:	
 12406                           ;Main.c: 117: if(RTC_Counter % 250 == 0)
 12407  0926  30FA               	movlw	low(0FAh)
 12408  0927  00F2               	movwf	(?i1___lwmod)
 12409  0928  3000               	movlw	high(0FAh)
 12410  0929  00F3               	movwf	((?i1___lwmod))+1
 12411  092A  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12412  092B  01F5               	clrf	1+(?i1___lwmod)+02h
 12413  092C  07F5               	addwf	1+(?i1___lwmod)+02h
 12414  092D  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12415  092E  01F4               	clrf	0+(?i1___lwmod)+02h
 12416  092F  07F4               	addwf	0+(?i1___lwmod)+02h
 12417                           
 12418  0930  160A  118A  2326   	fcall	i1___lwmod
              120A  158A         
 12419  0935  0873               	movf	((1+(?i1___lwmod))),w
 12420  0936  0472               	iorwf	((0+(?i1___lwmod))),w
 12421  0937  1D03               	skipz
 12422  0938  293A               	goto	u376_21
 12423  0939  293B               	goto	u376_20
 12424  093A                     u376_21:
 12425  093A  293D               	goto	i1l10678
 12426  093B                     u376_20:
 12427                           	line	119
 12428                           	
 12429  093B                     i1l10676:	
 12430                           ;Main.c: 118: {
 12431                           ;Main.c: 119: RTC_FLAG_250MS = 1;
 12432  093B  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 12433  093C  293D               	goto	i1l10678
 12434                           	line	120
 12435                           	
 12436  093D                     i1l2235:	
 12437                           	line	121
 12438                           	
 12439  093D                     i1l10678:	
 12440                           ;Main.c: 120: }
 12441                           ;Main.c: 121: if(RTC_Counter % 500 == 0)
 12442  093D  30F4               	movlw	low(01F4h)
 12443  093E  00F2               	movwf	(?i1___lwmod)
 12444  093F  3001               	movlw	high(01F4h)
 12445  0940  00F3               	movwf	((?i1___lwmod))+1
 12446  0941  1683               	bsf	status, 5	;RP0=1, select bank1
 12447  0942  1303               	bcf	status, 6	;RP1=0, select bank1
 12448  0943  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12449  0944  01F5               	clrf	1+(?i1___lwmod)+02h
 12450  0945  07F5               	addwf	1+(?i1___lwmod)+02h
 12451  0946  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12452  0947  01F4               	clrf	0+(?i1___lwmod)+02h
 12453  0948  07F4               	addwf	0+(?i1___lwmod)+02h
 12454                           
 12455  0949  160A  118A  2326   	fcall	i1___lwmod
              120A  158A         
 12456  094E  0873               	movf	((1+(?i1___lwmod))),w
 12457  094F  0472               	iorwf	((0+(?i1___lwmod))),w
 12458  0950  1D03               	skipz
 12459  0951  2953               	goto	u377_21
 12460  0952  2954               	goto	u377_20
 12461  0953                     u377_21:
 12462  0953  295A               	goto	i1l10684
 12463  0954                     u377_20:
 12464                           	line	123
 12465                           	
 12466  0954                     i1l10680:	
 12467                           ;Main.c: 122: {
 12468                           ;Main.c: 123: RTC_FLAG_500MS = 1;
 12469  0954  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 12470                           	line	124
 12471                           	
 12472  0955                     i1l10682:	
 12473                           ;Main.c: 124: RB0 ^= 0x01;
 12474  0955  1283               	bcf	status, 5	;RP0=0, select bank0
 12475  0956  1303               	bcf	status, 6	;RP1=0, select bank0
 12476  0957  3001               	movlw	1<<((48)&7)
 12477  0958  0686               	xorwf	((48)/8),f
 12478  0959  295A               	goto	i1l10684
 12479                           	line	125
 12480                           	
 12481  095A                     i1l2236:	
 12482                           	line	126
 12483                           	
 12484  095A                     i1l10684:	
 12485                           ;Main.c: 125: }
 12486                           ;Main.c: 126: if (buttonPressed == 0)
 12487  095A  08FD               	movf	(_buttonPressed),f
 12488  095B  1D03               	skipz	;volatile
 12489  095C  295E               	goto	u378_21
 12490  095D  295F               	goto	u378_20
 12491  095E                     u378_21:
 12492  095E  2969               	goto	i1l10688
 12493  095F                     u378_20:
 12494                           	line	128
 12495                           	
 12496  095F                     i1l10686:	
 12497                           ;Main.c: 127: {
 12498                           ;Main.c: 128: buttonPressed = ReadButtons();
 12499  095F  160A  118A  2288   	fcall	_ReadButtons
              120A  158A         
 12500  0964  00F8               	movwf	(??_isr1+0)+0
 12501  0965  0878               	movf	(??_isr1+0)+0,w
 12502  0966  00FD               	movwf	(_buttonPressed)	;volatile
 12503  0967  2969               	goto	i1l10688
 12504                           	line	129
 12505                           	
 12506  0968                     i1l2237:	
 12507  0968  2969               	goto	i1l10688
 12508                           	line	130
 12509                           	
 12510  0969                     i1l2234:	
 12511                           	line	131
 12512                           	
 12513  0969                     i1l10688:	
 12514                           ;Main.c: 129: }
 12515                           ;Main.c: 130: }
 12516                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 12517  0969  1283               	bcf	status, 5	;RP0=0, select bank0
 12518  096A  1303               	bcf	status, 6	;RP1=0, select bank0
 12519  096B  1E8C               	btfss	(101/8),(101)&7
 12520  096C  296E               	goto	u379_21
 12521  096D  296F               	goto	u379_20
 12522  096E                     u379_21:
 12523  096E  298B               	goto	i1l10698
 12524  096F                     u379_20:
 12525                           	
 12526  096F                     i1l10690:	
 12527  096F  081A               	movf	(26),w	;volatile
 12528  0970  00F8               	movwf	(??_isr1+0)+0
 12529  0971  1683               	bsf	status, 5	;RP0=1, select bank1
 12530  0972  1303               	bcf	status, 6	;RP1=0, select bank1
 12531  0973  0858               	movf	(_rxiptr)^080h,w
 12532  0974  3EA0               	addlw	_rxfifo&0ffh
 12533  0975  0084               	movwf	fsr0
 12534  0976  0878               	movf	(??_isr1+0)+0,w
 12535  0977  1383               	bcf	status, 7	;select IRP bank1
 12536  0978  0080               	movwf	indf
 12537                           	
 12538  0979                     i1l10692:	
 12539  0979  0858               	movf	(_rxiptr)^080h,w	;volatile
 12540  097A  3E01               	addlw	01h
 12541  097B  390F               	andlw	0Fh
 12542  097C  00F8               	movwf	(??_isr1+0)+0
 12543  097D  0878               	movf	(??_isr1+0)+0,w
 12544  097E  00DA               	movwf	(_ser_tmp)^080h
 12545                           	
 12546  097F                     i1l10694:	
 12547  097F  085A               	movf	(_ser_tmp)^080h,w
 12548  0980  0659               	xorwf	(_rxoptr)^080h,w	;volatile
 12549  0981  1903               	skipnz
 12550  0982  2984               	goto	u380_21
 12551  0983  2985               	goto	u380_20
 12552  0984                     u380_21:
 12553  0984  298B               	goto	i1l10698
 12554  0985                     u380_20:
 12555                           	
 12556  0985                     i1l10696:	
 12557  0985  085A               	movf	(_ser_tmp)^080h,w
 12558  0986  00F8               	movwf	(??_isr1+0)+0
 12559  0987  0878               	movf	(??_isr1+0)+0,w
 12560  0988  00D8               	movwf	(_rxiptr)^080h	;volatile
 12561  0989  298B               	goto	i1l10698
 12562                           	
 12563  098A                     i1l2239:	
 12564  098A  298B               	goto	i1l10698
 12565                           	
 12566  098B                     i1l2238:	
 12567                           	
 12568  098B                     i1l10698:	
 12569  098B  1283               	bcf	status, 5	;RP0=0, select bank0
 12570  098C  1E0C               	btfss	(100/8),(100)&7
 12571  098D  298F               	goto	u381_21
 12572  098E  2990               	goto	u381_20
 12573  098F                     u381_21:
 12574  098F  29B1               	goto	i1l2242
 12575  0990                     u381_20:
 12576                           	
 12577  0990                     i1l10700:	
 12578  0990  1683               	bsf	status, 5	;RP0=1, select bank1
 12579  0991  1303               	bcf	status, 6	;RP1=0, select bank1
 12580  0992  1E0C               	btfss	(1124/8)^080h,(1124)&7
 12581  0993  2995               	goto	u382_21
 12582  0994  2996               	goto	u382_20
 12583  0995                     u382_21:
 12584  0995  29B1               	goto	i1l2242
 12585  0996                     u382_20:
 12586                           	
 12587  0996                     i1l10702:	
 12588  0996  085E               	movf	(_txoptr)^080h,w
 12589  0997  3EA0               	addlw	_txfifo&0ffh
 12590  0998  0084               	movwf	fsr0
 12591  0999  1783               	bsf	status, 7	;select IRP bank3
 12592  099A  0800               	movf	indf,w
 12593  099B  1283               	bcf	status, 5	;RP0=0, select bank0
 12594  099C  1303               	bcf	status, 6	;RP1=0, select bank0
 12595  099D  0099               	movwf	(25)	;volatile
 12596                           	
 12597  099E                     i1l10704:	
 12598  099E  3001               	movlw	(01h)
 12599  099F  00F8               	movwf	(??_isr1+0)+0
 12600  09A0  0878               	movf	(??_isr1+0)+0,w
 12601  09A1  1683               	bsf	status, 5	;RP0=1, select bank1
 12602  09A2  1303               	bcf	status, 6	;RP1=0, select bank1
 12603  09A3  07DE               	addwf	(_txoptr)^080h,f	;volatile
 12604                           	
 12605  09A4                     i1l10706:	
 12606  09A4  300F               	movlw	(0Fh)
 12607  09A5  00F8               	movwf	(??_isr1+0)+0
 12608  09A6  0878               	movf	(??_isr1+0)+0,w
 12609  09A7  05DE               	andwf	(_txoptr)^080h,f	;volatile
 12610                           	
 12611  09A8                     i1l10708:	
 12612  09A8  085E               	movf	(_txoptr)^080h,w	;volatile
 12613  09A9  065D               	xorwf	(_txiptr)^080h,w	;volatile
 12614  09AA  1D03               	skipz
 12615  09AB  29AD               	goto	u383_21
 12616  09AC  29AE               	goto	u383_20
 12617  09AD                     u383_21:
 12618  09AD  29B1               	goto	i1l2242
 12619  09AE                     u383_20:
 12620                           	
 12621  09AE                     i1l10710:	
 12622  09AE  120C               	bcf	(1124/8)^080h,(1124)&7
 12623  09AF  29B1               	goto	i1l2242
 12624                           	
 12625  09B0                     i1l2241:	
 12626  09B0  29B1               	goto	i1l2242
 12627                           	
 12628  09B1                     i1l2240:	
 12629                           	line	132
 12630                           	
 12631  09B1                     i1l2242:	
 12632  09B1  087C               	movf	(??_isr1+4),w
 12633  09B2  1283               	bcf	status, 5	;RP0=0, select bank0
 12634  09B3  00FF               	movwf	btemp+1
 12635  09B4  087B               	movf	(??_isr1+3),w
 12636  09B5  008A               	movwf	pclath
 12637  09B6  087A               	movf	(??_isr1+2),w
 12638  09B7  0084               	movwf	fsr0
 12639  09B8  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 12640  09B9  0083               	movwf	status
 12641  09BA  0EFE               	swapf	saved_w,f
 12642  09BB  0E7E               	swapf	saved_w,w
 12643  09BC  0009               	retfie
 12644                           	opt stack 0
 12645                           GLOBAL	__end_of_isr1
 12646  09BD                     	__end_of_isr1:
 12647 ;; =============== function _isr1 ends ============
 12648                           
 12649                           	signat	_isr1,88
 12650                           	global	_ReadButtons
 12651                           psect	text1103,local,class=CODE,delta=2
 12652                           global __ptext1103
 12653  1288                     __ptext1103:
 12654                           
 12655 ;; *************** function _ReadButtons *****************
 12656 ;; Defined at:
 12657 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;		None
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;		None
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      unsigned char 
 12664 ;; Registers used:
 12665 ;;		wreg, status,2, status,0, pclath, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12671 ;;      Params:         0       0       0       0       0
 12672 ;;      Locals:         0       0       0       0       0
 12673 ;;      Temps:          0       0       0       0       0
 12674 ;;      Totals:         0       0       0       0       0
 12675 ;;Total ram usage:        0 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:    1
 12678 ;; This function calls:
 12679 ;;		_Debounce
 12680 ;; This function is called by:
 12681 ;;		_isr1
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           psect	text1103
 12685                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12686                           	line	159
 12687                           	global	__size_of_ReadButtons
 12688  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 12689                           	
 12690  1288                     _ReadButtons:	
 12691                           	opt	stack 0
 12692                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 12693                           	line	161
 12694                           	
 12695  1288                     i1l10712:	
 12696                           ;HMI.c: 161: Debounce();
 12697  1288  160A  118A  2768   	fcall	_Debounce
              160A  118A         
 12698                           	line	163
 12699                           	
 12700  128D                     i1l10714:	
 12701                           ;HMI.c: 163: if(UpPressed)
 12702  128D  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 12703  128E  2A90               	goto	u384_21
 12704  128F  2A91               	goto	u384_20
 12705  1290                     u384_21:
 12706  1290  2A95               	goto	i1l4553
 12707  1291                     u384_20:
 12708                           	line	165
 12709                           	
 12710  1291                     i1l10716:	
 12711                           ;HMI.c: 164: {
 12712                           ;HMI.c: 165: UpPressed = 0;
 12713  1291  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 12714                           	line	166
 12715                           	
 12716  1292                     i1l10718:	
 12717                           ;HMI.c: 166: return 1;
 12718  1292  3001               	movlw	(01h)
 12719  1293  2AB7               	goto	i1l4554
 12720                           	
 12721  1294                     i1l10720:	
 12722  1294  2AB7               	goto	i1l4554
 12723                           	line	168
 12724                           	
 12725  1295                     i1l4553:	
 12726                           	line	170
 12727                           ;HMI.c: 168: }
 12728                           ;HMI.c: 170: if(DownPressed)
 12729  1295  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 12730  1296  2A98               	goto	u385_21
 12731  1297  2A99               	goto	u385_20
 12732  1298                     u385_21:
 12733  1298  2A9D               	goto	i1l4555
 12734  1299                     u385_20:
 12735                           	line	172
 12736                           	
 12737  1299                     i1l10722:	
 12738                           ;HMI.c: 171: {
 12739                           ;HMI.c: 172: DownPressed = 0;
 12740  1299  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 12741                           	line	173
 12742                           	
 12743  129A                     i1l10724:	
 12744                           ;HMI.c: 173: return 2;
 12745  129A  3002               	movlw	(02h)
 12746  129B  2AB7               	goto	i1l4554
 12747                           	
 12748  129C                     i1l10726:	
 12749  129C  2AB7               	goto	i1l4554
 12750                           	line	175
 12751                           	
 12752  129D                     i1l4555:	
 12753                           	line	176
 12754                           ;HMI.c: 175: }
 12755                           ;HMI.c: 176: if(LeftPressed)
 12756  129D  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 12757  129E  2AA0               	goto	u386_21
 12758  129F  2AA1               	goto	u386_20
 12759  12A0                     u386_21:
 12760  12A0  2AA5               	goto	i1l4556
 12761  12A1                     u386_20:
 12762                           	line	178
 12763                           	
 12764  12A1                     i1l10728:	
 12765                           ;HMI.c: 177: {
 12766                           ;HMI.c: 178: LeftPressed = 0;
 12767  12A1  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 12768                           	line	179
 12769                           	
 12770  12A2                     i1l10730:	
 12771                           ;HMI.c: 179: return 3;
 12772  12A2  3003               	movlw	(03h)
 12773  12A3  2AB7               	goto	i1l4554
 12774                           	
 12775  12A4                     i1l10732:	
 12776  12A4  2AB7               	goto	i1l4554
 12777                           	line	181
 12778                           	
 12779  12A5                     i1l4556:	
 12780                           	line	182
 12781                           ;HMI.c: 181: }
 12782                           ;HMI.c: 182: if(RightPressed)
 12783  12A5  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 12784  12A6  2AA8               	goto	u387_21
 12785  12A7  2AA9               	goto	u387_20
 12786  12A8                     u387_21:
 12787  12A8  2AAD               	goto	i1l4557
 12788  12A9                     u387_20:
 12789                           	line	184
 12790                           	
 12791  12A9                     i1l10734:	
 12792                           ;HMI.c: 183: {
 12793                           ;HMI.c: 184: RightPressed = 0;
 12794  12A9  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 12795                           	line	185
 12796                           	
 12797  12AA                     i1l10736:	
 12798                           ;HMI.c: 185: return 4;
 12799  12AA  3004               	movlw	(04h)
 12800  12AB  2AB7               	goto	i1l4554
 12801                           	
 12802  12AC                     i1l10738:	
 12803  12AC  2AB7               	goto	i1l4554
 12804                           	line	187
 12805                           	
 12806  12AD                     i1l4557:	
 12807                           	line	189
 12808                           ;HMI.c: 187: }
 12809                           ;HMI.c: 189: if(CenterPressed)
 12810  12AD  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 12811  12AE  2AB0               	goto	u388_21
 12812  12AF  2AB1               	goto	u388_20
 12813  12B0                     u388_21:
 12814  12B0  2AB5               	goto	i1l10746
 12815  12B1                     u388_20:
 12816                           	line	191
 12817                           	
 12818  12B1                     i1l10740:	
 12819                           ;HMI.c: 190: {
 12820                           ;HMI.c: 191: CenterPressed = 0;
 12821  12B1  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 12822                           	line	192
 12823                           	
 12824  12B2                     i1l10742:	
 12825                           ;HMI.c: 192: return 5;
 12826  12B2  3005               	movlw	(05h)
 12827  12B3  2AB7               	goto	i1l4554
 12828                           	
 12829  12B4                     i1l10744:	
 12830  12B4  2AB7               	goto	i1l4554
 12831                           	line	194
 12832                           	
 12833  12B5                     i1l4558:	
 12834                           	line	195
 12835                           	
 12836  12B5                     i1l10746:	
 12837                           ;HMI.c: 194: }
 12838                           ;HMI.c: 195: return 0;
 12839  12B5  3000               	movlw	(0)
 12840  12B6  2AB7               	goto	i1l4554
 12841                           	
 12842  12B7                     i1l10748:	
 12843                           	line	196
 12844                           	
 12845  12B7                     i1l4554:	
 12846  12B7  0008               	return
 12847                           	opt stack 0
 12848                           GLOBAL	__end_of_ReadButtons
 12849  12B8                     	__end_of_ReadButtons:
 12850 ;; =============== function _ReadButtons ends ============
 12851                           
 12852                           	signat	_ReadButtons,89
 12853                           	global	i1___lwmod
 12854                           psect	text1104,local,class=CODE,delta=2
 12855                           global __ptext1104
 12856  1326                     __ptext1104:
 12857                           
 12858 ;; *************** function i1___lwmod *****************
 12859 ;; Defined at:
 12860 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;  __lwmod         2    0[COMMON] unsigned int 
 12863 ;;  __lwmod         2    2[COMMON] unsigned int 
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;  __lwmod         1    5[COMMON] unsigned char 
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  2    0[COMMON] unsigned int 
 12868 ;; Registers used:
 12869 ;;		wreg, status,2, status,0
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12875 ;;      Params:         4       0       0       0       0
 12876 ;;      Locals:         1       0       0       0       0
 12877 ;;      Temps:          1       0       0       0       0
 12878 ;;      Totals:         6       0       0       0       0
 12879 ;;Total ram usage:        6 bytes
 12880 ;; Hardware stack levels used:    1
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_isr1
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           psect	text1104
 12888                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12889                           	line	5
 12890                           	global	__size_ofi1___lwmod
 12891  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 12892                           	
 12893  1326                     i1___lwmod:	
 12894                           	opt	stack 1
 12895                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 12896                           	line	8
 12897                           	
 12898  1326                     i1l11076:	
 12899  1326  0873               	movf	(i1___lwmod@divisor+1),w
 12900  1327  0472               	iorwf	(i1___lwmod@divisor),w
 12901  1328  1903               	skipnz
 12902  1329  2B2B               	goto	u455_21
 12903  132A  2B2C               	goto	u455_20
 12904  132B                     u455_21:
 12905  132B  2B62               	goto	i1l11094
 12906  132C                     u455_20:
 12907                           	line	9
 12908                           	
 12909  132C                     i1l11078:	
 12910  132C  01F7               	clrf	(i1___lwmod@counter)
 12911  132D  1403               	bsf	status,0
 12912  132E  0DF7               	rlf	(i1___lwmod@counter),f
 12913                           	line	10
 12914  132F  2B3C               	goto	i1l11084
 12915                           	
 12916  1330                     i1l7636:	
 12917                           	line	11
 12918                           	
 12919  1330                     i1l11080:	
 12920  1330  3001               	movlw	01h
 12921                           	
 12922  1331                     u456_25:
 12923  1331  1003               	clrc
 12924  1332  0DF2               	rlf	(i1___lwmod@divisor),f
 12925  1333  0DF3               	rlf	(i1___lwmod@divisor+1),f
 12926  1334  3EFF               	addlw	-1
 12927  1335  1D03               	skipz
 12928  1336  2B31               	goto	u456_25
 12929                           	line	12
 12930                           	
 12931  1337                     i1l11082:	
 12932  1337  3001               	movlw	(01h)
 12933  1338  00F6               	movwf	(??i1___lwmod+0)+0
 12934  1339  0876               	movf	(??i1___lwmod+0)+0,w
 12935  133A  07F7               	addwf	(i1___lwmod@counter),f
 12936  133B  2B3C               	goto	i1l11084
 12937                           	line	13
 12938                           	
 12939  133C                     i1l7635:	
 12940                           	line	10
 12941                           	
 12942  133C                     i1l11084:	
 12943  133C  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 12944  133D  2B3F               	goto	u457_21
 12945  133E  2B40               	goto	u457_20
 12946  133F                     u457_21:
 12947  133F  2B30               	goto	i1l11080
 12948  1340                     u457_20:
 12949  1340  2B42               	goto	i1l11086
 12950                           	
 12951  1341                     i1l7637:	
 12952  1341  2B42               	goto	i1l11086
 12953                           	line	14
 12954                           	
 12955  1342                     i1l7638:	
 12956                           	line	15
 12957                           	
 12958  1342                     i1l11086:	
 12959  1342  0873               	movf	(i1___lwmod@divisor+1),w
 12960  1343  0275               	subwf	(i1___lwmod@dividend+1),w
 12961  1344  1D03               	skipz
 12962  1345  2B48               	goto	u458_25
 12963  1346  0872               	movf	(i1___lwmod@divisor),w
 12964  1347  0274               	subwf	(i1___lwmod@dividend),w
 12965  1348                     u458_25:
 12966  1348  1C03               	skipc
 12967  1349  2B4B               	goto	u458_21
 12968  134A  2B4C               	goto	u458_20
 12969  134B                     u458_21:
 12970  134B  2B53               	goto	i1l11090
 12971  134C                     u458_20:
 12972                           	line	16
 12973                           	
 12974  134C                     i1l11088:	
 12975  134C  0872               	movf	(i1___lwmod@divisor),w
 12976  134D  02F4               	subwf	(i1___lwmod@dividend),f
 12977  134E  0873               	movf	(i1___lwmod@divisor+1),w
 12978  134F  1C03               	skipc
 12979  1350  03F5               	decf	(i1___lwmod@dividend+1),f
 12980  1351  02F5               	subwf	(i1___lwmod@dividend+1),f
 12981  1352  2B53               	goto	i1l11090
 12982                           	
 12983  1353                     i1l7639:	
 12984                           	line	17
 12985                           	
 12986  1353                     i1l11090:	
 12987  1353  3001               	movlw	01h
 12988                           	
 12989  1354                     u459_25:
 12990  1354  1003               	clrc
 12991  1355  0CF3               	rrf	(i1___lwmod@divisor+1),f
 12992  1356  0CF2               	rrf	(i1___lwmod@divisor),f
 12993  1357  3EFF               	addlw	-1
 12994  1358  1D03               	skipz
 12995  1359  2B54               	goto	u459_25
 12996                           	line	18
 12997                           	
 12998  135A                     i1l11092:	
 12999  135A  3001               	movlw	low(01h)
 13000  135B  02F7               	subwf	(i1___lwmod@counter),f
 13001  135C  1D03               	btfss	status,2
 13002  135D  2B5F               	goto	u460_21
 13003  135E  2B60               	goto	u460_20
 13004  135F                     u460_21:
 13005  135F  2B42               	goto	i1l11086
 13006  1360                     u460_20:
 13007  1360  2B62               	goto	i1l11094
 13008                           	
 13009  1361                     i1l7640:	
 13010  1361  2B62               	goto	i1l11094
 13011                           	line	19
 13012                           	
 13013  1362                     i1l7634:	
 13014                           	line	20
 13015                           	
 13016  1362                     i1l11094:	
 13017  1362  0875               	movf	(i1___lwmod@dividend+1),w
 13018  1363  01F3               	clrf	(?i1___lwmod+1)
 13019  1364  07F3               	addwf	(?i1___lwmod+1)
 13020  1365  0874               	movf	(i1___lwmod@dividend),w
 13021  1366  01F2               	clrf	(?i1___lwmod)
 13022  1367  07F2               	addwf	(?i1___lwmod)
 13023                           
 13024  1368  2B69               	goto	i1l7641
 13025                           	
 13026  1369                     i1l11096:	
 13027                           	line	21
 13028                           	
 13029  1369                     i1l7641:	
 13030  1369  0008               	return
 13031                           	opt stack 0
 13032                           GLOBAL	__end_ofi1___lwmod
 13033  136A                     	__end_ofi1___lwmod:
 13034 ;; =============== function i1___lwmod ends ============
 13035                           
 13036                           	signat	i1___lwmod,90
 13037                           	global	_Debounce
 13038                           psect	text1105,local,class=CODE,delta=2
 13039                           global __ptext1105
 13040  1768                     __ptext1105:
 13041                           
 13042 ;; *************** function _Debounce *****************
 13043 ;; Defined at:
 13044 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;		None               void
 13051 ;; Registers used:
 13052 ;;		wreg, status,2, status,0
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13058 ;;      Params:         0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0
 13060 ;;      Temps:          1       0       0       0       0
 13061 ;;      Totals:         1       0       0       0       0
 13062 ;;Total ram usage:        1 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_ReadButtons
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           psect	text1105
 13071                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 13072                           	line	77
 13073                           	global	__size_of_Debounce
 13074  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 13075                           	
 13076  1768                     _Debounce:	
 13077                           	opt	stack 0
 13078                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 13079                           	line	79
 13080                           	
 13081  1768                     i1l10852:	
 13082                           ;HMI.c: 79: if(!RB2)
 13083  1768  1283               	bcf	status, 5	;RP0=0, select bank0
 13084  1769  1303               	bcf	status, 6	;RP1=0, select bank0
 13085  176A  1906               	btfsc	(50/8),(50)&7
 13086  176B  2F6D               	goto	u397_21
 13087  176C  2F6E               	goto	u397_20
 13088  176D                     u397_21:
 13089  176D  2F82               	goto	i1l4535
 13090  176E                     u397_20:
 13091                           	line	81
 13092                           	
 13093  176E                     i1l10854:	
 13094                           ;HMI.c: 80: {
 13095                           ;HMI.c: 81: UpDebounceCount++;
 13096  176E  3001               	movlw	(01h)
 13097  176F  00F2               	movwf	(??_Debounce+0)+0
 13098  1770  0872               	movf	(??_Debounce+0)+0,w
 13099  1771  1683               	bsf	status, 5	;RP0=1, select bank1
 13100  1772  1303               	bcf	status, 6	;RP1=0, select bank1
 13101  1773  07D4               	addwf	(_UpDebounceCount)^080h,f	;volatile
 13102                           	line	82
 13103                           	
 13104  1774                     i1l10856:	
 13105                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 13106  1774  300A               	movlw	(0Ah)
 13107  1775  0254               	subwf	(_UpDebounceCount)^080h,w	;volatile
 13108  1776  1C03               	skipc
 13109  1777  2F79               	goto	u398_21
 13110  1778  2F7A               	goto	u398_20
 13111  1779                     u398_21:
 13112  1779  2F86               	goto	i1l4537
 13113  177A                     u398_20:
 13114                           	
 13115  177A                     i1l10858:	
 13116  177A  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 13117  177B  2F7D               	goto	u399_21
 13118  177C  2F7E               	goto	u399_20
 13119  177D                     u399_21:
 13120  177D  2F86               	goto	i1l4537
 13121  177E                     u399_20:
 13122                           	line	84
 13123                           	
 13124  177E                     i1l10860:	
 13125                           ;HMI.c: 83: {
 13126                           ;HMI.c: 84: UpPressed = 1;
 13127  177E  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 13128                           	line	85
 13129                           ;HMI.c: 85: UpReleased = 0;
 13130  177F  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 13131  1780  2F86               	goto	i1l4537
 13132                           	line	86
 13133                           	
 13134  1781                     i1l4536:	
 13135                           	line	87
 13136                           ;HMI.c: 86: }
 13137                           ;HMI.c: 87: }
 13138  1781  2F86               	goto	i1l4537
 13139                           	line	88
 13140                           	
 13141  1782                     i1l4535:	
 13142                           	line	90
 13143                           ;HMI.c: 88: else
 13144                           ;HMI.c: 89: {
 13145                           ;HMI.c: 90: UpDebounceCount = 0;
 13146  1782  1683               	bsf	status, 5	;RP0=1, select bank1
 13147  1783  1303               	bcf	status, 6	;RP1=0, select bank1
 13148  1784  01D4               	clrf	(_UpDebounceCount)^080h	;volatile
 13149                           	line	91
 13150                           ;HMI.c: 91: UpReleased = 1;
 13151  1785  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 13152                           	line	92
 13153                           	
 13154  1786                     i1l4537:	
 13155                           	line	95
 13156                           ;HMI.c: 92: }
 13157                           ;HMI.c: 95: if(!RB3)
 13158  1786  1283               	bcf	status, 5	;RP0=0, select bank0
 13159  1787  1303               	bcf	status, 6	;RP1=0, select bank0
 13160  1788  1986               	btfsc	(51/8),(51)&7
 13161  1789  2F8B               	goto	u400_21
 13162  178A  2F8C               	goto	u400_20
 13163  178B                     u400_21:
 13164  178B  2FA0               	goto	i1l4538
 13165  178C                     u400_20:
 13166                           	line	97
 13167                           	
 13168  178C                     i1l10862:	
 13169                           ;HMI.c: 96: {
 13170                           ;HMI.c: 97: DownDebounceCount++;
 13171  178C  3001               	movlw	(01h)
 13172  178D  00F2               	movwf	(??_Debounce+0)+0
 13173  178E  0872               	movf	(??_Debounce+0)+0,w
 13174  178F  1683               	bsf	status, 5	;RP0=1, select bank1
 13175  1790  1303               	bcf	status, 6	;RP1=0, select bank1
 13176  1791  07D0               	addwf	(_DownDebounceCount)^080h,f	;volatile
 13177                           	line	98
 13178                           	
 13179  1792                     i1l10864:	
 13180                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 13181  1792  300A               	movlw	(0Ah)
 13182  1793  0250               	subwf	(_DownDebounceCount)^080h,w	;volatile
 13183  1794  1C03               	skipc
 13184  1795  2F97               	goto	u401_21
 13185  1796  2F98               	goto	u401_20
 13186  1797                     u401_21:
 13187  1797  2FA4               	goto	i1l4540
 13188  1798                     u401_20:
 13189                           	
 13190  1798                     i1l10866:	
 13191  1798  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 13192  1799  2F9B               	goto	u402_21
 13193  179A  2F9C               	goto	u402_20
 13194  179B                     u402_21:
 13195  179B  2FA4               	goto	i1l4540
 13196  179C                     u402_20:
 13197                           	line	100
 13198                           	
 13199  179C                     i1l10868:	
 13200                           ;HMI.c: 99: {
 13201                           ;HMI.c: 100: DownPressed = 1;
 13202  179C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 13203                           	line	101
 13204                           ;HMI.c: 101: DownReleased = 0;
 13205  179D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 13206  179E  2FA4               	goto	i1l4540
 13207                           	line	102
 13208                           	
 13209  179F                     i1l4539:	
 13210                           	line	103
 13211                           ;HMI.c: 102: }
 13212                           ;HMI.c: 103: }
 13213  179F  2FA4               	goto	i1l4540
 13214                           	line	104
 13215                           	
 13216  17A0                     i1l4538:	
 13217                           	line	106
 13218                           ;HMI.c: 104: else
 13219                           ;HMI.c: 105: {
 13220                           ;HMI.c: 106: DownDebounceCount = 0;
 13221  17A0  1683               	bsf	status, 5	;RP0=1, select bank1
 13222  17A1  1303               	bcf	status, 6	;RP1=0, select bank1
 13223  17A2  01D0               	clrf	(_DownDebounceCount)^080h	;volatile
 13224                           	line	107
 13225                           ;HMI.c: 107: DownReleased = 1;
 13226  17A3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 13227                           	line	108
 13228                           	
 13229  17A4                     i1l4540:	
 13230                           	line	110
 13231                           ;HMI.c: 108: }
 13232                           ;HMI.c: 110: if(!RB4)
 13233  17A4  1283               	bcf	status, 5	;RP0=0, select bank0
 13234  17A5  1303               	bcf	status, 6	;RP1=0, select bank0
 13235  17A6  1A06               	btfsc	(52/8),(52)&7
 13236  17A7  2FA9               	goto	u403_21
 13237  17A8  2FAA               	goto	u403_20
 13238  17A9                     u403_21:
 13239  17A9  2FBE               	goto	i1l4541
 13240  17AA                     u403_20:
 13241                           	line	112
 13242                           	
 13243  17AA                     i1l10870:	
 13244                           ;HMI.c: 111: {
 13245                           ;HMI.c: 112: LeftDebounceCount++;
 13246  17AA  3001               	movlw	(01h)
 13247  17AB  00F2               	movwf	(??_Debounce+0)+0
 13248  17AC  0872               	movf	(??_Debounce+0)+0,w
 13249  17AD  1683               	bsf	status, 5	;RP0=1, select bank1
 13250  17AE  1303               	bcf	status, 6	;RP1=0, select bank1
 13251  17AF  07D1               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 13252                           	line	113
 13253                           	
 13254  17B0                     i1l10872:	
 13255                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 13256  17B0  300A               	movlw	(0Ah)
 13257  17B1  0251               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 13258  17B2  1C03               	skipc
 13259  17B3  2FB5               	goto	u404_21
 13260  17B4  2FB6               	goto	u404_20
 13261  17B5                     u404_21:
 13262  17B5  2FC2               	goto	i1l4543
 13263  17B6                     u404_20:
 13264                           	
 13265  17B6                     i1l10874:	
 13266  17B6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 13267  17B7  2FB9               	goto	u405_21
 13268  17B8  2FBA               	goto	u405_20
 13269  17B9                     u405_21:
 13270  17B9  2FC2               	goto	i1l4543
 13271  17BA                     u405_20:
 13272                           	line	115
 13273                           	
 13274  17BA                     i1l10876:	
 13275                           ;HMI.c: 114: {
 13276                           ;HMI.c: 115: LeftPressed = 1;
 13277  17BA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 13278                           	line	116
 13279                           ;HMI.c: 116: LeftReleased = 0;
 13280  17BB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 13281  17BC  2FC2               	goto	i1l4543
 13282                           	line	117
 13283                           	
 13284  17BD                     i1l4542:	
 13285                           	line	118
 13286                           ;HMI.c: 117: }
 13287                           ;HMI.c: 118: }
 13288  17BD  2FC2               	goto	i1l4543
 13289                           	line	119
 13290                           	
 13291  17BE                     i1l4541:	
 13292                           	line	121
 13293                           ;HMI.c: 119: else
 13294                           ;HMI.c: 120: {
 13295                           ;HMI.c: 121: LeftDebounceCount = 0;
 13296  17BE  1683               	bsf	status, 5	;RP0=1, select bank1
 13297  17BF  1303               	bcf	status, 6	;RP1=0, select bank1
 13298  17C0  01D1               	clrf	(_LeftDebounceCount)^080h	;volatile
 13299                           	line	122
 13300                           ;HMI.c: 122: LeftReleased = 1;
 13301  17C1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 13302                           	line	123
 13303                           	
 13304  17C2                     i1l4543:	
 13305                           	line	125
 13306                           ;HMI.c: 123: }
 13307                           ;HMI.c: 125: if(!RB5)
 13308  17C2  1283               	bcf	status, 5	;RP0=0, select bank0
 13309  17C3  1303               	bcf	status, 6	;RP1=0, select bank0
 13310  17C4  1A86               	btfsc	(53/8),(53)&7
 13311  17C5  2FC7               	goto	u406_21
 13312  17C6  2FC8               	goto	u406_20
 13313  17C7                     u406_21:
 13314  17C7  2FDC               	goto	i1l4544
 13315  17C8                     u406_20:
 13316                           	line	127
 13317                           	
 13318  17C8                     i1l10878:	
 13319                           ;HMI.c: 126: {
 13320                           ;HMI.c: 127: RightDebounceCount++;
 13321  17C8  3001               	movlw	(01h)
 13322  17C9  00F2               	movwf	(??_Debounce+0)+0
 13323  17CA  0872               	movf	(??_Debounce+0)+0,w
 13324  17CB  1683               	bsf	status, 5	;RP0=1, select bank1
 13325  17CC  1303               	bcf	status, 6	;RP1=0, select bank1
 13326  17CD  07D3               	addwf	(_RightDebounceCount)^080h,f	;volatile
 13327                           	line	128
 13328                           	
 13329  17CE                     i1l10880:	
 13330                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 13331  17CE  300A               	movlw	(0Ah)
 13332  17CF  0253               	subwf	(_RightDebounceCount)^080h,w	;volatile
 13333  17D0  1C03               	skipc
 13334  17D1  2FD3               	goto	u407_21
 13335  17D2  2FD4               	goto	u407_20
 13336  17D3                     u407_21:
 13337  17D3  2FE0               	goto	i1l4546
 13338  17D4                     u407_20:
 13339                           	
 13340  17D4                     i1l10882:	
 13341  17D4  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 13342  17D5  2FD7               	goto	u408_21
 13343  17D6  2FD8               	goto	u408_20
 13344  17D7                     u408_21:
 13345  17D7  2FE0               	goto	i1l4546
 13346  17D8                     u408_20:
 13347                           	line	130
 13348                           	
 13349  17D8                     i1l10884:	
 13350                           ;HMI.c: 129: {
 13351                           ;HMI.c: 130: RightPressed = 1;
 13352  17D8  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 13353                           	line	131
 13354                           ;HMI.c: 131: RightReleased = 0;
 13355  17D9  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 13356  17DA  2FE0               	goto	i1l4546
 13357                           	line	132
 13358                           	
 13359  17DB                     i1l4545:	
 13360                           	line	133
 13361                           ;HMI.c: 132: }
 13362                           ;HMI.c: 133: }
 13363  17DB  2FE0               	goto	i1l4546
 13364                           	line	134
 13365                           	
 13366  17DC                     i1l4544:	
 13367                           	line	136
 13368                           ;HMI.c: 134: else
 13369                           ;HMI.c: 135: {
 13370                           ;HMI.c: 136: RightDebounceCount = 0;
 13371  17DC  1683               	bsf	status, 5	;RP0=1, select bank1
 13372  17DD  1303               	bcf	status, 6	;RP1=0, select bank1
 13373  17DE  01D3               	clrf	(_RightDebounceCount)^080h	;volatile
 13374                           	line	137
 13375                           ;HMI.c: 137: RightReleased = 1;
 13376  17DF  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 13377                           	line	138
 13378                           	
 13379  17E0                     i1l4546:	
 13380                           	line	140
 13381                           ;HMI.c: 138: }
 13382                           ;HMI.c: 140: if(!RB6)
 13383  17E0  1283               	bcf	status, 5	;RP0=0, select bank0
 13384  17E1  1303               	bcf	status, 6	;RP1=0, select bank0
 13385  17E2  1B06               	btfsc	(54/8),(54)&7
 13386  17E3  2FE5               	goto	u409_21
 13387  17E4  2FE6               	goto	u409_20
 13388  17E5                     u409_21:
 13389  17E5  2FFA               	goto	i1l4547
 13390  17E6                     u409_20:
 13391                           	line	142
 13392                           	
 13393  17E6                     i1l10886:	
 13394                           ;HMI.c: 141: {
 13395                           ;HMI.c: 142: CenterDebounceCount++;
 13396  17E6  3001               	movlw	(01h)
 13397  17E7  00F2               	movwf	(??_Debounce+0)+0
 13398  17E8  0872               	movf	(??_Debounce+0)+0,w
 13399  17E9  1683               	bsf	status, 5	;RP0=1, select bank1
 13400  17EA  1303               	bcf	status, 6	;RP1=0, select bank1
 13401  17EB  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 13402                           	line	143
 13403                           	
 13404  17EC                     i1l10888:	
 13405                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 13406  17EC  300A               	movlw	(0Ah)
 13407  17ED  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 13408  17EE  1C03               	skipc
 13409  17EF  2FF1               	goto	u410_21
 13410  17F0  2FF2               	goto	u410_20
 13411  17F1                     u410_21:
 13412  17F1  2FFF               	goto	i1l4550
 13413  17F2                     u410_20:
 13414                           	
 13415  17F2                     i1l10890:	
 13416  17F2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 13417  17F3  2FF5               	goto	u411_21
 13418  17F4  2FF6               	goto	u411_20
 13419  17F5                     u411_21:
 13420  17F5  2FFF               	goto	i1l4550
 13421  17F6                     u411_20:
 13422                           	line	145
 13423                           	
 13424  17F6                     i1l10892:	
 13425                           ;HMI.c: 144: {
 13426                           ;HMI.c: 145: CenterPressed = 1;
 13427  17F6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 13428                           	line	146
 13429                           ;HMI.c: 146: CenterReleased = 0;
 13430  17F7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 13431  17F8  2FFF               	goto	i1l4550
 13432                           	line	147
 13433                           	
 13434  17F9                     i1l4548:	
 13435                           	line	148
 13436                           ;HMI.c: 147: }
 13437                           ;HMI.c: 148: }
 13438  17F9  2FFF               	goto	i1l4550
 13439                           	line	149
 13440                           	
 13441  17FA                     i1l4547:	
 13442                           	line	151
 13443                           ;HMI.c: 149: else
 13444                           ;HMI.c: 150: {
 13445                           ;HMI.c: 151: CenterDebounceCount = 0;
 13446  17FA  1683               	bsf	status, 5	;RP0=1, select bank1
 13447  17FB  1303               	bcf	status, 6	;RP1=0, select bank1
 13448  17FC  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
 13449                           	line	152
 13450                           ;HMI.c: 152: CenterReleased = 1;
 13451  17FD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 13452  17FE  2FFF               	goto	i1l4550
 13453                           	line	153
 13454                           	
 13455  17FF                     i1l4549:	
 13456                           	line	154
 13457                           	
 13458  17FF                     i1l4550:	
 13459  17FF  0008               	return
 13460                           	opt stack 0
 13461                           GLOBAL	__end_of_Debounce
 13462  1800                     	__end_of_Debounce:
 13463 ;; =============== function _Debounce ends ============
 13464                           
 13465                           	signat	_Debounce,88
 13466                           psect	text1106,local,class=CODE,delta=2
 13467                           global __ptext1106
 13468  0000                     __ptext1106:
 13469                           	global	btemp
 13470  007E                     	btemp set 07Eh
 13471                           
 13472                           	DABS	1,126,2	;btemp
 13473                           	global	wtemp0
 13474  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed May 20 13:16:51 2015

   RobotDrive@radiuslowByte 0036   __end_of_lcd_write_control 1053             ??_UpdateDisplay 0045  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 002C                  _IRdistance 00B8  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 1068  
                       l703 10D7                         l704 10D7                         l705 10DB  
                       l706 10FA                         l690 07C8                         l691 07F1  
                       l692 07CC                         l693 07D0                         l694 07D4  
                       l695 07D8                         l696 07DC                         l689 07E0  
                       l697 07FE                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _abs 12B8                         _pos 00C6  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
          ??_robotMoveSpeed 005D                  _BattCharge 00B0             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l1402 1017                        l1410 11FE  
                      l1411 11FE                        l2300 142E                        l1405 1FF2  
                      l2301 1417                        l3030 107E                        l2310 1441  
                      l2302 143F                        l2303 1419                        l3040 06BE  
                      l1408 11ED                        l3024 1680                        l2304 141B  
                      l3041 0621                        l3033 04ED                        l1409 11D4  
                      l3025 16B6                        l2305 141D                        l3034 06C1  
                      l3042 06BD                        l3026 16A2                        l2306 141F  
                      l2250 02A6                        l3043 066E                        l3035 053A  
                      l3027 16E4                        l2307 1441                        l2251 047E  
                      l3036 06C0                        l3044 06BC                        l2308 142B  
                      l2260 0455                        l2252 02A7                        l3045 06BB  
                      l3037 0587                        l1429 117A                        l2245 1287  
                      l2309 1440                        l2253 0494                        l2261 033B  
                      l3038 06BF                        l3046 06C1                        l2270 0476  
                      l2262 046B                        l2254 02AD                        l3039 05D4  
                      l2271 047C                        l2263 0352                        l2255 02BA  
                      l2272 049B                        l2264 0358                        l2256 02CA  
                      l2248 027F                        l2273 049C                        l2265 035C  
                      l2257 0334                        l2249 0295                        l2290 1551  
                      l2274 049C                        l2258 046C                        l2266 03CE  
                      l2291 155F                        l2283 1531                        l2267 03F6  
                      l2259 033A                        l2292 157C                        l2284 153C  
                      l2268 043D                        l2285 1569                        l2293 1567  
                      l2277 10D1                        l2269 0474                        l2294 157B  
                      l2286 153D                        l1399 1052                        l2295 157C  
                      l2287 157A                        l2288 153F                        l2289 1541  
                      l2298 1406                        l2299 1416                        l6100 15D0  
                      l6101 15EF                        l6102 15F0                        l6110 0CFB  
                      l6111 0D74                        l6120 0D92                        l6112 0D62  
                      l6121 0DA1                        l6105 0C63                        l6122 0DE4  
                      l6114 0D29                        l6106 0C7B                        l6130 00D7  
                      l6123 0E0A                        l6115 0D58                        l6107 0C93  
                      l6131 00C4                        l6116 0D60                        l6108 0CC5  
                      l6140 0213                        l6117 0DE5                        l6109 0D74  
                      l6141 01AD                        l6133 00B6                        l3750 1459  
                      l6150 0A7B                        l6118 0D73                        l6142 01BF  
                      l6134 0175                        l6126 002E                        l3743 1033  
                      l3751 148D                        l6151 0A8D                        l6119 0D86  
                      l6143 0246                        l6135 00D6                        l6127 0061  
                      l3744 1033                        l3752 1460                        l6152 0B20  
                      l6160 09E9                        l6144 01CB                        l6136 00E9  
                      l6128 00D7                        l4561 13E2                        l3745 1038  
                      l3753 1472                        l6153 0A99                        l6145 01DA  
                      l6137 00F5                        l6129 008F                        l4570 13F6  
                      l4562 13B4                        l3746 103E                        l6082 10B0  
                      l3754 147A                        l6170 12EC                        l6090 07C1  
                      l6154 0AA8                        l6162 09E3                        l6146 026B  
                      l6138 0104                        l4563 13F4                        l4571 13E0  
                      l3755 1497                        l6091 07C0                        l6155 0B45  
                      l6163 0A59                        l6139 0174                        l4564 13B5  
                      l3756 14A8                        l6092 07C3                        l4580 0FFF  
                      l6164 0A64                        l4565 13B6                        l6173 114F  
                      l3749 1452                        l6085 0747                        l4581 0EE6  
                      l6149 0AEB                        l4566 13C7                        l6086 07C3  
                      l4590 0FB6                        l4582 0F31                        l6158 0A24  
                      l4567 13C8                        l6095 1325                        l6087 0772  
                      l6167 1767                        l4591 0FF0                        l4583 0FC3  
                      l6159 09D1                        l4568 13DA                        l6088 07C2  
                      l4576 0FF2                        l4584 0F7A                        l4592 0FFF  
                      l4569 13DB                        l6089 07BE                        l4585 0FDE  
                      l4577 0E24                        l6098 15AB                        l4586 0F86  
                      l4578 0E8B                        l6099 15F0                        l4587 0F92  
                      l4579 0E9E                        l4588 0F9E                        l4589 0FAA  
                      l7620 119F                        l7621 11A6                        l7630 090D  
                      l7631 0915                        l7624 090E                        l7640 13A7  
                      l6920 0B62                        l7625 08E0                        l7641 13AF  
                      l6921 0C40                        l7618 1180                        l7626 08D4  
                      l7634 13A8                        l6930 0BDB                        l6922 0B63  
                      l6907 1124                        l7619 118A                        l7627 08E5  
                      l7635 1382                        l6931 0C20                        l6923 0B64  
                      l7628 08E6                        l7636 1376                        l6916 0C2C  
                      l6932 0BE0                        l6924 0B7C                        l7629 08FF  
                      l7637 1387                        l6933 0C2B                        l6925 0B65  
                      l6917 0B4E                        l7638 1388                        l7830 14CD  
                      l6934 0C3F                        l6926 0B96                        l6918 0B60  
                      l7639 1399                        l7831 14DE                        l6935 0C45  
                      l6927 0BA1                        l6919 0B67                        l6872 108A  
                      l7760 1655                        l7832 14DF                        l6928 0BC9  
                      l6873 1097                        l7761 1627                        l7833 14F0  
                      l6929 0BBE                        l6882 1204                        l7762 161B  
                      l7834 14FE                        l7826 14B9                        l6883 1203  
                      l7763 162C                        l7835 1509                        l7827 14C3  
                      l6884 120E                        l7764 162D                        l7836 1510  
                      l7828 14FF                        l6876 11A9                        l6885 122B  
                      l7765 1646                        l7829 14D9                        l6877 11A8  
                      l7766 1654                        l7758 1601                        l6878 11B2  
                      l7767 165F                        l7759 160F                        l6879 11D2  
                      l7768 1666                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0862                        STR_2 0859  
                      STR_3 0874                        STR_4 087D                        STR_5 086B  
                      STR_6 0850                        STR_7 08A6                        STR_8 08AA  
                      STR_9 0892                        _BRGH 04C2                        _CREN 00C4  
                      u4120 1085                        u5000 0A87                        u4121 1084  
                      u4130 1092                        u5010 0A92                        u4131 1091  
                      u4220 119E                        u4300 1372                        u5020 0A9F  
                      u5100 0CB5                        u4221 119D                        u4205 118B  
                      u4301 1371                        u5101 0CB4                        u4230 08D0  
                      u5030 0B1F                        u5110 0CD1                        u4215 1192  
                      u4231 08CF                        u5031 0B1E                        u5111 0CD0  
                      u4320 1386                        u4400 162B                        u5040 09DE  
                      u5120 0CEB                        u5200 0051                        u4321 1385  
                      u4401 162A                        u5041 09DD                        u5121 0CEA  
                      u5105 0CB1                        u5201 0050                        u4250 08E4  
                      u4330 1392                        u5050 09E2                        u5130 0D17  
                      u5210 006D                        u4251 08E3                        u4331 1391  
                      u4315 1377                        u5035 0B1B                        u5131 0D16  
                      u5115 0CCD                        u5211 006C                        u3700 10DB  
                      u4420 163E                        u4500 14DD                        u5060 0A58  
                      u5140 0D28                        u5300 01D1                        u5220 007F  
                      u3701 10DA                        u4245 08D5                        u4421 163D  
                      u4501 14DC                        u5061 0A57                        u5141 0D27  
                      u5125 0CE7                        u5221 007E                        u5205 004D  
                      u4190 1184                        u4270 08F7                        u4350 13A6  
                      u4510 14E9                        u5150 0D51                        u5070 0C72  
                      u5310 0245                        u5230 00A3                        u4191 1183  
                      u4271 08F6                        u4351 13A5                        u4335 138E  
                      u4415 162E                        u4511 14E8                        u5151 0D50  
                      u5135 0D13                        u5071 0C71                        u5311 0244  
                      u5231 00A2                        u5215 0069                        u4440 1653  
                      u4360 15F8                        u5160 0D80                        u5080 0C8A  
                      u5240 00B5                        u5320 140A                        u4265 08E7  
                      u4345 139A                        u4441 1652                        u4425 163A  
                      u4361 15F7                        u5065 0A54                        u5145 0D24  
                      u5081 0C89                        u5241 00B4                        u5225 007B  
                      u5321 1409                        u4290 090C                        u4450 1659  
                      u4370 1605                        u4530 14FD                        u4610 144B  
                      u5170 0D8B                        u5090 0CA4                        u5250 00E3  
                      u5330 0283                        u3715 10E8                        u4291 090B  
                      u4275 08F3                        u4435 1647                        u4371 1604  
                      u4531 14FC                        u4515 14E5                        u4611 144A  
                      u5091 0CA3                        u5075 0C6E                        u5315 0241  
                      u5235 009F                        u5331 0282                        _PEIE 005E  
                      u3900 13D7                        u4380 1617                        u4540 1503  
                      u4460 14B0                        u4620 1469                        u4700 0591  
                      u5180 0D98                        u5260 00EE                        u5340 0299  
                      u3901 13D6                        u4285 0900                        u4381 1616  
                      u4525 14F1                        u4461 14AF                        u4701 0590  
                      u5085 0C86                        u5245 00B1                        u3910 120E  
                      u4470 14BD                        u4630 1497                        u4710 059A  
                      u5270 00FB                        u5190 003F                        u5350 0474  
                      u3911 120D                        u4471 14BC                        u4631 1496  
                      u4711 0599                        u5095 0CA0                        u5191 003E  
                      u5407 10BE                        u5351 0473                        u4480 14C9  
                      u4720 05DE                        u4640 04AA                        u4800 0B9F  
                      u5280 01B9                        u4481 14C8                        u4721 05DD  
                      u4641 04A9                        u4801 0B9E                        u5417 16FB  
                      u4730 05E7                        u4650 04B3                        u4810 0BBC  
                      u5290 01C4                        u4395 161C                        u4635 1493  
                      u4731 05E6                        u4651 04B2                        u4811 0BBB  
                      u5427 1726                        u5195 003B                        _RCIE 0465  
                      u4740 062B                        u4660 04F7                        u4820 0BC8  
                      u4900 11FD                        _RCIF 0065                        u5437 1480  
                      u4741 062A                        u4661 04F6                        u4821 0BC7  
                      u4901 11FC                        u4750 0634                        u4670 0500  
                      u4830 0BCF                        u4910 0726                        u4495 14CE  
                      u5447 1013                        u4751 0633                        u4671 04FF  
                      u4831 0BCE                        u4815 0BB8                        u4911 0725  
                      u5367 02E1                        u3960 1037                        u4760 0678  
                      u4680 0544                        u4840 0C2A                        u4920 074D  
                      u3961 1036                        u5457 104D                        u4761 0677  
                      u4681 0543                        u4841 0C29                        u4921 074C  
                      u5377 02FF                        u3890 13C2                        u4770 0681  
                      u4690 054D                        u4850 0C3E                        u4930 0779  
                      u3891 13C1                        u5467 1066                        u4771 0680  
                      u4691 054C                        u4851 0C3D                        u4931 0778  
                      u5387 031D                        u4780 0B54                        u4860 11B2  
                      u4940 167E                        u5477 07F3                        u4781 0B53  
                      u4861 11B1                        u4941 167D                        u5397 0374  
                      u4790 0B8C                        u4870 158C                        u4950 1696  
                      u4791 0B8B                        u4871 158B                        u4951 1695  
                      u4880 15B1                        u4960 16B5                        u4881 15B0  
                      u4961 16B4                        u4945 167A                        u4970 0E15  
                      _OERR 00C1                        u4875 1588                        u4980 0E78  
                      u4965 16B1                        u4981 0E77                        u4990 1535  
                      u4895 12CD                        u4991 1534                        u4985 0E74  
                      _TMR0 0001                  _ChargeMode 13F7                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 13B0      __end_of_lcd_write_data 1018                        abs@v 0026  
                      _isr1 0916                        _main 026C                        _init 1259  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073            ??_robotTurnSpeed 005D                       ??_abs 0028  
     readAvgDistance@tempIR 0034                       ?_Menu 0072                       l11000 13AF  
                     l11010 160A                       l11002 15F1                       l11020 1622  
                     l11012 160F                       l11004 15F8                       l11100 07DC  
                     l11030 1646                       l11022 1627                       l11014 1611  
                     l11006 1601                       l11110 07F5                       l11102 07DE  
                     l11040 1666                       l11032 164D                       l11024 162D  
                     l11016 1617                       l11008 1605                       l11112 07FE  
                     l11104 07DF                       l11120 105E                       l11200 04F7  
                     l11026 163E                       l11018 161B                       l11034 1655  
                     l11050 14C3                       l11042 14A9                       l11106 07E0  
                     l11122 1062                       l11114 1053                       l11130 1048  
                     l11210 0587                       l11202 0500                       l11036 1659  
                     l11028 1644                       l11060 14DF                       l11052 14C9  
                     l11044 14B0                       l11108 07F1                       l11116 1056  
                     l11124 1042                       l11132 1008                       l11140 1098  
                     l11220 05E7                       l11212 0591                       l11204 053A  
                     l11300 11C5                       l11038 165F                       l11070 1503  
                     l11062 14E9                       l11054 14CD                       l11046 14B9  
                     l11118 105A                       l11126 1045                       l11134 100B  
                     l11142 1125                       l11150 12FF                       l11230 0678  
                     l11222 0621                       l11214 059A                       l11206 0544  
                     l11302 11CD                       l11310 158C                       l11072 1509  
                     l11064 14F0                       l11056 14D4                       l11048 14BD  
                     l11128 1047                       l11136 100D                       l11152 1305  
                     l11144 12ED                       l11160 1442                       l11232 0681  
                     l11224 062B                       l11216 05D4                       l11208 054D  
                     l11240 0B5B                       l11304 11CE                       l11312 15B1  
                     l11320 1FEB                       l11400 107E                       l11074 1510  
                     l11066 14F7                       l11058 14D9                       l11138 100E  
                     l11154 130D                       l11146 12F3                       l11170 145C  
                     l11162 1446                       l11226 0634                       l11218 05DE  
                     l11250 0B88                       l11242 0B66                       l11234 0B49  
                     l11306 11D2                       l11314 15D0                       l11322 1FEC  
                     l11330 11ED                       l11410 1268                       l11402 1259  
                     l11068 14FF                       l11156 1315                       l11148 12F7  
                     l11180 1499                       l11172 145D                       l11164 144B  
                     l11228 066E                       l11260 0BA0                       l11252 0B8C  
                     l11244 0B67                       l11236 0B4E                       l11308 157D  
                     l11316 12B8                       l11324 11D3                       l11340 115B  
                     l11332 1150                       l11420 127F                       l11412 126C  
                     l11404 125A                       l11500 0FC2                       l10630 10D2  
                     l10622 1094                       l11158 131D                       l11190 14A5  
                     l11182 149F                       l11174 1465                       l11166 1452  
                     l11270 0BC9                       l11262 0BA1                       l11254 0B90  
                     l11246 0B7C                       l11238 0B54                       l11318 12EC  
                     l11326 11D4                       l11350 1174                       l11342 115C  
                     l11334 1154                       l11422 1284                       l11414 1270  
                     l11406 125E                       l11430 1671                       l11502 0FC3  
                     l11510 0FF2                       l10632 10D5                       l10800 1202  
                     l10624 1096                       l11184 14A2                       l11176 1469  
                     l11168 1459                       l11192 049F                       l11280 0C14  
                     l11272 0BCF                       l11264 0BBD                       l11256 0B96  
                     l11248 0B84                       l11328 11E4                       l11344 1162  
                     l11336 1157                       l11360 074D                       l11352 06C5  
                     l11424 1285                       l11416 1275                       l11408 1266  
                     l11440 16A8                       l11432 167F                       l11504 0FDE  
                     l11520 1522                       l11600 09E9                       l10634 10DE  
                     l10810 122A                       l10802 1204                       l11098 07C7  
                     l11186 14A3                       l11178 1472                       l11194 04AA  
                     l11290 0C45                       l11282 0C1B                       l11274 0BD6  
                     l11266 0BBE                       l11258 0B99                       l11346 1168  
                     l11338 1158                       l11362 0772                       l11354 0721  
                     l11370 16E9                       l11426 1286                       l11418 127A  
                     l11442 16B6                       l11434 1680                       l11506 0FE4  
                     l11450 0E2A                       l11530 154F                       l11522 1531  
                     l11610 0A1E                       l11602 09F4                       l10636 10F1  
                     l10804 120F                       l10900 1089                       l11188 14A4  
                     l11196 04B3                       l11284 0C20                       l11276 0BDB  
                     l11268 0BC2                       l11292 11A7                       l11348 116E  
                     l11364 0779                       l11356 0726                       l11380 1714  
                     l11372 16EF                       l11444 16D6                       l11436 168D  
                     l11428 1667                       l11508 0FF1                       l11460 0E8B  
                     l11452 0E52                       l11540 1564                       l11532 1551  
                     l11524 1535                       l11516 1511                       l11604 09FF  
                     l11612 0A24                       l11620 0C50                       l11700 0019  
                     l10638 10FA                       l10750 10FB                       l10806 121D  
                     l10902 108A                       l11198 04ED                       l11278 0BE0  
                     l11286 0C2C                       l11294 11A9                       l11366 07BF  
                     l11358 0747                       l11390 1747                       l11382 171A  
                     l11374 16F5                       l11438 1696                       l11470 0EF2  
                     l11462 0E9E                       l11454 0E63                       l11446 0E0B  
                     l11542 1566                       l11534 155D                       l11526 1536  
                     l11518 1516                       l11550 0A69                       l11606 0A0C  
                     l11614 0A59                       l11630 0C8A                       l11622 0C5F  
                     l11710 0051                       l11702 002A                       l10760 110A  
                     l10752 10FE                       l10808 1229                       l10904 1092  
                     l11288 0C40                       l11296 11B3                       l11392 1752  
                     l11384 1720                       l11376 1700                       l11368 16E5  
                     l11480 0F31                       l11472 0EFD                       l11464 0EA4  
                     l11456 0E69                       l11448 0E24                       l11544 1568  
                     l11536 155F                       l11528 1541                       l11560 0A92  
                     l11552 0A7B                       l11608 0A18                       l11640 0CC5  
                     l11632 0C93                       l11624 0C63                       l11616 0C46  
                     l11720 00A3                       l11712 0061                       l11704 002E  
                     l11800 1406                       l10770 1117                       l10762 110D  
                     l10754 1106                       l10850 103E                       l10842 102E  
                     l10906 1094                       l11298 11BF                       l11394 175B  
                     l11386 172B                       l11378 170A                       l11490 0F86  
                     l11482 0F3D                       l11474 0F0E                       l11466 0EBB  
                     l11458 0E78                       l11538 1563                       l11546 1569  
                     l11570 0ABC                       l11562 0A99                       l11554 0A81  
                     l11650 0D29                       l11642 0CD1                       l11634 0C98  
                     l11626 0C72                       l11618 0C4A                       l11730 00E3  
                     l11722 00B6                       l11714 006D                       l11706 0033  
                     l11810 1426                       l11802 140A                       l10772 1118  
                     l10764 1110                       l10756 1107                       l10780 13BE  
                     l10844 1030                       l10908 1097                       l11388 173E  
                     l11396 1069                       l11492 0F92                       l11484 0F48  
                     l11476 0F14                       l11468 0EE6                       l11572 0AC5  
                     l11564 0A9F                       l11556 0A87                       l11580 0AEB  
                     l11548 0A65                       l11660 0D58                       l11652 0D35  
                     l11644 0CEB                       l11636 0CA4                       l11628 0C7B  
                     l11740 0104                       l11732 00E9                       l11724 00C3  
                     l11716 007F                       l11708 003F                       l11812 142A  
                     l11804 140B                       l11820 10B6                       l11900 0454  
                     l10774 1119                       l10766 1113                       l10758 1109  
                     l10790 13DF                       l10782 13C2                       l10846 1038  
                     l10950 119F                       l10942 117B                       l11398 1077  
                     l11494 0F9E                       l11486 0F73                       l11478 0F25  
                     l11574 0AD1                       l11566 0AA8                       l11582 0B20  
                     l11558 0A8D                       l11590 09C5                       l11670 0D86  
                     l11662 0D61                       l11654 0D3A                       l11646 0CFB  
                     l11638 0CB5                       l11750 013B                       l11742 010D  
                     l11734 00EE                       l11726 00C4                       l11718 008F  
                     l11814 142D                       l11806 141F                       l11822 10C5  
                     l11902 0455                       l11910 047E                       l11830 0279  
                     l10768 1114                       l10792 13E1                       l10784 13C8  
                     l10776 13B3                       l10848 103C                       l10952 11A6  
                     l10944 1180                       l10960 08D4                       l11496 0FAA  
                     l11488 0F7A                       l11584 0B31                       l11576 0ADF  
                     l11568 0AB1                       l11592 09D1                       l11680 0DAA  
                     l11672 0D8B                       l11656 0D46                       l11664 0D62  
                     l11648 0D17                       l11760 01A8                       l11752 0144  
                     l11744 0118                       l11736 00F5                       l11728 00DD  
                     l11808 1425                       l11816 142E                       l11904 046C  
                     l11912 0494                       l11840 028F                       l11832 027F  
                     l11824 026C                       l10786 13D7                       l10778 13B6  
                     l10794 13E2                       l10946 1184                       l10970 08FD  
                     l10962 08DB                       l10954 08C6                       l11498 0FB6  
                     l11586 0B36                       l11578 0AE5                       l11594 09D7  
                     l11690 0DDE                       l11682 0DB5                       l11674 0D92  
                     l11666 0D7A                       l11658 0D51                       l11770 01C4  
                     l11762 01AD                       l11754 0168                       l11746 0121  
                     l11738 00FB                       l11818 10B1                       l11906 0476  
                     l11850 02AD                       l11834 0283                       l11842 0295  
                     l11826 0272                       l10788 13DB                       l10796 13F4  
                     l10948 1191                       l10972 08FF                       l10964 08E0  
                     l10956 08CA                       l10980 136A                       l11596 09DE  
                     l11588 09BD                       l11684 0DBE                       l11676 0D98  
                     l11668 0D80                       l11692 0DE5                       l11780 01EE  
                     l11772 01CB                       l11764 01B3                       l11756 016E  
                     l11748 012D                       l11908 047D                       l11860 0306  
                     l11852 02BA                       l11844 0299                       l11836 0284  
                     l11828 0274                       l10798 13F6                       l10894 107F  
                     l10974 0906                       l10966 08E6                       l10958 08D0  
                     l10990 1388                       l10982 1372                       l11934 0FCA  
                     l11598 09E3                       l11694 0DF4                       l11686 0DCA  
                     l11678 0DA1                       l11782 01FB                       l11774 01D1  
                     l11790 0246                       l11766 01B9                       l11758 0175  
                     l11870 0358                       l11862 0315                       l11854 02CA  
                     l11846 02A4                       l11838 028A                       l10896 1085  
                     l10968 08F7                       l10976 090E                       l10992 1392  
                     l10984 1376                       l11696 0E05                       l11688 0DD8  
                     l11792 0255                       l11784 0207                       l11776 01DA  
                     l11768 01BF                       l11880 03A6                       l11872 035D  
                     l11864 0334                       l11856 02D9                       l11848 02A7  
                     l10898 1087                       l10978 0915                       l10994 1399  
                     l10986 137D                       l11794 0266                       l11786 020D  
                     l11778 01E3                       l11698 0015                       l11890 0402  
                     l11882 03B5                       l11874 036C                       l11866 033B  
                     l11858 02E8                       l10996 13A0                       l10988 1382  
                     l11788 0213                       l11796 13F7                       l11892 0407  
                     l11884 03BA                       l11876 037B                       l11868 0352  
                     l10998 13A8                       l11798 13FF                       l11894 0426  
                     l11886 03CE                       l11878 038A        __size_of_calibrateIR 006C  
                     l11896 042B                       l11888 03F6                       l11898 043D  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
           __end_of___awdiv 1667                       _EEADR 010D                       STR_10 089E  
                     STR_11 08AE                       STR_20 08B5                       STR_12 08A2  
                     STR_21 08B8                       STR_13 083A                       STR_22 08B2  
                     STR_14 082A                       STR_23 08BB                       STR_15 0896  
                     STR_24 08BE                       STR_16 0885                       STR_25 08B2  
                     STR_17 089A                       STR_26 0847                       STR_18 081A  
                     STR_19 088D             __end_of___awmod 1511                       _CARRY 0018  
           ___awdiv@divisor 0026             __end_of___lwdiv 0916             __end_of___lwmod 13B0  
           ___awdiv@counter 002B                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _SSPIF 0063  
                     _TXREG 0019                       _Disp1 00B4                       _Disp2 00B6  
    lcd_write_data@databyte 0022    __size_of_robot_turnRight 0257          i1___lwmod@dividend 0074  
                     _total 00C8              __pbitbssCOMMON 0380                       pclath 000A  
               _turnlowByte 00DC             ?_lcd_write_data 0072           ?_adc_read_channel 0072  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0C46  
          __end_of_Debounce 1800          __size_ofi1___lwmod 0044          ??_adc_read_channel 0026  
          ?_readAvgDistance 0072            robotFollow@temp1 0061            robotFollow@speed 0059  
              __end_of_Menu 13F7  __size_of_lcd_write_control 0014            _shortMenuStrings 00E5  
              __end_of_isr1 09BD                __end_of_main 049F                __end_of_init 1288  
           rotate@direction 0025              _Init_Follow_IR 10B1                      ??_Menu 0020  
             ?_readDistance 0028      readAvgDistance@fullval 0030       __end_of_RobotBattRead 1768  
                    ??_isr1 0078                      ??_main 0064                      ??_init 0023  
       __end_of_ReadButtons 12B8               Menu@BTN_input 0020                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          ___awdiv@dividend 0028            __end_of_adc_read 10FB                 ?_ChargeMode 0072  
                    i1l2240 09B1                      i1l2241 09B0                      i1l2242 09B1  
                    i1l2234 0969                      i1l2235 093D                      i1l2236 095A  
                    i1l2237 0968                      i1l2238 098B                      i1l2239 098A  
                    i1l4540 17A4                      i1l4541 17BE                      i1l4550 17FF  
                    i1l4542 17BD                      i1l4543 17C2                      i1l4535 1782  
                    i1l4544 17DC                      i1l4536 1781                      i1l4545 17DB  
                    i1l4537 1786                      i1l4553 1295                      i1l4546 17E0  
                    i1l4538 17A0                      i1l4554 12B7                      i1l4547 17FA  
                    i1l4539 179F                      i1l4555 129D                      i1l4548 17F9  
                    i1l4556 12A5                      i1l4549 17FF                      i1l4557 12AD  
                    i1l4558 12B5                      i1l7640 1361                      i1l7641 1369  
                    i1l7634 1362                      i1l7635 133C                      i1l7636 1330  
                    i1l7637 1341                      i1l7638 1342                      i1l7639 1353  
                    u400_20 178C                      u400_21 178B                      u401_20 1798  
                    u401_21 1797                      u410_20 17F2                      u402_20 179C  
                    u410_21 17F1                      u402_21 179B                      u411_20 17F6  
                    u403_20 17AA                      u411_21 17F5                      u403_21 17A9  
                    u404_20 17B6                      u404_21 17B5                      u405_20 17BA  
                    u405_21 17B9                      u406_20 17C8                      u406_21 17C7  
                    u407_20 17D4                      u407_21 17D3                      u408_20 17D8  
                    u408_21 17D7                      u409_20 17E6                      u409_21 17E5  
                    u460_20 1360                      u380_20 0985                      u460_21 135F  
                    u380_21 0984                      u381_20 0990                      u381_21 098F  
                    u382_20 0996                      u382_21 0995                 _DistLowByte 006E  
                    u455_20 132C                      u383_20 09AE                      u375_20 091A  
                    u455_21 132B                      u383_21 09AD                      u375_21 0919  
                    u384_20 1291                      u376_20 093B                      u384_21 1290  
                    u376_21 093A                      u456_25 1331                      u457_20 1340  
                    u385_20 1299                      u377_20 0954                      u457_21 133F  
                    u385_21 1298                      u377_21 0953                      u458_20 134C  
                    u386_20 12A1                      u378_20 095F                      u458_21 134B  
                    u386_21 12A0                      u378_21 095E                      u458_25 1348  
                    u387_20 12A9                      u379_20 096F                      u387_21 12A8  
                    u379_21 096E                      u459_25 1354                      u388_20 12B1  
                    u388_21 12B0                      u397_20 176E                      u397_21 176D  
                    u398_20 177A                      u398_21 1779                      u399_20 177E  
                    u399_21 177D                      _TMR0IE 005D                      _TMR0IF 005A  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038C  
          __end_of_lcd_init 117B                      _adcVal 006A             _UpDebounceCount 00D4  
    __end_of_Init_Follow_IR 10D2             RobotDrive@speed 002F                  _RobotDrive 12ED  
                    ___wmul 117B                   ??___awdiv 002A                   ??___awmod 0024  
              _turnhighByte 00DB                ??_ADCconvert 002E                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 1069              ??_readDistance 002A  
          ___awdiv@quotient 002D             ___awmod@divisor 0020    __end_of_lcd_write_string 11FF  
           ___awmod@counter 0025                ?_robotFollow 0059                      _rotate 1442  
                    _rxfifo 00A0                      clrloop 1FE1                      _txfifo 01A0  
                    _rxiptr 00D8                      _rxoptr 00D9                 _BumpSensors 006C  
                    _txiptr 00DD                      _txoptr 00DE       robotFollow@hysterysis 0063  
          __end_of_ser_init 1125            __end_of_ser_isrx 1098           __end_ofi1___lwmod 136A  
                    saved_w 007E               main@shortwall 0067                _AngleLowByte 00CD  
               _LeftPressed 0384      RobotDrive@speedlowByte 0034                   ??_sprintf 0039  
               _DownPressed 0382           lcd_write_string@s 0027          __end_of_ADCconvert 06C2  
         ??_robot_turnRight 005D        robot_turnRight@temp1 0060        robot_turnRight@speed 0059  
              _CliffSensors 00CF              __pcstackCOMMON 0072             ?_Init_Follow_IR 0072  
              __pidataBANK1 1FF3                 _ReadButtons 1288         __size_of_ChargeMode 004B  
          ??_lcd_set_cursor 0023                   ?_Debounce 0072               _buttonPressed 007D  
                __pbssBANK0 006A                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00D0          _RightDebounceCount 00D3                  __pmaintext 026C  
               ?_RobotDrive 002F                     ?___wmul 0020       __end_of_robotLoadSong 1150  
                __pintentry 0004                _DistHighByte 006D                  __ptext1100 10FB  
                __ptext1101 10D2                  __ptext1102 0916                  __ptext1103 1288  
                __ptext1104 1326                  __ptext1105 1768       __end_of_UpdateDisplay 1000  
                __ptext1106 0000                  __ptext1070 1667                  __ptext1062 10B1  
                __ptext1071 1259                  __ptext1063 13F7                  __ptext1080 11A7  
                __ptext1072 1069                  __ptext1064 0015                  __ptext1081 0B46  
                __ptext1073 16E5                  __ptext1065 0C46                  __ptext1090 07C4  
                __ptext1082 049F                  __ptext1074 06C2                  __ptext1066 09BD  
                __ptext1091 14A9                  __ptext1083 1442                  __ptext1075 1150  
                __ptext1067 0A65                  __ptext1092 15F1                  __ptext1084 12ED  
                __ptext1076 11D3                  __ptext1068 1511                  __ptext1093 136A  
                __ptext1085 1125                  __ptext1077 1FE8                  __ptext1069 0E0B  
                __ptext1094 08C6                  __ptext1086 1098                  __ptext1078 12B8  
                __ptext1095 117B                  __ptext1087 1005                  __ptext1079 157D  
                __ptext1096 107F                  __ptext1088 103F                  __ptext1097 102B  
                __ptext1089 1053                  __ptext1098 11FF                  __ptext1099 13B0  
        __size_of_ser_getch 002C                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 002D          __size_of_robo_init 0019                     i1l11080 1330  
                   i1l11090 1353                     i1l11082 1337                     i1l11092 135A  
                   i1l11084 133C                     i1l11076 1326                     i1l10700 0990  
                   i1l11086 1342                     i1l11078 132C                     i1l11094 1362  
                   i1l10710 09AE                     i1l10702 0996                     i1l11096 1369  
                   i1l11088 134C                     i1l10720 1294                     i1l10712 1288  
                   i1l10704 099E                     i1l10730 12A2                     i1l10722 1299  
                   i1l10714 128D                     i1l10706 09A4                     i1l10740 12B1  
                   i1l10732 12A4                     i1l10724 129A                     i1l10716 1291  
                   i1l10708 09A8                     i1l10742 12B2                     i1l10734 12A9  
                   i1l10726 129C                     i1l10718 1292                     i1l10670 091B  
                   i1l10744 12B4                     i1l10736 12AA                     i1l10728 12A1  
                   i1l10680 0954                     i1l10672 0925                     i1l10746 12B5  
                   i1l10738 12AC                     i1l10690 096F                     i1l10682 0955  
                   i1l10674 0926                     i1l10666 0916                     i1l10860 177E  
                   i1l10852 1768                     i1l10748 12B7                     i1l10692 0979  
                   i1l10684 095A                     i1l10676 093B                     i1l10668 091A  
                   i1l10870 17AA                     i1l10862 178C                     i1l10854 176E  
                   i1l10694 097F                     i1l10686 095F                     i1l10678 093D  
                   i1l10880 17CE                     i1l10872 17B0                     i1l10864 1792  
                   i1l10856 1774                     i1l10696 0985                     i1l10688 0969  
                   i1l10890 17F2                     i1l10882 17D4                     i1l10874 17B6  
                   i1l10866 1798                     i1l10858 177A                     i1l10698 098B  
                   i1l10892 17F6                     i1l10884 17D8                     i1l10876 17BA  
                   i1l10868 179C                     i1l10886 17E6                     i1l10878 17C8  
                   i1l10888 17EC          __size_of_robotTurn 0074                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 107F                   ?_init_adc 0072                   ?_ser_init 0072  
                 ?_ser_isrx 0072            RobotDrive@radius 0031               ??_calibrateIR 0059  
                   ___awdiv 15F1                     ___awmod 14A9             __size_of___wmul 002C  
                   ___lwdiv 08C6                     ___lwmod 136A   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0067                     _dpowers 0810  
              __size_of_abs 0035        __size_of_robotFollow 01C5            ___awmod@dividend 0022  
                   _lowByte 00D7                     _ser_tmp 00DA                     _sprintf 0B46  
                ??_lcd_init 0023         __size_of_RobotDrive 0039        end_of_initialization 1255  
             _AngleHighByte 00CC                ??_ChargeMode 0059          robot_read@readType 0023  
         __end_of_ser_getch 11D3                     init_ram 101C                  ??_init_adc 0020  
   __size_of_robotMoveSpeed 00E1           __end_of_ser_putch 122C     RobotDrive@speedhighByte 0035  
         __end_of_robo_init 10B1                _LeftReleased 0385           __end_of_robotTurn 15F1  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038A    __size_of_readAvgDistance 007E  
                _robot_read 06C2          RobotBattRead@temp1 0024           ?_lcd_write_string 0027  
        __end_of_ChargeMode 1442         __end_of_calibrateIR 157D          ??_lcd_write_string 0029  
           _robot_turnRight 0015                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A8                   i1___lwmod 1326  
                _totalSteps 00CA                  main@choice 0069               ?_spi_transfer 0072  
          ??_Init_Follow_IR 0059                   _BattState 00B2      __size_of_RobotBattRead 0083  
               _VwallSensor 006F               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 11A7           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 14A9         start_initialization 122C      UpdateDisplay@LCDOutput 0049  
               __end_of_abs 12ED       __size_of_readDistance 0016           __size_of_Debounce 0098  
                ?i1___lwmod 0072          _TotalDistTravelled 00BC              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 0033  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 1511                 __pdataBANK1 00DF  
   __end_of_robot_turnRight 026C            _adc_read_channel 07C4                 ?_robot_read 0072  
                  ??_rotate 0026                _readDistance 1069               _RobotBattRead 16E5  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020      robotMoveSpeed@distance 0059          __end_of_RobotDrive 1326  
         __size_of_lcd_init 002B              _robotMoveSpeed 0A65                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00EB  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                 _angleTurned 00BE                    ?___awdiv 0026  
                  ?___awmod 0020           __size_of_ser_init 002A           __size_of_ser_isrx 0019  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0800  
                 _dist_high 00C2              ?_RobotBattRead 0072         readDistance@readVal 002C  
            _robotTurnSpeed 09BD         robotTurnSpeed@angle 0059         robotTurnSpeed@temp1 0060  
       robotTurnSpeed@speed 005B                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034      __end_of_robotMoveSpeed 0B46  
    __size_of_robotLoadSong 002B     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 01F5              ___wmul@product 0024         __size_of_robot_read 0102  
                ser_putch@c 0021                   _ser_getch 11A7                   _ser_putch 11FF  
                 _robo_init 1098                   _robotTurn 157D                _RightPressed 0389  
          ?_robot_turnRight 0059        __size_of_ReadButtons 0030               ??_robotFollow 005D  
      __end_of_spi_transfer 103F      __end_of_robotTurnSpeed 0A65                 __stringbase 080F  
         ___wmul@multiplier 0020            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 1768           _LeftDebounceCount 00D1             ?_robotMoveSpeed 0059  
 __size_of_lcd_write_string 002C     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027                  ?_robo_init 0072  
                 init_fetch 1018                  ?_robotTurn 0022                  _ADCconvert 049F  
          __size_of___awdiv 0076             ??_RobotBattRead 0022            __size_of___awmod 0068  
             _robotLoadSong 1125            __size_of___lwdiv 0050            __size_of___lwmod 0046  
             _UpdateDisplay 0E0B                    _adc_read 10D2             ?_robotTurnSpeed 0059  
               _currentMenu 00D5    robot_turnRight@AdcTarget 005B             ___lwdiv@divisor 0026  
       __end_of_robotFollow 0E0B             ___lwdiv@counter 002D                 _menuStrings 00DF  
                  _highByte 00D6                    _lcd_init 1150                    _dist_low 00C4  
          __size_of_sprintf 0100    __end_of_adc_read_channel 07FF   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 1053               __size_of_isr1 00A7  
             __size_of_main 0233               __size_of_init 002F                    clear_ram 1FE0  
                  _ser_init 10FB        robotFollow@AdcTarget 005B                    _ser_isrx 107F  
           _readAvgDistance 1667                ?_calibrateIR 0072              ?_robotLoadSong 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00CE  
              _RTC_FLAG_1MS 0386          UpdateDisplay@F1261 0190                    intlevel1 0000  
            _lcd_set_cursor 1FE8                   sprintf@ap 003C                   sprintf@sp 0043  
            robotTurn@angle 0022            ___lwmod@dividend 0030          __end_of_robot_read 07C4  
                 stringcode 080A                 ??_ser_getch 0020                 ??_ser_putch 0020  
             _distTravelled 00C0                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 103F  
   __size_of_Init_Follow_IR 0021                 _robotFollow 0C46          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
       robotMoveSpeed@temp1 0060         robotMoveSpeed@speed 005B             ___lwmod@divisor 002E  
                _ROBOTerror 00D2             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 1FF3  
          _lcd_write_string 11D3    RobotDrive@radiushighByte 0037                _spi_transfer 102B  
               _RTC_Counter 00BA     __end_of_readAvgDistance 16E5              _lcd_write_data 1005  
           ??_robotLoadSong 0022  
